public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IWithAzureStorageCredentials`1 {
    public abstract virtual IWithAttach`1<ParentT> WithKeyVaultSecretReference(KeyVaultSecretReference keyVaultSecretReference);
    public abstract virtual IWithAttach`1<ParentT> WithAccountKey(string accountKey);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IWithMountOptions`1 {
    public abstract virtual IWithAttach`1<ParentT> WithMountOptions(string mountOptions);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IWithRelativeMountPath`1 {
    public abstract virtual IWithAzureStorageCredentials`1<ParentT> WithRelativeMountPath(string mountPath);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IWithStorageAccount`1 {
    public abstract virtual IWithStorageContainerName`1<ParentT> WithStorageAccountName(string storageAccountName);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IWithStorageContainerName`1 {
    public abstract virtual IWithRelativeMountPath`1<ParentT> WithContainerName(string containerName);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystemImpl`1 : IndexableWrapper`1<AzureBlobFileSystemReference> {
    private IHasMountVolumes parent;
    internal AzureBlobFileSystemImpl`1(AzureBlobFileSystemReference inner, ParentT parent);
    private AzureStorageCredentialsInfo EnsureCredentials();
    private AzureBlobFileSystemImpl`1<ParentT> WithStorageAccountName(string storageAccountName);
    private AzureBlobFileSystemImpl`1<ParentT> WithContainerName(string containerName);
    private AzureBlobFileSystemImpl`1<ParentT> WithRelativeMountPath(string mountPath);
    private AzureBlobFileSystemImpl`1<ParentT> WithKeyVaultSecretReference(KeyVaultSecretReference keyVaultSecretReference);
    private AzureBlobFileSystemImpl`1<ParentT> WithAccountKey(string accountKey);
    private sealed virtual override ParentT Microsoft.Azure.Management.ResourceManager.Fluent.Core.ChildResource.Definition.IInDefinition<ParentT>.Attach();
    private AzureBlobFileSystemImpl`1<ParentT> WithMountOptions(string mountOptions);
    private sealed virtual override IWithAttach`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IWithAzureStorageCredentials<ParentT>.WithKeyVaultSecretReference(KeyVaultSecretReference keyVaultSecretReference);
    private sealed virtual override IWithAttach`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IWithAzureStorageCredentials<ParentT>.WithAccountKey(string accountKey);
    private sealed virtual override IWithAttach`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IWithMountOptions<ParentT>.WithMountOptions(string mountOptions);
    private sealed virtual override IWithAzureStorageCredentials`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IWithRelativeMountPath<ParentT>.WithRelativeMountPath(string mountPath);
    private sealed virtual override IWithRelativeMountPath`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IWithStorageContainerName<ParentT>.WithContainerName(string containerName);
    private sealed virtual override IWithStorageContainerName`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureBlobFileSystem.Definition.IWithStorageAccount<ParentT>.WithStorageAccountName(string storageAccountName);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithAzureFileUrl`1 {
    public abstract virtual IWithRelativeMountPath`1<ParentT> WithAzureFileUrl(string azureFileUrl);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithAzureStorageCredentials`1 {
    public abstract virtual IWithAttach`1<ParentT> WithKeyVaultSecretReference(KeyVaultSecretReference keyVaultSecretReference);
    public abstract virtual IWithAttach`1<ParentT> WithAccountKey(string accountKey);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithDirectoryMode`1 {
    public abstract virtual IWithAttach`1<ParentT> WithDirectoryMode(string directoryMode);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithFileMode`1 {
    public abstract virtual IWithAttach`1<ParentT> WithFileMode(string fileMode);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithRelativeMountPath`1 {
    public abstract virtual IWithAzureStorageCredentials`1<ParentT> WithRelativeMountPath(string mountPath);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithStorageAccount`1 {
    public abstract virtual IWithAzureFileUrl`1<ParentT> WithStorageAccountName(string storageAccountName);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShareImpl`1 : IndexableWrapper`1<AzureFileShareReference> {
    private IHasMountVolumes parent;
    internal AzureFileShareImpl`1(AzureFileShareReference inner, ParentT parent);
    public AzureFileShareImpl`1<ParentT> WithFileMode(string fileMode);
    public AzureFileShareImpl`1<ParentT> WithKeyVaultSecretReference(KeyVaultSecretReference keyVaultSecretReference);
    public AzureFileShareImpl`1<ParentT> WithAccountKey(string accountKey);
    public AzureFileShareImpl`1<ParentT> WithStorageAccountName(string storageAccountName);
    public AzureFileShareImpl`1<ParentT> WithAzureFileUrl(string azureFileUrl);
    public sealed virtual ParentT Attach();
    public AzureFileShareImpl`1<ParentT> WithRelativeMountPath(string mountPath);
    private AzureStorageCredentialsInfo EnsureCredentials();
    public AzureFileShareImpl`1<ParentT> WithDirectoryMode(string directoryMode);
    private sealed virtual override IWithAttach`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithAzureStorageCredentials<ParentT>.WithKeyVaultSecretReference(KeyVaultSecretReference keyVaultSecretReference);
    private sealed virtual override IWithAttach`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithAzureStorageCredentials<ParentT>.WithAccountKey(string accountKey);
    private sealed virtual override IWithRelativeMountPath`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithAzureFileUrl<ParentT>.WithAzureFileUrl(string azureFileUrl);
    private sealed virtual override IWithAttach`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithFileMode<ParentT>.WithFileMode(string fileMode);
    private sealed virtual override IWithAzureStorageCredentials`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithRelativeMountPath<ParentT>.WithRelativeMountPath(string mountPath);
    private sealed virtual override IWithAttach`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithDirectoryMode<ParentT>.WithDirectoryMode(string directoryMode);
    private sealed virtual override IWithAzureFileUrl`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.AzureFileShare.Definition.IWithStorageAccount<ParentT>.WithStorageAccountName(string storageAccountName);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IBlank {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IDefinition {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithAppInsightsKey {
    public abstract virtual IWithCreate WithInstrumentationKey(string instrumentationKey);
    public abstract virtual IWithCreate WithInstrumentationKeySecretReference(string keyVaultId, string secretUrl);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithAppInsightsResourceId {
    public abstract virtual IWithAppInsightsKey WithAppInsightsComponentId(string resoureId);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithCreate {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithGroup {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithScaleSettings {
    public abstract virtual IWithCreate WithAutoScale(int minimumNodeCount, int maximumNodeCount);
    public abstract virtual IWithCreate WithAutoScale(int minimumNodeCount, int maximumNodeCount, int initialNodeCount);
    public abstract virtual IWithCreate WithManualScale(int targetNodeCount);
    public abstract virtual IWithCreate WithManualScale(int targetNodeCount, DeallocationOption deallocationOption);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithSetupTask {
    public abstract virtual IBlank`1<IWithCreate> DefineSetupTask();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithSubnet {
    public abstract virtual IWithCreate WithSubnet(string subnetId);
    public abstract virtual IWithCreate WithSubnet(string networkId, string subnetName);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithUserCredentials {
    public abstract virtual IWithScaleSettings WithSshPublicKey(string sshPublicKey);
    public abstract virtual IWithScaleSettings WithPassword(string password);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithUserName {
    public abstract virtual IWithUserCredentials WithUserName(string userName);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithVirtualMachineImage {
    public abstract virtual IWithCreate WithVirtualMachineImage(string publisher, string offer, string sku, string version);
    public abstract virtual IWithCreate WithVirtualMachineImage(string publisher, string offer, string sku);
    public abstract virtual IWithCreate WithVirtualMachineImageId(string virtualMachineImageId, string publisher, string offer, string sku);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithVMPriority {
    public abstract virtual IWithCreate WithLowPriority();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithVMSize {
    public abstract virtual IWithUserName WithVMSize(string vmSize);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Update.IUpdate {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Update.IWithScaleSettings {
    public abstract virtual IUpdate WithAutoScale(int minimumNodeCount, int maximumNodeCount);
    public abstract virtual IUpdate WithAutoScale(int minimumNodeCount, int maximumNodeCount, int initialNodeCount);
    public abstract virtual IUpdate WithManualScale(int targetNodeCount);
    public abstract virtual IUpdate WithManualScale(int targetNodeCount, DeallocationOption deallocationOption);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIClusterImpl : CreatableUpdatable`5<IBatchAICluster, ClusterInner, BatchAIClusterImpl, IHasId, IUpdate> {
    private BatchAIWorkspaceImpl workspace;
    private ClusterCreateParameters createParameters;
    private ScaleSettings scaleSettings;
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }
    public IBatchAIManager Manager { get; }
    private VirtualMachineConfiguration Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.VirtualMachineConfiguration { get; }
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.ProvisioningStateTransitionTime { get; }
    private string Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.VMSize { get; }
    private int Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.CurrentNodeCount { get; }
    private NodeStateCounts Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.NodeStateCounts { get; }
    private string Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.AdminUserName { get; }
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.AllocationStateTransitionTime { get; }
    private ScaleSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.ScaleSettings { get; }
    private AllocationState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.AllocationState { get; }
    private IReadOnlyList`1<BatchAIError> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.Errors { get; }
    private ProvisioningState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.ProvisioningState { get; }
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.CreationTime { get; }
    private ResourceId Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.Subnet { get; }
    private VmPriority Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.VMPriority { get; }
    private NodeSetup Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.NodeSetup { get; }
    internal BatchAIClusterImpl(string name, BatchAIWorkspaceImpl workspace, ClusterInner innerObject);
    public ResourceId Subnet();
    public ScaleSettings ScaleSettings();
    public sealed virtual void AttachAzureFileShare(IAzureFileShare azureFileShare);
    private VirtualMachineConfiguration EnsureVirtualMachineConfiguration();
    public string AdminUserName();
    public AzureFileShareImpl`1<IWithCreate> DefineAzureFileShare();
    public DateTime CreationTime();
    public NodeStateCounts NodeStateCounts();
    public BatchAIClusterImpl WithManualScale(int targetNodeCount);
    private bool IsInCreateMode();
    public BatchAIClusterImpl WithAppInsightsComponentId(string resoureId);
    public BatchAIClusterImpl WithManualScale(int targetNodeCount, DeallocationOption deallocationOption);
    public DateTime ProvisioningStateTransitionTime();
    private UserAccountSettings EnsureUserAccountSettings();
    private MountVolumes EnsureMountVolumes();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIClusterImpl/<GetInnerAsync>d__18")]
protected virtual Task`1<ClusterInner> GetInnerAsync(CancellationToken cancellationToken);
    public NodeSetup NodeSetup();
    public BatchAIClusterImpl WithSshPublicKey(string sshPublicKey);
    public BatchAIClusterImpl WithInstrumentationKey(string instrumentationKey);
    public BatchAIClusterImpl WithInstrumentationKeySecretReference(string keyVaultId, string secretUrl);
    public sealed virtual void AttachFileServer(IFileServer fileServer);
    public BatchAIClusterImpl WithPassword(string password);
    public string VMSize();
    public VmPriority VMPriority();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIClusterImpl/<UpdateResourceAsync>d__28")]
public Task`1<IBatchAICluster> UpdateResourceAsync(CancellationToken cancellationToken);
    public BatchAIClusterImpl WithLowPriority();
    public BatchAIClusterImpl WithSubnet(string subnetId);
    public BatchAIClusterImpl WithSubnet(string networkId, string subnetName);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIClusterImpl/<CreateResourceAsync>d__32")]
public virtual Task`1<IBatchAICluster> CreateResourceAsync(CancellationToken cancellationToken);
    public AzureBlobFileSystemImpl`1<IWithCreate> DefineAzureBlobFileSystem();
    public FileServerImpl`1<IWithCreate> DefineFileServer();
    public AllocationState AllocationState();
    private ScaleSettings EnsureScaleSettings();
    public BatchAIClusterImpl WithUnmanagedFileSystem(string mountCommand, string relativeMountPath);
    public ProvisioningState ProvisioningState();
    public int CurrentNodeCount();
    internal BatchAIClusterImpl WithSetupTask(NodeSetupTaskImpl setupTask);
    public sealed virtual void AttachAzureBlobFileSystem(IAzureBlobFileSystem azureBlobFileSystem);
    public BatchAIClusterImpl WithVirtualMachineImage(string publisher, string offer, string sku, string version);
    public BatchAIClusterImpl WithVirtualMachineImage(string publisher, string offer, string sku);
    public BatchAIClusterImpl WithVirtualMachineImageId(string virtualMachineImageId, string publisher, string offer, string sku);
    public BatchAIClusterImpl WithVMSize(string vmSize);
    public VirtualMachineConfiguration VirtualMachineConfiguration();
    public BatchAIClusterImpl WithUserName(string userName);
    public BatchAIClusterImpl WithAutoScale(int minimumNodeCount, int maximumNodeCount);
    public BatchAIClusterImpl WithAutoScale(int minimumNodeCount, int maximumNodeCount, int initialNodeCount);
    private NodeSetup EnsureNodeSetup();
    public DateTime AllocationStateTransitionTime();
    public IReadOnlyList`1<BatchAIError> Errors();
    public IBlank`1<IWithCreate> DefineSetupTask();
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.get_Id();
    public sealed virtual IBatchAIManager get_Manager();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithSetupTask.DefineSetupTask();
    private sealed virtual override IWithScaleSettings Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithUserCredentials.WithPassword(string password);
    private sealed virtual override IWithScaleSettings Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithUserCredentials.WithSshPublicKey(string sshPublicKey);
    private sealed virtual override IWithUserCredentials Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithUserName.WithUserName(string userName);
    private sealed virtual override IWithUserName Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithVMSize.WithVMSize(string vmSize);
    private sealed virtual override IWithAppInsightsKey Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithAppInsightsResourceId.WithAppInsightsComponentId(string resoureId);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithAppInsightsKey.WithInstrumentationKey(string instrumentationKey);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithAppInsightsKey.WithInstrumentationKeySecretReference(string keyVaultId, string secretUrl);
    private sealed virtual override IUpdate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Update.IWithScaleSettings.WithAutoScale(int minimumNodeCount, int maximumNodeCount);
    private sealed virtual override IUpdate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Update.IWithScaleSettings.WithAutoScale(int minimumNodeCount, int maximumNodeCount, int initialNodeCount);
    private sealed virtual override IUpdate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Update.IWithScaleSettings.WithManualScale(int targetNodeCount);
    private sealed virtual override IUpdate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Update.IWithScaleSettings.WithManualScale(int targetNodeCount, DeallocationOption deallocationOption);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithScaleSettings.WithAutoScale(int minimumNodeCount, int maximumNodeCount);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithScaleSettings.WithAutoScale(int minimumNodeCount, int maximumNodeCount, int initialNodeCount);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithScaleSettings.WithManualScale(int targetNodeCount);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithScaleSettings.WithManualScale(int targetNodeCount, DeallocationOption deallocationOption);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithVMPriority.WithLowPriority();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.Models.HasMountVolumes.Definition.IWithMountVolumes<Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithCreate>.DefineAzureBlobFileSystem();
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.Models.HasMountVolumes.Definition.IWithMountVolumes<Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithCreate>.WithUnmanagedFileSystem(string mountCommand, string relativeMountPath);
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.Models.HasMountVolumes.Definition.IWithMountVolumes<Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithCreate>.DefineFileServer();
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithSubnet.WithSubnet(string subnetId);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithSubnet.WithSubnet(string networkId, string subnetName);
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.Models.HasMountVolumes.Definition.IWithMountVolumes<Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithCreate>.DefineAzureFileShare();
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithVirtualMachineImage.WithVirtualMachineImage(string publisher, string offer, string sku, string version);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithVirtualMachineImage.WithVirtualMachineImage(string publisher, string offer, string sku);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithVirtualMachineImage.WithVirtualMachineImageId(string virtualMachineImageId, string publisher, string offer, string sku);
    private sealed virtual override VirtualMachineConfiguration Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_VirtualMachineConfiguration();
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_ProvisioningStateTransitionTime();
    private sealed virtual override string Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_VMSize();
    private sealed virtual override int Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_CurrentNodeCount();
    private sealed virtual override NodeStateCounts Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_NodeStateCounts();
    private sealed virtual override string Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_AdminUserName();
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_AllocationStateTransitionTime();
    private sealed virtual override ScaleSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_ScaleSettings();
    private sealed virtual override AllocationState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_AllocationState();
    private sealed virtual override IReadOnlyList`1<BatchAIError> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_Errors();
    private sealed virtual override ProvisioningState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_ProvisioningState();
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_CreationTime();
    private sealed virtual override ResourceId Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_Subnet();
    private sealed virtual override VmPriority Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_VMPriority();
    private sealed virtual override NodeSetup Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster.get_NodeSetup();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIClustersImpl : CreatableResources`3<IBatchAICluster, BatchAIClusterImpl, ClusterInner> {
    private BatchAIWorkspaceImpl workspace;
    public IClustersOperations Inner { get; }
    public IBatchAIManager Manager { get; }
    public IBatchAIWorkspace Parent { get; }
    internal BatchAIClustersImpl(BatchAIWorkspaceImpl workspace);
    public BatchAIClusterImpl Define(string name);
    public virtual void DeleteById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIClustersImpl/<DeleteByIdAsync>d__4")]
public virtual Task DeleteByIdAsync(string id, CancellationToken cancellationToken);
    protected virtual BatchAIClusterImpl WrapModel(string name);
    protected virtual IBatchAICluster WrapModel(ClusterInner inner);
    public sealed virtual IClustersOperations get_Inner();
    public sealed virtual IEnumerable`1<IBatchAICluster> List();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIClustersImpl/<ListAsync>d__10")]
public sealed virtual Task`1<IPagedCollection`1<IBatchAICluster>> ListAsync(bool loadAllPages, CancellationToken cancellationToken);
    public sealed virtual IBatchAICluster GetById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIClustersImpl/<GetByIdAsync>d__12")]
public sealed virtual Task`1<IBatchAICluster> GetByIdAsync(string id, CancellationToken cancellationToken);
    public sealed virtual IBatchAICluster GetByName(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIClustersImpl/<GetByNameAsync>d__14")]
public sealed virtual Task`1<IBatchAICluster> GetByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual void DeleteByName(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIClustersImpl/<DeleteByNameAsync>d__16")]
public sealed virtual Task DeleteByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual IBatchAIManager get_Manager();
    public sealed virtual IBatchAIWorkspace get_Parent();
    private sealed virtual override IBlank Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating<Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IBlank>.Define(string name);
    [CompilerGeneratedAttribute]
private Task`1<IPage`1<ClusterInner>> <List>b__9_0();
    [CompilerGeneratedAttribute]
private IPage`1<ClusterInner> <List>b__9_1(string link);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIClustersImpl/<<ListAsync>b__10_0>d")]
[CompilerGeneratedAttribute]
private Task`1<IPage`1<ClusterInner>> <ListAsync>b__10_0(CancellationToken cancellation);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIExperimentImpl : IndexableRefreshableWrapper`2<IBatchAIExperiment, ExperimentInner> {
    private IBatchAIJobs jobs;
    private string name;
    private BatchAIWorkspaceImpl workspace;
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }
    private IBatchAIManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIManager>.Manager { get; }
    public string Name { get; }
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment.CreationTime { get; }
    private IBatchAIJobs Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment.Jobs { get; }
    private ProvisioningState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment.ProvisioningState { get; }
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment.ProvisioningStateTransitionTime { get; }
    private IBatchAIWorkspace Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment.Workspace { get; }
    internal BatchAIExperimentImpl(string name, BatchAIWorkspaceImpl workspace, ExperimentInner innerObject);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIExperimentImpl/<GetInnerAsync>d__4")]
protected virtual Task`1<ExperimentInner> GetInnerAsync(CancellationToken cancellationToken);
    public DateTime CreationTime();
    public string Id();
    public bool IsInCreateMode();
    public IBatchAIJobs Jobs();
    public ProvisioningState ProvisioningState();
    public DateTime ProvisioningStateTransitionTime();
    public IBatchAIWorkspace Workspace();
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.get_Id();
    private sealed virtual override IBatchAIManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIManager>.get_Manager();
    public sealed virtual string get_Name();
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment.get_CreationTime();
    private sealed virtual override IBatchAIJobs Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment.get_Jobs();
    private sealed virtual override ProvisioningState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment.get_ProvisioningState();
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment.get_ProvisioningStateTransitionTime();
    private sealed virtual override IBatchAIWorkspace Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment.get_Workspace();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIExperimentsImpl : CreatableResources`3<IBatchAIExperiment, BatchAIExperimentImpl, ExperimentInner> {
    private BatchAIWorkspaceImpl workspace;
    public IExperimentsOperations Inner { get; }
    public IBatchAIManager Manager { get; }
    private IBatchAIWorkspace Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasParent<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace>.Parent { get; }
    internal BatchAIExperimentsImpl(BatchAIWorkspaceImpl workspace);
    protected virtual BatchAIExperimentImpl WrapModel(string name);
    protected virtual IBatchAIExperiment WrapModel(ExperimentInner inner);
    public virtual void DeleteById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIExperimentsImpl/<DeleteByIdAsync>d__5")]
public virtual Task DeleteByIdAsync(string id, CancellationToken cancellationToken);
    public sealed virtual void DeleteByName(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIExperimentsImpl/<DeleteByNameAsync>d__7")]
public sealed virtual Task DeleteByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual IBatchAIExperiment GetById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIExperimentsImpl/<GetByIdAsync>d__9")]
public sealed virtual Task`1<IBatchAIExperiment> GetByIdAsync(string id, CancellationToken cancellationToken);
    public sealed virtual IBatchAIExperiment GetByName(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIExperimentsImpl/<GetByNameAsync>d__11")]
public sealed virtual Task`1<IBatchAIExperiment> GetByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual IExperimentsOperations get_Inner();
    public sealed virtual IEnumerable`1<IBatchAIExperiment> List();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIExperimentsImpl/<ListAsync>d__15")]
public sealed virtual Task`1<IPagedCollection`1<IBatchAIExperiment>> ListAsync(bool loadAllPages, CancellationToken cancellationToken);
    public IBatchAIWorkspace Parent();
    public sealed virtual IBatchAIManager get_Manager();
    private sealed virtual override IBatchAIWorkspace Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasParent<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace>.get_Parent();
    [CompilerGeneratedAttribute]
private Task`1<IPage`1<ExperimentInner>> <List>b__14_0();
    [CompilerGeneratedAttribute]
private IPage`1<ExperimentInner> <List>b__14_1(string link);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIExperimentsImpl/<<ListAsync>b__15_0>d")]
[CompilerGeneratedAttribute]
private Task`1<IPage`1<ExperimentInner>> <ListAsync>b__15_0(CancellationToken cancellation);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IBlank {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IDefinition {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithCreate {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithDataDisks {
    public abstract virtual IWithVMSize WithDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType);
    public abstract virtual IWithVMSize WithDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType, CachingType cachingType);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithGroup {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithSubnet {
    public abstract virtual IWithCreate WithSubnet(string subnetId);
    public abstract virtual IWithCreate WithSubnet(string networkId, string subnetName);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithUserCredentials {
    public abstract virtual IWithCreate WithSshPublicKey(string sshPublicKey);
    public abstract virtual IWithCreate WithPassword(string password);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithUserName {
    public abstract virtual IWithUserCredentials WithUserName(string userName);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithVMSize {
    public abstract virtual IWithUserName WithVMSize(string vmSize);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServerImpl : Creatable`4<IBatchAIFileServer, FileServerInner, BatchAIFileServerImpl, IHasId> {
    private FileServerCreateParameters createParameters;
    private BatchAIWorkspaceImpl workspace;
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }
    public IBatchAIManager Manager { get; }
    private MountSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.MountSettings { get; }
    private FileServerProvisioningState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.ProvisioningState { get; }
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.CreationTime { get; }
    private DataDisks Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.DataDisks { get; }
    private string Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.VMSize { get; }
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.ProvisioningStateTransitionTime { get; }
    private ResourceId Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.Subnet { get; }
    private SshConfiguration Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.SshConfiguration { get; }
    internal BatchAIFileServerImpl(string name, BatchAIWorkspaceImpl workspace, FileServerInner innerObject);
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.get_Id();
    public BatchAIFileServerImpl WithVMSize(string vmSize);
    public BatchAIFileServerImpl WithSshPublicKey(string sshPublicKey);
    public BatchAIFileServerImpl WithDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType);
    public IWithVMSize WithDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType, CachingType cachingType);
    public sealed virtual IWithCreate WithSubnet(string subnetId);
    public sealed virtual IWithCreate WithSubnet(string networkId, string subnetName);
    public BatchAIFileServerImpl WithUserName(string userName);
    public BatchAIFileServerImpl WithPassword(string password);
    private UserAccountSettings EnsureUserAccountSettings();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServerImpl/<GetInnerAsync>d__14")]
protected virtual Task`1<FileServerInner> GetInnerAsync(CancellationToken cancellationToken);
    private SshConfiguration EnsureSshConfiguration();
    private DataDisks EnsureDataDisks();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServerImpl/<CreateResourceAsync>d__17")]
public virtual Task`1<IBatchAIFileServer> CreateResourceAsync(CancellationToken cancellationToken);
    public DateTime CreationTime();
    public DateTime ProvisioningStateTransitionTime();
    public FileServerProvisioningState ProvisioningState();
    public SshConfiguration SshConfiguration();
    public MountSettings MountSettings();
    public DataDisks DataDisks();
    public string VMSize();
    public ResourceId Subnet();
    public sealed virtual IBatchAIManager get_Manager();
    private sealed virtual override IWithUserCredentials Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithUserName.WithUserName(string userName);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithUserCredentials.WithPassword(string password);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithUserCredentials.WithSshPublicKey(string sshPublicKey);
    private sealed virtual override IWithUserName Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithVMSize.WithVMSize(string vmSize);
    private sealed virtual override MountSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.get_MountSettings();
    private sealed virtual override FileServerProvisioningState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.get_ProvisioningState();
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.get_CreationTime();
    private sealed virtual override DataDisks Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.get_DataDisks();
    private sealed virtual override string Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.get_VMSize();
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.get_ProvisioningStateTransitionTime();
    private sealed virtual override ResourceId Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.get_Subnet();
    private sealed virtual override SshConfiguration Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer.get_SshConfiguration();
    private sealed virtual override IWithVMSize Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithDataDisks.WithDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType);
    private sealed virtual override IWithVMSize Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IWithDataDisks.WithDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType, CachingType cachingType);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServersImpl : CreatableResources`3<IBatchAIFileServer, BatchAIFileServerImpl, FileServerInner> {
    private BatchAIWorkspaceImpl workspace;
    public IBatchAIManager Manager { get; }
    public IFileServersOperations Inner { get; }
    internal BatchAIFileServersImpl(BatchAIWorkspaceImpl workspace);
    public BatchAIFileServerImpl Define(string name);
    public virtual void DeleteById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServersImpl/<DeleteByIdAsync>d__4")]
public virtual Task DeleteByIdAsync(string id, CancellationToken cancellationToken);
    protected virtual BatchAIFileServerImpl WrapModel(string name);
    protected virtual IBatchAIFileServer WrapModel(FileServerInner inner);
    public sealed virtual IEnumerable`1<IBatchAIFileServer> List();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServersImpl/<ListAsync>d__8")]
public sealed virtual Task`1<IPagedCollection`1<IBatchAIFileServer>> ListAsync(bool loadAllPages, CancellationToken cancellationToken);
    public sealed virtual IBatchAIFileServer GetById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServersImpl/<GetByIdAsync>d__10")]
public sealed virtual Task`1<IBatchAIFileServer> GetByIdAsync(string id, CancellationToken cancellationToken);
    public sealed virtual IBatchAIFileServer GetByName(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServersImpl/<GetByNameAsync>d__12")]
public sealed virtual Task`1<IBatchAIFileServer> GetByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual void DeleteByName(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServersImpl/<DeleteByNameAsync>d__14")]
public sealed virtual Task DeleteByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual IBatchAIManager get_Manager();
    public sealed virtual IFileServersOperations get_Inner();
    private sealed virtual override IBlank Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServer.Definition.IBlank>.Define(string name);
    [CompilerGeneratedAttribute]
private Task`1<IPage`1<FileServerInner>> <List>b__7_0();
    [CompilerGeneratedAttribute]
private IPage`1<FileServerInner> <List>b__7_1(string link);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIFileServersImpl/<<ListAsync>b__8_0>d")]
[CompilerGeneratedAttribute]
private Task`1<IPage`1<FileServerInner>> <ListAsync>b__8_0(CancellationToken cancellation);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IBlank {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IDefinition {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCluster {
    public abstract virtual IWithNodeCount WithExistingCluster(IBatchAICluster cluster);
    public abstract virtual IWithNodeCount WithExistingClusterId(string clusterId);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithContainerSettings {
    public abstract virtual IWithCreate WithContainerImage(string image);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithEnvironmentVariable {
    public abstract virtual IWithCreate WithEnvironmentVariable(string name, string value);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithEnvironmentVariableSecretValue {
    public abstract virtual IWithCreate WithEnvironmentVariableSecretValue(string name, string value);
    public abstract virtual IWithCreate WithEnvironmentVariableSecretValue(string name, string keyVaultId, string secretUrl);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithInputDirectory {
    public abstract virtual IWithCreate WithInputDirectory(string id, string path);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithJobPreparation {
    public abstract virtual IWithCreate WithCommandLine(string commandLine);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithNodeCount {
    public abstract virtual IWithStdOutErrPathPrefix WithNodeCount(int nodeCount);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithOutputDirectory {
    public abstract virtual IWithCreate WithOutputDirectory(string id, string pathPrefix);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithOutputDirectoryBeta {
    public abstract virtual IBlank`1<IWithCreate> DefineOutputDirectory(string id);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithStdOutErrPathPrefix {
    public abstract virtual IWithToolType WithStdOutErrPathPrefix(string stdOutErrPathPrefix);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithToolType {
    public abstract virtual IBlank`1<IWithCreate> DefineChainer();
    public abstract virtual IBlank`1<IWithCreate> DefineCaffe2();
    public abstract virtual IWithCreate WithCustomCommandLine(string commandLine);
    public abstract virtual IBlank`1<IWithCreate> DefineCognitiveToolkit();
    public abstract virtual IBlank`1<IWithCreate> DefineTensorflow();
    public abstract virtual IBlank`1<IWithCreate> DefineCaffe();
    public abstract virtual IBlank`1<IWithCreate> DefinePyTorch();
    public abstract virtual IBlank`1<IWithCreate> DefineCustomMpi();
    public abstract virtual IBlank`1<IWithCreate> DefineCustomToolkit();
    public abstract virtual IBlank`1<IWithCreate> DefineHorovod();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobImpl : Creatable`4<IBatchAIJob, JobInner, BatchAIJobImpl, IBatchAIJob> {
    private JobCreateParameters createParameters;
    private IBatchAIExperiment experiment;
    private IBatchAIWorkspace workspace;
    public string Id { get; }
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ProvisioningStateTransitionTime { get; }
    private IReadOnlyList`1<EnvironmentVariable> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.EnvironmentVariables { get; }
    private JobPropertiesConstraints Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.Constraints { get; }
    private string Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.StdOutErrPathPrefix { get; }
    private ContainerSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ContainerSettings { get; }
    private ExecutionState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ExecutionState { get; }
    private JobPropertiesExecutionInfo Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ExecutionInfo { get; }
    private IBatchAIExperiment Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.Experiment { get; }
    private string Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.JobOutputDirectoryPathSegment { get; }
    private IReadOnlyList`1<OutputDirectory> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.OutputDirectories { get; }
    private TensorFlowSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.TensorFlowSettings { get; }
    private CNTKsettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.CntkSettings { get; }
    private int Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.NodeCount { get; }
    private ProvisioningState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ProvisioningState { get; }
    private PyTorchSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.PYTorchSettings { get; }
    private JobPriority Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.SchedulingPriority { get; }
    private IReadOnlyList`1<InputDirectory> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.InputDirectories { get; }
    private IReadOnlyList`1<EnvironmentVariableWithSecretValue> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.Secrets { get; }
    private ResourceId Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.Cluster { get; }
    private CustomToolkitSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.CustomToolkitSettings { get; }
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.CreationTime { get; }
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ExecutionStateTransitionTime { get; }
    private CaffeSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.CaffeSettings { get; }
    private JobPreparation Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.JobPreparation { get; }
    private ToolType Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ToolType { get; }
    private ChainerSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ChainerSettings { get; }
    internal BatchAIJobImpl(string name, BatchAIExperimentImpl parent, JobInner inner);
    public sealed virtual string get_Id();
    internal void AttachImageSourceRegistry(ContainerImageSettingsImpl containerImageSettings);
    internal void AttachOutputDirectory(OutputDirectorySettingsImpl outputDirectorySettings);
    internal void AttachPyTorchSettings(PyTorchImpl pyTorch);
    internal void AttachContainerSettings(ContainerImageSettingsImpl containerImageSettings);
    internal void AttachCustomMpiSettings(CustomMpiImpl customMpi);
    internal void AttachCustomToolkitSettings(CustomToolkitImpl customToolkit);
    internal void AttachHorovodSettings(HorovodImpl horovod);
    public IBatchAIWorkspace Parent();
    public ResourceId Cluster();
    private IList`1<EnvironmentVariable> EnsureEnvironmentVariables();
    private IList`1<EnvironmentVariableWithSecretValue> EnsureEnvironmentVariablesWithSecrets();
    public BatchAIJobImpl WithContainerImage(string image);
    public string StdOutErrPathPrefix();
    public ContainerSettings ContainerSettings();
    public AzureBlobFileSystemImpl`1<IWithCreate> DefineAzureBlobFileSystem();
    public AzureFileShareImpl`1<IWithCreate> DefineAzureFileShare();
    public IBlank`1<IWithCreate> DefineOutputDirectory(string id);
    public sealed virtual IBlank`1<IWithCreate> DefinePyTorch();
    public IBlank`1<IWithCreate> DefineContainerSettings(string image);
    public IBlank`1<IWithCreate> DefineCustomMpi();
    public IBlank`1<IWithCreate> DefineCustomToolkit();
    public FileServerImpl`1<IWithCreate> DefineFileServer();
    public sealed virtual IBlank`1<IWithCreate> DefineHorovod();
    public BatchAIJobImpl WithOutputDirectory(string id, string pathPrefix);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobImpl/<GetInnerAsync>d__30")]
protected virtual Task`1<JobInner> GetInnerAsync(CancellationToken cancellationToken);
    public JobPropertiesConstraints Constraints();
    private ContainerSettings EnsureContainerSettings();
    public IReadOnlyList`1<EnvironmentVariable> EnvironmentVariables();
    public JobPropertiesExecutionInfo ExecutionInfo();
    public TensorFlowSettings TensorFlowSettings();
    public IBatchAIExperiment Experiment();
    public string JobOutputDirectoryPathSegment();
    public IEnumerable`1<IOutputFile> ListFiles(string outputDirectoryId, string directory, int linkExpiryMinutes, int maxResults);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobImpl/<ListFilesAsync>d__39")]
public Task`1<IPagedCollection`1<IOutputFile>> ListFilesAsync(string outputDirectoryId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobImpl/<ListFilesAsync>d__40")]
public Task`1<IPagedCollection`1<IOutputFile>> ListFilesAsync(string outputDirectoryId, string directory, int linkExpiryMinutes, int maxResults, CancellationToken cancellationToken);
    public IEnumerable`1<IRemoteLoginInformation> ListRemoteLoginInformation();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobImpl/<ListRemoteLoginInformationAsync>d__42")]
public Task`1<IPagedCollection`1<IRemoteLoginInformation>> ListRemoteLoginInformationAsync(CancellationToken cancellationToken);
    public MountVolumes MountVolumes();
    public int NodeCount();
    public IBlank`1<IWithCreate> DefineCognitiveToolkit();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobImpl/<CreateResourceAsync>d__46")]
public virtual Task`1<IBatchAIJob> CreateResourceAsync(CancellationToken cancellationToken);
    public IBlank`1<IWithCreate> DefineCaffe();
    public IReadOnlyList`1<InputDirectory> InputDirectories();
    internal void AttachCaffe2Settings(Caffe2Impl caffe2);
    public IReadOnlyList`1<OutputDirectory> OutputDirectories();
    public ProvisioningState ProvisioningState();
    internal void AttachTensorFlowSettings(TensorFlowImpl tensorFlow);
    public ToolType ToolType();
    internal void AttachCaffeSettings(CaffeImpl caffe);
    public JobPreparation JobPreparation();
    public sealed virtual void AttachAzureBlobFileSystem(IAzureBlobFileSystem azureBlobFileSystem);
    public sealed virtual void AttachAzureFileShare(IAzureFileShare azureFileShare);
    public sealed virtual void AttachFileServer(IFileServer fileServer);
    internal void AttachCntkSettings(CognitiveToolkitImpl cognitiveToolkit);
    internal void AttachChainerSettings(ChainerImpl chainer);
    public PyTorchSettings PYTorchSettings();
    public JobPriority SchedulingPriority();
    public IReadOnlyList`1<EnvironmentVariableWithSecretValue> Secrets();
    public void Terminate();
    private MountVolumes EnsureMountVolumes();
    public IBlank`1<IWithCreate> DefineCaffe2();
    public DateTime CreationTime();
    public DateTime ProvisioningStateTransitionTime();
    public CNTKsettings CntkSettings();
    public CustomToolkitSettings CustomToolkitSettings();
    public IEnumerable`1<IOutputFile> ListFiles(string outputDirectoryId);
    public BatchAIJobImpl WithNodeCount(int nodeCount);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobImpl/<TerminateAsync>d__73")]
public Task TerminateAsync(CancellationToken cancellationToken);
    public ExecutionState ExecutionState();
    public BatchAIJobImpl WithStdOutErrPathPrefix(string stdOutErrPathPrefix);
    public BatchAIJobImpl WithCustomCommandLine(string commandLine);
    public IBlank`1<IWithCreate> DefineChainer();
    public CaffeSettings CaffeSettings();
    public BatchAIJobImpl WithEnvironmentVariable(string name, string value);
    public BatchAIJobImpl WithEnvironmentVariableSecretValue(string name, string value);
    public BatchAIJobImpl WithEnvironmentVariableSecretValue(string name, string keyVaultId, string secretUrl);
    public BatchAIJobImpl WithExistingCluster(IBatchAICluster cluster);
    public BatchAIJobImpl WithExistingClusterId(string clusterId);
    public BatchAIJobImpl WithInputDirectory(string id, string path);
    public BatchAIJobImpl WithCommandLine(string commandLine);
    public ChainerSettings ChainerSettings();
    public DateTime ExecutionStateTransitionTime();
    public IBlank`1<IWithCreate> DefineTensorflow();
    public BatchAIJobImpl WithUnmanagedFileSystem(string mountCommand, string relativeMountPath);
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_ProvisioningStateTransitionTime();
    private sealed virtual override IReadOnlyList`1<EnvironmentVariable> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_EnvironmentVariables();
    private sealed virtual override JobPropertiesConstraints Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_Constraints();
    private sealed virtual override void Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.Terminate();
    private sealed virtual override string Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_StdOutErrPathPrefix();
    private sealed virtual override ContainerSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_ContainerSettings();
    private sealed virtual override ExecutionState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_ExecutionState();
    private sealed virtual override JobPropertiesExecutionInfo Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_ExecutionInfo();
    private sealed virtual override IBatchAIExperiment Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_Experiment();
    private sealed virtual override string Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_JobOutputDirectoryPathSegment();
    private sealed virtual override IReadOnlyList`1<OutputDirectory> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_OutputDirectories();
    private sealed virtual override TensorFlowSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_TensorFlowSettings();
    private sealed virtual override CNTKsettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_CntkSettings();
    private sealed virtual override int Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_NodeCount();
    private sealed virtual override ProvisioningState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_ProvisioningState();
    private sealed virtual override PyTorchSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_PYTorchSettings();
    private sealed virtual override JobPriority Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_SchedulingPriority();
    private sealed virtual override IReadOnlyList`1<InputDirectory> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_InputDirectories();
    private sealed virtual override IReadOnlyList`1<EnvironmentVariableWithSecretValue> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_Secrets();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobImpl/<Microsoft-Azure-Management-BatchAI-Fluent-IBatchAIJob-TerminateAsync>d__127")]
private sealed virtual override Task Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.TerminateAsync(CancellationToken cancellationToken);
    private sealed virtual override ResourceId Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_Cluster();
    private sealed virtual override CustomToolkitSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_CustomToolkitSettings();
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_CreationTime();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.Models.HasMountVolumes.Definition.IWithMountVolumes<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.DefineAzureBlobFileSystem();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.Models.HasMountVolumes.Definition.IWithMountVolumes<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.DefineAzureFileShare();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.Models.HasMountVolumes.Definition.IWithMountVolumes<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.DefineFileServer();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithToolType.DefineCustomMpi();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithToolType.DefineCustomToolkit();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithOutputDirectoryBeta.DefineOutputDirectory(string id);
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_ExecutionStateTransitionTime();
    private sealed virtual override IEnumerable`1<IOutputFile> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ListFiles(string outputDirectoryId);
    private sealed virtual override IEnumerable`1<IOutputFile> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ListFiles(string outputDirectoryId, string directory, int linkExpiryMinutes, int maxResults);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobImpl/<Microsoft-Azure-Management-BatchAI-Fluent-IBatchAIJob-ListFilesAsync>d__144")]
private sealed virtual override Task`1<IPagedCollection`1<IOutputFile>> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ListFilesAsync(string outputDirectoryId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobImpl/<Microsoft-Azure-Management-BatchAI-Fluent-IBatchAIJob-ListFilesAsync>d__145")]
private sealed virtual override Task`1<IPagedCollection`1<IOutputFile>> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ListFilesAsync(string outputDirectoryId, string directory, int linkExpiryMinutes, int maxResults, CancellationToken cancellationToken);
    private sealed virtual override CaffeSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_CaffeSettings();
    private sealed virtual override IEnumerable`1<IRemoteLoginInformation> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ListRemoteLoginInformation();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobImpl/<Microsoft-Azure-Management-BatchAI-Fluent-IBatchAIJob-ListRemoteLoginInformationAsync>d__149")]
private sealed virtual override Task`1<IPagedCollection`1<IRemoteLoginInformation>> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.ListRemoteLoginInformationAsync(CancellationToken cancellationToken);
    private sealed virtual override JobPreparation Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_JobPreparation();
    private sealed virtual override ToolType Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_ToolType();
    private sealed virtual override ChainerSettings Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob.get_ChainerSettings();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithToolType.DefineCaffe();
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithToolType.WithCustomCommandLine(string commandLine);
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithToolType.DefineChainer();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithToolType.DefineCaffe2();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithToolType.DefineCognitiveToolkit();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithToolType.DefineTensorflow();
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithContainerSettings.WithContainerImage(string image);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithEnvironmentVariable.WithEnvironmentVariable(string name, string value);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithEnvironmentVariableSecretValue.WithEnvironmentVariableSecretValue(string name, string value);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithEnvironmentVariableSecretValue.WithEnvironmentVariableSecretValue(string name, string keyVaultId, string secretUrl);
    private sealed virtual override IWithToolType Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithStdOutErrPathPrefix.WithStdOutErrPathPrefix(string stdOutErrPathPrefix);
    private sealed virtual override IWithNodeCount Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCluster.WithExistingCluster(IBatchAICluster cluster);
    private sealed virtual override IWithNodeCount Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCluster.WithExistingClusterId(string clusterId);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithJobPreparation.WithCommandLine(string commandLine);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithInputDirectory.WithInputDirectory(string id, string path);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithOutputDirectory.WithOutputDirectory(string id, string pathPrefix);
    private sealed virtual override IWithStdOutErrPathPrefix Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithNodeCount.WithNodeCount(int nodeCount);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.BatchAI.Fluent.Models.HasMountVolumes.Definition.IWithMountVolumes<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithUnmanagedFileSystem(string mountCommand, string relativeMountPath);
    [CompilerGeneratedAttribute]
private Task`1<IPage`1<RemoteLoginInformation>> <ListRemoteLoginInformation>b__41_0();
    [CompilerGeneratedAttribute]
private Task <Terminate>b__64_0();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobsImpl : CreatableResources`3<IBatchAIJob, BatchAIJobImpl, JobInner> {
    private BatchAIExperimentImpl experiment;
    private IBatchAIWorkspace workspace;
    public IJobsOperations Inner { get; }
    public IBatchAIManager Manager { get; }
    private IBatchAIExperiment Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasParent<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment>.Parent { get; }
    internal BatchAIJobsImpl(BatchAIExperimentImpl experiment);
    public BatchAIJobImpl Define(string name);
    public sealed virtual IEnumerable`1<IBatchAIJob> List();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobsImpl/<ListAsync>d__5")]
public sealed virtual Task`1<IPagedCollection`1<IBatchAIJob>> ListAsync(bool loadAllPages, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobsImpl/<GetInnerAsync>d__6")]
protected Task`1<JobInner> GetInnerAsync(string resourceGroupName, string name, CancellationToken cancellationToken);
    public virtual void DeleteById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobsImpl/<DeleteByIdAsync>d__8")]
public virtual Task DeleteByIdAsync(string id, CancellationToken cancellationToken);
    protected virtual BatchAIJobImpl WrapModel(string name);
    protected virtual IBatchAIJob WrapModel(JobInner inner);
    public BatchAIExperimentImpl Parent();
    public sealed virtual IBatchAIJob GetByName(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobsImpl/<GetByNameAsync>d__13")]
public sealed virtual Task`1<IBatchAIJob> GetByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual IBatchAIJob GetById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobsImpl/<GetByIdAsync>d__15")]
public sealed virtual Task`1<IBatchAIJob> GetByIdAsync(string id, CancellationToken cancellationToken);
    public sealed virtual void DeleteByName(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJobsImpl/<DeleteByNameAsync>d__17")]
public sealed virtual Task DeleteByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual IJobsOperations get_Inner();
    public sealed virtual IBatchAIManager get_Manager();
    private sealed virtual override IBatchAIExperiment Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasParent<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment>.get_Parent();
    public sealed virtual IEnumerable`1<IBatchAIJob> List(int maxResults);
    private sealed virtual override IBlank Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IBlank>.Define(string name);
    [CompilerGeneratedAttribute]
private Task`1<IPagedCollection`1<IBatchAIJob>> <List>b__4_0();
    [CompilerGeneratedAttribute]
private IBatchAIJob <ListAsync>b__5_0(JobInner innerJob);
    [CompilerGeneratedAttribute]
private Task`1<IPage`1<JobInner>> <List>b__24_0();
    [CompilerGeneratedAttribute]
private IPage`1<JobInner> <List>b__24_1(string link);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIManagementClient : FluentServiceClientBase`1<BatchAIManagementClient> {
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <SerializationSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <DeserializationSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AcceptLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LongRunningOperationRetryTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <GenerateClientRequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private IOperations <Operations>k__BackingField;
    [CompilerGeneratedAttribute]
private IUsagesOperations <Usages>k__BackingField;
    [CompilerGeneratedAttribute]
private IWorkspacesOperations <Workspaces>k__BackingField;
    [CompilerGeneratedAttribute]
private IExperimentsOperations <Experiments>k__BackingField;
    [CompilerGeneratedAttribute]
private IJobsOperations <Jobs>k__BackingField;
    [CompilerGeneratedAttribute]
private IFileServersOperations <FileServers>k__BackingField;
    [CompilerGeneratedAttribute]
private IClustersOperations <Clusters>k__BackingField;
    public JsonSerializerSettings SerializationSettings { get; private set; }
    public JsonSerializerSettings DeserializationSettings { get; private set; }
    public string SubscriptionId { get; public set; }
    public string ApiVersion { get; private set; }
    public string AcceptLanguage { get; public set; }
    public Nullable`1<int> LongRunningOperationRetryTimeout { get; public set; }
    public Nullable`1<bool> GenerateClientRequestId { get; public set; }
    public IOperations Operations { get; private set; }
    public IUsagesOperations Usages { get; private set; }
    public IWorkspacesOperations Workspaces { get; private set; }
    public IExperimentsOperations Experiments { get; private set; }
    public IJobsOperations Jobs { get; private set; }
    public IFileServersOperations FileServers { get; private set; }
    public IClustersOperations Clusters { get; private set; }
    public BatchAIManagementClient(RestClient restClient);
    private BatchAIManagementClient(RestClient restClient, HttpClient httpClient);
    [CompilerGeneratedAttribute]
public sealed virtual JsonSerializerSettings get_SerializationSettings();
    [CompilerGeneratedAttribute]
private void set_SerializationSettings(JsonSerializerSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual JsonSerializerSettings get_DeserializationSettings();
    [CompilerGeneratedAttribute]
private void set_DeserializationSettings(JsonSerializerSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SubscriptionId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
private void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AcceptLanguage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AcceptLanguage(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_LongRunningOperationRetryTimeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LongRunningOperationRetryTimeout(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_GenerateClientRequestId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GenerateClientRequestId(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public virtual IOperations get_Operations();
    [CompilerGeneratedAttribute]
private void set_Operations(IOperations value);
    [CompilerGeneratedAttribute]
public virtual IUsagesOperations get_Usages();
    [CompilerGeneratedAttribute]
private void set_Usages(IUsagesOperations value);
    [CompilerGeneratedAttribute]
public virtual IWorkspacesOperations get_Workspaces();
    [CompilerGeneratedAttribute]
private void set_Workspaces(IWorkspacesOperations value);
    [CompilerGeneratedAttribute]
public virtual IExperimentsOperations get_Experiments();
    [CompilerGeneratedAttribute]
private void set_Experiments(IExperimentsOperations value);
    [CompilerGeneratedAttribute]
public virtual IJobsOperations get_Jobs();
    [CompilerGeneratedAttribute]
private void set_Jobs(IJobsOperations value);
    [CompilerGeneratedAttribute]
public virtual IFileServersOperations get_FileServers();
    [CompilerGeneratedAttribute]
private void set_FileServers(IFileServersOperations value);
    [CompilerGeneratedAttribute]
public virtual IClustersOperations get_Clusters();
    [CompilerGeneratedAttribute]
private void set_Clusters(IClustersOperations value);
    public static BatchAIManagementClient NewInstance(RestClient restClient);
    protected virtual void Initialize();
    private sealed virtual override HttpClient Microsoft.Rest.Azure.IAzureClient.get_HttpClient();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIManager : Manager`1<IBatchAIManagementClient> {
    private IBatchAIWorkspaces batchAIWorkspaces;
    private IBatchAIUsages batchAIUsages;
    public IBatchAIUsages BatchAIUsages { get; }
    public IBatchAIWorkspaces BatchAIWorkspaces { get; }
    private BatchAIManager(RestClient restClient, string subscriptionId);
    public static IBatchAIManager Authenticate(AzureCredentials credentials, string subscriptionId);
    public static IBatchAIManager Authenticate(RestClient restClient, string subscriptionId);
    public static IConfigurable Configure();
    public sealed virtual IBatchAIUsages get_BatchAIUsages();
    public sealed virtual IBatchAIWorkspaces get_BatchAIWorkspaces();
}
internal class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIUsageImpl : Wrapper`1<UsageInner> {
    private int Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage.CurrentValue { get; }
    private long Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage.Limit { get; }
    private UsageName Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage.Name { get; }
    private UsageUnit Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage.Unit { get; }
    internal BatchAIUsageImpl(UsageInner innerObject);
    public int CurrentValue();
    public long Limit();
    public UsageName Name();
    public UsageUnit Unit();
    private sealed virtual override int Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage.get_CurrentValue();
    private sealed virtual override long Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage.get_Limit();
    private sealed virtual override UsageName Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage.get_Name();
    private sealed virtual override UsageUnit Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage.get_Unit();
}
internal class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIUsagesImpl : ReadableWrappers`3<IBatchAIUsage, BatchAIUsageImpl, UsageInner> {
    private IBatchAIManager manager;
    internal BatchAIUsagesImpl(IBatchAIManager manager);
    protected virtual IBatchAIUsage WrapModel(UsageInner usageInner);
    public IEnumerable`1<IBatchAIUsage> ListByRegion(Region region);
    public IEnumerable`1<IBatchAIUsage> ListByRegion(string regionName);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIUsagesImpl/<ListByRegionAsync>d__5")]
public Task`1<IPagedCollection`1<IBatchAIUsage>> ListByRegionAsync(Region region, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIUsagesImpl/<ListByRegionAsync>d__6")]
public Task`1<IPagedCollection`1<IBatchAIUsage>> ListByRegionAsync(string regionName, CancellationToken cancellationToken);
    private sealed virtual override IEnumerable`1<IBatchAIUsage> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByRegion<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage>.ListByRegion(Region region);
    private sealed virtual override IEnumerable`1<IBatchAIUsage> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByRegion<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage>.ListByRegion(string regionName);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIUsagesImpl/<Microsoft-Azure-Management-ResourceManager-Fluent-Core-CollectionActions-ISupportsListingByRegion<Microsoft-Azure-Management-BatchAI-Fluent-IBatchAIUsage>-ListByRegionAsync>d__9")]
private sealed virtual override Task`1<IPagedCollection`1<IBatchAIUsage>> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByRegion<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage>.ListByRegionAsync(Region region, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIUsagesImpl/<Microsoft-Azure-Management-ResourceManager-Fluent-Core-CollectionActions-ISupportsListingByRegion<Microsoft-Azure-Management-BatchAI-Fluent-IBatchAIUsage>-ListByRegionAsync>d__10")]
private sealed virtual override Task`1<IPagedCollection`1<IBatchAIUsage>> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByRegion<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage>.ListByRegionAsync(string regionName, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspace.Definition.IBlank {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspace.Definition.IDefinition {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspace.Definition.IWithCreate {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspace.Definition.IWithGroup {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspace.Update.IUpdate {
}
public class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspaceImpl : GroupableResource`8<IBatchAIWorkspace, WorkspaceInner, BatchAIWorkspaceImpl, IBatchAIManager, IWithGroup, IWithCreate, IWithCreate, IUpdate> {
    private IBatchAIClusters clusters;
    private IBatchAIExperiments experiments;
    private IBatchAIFileServers fileServers;
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.CreationTime { get; }
    private ProvisioningState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.ProvisioningState { get; }
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.ProvisioningStateTransitionTime { get; }
    private IBatchAIClusters Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.Clusters { get; }
    private IBatchAIExperiments Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.Experiments { get; }
    private IBatchAIFileServers Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.FileServers { get; }
    internal BatchAIWorkspaceImpl(string name, WorkspaceInner innerObject, IBatchAIManager manager);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspaceImpl/<GetInnerAsync>d__4")]
protected virtual Task`1<WorkspaceInner> GetInnerAsync(CancellationToken cancellationToken);
    public IBatchAIClusters Clusters();
    public IBatchAIExperiment CreateExperiment(string experimentName);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspaceImpl/<CreateExperimentAsync>d__7")]
public Task`1<IBatchAIExperiment> CreateExperimentAsync(string experimentName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspaceImpl/<CreateResourceAsync>d__8")]
public virtual Task`1<IBatchAIWorkspace> CreateResourceAsync(CancellationToken cancellationToken);
    public DateTime CreationTime();
    public IBatchAIExperiments Experiments();
    public IBatchAIFileServers FileServers();
    public ProvisioningState ProvisioningState();
    public DateTime ProvisioningStateTransitionTime();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspaceImpl/<UpdateResourceAsync>d__14")]
public Task`1<IBatchAIWorkspace> UpdateResourceAsync(CancellationToken cancellationToken);
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.get_CreationTime();
    private sealed virtual override ProvisioningState Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.get_ProvisioningState();
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.get_ProvisioningStateTransitionTime();
    private sealed virtual override IBatchAIClusters Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.get_Clusters();
    private sealed virtual override IBatchAIExperiments Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.get_Experiments();
    private sealed virtual override IBatchAIFileServers Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.get_FileServers();
    private sealed virtual override IBatchAIExperiment Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.CreateExperiment(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspaceImpl/<Microsoft-Azure-Management-BatchAI-Fluent-IBatchAIWorkspace-CreateExperimentAsync>d__28")]
private sealed virtual override Task`1<IBatchAIExperiment> Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace.CreateExperimentAsync(string name, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspacesImpl : TopLevelModifiableResources`5<IBatchAIWorkspace, BatchAIWorkspaceImpl, WorkspaceInner, IWorkspacesOperations, IBatchAIManager> {
    internal BatchAIWorkspacesImpl(BatchAIManager manager);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspacesImpl/<DeleteInnerAsync>d__1")]
protected Task DeleteInnerAsync(string groupName, string name, CancellationToken cancellationToken);
    protected virtual BatchAIWorkspaceImpl WrapModel(string name);
    public BatchAIWorkspaceImpl Define(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspacesImpl/<ListInnerAsync>d__4")]
protected virtual Task`1<IPage`1<WorkspaceInner>> ListInnerAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspacesImpl/<ListInnerNextAsync>d__5")]
protected virtual Task`1<IPage`1<WorkspaceInner>> ListInnerNextAsync(string link, CancellationToken cancellationToken);
    protected virtual Task`1<IPage`1<WorkspaceInner>> ListInnerByGroupAsync(string resourceGroupName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspacesImpl/<ListInnerByGroupNextAsync>d__7")]
protected virtual Task`1<IPage`1<WorkspaceInner>> ListInnerByGroupNextAsync(string link, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspacesImpl/<GetInnerByGroupAsync>d__8")]
protected virtual Task`1<WorkspaceInner> GetInnerByGroupAsync(string groupName, string name, CancellationToken cancellationToken);
    protected virtual Task DeleteInnerByGroupAsync(string groupName, string name, CancellationToken cancellationToken);
    protected virtual IBatchAIWorkspace WrapModel(WorkspaceInner inner);
    private sealed virtual override IBlank Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspace.Definition.IBlank>.Define(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.BatchAIWorkspacesImpl/<Microsoft-Azure-Management-ResourceManager-Fluent-Core-CollectionActions-ISupportsListingByResourceGroup<Microsoft-Azure-Management-BatchAI-Fluent-IBatchAIWorkspace>-ListByResourceGroupAsync>d__12")]
private sealed virtual override Task`1<IPagedCollection`1<IBatchAIWorkspace>> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace>.ListByResourceGroupAsync(string resourceGroupName, bool loadAllPages, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Caffe2Impl : IndexableWrapper`1<Caffe2Settings> {
    private BatchAIJobImpl parent;
    internal Caffe2Impl(Caffe2Settings inner, BatchAIJobImpl parent);
    public Caffe2Impl WithCommandLineArgs(string commandLineArgs);
    public sealed virtual IWithCreate Attach();
    public Caffe2Impl WithPythonInterpreterPath(string path);
    public Caffe2Impl WithPythonScriptFile(string pythonScriptFilePath);
    private sealed virtual override IWithAttachAndPythonInterpreter`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe2.Definition.IWithPython<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithPythonScriptFile(string pythonScriptFilePath);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasCommandLineArgs.Definition.IWithCommandLineArgs<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe2.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithCommandLineArgs(string commandLineArgs);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasPythonInterpreter.Definition.IWithPythonInterpreter<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe2.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithPythonInterpreterPath(string path);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.CaffeImpl : IndexableWrapper`1<CaffeSettings> {
    private BatchAIJobImpl parent;
    internal CaffeImpl(CaffeSettings inner, BatchAIJobImpl parent);
    public CaffeImpl WithCommandLineArgs(string commandLineArgs);
    public CaffeImpl WithProcessCount(int processCount);
    public sealed virtual IWithCreate Attach();
    public CaffeImpl WithPythonInterpreterPath(string path);
    public CaffeImpl WithConfigFile(string configFilePath);
    public CaffeImpl WithPythonScriptFile(string pythonScriptFilePath);
    private sealed virtual override IWithAttachAndPythonInterpreter`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe.Definition.IWithFileType<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithPythonScriptFile(string pythonScriptFilePath);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe.Definition.IWithFileType<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithConfigFile(string configFilePath);
    public IWithAttach`1<IWithCreate> withPythonInterpreterPath(string path);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasCommandLineArgs.Definition.IWithCommandLineArgs<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithCommandLineArgs(string commandLineArgs);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasProcessCount.Definition.IWithProcessCount<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithProcessCount(int processCount);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasPythonInterpreter.Definition.IWithPythonInterpreter<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithPythonInterpreterPath(string path);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.ChainerImpl : IndexableWrapper`1<ChainerSettings> {
    private BatchAIJobImpl parent;
    internal ChainerImpl(ChainerSettings inner, BatchAIJobImpl parent);
    public IBatchAIJob Parent();
    public ChainerImpl WithCommandLineArgs(string commandLineArgs);
    public ChainerImpl WithProcessCount(int processCount);
    public IWithCreate Attach();
    public ChainerImpl WithPythonInterpreterPath(string path);
    public ChainerImpl WithPythonScriptFile(string pythonScriptFilePath);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.ResourceManager.Fluent.Core.ChildResource.Definition.IInDefinition<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.Attach();
    private sealed virtual override IWithAttachAndPythonInterpreter`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Chainer.Definition.IWithPython<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithPythonScriptFile(string pythonScriptFilePath);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasCommandLineArgs.Definition.IWithCommandLineArgs<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Chainer.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithCommandLineArgs(string commandLineArgs);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasProcessCount.Definition.IWithProcessCount<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Chainer.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithProcessCount(int processCount);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasPythonInterpreter.Definition.IWithPythonInterpreter<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Chainer.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithPythonInterpreterPath(string path);
}
internal class Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperations : object {
    [CompilerGeneratedAttribute]
private BatchAIManagementClient <Client>k__BackingField;
    public BatchAIManagementClient Client { get; private set; }
    internal ClustersOperations(BatchAIManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual BatchAIManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(BatchAIManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperations/<CreateWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<ClusterInner>> CreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, ClusterCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperations/<UpdateWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<ClusterInner>> UpdateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, ScaleSettings scaleSettings, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperations/<DeleteWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperations/<GetWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<ClusterInner>> GetWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperations/<ListRemoteLoginInformationWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RemoteLoginInformation>>> ListRemoteLoginInformationWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperations/<ListByWorkspaceWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ClusterInner>>> ListByWorkspaceWithHttpMessagesAsync(string resourceGroupName, string workspaceName, ClustersListByWorkspaceOptions clustersListByWorkspaceOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperations/<BeginCreateWithHttpMessagesAsync>d__11")]
public sealed virtual Task`1<AzureOperationResponse`1<ClusterInner>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, ClusterCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperations/<BeginDeleteWithHttpMessagesAsync>d__12")]
public sealed virtual Task`1<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperations/<ListRemoteLoginInformationNextWithHttpMessagesAsync>d__13")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RemoteLoginInformation>>> ListRemoteLoginInformationNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperations/<ListByWorkspaceNextWithHttpMessagesAsync>d__14")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ClusterInner>>> ListByWorkspaceNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperationsExtensions/<CreateAsync>d__0")]
[ExtensionAttribute]
public static Task`1<ClusterInner> CreateAsync(IClustersOperations operations, string resourceGroupName, string workspaceName, string clusterName, ClusterCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperationsExtensions/<UpdateAsync>d__1")]
[ExtensionAttribute]
public static Task`1<ClusterInner> UpdateAsync(IClustersOperations operations, string resourceGroupName, string workspaceName, string clusterName, ScaleSettings scaleSettings, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperationsExtensions/<DeleteAsync>d__2")]
[ExtensionAttribute]
public static Task DeleteAsync(IClustersOperations operations, string resourceGroupName, string workspaceName, string clusterName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperationsExtensions/<GetAsync>d__3")]
[ExtensionAttribute]
public static Task`1<ClusterInner> GetAsync(IClustersOperations operations, string resourceGroupName, string workspaceName, string clusterName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperationsExtensions/<ListRemoteLoginInformationAsync>d__4")]
[ExtensionAttribute]
public static Task`1<IPage`1<RemoteLoginInformation>> ListRemoteLoginInformationAsync(IClustersOperations operations, string resourceGroupName, string workspaceName, string clusterName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperationsExtensions/<ListByWorkspaceAsync>d__5")]
[ExtensionAttribute]
public static Task`1<IPage`1<ClusterInner>> ListByWorkspaceAsync(IClustersOperations operations, string resourceGroupName, string workspaceName, ClustersListByWorkspaceOptions clustersListByWorkspaceOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperationsExtensions/<BeginCreateAsync>d__6")]
[ExtensionAttribute]
public static Task`1<ClusterInner> BeginCreateAsync(IClustersOperations operations, string resourceGroupName, string workspaceName, string clusterName, ClusterCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperationsExtensions/<BeginDeleteAsync>d__7")]
[ExtensionAttribute]
public static Task BeginDeleteAsync(IClustersOperations operations, string resourceGroupName, string workspaceName, string clusterName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperationsExtensions/<ListRemoteLoginInformationNextAsync>d__8")]
[ExtensionAttribute]
public static Task`1<IPage`1<RemoteLoginInformation>> ListRemoteLoginInformationNextAsync(IClustersOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ClustersOperationsExtensions/<ListByWorkspaceNextAsync>d__9")]
[ExtensionAttribute]
public static Task`1<IPage`1<ClusterInner>> ListByWorkspaceNextAsync(IClustersOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.CognitiveToolkitImpl : IndexableWrapper`1<CNTKsettings> {
    private string _brainScript;
    private string _python;
    private BatchAIJobImpl parent;
    internal CognitiveToolkitImpl(CNTKsettings inner, BatchAIJobImpl parent);
    public CognitiveToolkitImpl WithCommandLineArgs(string commandLineArgs);
    public CognitiveToolkitImpl WithProcessCount(int processCount);
    public CognitiveToolkitImpl WithBrainScript(string configFilePath);
    public sealed virtual IWithCreate Attach();
    public CognitiveToolkitImpl WithPythonInterpreterPath(string path);
    public CognitiveToolkitImpl WithPythonScriptFile(string pythonScriptFilePath);
    private sealed virtual override IWithAttachAndPythonInterpreter`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CognitiveToolkit.Definition.IWithLanguageType<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithPythonScriptFile(string pythonScriptFilePath);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CognitiveToolkit.Definition.IWithLanguageType<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithBrainScript(string configFilePath);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasProcessCount.Definition.IWithProcessCount<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CognitiveToolkit.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithProcessCount(int processCount);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasCommandLineArgs.Definition.IWithCommandLineArgs<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CognitiveToolkit.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithCommandLineArgs(string commandLineArgs);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasPythonInterpreter.Definition.IWithPythonInterpreter<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CognitiveToolkit.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithPythonInterpreterPath(string path);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ContainerImageSettings.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ContainerImageSettings.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ContainerImageSettings.Definition.IWithAttach`1 {
    public abstract virtual IWithAttach`1<ParentT> WithRegistryUrl(string serverUrl);
    public abstract virtual IWithRegistryCredentials`1<ParentT> WithRegistryUsername(string username);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ContainerImageSettings.Definition.IWithRegistryCredentials`1 {
    public abstract virtual IWithAttach`1<ParentT> WithRegistryPassword(string password);
    public abstract virtual IWithAttach`1<ParentT> WithRegistrySecretReference(string keyVaultId, string secretUrl);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ContainerImageSettings.Definition.IWithShmSize`1 {
    public abstract virtual IWithAttach`1<ParentT> WithShmSize(string shmSize);
}
internal class Microsoft.Azure.Management.BatchAI.Fluent.ContainerImageSettingsImpl : IndexableWrapper`1<ContainerSettings> {
    private BatchAIJobImpl parent;
    internal ContainerImageSettingsImpl(ContainerSettings inner, BatchAIJobImpl parent);
    public IWithCreate Attach();
    public ContainerImageSettingsImpl WithRegistryPassword(string password);
    public ContainerImageSettingsImpl WithRegistrySecretReference(string keyVaultId, string secretUrl);
    public ContainerImageSettingsImpl WithRegistryUrl(string serverUrl);
    public ContainerImageSettingsImpl WithRegistryUsername(string username);
    public ContainerImageSettingsImpl WithShmSize(string shmSize);
    private ImageSourceRegistry EnsureImageSourceRegistry();
    private sealed virtual override IWithCreate Microsoft.Azure.Management.ResourceManager.Fluent.Core.ChildResource.Definition.IInDefinition<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.Attach();
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ContainerImageSettings.Definition.IWithRegistryCredentials<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithRegistryPassword(string password);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ContainerImageSettings.Definition.IWithRegistryCredentials<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithRegistrySecretReference(string keyVaultId, string secretUrl);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ContainerImageSettings.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithRegistryUrl(string serverUrl);
    private sealed virtual override IWithRegistryCredentials`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ContainerImageSettings.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithRegistryUsername(string username);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ContainerImageSettings.Definition.IWithShmSize<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithShmSize(string shmSize);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.CustomMpiImpl : IndexableWrapper`1<CustomMpiSettings> {
    private BatchAIJobImpl parent;
    internal CustomMpiImpl(CustomMpiSettings inner, BatchAIJobImpl parent);
    public sealed virtual IWithCreate Attach();
    public IBatchAIJob Parent();
    public CustomMpiImpl WithCommandLine(string commandLine);
    public CustomMpiImpl WithProcessCount(int processCount);
    private sealed virtual override IWithAttachAndProcessCount`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CustomMpi.Definition.IWithCommandLine<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithCommandLine(string commandLine);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasProcessCount.Definition.IWithProcessCount<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CustomMpi.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithProcessCount(int processCount);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.CustomToolkitImpl : IndexableWrapper`1<CustomToolkitSettings> {
    private BatchAIJobImpl parent;
    internal CustomToolkitImpl(CustomToolkitSettings inner, BatchAIJobImpl parent);
    public sealed virtual IWithCreate Attach();
    public IBatchAIJob Parent();
    public CustomToolkitImpl WithCommandLine(string commandLine);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CustomToolkit.Definition.IWithCommandLine<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithCommandLine(string commandLine);
}
internal class Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperations : object {
    [CompilerGeneratedAttribute]
private BatchAIManagementClient <Client>k__BackingField;
    public BatchAIManagementClient Client { get; private set; }
    internal ExperimentsOperations(BatchAIManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual BatchAIManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(BatchAIManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperations/<ListByWorkspaceWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ExperimentInner>>> ListByWorkspaceWithHttpMessagesAsync(string resourceGroupName, string workspaceName, ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperations/<CreateWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<ExperimentInner>> CreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperations/<DeleteWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperations/<GetWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<ExperimentInner>> GetWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperations/<BeginCreateWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse`1<ExperimentInner>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperations/<BeginDeleteWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperations/<ListByWorkspaceNextWithHttpMessagesAsync>d__11")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ExperimentInner>>> ListByWorkspaceNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperationsExtensions/<ListByWorkspaceAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IPage`1<ExperimentInner>> ListByWorkspaceAsync(IExperimentsOperations operations, string resourceGroupName, string workspaceName, ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperationsExtensions/<CreateAsync>d__1")]
[ExtensionAttribute]
public static Task`1<ExperimentInner> CreateAsync(IExperimentsOperations operations, string resourceGroupName, string workspaceName, string experimentName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperationsExtensions/<DeleteAsync>d__2")]
[ExtensionAttribute]
public static Task DeleteAsync(IExperimentsOperations operations, string resourceGroupName, string workspaceName, string experimentName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperationsExtensions/<GetAsync>d__3")]
[ExtensionAttribute]
public static Task`1<ExperimentInner> GetAsync(IExperimentsOperations operations, string resourceGroupName, string workspaceName, string experimentName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperationsExtensions/<BeginCreateAsync>d__4")]
[ExtensionAttribute]
public static Task`1<ExperimentInner> BeginCreateAsync(IExperimentsOperations operations, string resourceGroupName, string workspaceName, string experimentName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperationsExtensions/<BeginDeleteAsync>d__5")]
[ExtensionAttribute]
public static Task BeginDeleteAsync(IExperimentsOperations operations, string resourceGroupName, string workspaceName, string experimentName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.ExperimentsOperationsExtensions/<ListByWorkspaceNextAsync>d__6")]
[ExtensionAttribute]
public static Task`1<IPage`1<ExperimentInner>> ListByWorkspaceNextAsync(IExperimentsOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.FileServer.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.FileServer.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.FileServer.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.FileServer.Definition.IWithFileServer`1 {
    public abstract virtual IWithRelativeMountPath`1<ParentT> WithFileServerId(string fileServerId);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.FileServer.Definition.IWithMountOptions`1 {
    public abstract virtual IWithAttach`1<ParentT> WithMountOptions(string mountOptions);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.FileServer.Definition.IWithRelativeMountPath`1 {
    public abstract virtual IWithAttach`1<ParentT> WithRelativeMountPath(string mountPath);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.FileServer.Definition.IWithSourceDirectory`1 {
    public abstract virtual IWithAttach`1<ParentT> WithSourceDirectory(string sourceDirectory);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.FileServerImpl`1 : IndexableWrapper`1<FileServerReference> {
    private IHasMountVolumes parent;
    internal FileServerImpl`1(FileServerReference inner, ParentT parent);
    private sealed virtual override IWithRelativeMountPath`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.FileServer.Definition.IWithFileServer<ParentT>.WithFileServerId(string fileServerId);
    private sealed virtual override IWithAttach`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.FileServer.Definition.IWithMountOptions<ParentT>.WithMountOptions(string mountOptions);
    private sealed virtual override IWithAttach`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.FileServer.Definition.IWithRelativeMountPath<ParentT>.WithRelativeMountPath(string mountPath);
    private sealed virtual override IWithAttach`1<ParentT> Microsoft.Azure.Management.BatchAI.Fluent.FileServer.Definition.IWithSourceDirectory<ParentT>.WithSourceDirectory(string sourceDirectory);
    public FileServerImpl`1<ParentT> WithFileServerId(string fileServerId);
    public IWithAttach`1<ParentT> WithSourceDirectory(string sourceDirectory);
    public FileServerImpl`1<ParentT> WithMountOptions(string mountOptions);
    public sealed virtual ParentT Attach();
    public FileServerImpl`1<ParentT> WithRelativeMountPath(string mountPath);
}
internal class Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperations : object {
    [CompilerGeneratedAttribute]
private BatchAIManagementClient <Client>k__BackingField;
    public BatchAIManagementClient Client { get; private set; }
    internal FileServersOperations(BatchAIManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual BatchAIManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(BatchAIManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperations/<CreateWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<FileServerInner>> CreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string fileServerName, FileServerCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperations/<DeleteWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string fileServerName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperations/<GetWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse`1<FileServerInner>> GetWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string fileServerName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperations/<ListByWorkspaceWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<FileServerInner>>> ListByWorkspaceWithHttpMessagesAsync(string resourceGroupName, string workspaceName, FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperations/<BeginCreateWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse`1<FileServerInner>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string fileServerName, FileServerCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperations/<BeginDeleteWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string fileServerName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperations/<ListByWorkspaceNextWithHttpMessagesAsync>d__11")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<FileServerInner>>> ListByWorkspaceNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperationsExtensions/<CreateAsync>d__0")]
[ExtensionAttribute]
public static Task`1<FileServerInner> CreateAsync(IFileServersOperations operations, string resourceGroupName, string workspaceName, string fileServerName, FileServerCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperationsExtensions/<DeleteAsync>d__1")]
[ExtensionAttribute]
public static Task DeleteAsync(IFileServersOperations operations, string resourceGroupName, string workspaceName, string fileServerName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperationsExtensions/<GetAsync>d__2")]
[ExtensionAttribute]
public static Task`1<FileServerInner> GetAsync(IFileServersOperations operations, string resourceGroupName, string workspaceName, string fileServerName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperationsExtensions/<ListByWorkspaceAsync>d__3")]
[ExtensionAttribute]
public static Task`1<IPage`1<FileServerInner>> ListByWorkspaceAsync(IFileServersOperations operations, string resourceGroupName, string workspaceName, FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperationsExtensions/<BeginCreateAsync>d__4")]
[ExtensionAttribute]
public static Task`1<FileServerInner> BeginCreateAsync(IFileServersOperations operations, string resourceGroupName, string workspaceName, string fileServerName, FileServerCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperationsExtensions/<BeginDeleteAsync>d__5")]
[ExtensionAttribute]
public static Task BeginDeleteAsync(IFileServersOperations operations, string resourceGroupName, string workspaceName, string fileServerName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.FileServersOperationsExtensions/<ListByWorkspaceNextAsync>d__6")]
[ExtensionAttribute]
public static Task`1<IPage`1<FileServerInner>> ListByWorkspaceNextAsync(IFileServersOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.HorovodImpl : IndexableWrapper`1<HorovodSettings> {
    private BatchAIJobImpl parent;
    internal HorovodImpl(HorovodSettings inner, BatchAIJobImpl parent);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Horovod.Definition.IWithPython<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithPythonScriptFile(string pythonScriptFilePath);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasProcessCount.Definition.IWithProcessCount<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Horovod.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithProcessCount(int processCount);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasCommandLineArgs.Definition.IWithCommandLineArgs<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Horovod.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithCommandLineArgs(string commandLineArgs);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasPythonInterpreter.Definition.IWithPythonInterpreter<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Horovod.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithPythonInterpreterPath(string path);
    public sealed virtual IWithCreate Attach();
    public IBatchAIJob Parent();
    public HorovodImpl WithCommandLineArgs(string commandLineArgs);
    public HorovodImpl WithProcessCount(int processCount);
    public HorovodImpl WithPythonInterpreterPath(string path);
    public HorovodImpl WithPythonScriptFile(string pythonScriptFilePath);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IAzureBlobFileSystem {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IAzureFileShare {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAICluster {
    public ResourceId Subnet { get; }
    public ScaleSettings ScaleSettings { get; }
    public string AdminUserName { get; }
    public DateTime CreationTime { get; }
    public AllocationState AllocationState { get; }
    public NodeStateCounts NodeStateCounts { get; }
    public DateTime ProvisioningStateTransitionTime { get; }
    public ProvisioningState ProvisioningState { get; }
    public int CurrentNodeCount { get; }
    public NodeSetup NodeSetup { get; }
    public VirtualMachineConfiguration VirtualMachineConfiguration { get; }
    public string VMSize { get; }
    public VmPriority VMPriority { get; }
    public DateTime AllocationStateTransitionTime { get; }
    public IReadOnlyList`1<BatchAIError> Errors { get; }
    public abstract virtual ResourceId get_Subnet();
    public abstract virtual ScaleSettings get_ScaleSettings();
    public abstract virtual string get_AdminUserName();
    public abstract virtual DateTime get_CreationTime();
    public abstract virtual AllocationState get_AllocationState();
    public abstract virtual NodeStateCounts get_NodeStateCounts();
    public abstract virtual DateTime get_ProvisioningStateTransitionTime();
    public abstract virtual ProvisioningState get_ProvisioningState();
    public abstract virtual int get_CurrentNodeCount();
    public abstract virtual NodeSetup get_NodeSetup();
    public abstract virtual VirtualMachineConfiguration get_VirtualMachineConfiguration();
    public abstract virtual string get_VMSize();
    public abstract virtual VmPriority get_VMPriority();
    public abstract virtual DateTime get_AllocationStateTransitionTime();
    public abstract virtual IReadOnlyList`1<BatchAIError> get_Errors();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIClusters {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiment {
    public DateTime CreationTime { get; }
    public IBatchAIJobs Jobs { get; }
    public ProvisioningState ProvisioningState { get; }
    public DateTime ProvisioningStateTransitionTime { get; }
    public IBatchAIWorkspace Workspace { get; }
    public abstract virtual DateTime get_CreationTime();
    public abstract virtual IBatchAIJobs get_Jobs();
    public abstract virtual ProvisioningState get_ProvisioningState();
    public abstract virtual DateTime get_ProvisioningStateTransitionTime();
    public abstract virtual IBatchAIWorkspace get_Workspace();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIExperiments {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServer {
    public ResourceId Subnet { get; }
    public DateTime CreationTime { get; }
    public MountSettings MountSettings { get; }
    public DateTime ProvisioningStateTransitionTime { get; }
    public DataDisks DataDisks { get; }
    public string VMSize { get; }
    public FileServerProvisioningState ProvisioningState { get; }
    public SshConfiguration SshConfiguration { get; }
    public abstract virtual ResourceId get_Subnet();
    public abstract virtual DateTime get_CreationTime();
    public abstract virtual MountSettings get_MountSettings();
    public abstract virtual DateTime get_ProvisioningStateTransitionTime();
    public abstract virtual DataDisks get_DataDisks();
    public abstract virtual string get_VMSize();
    public abstract virtual FileServerProvisioningState get_ProvisioningState();
    public abstract virtual SshConfiguration get_SshConfiguration();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIFileServers {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob {
    public ResourceId Cluster { get; }
    public DateTime CreationTime { get; }
    public IBatchAIExperiment Experiment { get; }
    public DateTime ProvisioningStateTransitionTime { get; }
    public string StdOutErrPathPrefix { get; }
    public ContainerSettings ContainerSettings { get; }
    public JobPropertiesConstraints Constraints { get; }
    public CNTKsettings CntkSettings { get; }
    public CustomToolkitSettings CustomToolkitSettings { get; }
    public PyTorchSettings PYTorchSettings { get; }
    public JobPropertiesExecutionInfo ExecutionInfo { get; }
    public TensorFlowSettings TensorFlowSettings { get; }
    public int NodeCount { get; }
    public IReadOnlyList`1<InputDirectory> InputDirectories { get; }
    public string JobOutputDirectoryPathSegment { get; }
    public IReadOnlyList`1<OutputDirectory> OutputDirectories { get; }
    public ExecutionState ExecutionState { get; }
    public ProvisioningState ProvisioningState { get; }
    public ToolType ToolType { get; }
    public CaffeSettings CaffeSettings { get; }
    public JobPreparation JobPreparation { get; }
    public IReadOnlyList`1<EnvironmentVariable> EnvironmentVariables { get; }
    public JobPriority SchedulingPriority { get; }
    public IReadOnlyList`1<EnvironmentVariableWithSecretValue> Secrets { get; }
    public ChainerSettings ChainerSettings { get; }
    public DateTime ExecutionStateTransitionTime { get; }
    public abstract virtual ResourceId get_Cluster();
    public abstract virtual DateTime get_CreationTime();
    public abstract virtual IBatchAIExperiment get_Experiment();
    public abstract virtual DateTime get_ProvisioningStateTransitionTime();
    public abstract virtual string get_StdOutErrPathPrefix();
    public abstract virtual ContainerSettings get_ContainerSettings();
    public abstract virtual JobPropertiesConstraints get_Constraints();
    public abstract virtual CNTKsettings get_CntkSettings();
    public abstract virtual CustomToolkitSettings get_CustomToolkitSettings();
    public abstract virtual PyTorchSettings get_PYTorchSettings();
    public abstract virtual JobPropertiesExecutionInfo get_ExecutionInfo();
    public abstract virtual TensorFlowSettings get_TensorFlowSettings();
    public abstract virtual int get_NodeCount();
    public abstract virtual IEnumerable`1<IOutputFile> ListFiles(string outputDirectoryId);
    public abstract virtual IEnumerable`1<IOutputFile> ListFiles(string outputDirectoryId, string directory, int linkExpiryMinutes, int maxResults);
    public abstract virtual IReadOnlyList`1<InputDirectory> get_InputDirectories();
    public abstract virtual string get_JobOutputDirectoryPathSegment();
    public abstract virtual Task TerminateAsync(CancellationToken cancellationToken);
    public abstract virtual IReadOnlyList`1<OutputDirectory> get_OutputDirectories();
    public abstract virtual ExecutionState get_ExecutionState();
    public abstract virtual ProvisioningState get_ProvisioningState();
    public abstract virtual ToolType get_ToolType();
    public abstract virtual CaffeSettings get_CaffeSettings();
    public abstract virtual JobPreparation get_JobPreparation();
    public abstract virtual IReadOnlyList`1<EnvironmentVariable> get_EnvironmentVariables();
    public abstract virtual JobPriority get_SchedulingPriority();
    public abstract virtual IReadOnlyList`1<EnvironmentVariableWithSecretValue> get_Secrets();
    public abstract virtual ChainerSettings get_ChainerSettings();
    public abstract virtual DateTime get_ExecutionStateTransitionTime();
    public abstract virtual void Terminate();
    public abstract virtual Task`1<IPagedCollection`1<IOutputFile>> ListFilesAsync(string outputDirectoryId, CancellationToken cancellationToken);
    public abstract virtual Task`1<IPagedCollection`1<IOutputFile>> ListFilesAsync(string outputDirectoryId, string directory, int linkExpiryMinutes, int maxResults, CancellationToken cancellationToken);
    public abstract virtual IEnumerable`1<IRemoteLoginInformation> ListRemoteLoginInformation();
    public abstract virtual Task`1<IPagedCollection`1<IRemoteLoginInformation>> ListRemoteLoginInformationAsync(CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJobs {
    public abstract virtual IEnumerable`1<IBatchAIJob> List(int maxResults);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIManagementClient {
    public Uri BaseUri { get; public set; }
    public JsonSerializerSettings SerializationSettings { get; }
    public JsonSerializerSettings DeserializationSettings { get; }
    public ServiceClientCredentials Credentials { get; }
    public string SubscriptionId { get; public set; }
    public string ApiVersion { get; }
    public string AcceptLanguage { get; public set; }
    public Nullable`1<int> LongRunningOperationRetryTimeout { get; public set; }
    public Nullable`1<bool> GenerateClientRequestId { get; public set; }
    public IOperations Operations { get; }
    public IUsagesOperations Usages { get; }
    public IWorkspacesOperations Workspaces { get; }
    public IExperimentsOperations Experiments { get; }
    public IJobsOperations Jobs { get; }
    public IFileServersOperations FileServers { get; }
    public IClustersOperations Clusters { get; }
    public abstract virtual Uri get_BaseUri();
    public abstract virtual void set_BaseUri(Uri value);
    public abstract virtual JsonSerializerSettings get_SerializationSettings();
    public abstract virtual JsonSerializerSettings get_DeserializationSettings();
    public abstract virtual ServiceClientCredentials get_Credentials();
    public abstract virtual string get_SubscriptionId();
    public abstract virtual void set_SubscriptionId(string value);
    public abstract virtual string get_ApiVersion();
    public abstract virtual string get_AcceptLanguage();
    public abstract virtual void set_AcceptLanguage(string value);
    public abstract virtual Nullable`1<int> get_LongRunningOperationRetryTimeout();
    public abstract virtual void set_LongRunningOperationRetryTimeout(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_GenerateClientRequestId();
    public abstract virtual void set_GenerateClientRequestId(Nullable`1<bool> value);
    public abstract virtual IOperations get_Operations();
    public abstract virtual IUsagesOperations get_Usages();
    public abstract virtual IWorkspacesOperations get_Workspaces();
    public abstract virtual IExperimentsOperations get_Experiments();
    public abstract virtual IJobsOperations get_Jobs();
    public abstract virtual IFileServersOperations get_FileServers();
    public abstract virtual IClustersOperations get_Clusters();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIManager {
    public IBatchAIWorkspaces BatchAIWorkspaces { get; }
    public IBatchAIUsages BatchAIUsages { get; }
    public abstract virtual IBatchAIWorkspaces get_BatchAIWorkspaces();
    public abstract virtual IBatchAIUsages get_BatchAIUsages();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsage {
    public int CurrentValue { get; }
    public long Limit { get; }
    public UsageName Name { get; }
    public UsageUnit Unit { get; }
    public abstract virtual int get_CurrentValue();
    public abstract virtual long get_Limit();
    public abstract virtual UsageName get_Name();
    public abstract virtual UsageUnit get_Unit();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIUsages {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspace {
    public DateTime CreationTime { get; }
    public ProvisioningState ProvisioningState { get; }
    public DateTime ProvisioningStateTransitionTime { get; }
    public IBatchAIClusters Clusters { get; }
    public IBatchAIExperiments Experiments { get; }
    public IBatchAIFileServers FileServers { get; }
    public abstract virtual DateTime get_CreationTime();
    public abstract virtual ProvisioningState get_ProvisioningState();
    public abstract virtual DateTime get_ProvisioningStateTransitionTime();
    public abstract virtual IBatchAIExperiment CreateExperiment(string name);
    public abstract virtual Task`1<IBatchAIExperiment> CreateExperimentAsync(string name, CancellationToken cancellationToken);
    public abstract virtual IBatchAIClusters get_Clusters();
    public abstract virtual IBatchAIExperiments get_Experiments();
    public abstract virtual IBatchAIFileServers get_FileServers();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIWorkspaces {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IClustersOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<ClusterInner>> CreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, ClusterCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ClusterInner>> UpdateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, ScaleSettings scaleSettings, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ClusterInner>> GetWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RemoteLoginInformation>>> ListRemoteLoginInformationWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ClusterInner>>> ListByWorkspaceWithHttpMessagesAsync(string resourceGroupName, string workspaceName, ClustersListByWorkspaceOptions clustersListByWorkspaceOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ClusterInner>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, ClusterCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string clusterName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RemoteLoginInformation>>> ListRemoteLoginInformationNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ClusterInner>>> ListByWorkspaceNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IContainerImageSettings {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IExperimentsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ExperimentInner>>> ListByWorkspaceWithHttpMessagesAsync(string resourceGroupName, string workspaceName, ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ExperimentInner>> CreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ExperimentInner>> GetWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ExperimentInner>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ExperimentInner>>> ListByWorkspaceNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IFileServer {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IFileServersOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<FileServerInner>> CreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string fileServerName, FileServerCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string fileServerName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<FileServerInner>> GetWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string fileServerName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<FileServerInner>>> ListByWorkspaceWithHttpMessagesAsync(string resourceGroupName, string workspaceName, FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<FileServerInner>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string fileServerName, FileServerCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string fileServerName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<FileServerInner>>> ListByWorkspaceNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IHasMountVolumes {
    public abstract virtual void AttachAzureBlobFileSystem(IAzureBlobFileSystem azureBlobFileSystem);
    public abstract virtual void AttachAzureFileShare(IAzureFileShare azureFileShare);
    public abstract virtual void AttachFileServer(IFileServer fileServer);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IJobsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<JobInner>>> ListByExperimentWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, JobsListByExperimentOptions jobsListByExperimentOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<JobInner>> CreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, JobCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<JobInner>> GetWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<File>>> ListOutputFilesWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, JobsListOutputFilesOptions jobsListOutputFilesOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RemoteLoginInformation>>> ListRemoteLoginInformationWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> TerminateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<JobInner>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, JobCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> BeginTerminateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<JobInner>>> ListByExperimentNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<File>>> ListOutputFilesNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RemoteLoginInformation>>> ListRemoteLoginInformationNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.INodeSetupTask {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<OperationInner>>> ListWithHttpMessagesAsync(Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<OperationInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IOutputDirectorySettings {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IOutputFile {
    public string DownloadUrl { get; }
    public long ContentLength { get; }
    public FileType FileType { get; }
    public DateTime LastModified { get; }
    public abstract virtual string get_DownloadUrl();
    public abstract virtual long get_ContentLength();
    public abstract virtual FileType get_FileType();
    public abstract virtual DateTime get_LastModified();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IRemoteLoginInformation {
    public string IPAddress { get; }
    public string NodeId { get; }
    public int Port { get; }
    public abstract virtual string get_IPAddress();
    public abstract virtual string get_NodeId();
    public abstract virtual int get_Port();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IUsagesOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<UsageInner>>> ListWithHttpMessagesAsync(string location, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<UsageInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.IWorkspacesOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<WorkspaceInner>>> ListWithHttpMessagesAsync(WorkspacesListOptions workspacesListOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<WorkspaceInner>>> ListByResourceGroupWithHttpMessagesAsync(string resourceGroupName, WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<WorkspaceInner>> CreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, WorkspaceCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<WorkspaceInner>> UpdateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, IDictionary`2<string, string> tags, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<WorkspaceInner>> GetWithHttpMessagesAsync(string resourceGroupName, string workspaceName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<WorkspaceInner>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, WorkspaceCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<WorkspaceInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<WorkspaceInner>>> ListByResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
internal class Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations : object {
    [CompilerGeneratedAttribute]
private BatchAIManagementClient <Client>k__BackingField;
    public BatchAIManagementClient Client { get; private set; }
    internal JobsOperations(BatchAIManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual BatchAIManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(BatchAIManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<ListByExperimentWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<JobInner>>> ListByExperimentWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, JobsListByExperimentOptions jobsListByExperimentOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<CreateWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<JobInner>> CreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, JobCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<DeleteWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<GetWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<JobInner>> GetWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<ListOutputFilesWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<File>>> ListOutputFilesWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, JobsListOutputFilesOptions jobsListOutputFilesOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<ListRemoteLoginInformationWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RemoteLoginInformation>>> ListRemoteLoginInformationWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<TerminateWithHttpMessagesAsync>d__11")]
public sealed virtual Task`1<AzureOperationResponse> TerminateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<BeginCreateWithHttpMessagesAsync>d__12")]
public sealed virtual Task`1<AzureOperationResponse`1<JobInner>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, JobCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<BeginDeleteWithHttpMessagesAsync>d__13")]
public sealed virtual Task`1<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<BeginTerminateWithHttpMessagesAsync>d__14")]
public sealed virtual Task`1<AzureOperationResponse> BeginTerminateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string experimentName, string jobName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<ListByExperimentNextWithHttpMessagesAsync>d__15")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<JobInner>>> ListByExperimentNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<ListOutputFilesNextWithHttpMessagesAsync>d__16")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<File>>> ListOutputFilesNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperations/<ListRemoteLoginInformationNextWithHttpMessagesAsync>d__17")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RemoteLoginInformation>>> ListRemoteLoginInformationNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<ListByExperimentAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IPage`1<JobInner>> ListByExperimentAsync(IJobsOperations operations, string resourceGroupName, string workspaceName, string experimentName, JobsListByExperimentOptions jobsListByExperimentOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<CreateAsync>d__1")]
[ExtensionAttribute]
public static Task`1<JobInner> CreateAsync(IJobsOperations operations, string resourceGroupName, string workspaceName, string experimentName, string jobName, JobCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<DeleteAsync>d__2")]
[ExtensionAttribute]
public static Task DeleteAsync(IJobsOperations operations, string resourceGroupName, string workspaceName, string experimentName, string jobName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<GetAsync>d__3")]
[ExtensionAttribute]
public static Task`1<JobInner> GetAsync(IJobsOperations operations, string resourceGroupName, string workspaceName, string experimentName, string jobName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<ListOutputFilesAsync>d__4")]
[ExtensionAttribute]
public static Task`1<IPage`1<File>> ListOutputFilesAsync(IJobsOperations operations, string resourceGroupName, string workspaceName, string experimentName, string jobName, JobsListOutputFilesOptions jobsListOutputFilesOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<ListRemoteLoginInformationAsync>d__5")]
[ExtensionAttribute]
public static Task`1<IPage`1<RemoteLoginInformation>> ListRemoteLoginInformationAsync(IJobsOperations operations, string resourceGroupName, string workspaceName, string experimentName, string jobName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<TerminateAsync>d__6")]
[ExtensionAttribute]
public static Task TerminateAsync(IJobsOperations operations, string resourceGroupName, string workspaceName, string experimentName, string jobName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<BeginCreateAsync>d__7")]
[ExtensionAttribute]
public static Task`1<JobInner> BeginCreateAsync(IJobsOperations operations, string resourceGroupName, string workspaceName, string experimentName, string jobName, JobCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<BeginDeleteAsync>d__8")]
[ExtensionAttribute]
public static Task BeginDeleteAsync(IJobsOperations operations, string resourceGroupName, string workspaceName, string experimentName, string jobName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<BeginTerminateAsync>d__9")]
[ExtensionAttribute]
public static Task BeginTerminateAsync(IJobsOperations operations, string resourceGroupName, string workspaceName, string experimentName, string jobName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<ListByExperimentNextAsync>d__10")]
[ExtensionAttribute]
public static Task`1<IPage`1<JobInner>> ListByExperimentNextAsync(IJobsOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<ListOutputFilesNextAsync>d__11")]
[ExtensionAttribute]
public static Task`1<IPage`1<File>> ListOutputFilesNextAsync(IJobsOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.JobsOperationsExtensions/<ListRemoteLoginInformationNextAsync>d__12")]
[ExtensionAttribute]
public static Task`1<IPage`1<RemoteLoginInformation>> ListRemoteLoginInformationNextAsync(IJobsOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.BatchAI.Fluent.Models.AllocationState>")]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.AllocationState : ExpandableStringEnum`1<AllocationState> {
    public static AllocationState Steady;
    public static AllocationState Resizing;
    private static AllocationState();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.AppInsightsReference : object {
    [CompilerGeneratedAttribute]
private ResourceId <Component>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstrumentationKey>k__BackingField;
    [CompilerGeneratedAttribute]
private KeyVaultSecretReference <InstrumentationKeySecretReference>k__BackingField;
    [JsonPropertyAttribute]
public ResourceId Component { get; public set; }
    [JsonPropertyAttribute]
public string InstrumentationKey { get; public set; }
    [JsonPropertyAttribute]
public KeyVaultSecretReference InstrumentationKeySecretReference { get; public set; }
    public AppInsightsReference(ResourceId component, string instrumentationKey, KeyVaultSecretReference instrumentationKeySecretReference);
    [CompilerGeneratedAttribute]
public ResourceId get_Component();
    [CompilerGeneratedAttribute]
public void set_Component(ResourceId value);
    [CompilerGeneratedAttribute]
public string get_InstrumentationKey();
    [CompilerGeneratedAttribute]
public void set_InstrumentationKey(string value);
    [CompilerGeneratedAttribute]
public KeyVaultSecretReference get_InstrumentationKeySecretReference();
    [CompilerGeneratedAttribute]
public void set_InstrumentationKeySecretReference(KeyVaultSecretReference value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.AutoScaleSettings : object {
    [CompilerGeneratedAttribute]
private int <MinimumNodeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaximumNodeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <InitialNodeCount>k__BackingField;
    [JsonPropertyAttribute]
public int MinimumNodeCount { get; public set; }
    [JsonPropertyAttribute]
public int MaximumNodeCount { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> InitialNodeCount { get; public set; }
    public AutoScaleSettings(int minimumNodeCount, int maximumNodeCount, Nullable`1<int> initialNodeCount);
    [CompilerGeneratedAttribute]
public int get_MinimumNodeCount();
    [CompilerGeneratedAttribute]
public void set_MinimumNodeCount(int value);
    [CompilerGeneratedAttribute]
public int get_MaximumNodeCount();
    [CompilerGeneratedAttribute]
public void set_MaximumNodeCount(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_InitialNodeCount();
    [CompilerGeneratedAttribute]
public void set_InitialNodeCount(Nullable`1<int> value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.AzureBlobFileSystemReference : object {
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainerName>k__BackingField;
    [CompilerGeneratedAttribute]
private AzureStorageCredentialsInfo <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelativeMountPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MountOptions>k__BackingField;
    [JsonPropertyAttribute]
public string AccountName { get; public set; }
    [JsonPropertyAttribute]
public string ContainerName { get; public set; }
    [JsonPropertyAttribute]
public AzureStorageCredentialsInfo Credentials { get; public set; }
    [JsonPropertyAttribute]
public string RelativeMountPath { get; public set; }
    [JsonPropertyAttribute]
public string MountOptions { get; public set; }
    public AzureBlobFileSystemReference(string accountName, string containerName, AzureStorageCredentialsInfo credentials, string relativeMountPath, string mountOptions);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public void set_AccountName(string value);
    [CompilerGeneratedAttribute]
public string get_ContainerName();
    [CompilerGeneratedAttribute]
public void set_ContainerName(string value);
    [CompilerGeneratedAttribute]
public AzureStorageCredentialsInfo get_Credentials();
    [CompilerGeneratedAttribute]
public void set_Credentials(AzureStorageCredentialsInfo value);
    [CompilerGeneratedAttribute]
public string get_RelativeMountPath();
    [CompilerGeneratedAttribute]
public void set_RelativeMountPath(string value);
    [CompilerGeneratedAttribute]
public string get_MountOptions();
    [CompilerGeneratedAttribute]
public void set_MountOptions(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.AzureFileShareReference : object {
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureFileUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private AzureStorageCredentialsInfo <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelativeMountPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DirectoryMode>k__BackingField;
    [JsonPropertyAttribute]
public string AccountName { get; public set; }
    [JsonPropertyAttribute]
public string AzureFileUrl { get; public set; }
    [JsonPropertyAttribute]
public AzureStorageCredentialsInfo Credentials { get; public set; }
    [JsonPropertyAttribute]
public string RelativeMountPath { get; public set; }
    [JsonPropertyAttribute]
public string FileMode { get; public set; }
    [JsonPropertyAttribute]
public string DirectoryMode { get; public set; }
    public AzureFileShareReference(string accountName, string azureFileUrl, AzureStorageCredentialsInfo credentials, string relativeMountPath, string fileMode, string directoryMode);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public void set_AccountName(string value);
    [CompilerGeneratedAttribute]
public string get_AzureFileUrl();
    [CompilerGeneratedAttribute]
public void set_AzureFileUrl(string value);
    [CompilerGeneratedAttribute]
public AzureStorageCredentialsInfo get_Credentials();
    [CompilerGeneratedAttribute]
public void set_Credentials(AzureStorageCredentialsInfo value);
    [CompilerGeneratedAttribute]
public string get_RelativeMountPath();
    [CompilerGeneratedAttribute]
public void set_RelativeMountPath(string value);
    [CompilerGeneratedAttribute]
public string get_FileMode();
    [CompilerGeneratedAttribute]
public void set_FileMode(string value);
    [CompilerGeneratedAttribute]
public string get_DirectoryMode();
    [CompilerGeneratedAttribute]
public void set_DirectoryMode(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.AzureStorageCredentialsInfo : object {
    [CompilerGeneratedAttribute]
private string <AccountKey>k__BackingField;
    [CompilerGeneratedAttribute]
private KeyVaultSecretReference <AccountKeySecretReference>k__BackingField;
    [JsonPropertyAttribute]
public string AccountKey { get; public set; }
    [JsonPropertyAttribute]
public KeyVaultSecretReference AccountKeySecretReference { get; public set; }
    public AzureStorageCredentialsInfo(string accountKey, KeyVaultSecretReference accountKeySecretReference);
    [CompilerGeneratedAttribute]
public string get_AccountKey();
    [CompilerGeneratedAttribute]
public void set_AccountKey(string value);
    [CompilerGeneratedAttribute]
public KeyVaultSecretReference get_AccountKeySecretReference();
    [CompilerGeneratedAttribute]
public void set_AccountKeySecretReference(KeyVaultSecretReference value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.BatchAIError : object {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<NameValuePair> <Details>k__BackingField;
    [JsonPropertyAttribute]
public string Code { get; private set; }
    [JsonPropertyAttribute]
public string Message { get; private set; }
    [JsonPropertyAttribute]
public IList`1<NameValuePair> Details { get; private set; }
    public BatchAIError(string code, string message, IList`1<NameValuePair> details);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
private void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public IList`1<NameValuePair> get_Details();
    [CompilerGeneratedAttribute]
private void set_Details(IList`1<NameValuePair> value);
}
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Microsoft.Azure.Management.BatchAI.Fluent.Models.CachingType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static CachingType None;
    [EnumMemberAttribute]
public static CachingType Readonly;
    [EnumMemberAttribute]
public static CachingType Readwrite;
}
[ExtensionAttribute]
internal static class Microsoft.Azure.Management.BatchAI.Fluent.Models.CachingTypeEnumExtension : object {
    [ExtensionAttribute]
internal static string ToSerializedValue(Nullable`1<CachingType> value);
    [ExtensionAttribute]
internal static string ToSerializedValue(CachingType value);
    [ExtensionAttribute]
internal static Nullable`1<CachingType> ParseCachingType(string value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.Caffe2Settings : object {
    [CompilerGeneratedAttribute]
private string <PythonScriptFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PythonInterpreterPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommandLineArgs>k__BackingField;
    [JsonPropertyAttribute]
public string PythonScriptFilePath { get; public set; }
    [JsonPropertyAttribute]
public string PythonInterpreterPath { get; public set; }
    [JsonPropertyAttribute]
public string CommandLineArgs { get; public set; }
    public Caffe2Settings(string pythonScriptFilePath, string pythonInterpreterPath, string commandLineArgs);
    [CompilerGeneratedAttribute]
public string get_PythonScriptFilePath();
    [CompilerGeneratedAttribute]
public void set_PythonScriptFilePath(string value);
    [CompilerGeneratedAttribute]
public string get_PythonInterpreterPath();
    [CompilerGeneratedAttribute]
public void set_PythonInterpreterPath(string value);
    [CompilerGeneratedAttribute]
public string get_CommandLineArgs();
    [CompilerGeneratedAttribute]
public void set_CommandLineArgs(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.CaffeSettings : object {
    [CompilerGeneratedAttribute]
private string <ConfigFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PythonScriptFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PythonInterpreterPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommandLineArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProcessCount>k__BackingField;
    [JsonPropertyAttribute]
public string ConfigFilePath { get; public set; }
    [JsonPropertyAttribute]
public string PythonScriptFilePath { get; public set; }
    [JsonPropertyAttribute]
public string PythonInterpreterPath { get; public set; }
    [JsonPropertyAttribute]
public string CommandLineArgs { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ProcessCount { get; public set; }
    public CaffeSettings(string configFilePath, string pythonScriptFilePath, string pythonInterpreterPath, string commandLineArgs, Nullable`1<int> processCount);
    [CompilerGeneratedAttribute]
public string get_ConfigFilePath();
    [CompilerGeneratedAttribute]
public void set_ConfigFilePath(string value);
    [CompilerGeneratedAttribute]
public string get_PythonScriptFilePath();
    [CompilerGeneratedAttribute]
public void set_PythonScriptFilePath(string value);
    [CompilerGeneratedAttribute]
public string get_PythonInterpreterPath();
    [CompilerGeneratedAttribute]
public void set_PythonInterpreterPath(string value);
    [CompilerGeneratedAttribute]
public string get_CommandLineArgs();
    [CompilerGeneratedAttribute]
public void set_CommandLineArgs(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProcessCount();
    [CompilerGeneratedAttribute]
public void set_ProcessCount(Nullable`1<int> value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ChainerSettings : object {
    [CompilerGeneratedAttribute]
private string <PythonScriptFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PythonInterpreterPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommandLineArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProcessCount>k__BackingField;
    [JsonPropertyAttribute]
public string PythonScriptFilePath { get; public set; }
    [JsonPropertyAttribute]
public string PythonInterpreterPath { get; public set; }
    [JsonPropertyAttribute]
public string CommandLineArgs { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ProcessCount { get; public set; }
    public ChainerSettings(string pythonScriptFilePath, string pythonInterpreterPath, string commandLineArgs, Nullable`1<int> processCount);
    [CompilerGeneratedAttribute]
public string get_PythonScriptFilePath();
    [CompilerGeneratedAttribute]
public void set_PythonScriptFilePath(string value);
    [CompilerGeneratedAttribute]
public string get_PythonInterpreterPath();
    [CompilerGeneratedAttribute]
public void set_PythonInterpreterPath(string value);
    [CompilerGeneratedAttribute]
public string get_CommandLineArgs();
    [CompilerGeneratedAttribute]
public void set_CommandLineArgs(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProcessCount();
    [CompilerGeneratedAttribute]
public void set_ProcessCount(Nullable`1<int> value);
    public virtual void Validate();
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ClusterCreateParameters : object {
    [CompilerGeneratedAttribute]
private string <VmSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VmPriority> <VmPriority>k__BackingField;
    [CompilerGeneratedAttribute]
private ScaleSettings <ScaleSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private VirtualMachineConfiguration <VirtualMachineConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeSetup <NodeSetup>k__BackingField;
    [CompilerGeneratedAttribute]
private UserAccountSettings <UserAccountSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceId <Subnet>k__BackingField;
    [JsonPropertyAttribute]
public string VmSize { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<VmPriority> VmPriority { get; public set; }
    [JsonPropertyAttribute]
public ScaleSettings ScaleSettings { get; public set; }
    [JsonPropertyAttribute]
public VirtualMachineConfiguration VirtualMachineConfiguration { get; public set; }
    [JsonPropertyAttribute]
public NodeSetup NodeSetup { get; public set; }
    [JsonPropertyAttribute]
public UserAccountSettings UserAccountSettings { get; public set; }
    [JsonPropertyAttribute]
public ResourceId Subnet { get; public set; }
    public ClusterCreateParameters(string vmSize, UserAccountSettings userAccountSettings, Nullable`1<VmPriority> vmPriority, ScaleSettings scaleSettings, VirtualMachineConfiguration virtualMachineConfiguration, NodeSetup nodeSetup, ResourceId subnet);
    [CompilerGeneratedAttribute]
public string get_VmSize();
    [CompilerGeneratedAttribute]
public void set_VmSize(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<VmPriority> get_VmPriority();
    [CompilerGeneratedAttribute]
public void set_VmPriority(Nullable`1<VmPriority> value);
    [CompilerGeneratedAttribute]
public ScaleSettings get_ScaleSettings();
    [CompilerGeneratedAttribute]
public void set_ScaleSettings(ScaleSettings value);
    [CompilerGeneratedAttribute]
public VirtualMachineConfiguration get_VirtualMachineConfiguration();
    [CompilerGeneratedAttribute]
public void set_VirtualMachineConfiguration(VirtualMachineConfiguration value);
    [CompilerGeneratedAttribute]
public NodeSetup get_NodeSetup();
    [CompilerGeneratedAttribute]
public void set_NodeSetup(NodeSetup value);
    [CompilerGeneratedAttribute]
public UserAccountSettings get_UserAccountSettings();
    [CompilerGeneratedAttribute]
public void set_UserAccountSettings(UserAccountSettings value);
    [CompilerGeneratedAttribute]
public ResourceId get_Subnet();
    [CompilerGeneratedAttribute]
public void set_Subnet(ResourceId value);
    public virtual void Validate();
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ClusterInner : Resource {
    [CompilerGeneratedAttribute]
private string <VmSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VmPriority> <VmPriority>k__BackingField;
    [CompilerGeneratedAttribute]
private ScaleSettings <ScaleSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private VirtualMachineConfiguration <VirtualMachineConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeSetup <NodeSetup>k__BackingField;
    [CompilerGeneratedAttribute]
private UserAccountSettings <UserAccountSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceId <Subnet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ProvisioningState <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ProvisioningStateTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private AllocationState <AllocationState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <AllocationStateTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<BatchAIError> <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CurrentNodeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeStateCounts <NodeStateCounts>k__BackingField;
    [JsonPropertyAttribute]
public string VmSize { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<VmPriority> VmPriority { get; public set; }
    [JsonPropertyAttribute]
public ScaleSettings ScaleSettings { get; public set; }
    [JsonPropertyAttribute]
public VirtualMachineConfiguration VirtualMachineConfiguration { get; public set; }
    [JsonPropertyAttribute]
public NodeSetup NodeSetup { get; public set; }
    [JsonPropertyAttribute]
public UserAccountSettings UserAccountSettings { get; public set; }
    [JsonPropertyAttribute]
public ResourceId Subnet { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; private set; }
    [JsonPropertyAttribute]
public ProvisioningState ProvisioningState { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> ProvisioningStateTransitionTime { get; private set; }
    [JsonPropertyAttribute]
public AllocationState AllocationState { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> AllocationStateTransitionTime { get; private set; }
    [JsonPropertyAttribute]
public IList`1<BatchAIError> Errors { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<int> CurrentNodeCount { get; private set; }
    [JsonPropertyAttribute]
public NodeStateCounts NodeStateCounts { get; private set; }
    public ClusterInner(string id, string name, string type, string vmSize, Nullable`1<VmPriority> vmPriority, ScaleSettings scaleSettings, VirtualMachineConfiguration virtualMachineConfiguration, NodeSetup nodeSetup, UserAccountSettings userAccountSettings, ResourceId subnet, Nullable`1<DateTime> creationTime, ProvisioningState provisioningState, Nullable`1<DateTime> provisioningStateTransitionTime, AllocationState allocationState, Nullable`1<DateTime> allocationStateTransitionTime, IList`1<BatchAIError> errors, Nullable`1<int> currentNodeCount, NodeStateCounts nodeStateCounts);
    [CompilerGeneratedAttribute]
public string get_VmSize();
    [CompilerGeneratedAttribute]
public void set_VmSize(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<VmPriority> get_VmPriority();
    [CompilerGeneratedAttribute]
public void set_VmPriority(Nullable`1<VmPriority> value);
    [CompilerGeneratedAttribute]
public ScaleSettings get_ScaleSettings();
    [CompilerGeneratedAttribute]
public void set_ScaleSettings(ScaleSettings value);
    [CompilerGeneratedAttribute]
public VirtualMachineConfiguration get_VirtualMachineConfiguration();
    [CompilerGeneratedAttribute]
public void set_VirtualMachineConfiguration(VirtualMachineConfiguration value);
    [CompilerGeneratedAttribute]
public NodeSetup get_NodeSetup();
    [CompilerGeneratedAttribute]
public void set_NodeSetup(NodeSetup value);
    [CompilerGeneratedAttribute]
public UserAccountSettings get_UserAccountSettings();
    [CompilerGeneratedAttribute]
public void set_UserAccountSettings(UserAccountSettings value);
    [CompilerGeneratedAttribute]
public ResourceId get_Subnet();
    [CompilerGeneratedAttribute]
public void set_Subnet(ResourceId value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CreationTime();
    [CompilerGeneratedAttribute]
private void set_CreationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ProvisioningState get_ProvisioningState();
    [CompilerGeneratedAttribute]
private void set_ProvisioningState(ProvisioningState value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ProvisioningStateTransitionTime();
    [CompilerGeneratedAttribute]
private void set_ProvisioningStateTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public AllocationState get_AllocationState();
    [CompilerGeneratedAttribute]
private void set_AllocationState(AllocationState value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_AllocationStateTransitionTime();
    [CompilerGeneratedAttribute]
private void set_AllocationStateTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public IList`1<BatchAIError> get_Errors();
    [CompilerGeneratedAttribute]
private void set_Errors(IList`1<BatchAIError> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CurrentNodeCount();
    [CompilerGeneratedAttribute]
private void set_CurrentNodeCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public NodeStateCounts get_NodeStateCounts();
    [CompilerGeneratedAttribute]
private void set_NodeStateCounts(NodeStateCounts value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ClustersListByWorkspaceOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxResults>k__BackingField;
    [JsonIgnoreAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public ClustersListByWorkspaceOptions(Nullable`1<int> maxResults);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxResults();
    [CompilerGeneratedAttribute]
public void set_MaxResults(Nullable`1<int> value);
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ClusterUpdateParameters : object {
    [CompilerGeneratedAttribute]
private ScaleSettings <ScaleSettings>k__BackingField;
    [JsonPropertyAttribute]
public ScaleSettings ScaleSettings { get; public set; }
    public ClusterUpdateParameters(ScaleSettings scaleSettings);
    [CompilerGeneratedAttribute]
public ScaleSettings get_ScaleSettings();
    [CompilerGeneratedAttribute]
public void set_ScaleSettings(ScaleSettings value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.CNTKsettings : object {
    [CompilerGeneratedAttribute]
private string <LanguageType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfigFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PythonScriptFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PythonInterpreterPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommandLineArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProcessCount>k__BackingField;
    [JsonPropertyAttribute]
public string LanguageType { get; public set; }
    [JsonPropertyAttribute]
public string ConfigFilePath { get; public set; }
    [JsonPropertyAttribute]
public string PythonScriptFilePath { get; public set; }
    [JsonPropertyAttribute]
public string PythonInterpreterPath { get; public set; }
    [JsonPropertyAttribute]
public string CommandLineArgs { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ProcessCount { get; public set; }
    public CNTKsettings(string languageType, string configFilePath, string pythonScriptFilePath, string pythonInterpreterPath, string commandLineArgs, Nullable`1<int> processCount);
    [CompilerGeneratedAttribute]
public string get_LanguageType();
    [CompilerGeneratedAttribute]
public void set_LanguageType(string value);
    [CompilerGeneratedAttribute]
public string get_ConfigFilePath();
    [CompilerGeneratedAttribute]
public void set_ConfigFilePath(string value);
    [CompilerGeneratedAttribute]
public string get_PythonScriptFilePath();
    [CompilerGeneratedAttribute]
public void set_PythonScriptFilePath(string value);
    [CompilerGeneratedAttribute]
public string get_PythonInterpreterPath();
    [CompilerGeneratedAttribute]
public void set_PythonInterpreterPath(string value);
    [CompilerGeneratedAttribute]
public string get_CommandLineArgs();
    [CompilerGeneratedAttribute]
public void set_CommandLineArgs(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProcessCount();
    [CompilerGeneratedAttribute]
public void set_ProcessCount(Nullable`1<int> value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ContainerSettings : object {
    [CompilerGeneratedAttribute]
private ImageSourceRegistry <ImageSourceRegistry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShmSize>k__BackingField;
    [JsonPropertyAttribute]
public ImageSourceRegistry ImageSourceRegistry { get; public set; }
    [JsonPropertyAttribute]
public string ShmSize { get; public set; }
    public ContainerSettings(ImageSourceRegistry imageSourceRegistry, string shmSize);
    [CompilerGeneratedAttribute]
public ImageSourceRegistry get_ImageSourceRegistry();
    [CompilerGeneratedAttribute]
public void set_ImageSourceRegistry(ImageSourceRegistry value);
    [CompilerGeneratedAttribute]
public string get_ShmSize();
    [CompilerGeneratedAttribute]
public void set_ShmSize(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.CustomMpiSettings : object {
    [CompilerGeneratedAttribute]
private string <CommandLine>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProcessCount>k__BackingField;
    [JsonPropertyAttribute]
public string CommandLine { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ProcessCount { get; public set; }
    public CustomMpiSettings(string commandLine, Nullable`1<int> processCount);
    [CompilerGeneratedAttribute]
public string get_CommandLine();
    [CompilerGeneratedAttribute]
public void set_CommandLine(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProcessCount();
    [CompilerGeneratedAttribute]
public void set_ProcessCount(Nullable`1<int> value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.CustomToolkitSettings : object {
    [CompilerGeneratedAttribute]
private string <CommandLine>k__BackingField;
    [JsonPropertyAttribute]
public string CommandLine { get; public set; }
    public CustomToolkitSettings(string commandLine);
    [CompilerGeneratedAttribute]
public string get_CommandLine();
    [CompilerGeneratedAttribute]
public void set_CommandLine(string value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.DataDisks : object {
    [CompilerGeneratedAttribute]
private int <DiskSizeInGB>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CachingType> <CachingType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DiskCount>k__BackingField;
    [CompilerGeneratedAttribute]
private StorageAccountType <StorageAccountType>k__BackingField;
    [JsonPropertyAttribute]
public int DiskSizeInGB { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<CachingType> CachingType { get; public set; }
    [JsonPropertyAttribute]
public int DiskCount { get; public set; }
    [JsonPropertyAttribute]
public StorageAccountType StorageAccountType { get; public set; }
    public DataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType, Nullable`1<CachingType> cachingType);
    [CompilerGeneratedAttribute]
public int get_DiskSizeInGB();
    [CompilerGeneratedAttribute]
public void set_DiskSizeInGB(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<CachingType> get_CachingType();
    [CompilerGeneratedAttribute]
public void set_CachingType(Nullable`1<CachingType> value);
    [CompilerGeneratedAttribute]
public int get_DiskCount();
    [CompilerGeneratedAttribute]
public void set_DiskCount(int value);
    [CompilerGeneratedAttribute]
public StorageAccountType get_StorageAccountType();
    [CompilerGeneratedAttribute]
public void set_StorageAccountType(StorageAccountType value);
    public virtual void Validate();
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.BatchAI.Fluent.Models.DeallocationOption>")]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.DeallocationOption : ExpandableStringEnum`1<DeallocationOption> {
    public static DeallocationOption Requeue;
    public static DeallocationOption Terminate;
    public static DeallocationOption Waitforjobcompletion;
    private static DeallocationOption();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.EnvironmentVariable : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    public EnvironmentVariable(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.EnvironmentVariableWithSecretValue : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private KeyVaultSecretReference <ValueSecretReference>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    [JsonPropertyAttribute]
public KeyVaultSecretReference ValueSecretReference { get; public set; }
    public EnvironmentVariableWithSecretValue(string name, string value, KeyVaultSecretReference valueSecretReference);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public KeyVaultSecretReference get_ValueSecretReference();
    [CompilerGeneratedAttribute]
public void set_ValueSecretReference(KeyVaultSecretReference value);
    public virtual void Validate();
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.BatchAI.Fluent.Models.ExecutionState>")]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ExecutionState : ExpandableStringEnum`1<ExecutionState> {
    public static ExecutionState Queued;
    public static ExecutionState Running;
    public static ExecutionState Terminating;
    public static ExecutionState Succeeded;
    public static ExecutionState Failed;
    private static ExecutionState();
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ExperimentInner : Resource {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ProvisioningState <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ProvisioningStateTransitionTime>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; private set; }
    [JsonPropertyAttribute]
public ProvisioningState ProvisioningState { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> ProvisioningStateTransitionTime { get; private set; }
    public ExperimentInner(string id, string name, string type, Nullable`1<DateTime> creationTime, ProvisioningState provisioningState, Nullable`1<DateTime> provisioningStateTransitionTime);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CreationTime();
    [CompilerGeneratedAttribute]
private void set_CreationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ProvisioningState get_ProvisioningState();
    [CompilerGeneratedAttribute]
private void set_ProvisioningState(ProvisioningState value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ProvisioningStateTransitionTime();
    [CompilerGeneratedAttribute]
private void set_ProvisioningStateTransitionTime(Nullable`1<DateTime> value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ExperimentsListByWorkspaceOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxResults>k__BackingField;
    [JsonIgnoreAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public ExperimentsListByWorkspaceOptions(Nullable`1<int> maxResults);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxResults();
    [CompilerGeneratedAttribute]
public void set_MaxResults(Nullable`1<int> value);
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.File : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private FileType <FileType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DownloadUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastModified>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ContentLength>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; private set; }
    [JsonPropertyAttribute]
public FileType FileType { get; private set; }
    [JsonPropertyAttribute]
public string DownloadUrl { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> LastModified { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<long> ContentLength { get; private set; }
    public File(string name, FileType fileType, string downloadUrl, Nullable`1<DateTime> lastModified, Nullable`1<long> contentLength);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public FileType get_FileType();
    [CompilerGeneratedAttribute]
private void set_FileType(FileType value);
    [CompilerGeneratedAttribute]
public string get_DownloadUrl();
    [CompilerGeneratedAttribute]
private void set_DownloadUrl(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastModified();
    [CompilerGeneratedAttribute]
private void set_LastModified(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ContentLength();
    [CompilerGeneratedAttribute]
private void set_ContentLength(Nullable`1<long> value);
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.FileServerCreateParameters : object {
    [CompilerGeneratedAttribute]
private string <VmSize>k__BackingField;
    [CompilerGeneratedAttribute]
private SshConfiguration <SshConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private DataDisks <DataDisks>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceId <Subnet>k__BackingField;
    [JsonPropertyAttribute]
public string VmSize { get; public set; }
    [JsonPropertyAttribute]
public SshConfiguration SshConfiguration { get; public set; }
    [JsonPropertyAttribute]
public DataDisks DataDisks { get; public set; }
    [JsonPropertyAttribute]
public ResourceId Subnet { get; public set; }
    public FileServerCreateParameters(string vmSize, SshConfiguration sshConfiguration, DataDisks dataDisks, ResourceId subnet);
    [CompilerGeneratedAttribute]
public string get_VmSize();
    [CompilerGeneratedAttribute]
public void set_VmSize(string value);
    [CompilerGeneratedAttribute]
public SshConfiguration get_SshConfiguration();
    [CompilerGeneratedAttribute]
public void set_SshConfiguration(SshConfiguration value);
    [CompilerGeneratedAttribute]
public DataDisks get_DataDisks();
    [CompilerGeneratedAttribute]
public void set_DataDisks(DataDisks value);
    [CompilerGeneratedAttribute]
public ResourceId get_Subnet();
    [CompilerGeneratedAttribute]
public void set_Subnet(ResourceId value);
    public virtual void Validate();
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.FileServerInner : Resource {
    [CompilerGeneratedAttribute]
private string <VmSize>k__BackingField;
    [CompilerGeneratedAttribute]
private SshConfiguration <SshConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private DataDisks <DataDisks>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceId <Subnet>k__BackingField;
    [CompilerGeneratedAttribute]
private MountSettings <MountSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ProvisioningStateTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private FileServerProvisioningState <ProvisioningState>k__BackingField;
    [JsonPropertyAttribute]
public string VmSize { get; public set; }
    [JsonPropertyAttribute]
public SshConfiguration SshConfiguration { get; public set; }
    [JsonPropertyAttribute]
public DataDisks DataDisks { get; public set; }
    [JsonPropertyAttribute]
public ResourceId Subnet { get; public set; }
    [JsonPropertyAttribute]
public MountSettings MountSettings { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> ProvisioningStateTransitionTime { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; private set; }
    [JsonPropertyAttribute]
public FileServerProvisioningState ProvisioningState { get; private set; }
    public FileServerInner(string id, string name, string type, string vmSize, SshConfiguration sshConfiguration, DataDisks dataDisks, ResourceId subnet, MountSettings mountSettings, Nullable`1<DateTime> provisioningStateTransitionTime, Nullable`1<DateTime> creationTime, FileServerProvisioningState provisioningState);
    [CompilerGeneratedAttribute]
public string get_VmSize();
    [CompilerGeneratedAttribute]
public void set_VmSize(string value);
    [CompilerGeneratedAttribute]
public SshConfiguration get_SshConfiguration();
    [CompilerGeneratedAttribute]
public void set_SshConfiguration(SshConfiguration value);
    [CompilerGeneratedAttribute]
public DataDisks get_DataDisks();
    [CompilerGeneratedAttribute]
public void set_DataDisks(DataDisks value);
    [CompilerGeneratedAttribute]
public ResourceId get_Subnet();
    [CompilerGeneratedAttribute]
public void set_Subnet(ResourceId value);
    [CompilerGeneratedAttribute]
public MountSettings get_MountSettings();
    [CompilerGeneratedAttribute]
private void set_MountSettings(MountSettings value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ProvisioningStateTransitionTime();
    [CompilerGeneratedAttribute]
private void set_ProvisioningStateTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CreationTime();
    [CompilerGeneratedAttribute]
private void set_CreationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public FileServerProvisioningState get_ProvisioningState();
    [CompilerGeneratedAttribute]
private void set_ProvisioningState(FileServerProvisioningState value);
    public virtual void Validate();
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.BatchAI.Fluent.Models.FileServerProvisioningState>")]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.FileServerProvisioningState : ExpandableStringEnum`1<FileServerProvisioningState> {
    public static FileServerProvisioningState Creating;
    public static FileServerProvisioningState Updating;
    public static FileServerProvisioningState Deleting;
    public static FileServerProvisioningState Succeeded;
    public static FileServerProvisioningState Failed;
    private static FileServerProvisioningState();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.FileServerReference : object {
    [CompilerGeneratedAttribute]
private ResourceId <FileServer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelativeMountPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MountOptions>k__BackingField;
    [JsonPropertyAttribute]
public ResourceId FileServer { get; public set; }
    [JsonPropertyAttribute]
public string SourceDirectory { get; public set; }
    [JsonPropertyAttribute]
public string RelativeMountPath { get; public set; }
    [JsonPropertyAttribute]
public string MountOptions { get; public set; }
    public FileServerReference(ResourceId fileServer, string relativeMountPath, string sourceDirectory, string mountOptions);
    [CompilerGeneratedAttribute]
public ResourceId get_FileServer();
    [CompilerGeneratedAttribute]
public void set_FileServer(ResourceId value);
    [CompilerGeneratedAttribute]
public string get_SourceDirectory();
    [CompilerGeneratedAttribute]
public void set_SourceDirectory(string value);
    [CompilerGeneratedAttribute]
public string get_RelativeMountPath();
    [CompilerGeneratedAttribute]
public void set_RelativeMountPath(string value);
    [CompilerGeneratedAttribute]
public string get_MountOptions();
    [CompilerGeneratedAttribute]
public void set_MountOptions(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.FileServersListByWorkspaceOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxResults>k__BackingField;
    [JsonIgnoreAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public FileServersListByWorkspaceOptions(Nullable`1<int> maxResults);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxResults();
    [CompilerGeneratedAttribute]
public void set_MaxResults(Nullable`1<int> value);
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.BatchAI.Fluent.Models.FileType>")]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.FileType : ExpandableStringEnum`1<FileType> {
    public static FileType File;
    public static FileType Directory;
    private static FileType();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.Models.HasMountVolumes.Definition.IWithMountVolumes`1 {
    public abstract virtual IBlank`1<ReturnT> DefineAzureBlobFileSystem();
    public abstract virtual IBlank`1<ReturnT> DefineAzureFileShare();
    public abstract virtual IBlank`1<ReturnT> DefineFileServer();
    public abstract virtual ReturnT WithUnmanagedFileSystem(string mountCommand, string relativeMountPath);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.HorovodSettings : object {
    [CompilerGeneratedAttribute]
private string <PythonScriptFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PythonInterpreterPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommandLineArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProcessCount>k__BackingField;
    [JsonPropertyAttribute]
public string PythonScriptFilePath { get; public set; }
    [JsonPropertyAttribute]
public string PythonInterpreterPath { get; public set; }
    [JsonPropertyAttribute]
public string CommandLineArgs { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ProcessCount { get; public set; }
    public HorovodSettings(string pythonScriptFilePath, string pythonInterpreterPath, string commandLineArgs, Nullable`1<int> processCount);
    [CompilerGeneratedAttribute]
public string get_PythonScriptFilePath();
    [CompilerGeneratedAttribute]
public void set_PythonScriptFilePath(string value);
    [CompilerGeneratedAttribute]
public string get_PythonInterpreterPath();
    [CompilerGeneratedAttribute]
public void set_PythonInterpreterPath(string value);
    [CompilerGeneratedAttribute]
public string get_CommandLineArgs();
    [CompilerGeneratedAttribute]
public void set_CommandLineArgs(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProcessCount();
    [CompilerGeneratedAttribute]
public void set_ProcessCount(Nullable`1<int> value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ImageReference : object {
    [CompilerGeneratedAttribute]
private string <Publisher>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Offer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Sku>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VirtualMachineImageId>k__BackingField;
    [JsonPropertyAttribute]
public string Publisher { get; public set; }
    [JsonPropertyAttribute]
public string Offer { get; public set; }
    [JsonPropertyAttribute]
public string Sku { get; public set; }
    [JsonPropertyAttribute]
public string Version { get; public set; }
    [JsonPropertyAttribute]
public string VirtualMachineImageId { get; public set; }
    public ImageReference(string publisher, string offer, string sku, string version, string virtualMachineImageId);
    [CompilerGeneratedAttribute]
public string get_Publisher();
    [CompilerGeneratedAttribute]
public void set_Publisher(string value);
    [CompilerGeneratedAttribute]
public string get_Offer();
    [CompilerGeneratedAttribute]
public void set_Offer(string value);
    [CompilerGeneratedAttribute]
public string get_Sku();
    [CompilerGeneratedAttribute]
public void set_Sku(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_VirtualMachineImageId();
    [CompilerGeneratedAttribute]
public void set_VirtualMachineImageId(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ImageSourceRegistry : object {
    [CompilerGeneratedAttribute]
private string <ServerUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Image>k__BackingField;
    [CompilerGeneratedAttribute]
private PrivateRegistryCredentials <Credentials>k__BackingField;
    [JsonPropertyAttribute]
public string ServerUrl { get; public set; }
    [JsonPropertyAttribute]
public string Image { get; public set; }
    [JsonPropertyAttribute]
public PrivateRegistryCredentials Credentials { get; public set; }
    public ImageSourceRegistry(string image, string serverUrl, PrivateRegistryCredentials credentials);
    [CompilerGeneratedAttribute]
public string get_ServerUrl();
    [CompilerGeneratedAttribute]
public void set_ServerUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(string value);
    [CompilerGeneratedAttribute]
public PrivateRegistryCredentials get_Credentials();
    [CompilerGeneratedAttribute]
public void set_Credentials(PrivateRegistryCredentials value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.InputDirectory : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public string Path { get; public set; }
    public InputDirectory(string id, string path);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.JobBasePropertiesConstraints : object {
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <MaxWallClockTime>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<TimeSpan> MaxWallClockTime { get; public set; }
    public JobBasePropertiesConstraints(Nullable`1<TimeSpan> maxWallClockTime);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_MaxWallClockTime();
    [CompilerGeneratedAttribute]
public void set_MaxWallClockTime(Nullable`1<TimeSpan> value);
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.JobCreateParameters : object {
    [CompilerGeneratedAttribute]
private JobPriority <SchedulingPriority>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceId <Cluster>k__BackingField;
    [CompilerGeneratedAttribute]
private MountVolumes <MountVolumes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private ContainerSettings <ContainerSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private CNTKsettings <CntkSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private PyTorchSettings <PyTorchSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private TensorFlowSettings <TensorFlowSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private CaffeSettings <CaffeSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private Caffe2Settings <Caffe2Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private ChainerSettings <ChainerSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private CustomToolkitSettings <CustomToolkitSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private CustomMpiSettings <CustomMpiSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private HorovodSettings <HorovodSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private JobPreparation <JobPreparation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StdOutErrPathPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<InputDirectory> <InputDirectories>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<OutputDirectory> <OutputDirectories>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<EnvironmentVariable> <EnvironmentVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<EnvironmentVariableWithSecretValue> <Secrets>k__BackingField;
    [CompilerGeneratedAttribute]
private JobBasePropertiesConstraints <Constraints>k__BackingField;
    [JsonPropertyAttribute]
public JobPriority SchedulingPriority { get; public set; }
    [JsonPropertyAttribute]
public ResourceId Cluster { get; public set; }
    [JsonPropertyAttribute]
public MountVolumes MountVolumes { get; public set; }
    [JsonPropertyAttribute]
public int NodeCount { get; public set; }
    [JsonPropertyAttribute]
public ContainerSettings ContainerSettings { get; public set; }
    [JsonPropertyAttribute]
public CNTKsettings CntkSettings { get; public set; }
    [JsonPropertyAttribute]
public PyTorchSettings PyTorchSettings { get; public set; }
    [JsonPropertyAttribute]
public TensorFlowSettings TensorFlowSettings { get; public set; }
    [JsonPropertyAttribute]
public CaffeSettings CaffeSettings { get; public set; }
    [JsonPropertyAttribute]
public Caffe2Settings Caffe2Settings { get; public set; }
    [JsonPropertyAttribute]
public ChainerSettings ChainerSettings { get; public set; }
    [JsonPropertyAttribute]
public CustomToolkitSettings CustomToolkitSettings { get; public set; }
    [JsonPropertyAttribute]
public CustomMpiSettings CustomMpiSettings { get; public set; }
    [JsonPropertyAttribute]
public HorovodSettings HorovodSettings { get; public set; }
    [JsonPropertyAttribute]
public JobPreparation JobPreparation { get; public set; }
    [JsonPropertyAttribute]
public string StdOutErrPathPrefix { get; public set; }
    [JsonPropertyAttribute]
public IList`1<InputDirectory> InputDirectories { get; public set; }
    [JsonPropertyAttribute]
public IList`1<OutputDirectory> OutputDirectories { get; public set; }
    [JsonPropertyAttribute]
public IList`1<EnvironmentVariable> EnvironmentVariables { get; public set; }
    [JsonPropertyAttribute]
public IList`1<EnvironmentVariableWithSecretValue> Secrets { get; public set; }
    [JsonPropertyAttribute]
public JobBasePropertiesConstraints Constraints { get; public set; }
    public JobCreateParameters(ResourceId cluster, int nodeCount, string stdOutErrPathPrefix, JobPriority schedulingPriority, MountVolumes mountVolumes, ContainerSettings containerSettings, CNTKsettings cntkSettings, PyTorchSettings pyTorchSettings, TensorFlowSettings tensorFlowSettings, CaffeSettings caffeSettings, Caffe2Settings caffe2Settings, ChainerSettings chainerSettings, CustomToolkitSettings customToolkitSettings, CustomMpiSettings customMpiSettings, HorovodSettings horovodSettings, JobPreparation jobPreparation, IList`1<InputDirectory> inputDirectories, IList`1<OutputDirectory> outputDirectories, IList`1<EnvironmentVariable> environmentVariables, IList`1<EnvironmentVariableWithSecretValue> secrets, JobBasePropertiesConstraints constraints);
    [CompilerGeneratedAttribute]
public JobPriority get_SchedulingPriority();
    [CompilerGeneratedAttribute]
public void set_SchedulingPriority(JobPriority value);
    [CompilerGeneratedAttribute]
public ResourceId get_Cluster();
    [CompilerGeneratedAttribute]
public void set_Cluster(ResourceId value);
    [CompilerGeneratedAttribute]
public MountVolumes get_MountVolumes();
    [CompilerGeneratedAttribute]
public void set_MountVolumes(MountVolumes value);
    [CompilerGeneratedAttribute]
public int get_NodeCount();
    [CompilerGeneratedAttribute]
public void set_NodeCount(int value);
    [CompilerGeneratedAttribute]
public ContainerSettings get_ContainerSettings();
    [CompilerGeneratedAttribute]
public void set_ContainerSettings(ContainerSettings value);
    [CompilerGeneratedAttribute]
public CNTKsettings get_CntkSettings();
    [CompilerGeneratedAttribute]
public void set_CntkSettings(CNTKsettings value);
    [CompilerGeneratedAttribute]
public PyTorchSettings get_PyTorchSettings();
    [CompilerGeneratedAttribute]
public void set_PyTorchSettings(PyTorchSettings value);
    [CompilerGeneratedAttribute]
public TensorFlowSettings get_TensorFlowSettings();
    [CompilerGeneratedAttribute]
public void set_TensorFlowSettings(TensorFlowSettings value);
    [CompilerGeneratedAttribute]
public CaffeSettings get_CaffeSettings();
    [CompilerGeneratedAttribute]
public void set_CaffeSettings(CaffeSettings value);
    [CompilerGeneratedAttribute]
public Caffe2Settings get_Caffe2Settings();
    [CompilerGeneratedAttribute]
public void set_Caffe2Settings(Caffe2Settings value);
    [CompilerGeneratedAttribute]
public ChainerSettings get_ChainerSettings();
    [CompilerGeneratedAttribute]
public void set_ChainerSettings(ChainerSettings value);
    [CompilerGeneratedAttribute]
public CustomToolkitSettings get_CustomToolkitSettings();
    [CompilerGeneratedAttribute]
public void set_CustomToolkitSettings(CustomToolkitSettings value);
    [CompilerGeneratedAttribute]
public CustomMpiSettings get_CustomMpiSettings();
    [CompilerGeneratedAttribute]
public void set_CustomMpiSettings(CustomMpiSettings value);
    [CompilerGeneratedAttribute]
public HorovodSettings get_HorovodSettings();
    [CompilerGeneratedAttribute]
public void set_HorovodSettings(HorovodSettings value);
    [CompilerGeneratedAttribute]
public JobPreparation get_JobPreparation();
    [CompilerGeneratedAttribute]
public void set_JobPreparation(JobPreparation value);
    [CompilerGeneratedAttribute]
public string get_StdOutErrPathPrefix();
    [CompilerGeneratedAttribute]
public void set_StdOutErrPathPrefix(string value);
    [CompilerGeneratedAttribute]
public IList`1<InputDirectory> get_InputDirectories();
    [CompilerGeneratedAttribute]
public void set_InputDirectories(IList`1<InputDirectory> value);
    [CompilerGeneratedAttribute]
public IList`1<OutputDirectory> get_OutputDirectories();
    [CompilerGeneratedAttribute]
public void set_OutputDirectories(IList`1<OutputDirectory> value);
    [CompilerGeneratedAttribute]
public IList`1<EnvironmentVariable> get_EnvironmentVariables();
    [CompilerGeneratedAttribute]
public void set_EnvironmentVariables(IList`1<EnvironmentVariable> value);
    [CompilerGeneratedAttribute]
public IList`1<EnvironmentVariableWithSecretValue> get_Secrets();
    [CompilerGeneratedAttribute]
public void set_Secrets(IList`1<EnvironmentVariableWithSecretValue> value);
    [CompilerGeneratedAttribute]
public JobBasePropertiesConstraints get_Constraints();
    [CompilerGeneratedAttribute]
public void set_Constraints(JobBasePropertiesConstraints value);
    public virtual void Validate();
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.JobInner : Resource {
    [CompilerGeneratedAttribute]
private JobPriority <SchedulingPriority>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceId <Cluster>k__BackingField;
    [CompilerGeneratedAttribute]
private MountVolumes <MountVolumes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NodeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private ContainerSettings <ContainerSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private ToolType <ToolType>k__BackingField;
    [CompilerGeneratedAttribute]
private CNTKsettings <CntkSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private PyTorchSettings <PyTorchSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private TensorFlowSettings <TensorFlowSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private CaffeSettings <CaffeSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private Caffe2Settings <Caffe2Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private ChainerSettings <ChainerSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private CustomToolkitSettings <CustomToolkitSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private CustomMpiSettings <CustomMpiSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private HorovodSettings <HorovodSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private JobPreparation <JobPreparation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JobOutputDirectoryPathSegment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StdOutErrPathPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<InputDirectory> <InputDirectories>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<OutputDirectory> <OutputDirectories>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<EnvironmentVariable> <EnvironmentVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<EnvironmentVariableWithSecretValue> <Secrets>k__BackingField;
    [CompilerGeneratedAttribute]
private JobPropertiesConstraints <Constraints>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ProvisioningState <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ProvisioningStateTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ExecutionState <ExecutionState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ExecutionStateTransitionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private JobPropertiesExecutionInfo <ExecutionInfo>k__BackingField;
    [JsonPropertyAttribute]
public JobPriority SchedulingPriority { get; public set; }
    [JsonPropertyAttribute]
public ResourceId Cluster { get; public set; }
    [JsonPropertyAttribute]
public MountVolumes MountVolumes { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> NodeCount { get; public set; }
    [JsonPropertyAttribute]
public ContainerSettings ContainerSettings { get; public set; }
    [JsonPropertyAttribute]
public ToolType ToolType { get; public set; }
    [JsonPropertyAttribute]
public CNTKsettings CntkSettings { get; public set; }
    [JsonPropertyAttribute]
public PyTorchSettings PyTorchSettings { get; public set; }
    [JsonPropertyAttribute]
public TensorFlowSettings TensorFlowSettings { get; public set; }
    [JsonPropertyAttribute]
public CaffeSettings CaffeSettings { get; public set; }
    [JsonPropertyAttribute]
public Caffe2Settings Caffe2Settings { get; public set; }
    [JsonPropertyAttribute]
public ChainerSettings ChainerSettings { get; public set; }
    [JsonPropertyAttribute]
public CustomToolkitSettings CustomToolkitSettings { get; public set; }
    [JsonPropertyAttribute]
public CustomMpiSettings CustomMpiSettings { get; public set; }
    [JsonPropertyAttribute]
public HorovodSettings HorovodSettings { get; public set; }
    [JsonPropertyAttribute]
public JobPreparation JobPreparation { get; public set; }
    [JsonPropertyAttribute]
public string JobOutputDirectoryPathSegment { get; private set; }
    [JsonPropertyAttribute]
public string StdOutErrPathPrefix { get; public set; }
    [JsonPropertyAttribute]
public IList`1<InputDirectory> InputDirectories { get; public set; }
    [JsonPropertyAttribute]
public IList`1<OutputDirectory> OutputDirectories { get; public set; }
    [JsonPropertyAttribute]
public IList`1<EnvironmentVariable> EnvironmentVariables { get; public set; }
    [JsonPropertyAttribute]
public IList`1<EnvironmentVariableWithSecretValue> Secrets { get; public set; }
    [JsonPropertyAttribute]
public JobPropertiesConstraints Constraints { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; private set; }
    [JsonPropertyAttribute]
public ProvisioningState ProvisioningState { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> ProvisioningStateTransitionTime { get; private set; }
    [JsonPropertyAttribute]
public ExecutionState ExecutionState { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> ExecutionStateTransitionTime { get; private set; }
    [JsonPropertyAttribute]
public JobPropertiesExecutionInfo ExecutionInfo { get; public set; }
    public JobInner(string id, string name, string type, JobPriority schedulingPriority, ResourceId cluster, MountVolumes mountVolumes, Nullable`1<int> nodeCount, ContainerSettings containerSettings, ToolType toolType, CNTKsettings cntkSettings, PyTorchSettings pyTorchSettings, TensorFlowSettings tensorFlowSettings, CaffeSettings caffeSettings, Caffe2Settings caffe2Settings, ChainerSettings chainerSettings, CustomToolkitSettings customToolkitSettings, CustomMpiSettings customMpiSettings, HorovodSettings horovodSettings, JobPreparation jobPreparation, string jobOutputDirectoryPathSegment, string stdOutErrPathPrefix, IList`1<InputDirectory> inputDirectories, IList`1<OutputDirectory> outputDirectories, IList`1<EnvironmentVariable> environmentVariables, IList`1<EnvironmentVariableWithSecretValue> secrets, JobPropertiesConstraints constraints, Nullable`1<DateTime> creationTime, ProvisioningState provisioningState, Nullable`1<DateTime> provisioningStateTransitionTime, ExecutionState executionState, Nullable`1<DateTime> executionStateTransitionTime, JobPropertiesExecutionInfo executionInfo);
    [CompilerGeneratedAttribute]
public JobPriority get_SchedulingPriority();
    [CompilerGeneratedAttribute]
public void set_SchedulingPriority(JobPriority value);
    [CompilerGeneratedAttribute]
public ResourceId get_Cluster();
    [CompilerGeneratedAttribute]
public void set_Cluster(ResourceId value);
    [CompilerGeneratedAttribute]
public MountVolumes get_MountVolumes();
    [CompilerGeneratedAttribute]
public void set_MountVolumes(MountVolumes value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NodeCount();
    [CompilerGeneratedAttribute]
public void set_NodeCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public ContainerSettings get_ContainerSettings();
    [CompilerGeneratedAttribute]
public void set_ContainerSettings(ContainerSettings value);
    [CompilerGeneratedAttribute]
public ToolType get_ToolType();
    [CompilerGeneratedAttribute]
public void set_ToolType(ToolType value);
    [CompilerGeneratedAttribute]
public CNTKsettings get_CntkSettings();
    [CompilerGeneratedAttribute]
public void set_CntkSettings(CNTKsettings value);
    [CompilerGeneratedAttribute]
public PyTorchSettings get_PyTorchSettings();
    [CompilerGeneratedAttribute]
public void set_PyTorchSettings(PyTorchSettings value);
    [CompilerGeneratedAttribute]
public TensorFlowSettings get_TensorFlowSettings();
    [CompilerGeneratedAttribute]
public void set_TensorFlowSettings(TensorFlowSettings value);
    [CompilerGeneratedAttribute]
public CaffeSettings get_CaffeSettings();
    [CompilerGeneratedAttribute]
public void set_CaffeSettings(CaffeSettings value);
    [CompilerGeneratedAttribute]
public Caffe2Settings get_Caffe2Settings();
    [CompilerGeneratedAttribute]
public void set_Caffe2Settings(Caffe2Settings value);
    [CompilerGeneratedAttribute]
public ChainerSettings get_ChainerSettings();
    [CompilerGeneratedAttribute]
public void set_ChainerSettings(ChainerSettings value);
    [CompilerGeneratedAttribute]
public CustomToolkitSettings get_CustomToolkitSettings();
    [CompilerGeneratedAttribute]
public void set_CustomToolkitSettings(CustomToolkitSettings value);
    [CompilerGeneratedAttribute]
public CustomMpiSettings get_CustomMpiSettings();
    [CompilerGeneratedAttribute]
public void set_CustomMpiSettings(CustomMpiSettings value);
    [CompilerGeneratedAttribute]
public HorovodSettings get_HorovodSettings();
    [CompilerGeneratedAttribute]
public void set_HorovodSettings(HorovodSettings value);
    [CompilerGeneratedAttribute]
public JobPreparation get_JobPreparation();
    [CompilerGeneratedAttribute]
public void set_JobPreparation(JobPreparation value);
    [CompilerGeneratedAttribute]
public string get_JobOutputDirectoryPathSegment();
    [CompilerGeneratedAttribute]
private void set_JobOutputDirectoryPathSegment(string value);
    [CompilerGeneratedAttribute]
public string get_StdOutErrPathPrefix();
    [CompilerGeneratedAttribute]
public void set_StdOutErrPathPrefix(string value);
    [CompilerGeneratedAttribute]
public IList`1<InputDirectory> get_InputDirectories();
    [CompilerGeneratedAttribute]
public void set_InputDirectories(IList`1<InputDirectory> value);
    [CompilerGeneratedAttribute]
public IList`1<OutputDirectory> get_OutputDirectories();
    [CompilerGeneratedAttribute]
public void set_OutputDirectories(IList`1<OutputDirectory> value);
    [CompilerGeneratedAttribute]
public IList`1<EnvironmentVariable> get_EnvironmentVariables();
    [CompilerGeneratedAttribute]
public void set_EnvironmentVariables(IList`1<EnvironmentVariable> value);
    [CompilerGeneratedAttribute]
public IList`1<EnvironmentVariableWithSecretValue> get_Secrets();
    [CompilerGeneratedAttribute]
public void set_Secrets(IList`1<EnvironmentVariableWithSecretValue> value);
    [CompilerGeneratedAttribute]
public JobPropertiesConstraints get_Constraints();
    [CompilerGeneratedAttribute]
public void set_Constraints(JobPropertiesConstraints value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CreationTime();
    [CompilerGeneratedAttribute]
private void set_CreationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ProvisioningState get_ProvisioningState();
    [CompilerGeneratedAttribute]
private void set_ProvisioningState(ProvisioningState value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ProvisioningStateTransitionTime();
    [CompilerGeneratedAttribute]
private void set_ProvisioningStateTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ExecutionState get_ExecutionState();
    [CompilerGeneratedAttribute]
private void set_ExecutionState(ExecutionState value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ExecutionStateTransitionTime();
    [CompilerGeneratedAttribute]
private void set_ExecutionStateTransitionTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public JobPropertiesExecutionInfo get_ExecutionInfo();
    [CompilerGeneratedAttribute]
public void set_ExecutionInfo(JobPropertiesExecutionInfo value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.JobPreparation : object {
    [CompilerGeneratedAttribute]
private string <CommandLine>k__BackingField;
    [JsonPropertyAttribute]
public string CommandLine { get; public set; }
    public JobPreparation(string commandLine);
    [CompilerGeneratedAttribute]
public string get_CommandLine();
    [CompilerGeneratedAttribute]
public void set_CommandLine(string value);
    public virtual void Validate();
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.BatchAI.Fluent.Models.JobPriority>")]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.JobPriority : ExpandableStringEnum`1<JobPriority> {
    public static JobPriority Low;
    public static JobPriority Normal;
    public static JobPriority High;
    private static JobPriority();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.JobPropertiesConstraints : object {
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <MaxWallClockTime>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<TimeSpan> MaxWallClockTime { get; public set; }
    public JobPropertiesConstraints(Nullable`1<TimeSpan> maxWallClockTime);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_MaxWallClockTime();
    [CompilerGeneratedAttribute]
public void set_MaxWallClockTime(Nullable`1<TimeSpan> value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.JobPropertiesExecutionInfo : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ExitCode>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<BatchAIError> <Errors>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<DateTime> StartTime { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> EndTime { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ExitCode { get; private set; }
    [JsonPropertyAttribute]
public IList`1<BatchAIError> Errors { get; private set; }
    public JobPropertiesExecutionInfo(Nullable`1<DateTime> startTime, Nullable`1<DateTime> endTime, Nullable`1<int> exitCode, IList`1<BatchAIError> errors);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartTime();
    [CompilerGeneratedAttribute]
private void set_StartTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EndTime();
    [CompilerGeneratedAttribute]
private void set_EndTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ExitCode();
    [CompilerGeneratedAttribute]
private void set_ExitCode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<BatchAIError> get_Errors();
    [CompilerGeneratedAttribute]
private void set_Errors(IList`1<BatchAIError> value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.JobsListByExperimentOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxResults>k__BackingField;
    [JsonIgnoreAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public JobsListByExperimentOptions(Nullable`1<int> maxResults);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxResults();
    [CompilerGeneratedAttribute]
public void set_MaxResults(Nullable`1<int> value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.JobsListOutputFilesOptions : object {
    [CompilerGeneratedAttribute]
private string <Outputdirectoryid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Directory>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Linkexpiryinminutes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxResults>k__BackingField;
    [JsonIgnoreAttribute]
public string Outputdirectoryid { get; public set; }
    [JsonIgnoreAttribute]
public string Directory { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<int> Linkexpiryinminutes { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public JobsListOutputFilesOptions(string outputdirectoryid, string directory, Nullable`1<int> linkexpiryinminutes, Nullable`1<int> maxResults);
    [CompilerGeneratedAttribute]
public string get_Outputdirectoryid();
    [CompilerGeneratedAttribute]
public void set_Outputdirectoryid(string value);
    [CompilerGeneratedAttribute]
public string get_Directory();
    [CompilerGeneratedAttribute]
public void set_Directory(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Linkexpiryinminutes();
    [CompilerGeneratedAttribute]
public void set_Linkexpiryinminutes(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxResults();
    [CompilerGeneratedAttribute]
public void set_MaxResults(Nullable`1<int> value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.KeyVaultSecretReference : object {
    [CompilerGeneratedAttribute]
private ResourceId <SourceVault>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretUrl>k__BackingField;
    [JsonPropertyAttribute]
public ResourceId SourceVault { get; public set; }
    [JsonPropertyAttribute]
public string SecretUrl { get; public set; }
    public KeyVaultSecretReference(ResourceId sourceVault, string secretUrl);
    [CompilerGeneratedAttribute]
public ResourceId get_SourceVault();
    [CompilerGeneratedAttribute]
public void set_SourceVault(ResourceId value);
    [CompilerGeneratedAttribute]
public string get_SecretUrl();
    [CompilerGeneratedAttribute]
public void set_SecretUrl(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ManualScaleSettings : object {
    [CompilerGeneratedAttribute]
private int <TargetNodeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private DeallocationOption <NodeDeallocationOption>k__BackingField;
    [JsonPropertyAttribute]
public int TargetNodeCount { get; public set; }
    [JsonPropertyAttribute]
public DeallocationOption NodeDeallocationOption { get; public set; }
    public ManualScaleSettings(int targetNodeCount, DeallocationOption nodeDeallocationOption);
    [CompilerGeneratedAttribute]
public int get_TargetNodeCount();
    [CompilerGeneratedAttribute]
public void set_TargetNodeCount(int value);
    [CompilerGeneratedAttribute]
public DeallocationOption get_NodeDeallocationOption();
    [CompilerGeneratedAttribute]
public void set_NodeDeallocationOption(DeallocationOption value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.MountSettings : object {
    [CompilerGeneratedAttribute]
private string <MountPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileServerPublicIP>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileServerInternalIP>k__BackingField;
    [JsonPropertyAttribute]
public string MountPoint { get; public set; }
    [JsonPropertyAttribute]
public string FileServerPublicIP { get; public set; }
    [JsonPropertyAttribute]
public string FileServerInternalIP { get; public set; }
    public MountSettings(string mountPoint, string fileServerPublicIP, string fileServerInternalIP);
    [CompilerGeneratedAttribute]
public string get_MountPoint();
    [CompilerGeneratedAttribute]
public void set_MountPoint(string value);
    [CompilerGeneratedAttribute]
public string get_FileServerPublicIP();
    [CompilerGeneratedAttribute]
public void set_FileServerPublicIP(string value);
    [CompilerGeneratedAttribute]
public string get_FileServerInternalIP();
    [CompilerGeneratedAttribute]
public void set_FileServerInternalIP(string value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.MountVolumes : object {
    [CompilerGeneratedAttribute]
private IList`1<AzureFileShareReference> <AzureFileShares>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<AzureBlobFileSystemReference> <AzureBlobFileSystems>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<FileServerReference> <FileServers>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<UnmanagedFileSystemReference> <UnmanagedFileSystems>k__BackingField;
    [JsonPropertyAttribute]
public IList`1<AzureFileShareReference> AzureFileShares { get; public set; }
    [JsonPropertyAttribute]
public IList`1<AzureBlobFileSystemReference> AzureBlobFileSystems { get; public set; }
    [JsonPropertyAttribute]
public IList`1<FileServerReference> FileServers { get; public set; }
    [JsonPropertyAttribute]
public IList`1<UnmanagedFileSystemReference> UnmanagedFileSystems { get; public set; }
    public MountVolumes(IList`1<AzureFileShareReference> azureFileShares, IList`1<AzureBlobFileSystemReference> azureBlobFileSystems, IList`1<FileServerReference> fileServers, IList`1<UnmanagedFileSystemReference> unmanagedFileSystems);
    [CompilerGeneratedAttribute]
public IList`1<AzureFileShareReference> get_AzureFileShares();
    [CompilerGeneratedAttribute]
public void set_AzureFileShares(IList`1<AzureFileShareReference> value);
    [CompilerGeneratedAttribute]
public IList`1<AzureBlobFileSystemReference> get_AzureBlobFileSystems();
    [CompilerGeneratedAttribute]
public void set_AzureBlobFileSystems(IList`1<AzureBlobFileSystemReference> value);
    [CompilerGeneratedAttribute]
public IList`1<FileServerReference> get_FileServers();
    [CompilerGeneratedAttribute]
public void set_FileServers(IList`1<FileServerReference> value);
    [CompilerGeneratedAttribute]
public IList`1<UnmanagedFileSystemReference> get_UnmanagedFileSystems();
    [CompilerGeneratedAttribute]
public void set_UnmanagedFileSystems(IList`1<UnmanagedFileSystemReference> value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.NameValuePair : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    public NameValuePair(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.NodeSetup : object {
    [CompilerGeneratedAttribute]
private SetupTask <SetupTask>k__BackingField;
    [CompilerGeneratedAttribute]
private MountVolumes <MountVolumes>k__BackingField;
    [CompilerGeneratedAttribute]
private PerformanceCountersSettings <PerformanceCountersSettings>k__BackingField;
    [JsonPropertyAttribute]
public SetupTask SetupTask { get; public set; }
    [JsonPropertyAttribute]
public MountVolumes MountVolumes { get; public set; }
    [JsonPropertyAttribute]
public PerformanceCountersSettings PerformanceCountersSettings { get; public set; }
    public NodeSetup(SetupTask setupTask, MountVolumes mountVolumes, PerformanceCountersSettings performanceCountersSettings);
    [CompilerGeneratedAttribute]
public SetupTask get_SetupTask();
    [CompilerGeneratedAttribute]
public void set_SetupTask(SetupTask value);
    [CompilerGeneratedAttribute]
public MountVolumes get_MountVolumes();
    [CompilerGeneratedAttribute]
public void set_MountVolumes(MountVolumes value);
    [CompilerGeneratedAttribute]
public PerformanceCountersSettings get_PerformanceCountersSettings();
    [CompilerGeneratedAttribute]
public void set_PerformanceCountersSettings(PerformanceCountersSettings value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.NodeStateCounts : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <IdleNodeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RunningNodeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PreparingNodeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <UnusableNodeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LeavingNodeCount>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> IdleNodeCount { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<int> RunningNodeCount { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<int> PreparingNodeCount { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<int> UnusableNodeCount { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<int> LeavingNodeCount { get; private set; }
    public NodeStateCounts(Nullable`1<int> idleNodeCount, Nullable`1<int> runningNodeCount, Nullable`1<int> preparingNodeCount, Nullable`1<int> unusableNodeCount, Nullable`1<int> leavingNodeCount);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_IdleNodeCount();
    [CompilerGeneratedAttribute]
private void set_IdleNodeCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RunningNodeCount();
    [CompilerGeneratedAttribute]
private void set_RunningNodeCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PreparingNodeCount();
    [CompilerGeneratedAttribute]
private void set_PreparingNodeCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_UnusableNodeCount();
    [CompilerGeneratedAttribute]
private void set_UnusableNodeCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LeavingNodeCount();
    [CompilerGeneratedAttribute]
private void set_LeavingNodeCount(Nullable`1<int> value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.OperationDisplay : object {
    [CompilerGeneratedAttribute]
private string <Provider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [JsonPropertyAttribute]
public string Provider { get; private set; }
    [JsonPropertyAttribute]
public string Operation { get; private set; }
    [JsonPropertyAttribute]
public string Resource { get; private set; }
    [JsonPropertyAttribute]
public string Description { get; private set; }
    public OperationDisplay(string provider, string operation, string resource, string description);
    [CompilerGeneratedAttribute]
public string get_Provider();
    [CompilerGeneratedAttribute]
private void set_Provider(string value);
    [CompilerGeneratedAttribute]
public string get_Operation();
    [CompilerGeneratedAttribute]
private void set_Operation(string value);
    [CompilerGeneratedAttribute]
public string get_Resource();
    [CompilerGeneratedAttribute]
private void set_Resource(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.OperationInner : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private OperationDisplay <Display>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Properties>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; private set; }
    [JsonPropertyAttribute]
public OperationDisplay Display { get; public set; }
    [JsonPropertyAttribute]
public string Origin { get; private set; }
    [JsonPropertyAttribute]
public object Properties { get; public set; }
    public OperationInner(string name, OperationDisplay display, string origin, object properties);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public OperationDisplay get_Display();
    [CompilerGeneratedAttribute]
public void set_Display(OperationDisplay value);
    [CompilerGeneratedAttribute]
public string get_Origin();
    [CompilerGeneratedAttribute]
private void set_Origin(string value);
    [CompilerGeneratedAttribute]
public object get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(object value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.OutputDirectory : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PathPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PathSuffix>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public string PathPrefix { get; public set; }
    [JsonPropertyAttribute]
public string PathSuffix { get; public set; }
    public OutputDirectory(string id, string pathPrefix, string pathSuffix);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_PathPrefix();
    [CompilerGeneratedAttribute]
public void set_PathPrefix(string value);
    [CompilerGeneratedAttribute]
public string get_PathSuffix();
    [CompilerGeneratedAttribute]
public void set_PathSuffix(string value);
    public virtual void Validate();
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.Models.OutputDirectorySettings.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.Models.OutputDirectorySettings.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.Models.OutputDirectorySettings.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.Models.OutputDirectorySettings.Definition.IWithPathPrefix`1 {
    public abstract virtual IWithAttach`1<ParentT> WithPathPrefix(string pathPrefix);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.Models.OutputDirectorySettings.Definition.IWithPathSuffix`1 {
    public abstract virtual IWithAttach`1<ParentT> WithPathSuffix(string pathSuffix);
}
[JsonObjectAttribute]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.Page`1 : object {
    [CompilerGeneratedAttribute]
private string <NextPageLink>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<T> <Items>k__BackingField;
    [JsonPropertyAttribute("nextLink")]
public string NextPageLink { get; private set; }
    [JsonPropertyAttribute("value")]
private IList`1<T> Items { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_NextPageLink();
    [CompilerGeneratedAttribute]
private void set_NextPageLink(string value);
    [CompilerGeneratedAttribute]
private IList`1<T> get_Items();
    [CompilerGeneratedAttribute]
private void set_Items(IList`1<T> value);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.PerformanceCountersSettings : object {
    [CompilerGeneratedAttribute]
private AppInsightsReference <AppInsightsReference>k__BackingField;
    [JsonPropertyAttribute]
public AppInsightsReference AppInsightsReference { get; public set; }
    public PerformanceCountersSettings(AppInsightsReference appInsightsReference);
    [CompilerGeneratedAttribute]
public AppInsightsReference get_AppInsightsReference();
    [CompilerGeneratedAttribute]
public void set_AppInsightsReference(AppInsightsReference value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.PrivateRegistryCredentials : object {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private KeyVaultSecretReference <PasswordSecretReference>k__BackingField;
    [JsonPropertyAttribute]
public string Username { get; public set; }
    [JsonPropertyAttribute]
public string Password { get; public set; }
    [JsonPropertyAttribute]
public KeyVaultSecretReference PasswordSecretReference { get; public set; }
    public PrivateRegistryCredentials(string user, string pass, KeyVaultSecretReference passwordSecretReference);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public KeyVaultSecretReference get_PasswordSecretReference();
    [CompilerGeneratedAttribute]
public void set_PasswordSecretReference(KeyVaultSecretReference value);
    public virtual void Validate();
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.BatchAI.Fluent.Models.ProvisioningState>")]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ProvisioningState : ExpandableStringEnum`1<ProvisioningState> {
    public static ProvisioningState Creating;
    public static ProvisioningState Succeeded;
    public static ProvisioningState Failed;
    public static ProvisioningState Deleting;
    private static ProvisioningState();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.PyTorchSettings : object {
    [CompilerGeneratedAttribute]
private string <PythonScriptFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PythonInterpreterPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommandLineArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProcessCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommunicationBackend>k__BackingField;
    [JsonPropertyAttribute]
public string PythonScriptFilePath { get; public set; }
    [JsonPropertyAttribute]
public string PythonInterpreterPath { get; public set; }
    [JsonPropertyAttribute]
public string CommandLineArgs { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ProcessCount { get; public set; }
    [JsonPropertyAttribute]
public string CommunicationBackend { get; public set; }
    public PyTorchSettings(string pythonScriptFilePath, string pythonInterpreterPath, string commandLineArgs, Nullable`1<int> processCount, string communicationBackend);
    [CompilerGeneratedAttribute]
public string get_PythonScriptFilePath();
    [CompilerGeneratedAttribute]
public void set_PythonScriptFilePath(string value);
    [CompilerGeneratedAttribute]
public string get_PythonInterpreterPath();
    [CompilerGeneratedAttribute]
public void set_PythonInterpreterPath(string value);
    [CompilerGeneratedAttribute]
public string get_CommandLineArgs();
    [CompilerGeneratedAttribute]
public void set_CommandLineArgs(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProcessCount();
    [CompilerGeneratedAttribute]
public void set_ProcessCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_CommunicationBackend();
    [CompilerGeneratedAttribute]
public void set_CommunicationBackend(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.RemoteLoginInformation : object {
    [CompilerGeneratedAttribute]
private string <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IpAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Port>k__BackingField;
    [JsonPropertyAttribute]
public string NodeId { get; private set; }
    [JsonPropertyAttribute]
public string IpAddress { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<double> Port { get; private set; }
    public RemoteLoginInformation(string nodeId, string ipAddress, Nullable`1<double> port);
    [CompilerGeneratedAttribute]
public string get_NodeId();
    [CompilerGeneratedAttribute]
private void set_NodeId(string value);
    [CompilerGeneratedAttribute]
public string get_IpAddress();
    [CompilerGeneratedAttribute]
private void set_IpAddress(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Port();
    [CompilerGeneratedAttribute]
private void set_Port(Nullable`1<double> value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ResourceId : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; public set; }
    public ResourceId(string id);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ScaleSettings : object {
    [CompilerGeneratedAttribute]
private ManualScaleSettings <Manual>k__BackingField;
    [CompilerGeneratedAttribute]
private AutoScaleSettings <AutoScale>k__BackingField;
    [JsonPropertyAttribute]
public ManualScaleSettings Manual { get; public set; }
    [JsonPropertyAttribute]
public AutoScaleSettings AutoScale { get; public set; }
    public ScaleSettings(ManualScaleSettings manual, AutoScaleSettings autoScale);
    [CompilerGeneratedAttribute]
public ManualScaleSettings get_Manual();
    [CompilerGeneratedAttribute]
public void set_Manual(ManualScaleSettings value);
    [CompilerGeneratedAttribute]
public AutoScaleSettings get_AutoScale();
    [CompilerGeneratedAttribute]
public void set_AutoScale(AutoScaleSettings value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.SetupTask : object {
    [CompilerGeneratedAttribute]
private string <CommandLine>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<EnvironmentVariable> <EnvironmentVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<EnvironmentVariableWithSecretValue> <Secrets>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StdOutErrPathPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StdOutErrPathSuffix>k__BackingField;
    [JsonPropertyAttribute]
public string CommandLine { get; public set; }
    [JsonPropertyAttribute]
public IList`1<EnvironmentVariable> EnvironmentVariables { get; public set; }
    [JsonPropertyAttribute]
public IList`1<EnvironmentVariableWithSecretValue> Secrets { get; public set; }
    [JsonPropertyAttribute]
public string StdOutErrPathPrefix { get; public set; }
    [JsonPropertyAttribute]
public string StdOutErrPathSuffix { get; private set; }
    public SetupTask(string commandLine, string stdOutErrPathPrefix, IList`1<EnvironmentVariable> environmentVariables, IList`1<EnvironmentVariableWithSecretValue> secrets, string stdOutErrPathSuffix);
    [CompilerGeneratedAttribute]
public string get_CommandLine();
    [CompilerGeneratedAttribute]
public void set_CommandLine(string value);
    [CompilerGeneratedAttribute]
public IList`1<EnvironmentVariable> get_EnvironmentVariables();
    [CompilerGeneratedAttribute]
public void set_EnvironmentVariables(IList`1<EnvironmentVariable> value);
    [CompilerGeneratedAttribute]
public IList`1<EnvironmentVariableWithSecretValue> get_Secrets();
    [CompilerGeneratedAttribute]
public void set_Secrets(IList`1<EnvironmentVariableWithSecretValue> value);
    [CompilerGeneratedAttribute]
public string get_StdOutErrPathPrefix();
    [CompilerGeneratedAttribute]
public void set_StdOutErrPathPrefix(string value);
    [CompilerGeneratedAttribute]
public string get_StdOutErrPathSuffix();
    [CompilerGeneratedAttribute]
private void set_StdOutErrPathSuffix(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.SshConfiguration : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <PublicIPsToAllow>k__BackingField;
    [CompilerGeneratedAttribute]
private UserAccountSettings <UserAccountSettings>k__BackingField;
    [JsonPropertyAttribute]
public IList`1<string> PublicIPsToAllow { get; public set; }
    [JsonPropertyAttribute]
public UserAccountSettings UserAccountSettings { get; public set; }
    public SshConfiguration(UserAccountSettings userAccountSettings, IList`1<string> publicIPsToAllow);
    [CompilerGeneratedAttribute]
public IList`1<string> get_PublicIPsToAllow();
    [CompilerGeneratedAttribute]
public void set_PublicIPsToAllow(IList`1<string> value);
    [CompilerGeneratedAttribute]
public UserAccountSettings get_UserAccountSettings();
    [CompilerGeneratedAttribute]
public void set_UserAccountSettings(UserAccountSettings value);
    public virtual void Validate();
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.BatchAI.Fluent.Models.StorageAccountType>")]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.StorageAccountType : ExpandableStringEnum`1<StorageAccountType> {
    public static StorageAccountType StandardLRS;
    public static StorageAccountType PremiumLRS;
    private static StorageAccountType();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.TensorFlowSettings : object {
    [CompilerGeneratedAttribute]
private string <PythonScriptFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PythonInterpreterPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MasterCommandLineArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WorkerCommandLineArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParameterServerCommandLineArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <WorkerCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ParameterServerCount>k__BackingField;
    [JsonPropertyAttribute]
public string PythonScriptFilePath { get; public set; }
    [JsonPropertyAttribute]
public string PythonInterpreterPath { get; public set; }
    [JsonPropertyAttribute]
public string MasterCommandLineArgs { get; public set; }
    [JsonPropertyAttribute]
public string WorkerCommandLineArgs { get; public set; }
    [JsonPropertyAttribute]
public string ParameterServerCommandLineArgs { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> WorkerCount { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> ParameterServerCount { get; public set; }
    public TensorFlowSettings(string pythonScriptFilePath, string pythonInterpreterPath, string masterCommandLineArgs, string workerCommandLineArgs, string parameterServerCommandLineArgs, Nullable`1<int> workerCount, Nullable`1<int> parameterServerCount);
    [CompilerGeneratedAttribute]
public string get_PythonScriptFilePath();
    [CompilerGeneratedAttribute]
public void set_PythonScriptFilePath(string value);
    [CompilerGeneratedAttribute]
public string get_PythonInterpreterPath();
    [CompilerGeneratedAttribute]
public void set_PythonInterpreterPath(string value);
    [CompilerGeneratedAttribute]
public string get_MasterCommandLineArgs();
    [CompilerGeneratedAttribute]
public void set_MasterCommandLineArgs(string value);
    [CompilerGeneratedAttribute]
public string get_WorkerCommandLineArgs();
    [CompilerGeneratedAttribute]
public void set_WorkerCommandLineArgs(string value);
    [CompilerGeneratedAttribute]
public string get_ParameterServerCommandLineArgs();
    [CompilerGeneratedAttribute]
public void set_ParameterServerCommandLineArgs(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_WorkerCount();
    [CompilerGeneratedAttribute]
public void set_WorkerCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ParameterServerCount();
    [CompilerGeneratedAttribute]
public void set_ParameterServerCount(Nullable`1<int> value);
    public virtual void Validate();
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.BatchAI.Fluent.Models.ToolType>")]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.ToolType : ExpandableStringEnum`1<ToolType> {
    public static ToolType Cntk;
    public static ToolType Tensorflow;
    public static ToolType Caffe;
    public static ToolType Caffe2;
    public static ToolType Chainer;
    public static ToolType Horovod;
    public static ToolType Mpi;
    public static ToolType Custom;
    private static ToolType();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.UnmanagedFileSystemReference : object {
    [CompilerGeneratedAttribute]
private string <MountCommand>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelativeMountPath>k__BackingField;
    [JsonPropertyAttribute]
public string MountCommand { get; public set; }
    [JsonPropertyAttribute]
public string RelativeMountPath { get; public set; }
    public UnmanagedFileSystemReference(string mountCommand, string relativeMountPath);
    [CompilerGeneratedAttribute]
public string get_MountCommand();
    [CompilerGeneratedAttribute]
public void set_MountCommand(string value);
    [CompilerGeneratedAttribute]
public string get_RelativeMountPath();
    [CompilerGeneratedAttribute]
public void set_RelativeMountPath(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.UsageInner : object {
    [CompilerGeneratedAttribute]
private UsageUnit <Unit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CurrentValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Limit>k__BackingField;
    [CompilerGeneratedAttribute]
private UsageName <Name>k__BackingField;
    [JsonPropertyAttribute]
public UsageUnit Unit { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<int> CurrentValue { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<long> Limit { get; private set; }
    [JsonPropertyAttribute]
public UsageName Name { get; private set; }
    public UsageInner(UsageUnit unit, Nullable`1<int> currentValue, Nullable`1<long> limit, UsageName name);
    [CompilerGeneratedAttribute]
public UsageUnit get_Unit();
    [CompilerGeneratedAttribute]
private void set_Unit(UsageUnit value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CurrentValue();
    [CompilerGeneratedAttribute]
private void set_CurrentValue(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Limit();
    [CompilerGeneratedAttribute]
private void set_Limit(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public UsageName get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(UsageName value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.UsageName : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalizedValue>k__BackingField;
    [JsonPropertyAttribute]
public string Value { get; private set; }
    [JsonPropertyAttribute]
public string LocalizedValue { get; private set; }
    public UsageName(string value, string localizedValue);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_LocalizedValue();
    [CompilerGeneratedAttribute]
private void set_LocalizedValue(string value);
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.BatchAI.Fluent.Models.UsageUnit>")]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.UsageUnit : ExpandableStringEnum`1<UsageUnit> {
    public static UsageUnit Count;
    private static UsageUnit();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.UserAccountSettings : object {
    [CompilerGeneratedAttribute]
private string <AdminUserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminUserSshPublicKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminUserPassword>k__BackingField;
    [JsonPropertyAttribute]
public string AdminUserName { get; public set; }
    [JsonPropertyAttribute]
public string AdminUserSshPublicKey { get; public set; }
    [JsonPropertyAttribute]
public string AdminUserPassword { get; public set; }
    public UserAccountSettings(string adminUserName, string adminUserSshPublicKey, string adminUserPassword);
    [CompilerGeneratedAttribute]
public string get_AdminUserName();
    [CompilerGeneratedAttribute]
public void set_AdminUserName(string value);
    [CompilerGeneratedAttribute]
public string get_AdminUserSshPublicKey();
    [CompilerGeneratedAttribute]
public void set_AdminUserSshPublicKey(string value);
    [CompilerGeneratedAttribute]
public string get_AdminUserPassword();
    [CompilerGeneratedAttribute]
public void set_AdminUserPassword(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.VirtualMachineConfiguration : object {
    [CompilerGeneratedAttribute]
private ImageReference <ImageReference>k__BackingField;
    [JsonPropertyAttribute]
public ImageReference ImageReference { get; public set; }
    public VirtualMachineConfiguration(ImageReference imageReference);
    [CompilerGeneratedAttribute]
public ImageReference get_ImageReference();
    [CompilerGeneratedAttribute]
public void set_ImageReference(ImageReference value);
    public virtual void Validate();
}
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Microsoft.Azure.Management.BatchAI.Fluent.Models.VmPriority : Enum {
    public int value__;
    [EnumMemberAttribute]
public static VmPriority Dedicated;
    [EnumMemberAttribute]
public static VmPriority Lowpriority;
}
[ExtensionAttribute]
internal static class Microsoft.Azure.Management.BatchAI.Fluent.Models.VmPriorityEnumExtension : object {
    [ExtensionAttribute]
internal static string ToSerializedValue(Nullable`1<VmPriority> value);
    [ExtensionAttribute]
internal static string ToSerializedValue(VmPriority value);
    [ExtensionAttribute]
internal static Nullable`1<VmPriority> ParseVmPriority(string value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.WorkspaceCreateParameters : object {
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Tags>k__BackingField;
    [JsonPropertyAttribute]
public string Location { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Tags { get; public set; }
    public WorkspaceCreateParameters(string location, IDictionary`2<string, string> tags);
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IDictionary`2<string, string> value);
    public virtual void Validate();
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.WorkspaceInner : Resource {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ProvisioningState <ProvisioningState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ProvisioningStateTransitionTime>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; private set; }
    [JsonPropertyAttribute]
public ProvisioningState ProvisioningState { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> ProvisioningStateTransitionTime { get; private set; }
    public WorkspaceInner(string location, string id, string name, string type, IDictionary`2<string, string> tags, Nullable`1<DateTime> creationTime, ProvisioningState provisioningState, Nullable`1<DateTime> provisioningStateTransitionTime);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CreationTime();
    [CompilerGeneratedAttribute]
private void set_CreationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ProvisioningState get_ProvisioningState();
    [CompilerGeneratedAttribute]
private void set_ProvisioningState(ProvisioningState value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ProvisioningStateTransitionTime();
    [CompilerGeneratedAttribute]
private void set_ProvisioningStateTransitionTime(Nullable`1<DateTime> value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.WorkspacesListByResourceGroupOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxResults>k__BackingField;
    [JsonIgnoreAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public WorkspacesListByResourceGroupOptions(Nullable`1<int> maxResults);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxResults();
    [CompilerGeneratedAttribute]
public void set_MaxResults(Nullable`1<int> value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.WorkspacesListOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxResults>k__BackingField;
    [JsonIgnoreAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public WorkspacesListOptions(Nullable`1<int> maxResults);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxResults();
    [CompilerGeneratedAttribute]
public void set_MaxResults(Nullable`1<int> value);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.Models.WorkspaceUpdateParameters : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Tags>k__BackingField;
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Tags { get; public set; }
    public WorkspaceUpdateParameters(IDictionary`2<string, string> tags);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IDictionary`2<string, string> value);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTask.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTask.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTask.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTask.Definition.IWithCommandLine`1 {
    public abstract virtual IWithStdOutErrPath`1<ParentT> WithCommandLine(string commandLine);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTask.Definition.IWithEnvironmentVariable`1 {
    public abstract virtual IWithAttach`1<ParentT> WithEnvironmentVariable(string name, string value);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTask.Definition.IWithEnvironmentVariableSecretValue`1 {
    public abstract virtual IWithAttach`1<ParentT> WithEnvironmentVariableSecretValue(string name, string value);
    public abstract virtual IWithAttach`1<ParentT> WithEnvironmentVariableSecretValue(string name, string keyVaultId, string secretUrl);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTask.Definition.IWithStdOutErrPath`1 {
    public abstract virtual IWithAttach`1<ParentT> WithStdOutErrPath(string stdOutErrPathPrefix);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTaskImpl : IndexableWrapper`1<SetupTask> {
    private BatchAIClusterImpl parent;
    internal NodeSetupTaskImpl(SetupTask inner, BatchAIClusterImpl parent);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.ResourceManager.Fluent.Core.ChildResource.Definition.IInDefinition<Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithCreate>.Attach();
    private sealed virtual override IWithStdOutErrPath`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTask.Definition.IWithCommandLine<Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithCreate>.WithCommandLine(string commandLine);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTask.Definition.IWithStdOutErrPath<Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithCreate>.WithStdOutErrPath(string stdOutErrPathPrefix);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTask.Definition.IWithEnvironmentVariable<Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithCreate>.WithEnvironmentVariable(string name, string value);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTask.Definition.IWithEnvironmentVariableSecretValue<Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithCreate>.WithEnvironmentVariableSecretValue(string name, string value);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.NodeSetupTask.Definition.IWithEnvironmentVariableSecretValue<Microsoft.Azure.Management.BatchAI.Fluent.BatchAICluster.Definition.IWithCreate>.WithEnvironmentVariableSecretValue(string name, string keyVaultId, string secretUrl);
    public NodeSetupTaskImpl WithStdOutErrPath(string stdOutErrPathPrefix);
    private IList`1<EnvironmentVariable> EnsureEnvironmentVariables();
    private IList`1<EnvironmentVariableWithSecretValue> EnsureEnvironmentVariablesWithSecrets();
    public NodeSetupTaskImpl WithCommandLine(string commandLine);
    public NodeSetupTaskImpl WithEnvironmentVariable(string name, string value);
    public NodeSetupTaskImpl WithEnvironmentVariableSecretValue(string name, string value);
    public NodeSetupTaskImpl WithEnvironmentVariableSecretValue(string name, string keyVaultId, string secretUrl);
    public BatchAIClusterImpl Attach();
}
internal class Microsoft.Azure.Management.BatchAI.Fluent.Operations : object {
    [CompilerGeneratedAttribute]
private BatchAIManagementClient <Client>k__BackingField;
    public BatchAIManagementClient Client { get; private set; }
    internal Operations(BatchAIManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual BatchAIManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(BatchAIManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.Operations/<ListWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<OperationInner>>> ListWithHttpMessagesAsync(Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.Operations/<ListNextWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<OperationInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.BatchAI.Fluent.OperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.OperationsExtensions/<ListAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IPage`1<OperationInner>> ListAsync(IOperations operations, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.OperationsExtensions/<ListNextAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<OperationInner>> ListNextAsync(IOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
internal class Microsoft.Azure.Management.BatchAI.Fluent.OutputDirectorySettingsImpl : IndexableWrapper`1<OutputDirectory> {
    private BatchAIJobImpl parent;
    public OutputDirectorySettingsImpl(OutputDirectory inner, BatchAIJobImpl parent);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.ResourceManager.Fluent.Core.ChildResource.Definition.IInDefinition<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.Attach();
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.Models.OutputDirectorySettings.Definition.IWithPathPrefix<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithPathPrefix(string pathPrefix);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.Models.OutputDirectorySettings.Definition.IWithPathSuffix<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithPathSuffix(string pathSuffix);
    public BatchAIJobImpl Attach();
    public OutputDirectorySettingsImpl WithPathPrefix(string pathPrefix);
    public OutputDirectorySettingsImpl WithPathSuffix(string pathSuffix);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.OutputFileImpl : IndexableWrapper`1<File> {
    private long Microsoft.Azure.Management.BatchAI.Fluent.IOutputFile.ContentLength { get; }
    private DateTime Microsoft.Azure.Management.BatchAI.Fluent.IOutputFile.LastModified { get; }
    private string Microsoft.Azure.Management.BatchAI.Fluent.IOutputFile.DownloadUrl { get; }
    private FileType Microsoft.Azure.Management.BatchAI.Fluent.IOutputFile.FileType { get; }
    public string Name { get; }
    internal OutputFileImpl(File innerModel);
    private sealed virtual override long Microsoft.Azure.Management.BatchAI.Fluent.IOutputFile.get_ContentLength();
    private sealed virtual override DateTime Microsoft.Azure.Management.BatchAI.Fluent.IOutputFile.get_LastModified();
    private sealed virtual override string Microsoft.Azure.Management.BatchAI.Fluent.IOutputFile.get_DownloadUrl();
    private sealed virtual override FileType Microsoft.Azure.Management.BatchAI.Fluent.IOutputFile.get_FileType();
    public string DownloadUrl();
    public sealed virtual string get_Name();
    public long ContentLength();
    public FileType FileType();
    public DateTime LastModified();
}
internal class Microsoft.Azure.Management.BatchAI.Fluent.PyTorchImpl : IndexableWrapper`1<PyTorchSettings> {
    private BatchAIJobImpl parent;
    private IBatchAIJob Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasParent<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob>.Parent { get; }
    internal PyTorchImpl(PyTorchSettings inner, BatchAIJobImpl parent);
    private sealed virtual override IBatchAIJob Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasParent<Microsoft.Azure.Management.BatchAI.Fluent.IBatchAIJob>.get_Parent();
    private sealed virtual override IWithCreate Microsoft.Azure.Management.ResourceManager.Fluent.Core.ChildResource.Definition.IInDefinition<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.Attach();
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasCommandLineArgs.Definition.IWithCommandLineArgs<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.PyTorch.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithCommandLineArgs(string commandLineArgs);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasProcessCount.Definition.IWithProcessCount<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.PyTorch.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithProcessCount(int processCount);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.PyTorch.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithCommunicationBackend(string communicationBackend);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasPythonInterpreter.Definition.IWithPythonInterpreter<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.PyTorch.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithPythonInterpreterPath(string path);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.PyTorch.Definition.IWithPython<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithPythonScriptFile(string pythonScriptFilePath);
    public IWithCreate Attach();
    public IBatchAIJob Parent();
    public PyTorchImpl WithCommandLineArgs(string commandLineArgs);
    public PyTorchImpl WithCommunicationBackend(string communicationBackend);
    public PyTorchImpl WithProcessCount(int processCount);
    public PyTorchImpl WithPythonInterpreterPath(string path);
    public PyTorchImpl WithPythonScriptFile(string pythonScriptFilePath);
}
public class Microsoft.Azure.Management.BatchAI.Fluent.RemoteLoginInformationImpl : IndexableWrapper`1<RemoteLoginInformation> {
    private string Microsoft.Azure.Management.BatchAI.Fluent.IRemoteLoginInformation.IPAddress { get; }
    private string Microsoft.Azure.Management.BatchAI.Fluent.IRemoteLoginInformation.NodeId { get; }
    private int Microsoft.Azure.Management.BatchAI.Fluent.IRemoteLoginInformation.Port { get; }
    internal RemoteLoginInformationImpl(RemoteLoginInformation innerModel);
    private sealed virtual override string Microsoft.Azure.Management.BatchAI.Fluent.IRemoteLoginInformation.get_IPAddress();
    private sealed virtual override string Microsoft.Azure.Management.BatchAI.Fluent.IRemoteLoginInformation.get_NodeId();
    private sealed virtual override int Microsoft.Azure.Management.BatchAI.Fluent.IRemoteLoginInformation.get_Port();
    public string IPAddress();
    public string NodeId();
    public int Port();
}
public class Microsoft.Azure.Management.BatchAI.Fluent.TensorFlowImpl : IndexableWrapper`1<TensorFlowSettings> {
    private BatchAIJobImpl parent;
    internal TensorFlowImpl(TensorFlowSettings inner, BatchAIJobImpl parent);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.TensorFlow.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithWorkerCommandLineArgs(string commandLineArgs);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.TensorFlow.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithParameterServerCommandLineArgs(string commandLineArgs);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.TensorFlow.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithWorkerCount(int workerCount);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.TensorFlow.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithParameterServerCount(int parameterServerCount);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.TensorFlow.Definition.IWithMasterCommandLineArgs<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithMasterCommandLineArgs(string commandLineArgs);
    private sealed virtual override IWithMasterCommandLineArgs`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.TensorFlow.Definition.IWithPython<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>.WithPythonScriptFile(string pythonScriptFilePath);
    private sealed virtual override IWithAttach`1<IWithCreate> Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasPythonInterpreter.Definition.IWithPythonInterpreter<Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.TensorFlow.Definition.IWithAttach<Microsoft.Azure.Management.BatchAI.Fluent.BatchAIJob.Definition.IWithCreate>>.WithPythonInterpreterPath(string path);
    public TensorFlowImpl WithWorkerCount(int workerCount);
    public TensorFlowImpl WithMasterCommandLineArgs(string commandLineArgs);
    public TensorFlowImpl WithWorkerCommandLineArgs(string commandLineArgs);
    public sealed virtual IWithCreate Attach();
    public TensorFlowImpl WithParameterServerCount(int parameterServerCount);
    public TensorFlowImpl WithPythonInterpreterPath(string path);
    public TensorFlowImpl WithParameterServerCommandLineArgs(string commandLineArgs);
    public TensorFlowImpl WithPythonScriptFile(string pythonScriptFilePath);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe.Definition.IWithAttachAndPythonInterpreter`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe.Definition.IWithFileType`1 {
    public abstract virtual IWithAttach`1<ParentT> WithConfigFile(string configFilePath);
    public abstract virtual IWithAttachAndPythonInterpreter`1<ParentT> WithPythonScriptFile(string pythonScriptFilePath);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe2.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe2.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe2.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe2.Definition.IWithAttachAndPythonInterpreter`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Caffe2.Definition.IWithPython`1 {
    public abstract virtual IWithAttachAndPythonInterpreter`1<ParentT> WithPythonScriptFile(string pythonScriptFilePath);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Chainer.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Chainer.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Chainer.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Chainer.Definition.IWithAttachAndPythonInterpreter`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Chainer.Definition.IWithPython`1 {
    public abstract virtual IWithAttachAndPythonInterpreter`1<ParentT> WithPythonScriptFile(string pythonScriptFilePath);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CognitiveToolkit.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CognitiveToolkit.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CognitiveToolkit.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CognitiveToolkit.Definition.IWithAttachAndPythonInterpreter`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CognitiveToolkit.Definition.IWithLanguageType`1 {
    public abstract virtual IWithAttach`1<ParentT> WithBrainScript(string configFilePath);
    public abstract virtual IWithAttachAndPythonInterpreter`1<ParentT> WithPythonScriptFile(string pythonScriptFilePath);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CustomMpi.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CustomMpi.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CustomMpi.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CustomMpi.Definition.IWithAttachAndProcessCount`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CustomMpi.Definition.IWithCommandLine`1 {
    public abstract virtual IWithAttachAndProcessCount`1<ParentT> WithCommandLine(string commandLine);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CustomToolkit.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CustomToolkit.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CustomToolkit.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.CustomToolkit.Definition.IWithCommandLine`1 {
    public abstract virtual IWithAttach`1<ParentT> WithCommandLine(string commandLine);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasCommandLineArgs.Definition.IWithCommandLineArgs`1 {
    public abstract virtual ReturnT WithCommandLineArgs(string commandLineArgs);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasProcessCount.Definition.IWithProcessCount`1 {
    public abstract virtual ReturnT WithProcessCount(int processCount);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.HasPythonInterpreter.Definition.IWithPythonInterpreter`1 {
    public abstract virtual ReturnT WithPythonInterpreterPath(string path);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Horovod.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Horovod.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Horovod.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.Horovod.Definition.IWithPython`1 {
    public abstract virtual IWithAttach`1<ParentT> WithPythonScriptFile(string pythonScriptFilePath);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.ICaffe {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.ICaffe2 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.IChainer {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.ICognitiveToolkit {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.ICustomMpi {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.ICustomToolkit {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.IHorovod {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.IPyTorch {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.ITensorFlow {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.PyTorch.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.PyTorch.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.PyTorch.Definition.IWithAttach`1 {
    public abstract virtual IWithAttach`1<ParentT> WithCommunicationBackend(string communicationBackend);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.PyTorch.Definition.IWithPython`1 {
    public abstract virtual IWithAttach`1<ParentT> WithPythonScriptFile(string pythonScriptFilePath);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.TensorFlow.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.TensorFlow.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.TensorFlow.Definition.IWithAttach`1 {
    public abstract virtual IWithAttach`1<ParentT> WithWorkerCount(int workerCount);
    public abstract virtual IWithAttach`1<ParentT> WithWorkerCommandLineArgs(string commandLineArgs);
    public abstract virtual IWithAttach`1<ParentT> WithParameterServerCount(int parameterServerCount);
    public abstract virtual IWithAttach`1<ParentT> WithParameterServerCommandLineArgs(string commandLineArgs);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.TensorFlow.Definition.IWithMasterCommandLineArgs`1 {
    public abstract virtual IWithAttach`1<ParentT> WithMasterCommandLineArgs(string commandLineArgs);
}
public interface Microsoft.Azure.Management.BatchAI.Fluent.ToolTypeSettings.TensorFlow.Definition.IWithPython`1 {
    public abstract virtual IWithMasterCommandLineArgs`1<ParentT> WithPythonScriptFile(string pythonScriptFilePath);
}
internal class Microsoft.Azure.Management.BatchAI.Fluent.UsagesOperations : object {
    [CompilerGeneratedAttribute]
private BatchAIManagementClient <Client>k__BackingField;
    public BatchAIManagementClient Client { get; private set; }
    internal UsagesOperations(BatchAIManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual BatchAIManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(BatchAIManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.UsagesOperations/<ListWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<UsageInner>>> ListWithHttpMessagesAsync(string location, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.UsagesOperations/<ListNextWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<UsageInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.BatchAI.Fluent.UsagesOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.UsagesOperationsExtensions/<ListAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IPage`1<UsageInner>> ListAsync(IUsagesOperations operations, string location, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.UsagesOperationsExtensions/<ListNextAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<UsageInner>> ListNextAsync(IUsagesOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
internal class Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperations : object {
    [CompilerGeneratedAttribute]
private BatchAIManagementClient <Client>k__BackingField;
    public BatchAIManagementClient Client { get; private set; }
    internal WorkspacesOperations(BatchAIManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual BatchAIManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(BatchAIManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperations/<ListWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<WorkspaceInner>>> ListWithHttpMessagesAsync(WorkspacesListOptions workspacesListOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperations/<ListByResourceGroupWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<WorkspaceInner>>> ListByResourceGroupWithHttpMessagesAsync(string resourceGroupName, WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperations/<CreateWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse`1<WorkspaceInner>> CreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, WorkspaceCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperations/<UpdateWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<WorkspaceInner>> UpdateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, IDictionary`2<string, string> tags, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperations/<DeleteWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperations/<GetWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse`1<WorkspaceInner>> GetWithHttpMessagesAsync(string resourceGroupName, string workspaceName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperations/<BeginCreateWithHttpMessagesAsync>d__11")]
public sealed virtual Task`1<AzureOperationResponse`1<WorkspaceInner>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, WorkspaceCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperations/<BeginDeleteWithHttpMessagesAsync>d__12")]
public sealed virtual Task`1<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperations/<ListNextWithHttpMessagesAsync>d__13")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<WorkspaceInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperations/<ListByResourceGroupNextWithHttpMessagesAsync>d__14")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<WorkspaceInner>>> ListByResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperationsExtensions/<ListAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IPage`1<WorkspaceInner>> ListAsync(IWorkspacesOperations operations, WorkspacesListOptions workspacesListOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperationsExtensions/<ListByResourceGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<WorkspaceInner>> ListByResourceGroupAsync(IWorkspacesOperations operations, string resourceGroupName, WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperationsExtensions/<CreateAsync>d__2")]
[ExtensionAttribute]
public static Task`1<WorkspaceInner> CreateAsync(IWorkspacesOperations operations, string resourceGroupName, string workspaceName, WorkspaceCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperationsExtensions/<UpdateAsync>d__3")]
[ExtensionAttribute]
public static Task`1<WorkspaceInner> UpdateAsync(IWorkspacesOperations operations, string resourceGroupName, string workspaceName, IDictionary`2<string, string> tags, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperationsExtensions/<DeleteAsync>d__4")]
[ExtensionAttribute]
public static Task DeleteAsync(IWorkspacesOperations operations, string resourceGroupName, string workspaceName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperationsExtensions/<GetAsync>d__5")]
[ExtensionAttribute]
public static Task`1<WorkspaceInner> GetAsync(IWorkspacesOperations operations, string resourceGroupName, string workspaceName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperationsExtensions/<BeginCreateAsync>d__6")]
[ExtensionAttribute]
public static Task`1<WorkspaceInner> BeginCreateAsync(IWorkspacesOperations operations, string resourceGroupName, string workspaceName, WorkspaceCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperationsExtensions/<BeginDeleteAsync>d__7")]
[ExtensionAttribute]
public static Task BeginDeleteAsync(IWorkspacesOperations operations, string resourceGroupName, string workspaceName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperationsExtensions/<ListNextAsync>d__8")]
[ExtensionAttribute]
public static Task`1<IPage`1<WorkspaceInner>> ListNextAsync(IWorkspacesOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.BatchAI.Fluent.WorkspacesOperationsExtensions/<ListByResourceGroupNextAsync>d__9")]
[ExtensionAttribute]
public static Task`1<IPage`1<WorkspaceInner>> ListByResourceGroupNextAsync(IWorkspacesOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
