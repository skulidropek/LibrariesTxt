public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IBlank {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IDefinition {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithCreate {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithCredential {
    public abstract virtual IBlank`1<IWithCreate> DefinePasswordCredential(string name);
    public abstract virtual IBlank`1<IWithCreate> DefineCertificateCredential(string name);
    public abstract virtual IBlank`1<IWithCreate> DefineCertificateCredential();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithIdentifierUrl {
    public abstract virtual IWithCreate WithIdentifierUrl(string identifierUrl);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithMultiTenant {
    public abstract virtual IWithCreate WithAvailableToOtherTenants(bool availableToOtherTenants);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithReplyUrl {
    public abstract virtual IWithCreate WithReplyUrl(string replyUrl);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithSignOnUrl {
    public abstract virtual IWithCreate WithSignOnUrl(string signOnUrl);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IUpdate {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithCredential {
    public abstract virtual IBlank`1<IUpdate> DefinePasswordCredential(string name);
    public abstract virtual IBlank`1<IUpdate> DefineCertificateCredential(string name);
    public abstract virtual IBlank`1<IUpdate> DefineCertificateCredential();
    public abstract virtual IUpdate WithoutCredential(string name);
    public abstract virtual IUpdate WithoutCredentialByIdentifier(string keyIdentifier);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithIdentifierUrl {
    public abstract virtual IUpdate WithIdentifierUrl(string identifierUrl);
    public abstract virtual IUpdate WithoutIdentifierUrl(string identifierUrl);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithMultiTenant {
    public abstract virtual IUpdate WithAvailableToOtherTenants(bool availableToOtherTenants);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithReplyUrl {
    public abstract virtual IUpdate WithoutReplyUrl(string replyUrl);
    public abstract virtual IUpdate WithReplyUrl(string replyUrl);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithSignOnUrl {
    public abstract virtual IUpdate WithSignOnUrl(string signOnUrl);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplicationImpl : CreatableUpdatable`5<IActiveDirectoryApplication, ApplicationInner, ActiveDirectoryApplicationImpl, IHasId, IUpdate> {
    private GraphRbacManager manager;
    private ApplicationCreateParameters createParameters;
    private ApplicationUpdateParameters updateParameters;
    private Dictionary`2<string, IPasswordCredential> cachedPasswordCredentials;
    private Dictionary`2<string, ICertificateCredential> cachedCertificateCredentials;
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }
    private GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.Manager { get; }
    private IReadOnlyList`1<string> Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.ApplicationPermissions { get; }
    private ISet`1<string> Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.IdentifierUris { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.ApplicationId { get; }
    private IReadOnlyDictionary`2<string, ICertificateCredential> Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.CertificateCredentials { get; }
    private ISet`1<string> Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.ReplyUrls { get; }
    private bool Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.AvailableToOtherTenants { get; }
    private Uri Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.SignOnUrl { get; }
    private IReadOnlyDictionary`2<string, IPasswordCredential> Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.PasswordCredentials { get; }
    internal ActiveDirectoryApplicationImpl(ApplicationInner innerObject, GraphRbacManager manager);
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.get_Id();
    private sealed virtual override GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.get_Manager();
    public ActiveDirectoryApplicationImpl WithAvailableToOtherTenants(bool availableToOtherTenants);
    public PasswordCredentialImpl`1<T> DefinePasswordCredential(string name);
    public IReadOnlyList`1<string> ApplicationPermissions();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplicationImpl/<RefreshCredentialsAsync>d__12")]
internal Task`1<IActiveDirectoryApplication> RefreshCredentialsAsync(CancellationToken cancellationToken);
    public ActiveDirectoryApplicationImpl WithIdentifierUrl(string identifierUrl);
    public ActiveDirectoryApplicationImpl WithSignOnUrl(string signOnUrl);
    public ISet`1<string> ReplyUrls();
    public IUpdate WithoutIdentifierUrl(string identifierUrl);
    public IReadOnlyDictionary`2<string, ICertificateCredential> CertificateCredentials();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplicationImpl/<GetInnerAsync>d__19")]
protected virtual Task`1<ApplicationInner> GetInnerAsync(CancellationToken cancellationToken);
    public bool AvailableToOtherTenants();
    public IReadOnlyDictionary`2<string, IPasswordCredential> PasswordCredentials();
    public ActiveDirectoryApplicationImpl WithPasswordCredential(PasswordCredentialImpl`1<T> credential);
    public ISet`1<string> IdentifierUris();
    public string Id();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplicationImpl/<CreateResourceAsync>d__25")]
public virtual Task`1<IActiveDirectoryApplication> CreateResourceAsync(CancellationToken cancellationToken);
    public GraphRbacManager Manager();
    public bool IsInCreateMode();
    public CertificateCredentialImpl`1<T> DefineCertificateCredential(string name);
    public CertificateCredentialImpl`1<T> DefineCertificateCredential();
    public ActiveDirectoryApplicationImpl WithCertificateCredential(CertificateCredentialImpl`1<T> credential);
    public Uri SignOnUrl();
    public ActiveDirectoryApplicationImpl WithoutReplyUrl(string replyUrl);
    public ActiveDirectoryApplicationImpl WithoutCredential(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplicationImpl/<RefreshAsync>d__34")]
public virtual Task`1<IActiveDirectoryApplication> RefreshAsync(CancellationToken cancellationToken);
    public string ApplicationId();
    public ActiveDirectoryApplicationImpl WithReplyUrl(string replyUrl);
    public ActiveDirectoryApplicationImpl WithoutCredentialByIdentifier(string keyIdentifier);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithReplyUrl.WithoutReplyUrl(string replyUrl);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithReplyUrl.WithReplyUrl(string replyUrl);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithReplyUrl.WithReplyUrl(string replyUrl);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithMultiTenant.WithAvailableToOtherTenants(bool availableToOtherTenants);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithMultiTenant.WithAvailableToOtherTenants(bool availableToOtherTenants);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithSignOnUrl.WithSignOnUrl(string signOnUrl);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithSignOnUrl.WithSignOnUrl(string signOnUrl);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential<Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithCreate>.WithCertificateCredential(CertificateCredentialImpl`1<IWithCreate> credential);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential<Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IUpdate>.WithCertificateCredential(CertificateCredentialImpl`1<IUpdate> credential);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential<Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithCreate>.WithPasswordCredential(PasswordCredentialImpl`1<IWithCreate> credential);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential<Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IUpdate>.WithPasswordCredential(PasswordCredentialImpl`1<IUpdate> credential);
    private sealed virtual override IBlank`1<IUpdate> Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithCredential.DefineCertificateCredential(string name);
    private sealed virtual override IBlank`1<IUpdate> Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithCredential.DefineCertificateCredential();
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithCredential.WithoutCredential(string name);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithCredential.WithoutCredentialByIdentifier(string keyIdentifier);
    private sealed virtual override IBlank`1<IUpdate> Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithCredential.DefinePasswordCredential(string name);
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithCredential.DefineCertificateCredential(string name);
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithCredential.DefineCertificateCredential();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithCredential.DefinePasswordCredential(string name);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithIdentifierUrl.WithIdentifierUrl(string identifierUrl);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Update.IWithIdentifierUrl.WithoutIdentifierUrl(string identifierUrl);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IWithIdentifierUrl.WithIdentifierUrl(string identifierUrl);
    private sealed virtual override IReadOnlyList`1<string> Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.get_ApplicationPermissions();
    private sealed virtual override ISet`1<string> Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.get_IdentifierUris();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.get_ApplicationId();
    private sealed virtual override IReadOnlyDictionary`2<string, ICertificateCredential> Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.get_CertificateCredentials();
    private sealed virtual override ISet`1<string> Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.get_ReplyUrls();
    private sealed virtual override bool Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.get_AvailableToOtherTenants();
    private sealed virtual override Uri Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.get_SignOnUrl();
    private sealed virtual override IReadOnlyDictionary`2<string, IPasswordCredential> Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication.get_PasswordCredentials();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplicationsImpl : CreatableResources`3<IActiveDirectoryApplication, ActiveDirectoryApplicationImpl, ApplicationInner> {
    private IApplicationsOperations innerCollection;
    private GraphRbacManager manager;
    public IApplicationsOperations Inner { get; }
    private GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.Manager { get; }
    internal ActiveDirectoryApplicationsImpl(GraphRbacManager graphRbacManager);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplicationsImpl/<DeleteByIdAsync>d__2")]
public virtual Task DeleteByIdAsync(string id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplicationsImpl/<GetByNameAsync>d__3")]
public sealed virtual Task`1<IActiveDirectoryApplication> GetByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual IEnumerable`1<IActiveDirectoryApplication> List();
    public sealed virtual IApplicationsOperations get_Inner();
    private sealed virtual override GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.get_Manager();
    public ActiveDirectoryApplicationImpl GetById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplicationsImpl/<GetByIdAsync>d__10")]
public sealed virtual Task`1<IActiveDirectoryApplication> GetByIdAsync(string id, CancellationToken cancellationToken);
    public sealed virtual IActiveDirectoryApplication GetByName(string spn);
    public ActiveDirectoryApplicationImpl Define(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplicationsImpl/<ListAsync>d__14")]
public sealed virtual Task`1<IPagedCollection`1<IActiveDirectoryApplication>> ListAsync(bool loadAllPages, CancellationToken cancellationToken);
    protected virtual IActiveDirectoryApplication WrapModel(ApplicationInner applicationInner);
    protected virtual ActiveDirectoryApplicationImpl WrapModel(string name);
    public virtual void DeleteById(string id);
    private sealed virtual override IActiveDirectoryApplication Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById<Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication>.GetById(string id);
    private sealed virtual override IBlank Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating<Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplication.Definition.IBlank>.Define(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplicationsImpl/<<ListAsync>b__14_0>d")]
[CompilerGeneratedAttribute]
private Task`1<IPage`1<ApplicationInner>> <ListAsync>b__14_0(CancellationToken cancellation);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryApplicationsImpl/<<ListAsync>b__14_1>d")]
[CompilerGeneratedAttribute]
private Task`1<IActiveDirectoryApplication> <ListAsync>b__14_1(ApplicationInner inner, CancellationToken cancellation);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Definition.IBlank {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Definition.IDefinition {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Definition.IWithCreate {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Definition.IWithEmailAlias {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Definition.IWithEmailAliasBeta {
    public abstract virtual IWithCreate WithEmailAlias(string mailNickname);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Definition.IWithMember {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Definition.IWithMemberBeta {
    public abstract virtual IWithCreate WithMember(string objectId);
    public abstract virtual IWithCreate WithMember(IActiveDirectoryUser user);
    public abstract virtual IWithCreate WithMember(IActiveDirectoryGroup group);
    public abstract virtual IWithCreate WithMember(IServicePrincipal servicePrincipal);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Update.IUpdate {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Update.IWithMember {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Update.IWithMemberBeta {
    public abstract virtual IUpdate WithoutMember(string objectId);
    public abstract virtual IUpdate WithoutMember(IActiveDirectoryUser user);
    public abstract virtual IUpdate WithoutMember(IActiveDirectoryGroup group);
    public abstract virtual IUpdate WithoutMember(IServicePrincipal servicePrincipal);
    public abstract virtual IUpdate WithMember(string objectId);
    public abstract virtual IUpdate WithMember(IActiveDirectoryUser user);
    public abstract virtual IUpdate WithMember(IActiveDirectoryGroup group);
    public abstract virtual IUpdate WithMember(IServicePrincipal servicePrincipal);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroupImpl : CreatableUpdatable`5<IActiveDirectoryGroup, ADGroupInner, ActiveDirectoryGroupImpl, IHasId, IUpdate> {
    private GraphRbacManager manager;
    private GroupCreateParameters createParameters;
    private ISet`1<string> membersToAdd;
    private ISet`1<string> membersToRemove;
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }
    private GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.Manager { get; }
    private bool Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryGroup.SecurityEnabled { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryGroup.Mail { get; }
    internal ActiveDirectoryGroupImpl(ADGroupInner innerModel, GraphRbacManager manager);
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.get_Id();
    private sealed virtual override GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.get_Manager();
    public string Mail();
    public GraphRbacManager Manager();
    public string Id();
    public bool SecurityEnabled();
    public ActiveDirectoryGroupImpl WithEmailAlias(string mailNickname);
    public ActiveDirectoryGroupImpl WithMember(string objectId);
    public ActiveDirectoryGroupImpl WithMember(IActiveDirectoryUser user);
    public ActiveDirectoryGroupImpl WithMember(IActiveDirectoryGroup group);
    public ActiveDirectoryGroupImpl WithMember(IServicePrincipal servicePrincipal);
    public ActiveDirectoryGroupImpl WithoutMember(string objectId);
    public ActiveDirectoryGroupImpl WithoutMember(IActiveDirectoryUser user);
    public ActiveDirectoryGroupImpl WithoutMember(IActiveDirectoryGroup group);
    public ActiveDirectoryGroupImpl WithoutMember(IServicePrincipal servicePrincipal);
    public IEnumerable`1<IActiveDirectoryObject> ListMembers();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroupImpl/<ListMembersAsync>d__23")]
public Task`1<IPagedCollection`1<IActiveDirectoryObject>> ListMembersAsync(CancellationToken cancellationToken);
    private IActiveDirectoryObject WrapObjectInner(DirectoryObject inner);
    public bool IsInCreateMode();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroupImpl/<CreateResourceAsync>d__26")]
public virtual Task`1<IActiveDirectoryGroup> CreateResourceAsync(CancellationToken cancellationToken);
    protected virtual Task`1<ADGroupInner> GetInnerAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroupImpl/<Microsoft-Azure-Management-Graph-RBAC-Fluent-IActiveDirectoryGroup-ListMembersAsync>d__28")]
private sealed virtual override Task`1<IPagedCollection`1<IActiveDirectoryObject>> Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryGroup.ListMembersAsync(CancellationToken cancellationToken);
    private sealed virtual override bool Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryGroup.get_SecurityEnabled();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryGroup.get_Mail();
    private sealed virtual override IEnumerable`1<IActiveDirectoryObject> Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryGroup.ListMembers();
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Definition.IWithMemberBeta.WithMember(string objectId);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Definition.IWithMemberBeta.WithMember(IActiveDirectoryUser user);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Definition.IWithMemberBeta.WithMember(IActiveDirectoryGroup group);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Definition.IWithMemberBeta.WithMember(IServicePrincipal servicePrincipal);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Update.IWithMemberBeta.WithMember(string objectId);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Update.IWithMemberBeta.WithMember(IActiveDirectoryUser user);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Update.IWithMemberBeta.WithMember(IActiveDirectoryGroup group);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Update.IWithMemberBeta.WithMember(IServicePrincipal servicePrincipal);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Update.IWithMemberBeta.WithoutMember(string objectId);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Update.IWithMemberBeta.WithoutMember(IActiveDirectoryUser user);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Update.IWithMemberBeta.WithoutMember(IActiveDirectoryGroup group);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Update.IWithMemberBeta.WithoutMember(IServicePrincipal servicePrincipal);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroup.Definition.IWithEmailAliasBeta.WithEmailAlias(string mailNickname);
    [CompilerGeneratedAttribute]
private Task`1<IPage`1<DirectoryObject>> <ListMembers>b__22_0();
    [CompilerGeneratedAttribute]
private IPage`1<DirectoryObject> <ListMembers>b__22_1(string link);
    [CompilerGeneratedAttribute]
private IActiveDirectoryObject <ListMembers>b__22_2(DirectoryObject t);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroupImpl/<<ListMembersAsync>b__23_0>d")]
[CompilerGeneratedAttribute]
private Task`1<IPage`1<DirectoryObject>> <ListMembersAsync>b__23_0(CancellationToken cancellation);
    [CompilerGeneratedAttribute]
private IActiveDirectoryObject <ListMembersAsync>b__23_1(DirectoryObject inner);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroupsImpl : CreatableResources`3<IActiveDirectoryGroup, ActiveDirectoryGroupImpl, ADGroupInner> {
    private GraphRbacManager manager;
    public IGroupsOperations Inner { get; }
    private GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.Manager { get; }
    internal ActiveDirectoryGroupsImpl(GraphRbacManager manager);
    public ActiveDirectoryGroupImpl GetById(string objectId);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroupsImpl/<GetByIdAsync>d__3")]
public sealed virtual Task`1<IActiveDirectoryGroup> GetByIdAsync(string id, CancellationToken cancellationToken);
    public sealed virtual IActiveDirectoryGroup GetByName(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroupsImpl/<GetByNameAsync>d__5")]
public sealed virtual Task`1<IActiveDirectoryGroup> GetByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual IEnumerable`1<IActiveDirectoryGroup> List();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroupsImpl/<ListAsync>d__7")]
public sealed virtual Task`1<IPagedCollection`1<IActiveDirectoryGroup>> ListAsync(bool loadAllPages, CancellationToken cancellationToken);
    public sealed virtual IGroupsOperations get_Inner();
    private sealed virtual override GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.get_Manager();
    protected virtual IActiveDirectoryGroup WrapModel(ADGroupInner groupInner);
    private sealed virtual override IActiveDirectoryGroup Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById<Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryGroup>.GetById(string id);
    public sealed virtual IBlank Define(string name);
    public virtual void DeleteById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroupsImpl/<DeleteByIdAsync>d__16")]
public virtual Task DeleteByIdAsync(string id, CancellationToken cancellationToken);
    protected virtual ActiveDirectoryGroupImpl WrapModel(string name);
    [CompilerGeneratedAttribute]
private Task`1<IPage`1<ADGroupInner>> <List>b__6_0();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryGroupsImpl/<<ListAsync>b__7_0>d")]
[CompilerGeneratedAttribute]
private Task`1<IPage`1<ADGroupInner>> <ListAsync>b__7_0(CancellationToken cancellation);
    [CompilerGeneratedAttribute]
private IActiveDirectoryGroup <ListAsync>b__7_1(ADGroupInner inner);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IBlank {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IDefinition {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithAccontEnabled {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithAccontEnabledBeta {
    public abstract virtual IWithCreate WithAccountEnabled(bool accountEnabled);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithCreate {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithPassword {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithPasswordBeta {
    public abstract virtual IWithCreate WithPassword(string password);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithPromptToChangePasswordOnLogin {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithPromptToChangePasswordOnLoginBeta {
    public abstract virtual IWithCreate WithPromptToChangePasswordOnLogin(bool promptToChangePasswordOnLogin);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithUsageLocation {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithUsageLocationBeta {
    public abstract virtual IWithCreate WithUsageLocation(CountryISOCode usageLocation);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithUserPrincipalName {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithUserPrincipalNameBeta {
    public abstract virtual IWithPassword WithUserPrincipalName(string userPrincipalName);
    public abstract virtual IWithPassword WithEmailAlias(string emailAlias);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IUpdate {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IWithAccontEnabled {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IWithAccontEnabledBeta {
    public abstract virtual IUpdate WithAccountEnabled(bool accountEnabled);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IWithPassword {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IWithPasswordBeta {
    public abstract virtual IUpdate WithPassword(string password);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IWithPromptToChangePasswordOnLogin {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IWithPromptToChangePasswordOnLoginBeta {
    public abstract virtual IUpdate WithPromptToChangePasswordOnLogin(bool promptToChangePasswordOnLogin);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IWithUsageLocation {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IWithUsageLocationBeta {
    public abstract virtual IUpdate WithUsageLocation(CountryISOCode usageLocation);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUserImpl : CreatableUpdatable`5<IActiveDirectoryUser, UserInner, ActiveDirectoryUserImpl, IHasId, IUpdate> {
    private GraphRbacManager manager;
    private UserCreateParameters createParameters;
    private UserUpdateParameters updateParameters;
    private string emailAlias;
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }
    private GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.Manager { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser.UserPrincipalName { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser.MailNickname { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser.Mail { get; }
    private CountryISOCode Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser.UsageLocation { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser.SignInName { get; }
    internal ActiveDirectoryUserImpl(UserInner innerObject, GraphRbacManager manager);
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.get_Id();
    private sealed virtual override GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.get_Manager();
    public string Mail();
    public GraphRbacManager Manager();
    public string SignInName();
    public string Id();
    public string UserPrincipalName();
    public string MailNickname();
    public CountryISOCode UsageLocation();
    public ActiveDirectoryUserImpl WithUserPrincipalName(string userPrincipalName);
    public ActiveDirectoryUserImpl WithEmailAlias(string emailAlias);
    public ActiveDirectoryUserImpl WithPassword(string password);
    private void WithMailNickname(string mailNickname);
    public ActiveDirectoryUserImpl WithPromptToChangePasswordOnLogin(bool promptToChangePasswordOnLogin);
    public ActiveDirectoryUserImpl WithAccountEnabled(bool accountEnabled);
    public ActiveDirectoryUserImpl WithUsageLocation(CountryISOCode usageLocation);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUserImpl/<CreateResourceAsync>d__23")]
public virtual Task`1<IActiveDirectoryUser> CreateResourceAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUserImpl/<GetInnerAsync>d__24")]
protected virtual Task`1<UserInner> GetInnerAsync(CancellationToken cancellationToken);
    private bool IsInCreateMode();
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithAccontEnabledBeta.WithAccountEnabled(bool accountEnabled);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IWithAccontEnabledBeta.WithAccountEnabled(bool accountEnabled);
    private sealed virtual override IWithPassword Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithUserPrincipalNameBeta.WithEmailAlias(string emailAlias);
    private sealed virtual override IWithPassword Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithUserPrincipalNameBeta.WithUserPrincipalName(string userPrincipalName);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithPasswordBeta.WithPassword(string password);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IWithPasswordBeta.WithPassword(string password);
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser.get_UserPrincipalName();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser.get_MailNickname();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser.get_Mail();
    private sealed virtual override CountryISOCode Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser.get_UsageLocation();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser.get_SignInName();
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithPromptToChangePasswordOnLoginBeta.WithPromptToChangePasswordOnLogin(bool promptToChangePasswordOnLogin);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IWithPromptToChangePasswordOnLoginBeta.WithPromptToChangePasswordOnLogin(bool promptToChangePasswordOnLogin);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Definition.IWithUsageLocationBeta.WithUsageLocation(CountryISOCode usageLocation);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUser.Update.IWithUsageLocationBeta.WithUsageLocation(CountryISOCode usageLocation);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUsersImpl : CreatableResources`3<IActiveDirectoryUser, ActiveDirectoryUserImpl, UserInner> {
    private GraphRbacManager manager;
    public IUsersOperations Inner { get; }
    private GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.Manager { get; }
    internal ActiveDirectoryUsersImpl(GraphRbacManager manager);
    public GraphRbacManager Manager();
    public ActiveDirectoryUserImpl GetById(string objectId);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUsersImpl/<GetByIdAsync>d__3")]
public sealed virtual Task`1<IActiveDirectoryUser> GetByIdAsync(string id, CancellationToken cancellationToken);
    public ActiveDirectoryUserImpl GetByName(string upn);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUsersImpl/<GetByNameAsync>d__6")]
public sealed virtual Task`1<IActiveDirectoryUser> GetByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual IEnumerable`1<IActiveDirectoryUser> List();
    public sealed virtual IUsersOperations get_Inner();
    private sealed virtual override GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.get_Manager();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUsersImpl/<ListAsync>d__12")]
public sealed virtual Task`1<IPagedCollection`1<IActiveDirectoryUser>> ListAsync(bool loadAllPages, CancellationToken cancellationToken);
    protected virtual IActiveDirectoryUser WrapModel(UserInner userInner);
    private sealed virtual override IActiveDirectoryUser Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById<Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser>.GetById(string id);
    public sealed virtual IBlank Define(string name);
    public virtual void DeleteById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUsersImpl/<DeleteByIdAsync>d__17")]
public virtual Task DeleteByIdAsync(string id, CancellationToken cancellationToken);
    protected virtual ActiveDirectoryUserImpl WrapModel(string name);
    private sealed virtual override IActiveDirectoryUser Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByName<Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser>.GetByName(string name);
    [CompilerGeneratedAttribute]
private Task`1<IPage`1<UserInner>> <List>b__7_0();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ActiveDirectoryUsersImpl/<<ListAsync>b__12_0>d")]
[CompilerGeneratedAttribute]
private Task`1<IPage`1<UserInner>> <ListAsync>b__12_0(CancellationToken cancellation);
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations : object {
    [CompilerGeneratedAttribute]
private GraphRbacManagementClient <Client>k__BackingField;
    public GraphRbacManagementClient Client { get; private set; }
    internal ApplicationsOperations(GraphRbacManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual GraphRbacManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(GraphRbacManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<CreateWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<ApplicationInner>> CreateWithHttpMessagesAsync(ApplicationCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<ListWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ApplicationInner>>> ListWithHttpMessagesAsync(ODataQuery`1<ApplicationInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<DeleteWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string applicationObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<GetWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<ApplicationInner>> GetWithHttpMessagesAsync(string applicationObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<PatchWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse> PatchWithHttpMessagesAsync(string applicationObjectId, ApplicationUpdateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<ListOwnersWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnersWithHttpMessagesAsync(string applicationObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<AddOwnerWithHttpMessagesAsync>d__11")]
public sealed virtual Task`1<AzureOperationResponse> AddOwnerWithHttpMessagesAsync(string applicationObjectId, AddOwnerParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<RemoveOwnerWithHttpMessagesAsync>d__12")]
public sealed virtual Task`1<AzureOperationResponse> RemoveOwnerWithHttpMessagesAsync(string applicationObjectId, string ownerObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<ListKeyCredentialsWithHttpMessagesAsync>d__13")]
public sealed virtual Task`1<AzureOperationResponse`1<IEnumerable`1<KeyCredential>>> ListKeyCredentialsWithHttpMessagesAsync(string applicationObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<UpdateKeyCredentialsWithHttpMessagesAsync>d__14")]
public sealed virtual Task`1<AzureOperationResponse> UpdateKeyCredentialsWithHttpMessagesAsync(string applicationObjectId, IList`1<KeyCredential> value, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<ListPasswordCredentialsWithHttpMessagesAsync>d__15")]
public sealed virtual Task`1<AzureOperationResponse`1<IEnumerable`1<PasswordCredential>>> ListPasswordCredentialsWithHttpMessagesAsync(string applicationObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<UpdatePasswordCredentialsWithHttpMessagesAsync>d__16")]
public sealed virtual Task`1<AzureOperationResponse> UpdatePasswordCredentialsWithHttpMessagesAsync(string applicationObjectId, IList`1<PasswordCredential> value, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<GetServicePrincipalsIdByAppIdWithHttpMessagesAsync>d__17")]
public sealed virtual Task`1<AzureOperationResponse`1<ServicePrincipalObjectResultInner>> GetServicePrincipalsIdByAppIdWithHttpMessagesAsync(string applicationID, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<ListNextWithHttpMessagesAsync>d__18")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ApplicationInner>>> ListNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperations/<ListOwnersNextWithHttpMessagesAsync>d__19")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnersNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<CreateAsync>d__0")]
[ExtensionAttribute]
public static Task`1<ApplicationInner> CreateAsync(IApplicationsOperations operations, ApplicationCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<ListAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<ApplicationInner>> ListAsync(IApplicationsOperations operations, ODataQuery`1<ApplicationInner> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<DeleteAsync>d__2")]
[ExtensionAttribute]
public static Task DeleteAsync(IApplicationsOperations operations, string applicationObjectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<GetAsync>d__3")]
[ExtensionAttribute]
public static Task`1<ApplicationInner> GetAsync(IApplicationsOperations operations, string applicationObjectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<PatchAsync>d__4")]
[ExtensionAttribute]
public static Task PatchAsync(IApplicationsOperations operations, string applicationObjectId, ApplicationUpdateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<ListOwnersAsync>d__5")]
[ExtensionAttribute]
public static Task`1<IPage`1<DirectoryObject>> ListOwnersAsync(IApplicationsOperations operations, string applicationObjectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<AddOwnerAsync>d__6")]
[ExtensionAttribute]
public static Task AddOwnerAsync(IApplicationsOperations operations, string applicationObjectId, AddOwnerParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<RemoveOwnerAsync>d__7")]
[ExtensionAttribute]
public static Task RemoveOwnerAsync(IApplicationsOperations operations, string applicationObjectId, string ownerObjectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<ListKeyCredentialsAsync>d__8")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<KeyCredential>> ListKeyCredentialsAsync(IApplicationsOperations operations, string applicationObjectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<UpdateKeyCredentialsAsync>d__9")]
[ExtensionAttribute]
public static Task UpdateKeyCredentialsAsync(IApplicationsOperations operations, string applicationObjectId, IList`1<KeyCredential> value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<ListPasswordCredentialsAsync>d__10")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<PasswordCredential>> ListPasswordCredentialsAsync(IApplicationsOperations operations, string applicationObjectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<UpdatePasswordCredentialsAsync>d__11")]
[ExtensionAttribute]
public static Task UpdatePasswordCredentialsAsync(IApplicationsOperations operations, string applicationObjectId, IList`1<PasswordCredential> value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<GetServicePrincipalsIdByAppIdAsync>d__12")]
[ExtensionAttribute]
public static Task`1<ServicePrincipalObjectResultInner> GetServicePrincipalsIdByAppIdAsync(IApplicationsOperations operations, string applicationID, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<ListNextAsync>d__13")]
[ExtensionAttribute]
public static Task`1<IPage`1<ApplicationInner>> ListNextAsync(IApplicationsOperations operations, string nextLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ApplicationsOperationsExtensions/<ListOwnersNextAsync>d__14")]
[ExtensionAttribute]
public static Task`1<IPage`1<DirectoryObject>> ListOwnersNextAsync(IApplicationsOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.AuthorizationManagementClient : FluentServiceClientBase`1<AuthorizationManagementClient> {
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <SerializationSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <DeserializationSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AcceptLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LongRunningOperationRetryTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <GenerateClientRequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private IClassicAdministratorsOperations <ClassicAdministrators>k__BackingField;
    [CompilerGeneratedAttribute]
private IGlobalAdministratorOperations <GlobalAdministrator>k__BackingField;
    [CompilerGeneratedAttribute]
private IProviderOperationsMetadataOperations <ProviderOperationsMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IRoleAssignmentsOperations <RoleAssignments>k__BackingField;
    [CompilerGeneratedAttribute]
private IPermissionsOperations <Permissions>k__BackingField;
    [CompilerGeneratedAttribute]
private IRoleDefinitionsOperations <RoleDefinitions>k__BackingField;
    [CompilerGeneratedAttribute]
private IDenyAssignmentsOperations <DenyAssignments>k__BackingField;
    public JsonSerializerSettings SerializationSettings { get; private set; }
    public JsonSerializerSettings DeserializationSettings { get; private set; }
    public string SubscriptionId { get; public set; }
    public string AcceptLanguage { get; public set; }
    public Nullable`1<int> LongRunningOperationRetryTimeout { get; public set; }
    public Nullable`1<bool> GenerateClientRequestId { get; public set; }
    public IClassicAdministratorsOperations ClassicAdministrators { get; private set; }
    public IGlobalAdministratorOperations GlobalAdministrator { get; private set; }
    public IProviderOperationsMetadataOperations ProviderOperationsMetadata { get; private set; }
    public IRoleAssignmentsOperations RoleAssignments { get; private set; }
    public IPermissionsOperations Permissions { get; private set; }
    public IRoleDefinitionsOperations RoleDefinitions { get; private set; }
    public IDenyAssignmentsOperations DenyAssignments { get; private set; }
    public AuthorizationManagementClient(RestClient restClient);
    private AuthorizationManagementClient(RestClient restClient, HttpClient httpClient);
    [CompilerGeneratedAttribute]
public sealed virtual JsonSerializerSettings get_SerializationSettings();
    [CompilerGeneratedAttribute]
private void set_SerializationSettings(JsonSerializerSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual JsonSerializerSettings get_DeserializationSettings();
    [CompilerGeneratedAttribute]
private void set_DeserializationSettings(JsonSerializerSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SubscriptionId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AcceptLanguage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AcceptLanguage(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_LongRunningOperationRetryTimeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LongRunningOperationRetryTimeout(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_GenerateClientRequestId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GenerateClientRequestId(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public virtual IClassicAdministratorsOperations get_ClassicAdministrators();
    [CompilerGeneratedAttribute]
private void set_ClassicAdministrators(IClassicAdministratorsOperations value);
    [CompilerGeneratedAttribute]
public virtual IGlobalAdministratorOperations get_GlobalAdministrator();
    [CompilerGeneratedAttribute]
private void set_GlobalAdministrator(IGlobalAdministratorOperations value);
    [CompilerGeneratedAttribute]
public virtual IProviderOperationsMetadataOperations get_ProviderOperationsMetadata();
    [CompilerGeneratedAttribute]
private void set_ProviderOperationsMetadata(IProviderOperationsMetadataOperations value);
    [CompilerGeneratedAttribute]
public virtual IRoleAssignmentsOperations get_RoleAssignments();
    [CompilerGeneratedAttribute]
private void set_RoleAssignments(IRoleAssignmentsOperations value);
    [CompilerGeneratedAttribute]
public virtual IPermissionsOperations get_Permissions();
    [CompilerGeneratedAttribute]
private void set_Permissions(IPermissionsOperations value);
    [CompilerGeneratedAttribute]
public virtual IRoleDefinitionsOperations get_RoleDefinitions();
    [CompilerGeneratedAttribute]
private void set_RoleDefinitions(IRoleDefinitionsOperations value);
    [CompilerGeneratedAttribute]
public virtual IDenyAssignmentsOperations get_DenyAssignments();
    [CompilerGeneratedAttribute]
private void set_DenyAssignments(IDenyAssignmentsOperations value);
    public static AuthorizationManagementClient NewInstance(RestClient restClient);
    protected virtual void Initialize();
    private sealed virtual override HttpClient Microsoft.Rest.Azure.IAzureClient.get_HttpClient();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole : ExpandableStringEnum`1<BuiltInRole> {
    public static BuiltInRole ApiManagementServiceOperatorRole;
    public static BuiltInRole ApiManagementServiceReaderRole;
    public static BuiltInRole ApplicationInsightsComponentContributor;
    public static BuiltInRole AutomationOperator;
    public static BuiltInRole BackupContributor;
    public static BuiltInRole BackupOperator;
    public static BuiltInRole BackupReader;
    public static BuiltInRole BillingReader;
    public static BuiltInRole BiztalkContributor;
    public static BuiltInRole CleardbMysqlDbContributor;
    public static BuiltInRole Contributor;
    public static BuiltInRole DataFactoryContributor;
    public static BuiltInRole DevtestLabsUser;
    public static BuiltInRole DnsZoneContributor;
    public static BuiltInRole AzureCosmosDbAccountContributor;
    public static BuiltInRole IntelligentSystemsAccountContributor;
    public static BuiltInRole MonitoringReader;
    public static BuiltInRole MonitoringContributor;
    public static BuiltInRole NetworkContributor;
    public static BuiltInRole NewRelicApmAccountContributor;
    public static BuiltInRole Owner;
    public static BuiltInRole Reader;
    public static BuiltInRole RedisCacheContributor;
    public static BuiltInRole SchedulerJobCollectionsContributor;
    public static BuiltInRole SearchServiceContributor;
    public static BuiltInRole SecurityManager;
    public static BuiltInRole SqlDbContributor;
    public static BuiltInRole SqlSecurityManager;
    public static BuiltInRole SqlServerContributor;
    public static BuiltInRole ClassicStorageAccountContributor;
    public static BuiltInRole StorageAccountContributor;
    public static BuiltInRole UserAccessAdministrator;
    public static BuiltInRole ClassicVirtualMachineContributor;
    public static BuiltInRole VirtualMachineContributor;
    public static BuiltInRole ClassicNetworkContributor;
    public static BuiltInRole WebPlanContributor;
    public static BuiltInRole WebsiteContributor;
    private static BuiltInRole();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithAuthFile`1 {
    public abstract virtual IWithAuthFileCertificate`1<ParentT> WithAuthFileToExport(StreamWriter outputStream);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithAuthFileCertificate`1 {
    public abstract virtual IWithAuthFileCertificatePassword`1<ParentT> WithPrivateKeyFile(string privateKeyPath);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithAuthFileCertificatePassword`1 {
    public abstract virtual IWithAttach`1<ParentT> WithPrivateKeyPassword(string privateKeyPassword);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithCertificateType`1 {
    public abstract virtual IWithSymmetricKey`1<ParentT> WithSymmetricEncryption();
    public abstract virtual IWithPublicKey`1<ParentT> WithAsymmetricX509Certificate();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithDuration`1 {
    public abstract virtual IWithAttach`1<ParentT> WithDuration(TimeSpan duration);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithPublicKey`1 {
    public abstract virtual IWithAttach`1<ParentT> WithPublicKey(Byte[] certificate);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithStartDate`1 {
    public abstract virtual IWithAttach`1<ParentT> WithStartDate(DateTime startDate);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithSymmetricKey`1 {
    public abstract virtual IWithAttach`1<ParentT> WithSecretKey(Byte[] secret);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IBlank`1 {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IUpdateDefinition`1 {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithAuthFile`1 {
    public abstract virtual IWithAuthFileCertificate`1<ParentT> WithAuthFileToExport(StreamWriter outputStream);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithAuthFileCertificate`1 {
    public abstract virtual IWithAuthFileCertificatePassword`1<ParentT> WithPrivateKeyFile(string privateKeyPath);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithAuthFileCertificatePassword`1 {
    public abstract virtual IWithAttach`1<ParentT> WithPrivateKeyPassword(string privateKeyPassword);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithCertificateType`1 {
    public abstract virtual IWithSymmetricKey`1<ParentT> WithSymmetricEncryption();
    public abstract virtual IWithPublicKey`1<ParentT> WithAsymmetricX509Certificate();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithDuration`1 {
    public abstract virtual IWithAttach`1<ParentT> WithDuration(TimeSpan duration);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithPublicKey`1 {
    public abstract virtual IWithAttach`1<ParentT> WithPublicKey(Byte[] certificate);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithStartDate`1 {
    public abstract virtual IWithAttach`1<ParentT> WithStartDate(DateTime startDate);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithSymmetricKey`1 {
    public abstract virtual IWithAttach`1<ParentT> WithSecretKey(Byte[] secret);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl`1 : IndexableRefreshableWrapper`2<ICertificateCredential, KeyCredential> {
    private string name;
    private IHasCredential`1<T> parent;
    private StreamWriter authFile;
    private string privateKeyPath;
    private string privateKeyPassword;
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName.Name { get; }
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.ICertificateCredential.CustomKeyIdentifier { get; }
    private DateTime Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential.StartDate { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential.Value { get; }
    private DateTime Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential.EndDate { get; }
    internal CertificateCredentialImpl`1(KeyCredential keyCredential);
    internal CertificateCredentialImpl`1(string name, IHasCredential`1<T> parent, string customKeyIdentifier, Nullable`1<Guid> keyId);
    public CertificateCredentialImpl`1<T> WithSymmetricEncryption();
    public CertificateCredentialImpl`1<T> WithAsymmetricX509Certificate();
    public DateTime EndDate();
    public CertificateCredentialImpl`1<T> WithPrivateKeyPassword(string privateKeyPassword);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl`1/<GetInnerAsync>d__9")]
protected virtual Task`1<KeyCredential> GetInnerAsync(CancellationToken cancellationToken);
    public CertificateCredentialImpl`1<T> WithDuration(TimeSpan duration);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl`1/<ExportAuthFileAsync>d__11")]
internal Task ExportAuthFileAsync(ServicePrincipalImpl servicePrincipal, CancellationToken cancellationToken);
    public CertificateCredentialImpl`1<T> WithSecretKey(Byte[] secret);
    private string NormalizeAuthFileUrl(string url);
    private string NormalizeAuthFilePath(string path);
    public CertificateCredentialImpl`1<T> WithPrivateKeyFile(string privateKeyPath);
    public CertificateCredentialImpl`1<T> WithStartDate(DateTime startDate);
    public string Name();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredentialImpl`1/<RefreshAsync>d__20")]
public virtual Task`1<ICertificateCredential> RefreshAsync(CancellationToken cancellationToken);
    public string Id();
    public T Attach();
    public CertificateCredentialImpl`1<T> WithPublicKey(Byte[] certificate);
    public string Value();
    public CertificateCredentialImpl`1<T> WithAuthFileToExport(StreamWriter outputStream);
    public DateTime StartDate();
    public string CustomKeyIdentifier();
    private sealed virtual override IWithAuthFileCertificatePassword`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithAuthFileCertificate<T>.WithPrivateKeyFile(string privateKeyPath);
    private sealed virtual override IWithAuthFileCertificatePassword`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithAuthFileCertificate<T>.WithPrivateKeyFile(string privateKeyPath);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithPublicKey<T>.WithPublicKey(Byte[] certificate);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithPublicKey<T>.WithPublicKey(Byte[] certificate);
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName.get_Name();
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.get_Id();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.ICertificateCredential.get_CustomKeyIdentifier();
    private sealed virtual override IWithAuthFileCertificate`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithAuthFile<T>.WithAuthFileToExport(StreamWriter outputStream);
    private sealed virtual override IWithAuthFileCertificate`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithAuthFile<T>.WithAuthFileToExport(StreamWriter outputStream);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithDuration<T>.WithDuration(TimeSpan duration);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithDuration<T>.WithDuration(TimeSpan duration);
    private sealed virtual override DateTime Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential.get_StartDate();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential.get_Value();
    private sealed virtual override DateTime Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential.get_EndDate();
    private sealed virtual override T Microsoft.Azure.Management.ResourceManager.Fluent.Core.ChildResource.Update.IInUpdate<T>.Attach();
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithAuthFileCertificatePassword<T>.WithPrivateKeyPassword(string privateKeyPassword);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithAuthFileCertificatePassword<T>.WithPrivateKeyPassword(string privateKeyPassword);
    private sealed virtual override T Microsoft.Azure.Management.ResourceManager.Fluent.Core.ChildResource.Definition.IInDefinition<T>.Attach();
    private sealed virtual override IWithSymmetricKey`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithCertificateType<T>.WithSymmetricEncryption();
    private sealed virtual override IWithPublicKey`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithCertificateType<T>.WithAsymmetricX509Certificate();
    private sealed virtual override IWithSymmetricKey`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithCertificateType<T>.WithSymmetricEncryption();
    private sealed virtual override IWithPublicKey`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithCertificateType<T>.WithAsymmetricX509Certificate();
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithSymmetricKey<T>.WithSecretKey(Byte[] secret);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithSymmetricKey<T>.WithSecretKey(Byte[] secret);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.UpdateDefinition.IWithStartDate<T>.WithStartDate(DateTime startDate);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateCredential.Definition.IWithStartDate<T>.WithStartDate(DateTime startDate);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.CertificateType : ExpandableStringEnum`1<CertificateType> {
    public static CertificateType AsymmetricX509Cert;
    public static CertificateType Symmetric;
    private static CertificateType();
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.ClassicAdministratorsOperations : object {
    [CompilerGeneratedAttribute]
private AuthorizationManagementClient <Client>k__BackingField;
    public AuthorizationManagementClient Client { get; private set; }
    internal ClassicAdministratorsOperations(AuthorizationManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual AuthorizationManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(AuthorizationManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ClassicAdministratorsOperations/<ListWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ClassicAdministratorInner>>> ListWithHttpMessagesAsync(Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ClassicAdministratorsOperations/<ListNextWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ClassicAdministratorInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.ClassicAdministratorsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ClassicAdministratorsOperationsExtensions/<ListAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IPage`1<ClassicAdministratorInner>> ListAsync(IClassicAdministratorsOperations operations, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ClassicAdministratorsOperationsExtensions/<ListNextAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<ClassicAdministratorInner>> ListNextAsync(IClassicAdministratorsOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.DeletedApplicationsOperations : object {
    [CompilerGeneratedAttribute]
private GraphRbacManagementClient <Client>k__BackingField;
    public GraphRbacManagementClient Client { get; private set; }
    internal DeletedApplicationsOperations(GraphRbacManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual GraphRbacManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(GraphRbacManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DeletedApplicationsOperations/<RestoreWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<ApplicationInner>> RestoreWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DeletedApplicationsOperations/<ListWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ApplicationInner>>> ListWithHttpMessagesAsync(string filter, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DeletedApplicationsOperations/<HardDeleteWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse> HardDeleteWithHttpMessagesAsync(string applicationObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DeletedApplicationsOperations/<ListNextWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ApplicationInner>>> ListNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.DeletedApplicationsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DeletedApplicationsOperationsExtensions/<RestoreAsync>d__0")]
[ExtensionAttribute]
public static Task`1<ApplicationInner> RestoreAsync(IDeletedApplicationsOperations operations, string objectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DeletedApplicationsOperationsExtensions/<ListAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<ApplicationInner>> ListAsync(IDeletedApplicationsOperations operations, string filter, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DeletedApplicationsOperationsExtensions/<HardDeleteAsync>d__2")]
[ExtensionAttribute]
public static Task HardDeleteAsync(IDeletedApplicationsOperations operations, string applicationObjectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DeletedApplicationsOperationsExtensions/<ListNextAsync>d__3")]
[ExtensionAttribute]
public static Task`1<IPage`1<ApplicationInner>> ListNextAsync(IDeletedApplicationsOperations operations, string nextLink, CancellationToken cancellationToken);
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperations : object {
    [CompilerGeneratedAttribute]
private AuthorizationManagementClient <Client>k__BackingField;
    public AuthorizationManagementClient Client { get; private set; }
    internal DenyAssignmentsOperations(AuthorizationManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual AuthorizationManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(AuthorizationManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperations/<ListForResourceWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListForResourceWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, ODataQuery`1<DenyAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperations/<ListForResourceGroupWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListForResourceGroupWithHttpMessagesAsync(string resourceGroupName, ODataQuery`1<DenyAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperations/<ListWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListWithHttpMessagesAsync(ODataQuery`1<DenyAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperations/<GetWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<DenyAssignmentInner>> GetWithHttpMessagesAsync(string scope, string denyAssignmentId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperations/<GetByIdWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse`1<DenyAssignmentInner>> GetByIdWithHttpMessagesAsync(string denyAssignmentId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperations/<ListForScopeWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListForScopeWithHttpMessagesAsync(string scope, ODataQuery`1<DenyAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperations/<ListForResourceNextWithHttpMessagesAsync>d__11")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListForResourceNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperations/<ListForResourceGroupNextWithHttpMessagesAsync>d__12")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListForResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperations/<ListNextWithHttpMessagesAsync>d__13")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperations/<ListForScopeNextWithHttpMessagesAsync>d__14")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListForScopeNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperationsExtensions/<ListForResourceAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IPage`1<DenyAssignmentInner>> ListForResourceAsync(IDenyAssignmentsOperations operations, string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, ODataQuery`1<DenyAssignmentFilter> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperationsExtensions/<ListForResourceGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<DenyAssignmentInner>> ListForResourceGroupAsync(IDenyAssignmentsOperations operations, string resourceGroupName, ODataQuery`1<DenyAssignmentFilter> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperationsExtensions/<ListAsync>d__2")]
[ExtensionAttribute]
public static Task`1<IPage`1<DenyAssignmentInner>> ListAsync(IDenyAssignmentsOperations operations, ODataQuery`1<DenyAssignmentFilter> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperationsExtensions/<GetAsync>d__3")]
[ExtensionAttribute]
public static Task`1<DenyAssignmentInner> GetAsync(IDenyAssignmentsOperations operations, string scope, string denyAssignmentId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperationsExtensions/<GetByIdAsync>d__4")]
[ExtensionAttribute]
public static Task`1<DenyAssignmentInner> GetByIdAsync(IDenyAssignmentsOperations operations, string denyAssignmentId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperationsExtensions/<ListForScopeAsync>d__5")]
[ExtensionAttribute]
public static Task`1<IPage`1<DenyAssignmentInner>> ListForScopeAsync(IDenyAssignmentsOperations operations, string scope, ODataQuery`1<DenyAssignmentFilter> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperationsExtensions/<ListForResourceNextAsync>d__6")]
[ExtensionAttribute]
public static Task`1<IPage`1<DenyAssignmentInner>> ListForResourceNextAsync(IDenyAssignmentsOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperationsExtensions/<ListForResourceGroupNextAsync>d__7")]
[ExtensionAttribute]
public static Task`1<IPage`1<DenyAssignmentInner>> ListForResourceGroupNextAsync(IDenyAssignmentsOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperationsExtensions/<ListNextAsync>d__8")]
[ExtensionAttribute]
public static Task`1<IPage`1<DenyAssignmentInner>> ListNextAsync(IDenyAssignmentsOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DenyAssignmentsOperationsExtensions/<ListForScopeNextAsync>d__9")]
[ExtensionAttribute]
public static Task`1<IPage`1<DenyAssignmentInner>> ListForScopeNextAsync(IDenyAssignmentsOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.DomainsOperations : object {
    [CompilerGeneratedAttribute]
private GraphRbacManagementClient <Client>k__BackingField;
    public GraphRbacManagementClient Client { get; private set; }
    internal DomainsOperations(GraphRbacManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual GraphRbacManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(GraphRbacManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DomainsOperations/<ListWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<IEnumerable`1<DomainInner>>> ListWithHttpMessagesAsync(ODataQuery`1<UserInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DomainsOperations/<GetWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<DomainInner>> GetWithHttpMessagesAsync(string domainName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.DomainsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DomainsOperationsExtensions/<ListAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<DomainInner>> ListAsync(IDomainsOperations operations, ODataQuery`1<UserInner> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.DomainsOperationsExtensions/<GetAsync>d__1")]
[ExtensionAttribute]
public static Task`1<DomainInner> GetAsync(IDomainsOperations operations, string domainName, CancellationToken cancellationToken);
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.GlobalAdministratorOperations : object {
    [CompilerGeneratedAttribute]
private AuthorizationManagementClient <Client>k__BackingField;
    public AuthorizationManagementClient Client { get; private set; }
    internal GlobalAdministratorOperations(AuthorizationManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual AuthorizationManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(AuthorizationManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GlobalAdministratorOperations/<ElevateAccessWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse> ElevateAccessWithHttpMessagesAsync(Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.GlobalAdministratorOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GlobalAdministratorOperationsExtensions/<ElevateAccessAsync>d__0")]
[ExtensionAttribute]
public static Task ElevateAccessAsync(IGlobalAdministratorOperations operations, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManagementClient : FluentServiceClientBase`1<GraphRbacManagementClient> {
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <SerializationSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <DeserializationSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AcceptLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LongRunningOperationRetryTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <GenerateClientRequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private ISignedInUserOperations <SignedInUser>k__BackingField;
    [CompilerGeneratedAttribute]
private IApplicationsOperations <Applications>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeletedApplicationsOperations <DeletedApplications>k__BackingField;
    [CompilerGeneratedAttribute]
private IGroupsOperations <Groups>k__BackingField;
    [CompilerGeneratedAttribute]
private IServicePrincipalsOperations <ServicePrincipals>k__BackingField;
    [CompilerGeneratedAttribute]
private IUsersOperations <Users>k__BackingField;
    [CompilerGeneratedAttribute]
private IObjectsOperations <Objects>k__BackingField;
    [CompilerGeneratedAttribute]
private IDomainsOperations <Domains>k__BackingField;
    [CompilerGeneratedAttribute]
private IOAuth2PermissionGrantOperations <OAuth2PermissionGrant>k__BackingField;
    public JsonSerializerSettings SerializationSettings { get; private set; }
    public JsonSerializerSettings DeserializationSettings { get; private set; }
    public string ApiVersion { get; private set; }
    public string TenantID { get; public set; }
    public string AcceptLanguage { get; public set; }
    public Nullable`1<int> LongRunningOperationRetryTimeout { get; public set; }
    public Nullable`1<bool> GenerateClientRequestId { get; public set; }
    public ISignedInUserOperations SignedInUser { get; private set; }
    public IApplicationsOperations Applications { get; private set; }
    public IDeletedApplicationsOperations DeletedApplications { get; private set; }
    public IGroupsOperations Groups { get; private set; }
    public IServicePrincipalsOperations ServicePrincipals { get; private set; }
    public IUsersOperations Users { get; private set; }
    public IObjectsOperations Objects { get; private set; }
    public IDomainsOperations Domains { get; private set; }
    public IOAuth2PermissionGrantOperations OAuth2PermissionGrant { get; private set; }
    public GraphRbacManagementClient(RestClient restClient);
    public GraphRbacManagementClient(string baseUri, RestClient restClient);
    public GraphRbacManagementClient(string baseUri, RestClient restClient, HttpClient httpClient);
    [CompilerGeneratedAttribute]
public sealed virtual JsonSerializerSettings get_SerializationSettings();
    [CompilerGeneratedAttribute]
private void set_SerializationSettings(JsonSerializerSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual JsonSerializerSettings get_DeserializationSettings();
    [CompilerGeneratedAttribute]
private void set_DeserializationSettings(JsonSerializerSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
private void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TenantID();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TenantID(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AcceptLanguage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AcceptLanguage(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_LongRunningOperationRetryTimeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LongRunningOperationRetryTimeout(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_GenerateClientRequestId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GenerateClientRequestId(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public virtual ISignedInUserOperations get_SignedInUser();
    [CompilerGeneratedAttribute]
private void set_SignedInUser(ISignedInUserOperations value);
    [CompilerGeneratedAttribute]
public virtual IApplicationsOperations get_Applications();
    [CompilerGeneratedAttribute]
private void set_Applications(IApplicationsOperations value);
    [CompilerGeneratedAttribute]
public virtual IDeletedApplicationsOperations get_DeletedApplications();
    [CompilerGeneratedAttribute]
private void set_DeletedApplications(IDeletedApplicationsOperations value);
    [CompilerGeneratedAttribute]
public virtual IGroupsOperations get_Groups();
    [CompilerGeneratedAttribute]
private void set_Groups(IGroupsOperations value);
    [CompilerGeneratedAttribute]
public virtual IServicePrincipalsOperations get_ServicePrincipals();
    [CompilerGeneratedAttribute]
private void set_ServicePrincipals(IServicePrincipalsOperations value);
    [CompilerGeneratedAttribute]
public virtual IUsersOperations get_Users();
    [CompilerGeneratedAttribute]
private void set_Users(IUsersOperations value);
    [CompilerGeneratedAttribute]
public virtual IObjectsOperations get_Objects();
    [CompilerGeneratedAttribute]
private void set_Objects(IObjectsOperations value);
    [CompilerGeneratedAttribute]
public virtual IDomainsOperations get_Domains();
    [CompilerGeneratedAttribute]
private void set_Domains(IDomainsOperations value);
    [CompilerGeneratedAttribute]
public virtual IOAuth2PermissionGrantOperations get_OAuth2PermissionGrant();
    [CompilerGeneratedAttribute]
private void set_OAuth2PermissionGrant(IOAuth2PermissionGrantOperations value);
    public static GraphRbacManagementClient NewInstance(string baseUri, RestClient restClient);
    protected virtual void Initialize();
    private sealed virtual override HttpClient Microsoft.Rest.Azure.IAzureClient.get_HttpClient();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager : object {
    internal RestClient restClient;
    internal string tenantId;
    private IActiveDirectoryUsers users;
    private IActiveDirectoryGroups groups;
    private IActiveDirectoryApplications applications;
    private IServicePrincipals servicePrincipals;
    private IRoleDefinitions roleDefinitions;
    private IRoleAssignments roleAssignments;
    private IAuthorizationManagementClient roleInner;
    private IGraphRbacManagementClient inner;
    public IAuthorizationManagementClient RoleInner { get; }
    public IActiveDirectoryUsers Users { get; }
    public IActiveDirectoryGroups Groups { get; }
    public IActiveDirectoryApplications Applications { get; }
    public IServicePrincipals ServicePrincipals { get; }
    public IRoleDefinitions RoleDefinitions { get; }
    public IRoleAssignments RoleAssignments { get; }
    public IGraphRbacManagementClient Inner { get; }
    public GraphRbacManager(RestClient restClient, string tenantId);
    public static IGraphRbacManager Authenticate(AzureCredentials credentials, string tenantId);
    public static IGraphRbacManager Authenticate(RestClient restClient, string tenantId);
    public static IConfigurable Configure();
    public sealed virtual IAuthorizationManagementClient get_RoleInner();
    public sealed virtual IActiveDirectoryUsers get_Users();
    public sealed virtual IActiveDirectoryGroups get_Groups();
    public sealed virtual IActiveDirectoryApplications get_Applications();
    public sealed virtual IServicePrincipals get_ServicePrincipals();
    public sealed virtual IRoleDefinitions get_RoleDefinitions();
    public sealed virtual IRoleAssignments get_RoleAssignments();
    public sealed virtual IGraphRbacManagementClient get_Inner();
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations : object {
    [CompilerGeneratedAttribute]
private GraphRbacManagementClient <Client>k__BackingField;
    public GraphRbacManagementClient Client { get; private set; }
    internal GroupsOperations(GraphRbacManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual GraphRbacManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(GraphRbacManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<IsMemberOfWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<CheckGroupMembershipResultInner>> IsMemberOfWithHttpMessagesAsync(CheckGroupMembershipParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<RemoveMemberWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse> RemoveMemberWithHttpMessagesAsync(string groupObjectId, string memberObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<AddMemberWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse> AddMemberWithHttpMessagesAsync(string groupObjectId, GroupAddMemberParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<CreateWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<ADGroupInner>> CreateWithHttpMessagesAsync(GroupCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<ListWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ADGroupInner>>> ListWithHttpMessagesAsync(ODataQuery`1<ADGroupInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<GetGroupMembersWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> GetGroupMembersWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<GetWithHttpMessagesAsync>d__11")]
public sealed virtual Task`1<AzureOperationResponse`1<ADGroupInner>> GetWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<DeleteWithHttpMessagesAsync>d__12")]
public sealed virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<GetMemberGroupsWithHttpMessagesAsync>d__13")]
public sealed virtual Task`1<AzureOperationResponse`1<IEnumerable`1<string>>> GetMemberGroupsWithHttpMessagesAsync(string objectId, GroupGetMemberGroupsParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<ListOwnersWithHttpMessagesAsync>d__14")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnersWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<AddOwnerWithHttpMessagesAsync>d__15")]
public sealed virtual Task`1<AzureOperationResponse> AddOwnerWithHttpMessagesAsync(string objectId, AddOwnerParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<RemoveOwnerWithHttpMessagesAsync>d__16")]
public sealed virtual Task`1<AzureOperationResponse> RemoveOwnerWithHttpMessagesAsync(string objectId, string ownerObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<ListNextWithHttpMessagesAsync>d__17")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ADGroupInner>>> ListNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<GetGroupMembersNextWithHttpMessagesAsync>d__18")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> GetGroupMembersNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperations/<ListOwnersNextWithHttpMessagesAsync>d__19")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnersNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<IsMemberOfAsync>d__0")]
[ExtensionAttribute]
public static Task`1<CheckGroupMembershipResultInner> IsMemberOfAsync(IGroupsOperations operations, CheckGroupMembershipParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<RemoveMemberAsync>d__1")]
[ExtensionAttribute]
public static Task RemoveMemberAsync(IGroupsOperations operations, string groupObjectId, string memberObjectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<AddMemberAsync>d__2")]
[ExtensionAttribute]
public static Task AddMemberAsync(IGroupsOperations operations, string groupObjectId, GroupAddMemberParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<CreateAsync>d__3")]
[ExtensionAttribute]
public static Task`1<ADGroupInner> CreateAsync(IGroupsOperations operations, GroupCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<ListAsync>d__4")]
[ExtensionAttribute]
public static Task`1<IPage`1<ADGroupInner>> ListAsync(IGroupsOperations operations, ODataQuery`1<ADGroupInner> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<GetGroupMembersAsync>d__5")]
[ExtensionAttribute]
public static Task`1<IPage`1<DirectoryObject>> GetGroupMembersAsync(IGroupsOperations operations, string objectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<GetAsync>d__6")]
[ExtensionAttribute]
public static Task`1<ADGroupInner> GetAsync(IGroupsOperations operations, string objectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<DeleteAsync>d__7")]
[ExtensionAttribute]
public static Task DeleteAsync(IGroupsOperations operations, string objectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<GetMemberGroupsAsync>d__8")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<string>> GetMemberGroupsAsync(IGroupsOperations operations, string objectId, GroupGetMemberGroupsParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<ListOwnersAsync>d__9")]
[ExtensionAttribute]
public static Task`1<IPage`1<DirectoryObject>> ListOwnersAsync(IGroupsOperations operations, string objectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<AddOwnerAsync>d__10")]
[ExtensionAttribute]
public static Task AddOwnerAsync(IGroupsOperations operations, string objectId, AddOwnerParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<RemoveOwnerAsync>d__11")]
[ExtensionAttribute]
public static Task RemoveOwnerAsync(IGroupsOperations operations, string objectId, string ownerObjectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<ListNextAsync>d__12")]
[ExtensionAttribute]
public static Task`1<IPage`1<ADGroupInner>> ListNextAsync(IGroupsOperations operations, string nextLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<GetGroupMembersNextAsync>d__13")]
[ExtensionAttribute]
public static Task`1<IPage`1<DirectoryObject>> GetGroupMembersNextAsync(IGroupsOperations operations, string nextLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.GroupsOperationsExtensions/<ListOwnersNextAsync>d__14")]
[ExtensionAttribute]
public static Task`1<IPage`1<DirectoryObject>> ListOwnersNextAsync(IGroupsOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplication {
    public IReadOnlyList`1<string> ApplicationPermissions { get; }
    public ISet`1<string> IdentifierUris { get; }
    public ISet`1<string> ReplyUrls { get; }
    public string ApplicationId { get; }
    public IReadOnlyDictionary`2<string, ICertificateCredential> CertificateCredentials { get; }
    public bool AvailableToOtherTenants { get; }
    public IReadOnlyDictionary`2<string, IPasswordCredential> PasswordCredentials { get; }
    public Uri SignOnUrl { get; }
    public abstract virtual IReadOnlyList`1<string> get_ApplicationPermissions();
    public abstract virtual ISet`1<string> get_IdentifierUris();
    public abstract virtual ISet`1<string> get_ReplyUrls();
    public abstract virtual string get_ApplicationId();
    public abstract virtual IReadOnlyDictionary`2<string, ICertificateCredential> get_CertificateCredentials();
    public abstract virtual bool get_AvailableToOtherTenants();
    public abstract virtual IReadOnlyDictionary`2<string, IPasswordCredential> get_PasswordCredentials();
    public abstract virtual Uri get_SignOnUrl();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryApplications {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryGroup {
    public string Mail { get; }
    public bool SecurityEnabled { get; }
    public abstract virtual IEnumerable`1<IActiveDirectoryObject> ListMembers();
    public abstract virtual string get_Mail();
    public abstract virtual bool get_SecurityEnabled();
    public abstract virtual Task`1<IPagedCollection`1<IActiveDirectoryObject>> ListMembersAsync(CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryGroups {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryObject {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUser {
    public string Mail { get; }
    public string SignInName { get; }
    public CountryISOCode UsageLocation { get; }
    public string UserPrincipalName { get; }
    public string MailNickname { get; }
    public abstract virtual string get_Mail();
    public abstract virtual string get_SignInName();
    public abstract virtual CountryISOCode get_UsageLocation();
    public abstract virtual string get_UserPrincipalName();
    public abstract virtual string get_MailNickname();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IActiveDirectoryUsers {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IApplicationsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<ApplicationInner>> CreateWithHttpMessagesAsync(ApplicationCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ApplicationInner>>> ListWithHttpMessagesAsync(ODataQuery`1<ApplicationInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string applicationObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ApplicationInner>> GetWithHttpMessagesAsync(string applicationObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> PatchWithHttpMessagesAsync(string applicationObjectId, ApplicationUpdateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnersWithHttpMessagesAsync(string applicationObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> AddOwnerWithHttpMessagesAsync(string applicationObjectId, AddOwnerParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> RemoveOwnerWithHttpMessagesAsync(string applicationObjectId, string ownerObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IEnumerable`1<KeyCredential>>> ListKeyCredentialsWithHttpMessagesAsync(string applicationObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> UpdateKeyCredentialsWithHttpMessagesAsync(string applicationObjectId, IList`1<KeyCredential> value, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IEnumerable`1<PasswordCredential>>> ListPasswordCredentialsWithHttpMessagesAsync(string applicationObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> UpdatePasswordCredentialsWithHttpMessagesAsync(string applicationObjectId, IList`1<PasswordCredential> value, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ServicePrincipalObjectResultInner>> GetServicePrincipalsIdByAppIdWithHttpMessagesAsync(string applicationID, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ApplicationInner>>> ListNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnersNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IAuthorizationManagementClient {
    public Uri BaseUri { get; public set; }
    public JsonSerializerSettings SerializationSettings { get; }
    public JsonSerializerSettings DeserializationSettings { get; }
    public ServiceClientCredentials Credentials { get; }
    public string SubscriptionId { get; public set; }
    public string AcceptLanguage { get; public set; }
    public Nullable`1<int> LongRunningOperationRetryTimeout { get; public set; }
    public Nullable`1<bool> GenerateClientRequestId { get; public set; }
    public IClassicAdministratorsOperations ClassicAdministrators { get; }
    public IGlobalAdministratorOperations GlobalAdministrator { get; }
    public IProviderOperationsMetadataOperations ProviderOperationsMetadata { get; }
    public IRoleAssignmentsOperations RoleAssignments { get; }
    public IPermissionsOperations Permissions { get; }
    public IRoleDefinitionsOperations RoleDefinitions { get; }
    public IDenyAssignmentsOperations DenyAssignments { get; }
    public abstract virtual Uri get_BaseUri();
    public abstract virtual void set_BaseUri(Uri value);
    public abstract virtual JsonSerializerSettings get_SerializationSettings();
    public abstract virtual JsonSerializerSettings get_DeserializationSettings();
    public abstract virtual ServiceClientCredentials get_Credentials();
    public abstract virtual string get_SubscriptionId();
    public abstract virtual void set_SubscriptionId(string value);
    public abstract virtual string get_AcceptLanguage();
    public abstract virtual void set_AcceptLanguage(string value);
    public abstract virtual Nullable`1<int> get_LongRunningOperationRetryTimeout();
    public abstract virtual void set_LongRunningOperationRetryTimeout(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_GenerateClientRequestId();
    public abstract virtual void set_GenerateClientRequestId(Nullable`1<bool> value);
    public abstract virtual IClassicAdministratorsOperations get_ClassicAdministrators();
    public abstract virtual IGlobalAdministratorOperations get_GlobalAdministrator();
    public abstract virtual IProviderOperationsMetadataOperations get_ProviderOperationsMetadata();
    public abstract virtual IRoleAssignmentsOperations get_RoleAssignments();
    public abstract virtual IPermissionsOperations get_Permissions();
    public abstract virtual IRoleDefinitionsOperations get_RoleDefinitions();
    public abstract virtual IDenyAssignmentsOperations get_DenyAssignments();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ICertificateCredential {
    public string CustomKeyIdentifier { get; }
    public abstract virtual string get_CustomKeyIdentifier();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IClassicAdministratorsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ClassicAdministratorInner>>> ListWithHttpMessagesAsync(Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ClassicAdministratorInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential {
    public DateTime EndDate { get; }
    public string Value { get; }
    public DateTime StartDate { get; }
    public abstract virtual DateTime get_EndDate();
    public abstract virtual string get_Value();
    public abstract virtual DateTime get_StartDate();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IDeletedApplicationsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<ApplicationInner>> RestoreWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ApplicationInner>>> ListWithHttpMessagesAsync(string filter, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> HardDeleteWithHttpMessagesAsync(string applicationObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ApplicationInner>>> ListNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IDenyAssignmentsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListForResourceWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, ODataQuery`1<DenyAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListForResourceGroupWithHttpMessagesAsync(string resourceGroupName, ODataQuery`1<DenyAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListWithHttpMessagesAsync(ODataQuery`1<DenyAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<DenyAssignmentInner>> GetWithHttpMessagesAsync(string scope, string denyAssignmentId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<DenyAssignmentInner>> GetByIdWithHttpMessagesAsync(string denyAssignmentId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListForScopeWithHttpMessagesAsync(string scope, ODataQuery`1<DenyAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListForResourceNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListForResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DenyAssignmentInner>>> ListForScopeNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IDomainsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<IEnumerable`1<DomainInner>>> ListWithHttpMessagesAsync(ODataQuery`1<UserInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<DomainInner>> GetWithHttpMessagesAsync(string domainName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IGlobalAdministratorOperations {
    public abstract virtual Task`1<AzureOperationResponse> ElevateAccessWithHttpMessagesAsync(Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IGraphRbacManagementClient {
    public Uri BaseUri { get; public set; }
    public JsonSerializerSettings SerializationSettings { get; }
    public JsonSerializerSettings DeserializationSettings { get; }
    public ServiceClientCredentials Credentials { get; }
    public string ApiVersion { get; }
    public string TenantID { get; public set; }
    public string AcceptLanguage { get; public set; }
    public Nullable`1<int> LongRunningOperationRetryTimeout { get; public set; }
    public Nullable`1<bool> GenerateClientRequestId { get; public set; }
    public ISignedInUserOperations SignedInUser { get; }
    public IApplicationsOperations Applications { get; }
    public IDeletedApplicationsOperations DeletedApplications { get; }
    public IGroupsOperations Groups { get; }
    public IServicePrincipalsOperations ServicePrincipals { get; }
    public IUsersOperations Users { get; }
    public IObjectsOperations Objects { get; }
    public IDomainsOperations Domains { get; }
    public IOAuth2PermissionGrantOperations OAuth2PermissionGrant { get; }
    public abstract virtual Uri get_BaseUri();
    public abstract virtual void set_BaseUri(Uri value);
    public abstract virtual JsonSerializerSettings get_SerializationSettings();
    public abstract virtual JsonSerializerSettings get_DeserializationSettings();
    public abstract virtual ServiceClientCredentials get_Credentials();
    public abstract virtual string get_ApiVersion();
    public abstract virtual string get_TenantID();
    public abstract virtual void set_TenantID(string value);
    public abstract virtual string get_AcceptLanguage();
    public abstract virtual void set_AcceptLanguage(string value);
    public abstract virtual Nullable`1<int> get_LongRunningOperationRetryTimeout();
    public abstract virtual void set_LongRunningOperationRetryTimeout(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_GenerateClientRequestId();
    public abstract virtual void set_GenerateClientRequestId(Nullable`1<bool> value);
    public abstract virtual ISignedInUserOperations get_SignedInUser();
    public abstract virtual IApplicationsOperations get_Applications();
    public abstract virtual IDeletedApplicationsOperations get_DeletedApplications();
    public abstract virtual IGroupsOperations get_Groups();
    public abstract virtual IServicePrincipalsOperations get_ServicePrincipals();
    public abstract virtual IUsersOperations get_Users();
    public abstract virtual IObjectsOperations get_Objects();
    public abstract virtual IDomainsOperations get_Domains();
    public abstract virtual IOAuth2PermissionGrantOperations get_OAuth2PermissionGrant();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IGraphRbacManager {
    public IAuthorizationManagementClient RoleInner { get; }
    public IActiveDirectoryUsers Users { get; }
    public IActiveDirectoryGroups Groups { get; }
    public IActiveDirectoryApplications Applications { get; }
    public IServicePrincipals ServicePrincipals { get; }
    public IRoleDefinitions RoleDefinitions { get; }
    public IRoleAssignments RoleAssignments { get; }
    public abstract virtual IAuthorizationManagementClient get_RoleInner();
    public abstract virtual IActiveDirectoryUsers get_Users();
    public abstract virtual IActiveDirectoryGroups get_Groups();
    public abstract virtual IActiveDirectoryApplications get_Applications();
    public abstract virtual IServicePrincipals get_ServicePrincipals();
    public abstract virtual IRoleDefinitions get_RoleDefinitions();
    public abstract virtual IRoleAssignments get_RoleAssignments();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IGroupsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<CheckGroupMembershipResultInner>> IsMemberOfWithHttpMessagesAsync(CheckGroupMembershipParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> RemoveMemberWithHttpMessagesAsync(string groupObjectId, string memberObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> AddMemberWithHttpMessagesAsync(string groupObjectId, GroupAddMemberParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ADGroupInner>> CreateWithHttpMessagesAsync(GroupCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ADGroupInner>>> ListWithHttpMessagesAsync(ODataQuery`1<ADGroupInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> GetGroupMembersWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ADGroupInner>> GetWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IEnumerable`1<string>>> GetMemberGroupsWithHttpMessagesAsync(string objectId, GroupGetMemberGroupsParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnersWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> AddOwnerWithHttpMessagesAsync(string objectId, AddOwnerParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> RemoveOwnerWithHttpMessagesAsync(string objectId, string ownerObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ADGroupInner>>> ListNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> GetGroupMembersNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnersNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential`1 {
    public abstract virtual T WithPasswordCredential(PasswordCredentialImpl`1<T> credential);
    public abstract virtual T WithCertificateCredential(CertificateCredentialImpl`1<T> credential);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IIdProvider {
    public string PrincipalId { get; }
    public string ResourceId { get; }
    public abstract virtual string get_PrincipalId();
    public abstract virtual string get_ResourceId();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IOAuth2PermissionGrantOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<OAuth2PermissionGrantInner>>> ListWithHttpMessagesAsync(string filter, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<OAuth2PermissionGrantInner>> CreateWithHttpMessagesAsync(OAuth2PermissionGrantInner body, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<OAuth2PermissionGrantInner>>> ListNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IObjectsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> GetObjectsByObjectIdsWithHttpMessagesAsync(GetObjectsParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> GetObjectsByObjectIdsNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IPasswordCredential {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IPermission {
    public IList`1<string> Actions { get; }
    public IList`1<string> NotActions { get; }
    public IList`1<string> DataActions { get; }
    public IList`1<string> NotDataActions { get; }
    public abstract virtual IList`1<string> get_Actions();
    public abstract virtual IList`1<string> get_NotActions();
    public abstract virtual IList`1<string> get_DataActions();
    public abstract virtual IList`1<string> get_NotDataActions();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IPermissionsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<PermissionInner>>> ListForResourceGroupWithHttpMessagesAsync(string resourceGroupName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<PermissionInner>>> ListForResourceWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<PermissionInner>>> ListForResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<PermissionInner>>> ListForResourceNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IProviderOperationsMetadataOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<ProviderOperationsMetadataInner>> GetWithHttpMessagesAsync(string resourceProviderNamespace, string expand, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ProviderOperationsMetadataInner>>> ListWithHttpMessagesAsync(string expand, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ProviderOperationsMetadataInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment {
    public string RoleDefinitionId { get; }
    public string Scope { get; }
    public string PrincipalId { get; }
    public abstract virtual string get_RoleDefinitionId();
    public abstract virtual string get_Scope();
    public abstract virtual string get_PrincipalId();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignments {
    public abstract virtual Task`1<IRoleAssignment> GetByScopeAsync(string scope, string name, CancellationToken cancellationToken);
    public abstract virtual Task`1<IPagedCollection`1<IRoleAssignment>> ListByScopeAsync(string scope, CancellationToken cancellationToken);
    public abstract virtual IEnumerable`1<IRoleAssignment> ListByScope(string scope);
    public abstract virtual IRoleAssignment GetByScope(string scope, string name);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignmentsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListForResourceWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, ODataQuery`1<RoleAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListForResourceGroupWithHttpMessagesAsync(string resourceGroupName, ODataQuery`1<RoleAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<RoleAssignmentInner>> DeleteWithHttpMessagesAsync(string scope, string roleAssignmentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<RoleAssignmentInner>> CreateWithHttpMessagesAsync(string scope, string roleAssignmentName, RoleAssignmentCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<RoleAssignmentInner>> GetWithHttpMessagesAsync(string scope, string roleAssignmentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<RoleAssignmentInner>> DeleteByIdWithHttpMessagesAsync(string roleId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<RoleAssignmentInner>> CreateByIdWithHttpMessagesAsync(string roleId, RoleAssignmentCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<RoleAssignmentInner>> GetByIdWithHttpMessagesAsync(string roleId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListWithHttpMessagesAsync(ODataQuery`1<RoleAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListForScopeWithHttpMessagesAsync(string scope, ODataQuery`1<RoleAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListForResourceNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListForResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListForScopeNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinition {
    public ISet`1<IPermission> Permissions { get; }
    public string RoleName { get; }
    public string Description { get; }
    public string Type { get; }
    public ISet`1<string> AssignableScopes { get; }
    public abstract virtual ISet`1<IPermission> get_Permissions();
    public abstract virtual string get_RoleName();
    public abstract virtual string get_Description();
    public abstract virtual string get_Type();
    public abstract virtual ISet`1<string> get_AssignableScopes();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinitions {
    public abstract virtual Task`1<IRoleDefinition> GetByScopeAsync(string scope, string name, CancellationToken cancellationToken);
    public abstract virtual IRoleDefinition GetByScopeAndRoleName(string scope, string roleName);
    public abstract virtual Task`1<IEnumerable`1<IRoleDefinition>> ListByScopeAsync(string scope, CancellationToken cancellationToken);
    public abstract virtual IEnumerable`1<IRoleDefinition> ListByScope(string scope);
    public abstract virtual IRoleDefinition GetByScope(string scope, string name);
    public abstract virtual Task`1<IRoleDefinition> GetByScopeAndRoleNameAsync(string scope, string roleName, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinitionsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<RoleDefinitionInner>> DeleteWithHttpMessagesAsync(string scope, string roleDefinitionId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<RoleDefinitionInner>> GetWithHttpMessagesAsync(string scope, string roleDefinitionId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<RoleDefinitionInner>> CreateOrUpdateWithHttpMessagesAsync(string scope, string roleDefinitionId, RoleDefinitionInner roleDefinition, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RoleDefinitionInner>>> ListWithHttpMessagesAsync(string scope, ODataQuery`1<RoleDefinitionFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<RoleDefinitionInner>> GetByIdWithHttpMessagesAsync(string roleId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<RoleDefinitionInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal {
    public IReadOnlyList`1<string> ServicePrincipalNames { get; }
    public ISet`1<IRoleAssignment> RoleAssignments { get; }
    public string ApplicationId { get; }
    public IReadOnlyDictionary`2<string, ICertificateCredential> CertificateCredentials { get; }
    public IReadOnlyDictionary`2<string, IPasswordCredential> PasswordCredentials { get; }
    public abstract virtual IReadOnlyList`1<string> get_ServicePrincipalNames();
    public abstract virtual ISet`1<IRoleAssignment> get_RoleAssignments();
    public abstract virtual string get_ApplicationId();
    public abstract virtual IReadOnlyDictionary`2<string, ICertificateCredential> get_CertificateCredentials();
    public abstract virtual IReadOnlyDictionary`2<string, IPasswordCredential> get_PasswordCredentials();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipals {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipalsOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<ServicePrincipalInner>> CreateWithHttpMessagesAsync(ServicePrincipalCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ServicePrincipalInner>>> ListWithHttpMessagesAsync(ODataQuery`1<ServicePrincipalInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> UpdateWithHttpMessagesAsync(string objectId, ServicePrincipalUpdateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ServicePrincipalInner>> GetWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnersWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IEnumerable`1<KeyCredential>>> ListKeyCredentialsWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> UpdateKeyCredentialsWithHttpMessagesAsync(string objectId, IList`1<KeyCredential> value, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IEnumerable`1<PasswordCredential>>> ListPasswordCredentialsWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> UpdatePasswordCredentialsWithHttpMessagesAsync(string objectId, IList`1<PasswordCredential> value, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ServicePrincipalInner>>> ListNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnersNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ISignedInUserOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<UserInner>> GetWithHttpMessagesAsync(Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnedObjectsWithHttpMessagesAsync(Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnedObjectsNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.IUsersOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<UserInner>> CreateWithHttpMessagesAsync(UserCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<UserInner>>> ListWithHttpMessagesAsync(ODataQuery`1<UserInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<UserInner>> GetWithHttpMessagesAsync(string upnOrObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> UpdateWithHttpMessagesAsync(string upnOrObjectId, UserUpdateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string upnOrObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IEnumerable`1<string>>> GetMemberGroupsWithHttpMessagesAsync(string objectId, UserGetMemberGroupsParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<UserInner>>> ListNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.AddOwnerParameters : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public string Url { get; public set; }
    public AddOwnerParameters(string url, IDictionary`2<string, object> additionalProperties);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    public virtual void Validate();
}
[JsonObjectAttribute("Group")]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ADGroupInner : DirectoryObject {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <MailEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MailNickname>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SecurityEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Mail>k__BackingField;
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> MailEnabled { get; public set; }
    [JsonPropertyAttribute]
public string MailNickname { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> SecurityEnabled { get; public set; }
    [JsonPropertyAttribute]
public string Mail { get; public set; }
    public ADGroupInner(IDictionary`2<string, object> additionalProperties, string objectId, Nullable`1<DateTime> deletionTimestamp, string displayName, Nullable`1<bool> mailEnabled, string mailNickname, Nullable`1<bool> securityEnabled, string mail);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_MailEnabled();
    [CompilerGeneratedAttribute]
public void set_MailEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_MailNickname();
    [CompilerGeneratedAttribute]
public void set_MailNickname(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SecurityEnabled();
    [CompilerGeneratedAttribute]
public void set_SecurityEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Mail();
    [CompilerGeneratedAttribute]
public void set_Mail(string value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ApplicationBase : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowGuestsSignIn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowPassthroughUsers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppLogoUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<AppRole> <AppRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <AppPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AvailableToOtherTenants>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private GroupMembershipClaimTypes <GroupMembershipClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Homepage>k__BackingField;
    [CompilerGeneratedAttribute]
private InformationalUrl <InformationalUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsDeviceOnlyAuthSupported>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<KeyCredential> <KeyCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <KnownClientApplications>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogoutUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Oauth2AllowImplicitFlow>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Oauth2AllowUrlPathMatching>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<OAuth2Permission> <Oauth2Permissions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Oauth2RequirePostResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <OrgRestrictions>k__BackingField;
    [CompilerGeneratedAttribute]
private OptionalClaims <OptionalClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PasswordCredential> <PasswordCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PreAuthorizedApplication> <PreAuthorizedApplications>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PublicClient>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ReplyUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<RequiredResourceAccess> <RequiredResourceAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SamlMetadataUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignInAudience>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WwwHomepage>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<bool> AllowGuestsSignIn { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> AllowPassthroughUsers { get; public set; }
    [JsonPropertyAttribute]
public string AppLogoUrl { get; public set; }
    [JsonPropertyAttribute]
public IList`1<AppRole> AppRoles { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> AppPermissions { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> AvailableToOtherTenants { get; public set; }
    [JsonPropertyAttribute]
public string ErrorUrl { get; public set; }
    [JsonPropertyAttribute]
public GroupMembershipClaimTypes GroupMembershipClaims { get; public set; }
    [JsonPropertyAttribute]
public string Homepage { get; public set; }
    [JsonPropertyAttribute]
public InformationalUrl InformationalUrls { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IsDeviceOnlyAuthSupported { get; public set; }
    [JsonPropertyAttribute]
public IList`1<KeyCredential> KeyCredentials { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> KnownClientApplications { get; public set; }
    [JsonPropertyAttribute]
public string LogoutUrl { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> Oauth2AllowImplicitFlow { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> Oauth2AllowUrlPathMatching { get; public set; }
    [JsonPropertyAttribute]
public IList`1<OAuth2Permission> Oauth2Permissions { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> Oauth2RequirePostResponse { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> OrgRestrictions { get; public set; }
    [JsonPropertyAttribute]
public OptionalClaims OptionalClaims { get; public set; }
    [JsonPropertyAttribute]
public IList`1<PasswordCredential> PasswordCredentials { get; public set; }
    [JsonPropertyAttribute]
public IList`1<PreAuthorizedApplication> PreAuthorizedApplications { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> PublicClient { get; public set; }
    [JsonPropertyAttribute]
public string PublisherDomain { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> ReplyUrls { get; public set; }
    [JsonPropertyAttribute]
public IList`1<RequiredResourceAccess> RequiredResourceAccess { get; public set; }
    [JsonPropertyAttribute]
public string SamlMetadataUrl { get; public set; }
    [JsonPropertyAttribute]
public string SignInAudience { get; public set; }
    [JsonPropertyAttribute]
public string WwwHomepage { get; public set; }
    public ApplicationBase(Nullable`1<bool> allowGuestsSignIn, Nullable`1<bool> allowPassthroughUsers, string appLogoUrl, IList`1<AppRole> appRoles, IList`1<string> appPermissions, Nullable`1<bool> availableToOtherTenants, string errorUrl, GroupMembershipClaimTypes groupMembershipClaims, string homepage, InformationalUrl informationalUrls, Nullable`1<bool> isDeviceOnlyAuthSupported, IList`1<KeyCredential> keyCredentials, IList`1<string> knownClientApplications, string logoutUrl, Nullable`1<bool> oauth2AllowImplicitFlow, Nullable`1<bool> oauth2AllowUrlPathMatching, IList`1<OAuth2Permission> oauth2Permissions, Nullable`1<bool> oauth2RequirePostResponse, IList`1<string> orgRestrictions, OptionalClaims optionalClaims, IList`1<PasswordCredential> passwordCredentials, IList`1<PreAuthorizedApplication> preAuthorizedApplications, Nullable`1<bool> publicClient, string publisherDomain, IList`1<string> replyUrls, IList`1<RequiredResourceAccess> requiredResourceAccess, string samlMetadataUrl, string signInAudience, string wwwHomepage);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowGuestsSignIn();
    [CompilerGeneratedAttribute]
public void set_AllowGuestsSignIn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowPassthroughUsers();
    [CompilerGeneratedAttribute]
public void set_AllowPassthroughUsers(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_AppLogoUrl();
    [CompilerGeneratedAttribute]
public void set_AppLogoUrl(string value);
    [CompilerGeneratedAttribute]
public IList`1<AppRole> get_AppRoles();
    [CompilerGeneratedAttribute]
public void set_AppRoles(IList`1<AppRole> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_AppPermissions();
    [CompilerGeneratedAttribute]
public void set_AppPermissions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AvailableToOtherTenants();
    [CompilerGeneratedAttribute]
public void set_AvailableToOtherTenants(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_ErrorUrl();
    [CompilerGeneratedAttribute]
public void set_ErrorUrl(string value);
    [CompilerGeneratedAttribute]
public GroupMembershipClaimTypes get_GroupMembershipClaims();
    [CompilerGeneratedAttribute]
public void set_GroupMembershipClaims(GroupMembershipClaimTypes value);
    [CompilerGeneratedAttribute]
public string get_Homepage();
    [CompilerGeneratedAttribute]
public void set_Homepage(string value);
    [CompilerGeneratedAttribute]
public InformationalUrl get_InformationalUrls();
    [CompilerGeneratedAttribute]
public void set_InformationalUrls(InformationalUrl value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsDeviceOnlyAuthSupported();
    [CompilerGeneratedAttribute]
public void set_IsDeviceOnlyAuthSupported(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<KeyCredential> get_KeyCredentials();
    [CompilerGeneratedAttribute]
public void set_KeyCredentials(IList`1<KeyCredential> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_KnownClientApplications();
    [CompilerGeneratedAttribute]
public void set_KnownClientApplications(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_LogoutUrl();
    [CompilerGeneratedAttribute]
public void set_LogoutUrl(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Oauth2AllowImplicitFlow();
    [CompilerGeneratedAttribute]
public void set_Oauth2AllowImplicitFlow(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Oauth2AllowUrlPathMatching();
    [CompilerGeneratedAttribute]
public void set_Oauth2AllowUrlPathMatching(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<OAuth2Permission> get_Oauth2Permissions();
    [CompilerGeneratedAttribute]
public void set_Oauth2Permissions(IList`1<OAuth2Permission> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Oauth2RequirePostResponse();
    [CompilerGeneratedAttribute]
public void set_Oauth2RequirePostResponse(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_OrgRestrictions();
    [CompilerGeneratedAttribute]
public void set_OrgRestrictions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public OptionalClaims get_OptionalClaims();
    [CompilerGeneratedAttribute]
public void set_OptionalClaims(OptionalClaims value);
    [CompilerGeneratedAttribute]
public IList`1<PasswordCredential> get_PasswordCredentials();
    [CompilerGeneratedAttribute]
public void set_PasswordCredentials(IList`1<PasswordCredential> value);
    [CompilerGeneratedAttribute]
public IList`1<PreAuthorizedApplication> get_PreAuthorizedApplications();
    [CompilerGeneratedAttribute]
public void set_PreAuthorizedApplications(IList`1<PreAuthorizedApplication> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_PublicClient();
    [CompilerGeneratedAttribute]
public void set_PublicClient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_PublisherDomain();
    [CompilerGeneratedAttribute]
public void set_PublisherDomain(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ReplyUrls();
    [CompilerGeneratedAttribute]
public void set_ReplyUrls(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<RequiredResourceAccess> get_RequiredResourceAccess();
    [CompilerGeneratedAttribute]
public void set_RequiredResourceAccess(IList`1<RequiredResourceAccess> value);
    [CompilerGeneratedAttribute]
public string get_SamlMetadataUrl();
    [CompilerGeneratedAttribute]
public void set_SamlMetadataUrl(string value);
    [CompilerGeneratedAttribute]
public string get_SignInAudience();
    [CompilerGeneratedAttribute]
public void set_SignInAudience(string value);
    [CompilerGeneratedAttribute]
public string get_WwwHomepage();
    [CompilerGeneratedAttribute]
public void set_WwwHomepage(string value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ApplicationCreateParameters : ApplicationBase {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <IdentifierUris>k__BackingField;
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> IdentifierUris { get; public set; }
    public ApplicationCreateParameters(string displayName, Nullable`1<bool> allowGuestsSignIn, Nullable`1<bool> allowPassthroughUsers, string appLogoUrl, IList`1<AppRole> appRoles, IList`1<string> appPermissions, Nullable`1<bool> availableToOtherTenants, string errorUrl, GroupMembershipClaimTypes groupMembershipClaims, string homepage, InformationalUrl informationalUrls, Nullable`1<bool> isDeviceOnlyAuthSupported, IList`1<KeyCredential> keyCredentials, IList`1<string> knownClientApplications, string logoutUrl, Nullable`1<bool> oauth2AllowImplicitFlow, Nullable`1<bool> oauth2AllowUrlPathMatching, IList`1<OAuth2Permission> oauth2Permissions, Nullable`1<bool> oauth2RequirePostResponse, IList`1<string> orgRestrictions, OptionalClaims optionalClaims, IList`1<PasswordCredential> passwordCredentials, IList`1<PreAuthorizedApplication> preAuthorizedApplications, Nullable`1<bool> publicClient, string publisherDomain, IList`1<string> replyUrls, IList`1<RequiredResourceAccess> requiredResourceAccess, string samlMetadataUrl, string signInAudience, string wwwHomepage, IList`1<string> identifierUris);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_IdentifierUris();
    [CompilerGeneratedAttribute]
public void set_IdentifierUris(IList`1<string> value);
    public virtual void Validate();
}
[JsonObjectAttribute("Application")]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ApplicationInner : DirectoryObject {
    [CompilerGeneratedAttribute]
private string <AppId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowGuestsSignIn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowPassthroughUsers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppLogoUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<AppRole> <AppRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <AppPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AvailableToOtherTenants>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private GroupMembershipClaimTypes <GroupMembershipClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Homepage>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <IdentifierUris>k__BackingField;
    [CompilerGeneratedAttribute]
private InformationalUrl <InformationalUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsDeviceOnlyAuthSupported>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<KeyCredential> <KeyCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <KnownClientApplications>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogoutUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Oauth2AllowImplicitFlow>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Oauth2AllowUrlPathMatching>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<OAuth2Permission> <Oauth2Permissions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Oauth2RequirePostResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <OrgRestrictions>k__BackingField;
    [CompilerGeneratedAttribute]
private OptionalClaims <OptionalClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PasswordCredential> <PasswordCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PreAuthorizedApplication> <PreAuthorizedApplications>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PublicClient>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ReplyUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<RequiredResourceAccess> <RequiredResourceAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SamlMetadataUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignInAudience>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WwwHomepage>k__BackingField;
    [JsonPropertyAttribute]
public string AppId { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> AllowGuestsSignIn { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> AllowPassthroughUsers { get; public set; }
    [JsonPropertyAttribute]
public string AppLogoUrl { get; public set; }
    [JsonPropertyAttribute]
public IList`1<AppRole> AppRoles { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> AppPermissions { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> AvailableToOtherTenants { get; public set; }
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public string ErrorUrl { get; public set; }
    [JsonPropertyAttribute]
public GroupMembershipClaimTypes GroupMembershipClaims { get; public set; }
    [JsonPropertyAttribute]
public string Homepage { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> IdentifierUris { get; public set; }
    [JsonPropertyAttribute]
public InformationalUrl InformationalUrls { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IsDeviceOnlyAuthSupported { get; public set; }
    [JsonPropertyAttribute]
public IList`1<KeyCredential> KeyCredentials { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> KnownClientApplications { get; public set; }
    [JsonPropertyAttribute]
public string LogoutUrl { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> Oauth2AllowImplicitFlow { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> Oauth2AllowUrlPathMatching { get; public set; }
    [JsonPropertyAttribute]
public IList`1<OAuth2Permission> Oauth2Permissions { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> Oauth2RequirePostResponse { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> OrgRestrictions { get; public set; }
    [JsonPropertyAttribute]
public OptionalClaims OptionalClaims { get; public set; }
    [JsonPropertyAttribute]
public IList`1<PasswordCredential> PasswordCredentials { get; public set; }
    [JsonPropertyAttribute]
public IList`1<PreAuthorizedApplication> PreAuthorizedApplications { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> PublicClient { get; public set; }
    [JsonPropertyAttribute]
public string PublisherDomain { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> ReplyUrls { get; public set; }
    [JsonPropertyAttribute]
public IList`1<RequiredResourceAccess> RequiredResourceAccess { get; public set; }
    [JsonPropertyAttribute]
public string SamlMetadataUrl { get; public set; }
    [JsonPropertyAttribute]
public string SignInAudience { get; public set; }
    [JsonPropertyAttribute]
public string WwwHomepage { get; public set; }
    public ApplicationInner(IDictionary`2<string, object> additionalProperties, string objectId, Nullable`1<DateTime> deletionTimestamp, string appId, Nullable`1<bool> allowGuestsSignIn, Nullable`1<bool> allowPassthroughUsers, string appLogoUrl, IList`1<AppRole> appRoles, IList`1<string> appPermissions, Nullable`1<bool> availableToOtherTenants, string displayName, string errorUrl, GroupMembershipClaimTypes groupMembershipClaims, string homepage, IList`1<string> identifierUris, InformationalUrl informationalUrls, Nullable`1<bool> isDeviceOnlyAuthSupported, IList`1<KeyCredential> keyCredentials, IList`1<string> knownClientApplications, string logoutUrl, Nullable`1<bool> oauth2AllowImplicitFlow, Nullable`1<bool> oauth2AllowUrlPathMatching, IList`1<OAuth2Permission> oauth2Permissions, Nullable`1<bool> oauth2RequirePostResponse, IList`1<string> orgRestrictions, OptionalClaims optionalClaims, IList`1<PasswordCredential> passwordCredentials, IList`1<PreAuthorizedApplication> preAuthorizedApplications, Nullable`1<bool> publicClient, string publisherDomain, IList`1<string> replyUrls, IList`1<RequiredResourceAccess> requiredResourceAccess, string samlMetadataUrl, string signInAudience, string wwwHomepage);
    [CompilerGeneratedAttribute]
public string get_AppId();
    [CompilerGeneratedAttribute]
public void set_AppId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowGuestsSignIn();
    [CompilerGeneratedAttribute]
public void set_AllowGuestsSignIn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowPassthroughUsers();
    [CompilerGeneratedAttribute]
public void set_AllowPassthroughUsers(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_AppLogoUrl();
    [CompilerGeneratedAttribute]
public void set_AppLogoUrl(string value);
    [CompilerGeneratedAttribute]
public IList`1<AppRole> get_AppRoles();
    [CompilerGeneratedAttribute]
public void set_AppRoles(IList`1<AppRole> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_AppPermissions();
    [CompilerGeneratedAttribute]
public void set_AppPermissions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AvailableToOtherTenants();
    [CompilerGeneratedAttribute]
public void set_AvailableToOtherTenants(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorUrl();
    [CompilerGeneratedAttribute]
public void set_ErrorUrl(string value);
    [CompilerGeneratedAttribute]
public GroupMembershipClaimTypes get_GroupMembershipClaims();
    [CompilerGeneratedAttribute]
public void set_GroupMembershipClaims(GroupMembershipClaimTypes value);
    [CompilerGeneratedAttribute]
public string get_Homepage();
    [CompilerGeneratedAttribute]
public void set_Homepage(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_IdentifierUris();
    [CompilerGeneratedAttribute]
public void set_IdentifierUris(IList`1<string> value);
    [CompilerGeneratedAttribute]
public InformationalUrl get_InformationalUrls();
    [CompilerGeneratedAttribute]
public void set_InformationalUrls(InformationalUrl value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsDeviceOnlyAuthSupported();
    [CompilerGeneratedAttribute]
public void set_IsDeviceOnlyAuthSupported(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<KeyCredential> get_KeyCredentials();
    [CompilerGeneratedAttribute]
public void set_KeyCredentials(IList`1<KeyCredential> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_KnownClientApplications();
    [CompilerGeneratedAttribute]
public void set_KnownClientApplications(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_LogoutUrl();
    [CompilerGeneratedAttribute]
public void set_LogoutUrl(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Oauth2AllowImplicitFlow();
    [CompilerGeneratedAttribute]
public void set_Oauth2AllowImplicitFlow(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Oauth2AllowUrlPathMatching();
    [CompilerGeneratedAttribute]
public void set_Oauth2AllowUrlPathMatching(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<OAuth2Permission> get_Oauth2Permissions();
    [CompilerGeneratedAttribute]
public void set_Oauth2Permissions(IList`1<OAuth2Permission> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Oauth2RequirePostResponse();
    [CompilerGeneratedAttribute]
public void set_Oauth2RequirePostResponse(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_OrgRestrictions();
    [CompilerGeneratedAttribute]
public void set_OrgRestrictions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public OptionalClaims get_OptionalClaims();
    [CompilerGeneratedAttribute]
public void set_OptionalClaims(OptionalClaims value);
    [CompilerGeneratedAttribute]
public IList`1<PasswordCredential> get_PasswordCredentials();
    [CompilerGeneratedAttribute]
public void set_PasswordCredentials(IList`1<PasswordCredential> value);
    [CompilerGeneratedAttribute]
public IList`1<PreAuthorizedApplication> get_PreAuthorizedApplications();
    [CompilerGeneratedAttribute]
public void set_PreAuthorizedApplications(IList`1<PreAuthorizedApplication> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_PublicClient();
    [CompilerGeneratedAttribute]
public void set_PublicClient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_PublisherDomain();
    [CompilerGeneratedAttribute]
public void set_PublisherDomain(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ReplyUrls();
    [CompilerGeneratedAttribute]
public void set_ReplyUrls(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<RequiredResourceAccess> get_RequiredResourceAccess();
    [CompilerGeneratedAttribute]
public void set_RequiredResourceAccess(IList`1<RequiredResourceAccess> value);
    [CompilerGeneratedAttribute]
public string get_SamlMetadataUrl();
    [CompilerGeneratedAttribute]
public void set_SamlMetadataUrl(string value);
    [CompilerGeneratedAttribute]
public string get_SignInAudience();
    [CompilerGeneratedAttribute]
public void set_SignInAudience(string value);
    [CompilerGeneratedAttribute]
public string get_WwwHomepage();
    [CompilerGeneratedAttribute]
public void set_WwwHomepage(string value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ApplicationUpdateParameters : ApplicationBase {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <IdentifierUris>k__BackingField;
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> IdentifierUris { get; public set; }
    public ApplicationUpdateParameters(Nullable`1<bool> allowGuestsSignIn, Nullable`1<bool> allowPassthroughUsers, string appLogoUrl, IList`1<AppRole> appRoles, IList`1<string> appPermissions, Nullable`1<bool> availableToOtherTenants, string errorUrl, GroupMembershipClaimTypes groupMembershipClaims, string homepage, InformationalUrl informationalUrls, Nullable`1<bool> isDeviceOnlyAuthSupported, IList`1<KeyCredential> keyCredentials, IList`1<string> knownClientApplications, string logoutUrl, Nullable`1<bool> oauth2AllowImplicitFlow, Nullable`1<bool> oauth2AllowUrlPathMatching, IList`1<OAuth2Permission> oauth2Permissions, Nullable`1<bool> oauth2RequirePostResponse, IList`1<string> orgRestrictions, OptionalClaims optionalClaims, IList`1<PasswordCredential> passwordCredentials, IList`1<PreAuthorizedApplication> preAuthorizedApplications, Nullable`1<bool> publicClient, string publisherDomain, IList`1<string> replyUrls, IList`1<RequiredResourceAccess> requiredResourceAccess, string samlMetadataUrl, string signInAudience, string wwwHomepage, string displayName, IList`1<string> identifierUris);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_IdentifierUris();
    [CompilerGeneratedAttribute]
public void set_IdentifierUris(IList`1<string> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.AppRole : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <AllowedMemberTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> AllowedMemberTypes { get; public set; }
    [JsonPropertyAttribute]
public string Description { get; public set; }
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IsEnabled { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    public AppRole(string id, IList`1<string> allowedMemberTypes, string description, string displayName, Nullable`1<bool> isEnabled, string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_AllowedMemberTypes();
    [CompilerGeneratedAttribute]
public void set_AllowedMemberTypes(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.CheckGroupMembershipParameters : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MemberId>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public string GroupId { get; public set; }
    [JsonPropertyAttribute]
public string MemberId { get; public set; }
    public CheckGroupMembershipParameters(string groupId, string memberId, IDictionary`2<string, object> additionalProperties);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_GroupId();
    [CompilerGeneratedAttribute]
public void set_GroupId(string value);
    [CompilerGeneratedAttribute]
public string get_MemberId();
    [CompilerGeneratedAttribute]
public void set_MemberId(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.CheckGroupMembershipResultInner : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Value>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> Value { get; public set; }
    public CheckGroupMembershipResultInner(IDictionary`2<string, object> additionalProperties, Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(Nullable`1<bool> value);
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ClassicAdministratorInner : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EmailAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Role>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
public string EmailAddress { get; public set; }
    [JsonPropertyAttribute]
public string Role { get; public set; }
    public ClassicAdministratorInner(string id, string name, string type, string emailAddress, string role);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_EmailAddress();
    [CompilerGeneratedAttribute]
public void set_EmailAddress(string value);
    [CompilerGeneratedAttribute]
public string get_Role();
    [CompilerGeneratedAttribute]
public void set_Role(string value);
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ConsentType>")]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ConsentType : ExpandableStringEnum`1<ConsentType> {
    public static ConsentType AllPrincipals;
    public static ConsentType Principal;
    private static ConsentType();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.DenyAssignmentFilter : object {
    [CompilerGeneratedAttribute]
private string <DenyAssignmentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrincipalId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GdprExportPrincipalId>k__BackingField;
    [JsonPropertyAttribute]
public string DenyAssignmentName { get; public set; }
    [JsonPropertyAttribute]
public string PrincipalId { get; public set; }
    [JsonPropertyAttribute]
public string GdprExportPrincipalId { get; public set; }
    public DenyAssignmentFilter(string denyAssignmentName, string principalId, string gdprExportPrincipalId);
    [CompilerGeneratedAttribute]
public string get_DenyAssignmentName();
    [CompilerGeneratedAttribute]
public void set_DenyAssignmentName(string value);
    [CompilerGeneratedAttribute]
public string get_PrincipalId();
    [CompilerGeneratedAttribute]
public void set_PrincipalId(string value);
    [CompilerGeneratedAttribute]
public string get_GdprExportPrincipalId();
    [CompilerGeneratedAttribute]
public void set_GdprExportPrincipalId(string value);
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.DenyAssignmentInner : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DenyAssignmentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<DenyAssignmentPermission> <Permissions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DoNotApplyToChildScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Principal> <Principals>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Principal> <ExcludePrincipals>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsSystemProtected>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; private set; }
    [JsonPropertyAttribute]
public string Name { get; private set; }
    [JsonPropertyAttribute]
public string Type { get; private set; }
    [JsonPropertyAttribute]
public string DenyAssignmentName { get; public set; }
    [JsonPropertyAttribute]
public string Description { get; public set; }
    [JsonPropertyAttribute]
public IList`1<DenyAssignmentPermission> Permissions { get; public set; }
    [JsonPropertyAttribute]
public string Scope { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> DoNotApplyToChildScopes { get; public set; }
    [JsonPropertyAttribute]
public IList`1<Principal> Principals { get; public set; }
    [JsonPropertyAttribute]
public IList`1<Principal> ExcludePrincipals { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IsSystemProtected { get; public set; }
    public DenyAssignmentInner(string id, string name, string type, string denyAssignmentName, string description, IList`1<DenyAssignmentPermission> permissions, string scope, Nullable`1<bool> doNotApplyToChildScopes, IList`1<Principal> principals, IList`1<Principal> excludePrincipals, Nullable`1<bool> isSystemProtected);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_DenyAssignmentName();
    [CompilerGeneratedAttribute]
public void set_DenyAssignmentName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public IList`1<DenyAssignmentPermission> get_Permissions();
    [CompilerGeneratedAttribute]
public void set_Permissions(IList`1<DenyAssignmentPermission> value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DoNotApplyToChildScopes();
    [CompilerGeneratedAttribute]
public void set_DoNotApplyToChildScopes(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<Principal> get_Principals();
    [CompilerGeneratedAttribute]
public void set_Principals(IList`1<Principal> value);
    [CompilerGeneratedAttribute]
public IList`1<Principal> get_ExcludePrincipals();
    [CompilerGeneratedAttribute]
public void set_ExcludePrincipals(IList`1<Principal> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsSystemProtected();
    [CompilerGeneratedAttribute]
public void set_IsSystemProtected(Nullable`1<bool> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.DenyAssignmentPermission : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Actions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <NotActions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <DataActions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <NotDataActions>k__BackingField;
    [JsonPropertyAttribute]
public IList`1<string> Actions { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> NotActions { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> DataActions { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> NotDataActions { get; public set; }
    public DenyAssignmentPermission(IList`1<string> actions, IList`1<string> notActions, IList`1<string> dataActions, IList`1<string> notDataActions);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Actions();
    [CompilerGeneratedAttribute]
public void set_Actions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_NotActions();
    [CompilerGeneratedAttribute]
public void set_NotActions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_DataActions();
    [CompilerGeneratedAttribute]
public void set_DataActions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_NotDataActions();
    [CompilerGeneratedAttribute]
public void set_NotDataActions(IList`1<string> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.DirectoryObject : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ObjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <DeletionTimestamp>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public string ObjectId { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> DeletionTimestamp { get; private set; }
    public DirectoryObject(IDictionary`2<string, object> additionalProperties, string objectId, Nullable`1<DateTime> deletionTimestamp);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_ObjectId();
    [CompilerGeneratedAttribute]
private void set_ObjectId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_DeletionTimestamp();
    [CompilerGeneratedAttribute]
private void set_DeletionTimestamp(Nullable`1<DateTime> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.DomainInner : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsVerified>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public string AuthenticationType { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IsDefault { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IsVerified { get; private set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    public DomainInner(string name, IDictionary`2<string, object> additionalProperties, string authenticationType, Nullable`1<bool> isDefault, Nullable`1<bool> isVerified);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationType();
    [CompilerGeneratedAttribute]
private void set_AuthenticationType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsDefault();
    [CompilerGeneratedAttribute]
private void set_IsDefault(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsVerified();
    [CompilerGeneratedAttribute]
private void set_IsVerified(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.GetObjectsParameters : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ObjectIds>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Types>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeDirectoryObjectReferences>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> ObjectIds { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> Types { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IncludeDirectoryObjectReferences { get; public set; }
    public GetObjectsParameters(IDictionary`2<string, object> additionalProperties, IList`1<string> objectIds, IList`1<string> types, Nullable`1<bool> includeDirectoryObjectReferences);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ObjectIds();
    [CompilerGeneratedAttribute]
public void set_ObjectIds(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Types();
    [CompilerGeneratedAttribute]
public void set_Types(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IncludeDirectoryObjectReferences();
    [CompilerGeneratedAttribute]
public void set_IncludeDirectoryObjectReferences(Nullable`1<bool> value);
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.GraphError : object {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [JsonPropertyAttribute]
public string Code { get; public set; }
    [JsonPropertyAttribute]
public string Message { get; public set; }
    public GraphError(string code, string message);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.GraphErrorException : RestException {
    [CompilerGeneratedAttribute]
private HttpRequestMessageWrapper <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpResponseMessageWrapper <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private GraphError <Body>k__BackingField;
    public HttpRequestMessageWrapper Request { get; public set; }
    public HttpResponseMessageWrapper Response { get; public set; }
    public GraphError Body { get; public set; }
    public GraphErrorException(string message);
    public GraphErrorException(string message, Exception innerException);
    [CompilerGeneratedAttribute]
public HttpRequestMessageWrapper get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(HttpRequestMessageWrapper value);
    [CompilerGeneratedAttribute]
public HttpResponseMessageWrapper get_Response();
    [CompilerGeneratedAttribute]
public void set_Response(HttpResponseMessageWrapper value);
    [CompilerGeneratedAttribute]
public GraphError get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(GraphError value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.GroupAddMemberParameters : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public string Url { get; public set; }
    public GroupAddMemberParameters(string url, IDictionary`2<string, object> additionalProperties);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.GroupCreateParameters : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MailNickname>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <MailEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <SecurityEnabled>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public string MailNickname { get; public set; }
    [JsonPropertyAttribute]
public static bool MailEnabled { get; private set; }
    [JsonPropertyAttribute]
public static bool SecurityEnabled { get; private set; }
    public GroupCreateParameters(string displayName, string mailNickname, IDictionary`2<string, object> additionalProperties);
    private static GroupCreateParameters();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_MailNickname();
    [CompilerGeneratedAttribute]
public void set_MailNickname(string value);
    [CompilerGeneratedAttribute]
public static bool get_MailEnabled();
    [CompilerGeneratedAttribute]
private static void set_MailEnabled(bool value);
    [CompilerGeneratedAttribute]
public static bool get_SecurityEnabled();
    [CompilerGeneratedAttribute]
private static void set_SecurityEnabled(bool value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.GroupGetMemberGroupsParameters : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SecurityEnabledOnly>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public bool SecurityEnabledOnly { get; public set; }
    public GroupGetMemberGroupsParameters(bool securityEnabledOnly, IDictionary`2<string, object> additionalProperties);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public bool get_SecurityEnabledOnly();
    [CompilerGeneratedAttribute]
public void set_SecurityEnabledOnly(bool value);
    public virtual void Validate();
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.GroupMembershipClaimTypes>")]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.GroupMembershipClaimTypes : ExpandableStringEnum`1<GroupMembershipClaimTypes> {
    public static GroupMembershipClaimTypes None;
    public static GroupMembershipClaimTypes SecurityGroup;
    public static GroupMembershipClaimTypes All;
    private static GroupMembershipClaimTypes();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.InformationalUrl : object {
    [CompilerGeneratedAttribute]
private string <TermsOfService>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Marketing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Privacy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Support>k__BackingField;
    [JsonPropertyAttribute]
public string TermsOfService { get; public set; }
    [JsonPropertyAttribute]
public string Marketing { get; public set; }
    [JsonPropertyAttribute]
public string Privacy { get; public set; }
    [JsonPropertyAttribute]
public string Support { get; public set; }
    public InformationalUrl(string termsOfService, string marketing, string privacy, string support);
    [CompilerGeneratedAttribute]
public string get_TermsOfService();
    [CompilerGeneratedAttribute]
public void set_TermsOfService(string value);
    [CompilerGeneratedAttribute]
public string get_Marketing();
    [CompilerGeneratedAttribute]
public void set_Marketing(string value);
    [CompilerGeneratedAttribute]
public string get_Privacy();
    [CompilerGeneratedAttribute]
public void set_Privacy(string value);
    [CompilerGeneratedAttribute]
public string get_Support();
    [CompilerGeneratedAttribute]
public void set_Support(string value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.KeyCredential : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Usage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomKeyIdentifier>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> StartDate { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> EndDate { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    [JsonPropertyAttribute]
public string KeyId { get; public set; }
    [JsonPropertyAttribute]
public string Usage { get; public set; }
    [JsonPropertyAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
public string CustomKeyIdentifier { get; public set; }
    public KeyCredential(IDictionary`2<string, object> additionalProperties, Nullable`1<DateTime> startDate, Nullable`1<DateTime> endDate, string value, string keyId, string usage, string type, string customKeyIdentifier);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartDate();
    [CompilerGeneratedAttribute]
public void set_StartDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EndDate();
    [CompilerGeneratedAttribute]
public void set_EndDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_KeyId();
    [CompilerGeneratedAttribute]
public void set_KeyId(string value);
    [CompilerGeneratedAttribute]
public string get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_CustomKeyIdentifier();
    [CompilerGeneratedAttribute]
public void set_CustomKeyIdentifier(string value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.KeyCredentialsUpdateParameters : object {
    [CompilerGeneratedAttribute]
private IList`1<KeyCredential> <Value>k__BackingField;
    [JsonPropertyAttribute]
public IList`1<KeyCredential> Value { get; public set; }
    public KeyCredentialsUpdateParameters(IList`1<KeyCredential> value);
    [CompilerGeneratedAttribute]
public IList`1<KeyCredential> get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(IList`1<KeyCredential> value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.OAuth2Permission : object {
    [CompilerGeneratedAttribute]
private string <AdminConsentDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminConsentDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserConsentDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserConsentDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public string AdminConsentDescription { get; public set; }
    [JsonPropertyAttribute]
public string AdminConsentDisplayName { get; public set; }
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IsEnabled { get; public set; }
    [JsonPropertyAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
public string UserConsentDescription { get; public set; }
    [JsonPropertyAttribute]
public string UserConsentDisplayName { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    public OAuth2Permission(string adminConsentDescription, string adminConsentDisplayName, string id, Nullable`1<bool> isEnabled, string type, string userConsentDescription, string userConsentDisplayName, string value);
    [CompilerGeneratedAttribute]
public string get_AdminConsentDescription();
    [CompilerGeneratedAttribute]
public void set_AdminConsentDescription(string value);
    [CompilerGeneratedAttribute]
public string get_AdminConsentDisplayName();
    [CompilerGeneratedAttribute]
public void set_AdminConsentDisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_UserConsentDescription();
    [CompilerGeneratedAttribute]
public void set_UserConsentDescription(string value);
    [CompilerGeneratedAttribute]
public string get_UserConsentDisplayName();
    [CompilerGeneratedAttribute]
public void set_UserConsentDisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.OAuth2PermissionGrantInner : object {
    [CompilerGeneratedAttribute]
private string <Odatatype>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ObjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private ConsentType <ConsentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrincipalId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExpiryTime>k__BackingField;
    [JsonPropertyAttribute]
public string Odatatype { get; public set; }
    [JsonPropertyAttribute]
public string ClientId { get; public set; }
    [JsonPropertyAttribute]
public string ObjectId { get; public set; }
    [JsonPropertyAttribute]
public ConsentType ConsentType { get; public set; }
    [JsonPropertyAttribute]
public string PrincipalId { get; public set; }
    [JsonPropertyAttribute]
public string ResourceId { get; public set; }
    [JsonPropertyAttribute]
public string Scope { get; public set; }
    [JsonPropertyAttribute]
public string StartTime { get; public set; }
    [JsonPropertyAttribute]
public string ExpiryTime { get; public set; }
    public OAuth2PermissionGrantInner(string odatatype, string clientId, string objectId, ConsentType consentType, string principalId, string resourceId, string scope, string startTime, string expiryTime);
    [CompilerGeneratedAttribute]
public string get_Odatatype();
    [CompilerGeneratedAttribute]
public void set_Odatatype(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ObjectId();
    [CompilerGeneratedAttribute]
public void set_ObjectId(string value);
    [CompilerGeneratedAttribute]
public ConsentType get_ConsentType();
    [CompilerGeneratedAttribute]
public void set_ConsentType(ConsentType value);
    [CompilerGeneratedAttribute]
public string get_PrincipalId();
    [CompilerGeneratedAttribute]
public void set_PrincipalId(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceId();
    [CompilerGeneratedAttribute]
public void set_ResourceId(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(string value);
    [CompilerGeneratedAttribute]
public string get_ExpiryTime();
    [CompilerGeneratedAttribute]
public void set_ExpiryTime(string value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.OptionalClaim : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Essential>k__BackingField;
    [CompilerGeneratedAttribute]
private object <AdditionalProperties>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Source { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> Essential { get; public set; }
    [JsonPropertyAttribute]
public object AdditionalProperties { get; public set; }
    public OptionalClaim(string name, string source, Nullable`1<bool> essential, object additionalProperties);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Essential();
    [CompilerGeneratedAttribute]
public void set_Essential(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public object get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(object value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.OptionalClaims : object {
    [CompilerGeneratedAttribute]
private IList`1<OptionalClaim> <IdToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<OptionalClaim> <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<OptionalClaim> <SamlToken>k__BackingField;
    [JsonPropertyAttribute]
public IList`1<OptionalClaim> IdToken { get; public set; }
    [JsonPropertyAttribute]
public IList`1<OptionalClaim> AccessToken { get; public set; }
    [JsonPropertyAttribute]
public IList`1<OptionalClaim> SamlToken { get; public set; }
    public OptionalClaims(IList`1<OptionalClaim> idToken, IList`1<OptionalClaim> accessToken, IList`1<OptionalClaim> samlToken);
    [CompilerGeneratedAttribute]
public IList`1<OptionalClaim> get_IdToken();
    [CompilerGeneratedAttribute]
public void set_IdToken(IList`1<OptionalClaim> value);
    [CompilerGeneratedAttribute]
public IList`1<OptionalClaim> get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(IList`1<OptionalClaim> value);
    [CompilerGeneratedAttribute]
public IList`1<OptionalClaim> get_SamlToken();
    [CompilerGeneratedAttribute]
public void set_SamlToken(IList`1<OptionalClaim> value);
}
[JsonObjectAttribute]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.Page`1 : object {
    [CompilerGeneratedAttribute]
private string <NextPageLink>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<T> <Items>k__BackingField;
    [JsonPropertyAttribute("odata.nextLink")]
public string NextPageLink { get; private set; }
    [JsonPropertyAttribute("value")]
private IList`1<T> Items { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_NextPageLink();
    [CompilerGeneratedAttribute]
private void set_NextPageLink(string value);
    [CompilerGeneratedAttribute]
private IList`1<T> get_Items();
    [CompilerGeneratedAttribute]
private void set_Items(IList`1<T> value);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[JsonObjectAttribute]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.Page1`1 : object {
    [CompilerGeneratedAttribute]
private string <NextPageLink>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<T> <Items>k__BackingField;
    [JsonPropertyAttribute("")]
public string NextPageLink { get; private set; }
    [JsonPropertyAttribute("value")]
private IList`1<T> Items { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_NextPageLink();
    [CompilerGeneratedAttribute]
private void set_NextPageLink(string value);
    [CompilerGeneratedAttribute]
private IList`1<T> get_Items();
    [CompilerGeneratedAttribute]
private void set_Items(IList`1<T> value);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.PasswordCredential : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <CustomKeyIdentifier>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> StartDate { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> EndDate { get; public set; }
    [JsonPropertyAttribute]
public string KeyId { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    [JsonPropertyAttribute]
public Byte[] CustomKeyIdentifier { get; public set; }
    public PasswordCredential(IDictionary`2<string, object> additionalProperties, Nullable`1<DateTime> startDate, Nullable`1<DateTime> endDate, string keyId, string value, Byte[] customKeyIdentifier);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartDate();
    [CompilerGeneratedAttribute]
public void set_StartDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EndDate();
    [CompilerGeneratedAttribute]
public void set_EndDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_KeyId();
    [CompilerGeneratedAttribute]
public void set_KeyId(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_CustomKeyIdentifier();
    [CompilerGeneratedAttribute]
public void set_CustomKeyIdentifier(Byte[] value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.PasswordCredentialsUpdateParameters : object {
    [CompilerGeneratedAttribute]
private IList`1<PasswordCredential> <Value>k__BackingField;
    [JsonPropertyAttribute]
public IList`1<PasswordCredential> Value { get; public set; }
    public PasswordCredentialsUpdateParameters(IList`1<PasswordCredential> value);
    [CompilerGeneratedAttribute]
public IList`1<PasswordCredential> get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(IList`1<PasswordCredential> value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.PasswordProfile : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ForceChangePasswordNextLogin>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public string Password { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> ForceChangePasswordNextLogin { get; public set; }
    public PasswordProfile(string password, IDictionary`2<string, object> additionalProperties, Nullable`1<bool> forceChangePasswordNextLogin);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ForceChangePasswordNextLogin();
    [CompilerGeneratedAttribute]
public void set_ForceChangePasswordNextLogin(Nullable`1<bool> value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.PermissionInner : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Actions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <NotActions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <DataActions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <NotDataActions>k__BackingField;
    [JsonPropertyAttribute]
public IList`1<string> Actions { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> NotActions { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> DataActions { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> NotDataActions { get; public set; }
    public PermissionInner(IList`1<string> actions, IList`1<string> notActions, IList`1<string> dataActions, IList`1<string> notDataActions);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Actions();
    [CompilerGeneratedAttribute]
public void set_Actions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_NotActions();
    [CompilerGeneratedAttribute]
public void set_NotActions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_DataActions();
    [CompilerGeneratedAttribute]
public void set_DataActions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_NotDataActions();
    [CompilerGeneratedAttribute]
public void set_NotDataActions(IList`1<string> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.PreAuthorizedApplication : object {
    [CompilerGeneratedAttribute]
private string <AppId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PreAuthorizedApplicationPermission> <Permissions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PreAuthorizedApplicationExtension> <Extensions>k__BackingField;
    [JsonPropertyAttribute]
public string AppId { get; public set; }
    [JsonPropertyAttribute]
public IList`1<PreAuthorizedApplicationPermission> Permissions { get; public set; }
    [JsonPropertyAttribute]
public IList`1<PreAuthorizedApplicationExtension> Extensions { get; public set; }
    public PreAuthorizedApplication(string appId, IList`1<PreAuthorizedApplicationPermission> permissions, IList`1<PreAuthorizedApplicationExtension> extensions);
    [CompilerGeneratedAttribute]
public string get_AppId();
    [CompilerGeneratedAttribute]
public void set_AppId(string value);
    [CompilerGeneratedAttribute]
public IList`1<PreAuthorizedApplicationPermission> get_Permissions();
    [CompilerGeneratedAttribute]
public void set_Permissions(IList`1<PreAuthorizedApplicationPermission> value);
    [CompilerGeneratedAttribute]
public IList`1<PreAuthorizedApplicationExtension> get_Extensions();
    [CompilerGeneratedAttribute]
public void set_Extensions(IList`1<PreAuthorizedApplicationExtension> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.PreAuthorizedApplicationExtension : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Conditions>k__BackingField;
    [JsonPropertyAttribute]
public IList`1<string> Conditions { get; public set; }
    public PreAuthorizedApplicationExtension(IList`1<string> conditions);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<string> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.PreAuthorizedApplicationPermission : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DirectAccessGrant>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <AccessGrants>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<bool> DirectAccessGrant { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> AccessGrants { get; public set; }
    public PreAuthorizedApplicationPermission(Nullable`1<bool> directAccessGrant, IList`1<string> accessGrants);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DirectAccessGrant();
    [CompilerGeneratedAttribute]
public void set_DirectAccessGrant(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_AccessGrants();
    [CompilerGeneratedAttribute]
public void set_AccessGrants(IList`1<string> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.Principal : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; private set; }
    [JsonPropertyAttribute]
public string Type { get; private set; }
    public Principal(string id, string type);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(string value);
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.PrincipalType>")]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.PrincipalType : ExpandableStringEnum`1<PrincipalType> {
    public static PrincipalType User;
    public static PrincipalType Group;
    public static PrincipalType ServicePrincipal;
    public static PrincipalType Unknown;
    public static PrincipalType DirectoryRoleTemplate;
    public static PrincipalType ForeignGroup;
    public static PrincipalType Application;
    public static PrincipalType MSI;
    public static PrincipalType DirectoryObjectOrGroup;
    public static PrincipalType Everyone;
    private static PrincipalType();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ProviderOperation : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsDataAction>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public string Description { get; public set; }
    [JsonPropertyAttribute]
public string Origin { get; public set; }
    [JsonPropertyAttribute]
public object Properties { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IsDataAction { get; public set; }
    public ProviderOperation(string name, string displayName, string description, string origin, object properties, Nullable`1<bool> isDataAction);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Origin();
    [CompilerGeneratedAttribute]
public void set_Origin(string value);
    [CompilerGeneratedAttribute]
public object get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(object value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsDataAction();
    [CompilerGeneratedAttribute]
public void set_IsDataAction(Nullable`1<bool> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ProviderOperationsMetadataInner : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ResourceType> <ResourceTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ProviderOperation> <Operations>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public IList`1<ResourceType> ResourceTypes { get; public set; }
    [JsonPropertyAttribute]
public IList`1<ProviderOperation> Operations { get; public set; }
    public ProviderOperationsMetadataInner(string id, string name, string type, string displayName, IList`1<ResourceType> resourceTypes, IList`1<ProviderOperation> operations);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public IList`1<ResourceType> get_ResourceTypes();
    [CompilerGeneratedAttribute]
public void set_ResourceTypes(IList`1<ResourceType> value);
    [CompilerGeneratedAttribute]
public IList`1<ProviderOperation> get_Operations();
    [CompilerGeneratedAttribute]
public void set_Operations(IList`1<ProviderOperation> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.RequiredResourceAccess : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ResourceAccess> <ResourceAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceAppId>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public IList`1<ResourceAccess> ResourceAccess { get; public set; }
    [JsonPropertyAttribute]
public string ResourceAppId { get; public set; }
    public RequiredResourceAccess(IList`1<ResourceAccess> resourceAccess, IDictionary`2<string, object> additionalProperties, string resourceAppId);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public IList`1<ResourceAccess> get_ResourceAccess();
    [CompilerGeneratedAttribute]
public void set_ResourceAccess(IList`1<ResourceAccess> value);
    [CompilerGeneratedAttribute]
public string get_ResourceAppId();
    [CompilerGeneratedAttribute]
public void set_ResourceAppId(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ResourceAccess : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public string Type { get; public set; }
    public ResourceAccess(string id, IDictionary`2<string, object> additionalProperties, string type);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ResourceType : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ProviderOperation> <Operations>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public IList`1<ProviderOperation> Operations { get; public set; }
    public ResourceType(string name, string displayName, IList`1<ProviderOperation> operations);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public IList`1<ProviderOperation> get_Operations();
    [CompilerGeneratedAttribute]
public void set_Operations(IList`1<ProviderOperation> value);
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.RoleAssignmentCreateParameters : object {
    [CompilerGeneratedAttribute]
private string <RoleDefinitionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrincipalId>k__BackingField;
    [CompilerGeneratedAttribute]
private PrincipalType <PrincipalType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CanDelegate>k__BackingField;
    [JsonPropertyAttribute]
public string RoleDefinitionId { get; public set; }
    [JsonPropertyAttribute]
public string PrincipalId { get; public set; }
    [JsonPropertyAttribute]
public PrincipalType PrincipalType { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> CanDelegate { get; public set; }
    public RoleAssignmentCreateParameters(string roleDefinitionId, string principalId, PrincipalType principalType, Nullable`1<bool> canDelegate);
    [CompilerGeneratedAttribute]
public string get_RoleDefinitionId();
    [CompilerGeneratedAttribute]
public void set_RoleDefinitionId(string value);
    [CompilerGeneratedAttribute]
public string get_PrincipalId();
    [CompilerGeneratedAttribute]
public void set_PrincipalId(string value);
    [CompilerGeneratedAttribute]
public PrincipalType get_PrincipalType();
    [CompilerGeneratedAttribute]
public void set_PrincipalType(PrincipalType value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CanDelegate();
    [CompilerGeneratedAttribute]
public void set_CanDelegate(Nullable`1<bool> value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.RoleAssignmentFilter : object {
    [CompilerGeneratedAttribute]
private string <PrincipalId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CanDelegate>k__BackingField;
    [JsonPropertyAttribute]
public string PrincipalId { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> CanDelegate { get; public set; }
    public RoleAssignmentFilter(string principalId, Nullable`1<bool> canDelegate);
    [CompilerGeneratedAttribute]
public string get_PrincipalId();
    [CompilerGeneratedAttribute]
public void set_PrincipalId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CanDelegate();
    [CompilerGeneratedAttribute]
public void set_CanDelegate(Nullable`1<bool> value);
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.RoleAssignmentInner : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleDefinitionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrincipalId>k__BackingField;
    [CompilerGeneratedAttribute]
private PrincipalType <PrincipalType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CanDelegate>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; private set; }
    [JsonPropertyAttribute]
public string Name { get; private set; }
    [JsonPropertyAttribute]
public string Type { get; private set; }
    [JsonPropertyAttribute]
public string Scope { get; public set; }
    [JsonPropertyAttribute]
public string RoleDefinitionId { get; public set; }
    [JsonPropertyAttribute]
public string PrincipalId { get; public set; }
    [JsonPropertyAttribute]
public PrincipalType PrincipalType { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> CanDelegate { get; public set; }
    public RoleAssignmentInner(string id, string name, string type, string scope, string roleDefinitionId, string principalId, PrincipalType principalType, Nullable`1<bool> canDelegate);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_RoleDefinitionId();
    [CompilerGeneratedAttribute]
public void set_RoleDefinitionId(string value);
    [CompilerGeneratedAttribute]
public string get_PrincipalId();
    [CompilerGeneratedAttribute]
public void set_PrincipalId(string value);
    [CompilerGeneratedAttribute]
public PrincipalType get_PrincipalType();
    [CompilerGeneratedAttribute]
public void set_PrincipalType(PrincipalType value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CanDelegate();
    [CompilerGeneratedAttribute]
public void set_CanDelegate(Nullable`1<bool> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.RoleDefinitionFilter : object {
    [CompilerGeneratedAttribute]
private string <RoleName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyAttribute]
public string RoleName { get; public set; }
    [JsonPropertyAttribute]
public string Type { get; public set; }
    public RoleDefinitionFilter(string roleName, string type);
    [CompilerGeneratedAttribute]
public string get_RoleName();
    [CompilerGeneratedAttribute]
public void set_RoleName(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.RoleDefinitionInner : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleType>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PermissionInner> <Permissions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <AssignableScopes>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; private set; }
    [JsonPropertyAttribute]
public string Name { get; private set; }
    [JsonPropertyAttribute]
public string Type { get; private set; }
    [JsonPropertyAttribute]
public string RoleName { get; public set; }
    [JsonPropertyAttribute]
public string Description { get; public set; }
    [JsonPropertyAttribute]
public string RoleType { get; public set; }
    [JsonPropertyAttribute]
public IList`1<PermissionInner> Permissions { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> AssignableScopes { get; public set; }
    public RoleDefinitionInner(string id, string name, string type, string roleName, string description, string roleType, IList`1<PermissionInner> permissions, IList`1<string> assignableScopes);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_RoleName();
    [CompilerGeneratedAttribute]
public void set_RoleName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_RoleType();
    [CompilerGeneratedAttribute]
public void set_RoleType(string value);
    [CompilerGeneratedAttribute]
public IList`1<PermissionInner> get_Permissions();
    [CompilerGeneratedAttribute]
public void set_Permissions(IList`1<PermissionInner> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_AssignableScopes();
    [CompilerGeneratedAttribute]
public void set_AssignableScopes(IList`1<string> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalBase : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AccountEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AppRoleAssignmentRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<KeyCredential> <KeyCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PasswordCredential> <PasswordCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServicePrincipalType>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Tags>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<bool> AccountEnabled { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> AppRoleAssignmentRequired { get; public set; }
    [JsonPropertyAttribute]
public IList`1<KeyCredential> KeyCredentials { get; public set; }
    [JsonPropertyAttribute]
public IList`1<PasswordCredential> PasswordCredentials { get; public set; }
    [JsonPropertyAttribute]
public string ServicePrincipalType { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> Tags { get; public set; }
    public ServicePrincipalBase(Nullable`1<bool> accountEnabled, Nullable`1<bool> appRoleAssignmentRequired, IList`1<KeyCredential> keyCredentials, IList`1<PasswordCredential> passwordCredentials, string servicePrincipalType, IList`1<string> tags);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AccountEnabled();
    [CompilerGeneratedAttribute]
public void set_AccountEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AppRoleAssignmentRequired();
    [CompilerGeneratedAttribute]
public void set_AppRoleAssignmentRequired(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<KeyCredential> get_KeyCredentials();
    [CompilerGeneratedAttribute]
public void set_KeyCredentials(IList`1<KeyCredential> value);
    [CompilerGeneratedAttribute]
public IList`1<PasswordCredential> get_PasswordCredentials();
    [CompilerGeneratedAttribute]
public void set_PasswordCredentials(IList`1<PasswordCredential> value);
    [CompilerGeneratedAttribute]
public string get_ServicePrincipalType();
    [CompilerGeneratedAttribute]
public void set_ServicePrincipalType(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IList`1<string> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalCreateParameters : ServicePrincipalBase {
    [CompilerGeneratedAttribute]
private string <AppId>k__BackingField;
    [JsonPropertyAttribute]
public string AppId { get; public set; }
    public ServicePrincipalCreateParameters(string appId, Nullable`1<bool> accountEnabled, Nullable`1<bool> appRoleAssignmentRequired, IList`1<KeyCredential> keyCredentials, IList`1<PasswordCredential> passwordCredentials, string servicePrincipalType, IList`1<string> tags);
    [CompilerGeneratedAttribute]
public string get_AppId();
    [CompilerGeneratedAttribute]
public void set_AppId(string value);
    public virtual void Validate();
}
[JsonObjectAttribute("ServicePrincipal")]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalInner : DirectoryObject {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AccountEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <AlternativeNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppOwnerTenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AppRoleAssignmentRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<AppRole> <AppRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Homepage>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<KeyCredential> <KeyCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogoutUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<OAuth2Permission> <Oauth2Permissions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PasswordCredential> <PasswordCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreferredTokenSigningKeyThumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ReplyUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SamlMetadataUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ServicePrincipalNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServicePrincipalType>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Tags>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<bool> AccountEnabled { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> AlternativeNames { get; public set; }
    [JsonPropertyAttribute]
public string AppDisplayName { get; private set; }
    [JsonPropertyAttribute]
public string AppId { get; public set; }
    [JsonPropertyAttribute]
public string AppOwnerTenantId { get; private set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> AppRoleAssignmentRequired { get; public set; }
    [JsonPropertyAttribute]
public IList`1<AppRole> AppRoles { get; public set; }
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public string ErrorUrl { get; public set; }
    [JsonPropertyAttribute]
public string Homepage { get; public set; }
    [JsonPropertyAttribute]
public IList`1<KeyCredential> KeyCredentials { get; public set; }
    [JsonPropertyAttribute]
public string LogoutUrl { get; public set; }
    [JsonPropertyAttribute]
public IList`1<OAuth2Permission> Oauth2Permissions { get; private set; }
    [JsonPropertyAttribute]
public IList`1<PasswordCredential> PasswordCredentials { get; public set; }
    [JsonPropertyAttribute]
public string PreferredTokenSigningKeyThumbprint { get; public set; }
    [JsonPropertyAttribute]
public string PublisherName { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> ReplyUrls { get; public set; }
    [JsonPropertyAttribute]
public string SamlMetadataUrl { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> ServicePrincipalNames { get; public set; }
    [JsonPropertyAttribute]
public string ServicePrincipalType { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> Tags { get; public set; }
    public ServicePrincipalInner(IDictionary`2<string, object> additionalProperties, string objectId, Nullable`1<DateTime> deletionTimestamp, Nullable`1<bool> accountEnabled, IList`1<string> alternativeNames, string appDisplayName, string appId, string appOwnerTenantId, Nullable`1<bool> appRoleAssignmentRequired, IList`1<AppRole> appRoles, string displayName, string errorUrl, string homepage, IList`1<KeyCredential> keyCredentials, string logoutUrl, IList`1<OAuth2Permission> oauth2Permissions, IList`1<PasswordCredential> passwordCredentials, string preferredTokenSigningKeyThumbprint, string publisherName, IList`1<string> replyUrls, string samlMetadataUrl, IList`1<string> servicePrincipalNames, string servicePrincipalType, IList`1<string> tags);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AccountEnabled();
    [CompilerGeneratedAttribute]
public void set_AccountEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_AlternativeNames();
    [CompilerGeneratedAttribute]
public void set_AlternativeNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_AppDisplayName();
    [CompilerGeneratedAttribute]
private void set_AppDisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_AppId();
    [CompilerGeneratedAttribute]
public void set_AppId(string value);
    [CompilerGeneratedAttribute]
public string get_AppOwnerTenantId();
    [CompilerGeneratedAttribute]
private void set_AppOwnerTenantId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AppRoleAssignmentRequired();
    [CompilerGeneratedAttribute]
public void set_AppRoleAssignmentRequired(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<AppRole> get_AppRoles();
    [CompilerGeneratedAttribute]
public void set_AppRoles(IList`1<AppRole> value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorUrl();
    [CompilerGeneratedAttribute]
public void set_ErrorUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Homepage();
    [CompilerGeneratedAttribute]
public void set_Homepage(string value);
    [CompilerGeneratedAttribute]
public IList`1<KeyCredential> get_KeyCredentials();
    [CompilerGeneratedAttribute]
public void set_KeyCredentials(IList`1<KeyCredential> value);
    [CompilerGeneratedAttribute]
public string get_LogoutUrl();
    [CompilerGeneratedAttribute]
public void set_LogoutUrl(string value);
    [CompilerGeneratedAttribute]
public IList`1<OAuth2Permission> get_Oauth2Permissions();
    [CompilerGeneratedAttribute]
private void set_Oauth2Permissions(IList`1<OAuth2Permission> value);
    [CompilerGeneratedAttribute]
public IList`1<PasswordCredential> get_PasswordCredentials();
    [CompilerGeneratedAttribute]
public void set_PasswordCredentials(IList`1<PasswordCredential> value);
    [CompilerGeneratedAttribute]
public string get_PreferredTokenSigningKeyThumbprint();
    [CompilerGeneratedAttribute]
public void set_PreferredTokenSigningKeyThumbprint(string value);
    [CompilerGeneratedAttribute]
public string get_PublisherName();
    [CompilerGeneratedAttribute]
public void set_PublisherName(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ReplyUrls();
    [CompilerGeneratedAttribute]
public void set_ReplyUrls(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_SamlMetadataUrl();
    [CompilerGeneratedAttribute]
public void set_SamlMetadataUrl(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ServicePrincipalNames();
    [CompilerGeneratedAttribute]
public void set_ServicePrincipalNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_ServicePrincipalType();
    [CompilerGeneratedAttribute]
public void set_ServicePrincipalType(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IList`1<string> value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalObjectResultInner : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Odatametadata>k__BackingField;
    [JsonPropertyAttribute]
public string Value { get; public set; }
    [JsonPropertyAttribute]
public string Odatametadata { get; public set; }
    public ServicePrincipalObjectResultInner(string value, string odatametadata);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_Odatametadata();
    [CompilerGeneratedAttribute]
public void set_Odatametadata(string value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.ServicePrincipalUpdateParameters : ServicePrincipalBase {
    public ServicePrincipalUpdateParameters(Nullable`1<bool> accountEnabled, Nullable`1<bool> appRoleAssignmentRequired, IList`1<KeyCredential> keyCredentials, IList`1<PasswordCredential> passwordCredentials, string servicePrincipalType, IList`1<string> tags);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.SignInName : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    public SignInName(IDictionary`2<string, object> additionalProperties, string type, string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.UserBase : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImmutableId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UsageLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GivenName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Surname>k__BackingField;
    [CompilerGeneratedAttribute]
private UserType <UserType>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public string ImmutableId { get; public set; }
    [JsonPropertyAttribute]
public string UsageLocation { get; public set; }
    [JsonPropertyAttribute]
public string GivenName { get; public set; }
    [JsonPropertyAttribute]
public string Surname { get; public set; }
    [JsonPropertyAttribute]
public UserType UserType { get; public set; }
    public UserBase(IDictionary`2<string, object> additionalProperties, string immutableId, string usageLocation, string givenName, string surname, UserType userType);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_ImmutableId();
    [CompilerGeneratedAttribute]
public void set_ImmutableId(string value);
    [CompilerGeneratedAttribute]
public string get_UsageLocation();
    [CompilerGeneratedAttribute]
public void set_UsageLocation(string value);
    [CompilerGeneratedAttribute]
public string get_GivenName();
    [CompilerGeneratedAttribute]
public void set_GivenName(string value);
    [CompilerGeneratedAttribute]
public string get_Surname();
    [CompilerGeneratedAttribute]
public void set_Surname(string value);
    [CompilerGeneratedAttribute]
public UserType get_UserType();
    [CompilerGeneratedAttribute]
public void set_UserType(UserType value);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.UserCreateParameters : UserBase {
    [CompilerGeneratedAttribute]
private bool <AccountEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private PasswordProfile <PasswordProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserPrincipalName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MailNickname>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Mail>k__BackingField;
    [JsonPropertyAttribute]
public bool AccountEnabled { get; public set; }
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public PasswordProfile PasswordProfile { get; public set; }
    [JsonPropertyAttribute]
public string UserPrincipalName { get; public set; }
    [JsonPropertyAttribute]
public string MailNickname { get; public set; }
    [JsonPropertyAttribute]
public string Mail { get; public set; }
    public UserCreateParameters(bool accountEnabled, string displayName, PasswordProfile passwordProfile, string userPrincipalName, string mailNickname, IDictionary`2<string, object> additionalProperties, string immutableId, string usageLocation, string givenName, string surname, UserType userType, string mail);
    [CompilerGeneratedAttribute]
public bool get_AccountEnabled();
    [CompilerGeneratedAttribute]
public void set_AccountEnabled(bool value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public PasswordProfile get_PasswordProfile();
    [CompilerGeneratedAttribute]
public void set_PasswordProfile(PasswordProfile value);
    [CompilerGeneratedAttribute]
public string get_UserPrincipalName();
    [CompilerGeneratedAttribute]
public void set_UserPrincipalName(string value);
    [CompilerGeneratedAttribute]
public string get_MailNickname();
    [CompilerGeneratedAttribute]
public void set_MailNickname(string value);
    [CompilerGeneratedAttribute]
public string get_Mail();
    [CompilerGeneratedAttribute]
public void set_Mail(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.UserGetMemberGroupsParameters : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SecurityEnabledOnly>k__BackingField;
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [JsonPropertyAttribute]
public bool SecurityEnabledOnly { get; public set; }
    public UserGetMemberGroupsParameters(bool securityEnabledOnly, IDictionary`2<string, object> additionalProperties);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public bool get_SecurityEnabledOnly();
    [CompilerGeneratedAttribute]
public void set_SecurityEnabledOnly(bool value);
    public virtual void Validate();
}
[JsonObjectAttribute("User")]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.UserInner : DirectoryObject {
    [CompilerGeneratedAttribute]
private string <ImmutableId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UsageLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GivenName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Surname>k__BackingField;
    [CompilerGeneratedAttribute]
private UserType <UserType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AccountEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserPrincipalName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MailNickname>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Mail>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<SignInName> <SignInNames>k__BackingField;
    [JsonPropertyAttribute]
public string ImmutableId { get; public set; }
    [JsonPropertyAttribute]
public string UsageLocation { get; public set; }
    [JsonPropertyAttribute]
public string GivenName { get; public set; }
    [JsonPropertyAttribute]
public string Surname { get; public set; }
    [JsonPropertyAttribute]
public UserType UserType { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> AccountEnabled { get; public set; }
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public string UserPrincipalName { get; public set; }
    [JsonPropertyAttribute]
public string MailNickname { get; public set; }
    [JsonPropertyAttribute]
public string Mail { get; public set; }
    [JsonPropertyAttribute]
public IList`1<SignInName> SignInNames { get; public set; }
    public UserInner(IDictionary`2<string, object> additionalProperties, string objectId, Nullable`1<DateTime> deletionTimestamp, string immutableId, string usageLocation, string givenName, string surname, UserType userType, Nullable`1<bool> accountEnabled, string displayName, string userPrincipalName, string mailNickname, string mail, IList`1<SignInName> signInNames);
    [CompilerGeneratedAttribute]
public string get_ImmutableId();
    [CompilerGeneratedAttribute]
public void set_ImmutableId(string value);
    [CompilerGeneratedAttribute]
public string get_UsageLocation();
    [CompilerGeneratedAttribute]
public void set_UsageLocation(string value);
    [CompilerGeneratedAttribute]
public string get_GivenName();
    [CompilerGeneratedAttribute]
public void set_GivenName(string value);
    [CompilerGeneratedAttribute]
public string get_Surname();
    [CompilerGeneratedAttribute]
public void set_Surname(string value);
    [CompilerGeneratedAttribute]
public UserType get_UserType();
    [CompilerGeneratedAttribute]
public void set_UserType(UserType value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AccountEnabled();
    [CompilerGeneratedAttribute]
public void set_AccountEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_UserPrincipalName();
    [CompilerGeneratedAttribute]
public void set_UserPrincipalName(string value);
    [CompilerGeneratedAttribute]
public string get_MailNickname();
    [CompilerGeneratedAttribute]
public void set_MailNickname(string value);
    [CompilerGeneratedAttribute]
public string get_Mail();
    [CompilerGeneratedAttribute]
public void set_Mail(string value);
    [CompilerGeneratedAttribute]
public IList`1<SignInName> get_SignInNames();
    [CompilerGeneratedAttribute]
public void set_SignInNames(IList`1<SignInName> value);
}
[JsonConverterAttribute("Microsoft.Azure.Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter`1<Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.UserType>")]
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.UserType : ExpandableStringEnum`1<UserType> {
    public static UserType Member;
    public static UserType Guest;
    private static UserType();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.Models.UserUpdateParameters : UserBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AccountEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private PasswordProfile <PasswordProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserPrincipalName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MailNickname>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<bool> AccountEnabled { get; public set; }
    [JsonPropertyAttribute]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute]
public PasswordProfile PasswordProfile { get; public set; }
    [JsonPropertyAttribute]
public string UserPrincipalName { get; public set; }
    [JsonPropertyAttribute]
public string MailNickname { get; public set; }
    public UserUpdateParameters(IDictionary`2<string, object> additionalProperties, string immutableId, string usageLocation, string givenName, string surname, UserType userType, Nullable`1<bool> accountEnabled, string displayName, PasswordProfile passwordProfile, string userPrincipalName, string mailNickname);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AccountEnabled();
    [CompilerGeneratedAttribute]
public void set_AccountEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public PasswordProfile get_PasswordProfile();
    [CompilerGeneratedAttribute]
public void set_PasswordProfile(PasswordProfile value);
    [CompilerGeneratedAttribute]
public string get_UserPrincipalName();
    [CompilerGeneratedAttribute]
public void set_UserPrincipalName(string value);
    [CompilerGeneratedAttribute]
public string get_MailNickname();
    [CompilerGeneratedAttribute]
public void set_MailNickname(string value);
    public virtual void Validate();
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.OAuth2PermissionGrantOperations : object {
    [CompilerGeneratedAttribute]
private GraphRbacManagementClient <Client>k__BackingField;
    public GraphRbacManagementClient Client { get; private set; }
    internal OAuth2PermissionGrantOperations(GraphRbacManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual GraphRbacManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(GraphRbacManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.OAuth2PermissionGrantOperations/<ListWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<OAuth2PermissionGrantInner>>> ListWithHttpMessagesAsync(string filter, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.OAuth2PermissionGrantOperations/<CreateWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<OAuth2PermissionGrantInner>> CreateWithHttpMessagesAsync(OAuth2PermissionGrantInner body, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.OAuth2PermissionGrantOperations/<DeleteWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.OAuth2PermissionGrantOperations/<ListNextWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<OAuth2PermissionGrantInner>>> ListNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.OAuth2PermissionGrantOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.OAuth2PermissionGrantOperationsExtensions/<ListAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IPage`1<OAuth2PermissionGrantInner>> ListAsync(IOAuth2PermissionGrantOperations operations, string filter, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.OAuth2PermissionGrantOperationsExtensions/<CreateAsync>d__1")]
[ExtensionAttribute]
public static Task`1<OAuth2PermissionGrantInner> CreateAsync(IOAuth2PermissionGrantOperations operations, OAuth2PermissionGrantInner body, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.OAuth2PermissionGrantOperationsExtensions/<DeleteAsync>d__2")]
[ExtensionAttribute]
public static Task DeleteAsync(IOAuth2PermissionGrantOperations operations, string objectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.OAuth2PermissionGrantOperationsExtensions/<ListNextAsync>d__3")]
[ExtensionAttribute]
public static Task`1<IPage`1<OAuth2PermissionGrantInner>> ListNextAsync(IOAuth2PermissionGrantOperations operations, string nextLink, CancellationToken cancellationToken);
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.ObjectsOperations : object {
    [CompilerGeneratedAttribute]
private GraphRbacManagementClient <Client>k__BackingField;
    public GraphRbacManagementClient Client { get; private set; }
    internal ObjectsOperations(GraphRbacManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual GraphRbacManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(GraphRbacManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ObjectsOperations/<GetObjectsByObjectIdsWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> GetObjectsByObjectIdsWithHttpMessagesAsync(GetObjectsParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ObjectsOperations/<GetObjectsByObjectIdsNextWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> GetObjectsByObjectIdsNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.ObjectsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ObjectsOperationsExtensions/<GetObjectsByObjectIdsAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IPage`1<DirectoryObject>> GetObjectsByObjectIdsAsync(IObjectsOperations operations, GetObjectsParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ObjectsOperationsExtensions/<GetObjectsByObjectIdsNextAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<DirectoryObject>> GetObjectsByObjectIdsNextAsync(IObjectsOperations operations, string nextLink, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IBlank`1 {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IDefinition`1 {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IWithAuthFile`1 {
    public abstract virtual IWithAttach`1<ParentT> WithAuthFileToExport(StreamWriter outputStream);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IWithDuration`1 {
    public abstract virtual IWithAttach`1<ParentT> WithDuration(TimeSpan duration);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IWithKey`1 {
    public abstract virtual IWithAttach`1<ParentT> WithPasswordValue(string password);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IWithStartDate`1 {
    public abstract virtual IWithAttach`1<ParentT> WithStartDate(DateTime startDate);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IBlank`1 {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IUpdateDefinition`1 {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IWithAttach`1 {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IWithAuthFile`1 {
    public abstract virtual IWithAttach`1<ParentT> WithAuthFileToExport(StreamWriter outputStream);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IWithDuration`1 {
    public abstract virtual IWithAttach`1<ParentT> WithDuration(TimeSpan duration);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IWithKey`1 {
    public abstract virtual IWithAttach`1<ParentT> WithPasswordValue(string password);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IWithStartDate`1 {
    public abstract virtual IWithAttach`1<ParentT> WithStartDate(DateTime startDate);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl`1 : IndexableRefreshableWrapper`2<IPasswordCredential, PasswordCredential> {
    private string name;
    private IHasCredential`1<T> parent;
    private StreamWriter authFile;
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName.Name { get; }
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }
    private DateTime Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential.StartDate { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential.Value { get; }
    private DateTime Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential.EndDate { get; }
    internal PasswordCredentialImpl`1(PasswordCredential passwordCredential);
    internal PasswordCredentialImpl`1(string name, IHasCredential`1<T> parent);
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName.get_Name();
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.get_Id();
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IWithAuthFile<T>.WithAuthFileToExport(StreamWriter outputStream);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IWithAuthFile<T>.WithAuthFileToExport(StreamWriter outputStream);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IWithDuration<T>.WithDuration(TimeSpan duration);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IWithDuration<T>.WithDuration(TimeSpan duration);
    private sealed virtual override DateTime Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential.get_StartDate();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential.get_Value();
    private sealed virtual override DateTime Microsoft.Azure.Management.Graph.RBAC.Fluent.ICredential.get_EndDate();
    private sealed virtual override T Microsoft.Azure.Management.ResourceManager.Fluent.Core.ChildResource.Update.IInUpdate<T>.Attach();
    private sealed virtual override T Microsoft.Azure.Management.ResourceManager.Fluent.Core.ChildResource.Definition.IInDefinition<T>.Attach();
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IWithKey<T>.WithPasswordValue(string password);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IWithKey<T>.WithPasswordValue(string password);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.UpdateDefinition.IWithStartDate<T>.WithStartDate(DateTime startDate);
    private sealed virtual override IWithAttach`1<T> Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredential.Definition.IWithStartDate<T>.WithStartDate(DateTime startDate);
    public PasswordCredentialImpl`1<T> WithPasswordValue(string password);
    public DateTime EndDate();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl`1/<GetInnerAsync>d__25")]
protected virtual Task`1<PasswordCredential> GetInnerAsync(CancellationToken cancellationToken);
    public PasswordCredentialImpl`1<T> WithDuration(TimeSpan duration);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl`1/<ExportAuthFileAsync>d__27")]
internal Task ExportAuthFileAsync(ServicePrincipalImpl servicePrincipal, CancellationToken cancellationToken);
    public PasswordCredentialImpl`1<T> WithStartDate(DateTime startDate);
    public string Name();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.PasswordCredentialImpl`1/<RefreshAsync>d__32")]
public virtual Task`1<IPasswordCredential> RefreshAsync(CancellationToken cancellationToken);
    public string Id();
    public T Attach();
    public string Value();
    public PasswordCredentialImpl`1<T> WithAuthFileToExport(StreamWriter outputStream);
    public DateTime StartDate();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.PermissionImpl : Wrapper`1<PermissionInner> {
    public IList`1<string> Actions { get; }
    public IList`1<string> NotActions { get; }
    public IList`1<string> DataActions { get; }
    public IList`1<string> NotDataActions { get; }
    public PermissionImpl(PermissionInner innerObject);
    public sealed virtual IList`1<string> get_Actions();
    public sealed virtual IList`1<string> get_NotActions();
    public sealed virtual IList`1<string> get_DataActions();
    public sealed virtual IList`1<string> get_NotDataActions();
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.PermissionsOperations : object {
    [CompilerGeneratedAttribute]
private AuthorizationManagementClient <Client>k__BackingField;
    public AuthorizationManagementClient Client { get; private set; }
    internal PermissionsOperations(AuthorizationManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual AuthorizationManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(AuthorizationManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.PermissionsOperations/<ListForResourceGroupWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<PermissionInner>>> ListForResourceGroupWithHttpMessagesAsync(string resourceGroupName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.PermissionsOperations/<ListForResourceWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<PermissionInner>>> ListForResourceWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.PermissionsOperations/<ListForResourceGroupNextWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<PermissionInner>>> ListForResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.PermissionsOperations/<ListForResourceNextWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<PermissionInner>>> ListForResourceNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.PermissionsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.PermissionsOperationsExtensions/<ListForResourceGroupAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IPage`1<PermissionInner>> ListForResourceGroupAsync(IPermissionsOperations operations, string resourceGroupName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.PermissionsOperationsExtensions/<ListForResourceAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<PermissionInner>> ListForResourceAsync(IPermissionsOperations operations, string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.PermissionsOperationsExtensions/<ListForResourceGroupNextAsync>d__2")]
[ExtensionAttribute]
public static Task`1<IPage`1<PermissionInner>> ListForResourceGroupNextAsync(IPermissionsOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.PermissionsOperationsExtensions/<ListForResourceNextAsync>d__3")]
[ExtensionAttribute]
public static Task`1<IPage`1<PermissionInner>> ListForResourceNextAsync(IPermissionsOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.ProviderOperationsMetadataOperations : object {
    [CompilerGeneratedAttribute]
private AuthorizationManagementClient <Client>k__BackingField;
    public AuthorizationManagementClient Client { get; private set; }
    internal ProviderOperationsMetadataOperations(AuthorizationManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual AuthorizationManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(AuthorizationManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ProviderOperationsMetadataOperations/<GetWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<ProviderOperationsMetadataInner>> GetWithHttpMessagesAsync(string resourceProviderNamespace, string expand, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ProviderOperationsMetadataOperations/<ListWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ProviderOperationsMetadataInner>>> ListWithHttpMessagesAsync(string expand, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ProviderOperationsMetadataOperations/<ListNextWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ProviderOperationsMetadataInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.ProviderOperationsMetadataOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ProviderOperationsMetadataOperationsExtensions/<GetAsync>d__0")]
[ExtensionAttribute]
public static Task`1<ProviderOperationsMetadataInner> GetAsync(IProviderOperationsMetadataOperations operations, string resourceProviderNamespace, string expand, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ProviderOperationsMetadataOperationsExtensions/<ListAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<ProviderOperationsMetadataInner>> ListAsync(IProviderOperationsMetadataOperations operations, string expand, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ProviderOperationsMetadataOperationsExtensions/<ListNextAsync>d__2")]
[ExtensionAttribute]
public static Task`1<IPage`1<ProviderOperationsMetadataInner>> ListNextAsync(IProviderOperationsMetadataOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IBlank {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IDefinition {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithAssignee {
    public abstract virtual IWithRole ForUser(IActiveDirectoryUser user);
    public abstract virtual IWithRole ForUser(string name);
    public abstract virtual IWithRole ForGroup(IActiveDirectoryGroup activeDirectoryGroup);
    public abstract virtual IWithRole ForServicePrincipal(IServicePrincipal servicePrincipal);
    public abstract virtual IWithRole ForServicePrincipal(string servicePrincipalName);
    public abstract virtual IWithRole ForObjectId(string objectId);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithCreate {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithRole {
    public abstract virtual IWithScope WithBuiltInRole(BuiltInRole role);
    public abstract virtual IWithScope WithRoleDefinition(string roleDefinitionId);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithScope {
    public abstract virtual IWithCreate WithResourceScope(IResource resource);
    public abstract virtual IWithCreate WithScope(string scope);
    public abstract virtual IWithCreate WithResourceGroupScope(IResourceGroup resourceGroup);
    public abstract virtual IWithCreate WithSubscriptionScope(string subscriptionId);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentHelper : object {
    private static string CURRENT_RESOURCE_GROUP_SCOPE;
    private IGraphRbacManager rbacManager;
    private IIdProvider idProvider;
    private IDictionary`2<string, Tuple`2<string, BuiltInRole>> rolesToAssign;
    private IDictionary`2<string, Tuple`2<string, string>> roleDefinitionsToAssign;
    private IList`1<string> roleAssignmentIdsToRemove;
    private IDictionary`2<string, Tuple`2<string, BuiltInRole>> roleAssignmentsToRemove;
    public bool HasPendingRoleAssignments { get; }
    public RoleAssignmentHelper(IGraphRbacManager rbacManager, IIdProvider idProvider);
    private static RoleAssignmentHelper();
    public RoleAssignmentHelper WithAccessToCurrentResourceGroup(BuiltInRole role);
    public RoleAssignmentHelper WithAccessTo(string resourceId, BuiltInRole role);
    public RoleAssignmentHelper WithAccessToCurrentResourceGroup(string roleDefinitionId);
    public RoleAssignmentHelper WithAccessTo(string resourceId, string roleDefinitionId);
    public RoleAssignmentHelper WithoutAccessTo(IRoleAssignment roleAssignment);
    public RoleAssignmentHelper WithoutAccessTo(string resourceId, BuiltInRole role);
    public bool get_HasPendingRoleAssignments();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentHelper/<CommitsRoleAssignmentsPendingActionAsync>d__16")]
public Task CommitsRoleAssignmentsPendingActionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentHelper/<CreateRbacRoleAssignmentsAsync>d__17")]
private Task`1<List`1<IRoleAssignment>> CreateRbacRoleAssignmentsAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentHelper/<RemoveRbacRoleAssignmentsAsync>d__18")]
private Task RemoveRbacRoleAssignmentsAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentHelper/<CreateRbacRoleAssignmentIfNotExistsAsync>d__19")]
private Task`1<IRoleAssignment> CreateRbacRoleAssignmentIfNotExistsAsync(string roleOrRoleDefinition, string scope, bool isRole, CancellationToken cancellationToken);
    private bool ResolveCurrentResourceGroupScope();
    private static string ResourceGroupId(string id);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentImpl : Creatable`4<IRoleAssignment, RoleAssignmentInner, RoleAssignmentImpl, IRoleAssignment> {
    private GraphRbacManager manager;
    private string objectId;
    private string userName;
    private string servicePrincipalName;
    private string roleDefinitionId;
    private string roleName;
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment.Scope { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment.PrincipalId { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment.RoleDefinitionId { get; }
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }
    private GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.Manager { get; }
    internal RoleAssignmentImpl(string name, RoleAssignmentInner innerObject, GraphRbacManager manager);
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment.get_Scope();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment.get_PrincipalId();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment.get_RoleDefinitionId();
    private sealed virtual override IWithRole Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithAssignee.ForServicePrincipal(IServicePrincipal servicePrincipal);
    private sealed virtual override IWithRole Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithAssignee.ForServicePrincipal(string servicePrincipalName);
    private sealed virtual override IWithRole Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithAssignee.ForUser(IActiveDirectoryUser user);
    private sealed virtual override IWithRole Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithAssignee.ForUser(string name);
    private sealed virtual override IWithRole Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithAssignee.ForGroup(IActiveDirectoryGroup activeDirectoryGroup);
    private sealed virtual override IWithRole Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithAssignee.ForObjectId(string objectId);
    private sealed virtual override IWithScope Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithRole.WithBuiltInRole(BuiltInRole role);
    private sealed virtual override IWithScope Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithRole.WithRoleDefinition(string roleDefinitionId);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithScope.WithResourceGroupScope(IResourceGroup resourceGroup);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithScope.WithResourceScope(IResource resource);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithScope.WithSubscriptionScope(string subscriptionId);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IWithScope.WithScope(string scope);
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.get_Id();
    private sealed virtual override GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.get_Manager();
    public RoleAssignmentImpl ForUser(IActiveDirectoryUser user);
    public RoleAssignmentImpl ForUser(string name);
    public RoleAssignmentImpl WithBuiltInRole(BuiltInRole role);
    public RoleAssignmentImpl WithResourceScope(IResource resource);
    public GraphRbacManager Manager();
    public RoleAssignmentImpl ForGroup(IActiveDirectoryGroup activeDirectoryGroup);
    public bool IsInCreateMode();
    public RoleAssignmentImpl ForServicePrincipal(IServicePrincipal servicePrincipal);
    public RoleAssignmentImpl ForServicePrincipal(string servicePrincipalName);
    public string PrincipalId();
    public RoleAssignmentImpl ForObjectId(string objectId);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentImpl/<GetInnerAsync>d__40")]
protected virtual Task`1<RoleAssignmentInner> GetInnerAsync(CancellationToken cancellationToken);
    public string RoleDefinitionId();
    public RoleAssignmentImpl WithRoleDefinition(string roleDefinitionId);
    public string Scope();
    public RoleAssignmentImpl WithScope(string scope);
    public RoleAssignmentImpl WithResourceGroupScope(IResourceGroup resourceGroup);
    public string Id();
    public RoleAssignmentImpl WithSubscriptionScope(string subscriptionId);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentImpl/<CreateResourceAsync>d__48")]
public virtual Task`1<IRoleAssignment> CreateResourceAsync(CancellationToken cancellationToken);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsImpl : CreatableResources`3<IRoleAssignment, RoleAssignmentImpl, RoleAssignmentInner> {
    private GraphRbacManager manager;
    public IRoleAssignmentsOperations Inner { get; }
    private GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.Manager { get; }
    internal RoleAssignmentsImpl(GraphRbacManager manager);
    private sealed virtual override IEnumerable`1<IRoleAssignment> Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignments.ListByScope(string scope);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsImpl/<Microsoft-Azure-Management-Graph-RBAC-Fluent-IRoleAssignments-GetByScopeAsync>d__1")]
private sealed virtual override Task`1<IRoleAssignment> Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignments.GetByScopeAsync(string scope, string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsImpl/<Microsoft-Azure-Management-Graph-RBAC-Fluent-IRoleAssignments-ListByScopeAsync>d__2")]
private sealed virtual override Task`1<IPagedCollection`1<IRoleAssignment>> Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignments.ListByScopeAsync(string scope, CancellationToken cancellationToken);
    private sealed virtual override IRoleAssignment Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignments.GetByScope(string scope, string name);
    public GraphRbacManager Manager();
    public RoleAssignmentImpl GetById(string objectId);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsImpl/<GetByIdAsync>d__7")]
public sealed virtual Task`1<IRoleAssignment> GetByIdAsync(string id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsImpl/<GetByScopeAsync>d__8")]
public Task`1<IRoleAssignment> GetByScopeAsync(string scope, string name, CancellationToken cancellationToken);
    public RoleAssignmentImpl Define(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsImpl/<ListByScopeAsync>d__10")]
public Task`1<IPagedCollection`1<IRoleAssignment>> ListByScopeAsync(string scope, CancellationToken cancellationToken);
    public IEnumerable`1<IRoleAssignment> ListByScope(string scope);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsImpl/<DeleteByIdAsync>d__12")]
public virtual Task DeleteByIdAsync(string id, CancellationToken cancellationToken);
    public RoleAssignmentImpl GetByScope(string scope, string name);
    public sealed virtual IRoleAssignmentsOperations get_Inner();
    private sealed virtual override GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.get_Manager();
    protected virtual IRoleAssignment WrapModel(RoleAssignmentInner roleAssignmentInner);
    protected virtual RoleAssignmentImpl WrapModel(string name);
    public virtual void DeleteById(string id);
    private sealed virtual override IRoleAssignment Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById<Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleAssignment>.GetById(string id);
    private sealed virtual override IBlank Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating<Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignment.Definition.IBlank>.Define(string name);
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations : object {
    [CompilerGeneratedAttribute]
private AuthorizationManagementClient <Client>k__BackingField;
    public AuthorizationManagementClient Client { get; private set; }
    internal RoleAssignmentsOperations(AuthorizationManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual AuthorizationManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(AuthorizationManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<ListForResourceWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListForResourceWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, ODataQuery`1<RoleAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<ListForResourceGroupWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListForResourceGroupWithHttpMessagesAsync(string resourceGroupName, ODataQuery`1<RoleAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<DeleteWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse`1<RoleAssignmentInner>> DeleteWithHttpMessagesAsync(string scope, string roleAssignmentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<CreateWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<RoleAssignmentInner>> CreateWithHttpMessagesAsync(string scope, string roleAssignmentName, RoleAssignmentCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<GetWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse`1<RoleAssignmentInner>> GetWithHttpMessagesAsync(string scope, string roleAssignmentName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<DeleteByIdWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse`1<RoleAssignmentInner>> DeleteByIdWithHttpMessagesAsync(string roleId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<CreateByIdWithHttpMessagesAsync>d__11")]
public sealed virtual Task`1<AzureOperationResponse`1<RoleAssignmentInner>> CreateByIdWithHttpMessagesAsync(string roleId, RoleAssignmentCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<GetByIdWithHttpMessagesAsync>d__12")]
public sealed virtual Task`1<AzureOperationResponse`1<RoleAssignmentInner>> GetByIdWithHttpMessagesAsync(string roleId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<ListWithHttpMessagesAsync>d__13")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListWithHttpMessagesAsync(ODataQuery`1<RoleAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<ListForScopeWithHttpMessagesAsync>d__14")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListForScopeWithHttpMessagesAsync(string scope, ODataQuery`1<RoleAssignmentFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<ListForResourceNextWithHttpMessagesAsync>d__15")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListForResourceNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<ListForResourceGroupNextWithHttpMessagesAsync>d__16")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListForResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<ListNextWithHttpMessagesAsync>d__17")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperations/<ListForScopeNextWithHttpMessagesAsync>d__18")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RoleAssignmentInner>>> ListForScopeNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<ListForResourceAsync>d__0")]
[ExtensionAttribute]
public static Task`1<IPage`1<RoleAssignmentInner>> ListForResourceAsync(IRoleAssignmentsOperations operations, string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, ODataQuery`1<RoleAssignmentFilter> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<ListForResourceGroupAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<RoleAssignmentInner>> ListForResourceGroupAsync(IRoleAssignmentsOperations operations, string resourceGroupName, ODataQuery`1<RoleAssignmentFilter> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<DeleteAsync>d__2")]
[ExtensionAttribute]
public static Task`1<RoleAssignmentInner> DeleteAsync(IRoleAssignmentsOperations operations, string scope, string roleAssignmentName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<CreateAsync>d__3")]
[ExtensionAttribute]
public static Task`1<RoleAssignmentInner> CreateAsync(IRoleAssignmentsOperations operations, string scope, string roleAssignmentName, RoleAssignmentCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<GetAsync>d__4")]
[ExtensionAttribute]
public static Task`1<RoleAssignmentInner> GetAsync(IRoleAssignmentsOperations operations, string scope, string roleAssignmentName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<DeleteByIdAsync>d__5")]
[ExtensionAttribute]
public static Task`1<RoleAssignmentInner> DeleteByIdAsync(IRoleAssignmentsOperations operations, string roleId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<CreateByIdAsync>d__6")]
[ExtensionAttribute]
public static Task`1<RoleAssignmentInner> CreateByIdAsync(IRoleAssignmentsOperations operations, string roleId, RoleAssignmentCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<GetByIdAsync>d__7")]
[ExtensionAttribute]
public static Task`1<RoleAssignmentInner> GetByIdAsync(IRoleAssignmentsOperations operations, string roleId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<ListAsync>d__8")]
[ExtensionAttribute]
public static Task`1<IPage`1<RoleAssignmentInner>> ListAsync(IRoleAssignmentsOperations operations, ODataQuery`1<RoleAssignmentFilter> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<ListForScopeAsync>d__9")]
[ExtensionAttribute]
public static Task`1<IPage`1<RoleAssignmentInner>> ListForScopeAsync(IRoleAssignmentsOperations operations, string scope, ODataQuery`1<RoleAssignmentFilter> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<ListForResourceNextAsync>d__10")]
[ExtensionAttribute]
public static Task`1<IPage`1<RoleAssignmentInner>> ListForResourceNextAsync(IRoleAssignmentsOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<ListForResourceGroupNextAsync>d__11")]
[ExtensionAttribute]
public static Task`1<IPage`1<RoleAssignmentInner>> ListForResourceGroupNextAsync(IRoleAssignmentsOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<ListNextAsync>d__12")]
[ExtensionAttribute]
public static Task`1<IPage`1<RoleAssignmentInner>> ListNextAsync(IRoleAssignmentsOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleAssignmentsOperationsExtensions/<ListForScopeNextAsync>d__13")]
[ExtensionAttribute]
public static Task`1<IPage`1<RoleAssignmentInner>> ListForScopeNextAsync(IRoleAssignmentsOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionImpl : Wrapper`1<RoleDefinitionInner> {
    private GraphRbacManager manager;
    private string objectId;
    private string userName;
    private string servicePrincipalName;
    private string roleDefinitionId;
    private string roleName;
    private ISet`1<string> Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinition.AssignableScopes { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinition.RoleName { get; }
    private ISet`1<IPermission> Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinition.Permissions { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinition.Type { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinition.Description { get; }
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName.Name { get; }
    private GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.Manager { get; }
    internal RoleDefinitionImpl(RoleDefinitionInner innerObject, GraphRbacManager manager);
    private sealed virtual override ISet`1<string> Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinition.get_AssignableScopes();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinition.get_RoleName();
    private sealed virtual override ISet`1<IPermission> Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinition.get_Permissions();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinition.get_Type();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinition.get_Description();
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.get_Id();
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasName.get_Name();
    private sealed virtual override GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.get_Manager();
    public GraphRbacManager Manager();
    public ISet`1<IPermission> Permissions();
    public string Name();
    public string RoleName();
    public string Description();
    public string Id();
    public string Type();
    public ISet`1<string> AssignableScopes();
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsImpl : ReadableWrappers`3<IRoleDefinition, RoleDefinitionImpl, RoleDefinitionInner> {
    private GraphRbacManager manager;
    public IRoleDefinitionsOperations Inner { get; }
    private GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.Manager { get; }
    internal RoleDefinitionsImpl(GraphRbacManager manager);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsImpl/<Microsoft-Azure-Management-Graph-RBAC-Fluent-IRoleDefinitions-GetByScopeAndRoleNameAsync>d__0")]
private sealed virtual override Task`1<IRoleDefinition> Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinitions.GetByScopeAndRoleNameAsync(string scope, string roleName, CancellationToken cancellationToken);
    private sealed virtual override IRoleDefinition Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinitions.GetByScopeAndRoleName(string scope, string roleName);
    private sealed virtual override IEnumerable`1<IRoleDefinition> Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinitions.ListByScope(string scope);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsImpl/<Microsoft-Azure-Management-Graph-RBAC-Fluent-IRoleDefinitions-GetByScopeAsync>d__3")]
private sealed virtual override Task`1<IRoleDefinition> Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinitions.GetByScopeAsync(string scope, string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsImpl/<Microsoft-Azure-Management-Graph-RBAC-Fluent-IRoleDefinitions-ListByScopeAsync>d__4")]
private sealed virtual override Task`1<IEnumerable`1<IRoleDefinition>> Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinitions.ListByScopeAsync(string scope, CancellationToken cancellationToken);
    private sealed virtual override IRoleDefinition Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinitions.GetByScope(string scope, string name);
    public GraphRbacManager Manager();
    public RoleDefinitionImpl GetById(string objectId);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsImpl/<GetByIdAsync>d__9")]
public sealed virtual Task`1<IRoleDefinition> GetByIdAsync(string id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsImpl/<GetByScopeAsync>d__10")]
public Task`1<IRoleDefinition> GetByScopeAsync(string scope, string name, CancellationToken cancellationToken);
    public RoleDefinitionImpl GetByScopeAndRoleName(string scope, string roleName);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsImpl/<ListByScopeAsync>d__12")]
public Task`1<IPagedCollection`1<IRoleDefinition>> ListByScopeAsync(string scope, CancellationToken cancellationToken);
    public IEnumerable`1<IRoleDefinition> ListByScope(string scope);
    public RoleDefinitionImpl GetByScope(string scope, string name);
    public sealed virtual IRoleDefinitionsOperations get_Inner();
    private sealed virtual override GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.get_Manager();
    protected virtual IRoleDefinition WrapModel(RoleDefinitionInner roleDefinitionInner);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsImpl/<GetByScopeAndRoleNameAsync>d__21")]
public Task`1<IRoleDefinition> GetByScopeAndRoleNameAsync(string scope, string roleName, CancellationToken cancellationToken);
    private sealed virtual override IRoleDefinition Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById<Microsoft.Azure.Management.Graph.RBAC.Fluent.IRoleDefinition>.GetById(string id);
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperations : object {
    [CompilerGeneratedAttribute]
private AuthorizationManagementClient <Client>k__BackingField;
    public AuthorizationManagementClient Client { get; private set; }
    internal RoleDefinitionsOperations(AuthorizationManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual AuthorizationManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(AuthorizationManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperations/<DeleteWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<RoleDefinitionInner>> DeleteWithHttpMessagesAsync(string scope, string roleDefinitionId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperations/<GetWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<RoleDefinitionInner>> GetWithHttpMessagesAsync(string scope, string roleDefinitionId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperations/<CreateOrUpdateWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse`1<RoleDefinitionInner>> CreateOrUpdateWithHttpMessagesAsync(string scope, string roleDefinitionId, RoleDefinitionInner roleDefinition, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperations/<ListWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RoleDefinitionInner>>> ListWithHttpMessagesAsync(string scope, ODataQuery`1<RoleDefinitionFilter> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperations/<GetByIdWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse`1<RoleDefinitionInner>> GetByIdWithHttpMessagesAsync(string roleId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperations/<ListNextWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<RoleDefinitionInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperationsExtensions/<DeleteAsync>d__0")]
[ExtensionAttribute]
public static Task`1<RoleDefinitionInner> DeleteAsync(IRoleDefinitionsOperations operations, string scope, string roleDefinitionId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperationsExtensions/<GetAsync>d__1")]
[ExtensionAttribute]
public static Task`1<RoleDefinitionInner> GetAsync(IRoleDefinitionsOperations operations, string scope, string roleDefinitionId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperationsExtensions/<CreateOrUpdateAsync>d__2")]
[ExtensionAttribute]
public static Task`1<RoleDefinitionInner> CreateOrUpdateAsync(IRoleDefinitionsOperations operations, string scope, string roleDefinitionId, RoleDefinitionInner roleDefinition, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperationsExtensions/<ListAsync>d__3")]
[ExtensionAttribute]
public static Task`1<IPage`1<RoleDefinitionInner>> ListAsync(IRoleDefinitionsOperations operations, string scope, ODataQuery`1<RoleDefinitionFilter> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperationsExtensions/<GetByIdAsync>d__4")]
[ExtensionAttribute]
public static Task`1<RoleDefinitionInner> GetByIdAsync(IRoleDefinitionsOperations operations, string roleId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.RoleDefinitionsOperationsExtensions/<ListNextAsync>d__5")]
[ExtensionAttribute]
public static Task`1<IPage`1<RoleDefinitionInner>> ListNextAsync(IRoleDefinitionsOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IBlank {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IDefinition {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplication {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta {
    public abstract virtual IWithCreate WithExistingApplication(string id);
    public abstract virtual IWithCreate WithExistingApplication(IActiveDirectoryApplication application);
    public abstract virtual IWithCreate WithNewApplication(ICreatable`1<IActiveDirectoryApplication> applicationCreatable);
    public abstract virtual IWithCreate WithNewApplication(string signOnUrl);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredential {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredentialBeta {
    public abstract virtual IBlank`1<IWithCreate> DefinePasswordCredential(string name);
    public abstract virtual IBlank`1<IWithCreate> DefineCertificateCredential(string name);
    public abstract virtual IBlank`1<IWithCreate> DefineCertificateCredential();
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignment {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta {
    public abstract virtual IWithCreate WithNewRoleInResourceGroup(BuiltInRole role, IResourceGroup resourceGroup);
    public abstract virtual IWithCreate WithNewRoleInSubscription(BuiltInRole role, string subscriptionId);
    public abstract virtual IWithCreate WithNewRole(BuiltInRole role, string scope);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredential {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta {
    public abstract virtual IBlank`1<IUpdate> DefinePasswordCredential(string name);
    public abstract virtual IBlank`1<IUpdate> DefineCertificateCredential(string name);
    public abstract virtual IBlank`1<IUpdate> DefineCertificateCredential();
    public abstract virtual IUpdate WithoutCredential(string name);
    public abstract virtual IUpdate WithoutCredentialByIdentifier(string keyIdentifier);
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignment {
}
public interface Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta {
    public abstract virtual IUpdate WithoutRole(IRoleAssignment roleAssignment);
    public abstract virtual IUpdate WithNewRoleInResourceGroup(BuiltInRole role, IResourceGroup resourceGroup);
    public abstract virtual IUpdate WithNewRoleInSubscription(BuiltInRole role, string subscriptionId);
    public abstract virtual IUpdate WithNewRole(BuiltInRole role, string scope);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl : CreatableUpdatable`5<IServicePrincipal, ServicePrincipalInner, ServicePrincipalImpl, IHasId, IUpdate> {
    private GraphRbacManager manager;
    private Dictionary`2<string, IPasswordCredential> cachedPasswordCredentials;
    private Dictionary`2<string, ICertificateCredential> cachedCertificateCredentials;
    private Dictionary`2<string, IRoleAssignment> cachedRoleAssignments;
    private ServicePrincipalCreateParameters createParameters;
    private ICreatable`1<IActiveDirectoryApplication> applicationCreatable;
    private Dictionary`2<string, BuiltInRole> rolesToCreate;
    private ISet`1<string> rolesToDelete;
    internal string assignedSubscription;
    private IList`1<ICertificateCredential> certificateCredentialsToCreate;
    private IList`1<IPasswordCredential> passwordCredentialsToCreate;
    private ISet`1<string> certificateCredentialsToDelete;
    private ISet`1<string> passwordCredentialsToDelete;
    private ISet`1<IRoleAssignment> Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.RoleAssignments { get; }
    private string Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.ApplicationId { get; }
    private IReadOnlyDictionary`2<string, ICertificateCredential> Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.CertificateCredentials { get; }
    private IReadOnlyList`1<string> Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.ServicePrincipalNames { get; }
    private IReadOnlyDictionary`2<string, IPasswordCredential> Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.PasswordCredentials { get; }
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }
    private GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.Manager { get; }
    internal ServicePrincipalImpl(ServicePrincipalInner innerObject, GraphRbacManager manager);
    private sealed virtual override ISet`1<IRoleAssignment> Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.get_RoleAssignments();
    private sealed virtual override string Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.get_ApplicationId();
    private sealed virtual override IReadOnlyDictionary`2<string, ICertificateCredential> Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.get_CertificateCredentials();
    private sealed virtual override IReadOnlyList`1<string> Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.get_ServicePrincipalNames();
    private sealed virtual override IReadOnlyDictionary`2<string, IPasswordCredential> Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal.get_PasswordCredentials();
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential<Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate>.WithCertificateCredential(CertificateCredentialImpl`1<IWithCreate> credential);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential<Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate>.WithCertificateCredential(CertificateCredentialImpl`1<IUpdate> credential);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential<Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCreate>.WithPasswordCredential(PasswordCredentialImpl`1<IWithCreate> credential);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.IHasCredential<Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IUpdate>.WithPasswordCredential(PasswordCredentialImpl`1<IUpdate> credential);
    private sealed virtual override IBlank`1<IUpdate> Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.DefineCertificateCredential(string name);
    private sealed virtual override IBlank`1<IUpdate> Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.DefineCertificateCredential();
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.WithoutCredential(string name);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.WithoutCredentialByIdentifier(string keyIdentifier);
    private sealed virtual override IBlank`1<IUpdate> Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithCredentialBeta.DefinePasswordCredential(string name);
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredentialBeta.DefineCertificateCredential(string name);
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredentialBeta.DefineCertificateCredential();
    private sealed virtual override IBlank`1<IWithCreate> Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithCredentialBeta.DefinePasswordCredential(string name);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithNewRoleInResourceGroup(BuiltInRole role, IResourceGroup resourceGroup);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithNewRoleInSubscription(BuiltInRole role, string subscriptionId);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithNewRole(BuiltInRole role, string scope);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Update.IWithRoleAssignmentBeta.WithoutRole(IRoleAssignment roleAssignment);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta.WithNewRoleInResourceGroup(BuiltInRole role, IResourceGroup resourceGroup);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta.WithNewRoleInSubscription(BuiltInRole role, string subscriptionId);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithRoleAssignmentBeta.WithNewRole(BuiltInRole role, string scope);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithExistingApplication(string id);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithExistingApplication(IActiveDirectoryApplication application);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithNewApplication(ICreatable`1<IActiveDirectoryApplication> applicationCreatable);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IWithApplicationBeta.WithNewApplication(string signOnUrl);
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.get_Id();
    private sealed virtual override GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.get_Manager();
    public PasswordCredentialImpl`1<T> DefinePasswordCredential(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl/<RefreshCredentialsAsync>d__51")]
internal Task`1<IServicePrincipal> RefreshCredentialsAsync(CancellationToken cancellationToken);
    public GraphRbacManager Manager();
    public bool IsInCreateMode();
    public ServicePrincipalImpl WithNewRoleInResourceGroup(BuiltInRole role, IResourceGroup resourceGroup);
    public ServicePrincipalImpl WithNewRoleInSubscription(BuiltInRole role, string subscriptionId);
    public ServicePrincipalImpl WithoutRole(IRoleAssignment roleAssignment);
    public CertificateCredentialImpl`1<T> DefineCertificateCredential(string name);
    public CertificateCredentialImpl`1<T> DefineCertificateCredential();
    public ServicePrincipalImpl WithoutCredential(string name);
    public ServicePrincipalImpl WithoutCredentialByIdentifier(string keyIdentifier);
    public ServicePrincipalImpl WithNewApplication(ICreatable`1<IActiveDirectoryApplication> applicationCreatable);
    public ServicePrincipalImpl WithNewApplication(string signOnUrl);
    public ServicePrincipalImpl WithCertificateCredential(CertificateCredentialImpl`1<T> credential);
    public IReadOnlyDictionary`2<string, ICertificateCredential> CertificateCredentials();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl/<GetInnerAsync>d__66")]
protected virtual Task`1<ServicePrincipalInner> GetInnerAsync(CancellationToken cancellationToken);
    public IReadOnlyDictionary`2<string, IPasswordCredential> PasswordCredentials();
    public ServicePrincipalImpl WithNewRole(BuiltInRole role, string scope);
    public ServicePrincipalImpl WithExistingApplication(string id);
    public ServicePrincipalImpl WithExistingApplication(IActiveDirectoryApplication application);
    public IReadOnlyList`1<string> ServicePrincipalNames();
    public ServicePrincipalImpl WithPasswordCredential(PasswordCredentialImpl`1<T> credential);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl/<RefreshAsync>d__73")]
public virtual Task`1<IServicePrincipal> RefreshAsync(CancellationToken cancellationToken);
    public string Id();
    public string ApplicationId();
    public ISet`1<IRoleAssignment> RoleAssignments();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl/<CreateResourceAsync>d__77")]
public virtual Task`1<IServicePrincipal> CreateResourceAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl/<SubmitCredentialsAsync>d__78")]
private Task`1<IServicePrincipal> SubmitCredentialsAsync(IServicePrincipal sp, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalImpl/<SubmitRolesAsync>d__79")]
private Task`1<IServicePrincipal> SubmitRolesAsync(IServicePrincipal sp, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsImpl : CreatableResources`3<IServicePrincipal, ServicePrincipalImpl, ServicePrincipalInner> {
    private IServicePrincipalsOperations innerCollection;
    private GraphRbacManager manager;
    public IServicePrincipalsOperations Inner { get; }
    private GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.Manager { get; }
    internal ServicePrincipalsImpl(GraphRbacManager graphRbacManager);
    public ServicePrincipalImpl GetById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsImpl/<GetByIdAsync>d__4")]
public sealed virtual Task`1<IServicePrincipal> GetByIdAsync(string id, CancellationToken cancellationToken);
    public sealed virtual IServicePrincipal GetByName(string spn);
    public ServicePrincipalImpl Define(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsImpl/<DeleteByIdAsync>d__7")]
public virtual Task DeleteByIdAsync(string id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsImpl/<GetByNameAsync>d__8")]
public sealed virtual Task`1<IServicePrincipal> GetByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual IEnumerable`1<IServicePrincipal> List();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsImpl/<ListAsync>d__10")]
public sealed virtual Task`1<IPagedCollection`1<IServicePrincipal>> ListAsync(bool loadAllPages, CancellationToken cancellationToken);
    public sealed virtual IServicePrincipalsOperations get_Inner();
    private sealed virtual override GraphRbacManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Graph.RBAC.Fluent.GraphRbacManager>.get_Manager();
    protected virtual IServicePrincipal WrapModel(ServicePrincipalInner servicePrincipalInner);
    protected virtual ServicePrincipalImpl WrapModel(string name);
    public virtual void DeleteById(string id);
    private sealed virtual override IServicePrincipal Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById<Microsoft.Azure.Management.Graph.RBAC.Fluent.IServicePrincipal>.GetById(string id);
    private sealed virtual override IBlank Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating<Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipal.Definition.IBlank>.Define(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsImpl/<<ListAsync>b__10_0>d")]
[CompilerGeneratedAttribute]
private Task`1<IPage`1<ServicePrincipalInner>> <ListAsync>b__10_0(CancellationToken cancellation);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsImpl/<<ListAsync>b__10_1>d")]
[CompilerGeneratedAttribute]
private Task`1<IServicePrincipal> <ListAsync>b__10_1(ServicePrincipalInner inner, CancellationToken cancellation);
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations : object {
    [CompilerGeneratedAttribute]
private GraphRbacManagementClient <Client>k__BackingField;
    public GraphRbacManagementClient Client { get; private set; }
    internal ServicePrincipalsOperations(GraphRbacManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual GraphRbacManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(GraphRbacManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations/<CreateWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<ServicePrincipalInner>> CreateWithHttpMessagesAsync(ServicePrincipalCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations/<ListWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ServicePrincipalInner>>> ListWithHttpMessagesAsync(ODataQuery`1<ServicePrincipalInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations/<UpdateWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse> UpdateWithHttpMessagesAsync(string objectId, ServicePrincipalUpdateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations/<DeleteWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations/<GetWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse`1<ServicePrincipalInner>> GetWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations/<ListOwnersWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnersWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations/<ListKeyCredentialsWithHttpMessagesAsync>d__11")]
public sealed virtual Task`1<AzureOperationResponse`1<IEnumerable`1<KeyCredential>>> ListKeyCredentialsWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations/<UpdateKeyCredentialsWithHttpMessagesAsync>d__12")]
public sealed virtual Task`1<AzureOperationResponse> UpdateKeyCredentialsWithHttpMessagesAsync(string objectId, IList`1<KeyCredential> value, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations/<ListPasswordCredentialsWithHttpMessagesAsync>d__13")]
public sealed virtual Task`1<AzureOperationResponse`1<IEnumerable`1<PasswordCredential>>> ListPasswordCredentialsWithHttpMessagesAsync(string objectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations/<UpdatePasswordCredentialsWithHttpMessagesAsync>d__14")]
public sealed virtual Task`1<AzureOperationResponse> UpdatePasswordCredentialsWithHttpMessagesAsync(string objectId, IList`1<PasswordCredential> value, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations/<ListNextWithHttpMessagesAsync>d__15")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ServicePrincipalInner>>> ListNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperations/<ListOwnersNextWithHttpMessagesAsync>d__16")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnersNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions/<CreateAsync>d__0")]
[ExtensionAttribute]
public static Task`1<ServicePrincipalInner> CreateAsync(IServicePrincipalsOperations operations, ServicePrincipalCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions/<ListAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<ServicePrincipalInner>> ListAsync(IServicePrincipalsOperations operations, ODataQuery`1<ServicePrincipalInner> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions/<UpdateAsync>d__2")]
[ExtensionAttribute]
public static Task UpdateAsync(IServicePrincipalsOperations operations, string objectId, ServicePrincipalUpdateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions/<DeleteAsync>d__3")]
[ExtensionAttribute]
public static Task DeleteAsync(IServicePrincipalsOperations operations, string objectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions/<GetAsync>d__4")]
[ExtensionAttribute]
public static Task`1<ServicePrincipalInner> GetAsync(IServicePrincipalsOperations operations, string objectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions/<ListOwnersAsync>d__5")]
[ExtensionAttribute]
public static Task`1<IPage`1<DirectoryObject>> ListOwnersAsync(IServicePrincipalsOperations operations, string objectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions/<ListKeyCredentialsAsync>d__6")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<KeyCredential>> ListKeyCredentialsAsync(IServicePrincipalsOperations operations, string objectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions/<UpdateKeyCredentialsAsync>d__7")]
[ExtensionAttribute]
public static Task UpdateKeyCredentialsAsync(IServicePrincipalsOperations operations, string objectId, IList`1<KeyCredential> value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions/<ListPasswordCredentialsAsync>d__8")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<PasswordCredential>> ListPasswordCredentialsAsync(IServicePrincipalsOperations operations, string objectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions/<UpdatePasswordCredentialsAsync>d__9")]
[ExtensionAttribute]
public static Task UpdatePasswordCredentialsAsync(IServicePrincipalsOperations operations, string objectId, IList`1<PasswordCredential> value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions/<ListNextAsync>d__10")]
[ExtensionAttribute]
public static Task`1<IPage`1<ServicePrincipalInner>> ListNextAsync(IServicePrincipalsOperations operations, string nextLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.ServicePrincipalsOperationsExtensions/<ListOwnersNextAsync>d__11")]
[ExtensionAttribute]
public static Task`1<IPage`1<DirectoryObject>> ListOwnersNextAsync(IServicePrincipalsOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.SignedInUserOperations : object {
    [CompilerGeneratedAttribute]
private GraphRbacManagementClient <Client>k__BackingField;
    public GraphRbacManagementClient Client { get; private set; }
    internal SignedInUserOperations(GraphRbacManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual GraphRbacManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(GraphRbacManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.SignedInUserOperations/<GetWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<UserInner>> GetWithHttpMessagesAsync(Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.SignedInUserOperations/<ListOwnedObjectsWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnedObjectsWithHttpMessagesAsync(Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.SignedInUserOperations/<ListOwnedObjectsNextWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<DirectoryObject>>> ListOwnedObjectsNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.SignedInUserOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.SignedInUserOperationsExtensions/<GetAsync>d__0")]
[ExtensionAttribute]
public static Task`1<UserInner> GetAsync(ISignedInUserOperations operations, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.SignedInUserOperationsExtensions/<ListOwnedObjectsAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<DirectoryObject>> ListOwnedObjectsAsync(ISignedInUserOperations operations, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.SignedInUserOperationsExtensions/<ListOwnedObjectsNextAsync>d__2")]
[ExtensionAttribute]
public static Task`1<IPage`1<DirectoryObject>> ListOwnedObjectsNextAsync(ISignedInUserOperations operations, string nextLink, CancellationToken cancellationToken);
}
internal class Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperations : object {
    [CompilerGeneratedAttribute]
private GraphRbacManagementClient <Client>k__BackingField;
    public GraphRbacManagementClient Client { get; private set; }
    internal UsersOperations(GraphRbacManagementClient client);
    [CompilerGeneratedAttribute]
public sealed virtual GraphRbacManagementClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(GraphRbacManagementClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperations/<CreateWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<UserInner>> CreateWithHttpMessagesAsync(UserCreateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperations/<ListWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<UserInner>>> ListWithHttpMessagesAsync(ODataQuery`1<UserInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperations/<GetWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse`1<UserInner>> GetWithHttpMessagesAsync(string upnOrObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperations/<UpdateWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse> UpdateWithHttpMessagesAsync(string upnOrObjectId, UserUpdateParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperations/<DeleteWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse> DeleteWithHttpMessagesAsync(string upnOrObjectId, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperations/<GetMemberGroupsWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse`1<IEnumerable`1<string>>> GetMemberGroupsWithHttpMessagesAsync(string objectId, UserGetMemberGroupsParameters parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperations/<ListNextWithHttpMessagesAsync>d__11")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<UserInner>>> ListNextWithHttpMessagesAsync(string nextLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperationsExtensions/<CreateAsync>d__0")]
[ExtensionAttribute]
public static Task`1<UserInner> CreateAsync(IUsersOperations operations, UserCreateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperationsExtensions/<ListAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IPage`1<UserInner>> ListAsync(IUsersOperations operations, ODataQuery`1<UserInner> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperationsExtensions/<GetAsync>d__2")]
[ExtensionAttribute]
public static Task`1<UserInner> GetAsync(IUsersOperations operations, string upnOrObjectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperationsExtensions/<UpdateAsync>d__3")]
[ExtensionAttribute]
public static Task UpdateAsync(IUsersOperations operations, string upnOrObjectId, UserUpdateParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperationsExtensions/<DeleteAsync>d__4")]
[ExtensionAttribute]
public static Task DeleteAsync(IUsersOperations operations, string upnOrObjectId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperationsExtensions/<GetMemberGroupsAsync>d__5")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<string>> GetMemberGroupsAsync(IUsersOperations operations, string objectId, UserGetMemberGroupsParameters parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Graph.RBAC.Fluent.UsersOperationsExtensions/<ListNextAsync>d__6")]
[ExtensionAttribute]
public static Task`1<IPage`1<UserInner>> ListNextAsync(IUsersOperations operations, string nextLink, CancellationToken cancellationToken);
}
