public class Microsoft.Azure.Management.Locks.Fluent.AuthorizationManager : Manager`1<IManagementLockClient> {
    private IManagementLocks locks;
    public IManagementLocks ManagementLocks { get; }
    public AuthorizationManager(RestClient restClient, string subscriptionId);
    public static IAuthorizationManager Authenticate(AzureCredentials credentials, string subscriptionId);
    public static IAuthorizationManager Authenticate(RestClient restClient, string subscriptionId);
    public static IConfigurable Configure();
    public sealed virtual IManagementLocks get_ManagementLocks();
}
public interface Microsoft.Azure.Management.Locks.Fluent.IAuthorizationManager {
    public IManagementLocks ManagementLocks { get; }
    public abstract virtual IManagementLocks get_ManagementLocks();
}
public interface Microsoft.Azure.Management.Locks.Fluent.IManagementLock {
    public string Notes { get; }
    public LockLevel Level { get; }
    public string LockedResourceId { get; }
    public abstract virtual string get_Notes();
    public abstract virtual LockLevel get_Level();
    public abstract virtual string get_LockedResourceId();
}
public interface Microsoft.Azure.Management.Locks.Fluent.IManagementLockClient {
    public Uri BaseUri { get; public set; }
    public JsonSerializerSettings SerializationSettings { get; }
    public JsonSerializerSettings DeserializationSettings { get; }
    public ServiceClientCredentials Credentials { get; }
    public string SubscriptionId { get; public set; }
    public string ApiVersion { get; }
    public string AcceptLanguage { get; public set; }
    public Nullable`1<int> LongRunningOperationRetryTimeout { get; public set; }
    public Nullable`1<bool> GenerateClientRequestId { get; public set; }
    public IManagementLocksOperations ManagementLocks { get; }
    public abstract virtual Uri get_BaseUri();
    public abstract virtual void set_BaseUri(Uri value);
    public abstract virtual JsonSerializerSettings get_SerializationSettings();
    public abstract virtual JsonSerializerSettings get_DeserializationSettings();
    public abstract virtual ServiceClientCredentials get_Credentials();
    public abstract virtual string get_SubscriptionId();
    public abstract virtual void set_SubscriptionId(string value);
    public abstract virtual string get_ApiVersion();
    public abstract virtual string get_AcceptLanguage();
    public abstract virtual void set_AcceptLanguage(string value);
    public abstract virtual Nullable`1<int> get_LongRunningOperationRetryTimeout();
    public abstract virtual void set_LongRunningOperationRetryTimeout(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_GenerateClientRequestId();
    public abstract virtual void set_GenerateClientRequestId(Nullable`1<bool> value);
    public abstract virtual IManagementLocksOperations get_ManagementLocks();
}
public interface Microsoft.Azure.Management.Locks.Fluent.IManagementLocks {
    public abstract virtual IEnumerable`1<IManagementLock> ListForResource(string resourceId);
    public abstract virtual Task`1<IPagedCollection`1<IManagementLock>> ListForResourceAsync(string resourceId, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Locks.Fluent.IManagementLocksOperations {
    public abstract virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> CreateOrUpdateAtResourceGroupLevelWithHttpMessagesAsync(string resourceGroupName, string lockName, ManagementLockObjectInner parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteAtResourceGroupLevelWithHttpMessagesAsync(string resourceGroupName, string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> GetAtResourceGroupLevelWithHttpMessagesAsync(string resourceGroupName, string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> CreateOrUpdateByScopeWithHttpMessagesAsync(string scope, string lockName, ManagementLockObjectInner parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteByScopeWithHttpMessagesAsync(string scope, string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> GetByScopeWithHttpMessagesAsync(string scope, string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> CreateOrUpdateAtResourceLevelWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string lockName, ManagementLockObjectInner parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteAtResourceLevelWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> GetAtResourceLevelWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> CreateOrUpdateAtSubscriptionLevelWithHttpMessagesAsync(string lockName, ManagementLockObjectInner parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse> DeleteAtSubscriptionLevelWithHttpMessagesAsync(string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> GetAtSubscriptionLevelWithHttpMessagesAsync(string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ManagementLockObjectInner>>> ListAtResourceGroupLevelWithHttpMessagesAsync(string resourceGroupName, ODataQuery`1<ManagementLockObjectInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ManagementLockObjectInner>>> ListAtResourceLevelWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, ODataQuery`1<ManagementLockObjectInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ManagementLockObjectInner>>> ListAtSubscriptionLevelWithHttpMessagesAsync(ODataQuery`1<ManagementLockObjectInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ManagementLockObjectInner>>> ListAtResourceGroupLevelNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ManagementLockObjectInner>>> ListAtResourceLevelNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    public abstract virtual Task`1<AzureOperationResponse`1<IPage`1<ManagementLockObjectInner>>> ListAtSubscriptionLevelNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IBlank {
}
public interface Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IDefinition {
}
public interface Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IWithCreate {
}
public interface Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IWithLevel {
    public abstract virtual IWithCreate WithLevel(LockLevel level);
}
public interface Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IWithLockedResource {
    public abstract virtual IWithLevel WithLockedResourceGroup(string resourceGroupName);
    public abstract virtual IWithLevel WithLockedResourceGroup(IResourceGroup resourceGroup);
    public abstract virtual IWithLevel WithLockedResource(string resourceId);
    public abstract virtual IWithLevel WithLockedResource(IResource resource);
}
public interface Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IWithNotes {
    public abstract virtual IWithCreate WithNotes(string notes);
}
public interface Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Update.IUpdate {
}
public interface Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Update.IWithLevel {
    public abstract virtual IUpdate WithLevel(LockLevel level);
}
public interface Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Update.IWithLockedResource {
    public abstract virtual IUpdate WithLockedResourceGroup(string resourceGroupName);
    public abstract virtual IUpdate WithLockedResourceGroup(IResourceGroup resourceGroup);
    public abstract virtual IUpdate WithLockedResource(string resourceId);
    public abstract virtual IUpdate WithLockedResource(IResource resource);
}
public interface Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Update.IWithNotes {
    public abstract virtual IUpdate WithNotes(string notes);
}
public class Microsoft.Azure.Management.Locks.Fluent.ManagementLockClient : FluentServiceClientBase`1<ManagementLockClient> {
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <SerializationSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <DeserializationSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AcceptLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LongRunningOperationRetryTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <GenerateClientRequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private IManagementLocksOperations <ManagementLocks>k__BackingField;
    public JsonSerializerSettings SerializationSettings { get; private set; }
    public JsonSerializerSettings DeserializationSettings { get; private set; }
    public string SubscriptionId { get; public set; }
    public string ApiVersion { get; private set; }
    public string AcceptLanguage { get; public set; }
    public Nullable`1<int> LongRunningOperationRetryTimeout { get; public set; }
    public Nullable`1<bool> GenerateClientRequestId { get; public set; }
    public IManagementLocksOperations ManagementLocks { get; private set; }
    public ManagementLockClient(RestClient restClient);
    private ManagementLockClient(RestClient restClient, HttpClient httpClient);
    [CompilerGeneratedAttribute]
public sealed virtual JsonSerializerSettings get_SerializationSettings();
    [CompilerGeneratedAttribute]
private void set_SerializationSettings(JsonSerializerSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual JsonSerializerSettings get_DeserializationSettings();
    [CompilerGeneratedAttribute]
private void set_DeserializationSettings(JsonSerializerSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SubscriptionId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiVersion();
    [CompilerGeneratedAttribute]
private void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AcceptLanguage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AcceptLanguage(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_LongRunningOperationRetryTimeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LongRunningOperationRetryTimeout(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_GenerateClientRequestId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GenerateClientRequestId(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public virtual IManagementLocksOperations get_ManagementLocks();
    [CompilerGeneratedAttribute]
private void set_ManagementLocks(IManagementLocksOperations value);
    public static ManagementLockClient NewInstance(RestClient restClient);
    protected virtual void Initialize();
    private sealed virtual override HttpClient Microsoft.Rest.Azure.IAzureClient.get_HttpClient();
}
internal class Microsoft.Azure.Management.Locks.Fluent.ManagementLockImpl : CreatableUpdatable`5<IManagementLock, ManagementLockObjectInner, ManagementLockImpl, IHasId, IUpdate> {
    private IAuthorizationManager manager;
    private string lockedResourceId;
    private string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.Id { get; }
    private IAuthorizationManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Locks.Fluent.IAuthorizationManager>.Manager { get; }
    private LockLevel Microsoft.Azure.Management.Locks.Fluent.IManagementLock.Level { get; }
    private string Microsoft.Azure.Management.Locks.Fluent.IManagementLock.LockedResourceId { get; }
    private string Microsoft.Azure.Management.Locks.Fluent.IManagementLock.Notes { get; }
    internal ManagementLockImpl(string name, ManagementLockObjectInner innerModel, IAuthorizationManager lockManager);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Update.IWithLevel.WithLevel(LockLevel level);
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IWithLevel.WithLevel(LockLevel level);
    private sealed virtual override string Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId.get_Id();
    private sealed virtual override IWithCreate Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IWithNotes.WithNotes(string notes);
    private sealed virtual override IAuthorizationManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Locks.Fluent.IAuthorizationManager>.get_Manager();
    private sealed virtual override LockLevel Microsoft.Azure.Management.Locks.Fluent.IManagementLock.get_Level();
    private sealed virtual override string Microsoft.Azure.Management.Locks.Fluent.IManagementLock.get_LockedResourceId();
    private sealed virtual override string Microsoft.Azure.Management.Locks.Fluent.IManagementLock.get_Notes();
    private sealed virtual override IUpdate Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Update.IWithLockedResource.WithLockedResource(string resourceId);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Update.IWithLockedResource.WithLockedResource(IResource resource);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Update.IWithLockedResource.WithLockedResourceGroup(string resourceGroupName);
    private sealed virtual override IUpdate Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Update.IWithLockedResource.WithLockedResourceGroup(IResourceGroup resourceGroup);
    private sealed virtual override IWithLevel Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IWithLockedResource.WithLockedResource(string resourceId);
    private sealed virtual override IWithLevel Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IWithLockedResource.WithLockedResource(IResource resource);
    private sealed virtual override IWithLevel Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IWithLockedResource.WithLockedResourceGroup(string resourceGroupName);
    private sealed virtual override IWithLevel Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IWithLockedResource.WithLockedResourceGroup(IResourceGroup resourceGroup);
    public string Notes();
    public IAuthorizationManager Manager();
    public bool IsInCreateMode();
    public LockLevel Level();
    public ManagementLockImpl WithLevel(LockLevel level);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLockImpl/<GetInnerAsync>d__29")]
protected virtual Task`1<ManagementLockObjectInner> GetInnerAsync(CancellationToken cancellationToken);
    public string LockedResourceId();
    public ManagementLockImpl WithNotes(string notes);
    public ManagementLockImpl WithLockedResourceGroup(string resourceGroupName);
    public ManagementLockImpl WithLockedResourceGroup(IResourceGroup resourceGroup);
    public ManagementLockImpl WithLockedResource(string resourceId);
    public ManagementLockImpl WithLockedResource(IResource resource);
    public string Id();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLockImpl/<CreateResourceAsync>d__37")]
public virtual Task`1<IManagementLock> CreateResourceAsync(CancellationToken cancellationToken);
}
internal class Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl : CreatableResources`3<IManagementLock, ManagementLockImpl, ManagementLockObjectInner> {
    private IAuthorizationManager manager;
    private IAuthorizationManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Locks.Fluent.IAuthorizationManager>.Manager { get; }
    private IManagementLocksOperations Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner<Microsoft.Azure.Management.Locks.Fluent.IManagementLocksOperations>.Inner { get; }
    internal ManagementLocksImpl(IAuthorizationManager manager);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<Microsoft-Azure-Management-ResourceManager-Fluent-Core-CollectionActions-ISupportsListingByResourceGroup<Microsoft-Azure-Management-Locks-Fluent-IManagementLock>-ListByResourceGroupAsync>d__0")]
private sealed virtual override Task`1<IPagedCollection`1<IManagementLock>> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup<Microsoft.Azure.Management.Locks.Fluent.IManagementLock>.ListByResourceGroupAsync(string resourceGroupName, bool loadAllPages, CancellationToken cancellationToken);
    private sealed virtual override IEnumerable`1<IManagementLock> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup<Microsoft.Azure.Management.Locks.Fluent.IManagementLock>.ListByResourceGroup(string resourceGroupName);
    private sealed virtual override IAuthorizationManager Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager<Microsoft.Azure.Management.Locks.Fluent.IAuthorizationManager>.get_Manager();
    private sealed virtual override void Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup.DeleteByResourceGroup(string resourceGroupName, string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<Microsoft-Azure-Management-ResourceManager-Fluent-Core-CollectionActions-ISupportsDeletingByResourceGroup-DeleteByResourceGroupAsync>d__5")]
private sealed virtual override Task Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup.DeleteByResourceGroupAsync(string resourceGroupName, string name, CancellationToken cancellationToken);
    private sealed virtual override IBlank Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating<Microsoft.Azure.Management.Locks.Fluent.ManagementLock.Definition.IBlank>.Define(string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<Microsoft-Azure-Management-ResourceManager-Fluent-Core-CollectionActions-ISupportsDeletingById-DeleteByIdAsync>d__7")]
private sealed virtual override Task Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById.DeleteByIdAsync(string id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<Microsoft-Azure-Management-ResourceManager-Fluent-Core-CollectionActions-ISupportsListing<Microsoft-Azure-Management-Locks-Fluent-IManagementLock>-ListAsync>d__8")]
private sealed virtual override Task`1<IPagedCollection`1<IManagementLock>> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing<Microsoft.Azure.Management.Locks.Fluent.IManagementLock>.ListAsync(bool loadAllPages, CancellationToken cancellationToken);
    private sealed virtual override IEnumerable`1<IManagementLock> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing<Microsoft.Azure.Management.Locks.Fluent.IManagementLock>.List();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<Microsoft-Azure-Management-Locks-Fluent-IManagementLocks-ListForResourceAsync>d__10")]
private sealed virtual override Task`1<IPagedCollection`1<IManagementLock>> Microsoft.Azure.Management.Locks.Fluent.IManagementLocks.ListForResourceAsync(string resourceId, CancellationToken cancellationToken);
    private sealed virtual override IEnumerable`1<IManagementLock> Microsoft.Azure.Management.Locks.Fluent.IManagementLocks.ListForResource(string resourceId);
    private sealed virtual override void Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchDeletion.DeleteByIds(IList`1<string> ids);
    private sealed virtual override void Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchDeletion.DeleteByIds(String[] ids);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<Microsoft-Azure-Management-ResourceManager-Fluent-Core-CollectionActions-ISupportsBatchDeletion-DeleteByIdsAsync>d__14")]
private sealed virtual override Task`1<IEnumerable`1<string>> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchDeletion.DeleteByIdsAsync(IList`1<string> ids, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<Microsoft-Azure-Management-ResourceManager-Fluent-Core-CollectionActions-ISupportsBatchDeletion-DeleteByIdsAsync>d__15")]
private sealed virtual override Task`1<IEnumerable`1<string>> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchDeletion.DeleteByIdsAsync(String[] ids, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<Microsoft-Azure-Management-ResourceManager-Fluent-Core-CollectionActions-ISupportsGettingByResourceGroup<Microsoft-Azure-Management-Locks-Fluent-IManagementLock>-GetByResourceGroupAsync>d__16")]
private sealed virtual override Task`1<IManagementLock> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup<Microsoft.Azure.Management.Locks.Fluent.IManagementLock>.GetByResourceGroupAsync(string resourceGroupName, string name, CancellationToken cancellationToken);
    private sealed virtual override IManagementLock Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup<Microsoft.Azure.Management.Locks.Fluent.IManagementLock>.GetByResourceGroup(string resourceGroupName, string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<Microsoft-Azure-Management-ResourceManager-Fluent-Core-CollectionActions-ISupportsGettingById<Microsoft-Azure-Management-Locks-Fluent-IManagementLock>-GetByIdAsync>d__18")]
private sealed virtual override Task`1<IManagementLock> Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById<Microsoft.Azure.Management.Locks.Fluent.IManagementLock>.GetByIdAsync(string id, CancellationToken cancellationToken);
    private sealed virtual override IManagementLock Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById<Microsoft.Azure.Management.Locks.Fluent.IManagementLock>.GetById(string id);
    private sealed virtual override IManagementLocksOperations Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner<Microsoft.Azure.Management.Locks.Fluent.IManagementLocksOperations>.get_Inner();
    public IAuthorizationManager Manager();
    public IManagementLock GetByResourceGroup(string resourceGroupName, string name);
    public IManagementLock GetById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<GetByIdAsync>d__27")]
public Task`1<IManagementLock> GetByIdAsync(string id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<GetByResourceGroupAsync>d__28")]
public Task`1<IManagementLock> GetByResourceGroupAsync(string resourceGroupName, string name, CancellationToken cancellationToken);
    public virtual void DeleteById(string id);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<DeleteByIdAsync>d__30")]
public virtual Task DeleteByIdAsync(string id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<DeleteByIdsAsync>d__31")]
public Task`1<IEnumerable`1<string>> DeleteByIdsAsync(IList`1<string> ids, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<DeleteByIdsAsync>d__32")]
public Task`1<IEnumerable`1<string>> DeleteByIdsAsync(String[] ids, CancellationToken cancellationToken);
    public void DeleteByIds(IList`1<string> ids);
    public void DeleteByIds(String[] ids);
    public void DeleteByResourceGroup(string resourceGroupName, string name);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<DeleteByResourceGroupAsync>d__36")]
public Task DeleteByResourceGroupAsync(string resourceGroupName, string name, CancellationToken cancellationToken);
    public IEnumerable`1<IManagementLock> List();
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<ListAsync>d__38")]
public Task`1<IPagedCollection`1<IManagementLock>> ListAsync(bool loadAllPages, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<ListByResourceGroupAsync>d__39")]
public Task`1<IPagedCollection`1<IManagementLock>> ListByResourceGroupAsync(string resourceGroupName, bool loadAllPages, CancellationToken cancellationToken);
    public IEnumerable`1<IManagementLock> ListForResource(string resourceId);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksImpl/<ListForResourceAsync>d__41")]
public Task`1<IPagedCollection`1<IManagementLock>> ListForResourceAsync(string resourceId, CancellationToken cancellationToken);
    public IEnumerable`1<IManagementLock> ListByResourceGroup(string resourceGroupName);
    internal static String[] LockIdParts(string lockId);
    public static string ResourceIdFromLockId(string lockId);
    public IManagementLocksOperations Inner();
    public ManagementLockImpl Define(string name);
    protected virtual ManagementLockImpl WrapModel(string name);
    protected virtual IManagementLock WrapModel(ManagementLockObjectInner inner);
    [CompilerGeneratedAttribute]
private Task`1<IPage`1<ManagementLockObjectInner>> <List>b__37_0();
}
internal class Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations : object {
    [CompilerGeneratedAttribute]
private ManagementLockClient <Client>k__BackingField;
    public ManagementLockClient Client { get; private set; }
    internal ManagementLocksOperations(ManagementLockClient client);
    [CompilerGeneratedAttribute]
public sealed virtual ManagementLockClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(ManagementLockClient value);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<CreateOrUpdateAtResourceGroupLevelWithHttpMessagesAsync>d__5")]
public sealed virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> CreateOrUpdateAtResourceGroupLevelWithHttpMessagesAsync(string resourceGroupName, string lockName, ManagementLockObjectInner parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<DeleteAtResourceGroupLevelWithHttpMessagesAsync>d__6")]
public sealed virtual Task`1<AzureOperationResponse> DeleteAtResourceGroupLevelWithHttpMessagesAsync(string resourceGroupName, string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<GetAtResourceGroupLevelWithHttpMessagesAsync>d__7")]
public sealed virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> GetAtResourceGroupLevelWithHttpMessagesAsync(string resourceGroupName, string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<CreateOrUpdateByScopeWithHttpMessagesAsync>d__8")]
public sealed virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> CreateOrUpdateByScopeWithHttpMessagesAsync(string scope, string lockName, ManagementLockObjectInner parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<DeleteByScopeWithHttpMessagesAsync>d__9")]
public sealed virtual Task`1<AzureOperationResponse> DeleteByScopeWithHttpMessagesAsync(string scope, string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<GetByScopeWithHttpMessagesAsync>d__10")]
public sealed virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> GetByScopeWithHttpMessagesAsync(string scope, string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<CreateOrUpdateAtResourceLevelWithHttpMessagesAsync>d__11")]
public sealed virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> CreateOrUpdateAtResourceLevelWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string lockName, ManagementLockObjectInner parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<DeleteAtResourceLevelWithHttpMessagesAsync>d__12")]
public sealed virtual Task`1<AzureOperationResponse> DeleteAtResourceLevelWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<GetAtResourceLevelWithHttpMessagesAsync>d__13")]
public sealed virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> GetAtResourceLevelWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<CreateOrUpdateAtSubscriptionLevelWithHttpMessagesAsync>d__14")]
public sealed virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> CreateOrUpdateAtSubscriptionLevelWithHttpMessagesAsync(string lockName, ManagementLockObjectInner parameters, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<DeleteAtSubscriptionLevelWithHttpMessagesAsync>d__15")]
public sealed virtual Task`1<AzureOperationResponse> DeleteAtSubscriptionLevelWithHttpMessagesAsync(string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<GetAtSubscriptionLevelWithHttpMessagesAsync>d__16")]
public sealed virtual Task`1<AzureOperationResponse`1<ManagementLockObjectInner>> GetAtSubscriptionLevelWithHttpMessagesAsync(string lockName, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<ListAtResourceGroupLevelWithHttpMessagesAsync>d__17")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ManagementLockObjectInner>>> ListAtResourceGroupLevelWithHttpMessagesAsync(string resourceGroupName, ODataQuery`1<ManagementLockObjectInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<ListAtResourceLevelWithHttpMessagesAsync>d__18")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ManagementLockObjectInner>>> ListAtResourceLevelWithHttpMessagesAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, ODataQuery`1<ManagementLockObjectInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<ListAtSubscriptionLevelWithHttpMessagesAsync>d__19")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ManagementLockObjectInner>>> ListAtSubscriptionLevelWithHttpMessagesAsync(ODataQuery`1<ManagementLockObjectInner> odataQuery, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<ListAtResourceGroupLevelNextWithHttpMessagesAsync>d__20")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ManagementLockObjectInner>>> ListAtResourceGroupLevelNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<ListAtResourceLevelNextWithHttpMessagesAsync>d__21")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ManagementLockObjectInner>>> ListAtResourceLevelNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperations/<ListAtSubscriptionLevelNextWithHttpMessagesAsync>d__22")]
public sealed virtual Task`1<AzureOperationResponse`1<IPage`1<ManagementLockObjectInner>>> ListAtSubscriptionLevelNextWithHttpMessagesAsync(string nextPageLink, Dictionary`2<string, List`1<string>> customHeaders, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<CreateOrUpdateAtResourceGroupLevelAsync>d__0")]
[ExtensionAttribute]
public static Task`1<ManagementLockObjectInner> CreateOrUpdateAtResourceGroupLevelAsync(IManagementLocksOperations operations, string resourceGroupName, string lockName, ManagementLockObjectInner parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<DeleteAtResourceGroupLevelAsync>d__1")]
[ExtensionAttribute]
public static Task DeleteAtResourceGroupLevelAsync(IManagementLocksOperations operations, string resourceGroupName, string lockName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<GetAtResourceGroupLevelAsync>d__2")]
[ExtensionAttribute]
public static Task`1<ManagementLockObjectInner> GetAtResourceGroupLevelAsync(IManagementLocksOperations operations, string resourceGroupName, string lockName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<CreateOrUpdateByScopeAsync>d__3")]
[ExtensionAttribute]
public static Task`1<ManagementLockObjectInner> CreateOrUpdateByScopeAsync(IManagementLocksOperations operations, string scope, string lockName, ManagementLockObjectInner parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<DeleteByScopeAsync>d__4")]
[ExtensionAttribute]
public static Task DeleteByScopeAsync(IManagementLocksOperations operations, string scope, string lockName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<GetByScopeAsync>d__5")]
[ExtensionAttribute]
public static Task`1<ManagementLockObjectInner> GetByScopeAsync(IManagementLocksOperations operations, string scope, string lockName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<CreateOrUpdateAtResourceLevelAsync>d__6")]
[ExtensionAttribute]
public static Task`1<ManagementLockObjectInner> CreateOrUpdateAtResourceLevelAsync(IManagementLocksOperations operations, string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string lockName, ManagementLockObjectInner parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<DeleteAtResourceLevelAsync>d__7")]
[ExtensionAttribute]
public static Task DeleteAtResourceLevelAsync(IManagementLocksOperations operations, string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string lockName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<GetAtResourceLevelAsync>d__8")]
[ExtensionAttribute]
public static Task`1<ManagementLockObjectInner> GetAtResourceLevelAsync(IManagementLocksOperations operations, string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string lockName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<CreateOrUpdateAtSubscriptionLevelAsync>d__9")]
[ExtensionAttribute]
public static Task`1<ManagementLockObjectInner> CreateOrUpdateAtSubscriptionLevelAsync(IManagementLocksOperations operations, string lockName, ManagementLockObjectInner parameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<DeleteAtSubscriptionLevelAsync>d__10")]
[ExtensionAttribute]
public static Task DeleteAtSubscriptionLevelAsync(IManagementLocksOperations operations, string lockName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<GetAtSubscriptionLevelAsync>d__11")]
[ExtensionAttribute]
public static Task`1<ManagementLockObjectInner> GetAtSubscriptionLevelAsync(IManagementLocksOperations operations, string lockName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<ListAtResourceGroupLevelAsync>d__12")]
[ExtensionAttribute]
public static Task`1<IPage`1<ManagementLockObjectInner>> ListAtResourceGroupLevelAsync(IManagementLocksOperations operations, string resourceGroupName, ODataQuery`1<ManagementLockObjectInner> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<ListAtResourceLevelAsync>d__13")]
[ExtensionAttribute]
public static Task`1<IPage`1<ManagementLockObjectInner>> ListAtResourceLevelAsync(IManagementLocksOperations operations, string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, ODataQuery`1<ManagementLockObjectInner> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<ListAtSubscriptionLevelAsync>d__14")]
[ExtensionAttribute]
public static Task`1<IPage`1<ManagementLockObjectInner>> ListAtSubscriptionLevelAsync(IManagementLocksOperations operations, ODataQuery`1<ManagementLockObjectInner> odataQuery, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<ListAtResourceGroupLevelNextAsync>d__15")]
[ExtensionAttribute]
public static Task`1<IPage`1<ManagementLockObjectInner>> ListAtResourceGroupLevelNextAsync(IManagementLocksOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<ListAtResourceLevelNextAsync>d__16")]
[ExtensionAttribute]
public static Task`1<IPage`1<ManagementLockObjectInner>> ListAtResourceLevelNextAsync(IManagementLocksOperations operations, string nextPageLink, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.Management.Locks.Fluent.ManagementLocksOperationsExtensions/<ListAtSubscriptionLevelNextAsync>d__17")]
[ExtensionAttribute]
public static Task`1<IPage`1<ManagementLockObjectInner>> ListAtSubscriptionLevelNextAsync(IManagementLocksOperations operations, string nextPageLink, CancellationToken cancellationToken);
}
public class Microsoft.Azure.Management.Locks.Fluent.Models.LockLevel : ExpandableStringEnum`1<LockLevel> {
    public static LockLevel NotSpecified;
    public static LockLevel CanNotDelete;
    public static LockLevel ReadOnly;
    private static LockLevel();
}
[JsonTransformationAttribute]
public class Microsoft.Azure.Management.Locks.Fluent.Models.ManagementLockObjectInner : object {
    [CompilerGeneratedAttribute]
private string <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Notes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ManagementLockOwner> <Owners>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyAttribute]
public string Level { get; public set; }
    [JsonPropertyAttribute]
public string Notes { get; public set; }
    [JsonPropertyAttribute]
public IList`1<ManagementLockOwner> Owners { get; public set; }
    [JsonPropertyAttribute]
public string Id { get; private set; }
    [JsonPropertyAttribute]
public string Type { get; private set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    public ManagementLockObjectInner(string level, string notes, IList`1<ManagementLockOwner> owners, string id, string type, string name);
    [CompilerGeneratedAttribute]
public string get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(string value);
    [CompilerGeneratedAttribute]
public string get_Notes();
    [CompilerGeneratedAttribute]
public void set_Notes(string value);
    [CompilerGeneratedAttribute]
public IList`1<ManagementLockOwner> get_Owners();
    [CompilerGeneratedAttribute]
public void set_Owners(IList`1<ManagementLockOwner> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual void Validate();
}
public class Microsoft.Azure.Management.Locks.Fluent.Models.ManagementLockOwner : object {
    [CompilerGeneratedAttribute]
private string <ApplicationId>k__BackingField;
    [JsonPropertyAttribute]
public string ApplicationId { get; public set; }
    public ManagementLockOwner(string applicationId);
    [CompilerGeneratedAttribute]
public string get_ApplicationId();
    [CompilerGeneratedAttribute]
public void set_ApplicationId(string value);
}
[JsonObjectAttribute]
public class Microsoft.Azure.Management.Locks.Fluent.Models.Page`1 : object {
    [CompilerGeneratedAttribute]
private string <NextPageLink>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<T> <Items>k__BackingField;
    [JsonPropertyAttribute("nextLink")]
public string NextPageLink { get; private set; }
    [JsonPropertyAttribute("value")]
private IList`1<T> Items { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_NextPageLink();
    [CompilerGeneratedAttribute]
private void set_NextPageLink(string value);
    [CompilerGeneratedAttribute]
private IList`1<T> get_Items();
    [CompilerGeneratedAttribute]
private void set_Items(IList`1<T> value);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
