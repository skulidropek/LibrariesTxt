[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.AdmCredential : PnsCredential {
    internal static string AppPlatformName;
    internal static string ProdAuthTokenUrl;
    internal static string ProdSendUrlTemplate;
    private static string ClientIdName;
    private static string ClientSecretName;
    private static string AuthTokenUrlName;
    private static string SendUrlTemplateName;
    private static string MockAuthTokenUrl;
    private static string MockSendUrlTemplate;
    private static string MockIntSendUrlTemplate;
    private static string MockIntAuthTokenUrl;
    private static string RequiredPropertiesList;
    public string ClientId { get; public set; }
    public string ClientSecret { get; public set; }
    public string AuthTokenUrl { get; public set; }
    public string SendUrlTemplate { get; public set; }
    internal string AppPlatform { get; }
    public AdmCredential(string clientId, string clientSecret);
    public string get_ClientId();
    public void set_ClientId(string value);
    public string get_ClientSecret();
    public void set_ClientSecret(string value);
    public string get_AuthTokenUrl();
    public void set_AuthTokenUrl(string value);
    public string get_SendUrlTemplate();
    public void set_SendUrlTemplate(string value);
    internal virtual string get_AppPlatform();
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
    protected virtual void OnValidate(bool allowLocalMockPns);
}
public class Microsoft.Azure.NotificationHubs.AdmInstallation : Installation {
    public AdmInstallation(string installationId, string admRegistrationId);
}
public class Microsoft.Azure.NotificationHubs.AdmNotification : Notification {
    private static string contentType;
    protected string PlatformType { get; }
    public AdmNotification(string jsonPayload);
    protected virtual string get_PlatformType();
    protected virtual void OnValidateAndPopulateHeaders();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.AdmRegistrationDescription : RegistrationDescription {
    [CompilerGeneratedAttribute]
private string <AdmRegistrationId>k__BackingField;
    [DataMemberAttribute]
public string AdmRegistrationId { get; public set; }
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    public AdmRegistrationDescription(string admRegistrationId);
    public AdmRegistrationDescription(string admRegistrationId, IEnumerable`1<string> tags);
    public AdmRegistrationDescription(AdmRegistrationDescription sourceRegistration);
    internal AdmRegistrationDescription(string notificationHubPath, string admRegistrationId, IEnumerable`1<string> tags);
    [CompilerGeneratedAttribute]
public string get_AdmRegistrationId();
    [CompilerGeneratedAttribute]
public void set_AdmRegistrationId(string value);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    internal virtual void OnValidate();
    internal virtual string GetPnsHandle();
    internal virtual void SetPnsHandle(string pnsHandle);
    internal virtual RegistrationDescription Clone();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.AdmTemplateRegistrationDescription : AdmRegistrationDescription {
    [CompilerGeneratedAttribute]
private CDataMember <BodyTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TemplateName>k__BackingField;
    [DataMemberAttribute]
public CDataMember BodyTemplate { get; public set; }
    [DataMemberAttribute]
public string TemplateName { get; public set; }
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    public AdmTemplateRegistrationDescription(AdmTemplateRegistrationDescription sourceRegistration);
    public AdmTemplateRegistrationDescription(string admRegistrationId);
    public AdmTemplateRegistrationDescription(string admRegistrationId, string jsonPayload);
    public AdmTemplateRegistrationDescription(string admRegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    internal AdmTemplateRegistrationDescription(string notificationHubPath, string admRegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    [CompilerGeneratedAttribute]
public CDataMember get_BodyTemplate();
    [CompilerGeneratedAttribute]
public void set_BodyTemplate(CDataMember value);
    [CompilerGeneratedAttribute]
public string get_TemplateName();
    [CompilerGeneratedAttribute]
public void set_TemplateName(string value);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    internal virtual void OnValidate();
    internal virtual RegistrationDescription Clone();
    private void ValidateTemplateName();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.ApnsCredential : PnsCredential {
    internal static string AppPlatformName;
    internal static string ApnsGatewayEndpoint;
    [CompilerGeneratedAttribute]
private X509Certificate2 <NativeCertificate>k__BackingField;
    internal string AppPlatform { get; }
    public string ApnsCertificate { get; public set; }
    public string CertificateKey { get; public set; }
    public string Endpoint { get; public set; }
    public string Thumbprint { get; internal set; }
    public string Token { get; public set; }
    public string KeyId { get; public set; }
    public string AppName { get; public set; }
    public string AppId { get; public set; }
    internal X509Certificate2 NativeCertificate { get; internal set; }
    public ApnsCredential(Byte[] certificateBuffer, string certificateKey);
    public ApnsCredential(string certificatePath, string certificateKey);
    public ApnsCredential(string token, string keyId, string appId, string appName);
    internal virtual string get_AppPlatform();
    public string get_ApnsCertificate();
    public void set_ApnsCertificate(string value);
    public string get_CertificateKey();
    public void set_CertificateKey(string value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
    public string get_Thumbprint();
    internal void set_Thumbprint(string value);
    public string get_Token();
    public void set_Token(string value);
    public string get_KeyId();
    public void set_KeyId(string value);
    public string get_AppName();
    public void set_AppName(string value);
    public string get_AppId();
    public void set_AppId(string value);
    [CompilerGeneratedAttribute]
internal X509Certificate2 get_NativeCertificate();
    [CompilerGeneratedAttribute]
internal void set_NativeCertificate(X509Certificate2 value);
    private string GetApnsClientCertificate(string certPath);
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
    protected virtual void OnValidate(bool allowLocalMockPns);
}
[CollectionDataContractAttribute]
public class Microsoft.Azure.NotificationHubs.ApnsHeaderCollection : SortedDictionary`2<string, string> {
}
public class Microsoft.Azure.NotificationHubs.AppleInstallation : Installation {
    public AppleInstallation(string installationId, string deviceToken);
}
public class Microsoft.Azure.NotificationHubs.AppleNotification : Notification {
    private static string contentType;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Expiry>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Priority>k__BackingField;
    public Nullable`1<DateTime> Expiry { get; public set; }
    public Nullable`1<int> Priority { get; public set; }
    protected string PlatformType { get; }
    public AppleNotification(string jsonPayload);
    public AppleNotification(string jsonPayload, IDictionary`2<string, string> apnsHeaders);
    [ObsoleteAttribute("This method is obsolete.")]
public AppleNotification(string jsonPayload, string tag);
    public AppleNotification(string jsonPayload, Nullable`1<DateTime> expiry);
    [ObsoleteAttribute("This method is obsolete.")]
public AppleNotification(string jsonPayload, Nullable`1<DateTime> expiry, string tag);
    private static AppleNotification();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Expiry();
    [CompilerGeneratedAttribute]
public void set_Expiry(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(Nullable`1<int> value);
    protected virtual string get_PlatformType();
    protected virtual void OnValidateAndPopulateHeaders();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.AppleRegistrationDescription : RegistrationDescription {
    internal static Regex DeviceTokenRegex;
    internal static string ExpiryHeader;
    internal static string PriorityHeader;
    internal static string ApnsHeaderPrefix;
    internal static string ApnsExpiryHeader;
    internal static string ApnsPriorityHeader;
    [CompilerGeneratedAttribute]
private string <DeviceToken>k__BackingField;
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    [DataMemberAttribute]
public string DeviceToken { get; public set; }
    public AppleRegistrationDescription(AppleRegistrationDescription sourceRegistration);
    public AppleRegistrationDescription(string deviceToken);
    public AppleRegistrationDescription(string deviceToken, IEnumerable`1<string> tags);
    internal AppleRegistrationDescription(string notificationHubPath, string deviceToken, IEnumerable`1<string> tags);
    private static AppleRegistrationDescription();
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    [CompilerGeneratedAttribute]
public string get_DeviceToken();
    [CompilerGeneratedAttribute]
public void set_DeviceToken(string value);
    internal virtual void OnValidate();
    internal Byte[] GetDeviceTokenBytes();
    internal static Byte[] GetDeviceTokenBytes(string deviceToken);
    internal virtual string GetPnsHandle();
    internal virtual void SetPnsHandle(string pnsHandle);
    internal virtual RegistrationDescription Clone();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.AppleTemplateRegistrationDescription : AppleRegistrationDescription {
    [CompilerGeneratedAttribute]
private CDataMember <BodyTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Expiry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TemplateName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private ApnsHeaderCollection <ApnsHeaders>k__BackingField;
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    [DataMemberAttribute]
public CDataMember BodyTemplate { get; public set; }
    [DataMemberAttribute]
public string Expiry { get; public set; }
    [DataMemberAttribute]
public string TemplateName { get; public set; }
    [DataMemberAttribute]
public string Priority { get; public set; }
    [DataMemberAttribute]
public ApnsHeaderCollection ApnsHeaders { get; public set; }
    public AppleTemplateRegistrationDescription(AppleTemplateRegistrationDescription sourceRegistration);
    public AppleTemplateRegistrationDescription(string deviceToken);
    public AppleTemplateRegistrationDescription(string deviceToken, string jsonPayload);
    public AppleTemplateRegistrationDescription(string deviceToken, string jsonPayload, IDictionary`2<string, string> apnsHeaders);
    public AppleTemplateRegistrationDescription(string deviceToken, string jsonPayload, IEnumerable`1<string> tags);
    internal AppleTemplateRegistrationDescription(string notificationHubPath, string deviceToken, string jsonPayload, IEnumerable`1<string> tags, IDictionary`2<string, string> apnsHeaders);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    [CompilerGeneratedAttribute]
public CDataMember get_BodyTemplate();
    [CompilerGeneratedAttribute]
public void set_BodyTemplate(CDataMember value);
    [CompilerGeneratedAttribute]
public string get_Expiry();
    [CompilerGeneratedAttribute]
public void set_Expiry(string value);
    [CompilerGeneratedAttribute]
public string get_TemplateName();
    [CompilerGeneratedAttribute]
public void set_TemplateName(string value);
    [CompilerGeneratedAttribute]
public string get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(string value);
    [CompilerGeneratedAttribute]
public ApnsHeaderCollection get_ApnsHeaders();
    [CompilerGeneratedAttribute]
public void set_ApnsHeaders(ApnsHeaderCollection value);
    internal virtual void OnValidate();
    private void ValidateTemplateName();
    internal virtual RegistrationDescription Clone();
}
internal static class Microsoft.Azure.NotificationHubs.Auth.SharedAccessSignatureBuilder : object {
    private static string SharedAccessSignature;
    private static string SignedResource;
    private static string Signature;
    private static string SignedKeyName;
    private static string SignedExpiry;
    public static DateTime EpochTime;
    private static SharedAccessSignatureBuilder();
    public static string BuildSignature(string keyName, Byte[] encodedSharedAccessKey, string targetUri, TimeSpan timeToLive);
    internal static string UrlEncode(string url);
    private static string BuildExpiresOn(TimeSpan timeToLive);
    private static string Sign(string requestString, Byte[] encodedSharedAccessKey);
}
public class Microsoft.Azure.NotificationHubs.Auth.SharedAccessSignatureTokenProvider : TokenProvider {
    private static int MaxKeyNameLength;
    private static int MaxKeyLength;
    internal Byte[] _encodedSharedAccessKey;
    internal string _keyName;
    internal TimeSpan _tokenTimeToLive;
    private static TimeSpan DefaultTokenTimeout;
    private static TimeSpan DefaultTokenRefreshTimeMargin;
    internal SharedAccessSignatureTokenProvider(string connectionString);
    internal SharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey);
    internal SharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey, TimeSpan tokenTimeToLive);
    private static SharedAccessSignatureTokenProvider();
    public static TokenProvider CreateSharedAccessSignatureTokenProvider(string connectionString);
    public static TokenProvider CreateSharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey);
    protected virtual string GenerateToken(string appliesTo);
    private string BuildSignature(string targetUri);
}
public abstract class Microsoft.Azure.NotificationHubs.Auth.TokenProvider : object {
    private IMemoryCache _tokenCache;
    private bool _cacheTokens;
    private TimeSpan _cacheExpirationTime;
    protected bool StripQueryParameters { get; }
    protected TokenProvider(TimeSpan cacheExpirationTime);
    protected TokenProvider(bool cacheTokens, TimeSpan cacheExpirationTime);
    protected TokenProvider(bool cacheTokens);
    protected abstract virtual string GenerateToken(string appliesTo);
    protected virtual bool get_StripQueryParameters();
    public string GetToken(string appliesTo, string action, bool bypassCache);
    private bool TryFetchFromCache(string appliesTo, string action, bool bypassCache, String& token);
    private void TrySetIntoCache(string appliesTo, string action, bool bypassCache, string token);
    private string NormalizeAppliesTo(string appliesTo);
    private string BuildKey(string appliesTo, string action);
    public sealed virtual void Dispose();
    private static string NormalizeUri(string uri, string scheme, bool stripQueryParameters, bool stripPath, bool ensureTrailingSlash);
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.BaiduCredential : PnsCredential {
    internal static string AppPlatformName;
    internal static string ProdAccessTokenServiceUrl;
    public string BaiduApiKey { get; public set; }
    public string BaiduEndPoint { get; public set; }
    public string BaiduSecretKey { get; public set; }
    internal string AppPlatform { get; }
    public BaiduCredential(string baiduApiKey);
    public string get_BaiduApiKey();
    public void set_BaiduApiKey(string value);
    public string get_BaiduEndPoint();
    public void set_BaiduEndPoint(string value);
    public string get_BaiduSecretKey();
    public void set_BaiduSecretKey(string value);
    internal virtual string get_AppPlatform();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    protected virtual void OnValidate(bool allowLocalMockPns);
}
public class Microsoft.Azure.NotificationHubs.BaiduInstallation : Installation {
    public BaiduInstallation(string installationId, string baiduUserId, string baiduChannelId);
}
public class Microsoft.Azure.NotificationHubs.BaiduNotification : Notification {
    private static string contentType;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MessageType>k__BackingField;
    public Nullable`1<int> MessageType { get; public set; }
    protected string PlatformType { get; }
    public BaiduNotification(string message);
    public BaiduNotification(string message, Nullable`1<int> messageType);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MessageType();
    [CompilerGeneratedAttribute]
public void set_MessageType(Nullable`1<int> value);
    protected virtual string get_PlatformType();
    protected virtual void OnValidateAndPopulateHeaders();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.BaiduRegistrationDescription : RegistrationDescription {
    internal static string MessageTypeHeader;
    [CompilerGeneratedAttribute]
private string <BaiduUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaiduChannelId>k__BackingField;
    [DataMemberAttribute]
public string BaiduUserId { get; public set; }
    [DataMemberAttribute]
public string BaiduChannelId { get; public set; }
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    public BaiduRegistrationDescription(string pnsHandle);
    public BaiduRegistrationDescription(BaiduRegistrationDescription sourceRegistration);
    public BaiduRegistrationDescription(string baiduUserId, string baiduChannelId, IEnumerable`1<string> tags);
    internal BaiduRegistrationDescription(string notificationHubPath, string baiduUserId, string baiduChannelId, IEnumerable`1<string> tags);
    [CompilerGeneratedAttribute]
public string get_BaiduUserId();
    [CompilerGeneratedAttribute]
public void set_BaiduUserId(string value);
    [CompilerGeneratedAttribute]
public string get_BaiduChannelId();
    [CompilerGeneratedAttribute]
public void set_BaiduChannelId(string value);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    internal virtual string GetPnsHandle();
    internal virtual void SetPnsHandle(string pnsHandle);
    internal virtual void OnValidate();
    internal virtual RegistrationDescription Clone();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.BaiduTemplateRegistrationDescription : BaiduRegistrationDescription {
    [CompilerGeneratedAttribute]
private CDataMember <BodyTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TemplateName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MessageType>k__BackingField;
    [DataMemberAttribute]
public CDataMember BodyTemplate { get; public set; }
    [DataMemberAttribute]
public string TemplateName { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MessageType { get; public set; }
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    public BaiduTemplateRegistrationDescription(BaiduTemplateRegistrationDescription sourceRegistration);
    public BaiduTemplateRegistrationDescription(string baiduUserId, string baiduChannelId);
    public BaiduTemplateRegistrationDescription(string baiduUserId, string baiduChannelId, string jsonPayload);
    public BaiduTemplateRegistrationDescription(string baiduUserId, string baiduChannelId, string jsonPayload, IEnumerable`1<string> tags);
    public BaiduTemplateRegistrationDescription(string baiduUserId, string baiduChannelId, string jsonPayload, int messageType);
    public BaiduTemplateRegistrationDescription(string baiduUserId, string baiduChannelId, string jsonPayload, IEnumerable`1<string> tags, int messageType);
    internal BaiduTemplateRegistrationDescription(string notificationHubPath, string baiduUserId, string baiduChannelId, string jsonPayload, IEnumerable`1<string> tags, Nullable`1<int> messageType);
    [CompilerGeneratedAttribute]
public CDataMember get_BodyTemplate();
    [CompilerGeneratedAttribute]
public void set_BodyTemplate(CDataMember value);
    [CompilerGeneratedAttribute]
public string get_TemplateName();
    [CompilerGeneratedAttribute]
public void set_TemplateName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MessageType();
    [CompilerGeneratedAttribute]
public void set_MessageType(Nullable`1<int> value);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    internal virtual void OnValidate();
    internal virtual RegistrationDescription Clone();
    private void ValidateTemplateName();
}
internal class Microsoft.Azure.NotificationHubs.BasicRetryPolicy : NotificationHubRetryPolicy {
    private static int s_randomSeed;
    private static ThreadLocal`1<Random> RandomNumberGenerator;
    [CompilerGeneratedAttribute]
private NotificationHubRetryOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private double <JitterFactor>k__BackingField;
    public NotificationHubRetryOptions Options { get; }
    public double JitterFactor { get; }
    public BasicRetryPolicy(NotificationHubRetryOptions retryOptions);
    private static BasicRetryPolicy();
    [CompilerGeneratedAttribute]
public NotificationHubRetryOptions get_Options();
    [CompilerGeneratedAttribute]
public double get_JitterFactor();
    public virtual Nullable`1<TimeSpan> CalculateRetryDelay(Exception lastException, int attemptCount);
    private static bool ShouldRetryException(Exception exception);
    private static TimeSpan CalculateExponentialDelay(int attemptCount, double baseDelaySeconds, double baseJitterSeconds, Random random);
    private static TimeSpan CalculateFixedDelay(double baseDelaySeconds, double baseJitterSeconds, Random random);
}
[XmlSchemaProviderAttribute("GenerateSchema")]
public class Microsoft.Azure.NotificationHubs.CDataMember : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; public set; }
    public CDataMember(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public static string op_Implicit(CDataMember value);
    public static CDataMember op_Implicit(string value);
    public sealed virtual XmlSchema GetSchema();
    public static XmlQualifiedName GenerateSchema(XmlSchemaSet xs);
    public sealed virtual void WriteXml(XmlWriter writer);
    public sealed virtual void ReadXml(XmlReader reader);
    public virtual string ToString();
}
public class Microsoft.Azure.NotificationHubs.CollectionQueryResult`1 : object {
    private IEnumerable`1<T> results;
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    public string ContinuationToken { get; private set; }
    internal CollectionQueryResult`1(IEnumerable`1<T> results, string continuationToken);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContinuationToken();
    [CompilerGeneratedAttribute]
private void set_ContinuationToken(string value);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class Microsoft.Azure.NotificationHubs.Common.SRCore : object {
    private static ResourceManager resourceManager;
    private static CultureInfo resourceCulture;
    internal static ResourceManager ResourceManager { get; }
    [GeneratedCodeAttribute("StrictResXFileCodeGenerator", "4.0.0.0")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ActionItemIsAlreadyScheduled { get; }
    internal static string AsyncCallbackThrewException { get; }
    internal static string AsyncResultAlreadyEnded { get; }
    internal static string AsyncTransactionException { get; }
    internal static string BufferIsNotRightSizeForBufferManager { get; }
    internal static string InvalidAsyncResult { get; }
    internal static string InvalidAsyncResultImplementationGeneric { get; }
    internal static string InvalidNullAsyncResult { get; }
    internal static string InvalidSemaphoreExit { get; }
    internal static string MustCancelOldTimer { get; }
    internal static string EndOfInnerExceptionStackTrace { get; }
    internal static string AsyncSemaphoreExitCalledWithoutEnter { get; }
    internal static string SharedAccessAuthorizationRuleKeyContainsInvalidCharacters { get; }
    internal static string SharedAccessAuthorizationRuleRequiresPrimaryKey { get; }
    internal static string SharedAccessKeyShouldbeBase64 { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ActionItemIsAlreadyScheduled();
    internal static string get_AsyncCallbackThrewException();
    internal static string get_AsyncResultAlreadyEnded();
    internal static string get_AsyncTransactionException();
    internal static string get_BufferIsNotRightSizeForBufferManager();
    internal static string get_InvalidAsyncResult();
    internal static string get_InvalidAsyncResultImplementationGeneric();
    internal static string get_InvalidNullAsyncResult();
    internal static string get_InvalidSemaphoreExit();
    internal static string get_MustCancelOldTimer();
    internal static string get_EndOfInnerExceptionStackTrace();
    internal static string get_AsyncSemaphoreExitCalledWithoutEnter();
    internal static string get_SharedAccessAuthorizationRuleKeyContainsInvalidCharacters();
    internal static string get_SharedAccessAuthorizationRuleRequiresPrimaryKey();
    internal static string get_SharedAccessKeyShouldbeBase64();
    internal static string ArgumentNullOrEmpty(object param0);
    internal static string AsyncResultCompletedTwice(object param0);
    internal static string EtwAPIMaxStringCountExceeded(object param0);
    internal static string EtwMaxNumberArgumentsExceeded(object param0);
    internal static string EtwRegistrationFailed(object param0);
    internal static string InvalidAsyncResultImplementation(object param0);
    internal static string ShipAssertExceptionMessage(object param0);
    internal static string TimeoutInputQueueDequeue(object param0);
    internal static string TimeoutMustBeNonNegative(object param0, object param1);
    internal static string TimeoutMustBePositive(object param0, object param1);
    internal static string TimeoutOnOperation(object param0);
    internal static string FailFastMessage(object param0);
    internal static string ResourceCountExceeded(object param0, object param1, object param2);
    internal static string ArgumentNullOrWhiteSpace(object param0);
    internal static string UnsupportedEnumerationValue(object param0);
    internal static string UnsupportedOperation(object param0);
    internal static string UnsupportedTransport(object param0, object param1);
    internal static string AutoForwardToSelf(object param0);
    internal static string NullOrEmptyConfigurationAttribute(object param0, object param1);
    internal static string MultipleTransportSettingConfigurationElement(object param0);
    internal static string DictionaryKeyIsModified(object param0);
    internal static string DictionaryKeyNotExist(object param0);
    internal static string ArgumentStringTooBig(object param0, object param1);
    internal static string SharedAccessAuthorizationRuleKeyNameTooBig(object param0);
    internal static string SharedAccessAuthorizationRuleKeyTooBig(object param0);
    internal static string SharedAccessRuleAllowsFixedLengthKeys(object param0);
    internal static string ArgumentOutOfRange(object param0, object param1);
}
public class Microsoft.Azure.NotificationHubs.ConfigurationException : Exception {
    public ConfigurationException(string message);
}
internal enum Microsoft.Azure.NotificationHubs.EntityOperatonType : Enum {
    public int value__;
    public static EntityOperatonType Create;
    public static EntityOperatonType CreateOrUpdate;
    public static EntityOperatonType Update;
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.ErrorResponse : object {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Detail>k__BackingField;
    [DataMemberAttribute]
public string Code { get; public set; }
    [DataMemberAttribute]
public string Detail { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Detail();
    [CompilerGeneratedAttribute]
public void set_Detail(string value);
}
public enum Microsoft.Azure.NotificationHubs.ExceptionErrorCodes : Enum {
    public int value__;
    public static ExceptionErrorCodes BadRequest;
    public static ExceptionErrorCodes UnauthorizedGeneric;
    public static ExceptionErrorCodes NoTransportSecurity;
    public static ExceptionErrorCodes MissingToken;
    public static ExceptionErrorCodes InvalidSignature;
    public static ExceptionErrorCodes InvalidAudience;
    public static ExceptionErrorCodes MalformedToken;
    public static ExceptionErrorCodes ExpiredToken;
    public static ExceptionErrorCodes AudienceNotFound;
    public static ExceptionErrorCodes ExpiresOnNotFound;
    public static ExceptionErrorCodes IssuerNotFound;
    public static ExceptionErrorCodes SignatureNotFound;
    public static ExceptionErrorCodes ForbiddenGeneric;
    public static ExceptionErrorCodes EndpointNotFound;
    public static ExceptionErrorCodes InvalidDestination;
    public static ExceptionErrorCodes NamespaceNotFound;
    public static ExceptionErrorCodes ResourceNotFound;
    public static ExceptionErrorCodes StoreLockLost;
    public static ExceptionErrorCodes SqlFiltersExceeded;
    public static ExceptionErrorCodes CorrelationFiltersExceeded;
    public static ExceptionErrorCodes SubscriptionsExceeded;
    public static ExceptionErrorCodes UpdateConflict;
    public static ExceptionErrorCodes EventHubAtFullCapacity;
    public static ExceptionErrorCodes ConflictGeneric;
    public static ExceptionErrorCodes ConflictOperationInProgress;
    public static ExceptionErrorCodes EntityGone;
    public static ExceptionErrorCodes Throttled;
    public static ExceptionErrorCodes UnspecifiedInternalError;
    public static ExceptionErrorCodes DataCommunicationError;
    public static ExceptionErrorCodes InternalFailure;
    public static ExceptionErrorCodes ProviderUnreachable;
    public static ExceptionErrorCodes ServerBusy;
    public static ExceptionErrorCodes BadGatewayFailure;
    public static ExceptionErrorCodes GatewayTimeoutFailure;
    public static ExceptionErrorCodes UnknownExceptionDetail;
}
[ExtensionAttribute]
internal static class Microsoft.Azure.NotificationHubs.ExceptionsUtility : object {
    private static string ConflictOperationInProgressSubCode;
    public static string RootTag;
    public static string HttpStatusCodeTag;
    public static string DetailTag;
    private static ExceptionsUtility();
    public static Exception HandleXmlException(XmlException exception, string trackingId);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.ExceptionsUtility/<TranslateToMessagingExceptionAsync>d__5")]
[ExtensionAttribute]
public static Task`1<Exception> TranslateToMessagingExceptionAsync(HttpResponseMessage response, string trackingId);
    internal static string FormatExceptionMessage(string responseBody, HttpStatusCode code, string reasonPhrase, string trackingId);
    public static Exception HandleSocketException(SocketException socketException, int timeoutInMilliseconds, string trackingId);
    public static Exception HandleUnexpectedException(Exception ex, string trackingId);
    internal static string CreateClientTrackingExceptionInfo(string trackingId);
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.FcmCredential : PnsCredential {
    internal static string AppPlatformName;
    internal static string ProdAccessTokenServiceUrl;
    public string FcmEndpoint { get; public set; }
    public string GoogleApiKey { get; public set; }
    internal string AppPlatform { get; }
    public FcmCredential(string googleApiKey);
    public string get_FcmEndpoint();
    public void set_FcmEndpoint(string value);
    public string get_GoogleApiKey();
    public void set_GoogleApiKey(string value);
    internal virtual string get_AppPlatform();
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
}
public class Microsoft.Azure.NotificationHubs.FcmInstallation : Installation {
    public FcmInstallation(string installationId, string registrationId);
}
public class Microsoft.Azure.NotificationHubs.FcmNotification : Notification {
    private static string contentType;
    protected string PlatformType { get; }
    public FcmNotification(string jsonPayload);
    [ObsoleteAttribute("This method is obsolete.")]
public FcmNotification(string jsonPayload, string tag);
    private static FcmNotification();
    protected virtual string get_PlatformType();
    protected virtual void OnValidateAndPopulateHeaders();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.FcmRegistrationDescription : RegistrationDescription {
    [CompilerGeneratedAttribute]
private string <FcmRegistrationId>k__BackingField;
    [DataMemberAttribute]
public string FcmRegistrationId { get; public set; }
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    public FcmRegistrationDescription(FcmRegistrationDescription sourceRegistration);
    public FcmRegistrationDescription(string fcmRegistrationId);
    public FcmRegistrationDescription(string fcmRegistrationId, IEnumerable`1<string> tags);
    internal FcmRegistrationDescription(GcmRegistrationDescription gcmRegistration);
    internal FcmRegistrationDescription(string notificationHubPath, string fcmRegistrationId, IEnumerable`1<string> tags);
    [CompilerGeneratedAttribute]
public string get_FcmRegistrationId();
    [CompilerGeneratedAttribute]
public void set_FcmRegistrationId(string value);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    internal virtual string GetPnsHandle();
    internal virtual void SetPnsHandle(string pnsHandle);
    internal virtual void OnValidate();
    internal virtual RegistrationDescription Clone();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.FcmTemplateRegistrationDescription : FcmRegistrationDescription {
    [CompilerGeneratedAttribute]
private CDataMember <BodyTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TemplateName>k__BackingField;
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    [DataMemberAttribute]
public CDataMember BodyTemplate { get; public set; }
    [DataMemberAttribute]
public string TemplateName { get; public set; }
    public FcmTemplateRegistrationDescription(FcmTemplateRegistrationDescription sourceRegistration);
    public FcmTemplateRegistrationDescription(string fcmRegistrationId);
    public FcmTemplateRegistrationDescription(string fcmRegistrationId, string jsonPayload);
    public FcmTemplateRegistrationDescription(string fcmRegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    internal FcmTemplateRegistrationDescription(GcmTemplateRegistrationDescription gcmRegistration);
    internal FcmTemplateRegistrationDescription(string notificationHubPath, string fcmRegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    [CompilerGeneratedAttribute]
public CDataMember get_BodyTemplate();
    [CompilerGeneratedAttribute]
public void set_BodyTemplate(CDataMember value);
    [CompilerGeneratedAttribute]
public string get_TemplateName();
    [CompilerGeneratedAttribute]
public void set_TemplateName(string value);
    internal virtual void OnValidate();
    private void ValidateTemplateName();
    internal virtual RegistrationDescription Clone();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.FcmV1Credential : PnsCredential {
    internal static string AppPlatformName;
    internal static string ProdAccessTokenServiceUrl;
    public string FcmV1Endpoint { get; }
    public string PrivateKey { get; public set; }
    public string ProjectId { get; public set; }
    public string ClientEmail { get; public set; }
    internal string AppPlatform { get; }
    public FcmV1Credential(string privateKey, string projectId, string clientEmail);
    public string get_FcmV1Endpoint();
    public string get_PrivateKey();
    public void set_PrivateKey(string value);
    public string get_ProjectId();
    public void set_ProjectId(string value);
    public string get_ClientEmail();
    public void set_ClientEmail(string value);
    internal virtual string get_AppPlatform();
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
    protected virtual void OnValidate(bool allowLocalMockPns);
}
public class Microsoft.Azure.NotificationHubs.FcmV1Installation : Installation {
    public FcmV1Installation(string installationId, string registrationId);
}
public class Microsoft.Azure.NotificationHubs.FcmV1Notification : Notification {
    private static string contentType;
    protected string PlatformType { get; }
    public FcmV1Notification(string jsonPayload);
    [ObsoleteAttribute("This method is obsolete.")]
public FcmV1Notification(string jsonPayload, string tag);
    private static FcmV1Notification();
    protected virtual string get_PlatformType();
    protected virtual void OnValidateAndPopulateHeaders();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.FcmV1RegistrationDescription : RegistrationDescription {
    [CompilerGeneratedAttribute]
private string <FcmV1RegistrationId>k__BackingField;
    [DataMemberAttribute]
public string FcmV1RegistrationId { get; public set; }
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    public FcmV1RegistrationDescription(FcmV1RegistrationDescription sourceRegistration);
    public FcmV1RegistrationDescription(string fcmV1RegistrationId);
    public FcmV1RegistrationDescription(string fcmV1RegistrationId, IEnumerable`1<string> tags);
    internal FcmV1RegistrationDescription(string notificationHubPath, string fcmV1RegistrationId, IEnumerable`1<string> tags);
    [CompilerGeneratedAttribute]
public string get_FcmV1RegistrationId();
    [CompilerGeneratedAttribute]
public void set_FcmV1RegistrationId(string value);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    internal virtual string GetPnsHandle();
    internal virtual void SetPnsHandle(string pnsHandle);
    internal virtual void OnValidate();
    internal virtual RegistrationDescription Clone();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.FcmV1TemplateRegistrationDescription : FcmV1RegistrationDescription {
    [CompilerGeneratedAttribute]
private CDataMember <BodyTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TemplateName>k__BackingField;
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    [DataMemberAttribute]
public CDataMember BodyTemplate { get; public set; }
    [DataMemberAttribute]
public string TemplateName { get; public set; }
    public FcmV1TemplateRegistrationDescription(FcmV1TemplateRegistrationDescription sourceRegistration);
    public FcmV1TemplateRegistrationDescription(string fcmV1RegistrationId);
    public FcmV1TemplateRegistrationDescription(string fcmV1RegistrationId, string jsonPayload);
    public FcmV1TemplateRegistrationDescription(string fcmV1RegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    internal FcmV1TemplateRegistrationDescription(string notificationHubPath, string fcmV1RegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    [CompilerGeneratedAttribute]
public CDataMember get_BodyTemplate();
    [CompilerGeneratedAttribute]
public void set_BodyTemplate(CDataMember value);
    [CompilerGeneratedAttribute]
public string get_TemplateName();
    [CompilerGeneratedAttribute]
public void set_TemplateName(string value);
    internal virtual void OnValidate();
    private void ValidateTemplateName();
    internal virtual RegistrationDescription Clone();
}
[DataContractAttribute]
[ObsoleteAttribute("GcmCredential is deprecated, please use FcmV1Credential instead.")]
public class Microsoft.Azure.NotificationHubs.GcmCredential : PnsCredential {
    internal static string AppPlatformName;
    internal static string ProdAccessTokenServiceUrl;
    public string GcmEndpoint { get; public set; }
    public string GoogleApiKey { get; public set; }
    internal string AppPlatform { get; }
    public GcmCredential(string googleApiKey);
    public string get_GcmEndpoint();
    public void set_GcmEndpoint(string value);
    public string get_GoogleApiKey();
    public void set_GoogleApiKey(string value);
    internal virtual string get_AppPlatform();
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
    protected virtual void OnValidate(bool allowLocalMockPns);
}
[ObsoleteAttribute("GcmNotification is deprecated, please use FcmV1Notification instead.")]
internal class Microsoft.Azure.NotificationHubs.GcmNotification : Notification {
    private static string contentType;
    protected string PlatformType { get; }
    public GcmNotification(string jsonPayload);
    [ObsoleteAttribute("This method is obsolete.")]
public GcmNotification(string jsonPayload, string tag);
    [ObsoleteAttribute("This method is obsolete.")]
public GcmNotification(FcmNotification fcmNotification);
    private static GcmNotification();
    protected virtual string get_PlatformType();
    protected virtual void OnValidateAndPopulateHeaders();
}
[DataContractAttribute]
[ObsoleteAttribute("GcmRegistrationDescription is deprecated, please use FcmRegistrationDescription instead.")]
public class Microsoft.Azure.NotificationHubs.GcmRegistrationDescription : RegistrationDescription {
    [CompilerGeneratedAttribute]
private string <GcmRegistrationId>k__BackingField;
    [DataMemberAttribute]
public string GcmRegistrationId { get; public set; }
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    public GcmRegistrationDescription(GcmRegistrationDescription sourceRegistration);
    public GcmRegistrationDescription(string gcmRegistrationId);
    public GcmRegistrationDescription(string gcmRegistrationId, IEnumerable`1<string> tags);
    public GcmRegistrationDescription(FcmRegistrationDescription fcmRegistration);
    internal GcmRegistrationDescription(string notificationHubPath, string gcmRegistrationId, IEnumerable`1<string> tags);
    [CompilerGeneratedAttribute]
public string get_GcmRegistrationId();
    [CompilerGeneratedAttribute]
public void set_GcmRegistrationId(string value);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    internal virtual string GetPnsHandle();
    internal virtual void SetPnsHandle(string pnsHandle);
    internal virtual void OnValidate();
    internal virtual RegistrationDescription Clone();
}
[DataContractAttribute]
[ObsoleteAttribute("GcmTemplateRegistrationDescription is deprecated, please use FcmTemplateRegistrationDescription instead.")]
public class Microsoft.Azure.NotificationHubs.GcmTemplateRegistrationDescription : GcmRegistrationDescription {
    [CompilerGeneratedAttribute]
private CDataMember <BodyTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TemplateName>k__BackingField;
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    [DataMemberAttribute]
public CDataMember BodyTemplate { get; public set; }
    [DataMemberAttribute]
public string TemplateName { get; public set; }
    public GcmTemplateRegistrationDescription(GcmTemplateRegistrationDescription sourceRegistration);
    public GcmTemplateRegistrationDescription(string gcmRegistrationId);
    public GcmTemplateRegistrationDescription(string gcmRegistrationId, string jsonPayload);
    public GcmTemplateRegistrationDescription(string gcmRegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    public GcmTemplateRegistrationDescription(FcmTemplateRegistrationDescription fcmTemplateRegistration);
    internal GcmTemplateRegistrationDescription(string notificationHubPath, string gcmRegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    [CompilerGeneratedAttribute]
public CDataMember get_BodyTemplate();
    [CompilerGeneratedAttribute]
public void set_BodyTemplate(CDataMember value);
    [CompilerGeneratedAttribute]
public string get_TemplateName();
    [CompilerGeneratedAttribute]
public void set_TemplateName(string value);
    internal virtual void OnValidate();
    private void ValidateTemplateName();
    internal virtual RegistrationDescription Clone();
}
public interface Microsoft.Azure.NotificationHubs.ICollectionQueryResult`1 {
    public string ContinuationToken { get; }
    public abstract virtual string get_ContinuationToken();
}
public interface Microsoft.Azure.NotificationHubs.INamespaceManager {
    public abstract virtual NotificationHubDescription CreateNotificationHub(NotificationHubDescription description);
    public abstract virtual NotificationHubDescription CreateNotificationHub(string hubName);
    public abstract virtual Task`1<NotificationHubDescription> CreateNotificationHubAsync(NotificationHubDescription description);
    public abstract virtual Task`1<NotificationHubDescription> CreateNotificationHubAsync(NotificationHubDescription description, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationHubDescription> CreateNotificationHubAsync(string hubName);
    public abstract virtual Task`1<NotificationHubDescription> CreateNotificationHubAsync(string hubName, CancellationToken cancellationToken);
    public abstract virtual void DeleteNotificationHub(string path);
    public abstract virtual Task DeleteNotificationHubAsync(string path);
    public abstract virtual Task DeleteNotificationHubAsync(string path, CancellationToken cancellationToken);
    public abstract virtual NotificationHubDescription GetNotificationHub(string path);
    public abstract virtual Task`1<NotificationHubDescription> GetNotificationHubAsync(string path);
    public abstract virtual Task`1<NotificationHubDescription> GetNotificationHubAsync(string path, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationHubJob> GetNotificationHubJobAsync(string jobId, string notificationHubPath);
    public abstract virtual Task`1<NotificationHubJob> GetNotificationHubJobAsync(string jobId, string notificationHubPath, CancellationToken cancellationToken);
    public abstract virtual Task`1<IEnumerable`1<NotificationHubJob>> GetNotificationHubJobsAsync(string notificationHubPath);
    public abstract virtual Task`1<IEnumerable`1<NotificationHubJob>> GetNotificationHubJobsAsync(string notificationHubPath, CancellationToken cancellationToken);
    public abstract virtual IEnumerable`1<NotificationHubDescription> GetNotificationHubs();
    public abstract virtual Task`1<IEnumerable`1<NotificationHubDescription>> GetNotificationHubsAsync();
    public abstract virtual Task`1<IEnumerable`1<NotificationHubDescription>> GetNotificationHubsAsync(CancellationToken cancellationToken);
    public abstract virtual bool NotificationHubExists(string path);
    public abstract virtual Task`1<bool> NotificationHubExistsAsync(string path);
    public abstract virtual Task`1<bool> NotificationHubExistsAsync(string path, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationHubJob> SubmitNotificationHubJobAsync(NotificationHubJob job, string notificationHubPath);
    public abstract virtual Task`1<NotificationHubJob> SubmitNotificationHubJobAsync(NotificationHubJob job, string notificationHubPath, CancellationToken cancellationToken);
    public abstract virtual NotificationHubDescription UpdateNotificationHub(NotificationHubDescription description);
    public abstract virtual Task`1<NotificationHubDescription> UpdateNotificationHubAsync(NotificationHubDescription description);
    public abstract virtual Task`1<NotificationHubDescription> UpdateNotificationHubAsync(NotificationHubDescription description, CancellationToken cancellationToken);
}
public interface Microsoft.Azure.NotificationHubs.INativeNotification {
}
public interface Microsoft.Azure.NotificationHubs.INotificationHubClient {
    public bool EnableTestSend { get; }
    public abstract virtual bool get_EnableTestSend();
    public abstract virtual Task CancelNotificationAsync(string scheduledNotificationId);
    public abstract virtual Task CancelNotificationAsync(string scheduledNotificationId, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdmRegistrationDescription> CreateAdmNativeRegistrationAsync(string admRegistrationId);
    public abstract virtual Task`1<AdmRegistrationDescription> CreateAdmNativeRegistrationAsync(string admRegistrationId, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdmRegistrationDescription> CreateAdmNativeRegistrationAsync(string admRegistrationId, IEnumerable`1<string> tags);
    public abstract virtual Task`1<AdmRegistrationDescription> CreateAdmNativeRegistrationAsync(string admRegistrationId, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdmTemplateRegistrationDescription> CreateAdmTemplateRegistrationAsync(string admRegistrationId, string jsonPayload);
    public abstract virtual Task`1<AdmTemplateRegistrationDescription> CreateAdmTemplateRegistrationAsync(string admRegistrationId, string jsonPayload, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdmTemplateRegistrationDescription> CreateAdmTemplateRegistrationAsync(string admRegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    public abstract virtual Task`1<AdmTemplateRegistrationDescription> CreateAdmTemplateRegistrationAsync(string admRegistrationId, string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<AppleRegistrationDescription> CreateAppleNativeRegistrationAsync(string deviceToken);
    public abstract virtual Task`1<AppleRegistrationDescription> CreateAppleNativeRegistrationAsync(string deviceToken, CancellationToken cancellationToken);
    public abstract virtual Task`1<AppleRegistrationDescription> CreateAppleNativeRegistrationAsync(string deviceToken, IEnumerable`1<string> tags);
    public abstract virtual Task`1<AppleRegistrationDescription> CreateAppleNativeRegistrationAsync(string deviceToken, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<AppleTemplateRegistrationDescription> CreateAppleTemplateRegistrationAsync(string deviceToken, string jsonPayload);
    public abstract virtual Task`1<AppleTemplateRegistrationDescription> CreateAppleTemplateRegistrationAsync(string deviceToken, string jsonPayload, CancellationToken cancellationToken);
    public abstract virtual Task`1<AppleTemplateRegistrationDescription> CreateAppleTemplateRegistrationAsync(string deviceToken, string jsonPayload, IEnumerable`1<string> tags);
    public abstract virtual Task`1<AppleTemplateRegistrationDescription> CreateAppleTemplateRegistrationAsync(string deviceToken, string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<BaiduRegistrationDescription> CreateBaiduNativeRegistrationAsync(string userId, string channelId);
    public abstract virtual Task`1<BaiduRegistrationDescription> CreateBaiduNativeRegistrationAsync(string userId, string channelId, IEnumerable`1<string> tags);
    public abstract virtual Task`1<BaiduTemplateRegistrationDescription> CreateBaiduTemplateRegistrationAsync(string userId, string channelId, string jsonPayload);
    public abstract virtual Task`1<BaiduTemplateRegistrationDescription> CreateBaiduTemplateRegistrationAsync(string userId, string channelId, string jsonPayload, IEnumerable`1<string> tags);
    public abstract virtual Task`1<FcmRegistrationDescription> CreateFcmNativeRegistrationAsync(string fcmRegistrationId);
    public abstract virtual Task`1<FcmRegistrationDescription> CreateFcmNativeRegistrationAsync(string fcmRegistrationId, CancellationToken cancellationToken);
    public abstract virtual Task`1<FcmRegistrationDescription> CreateFcmNativeRegistrationAsync(string fcmRegistrationId, IEnumerable`1<string> tags);
    public abstract virtual Task`1<FcmRegistrationDescription> CreateFcmNativeRegistrationAsync(string fcmRegistrationId, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<FcmTemplateRegistrationDescription> CreateFcmTemplateRegistrationAsync(string fcmRegistrationId, string jsonPayload);
    public abstract virtual Task`1<FcmTemplateRegistrationDescription> CreateFcmTemplateRegistrationAsync(string fcmRegistrationId, string jsonPayload, CancellationToken cancellationToken);
    public abstract virtual Task`1<FcmTemplateRegistrationDescription> CreateFcmTemplateRegistrationAsync(string fcmRegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    public abstract virtual Task`1<FcmTemplateRegistrationDescription> CreateFcmTemplateRegistrationAsync(string fcmRegistrationId, string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<FcmV1RegistrationDescription> CreateFcmV1NativeRegistrationAsync(string fcmV1RegistrationId);
    public abstract virtual Task`1<FcmV1RegistrationDescription> CreateFcmV1NativeRegistrationAsync(string fcmV1RegistrationId, CancellationToken cancellationToken);
    public abstract virtual Task`1<FcmV1RegistrationDescription> CreateFcmV1NativeRegistrationAsync(string fcmV1RegistrationId, IEnumerable`1<string> tags);
    public abstract virtual Task`1<FcmV1RegistrationDescription> CreateFcmV1NativeRegistrationAsync(string fcmV1RegistrationId, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<FcmV1TemplateRegistrationDescription> CreateFcmV1TemplateRegistrationAsync(string fcmV1RegistrationId, string jsonPayload);
    public abstract virtual Task`1<FcmV1TemplateRegistrationDescription> CreateFcmV1TemplateRegistrationAsync(string fcmV1RegistrationId, string jsonPayload, CancellationToken cancellationToken);
    public abstract virtual Task`1<FcmV1TemplateRegistrationDescription> CreateFcmV1TemplateRegistrationAsync(string fcmV1RegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    public abstract virtual Task`1<FcmV1TemplateRegistrationDescription> CreateFcmV1TemplateRegistrationAsync(string fcmV1RegistrationId, string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<MpnsRegistrationDescription> CreateMpnsNativeRegistrationAsync(string channelUri);
    public abstract virtual Task`1<MpnsRegistrationDescription> CreateMpnsNativeRegistrationAsync(string channelUri, IEnumerable`1<string> tags);
    public abstract virtual Task`1<MpnsTemplateRegistrationDescription> CreateMpnsTemplateRegistrationAsync(string channelUri, string xmlTemplate);
    public abstract virtual Task`1<MpnsTemplateRegistrationDescription> CreateMpnsTemplateRegistrationAsync(string channelUri, string xmlTemplate, IEnumerable`1<string> tags);
    public abstract virtual void CreateOrUpdateInstallation(Installation installation);
    public abstract virtual Task CreateOrUpdateInstallationAsync(Installation installation);
    public abstract virtual Task CreateOrUpdateInstallationAsync(Installation installation, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> CreateOrUpdateRegistrationAsync(T registration);
    public abstract virtual Task`1<T> CreateOrUpdateRegistrationAsync(T registration, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> CreateRegistrationAsync(T registration);
    public abstract virtual Task`1<T> CreateRegistrationAsync(T registration, CancellationToken cancellationToken);
    public abstract virtual Task`1<string> CreateRegistrationIdAsync();
    public abstract virtual Task`1<string> CreateRegistrationIdAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<WindowsRegistrationDescription> CreateWindowsNativeRegistrationAsync(string channelUri);
    public abstract virtual Task`1<WindowsRegistrationDescription> CreateWindowsNativeRegistrationAsync(string channelUri, CancellationToken cancellationToken);
    public abstract virtual Task`1<WindowsRegistrationDescription> CreateWindowsNativeRegistrationAsync(string channelUri, IEnumerable`1<string> tags);
    public abstract virtual Task`1<WindowsRegistrationDescription> CreateWindowsNativeRegistrationAsync(string channelUri, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<WindowsTemplateRegistrationDescription> CreateWindowsTemplateRegistrationAsync(string channelUri, string xmlTemplate);
    public abstract virtual Task`1<WindowsTemplateRegistrationDescription> CreateWindowsTemplateRegistrationAsync(string channelUri, string xmlTemplate, CancellationToken cancellationToken);
    public abstract virtual Task`1<WindowsTemplateRegistrationDescription> CreateWindowsTemplateRegistrationAsync(string channelUri, string xmlTemplate, IEnumerable`1<string> tags);
    public abstract virtual Task`1<WindowsTemplateRegistrationDescription> CreateWindowsTemplateRegistrationAsync(string channelUri, string xmlTemplate, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual void DeleteInstallation(string installationId);
    public abstract virtual Task DeleteInstallationAsync(string installationId);
    public abstract virtual Task DeleteInstallationAsync(string installationId, CancellationToken cancellationToken);
    public abstract virtual Task DeleteRegistrationAsync(RegistrationDescription registration);
    public abstract virtual Task DeleteRegistrationAsync(RegistrationDescription registration, CancellationToken cancellationToken);
    public abstract virtual Task DeleteRegistrationAsync(string registrationId);
    public abstract virtual Task DeleteRegistrationAsync(string registrationId, CancellationToken cancellationToken);
    public abstract virtual Task DeleteRegistrationAsync(string registrationId, string etag);
    public abstract virtual Task DeleteRegistrationAsync(string registrationId, string etag, CancellationToken cancellationToken);
    public abstract virtual Task DeleteRegistrationsByChannelAsync(string pnsHandle);
    public abstract virtual Task DeleteRegistrationsByChannelAsync(string pnsHandle, CancellationToken cancellationToken);
    public abstract virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetAllRegistrationsAsync(int top);
    public abstract virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetAllRegistrationsAsync(int top, CancellationToken cancellationToken);
    public abstract virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetAllRegistrationsAsync(string continuationToken, int top);
    public abstract virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetAllRegistrationsAsync(string continuationToken, int top, CancellationToken cancellationToken);
    public abstract virtual Uri GetBaseUri();
    public abstract virtual Task`1<Uri> GetFeedbackContainerUriAsync();
    public abstract virtual Task`1<Uri> GetFeedbackContainerUriAsync(CancellationToken cancellationToken);
    public abstract virtual Installation GetInstallation(string installationId);
    public abstract virtual Task`1<Installation> GetInstallationAsync(string installationId);
    public abstract virtual Task`1<Installation> GetInstallationAsync(string installationId, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationHubJob> GetNotificationHubJobAsync(string jobId);
    public abstract virtual Task`1<NotificationHubJob> GetNotificationHubJobAsync(string jobId, CancellationToken cancellationToken);
    public abstract virtual Task`1<IEnumerable`1<NotificationHubJob>> GetNotificationHubJobsAsync();
    public abstract virtual Task`1<IEnumerable`1<NotificationHubJob>> GetNotificationHubJobsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationDetails> GetNotificationOutcomeDetailsAsync(string notificationId);
    public abstract virtual Task`1<NotificationDetails> GetNotificationOutcomeDetailsAsync(string notificationId, CancellationToken cancellationToken);
    public abstract virtual Task`1<TRegistrationDescription> GetRegistrationAsync(string registrationId);
    public abstract virtual Task`1<TRegistrationDescription> GetRegistrationAsync(string registrationId, CancellationToken cancellationToken);
    public abstract virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByChannelAsync(string pnsHandle, int top);
    public abstract virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByChannelAsync(string pnsHandle, int top, CancellationToken cancellationToken);
    public abstract virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByChannelAsync(string pnsHandle, string continuationToken, int top);
    public abstract virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByChannelAsync(string pnsHandle, string continuationToken, int top, CancellationToken cancellationToken);
    public abstract virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByTagAsync(string tag, int top);
    public abstract virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByTagAsync(string tag, int top, CancellationToken cancellationToken);
    public abstract virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByTagAsync(string tag, string continuationToken, int top);
    public abstract virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByTagAsync(string tag, string continuationToken, int top, CancellationToken cancellationToken);
    public abstract virtual bool InstallationExists(string installationId);
    public abstract virtual Task`1<bool> InstallationExistsAsync(string installationId);
    public abstract virtual Task`1<bool> InstallationExistsAsync(string installationId, CancellationToken cancellationToken);
    public abstract virtual void PatchInstallation(string installationId, IList`1<PartialUpdateOperation> operations);
    public abstract virtual Task PatchInstallationAsync(string installationId, IList`1<PartialUpdateOperation> operations);
    public abstract virtual Task PatchInstallationAsync(string installationId, IList`1<PartialUpdateOperation> operations, CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> RegistrationExistsAsync(string registrationId);
    public abstract virtual Task`1<bool> RegistrationExistsAsync(string registrationId, CancellationToken cancellationToken);
    public abstract virtual Task`1<ScheduledNotification> ScheduleNotificationAsync(Notification notification, DateTimeOffset scheduledTime);
    public abstract virtual Task`1<ScheduledNotification> ScheduleNotificationAsync(Notification notification, DateTimeOffset scheduledTime, CancellationToken cancellationToken);
    public abstract virtual Task`1<ScheduledNotification> ScheduleNotificationAsync(Notification notification, DateTimeOffset scheduledTime, IEnumerable`1<string> tags);
    public abstract virtual Task`1<ScheduledNotification> ScheduleNotificationAsync(Notification notification, DateTimeOffset scheduledTime, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<ScheduledNotification> ScheduleNotificationAsync(Notification notification, DateTimeOffset scheduledTime, string tagExpression);
    public abstract virtual Task`1<ScheduledNotification> ScheduleNotificationAsync(Notification notification, DateTimeOffset scheduledTime, string tagExpression, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendAdmNativeNotificationAsync(string jsonPayload);
    public abstract virtual Task`1<NotificationOutcome> SendAdmNativeNotificationAsync(string jsonPayload, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendAdmNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags);
    public abstract virtual Task`1<NotificationOutcome> SendAdmNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendAdmNativeNotificationAsync(string jsonPayload, string tagExpression);
    public abstract virtual Task`1<NotificationOutcome> SendAdmNativeNotificationAsync(string jsonPayload, string tagExpression, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendAppleNativeNotificationAsync(string jsonPayload);
    public abstract virtual Task`1<NotificationOutcome> SendAppleNativeNotificationAsync(string jsonPayload, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendAppleNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags);
    public abstract virtual Task`1<NotificationOutcome> SendAppleNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendAppleNativeNotificationAsync(string jsonPayload, string tagExpression);
    public abstract virtual Task`1<NotificationOutcome> SendAppleNativeNotificationAsync(string jsonPayload, string tagExpression, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendBaiduNativeNotificationAsync(string message);
    public abstract virtual Task`1<NotificationOutcome> SendBaiduNativeNotificationAsync(string message, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendBaiduNativeNotificationAsync(string message, IEnumerable`1<string> tags);
    public abstract virtual Task`1<NotificationOutcome> SendBaiduNativeNotificationAsync(string message, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendBaiduNativeNotificationAsync(string message, string tagExpression);
    public abstract virtual Task`1<NotificationOutcome> SendBaiduNativeNotificationAsync(string message, string tagExpression, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendDirectNotificationAsync(Notification notification, IList`1<string> deviceHandles);
    public abstract virtual Task`1<NotificationOutcome> SendDirectNotificationAsync(Notification notification, IList`1<string> deviceHandles, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendDirectNotificationAsync(Notification notification, string deviceHandle);
    public abstract virtual Task`1<NotificationOutcome> SendDirectNotificationAsync(Notification notification, string deviceHandle, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendFcmNativeNotificationAsync(string jsonPayload);
    public abstract virtual Task`1<NotificationOutcome> SendFcmNativeNotificationAsync(string jsonPayload, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendFcmNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags);
    public abstract virtual Task`1<NotificationOutcome> SendFcmNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendFcmNativeNotificationAsync(string jsonPayload, string tagExpression);
    public abstract virtual Task`1<NotificationOutcome> SendFcmNativeNotificationAsync(string jsonPayload, string tagExpression, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendMpnsNativeNotificationAsync(string nativePayload);
    public abstract virtual Task`1<NotificationOutcome> SendMpnsNativeNotificationAsync(string nativePayload, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendMpnsNativeNotificationAsync(string nativePayload, IEnumerable`1<string> tags);
    public abstract virtual Task`1<NotificationOutcome> SendMpnsNativeNotificationAsync(string nativePayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendMpnsNativeNotificationAsync(string nativePayload, string tagExpression);
    public abstract virtual Task`1<NotificationOutcome> SendMpnsNativeNotificationAsync(string nativePayload, string tagExpression, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendNotificationAsync(Notification notification);
    public abstract virtual Task`1<NotificationOutcome> SendNotificationAsync(Notification notification, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendNotificationAsync(Notification notification, IEnumerable`1<string> tags);
    public abstract virtual Task`1<NotificationOutcome> SendNotificationAsync(Notification notification, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendNotificationAsync(Notification notification, string tagExpression);
    public abstract virtual Task`1<NotificationOutcome> SendNotificationAsync(Notification notification, string tagExpression, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendTemplateNotificationAsync(IDictionary`2<string, string> properties);
    public abstract virtual Task`1<NotificationOutcome> SendTemplateNotificationAsync(IDictionary`2<string, string> properties, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendTemplateNotificationAsync(IDictionary`2<string, string> properties, IEnumerable`1<string> tags);
    public abstract virtual Task`1<NotificationOutcome> SendTemplateNotificationAsync(IDictionary`2<string, string> properties, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendTemplateNotificationAsync(IDictionary`2<string, string> properties, string tagExpression);
    public abstract virtual Task`1<NotificationOutcome> SendTemplateNotificationAsync(IDictionary`2<string, string> properties, string tagExpression, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendWindowsNativeNotificationAsync(string windowsNativePayload);
    public abstract virtual Task`1<NotificationOutcome> SendWindowsNativeNotificationAsync(string windowsNativePayload, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendWindowsNativeNotificationAsync(string windowsNativePayload, IEnumerable`1<string> tags);
    public abstract virtual Task`1<NotificationOutcome> SendWindowsNativeNotificationAsync(string windowsNativePayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationOutcome> SendWindowsNativeNotificationAsync(string windowsNativePayload, string tagExpression);
    public abstract virtual Task`1<NotificationOutcome> SendWindowsNativeNotificationAsync(string windowsNativePayload, string tagExpression, CancellationToken cancellationToken);
    public abstract virtual Task`1<NotificationHubJob> SubmitNotificationHubJobAsync(NotificationHubJob job);
    public abstract virtual Task`1<NotificationHubJob> SubmitNotificationHubJobAsync(NotificationHubJob job, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> UpdateRegistrationAsync(T registration);
    public abstract virtual Task`1<T> UpdateRegistrationAsync(T registration, CancellationToken cancellationToken);
}
[JsonObjectAttribute]
public class Microsoft.Azure.NotificationHubs.Installation : object {
    [CompilerGeneratedAttribute]
private string <InstallationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PushChannel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PushChannelExpired>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationPlatform <Platform>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ExpirationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <PushVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, InstallationTemplate> <Templates>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, WnsSecondaryTile> <SecondaryTiles>k__BackingField;
    [JsonPropertyAttribute]
public string InstallationId { get; public set; }
    [JsonPropertyAttribute]
public string UserId { get; public set; }
    [JsonPropertyAttribute]
public string PushChannel { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> PushChannelExpired { get; public set; }
    [JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
[JsonPropertyAttribute]
public NotificationPlatform Platform { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTime> ExpirationTime { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> Tags { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, string> PushVariables { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, InstallationTemplate> Templates { get; public set; }
    [JsonPropertyAttribute]
[ObsoleteAttribute]
public IDictionary`2<string, WnsSecondaryTile> SecondaryTiles { get; public set; }
    [CompilerGeneratedAttribute]
public string get_InstallationId();
    [CompilerGeneratedAttribute]
public void set_InstallationId(string value);
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
public string get_PushChannel();
    [CompilerGeneratedAttribute]
public void set_PushChannel(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_PushChannelExpired();
    [CompilerGeneratedAttribute]
public void set_PushChannelExpired(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public NotificationPlatform get_Platform();
    [CompilerGeneratedAttribute]
public void set_Platform(NotificationPlatform value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ExpirationTime();
    [CompilerGeneratedAttribute]
public void set_ExpirationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_PushVariables();
    [CompilerGeneratedAttribute]
public void set_PushVariables(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, InstallationTemplate> get_Templates();
    [CompilerGeneratedAttribute]
public void set_Templates(IDictionary`2<string, InstallationTemplate> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, WnsSecondaryTile> get_SecondaryTiles();
    [CompilerGeneratedAttribute]
public void set_SecondaryTiles(IDictionary`2<string, WnsSecondaryTile> value);
    internal string ToJson();
    internal static Installation FromJson(string json);
}
[JsonObjectAttribute]
public class Microsoft.Azure.NotificationHubs.InstallationTemplate : object {
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Expiry>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Tags>k__BackingField;
    [JsonPropertyAttribute]
public string Body { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Headers { get; public set; }
    [JsonPropertyAttribute]
public string Expiry { get; public set; }
    [JsonPropertyAttribute]
[ObsoleteAttribute]
public IList`1<string> Tags { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Expiry();
    [CompilerGeneratedAttribute]
public void set_Expiry(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IList`1<string> value);
    internal string ToJson();
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.Azure.NotificationHubs.KeyValueConfigurationManager : object {
    public static string OperationTimeoutConfigName;
    public static string EndpointConfigName;
    public static string SharedSecretIssuerConfigName;
    public static string SharedSecretValueConfigName;
    public static string SharedAccessKeyName;
    public static string SharedAccessValueName;
    public static string ManagementPortConfigName;
    internal static string ValueSeparator;
    internal static string KeyValueSeparator;
    internal static string KeyDelimiter;
    private static string KeyAttributeEnumRegexString;
    private static string KeyDelimiterRegexString;
    private static Regex KeyRegex;
    private static Regex ValueRegex;
    internal NameValueCollection connectionProperties;
    internal string ConnectionString;
    public string Item { get; }
    public KeyValueConfigurationManager(string connectionString);
    private static KeyValueConfigurationManager();
    private void Initialize(string connection);
    public string get_Item(string key);
    private static NameValueCollection CreateNameValueCollectionFromConnectionString(string connectionString);
    public void Validate();
}
[DataContractAttribute]
public enum Microsoft.Azure.NotificationHubs.Messaging.AccessRights : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AccessRights Manage;
    [EnumMemberAttribute]
public static AccessRights Send;
    [EnumMemberAttribute]
public static AccessRights Listen;
}
[DataContractAttribute]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.Messaging.SharedAccessAuthorizationRule")]
public abstract class Microsoft.Azure.NotificationHubs.Messaging.AuthorizationRule : object {
    public static string NameIdentifierClaimType;
    public static string ShortNameIdentifierClaimType;
    public static string UpnClaimType;
    public static string ShortUpnClaimType;
    public static string RoleClaimType;
    public static string RoleRoleClaimType;
    public static string SharedAccessKeyClaimType;
    [CompilerGeneratedAttribute]
private DateTime <CreatedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ModifiedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalIssuerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalClaimType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalClaimValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AccessRights> <InternalRights>k__BackingField;
    public string IssuerName { get; public set; }
    public string ClaimType { get; public set; }
    public string ClaimValue { get; public set; }
    public IEnumerable`1<AccessRights> Rights { get; public set; }
    public string KeyName { get; public set; }
    [DataMemberAttribute]
public DateTime CreatedTime { get; private set; }
    [DataMemberAttribute]
public DateTime ModifiedTime { get; private set; }
    [DataMemberAttribute]
public long Revision { get; public set; }
    [DataMemberAttribute]
internal string InternalIssuerName { get; internal set; }
    [DataMemberAttribute]
internal string InternalClaimType { get; internal set; }
    [DataMemberAttribute]
internal string InternalClaimValue { get; internal set; }
    [DataMemberAttribute]
internal IEnumerable`1<AccessRights> InternalRights { get; internal set; }
    public string get_IssuerName();
    public void set_IssuerName(string value);
    public string get_ClaimType();
    public void set_ClaimType(string value);
    public string get_ClaimValue();
    public void set_ClaimValue(string value);
    public IEnumerable`1<AccessRights> get_Rights();
    public void set_Rights(IEnumerable`1<AccessRights> value);
    public abstract virtual string get_KeyName();
    public abstract virtual void set_KeyName(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedTime();
    [CompilerGeneratedAttribute]
private void set_CreatedTime(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_ModifiedTime();
    [CompilerGeneratedAttribute]
private void set_ModifiedTime(DateTime value);
    [CompilerGeneratedAttribute]
public long get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(long value);
    protected virtual void OnValidate();
    protected virtual void ValidateRights(IEnumerable`1<AccessRights> value);
    internal void MarkModified();
    internal void Validate();
    public virtual int GetHashCode();
    public virtual AuthorizationRule Clone();
    public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
internal string get_InternalIssuerName();
    [CompilerGeneratedAttribute]
internal void set_InternalIssuerName(string value);
    [CompilerGeneratedAttribute]
internal string get_InternalClaimType();
    [CompilerGeneratedAttribute]
internal void set_InternalClaimType(string value);
    [CompilerGeneratedAttribute]
internal string get_InternalClaimValue();
    [CompilerGeneratedAttribute]
internal void set_InternalClaimValue(string value);
    [CompilerGeneratedAttribute]
internal IEnumerable`1<AccessRights> get_InternalRights();
    [CompilerGeneratedAttribute]
internal void set_InternalRights(IEnumerable`1<AccessRights> value);
    private static bool AreAccessRightsUnique(IEnumerable`1<AccessRights> rights);
}
internal class Microsoft.Azure.NotificationHubs.Messaging.AuthorizationRuleEqualityComparer : EqualityComparer`1<AuthorizationRule> {
    public virtual bool Equals(AuthorizationRule x, AuthorizationRule y);
    public virtual int GetHashCode(AuthorizationRule obj);
}
[CollectionDataContractAttribute]
public class Microsoft.Azure.NotificationHubs.Messaging.AuthorizationRules : object {
    public static DataContractSerializer Serializer;
    public ICollection`1<AuthorizationRule> innerCollection;
    private IDictionary`2<string, SharedAccessAuthorizationRule> nameToSharedAccessAuthorizationRuleMap;
    private bool duplicateAddForSharedAccessAuthorizationRule;
    public int Count { get; }
    public bool IsReadOnly { get; }
    public bool RequiresEncryption { get; }
    public AuthorizationRules(IEnumerable`1<AuthorizationRule> enumerable);
    private static AuthorizationRules();
    public sealed virtual IEnumerator`1<AuthorizationRule> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(AuthorizationRule item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(AuthorizationRule item);
    public sealed virtual void CopyTo(AuthorizationRule[] array, int arrayIndex);
    public sealed virtual bool Remove(AuthorizationRule item);
    public sealed virtual int get_Count();
    public List`1<AuthorizationRule> GetRules(Predicate`1<AuthorizationRule> match);
    public bool TryGetSharedAccessAuthorizationRule(string keyName, SharedAccessAuthorizationRule& rule);
    public List`1<AuthorizationRule> GetRules(string claimValue);
    public sealed virtual bool get_IsReadOnly();
    public bool HasEqualRuntimeBehavior(AuthorizationRules comparand);
    public bool get_RequiresEncryption();
    internal void Validate();
}
public class Microsoft.Azure.NotificationHubs.Messaging.BadRequestException : MessagingException {
    internal BadRequestException(MessagingExceptionDetail detail);
    protected BadRequestException(SerializationInfo info, StreamingContext context);
}
internal static class Microsoft.Azure.NotificationHubs.Messaging.Constants : object {
    public static int MaximumTagSize;
    public static int DefaultMaxDeliveryCount;
    public static TimeSpan DefaultRegistrationTtl;
    public static TimeSpan MinimumRegistrationTtl;
    public static int MaximumUserMetadataLength;
    public static string NotificationHub;
    public static string PathDelimiter;
    public static string SubQueuePrefix;
    public static string EntityDelimiter;
    public static string EmptyEntityDelimiter;
    public static string ColonDelimiter;
    public static string PartDelimiter;
    public static string ContinuationTokenHeaderName;
    public static string ContinuationTokenQueryName;
    public static int NotificationHubNameMaximumLength;
    public static string HttpErrorSubCodeFormatString;
    public static string HttpLocationHeaderName;
    public static string HttpUserAgentHeaderName;
    public static string HttpTrackingIdHeaderName;
    private static Constants();
}
[DataContractAttribute]
public abstract class Microsoft.Azure.NotificationHubs.Messaging.EntityDescription : object {
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionDataObject <ExtensionData>k__BackingField;
    public bool IsReadOnly { get; internal set; }
    public ExtensionDataObject ExtensionData { get; public set; }
    internal bool RequiresEncryption { get; }
    [CompilerGeneratedAttribute]
public bool get_IsReadOnly();
    [CompilerGeneratedAttribute]
internal void set_IsReadOnly(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ExtensionDataObject get_ExtensionData();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExtensionData(ExtensionDataObject value);
    internal virtual bool get_RequiresEncryption();
    protected void ThrowIfReadOnly();
}
internal class Microsoft.Azure.NotificationHubs.Messaging.EntityDescriptionSerializer : object {
    private static int MaxItemsInObjectGraph;
    private Dictionary`2<string, DataContractSerializer> entirySerializers;
    private DataContractSerializer CreateSerializer();
    public EntityDescription Deserialize(XmlReader reader, string typeName);
    public string Serialize(EntityDescription description);
    public void Serialize(EntityDescription description, XmlWriter writer);
    private DataContractSerializer GetSerializer(string typeName);
}
internal static class Microsoft.Azure.NotificationHubs.Messaging.ExpressionEvaluator : object {
    public static string InternalBodyProperty;
    public static string InternalJsonNavigationProperty;
    private static string BodyExpression;
    public static int MaxLengthOfPropertyName;
    public static Regex PropertyNameRegEx;
    private static ExpressionEvaluator();
    public static ExpressionType Validate(string expression);
    private static List`1<Token> ValidateAndTokenize(string expression, ExpressionType& expressionType);
    private static string Evaluate(List`1<string> values);
    private static ExpressionType PeekExpressionType(string expression);
    private static int ExtractLiteral(string fullExpression, string tokenBegin, Token token);
    private static int ExtractToken(string fullExpression, string tokenBegin, Token token);
}
internal static class Microsoft.Azure.NotificationHubs.Messaging.ManagementStrings : object {
    public static string Namespace;
    public static string Tags;
    public static string PushVariables;
    public static string NotificationHubDescription;
    public static string NotificationHubCollection;
    public static string AuthorizationRules;
    public static string SharedAccessAuthorizationRule;
    public static string KeyName;
    public static string PrimaryKey;
    public static string SecondaryKey;
    public static string IssuerName;
    public static string ClaimType;
    public static string ClaimValue;
    public static string Rights;
    public static string Name;
    public static string RegistrationCollection;
    public static string GcmRegistrationDescription;
    public static string FcmRegistrationDescription;
    public static string GcmTemplateRegistrationDescription;
    public static string FcmTemplateRegistrationDescription;
    public static string FcmV1RegistrationDescription;
    public static string FcmV1TemplateRegistrationDescription;
    public static string BaiduRegistrationDescription;
    public static string BaiduTemplateRegistrationDescription;
    public static string WindowsRegistrationDescription;
    public static string WindowsTemplateRegistrationDescription;
    public static string AppleRegistrationDescription;
    public static string AppleTemplateRegistrationDescription;
    public static string MpnsRegistrationDescription;
    public static string MpnsTemplateRegistrationDescription;
    public static string AdmRegistrationDescription;
    public static string AdmTemplateRegistrationDescription;
    public static string PnsCredential;
    public static string PnsCredentials;
    public static string GcmCredential;
    public static string FcmCredential;
    public static string FcmV1Credential;
    public static string BaiduCredential;
    public static string WnsCredential;
    public static string ApnsCredential;
    public static string AdmCredential;
    public static string GcmRegistrationId;
    public static string FcmRegistrationId;
    public static string FcmV1RegistrationId;
    public static string BaiduUserId;
    public static string BaiduChannelId;
    public static string MpnsCredential;
    public static string MpnsHeaders;
    public static string ApnsHeaders;
    public static string MpnsHeader;
    public static string ApnsHeader;
    public static string ChannelUri;
    public static string SecondaryTileName;
    public static string AdmRegistrationId;
    public static string DeviceToken;
    public static string Expiry;
    public static string Priority;
    public static string TemplateName;
    public static string MessageType;
    public static string NotificationHubCount;
    public static string Status;
    public static string CountDetails;
    public static string UpdatedAt;
    public static string NamespaceTypeName;
    public static string CreatedAt;
    public static string AccessRights;
    public static string NamespaceDescription;
    public static string NamespaceEntityStats;
    public static string RegistrationId;
    public static string InstallationId;
    public static string PnsFeedback;
    public static string FeedbackTime;
    public static string Platform;
    public static string NotificationSystemError;
    public static string RegistrationTtl;
    public static string ExpirationTime;
    public static string PnsCredentialName;
    public static string WnsHeaders;
    public static string BodyTemplate;
    public static string ETag;
    public static string UpdatePnsHandlePayload;
    public static string NewPnsHandle;
    public static string OriginalPnsHandle;
    public static string RegistrationResult;
    public static string ApnsOutcomeCounts;
    public static string MpnsOutcomeCounts;
    public static string WnsOutcomeCounts;
    public static string GcmOutcomeCounts;
    public static string FcmOutcomeCounts;
    public static string FcmV1OutcomeCounts;
    public static string AdmOutcomeCounts;
    public static string BaiduOutcomeCounts;
    public static string NotificationBody;
    public static string NotificationOutcomeCollection;
    public static string NotificationDetails;
    public static string NotificationId;
    public static string Location;
    public static string State;
    public static string EnqueueTime;
    public static string StartTime;
    public static string EndTime;
    public static string TargetPlatforms;
    public static string Outcomes;
    public static string NotificationHubJob;
    public static string NotificationHubJobId;
    public static string Progress;
    public static string JobType;
    public static string OutputContainerUri;
    public static string ImportFileUri;
    public static string InputProperties;
    public static string OutputProperties;
    public static string ApplicationPlatform;
    public static string PnsHandle;
    public static string Outcome;
    public static string NotificationOutcome;
    public static string Success;
    public static string Failure;
    public static string Results;
    public static string RegistrationIds;
    public static string IfMatch;
    public static string ScheduledNotification;
    public static string ScheduledNotificationPayload;
    public static string ScheduledNotificationId;
    public static string ScheduledNotificationTime;
    public static string ScheduledNotificationTags;
    public static string TrackingId;
    public static string PnsErrorDetailsUri;
    public static string ApiVersionName;
    public static string ApiVersion;
    public static string OutputFilePath;
    public static string FailedFilePath;
    public static string DailyMaxActiveRegistrations;
    public static string DailyMaxActiveDevices;
    public static string DailyOperations;
    public static string UserMetadata;
}
public class Microsoft.Azure.NotificationHubs.Messaging.MessagingCommunicationException : MessagingException {
    public MessagingCommunicationException(MessagingExceptionDetail message, bool isTransientError, Exception innerException);
    private MessagingCommunicationException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.NotificationHubs.Messaging.MessagingEntityAlreadyExistsException : MessagingException {
    internal MessagingEntityAlreadyExistsException(MessagingExceptionDetail detail);
    internal MessagingEntityAlreadyExistsException(MessagingExceptionDetail detail, Exception innerException);
    private MessagingEntityAlreadyExistsException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.NotificationHubs.Messaging.MessagingEntityNotFoundException : MessagingException {
    internal MessagingEntityNotFoundException(MessagingExceptionDetail detail);
    internal MessagingEntityNotFoundException(MessagingExceptionDetail detail, Exception innerException);
    private MessagingEntityNotFoundException(SerializationInfo info, StreamingContext context);
    public virtual string ToString();
}
public class Microsoft.Azure.NotificationHubs.Messaging.MessagingException : Exception {
    [CompilerGeneratedAttribute]
private MessagingExceptionDetail <Detail>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTransient>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <RetryAfter>k__BackingField;
    public MessagingExceptionDetail Detail { get; private set; }
    public DateTime Timestamp { get; private set; }
    public bool IsTransient { get; private set; }
    public Nullable`1<TimeSpan> RetryAfter { get; protected set; }
    public IDictionary Data { get; }
    internal MessagingException(MessagingExceptionDetail detail, bool isTransientError);
    internal MessagingException(MessagingExceptionDetail detail, bool isTransientError, Exception innerException);
    protected MessagingException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public MessagingExceptionDetail get_Detail();
    [CompilerGeneratedAttribute]
private void set_Detail(MessagingExceptionDetail value);
    [CompilerGeneratedAttribute]
public DateTime get_Timestamp();
    [CompilerGeneratedAttribute]
private void set_Timestamp(DateTime value);
    [CompilerGeneratedAttribute]
public bool get_IsTransient();
    [CompilerGeneratedAttribute]
private void set_IsTransient(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_RetryAfter();
    [CompilerGeneratedAttribute]
protected void set_RetryAfter(Nullable`1<TimeSpan> value);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public sealed virtual IDictionary get_Data();
    private void Initialize(MessagingExceptionDetail detail, DateTime timestamp);
}
public class Microsoft.Azure.NotificationHubs.Messaging.MessagingExceptionDetail : object {
    [CompilerGeneratedAttribute]
private int <ErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HttpStatusCode> <HttpStatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TrackingId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorLevelType <ErrorLevel>k__BackingField;
    public int ErrorCode { get; private set; }
    public Nullable`1<HttpStatusCode> HttpStatusCode { get; private set; }
    public string TrackingId { get; private set; }
    public string Message { get; private set; }
    public ErrorLevelType ErrorLevel { get; private set; }
    internal MessagingExceptionDetail(ExceptionErrorCodes errorCode, string message, ErrorLevelType errorLevel, Nullable`1<HttpStatusCode> httpStatusCode, string trackingId);
    [CompilerGeneratedAttribute]
public int get_ErrorCode();
    [CompilerGeneratedAttribute]
private void set_ErrorCode(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<HttpStatusCode> get_HttpStatusCode();
    [CompilerGeneratedAttribute]
private void set_HttpStatusCode(Nullable`1<HttpStatusCode> value);
    [CompilerGeneratedAttribute]
public string get_TrackingId();
    [CompilerGeneratedAttribute]
private void set_TrackingId(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public ErrorLevelType get_ErrorLevel();
    [CompilerGeneratedAttribute]
private void set_ErrorLevel(ErrorLevelType value);
}
internal static class Microsoft.Azure.NotificationHubs.Messaging.MessagingUtilities : object {
    public static IList`1<Uri> GetUriList(IList`1<string> addresses);
    public static void ThrowIfNullAddressOrPathExists(Uri address);
    public static void ThrowIfNullAddressesOrPathExists(IEnumerable`1<Uri> addresses);
}
public class Microsoft.Azure.NotificationHubs.Messaging.QuotaExceededException : MessagingException {
    internal TimeSpan DefaultRetryTimeout;
    internal QuotaExceededException(MessagingExceptionDetail detail, Nullable`1<TimeSpan> retryAfter);
    protected QuotaExceededException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.Azure.NotificationHubs.Messaging.ServerBusyException : MessagingException {
    internal ServerBusyException(MessagingExceptionDetail detail);
    private ServerBusyException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.Messaging.SharedAccessAuthorizationRule : AuthorizationRule {
    private static int SupportedSASKeyLength;
    private static string FixedClaimType;
    private static string FixedClaimValue;
    [CompilerGeneratedAttribute]
private string <InternalKeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalPrimaryKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalSecondaryKey>k__BackingField;
    public string KeyName { get; public set; }
    public string PrimaryKey { get; public set; }
    public string SecondaryKey { get; public set; }
    [DataMemberAttribute]
internal string InternalKeyName { get; internal set; }
    [DataMemberAttribute]
internal string InternalPrimaryKey { get; internal set; }
    [DataMemberAttribute]
internal string InternalSecondaryKey { get; internal set; }
    public SharedAccessAuthorizationRule(string keyName, IEnumerable`1<AccessRights> rights);
    public SharedAccessAuthorizationRule(string keyName, string primaryKey, IEnumerable`1<AccessRights> rights);
    public SharedAccessAuthorizationRule(string keyName, string primaryKey, string secondaryKey, IEnumerable`1<AccessRights> rights);
    protected virtual void OnValidate();
    private static bool CheckBase64(string base64EncodedString);
    public sealed virtual string get_KeyName();
    public sealed virtual void set_KeyName(string value);
    public string get_PrimaryKey();
    public void set_PrimaryKey(string value);
    public string get_SecondaryKey();
    public void set_SecondaryKey(string value);
    protected virtual void ValidateRights(IEnumerable`1<AccessRights> value);
    private static bool IsValidCombinationOfRights(IEnumerable`1<AccessRights> rights);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
internal string get_InternalKeyName();
    [CompilerGeneratedAttribute]
internal void set_InternalKeyName(string value);
    [CompilerGeneratedAttribute]
internal string get_InternalPrimaryKey();
    [CompilerGeneratedAttribute]
internal void set_InternalPrimaryKey(string value);
    [CompilerGeneratedAttribute]
internal string get_InternalSecondaryKey();
    [CompilerGeneratedAttribute]
internal void set_InternalSecondaryKey(string value);
    public static string GenerateRandomKey();
}
public class Microsoft.Azure.NotificationHubs.Messaging.UnauthorizedException : MessagingException {
    internal UnauthorizedException(MessagingExceptionDetail detail);
    protected UnauthorizedException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.MpnsCredential : PnsCredential {
    internal static string AppPlatformName;
    [CompilerGeneratedAttribute]
private X509Certificate2 <NativeCertificate>k__BackingField;
    internal string AppPlatform { get; }
    public string MpnsCertificate { get; public set; }
    public string CertificateKey { get; public set; }
    internal X509Certificate2 NativeCertificate { get; internal set; }
    public MpnsCredential(X509Certificate mpnsCertificate, string certificateKey);
    public MpnsCredential(Byte[] certificateBuffer, string certificateKey);
    public MpnsCredential(string certificatePath, string certificateKey);
    internal virtual string get_AppPlatform();
    public string get_MpnsCertificate();
    public void set_MpnsCertificate(string value);
    public string get_CertificateKey();
    public void set_CertificateKey(string value);
    [CompilerGeneratedAttribute]
internal X509Certificate2 get_NativeCertificate();
    [CompilerGeneratedAttribute]
internal void set_NativeCertificate(X509Certificate2 value);
    private string GetMpnsClientCertificate(string certPath);
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
    private static Byte[] ExportCertificateBytes(X509Certificate mpnsCertificate, string certificateKey);
    protected virtual void OnValidate(bool allowLocalMockPns);
}
[CollectionDataContractAttribute]
public class Microsoft.Azure.NotificationHubs.MpnsHeaderCollection : SortedDictionary`2<string, string> {
}
public class Microsoft.Azure.NotificationHubs.MpnsNotification : Notification {
    private static string contentType;
    protected string PlatformType { get; }
    public MpnsNotification(XmlDocument payLoad);
    [ObsoleteAttribute("This method is obsolete.")]
public MpnsNotification(XmlDocument payLoad, string tag);
    public MpnsNotification(string payLoad);
    [ObsoleteAttribute("This method is obsolete.")]
public MpnsNotification(string payLoad, string tag);
    public MpnsNotification(XmlDocument payLoad, IDictionary`2<string, string> mpnsHeaders);
    public MpnsNotification(string payLoad, IDictionary`2<string, string> mpnsHeaders);
    [ObsoleteAttribute("This method is obsolete.")]
public MpnsNotification(XmlDocument payLoad, IDictionary`2<string, string> mpnsHeaders, string tag);
    [ObsoleteAttribute("This method is obsolete.")]
public MpnsNotification(string payLoad, IDictionary`2<string, string> mpnsHeaders, string tag);
    private static MpnsNotification();
    protected virtual string get_PlatformType();
    protected virtual void OnValidateAndPopulateHeaders();
    private void AddNotificationTypeHeader(MpnsTemplateBodyType bodyType);
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.MpnsRegistrationDescription : RegistrationDescription {
    internal static string MpnsHeaderPrefix;
    internal static string NotificationClass;
    internal static string Type;
    internal static string Tile;
    internal static string Toast;
    internal static string TileClass;
    internal static string ToastClass;
    internal static string RawClass;
    internal static string NamespaceName;
    internal static string NotificationElementName;
    [CompilerGeneratedAttribute]
private Uri <ChannelUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecondaryTileName>k__BackingField;
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    [DataMemberAttribute]
public Uri ChannelUri { get; public set; }
    [DataMemberAttribute]
public string SecondaryTileName { get; public set; }
    public MpnsRegistrationDescription(MpnsRegistrationDescription sourceRegistration);
    public MpnsRegistrationDescription(string channelUri);
    public MpnsRegistrationDescription(Uri channelUri);
    public MpnsRegistrationDescription(string channelUri, IEnumerable`1<string> tags);
    public MpnsRegistrationDescription(Uri channelUri, IEnumerable`1<string> tags);
    internal MpnsRegistrationDescription(string notificationHubPath, string channelUri, IEnumerable`1<string> tags);
    internal MpnsRegistrationDescription(string notificationHubPath, Uri channelUri, IEnumerable`1<string> tags);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    [CompilerGeneratedAttribute]
public Uri get_ChannelUri();
    [CompilerGeneratedAttribute]
public void set_ChannelUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_SecondaryTileName();
    [CompilerGeneratedAttribute]
public void set_SecondaryTileName(string value);
    internal virtual void OnValidate();
    internal virtual string GetPnsHandle();
    internal virtual void SetPnsHandle(string pnsHandle);
    internal virtual RegistrationDescription Clone();
}
internal enum Microsoft.Azure.NotificationHubs.MpnsTemplateBodyType : Enum {
    public int value__;
    public static MpnsTemplateBodyType Toast;
    public static MpnsTemplateBodyType Tile;
    public static MpnsTemplateBodyType Raw;
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.MpnsTemplateRegistrationDescription : MpnsRegistrationDescription {
    [CompilerGeneratedAttribute]
private CDataMember <BodyTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private MpnsHeaderCollection <MpnsHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <ExpressionStartIndices>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <ExpressionLengths>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Expressions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TemplateName>k__BackingField;
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    [DataMemberAttribute]
public CDataMember BodyTemplate { get; public set; }
    [DataMemberAttribute]
public MpnsHeaderCollection MpnsHeaders { get; public set; }
    internal List`1<int> ExpressionStartIndices { get; internal set; }
    internal List`1<int> ExpressionLengths { get; internal set; }
    internal List`1<string> Expressions { get; internal set; }
    [DataMemberAttribute]
public string TemplateName { get; public set; }
    public MpnsTemplateRegistrationDescription(MpnsTemplateRegistrationDescription sourceRegistration);
    public MpnsTemplateRegistrationDescription(Uri channelUri);
    public MpnsTemplateRegistrationDescription(Uri channelUri, string templatePayload);
    public MpnsTemplateRegistrationDescription(Uri channelUri, XmlDocument xmlTemplate);
    public MpnsTemplateRegistrationDescription(Uri channelUri, string templatePayload, IDictionary`2<string, string> mpnsHeaders);
    public MpnsTemplateRegistrationDescription(Uri channelUri, string templatePayload, IEnumerable`1<string> tags);
    public MpnsTemplateRegistrationDescription(Uri channelUri, string templatePayload, IDictionary`2<string, string> mpnsHeaders, IEnumerable`1<string> tags);
    public MpnsTemplateRegistrationDescription(string channelUri);
    public MpnsTemplateRegistrationDescription(string channelUri, string templatePayload);
    public MpnsTemplateRegistrationDescription(string channelUri, XmlDocument xmlTemplate);
    public MpnsTemplateRegistrationDescription(string channelUri, string templatePayload, IDictionary`2<string, string> mpnsHeaders);
    public MpnsTemplateRegistrationDescription(string channelUri, string templatePayload, IEnumerable`1<string> tags);
    public MpnsTemplateRegistrationDescription(string channelUri, string templatePayload, IDictionary`2<string, string> mpnsHeaders, IEnumerable`1<string> tags);
    internal MpnsTemplateRegistrationDescription(string notificationHubPath, string channelUri, string templatePayload, IDictionary`2<string, string> mpnsHeaders, IEnumerable`1<string> tags);
    internal MpnsTemplateRegistrationDescription(string notificationHubPath, Uri channelUri, string templatePayload, IDictionary`2<string, string> mpnsHeaders, IEnumerable`1<string> tags);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    [CompilerGeneratedAttribute]
public CDataMember get_BodyTemplate();
    [CompilerGeneratedAttribute]
public void set_BodyTemplate(CDataMember value);
    [CompilerGeneratedAttribute]
public MpnsHeaderCollection get_MpnsHeaders();
    [CompilerGeneratedAttribute]
public void set_MpnsHeaders(MpnsHeaderCollection value);
    [CompilerGeneratedAttribute]
internal List`1<int> get_ExpressionStartIndices();
    [CompilerGeneratedAttribute]
internal void set_ExpressionStartIndices(List`1<int> value);
    [CompilerGeneratedAttribute]
internal List`1<int> get_ExpressionLengths();
    [CompilerGeneratedAttribute]
internal void set_ExpressionLengths(List`1<int> value);
    [CompilerGeneratedAttribute]
internal List`1<string> get_Expressions();
    [CompilerGeneratedAttribute]
internal void set_Expressions(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_TemplateName();
    [CompilerGeneratedAttribute]
public void set_TemplateName(string value);
    internal virtual void OnValidate();
    internal virtual RegistrationDescription Clone();
    internal bool IsXmlPayLoad();
    internal bool IsJsonObjectPayLoad();
    private void ValidateTemplateName();
    private void ValidateMpnsHeaders();
    private void ValidateXmlPayLoad();
    private void ValidateJsonPayLoad();
    private void AddExpression(string expression, string escapedExpression, IDictionary`2<string, int> expressionToIndexMap);
}
public class Microsoft.Azure.NotificationHubs.NamespaceManager : object {
    private static string Header;
    private static string Footer;
    private static string TrackingIdHeaderKey;
    private HttpClient _httpClient;
    private Uri _baseUri;
    private TokenProvider _tokenProvider;
    private NotificationHubRetryPolicy _retryPolicy;
    [CompilerGeneratedAttribute]
private TimeSpan <OperationTimeout>k__BackingField;
    public TimeSpan OperationTimeout { get; private set; }
    public NamespaceManager(string connectionString);
    public NamespaceManager(string connectionString, NotificationHubSettings settings);
    [CompilerGeneratedAttribute]
public TimeSpan get_OperationTimeout();
    [CompilerGeneratedAttribute]
private void set_OperationTimeout(TimeSpan value);
    public static NamespaceManager CreateFromConnectionString(string connectionString);
    public sealed virtual NotificationHubDescription CreateNotificationHub(string hubName);
    public sealed virtual NotificationHubDescription CreateNotificationHub(NotificationHubDescription description);
    public sealed virtual Task`1<NotificationHubDescription> CreateNotificationHubAsync(string hubName);
    public sealed virtual Task`1<NotificationHubDescription> CreateNotificationHubAsync(string hubName, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationHubDescription> CreateNotificationHubAsync(NotificationHubDescription description);
    public sealed virtual Task`1<NotificationHubDescription> CreateNotificationHubAsync(NotificationHubDescription description, CancellationToken cancellationToken);
    public sealed virtual NotificationHubDescription GetNotificationHub(string path);
    public sealed virtual Task`1<NotificationHubDescription> GetNotificationHubAsync(string path);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NamespaceManager/<GetNotificationHubAsync>d__22")]
public sealed virtual Task`1<NotificationHubDescription> GetNotificationHubAsync(string path, CancellationToken cancellationToken);
    public sealed virtual IEnumerable`1<NotificationHubDescription> GetNotificationHubs();
    public sealed virtual Task`1<IEnumerable`1<NotificationHubDescription>> GetNotificationHubsAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NamespaceManager/<GetNotificationHubsAsync>d__25")]
public sealed virtual Task`1<IEnumerable`1<NotificationHubDescription>> GetNotificationHubsAsync(CancellationToken cancellationToken);
    public sealed virtual void DeleteNotificationHub(string path);
    public sealed virtual Task DeleteNotificationHubAsync(string path);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NamespaceManager/<DeleteNotificationHubAsync>d__28")]
public sealed virtual Task DeleteNotificationHubAsync(string path, CancellationToken cancellationToken);
    public sealed virtual NotificationHubDescription UpdateNotificationHub(NotificationHubDescription description);
    public sealed virtual Task`1<NotificationHubDescription> UpdateNotificationHubAsync(NotificationHubDescription description);
    public sealed virtual Task`1<NotificationHubDescription> UpdateNotificationHubAsync(NotificationHubDescription description, CancellationToken cancellationToken);
    public sealed virtual bool NotificationHubExists(string path);
    public sealed virtual Task`1<bool> NotificationHubExistsAsync(string path);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NamespaceManager/<NotificationHubExistsAsync>d__34")]
public sealed virtual Task`1<bool> NotificationHubExistsAsync(string path, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NamespaceManager/<CreateOrUpdateNotificationHubAsync>d__35")]
private Task`1<NotificationHubDescription> CreateOrUpdateNotificationHubAsync(NotificationHubDescription description, bool update, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationHubJob> SubmitNotificationHubJobAsync(NotificationHubJob job, string notificationHubPath);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NamespaceManager/<SubmitNotificationHubJobAsync>d__37")]
public sealed virtual Task`1<NotificationHubJob> SubmitNotificationHubJobAsync(NotificationHubJob job, string notificationHubPath, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationHubJob> GetNotificationHubJobAsync(string jobId, string notificationHubPath);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NamespaceManager/<GetNotificationHubJobAsync>d__39")]
public sealed virtual Task`1<NotificationHubJob> GetNotificationHubJobAsync(string jobId, string notificationHubPath, CancellationToken cancellationToken);
    public sealed virtual Task`1<IEnumerable`1<NotificationHubJob>> GetNotificationHubJobsAsync(string notificationHubPath);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NamespaceManager/<GetNotificationHubJobsAsync>d__41")]
public sealed virtual Task`1<IEnumerable`1<NotificationHubJob>> GetNotificationHubJobsAsync(string notificationHubPath, CancellationToken cancellationToken);
    private static Uri GetBaseUri(KeyValueConfigurationManager manager);
    private void SetUserAgent();
    private static string AddHeaderAndFooterToXml(string content);
    private static string SerializeObject(T model);
    private static string CreateRequestBody(T model);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NamespaceManager/<GetXmlContent>d__47")]
private static Task`1<XmlReader> GetXmlContent(HttpResponseMessage response, string trackingId);
    private static T GetModelFromResponse(XmlReader xmlReader, string trackingId);
    private string CreateToken(Uri uri);
    private HttpRequestMessage CreateHttpRequest(HttpMethod method, Uri uri);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NamespaceManager/<SendAsync>d__51")]
private Task`1<HttpResponseMessage> SendAsync(Func`1<HttpRequestMessage> generateHttpRequestMessage, CancellationToken cancellationToken);
}
public abstract class Microsoft.Azure.NotificationHubs.Notification : object {
    private Dictionary`2<string, string> headers;
    internal static string FormatHeaderName;
    internal string tag;
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    protected string PlatformType { get; }
    public Dictionary`2<string, string> Headers { get; public set; }
    public string Body { get; public set; }
    public string ContentType { get; public set; }
    [ObsoleteAttribute("This property is obsolete.")]
public string Tag { get; public set; }
    protected Notification(IDictionary`2<string, string> additionalHeaders, string tag, string contentType);
    protected void AddOrUpdateHeader(string key, string value);
    internal void ValidateAndPopulateHeaders();
    protected abstract virtual void OnValidateAndPopulateHeaders();
    protected abstract virtual string get_PlatformType();
    public Dictionary`2<string, string> get_Headers();
    public void set_Headers(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(string value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    public string get_Tag();
    public void set_Tag(string value);
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.NotificationDetails : object {
    [CompilerGeneratedAttribute]
private string <NotificationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationOutcomeState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EnqueueTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NotificationBody>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetPlatforms>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationOutcomeCollection <ApnsOutcomeCounts>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationOutcomeCollection <MpnsOutcomeCounts>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationOutcomeCollection <WnsOutcomeCounts>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationOutcomeCollection <GcmOutcomeCounts>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationOutcomeCollection <FcmV1OutcomeCounts>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationOutcomeCollection <AdmOutcomeCounts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PnsErrorDetailsUri>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionDataObject <ExtensionData>k__BackingField;
    [DataMemberAttribute]
public string NotificationId { get; public set; }
    [DataMemberAttribute]
public Uri Location { get; public set; }
    [DataMemberAttribute]
private string NotificationState { get; private set; }
    public NotificationOutcomeState State { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> EnqueueTime { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> EndTime { get; public set; }
    [DataMemberAttribute]
public string NotificationBody { get; public set; }
    [DataMemberAttribute]
public string Tags { get; public set; }
    [DataMemberAttribute]
public string TargetPlatforms { get; public set; }
    [DataMemberAttribute]
public NotificationOutcomeCollection ApnsOutcomeCounts { get; public set; }
    [DataMemberAttribute]
public NotificationOutcomeCollection MpnsOutcomeCounts { get; public set; }
    [DataMemberAttribute]
public NotificationOutcomeCollection WnsOutcomeCounts { get; public set; }
    [DataMemberAttribute]
private NotificationOutcomeCollection GcmOutcomeCounts { get; private set; }
    [DataMemberAttribute]
public NotificationOutcomeCollection FcmOutcomeCounts { get; public set; }
    [DataMemberAttribute]
public NotificationOutcomeCollection FcmV1OutcomeCounts { get; public set; }
    [DataMemberAttribute]
public NotificationOutcomeCollection AdmOutcomeCounts { get; public set; }
    [DataMemberAttribute]
public string PnsErrorDetailsUri { get; public set; }
    public ExtensionDataObject ExtensionData { get; public set; }
    [CompilerGeneratedAttribute]
public string get_NotificationId();
    [CompilerGeneratedAttribute]
public void set_NotificationId(string value);
    [CompilerGeneratedAttribute]
public Uri get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(Uri value);
    private string get_NotificationState();
    private void set_NotificationState(string value);
    [CompilerGeneratedAttribute]
public NotificationOutcomeState get_State();
    [CompilerGeneratedAttribute]
public void set_State(NotificationOutcomeState value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EnqueueTime();
    [CompilerGeneratedAttribute]
public void set_EnqueueTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EndTime();
    [CompilerGeneratedAttribute]
public void set_EndTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_NotificationBody();
    [CompilerGeneratedAttribute]
public void set_NotificationBody(string value);
    [CompilerGeneratedAttribute]
public string get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(string value);
    [CompilerGeneratedAttribute]
public string get_TargetPlatforms();
    [CompilerGeneratedAttribute]
public void set_TargetPlatforms(string value);
    [CompilerGeneratedAttribute]
public NotificationOutcomeCollection get_ApnsOutcomeCounts();
    [CompilerGeneratedAttribute]
public void set_ApnsOutcomeCounts(NotificationOutcomeCollection value);
    [CompilerGeneratedAttribute]
public NotificationOutcomeCollection get_MpnsOutcomeCounts();
    [CompilerGeneratedAttribute]
public void set_MpnsOutcomeCounts(NotificationOutcomeCollection value);
    [CompilerGeneratedAttribute]
public NotificationOutcomeCollection get_WnsOutcomeCounts();
    [CompilerGeneratedAttribute]
public void set_WnsOutcomeCounts(NotificationOutcomeCollection value);
    [CompilerGeneratedAttribute]
private NotificationOutcomeCollection get_GcmOutcomeCounts();
    [CompilerGeneratedAttribute]
private void set_GcmOutcomeCounts(NotificationOutcomeCollection value);
    public NotificationOutcomeCollection get_FcmOutcomeCounts();
    public void set_FcmOutcomeCounts(NotificationOutcomeCollection value);
    [CompilerGeneratedAttribute]
public NotificationOutcomeCollection get_FcmV1OutcomeCounts();
    [CompilerGeneratedAttribute]
public void set_FcmV1OutcomeCounts(NotificationOutcomeCollection value);
    [CompilerGeneratedAttribute]
public NotificationOutcomeCollection get_AdmOutcomeCounts();
    [CompilerGeneratedAttribute]
public void set_AdmOutcomeCounts(NotificationOutcomeCollection value);
    [CompilerGeneratedAttribute]
public string get_PnsErrorDetailsUri();
    [CompilerGeneratedAttribute]
public void set_PnsErrorDetailsUri(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ExtensionDataObject get_ExtensionData();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExtensionData(ExtensionDataObject value);
}
public class Microsoft.Azure.NotificationHubs.NotificationHubClient : object {
    private static int EntitiesPerRequest;
    private HttpClient _httpClient;
    private Uri _baseUri;
    private DataContractSerializer _debugResponseSerializer;
    private DataContractSerializer _notificationDetailsSerializer;
    private EntityDescriptionSerializer _entitySerializer;
    private string _notificationHubPath;
    private TokenProvider _tokenProvider;
    private NotificationHubRetryPolicy _retryPolicy;
    private NamespaceManager _namespaceManager;
    [CompilerGeneratedAttribute]
private bool <EnableTestSend>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <OperationTimeout>k__BackingField;
    public bool EnableTestSend { get; private set; }
    public TimeSpan OperationTimeout { get; private set; }
    public NotificationHubClient(string connectionString, string notificationHubPath);
    public NotificationHubClient(string connectionString, string notificationHubPath, NotificationHubSettings settings);
    public static NotificationHubClient CreateClientFromConnectionString(string connectionString, string notificationHubPath);
    public static NotificationHubClient CreateClientFromConnectionString(string connectionString, string notificationHubPath, bool enableTestSend);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_EnableTestSend();
    [CompilerGeneratedAttribute]
private void set_EnableTestSend(bool value);
    [CompilerGeneratedAttribute]
public TimeSpan get_OperationTimeout();
    [CompilerGeneratedAttribute]
private void set_OperationTimeout(TimeSpan value);
    public sealed virtual Task`1<NotificationOutcome> SendWindowsNativeNotificationAsync(string windowsNativePayload);
    public sealed virtual Task`1<NotificationOutcome> SendWindowsNativeNotificationAsync(string windowsNativePayload, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendWindowsNativeNotificationAsync(string windowsNativePayload, string tagExpression);
    public sealed virtual Task`1<NotificationOutcome> SendWindowsNativeNotificationAsync(string windowsNativePayload, string tagExpression, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendWindowsNativeNotificationAsync(string windowsNativePayload, IEnumerable`1<string> tags);
    public sealed virtual Task`1<NotificationOutcome> SendWindowsNativeNotificationAsync(string windowsNativePayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationHubJob> GetNotificationHubJobAsync(string jobId);
    public sealed virtual Task`1<NotificationHubJob> GetNotificationHubJobAsync(string jobId, CancellationToken cancellationToken);
    public sealed virtual Task`1<IEnumerable`1<NotificationHubJob>> GetNotificationHubJobsAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<GetNotificationHubJobsAsync>d__31")]
public sealed virtual Task`1<IEnumerable`1<NotificationHubJob>> GetNotificationHubJobsAsync(CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationHubJob> SubmitNotificationHubJobAsync(NotificationHubJob job);
    public sealed virtual Task`1<NotificationHubJob> SubmitNotificationHubJobAsync(NotificationHubJob job, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendAppleNativeNotificationAsync(string jsonPayload);
    public sealed virtual Task`1<NotificationOutcome> SendAppleNativeNotificationAsync(string jsonPayload, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendAppleNativeNotificationAsync(string jsonPayload, string tagExpression);
    public sealed virtual Task`1<NotificationOutcome> SendAppleNativeNotificationAsync(string jsonPayload, string tagExpression, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendAppleNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags);
    public sealed virtual Task`1<NotificationOutcome> SendAppleNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendTemplateNotificationAsync(IDictionary`2<string, string> properties);
    public sealed virtual Task`1<NotificationOutcome> SendTemplateNotificationAsync(IDictionary`2<string, string> properties, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendTemplateNotificationAsync(IDictionary`2<string, string> properties, string tagExpression);
    public sealed virtual Task`1<NotificationOutcome> SendTemplateNotificationAsync(IDictionary`2<string, string> properties, string tagExpression, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendTemplateNotificationAsync(IDictionary`2<string, string> properties, IEnumerable`1<string> tags);
    public sealed virtual Task`1<NotificationOutcome> SendTemplateNotificationAsync(IDictionary`2<string, string> properties, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    [ObsoleteAttribute("SendGcmNativeNotificationAsync is deprecated, please use SendFcmNativeNotificationAsync instead.")]
internal Task`1<NotificationOutcome> SendGcmNativeNotificationAsync(string jsonPayload);
    [ObsoleteAttribute("SendGcmNativeNotificationAsync is deprecated, please use SendFcmNativeNotificationAsync instead.")]
internal Task`1<NotificationOutcome> SendGcmNativeNotificationAsync(string jsonPayload, string tagExpression);
    [ObsoleteAttribute("SendGcmNativeNotificationAsync is deprecated, please use SendFcmNativeNotificationAsync instead.")]
internal Task`1<NotificationOutcome> SendGcmNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags);
    public sealed virtual Task`1<NotificationOutcome> SendFcmNativeNotificationAsync(string jsonPayload);
    public sealed virtual Task`1<NotificationOutcome> SendFcmNativeNotificationAsync(string jsonPayload, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendFcmNativeNotificationAsync(string jsonPayload, string tagExpression);
    public sealed virtual Task`1<NotificationOutcome> SendFcmNativeNotificationAsync(string jsonPayload, string tagExpression, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendFcmNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags);
    public sealed virtual Task`1<NotificationOutcome> SendFcmNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public Task`1<NotificationOutcome> SendFcmV1NativeNotificationAsync(string jsonPayload);
    public Task`1<NotificationOutcome> SendFcmV1NativeNotificationAsync(string jsonPayload, CancellationToken cancellationToken);
    public Task`1<NotificationOutcome> SendFcmV1NativeNotificationAsync(string jsonPayload, string tagExpression);
    public Task`1<NotificationOutcome> SendFcmV1NativeNotificationAsync(string jsonPayload, string tagExpression, CancellationToken cancellationToken);
    public Task`1<NotificationOutcome> SendFcmV1NativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags);
    public Task`1<NotificationOutcome> SendFcmV1NativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendBaiduNativeNotificationAsync(string message);
    public sealed virtual Task`1<NotificationOutcome> SendBaiduNativeNotificationAsync(string message, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendBaiduNativeNotificationAsync(string message, string tagExpression);
    public sealed virtual Task`1<NotificationOutcome> SendBaiduNativeNotificationAsync(string message, string tagExpression, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendBaiduNativeNotificationAsync(string message, IEnumerable`1<string> tags);
    public sealed virtual Task`1<NotificationOutcome> SendBaiduNativeNotificationAsync(string message, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendAdmNativeNotificationAsync(string jsonPayload);
    public sealed virtual Task`1<NotificationOutcome> SendAdmNativeNotificationAsync(string jsonPayload, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendAdmNativeNotificationAsync(string jsonPayload, string tagExpression);
    public sealed virtual Task`1<NotificationOutcome> SendAdmNativeNotificationAsync(string jsonPayload, string tagExpression, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendAdmNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags);
    public sealed virtual Task`1<NotificationOutcome> SendAdmNativeNotificationAsync(string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendMpnsNativeNotificationAsync(string nativePayload);
    public sealed virtual Task`1<NotificationOutcome> SendMpnsNativeNotificationAsync(string nativePayload, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendMpnsNativeNotificationAsync(string nativePayload, string tagExpression);
    public sealed virtual Task`1<NotificationOutcome> SendMpnsNativeNotificationAsync(string nativePayload, string tagExpression, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendMpnsNativeNotificationAsync(string nativePayload, IEnumerable`1<string> tags);
    public sealed virtual Task`1<NotificationOutcome> SendMpnsNativeNotificationAsync(string nativePayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendNotificationAsync(Notification notification);
    public sealed virtual Task`1<NotificationOutcome> SendNotificationAsync(Notification notification, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendNotificationAsync(Notification notification, string tagExpression);
    public sealed virtual Task`1<NotificationOutcome> SendNotificationAsync(Notification notification, string tagExpression, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendNotificationAsync(Notification notification, IEnumerable`1<string> tags);
    public sealed virtual Task`1<NotificationOutcome> SendNotificationAsync(Notification notification, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationDetails> GetNotificationOutcomeDetailsAsync(string notificationId);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<GetNotificationOutcomeDetailsAsync>d__86")]
public sealed virtual Task`1<NotificationDetails> GetNotificationOutcomeDetailsAsync(string notificationId, CancellationToken cancellationToken);
    public sealed virtual Task`1<Uri> GetFeedbackContainerUriAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<GetFeedbackContainerUriAsync>d__88")]
public sealed virtual Task`1<Uri> GetFeedbackContainerUriAsync(CancellationToken cancellationToken);
    public sealed virtual void CreateOrUpdateInstallation(Installation installation);
    public sealed virtual Task CreateOrUpdateInstallationAsync(Installation installation);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<CreateOrUpdateInstallationAsync>d__91")]
public sealed virtual Task CreateOrUpdateInstallationAsync(Installation installation, CancellationToken cancellationToken);
    public sealed virtual void PatchInstallation(string installationId, IList`1<PartialUpdateOperation> operations);
    public sealed virtual Task PatchInstallationAsync(string installationId, IList`1<PartialUpdateOperation> operations);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<PatchInstallationAsync>d__94")]
public sealed virtual Task PatchInstallationAsync(string installationId, IList`1<PartialUpdateOperation> operations, CancellationToken cancellationToken);
    public sealed virtual void DeleteInstallation(string installationId);
    public sealed virtual Task DeleteInstallationAsync(string installationId);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<DeleteInstallationAsync>d__97")]
public sealed virtual Task DeleteInstallationAsync(string installationId, CancellationToken cancellationToken);
    public sealed virtual bool InstallationExists(string installationId);
    public sealed virtual Task`1<bool> InstallationExistsAsync(string installationId);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<InstallationExistsAsync>d__100")]
public sealed virtual Task`1<bool> InstallationExistsAsync(string installationId, CancellationToken cancellationToken);
    public sealed virtual Installation GetInstallation(string installationId);
    public sealed virtual Task`1<Installation> GetInstallationAsync(string installationId);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<GetInstallationAsync>d__103")]
public sealed virtual Task`1<Installation> GetInstallationAsync(string installationId, CancellationToken cancellationToken);
    public sealed virtual Task`1<string> CreateRegistrationIdAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<CreateRegistrationIdAsync>d__105")]
public sealed virtual Task`1<string> CreateRegistrationIdAsync(CancellationToken cancellationToken);
    public sealed virtual Task`1<WindowsRegistrationDescription> CreateWindowsNativeRegistrationAsync(string channelUri);
    public sealed virtual Task`1<WindowsRegistrationDescription> CreateWindowsNativeRegistrationAsync(string channelUri, CancellationToken cancellationToken);
    public sealed virtual Task`1<WindowsRegistrationDescription> CreateWindowsNativeRegistrationAsync(string channelUri, IEnumerable`1<string> tags);
    public sealed virtual Task`1<WindowsRegistrationDescription> CreateWindowsNativeRegistrationAsync(string channelUri, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<WindowsTemplateRegistrationDescription> CreateWindowsTemplateRegistrationAsync(string channelUri, string xmlTemplate);
    public sealed virtual Task`1<WindowsTemplateRegistrationDescription> CreateWindowsTemplateRegistrationAsync(string channelUri, string xmlTemplate, CancellationToken cancellationToken);
    public sealed virtual Task`1<WindowsTemplateRegistrationDescription> CreateWindowsTemplateRegistrationAsync(string channelUri, string xmlTemplate, IEnumerable`1<string> tags);
    public sealed virtual Task`1<WindowsTemplateRegistrationDescription> CreateWindowsTemplateRegistrationAsync(string channelUri, string xmlTemplate, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<AppleRegistrationDescription> CreateAppleNativeRegistrationAsync(string deviceToken);
    public sealed virtual Task`1<AppleRegistrationDescription> CreateAppleNativeRegistrationAsync(string deviceToken, CancellationToken cancellationToken);
    public sealed virtual Task`1<AppleRegistrationDescription> CreateAppleNativeRegistrationAsync(string deviceToken, IEnumerable`1<string> tags);
    public sealed virtual Task`1<AppleRegistrationDescription> CreateAppleNativeRegistrationAsync(string deviceToken, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<AppleTemplateRegistrationDescription> CreateAppleTemplateRegistrationAsync(string deviceToken, string jsonPayload);
    public sealed virtual Task`1<AppleTemplateRegistrationDescription> CreateAppleTemplateRegistrationAsync(string deviceToken, string jsonPayload, CancellationToken cancellationToken);
    public sealed virtual Task`1<AppleTemplateRegistrationDescription> CreateAppleTemplateRegistrationAsync(string deviceToken, string jsonPayload, IEnumerable`1<string> tags);
    public sealed virtual Task`1<AppleTemplateRegistrationDescription> CreateAppleTemplateRegistrationAsync(string deviceToken, string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<AdmRegistrationDescription> CreateAdmNativeRegistrationAsync(string admRegistrationId);
    public sealed virtual Task`1<AdmRegistrationDescription> CreateAdmNativeRegistrationAsync(string admRegistrationId, CancellationToken cancellationToken);
    public sealed virtual Task`1<AdmRegistrationDescription> CreateAdmNativeRegistrationAsync(string admRegistrationId, IEnumerable`1<string> tags);
    public sealed virtual Task`1<AdmRegistrationDescription> CreateAdmNativeRegistrationAsync(string admRegistrationId, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<AdmTemplateRegistrationDescription> CreateAdmTemplateRegistrationAsync(string admRegistrationId, string jsonPayload);
    public sealed virtual Task`1<AdmTemplateRegistrationDescription> CreateAdmTemplateRegistrationAsync(string admRegistrationId, string jsonPayload, CancellationToken cancellationToken);
    public sealed virtual Task`1<AdmTemplateRegistrationDescription> CreateAdmTemplateRegistrationAsync(string admRegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    public sealed virtual Task`1<AdmTemplateRegistrationDescription> CreateAdmTemplateRegistrationAsync(string admRegistrationId, string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    [ObsoleteAttribute("CreateGcmNativeRegistrationAsync is deprecated, please use CreateFcmNativeRegistrationAsync instead.")]
internal Task`1<GcmRegistrationDescription> CreateGcmNativeRegistrationAsync(string gcmRegistrationId);
    [ObsoleteAttribute("CreateGcmNativeRegistrationAsync is deprecated, please use CreateFcmNativeRegistrationAsync instead.")]
internal Task`1<GcmRegistrationDescription> CreateGcmNativeRegistrationAsync(string gcmRegistrationId, IEnumerable`1<string> tags);
    [ObsoleteAttribute("CreateGcmTemplateRegistrationAsync is deprecated, please use CreateFcmTemplateRegistrationAsync instead.")]
internal Task`1<GcmTemplateRegistrationDescription> CreateGcmTemplateRegistrationAsync(string gcmRegistrationId, string jsonPayload);
    [ObsoleteAttribute("CreateGcmTemplateRegistrationAsync is deprecated, please use CreateFcmTemplateRegistrationAsync instead.")]
internal Task`1<GcmTemplateRegistrationDescription> CreateGcmTemplateRegistrationAsync(string gcmRegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    public sealed virtual Task`1<FcmRegistrationDescription> CreateFcmNativeRegistrationAsync(string fcmRegistrationId);
    public sealed virtual Task`1<FcmRegistrationDescription> CreateFcmNativeRegistrationAsync(string fcmRegistrationId, CancellationToken cancellationToken);
    public sealed virtual Task`1<FcmRegistrationDescription> CreateFcmNativeRegistrationAsync(string fcmRegistrationId, IEnumerable`1<string> tags);
    public sealed virtual Task`1<FcmRegistrationDescription> CreateFcmNativeRegistrationAsync(string fcmRegistrationId, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<FcmTemplateRegistrationDescription> CreateFcmTemplateRegistrationAsync(string fcmRegistrationId, string jsonPayload);
    public sealed virtual Task`1<FcmTemplateRegistrationDescription> CreateFcmTemplateRegistrationAsync(string fcmRegistrationId, string jsonPayload, CancellationToken cancellationToken);
    public sealed virtual Task`1<FcmTemplateRegistrationDescription> CreateFcmTemplateRegistrationAsync(string fcmRegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    public sealed virtual Task`1<FcmTemplateRegistrationDescription> CreateFcmTemplateRegistrationAsync(string fcmRegistrationId, string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<FcmV1RegistrationDescription> CreateFcmV1NativeRegistrationAsync(string fcmV1RegistrationId);
    public sealed virtual Task`1<FcmV1RegistrationDescription> CreateFcmV1NativeRegistrationAsync(string fcmV1RegistrationId, CancellationToken cancellationToken);
    public sealed virtual Task`1<FcmV1RegistrationDescription> CreateFcmV1NativeRegistrationAsync(string fcmV1RegistrationId, IEnumerable`1<string> tags);
    public sealed virtual Task`1<FcmV1RegistrationDescription> CreateFcmV1NativeRegistrationAsync(string fcmV1RegistrationId, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<FcmV1TemplateRegistrationDescription> CreateFcmV1TemplateRegistrationAsync(string fcmV1RegistrationId, string jsonPayload);
    public sealed virtual Task`1<FcmV1TemplateRegistrationDescription> CreateFcmV1TemplateRegistrationAsync(string fcmV1RegistrationId, string jsonPayload, CancellationToken cancellationToken);
    public sealed virtual Task`1<FcmV1TemplateRegistrationDescription> CreateFcmV1TemplateRegistrationAsync(string fcmV1RegistrationId, string jsonPayload, IEnumerable`1<string> tags);
    public sealed virtual Task`1<FcmV1TemplateRegistrationDescription> CreateFcmV1TemplateRegistrationAsync(string fcmV1RegistrationId, string jsonPayload, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<BaiduRegistrationDescription> CreateBaiduNativeRegistrationAsync(string userId, string channelId);
    public sealed virtual Task`1<BaiduRegistrationDescription> CreateBaiduNativeRegistrationAsync(string userId, string channelId, IEnumerable`1<string> tags);
    public sealed virtual Task`1<BaiduTemplateRegistrationDescription> CreateBaiduTemplateRegistrationAsync(string userId, string channelId, string jsonPayload, IEnumerable`1<string> tags);
    public sealed virtual Task`1<BaiduTemplateRegistrationDescription> CreateBaiduTemplateRegistrationAsync(string userId, string channelId, string jsonPayload);
    public sealed virtual Task`1<MpnsRegistrationDescription> CreateMpnsNativeRegistrationAsync(string channelUri);
    public sealed virtual Task`1<MpnsRegistrationDescription> CreateMpnsNativeRegistrationAsync(string channelUri, IEnumerable`1<string> tags);
    public sealed virtual Task`1<MpnsTemplateRegistrationDescription> CreateMpnsTemplateRegistrationAsync(string channelUri, string xmlTemplate);
    public sealed virtual Task`1<MpnsTemplateRegistrationDescription> CreateMpnsTemplateRegistrationAsync(string channelUri, string xmlTemplate, IEnumerable`1<string> tags);
    public sealed virtual Task`1<T> CreateRegistrationAsync(T registration);
    public sealed virtual Task`1<T> CreateRegistrationAsync(T registration, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> UpdateRegistrationAsync(T registration);
    public sealed virtual Task`1<T> UpdateRegistrationAsync(T registration, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> CreateOrUpdateRegistrationAsync(T registration);
    public sealed virtual Task`1<T> CreateOrUpdateRegistrationAsync(T registration, CancellationToken cancellationToken);
    public sealed virtual Task`1<TRegistrationDescription> GetRegistrationAsync(string registrationId);
    public sealed virtual Task`1<TRegistrationDescription> GetRegistrationAsync(string registrationId, CancellationToken cancellationToken);
    public sealed virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetAllRegistrationsAsync(int top);
    public sealed virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetAllRegistrationsAsync(int top, CancellationToken cancellationToken);
    public sealed virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetAllRegistrationsAsync(string continuationToken, int top);
    public sealed virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetAllRegistrationsAsync(string continuationToken, int top, CancellationToken cancellationToken);
    public sealed virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByChannelAsync(string pnsHandle, int top);
    public sealed virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByChannelAsync(string pnsHandle, int top, CancellationToken cancellationToken);
    public sealed virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByChannelAsync(string pnsHandle, string continuationToken, int top);
    public sealed virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByChannelAsync(string pnsHandle, string continuationToken, int top, CancellationToken cancellationToken);
    public sealed virtual Task DeleteRegistrationAsync(RegistrationDescription registration);
    public sealed virtual Task DeleteRegistrationAsync(RegistrationDescription registration, CancellationToken cancellationToken);
    public sealed virtual Task DeleteRegistrationAsync(string registrationId);
    public sealed virtual Task DeleteRegistrationAsync(string registrationId, CancellationToken cancellationToken);
    public sealed virtual Task DeleteRegistrationAsync(string registrationId, string etag);
    public sealed virtual Task DeleteRegistrationAsync(string registrationId, string etag, CancellationToken cancellationToken);
    public sealed virtual Task DeleteRegistrationsByChannelAsync(string pnsHandle);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<DeleteRegistrationsByChannelAsync>d__181")]
public sealed virtual Task DeleteRegistrationsByChannelAsync(string pnsHandle, CancellationToken cancellationToken);
    public sealed virtual Task`1<bool> RegistrationExistsAsync(string registrationId);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<RegistrationExistsAsync>d__183")]
public sealed virtual Task`1<bool> RegistrationExistsAsync(string registrationId, CancellationToken cancellationToken);
    public sealed virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByTagAsync(string tag, int top);
    public sealed virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByTagAsync(string tag, int top, CancellationToken cancellationToken);
    public sealed virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByTagAsync(string tag, string continuationToken, int top);
    public sealed virtual Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetRegistrationsByTagAsync(string tag, string continuationToken, int top, CancellationToken cancellationToken);
    public sealed virtual Task`1<ScheduledNotification> ScheduleNotificationAsync(Notification notification, DateTimeOffset scheduledTime);
    public sealed virtual Task`1<ScheduledNotification> ScheduleNotificationAsync(Notification notification, DateTimeOffset scheduledTime, CancellationToken cancellationToken);
    public sealed virtual Task`1<ScheduledNotification> ScheduleNotificationAsync(Notification notification, DateTimeOffset scheduledTime, IEnumerable`1<string> tags);
    public sealed virtual Task`1<ScheduledNotification> ScheduleNotificationAsync(Notification notification, DateTimeOffset scheduledTime, IEnumerable`1<string> tags, CancellationToken cancellationToken);
    public sealed virtual Task`1<ScheduledNotification> ScheduleNotificationAsync(Notification notification, DateTimeOffset scheduledTime, string tagExpression);
    public sealed virtual Task`1<ScheduledNotification> ScheduleNotificationAsync(Notification notification, DateTimeOffset scheduledTime, string tagExpression, CancellationToken cancellationToken);
    public sealed virtual Task CancelNotificationAsync(string scheduledNotificationId);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<CancelNotificationAsync>d__195")]
public sealed virtual Task CancelNotificationAsync(string scheduledNotificationId, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendDirectNotificationAsync(Notification notification, string deviceHandle);
    public sealed virtual Task`1<NotificationOutcome> SendDirectNotificationAsync(Notification notification, string deviceHandle, CancellationToken cancellationToken);
    public sealed virtual Task`1<NotificationOutcome> SendDirectNotificationAsync(Notification notification, IList`1<string> deviceHandles);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<SendDirectNotificationAsync>d__199")]
public sealed virtual Task`1<NotificationOutcome> SendDirectNotificationAsync(Notification notification, IList`1<string> deviceHandles, CancellationToken cancellationToken);
    private T SyncOp(Func`1<Task`1<T>> func);
    private void SyncOp(Func`1<Task> action);
    public sealed virtual Uri GetBaseUri();
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<SendNotificationImplAsync>d__203")]
private Task`1<NotificationOutcome> SendNotificationImplAsync(Notification notification, string tagExpression, string deviceHandle, CancellationToken cancellationToken);
    public static void ParseContentType(string contentType, String& mediaType, Encoding& encoding);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<SendScheduledNotificationImplAsync>d__205")]
private Task`1<ScheduledNotification> SendScheduledNotificationImplAsync(Notification notification, DateTimeOffset scheduledTime, string tagExpression, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<GetAllEntitiesImplAsync>d__206`1")]
private Task`1<ICollectionQueryResult`1<TEntity>> GetAllEntitiesImplAsync(UriBuilder requestUri, string continuationToken, int top, CancellationToken cancellationToken);
    private Task`1<ICollectionQueryResult`1<RegistrationDescription>> GetAllRegistrationsImplAsync(string continuationToken, int top, string deviceHandle, string tag, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<DeleteRegistrationImplAsync>d__208")]
private Task DeleteRegistrationImplAsync(string registrationId, string etag, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<CreateOrUpdateRegistrationImplAsync>d__209`1")]
private Task`1<TRegistration> CreateOrUpdateRegistrationImplAsync(TRegistration registration, EntityOperatonType operationType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<GetEntityImplAsync>d__210`1")]
private Task`1<TEntity> GetEntityImplAsync(string entityCollection, string entityId, CancellationToken cancellationToken, bool throwIfNotFound);
    private HttpRequestMessage CreateHttpRequest(HttpMethod method, Uri requestUri, String& trackingId);
    private UriBuilder GetGenericRequestUriBuilder();
    private static Uri GetBaseUri(KeyValueConfigurationManager manager);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<SendRequestAsync>d__214")]
private Task`1<HttpResponseMessage> SendRequestAsync(HttpRequestMessage request, string trackingId, HttpStatusCode successfulResponseStatus, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<SendRequestAsync>d__215")]
private Task`1<HttpResponseMessage> SendRequestAsync(HttpRequestMessage request, string trackingId, HttpStatusCode[] successfulResponseStatuses, CancellationToken cancellationToken);
    private string GetNotificationIdFromResponse(HttpResponseMessage response);
    private void SetUserAgent();
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<ReadEntitiesAsync>d__218`1")]
private Task`1<List`1<TEntity>> ReadEntitiesAsync(Stream source);
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubClient/<ReadEntityAsync>d__219`1")]
private Task`1<TEntity> ReadEntityAsync(Stream source);
    private void AddEntityToRequestContent(HttpRequestMessage request, EntityDescription entity);
    private static void AddToQuery(UriBuilder uriBuilder, string query);
    private static Notification FcmToGcmNotificationTypeCast(Notification notification);
}
public class Microsoft.Azure.NotificationHubs.NotificationHubConnectionStringBuilder : object {
    [CompilerGeneratedAttribute]
private Uri <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SharedAccessKeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SharedAccessKey>k__BackingField;
    public Uri Endpoint { get; private set; }
    public string SharedAccessKeyName { get; public set; }
    public string SharedAccessKey { get; public set; }
    public NotificationHubConnectionStringBuilder(string connectionString);
    [CompilerGeneratedAttribute]
public Uri get_Endpoint();
    [CompilerGeneratedAttribute]
private void set_Endpoint(Uri value);
    [CompilerGeneratedAttribute]
public string get_SharedAccessKeyName();
    [CompilerGeneratedAttribute]
public void set_SharedAccessKeyName(string value);
    [CompilerGeneratedAttribute]
public string get_SharedAccessKey();
    [CompilerGeneratedAttribute]
public void set_SharedAccessKey(string value);
    private void InitializeFromConnectionString(string connectionString);
    private void InitializeFromKeyValueManager(KeyValueConfigurationManager kvmManager);
    public virtual string ToString();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.NotificationHubDescription : EntityDescription {
    private string _path;
    private Nullable`1<bool> internalStatus;
    [CompilerGeneratedAttribute]
private ApnsCredential <ApnsCredential>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <InternalRegistrationTtl>k__BackingField;
    [CompilerGeneratedAttribute]
private WnsCredential <WnsCredential>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationRules <InternalAuthorization>k__BackingField;
    [CompilerGeneratedAttribute]
private FcmCredential <FcmCredential>k__BackingField;
    [CompilerGeneratedAttribute]
private MpnsCredential <MpnsCredential>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DailyOperations>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DailyMaxActiveDevices>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DailyMaxActiveRegistrations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalUserMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private AdmCredential <AdmCredential>k__BackingField;
    [CompilerGeneratedAttribute]
private BaiduCredential <BaiduCredential>k__BackingField;
    [CompilerGeneratedAttribute]
private FcmV1Credential <FcmV1Credential>k__BackingField;
    public string Path { get; public set; }
    public AuthorizationRules Authorization { get; }
    public Nullable`1<TimeSpan> RegistrationTtl { get; public set; }
    [DataMemberAttribute]
private Nullable`1<bool> InternalStatus { get; private set; }
    [IgnoreDataMemberAttribute]
public bool IsDisabled { get; public set; }
    public bool IsAnonymousAccessible { get; }
    [DataMemberAttribute]
public ApnsCredential ApnsCredential { get; public set; }
    [DataMemberAttribute]
internal Nullable`1<TimeSpan> InternalRegistrationTtl { get; internal set; }
    [DataMemberAttribute]
public WnsCredential WnsCredential { get; public set; }
    [DataMemberAttribute]
internal AuthorizationRules InternalAuthorization { get; internal set; }
    [DataMemberAttribute]
public FcmCredential FcmCredential { get; public set; }
    [DataMemberAttribute]
public MpnsCredential MpnsCredential { get; public set; }
    [DataMemberAttribute]
public long DailyOperations { get; internal set; }
    [DataMemberAttribute]
public long DailyMaxActiveDevices { get; internal set; }
    [DataMemberAttribute]
public long DailyMaxActiveRegistrations { get; internal set; }
    [DataMemberAttribute]
internal string InternalUserMetadata { get; internal set; }
    [DataMemberAttribute]
public AdmCredential AdmCredential { get; public set; }
    [DataMemberAttribute]
public BaiduCredential BaiduCredential { get; public set; }
    [DataMemberAttribute]
public FcmV1Credential FcmV1Credential { get; public set; }
    public string UserMetadata { get; public set; }
    internal bool RequiresEncryption { get; }
    public NotificationHubDescription(string path);
    public string get_Path();
    public void set_Path(string value);
    public void SetAccessPasswords(string fullAccessRuleName, string fullAccessPassword, string listenAccessRuleName, string listenAccessPassword);
    public void SetAccessPassword(string accessKeyName, string password, IEnumerable`1<AccessRights> rights);
    public AuthorizationRules get_Authorization();
    public Nullable`1<TimeSpan> get_RegistrationTtl();
    public void set_RegistrationTtl(Nullable`1<TimeSpan> value);
    private Nullable`1<bool> get_InternalStatus();
    private void set_InternalStatus(Nullable`1<bool> value);
    public bool get_IsDisabled();
    public void set_IsDisabled(bool value);
    public bool get_IsAnonymousAccessible();
    [CompilerGeneratedAttribute]
public ApnsCredential get_ApnsCredential();
    [CompilerGeneratedAttribute]
public void set_ApnsCredential(ApnsCredential value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_InternalRegistrationTtl();
    [CompilerGeneratedAttribute]
internal void set_InternalRegistrationTtl(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public WnsCredential get_WnsCredential();
    [CompilerGeneratedAttribute]
public void set_WnsCredential(WnsCredential value);
    [CompilerGeneratedAttribute]
internal AuthorizationRules get_InternalAuthorization();
    [CompilerGeneratedAttribute]
internal void set_InternalAuthorization(AuthorizationRules value);
    [CompilerGeneratedAttribute]
public FcmCredential get_FcmCredential();
    [CompilerGeneratedAttribute]
public void set_FcmCredential(FcmCredential value);
    [CompilerGeneratedAttribute]
public MpnsCredential get_MpnsCredential();
    [CompilerGeneratedAttribute]
public void set_MpnsCredential(MpnsCredential value);
    [CompilerGeneratedAttribute]
public long get_DailyOperations();
    [CompilerGeneratedAttribute]
internal void set_DailyOperations(long value);
    [CompilerGeneratedAttribute]
public long get_DailyMaxActiveDevices();
    [CompilerGeneratedAttribute]
internal void set_DailyMaxActiveDevices(long value);
    [CompilerGeneratedAttribute]
public long get_DailyMaxActiveRegistrations();
    [CompilerGeneratedAttribute]
internal void set_DailyMaxActiveRegistrations(long value);
    [CompilerGeneratedAttribute]
internal string get_InternalUserMetadata();
    [CompilerGeneratedAttribute]
internal void set_InternalUserMetadata(string value);
    [CompilerGeneratedAttribute]
public AdmCredential get_AdmCredential();
    [CompilerGeneratedAttribute]
public void set_AdmCredential(AdmCredential value);
    [CompilerGeneratedAttribute]
public BaiduCredential get_BaiduCredential();
    [CompilerGeneratedAttribute]
public void set_BaiduCredential(BaiduCredential value);
    [CompilerGeneratedAttribute]
public FcmV1Credential get_FcmV1Credential();
    [CompilerGeneratedAttribute]
public void set_FcmV1Credential(FcmV1Credential value);
    public string get_UserMetadata();
    public void set_UserMetadata(string value);
    internal virtual bool get_RequiresEncryption();
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.NotificationHubJob : EntityDescription {
    [CompilerGeneratedAttribute]
private string <JobId>k__BackingField;
    [CompilerGeneratedAttribute]
private decimal <Progress>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationHubJobType <JobType>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationHubJobStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <OutputContainerUri>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ImportFileUri>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <InputProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Failure>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <OutputProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdatedAt>k__BackingField;
    [DataMemberAttribute]
public string JobId { get; internal set; }
    public string CollectionName { get; }
    public string OutputFileName { get; }
    public string FailuresFileName { get; }
    [DataMemberAttribute]
public decimal Progress { get; internal set; }
    [DataMemberAttribute]
public NotificationHubJobType JobType { get; public set; }
    [DataMemberAttribute]
public NotificationHubJobStatus Status { get; internal set; }
    [DataMemberAttribute]
public Uri OutputContainerUri { get; public set; }
    [DataMemberAttribute]
public Uri ImportFileUri { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, string> InputProperties { get; public set; }
    [DataMemberAttribute]
public string Failure { get; internal set; }
    [DataMemberAttribute]
public Dictionary`2<string, string> OutputProperties { get; internal set; }
    [DataMemberAttribute]
public DateTime CreatedAt { get; internal set; }
    [DataMemberAttribute]
public DateTime UpdatedAt { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_JobId();
    [CompilerGeneratedAttribute]
internal void set_JobId(string value);
    public string get_CollectionName();
    public string get_OutputFileName();
    public string get_FailuresFileName();
    [CompilerGeneratedAttribute]
public decimal get_Progress();
    [CompilerGeneratedAttribute]
internal void set_Progress(decimal value);
    [CompilerGeneratedAttribute]
public NotificationHubJobType get_JobType();
    [CompilerGeneratedAttribute]
public void set_JobType(NotificationHubJobType value);
    [CompilerGeneratedAttribute]
public NotificationHubJobStatus get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(NotificationHubJobStatus value);
    [CompilerGeneratedAttribute]
public Uri get_OutputContainerUri();
    [CompilerGeneratedAttribute]
public void set_OutputContainerUri(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_ImportFileUri();
    [CompilerGeneratedAttribute]
public void set_ImportFileUri(Uri value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_InputProperties();
    [CompilerGeneratedAttribute]
public void set_InputProperties(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Failure();
    [CompilerGeneratedAttribute]
internal void set_Failure(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_OutputProperties();
    [CompilerGeneratedAttribute]
internal void set_OutputProperties(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedAt();
    [CompilerGeneratedAttribute]
internal void set_CreatedAt(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdatedAt();
    [CompilerGeneratedAttribute]
internal void set_UpdatedAt(DateTime value);
}
public enum Microsoft.Azure.NotificationHubs.NotificationHubJobStatus : Enum {
    public int value__;
    public static NotificationHubJobStatus Started;
    public static NotificationHubJobStatus Running;
    public static NotificationHubJobStatus Completed;
    public static NotificationHubJobStatus Failed;
}
public enum Microsoft.Azure.NotificationHubs.NotificationHubJobType : Enum {
    public int value__;
    public static NotificationHubJobType ExportRegistrations;
    public static NotificationHubJobType ImportCreateRegistrations;
    public static NotificationHubJobType ImportUpdateRegistrations;
    public static NotificationHubJobType ImportDeleteRegistrations;
    public static NotificationHubJobType ImportUpsertRegistrations;
}
public enum Microsoft.Azure.NotificationHubs.NotificationHubRetryMode : Enum {
    public int value__;
    public static NotificationHubRetryMode Fixed;
    public static NotificationHubRetryMode Exponential;
}
public class Microsoft.Azure.NotificationHubs.NotificationHubRetryOptions : object {
    private int _maxRetries;
    private TimeSpan _delay;
    private TimeSpan _maxDelay;
    [CompilerGeneratedAttribute]
private NotificationHubRetryMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationHubRetryPolicy <CustomRetryPolicy>k__BackingField;
    public NotificationHubRetryMode Mode { get; public set; }
    public int MaxRetries { get; public set; }
    public TimeSpan Delay { get; public set; }
    public TimeSpan MaxDelay { get; public set; }
    public NotificationHubRetryPolicy CustomRetryPolicy { get; public set; }
    [CompilerGeneratedAttribute]
public NotificationHubRetryMode get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(NotificationHubRetryMode value);
    public int get_MaxRetries();
    public void set_MaxRetries(int value);
    public TimeSpan get_Delay();
    public void set_Delay(TimeSpan value);
    public TimeSpan get_MaxDelay();
    public void set_MaxDelay(TimeSpan value);
    [CompilerGeneratedAttribute]
public NotificationHubRetryPolicy get_CustomRetryPolicy();
    [CompilerGeneratedAttribute]
public void set_CustomRetryPolicy(NotificationHubRetryPolicy value);
}
[ExtensionAttribute]
public static class Microsoft.Azure.NotificationHubs.NotificationHubRetryOptionsExtensions : object {
    [ExtensionAttribute]
public static NotificationHubRetryPolicy ToRetryPolicy(NotificationHubRetryOptions instance);
}
public abstract class Microsoft.Azure.NotificationHubs.NotificationHubRetryPolicy : object {
    public abstract virtual Nullable`1<TimeSpan> CalculateRetryDelay(Exception lastException, int attemptCount);
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [EditorBrowsableAttribute("1")]
public virtual string ToString();
    [AsyncStateMachineAttribute("Microsoft.Azure.NotificationHubs.NotificationHubRetryPolicy/<RunOperation>d__4`1")]
internal Task`1<T> RunOperation(Func`2<CancellationToken, Task`1<T>> operation, CancellationToken cancellationToken);
}
public class Microsoft.Azure.NotificationHubs.NotificationHubSettings : object {
    private NotificationHubRetryOptions _retryOptions;
    [CompilerGeneratedAttribute]
private IWebProxy <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMessageHandler <MessageHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpClient <HttpClient>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <OperationTimeout>k__BackingField;
    public IWebProxy Proxy { get; public set; }
    public HttpMessageHandler MessageHandler { get; public set; }
    public HttpClient HttpClient { get; public set; }
    public Nullable`1<TimeSpan> OperationTimeout { get; public set; }
    public NotificationHubRetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public IWebProxy get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(IWebProxy value);
    [CompilerGeneratedAttribute]
public HttpMessageHandler get_MessageHandler();
    [CompilerGeneratedAttribute]
public void set_MessageHandler(HttpMessageHandler value);
    [CompilerGeneratedAttribute]
public HttpClient get_HttpClient();
    [CompilerGeneratedAttribute]
public void set_HttpClient(HttpClient value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_OperationTimeout();
    [CompilerGeneratedAttribute]
public void set_OperationTimeout(Nullable`1<TimeSpan> value);
    public NotificationHubRetryOptions get_RetryOptions();
    public void set_RetryOptions(NotificationHubRetryOptions value);
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.NotificationOutcome : object {
    [CompilerGeneratedAttribute]
private bool <DelayedRetry>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReleaseSession>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationOutcomeState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Failure>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RegistrationResult> <Results>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NotificationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TrackingId>k__BackingField;
    internal bool DelayedRetry { get; internal set; }
    internal bool ReleaseSession { get; internal set; }
    public NotificationOutcomeState State { get; internal set; }
    [DataMemberAttribute]
public long Success { get; public set; }
    [DataMemberAttribute]
public long Failure { get; public set; }
    [DataMemberAttribute]
public List`1<RegistrationResult> Results { get; public set; }
    public string NotificationId { get; public set; }
    public string TrackingId { get; internal set; }
    [CompilerGeneratedAttribute]
internal bool get_DelayedRetry();
    [CompilerGeneratedAttribute]
internal void set_DelayedRetry(bool value);
    [CompilerGeneratedAttribute]
internal bool get_ReleaseSession();
    [CompilerGeneratedAttribute]
internal void set_ReleaseSession(bool value);
    [CompilerGeneratedAttribute]
public NotificationOutcomeState get_State();
    [CompilerGeneratedAttribute]
internal void set_State(NotificationOutcomeState value);
    [CompilerGeneratedAttribute]
public long get_Success();
    [CompilerGeneratedAttribute]
public void set_Success(long value);
    [CompilerGeneratedAttribute]
public long get_Failure();
    [CompilerGeneratedAttribute]
public void set_Failure(long value);
    [CompilerGeneratedAttribute]
public List`1<RegistrationResult> get_Results();
    [CompilerGeneratedAttribute]
public void set_Results(List`1<RegistrationResult> value);
    [CompilerGeneratedAttribute]
public string get_NotificationId();
    [CompilerGeneratedAttribute]
public void set_NotificationId(string value);
    [CompilerGeneratedAttribute]
public string get_TrackingId();
    [CompilerGeneratedAttribute]
internal void set_TrackingId(string value);
    internal static NotificationOutcome GetUnknownOutCome();
}
[CollectionDataContractAttribute]
public class Microsoft.Azure.NotificationHubs.NotificationOutcomeCollection : Dictionary`2<string, long> {
    internal NotificationOutcomeCollection(IEnumerable`1<string> notificationOutcomes);
    internal void AddRange(IEnumerable`1<string> notificationOutcomes);
    internal NotificationOutcomeCollection Add(NotificationOutcomeCollection outcomeCollection);
    internal static NotificationOutcomeCollection Rollup(IEnumerable`1<NotificationOutcomeCollection> outcomeCollection);
}
public enum Microsoft.Azure.NotificationHubs.NotificationOutcomeState : Enum {
    public int value__;
    public static NotificationOutcomeState Enqueued;
    public static NotificationOutcomeState DetailedStateAvailable;
    public static NotificationOutcomeState Processing;
    public static NotificationOutcomeState Completed;
    public static NotificationOutcomeState Abandoned;
    public static NotificationOutcomeState Unknown;
    public static NotificationOutcomeState NoTargetFound;
    public static NotificationOutcomeState Cancelled;
}
public enum Microsoft.Azure.NotificationHubs.NotificationPlatform : Enum {
    public int value__;
    [EnumMemberAttribute]
public static NotificationPlatform Wns;
    [EnumMemberAttribute]
public static NotificationPlatform Apns;
    [EnumMemberAttribute]
public static NotificationPlatform Mpns;
    [EnumMemberAttribute]
public static NotificationPlatform Fcm;
    [EnumMemberAttribute]
public static NotificationPlatform Adm;
    [EnumMemberAttribute]
public static NotificationPlatform Baidu;
    [EnumMemberAttribute]
public static NotificationPlatform FcmV1;
}
internal enum Microsoft.Azure.NotificationHubs.NotificationType : Enum {
    public int value__;
    public static NotificationType Send;
    public static NotificationType DebugSend;
    public static NotificationType DirectSend;
}
[JsonObjectAttribute]
public class Microsoft.Azure.NotificationHubs.PartialUpdateOperation : object {
    [CompilerGeneratedAttribute]
private UpdateOperationType <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
[JsonPropertyAttribute]
public UpdateOperationType Operation { get; public set; }
    [JsonPropertyAttribute]
public string Path { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public UpdateOperationType get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(UpdateOperationType value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    internal static IList`1<PartialUpdateOperation> ListFromJson(string json);
}
[ExtensionAttribute]
internal static class Microsoft.Azure.NotificationHubs.PartialUpdateOperationExtensions : object {
    [ExtensionAttribute]
internal static string ToJson(IList`1<PartialUpdateOperation> operations);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.ApnsCredential")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.GcmCredential")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.FcmCredential")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.MpnsCredential")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.WnsCredential")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.AdmCredential")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.FcmV1Credential")]
public abstract class Microsoft.Azure.NotificationHubs.PnsCredential : EntityDescription {
    [CompilerGeneratedAttribute]
private PnsCredentialProperties <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <BlockedOn>k__BackingField;
    internal string AppPlatform { get; }
    [DataMemberAttribute]
public PnsCredentialProperties Properties { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> BlockedOn { get; public set; }
    protected string Item { get; protected set; }
    internal abstract virtual string get_AppPlatform();
    [CompilerGeneratedAttribute]
public PnsCredentialProperties get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(PnsCredentialProperties value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_BlockedOn();
    [CompilerGeneratedAttribute]
public void set_BlockedOn(Nullable`1<DateTime> value);
    protected string get_Item(string name);
    protected void set_Item(string name, string value);
    public static bool IsEqual(PnsCredential cred1, PnsCredential cred2);
    internal void Validate(bool allowLocalMockPns);
    protected virtual void OnValidate(bool allowLocalMockPns);
}
[CollectionDataContractAttribute]
public class Microsoft.Azure.NotificationHubs.PnsCredentialProperties : Dictionary`2<string, string> {
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.PnsFeedback : object {
    [CompilerGeneratedAttribute]
private DateTime <FeedbackTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NotificationSystemError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Platform>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PnsHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegistrationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstallationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NotificationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewPnsHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PushOutcome>k__BackingField;
    [DataMemberAttribute]
public DateTime FeedbackTime { get; public set; }
    [DataMemberAttribute]
public string NotificationSystemError { get; public set; }
    [DataMemberAttribute]
public string Platform { get; public set; }
    [DataMemberAttribute]
public string PnsHandle { get; public set; }
    [DataMemberAttribute]
public string RegistrationId { get; public set; }
    [DataMemberAttribute]
public string InstallationId { get; public set; }
    [DataMemberAttribute]
public string NotificationId { get; public set; }
    [DataMemberAttribute]
public string NewPnsHandle { get; public set; }
    internal int PushOutcome { get; internal set; }
    [CompilerGeneratedAttribute]
public DateTime get_FeedbackTime();
    [CompilerGeneratedAttribute]
public void set_FeedbackTime(DateTime value);
    [CompilerGeneratedAttribute]
public string get_NotificationSystemError();
    [CompilerGeneratedAttribute]
public void set_NotificationSystemError(string value);
    [CompilerGeneratedAttribute]
public string get_Platform();
    [CompilerGeneratedAttribute]
public void set_Platform(string value);
    [CompilerGeneratedAttribute]
public string get_PnsHandle();
    [CompilerGeneratedAttribute]
public void set_PnsHandle(string value);
    [CompilerGeneratedAttribute]
public string get_RegistrationId();
    [CompilerGeneratedAttribute]
public void set_RegistrationId(string value);
    [CompilerGeneratedAttribute]
public string get_InstallationId();
    [CompilerGeneratedAttribute]
public void set_InstallationId(string value);
    [CompilerGeneratedAttribute]
public string get_NotificationId();
    [CompilerGeneratedAttribute]
public void set_NotificationId(string value);
    [CompilerGeneratedAttribute]
public string get_NewPnsHandle();
    [CompilerGeneratedAttribute]
public void set_NewPnsHandle(string value);
    [CompilerGeneratedAttribute]
internal int get_PushOutcome();
    [CompilerGeneratedAttribute]
internal void set_PushOutcome(int value);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.Azure.NotificationHubs.Properties.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string AcceptMessageSessionRedirectNotSupported { get; }
    internal static string ActivityClose { get; }
    internal static string ActivityOpen { get; }
    internal static string AsyncCallbackException { get; }
    internal static string AsyncObjectAlreadyEnded { get; }
    internal static string BaseAddressCannotHaveFragment { get; }
    internal static string BaseAddressCannotHaveQuery { get; }
    internal static string BaseAddressCannotHaveUserInfo { get; }
    internal static string BaseAddressMustBeAbsolute { get; }
    internal static string BasicHttpMessageSecurityRequiresCertificate { get; }
    internal static string BufferAllocationFailed { get; }
    internal static string ChannelInitializationTimeout { get; }
    internal static string ChannelTypeNotSupported { get; }
    internal static string CharacterReservedForUriScheme { get; }
    internal static string ClientCredentialTypeMustBeSpecifiedForMixedMode { get; }
    internal static string ClientWebSocketConnectionClosed { get; }
    internal static string ClientWebSocketConnectionPrematureEndRead { get; }
    internal static string ClientWebSocketTransportClosed { get; }
    internal static string ClientWebSocketTransportReadBufferTooSmall { get; }
    internal static string CloseTimedOut { get; }
    internal static string CommunicationObjectAbortedStack2 { get; }
    internal static string CommunicationObjectBaseClassMethodNotCalled { get; }
    internal static string CommunicationObjectCannotBeModifiedInState { get; }
    internal static string CommunicationObjectCannotBeUsed { get; }
    internal static string CommunicationObjectFaultedStack2 { get; }
    internal static string ConfigBindingExtensionNotFound { get; }
    internal static string ConfigInvalidBindingConfigurationName { get; }
    internal static string ConfigInvalidClassFactoryValue { get; }
    internal static string ConfigInvalidClassInstanceValue { get; }
    internal static string ConfigInvalidEncodingValue { get; }
    internal static string ConfigSectionNotFound { get; }
    internal static string ContentTypeMismatch { get; }
    internal static string DnsResolveFailed { get; }
    internal static string DuplexChannelAbortedDuringOpen { get; }
    internal static string DuplexSessionListenerNotFound { get; }
    internal static string DuplicateRegistration { get; }
    internal static string EndpointNotFound { get; }
    internal static string EventProcessorAlreadyRegistered { get; }
    internal static string FramingAtEnd { get; }
    internal static string FramingContentTypeMismatch { get; }
    internal static string FramingContentTypeTooLong { get; }
    internal static string FramingContentTypeTooLongFault { get; }
    internal static string FramingError { get; }
    internal static string FramingFaultTooLong { get; }
    internal static string FramingFaultUnrecognized { get; }
    internal static string FramingMaxMessageSizeExceeded { get; }
    internal static string FramingModeNotSupported { get; }
    internal static string FramingModeNotSupportedFault { get; }
    internal static string FramingPrematureEOF { get; }
    internal static string FramingRecordTypeMismatch { get; }
    internal static string FramingSizeTooLarge { get; }
    internal static string FramingUpgradeInvalid { get; }
    internal static string FramingValueNotAvailable { get; }
    internal static string FramingVersionNotSupported { get; }
    internal static string FramingVersionNotSupportedFault { get; }
    internal static string FramingViaNotUri { get; }
    internal static string FramingViaTooLong { get; }
    internal static string FramingViaTooLongFault { get; }
    internal static string GenericCallbackException { get; }
    internal static string Hosting_BaseUriDeserializedNotValid { get; }
    internal static string Hosting_MisformattedBinding { get; }
    internal static string Hosting_MisformattedBindingData { get; }
    internal static string Hosting_MisformattedPort { get; }
    internal static string Hosting_NoHttpTransportManagerForUri { get; }
    internal static string Hosting_NoTcpPipeTransportManagerForUri { get; }
    internal static string Hosting_NotSupportedProtocol { get; }
    internal static string Hosting_ServiceActivationFailed { get; }
    internal static string HttpProxyRequiresSingleAuthScheme { get; }
    internal static string InnerListenerFactoryNotSet { get; }
    internal static string InsufficentMemory { get; }
    internal static string InvalidAsyncResult { get; }
    internal static string InvalidDecoderStateMachine { get; }
    internal static string InvalidGzipHeaderCannotBeRead { get; }
    internal static string InvalidGzipUnexpectedFlagsValue { get; }
    internal static string InvalidLockOperation { get; }
    internal static string InvalidNotificationHubCreateRequest { get; }
    internal static string InvalidUriPathCharacter { get; }
    internal static string InvalidUriScheme { get; }
    internal static string ListenerFactoryNotRegistered { get; }
    internal static string MaxBufferSizeMustMatchMaxReceivedMessageSize { get; }
    internal static string MaxBufferSizeMustNotExceedMaxReceivedMessageSize { get; }
    internal static string MaxReceivedMessageSizeExceeded { get; }
    internal static string MaxReceivedMessageSizeMustBeInIntegerRange { get; }
    internal static string MaxSentMessageSizeExceeded { get; }
    internal static string MessageXmlProtocolError { get; }
    internal static string MissingMessageID { get; }
    internal static string MultipleMebesInParameters { get; }
    internal static string MultipleStreamUpgradeProvidersInParameters { get; }
    internal static string NoCompatibleTransportManagerForUri { get; }
    internal static string NoIPEndpointsFoundForHost { get; }
    internal static string OffsetExceedsBufferSize { get; }
    internal static string OpenTimedOutEstablishingTransportSession { get; }
    internal static string OperationAbortedDuringConnectionEstablishment { get; }
    internal static string OperationIsNotAllowedForNamespaceType { get; }
    internal static string PreambleAckIncorrect { get; }
    internal static string PreambleAckIncorrectMaybeHttp { get; }
    internal static string PrematureEOF { get; }
    internal static string ReceiveRequestTimedOut { get; }
    internal static string ReceiveRequestTimedOutNoLocalAddress { get; }
    internal static string ReceiveTimedOut { get; }
    internal static string ReceiveTimedOut2 { get; }
    internal static string ReceiveTimedOutNoLocalAddress { get; }
    internal static string RemoteSecurityNotNegotiatedOnStreamUpgrade { get; }
    internal static string ReplyAlreadySent { get; }
    internal static string RequestChannelSendTimedOut { get; }
    internal static string RequestChannelWaitForReplyTimedOut { get; }
    internal static string RequestContextAborted { get; }
    internal static string RequestTimedOutEstablishingTransportSession { get; }
    internal static string ResourcePublishingEndpointNotAllowed { get; }
    internal static string ResourcePublishingNotAllowed { get; }
    internal static string SbmpClientMustEnableRedirect { get; }
    internal static string SecureConversationRequiredByReliableSession { get; }
    internal static string SecurityAuditNotSupportedOnChannelFactory { get; }
    internal static string SeekNotSupported { get; }
    internal static string SendCannotBeCalledAfterCloseOutputSession { get; }
    internal static string SendToViaTimedOut { get; }
    internal static string ServerBusy { get; }
    internal static string ServerRejectedSessionPreamble { get; }
    internal static string ServerRejectedUpgradeRequest { get; }
    internal static string ServerTooBusy { get; }
    internal static string SFxCloseTimedOut1 { get; }
    internal static string SFxTimeoutOutOfRange0 { get; }
    internal static string SFxTimeoutOutOfRangeTooBig { get; }
    internal static string SFxWrongType2 { get; }
    internal static string Sharing_ConnectionDispatchFailed { get; }
    internal static string Sharing_EndpointUnavailable { get; }
    internal static string SizeExceedsRemainingBufferSpace { get; }
    internal static string SocketAbortedReceiveTimedOut { get; }
    internal static string SocketAbortedSendTimedOut { get; }
    internal static string SocketCloseReadReceivedData { get; }
    internal static string SocketCloseReadTimeout { get; }
    internal static string SocketConnectionDisposed { get; }
    internal static string SpaceNeededExceedsMessageFrameOffset { get; }
    internal static string SSLCertThumbprintMissing { get; }
    internal static string StreamDoesNotSupportTimeout { get; }
    internal static string StreamError { get; }
    internal static string SuppliedMessageIsNotAReplyItHasNoRelatesTo0 { get; }
    internal static string TcpConnectError { get; }
    internal static string TcpConnectErrorWithTimeSpan { get; }
    internal static string TcpConnectingToViaTimedOut { get; }
    internal static string TcpConnectionResetError { get; }
    internal static string TcpConnectionTimedOut { get; }
    internal static string TcpConnectNoBufs { get; }
    internal static string TcpLocalConnectionAborted { get; }
    internal static string TcpTransferError { get; }
    internal static string ThreadAcquisitionTimedOut { get; }
    internal static string ThreadNeutralSemaphoreAborted { get; }
    internal static string ThreadNeutralSemaphoreAsyncAbort { get; }
    internal static string TimeoutOnOpen { get; }
    internal static string TimeoutOnRequest { get; }
    internal static string TimeSpanMustbeGreaterThanTimeSpanZero { get; }
    internal static string TokenProviderEmptyAudience { get; }
    internal static string TokenProviderEmptyExpiration { get; }
    internal static string TokenProviderEmptyToken { get; }
    internal static string TokenProviderFailedSecurityToken { get; }
    internal static string TokenProviderInvalidTokenParameter { get; }
    internal static string TokenProviderServiceUnavailable { get; }
    internal static string TokenProviderTimeout { get; }
    internal static string TraceCodeAppDomainUnload { get; }
    internal static string TraceCodeCommunicationObjectAborted { get; }
    internal static string TraceCodeCommunicationObjectAbortFailed { get; }
    internal static string TraceCodeCommunicationObjectClosed { get; }
    internal static string TraceCodeCommunicationObjectCloseFailed { get; }
    internal static string TraceCodeCommunicationObjectClosing { get; }
    internal static string TraceCodeCommunicationObjectFaulted { get; }
    internal static string TraceCodeCommunicationObjectOpened { get; }
    internal static string TraceCodeCommunicationObjectOpenFailed { get; }
    internal static string TraceCodeCommunicationObjectOpening { get; }
    internal static string TraceCodeConnectionPoolIdleTimeoutReached { get; }
    internal static string TraceCodeConnectionPoolLeaseTimeoutReached { get; }
    internal static string TraceCodeConnectionPoolMaxOutboundConnectionsPerEndpointQuotaReached { get; }
    internal static string TraceCodeEventLog { get; }
    internal static string TraceCodeFailedAcceptFromPool { get; }
    internal static string TraceCodeServerMaxPooledConnectionsQuotaReached { get; }
    internal static string TraceCodeTraceTruncatedQuotaExceeded { get; }
    internal static string TraceCodeTransportListen { get; }
    internal static string TransportManagerOpen { get; }
    internal static string UnableToResolveHost { get; }
    internal static string UnhandledException { get; }
    internal static string UpgradeProtocolNotSupported { get; }
    internal static string UpgradeRequestToNonupgradableService { get; }
    internal static string UriGeneratorSchemeMustNotBeEmpty { get; }
    internal static string UriLengthExceedsMaxSupportedSize { get; }
    internal static string ValueMustBeInRange { get; }
    internal static string ValueMustBeNonNegative { get; }
    internal static string ValueMustBePositive { get; }
    internal static string WaitForMessageTimedOut { get; }
    internal static string WriteCharsInvalidContent { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_AcceptMessageSessionRedirectNotSupported();
    internal static string get_ActivityClose();
    internal static string get_ActivityOpen();
    internal static string get_AsyncCallbackException();
    internal static string get_AsyncObjectAlreadyEnded();
    internal static string get_BaseAddressCannotHaveFragment();
    internal static string get_BaseAddressCannotHaveQuery();
    internal static string get_BaseAddressCannotHaveUserInfo();
    internal static string get_BaseAddressMustBeAbsolute();
    internal static string get_BasicHttpMessageSecurityRequiresCertificate();
    internal static string get_BufferAllocationFailed();
    internal static string get_ChannelInitializationTimeout();
    internal static string get_ChannelTypeNotSupported();
    internal static string get_CharacterReservedForUriScheme();
    internal static string get_ClientCredentialTypeMustBeSpecifiedForMixedMode();
    internal static string get_ClientWebSocketConnectionClosed();
    internal static string get_ClientWebSocketConnectionPrematureEndRead();
    internal static string get_ClientWebSocketTransportClosed();
    internal static string get_ClientWebSocketTransportReadBufferTooSmall();
    internal static string get_CloseTimedOut();
    internal static string get_CommunicationObjectAbortedStack2();
    internal static string get_CommunicationObjectBaseClassMethodNotCalled();
    internal static string get_CommunicationObjectCannotBeModifiedInState();
    internal static string get_CommunicationObjectCannotBeUsed();
    internal static string get_CommunicationObjectFaultedStack2();
    internal static string get_ConfigBindingExtensionNotFound();
    internal static string get_ConfigInvalidBindingConfigurationName();
    internal static string get_ConfigInvalidClassFactoryValue();
    internal static string get_ConfigInvalidClassInstanceValue();
    internal static string get_ConfigInvalidEncodingValue();
    internal static string get_ConfigSectionNotFound();
    internal static string get_ContentTypeMismatch();
    internal static string get_DnsResolveFailed();
    internal static string get_DuplexChannelAbortedDuringOpen();
    internal static string get_DuplexSessionListenerNotFound();
    internal static string get_DuplicateRegistration();
    internal static string get_EndpointNotFound();
    internal static string get_EventProcessorAlreadyRegistered();
    internal static string get_FramingAtEnd();
    internal static string get_FramingContentTypeMismatch();
    internal static string get_FramingContentTypeTooLong();
    internal static string get_FramingContentTypeTooLongFault();
    internal static string get_FramingError();
    internal static string get_FramingFaultTooLong();
    internal static string get_FramingFaultUnrecognized();
    internal static string get_FramingMaxMessageSizeExceeded();
    internal static string get_FramingModeNotSupported();
    internal static string get_FramingModeNotSupportedFault();
    internal static string get_FramingPrematureEOF();
    internal static string get_FramingRecordTypeMismatch();
    internal static string get_FramingSizeTooLarge();
    internal static string get_FramingUpgradeInvalid();
    internal static string get_FramingValueNotAvailable();
    internal static string get_FramingVersionNotSupported();
    internal static string get_FramingVersionNotSupportedFault();
    internal static string get_FramingViaNotUri();
    internal static string get_FramingViaTooLong();
    internal static string get_FramingViaTooLongFault();
    internal static string get_GenericCallbackException();
    internal static string get_Hosting_BaseUriDeserializedNotValid();
    internal static string get_Hosting_MisformattedBinding();
    internal static string get_Hosting_MisformattedBindingData();
    internal static string get_Hosting_MisformattedPort();
    internal static string get_Hosting_NoHttpTransportManagerForUri();
    internal static string get_Hosting_NoTcpPipeTransportManagerForUri();
    internal static string get_Hosting_NotSupportedProtocol();
    internal static string get_Hosting_ServiceActivationFailed();
    internal static string get_HttpProxyRequiresSingleAuthScheme();
    internal static string get_InnerListenerFactoryNotSet();
    internal static string get_InsufficentMemory();
    internal static string get_InvalidAsyncResult();
    internal static string get_InvalidDecoderStateMachine();
    internal static string get_InvalidGzipHeaderCannotBeRead();
    internal static string get_InvalidGzipUnexpectedFlagsValue();
    internal static string get_InvalidLockOperation();
    internal static string get_InvalidNotificationHubCreateRequest();
    internal static string get_InvalidUriPathCharacter();
    internal static string get_InvalidUriScheme();
    internal static string get_ListenerFactoryNotRegistered();
    internal static string get_MaxBufferSizeMustMatchMaxReceivedMessageSize();
    internal static string get_MaxBufferSizeMustNotExceedMaxReceivedMessageSize();
    internal static string get_MaxReceivedMessageSizeExceeded();
    internal static string get_MaxReceivedMessageSizeMustBeInIntegerRange();
    internal static string get_MaxSentMessageSizeExceeded();
    internal static string get_MessageXmlProtocolError();
    internal static string get_MissingMessageID();
    internal static string get_MultipleMebesInParameters();
    internal static string get_MultipleStreamUpgradeProvidersInParameters();
    internal static string get_NoCompatibleTransportManagerForUri();
    internal static string get_NoIPEndpointsFoundForHost();
    internal static string get_OffsetExceedsBufferSize();
    internal static string get_OpenTimedOutEstablishingTransportSession();
    internal static string get_OperationAbortedDuringConnectionEstablishment();
    internal static string get_OperationIsNotAllowedForNamespaceType();
    internal static string get_PreambleAckIncorrect();
    internal static string get_PreambleAckIncorrectMaybeHttp();
    internal static string get_PrematureEOF();
    internal static string get_ReceiveRequestTimedOut();
    internal static string get_ReceiveRequestTimedOutNoLocalAddress();
    internal static string get_ReceiveTimedOut();
    internal static string get_ReceiveTimedOut2();
    internal static string get_ReceiveTimedOutNoLocalAddress();
    internal static string get_RemoteSecurityNotNegotiatedOnStreamUpgrade();
    internal static string get_ReplyAlreadySent();
    internal static string get_RequestChannelSendTimedOut();
    internal static string get_RequestChannelWaitForReplyTimedOut();
    internal static string get_RequestContextAborted();
    internal static string get_RequestTimedOutEstablishingTransportSession();
    internal static string get_ResourcePublishingEndpointNotAllowed();
    internal static string get_ResourcePublishingNotAllowed();
    internal static string get_SbmpClientMustEnableRedirect();
    internal static string get_SecureConversationRequiredByReliableSession();
    internal static string get_SecurityAuditNotSupportedOnChannelFactory();
    internal static string get_SeekNotSupported();
    internal static string get_SendCannotBeCalledAfterCloseOutputSession();
    internal static string get_SendToViaTimedOut();
    internal static string get_ServerBusy();
    internal static string get_ServerRejectedSessionPreamble();
    internal static string get_ServerRejectedUpgradeRequest();
    internal static string get_ServerTooBusy();
    internal static string get_SFxCloseTimedOut1();
    internal static string get_SFxTimeoutOutOfRange0();
    internal static string get_SFxTimeoutOutOfRangeTooBig();
    internal static string get_SFxWrongType2();
    internal static string get_Sharing_ConnectionDispatchFailed();
    internal static string get_Sharing_EndpointUnavailable();
    internal static string get_SizeExceedsRemainingBufferSpace();
    internal static string get_SocketAbortedReceiveTimedOut();
    internal static string get_SocketAbortedSendTimedOut();
    internal static string get_SocketCloseReadReceivedData();
    internal static string get_SocketCloseReadTimeout();
    internal static string get_SocketConnectionDisposed();
    internal static string get_SpaceNeededExceedsMessageFrameOffset();
    internal static string get_SSLCertThumbprintMissing();
    internal static string get_StreamDoesNotSupportTimeout();
    internal static string get_StreamError();
    internal static string get_SuppliedMessageIsNotAReplyItHasNoRelatesTo0();
    internal static string get_TcpConnectError();
    internal static string get_TcpConnectErrorWithTimeSpan();
    internal static string get_TcpConnectingToViaTimedOut();
    internal static string get_TcpConnectionResetError();
    internal static string get_TcpConnectionTimedOut();
    internal static string get_TcpConnectNoBufs();
    internal static string get_TcpLocalConnectionAborted();
    internal static string get_TcpTransferError();
    internal static string get_ThreadAcquisitionTimedOut();
    internal static string get_ThreadNeutralSemaphoreAborted();
    internal static string get_ThreadNeutralSemaphoreAsyncAbort();
    internal static string get_TimeoutOnOpen();
    internal static string get_TimeoutOnRequest();
    internal static string get_TimeSpanMustbeGreaterThanTimeSpanZero();
    internal static string get_TokenProviderEmptyAudience();
    internal static string get_TokenProviderEmptyExpiration();
    internal static string get_TokenProviderEmptyToken();
    internal static string get_TokenProviderFailedSecurityToken();
    internal static string get_TokenProviderInvalidTokenParameter();
    internal static string get_TokenProviderServiceUnavailable();
    internal static string get_TokenProviderTimeout();
    internal static string get_TraceCodeAppDomainUnload();
    internal static string get_TraceCodeCommunicationObjectAborted();
    internal static string get_TraceCodeCommunicationObjectAbortFailed();
    internal static string get_TraceCodeCommunicationObjectClosed();
    internal static string get_TraceCodeCommunicationObjectCloseFailed();
    internal static string get_TraceCodeCommunicationObjectClosing();
    internal static string get_TraceCodeCommunicationObjectFaulted();
    internal static string get_TraceCodeCommunicationObjectOpened();
    internal static string get_TraceCodeCommunicationObjectOpenFailed();
    internal static string get_TraceCodeCommunicationObjectOpening();
    internal static string get_TraceCodeConnectionPoolIdleTimeoutReached();
    internal static string get_TraceCodeConnectionPoolLeaseTimeoutReached();
    internal static string get_TraceCodeConnectionPoolMaxOutboundConnectionsPerEndpointQuotaReached();
    internal static string get_TraceCodeEventLog();
    internal static string get_TraceCodeFailedAcceptFromPool();
    internal static string get_TraceCodeServerMaxPooledConnectionsQuotaReached();
    internal static string get_TraceCodeTraceTruncatedQuotaExceeded();
    internal static string get_TraceCodeTransportListen();
    internal static string get_TransportManagerOpen();
    internal static string get_UnableToResolveHost();
    internal static string get_UnhandledException();
    internal static string get_UpgradeProtocolNotSupported();
    internal static string get_UpgradeRequestToNonupgradableService();
    internal static string get_UriGeneratorSchemeMustNotBeEmpty();
    internal static string get_UriLengthExceedsMaxSupportedSize();
    internal static string get_ValueMustBeInRange();
    internal static string get_ValueMustBeNonNegative();
    internal static string get_ValueMustBePositive();
    internal static string get_WaitForMessageTimedOut();
    internal static string get_WriteCharsInvalidContent();
}
public class Microsoft.Azure.NotificationHubs.PublicKeyConstants : object {
    private static string PublicKeyReleaseValue;
    private static string PublicKeyTestValue;
    public static string PublicKeyValue;
    public static string PublicKeyPhrase;
    public static string PublicTestKeyPhrase;
}
[DataContractAttribute]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.GcmRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.GcmTemplateRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.FcmRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.FcmTemplateRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.AppleRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.AppleTemplateRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.WindowsRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.WindowsTemplateRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.MpnsRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.MpnsTemplateRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.AdmRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.AdmTemplateRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.BaiduRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.BaiduTemplateRegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.FcmV1RegistrationDescription")]
[KnownTypeAttribute("Microsoft.Azure.NotificationHubs.FcmV1TemplateRegistrationDescription")]
public abstract class Microsoft.Azure.NotificationHubs.RegistrationDescription : EntityDescription {
    internal static string TemplateRegistrationType;
    internal static Regex SingleTagRegex;
    internal static Regex UserIdRegex;
    internal static Regex InstallationIdRegex;
    internal static String[] RegistrationRange;
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ExpirationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegistrationId>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <PushVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DbVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NotificationHubPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NotificationHubRuntimeUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private long <NotificationHubId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DatabaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstallationVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ChannelExpired>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InvalidTags>k__BackingField;
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    [DataMemberAttribute]
public string ETag { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> ExpirationTime { get; internal set; }
    [DataMemberAttribute]
public string RegistrationId { get; public set; }
    internal string TagsStringLightweight { get; internal set; }
    [DataMemberAttribute]
internal string TagsString { get; internal set; }
    [DataMemberAttribute]
internal string PropertyBagString { get; internal set; }
    public ISet`1<string> Tags { get; public set; }
    public IDictionary`2<string, string> PushVariables { get; public set; }
    internal string FormattedETag { get; }
    internal int DbVersion { get; internal set; }
    internal string NotificationHubPath { get; internal set; }
    internal string NotificationHubRuntimeUrl { get; internal set; }
    internal long NotificationHubId { get; internal set; }
    internal long DatabaseId { get; internal set; }
    internal string Namespace { get; internal set; }
    internal string InstallationVersion { get; internal set; }
    internal bool ChannelExpired { get; internal set; }
    public string PnsHandle { get; }
    internal bool InvalidTags { get; private set; }
    public RegistrationDescription(RegistrationDescription registration);
    internal RegistrationDescription(string notificationHubPath);
    internal RegistrationDescription(string notificationHubPath, string registrationId);
    private static RegistrationDescription();
    internal abstract virtual string get_AppPlatForm();
    internal abstract virtual string get_RegistrationType();
    internal abstract virtual string get_PlatformType();
    [CompilerGeneratedAttribute]
public string get_ETag();
    [CompilerGeneratedAttribute]
internal void set_ETag(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ExpirationTime();
    [CompilerGeneratedAttribute]
internal void set_ExpirationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_RegistrationId();
    [CompilerGeneratedAttribute]
public void set_RegistrationId(string value);
    internal string get_TagsStringLightweight();
    internal void set_TagsStringLightweight(string value);
    internal string get_TagsString();
    internal void set_TagsString(string value);
    internal string get_PropertyBagString();
    internal void set_PropertyBagString(string value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_PushVariables();
    [CompilerGeneratedAttribute]
public void set_PushVariables(IDictionary`2<string, string> value);
    internal string get_FormattedETag();
    [CompilerGeneratedAttribute]
internal int get_DbVersion();
    [CompilerGeneratedAttribute]
internal void set_DbVersion(int value);
    [CompilerGeneratedAttribute]
internal string get_NotificationHubPath();
    [CompilerGeneratedAttribute]
internal void set_NotificationHubPath(string value);
    [CompilerGeneratedAttribute]
internal string get_NotificationHubRuntimeUrl();
    [CompilerGeneratedAttribute]
internal void set_NotificationHubRuntimeUrl(string value);
    [CompilerGeneratedAttribute]
internal long get_NotificationHubId();
    [CompilerGeneratedAttribute]
internal void set_NotificationHubId(long value);
    [CompilerGeneratedAttribute]
internal long get_DatabaseId();
    [CompilerGeneratedAttribute]
internal void set_DatabaseId(long value);
    [CompilerGeneratedAttribute]
internal string get_Namespace();
    [CompilerGeneratedAttribute]
internal void set_Namespace(string value);
    [CompilerGeneratedAttribute]
internal string get_InstallationVersion();
    [CompilerGeneratedAttribute]
internal void set_InstallationVersion(string value);
    [CompilerGeneratedAttribute]
internal bool get_ChannelExpired();
    [CompilerGeneratedAttribute]
internal void set_ChannelExpired(bool value);
    internal abstract virtual string GetPnsHandle();
    internal abstract virtual void SetPnsHandle(string pnsHandle);
    internal abstract virtual RegistrationDescription Clone();
    public string get_PnsHandle();
    public static bool ValidateTags(string tags);
    public static int TagCount(string tags);
    public string Serialize();
    public static RegistrationDescription Deserialize(string descriptionString);
    internal void Validate(bool checkExpirationTime);
    internal virtual void OnValidate();
    [CompilerGeneratedAttribute]
internal bool get_InvalidTags();
    [CompilerGeneratedAttribute]
private void set_InvalidTags(bool value);
    private string GetTagsString();
    private void SetTagsString(string tagsString, bool validate);
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.RegistrationResult : object {
    [CompilerGeneratedAttribute]
private string <ApplicationPlatform>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PnsHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegistrationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Outcome>k__BackingField;
    [DataMemberAttribute]
public string ApplicationPlatform { get; public set; }
    [DataMemberAttribute]
public string PnsHandle { get; public set; }
    [DataMemberAttribute]
public string RegistrationId { get; public set; }
    [DataMemberAttribute]
public string Outcome { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ApplicationPlatform();
    [CompilerGeneratedAttribute]
public void set_ApplicationPlatform(string value);
    [CompilerGeneratedAttribute]
public string get_PnsHandle();
    [CompilerGeneratedAttribute]
public void set_PnsHandle(string value);
    [CompilerGeneratedAttribute]
public string get_RegistrationId();
    [CompilerGeneratedAttribute]
public void set_RegistrationId(string value);
    [CompilerGeneratedAttribute]
public string get_Outcome();
    [CompilerGeneratedAttribute]
public void set_Outcome(string value);
}
[ExtensionAttribute]
internal static class Microsoft.Azure.NotificationHubs.RegistrationSDKHelper : object {
    internal static int TemplateMaxLength;
    internal static void ValidateRegistration(RegistrationDescription registration);
    [ExtensionAttribute]
private static void SetMpnsType(MpnsTemplateRegistrationDescription registration);
    [ExtensionAttribute]
private static void SetWnsType(WindowsTemplateRegistrationDescription registration);
    private static void AddOrUpdateHeader(SortedDictionary`2<string, string> headers, string key, string value);
    public static WindowsTemplateBodyType DetectWindowsTemplateRegistationType(string body, string errorMsg);
    public static MpnsTemplateBodyType DetectMpnsTemplateRegistationType(string body, string errorMsg);
    public static string AddDeclarationToXml(string content);
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.ScheduledNotification : object {
    [CompilerGeneratedAttribute]
private Notification <Payload>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScheduledNotificationId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ScheduledTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TrackingId>k__BackingField;
    [DataMemberAttribute]
public Notification Payload { get; internal set; }
    [DataMemberAttribute]
public string ScheduledNotificationId { get; internal set; }
    [DataMemberAttribute]
public DateTimeOffset ScheduledTime { get; internal set; }
    [DataMemberAttribute]
public string Tags { get; internal set; }
    [DataMemberAttribute]
public string TrackingId { get; internal set; }
    [CompilerGeneratedAttribute]
public Notification get_Payload();
    [CompilerGeneratedAttribute]
internal void set_Payload(Notification value);
    [CompilerGeneratedAttribute]
public string get_ScheduledNotificationId();
    [CompilerGeneratedAttribute]
internal void set_ScheduledNotificationId(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ScheduledTime();
    [CompilerGeneratedAttribute]
internal void set_ScheduledTime(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_Tags();
    [CompilerGeneratedAttribute]
internal void set_Tags(string value);
    [CompilerGeneratedAttribute]
public string get_TrackingId();
    [CompilerGeneratedAttribute]
internal void set_TrackingId(string value);
}
internal class Microsoft.Azure.NotificationHubs.SR : Resources {
    internal static string GetString(string value, Object[] args);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.Azure.NotificationHubs.SRClient : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ActionMustBeProcessed { get; }
    internal static string AdmRegistrationIdInvalid { get; }
    internal static string AlreadyRunning { get; }
    internal static string ApnsCertificateExpired { get; }
    internal static string ApnsCertificateNotUsable { get; }
    internal static string ApnsCertificateNotValid { get; }
    internal static string ApnsCertificatePrivatekeyMissing { get; }
    internal static string ApnsCertificateRequiredPropertiesError { get; }
    internal static string ApnsEndpointNotAllowed { get; }
    internal static string ApnsEndpointNotSpecified { get; }
    internal static string ApnsExpiryHeaderDeserializationError { get; }
    internal static string ApnsHeaderDeserializationError { get; }
    internal static string ApnsPropertiesNotSpecified { get; }
    internal static string ApnsProvideOnlyOneCredentialType { get; }
    internal static string ApnsRequiredPropertiesError { get; }
    internal static string ApnsTokenPropertiesMissing { get; }
    internal static string AppSettingsConfigDuplicateSetting { get; }
    internal static string AppSettingsConfigIncompleteSettingCombination { get; }
    internal static string AppSettingsConfigMissingSetting { get; }
    internal static string AppSettingsConfigSettingInvalidKey { get; }
    internal static string AppSettingsConfigSettingInvalidValue { get; }
    internal static string AppSettingsCreateFactoryWithInvalidConnectionString { get; }
    internal static string AppSettingsCreateManagerWithInvalidConnectionString { get; }
    internal static string ArgumentInvalidCombination { get; }
    internal static string ArgumentOutOfRange { get; }
    internal static string ArgumentOutOfRangeLessThanOne { get; }
    internal static string AsyncResultDifferent { get; }
    internal static string AsyncResultInUse { get; }
    internal static string AsyncResultNotInUse { get; }
    internal static string BacklogDeadletterDescriptionNoQueuePath { get; }
    internal static string BacklogDeadletterDescriptionNotRetryable { get; }
    internal static string BacklogDeadletterReasonNoQueuePath { get; }
    internal static string BacklogDeadletterReasonNotRetryable { get; }
    internal static string BadUriFormat { get; }
    internal static string BaiduApiKeyNotSpecified { get; }
    internal static string BaiduEndpointNotSpecified { get; }
    internal static string BaiduRegistrationInvalidId { get; }
    internal static string BaiduRequiredProperties { get; }
    internal static string BaseAddressScheme { get; }
    internal static string BatchManagerAborted { get; }
    internal static string BeginGetWebTokenNotSupported { get; }
    internal static string BodyIsNotSupportedExpression { get; }
    internal static string BrokeredMessageApplicationProperties { get; }
    internal static string BrokeredMessageStreamNotCloneable { get; }
    internal static string BufferAlreadyReclaimed { get; }
    internal static string BufferedOutputStreamQuotaExceeded { get; }
    internal static string CannotCheckpointWithCurrentConsumerGroup { get; }
    internal static string CannotConvertFilterAction { get; }
    internal static string CannotConvertFilterExpression { get; }
    internal static string CannotCreateClientOnSubQueue { get; }
    internal static string CannotCreateMessageSessionForSubQueue { get; }
    internal static string CannotCreateReceiverWithDispatcher { get; }
    internal static string CannotFindTransactionResult { get; }
    internal static string CannotHaveDuplicateAccessRights { get; }
    internal static string CannotHaveDuplicateSAARule { get; }
    internal static string CannotSendAnEmptyEvent { get; }
    internal static string CannotSendReceivedMessage { get; }
    internal static string CannotSerializeMessageWithPartiallyConsumedBodyStream { get; }
    internal static string CannotSerializeSessionStateWithPartiallyConsumedStream { get; }
    internal static string CannotSpecifyExpirationTime { get; }
    internal static string CannotUseSameMessageInstanceInMultipleOperations { get; }
    internal static string ChannelTypeNotSupported { get; }
    internal static string ChannelUriNullOrEmpty { get; }
    internal static string ClientTargetHostAlreadySet { get; }
    internal static string ClientTargetHostServerCertificateNotSet { get; }
    internal static string CommunicationObjectFaulted { get; }
    internal static string ConfigInvalidBindingConfigurationName { get; }
    internal static string ConnectFailed { get; }
    internal static string ConnectFailedCommunicationException { get; }
    internal static string ConnectionStatusBehavior { get; }
    internal static string ConnectionStringWithInvalidScheme { get; }
    internal static string ConnectionTermination { get; }
    internal static string CreateSessionOnClosingConnection { get; }
    internal static string CreditListenerAlreadyRegistered { get; }
    internal static string DelimitedIdentifierNotTerminated { get; }
    internal static string DeviceTokenHexaDecimalDigitError { get; }
    internal static string DeviceTokenIsEmpty { get; }
    internal static string DispositionListenerAlreadyRegistered { get; }
    internal static string DispositionListenerSetNotSupported { get; }
    internal static string DominatingPropertyMustBeEqualsToNonNullDormantProperty { get; }
    internal static string DownstreamConnection { get; }
    internal static string DuplicateConnectionID { get; }
    internal static string DuplicateConnectionIDFault { get; }
    internal static string DuplicateHistoryExpiryTimeExceedsMaximumAllowed { get; }
    internal static string EmptyExpiryValue { get; }
    internal static string EmptyPriorityValue { get; }
    internal static string EmptyPropertyInCorrelationFilter { get; }
    internal static string EnabledAutoFlowCreditIssuing { get; }
    internal static string EndpointNotFound { get; }
    internal static string EndpointNotFoundFault { get; }
    internal static string EntityClosedOrAborted { get; }
    internal static string EntityNameLengthExceedsLimit { get; }
    internal static string EntityNameNotFound { get; }
    internal static string ErroConvertingToChar { get; }
    internal static string ErrorNoCotent { get; }
    internal static string EventDataDisposed { get; }
    internal static string EventHubPathMismatch { get; }
    internal static string EventHubUnsupportedOperation { get; }
    internal static string EventHubUnsupportedTransport { get; }
    internal static string ExceededMessagePropertySizeLimit { get; }
    internal static string ExpectedBytesNotRead { get; }
    internal static string ExpectedTypeInvalidCastException { get; }
    internal static string ExpiryDeserializationError { get; }
    internal static string ExpressionErrorParseDotFormat { get; }
    internal static string ExpressionErrorParsePercentFormat { get; }
    internal static string ExpressionHashInComposite { get; }
    internal static string ExpressionInvalidCompositionOperator { get; }
    internal static string ExpressionInvalidToken { get; }
    internal static string ExpressionInvalidTokenType { get; }
    internal static string ExpressionIsNotPositiveInteger { get; }
    internal static string ExpressionLiteralMissingClosingNotation { get; }
    internal static string ExpressionMissingClosingParentheses { get; }
    internal static string ExpressionMissingClosingParenthesesNoToken { get; }
    internal static string ExpressionMissingDefaultEnd { get; }
    internal static string ExpressionMissingOpenParentheses { get; }
    internal static string ExpressionMissingProperty { get; }
    internal static string ExtraParameterSpecifiedForSqlExpression { get; }
    internal static string FactoryEndpoint { get; }
    internal static string FailedToDeserializeBodyTemplate { get; }
    internal static string FailedToDeSerializeEntireBodyStream { get; }
    internal static string FailedToDeSerializeEntireSessionStateStream { get; }
    internal static string FailedToDeserializeUnsupportedProperty { get; }
    internal static string FailedToSerializeEntireBodyStream { get; }
    internal static string FailedToSerializeEntireSessionStateStream { get; }
    internal static string FailedToSerializeUnsupportedType { get; }
    internal static string FaultingPairedMessagingFactory { get; }
    internal static string FaultyEndpointResponse { get; }
    internal static string FCMRegistrationInvalidId { get; }
    internal static string FCMV1RegistrationInvalidId { get; }
    internal static string FeatureNotSupported { get; }
    internal static string FcmV1RequiredProperties { get; }
    internal static string FcmV1PrivateKeyNotSpecified { get; }
    internal static string FcmV1ProjectIdNotSpecified { get; }
    internal static string FcmV1ClientEmailNotSpecified { get; }
    internal static string FilterActionTooManyStatements { get; }
    internal static string FilterExpressionTooComplex { get; }
    internal static string FilterFunctionIncorrectNumberOfArguments { get; }
    internal static string FilterMustBeProcessed { get; }
    internal static string FilterScopeNotSupported { get; }
    internal static string FilterUnknownFunctionName { get; }
    internal static string GcmEndpointNotSpecified { get; }
    internal static string GCMRegistrationInvalidId { get; }
    internal static string GcmRequiredProperties { get; }
    internal static string GoogleApiKeyNotSpecified { get; }
    internal static string HTTPAuthTokenNotSupportedException { get; }
    internal static string HTTPConnectivityMode { get; }
    internal static string HttpServerAlreadyRunning { get; }
    internal static string IncompatibleChannelListener { get; }
    internal static string IncompatibleQueueExport { get; }
    internal static string IncompatibleTopicExport { get; }
    internal static string IncorrectContentTypeFault { get; }
    internal static string InputURIPath { get; }
    internal static string InternalServerError { get; }
    internal static string InvalidAddressPath { get; }
    internal static string InvalidAdmAuthTokenUrl { get; }
    internal static string InvalidAdmSendUrlTemplate { get; }
    internal static string InvalidBaiduEndpoint { get; }
    internal static string InvalidBatchFlushInterval { get; }
    internal static string InvalidBufferSize { get; }
    internal static string InvalidCallFaultException { get; }
    internal static string InvalidChannelType { get; }
    internal static string InvalidCharacterInEntityName { get; }
    internal static string InvalidCharactersInEntityName { get; }
    internal static string InvalidCombinationOfManageRight { get; }
    internal static string InvalidConfiguration { get; }
    internal static string InvalidDNSClaims { get; }
    internal static string InvalidElement { get; }
    internal static string InvalidEncoding { get; }
    internal static string InvalidEntityNameFormatWithSlash { get; }
    internal static string InvalidEventHubCheckpointSettings { get; }
    internal static string InvalidFrameSize { get; }
    internal static string InvalidGcmEndpoint { get; }
    internal static string InvalidID { get; }
    internal static string InvalidIssuerSecret { get; }
    internal static string InvalidLengthofReceivedContent { get; }
    internal static string InvalidManagementEntityType { get; }
    internal static string InvalidMethodWhilePeeking { get; }
    internal static string InvalidMpnsCertificate { get; }
    internal static string InvalidNokiaXEndpoint { get; }
    internal static string InvalidOperationOnSessionBrowser { get; }
    internal static string InvalidPayLoadFormat { get; }
    internal static string InvalidReceivedContent { get; }
    internal static string InvalidReceivedSessionId { get; }
    internal static string InvalidRefcountedCommunicationObject { get; }
    internal static string InvalidSchemeValue { get; }
    internal static string InvalidServiceNameSpace { get; }
    internal static string InvalidStateMachineRefcountedCommunicationObject { get; }
    internal static string InvalidSubQueueNameString { get; }
    internal static string InvalidToken { get; }
    internal static string InvalidUriScheme { get; }
    internal static string InvalidWindowsLiveEndpoint { get; }
    internal static string InvalidXmlFormat { get; }
    internal static string IOThreadTimerCannotAcceptMaxTimeSpan { get; }
    internal static string IsolationLevelNotSupported { get; }
    internal static string ITokenProviderType { get; }
    internal static string ListenerLengthArgumentOutOfRange { get; }
    internal static string LitteralMissing { get; }
    internal static string LockedMessageInfo { get; }
    internal static string LockTimeExceedsMaximumAllowed { get; }
    internal static string MaxConcurrentCallsMustBeGreaterThanZero { get; }
    internal static string MaximumAttemptsExceeded { get; }
    internal static string MaxRedirectsExceeded { get; }
    internal static string MessageAttributeGetMethodNotAccessible { get; }
    internal static string MessageAttributeSetMethodNotAccessible { get; }
    internal static string MessageBodyConsumed { get; }
    internal static string MessageBodyNull { get; }
    internal static string MessageEntityDisposed { get; }
    internal static string MessageEntityNotOpened { get; }
    internal static string MessageGetPropertyNotFound { get; }
    internal static string MessageHeaderRetrieval { get; }
    internal static string MessageIdIsNullOrEmptyOrOverMaxValue { get; }
    internal static string MessageListenerAlreadyRegistered { get; }
    internal static string MessageLockLost { get; }
    internal static string MessageSetPropertyNotFound { get; }
    internal static string MessageSizeExceeded { get; }
    internal static string MessagingCommunicationError { get; }
    internal static string MessagingEndpointCommunicationError { get; }
    internal static string MessagingEntityAlreadyExists { get; }
    internal static string MessagingEntityCouldNotBeFound { get; }
    internal static string MessagingEntityGone { get; }
    internal static string MessagingEntityIsDisabledException { get; }
    internal static string MessagingEntityIsDisabledForReceiveException { get; }
    internal static string MessagingEntityIsDisabledForSendException { get; }
    internal static string MessagingEntityMoved { get; }
    internal static string MessagingEntityRequestConflict { get; }
    internal static string MessagingEntityUpdateConflict { get; }
    internal static string MessagingPartitioningInvalidOperation { get; }
    internal static string MessagingPartitioningUnsupportedBatchingLockTockens { get; }
    internal static string MismatchedListSizeEncodedValueLength { get; }
    internal static string MismatchServiceBusDomain { get; }
    internal static string MissingMpnsHeader { get; }
    internal static string MissingWNSHeader { get; }
    internal static string MoreThanOneAddressCandidate { get; }
    internal static string MoreThanOneIPEndPoint { get; }
    internal static string MpnsCertificateError { get; }
    internal static string MpnsCertificateExpired { get; }
    internal static string MpnsCertificatePrivatekeyMissing { get; }
    internal static string MpnsHeaderIsNullOrEmpty { get; }
    internal static string MpnsInvalidPropeties { get; }
    internal static string MpnsRequiredPropertiesError { get; }
    internal static string MultipleConnectionModeAssertions { get; }
    internal static string MultipleResourceManagersNotSupported { get; }
    internal static string NoAddressesFound { get; }
    internal static string NoCorrelationForChannelMessageId { get; }
    internal static string NoCorrelationResponseForChannelMessageId { get; }
    internal static string NokiaXAuthorizationKeyNotSpecified { get; }
    internal static string NokiaXEndpointNotSpecified { get; }
    internal static string NokiaXRegistrationInvalidId { get; }
    internal static string NokiaXRequiredProperties { get; }
    internal static string NotificationHubNameLengthTooLong { get; }
    internal static string NotificationHubOperationNotAllowedForSKU { get; }
    internal static string NotSupportedCompatibilityLevel { get; }
    internal static string NotSupportedPropertyType { get; }
    internal static string NotSupportedTypeofChannel { get; }
    internal static string NotSupportedXMLFormatAsBodyTemplate { get; }
    internal static string NotSupportedXMLFormatAsBodyTemplateForMpns { get; }
    internal static string NotSupportedXMLFormatAsPayload { get; }
    internal static string NotSupportedXMLFormatAsPayloadForMpns { get; }
    internal static string NotSupportFrameCode { get; }
    internal static string NoValidHostAddress { get; }
    internal static string NullAppliesTo { get; }
    internal static string NullAsString { get; }
    internal static string NullEmptyRights { get; }
    internal static string NullHostname { get; }
    internal static string NullIssuerName { get; }
    internal static string NullIssuerSecret { get; }
    internal static string NullRawDataInToken { get; }
    internal static string NullResourceDescription { get; }
    internal static string NullResourceName { get; }
    internal static string NullRoot { get; }
    internal static string NullSAMLs { get; }
    internal static string NullServiceNameSpace { get; }
    internal static string NullSimpleWebToken { get; }
    internal static string ObjectIsReadOnly { get; }
    internal static string OnlyNPropertiesRequired { get; }
    internal static string OnMessageAlreadyCalled { get; }
    internal static string OpenChannelFailed { get; }
    internal static string OperationRequestTimedOut { get; }
    internal static string OverflowWhenAddingException { get; }
    internal static string PackageSidAndSecretKeyAreRequired { get; }
    internal static string PackageSidOrSecretKeyInvalid { get; }
    internal static string PairedNamespaceInvalidBacklogQueueCount { get; }
    internal static string PairedNamespaceMessagingFactoryAlreadyPaired { get; }
    internal static string PairedNamespaceMessagingFactoryInOptionsAlreadyPaired { get; }
    internal static string PairedNamespaceMessagingFactoyCannotBeChanged { get; }
    internal static string PairedNamespaceOnlyCallOnce { get; }
    internal static string PairedNamespacePrimaryAndSecondaryEqual { get; }
    internal static string PairedNamespacePrimaryEntityUnreachable { get; }
    internal static string PairedNamespacePropertyExtractionDlqDescription { get; }
    internal static string PairedNamespacePropertyExtractionDlqReason { get; }
    internal static string PairedNamespaceValidTimespanRange { get; }
    internal static string ParameterNotSpecifiedForSqlExpression { get; }
    internal static string PartitionedEntityViaSenderNeedsViaPatitionKey { get; }
    internal static string PartitionInvalidPartitionKey { get; }
    internal static string PartitionKeyMustBeEqualsToNonNullPublisher { get; }
    internal static string PartitionKeyMustBeEqualsToNonNullSessionId { get; }
    internal static string PathSegmentASCIICharacters { get; }
    internal static string PeekLockModeRequired { get; }
    internal static string PriorityDeserializationError { get; }
    internal static string PropertyInvalidCombination { get; }
    internal static string PropertyIsNullOrEmpty { get; }
    internal static string PropertyLengthError { get; }
    internal static string PropertyMustBeEqualOrLessThanOtherProperty { get; }
    internal static string PropertyNameError { get; }
    internal static string PropertyNameIsBad { get; }
    internal static string PropertyOverMaxValue { get; }
    internal static string PropertyReferenceUsedWithoutInitializes { get; }
    internal static string PropertyTooLong { get; }
    internal static string PropTokenNotAllowedInCompositeExpr { get; }
    internal static string PublisherMustBeEqualsToNonNullSessionId { get; }
    internal static string QueueProvisioningError { get; }
    internal static string QueueUnProvisioningError { get; }
    internal static string ReadNotSupported { get; }
    internal static string ReadOnlyPolicy { get; }
    internal static string ReceiveContextNull { get; }
    internal static string ReceivedCorrelationMessage { get; }
    internal static string RelayCertificateNotFound { get; }
    internal static string RequiredPropertiesNotSpecified { get; }
    internal static string RequiredPropertyNotSpecified { get; }
    internal static string ResponseHeaderRetrieval { get; }
    internal static string RuleCreationActionRequiresFilterTemplate { get; }
    internal static string SbmpTransport { get; }
    internal static string SeekNotSupported { get; }
    internal static string SendAvailabilityNoTransferQueuesCreated { get; }
    internal static string SentCorrelationMessage { get; }
    internal static string ServerCertificateAlreadySet { get; }
    internal static string ServerCertificateNotSet { get; }
    internal static string ServerDidNotReply { get; }
    internal static string ServerIsBusy { get; }
    internal static string SessionHandlerAlreadyRegistered { get; }
    internal static string SessionHandlerDoesNotHaveDefaultConstructor { get; }
    internal static string SessionHandlerMissingInterfaces { get; }
    internal static string SessionIdIsOverMaxValue { get; }
    internal static string SessionLockExpiredOnMessageSession { get; }
    internal static string SetTokenScopeNotSupported { get; }
    internal static string SqlFilterActionCannotRemoveSystemProperty { get; }
    internal static string SqlFilterActionStatmentTooLong { get; }
    internal static string SqlFilterReservedKeyword { get; }
    internal static string SqlFilterStatmentTooLong { get; }
    internal static string SqlSettingNotFound { get; }
    internal static string SQLSyntaxError { get; }
    internal static string SQLSyntaxErrorDetailed { get; }
    internal static string StreamClosed { get; }
    internal static string StringIsTooLong { get; }
    internal static string StringLiteralNotTerminated { get; }
    internal static string STSURIFormat { get; }
    internal static string SubscriptionProvisioningError { get; }
    internal static string SystemTrackerHeaderMissing { get; }
    internal static string SystemTrackerPropertyMissing { get; }
    internal static string TargetHostNotSet { get; }
    internal static string TemplateNameLengthExceedsLimit { get; }
    internal static string TimeoutExceeded { get; }
    internal static string TokenAudience { get; }
    internal static string TokenBeginError { get; }
    internal static string TokenExpiresOn { get; }
    internal static string TooManyMessageProperties { get; }
    internal static string TopicProvisioningError { get; }
    internal static string TopicUnProvisioningError { get; }
    internal static string TrackableExceptionMessageFormat { get; }
    internal static string TrackableHttpExceptionMessageFormat { get; }
    internal static string TrackingIdAndTimestampFormat { get; }
    internal static string TrackingIDHeaderMissing { get; }
    internal static string TrackingIDPropertyMissing { get; }
    internal static string TransactionPartitionKeyMissing { get; }
    internal static string TransportSecurity { get; }
    internal static string UnableToReach { get; }
    internal static string UnexpectedFormat { get; }
    internal static string UnexpectedSSL { get; }
    internal static string UnexpedtedURIHostName { get; }
    internal static string UnknownApiVersion { get; }
    internal static string UnknownRegistrationDescriptionType { get; }
    internal static string UnrecognizedCredentialType { get; }
    internal static string UnsupportedAction { get; }
    internal static string UnsupportedBatchingDistinctPartitionKey { get; }
    internal static string UnsupportedBatchingSequenceNumbersForDistinctPartitions { get; }
    internal static string UnsupportedChannelType { get; }
    internal static string UnsupportedChannelUri { get; }
    internal static string UnsupportedConnectivityMode { get; }
    internal static string UnsupportedDeDupBatchingDistinctPartitionKey { get; }
    internal static string UnsupportedEncodingType { get; }
    internal static string UnsupportedExpression { get; }
    internal static string UnsupportedGetClaim { get; }
    internal static string UnsupportedRight { get; }
    internal static string UnsupportedServiceBusDomainPrefix { get; }
    internal static string UpstreamConnection { get; }
    internal static string URIEndpoint { get; }
    internal static string URIServiceNameSpace { get; }
    internal static string UseOverloadWithBaseAddress { get; }
    internal static string ValueMustBeNonNegative { get; }
    internal static string ValueMustBePositive { get; }
    internal static string ValueVisibility { get; }
    internal static string WebStreamShutdown { get; }
    internal static string WNSHeaderNullOrEmpty { get; }
    internal static string X509CRLCheckFailed { get; }
    internal static string X509InUnTrustedStore { get; }
    internal static string X509InvalidUsageTime { get; }
    internal static string XMLContentReadFault { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ActionMustBeProcessed();
    internal static string get_AdmRegistrationIdInvalid();
    internal static string get_AlreadyRunning();
    internal static string get_ApnsCertificateExpired();
    internal static string get_ApnsCertificateNotUsable();
    internal static string get_ApnsCertificateNotValid();
    internal static string get_ApnsCertificatePrivatekeyMissing();
    internal static string get_ApnsCertificateRequiredPropertiesError();
    internal static string get_ApnsEndpointNotAllowed();
    internal static string get_ApnsEndpointNotSpecified();
    internal static string get_ApnsExpiryHeaderDeserializationError();
    internal static string get_ApnsHeaderDeserializationError();
    internal static string get_ApnsPropertiesNotSpecified();
    internal static string get_ApnsProvideOnlyOneCredentialType();
    internal static string get_ApnsRequiredPropertiesError();
    internal static string get_ApnsTokenPropertiesMissing();
    internal static string get_AppSettingsConfigDuplicateSetting();
    internal static string get_AppSettingsConfigIncompleteSettingCombination();
    internal static string get_AppSettingsConfigMissingSetting();
    internal static string get_AppSettingsConfigSettingInvalidKey();
    internal static string get_AppSettingsConfigSettingInvalidValue();
    internal static string get_AppSettingsCreateFactoryWithInvalidConnectionString();
    internal static string get_AppSettingsCreateManagerWithInvalidConnectionString();
    internal static string get_ArgumentInvalidCombination();
    internal static string get_ArgumentOutOfRange();
    internal static string get_ArgumentOutOfRangeLessThanOne();
    internal static string get_AsyncResultDifferent();
    internal static string get_AsyncResultInUse();
    internal static string get_AsyncResultNotInUse();
    internal static string get_BacklogDeadletterDescriptionNoQueuePath();
    internal static string get_BacklogDeadletterDescriptionNotRetryable();
    internal static string get_BacklogDeadletterReasonNoQueuePath();
    internal static string get_BacklogDeadletterReasonNotRetryable();
    internal static string get_BadUriFormat();
    internal static string get_BaiduApiKeyNotSpecified();
    internal static string get_BaiduEndpointNotSpecified();
    internal static string get_BaiduRegistrationInvalidId();
    internal static string get_BaiduRequiredProperties();
    internal static string get_BaseAddressScheme();
    internal static string get_BatchManagerAborted();
    internal static string get_BeginGetWebTokenNotSupported();
    internal static string get_BodyIsNotSupportedExpression();
    internal static string get_BrokeredMessageApplicationProperties();
    internal static string get_BrokeredMessageStreamNotCloneable();
    internal static string get_BufferAlreadyReclaimed();
    internal static string get_BufferedOutputStreamQuotaExceeded();
    internal static string get_CannotCheckpointWithCurrentConsumerGroup();
    internal static string get_CannotConvertFilterAction();
    internal static string get_CannotConvertFilterExpression();
    internal static string get_CannotCreateClientOnSubQueue();
    internal static string get_CannotCreateMessageSessionForSubQueue();
    internal static string get_CannotCreateReceiverWithDispatcher();
    internal static string get_CannotFindTransactionResult();
    internal static string get_CannotHaveDuplicateAccessRights();
    internal static string get_CannotHaveDuplicateSAARule();
    internal static string get_CannotSendAnEmptyEvent();
    internal static string get_CannotSendReceivedMessage();
    internal static string get_CannotSerializeMessageWithPartiallyConsumedBodyStream();
    internal static string get_CannotSerializeSessionStateWithPartiallyConsumedStream();
    internal static string get_CannotSpecifyExpirationTime();
    internal static string get_CannotUseSameMessageInstanceInMultipleOperations();
    internal static string get_ChannelTypeNotSupported();
    internal static string get_ChannelUriNullOrEmpty();
    internal static string get_ClientTargetHostAlreadySet();
    internal static string get_ClientTargetHostServerCertificateNotSet();
    internal static string get_CommunicationObjectFaulted();
    internal static string get_ConfigInvalidBindingConfigurationName();
    internal static string get_ConnectFailed();
    internal static string get_ConnectFailedCommunicationException();
    internal static string get_ConnectionStatusBehavior();
    internal static string get_ConnectionStringWithInvalidScheme();
    internal static string get_ConnectionTermination();
    internal static string get_CreateSessionOnClosingConnection();
    internal static string get_CreditListenerAlreadyRegistered();
    internal static string get_DelimitedIdentifierNotTerminated();
    internal static string get_DeviceTokenHexaDecimalDigitError();
    internal static string get_DeviceTokenIsEmpty();
    internal static string get_DispositionListenerAlreadyRegistered();
    internal static string get_DispositionListenerSetNotSupported();
    internal static string get_DominatingPropertyMustBeEqualsToNonNullDormantProperty();
    internal static string get_DownstreamConnection();
    internal static string get_DuplicateConnectionID();
    internal static string get_DuplicateConnectionIDFault();
    internal static string get_DuplicateHistoryExpiryTimeExceedsMaximumAllowed();
    internal static string get_EmptyExpiryValue();
    internal static string get_EmptyPriorityValue();
    internal static string get_EmptyPropertyInCorrelationFilter();
    internal static string get_EnabledAutoFlowCreditIssuing();
    internal static string get_EndpointNotFound();
    internal static string get_EndpointNotFoundFault();
    internal static string get_EntityClosedOrAborted();
    internal static string get_EntityNameLengthExceedsLimit();
    internal static string get_EntityNameNotFound();
    internal static string get_ErroConvertingToChar();
    internal static string get_ErrorNoCotent();
    internal static string get_EventDataDisposed();
    internal static string get_EventHubPathMismatch();
    internal static string get_EventHubUnsupportedOperation();
    internal static string get_EventHubUnsupportedTransport();
    internal static string get_ExceededMessagePropertySizeLimit();
    internal static string get_ExpectedBytesNotRead();
    internal static string get_ExpectedTypeInvalidCastException();
    internal static string get_ExpiryDeserializationError();
    internal static string get_ExpressionErrorParseDotFormat();
    internal static string get_ExpressionErrorParsePercentFormat();
    internal static string get_ExpressionHashInComposite();
    internal static string get_ExpressionInvalidCompositionOperator();
    internal static string get_ExpressionInvalidToken();
    internal static string get_ExpressionInvalidTokenType();
    internal static string get_ExpressionIsNotPositiveInteger();
    internal static string get_ExpressionLiteralMissingClosingNotation();
    internal static string get_ExpressionMissingClosingParentheses();
    internal static string get_ExpressionMissingClosingParenthesesNoToken();
    internal static string get_ExpressionMissingDefaultEnd();
    internal static string get_ExpressionMissingOpenParentheses();
    internal static string get_ExpressionMissingProperty();
    internal static string get_ExtraParameterSpecifiedForSqlExpression();
    internal static string get_FactoryEndpoint();
    internal static string get_FailedToDeserializeBodyTemplate();
    internal static string get_FailedToDeSerializeEntireBodyStream();
    internal static string get_FailedToDeSerializeEntireSessionStateStream();
    internal static string get_FailedToDeserializeUnsupportedProperty();
    internal static string get_FailedToSerializeEntireBodyStream();
    internal static string get_FailedToSerializeEntireSessionStateStream();
    internal static string get_FailedToSerializeUnsupportedType();
    internal static string get_FaultingPairedMessagingFactory();
    internal static string get_FaultyEndpointResponse();
    internal static string get_FCMRegistrationInvalidId();
    internal static string get_FCMV1RegistrationInvalidId();
    internal static string get_FeatureNotSupported();
    internal static string get_FcmV1RequiredProperties();
    internal static string get_FcmV1PrivateKeyNotSpecified();
    internal static string get_FcmV1ProjectIdNotSpecified();
    internal static string get_FcmV1ClientEmailNotSpecified();
    internal static string get_FilterActionTooManyStatements();
    internal static string get_FilterExpressionTooComplex();
    internal static string get_FilterFunctionIncorrectNumberOfArguments();
    internal static string get_FilterMustBeProcessed();
    internal static string get_FilterScopeNotSupported();
    internal static string get_FilterUnknownFunctionName();
    internal static string get_GcmEndpointNotSpecified();
    internal static string get_GCMRegistrationInvalidId();
    internal static string get_GcmRequiredProperties();
    internal static string get_GoogleApiKeyNotSpecified();
    internal static string get_HTTPAuthTokenNotSupportedException();
    internal static string get_HTTPConnectivityMode();
    internal static string get_HttpServerAlreadyRunning();
    internal static string get_IncompatibleChannelListener();
    internal static string get_IncompatibleQueueExport();
    internal static string get_IncompatibleTopicExport();
    internal static string get_IncorrectContentTypeFault();
    internal static string get_InputURIPath();
    internal static string get_InternalServerError();
    internal static string get_InvalidAddressPath();
    internal static string get_InvalidAdmAuthTokenUrl();
    internal static string get_InvalidAdmSendUrlTemplate();
    internal static string get_InvalidBaiduEndpoint();
    internal static string get_InvalidBatchFlushInterval();
    internal static string get_InvalidBufferSize();
    internal static string get_InvalidCallFaultException();
    internal static string get_InvalidChannelType();
    internal static string get_InvalidCharacterInEntityName();
    internal static string get_InvalidCharactersInEntityName();
    internal static string get_InvalidCombinationOfManageRight();
    internal static string get_InvalidConfiguration();
    internal static string get_InvalidDNSClaims();
    internal static string get_InvalidElement();
    internal static string get_InvalidEncoding();
    internal static string get_InvalidEntityNameFormatWithSlash();
    internal static string get_InvalidEventHubCheckpointSettings();
    internal static string get_InvalidFrameSize();
    internal static string get_InvalidGcmEndpoint();
    internal static string get_InvalidID();
    internal static string get_InvalidIssuerSecret();
    internal static string get_InvalidLengthofReceivedContent();
    internal static string get_InvalidManagementEntityType();
    internal static string get_InvalidMethodWhilePeeking();
    internal static string get_InvalidMpnsCertificate();
    internal static string get_InvalidNokiaXEndpoint();
    internal static string get_InvalidOperationOnSessionBrowser();
    internal static string get_InvalidPayLoadFormat();
    internal static string get_InvalidReceivedContent();
    internal static string get_InvalidReceivedSessionId();
    internal static string get_InvalidRefcountedCommunicationObject();
    internal static string get_InvalidSchemeValue();
    internal static string get_InvalidServiceNameSpace();
    internal static string get_InvalidStateMachineRefcountedCommunicationObject();
    internal static string get_InvalidSubQueueNameString();
    internal static string get_InvalidToken();
    internal static string get_InvalidUriScheme();
    internal static string get_InvalidWindowsLiveEndpoint();
    internal static string get_InvalidXmlFormat();
    internal static string get_IOThreadTimerCannotAcceptMaxTimeSpan();
    internal static string get_IsolationLevelNotSupported();
    internal static string get_ITokenProviderType();
    internal static string get_ListenerLengthArgumentOutOfRange();
    internal static string get_LitteralMissing();
    internal static string get_LockedMessageInfo();
    internal static string get_LockTimeExceedsMaximumAllowed();
    internal static string get_MaxConcurrentCallsMustBeGreaterThanZero();
    internal static string get_MaximumAttemptsExceeded();
    internal static string get_MaxRedirectsExceeded();
    internal static string get_MessageAttributeGetMethodNotAccessible();
    internal static string get_MessageAttributeSetMethodNotAccessible();
    internal static string get_MessageBodyConsumed();
    internal static string get_MessageBodyNull();
    internal static string get_MessageEntityDisposed();
    internal static string get_MessageEntityNotOpened();
    internal static string get_MessageGetPropertyNotFound();
    internal static string get_MessageHeaderRetrieval();
    internal static string get_MessageIdIsNullOrEmptyOrOverMaxValue();
    internal static string get_MessageListenerAlreadyRegistered();
    internal static string get_MessageLockLost();
    internal static string get_MessageSetPropertyNotFound();
    internal static string get_MessageSizeExceeded();
    internal static string get_MessagingCommunicationError();
    internal static string get_MessagingEndpointCommunicationError();
    internal static string get_MessagingEntityAlreadyExists();
    internal static string get_MessagingEntityCouldNotBeFound();
    internal static string get_MessagingEntityGone();
    internal static string get_MessagingEntityIsDisabledException();
    internal static string get_MessagingEntityIsDisabledForReceiveException();
    internal static string get_MessagingEntityIsDisabledForSendException();
    internal static string get_MessagingEntityMoved();
    internal static string get_MessagingEntityRequestConflict();
    internal static string get_MessagingEntityUpdateConflict();
    internal static string get_MessagingPartitioningInvalidOperation();
    internal static string get_MessagingPartitioningUnsupportedBatchingLockTockens();
    internal static string get_MismatchedListSizeEncodedValueLength();
    internal static string get_MismatchServiceBusDomain();
    internal static string get_MissingMpnsHeader();
    internal static string get_MissingWNSHeader();
    internal static string get_MoreThanOneAddressCandidate();
    internal static string get_MoreThanOneIPEndPoint();
    internal static string get_MpnsCertificateError();
    internal static string get_MpnsCertificateExpired();
    internal static string get_MpnsCertificatePrivatekeyMissing();
    internal static string get_MpnsHeaderIsNullOrEmpty();
    internal static string get_MpnsInvalidPropeties();
    internal static string get_MpnsRequiredPropertiesError();
    internal static string get_MultipleConnectionModeAssertions();
    internal static string get_MultipleResourceManagersNotSupported();
    internal static string get_NoAddressesFound();
    internal static string get_NoCorrelationForChannelMessageId();
    internal static string get_NoCorrelationResponseForChannelMessageId();
    internal static string get_NokiaXAuthorizationKeyNotSpecified();
    internal static string get_NokiaXEndpointNotSpecified();
    internal static string get_NokiaXRegistrationInvalidId();
    internal static string get_NokiaXRequiredProperties();
    internal static string get_NotificationHubNameLengthTooLong();
    internal static string get_NotificationHubOperationNotAllowedForSKU();
    internal static string get_NotSupportedCompatibilityLevel();
    internal static string get_NotSupportedPropertyType();
    internal static string get_NotSupportedTypeofChannel();
    internal static string get_NotSupportedXMLFormatAsBodyTemplate();
    internal static string get_NotSupportedXMLFormatAsBodyTemplateForMpns();
    internal static string get_NotSupportedXMLFormatAsPayload();
    internal static string get_NotSupportedXMLFormatAsPayloadForMpns();
    internal static string get_NotSupportFrameCode();
    internal static string get_NoValidHostAddress();
    internal static string get_NullAppliesTo();
    internal static string get_NullAsString();
    internal static string get_NullEmptyRights();
    internal static string get_NullHostname();
    internal static string get_NullIssuerName();
    internal static string get_NullIssuerSecret();
    internal static string get_NullRawDataInToken();
    internal static string get_NullResourceDescription();
    internal static string get_NullResourceName();
    internal static string get_NullRoot();
    internal static string get_NullSAMLs();
    internal static string get_NullServiceNameSpace();
    internal static string get_NullSimpleWebToken();
    internal static string get_ObjectIsReadOnly();
    internal static string get_OnlyNPropertiesRequired();
    internal static string get_OnMessageAlreadyCalled();
    internal static string get_OpenChannelFailed();
    internal static string get_OperationRequestTimedOut();
    internal static string get_OverflowWhenAddingException();
    internal static string get_PackageSidAndSecretKeyAreRequired();
    internal static string get_PackageSidOrSecretKeyInvalid();
    internal static string get_PairedNamespaceInvalidBacklogQueueCount();
    internal static string get_PairedNamespaceMessagingFactoryAlreadyPaired();
    internal static string get_PairedNamespaceMessagingFactoryInOptionsAlreadyPaired();
    internal static string get_PairedNamespaceMessagingFactoyCannotBeChanged();
    internal static string get_PairedNamespaceOnlyCallOnce();
    internal static string get_PairedNamespacePrimaryAndSecondaryEqual();
    internal static string get_PairedNamespacePrimaryEntityUnreachable();
    internal static string get_PairedNamespacePropertyExtractionDlqDescription();
    internal static string get_PairedNamespacePropertyExtractionDlqReason();
    internal static string get_PairedNamespaceValidTimespanRange();
    internal static string get_ParameterNotSpecifiedForSqlExpression();
    internal static string get_PartitionedEntityViaSenderNeedsViaPatitionKey();
    internal static string get_PartitionInvalidPartitionKey();
    internal static string get_PartitionKeyMustBeEqualsToNonNullPublisher();
    internal static string get_PartitionKeyMustBeEqualsToNonNullSessionId();
    internal static string get_PathSegmentASCIICharacters();
    internal static string get_PeekLockModeRequired();
    internal static string get_PriorityDeserializationError();
    internal static string get_PropertyInvalidCombination();
    internal static string get_PropertyIsNullOrEmpty();
    internal static string get_PropertyLengthError();
    internal static string get_PropertyMustBeEqualOrLessThanOtherProperty();
    internal static string get_PropertyNameError();
    internal static string get_PropertyNameIsBad();
    internal static string get_PropertyOverMaxValue();
    internal static string get_PropertyReferenceUsedWithoutInitializes();
    internal static string get_PropertyTooLong();
    internal static string get_PropTokenNotAllowedInCompositeExpr();
    internal static string get_PublisherMustBeEqualsToNonNullSessionId();
    internal static string get_QueueProvisioningError();
    internal static string get_QueueUnProvisioningError();
    internal static string get_ReadNotSupported();
    internal static string get_ReadOnlyPolicy();
    internal static string get_ReceiveContextNull();
    internal static string get_ReceivedCorrelationMessage();
    internal static string get_RelayCertificateNotFound();
    internal static string get_RequiredPropertiesNotSpecified();
    internal static string get_RequiredPropertyNotSpecified();
    internal static string get_ResponseHeaderRetrieval();
    internal static string get_RuleCreationActionRequiresFilterTemplate();
    internal static string get_SbmpTransport();
    internal static string get_SeekNotSupported();
    internal static string get_SendAvailabilityNoTransferQueuesCreated();
    internal static string get_SentCorrelationMessage();
    internal static string get_ServerCertificateAlreadySet();
    internal static string get_ServerCertificateNotSet();
    internal static string get_ServerDidNotReply();
    internal static string get_ServerIsBusy();
    internal static string get_SessionHandlerAlreadyRegistered();
    internal static string get_SessionHandlerDoesNotHaveDefaultConstructor();
    internal static string get_SessionHandlerMissingInterfaces();
    internal static string get_SessionIdIsOverMaxValue();
    internal static string get_SessionLockExpiredOnMessageSession();
    internal static string get_SetTokenScopeNotSupported();
    internal static string get_SqlFilterActionCannotRemoveSystemProperty();
    internal static string get_SqlFilterActionStatmentTooLong();
    internal static string get_SqlFilterReservedKeyword();
    internal static string get_SqlFilterStatmentTooLong();
    internal static string get_SqlSettingNotFound();
    internal static string get_SQLSyntaxError();
    internal static string get_SQLSyntaxErrorDetailed();
    internal static string get_StreamClosed();
    internal static string get_StringIsTooLong();
    internal static string get_StringLiteralNotTerminated();
    internal static string get_STSURIFormat();
    internal static string get_SubscriptionProvisioningError();
    internal static string get_SystemTrackerHeaderMissing();
    internal static string get_SystemTrackerPropertyMissing();
    internal static string get_TargetHostNotSet();
    internal static string get_TemplateNameLengthExceedsLimit();
    internal static string get_TimeoutExceeded();
    internal static string get_TokenAudience();
    internal static string get_TokenBeginError();
    internal static string get_TokenExpiresOn();
    internal static string get_TooManyMessageProperties();
    internal static string get_TopicProvisioningError();
    internal static string get_TopicUnProvisioningError();
    internal static string get_TrackableExceptionMessageFormat();
    internal static string get_TrackableHttpExceptionMessageFormat();
    internal static string get_TrackingIdAndTimestampFormat();
    internal static string get_TrackingIDHeaderMissing();
    internal static string get_TrackingIDPropertyMissing();
    internal static string get_TransactionPartitionKeyMissing();
    internal static string get_TransportSecurity();
    internal static string get_UnableToReach();
    internal static string get_UnexpectedFormat();
    internal static string get_UnexpectedSSL();
    internal static string get_UnexpedtedURIHostName();
    internal static string get_UnknownApiVersion();
    internal static string get_UnknownRegistrationDescriptionType();
    internal static string get_UnrecognizedCredentialType();
    internal static string get_UnsupportedAction();
    internal static string get_UnsupportedBatchingDistinctPartitionKey();
    internal static string get_UnsupportedBatchingSequenceNumbersForDistinctPartitions();
    internal static string get_UnsupportedChannelType();
    internal static string get_UnsupportedChannelUri();
    internal static string get_UnsupportedConnectivityMode();
    internal static string get_UnsupportedDeDupBatchingDistinctPartitionKey();
    internal static string get_UnsupportedEncodingType();
    internal static string get_UnsupportedExpression();
    internal static string get_UnsupportedGetClaim();
    internal static string get_UnsupportedRight();
    internal static string get_UnsupportedServiceBusDomainPrefix();
    internal static string get_UpstreamConnection();
    internal static string get_URIEndpoint();
    internal static string get_URIServiceNameSpace();
    internal static string get_UseOverloadWithBaseAddress();
    internal static string get_ValueMustBeNonNegative();
    internal static string get_ValueMustBePositive();
    internal static string get_ValueVisibility();
    internal static string get_WebStreamShutdown();
    internal static string get_WNSHeaderNullOrEmpty();
    internal static string get_X509CRLCheckFailed();
    internal static string get_X509InUnTrustedStore();
    internal static string get_X509InvalidUsageTime();
    internal static string get_XMLContentReadFault();
}
public class Microsoft.Azure.NotificationHubs.TemplateNotification : Notification {
    private static string contentType;
    private IDictionary`2<string, string> templateProperties;
    protected string PlatformType { get; }
    public TemplateNotification(IDictionary`2<string, string> templateProperties);
    [ObsoleteAttribute("This method is obsolete.")]
public TemplateNotification(IDictionary`2<string, string> templateProperties, string tag);
    private static TemplateNotification();
    protected virtual string get_PlatformType();
    protected virtual void OnValidateAndPopulateHeaders();
}
public enum Microsoft.Azure.NotificationHubs.UpdateOperationType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static UpdateOperationType Add;
    [EnumMemberAttribute]
public static UpdateOperationType Remove;
    [EnumMemberAttribute]
public static UpdateOperationType Replace;
}
public class Microsoft.Azure.NotificationHubs.WindowsInstallation : Installation {
    public WindowsInstallation(string installationId, string channelUri);
}
public class Microsoft.Azure.NotificationHubs.WindowsNotification : Notification {
    private static string contentType;
    private static string WnsTypeName;
    private static string Raw;
    private static string Badge;
    private static string Tile;
    private static string Toast;
    protected string PlatformType { get; }
    public WindowsNotification(XmlDocument payLoad);
    public WindowsNotification(string payLoad);
    public WindowsNotification(XmlDocument payLoad, IDictionary`2<string, string> wnsHeaders);
    public WindowsNotification(string payLoad, IDictionary`2<string, string> wnsHeaders);
    [ObsoleteAttribute("This method is obsolete.")]
public WindowsNotification(XmlDocument payLoad, string tag);
    [ObsoleteAttribute("This method is obsolete.")]
public WindowsNotification(string payLoad, string tag);
    [ObsoleteAttribute("This method is obsolete.")]
public WindowsNotification(XmlDocument payLoad, IDictionary`2<string, string> wnsHeaders, string tag);
    [ObsoleteAttribute("This method is obsolete.")]
public WindowsNotification(string payLoad, IDictionary`2<string, string> wnsHeaders, string tag);
    protected virtual string get_PlatformType();
    protected virtual void OnValidateAndPopulateHeaders();
    private void AddNotificationTypeHeader(WindowsTemplateBodyType bodyType);
}
public class Microsoft.Azure.NotificationHubs.WindowsPhoneInstallation : Installation {
    public WindowsPhoneInstallation(string installationId, string channelUri);
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.WindowsRegistrationDescription : RegistrationDescription {
    internal static string Type;
    internal static string Raw;
    internal static string Badge;
    internal static string Tile;
    internal static string Toast;
    [CompilerGeneratedAttribute]
private Uri <ChannelUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecondaryTileName>k__BackingField;
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    [DataMemberAttribute]
public Uri ChannelUri { get; public set; }
    [DataMemberAttribute]
public string SecondaryTileName { get; public set; }
    public WindowsRegistrationDescription(string channelUri);
    public WindowsRegistrationDescription(string channelUri, IEnumerable`1<string> tags);
    public WindowsRegistrationDescription(Uri channelUri);
    public WindowsRegistrationDescription(Uri channelUri, IEnumerable`1<string> tags);
    public WindowsRegistrationDescription(WindowsRegistrationDescription sourceRegistration);
    internal WindowsRegistrationDescription(string notificationHubPath, string channelUri, IEnumerable`1<string> tags);
    internal WindowsRegistrationDescription(string notificationHubPath, Uri channelUri, IEnumerable`1<string> tags);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    [CompilerGeneratedAttribute]
public Uri get_ChannelUri();
    [CompilerGeneratedAttribute]
public void set_ChannelUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_SecondaryTileName();
    [CompilerGeneratedAttribute]
public void set_SecondaryTileName(string value);
    internal virtual void OnValidate();
    internal virtual string GetPnsHandle();
    internal virtual void SetPnsHandle(string pnsHandle);
    internal virtual RegistrationDescription Clone();
}
internal enum Microsoft.Azure.NotificationHubs.WindowsTemplateBodyType : Enum {
    public int value__;
    public static WindowsTemplateBodyType Toast;
    public static WindowsTemplateBodyType Tile;
    public static WindowsTemplateBodyType Badge;
    public static WindowsTemplateBodyType Raw;
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.WindowsTemplateRegistrationDescription : WindowsRegistrationDescription {
    [CompilerGeneratedAttribute]
private CDataMember <BodyTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private WnsHeaderCollection <WnsHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <ExpressionStartIndices>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <ExpressionLengths>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Expressions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TemplateName>k__BackingField;
    internal string AppPlatForm { get; }
    internal string RegistrationType { get; }
    internal string PlatformType { get; }
    [DataMemberAttribute]
public CDataMember BodyTemplate { get; public set; }
    [DataMemberAttribute]
public WnsHeaderCollection WnsHeaders { get; public set; }
    internal List`1<int> ExpressionStartIndices { get; internal set; }
    internal List`1<int> ExpressionLengths { get; internal set; }
    internal List`1<string> Expressions { get; internal set; }
    [DataMemberAttribute]
public string TemplateName { get; public set; }
    public WindowsTemplateRegistrationDescription(WindowsTemplateRegistrationDescription sourceRegistration);
    public WindowsTemplateRegistrationDescription(Uri channelUri);
    public WindowsTemplateRegistrationDescription(Uri channelUri, string templatePayload);
    public WindowsTemplateRegistrationDescription(Uri channelUri, XmlDocument xmlTemplate);
    public WindowsTemplateRegistrationDescription(Uri channelUri, string templatePayload, IDictionary`2<string, string> wnsHeaders);
    public WindowsTemplateRegistrationDescription(Uri channelUri, string templatePayload, IEnumerable`1<string> tags);
    public WindowsTemplateRegistrationDescription(Uri channelUri, string templatePayload, IDictionary`2<string, string> wnsHeaders, IEnumerable`1<string> tags);
    public WindowsTemplateRegistrationDescription(string channelUri);
    public WindowsTemplateRegistrationDescription(string channelUri, string templatePayload);
    public WindowsTemplateRegistrationDescription(string channelUri, XmlDocument xmlTemplate);
    public WindowsTemplateRegistrationDescription(string channelUri, string templatePayload, IDictionary`2<string, string> wnsHeaders);
    public WindowsTemplateRegistrationDescription(string channelUri, string templatePayload, IEnumerable`1<string> tags);
    public WindowsTemplateRegistrationDescription(string channelUri, string templatePayload, IDictionary`2<string, string> wnsHeaders, IEnumerable`1<string> tags);
    internal WindowsTemplateRegistrationDescription(string notificationHubPath, string channelUri, string templatePayload, IDictionary`2<string, string> wnsHeaders, IEnumerable`1<string> tags);
    internal WindowsTemplateRegistrationDescription(string notificationHubPath, Uri channelUri, string templatePayload, IDictionary`2<string, string> wnsHeaders, IEnumerable`1<string> tags);
    internal virtual string get_AppPlatForm();
    internal virtual string get_RegistrationType();
    internal virtual string get_PlatformType();
    [CompilerGeneratedAttribute]
public CDataMember get_BodyTemplate();
    [CompilerGeneratedAttribute]
public void set_BodyTemplate(CDataMember value);
    [CompilerGeneratedAttribute]
public WnsHeaderCollection get_WnsHeaders();
    [CompilerGeneratedAttribute]
public void set_WnsHeaders(WnsHeaderCollection value);
    [CompilerGeneratedAttribute]
internal List`1<int> get_ExpressionStartIndices();
    [CompilerGeneratedAttribute]
internal void set_ExpressionStartIndices(List`1<int> value);
    [CompilerGeneratedAttribute]
internal List`1<int> get_ExpressionLengths();
    [CompilerGeneratedAttribute]
internal void set_ExpressionLengths(List`1<int> value);
    [CompilerGeneratedAttribute]
internal List`1<string> get_Expressions();
    [CompilerGeneratedAttribute]
internal void set_Expressions(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_TemplateName();
    [CompilerGeneratedAttribute]
public void set_TemplateName(string value);
    internal virtual void OnValidate();
    internal virtual RegistrationDescription Clone();
    internal bool IsXmlPayLoad();
    internal bool IsJsonObjectPayLoad();
    private void ValidateTemplateName();
    private void ValidateWnsHeaders();
    private void ValidateXmlPayLoad();
    private void ValidateJsonPayLoad();
    private void AddExpression(string expression, string escapedExpression, IDictionary`2<string, int> expressionToIndexMap);
}
[DataContractAttribute]
public class Microsoft.Azure.NotificationHubs.WnsCredential : PnsCredential {
    internal static string AppPlatformName;
    internal static string ProdAccessTokenServiceUrl;
    internal string AppPlatform { get; }
    public string PackageSid { get; public set; }
    public string SecretKey { get; public set; }
    public string WindowsLiveEndpoint { get; public set; }
    public WnsCredential(string packageSid, string secretKey);
    internal virtual string get_AppPlatform();
    public string get_PackageSid();
    public void set_PackageSid(string value);
    public string get_SecretKey();
    public void set_SecretKey(string value);
    public string get_WindowsLiveEndpoint();
    public void set_WindowsLiveEndpoint(string value);
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
    protected virtual void OnValidate(bool allowLocalMockPns);
}
[CollectionDataContractAttribute]
public class Microsoft.Azure.NotificationHubs.WnsHeaderCollection : SortedDictionary`2<string, string> {
}
[JsonObjectAttribute]
public class Microsoft.Azure.NotificationHubs.WnsSecondaryTile : object {
    [CompilerGeneratedAttribute]
private string <PushChannel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PushChannelExpired>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, InstallationTemplate> <Templates>k__BackingField;
    [JsonPropertyAttribute]
public string PushChannel { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> PushChannelExpired { get; public set; }
    [JsonPropertyAttribute]
public IList`1<string> Tags { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, InstallationTemplate> Templates { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PushChannel();
    [CompilerGeneratedAttribute]
public void set_PushChannel(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_PushChannelExpired();
    [CompilerGeneratedAttribute]
public void set_PushChannelExpired(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, InstallationTemplate> get_Templates();
    [CompilerGeneratedAttribute]
public void set_Templates(IDictionary`2<string, InstallationTemplate> value);
    internal string ToJson();
}
