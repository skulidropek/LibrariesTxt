public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.ActivityFunctionCall : object {
    [CompilerGeneratedAttribute]
private string <FunctionName>k__BackingField;
    [CompilerGeneratedAttribute]
private SyntaxNode <NameNode>k__BackingField;
    [CompilerGeneratedAttribute]
private SyntaxNode <InputNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeSymbol <InputType>k__BackingField;
    [CompilerGeneratedAttribute]
private SyntaxNode <ReturnTypeNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeSymbol <ReturnType>k__BackingField;
    [CompilerGeneratedAttribute]
private SyntaxNode <InvocationExpression>k__BackingField;
    public string FunctionName { get; public set; }
    public SyntaxNode NameNode { get; public set; }
    public SyntaxNode InputNode { get; public set; }
    public ITypeSymbol InputType { get; public set; }
    public SyntaxNode ReturnTypeNode { get; public set; }
    public ITypeSymbol ReturnType { get; public set; }
    public SyntaxNode InvocationExpression { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FunctionName();
    [CompilerGeneratedAttribute]
public void set_FunctionName(string value);
    [CompilerGeneratedAttribute]
public SyntaxNode get_NameNode();
    [CompilerGeneratedAttribute]
public void set_NameNode(SyntaxNode value);
    [CompilerGeneratedAttribute]
public SyntaxNode get_InputNode();
    [CompilerGeneratedAttribute]
public void set_InputNode(SyntaxNode value);
    [CompilerGeneratedAttribute]
public ITypeSymbol get_InputType();
    [CompilerGeneratedAttribute]
public void set_InputType(ITypeSymbol value);
    [CompilerGeneratedAttribute]
public SyntaxNode get_ReturnTypeNode();
    [CompilerGeneratedAttribute]
public void set_ReturnTypeNode(SyntaxNode value);
    [CompilerGeneratedAttribute]
public ITypeSymbol get_ReturnType();
    [CompilerGeneratedAttribute]
public void set_ReturnType(ITypeSymbol value);
    [CompilerGeneratedAttribute]
public SyntaxNode get_InvocationExpression();
    [CompilerGeneratedAttribute]
public void set_InvocationExpression(SyntaxNode value);
}
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.ActivityFunctionDefinition : object {
    [CompilerGeneratedAttribute]
private string <FunctionName>k__BackingField;
    [CompilerGeneratedAttribute]
private SyntaxNode <ParameterNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeSymbol <InputType>k__BackingField;
    [CompilerGeneratedAttribute]
private SyntaxNode <ReturnTypeNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeSymbol <ReturnType>k__BackingField;
    public string FunctionName { get; public set; }
    public SyntaxNode ParameterNode { get; public set; }
    public ITypeSymbol InputType { get; public set; }
    public SyntaxNode ReturnTypeNode { get; public set; }
    public ITypeSymbol ReturnType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FunctionName();
    [CompilerGeneratedAttribute]
public void set_FunctionName(string value);
    [CompilerGeneratedAttribute]
public SyntaxNode get_ParameterNode();
    [CompilerGeneratedAttribute]
public void set_ParameterNode(SyntaxNode value);
    [CompilerGeneratedAttribute]
public ITypeSymbol get_InputType();
    [CompilerGeneratedAttribute]
public void set_InputType(ITypeSymbol value);
    [CompilerGeneratedAttribute]
public SyntaxNode get_ReturnTypeNode();
    [CompilerGeneratedAttribute]
public void set_ReturnTypeNode(SyntaxNode value);
    [CompilerGeneratedAttribute]
public ITypeSymbol get_ReturnType();
    [CompilerGeneratedAttribute]
public void set_ReturnType(ITypeSymbol value);
}
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.ArgumentAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MismatchMessageFormat;
    private static LocalizableString InputNotUsedMessageFormat;
    private static LocalizableString InvalidNullMessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor MismatchRule;
    public static DiagnosticDescriptor InputNotUsedRule;
    public static DiagnosticDescriptor InvalidNullRule;
    private static ArgumentAnalyzer();
    public static void ReportProblems(CompilationAnalysisContext context, IEnumerable`1<ActivityFunctionDefinition> functionDefinitions, IEnumerable`1<ActivityFunctionCall> functionInvocations);
    private static bool DefinitionInputIsNonNullableValueType(ActivityFunctionDefinition definition);
    private static bool DefinitionInputIsNotUsed(ActivityFunctionDefinition definition);
    private static bool IsValidArgumentForDefinition(ActivityFunctionCall invocation, ActivityFunctionDefinition definition);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.BindingAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private static BindingAnalyzer();
    public static bool RegisterDiagnostic(CompilationAnalysisContext context, SemanticModel semanticModel, SyntaxNode method);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.CancellationTokenAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private static CancellationTokenAnalyzer();
    public static bool RegisterDiagnostic(CompilationAnalysisContext context, SyntaxNode method);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.ClassNameAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString CloseMessageFormat;
    private static LocalizableString MissingMessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    private List`1<string> classNames;
    private List`1<SyntaxNode> entityTriggerAttributes;
    public static DiagnosticDescriptor ClassNameCloseRule;
    public static DiagnosticDescriptor ClassNameMissingRule;
    public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static ClassNameAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void ReportDiagnostics(CompilationAnalysisContext context);
    private void FindClassDeclaration(SyntaxNodeAnalysisContext context);
    private void FindEntityTrigger(SyntaxNodeAnalysisContext context);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.ClientAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static LocalizableString V1Title;
    private static LocalizableString V1MessageFormat;
    private static LocalizableString V1Description;
    private static LocalizableString V2Title;
    private static LocalizableString V2MessageFormat;
    private static LocalizableString V2Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    private static DiagnosticDescriptor V1Rule;
    private static DiagnosticDescriptor V2Rule;
    private static DurableVersion version;
    public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static ClientAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    public void FindEntityTriggers(SyntaxNodeAnalysisContext context);
    private bool AttributeMatchesVersionClientBinding(AttributeSyntax attribute);
    private bool TryGetRuleFromVersion(DiagnosticDescriptor& rule);
    private bool ParameterTypeIsCorrectDurableType(SyntaxNode parameterNode);
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.ClientCodeFixProvider : CodeFixProvider {
    private static LocalizableString FixIDurableClient;
    private static LocalizableString FixIDurableEntityClient;
    private static LocalizableString FixIDurableOrchestrationClient;
    private static LocalizableString FixDurableOrchestrationClient;
    public ImmutableArray`1<string> FixableDiagnosticIds { get; }
    private static ClientCodeFixProvider();
    public sealed virtual ImmutableArray`1<string> get_FixableDiagnosticIds();
    public sealed virtual FixAllProvider GetFixAllProvider();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.ClientCodeFixProvider/<RegisterCodeFixesAsync>d__7")]
public sealed virtual Task RegisterCodeFixesAsync(CodeFixContext context);
}
public static class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.CodeFixProviderUtils : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.CodeFixProviderUtils/<ReplaceWithIdentifierAsync>d__0")]
public static Task`1<Document> ReplaceWithIdentifierAsync(Document document, SyntaxNode identifierNode, CancellationToken cancellationToken, string identifierString);
    public static bool TryGetDurableOrchestrationContextVariableName(SyntaxNode node, String& variableName);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.DateTimeAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private static DateTimeAnalyzer();
    public static bool RegisterDiagnostic(CompilationAnalysisContext context, SemanticModel semanticModel, SyntaxNode method);
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.DateTimeCodeFixProvider : CodeFixProvider {
    private static LocalizableString FixDateTimeInOrchestrator;
    private static LocalizableString FixDeterministicAttribute;
    public ImmutableArray`1<string> FixableDiagnosticIds { get; }
    private static DateTimeCodeFixProvider();
    public sealed virtual ImmutableArray`1<string> get_FixableDiagnosticIds();
    public sealed virtual FixAllProvider GetFixAllProvider();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.DateTimeCodeFixProvider/<RegisterCodeFixesAsync>d__5")]
public sealed virtual Task RegisterCodeFixesAsync(CodeFixContext context);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.DependencyInjectionAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private static DependencyInjectionAnalyzer();
    public static bool RegisterDiagnostic(CompilationAnalysisContext context, SyntaxNode method);
    private static bool TryGetInjectedVariables(SyntaxNode method, List`1& injectedVariables);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.DeterministicMethodAnalyzer : DiagnosticAnalyzer {
    private OrchestratorMethodCollector orchestratorMethodCollector;
    public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void RegisterAnalyzers(CompilationAnalysisContext context);
    [CompilerGeneratedAttribute]
private void <Initialize>b__3_0(CompilationStartAnalysisContext compilation);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.DispatchEntityNameAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    private List`1<SyntaxNode> methodDeclarations;
    private static DiagnosticDescriptor Rule;
    public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static DispatchEntityNameAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void RegisterStaticAnalyzer(CompilationAnalysisContext context);
    private void AnalyzeDispatchAndFindMethodDeclarations(SyntaxNodeAnalysisContext context);
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.DispatchEntityNameCodeFixProvider : CodeFixProvider {
    private static LocalizableString FixDispatchEntityCall;
    public ImmutableArray`1<string> FixableDiagnosticIds { get; }
    private static DispatchEntityNameCodeFixProvider();
    public sealed virtual ImmutableArray`1<string> get_FixableDiagnosticIds();
    public sealed virtual FixAllProvider GetFixAllProvider();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.DispatchEntityNameCodeFixProvider/<RegisterCodeFixesAsync>d__4")]
public sealed virtual Task RegisterCodeFixesAsync(CodeFixContext context);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.DispatchEntityNameCodeFixProvider/<ReplaceTypeArgumentAsync>d__5")]
protected Task`1<Document> ReplaceTypeArgumentAsync(Document document, SyntaxNode attributeArgumentNode, CancellationToken cancellationToken, string expression);
}
public enum Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.DurableVersion : Enum {
    public int value__;
    public static DurableVersion V1;
    public static DurableVersion V2;
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.EntityContextAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    private static DiagnosticDescriptor Rule;
    public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static EntityContextAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    public void FindEntityTriggers(SyntaxNodeAnalysisContext context);
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.EntityContextCodeFixProvider : CodeFixProvider {
    private static LocalizableString FixIDurableEntityContext;
    public ImmutableArray`1<string> FixableDiagnosticIds { get; }
    private static EntityContextCodeFixProvider();
    public sealed virtual ImmutableArray`1<string> get_FixableDiagnosticIds();
    public sealed virtual FixAllProvider GetFixAllProvider();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.EntityContextCodeFixProvider/<RegisterCodeFixesAsync>d__4")]
public sealed virtual Task RegisterCodeFixesAsync(CodeFixContext context);
}
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.EntityInterface : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private SyntaxNode <InterfaceDeclaration>k__BackingField;
    public string Name { get; public set; }
    public SyntaxNode InterfaceDeclaration { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public SyntaxNode get_InterfaceDeclaration();
    [CompilerGeneratedAttribute]
public void set_InterfaceDeclaration(SyntaxNode value);
}
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.EntityInterfaceReturnTypeAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private static EntityInterfaceReturnTypeAnalyzer();
    public static void ReportProblems(CompilationAnalysisContext context, EntityInterface entityInterface);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.EnvironmentVariableAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private static EnvironmentVariableAnalyzer();
    internal static bool RegisterDiagnostic(CompilationAnalysisContext context, SemanticModel semanticModel, SyntaxNode method);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.FunctionAnalyzer : DiagnosticAnalyzer {
    private List`1<ActivityFunctionDefinition> availableFunctions;
    private List`1<ActivityFunctionCall> calledFunctions;
    private SemanticModel semanticModel;
    private OrchestratorMethodCollector orchestratorMethodCollector;
    public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void CompilationEndActions(CompilationAnalysisContext context);
    private void RegisterAnalyzers(CompilationAnalysisContext context);
    private void FindActivityCalls();
    private bool IsActivityInvocation(InvocationExpressionSyntax invocationExpression);
    private bool TryGetFunctionNameFromActivityInvocation(InvocationExpressionSyntax invocationExpression, SyntaxNode& functionNameNode, String& functionName);
    private static bool TryGetInputNodeFromCallActivityInvocation(SemanticModel semanticModel, InvocationExpressionSyntax invocationExpression, SyntaxNode& inputNode);
    private static bool TryGetSpecificParameterIndex(SyntaxNode declaration, string parameterToFind, Int32& inputParameterIndex);
    private static bool IsExtensionMethod(IEnumerable`1<SyntaxNode> parameters);
    private static bool TryGetInvocationArguments(InvocationExpressionSyntax invocationExpression, IEnumerable`1& arguments);
    public void FindActivityFunctionDefinition(SyntaxNodeAnalysisContext context);
    private static bool TryGetDefinitionInputType(SemanticModel semanticModel, SyntaxNode parameterNode, ITypeSymbol& definitionInputType);
    private static bool TryGetInputTypeFromContext(SemanticModel semanticModel, SyntaxNode node, ITypeSymbol& definitionInputType);
    private static bool TryGetDurableActivityContextExpression(SemanticModel semanticModel, SyntaxNode node, SyntaxNode& durableContextExpression);
}
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.FunctionReturnTypeAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private static FunctionReturnTypeAnalyzer();
    public static void ReportProblems(CompilationAnalysisContext context, IEnumerable`1<ActivityFunctionDefinition> functionDefinitions, IEnumerable`1<ActivityFunctionCall> functionInvocations);
    private static bool IsValidReturnTypeForDefinition(ActivityFunctionCall invocation, ActivityFunctionDefinition definition);
    private static bool TryGetTaskTypeArgument(ITypeSymbol returnType, ITypeSymbol& taskTypeArgument);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.GuidAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private static GuidAnalyzer();
    internal static bool RegisterDiagnostic(CompilationAnalysisContext context, SemanticModel semanticModel, SyntaxNode method);
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.GuidCodeFixProvider : CodeFixProvider {
    private static LocalizableString FixGuidInOrchestrator;
    private static LocalizableString FixDeterministicAttribute;
    public ImmutableArray`1<string> FixableDiagnosticIds { get; }
    private static GuidCodeFixProvider();
    public sealed virtual ImmutableArray`1<string> get_FixableDiagnosticIds();
    public sealed virtual FixAllProvider GetFixAllProvider();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.GuidCodeFixProvider/<RegisterCodeFixesAsync>d__5")]
public sealed virtual Task RegisterCodeFixesAsync(CodeFixContext context);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.GuidCodeFixProvider/<ReplaceWithInvocationExpressionAsync>d__6")]
private Task`1<Document> ReplaceWithInvocationExpressionAsync(Document document, InvocationExpressionSyntax invocationExpression, CancellationToken cancellationToken, string expressionString);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.InterfaceAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    private static DiagnosticDescriptor Rule;
    private List`1<EntityInterface> entityInterfacesList;
    public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static InterfaceAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void RegisterAnalyzers(CompilationAnalysisContext context);
    public void FindEntityCalls(SyntaxNodeAnalysisContext context);
    private bool TryFindEntityInterface(SyntaxNodeAnalysisContext context, SyntaxNode identifierName, EntityInterface& entityInterface);
    private bool IsInterface(SyntaxNode declaration);
}
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.InterfaceContentAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString NotAMethodMessageFormat;
    private static LocalizableString NoMethodsMessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor NotAMethodRule;
    public static DiagnosticDescriptor NoMethodsRule;
    private static InterfaceContentAnalyzer();
    public static void ReportProblems(CompilationAnalysisContext context, EntityInterface entityInterface);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.IOTypesAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private static IOTypesAnalyzer();
    internal static bool RegisterDiagnostic(CompilationAnalysisContext context, SemanticModel semanticModel, SyntaxNode method);
    private static bool IsIOClass(string s);
}
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.MethodInformation : object {
    [CompilerGeneratedAttribute]
private SemanticModel <SemanticModel>k__BackingField;
    [CompilerGeneratedAttribute]
private SyntaxNode <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private ISymbol <DeclarationSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<InvocationExpressionSyntax> <Invocations>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<MethodInformation> <Parents>k__BackingField;
    public SemanticModel SemanticModel { get; public set; }
    public SyntaxNode Declaration { get; public set; }
    public ISymbol DeclarationSymbol { get; public set; }
    public IList`1<InvocationExpressionSyntax> Invocations { get; public set; }
    public HashSet`1<MethodInformation> Parents { get; public set; }
    [CompilerGeneratedAttribute]
public SemanticModel get_SemanticModel();
    [CompilerGeneratedAttribute]
public void set_SemanticModel(SemanticModel value);
    [CompilerGeneratedAttribute]
public SyntaxNode get_Declaration();
    [CompilerGeneratedAttribute]
public void set_Declaration(SyntaxNode value);
    [CompilerGeneratedAttribute]
public ISymbol get_DeclarationSymbol();
    [CompilerGeneratedAttribute]
public void set_DeclarationSymbol(ISymbol value);
    [CompilerGeneratedAttribute]
public IList`1<InvocationExpressionSyntax> get_Invocations();
    [CompilerGeneratedAttribute]
public void set_Invocations(IList`1<InvocationExpressionSyntax> value);
    [CompilerGeneratedAttribute]
public HashSet`1<MethodInformation> get_Parents();
    [CompilerGeneratedAttribute]
public void set_Parents(HashSet`1<MethodInformation> value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.MethodInvocationAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private HashSet`1<MethodInformation> methodsVisited;
    private static MethodInvocationAnalyzer();
    public void RegisterDiagnostics(CompilationAnalysisContext context, MethodInformation methodInformation);
    private void RegisterDiagnosticsOnInvocations(CompilationAnalysisContext context, MethodInformation methodInformation, HashSet`1<MethodInformation> methodsVisited);
    private void RegisterDiagnosticsOnParents(CompilationAnalysisContext context, MethodInformation methodInformation, HashSet`1<MethodInformation> methodsVisited);
}
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.NameAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString CloseMessageFormat;
    private static LocalizableString MissingMessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor CloseRule;
    public static DiagnosticDescriptor MissingRule;
    private static NameAnalyzer();
    public static void ReportProblems(CompilationAnalysisContext context, SemanticModel semanticModel, IEnumerable`1<ActivityFunctionDefinition> functionDefinitions, IEnumerable`1<ActivityFunctionCall> functionInvocations);
    private static bool IsConstant(SemanticModel semanticModel, SyntaxNode nameNode);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.OrchestratorContextAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static LocalizableString V1Title;
    private static LocalizableString V2Title;
    private static LocalizableString V1MessageFormat;
    private static LocalizableString V1Description;
    private static LocalizableString V2MessageFormat;
    private static LocalizableString V2Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    private static DiagnosticDescriptor V1Rule;
    private static DiagnosticDescriptor V2Rule;
    private static DurableVersion version;
    public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static OrchestratorContextAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    public void FindOrchestrationTriggers(SyntaxNodeAnalysisContext context);
    private bool TryGetRuleFromVersion(DiagnosticDescriptor& rule);
    private bool ParameterTypeIsCorrectDurableType(SyntaxNode parameterNode);
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.OrchestratorContextCodeFixProvider : CodeFixProvider {
    private static LocalizableString FixDurableOrchestrationContext;
    private static LocalizableString FixDurableOrchestrationContextBase;
    private static LocalizableString FixIDurableOrchestrationContext;
    public ImmutableArray`1<string> FixableDiagnosticIds { get; }
    private static OrchestratorContextCodeFixProvider();
    public sealed virtual ImmutableArray`1<string> get_FixableDiagnosticIds();
    public sealed virtual FixAllProvider GetFixAllProvider();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.OrchestratorContextCodeFixProvider/<RegisterCodeFixesAsync>d__6")]
public sealed virtual Task RegisterCodeFixesAsync(CodeFixContext context);
}
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.OrchestratorMethodCollector : object {
    private Dictionary`2<ISymbol, MethodInformation> orchestratorMethodDeclarations;
    public void FindOrchestratorMethods(SyntaxNodeAnalysisContext context);
    private void FindInvokedMethods(SemanticModel semanticModel, MethodInformation parentMethodInformation);
    public IEnumerable`1<MethodInformation> GetOrchestratorMethods();
}
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.ParameterAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private static ParameterAnalyzer();
    public static void ReportProblems(CompilationAnalysisContext context, EntityInterface entityInterface);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
public static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
public static CultureInfo Culture { get; public set; }
    public static string ActivityArgumentAnalyzerDescription { get; }
    public static string ActivityArgumentAnalyzerMessageFormat { get; }
    public static string ActivityArgumentAnalyzerMessageFormatInvalidNull { get; }
    public static string ActivityArgumentAnalyzerMessageFormatNotUsed { get; }
    public static string ActivityArgumentAnalyzerTitle { get; }
    public static string ActivityNameAnalyzerCloseMessageFormat { get; }
    public static string ActivityNameAnalyzerDescription { get; }
    public static string ActivityNameAnalyzerMissingMessageFormat { get; }
    public static string ActivityNameAnalyzerTitle { get; }
    public static string ActivityReturnTypeAnalyzerDescription { get; }
    public static string ActivityReturnTypeAnalyzerMessageFormat { get; }
    public static string ActivityReturnTypeAnalyzerTitle { get; }
    public static string AwaitAnalyzerMessageFormat { get; }
    public static string AwaitAnalyzerTitle { get; }
    public static string BindingAnalyzerMessageFormat { get; }
    public static string BindingAnalyzerTitle { get; }
    public static string CancellationTokenAnalyzerMessageFormat { get; }
    public static string CancellationTokenAnalyzerTitle { get; }
    public static string DateTimeAnalyzerTitle { get; }
    public static string DependencyInjectionAnalyzerTitle { get; }
    public static string DeterministicAnalyzerDescription { get; }
    public static string DeterministicAnalyzerMessageFormat { get; }
    public static string DispatchEntityNameAnalyzerDescription { get; }
    public static string DispatchEntityNameAnalyzerMessageFormat { get; }
    public static string DispatchEntityNameAnalyzerTitle { get; }
    public static string EntityClassNameAnalyzerCloseMessageFormat { get; }
    public static string EntityClassNameAnalyzerDescription { get; }
    public static string EntityClassNameAnalyzerMissingMessageFormat { get; }
    public static string EntityClassNameAnalyzerTitle { get; }
    public static string EntityContextAnalyzerDescription { get; }
    public static string EntityContextAnalyzerMessageFormat { get; }
    public static string EntityContextAnalyzerTitle { get; }
    public static string EntityInterfaceContentAnalyzerDescription { get; }
    public static string EntityInterfaceContentAnalyzerMessageFormat { get; }
    public static string EntityInterfaceContentAnalyzerNoMethodsMessageFormat { get; }
    public static string EntityInterfaceContentAnalyzerTitle { get; }
    public static string EntityInterfaceParameterAnalyzerDescription { get; }
    public static string EntityInterfaceParameterAnalyzerMessageFormat { get; }
    public static string EntityInterfaceParameterAnalyzerTitle { get; }
    public static string EntityInterfaceReturnTypeAnalyzerDescription { get; }
    public static string EntityInterfaceReturnTypeAnalyzerMessageFormat { get; }
    public static string EntityInterfaceReturnTypeAnalyzerTitle { get; }
    public static string EntityStaticAnalyzerDescription { get; }
    public static string EntityStaticAnalyzerMessageFormat { get; }
    public static string EntityStaticAnalyzerTitle { get; }
    public static string EnvironmentVariableAnalyzerTitle { get; }
    public static string FixDateTimeInOrchestrator { get; }
    public static string FixDeterministicAttribute { get; }
    public static string FixDurableOrchestrationClient { get; }
    public static string FixDurableOrchestrationContext { get; }
    public static string FixDurableOrchestrationContextBase { get; }
    public static string FixEntityFunctionName { get; }
    public static string FixEntityFunctionStaticModifier { get; }
    public static string FixGuidInOrchestrator { get; }
    public static string FixIDurableClient { get; }
    public static string FixIDurableEntityClient { get; }
    public static string FixIDurableEntityContext { get; }
    public static string FixIDurableOrchestrationClient { get; }
    public static string FixIDurableOrchestrationContext { get; }
    public static string FixTimerInOrchestrator { get; }
    public static string GuidAnalyzerTitle { get; }
    public static string IOTypesAnalyzerTitle { get; }
    public static string MethodAnalyzerMessageFormat { get; }
    public static string MethodAnalyzerTitle { get; }
    public static string SignalEntityAnalyzerDescription { get; }
    public static string SignalEntityAnalyzerMessageFormat { get; }
    public static string SignalEntityAnalyzerTitle { get; }
    public static string ThreadTaskAnalyzerTitle { get; }
    public static string TimerAnalyzerTitle { get; }
    public static string V1ClientAnalyzerDescription { get; }
    public static string V1ClientAnalyzerMessageFormat { get; }
    public static string V1ClientAnalyzerTitle { get; }
    public static string V1OrchestratorContextAnalyzerDescription { get; }
    public static string V1OrchestratorContextAnalyzerMessageFormat { get; }
    public static string V1OrchestratorContextAnalyzerTitle { get; }
    public static string V1TimerAnalyzerMessageFormat { get; }
    public static string V2ClientAnalyzerDescription { get; }
    public static string V2ClientAnalyzerMessageFormat { get; }
    public static string V2ClientAnalyzerTitle { get; }
    public static string V2OrchestratorContextAnalyzerDescription { get; }
    public static string V2OrchestratorContextAnalyzerMessageFormat { get; }
    public static string V2OrchestratorContextAnalyzerTitle { get; }
    public static ResourceManager get_ResourceManager();
    public static CultureInfo get_Culture();
    public static void set_Culture(CultureInfo value);
    public static string get_ActivityArgumentAnalyzerDescription();
    public static string get_ActivityArgumentAnalyzerMessageFormat();
    public static string get_ActivityArgumentAnalyzerMessageFormatInvalidNull();
    public static string get_ActivityArgumentAnalyzerMessageFormatNotUsed();
    public static string get_ActivityArgumentAnalyzerTitle();
    public static string get_ActivityNameAnalyzerCloseMessageFormat();
    public static string get_ActivityNameAnalyzerDescription();
    public static string get_ActivityNameAnalyzerMissingMessageFormat();
    public static string get_ActivityNameAnalyzerTitle();
    public static string get_ActivityReturnTypeAnalyzerDescription();
    public static string get_ActivityReturnTypeAnalyzerMessageFormat();
    public static string get_ActivityReturnTypeAnalyzerTitle();
    public static string get_AwaitAnalyzerMessageFormat();
    public static string get_AwaitAnalyzerTitle();
    public static string get_BindingAnalyzerMessageFormat();
    public static string get_BindingAnalyzerTitle();
    public static string get_CancellationTokenAnalyzerMessageFormat();
    public static string get_CancellationTokenAnalyzerTitle();
    public static string get_DateTimeAnalyzerTitle();
    public static string get_DependencyInjectionAnalyzerTitle();
    public static string get_DeterministicAnalyzerDescription();
    public static string get_DeterministicAnalyzerMessageFormat();
    public static string get_DispatchEntityNameAnalyzerDescription();
    public static string get_DispatchEntityNameAnalyzerMessageFormat();
    public static string get_DispatchEntityNameAnalyzerTitle();
    public static string get_EntityClassNameAnalyzerCloseMessageFormat();
    public static string get_EntityClassNameAnalyzerDescription();
    public static string get_EntityClassNameAnalyzerMissingMessageFormat();
    public static string get_EntityClassNameAnalyzerTitle();
    public static string get_EntityContextAnalyzerDescription();
    public static string get_EntityContextAnalyzerMessageFormat();
    public static string get_EntityContextAnalyzerTitle();
    public static string get_EntityInterfaceContentAnalyzerDescription();
    public static string get_EntityInterfaceContentAnalyzerMessageFormat();
    public static string get_EntityInterfaceContentAnalyzerNoMethodsMessageFormat();
    public static string get_EntityInterfaceContentAnalyzerTitle();
    public static string get_EntityInterfaceParameterAnalyzerDescription();
    public static string get_EntityInterfaceParameterAnalyzerMessageFormat();
    public static string get_EntityInterfaceParameterAnalyzerTitle();
    public static string get_EntityInterfaceReturnTypeAnalyzerDescription();
    public static string get_EntityInterfaceReturnTypeAnalyzerMessageFormat();
    public static string get_EntityInterfaceReturnTypeAnalyzerTitle();
    public static string get_EntityStaticAnalyzerDescription();
    public static string get_EntityStaticAnalyzerMessageFormat();
    public static string get_EntityStaticAnalyzerTitle();
    public static string get_EnvironmentVariableAnalyzerTitle();
    public static string get_FixDateTimeInOrchestrator();
    public static string get_FixDeterministicAttribute();
    public static string get_FixDurableOrchestrationClient();
    public static string get_FixDurableOrchestrationContext();
    public static string get_FixDurableOrchestrationContextBase();
    public static string get_FixEntityFunctionName();
    public static string get_FixEntityFunctionStaticModifier();
    public static string get_FixGuidInOrchestrator();
    public static string get_FixIDurableClient();
    public static string get_FixIDurableEntityClient();
    public static string get_FixIDurableEntityContext();
    public static string get_FixIDurableOrchestrationClient();
    public static string get_FixIDurableOrchestrationContext();
    public static string get_FixTimerInOrchestrator();
    public static string get_GuidAnalyzerTitle();
    public static string get_IOTypesAnalyzerTitle();
    public static string get_MethodAnalyzerMessageFormat();
    public static string get_MethodAnalyzerTitle();
    public static string get_SignalEntityAnalyzerDescription();
    public static string get_SignalEntityAnalyzerMessageFormat();
    public static string get_SignalEntityAnalyzerTitle();
    public static string get_ThreadTaskAnalyzerTitle();
    public static string get_TimerAnalyzerTitle();
    public static string get_V1ClientAnalyzerDescription();
    public static string get_V1ClientAnalyzerMessageFormat();
    public static string get_V1ClientAnalyzerTitle();
    public static string get_V1OrchestratorContextAnalyzerDescription();
    public static string get_V1OrchestratorContextAnalyzerMessageFormat();
    public static string get_V1OrchestratorContextAnalyzerTitle();
    public static string get_V1TimerAnalyzerMessageFormat();
    public static string get_V2ClientAnalyzerDescription();
    public static string get_V2ClientAnalyzerMessageFormat();
    public static string get_V2ClientAnalyzerTitle();
    public static string get_V2OrchestratorContextAnalyzerDescription();
    public static string get_V2OrchestratorContextAnalyzerMessageFormat();
    public static string get_V2OrchestratorContextAnalyzerTitle();
}
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.StaticFunctionAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private static StaticFunctionAnalyzer();
    public static void ReportProblems(CompilationAnalysisContext context, SyntaxNode methodDeclaration);
    private static bool IsInEntityClass(SemanticModel semanticModel, SyntaxNode methodDeclaration);
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.StaticFunctionCodeFixProvider : CodeFixProvider {
    private static LocalizableString FixEntityFunctionStaticModifier;
    public ImmutableArray`1<string> FixableDiagnosticIds { get; }
    private static StaticFunctionCodeFixProvider();
    public sealed virtual ImmutableArray`1<string> get_FixableDiagnosticIds();
    public sealed virtual FixAllProvider GetFixAllProvider();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.StaticFunctionCodeFixProvider/<RegisterCodeFixesAsync>d__4")]
public sealed virtual Task RegisterCodeFixesAsync(CodeFixContext context);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.StaticFunctionCodeFixProvider/<AddStaticModifierAsync>d__5")]
private Task`1<Document> AddStaticModifierAsync(Document document, SyntaxNode identifierNode, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.StringExtensions : object {
    [ExtensionAttribute]
public static int LevenshteinDistance(string baseString, string comparisonString);
}
public static class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.SupportedCategories : object {
    public static string Orchestrator;
    public static string EntityInterface;
    public static string Entity;
    public static string Binding;
    public static string Activity;
}
public static class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.SyntaxNodeUtils : object {
    public static Nullable`1<DurableVersion> version;
    public static DurableVersion GetDurableVersion(SemanticModel semanticModel);
    public static bool TryGetSemanticModelForSyntaxTree(SemanticModel model, SyntaxNode node, SemanticModel& newModel);
    public static bool TryGetITypeSymbol(SemanticModel semanticModel, SyntaxNode node, ITypeSymbol& typeSymbol);
    public static bool TryGetISymbol(SemanticModel semanticModel, SyntaxNode node, ISymbol& symbol);
    public static bool TryGetDeclaredSyntaxNode(SemanticModel semanticModel, SyntaxNode node, SyntaxNode& declaredNode);
    public static bool TryGetClosestString(string name, IEnumerable`1<string> availableNames, String& closestString);
    public static bool IsInsideOrchestratorFunction(SemanticModel semanticModel, SyntaxNode node);
    public static bool IsInsideOrchestrationTrigger(SyntaxNode node);
    public static bool IsInsideFunction(SemanticModel semanticModel, SyntaxNode node);
    internal static bool TryGetMethodReturnTypeNode(SyntaxNode node, SyntaxNode& returnTypeNode);
    private static bool TryGetChildTypeNode(SyntaxNode node, SyntaxNode& childTypeNode);
    private static bool TryGetAttribute(SyntaxNode node, string attributeName, SyntaxNode& attribute);
    internal static bool TryGetMethodDeclaration(SyntaxNode node, MethodDeclarationSyntax& methodDeclaration);
    internal static bool TryGetInvocationExpression(SyntaxNode node, InvocationExpressionSyntax& invocationExpression);
    internal static bool TryGetClassDeclaration(SyntaxNode node, ClassDeclarationSyntax& classDeclaration);
    private static bool TryGetContainingSyntaxNode(SyntaxNode node, SyntaxKind kind, T& kindNode);
    internal static bool TryGetConstructor(SyntaxNode node, ConstructorDeclarationSyntax& constructor);
    internal static bool TryGetClassName(SyntaxNode node, String& className);
    internal static bool IsInStaticClass(SyntaxNode node);
    internal static bool IsInStaticMethod(SyntaxNode node);
    private static bool HasStaticChildNode(SyntaxNode node);
    public static bool TryGetFunctionName(SemanticModel semanticModel, SyntaxNode node, String& functionName);
    internal static bool TryGetFunctionNameAndNode(SemanticModel semanticModel, SyntaxNode node, SyntaxNode& attributeArgument, String& functionName);
    public static bool TryParseFunctionName(SemanticModel semanticModel, SyntaxNode node, String& functionName);
    public static bool TryGetFunctionNameInConstant(SemanticModel semanticModel, SyntaxNode node, String& functionName);
    private static bool TryGetFunctionNameInNameOfOperator(SyntaxNode node, String& functionName);
    private static bool TryGetFunctionNameInStringLiteral(SyntaxNode node, String& functionName);
    private static bool TryGetFunctionNameAttributeArgument(SyntaxNode functionAttribute, SyntaxNode& attributeArgument);
    private static bool TryGetFunctionAttribute(SyntaxNode attributeExpression, SyntaxNode& functionAttribute);
    internal static bool TryGetParameterNodeNextToAttribute(AttributeSyntax attributeExpression, SyntaxNode& inputType);
    internal static bool TryGetTypeArgumentIdentifier(MemberAccessExpressionSyntax expression, SyntaxNode& identifierNode);
    internal static bool TryGetTypeArgumentIdentifier(GenericNameSyntax node, SyntaxNode& identifierNode);
    internal static bool IsActivityTriggerAttribute(AttributeSyntax attribute);
    internal static bool IsEntityTriggerAttribute(AttributeSyntax attribute);
    private static bool IsSpecifiedAttribute(AttributeSyntax attribute, string attributeName);
    public static bool IsDurableActivityContext(ITypeSymbol type);
    public static bool IsMatchingDerivedOrCompatibleType(ITypeSymbol subclassOrMatching, ITypeSymbol superOrMatching);
    private static bool AreMatchingValueTuples(ITypeSymbol subclassOrMatching, ITypeSymbol superOrMatching);
    private static bool HaveMatchingOrCompatibeTypeArguments(ITypeSymbol subclassOrMatching, ITypeSymbol superOrMatching);
    private static bool NotNullAndMatchingLength(ImmutableArray`1<ITypeSymbol> immutableArrayOne, ImmutableArray`1<ITypeSymbol> immutableArrayTwo);
    private static bool AreMatchingGenericTypes(ITypeSymbol subclassOrMatching, ITypeSymbol superOrMatching);
    private static bool IsSubclassOrImplementation(ITypeSymbol subclassOrImplementation, ITypeSymbol superOrInterface);
    private static bool AreCompatibleIEnumerableTypes(ITypeSymbol typeOne, ITypeSymbol typeTwo);
    private static bool CollectionTypesMatch(ITypeSymbol typeOne, ITypeSymbol typeTwo);
    private static bool TryGetCollectionType(ITypeSymbol type, ITypeSymbol& collectionType);
    public static bool TypeSymbolImplementsOrExtendsType(ITypeSymbol node, string interfaceOrBase);
    private static bool TypeSymbolImplementsInterface(ITypeSymbol node, string interfaceName);
    private static bool TypeSymbolIsSubclass(ITypeSymbol node, string baseClass);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.ThreadTaskAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor Rule;
    private static ThreadTaskAnalyzer();
    internal static bool RegisterDiagnostic(CompilationAnalysisContext context, SemanticModel semanticModel, SyntaxNode method);
    private static bool AnalyzeIdentifierTask(SyntaxNode method, CompilationAnalysisContext context, SemanticModel semanticModel);
    private static bool AnalyzeIdentifierTaskFactory(SyntaxNode method, CompilationAnalysisContext context, SemanticModel semanticModel);
    private static bool AnalyzeIdentifierThread(SyntaxNode method, CompilationAnalysisContext context, SemanticModel semanticModel);
    private static bool AnalyzeIdentifierTaskContinueWith(SyntaxNode method, CompilationAnalysisContext context, SemanticModel semanticModel);
    private static bool HasExecuteSynchronously(SyntaxNode node);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.TimerAnalyzer : object {
    public static string DiagnosticId;
    private static LocalizableString Title;
    private static LocalizableString V2MessageFormat;
    private static LocalizableString V1MessageFormat;
    private static LocalizableString Description;
    private static string Category;
    public static DiagnosticSeverity Severity;
    public static DiagnosticDescriptor V1Rule;
    public static DiagnosticDescriptor V2Rule;
    private static DurableVersion version;
    private static TimerAnalyzer();
    internal static bool RegisterDiagnostic(CompilationAnalysisContext context, SemanticModel semanticModel, SyntaxNode method);
    private static bool AnalyzeIdentifierTask(SyntaxNode method, CompilationAnalysisContext context, SemanticModel semanticModel);
    private static SyntaxNode GetAwaitOrInvocationExpression(SyntaxNode memberAccessExpression);
    private static bool AnalyzeIdentifierThread(SyntaxNode method, CompilationAnalysisContext context, SemanticModel semanticModel);
    private static bool TryGetRuleFromVersion(DiagnosticDescriptor& rule);
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.TimerCodeFixProvider : CodeFixProvider {
    private static LocalizableString FixTimerInOrchestrator;
    private static LocalizableString FixDeterministicAttribute;
    public ImmutableArray`1<string> FixableDiagnosticIds { get; }
    private static TimerCodeFixProvider();
    public sealed virtual ImmutableArray`1<string> get_FixableDiagnosticIds();
    public sealed virtual FixAllProvider GetFixAllProvider();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.TimerCodeFixProvider/<RegisterCodeFixesAsync>d__5")]
public sealed virtual Task RegisterCodeFixesAsync(CodeFixContext context);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.DurableTask.Analyzers.TimerCodeFixProvider/<ReplaceWithAwaitExpressionAsync>d__6")]
protected Task`1<Document> ReplaceWithAwaitExpressionAsync(Document document, SyntaxNode expression, CancellationToken cancellationToken, string expressionString);
    private bool TryGetInvocationExpression(SyntaxNode expression, SyntaxNode& invocationExpression);
    private bool TryGetTimespanParameter(SyntaxNode expression, SemanticModel semanticModel, String& timeSpan);
    private bool TryGetCancellationTokenParameter(SyntaxNode expression, SemanticModel semanticModel, String& cancellationToken);
    private bool TryGetParameterOfType(SyntaxNode argument, SemanticModel semanticModel, string typeToCompare, String& parameter);
    private static bool TryGetObjectCreationExpressionChildNodes(SyntaxNode argument, IEnumerable`1& nodes);
    private static bool TryGetSimpleMemberAccessExpressionChildNodes(SyntaxNode argument, IEnumerable`1& nodes);
    private static bool TryGetIdentifierNameChildNodes(SyntaxNode argument, IEnumerable`1& nodes);
    private static bool TryGetChildNodes(SyntaxNode argument, SyntaxKind kind, IEnumerable`1& nodes);
    private static string GetTypeWithoutNamespace(string type);
    private bool TryGetMillisecondsParameter(SyntaxNode expression, String& milliseconds);
    private bool TryGetArgumentEnumerable(SyntaxNode expression, IEnumerable`1& arguments);
}
