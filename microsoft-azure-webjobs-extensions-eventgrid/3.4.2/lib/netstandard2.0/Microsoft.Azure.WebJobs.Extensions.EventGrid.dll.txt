internal static class Azure.Core.AppContextSwitchHelper : object {
    [NullableContextAttribute("1")]
public static bool GetConfigValue(string appContexSwitchName, string environmentVariableName);
}
internal static class Azure.Core.Pipeline.ActivityExtensions : object {
    [CompilerGeneratedAttribute]
private static bool <SupportsActivitySource>k__BackingField;
    public static bool SupportsActivitySource { get; private set; }
    private static ActivityExtensions();
    [CompilerGeneratedAttribute]
public static bool get_SupportsActivitySource();
    [CompilerGeneratedAttribute]
private static void set_SupportsActivitySource(bool value);
    public static void ResetFeatureSwitch();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Pipeline.DiagnosticScope : ValueType {
    private static string AzureSdkScopeLabel;
    internal static string OpenTelemetrySchemaAttribute;
    internal static string OpenTelemetrySchemaVersion;
    private static object AzureSdkScopeValue;
    [NullableAttribute("2")]
private ActivityAdapter _activityAdapter;
    private bool _suppressNestedClientActivities;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; }
    [RequiresUnreferencedCodeAttribute("The diagnosticSourceArgs are used in a call to DiagnosticSource.Write, all necessary properties need to be preserved on the type being passed in using DynamicDependency attributes.")]
internal DiagnosticScope(string scopeName, DiagnosticListener source, object diagnosticSourceArgs, ActivitySource activitySource, ActivityKind kind, bool suppressNestedClientActivities);
    private static DiagnosticScope();
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    public void AddAttribute(string name, string value);
    public void AddIntegerAttribute(string name, int value);
    public void AddLongAttribute(string name, long value);
    public void AddAttribute(string name, T value, Func`2<T, string> format);
    public void AddLink(string traceparent, string tracestate, IDictionary`2<string, object> attributes);
    public void Start();
    public void SetDisplayName(string displayName);
    public void SetStartTime(DateTime dateTime);
    public void SetTraceContext(string traceparent, string tracestate);
    public sealed virtual void Dispose();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(Exception exception);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(string errorCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DiagnosticScopeFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, DiagnosticListener> _listeners;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    [NullableAttribute("2")]
private DiagnosticListener _source;
    private bool _suppressNestedClientActivities;
    private bool _isStable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<string, ActivitySource> ActivitySources;
    [CompilerGeneratedAttribute]
private bool <IsActivityEnabled>k__BackingField;
    public bool IsActivityEnabled { get; }
    public DiagnosticScopeFactory(string clientNamespace, string resourceProviderNamespace, bool isActivityEnabled, bool suppressNestedClientActivities, bool isStable);
    private static DiagnosticScopeFactory();
    [CompilerGeneratedAttribute]
public bool get_IsActivityEnabled();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public DiagnosticScope CreateScope(string name, ActivityKind kind);
    private ActivitySource GetActivitySource(string ns, string name);
}
internal enum Microsoft.Azure.WebJobs.Extensions.EventGrid.BindingType : Enum {
    public int value__;
    public static BindingType Unknown;
    public static BindingType EventGridEvent;
    public static BindingType CloudEvent;
}
internal class Microsoft.Azure.WebJobs.Extensions.EventGrid.Config.EventGridAsyncCollectorFactory : object {
    private static string TopicEndpointUri;
    private IConfiguration _configuration;
    private AzureComponentFactory _componentFactory;
    internal static string MissingSettingsErrorMessage;
    internal static string ConflictingSettingsErrorMessage;
    internal static string MissingTopicKeySettingErrorMessage;
    internal static string MustBeValidAbsoluteUriErrorMessage;
    public EventGridAsyncCollectorFactory(IConfiguration configuration, AzureComponentFactory componentFactory);
    internal void Validate(EventGridAttribute attribute);
    internal virtual IAsyncCollector`1<object> CreateCollector(EventGridAttribute attribute);
    internal EventGridPublisherClient CreateClient(EventGridAttribute attribute, EventGridPublisherClientOptions options);
    internal EventGridConnectionInformation ResolveConnectionInformation(EventGridAttribute attribute);
}
[ExtensionAttribute("EventGrid", "EventGrid")]
internal class Microsoft.Azure.WebJobs.Extensions.EventGrid.Config.EventGridExtensionConfigProvider : object {
    private ILogger _logger;
    private ILoggerFactory _loggerFactory;
    private EventGridAsyncCollectorFactory _collectorFactory;
    private HttpRequestProcessor _httpRequestProcessor;
    private DiagnosticScopeFactory _diagnosticScopeFactory;
    private static string DiagnosticScopeNamespace;
    private static string ResourceProviderNamespace;
    private static string DiagnosticScopeName;
    private Dictionary`2<string, EventGridListener> _listeners;
    public EventGridExtensionConfigProvider(EventGridAsyncCollectorFactory collectorFactory, HttpRequestProcessor httpRequestProcessor, ILoggerFactory loggerFactory);
    public sealed virtual void Initialize(ExtensionConfigContext context);
    internal void AddListener(string key, EventGridListener listener);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.EventGrid.Config.EventGridExtensionConfigProvider/<ConvertAsync>d__12")]
public sealed virtual Task`1<HttpResponseMessage> ConvertAsync(HttpRequestMessage input, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.EventGrid.Config.EventGridExtensionConfigProvider/<ProcessAsync>d__13")]
private Task`1<HttpResponseMessage> ProcessAsync(HttpRequestMessage req);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.EventGrid.Config.EventGridExtensionConfigProvider/<ProcessEventsAsync>d__14")]
private Task`1<HttpResponseMessage> ProcessEventsAsync(JArray events, string functionName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.EventGrid.Config.EventGridExtensionConfigProvider/<ExecuteWithTracingAsync>d__15")]
private Task`1<FunctionResult> ExecuteWithTracingAsync(string functionName, TriggeredFunctionData triggerData);
    private static void AddLinkIfEventHasContext(DiagnosticScope scope, JToken evnt);
    [CompilerGeneratedAttribute]
private void <Initialize>b__9_10(EventGridAttribute a, Type t);
}
internal class Microsoft.Azure.WebJobs.Extensions.EventGrid.EventGridAsyncCollector : object {
    private EventGridPublisherClient _client;
    private object _syncroot;
    private IList`1<object> _eventsToSend;
    public EventGridAsyncCollector(EventGridPublisherClient client);
    public sealed virtual Task AddAsync(object item, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.EventGrid.EventGridAsyncCollector/<FlushAsync>d__5")]
public sealed virtual Task FlushAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.EventGrid.EventGridAsyncCollector/<SendAsync>d__6")]
private Task SendAsync(IList`1<object> events, Func`2<object, BinaryData> binaryDataFactory, CancellationToken cancellationToken);
}
[AttributeUsageAttribute("10240")]
[BindingAttribute]
public class Microsoft.Azure.WebJobs.Extensions.EventGrid.EventGridAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <TopicEndpointUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TopicKeySetting>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Connection>k__BackingField;
    [AppSettingAttribute]
public string TopicEndpointUri { get; public set; }
    [AppSettingAttribute]
public string TopicKeySetting { get; public set; }
    public string Connection { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TopicEndpointUri();
    [CompilerGeneratedAttribute]
public void set_TopicEndpointUri(string value);
    [CompilerGeneratedAttribute]
public string get_TopicKeySetting();
    [CompilerGeneratedAttribute]
public void set_TopicKeySetting(string value);
    [CompilerGeneratedAttribute]
public string get_Connection();
    [CompilerGeneratedAttribute]
public void set_Connection(string value);
}
internal class Microsoft.Azure.WebJobs.Extensions.EventGrid.EventGridListener : object {
    [CompilerGeneratedAttribute]
private ITriggeredFunctionExecutor <Executor>k__BackingField;
    public bool SingleDispatch;
    [CompilerGeneratedAttribute]
private BindingType <BindingType>k__BackingField;
    private EventGridExtensionConfigProvider _listenersStore;
    private string _functionName;
    public ITriggeredFunctionExecutor Executor { get; private set; }
    public BindingType BindingType { get; }
    public EventGridListener(ITriggeredFunctionExecutor executor, EventGridExtensionConfigProvider listenersStore, string functionName, bool singleDispatch, BindingType bindingType);
    [CompilerGeneratedAttribute]
public ITriggeredFunctionExecutor get_Executor();
    [CompilerGeneratedAttribute]
private void set_Executor(ITriggeredFunctionExecutor value);
    [CompilerGeneratedAttribute]
public BindingType get_BindingType();
    public sealed virtual Task StartAsync(CancellationToken cancellationToken);
    public sealed virtual Task StopAsync(CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    public sealed virtual void Cancel();
}
[AttributeUsageAttribute("2048")]
[BindingAttribute]
public class Microsoft.Azure.WebJobs.Extensions.EventGrid.EventGridTriggerAttribute : Attribute {
}
internal class Microsoft.Azure.WebJobs.Extensions.EventGrid.EventGridTriggerAttributeBindingProvider : object {
    private EventGridExtensionConfigProvider _extensionConfigProvider;
    internal EventGridTriggerAttributeBindingProvider(EventGridExtensionConfigProvider extensionConfigProvider);
    public sealed virtual Task`1<ITriggerBinding> TryCreateAsync(TriggerBindingProviderContext context);
}
[ExtensionAttribute]
public static class Microsoft.Azure.WebJobs.Extensions.EventGrid.EventGridWebJobsBuilderExtensions : object {
    [ExtensionAttribute]
public static IWebJobsBuilder AddEventGrid(IWebJobsBuilder builder);
}
internal class Microsoft.Azure.WebJobs.Extensions.EventGrid.EventGridWebJobsStartup : object {
    public sealed virtual void Configure(IWebJobsBuilder builder);
}
internal class Microsoft.Azure.WebJobs.Extensions.EventGrid.HttpRequestProcessor : object {
    private ILogger _logger;
    private static string EventTypeKey;
    private static string ValidationCodeKey;
    private static string DataKey;
    private static string SubscriptionValidationEvent;
    private static string NotificationEvent;
    private static string UnsubscribeEvent;
    public HttpRequestProcessor(ILogger`1<HttpRequestProcessor> logger);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.EventGrid.HttpRequestProcessor/<ProcessAsync>d__8")]
internal Task`1<HttpResponseMessage> ProcessAsync(HttpRequestMessage req, string functionName, Func`4<JArray, string, CancellationToken, Task`1<HttpResponseMessage>> eventsFunc, BindingType bindingType, CancellationToken cancellationToken);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("28108")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("352")]
internal class System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <MemberSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    public string MemberSignature { get; }
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public Type Type { get; }
    public string TypeName { get; }
    public string AssemblyName { get; }
    public string Condition { get; public set; }
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, string typeName, string assemblyName);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, string typeName, string assemblyName);
    [CompilerGeneratedAttribute]
public string get_MemberSignature();
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; }
    [NullableAttribute("1")]
public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    [NullableContextAttribute("1")]
public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
