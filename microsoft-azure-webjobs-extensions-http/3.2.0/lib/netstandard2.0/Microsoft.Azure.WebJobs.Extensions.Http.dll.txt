internal abstract class Microsoft.Azure.WebJobs.Extensions.Bindings.StreamValueBinder : ValueBinder {
    private static Type[] ReadAccessTypes;
    private static Type[] WriteAccessTypes;
    private ParameterInfo _parameter;
    protected StreamValueBinder(ParameterInfo parameter, BindStepOrder bindStepOrder);
    private static StreamValueBinder();
    public static IEnumerable`1<Type> GetSupportedTypes(FileAccess access);
    protected abstract virtual Stream GetStream();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.Bindings.StreamValueBinder/<GetValueAsync>d__6")]
public virtual Task`1<object> GetValueAsync();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.Bindings.StreamValueBinder/<SetValueAsync>d__7")]
public virtual Task SetValueAsync(object value, CancellationToken cancellationToken);
}
internal abstract class Microsoft.Azure.WebJobs.Extensions.Bindings.ValueBinder : object {
    private Type _type;
    private BindStepOrder _bindStepOrder;
    public BindStepOrder StepOrder { get; }
    public Type Type { get; }
    protected ValueBinder(Type type, BindStepOrder bindStepOrder);
    public sealed virtual BindStepOrder get_StepOrder();
    public sealed virtual Type get_Type();
    public abstract virtual Task`1<object> GetValueAsync();
    public abstract virtual string ToInvokeString();
    public virtual Task SetValueAsync(object value, CancellationToken cancellationToken);
    public static bool MatchParameterType(ParameterInfo parameter, IEnumerable`1<Type> types);
}
public enum Microsoft.Azure.WebJobs.Extensions.Http.AuthorizationLevel : Enum {
    public int value__;
    public static AuthorizationLevel Anonymous;
    public static AuthorizationLevel User;
    public static AuthorizationLevel Function;
    public static AuthorizationLevel System;
    public static AuthorizationLevel Admin;
}
[DataContractAttribute]
[KnownTypeAttribute("Microsoft.Azure.WebJobs.Extensions.Http.ClaimSlim")]
internal class Microsoft.Azure.WebJobs.Extensions.Http.ClaimsIdentitySlim : ValueType {
    [DataMemberAttribute]
internal string AuthenticationType;
    [DataMemberAttribute]
internal string NameClaimType;
    [DataMemberAttribute]
internal string RoleClaimType;
    [DataMemberAttribute]
internal List`1<ClaimSlim> Claims;
    public sealed virtual ClaimsIdentity ToClaimsIdentity();
    public static ClaimsIdentitySlim FromClaimsIdentity(ClaimsIdentity identity);
    internal JObject ToJObject();
}
[DataContractAttribute]
internal class Microsoft.Azure.WebJobs.Extensions.Http.ClaimSlim : ValueType {
    [DataMemberAttribute]
public string Value;
    [DataMemberAttribute]
public string Type;
    public bool IsEmpty { get; }
    public ClaimSlim(Claim claim);
    public ClaimSlim(string type, string value);
    public bool get_IsEmpty();
    public Claim ToClaim();
    internal JObject ToJObject();
    public virtual string ToString();
}
internal class Microsoft.Azure.WebJobs.Extensions.Http.ClaimsPrincipalBindingProvider : object {
    private static Task`1<IBinding> NullBinding;
    private static ClaimsPrincipalBindingProvider();
    public sealed virtual Task`1<IBinding> TryCreateAsync(BindingProviderContext context);
}
[ExtensionAttribute]
public static class Microsoft.Azure.WebJobs.Extensions.Http.HttpBindingApplicationBuilderExtension : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseHttpBinding(IApplicationBuilder builder, IApplicationLifetime applicationLifetime, Action`1<WebJobsRouteBuilder> routes);
    [ExtensionAttribute]
public static IApplicationBuilder UseHttpBindingRouting(IApplicationBuilder builder, IApplicationLifetime applicationLifetime, Action`1<WebJobsRouteBuilder> routes);
}
[ExtensionAttribute]
public static class Microsoft.Azure.WebJobs.Extensions.Http.HttpBindingServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddHttpBindingRouting(IServiceCollection services);
}
internal class Microsoft.Azure.WebJobs.Extensions.Http.HttpDirectRequestBindingProvider : object {
    public sealed virtual Task`1<IBinding> TryCreateAsync(BindingProviderContext context);
    private static bool HasBindingAttributes(ParameterInfo parameter);
    private static bool IsBindingAttribute(Attribute attribute);
}
[ExtensionAttribute("HTTP", "")]
internal class Microsoft.Azure.WebJobs.Extensions.Http.HttpExtensionConfigProvider : object {
    private IOptions`1<HttpOptions> _options;
    public HttpExtensionConfigProvider(IOptions`1<HttpOptions> options);
    public sealed virtual void Initialize(ExtensionConfigContext context);
}
public static class Microsoft.Azure.WebJobs.Extensions.Http.HttpExtensionConstants : object {
    public static string DefaultRoutePrefix;
    public static string AzureWebJobsHttpRouteDataKey;
    public static string AzureWebJobsWebHookDataKey;
    public static string AzureWebJobsUseReverseRoutesKey;
    public static string FunctionNameRouteTokenKey;
}
public class Microsoft.Azure.WebJobs.Extensions.Http.HttpOptions : object {
    [CompilerGeneratedAttribute]
private string <RoutePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxOutstandingRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxConcurrentRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DynamicThrottlesEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableChunkedRequestBinding>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<HttpRequest, object> <SetResponse>k__BackingField;
    public string RoutePrefix { get; public set; }
    public int MaxOutstandingRequests { get; public set; }
    public int MaxConcurrentRequests { get; public set; }
    public bool DynamicThrottlesEnabled { get; public set; }
    public bool EnableChunkedRequestBinding { get; public set; }
    [JsonIgnoreAttribute]
public Action`2<HttpRequest, object> SetResponse { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RoutePrefix();
    [CompilerGeneratedAttribute]
public void set_RoutePrefix(string value);
    [CompilerGeneratedAttribute]
public int get_MaxOutstandingRequests();
    [CompilerGeneratedAttribute]
public void set_MaxOutstandingRequests(int value);
    [CompilerGeneratedAttribute]
public int get_MaxConcurrentRequests();
    [CompilerGeneratedAttribute]
public void set_MaxConcurrentRequests(int value);
    [CompilerGeneratedAttribute]
public bool get_DynamicThrottlesEnabled();
    [CompilerGeneratedAttribute]
public void set_DynamicThrottlesEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableChunkedRequestBinding();
    [CompilerGeneratedAttribute]
public void set_EnableChunkedRequestBinding(bool value);
    [CompilerGeneratedAttribute]
public Action`2<HttpRequest, object> get_SetResponse();
    [CompilerGeneratedAttribute]
public void set_SetResponse(Action`2<HttpRequest, object> value);
    public sealed virtual string Format();
}
[ExtensionAttribute]
public static class Microsoft.Azure.WebJobs.Extensions.Http.HttpRequestExtensions : object {
    private static int DefaultBufferSize;
    private static string EasyAuthIdentityHeader;
    private static Lazy`1<DataContractJsonSerializer> EasyAuthClaimsIdentitySerializer;
    private static Lazy`1<DataContractJsonSerializer> StaticWebAppsClaimsIdentitySerializer;
    private static HttpRequestExtensions();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.Http.HttpRequestExtensions/<ReadAsStringAsync>d__4")]
[ExtensionAttribute]
public static Task`1<string> ReadAsStringAsync(HttpRequest request);
    [ExtensionAttribute]
public static IDictionary`2<string, string> GetQueryParameterDictionary(HttpRequest request);
    [ExtensionAttribute]
public static bool IsJsonContentType(HttpRequest request);
    [ExtensionAttribute]
public static ClaimsIdentity GetAppServiceIdentity(HttpRequest request);
    private static bool TryConvertFromBase64EncodedJson(string payload, DataContractJsonSerializer serializer, ClaimsIdentity& claimsIdentity);
    private static DataContractJsonSerializer GetClaimsIdentitySerializer();
}
internal class Microsoft.Azure.WebJobs.Extensions.Http.HttpTriggerAttributeBindingProvider : object {
    internal static string HttpQueryKey;
    internal static string HttpHeadersKey;
    internal static string RequestBindingName;
    private IOptions`1<HttpOptions> _options;
    private static Type[] _supportedTypes;
    public HttpTriggerAttributeBindingProvider(IOptions`1<HttpOptions> options);
    private static HttpTriggerAttributeBindingProvider();
    public sealed virtual Task`1<ITriggerBinding> TryCreateAsync(TriggerBindingProviderContext context);
    private static bool IsValidUserType(Type type);
}
public class Microsoft.Azure.WebJobs.Extensions.Http.HttpWebJobsStartup : object {
    public sealed virtual void Configure(IWebJobsBuilder builder);
}
[ExtensionAttribute]
internal static class Microsoft.Azure.WebJobs.Extensions.Http.IDictionaryExtensions : object {
    [ExtensionAttribute]
public static void AddRange(IDictionary`2<TKey, TValue> dictionary, IReadOnlyDictionary`2<TKey, TValue> other);
}
internal interface Microsoft.Azure.WebJobs.Extensions.Http.IIdentityPrincipal {
    public abstract virtual ClaimsIdentity ToClaimsIdentity();
}
public interface Microsoft.Azure.WebJobs.Extensions.Http.IWebJobsRouteHandler {
    public abstract virtual Task InvokeAsync(HttpContext context, string functionName);
}
public interface Microsoft.Azure.WebJobs.Extensions.Http.IWebJobsRouter {
    public IInlineConstraintResolver ConstraintResolver { get; }
    public abstract virtual IInlineConstraintResolver get_ConstraintResolver();
    public abstract virtual void AddFunctionRoutes(IRouter functionRoutes, IRouter proxyRoutes);
    public abstract virtual void ClearRoutes();
    public abstract virtual WebJobsRouteBuilder CreateBuilder(IWebJobsRouteHandler routeHandler, string routePrefix);
    public abstract virtual string GetFunctionRouteTemplate(string functionName);
}
internal class Microsoft.Azure.WebJobs.Extensions.Http.PropertyHelper : object {
    private static MethodInfo CallPropertyGetterOpenGenericMethod;
    private static MethodInfo CallPropertyGetterByReferenceOpenGenericMethod;
    private static MethodInfo CallNullSafePropertyGetterOpenGenericMethod;
    private static MethodInfo CallNullSafePropertyGetterByReferenceOpenGenericMethod;
    private static MethodInfo CallPropertySetterOpenGenericMethod;
    private static ConcurrentDictionary`2<Type, PropertyHelper[]> PropertiesCache;
    private static ConcurrentDictionary`2<Type, PropertyHelper[]> VisiblePropertiesCache;
    private Action`2<object, object> _valueSetter;
    [CompilerGeneratedAttribute]
private PropertyInfo <Property>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<object, object> <ValueGetter>k__BackingField;
    public PropertyInfo Property { get; }
    public string Name { get; protected set; }
    public Func`2<object, object> ValueGetter { get; }
    public Action`2<object, object> ValueSetter { get; }
    public PropertyHelper(PropertyInfo property);
    private static PropertyHelper();
    [CompilerGeneratedAttribute]
public PropertyInfo get_Property();
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
protected virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public Func`2<object, object> get_ValueGetter();
    public Action`2<object, object> get_ValueSetter();
    public object GetValue(object instance);
    public void SetValue(object instance, object value);
    public static PropertyHelper[] GetProperties(object instance);
    public static PropertyHelper[] GetProperties(Type type);
    public static PropertyHelper[] GetVisibleProperties(object instance);
    public static PropertyHelper[] GetVisibleProperties(Type type);
    public static Func`2<object, object> MakeFastPropertyGetter(PropertyInfo propertyInfo);
    public static Func`2<object, object> MakeNullSafeFastPropertyGetter(PropertyInfo propertyInfo);
    private static Func`2<object, object> MakeFastPropertyGetter(PropertyInfo propertyInfo, MethodInfo propertyGetterWrapperMethod, MethodInfo propertyGetterByRefWrapperMethod);
    private static Func`2<object, object> MakeFastPropertyGetter(Type openGenericDelegateType, MethodInfo propertyGetMethod, MethodInfo openGenericWrapperMethod);
    public static Action`2<object, object> MakeFastPropertySetter(PropertyInfo propertyInfo);
    public static IDictionary`2<string, object> ObjectToDictionary(object value);
    private static PropertyHelper CreateInstance(PropertyInfo property);
    private static object CallPropertyGetter(Func`2<TDeclaringType, TValue> getter, object target);
    private static object CallPropertyGetterByReference(ByRefFunc`2<TDeclaringType, TValue> getter, object target);
    private static object CallNullSafePropertyGetter(Func`2<TDeclaringType, TValue> getter, object target);
    private static object CallNullSafePropertyGetterByReference(ByRefFunc`2<TDeclaringType, TValue> getter, object target);
    private static void CallPropertySetter(Action`2<TDeclaringType, TValue> setter, object target, object value);
    protected static PropertyHelper[] GetVisibleProperties(Type type, Func`2<PropertyInfo, PropertyHelper> createPropertyHelper, ConcurrentDictionary`2<Type, PropertyHelper[]> allPropertiesCache, ConcurrentDictionary`2<Type, PropertyHelper[]> visiblePropertiesCache);
    protected static PropertyHelper[] GetProperties(Type type, Func`2<PropertyInfo, PropertyHelper> createPropertyHelper, ConcurrentDictionary`2<Type, PropertyHelper[]> cache);
    private static bool IsInterestingProperty(PropertyInfo property);
}
[DataContractAttribute]
[KnownTypeAttribute("Microsoft.Azure.WebJobs.Extensions.Http.ClaimSlim")]
internal class Microsoft.Azure.WebJobs.Extensions.Http.StaticWebAppsClientPrincipal : ValueType {
    [DataMemberAttribute]
internal string IdentityProvider;
    [DataMemberAttribute]
internal string UserId;
    [DataMemberAttribute]
internal string UserDetails;
    [DataMemberAttribute]
internal List`1<string> UserRoles;
    public sealed virtual ClaimsIdentity ToClaimsIdentity();
}
internal static class Microsoft.Azure.WebJobs.Extensions.Http.Utility : object {
    internal static void ApplyBindingData(object value, Dictionary`2<string, object> bindingData);
    private static object ConvertPropertyValue(JProperty property);
    public static bool IsJson(string input);
}
public class Microsoft.Azure.WebJobs.Extensions.Http.WebJobsRouteBuilder : object {
    private IWebJobsRouteHandler _handler;
    private List`1<IRouter> _routes;
    private IInlineConstraintResolver _constraintResolver;
    private string _routePrefix;
    public int Count { get; }
    public WebJobsRouteBuilder(IApplicationBuilder applicationBuilder, IWebJobsRouteHandler handler);
    public WebJobsRouteBuilder(IApplicationBuilder applicationBuilder, IWebJobsRouteHandler handler, string routePrefix);
    public WebJobsRouteBuilder(IInlineConstraintResolver constraintResolver, IWebJobsRouteHandler handler, string routePrefix);
    public int get_Count();
    public void MapFunctionRoute(string name, string template, string functionName);
    public void MapFunctionRoute(string name, string template, object constraints, string functionName);
    public void MapFunctionRoute(string name, string template, object defaults, object constraints, object dataTokens, string functionName);
    public IRouter Build();
    private static string BuildRouteTemplate(string routePrefix, string routeTemplate);
}
public class Microsoft.Azure.WebJobs.Extensions.Http.WebJobsRouter : object {
    private IInlineConstraintResolver _constraintResolver;
    private RouteCollection _functionRoutes;
    private RouteCollection _proxyRoutes;
    private RouteCollection _routeCollection;
    private RouteCollection _routeCollectionReverse;
    public IInlineConstraintResolver ConstraintResolver { get; }
    public WebJobsRouter(IInlineConstraintResolver constraintResolver);
    public sealed virtual IInlineConstraintResolver get_ConstraintResolver();
    private void InitializeRouteCollections();
    public sealed virtual void ClearRoutes();
    public sealed virtual VirtualPathData GetVirtualPath(VirtualPathContext context);
    public sealed virtual Task RouteAsync(RouteContext context);
    public sealed virtual void AddFunctionRoutes(IRouter functionRoutes, IRouter proxyRoutes);
    public sealed virtual string GetFunctionRouteTemplate(string functionName);
    private string GetFunctionRouteTemplate(RouteCollection routes, string functionName);
    private bool IsFunctionRoute(Route functionRoute, string functionName);
    public sealed virtual WebJobsRouteBuilder CreateBuilder(IWebJobsRouteHandler routeHandler, string routePrefix);
}
[BindingAttribute]
[AttributeUsageAttribute("2048")]
public class Microsoft.Azure.WebJobs.HttpTriggerAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Route>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Methods>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationLevel <AuthLevel>k__BackingField;
    public string Route { get; public set; }
    public String[] Methods { get; private set; }
    public AuthorizationLevel AuthLevel { get; private set; }
    public HttpTriggerAttribute(String[] methods);
    public HttpTriggerAttribute(AuthorizationLevel authLevel);
    public HttpTriggerAttribute(AuthorizationLevel authLevel, String[] methods);
    [CompilerGeneratedAttribute]
public string get_Route();
    [CompilerGeneratedAttribute]
public void set_Route(string value);
    [CompilerGeneratedAttribute]
public String[] get_Methods();
    [CompilerGeneratedAttribute]
private void set_Methods(String[] value);
    [CompilerGeneratedAttribute]
public AuthorizationLevel get_AuthLevel();
    [CompilerGeneratedAttribute]
private void set_AuthLevel(AuthorizationLevel value);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Hosting.HttpWebJobsBuilderExtensions : object {
    [ExtensionAttribute]
public static IWebJobsBuilder AddHttp(IWebJobsBuilder builder);
    [ExtensionAttribute]
public static IWebJobsBuilder AddHttp(IWebJobsBuilder builder, Action`1<HttpOptions> configure);
}
