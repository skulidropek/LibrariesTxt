internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.AttributeCloner`1 : object {
    private TAttribute _source;
    private ConstructorInfo _matchedCtor;
    private Func`3[] _ctorParamResolvers;
    private Action`2[] _propertySetters;
    private Dictionary`2<PropertyInfo, AutoResolveAttribute> _autoResolves;
    private static BindingFlags Flags;
    private IConfiguration _configuration;
    internal AttributeCloner`1(TAttribute source, IReadOnlyDictionary`2<string, Type> bindingDataContract, IConfiguration configuration, INameResolver nameResolver);
    private Func`3<Attribute, IReadOnlyDictionary`2<string, object>, object> GetResolver(PropertyInfo propInfo, INameResolver nameResolver, IReadOnlyDictionary`2<string, Type> contract);
    internal Func`3<Attribute, IReadOnlyDictionary`2<string, object>, object> GetAutoResolveResolver(string originalValue, AutoResolveAttribute autoResolveAttr, INameResolver nameResolver, PropertyInfo propInfo, IReadOnlyDictionary`2<string, Type> contract, Action`1<object> validator);
    internal static Func`3<Attribute, IReadOnlyDictionary`2<string, object>, object> GetConfigurationResolver(string propertyValue, string defaultValue, PropertyInfo propInfo, Action`1<object> validator, Func`2<string, string> resolveValue);
    private static Action`1<object> GetValidatorFunc(PropertyInfo propInfo, bool dontLogValues);
    internal static Func`3<Attribute, IReadOnlyDictionary`2<string, object>, object> GetBuiltinTemplateResolver(string originalValue, INameResolver nameResolver, Action`1<object> validator);
    internal static Func`3<Attribute, IReadOnlyDictionary`2<string, object>, object> GetTemplateResolver(string originalValue, AutoResolveAttribute attr, INameResolver nameResolver, PropertyInfo propInfo, IReadOnlyDictionary`2<string, Type> contract, Action`1<object> validator);
    public TAttribute ResolveFromBindingData(BindingContext ctx);
    internal TAttribute New(string invokeString);
    internal TAttribute New(IDictionary`2<string, string> overrideProperties);
    internal TAttribute ResolveFromBindings(IReadOnlyDictionary`2<string, object> bindingData);
    private static string TemplateBind(IResolutionPolicy policy, PropertyInfo prop, Attribute attr, BindingTemplate template, IReadOnlyDictionary`2<string, object> bindingData, Action`1<object> validator);
    internal static IResolutionPolicy GetPolicy(Type formatterType, PropertyInfo propInfo);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.AzureSignalRClient : object {
    public static string AzureSignalRUserPrefix;
    private static String[] SystemClaims;
    private ServiceHubContext _serviceHubContext;
    public AzureSignalRClient(ServiceHubContext serviceHubContext);
    private static AzureSignalRClient();
    public Task`1<SignalRConnectionInfo> GetClientConnectionInfoAsync(string userId, string idToken, String[] claimTypeList, HttpContext httpContext);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.AzureSignalRClient/<GetClientConnectionInfoAsync>d__5")]
public Task`1<SignalRConnectionInfo> GetClientConnectionInfoAsync(string userId, IList`1<Claim> claims, HttpContext httpContext);
    public IList`1<Claim> GetCustomClaims(string idToken, String[] claimTypeList);
    public sealed virtual Task SendToAll(SignalRData data);
    public sealed virtual Task SendToConnection(string connectionId, SignalRData data);
    public sealed virtual Task SendToUser(string userId, SignalRData data);
    public sealed virtual Task SendToGroup(string groupName, SignalRData data);
    public sealed virtual Task AddUserToGroup(SignalRGroupAction action);
    public sealed virtual Task RemoveUserFromGroup(SignalRGroupAction action);
    public sealed virtual Task RemoveUserFromAllGroups(SignalRGroupAction action);
    public sealed virtual Task AddConnectionToGroup(SignalRGroupAction action);
    public sealed virtual Task RemoveConnectionFromGroup(SignalRGroupAction action);
    [IteratorStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.AzureSignalRClient/<BuildJwtClaims>d__16")]
private static IEnumerable`1<Claim> BuildJwtClaims(IEnumerable`1<Claim> customerClaims, string prefix);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.AzureSignalRClient/<InvokeAsync>d__17")]
private Task InvokeAsync(ServiceEndpoint[] endpoints, Func`2<ServiceHubContext, Task> func);
}
internal abstract class Microsoft.Azure.WebJobs.Extensions.SignalRService.BindingBase`1 : object {
    protected AttributeCloner`1<TAttribute> Cloner;
    private ParameterDescriptor param;
    public bool FromAttribute { get; }
    public BindingBase`1(BindingProviderContext context, IConfiguration configuration, INameResolver nameResolver);
    public sealed virtual bool get_FromAttribute();
    protected abstract virtual Task`1<IValueProvider> BuildAsync(TAttribute attrResolved, IReadOnlyDictionary`2<string, object> bindingContext);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.BindingBase`1/<BindAsync>d__6")]
public sealed virtual Task`1<IValueProvider> BindAsync(BindingContext context);
    public sealed virtual Task`1<IValueProvider> BindAsync(object value, ValueBindingContext context);
    public sealed virtual ParameterDescriptor ToParameterDescriptor();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.Azure.WebJobs.Extensions.SignalRService.Category : object {
    public static string Connections;
    public static string Messages;
}
internal static class Microsoft.Azure.WebJobs.Extensions.SignalRService.Constants : object {
    public static string AzureSignalRConnectionStringName;
    public static string AzureSignalREndpoints;
    public static string AzureSignalRHubProtocol;
    public static string AzureSignalRNewtonsoftCamelCase;
    public static string AzureSignalRMessagePackHubProtocolEnabled;
    public static string ServiceTransportTypeName;
    public static string AzureSignalRRetry;
    public static string AzureSignalRHttpClientTimeout;
    public static string AsrsHeaderPrefix;
    public static string AsrsConnectionIdHeader;
    public static string AsrsUserClaims;
    public static string AsrsUserId;
    public static string AsrsHubNameHeader;
    public static string AsrsCategory;
    public static string AsrsEvent;
    public static string AsrsClientQueryString;
    public static string AsrsSignature;
    public static string JsonContentType;
    public static string MessagePackContentType;
    public static string OnConnected;
    public static string OnDisconnected;
    public static string FunctionsWorkerRuntime;
    public static string FunctionsWorkerProductInfoKey;
    public static string DotnetWorker;
    public static string ServiceUriKey;
    public static string ServerEndpointKey;
    public static string ClientEndpointKey;
    public static string TypeKey;
    private static Constants();
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.DefaultSecurityTokenValidator : object {
    private static string AuthHeaderName;
    private static string BearerPrefix;
    private TokenValidationParameters _tokenValidationParameters;
    private JwtSecurityTokenHandler _handler;
    public DefaultSecurityTokenValidator(Action`1<TokenValidationParameters> configureTokenValidationParameters);
    public sealed virtual SecurityTokenResult ValidateToken(HttpRequest request);
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.EmptyConfiguration : object {
    private static IConfiguration EmptyImpl;
    private IConfiguration _configuration;
    public string Item { get; public set; }
    public EmptyConfiguration(IConfiguration configuration);
    private static EmptyConfiguration();
    public sealed virtual string get_Item(string key);
    public sealed virtual void set_Item(string key, string value);
    public sealed virtual IEnumerable`1<IConfigurationSection> GetChildren();
    public sealed virtual IChangeToken GetReloadToken();
    public sealed virtual IConfigurationSection GetSection(string key);
}
[JsonObjectAttribute]
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.EndpointConnectionInfo : LiteServiceEndpoint {
    [CompilerGeneratedAttribute]
private SignalRConnectionInfo <ConnectionInfo>k__BackingField;
    public SignalRConnectionInfo ConnectionInfo { get; public set; }
    public EndpointConnectionInfo(ServiceEndpoint endpoint);
    [CompilerGeneratedAttribute]
public SignalRConnectionInfo get_ConnectionInfo();
    [CompilerGeneratedAttribute]
public void set_ConnectionInfo(SignalRConnectionInfo value);
}
internal static class Microsoft.Azure.WebJobs.Extensions.SignalRService.ErrorMessages : object {
    public static string EmptyConnectionStringErrorMessageFormat;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.Azure.WebJobs.Extensions.SignalRService.Event : object {
    public static string Connected;
    public static string Disconnected;
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.ExecutionContext : object {
    [CompilerGeneratedAttribute]
private ITriggeredFunctionExecutor <Executor>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SignatureValidationOptions> <SignatureValidationOptions>k__BackingField;
    public ITriggeredFunctionExecutor Executor { get; public set; }
    public IOptionsMonitor`1<SignatureValidationOptions> SignatureValidationOptions { get; public set; }
    [CompilerGeneratedAttribute]
public ITriggeredFunctionExecutor get_Executor();
    [CompilerGeneratedAttribute]
public void set_Executor(ITriggeredFunctionExecutor value);
    [CompilerGeneratedAttribute]
public IOptionsMonitor`1<SignatureValidationOptions> get_SignatureValidationOptions();
    [CompilerGeneratedAttribute]
public void set_SignatureValidationOptions(IOptionsMonitor`1<SignatureValidationOptions> value);
}
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Microsoft.Azure.WebJobs.Extensions.SignalRService.GroupAction : Enum {
    public int value__;
    [EnumMemberAttribute]
public static GroupAction Add;
    [EnumMemberAttribute]
public static GroupAction Remove;
    [EnumMemberAttribute]
public static GroupAction RemoveAll;
}
internal enum Microsoft.Azure.WebJobs.Extensions.SignalRService.HubProtocol : Enum {
    public int value__;
    public static HubProtocol SystemTextJson;
    public static HubProtocol NewtonsoftJson;
}
internal interface Microsoft.Azure.WebJobs.Extensions.SignalRService.IAzureSignalRSender {
    public abstract virtual Task SendToAll(SignalRData data);
    public abstract virtual Task SendToConnection(string connectionId, SignalRData data);
    public abstract virtual Task SendToUser(string userId, SignalRData data);
    public abstract virtual Task SendToGroup(string group, SignalRData data);
    public abstract virtual Task AddUserToGroup(SignalRGroupAction action);
    public abstract virtual Task RemoveUserFromGroup(SignalRGroupAction action);
    public abstract virtual Task RemoveUserFromAllGroups(SignalRGroupAction action);
    public abstract virtual Task AddConnectionToGroup(SignalRGroupAction action);
    public abstract virtual Task RemoveConnectionFromGroup(SignalRGroupAction action);
}
[ExtensionAttribute]
internal static class Microsoft.Azure.WebJobs.Extensions.SignalRService.IConfigurationExtensions : object {
    [IteratorStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.IConfigurationExtensions/<GetEndpoints>d__0")]
[ExtensionAttribute]
public static IEnumerable`1<ServiceEndpoint> GetEndpoints(IConfiguration config, AzureComponentFactory azureComponentFactory);
    [IteratorStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.IConfigurationExtensions/<GetNamedEndpointsFromConnectionString>d__1")]
[ExtensionAttribute]
public static IEnumerable`1<ServiceEndpoint> GetNamedEndpointsFromConnectionString(IConfigurationSection section);
    [ExtensionAttribute]
public static bool TryGetEndpointFromIdentity(IConfigurationSection section, AzureComponentFactory azureComponentFactory, ServiceEndpoint& endpoint, bool isNamed);
    [ExtensionAttribute]
public static bool TryGetJsonObjectSerializer(IConfiguration configuration, ObjectSerializer& serializer);
    [ExtensionAttribute]
private static bool OnDotnetInProcessRuntime(IConfiguration configuration);
}
internal interface Microsoft.Azure.WebJobs.Extensions.SignalRService.IInternalServiceHubContextStore {
    public IOptionsMonitor`1<SignatureValidationOptions> SignatureValidationOptions { get; }
    public abstract virtual IOptionsMonitor`1<SignatureValidationOptions> get_SignatureValidationOptions();
    public abstract virtual ValueTask`1<ServiceHubContext`1<T>> GetAsync(string hubName);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.InputBindingProvider : object {
    private ISecurityTokenValidator securityTokenValidator;
    private ISignalRConnectionInfoConfigurer signalRConnectionInfoConfigurer;
    private INameResolver nameResolver;
    private IConfiguration configuration;
    public InputBindingProvider(IConfiguration configuration, INameResolver nameResolver, ISecurityTokenValidator securityTokenValidator, ISignalRConnectionInfoConfigurer signalRConnectionInfoConfigurer);
    public sealed virtual Task`1<IBinding> TryCreateAsync(BindingProviderContext context);
}
[JsonObjectAttribute]
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.InternalSignalRMessage : object {
    [CompilerGeneratedAttribute]
private string <connectionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <userId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <groupName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <target>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceEndpoint[] <endpoints>k__BackingField;
    public string connectionId { get; public set; }
    public string userId { get; public set; }
    public string groupName { get; public set; }
    [JsonRequiredAttribute]
public string target { get; public set; }
    public Object[] arguments { get; public set; }
    public ServiceEndpoint[] endpoints { get; public set; }
    [CompilerGeneratedAttribute]
public string get_connectionId();
    [CompilerGeneratedAttribute]
public void set_connectionId(string value);
    [CompilerGeneratedAttribute]
public string get_userId();
    [CompilerGeneratedAttribute]
public void set_userId(string value);
    [CompilerGeneratedAttribute]
public string get_groupName();
    [CompilerGeneratedAttribute]
public void set_groupName(string value);
    [CompilerGeneratedAttribute]
public string get_target();
    [CompilerGeneratedAttribute]
public void set_target(string value);
    [CompilerGeneratedAttribute]
public Object[] get_arguments();
    [CompilerGeneratedAttribute]
public void set_arguments(Object[] value);
    [CompilerGeneratedAttribute]
public ServiceEndpoint[] get_endpoints();
    [CompilerGeneratedAttribute]
public void set_endpoints(ServiceEndpoint[] value);
}
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.InvocationContext : object {
    [CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Event>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Hub>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConnectionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceHubContext <HubContext>k__BackingField;
    public Object[] Arguments { get; public set; }
    public string Error { get; public set; }
    public string Category { get; public set; }
    public string Event { get; public set; }
    public string Hub { get; public set; }
    public string ConnectionId { get; public set; }
    public string UserId { get; public set; }
    public IDictionary`2<string, string> Headers { get; public set; }
    public IDictionary`2<string, string> Query { get; public set; }
    public IDictionary`2<string, string> Claims { get; public set; }
    internal ServiceHubContext HubContext { get; internal set; }
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(Object[] value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public string get_Event();
    [CompilerGeneratedAttribute]
public void set_Event(string value);
    [CompilerGeneratedAttribute]
public string get_Hub();
    [CompilerGeneratedAttribute]
public void set_Hub(string value);
    [CompilerGeneratedAttribute]
public string get_ConnectionId();
    [CompilerGeneratedAttribute]
public void set_ConnectionId(string value);
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Query();
    [CompilerGeneratedAttribute]
public void set_Query(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
internal ServiceHubContext get_HubContext();
    [CompilerGeneratedAttribute]
internal void set_HubContext(ServiceHubContext value);
}
[ExtensionAttribute]
public static class Microsoft.Azure.WebJobs.Extensions.SignalRService.InvocationContextExtensions : object {
    [ExtensionAttribute]
public static Task`1<IHubClients> GetClientsAsync(InvocationContext invocationContext);
    [ExtensionAttribute]
public static Task`1<IGroupManager> GetGroupsAsync(InvocationContext invocationContext);
    [ExtensionAttribute]
public static Task`1<IUserGroupManager> GetUserGroupManagerAsync(InvocationContext invocationContext);
    [ExtensionAttribute]
public static ClientManager GetClientManager(InvocationContext invocationContext);
}
internal interface Microsoft.Azure.WebJobs.Extensions.SignalRService.IRequestResolver {
    public abstract virtual bool ValidateContentType(HttpRequestMessage request);
    public abstract virtual bool ValidateSignature(HttpRequestMessage request, IOptionsMonitor`1<SignatureValidationOptions> signatureValidationOptions);
    public abstract virtual bool TryGetInvocationContext(HttpRequestMessage request, InvocationContext& context);
    public abstract virtual Task`1<ValueTuple`2<T, IHubProtocol>> GetMessageAsync(HttpRequestMessage request);
}
public interface Microsoft.Azure.WebJobs.Extensions.SignalRService.ISecurityTokenValidator {
    public abstract virtual SecurityTokenResult ValidateToken(HttpRequest request);
}
public interface Microsoft.Azure.WebJobs.Extensions.SignalRService.IServiceHubContextStore {
    public IServiceManager ServiceManager { get; }
    public abstract virtual ValueTask`1<IServiceHubContext> GetAsync(string hubName);
    public abstract virtual IServiceManager get_ServiceManager();
}
internal interface Microsoft.Azure.WebJobs.Extensions.SignalRService.IServiceManagerStore {
    public abstract virtual IInternalServiceHubContextStore GetOrAddByConnectionStringKey(string connectionStringKey);
}
public interface Microsoft.Azure.WebJobs.Extensions.SignalRService.ISignalRConnectionInfoConfigurer {
    public Func`4<SecurityTokenResult, HttpRequest, SignalRConnectionDetail, SignalRConnectionDetail> Configure { get; public set; }
    public abstract virtual Func`4<SecurityTokenResult, HttpRequest, SignalRConnectionDetail, SignalRConnectionDetail> get_Configure();
    public abstract virtual void set_Configure(Func`4<SecurityTokenResult, HttpRequest, SignalRConnectionDetail, SignalRConnectionDetail> value);
}
internal interface Microsoft.Azure.WebJobs.Extensions.SignalRService.ISignalRTriggerDispatcher {
    public abstract virtual void Map(ValueTuple`3<string, string, string> key, ExecutionContext executor);
    public abstract virtual Task`1<HttpResponseMessage> ExecuteAsync(HttpRequestMessage req, CancellationToken token);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.JsonMessageParser : MessageParser {
    private static IServerlessProtocol ServerlessProtocol;
    [CompilerGeneratedAttribute]
private IHubProtocol <Protocol>k__BackingField;
    public IHubProtocol Protocol { get; }
    private static JsonMessageParser();
    public virtual bool TryParseMessage(ReadOnlySequence`1& buffer, ServerlessMessage& message);
    [CompilerGeneratedAttribute]
public virtual IHubProtocol get_Protocol();
}
[ExtensionAttribute]
internal static class Microsoft.Azure.WebJobs.Extensions.SignalRService.JTokenExtensions : object {
    public static JsonSerializer JsonSerializers;
    private static JTokenExtensions();
    [ExtensionAttribute]
public static bool TryToObject(JToken input, TOutput& output);
}
[JsonObjectAttribute]
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.LiteServiceEndpoint : object {
    [CompilerGeneratedAttribute]
private EndpointType <EndpointType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Online>k__BackingField;
    [JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public EndpointType EndpointType { get; public set; }
    public string Name { get; public set; }
    public string Endpoint { get; public set; }
    public bool Online { get; public set; }
    public LiteServiceEndpoint(ServiceEndpoint e);
    [CompilerGeneratedAttribute]
public EndpointType get_EndpointType();
    [CompilerGeneratedAttribute]
public void set_EndpointType(EndpointType value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public bool get_Online();
    [CompilerGeneratedAttribute]
public void set_Online(bool value);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.MessagePackMessageParser : MessageParser {
    private static IServerlessProtocol ServerlessProtocol;
    [CompilerGeneratedAttribute]
private IHubProtocol <Protocol>k__BackingField;
    public IHubProtocol Protocol { get; }
    private static MessagePackMessageParser();
    public virtual bool TryParseMessage(ReadOnlySequence`1& buffer, ServerlessMessage& message);
    [CompilerGeneratedAttribute]
public virtual IHubProtocol get_Protocol();
}
internal abstract class Microsoft.Azure.WebJobs.Extensions.SignalRService.MessageParser : object {
    public static MessageParser Json;
    public static MessageParser MessagePack;
    public IHubProtocol Protocol { get; }
    private static MessageParser();
    public static MessageParser GetParser(string protocol);
    public abstract virtual bool TryParseMessage(ReadOnlySequence`1& buffer, ServerlessMessage& message);
    public abstract virtual IHubProtocol get_Protocol();
}
[AttributeUsageAttribute("10240")]
[BindingAttribute]
public abstract class Microsoft.Azure.WebJobs.Extensions.SignalRService.NegotiationBaseAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ConnectionStringSetting>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HubName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdToken>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ClaimTypeList>k__BackingField;
    public string ConnectionStringSetting { get; public set; }
    [AutoResolveAttribute]
public string HubName { get; public set; }
    [AutoResolveAttribute]
public string UserId { get; public set; }
    [AutoResolveAttribute]
public string IdToken { get; public set; }
    public String[] ClaimTypeList { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ConnectionStringSetting();
    [CompilerGeneratedAttribute]
public void set_ConnectionStringSetting(string value);
    [CompilerGeneratedAttribute]
public string get_HubName();
    [CompilerGeneratedAttribute]
public void set_HubName(string value);
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
public string get_IdToken();
    [CompilerGeneratedAttribute]
public void set_IdToken(string value);
    [CompilerGeneratedAttribute]
public String[] get_ClaimTypeList();
    [CompilerGeneratedAttribute]
public void set_ClaimTypeList(String[] value);
}
[JsonObjectAttribute]
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.NegotiationContext : object {
    [CompilerGeneratedAttribute]
private EndpointConnectionInfo[] <Endpoints>k__BackingField;
    public EndpointConnectionInfo[] Endpoints { get; public set; }
    [CompilerGeneratedAttribute]
public EndpointConnectionInfo[] get_Endpoints();
    [CompilerGeneratedAttribute]
public void set_Endpoints(EndpointConnectionInfo[] value);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.NegotiationContextAsyncConverter : object {
    private IServiceManagerStore _serviceManagerStore;
    public NegotiationContextAsyncConverter(IServiceManagerStore serviceManagerStore);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.NegotiationContextAsyncConverter/<ConvertAsync>d__2")]
public sealed virtual Task`1<NegotiationContext> ConvertAsync(SignalRNegotiationAttribute input, CancellationToken cancellationToken);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.NullListener : object {
    public sealed virtual void Dispose();
    public sealed virtual Task StartAsync(CancellationToken cancellationToken);
    public sealed virtual Task StopAsync(CancellationToken cancellationToken);
    public sealed virtual void Cancel();
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.OptionsSetup : object {
    private IConfiguration _configuration;
    private Action`1<ServiceManagerOptions> _configureServiceManagerOptions;
    public Action`1<ServiceManagerOptions> Configure { get; }
    public OptionsSetup(IConfiguration configuration, AzureComponentFactory azureComponentFactory, string connectionStringKey, SignalROptions optionsFromCode);
    public Action`1<ServiceManagerOptions> get_Configure();
}
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SecurityTokenResult : object {
    [CompilerGeneratedAttribute]
private SecurityTokenStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Principal>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [JsonPropertyAttribute("status")]
public SecurityTokenStatus Status { get; }
    public ClaimsPrincipal Principal { get; }
    [JsonPropertyAttribute("exception")]
public Exception Exception { get; }
    private SecurityTokenResult(SecurityTokenStatus status, ClaimsPrincipal principal, Exception exception);
    [CompilerGeneratedAttribute]
public SecurityTokenStatus get_Status();
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Principal();
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    public static SecurityTokenResult Success(ClaimsPrincipal principal);
    public static SecurityTokenResult Error(Exception ex);
    public static SecurityTokenResult Empty();
}
public enum Microsoft.Azure.WebJobs.Extensions.SignalRService.SecurityTokenStatus : Enum {
    public int value__;
    public static SecurityTokenStatus Valid;
    public static SecurityTokenStatus Error;
    public static SecurityTokenStatus Empty;
}
[AttributeUsageAttribute("10240")]
[BindingAttribute]
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SecurityTokenValidationAttribute : Attribute {
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SecurityTokenValidationInputBinding : object {
    private static string HttpRequestName;
    private ISecurityTokenValidator _securityTokenValidator;
    [CompilerGeneratedAttribute]
private bool <FromAttribute>k__BackingField;
    public bool FromAttribute { get; }
    public SecurityTokenValidationInputBinding(ISecurityTokenValidator securityTokenValidator);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_FromAttribute();
    public sealed virtual Task`1<IValueProvider> BindAsync(object value, ValueBindingContext context);
    public sealed virtual Task`1<IValueProvider> BindAsync(BindingContext context);
    public sealed virtual ParameterDescriptor ToParameterDescriptor();
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SecurityTokenValidationValueProvider : object {
    private SecurityTokenResult _result;
    private string _invokeString;
    public Type Type { get; }
    public SecurityTokenValidationValueProvider(SecurityTokenResult result, string invokeString);
    public sealed virtual Task`1<object> GetValueAsync();
    public sealed virtual string ToInvokeString();
    public sealed virtual Type get_Type();
}
public abstract class Microsoft.Azure.WebJobs.Extensions.SignalRService.ServerlessHub : object {
    private static Lazy`1<JwtSecurityTokenHandler> JwtSecurityTokenHandler;
    private bool _disposed;
    private IServiceHubContext _hubContext;
    private IServiceManager _serviceManager;
    internal ServiceHubContext HubContext { get; }
    internal string ConnectionName { get; }
    public IHubClients Clients { get; }
    public IGroupManager Groups { get; }
    public IUserGroupManager UserGroups { get; }
    public ClientManager ClientManager { get; }
    public string HubName { get; }
    protected ServerlessHub(IServiceHubContext hubContext, IServiceManager serviceManager);
    internal ServerlessHub(IServiceManagerStore store);
    private static ServerlessHub();
    internal ServiceHubContext get_HubContext();
    internal string get_ConnectionName();
    public IHubClients get_Clients();
    public IGroupManager get_Groups();
    public IUserGroupManager get_UserGroups();
    public ClientManager get_ClientManager();
    public string get_HubName();
    protected SignalRConnectionInfo Negotiate(string userId, IList`1<Claim> claims, Nullable`1<TimeSpan> lifetime);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.ServerlessHub/<NegotiateAsync>d__22")]
protected Task`1<SignalRConnectionInfo> NegotiateAsync(NegotiationOptions options);
    protected IList`1<Claim> GetClaims(string jwt);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
public abstract class Microsoft.Azure.WebJobs.Extensions.SignalRService.ServerlessHub`1 : object {
    private static Lazy`1<JwtSecurityTokenHandler> JwtSecurityTokenHandler;
    private ServiceHubContext`1<T> _hubContext;
    public IHubClients`1<T> Clients { get; }
    public GroupManager Groups { get; }
    public UserGroupManager UserGroups { get; }
    public ClientManager ClientManager { get; }
    public string HubName { get; }
    protected ServerlessHub`1(ServiceHubContext`1<T> serviceHubContext);
    internal ServerlessHub`1(IServiceManagerStore serviceManagerStore);
    private static ServerlessHub`1();
    public IHubClients`1<T> get_Clients();
    public GroupManager get_Groups();
    public UserGroupManager get_UserGroups();
    public ClientManager get_ClientManager();
    public string get_HubName();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.ServerlessHub`1/<NegotiateAsync>d__15")]
protected Task`1<SignalRConnectionInfo> NegotiateAsync(NegotiationOptions options);
    protected IList`1<Claim> GetClaims(string jwt);
    private ServiceHubContext`1<T> GetHubContext(IServiceManagerStore serviceManagerStore);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.ServiceEndpointJsonConverter : JsonConverter`1<ServiceEndpoint> {
    private static string FakeAccessKey;
    public virtual ServiceEndpoint ReadJson(JsonReader reader, Type objectType, ServiceEndpoint existingValue, bool hasExistingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, ServiceEndpoint value, JsonSerializer serializer);
    private static ServiceEndpoint ToEqualServiceEndpoint(LiteServiceEndpoint e);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.ServiceHubContextStore : object {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<string, ValueTuple`2<Lazy`1<Task`1<IServiceHubContext>>, IServiceHubContext>> _store;
    private ConcurrentDictionary`2<string, Lazy`1<Task`1<object>>> _stronglyTypedStore;
    private ServiceManager _serviceManager;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SignatureValidationOptions> <SignatureValidationOptions>k__BackingField;
    public IServiceManager ServiceManager { get; }
    public IOptionsMonitor`1<SignatureValidationOptions> SignatureValidationOptions { get; }
    public ServiceHubContextStore(IOptionsMonitor`1<SignatureValidationOptions> signatureValidationOptions, ServiceManager serviceManager);
    public sealed virtual IServiceManager get_ServiceManager();
    [CompilerGeneratedAttribute]
public sealed virtual IOptionsMonitor`1<SignatureValidationOptions> get_SignatureValidationOptions();
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.ServiceHubContextStore/<GetAsync>d__9`1")]
public sealed virtual ValueTask`1<ServiceHubContext`1<T>> GetAsync(string hubName);
    public sealed virtual ValueTask`1<IServiceHubContext> GetAsync(string hubName);
    private ValueTask`1<IServiceHubContext> GetAsyncCore(string hubName, ValueTuple`2<Lazy`1<Task`1<IServiceHubContext>>, IServiceHubContext> pair);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.ServiceHubContextStore/<GetFromLazyAsync>d__12")]
private Task`1<IServiceHubContext> GetFromLazyAsync(string hubName, ValueTuple`2<Lazy`1<Task`1<IServiceHubContext>>, IServiceHubContext> pair);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.ServiceHubContextStore/<DisposeAsync>d__13")]
public sealed virtual ValueTask DisposeAsync();
    public sealed virtual void Dispose();
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.ServiceManagerStore : object {
    private ILoggerFactory _loggerFactory;
    private AzureComponentFactory _azureComponentFactory;
    private SignalROptions _options;
    private IConfiguration _configuration;
    private IEndpointRouter _router;
    private ConcurrentDictionary`2<string, IInternalServiceHubContextStore> _store;
    public ServiceManagerStore(IConfiguration configuration, ILoggerFactory loggerFactory, AzureComponentFactory azureComponentFactory, IOptions`1<SignalROptions> options, IEndpointRouter router);
    public sealed virtual IInternalServiceHubContextStore GetOrAddByConnectionStringKey(string connectionStringKey);
    public IInternalServiceHubContextStore GetByConfigurationKey(string connectionStringKey);
    private IInternalServiceHubContextStore CreateHubContextStore(string connectionStringKey);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.ServiceManagerStore/<DisposeAsync>d__10")]
public sealed virtual ValueTask DisposeAsync();
    public sealed virtual void Dispose();
    private static void AddWorkingInfo(ServiceManagerBuilder builder, IConfiguration configuration);
}
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRAsyncCollector`1 : object {
    private IAzureSignalRSender _client;
    private SignalROutputConverter _converter;
    internal SignalRAsyncCollector`1(IAzureSignalRSender client);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRAsyncCollector`1/<AddAsync>d__3")]
public sealed virtual Task AddAsync(T item, CancellationToken cancellationToken);
    public sealed virtual Task FlushAsync(CancellationToken cancellationToken);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRAsyncCollectorBuilder`1 : object {
    private IServiceManagerStore _managerStore;
    public SignalRAsyncCollectorBuilder`1(IServiceManagerStore managerStore);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRAsyncCollectorBuilder`1/<ConvertAsync>d__2")]
public sealed virtual Task`1<IAsyncCollector`1<T>> ConvertAsync(SignalRAttribute input, CancellationToken cancellationToken);
}
[AttributeUsageAttribute("10240")]
[BindingAttribute]
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ConnectionStringSetting>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HubName>k__BackingField;
    public string ConnectionStringSetting { get; public set; }
    [AutoResolveAttribute]
public string HubName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ConnectionStringSetting();
    [CompilerGeneratedAttribute]
public void set_ConnectionStringSetting(string value);
    [CompilerGeneratedAttribute]
public string get_HubName();
    [CompilerGeneratedAttribute]
public void set_HubName(string value);
}
[ExtensionAttribute("SignalR", "signalr")]
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConfigProvider : object {
    private IServiceManagerStore _serviceManagerStore;
    private INameResolver _nameResolver;
    private ILogger _logger;
    private ISignalRTriggerDispatcher _dispatcher;
    private InputBindingProvider _inputBindingProvider;
    public SignalRConfigProvider(INameResolver nameResolver, ILoggerFactory loggerFactory, IConfiguration configuration, IServiceManagerStore serviceManagerStore, ISecurityTokenValidator securityTokenValidator, ISignalRConnectionInfoConfigurer signalRConnectionInfoConfigurer);
    [ObsoleteAttribute("preview")]
public sealed virtual void Initialize(ExtensionConfigContext context);
    public sealed virtual Task`1<HttpResponseMessage> ConvertAsync(HttpRequestMessage input, CancellationToken cancellationToken);
}
[AttributeUsageAttribute("4")]
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConnectionAttribute : Attribute {
    private string _connection;
    public string Connection { get; public set; }
    public SignalRConnectionAttribute(string connection);
    public sealed virtual string get_Connection();
    public sealed virtual void set_Connection(string value);
}
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConnectionDetail : object {
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Claim> <Claims>k__BackingField;
    public string UserId { get; public set; }
    public IList`1<Claim> Claims { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
public IList`1<Claim> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(IList`1<Claim> value);
}
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConnectionInfo : object {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [JsonPropertyAttribute("url")]
public string Url { get; public set; }
    [JsonPropertyAttribute("accessToken")]
public string AccessToken { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
}
[AttributeUsageAttribute("10240")]
[BindingAttribute]
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConnectionInfoAttribute : NegotiationBaseAttribute {
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConnectionInfoValueProvider : object {
    private SignalRConnectionInfo _info;
    private string _invokeString;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public Type Type { get; }
    public SignalRConnectionInfoValueProvider(SignalRConnectionInfo info, Type type, string invokeString);
    [CompilerGeneratedAttribute]
public sealed virtual Type get_Type();
    public sealed virtual Task`1<object> GetValueAsync();
    public sealed virtual string ToInvokeString();
    private object GetUserTypeInfo();
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConnectionInputBinding : BindingBase`1<SignalRConnectionInfoAttribute> {
    private static string HttpRequestName;
    private ISecurityTokenValidator _securityTokenValidator;
    private ISignalRConnectionInfoConfigurer _signalRConnectionInfoConfigurer;
    private IServiceManagerStore _managerStore;
    private Type _userType;
    public SignalRConnectionInputBinding(BindingProviderContext context, IConfiguration configuration, INameResolver nameResolver, ISecurityTokenValidator securityTokenValidator, ISignalRConnectionInfoConfigurer signalRConnectionInfoConfigurer);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConnectionInputBinding/<BuildAsync>d__6")]
protected virtual Task`1<IValueProvider> BuildAsync(SignalRConnectionInfoAttribute attrResolved, IReadOnlyDictionary`2<string, object> bindingData);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConnectMethodExecutor : SignalRMethodExecutor {
    public SignalRConnectMethodExecutor(IRequestResolver resolver, ExecutionContext executionContext);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConnectMethodExecutor/<ExecuteAsync>d__1")]
public virtual Task`1<HttpResponseMessage> ExecuteAsync(HttpRequestMessage request);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRData : object {
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceEndpoint[] <Endpoints>k__BackingField;
    public string Target { get; public set; }
    public Object[] Arguments { get; public set; }
    public ServiceEndpoint[] Endpoints { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(Object[] value);
    [CompilerGeneratedAttribute]
public ServiceEndpoint[] get_Endpoints();
    [CompilerGeneratedAttribute]
public void set_Endpoints(ServiceEndpoint[] value);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRDisconnectMethodExecutor : SignalRMethodExecutor {
    public SignalRDisconnectMethodExecutor(IRequestResolver resolver, ExecutionContext executionContext);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRDisconnectMethodExecutor/<ExecuteAsync>d__1")]
public virtual Task`1<HttpResponseMessage> ExecuteAsync(HttpRequestMessage request);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalREndpointsAsyncConverter : object {
    private IServiceManagerStore _serviceManagerStore;
    public SignalREndpointsAsyncConverter(IServiceManagerStore serviceManagerStore);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalREndpointsAsyncConverter/<ConvertAsync>d__2")]
public sealed virtual Task`1<ServiceEndpoint[]> ConvertAsync(SignalREndpointsAttribute input, CancellationToken cancellationToken);
}
[AttributeUsageAttribute("2048")]
[BindingAttribute]
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalREndpointsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ConnectionStringSetting>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HubName>k__BackingField;
    public string ConnectionStringSetting { get; public set; }
    [AutoResolveAttribute]
public string HubName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ConnectionStringSetting();
    [CompilerGeneratedAttribute]
public void set_ConnectionStringSetting(string value);
    [CompilerGeneratedAttribute]
public string get_HubName();
    [CompilerGeneratedAttribute]
public void set_HubName(string value);
}
[AttributeUsageAttribute("64")]
public abstract class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRFilterAttribute : FunctionInvocationFilterAttribute {
    public virtual Task OnExecutingAsync(FunctionExecutingContext executingContext, CancellationToken cancellationToken);
    public abstract virtual Task FilterAsync(InvocationContext invocationContext, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRFunctionsHostBuilderExtensions : object {
    [ExtensionAttribute]
public static IFunctionsHostBuilder AddDefaultAuth(IFunctionsHostBuilder builder, Action`1<TokenValidationParameters> configureTokenValidationParameters, Func`4<SecurityTokenResult, HttpRequest, SignalRConnectionDetail, SignalRConnectionDetail> configurer);
}
[JsonObjectAttribute]
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRGroupAction : object {
    [CompilerGeneratedAttribute]
private string <ConnectionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private GroupAction <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceEndpoint[] <Endpoints>k__BackingField;
    [JsonPropertyAttribute("connectionId")]
public string ConnectionId { get; public set; }
    [JsonPropertyAttribute("userId")]
public string UserId { get; public set; }
    [JsonPropertyAttribute("groupName")]
public string GroupName { get; public set; }
    [JsonPropertyAttribute("action")]
[JsonRequiredAttribute]
public GroupAction Action { get; public set; }
    [JsonPropertyAttribute("endpoints")]
public ServiceEndpoint[] Endpoints { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ConnectionId();
    [CompilerGeneratedAttribute]
public void set_ConnectionId(string value);
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
public string get_GroupName();
    [CompilerGeneratedAttribute]
public void set_GroupName(string value);
    [CompilerGeneratedAttribute]
public GroupAction get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(GroupAction value);
    [CompilerGeneratedAttribute]
public ServiceEndpoint[] get_Endpoints();
    [CompilerGeneratedAttribute]
public void set_Endpoints(ServiceEndpoint[] value);
}
[AttributeUsageAttribute("2048")]
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRIgnoreAttribute : Attribute {
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRInvocationMethodExecutor : SignalRMethodExecutor {
    public SignalRInvocationMethodExecutor(IRequestResolver resolver, ExecutionContext executionContext);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRInvocationMethodExecutor/<ExecuteAsync>d__1")]
public virtual Task`1<HttpResponseMessage> ExecuteAsync(HttpRequestMessage request);
    private static void AssertConsistency(InvocationContext context, InvocationMessage message);
}
[JsonObjectAttribute]
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRMessage : object {
    [CompilerGeneratedAttribute]
private string <ConnectionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceEndpoint[] <Endpoints>k__BackingField;
    [JsonPropertyAttribute("connectionId")]
public string ConnectionId { get; public set; }
    [JsonPropertyAttribute("userId")]
public string UserId { get; public set; }
    [JsonPropertyAttribute("groupName")]
public string GroupName { get; public set; }
    [JsonPropertyAttribute("target")]
[JsonRequiredAttribute]
public string Target { get; public set; }
    [JsonPropertyAttribute("arguments")]
[JsonRequiredAttribute]
public Object[] Arguments { get; public set; }
    [JsonPropertyAttribute("endpoints")]
public ServiceEndpoint[] Endpoints { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ConnectionId();
    [CompilerGeneratedAttribute]
public void set_ConnectionId(string value);
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
public string get_GroupName();
    [CompilerGeneratedAttribute]
public void set_GroupName(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(Object[] value);
    [CompilerGeneratedAttribute]
public ServiceEndpoint[] get_Endpoints();
    [CompilerGeneratedAttribute]
public void set_Endpoints(ServiceEndpoint[] value);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRMessageConverter : JsonConverter`1<SignalRMessage> {
    public virtual SignalRMessage ReadJson(JsonReader reader, Type objectType, SignalRMessage existingValue, bool hasExistingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, SignalRMessage value, JsonSerializer serializer);
}
internal abstract class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRMethodExecutor : object {
    [CompilerGeneratedAttribute]
private IRequestResolver <Resolver>k__BackingField;
    [CompilerGeneratedAttribute]
private ExecutionContext <ExecutionContext>k__BackingField;
    protected IRequestResolver Resolver { get; }
    protected ExecutionContext ExecutionContext { get; }
    protected SignalRMethodExecutor(IRequestResolver resolver, ExecutionContext executionContext);
    [CompilerGeneratedAttribute]
protected IRequestResolver get_Resolver();
    [CompilerGeneratedAttribute]
protected ExecutionContext get_ExecutionContext();
    public abstract virtual Task`1<HttpResponseMessage> ExecuteAsync(HttpRequestMessage request);
    protected Task`1<FunctionResult> ExecuteWithAuthAsync(HttpRequestMessage request, ExecutionContext executor, InvocationContext context, TaskCompletionSource`1<object> tcs);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRMethodExecutor/<ExecuteAsyncCore>d__9")]
private static Task`1<FunctionResult> ExecuteAsyncCore(ITriggeredFunctionExecutor executor, InvocationContext context, TaskCompletionSource`1<object> tcs);
}
[AttributeUsageAttribute("2048")]
[BindingAttribute]
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRNegotiationAttribute : NegotiationBaseAttribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalROptions : object {
    private IHubProtocol _messagePackHubProtocol;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IList`1<ServiceEndpoint> <ServiceEndpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceTransportType <ServiceTransportType>k__BackingField;
    [CompilerGeneratedAttribute]
private ObjectSerializer <JsonObjectSerializer>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceManagerRetryOptions <RetryOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <HttpClientTimeout>k__BackingField;
    [NullableAttribute("1")]
public IList`1<ServiceEndpoint> ServiceEndpoints { get; }
    public ServiceTransportType ServiceTransportType { get; public set; }
    public ObjectSerializer JsonObjectSerializer { get; public set; }
    public ServiceManagerRetryOptions RetryOptions { get; public set; }
    public Nullable`1<TimeSpan> HttpClientTimeout { get; public set; }
    public IHubProtocol MessagePackHubProtocol { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IList`1<ServiceEndpoint> get_ServiceEndpoints();
    [CompilerGeneratedAttribute]
public ServiceTransportType get_ServiceTransportType();
    [CompilerGeneratedAttribute]
public void set_ServiceTransportType(ServiceTransportType value);
    [CompilerGeneratedAttribute]
public ObjectSerializer get_JsonObjectSerializer();
    [CompilerGeneratedAttribute]
public void set_JsonObjectSerializer(ObjectSerializer value);
    [CompilerGeneratedAttribute]
public ServiceManagerRetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(ServiceManagerRetryOptions value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_HttpClientTimeout();
    [CompilerGeneratedAttribute]
public void set_HttpClientTimeout(Nullable`1<TimeSpan> value);
    public IHubProtocol get_MessagePackHubProtocol();
    public void set_MessagePackHubProtocol(IHubProtocol value);
    [NullableContextAttribute("1")]
private sealed virtual override string Microsoft.Azure.WebJobs.Hosting.IOptionsFormatter.Format();
}
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalROutputConverter : object {
    public object ConvertToSignalROutput(object input);
}
[AttributeUsageAttribute("2048")]
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRParameterAttribute : Attribute {
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRRequestResolver : object {
    public sealed virtual bool ValidateContentType(HttpRequestMessage request);
    public sealed virtual bool ValidateSignature(HttpRequestMessage request, IOptionsMonitor`1<SignatureValidationOptions> signatureValidationOptions);
    public sealed virtual bool TryGetInvocationContext(HttpRequestMessage request, InvocationContext& context);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRRequestResolver/<GetMessageAsync>d__3`1")]
public sealed virtual Task`1<ValueTuple`2<T, IHubProtocol>> GetMessageAsync(HttpRequestMessage request);
}
[AttributeUsageAttribute("10240")]
[BindingAttribute]
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ConnectionStringSetting>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HubName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Event>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ParameterNames>k__BackingField;
    public string ConnectionStringSetting { get; public set; }
    [AutoResolveAttribute]
public string HubName { get; }
    [AutoResolveAttribute]
public string Event { get; }
    [AutoResolveAttribute]
public string Category { get; }
    public String[] ParameterNames { get; }
    public SignalRTriggerAttribute(string hubName, string category, string event);
    public SignalRTriggerAttribute(string hubName, string category, string event, String[] parameterNames);
    [CompilerGeneratedAttribute]
public string get_ConnectionStringSetting();
    [CompilerGeneratedAttribute]
public void set_ConnectionStringSetting(string value);
    [CompilerGeneratedAttribute]
public string get_HubName();
    [CompilerGeneratedAttribute]
public string get_Event();
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public String[] get_ParameterNames();
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerAuthorizeFailedException : SignalRTriggerException {
    public SignalRTriggerAuthorizeFailedException(string message);
    public SignalRTriggerAuthorizeFailedException(string message, Exception innerException);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerBinding : object {
    private static string ReturnParameterKey;
    private ParameterInfo _parameterInfo;
    private SignalRTriggerAttribute _attribute;
    private ISignalRTriggerDispatcher _dispatcher;
    private IOptionsMonitor`1<SignatureValidationOptions> _signatureValidationOptions;
    private ServiceHubContext _hubContext;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, Type> <BindingDataContract>k__BackingField;
    public Type TriggerValueType { get; }
    public IReadOnlyDictionary`2<string, Type> BindingDataContract { get; }
    public SignalRTriggerBinding(ParameterInfo parameterInfo, SignalRTriggerAttribute attribute, ISignalRTriggerDispatcher dispatcher, IOptionsMonitor`1<SignatureValidationOptions> signatureValidationOptions, ServiceHubContext hubContext);
    public sealed virtual Task`1<ITriggerData> BindAsync(object value, ValueBindingContext context);
    public sealed virtual Task`1<IListener> CreateListenerAsync(ListenerFactoryContext context);
    public sealed virtual ParameterDescriptor ToParameterDescriptor();
    public sealed virtual Type get_TriggerValueType();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyDictionary`2<string, Type> get_BindingDataContract();
    private static IReadOnlyDictionary`2<string, Type> CreateBindingContract(SignalRTriggerAttribute attribute, ParameterInfo parameter);
    private void AddParameterNamesBindingData(Dictionary`2<string, object> bindingData, String[] parameterNames, Object[] arguments);
    private static object ConvertValueIfNecessary(object value, Type targetType);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerBindingProvider : object {
    private ISignalRTriggerDispatcher _dispatcher;
    private INameResolver _nameResolver;
    private IServiceManagerStore _managerStore;
    private Exception _webhookException;
    public SignalRTriggerBindingProvider(ISignalRTriggerDispatcher dispatcher, INameResolver nameResolver, IServiceManagerStore managerStore, Exception webhookException);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerBindingProvider/<TryCreateAsync>d__5")]
public sealed virtual Task`1<ITriggerBinding> TryCreateAsync(TriggerBindingProviderContext context);
    internal SignalRTriggerAttribute GetParameterResolvedAttribute(SignalRTriggerAttribute attribute, ParameterInfo parameterInfo);
    private static void ValidateSignalRTriggerAttributeBinding(SignalRTriggerAttribute attribute);
    private static string GetCategoryFromMethodName(string name);
    private static string GetEventFromMethodName(string name, string category);
    private static void ValidateParameterNames(String[] parameterNames);
    private bool IsLegalClassBasedParameter(ParameterInfo parameter);
    private static bool HasBindingAttribute(IEnumerable`1<Attribute> attributes);
    private static bool IsServerlessHub(Type type);
}
public static class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerCategories : object {
    public static string Connections;
    public static string Messages;
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerDispatcher : object {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<ValueTuple`3<string, string, string>, SignalRMethodExecutor> _executors;
    private IRequestResolver _resolver;
    public SignalRTriggerDispatcher(IRequestResolver resolver);
    public sealed virtual void Map(ValueTuple`3<string, string, string> key, ExecutionContext executor);
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerDispatcher/<ExecuteAsync>d__4")]
public sealed virtual Task`1<HttpResponseMessage> ExecuteAsync(HttpRequestMessage req, CancellationToken token);
    private static bool TryGetDispatchingKey(HttpRequestMessage request, ValueTuple`3& key);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerEvent : object {
    [CompilerGeneratedAttribute]
private InvocationContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskCompletionSource`1<object> <TaskCompletionSource>k__BackingField;
    public InvocationContext Context { get; public set; }
    public TaskCompletionSource`1<object> TaskCompletionSource { get; public set; }
    [CompilerGeneratedAttribute]
public InvocationContext get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(InvocationContext value);
    [CompilerGeneratedAttribute]
public TaskCompletionSource`1<object> get_TaskCompletionSource();
    [CompilerGeneratedAttribute]
public void set_TaskCompletionSource(TaskCompletionSource`1<object> value);
}
public static class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerEvents : object {
    public static string Connected;
    public static string Disconnected;
}
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerException : Exception {
    public SignalRTriggerException(string message);
    public SignalRTriggerException(string message, Exception innerException);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerParametersNotMatchException : SignalRTriggerException {
    public SignalRTriggerParametersNotMatchException(int excepted, int actual);
    public SignalRTriggerParametersNotMatchException(string message);
    public SignalRTriggerParametersNotMatchException(string message, Exception innerException);
}
internal static class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRTriggerUtils : object {
    private static string CommaSeparator;
    private static Char[] HeaderSeparator;
    private static String[] ClaimsSeparator;
    private static SignalRTriggerUtils();
    public static IDictionary`2<string, string> GetQueryDictionary(string queryString);
    public static IDictionary`2<string, string> GetClaimDictionary(string claims);
    public static IReadOnlyList`1<string> GetSignatureList(string signatures);
    public static IDictionary`2<string, string> GetHeaderDictionary(HttpRequestHeaders headers);
    public static string GetConnectionNameFromAttribute(Type serverlessHubType);
}
[ExtensionAttribute]
public static class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRWebJobsBuilderExtensions : object {
    [ExtensionAttribute]
public static IWebJobsBuilder AddSignalR(IWebJobsBuilder builder);
}
public class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRWebJobsStartup : object {
    public sealed virtual void Configure(IWebJobsBuilder builder);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignatureValidationOptions : object {
    [CompilerGeneratedAttribute]
private List`1<string> <AccessKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequireValidation>k__BackingField;
    public List`1<string> AccessKeys { get; }
    public bool RequireValidation { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<string> get_AccessKeys();
    [CompilerGeneratedAttribute]
public bool get_RequireValidation();
    [CompilerGeneratedAttribute]
public void set_RequireValidation(bool value);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.SignatureValidationOptionsSetup : object {
    private static Char[] PropertySeparator;
    private static Char[] KeyValueSeparator;
    private static string AccessKeyProperty;
    private Action`1<ServiceManagerOptions> _configureServiceManagerOptions;
    public SignatureValidationOptionsSetup(Action`1<ServiceManagerOptions> configureServiceManagerOptions);
    private static SignatureValidationOptionsSetup();
    public sealed virtual void Configure(SignatureValidationOptions options);
    private static bool TryGetAccessKey(string connectionString, String& accesskey);
}
public static class Microsoft.Azure.WebJobs.Extensions.SignalRService.StaticServiceHubContextStore : object {
    [CompilerGeneratedAttribute]
private static IServiceManagerStore <ServiceManagerStore>k__BackingField;
    internal static IServiceManagerStore ServiceManagerStore { get; internal set; }
    public static IServiceHubContextStore Get(string connectionStringSetting);
    [CompilerGeneratedAttribute]
internal static IServiceManagerStore get_ServiceManagerStore();
    [CompilerGeneratedAttribute]
internal static void set_ServiceManagerStore(IServiceManagerStore value);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.TupleStringIgnoreCasesComparer : object {
    public static TupleStringIgnoreCasesComparer Instance;
    private static TupleStringIgnoreCasesComparer();
    public sealed virtual bool Equals(ValueTuple`3<string, string, string> x, ValueTuple`3<string, string, string> y);
    public sealed virtual int GetHashCode(ValueTuple`3<string, string, string> obj);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.TypeUtility : object {
    internal static TAttribute GetResolvedAttribute(ParameterInfo parameter);
    internal static Attribute GetHierarchicalAttributeOrNull(ParameterInfo parameter, Type attributeType);
    internal static Attribute GetHierarchicalAttributeOrNull(MethodInfo method, Type type);
}
internal class Microsoft.Azure.WebJobs.Extensions.SignalRService.Utils : object {
    [AsyncStateMachineAttribute("Microsoft.Azure.WebJobs.Extensions.SignalRService.Utils/<GetAzureSignalRClientAsync>d__0")]
public static Task`1<AzureSignalRClient> GetAzureSignalRClientAsync(string connectionStringKey, string attributeHubName, IServiceManagerStore serviceManagerStore);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
