public static class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.ApplicationInsightsDiagnosticConstants : object {
    public static string ApplicationInsightsDiagnosticSourcePrefix;
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.ApplicationInsightsEventListener : EventListener {
    private static DiagnosticListener _source;
    private EventLevel _eventLevel;
    private static int LogFlushIntervalMs;
    private static string EventSourceNamePrefix;
    private static string EventName;
    private static int MaxLogLinesPerFlushInterval;
    private Timer _flushTimer;
    private ConcurrentQueue`1<string> _logBuffer;
    private ConcurrentQueue`1<EventSource> _eventSource;
    private static object _syncLock;
    private bool _disposed;
    public ApplicationInsightsEventListener(EventLevel eventLevel);
    private static ApplicationInsightsEventListener();
    protected virtual void OnEventSourceCreated(EventSource eventSource);
    protected virtual void OnEventWritten(EventWrittenEventArgs eventData);
    public void Flush();
    protected virtual void Dispose(bool disposing);
    public virtual void Dispose();
    [CompilerGeneratedAttribute]
private void <.ctor>b__11_0(object sender, ElapsedEventArgs e);
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.ApplicationInsightsLogger : object {
    private TelemetryClient _telemetryClient;
    private ApplicationInsightsLoggerOptions _loggerOptions;
    private string _categoryName;
    private bool _isUserFunction;
    private static ConcurrentDictionary`2<string, string> _prefixedProperyNames;
    private static string DefaultCategoryName;
    private static string DateTimeFormatString;
    private static string OperationContext;
    internal static string MetricCountKey;
    internal static string MetricMinKey;
    internal static string MetricMaxKey;
    internal static string MetricStandardDeviationKey;
    private static HashSet`1<string> SystemScopeKeys;
    public ApplicationInsightsLogger(TelemetryClient client, string categoryName, ApplicationInsightsLoggerOptions loggerOptions);
    private static ApplicationInsightsLogger();
    public sealed virtual void Log(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3<TState, Exception, string> formatter);
    private void LogMetric(IEnumerable`1<KeyValuePair`2<string, object>> values, LogLevel logLevel, EventId eventId);
    private static void ApplyScopeProperties(ITelemetry telemetry);
    private void LogException(LogLevel logLevel, IEnumerable`1<KeyValuePair`2<string, object>> values, Exception exception, string formattedMessage, EventId eventId);
    private void LogTrace(LogLevel logLevel, IEnumerable`1<KeyValuePair`2<string, object>> values, string formattedMessage, EventId eventId);
    private static Nullable`1<SeverityLevel> GetSeverityLevel(LogLevel logLevel);
    private static void ApplyScopeAndStateProperties(IDictionary`2<string, string> properties, IEnumerable`1<KeyValuePair`2<string, object>> state, ITelemetry telemetry);
    internal void ApplyKnownProperties(IDictionary`2<string, string> properties, LogLevel logLevel, EventId eventId);
    internal static void ApplyProperty(IDictionary`2<string, string> properties, string key, object objectValue, bool applyPrefix);
    private static void ApplyProperty(ISupportProperties telemetry, KeyValuePair`2<string, object> value, bool applyPrefix);
    private static void ApplyProperties(IDictionary`2<string, string> properties, IEnumerable`1<KeyValuePair`2<string, object>> values, bool applyPrefix);
    private void LogFunctionResultAggregate(IEnumerable`1<KeyValuePair`2<string, object>> values, LogLevel logLevel, EventId eventId);
    private void LogFunctionResult(IEnumerable`1<KeyValuePair`2<string, object>> state, LogLevel logLevel, Exception exception, EventId eventId);
    private void ApplyFunctionResultActivityTags(IEnumerable`1<KeyValuePair`2<string, object>> state, IReadOnlyDictionary`2<string, object> scope, LogLevel logLevel);
    public sealed virtual bool IsEnabled(LogLevel logLevel);
    public sealed virtual IDisposable BeginScope(TState state);
    private void StartTelemetryIfFunctionInvocation(IDictionary`2<string, object> stateValues);
    private IOperationHolder`1<RequestTelemetry> CreateRequestFromLinks(Activity[] activities, string functionName);
    private void PopulateLinks(Activity[] activities, RequestTelemetry request);
    private bool IsHttpRequestActivity(Activity activity);
    internal static string GetIpAddress(HttpRequest httpRequest);
    private static string RemovePort(string address);
    private bool TryGetAverageTimeInQueueForBatch(Activity[] links, DateTimeOffset requestStartTime, Int64& avgTimeInQueue);
    private bool TryGetEnqueuedTime(Activity link, Int64& enqueuedTime);
}
public class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.ApplicationInsightsLoggerOptions : object {
    [CompilerGeneratedAttribute]
private string <InstrumentationKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConnectionString>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenCredentialOptions <TokenCredentialOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private SamplingPercentageEstimatorSettings <SamplingSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SamplingExcludedTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SamplingIncludedTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private SnapshotCollectorConfiguration <SnapshotConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LiveMetricsAuthenticationApiKey>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <LiveMetricsInitializationDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnablePerformanceCountersCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableLiveMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableDependencyTracking>k__BackingField;
    [CompilerGeneratedAttribute]
private DependencyTrackingOptions <DependencyTrackingOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableLiveMetricsFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpAutoCollectionOptions <HttpAutoCollectionOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableQueryStringTracing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EventLevel> <DiagnosticsEventListenerLogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableAutocollectedMetricsExtractor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableMetricsCustomDimensionOptimization>k__BackingField;
    public string InstrumentationKey { get; public set; }
    public string ConnectionString { get; public set; }
    public TokenCredentialOptions TokenCredentialOptions { get; public set; }
    public SamplingPercentageEstimatorSettings SamplingSettings { get; public set; }
    public string SamplingExcludedTypes { get; public set; }
    public string SamplingIncludedTypes { get; public set; }
    public SnapshotCollectorConfiguration SnapshotConfiguration { get; public set; }
    [ObsoleteAttribute("Use LiveMetricsAuthenticationApiKey instead.")]
public string QuickPulseAuthenticationApiKey { get; public set; }
    public string LiveMetricsAuthenticationApiKey { get; public set; }
    [ObsoleteAttribute("Use LiveMetricsInitializationDelay instead.")]
public TimeSpan QuickPulseInitializationDelay { get; public set; }
    public TimeSpan LiveMetricsInitializationDelay { get; public set; }
    public bool EnablePerformanceCountersCollection { get; public set; }
    public bool EnableLiveMetrics { get; public set; }
    public bool EnableDependencyTracking { get; public set; }
    public DependencyTrackingOptions DependencyTrackingOptions { get; public set; }
    public bool EnableLiveMetricsFilters { get; public set; }
    public HttpAutoCollectionOptions HttpAutoCollectionOptions { get; public set; }
    public bool EnableQueryStringTracing { get; public set; }
    public Nullable`1<EventLevel> DiagnosticsEventListenerLogLevel { get; public set; }
    public bool EnableAutocollectedMetricsExtractor { get; public set; }
    public bool EnableMetricsCustomDimensionOptimization { get; public set; }
    [CompilerGeneratedAttribute]
public string get_InstrumentationKey();
    [CompilerGeneratedAttribute]
public void set_InstrumentationKey(string value);
    [CompilerGeneratedAttribute]
public string get_ConnectionString();
    [CompilerGeneratedAttribute]
public void set_ConnectionString(string value);
    [CompilerGeneratedAttribute]
public TokenCredentialOptions get_TokenCredentialOptions();
    [CompilerGeneratedAttribute]
public void set_TokenCredentialOptions(TokenCredentialOptions value);
    [CompilerGeneratedAttribute]
public SamplingPercentageEstimatorSettings get_SamplingSettings();
    [CompilerGeneratedAttribute]
public void set_SamplingSettings(SamplingPercentageEstimatorSettings value);
    [CompilerGeneratedAttribute]
public string get_SamplingExcludedTypes();
    [CompilerGeneratedAttribute]
public void set_SamplingExcludedTypes(string value);
    [CompilerGeneratedAttribute]
public string get_SamplingIncludedTypes();
    [CompilerGeneratedAttribute]
public void set_SamplingIncludedTypes(string value);
    [CompilerGeneratedAttribute]
public SnapshotCollectorConfiguration get_SnapshotConfiguration();
    [CompilerGeneratedAttribute]
public void set_SnapshotConfiguration(SnapshotCollectorConfiguration value);
    public string get_QuickPulseAuthenticationApiKey();
    public void set_QuickPulseAuthenticationApiKey(string value);
    [CompilerGeneratedAttribute]
public string get_LiveMetricsAuthenticationApiKey();
    [CompilerGeneratedAttribute]
public void set_LiveMetricsAuthenticationApiKey(string value);
    public TimeSpan get_QuickPulseInitializationDelay();
    public void set_QuickPulseInitializationDelay(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_LiveMetricsInitializationDelay();
    [CompilerGeneratedAttribute]
public void set_LiveMetricsInitializationDelay(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_EnablePerformanceCountersCollection();
    [CompilerGeneratedAttribute]
public void set_EnablePerformanceCountersCollection(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableLiveMetrics();
    [CompilerGeneratedAttribute]
public void set_EnableLiveMetrics(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableDependencyTracking();
    [CompilerGeneratedAttribute]
public void set_EnableDependencyTracking(bool value);
    [CompilerGeneratedAttribute]
public DependencyTrackingOptions get_DependencyTrackingOptions();
    [CompilerGeneratedAttribute]
public void set_DependencyTrackingOptions(DependencyTrackingOptions value);
    [CompilerGeneratedAttribute]
public bool get_EnableLiveMetricsFilters();
    [CompilerGeneratedAttribute]
public void set_EnableLiveMetricsFilters(bool value);
    [CompilerGeneratedAttribute]
public HttpAutoCollectionOptions get_HttpAutoCollectionOptions();
    [CompilerGeneratedAttribute]
public void set_HttpAutoCollectionOptions(HttpAutoCollectionOptions value);
    [CompilerGeneratedAttribute]
public bool get_EnableQueryStringTracing();
    [CompilerGeneratedAttribute]
public void set_EnableQueryStringTracing(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<EventLevel> get_DiagnosticsEventListenerLogLevel();
    [CompilerGeneratedAttribute]
public void set_DiagnosticsEventListenerLogLevel(Nullable`1<EventLevel> value);
    [CompilerGeneratedAttribute]
public bool get_EnableAutocollectedMetricsExtractor();
    [CompilerGeneratedAttribute]
public void set_EnableAutocollectedMetricsExtractor(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableMetricsCustomDimensionOptimization();
    [CompilerGeneratedAttribute]
public void set_EnableMetricsCustomDimensionOptimization(bool value);
    public sealed virtual string Format();
}
[ProviderAliasAttribute("ApplicationInsights")]
public class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.ApplicationInsightsLoggerProvider : object {
    internal static string Alias;
    public static string SourceName;
    private CancellationTokenSource _cancellationTokenSource;
    private TelemetryClient _client;
    private ApplicationInsightsLoggerOptions _loggerOptions;
    private DiagnosticSource _source;
    private bool _disposed;
    public ApplicationInsightsLoggerProvider(TelemetryClient client, IOptions`1<ApplicationInsightsLoggerOptions> loggerOptions);
    internal ApplicationInsightsLoggerProvider(TelemetryClient client, DiagnosticSource source);
    public sealed virtual ILogger CreateLogger(string categoryName);
    public sealed virtual void Dispose();
    private void WriteDiagnosticFlushingIssue(object value);
}
internal static class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.ApplicationInsightsScopeKeys : object {
    internal static string HttpRequest;
    internal static string HttpContext;
    internal static string FunctionsHttpResponse;
    internal static string ForwardedForHeaderName;
}
public class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.DependencyTrackingOptions : object {
    [CompilerGeneratedAttribute]
private bool <DisableRuntimeInstrumentation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableDiagnosticSourceInstrumentation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableLegacyCorrelationHeadersInjection>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableRequestIdHeaderInjectionInW3CMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableSqlCommandTextInstrumentation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetComponentCorrelationHttpHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableAzureSdkTelemetryListener>k__BackingField;
    public bool DisableRuntimeInstrumentation { get; public set; }
    public bool DisableDiagnosticSourceInstrumentation { get; public set; }
    public bool EnableLegacyCorrelationHeadersInjection { get; public set; }
    public bool EnableRequestIdHeaderInjectionInW3CMode { get; public set; }
    public bool EnableSqlCommandTextInstrumentation { get; public set; }
    public bool SetComponentCorrelationHttpHeaders { get; public set; }
    public bool EnableAzureSdkTelemetryListener { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_DisableRuntimeInstrumentation();
    [CompilerGeneratedAttribute]
public void set_DisableRuntimeInstrumentation(bool value);
    [CompilerGeneratedAttribute]
public bool get_DisableDiagnosticSourceInstrumentation();
    [CompilerGeneratedAttribute]
public void set_DisableDiagnosticSourceInstrumentation(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableLegacyCorrelationHeadersInjection();
    [CompilerGeneratedAttribute]
public void set_EnableLegacyCorrelationHeadersInjection(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableRequestIdHeaderInjectionInW3CMode();
    [CompilerGeneratedAttribute]
public void set_EnableRequestIdHeaderInjectionInW3CMode(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableSqlCommandTextInstrumentation();
    [CompilerGeneratedAttribute]
public void set_EnableSqlCommandTextInstrumentation(bool value);
    [CompilerGeneratedAttribute]
public bool get_SetComponentCorrelationHttpHeaders();
    [CompilerGeneratedAttribute]
public void set_SetComponentCorrelationHttpHeaders(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableAzureSdkTelemetryListener();
    [CompilerGeneratedAttribute]
public void set_EnableAzureSdkTelemetryListener(bool value);
}
[ExtensionAttribute]
internal static class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.Extensions.LogLevelExtension : object {
    [ExtensionAttribute]
internal static string ToStringOptimized(LogLevel logLevel);
    [ExtensionAttribute]
internal static bool TryParseOptimized(string logLevel, LogLevel& level);
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.FilteringTelemetryProcessor : object {
    private static LoggerRuleSelector RuleSelector;
    private static Type ProviderType;
    private ConcurrentDictionary`2<string, LoggerFilterRule> _ruleMap;
    private LoggerFilterOptions _filterOptions;
    private ITelemetryProcessor _next;
    public FilteringTelemetryProcessor(LoggerFilterOptions filterOptions, ITelemetryProcessor next);
    private static FilteringTelemetryProcessor();
    public sealed virtual void Process(ITelemetry item);
    private bool IsEnabled(ITelemetry item);
    private LoggerFilterRule SelectRule(string categoryName);
    [CompilerGeneratedAttribute]
private LoggerFilterRule <IsEnabled>b__7_0(string c);
}
public class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.HttpAutoCollectionOptions : object {
    [CompilerGeneratedAttribute]
private bool <EnableHttpTriggerExtendedInfoCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableW3CDistributedTracing>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableResponseHeaderInjection>k__BackingField;
    public bool EnableHttpTriggerExtendedInfoCollection { get; public set; }
    public bool EnableW3CDistributedTracing { get; public set; }
    public bool EnableResponseHeaderInjection { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_EnableHttpTriggerExtendedInfoCollection();
    [CompilerGeneratedAttribute]
public void set_EnableHttpTriggerExtendedInfoCollection(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableW3CDistributedTracing();
    [CompilerGeneratedAttribute]
public void set_EnableW3CDistributedTracing(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableResponseHeaderInjection();
    [CompilerGeneratedAttribute]
public void set_EnableResponseHeaderInjection(bool value);
}
internal interface Microsoft.Azure.WebJobs.Logging.ApplicationInsights.IRoleInstanceProvider {
    public abstract virtual string GetRoleInstanceName();
}
public interface Microsoft.Azure.WebJobs.Logging.ApplicationInsights.ISdkVersionProvider {
    public abstract virtual string GetSdkVersion();
}
internal static class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.LoggingConstants : object {
    public static string ZeroIpAddress;
    public static string Unknown;
    public static string ClientIpKey;
    public static string HostInstanceIdKey;
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.MetricSdkVersionTelemetryInitializer : object {
    private static string Prefix;
    public sealed virtual void Initialize(ITelemetry telemetry);
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.NullTelemetryInitializer : object {
    [CompilerGeneratedAttribute]
private static NullTelemetryInitializer <Instance>k__BackingField;
    public static NullTelemetryInitializer Instance { get; }
    private static NullTelemetryInitializer();
    [CompilerGeneratedAttribute]
public static NullTelemetryInitializer get_Instance();
    public sealed virtual void Initialize(ITelemetry telemetry);
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.NullTelemetryModule : object {
    [CompilerGeneratedAttribute]
private static NullTelemetryModule <Instance>k__BackingField;
    public static NullTelemetryModule Instance { get; }
    private static NullTelemetryModule();
    [CompilerGeneratedAttribute]
public static NullTelemetryModule get_Instance();
    public sealed virtual void Initialize(TelemetryConfiguration configuration);
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.OperationFilteringTelemetryProcessor : object {
    private ITelemetryProcessor _next;
    public OperationFilteringTelemetryProcessor(ITelemetryProcessor next);
    public sealed virtual void Process(ITelemetry item);
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.QuickPulseInitializationScheduler : object {
    private CancellationTokenSource _cts;
    private bool _disposed;
    private object _lock;
    public void ScheduleInitialization(Action initialization, TimeSpan delay);
    public sealed virtual void Dispose();
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.SelfDiagnosticsTelemetryModule : object {
    private ApplicationInsightsEventListener _eventListener;
    private EventLevel _eventLevel;
    internal SelfDiagnosticsTelemetryModule(EventLevel eventLevel);
    public sealed virtual void Initialize(TelemetryConfiguration configuration);
    public sealed virtual void Dispose();
    private void Dispose(bool disposing);
}
public class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.TokenCredentialOptions : object {
    private static string AuthToken;
    private static string AuthAuthorizationKey;
    private static string AuthClientIdKey;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public string ClientId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    internal TokenCredential CreateTokenCredential();
    public static TokenCredentialOptions ParseAuthenticationString(string applicationInsightsAuthenticationString);
    [IteratorStateMachineAttribute("Microsoft.Azure.WebJobs.Logging.ApplicationInsights.TokenCredentialOptions/<Tokenize>d__9")]
private static IEnumerable`1<ValueTuple`2<int, int>> Tokenize(string value, char separator);
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.WebJobsRoleEnvironmentTelemetryInitializer : object {
    internal static string AzureWebsiteName;
    internal static string AzureWebsiteSlotName;
    internal static string AzureWebsiteCloudRoleName;
    private static string DefaultProductionSlotName;
    private static string WebAppSuffix;
    private ConcurrentDictionary`2<string, string> _siteNodeNames;
    public sealed virtual void Initialize(ITelemetry telemetry);
    private static string GetAzureWebsiteUniqueSlotName();
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.WebJobsRoleInstanceProvider : object {
    internal static string ComputerNameKey;
    internal static string WebSiteInstanceIdKey;
    internal static string ContainerNameKey;
    private string _roleInstanceName;
    public sealed virtual string GetRoleInstanceName();
    private static string GetRoleInstance();
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.WebJobsSdkVersionProvider : object {
    private string sdkVersion;
    public sealed virtual string GetSdkVersion();
    internal static string GetAssemblyFileVersion(Assembly assembly);
}
internal class Microsoft.Azure.WebJobs.Logging.ApplicationInsights.WebJobsTelemetryInitializer : object {
    private static string _currentProcessId;
    private string _sdkVersion;
    private string _roleInstanceName;
    private ApplicationInsightsLoggerOptions _options;
    public WebJobsTelemetryInitializer(ISdkVersionProvider versionProvider, IRoleInstanceProvider roleInstanceProvider, IOptions`1<ApplicationInsightsLoggerOptions> options);
    private static WebJobsTelemetryInitializer();
    public sealed virtual void Initialize(ITelemetry telemetry);
    private void UpdateRequestProperties(RequestTelemetry request);
    private bool TryApplyProperty(RequestTelemetry request, KeyValuePair`2<string, string> activityTag);
}
internal class Microsoft.Azure.WebJobs.Logging.DictionaryLoggerScope : object {
    private static AsyncLocal`1<DictionaryLoggerScope> _value;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <CurrentScope>k__BackingField;
    [CompilerGeneratedAttribute]
private DictionaryLoggerScope <Parent>k__BackingField;
    internal IReadOnlyDictionary`2<string, object> CurrentScope { get; private set; }
    internal DictionaryLoggerScope Parent { get; private set; }
    public static DictionaryLoggerScope Current { get; public set; }
    private DictionaryLoggerScope(IReadOnlyDictionary`2<string, object> currentScope, DictionaryLoggerScope parent);
    private static DictionaryLoggerScope();
    [CompilerGeneratedAttribute]
internal IReadOnlyDictionary`2<string, object> get_CurrentScope();
    [CompilerGeneratedAttribute]
private void set_CurrentScope(IReadOnlyDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
internal DictionaryLoggerScope get_Parent();
    [CompilerGeneratedAttribute]
private void set_Parent(DictionaryLoggerScope value);
    public static DictionaryLoggerScope get_Current();
    public static void set_Current(DictionaryLoggerScope value);
    public static IDisposable Push(object state);
    private static void BuildCurrentScope(IDictionary`2<string, object> state);
    public static IReadOnlyDictionary`2<string, object> GetMergedStateDictionaryOrNull();
}
internal static class Microsoft.Azure.WebJobs.Logging.Sanitizer : object {
    public static string SecretReplacement;
    private static Char[] ValueTerminators;
    private static String[] AllowedTokens;
    internal static String[] CredentialTokens;
    private static String[] CredentialNameFragments;
    private static Sanitizer();
    internal static string Sanitize(string input);
    internal static JObject Sanitize(JObject obj, Func`2<string, bool> selector);
    private static bool IsPotentialCredential(string name);
    private static JToken Sanitize(JToken token);
    internal static bool MayContainCredentials(string input);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.DependencyInjection.ApplicationInsightsServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddApplicationInsights(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddApplicationInsights(IServiceCollection services, Action`1<ApplicationInsightsLoggerOptions> loggerOptionsConfiguration);
    [ExtensionAttribute]
internal static IServiceCollection AddApplicationInsights(IServiceCollection services, Action`1<ApplicationInsightsLoggerOptions> loggerOptionsConfiguration, Action`1<TelemetryConfiguration> additionalTelemetryConfig);
    internal static LoggerFilterOptions CreateFilterOptions(LoggerFilterOptions registeredOptions);
    private static void SetupTelemetryConfiguration(TelemetryConfiguration configuration, ApplicationInsightsLoggerOptions options, ITelemetryChannel channel, IEnumerable`1<ITelemetryInitializer> telemetryInitializers, IEnumerable`1<ITelemetryModule> telemetryModules, IApplicationIdProvider applicationIdProvider, LoggerFilterOptions filterOptions, IRoleInstanceProvider roleInstanceProvider, QuickPulseInitializationScheduler delayer, Action`1<TelemetryConfiguration> additionalTelemetryConfig);
}
internal class Microsoft.Extensions.Logging.ApplicationInsightsLoggerFilterRule : LoggerFilterRule {
    [CompilerGeneratedAttribute]
private IList`1<LoggerFilterRule> <ChildRules>k__BackingField;
    public IList`1<LoggerFilterRule> ChildRules { get; }
    public ApplicationInsightsLoggerFilterRule(IList`1<LoggerFilterRule> childRules);
    [CompilerGeneratedAttribute]
public IList`1<LoggerFilterRule> get_ChildRules();
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Logging.ApplicationInsightsLoggingBuilderExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("Use AddApplicationInsightsWebJobs instead.", "False")]
public static ILoggingBuilder AddApplicationInsights(ILoggingBuilder builder);
    [ExtensionAttribute]
[ObsoleteAttribute("Use AddApplicationInsightsWebJobs instead.", "False")]
public static ILoggingBuilder AddApplicationInsights(ILoggingBuilder builder, Action`1<ApplicationInsightsLoggerOptions> configure);
    [ExtensionAttribute]
public static ILoggingBuilder AddApplicationInsightsWebJobs(ILoggingBuilder builder);
    [ExtensionAttribute]
public static ILoggingBuilder AddApplicationInsightsWebJobs(ILoggingBuilder builder, Action`1<ApplicationInsightsLoggerOptions> loggerOptionsConfiguration);
    [ExtensionAttribute]
public static ILoggingBuilder AddApplicationInsightsWebJobs(ILoggingBuilder builder, Action`1<ApplicationInsightsLoggerOptions> loggerOptionsConfiguration, Action`1<TelemetryConfiguration> additionalTelemetryConfiguration);
}
internal class Microsoft.Extensions.Logging.LoggerRuleSelector : object {
    public void Select(LoggerFilterOptions options, Type providerType, string category, Nullable`1& minLevel, Func`4& filter);
    private static bool IsBetter(LoggerFilterRule rule, LoggerFilterRule current, string logger, string category);
}
internal static class Microsoft.Extensions.Logging.ProviderAliasUtilities : object {
    internal static string GetAlias(Type providerType);
}
[ExtensionAttribute]
internal static class System.Collections.Generic.DictionaryExtensions : object {
    [ExtensionAttribute]
public static T GetValueOrDefault(IDictionary`2<string, object> dictionary, string key);
}
[ExtensionAttribute]
internal static class System.Collections.Generic.ReadOnlyDictionaryExtensions : object {
    [ExtensionAttribute]
public static T GetValueOrDefault(IReadOnlyDictionary`2<string, object> dictionary, string key);
}
