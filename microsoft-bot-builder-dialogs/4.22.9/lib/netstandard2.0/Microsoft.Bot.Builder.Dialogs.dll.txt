public class Microsoft.Bot.Builder.Dialogs.ActivityPrompt : Dialog {
    private static string PersistedOptions;
    private static string PersistedState;
    private PromptValidator`1<Activity> _validator;
    public ActivityPrompt(string dialogId, PromptValidator`1<Activity> validator);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ActivityPrompt/<BeginDialogAsync>d__4")]
public virtual Task`1<DialogTurnResult> BeginDialogAsync(DialogContext dc, object options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ActivityPrompt/<ContinueDialogAsync>d__5")]
public virtual Task`1<DialogTurnResult> ContinueDialogAsync(DialogContext dc, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ActivityPrompt/<ResumeDialogAsync>d__6")]
public virtual Task`1<DialogTurnResult> ResumeDialogAsync(DialogContext dc, DialogReason reason, object result, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ActivityPrompt/<RepromptDialogAsync>d__7")]
public virtual Task RepromptDialogAsync(ITurnContext turnContext, DialogInstance instance, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ActivityPrompt/<OnPromptAsync>d__8")]
protected virtual Task OnPromptAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ActivityPrompt/<OnPromptAsync>d__9")]
protected virtual Task OnPromptAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, bool isRetry, CancellationToken cancellationToken);
    protected virtual Task`1<PromptRecognizerResult`1<Activity>> OnRecognizeAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, CancellationToken cancellationToken);
}
public class Microsoft.Bot.Builder.Dialogs.AttachmentPrompt : Prompt`1<IList`1<Attachment>> {
    public AttachmentPrompt(string dialogId, PromptValidator`1<IList`1<Attachment>> validator);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.AttachmentPrompt/<OnPromptAsync>d__1")]
protected virtual Task OnPromptAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, bool isRetry, CancellationToken cancellationToken);
    protected virtual Task`1<PromptRecognizerResult`1<IList`1<Attachment>>> OnRecognizeAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, CancellationToken cancellationToken);
}
public class Microsoft.Bot.Builder.Dialogs.BeginSkillDialogOptions : object {
    [CompilerGeneratedAttribute]
private Activity <Activity>k__BackingField;
    public Activity Activity { get; public set; }
    [CompilerGeneratedAttribute]
public Activity get_Activity();
    [CompilerGeneratedAttribute]
public void set_Activity(Activity value);
}
public class Microsoft.Bot.Builder.Dialogs.ChoicePrompt : Prompt`1<FoundChoice> {
    private Dictionary`2<string, ChoiceFactoryOptions> _choiceDefaults;
    [CompilerGeneratedAttribute]
private ListStyle <Style>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultLocale>k__BackingField;
    [CompilerGeneratedAttribute]
private ChoiceFactoryOptions <ChoiceOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private FindChoicesOptions <RecognizerOptions>k__BackingField;
    public ListStyle Style { get; public set; }
    public string DefaultLocale { get; public set; }
    public ChoiceFactoryOptions ChoiceOptions { get; public set; }
    public FindChoicesOptions RecognizerOptions { get; public set; }
    public ChoicePrompt(string dialogId, PromptValidator`1<FoundChoice> validator, string defaultLocale);
    public ChoicePrompt(string dialogId, Dictionary`2<string, ChoiceFactoryOptions> choiceDefaults, PromptValidator`1<FoundChoice> validator, string defaultLocale);
    [CompilerGeneratedAttribute]
public ListStyle get_Style();
    [CompilerGeneratedAttribute]
public void set_Style(ListStyle value);
    [CompilerGeneratedAttribute]
public string get_DefaultLocale();
    [CompilerGeneratedAttribute]
public void set_DefaultLocale(string value);
    [CompilerGeneratedAttribute]
public ChoiceFactoryOptions get_ChoiceOptions();
    [CompilerGeneratedAttribute]
public void set_ChoiceOptions(ChoiceFactoryOptions value);
    [CompilerGeneratedAttribute]
public FindChoicesOptions get_RecognizerOptions();
    [CompilerGeneratedAttribute]
public void set_RecognizerOptions(FindChoicesOptions value);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ChoicePrompt/<OnPromptAsync>d__19")]
protected virtual Task OnPromptAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, bool isRetry, CancellationToken cancellationToken);
    protected virtual Task`1<PromptRecognizerResult`1<FoundChoice>> OnRecognizeAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, CancellationToken cancellationToken);
    private string DetermineCulture(Activity activity, FindChoicesOptions opt);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.Channel : object {
    public static bool SupportsSuggestedActions(string channelId, int buttonCnt);
    public static bool SupportsSuggestedActions(string channelId, int buttonCnt, string conversationType);
    public static bool SupportsCardActions(string channelId, int buttonCnt);
    public static bool HasMessageFeed(string channelId);
    public static int MaxActionTitleLength(string channelId);
    public static string GetChannelId(ITurnContext turnContext);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.Choice : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private CardAction <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Synonyms>k__BackingField;
    [JsonPropertyAttribute("value")]
public string Value { get; public set; }
    [JsonPropertyAttribute("action")]
public CardAction Action { get; public set; }
    [JsonPropertyAttribute("synonyms")]
public List`1<string> Synonyms { get; public set; }
    public Choice(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public CardAction get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(CardAction value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Synonyms();
    [CompilerGeneratedAttribute]
public void set_Synonyms(List`1<string> value);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactory : object {
    public static IMessageActivity ForChannel(string channelId, IList`1<Choice> list, string text, string speak, ChoiceFactoryOptions options);
    public static IMessageActivity ForChannel(string channelId, IList`1<Choice> list, string text, string speak, ChoiceFactoryOptions options, string conversationType, IList`1<string> toList);
    public static Activity Inline(IList`1<Choice> choices, string text, string speak, ChoiceFactoryOptions options);
    public static Activity List(IList`1<string> choices, string text, string speak, ChoiceFactoryOptions options);
    public static Activity List(IList`1<Choice> choices, string text, string speak, ChoiceFactoryOptions options);
    public static IMessageActivity SuggestedAction(IList`1<string> choices, string text, string speak);
    public static IMessageActivity SuggestedAction(IList`1<string> choices, string text, string speak, IList`1<string> toList);
    public static IMessageActivity SuggestedAction(IList`1<Choice> choices, string text, string speak);
    public static IMessageActivity SuggestedAction(IList`1<Choice> choices, string text, string speak, IList`1<string> toList);
    public static IMessageActivity HeroCard(IList`1<Choice> choices, string text, string speak);
    public static IList`1<Choice> ToChoices(IList`1<string> choices);
    private static List`1<CardAction> ExtractActions(IList`1<Choice> choices);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions : object {
    [CompilerGeneratedAttribute]
private string <InlineSeparator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InlineOr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InlineOrMore>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeNumbers>k__BackingField;
    [JsonPropertyAttribute("inlineSeparator")]
public string InlineSeparator { get; public set; }
    [JsonPropertyAttribute("inlineOr")]
public string InlineOr { get; public set; }
    [JsonPropertyAttribute("inlineOrMore")]
public string InlineOrMore { get; public set; }
    [JsonPropertyAttribute("includeNumbers")]
public Nullable`1<bool> IncludeNumbers { get; public set; }
    public ChoiceFactoryOptions(string inlineSeparator, string inlineOr, string inlineOrMore, Nullable`1<bool> includeNumbers);
    [CompilerGeneratedAttribute]
public string get_InlineSeparator();
    [CompilerGeneratedAttribute]
public void set_InlineSeparator(string value);
    [CompilerGeneratedAttribute]
public string get_InlineOr();
    [CompilerGeneratedAttribute]
public void set_InlineOr(string value);
    [CompilerGeneratedAttribute]
public string get_InlineOrMore();
    [CompilerGeneratedAttribute]
public void set_InlineOrMore(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IncludeNumbers();
    [CompilerGeneratedAttribute]
public void set_IncludeNumbers(Nullable`1<bool> value);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.ChoiceRecognizers : object {
    public static List`1<ModelResult`1<FoundChoice>> RecognizeChoices(string utterance, IList`1<string> choices, FindChoicesOptions options);
    public static List`1<ModelResult`1<FoundChoice>> RecognizeChoices(string utterance, IList`1<Choice> list, FindChoicesOptions options);
    private static void MatchChoiceByIndex(IList`1<Choice> list, List`1<ModelResult`1<FoundChoice>> matched, ModelResult`1<FoundChoice> match);
    private static List`1<ModelResult`1<FoundChoice>> RecognizeNumbers(string utterance, IModel model);
}
public static class Microsoft.Bot.Builder.Dialogs.Choices.Find : object {
    public static List`1<ModelResult`1<FoundChoice>> FindChoices(string utterance, IList`1<string> choices, FindChoicesOptions options);
    public static List`1<ModelResult`1<FoundChoice>> FindChoices(string utterance, IList`1<Choice> choices, FindChoicesOptions options);
    public static List`1<ModelResult`1<FoundValue>> FindValues(string utterance, List`1<SortedValue> values, FindValuesOptions options);
    private static int IndexOfToken(IList`1<Token> tokens, Token token, int startPos);
    private static ModelResult`1<FoundValue> MatchValue(IList`1<Token> sourceTokens, int maxDistance, FindValuesOptions options, int index, string value, List`1<Token> searchedTokens, int startPos);
    private static ModelResult`1<FoundValue> FindExactMatch(string utterance, List`1<SortedValue> values);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions : FindValuesOptions {
    [CompilerGeneratedAttribute]
private bool <NoValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NoAction>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RecognizeNumbers>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RecognizeOrdinals>k__BackingField;
    [JsonPropertyAttribute("noValue")]
public bool NoValue { get; public set; }
    [JsonPropertyAttribute("noAction")]
public bool NoAction { get; public set; }
    [JsonPropertyAttribute("recognizeNumbers")]
public bool RecognizeNumbers { get; public set; }
    [JsonPropertyAttribute("recognizeOrdinals")]
public bool RecognizeOrdinals { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_NoValue();
    [CompilerGeneratedAttribute]
public void set_NoValue(bool value);
    [CompilerGeneratedAttribute]
public bool get_NoAction();
    [CompilerGeneratedAttribute]
public void set_NoAction(bool value);
    [CompilerGeneratedAttribute]
public bool get_RecognizeNumbers();
    [CompilerGeneratedAttribute]
public void set_RecognizeNumbers(bool value);
    [CompilerGeneratedAttribute]
public bool get_RecognizeOrdinals();
    [CompilerGeneratedAttribute]
public void set_RecognizeOrdinals(bool value);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.FindValuesOptions : object {
    [CompilerGeneratedAttribute]
private bool <AllowPartialMatches>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxTokenDistance>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenizerFunction <Tokenizer>k__BackingField;
    [JsonPropertyAttribute("allowPartialMatches")]
public bool AllowPartialMatches { get; public set; }
    [JsonPropertyAttribute("locale")]
public string Locale { get; public set; }
    [JsonPropertyAttribute("maxTokenDistance")]
public Nullable`1<int> MaxTokenDistance { get; public set; }
    [JsonPropertyAttribute("tokenizer")]
public TokenizerFunction Tokenizer { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_AllowPartialMatches();
    [CompilerGeneratedAttribute]
public void set_AllowPartialMatches(bool value);
    [CompilerGeneratedAttribute]
public string get_Locale();
    [CompilerGeneratedAttribute]
public void set_Locale(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxTokenDistance();
    [CompilerGeneratedAttribute]
public void set_MaxTokenDistance(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public TokenizerFunction get_Tokenizer();
    [CompilerGeneratedAttribute]
public void set_Tokenizer(TokenizerFunction value);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.FoundChoice : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Score>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Synonym>k__BackingField;
    [JsonPropertyAttribute("value")]
public string Value { get; public set; }
    [JsonPropertyAttribute("index")]
public int Index { get; public set; }
    [JsonPropertyAttribute("score")]
public float Score { get; public set; }
    [JsonPropertyAttribute("synonym")]
public string Synonym { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public int get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(int value);
    [CompilerGeneratedAttribute]
public float get_Score();
    [CompilerGeneratedAttribute]
public void set_Score(float value);
    [CompilerGeneratedAttribute]
public string get_Synonym();
    [CompilerGeneratedAttribute]
public void set_Synonym(string value);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.FoundValue : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Score>k__BackingField;
    [JsonPropertyAttribute("value")]
public string Value { get; public set; }
    [JsonPropertyAttribute("index")]
public int Index { get; public set; }
    [JsonPropertyAttribute("score")]
public float Score { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public int get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(int value);
    [CompilerGeneratedAttribute]
public float get_Score();
    [CompilerGeneratedAttribute]
public void set_Score(float value);
}
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter", "Mono.Cecil.CustomAttributeArgument[]")]
public enum Microsoft.Bot.Builder.Dialogs.Choices.ListStyle : Enum {
    public int value__;
    public static ListStyle None;
    public static ListStyle Auto;
    public static ListStyle Inline;
    public static ListStyle List;
    public static ListStyle SuggestedAction;
    public static ListStyle HeroCard;
}
public class Microsoft.Bot.Builder.Dialogs.Choices.ModelResult`1 : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private int <End>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Resolution>k__BackingField;
    public string Text { get; public set; }
    public int Start { get; public set; }
    public int End { get; public set; }
    public string TypeName { get; public set; }
    public T Resolution { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public int get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(int value);
    [CompilerGeneratedAttribute]
public int get_End();
    [CompilerGeneratedAttribute]
public void set_End(int value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
    [CompilerGeneratedAttribute]
public T get_Resolution();
    [CompilerGeneratedAttribute]
public void set_Resolution(T value);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.SortedValue : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [JsonPropertyAttribute("value")]
public string Value { get; public set; }
    [JsonPropertyAttribute("index")]
public int Index { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public int get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(int value);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.Token : object {
    [CompilerGeneratedAttribute]
private int <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private int <End>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Normalized>k__BackingField;
    public int Start { get; public set; }
    public int End { get; public set; }
    public string Text { get; public set; }
    public string Normalized { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(int value);
    [CompilerGeneratedAttribute]
public int get_End();
    [CompilerGeneratedAttribute]
public void set_End(int value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public string get_Normalized();
    [CompilerGeneratedAttribute]
public void set_Normalized(string value);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.Tokenizer : object {
    public static TokenizerFunction DefaultTokenizer { get; }
    public static TokenizerFunction get_DefaultTokenizer();
    public static List`1<Token> DefaultTokenizerImpl(string text, string locale);
    private static void AppendToken(List`1<Token> tokens, Token token, int end);
    private static bool IsBreakingChar(int codePoint);
    private static bool IsBetween(int value, int from, int to);
}
public class Microsoft.Bot.Builder.Dialogs.Choices.TokenizerFunction : MulticastDelegate {
    public TokenizerFunction(object object, IntPtr method);
    public virtual List`1<Token> Invoke(string text, string locale);
    public virtual IAsyncResult BeginInvoke(string text, string locale, AsyncCallback callback, object object);
    public virtual List`1<Token> EndInvoke(IAsyncResult result);
}
public class Microsoft.Bot.Builder.Dialogs.ComponentDialog : DialogContainer {
    public static string PersistedDialogState;
    private bool _initialized;
    [CompilerGeneratedAttribute]
private string <InitialDialogId>k__BackingField;
    public string InitialDialogId { get; public set; }
    public ComponentDialog(string dialogId);
    [CompilerGeneratedAttribute]
public string get_InitialDialogId();
    [CompilerGeneratedAttribute]
public void set_InitialDialogId(string value);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ComponentDialog/<BeginDialogAsync>d__7")]
public virtual Task`1<DialogTurnResult> BeginDialogAsync(DialogContext outerDc, object options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ComponentDialog/<ContinueDialogAsync>d__8")]
public virtual Task`1<DialogTurnResult> ContinueDialogAsync(DialogContext outerDc, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ComponentDialog/<ResumeDialogAsync>d__9")]
public virtual Task`1<DialogTurnResult> ResumeDialogAsync(DialogContext outerDc, DialogReason reason, object result, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ComponentDialog/<RepromptDialogAsync>d__10")]
public virtual Task RepromptDialogAsync(ITurnContext turnContext, DialogInstance instance, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ComponentDialog/<EndDialogAsync>d__11")]
public virtual Task EndDialogAsync(ITurnContext turnContext, DialogInstance instance, DialogReason reason, CancellationToken cancellationToken);
    public ComponentDialog AddDialog(Dialog dialog);
    public virtual DialogContext CreateChildContext(DialogContext dc);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ComponentDialog/<EnsureInitializedAsync>d__14")]
protected Task EnsureInitializedAsync(DialogContext outerDc);
    protected virtual Task OnInitializeAsync(DialogContext dc);
    protected virtual Task`1<DialogTurnResult> OnBeginDialogAsync(DialogContext innerDc, object options, CancellationToken cancellationToken);
    protected virtual Task`1<DialogTurnResult> OnContinueDialogAsync(DialogContext innerDc, CancellationToken cancellationToken);
    protected virtual Task OnEndDialogAsync(ITurnContext context, DialogInstance instance, DialogReason reason, CancellationToken cancellationToken);
    protected virtual Task OnRepromptDialogAsync(ITurnContext turnContext, DialogInstance instance, CancellationToken cancellationToken);
    protected virtual Task`1<DialogTurnResult> EndComponentAsync(DialogContext outerDc, object result, CancellationToken cancellationToken);
    private static DialogState BuildDialogState(DialogInstance instance);
    private DialogContext CreateInnerDc(DialogContext outerDc, DialogInstance instance);
    private DialogContext CreateInnerDc(ITurnContext turnContext, DialogInstance instance);
}
public class Microsoft.Bot.Builder.Dialogs.ConfirmPrompt : Prompt`1<bool> {
    private Dictionary`2<string, ValueTuple`3<Choice, Choice, ChoiceFactoryOptions>> _choiceDefaults;
    [CompilerGeneratedAttribute]
private ListStyle <Style>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultLocale>k__BackingField;
    [CompilerGeneratedAttribute]
private ChoiceFactoryOptions <ChoiceOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Tuple`2<Choice, Choice> <ConfirmChoices>k__BackingField;
    public ListStyle Style { get; public set; }
    public string DefaultLocale { get; public set; }
    public ChoiceFactoryOptions ChoiceOptions { get; public set; }
    public Tuple`2<Choice, Choice> ConfirmChoices { get; public set; }
    public ConfirmPrompt(string dialogId, PromptValidator`1<bool> validator, string defaultLocale);
    public ConfirmPrompt(string dialogId, Dictionary`2<string, ValueTuple`3<Choice, Choice, ChoiceFactoryOptions>> choiceDefaults, PromptValidator`1<bool> validator, string defaultLocale);
    [CompilerGeneratedAttribute]
public ListStyle get_Style();
    [CompilerGeneratedAttribute]
public void set_Style(ListStyle value);
    [CompilerGeneratedAttribute]
public string get_DefaultLocale();
    [CompilerGeneratedAttribute]
public void set_DefaultLocale(string value);
    [CompilerGeneratedAttribute]
public ChoiceFactoryOptions get_ChoiceOptions();
    [CompilerGeneratedAttribute]
public void set_ChoiceOptions(ChoiceFactoryOptions value);
    [CompilerGeneratedAttribute]
public Tuple`2<Choice, Choice> get_ConfirmChoices();
    [CompilerGeneratedAttribute]
public void set_ConfirmChoices(Tuple`2<Choice, Choice> value);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ConfirmPrompt/<OnPromptAsync>d__19")]
protected virtual Task OnPromptAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, bool isRetry, CancellationToken cancellationToken);
    protected virtual Task`1<PromptRecognizerResult`1<bool>> OnRecognizeAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, CancellationToken cancellationToken);
    private string DetermineCulture(Activity activity);
}
public class Microsoft.Bot.Builder.Dialogs.DateTimePrompt : Prompt`1<IList`1<DateTimeResolution>> {
    [CompilerGeneratedAttribute]
private string <DefaultLocale>k__BackingField;
    public string DefaultLocale { get; public set; }
    public DateTimePrompt(string dialogId, PromptValidator`1<IList`1<DateTimeResolution>> validator, string defaultLocale);
    [CompilerGeneratedAttribute]
public string get_DefaultLocale();
    [CompilerGeneratedAttribute]
public void set_DefaultLocale(string value);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DateTimePrompt/<OnPromptAsync>d__5")]
protected virtual Task OnPromptAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, bool isRetry, CancellationToken cancellationToken);
    protected virtual Task`1<PromptRecognizerResult`1<IList`1<DateTimeResolution>>> OnRecognizeAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, CancellationToken cancellationToken);
    private static DateTimeResolution ReadResolution(IDictionary`2<string, string> resolution);
}
public class Microsoft.Bot.Builder.Dialogs.DateTimeResolution : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private string <End>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Timex>k__BackingField;
    public string Value { get; public set; }
    public string Start { get; public set; }
    public string End { get; public set; }
    public string Timex { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(string value);
    [CompilerGeneratedAttribute]
public string get_End();
    [CompilerGeneratedAttribute]
public void set_End(string value);
    [CompilerGeneratedAttribute]
public string get_Timex();
    [CompilerGeneratedAttribute]
public void set_Timex(string value);
}
[ExtensionAttribute]
public static class Microsoft.Bot.Builder.Dialogs.Debugging.DebugSupport : object {
    [CompilerGeneratedAttribute]
private static ISourceMap <SourceMap>k__BackingField;
    public static ISourceMap SourceMap { get; public set; }
    private static DebugSupport();
    [CompilerGeneratedAttribute]
public static ISourceMap get_SourceMap();
    [CompilerGeneratedAttribute]
public static void set_SourceMap(ISourceMap value);
    [ExtensionAttribute]
public static IDialogDebugger GetDebugger(ITurnContext context);
    [ExtensionAttribute]
public static IDialogDebugger GetDebugger(DialogContext context);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Debugging.DebugSupport/<DebuggerStepAsync>d__6")]
[ExtensionAttribute]
public static Task DebuggerStepAsync(DialogContext context, Dialog dialog, string more, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Debugging.DebugSupport/<DebuggerStepAsync>d__7")]
[ExtensionAttribute]
public static Task DebuggerStepAsync(DialogContext context, IRecognizer recognizer, string more, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Debugging.DebugSupport/<DebuggerStepAsync>d__8")]
[ExtensionAttribute]
public static Task DebuggerStepAsync(DialogContext context, Recognizer recognizer, string more, CancellationToken cancellationToken);
}
public interface Microsoft.Bot.Builder.Dialogs.Debugging.IDebugger {
    public abstract virtual Task OutputAsync(string text, object item, object value, CancellationToken cancellationToken);
}
public interface Microsoft.Bot.Builder.Dialogs.Debugging.IDialogDebugger {
    public abstract virtual Task StepAsync(DialogContext context, object item, string more, CancellationToken cancellationToken);
}
public interface Microsoft.Bot.Builder.Dialogs.Debugging.ISourceMap {
    public abstract virtual void Add(object item, SourceRange range);
    public abstract virtual bool TryGetValue(object item, SourceRange& range);
}
public class Microsoft.Bot.Builder.Dialogs.Debugging.NullDialogDebugger : object {
    public static IDialogDebugger Instance;
    [CompilerGeneratedAttribute]
private bool <TraceSteps>k__BackingField;
    public bool TraceSteps { get; public set; }
    private static NullDialogDebugger();
    [CompilerGeneratedAttribute]
public bool get_TraceSteps();
    [CompilerGeneratedAttribute]
public void set_TraceSteps(bool value);
    private sealed virtual override Task Microsoft.Bot.Builder.Dialogs.Debugging.IDialogDebugger.StepAsync(DialogContext context, object item, string more, CancellationToken cancellationToken);
}
public class Microsoft.Bot.Builder.Dialogs.Debugging.NullSourceMap : object {
    public static NullSourceMap Instance;
    private static NullSourceMap();
    public sealed virtual void Add(object item, SourceRange range);
    public sealed virtual bool TryGetValue(object item, SourceRange& range);
}
public class Microsoft.Bot.Builder.Dialogs.Debugging.SourceContext : object {
    [CompilerGeneratedAttribute]
private Stack`1<SourceRange> <CallStack>k__BackingField;
    public Stack`1<SourceRange> CallStack { get; private set; }
    [CompilerGeneratedAttribute]
public Stack`1<SourceRange> get_CallStack();
    [CompilerGeneratedAttribute]
private void set_CallStack(Stack`1<SourceRange> value);
}
public class Microsoft.Bot.Builder.Dialogs.Debugging.SourceMap : ConcurrentDictionary`2<object, SourceRange> {
    public static SourceMap Instance;
    private static SourceMap();
    public sealed virtual void Add(object item, SourceRange range);
}
public class Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint : object {
    [CompilerGeneratedAttribute]
private int <LineIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CharIndex>k__BackingField;
    public int LineIndex { get; public set; }
    public int CharIndex { get; public set; }
    public SourcePoint(int lineIndex, int charIndex);
    [CompilerGeneratedAttribute]
public int get_LineIndex();
    [CompilerGeneratedAttribute]
public void set_LineIndex(int value);
    [CompilerGeneratedAttribute]
public int get_CharIndex();
    [CompilerGeneratedAttribute]
public void set_CharIndex(int value);
    public static SourcePoint From(JsonReader reader);
    public static T ReadObjectWithSourcePoints(JsonReader reader, Func`2<JsonReader, T> read, SourcePoint& start, SourcePoint& end);
    public virtual string ToString();
    public SourcePoint DeepClone();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(SourcePoint other);
    public virtual int GetHashCode();
}
public class Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange : object {
    [CompilerGeneratedAttribute]
private JToken <Designer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private SourcePoint <StartPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private SourcePoint <EndPoint>k__BackingField;
    public JToken Designer { get; public set; }
    public string Path { get; public set; }
    public SourcePoint StartPoint { get; public set; }
    public SourcePoint EndPoint { get; public set; }
    public SourceRange(string path, int startLine, int startChar, int endLine, int endChar);
    [CompilerGeneratedAttribute]
public JToken get_Designer();
    [CompilerGeneratedAttribute]
public void set_Designer(JToken value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public SourcePoint get_StartPoint();
    [CompilerGeneratedAttribute]
public void set_StartPoint(SourcePoint value);
    [CompilerGeneratedAttribute]
public SourcePoint get_EndPoint();
    [CompilerGeneratedAttribute]
public void set_EndPoint(SourcePoint value);
    public virtual string ToString();
    public SourceRange DeepClone();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(SourceRange other);
    public virtual int GetHashCode();
}
[DebuggerDisplayAttribute("{Id}")]
public abstract class Microsoft.Bot.Builder.Dialogs.Dialog : object {
    public static DialogTurnResult EndOfTurn;
    private IBotTelemetryClient _telemetryClient;
    [JsonPropertyAttribute("id")]
private string _id;
    [JsonIgnoreAttribute]
public string Id { get; public set; }
    [JsonIgnoreAttribute]
public IBotTelemetryClient TelemetryClient { get; public set; }
    [JsonIgnoreAttribute]
public SourceRange Source { get; }
    public Dialog(string dialogId);
    private static Dialog();
    public string get_Id();
    public void set_Id(string value);
    public virtual IBotTelemetryClient get_TelemetryClient();
    public virtual void set_TelemetryClient(IBotTelemetryClient value);
    public virtual SourceRange get_Source();
    public abstract virtual Task`1<DialogTurnResult> BeginDialogAsync(DialogContext dc, object options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Dialog/<ContinueDialogAsync>d__13")]
public virtual Task`1<DialogTurnResult> ContinueDialogAsync(DialogContext dc, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Dialog/<ResumeDialogAsync>d__14")]
public virtual Task`1<DialogTurnResult> ResumeDialogAsync(DialogContext dc, DialogReason reason, object result, CancellationToken cancellationToken);
    public virtual Task RepromptDialogAsync(ITurnContext turnContext, DialogInstance instance, CancellationToken cancellationToken);
    public virtual Task EndDialogAsync(ITurnContext turnContext, DialogInstance instance, DialogReason reason, CancellationToken cancellationToken);
    public virtual string GetVersion();
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Dialog/<OnDialogEventAsync>d__18")]
public virtual Task`1<bool> OnDialogEventAsync(DialogContext dc, DialogEvent e, CancellationToken cancellationToken);
    protected virtual Task`1<bool> OnPreBubbleEventAsync(DialogContext dc, DialogEvent e, CancellationToken cancellationToken);
    protected virtual Task`1<bool> OnPostBubbleEventAsync(DialogContext dc, DialogEvent e, CancellationToken cancellationToken);
    protected virtual string OnComputeId();
    protected void RegisterSourceLocation(string path, int lineNumber);
}
public abstract class Microsoft.Bot.Builder.Dialogs.DialogContainer : Dialog {
    [CompilerGeneratedAttribute]
private bool <IgnoreMemoryScopeBinding>k__BackingField;
    [CompilerGeneratedAttribute]
private DialogSet <Dialogs>k__BackingField;
    [JsonPropertyAttribute("ignoreMemoryScopeBinding")]
public bool IgnoreMemoryScopeBinding { get; public set; }
    [JsonPropertyAttribute("dialogs")]
public DialogSet Dialogs { get; public set; }
    [JsonIgnoreAttribute]
public IBotTelemetryClient TelemetryClient { get; public set; }
    protected DialogContainer(string dialogId);
    protected DialogContainer(bool ignoreMemoryScopeBinding, string dialogId);
    [CompilerGeneratedAttribute]
public bool get_IgnoreMemoryScopeBinding();
    [CompilerGeneratedAttribute]
public void set_IgnoreMemoryScopeBinding(bool value);
    [CompilerGeneratedAttribute]
public DialogSet get_Dialogs();
    [CompilerGeneratedAttribute]
public void set_Dialogs(DialogSet value);
    public virtual IBotTelemetryClient get_TelemetryClient();
    public virtual void set_TelemetryClient(IBotTelemetryClient value);
    public abstract virtual DialogContext CreateChildContext(DialogContext dc);
    public virtual Dialog FindDialog(string dialogId);
    public virtual Dialog FindDialog(string dialogId, DialogContext dc);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogContainer/<OnDialogEventAsync>d__16")]
public virtual Task`1<bool> OnDialogEventAsync(DialogContext dc, DialogEvent e, CancellationToken cancellationToken);
    protected virtual string GetInternalVersion();
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogContainer/<CheckForVersionChangeAsync>d__18")]
protected virtual Task CheckForVersionChangeAsync(DialogContext dc, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<bool> <>n__0(DialogContext dc, DialogEvent e, CancellationToken cancellationToken);
}
[DebuggerDisplayAttribute("{GetType().Name}[{ActiveDialog?.Id}]")]
public class Microsoft.Bot.Builder.Dialogs.DialogContext : object {
    [CompilerGeneratedAttribute]
private DialogSet <Dialogs>k__BackingField;
    [CompilerGeneratedAttribute]
private ITurnContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DialogInstance> <Stack>k__BackingField;
    [CompilerGeneratedAttribute]
private DialogContext <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private DialogStateManager <State>k__BackingField;
    [CompilerGeneratedAttribute]
private TurnContextStateCollection <Services>k__BackingField;
    public DialogSet Dialogs { get; private set; }
    public ITurnContext Context { get; private set; }
    public List`1<DialogInstance> Stack { get; private set; }
    public DialogContext Parent { get; public set; }
    public DialogContext Child { get; }
    public DialogInstance ActiveDialog { get; }
    public DialogStateManager State { get; public set; }
    public TurnContextStateCollection Services { get; private set; }
    [ObsoleteAttribute("The DialogManager property serves no function.")]
public DialogManager DialogManager { get; }
    public DialogContext(DialogSet dialogs, ITurnContext turnContext, DialogState state);
    public DialogContext(DialogSet dialogs, DialogContext parentDialogContext, DialogState state);
    [CompilerGeneratedAttribute]
public DialogSet get_Dialogs();
    [CompilerGeneratedAttribute]
private void set_Dialogs(DialogSet value);
    [CompilerGeneratedAttribute]
public ITurnContext get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(ITurnContext value);
    [CompilerGeneratedAttribute]
public List`1<DialogInstance> get_Stack();
    [CompilerGeneratedAttribute]
private void set_Stack(List`1<DialogInstance> value);
    [CompilerGeneratedAttribute]
public DialogContext get_Parent();
    [CompilerGeneratedAttribute]
public void set_Parent(DialogContext value);
    public DialogContext get_Child();
    public DialogInstance get_ActiveDialog();
    [CompilerGeneratedAttribute]
public DialogStateManager get_State();
    [CompilerGeneratedAttribute]
public void set_State(DialogStateManager value);
    [CompilerGeneratedAttribute]
public TurnContextStateCollection get_Services();
    [CompilerGeneratedAttribute]
private void set_Services(TurnContextStateCollection value);
    public DialogManager get_DialogManager();
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogContext/<BeginDialogAsync>d__32")]
public Task`1<DialogTurnResult> BeginDialogAsync(string dialogId, object options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogContext/<PromptAsync>d__33")]
public Task`1<DialogTurnResult> PromptAsync(string dialogId, PromptOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogContext/<ContinueDialogAsync>d__34")]
public Task`1<DialogTurnResult> ContinueDialogAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogContext/<EndDialogAsync>d__35")]
public Task`1<DialogTurnResult> EndDialogAsync(object result, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogContext/<CancelAllDialogsAsync>d__36")]
public Task`1<DialogTurnResult> CancelAllDialogsAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogContext/<CancelAllDialogsAsync>d__37")]
public Task`1<DialogTurnResult> CancelAllDialogsAsync(bool cancelParents, string eventName, object eventValue, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogContext/<ReplaceDialogAsync>d__38")]
public Task`1<DialogTurnResult> ReplaceDialogAsync(string dialogId, object options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogContext/<RepromptDialogAsync>d__39")]
public Task RepromptDialogAsync(CancellationToken cancellationToken);
    public Dialog FindDialog(string dialogId);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogContext/<EmitEventAsync>d__41")]
public Task`1<bool> EmitEventAsync(string name, object value, bool bubble, bool fromLeaf, CancellationToken cancellationToken);
    public string GetLocale();
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogContext/<EndActiveDialogAsync>d__43")]
private Task EndActiveDialogAsync(DialogReason reason, object result, CancellationToken cancellationToken);
    private void SetExceptionContextData(Exception exception);
}
public class Microsoft.Bot.Builder.Dialogs.DialogContextPath : object {
    public static string ActiveDialog;
    public static string Parent;
    public static string Stack;
}
[ObsoleteAttribute("This class is no longer used and is deprecated. Use DialogContext.State.GetMemorySnapshot() to get all visible memory scope objects.", "False")]
public class Microsoft.Bot.Builder.Dialogs.DialogContextVisibleState : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <User>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Conversation>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Dialog>k__BackingField;
    [JsonPropertyAttribute]
public IDictionary`2<string, object> User { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, object> Conversation { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, object> Dialog { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_User();
    [CompilerGeneratedAttribute]
public void set_User(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Conversation();
    [CompilerGeneratedAttribute]
public void set_Conversation(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Dialog();
    [CompilerGeneratedAttribute]
public void set_Dialog(IDictionary`2<string, object> value);
}
[DebuggerDisplayAttribute("{Name}")]
public class Microsoft.Bot.Builder.Dialogs.DialogEvent : object {
    [CompilerGeneratedAttribute]
private bool <Bubble>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public bool Bubble { get; public set; }
    public string Name { get; public set; }
    public object Value { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Bubble();
    [CompilerGeneratedAttribute]
public void set_Bubble(bool value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
}
public class Microsoft.Bot.Builder.Dialogs.DialogEvents : object {
    public static string BeginDialog;
    public static string RepromptDialog;
    public static string CancelDialog;
    public static string ActivityReceived;
    public static string VersionChanged;
    public static string Error;
    public static string Custom;
}
[ExtensionAttribute]
public static class Microsoft.Bot.Builder.Dialogs.DialogExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogExtensions/<RunAsync>d__0")]
[ExtensionAttribute]
public static Task RunAsync(Dialog dialog, ITurnContext turnContext, IStatePropertyAccessor`1<DialogState> accessor, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogExtensions/<InternalRunAsync>d__1")]
internal static Task`1<DialogTurnResult> InternalRunAsync(ITurnContext turnContext, string dialogId, DialogContext dialogContext, DialogStateManagerConfiguration stateConfiguration, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogExtensions/<InnerRunAsync>d__2")]
private static Task`1<DialogTurnResult> InnerRunAsync(ITurnContext turnContext, string dialogId, DialogContext dialogContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogExtensions/<SendStateSnapshotTraceAsync>d__3")]
private static Task SendStateSnapshotTraceAsync(DialogContext dialogContext, CancellationToken cancellationToken);
    private static bool SendEoCToParent(ITurnContext turnContext);
    private static bool IsFromParentToSkill(ITurnContext turnContext);
    private static DialogContext GetActiveDialogContext(DialogContext dialogContext);
}
[DebuggerDisplayAttribute("{Id}")]
public class Microsoft.Bot.Builder.Dialogs.DialogInstance : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <State>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StackIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [JsonPropertyAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyAttribute("state")]
public IDictionary`2<string, object> State { get; public set; }
    public Nullable`1<int> StackIndex { get; public set; }
    public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_State();
    [CompilerGeneratedAttribute]
public void set_State(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_StackIndex();
    [CompilerGeneratedAttribute]
public void set_StackIndex(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
[ObsoleteAttribute("This class will be deprecated in the next version of the Bot Framework SDK.")]
public class Microsoft.Bot.Builder.Dialogs.DialogManager : object {
    private static string LastAccess;
    private string _rootDialogId;
    private string _dialogStateProperty;
    [CompilerGeneratedAttribute]
private ConversationState <ConversationState>k__BackingField;
    [CompilerGeneratedAttribute]
private UserState <UserState>k__BackingField;
    [CompilerGeneratedAttribute]
private TurnContextStateCollection <InitialTurnState>k__BackingField;
    [CompilerGeneratedAttribute]
private DialogSet <Dialogs>k__BackingField;
    [CompilerGeneratedAttribute]
private DialogStateManagerConfiguration <StateConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ExpireAfter>k__BackingField;
    public ConversationState ConversationState { get; public set; }
    public UserState UserState { get; public set; }
    public TurnContextStateCollection InitialTurnState { get; }
    public Dialog RootDialog { get; public set; }
    [JsonIgnoreAttribute]
public DialogSet Dialogs { get; public set; }
    public DialogStateManagerConfiguration StateConfiguration { get; public set; }
    public Nullable`1<int> ExpireAfter { get; public set; }
    public DialogManager(Dialog rootDialog, string dialogStateProperty);
    [CompilerGeneratedAttribute]
public ConversationState get_ConversationState();
    [CompilerGeneratedAttribute]
public void set_ConversationState(ConversationState value);
    [CompilerGeneratedAttribute]
public UserState get_UserState();
    [CompilerGeneratedAttribute]
public void set_UserState(UserState value);
    [CompilerGeneratedAttribute]
public TurnContextStateCollection get_InitialTurnState();
    public Dialog get_RootDialog();
    public void set_RootDialog(Dialog value);
    [CompilerGeneratedAttribute]
public DialogSet get_Dialogs();
    [CompilerGeneratedAttribute]
public void set_Dialogs(DialogSet value);
    [CompilerGeneratedAttribute]
public DialogStateManagerConfiguration get_StateConfiguration();
    [CompilerGeneratedAttribute]
public void set_StateConfiguration(DialogStateManagerConfiguration value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ExpireAfter();
    [CompilerGeneratedAttribute]
public void set_ExpireAfter(Nullable`1<int> value);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogManager/<OnTurnAsync>d__30")]
public Task`1<DialogManagerResult> OnTurnAsync(ITurnContext context, CancellationToken cancellationToken);
    private static DialogContext GetActiveDialogContext(DialogContext dialogContext);
    private void RegisterContainerDialogs(Dialog dialog, bool registerRoot);
}
[ObsoleteAttribute("This class is not used anymore", "True")]
public class Microsoft.Bot.Builder.Dialogs.DialogManagerAdapter : BotAdapter {
    [CompilerGeneratedAttribute]
private List`1<Activity> <Activities>k__BackingField;
    public List`1<Activity> Activities { get; private set; }
    [CompilerGeneratedAttribute]
public List`1<Activity> get_Activities();
    [CompilerGeneratedAttribute]
private void set_Activities(List`1<Activity> value);
    public virtual Task`1<ResourceResponse[]> SendActivitiesAsync(ITurnContext turnContext, Activity[] activities, CancellationToken cancellationToken);
    public virtual Task`1<ResourceResponse> UpdateActivityAsync(ITurnContext turnContext, Activity activity, CancellationToken cancellationToken);
    public virtual Task DeleteActivityAsync(ITurnContext turnContext, ConversationReference reference, CancellationToken cancellationToken);
}
public class Microsoft.Bot.Builder.Dialogs.DialogManagerResult : object {
    [CompilerGeneratedAttribute]
private DialogTurnResult <TurnResult>k__BackingField;
    [CompilerGeneratedAttribute]
private Activity[] <Activities>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistedState <NewState>k__BackingField;
    public DialogTurnResult TurnResult { get; public set; }
    public Activity[] Activities { get; public set; }
    public PersistedState NewState { get; public set; }
    [CompilerGeneratedAttribute]
public DialogTurnResult get_TurnResult();
    [CompilerGeneratedAttribute]
public void set_TurnResult(DialogTurnResult value);
    [CompilerGeneratedAttribute]
public Activity[] get_Activities();
    [CompilerGeneratedAttribute]
public void set_Activities(Activity[] value);
    [CompilerGeneratedAttribute]
public PersistedState get_NewState();
    [CompilerGeneratedAttribute]
public void set_NewState(PersistedState value);
}
public class Microsoft.Bot.Builder.Dialogs.DialogPath : object {
    public static string EventCounter;
    public static string ExpectedProperties;
    public static string DefaultOperation;
    public static string LastEvent;
    public static string RequiredProperties;
    public static string Retries;
    public static string LastIntent;
    public static string LastTriggerEvent;
    public static string GetPropertyName(string property);
}
public enum Microsoft.Bot.Builder.Dialogs.DialogReason : Enum {
    public int value__;
    public static DialogReason BeginCalled;
    public static DialogReason ContinueCalled;
    public static DialogReason EndCalled;
    public static DialogReason ReplaceCalled;
    public static DialogReason CancelCalled;
    public static DialogReason NextCalled;
}
public class Microsoft.Bot.Builder.Dialogs.DialogsBotComponent : BotComponent {
    public virtual void ConfigureServices(IServiceCollection services, IConfiguration configuration);
}
public class Microsoft.Bot.Builder.Dialogs.DialogsComponentRegistration : ComponentRegistrationBridge`1<DialogsBotComponent> {
}
public class Microsoft.Bot.Builder.Dialogs.DialogSet : object {
    private IDictionary`2<string, Dialog> _dialogs;
    private IStatePropertyAccessor`1<DialogState> _dialogState;
    private IBotTelemetryClient _telemetryClient;
    private string _version;
    [JsonIgnoreAttribute]
public IBotTelemetryClient TelemetryClient { get; public set; }
    public DialogSet(IStatePropertyAccessor`1<DialogState> dialogState);
    public IBotTelemetryClient get_TelemetryClient();
    public void set_TelemetryClient(IBotTelemetryClient value);
    public virtual string GetVersion();
    public DialogSet Add(Dialog dialog);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.DialogSet/<CreateContextAsync>d__11")]
public Task`1<DialogContext> CreateContextAsync(ITurnContext turnContext, CancellationToken cancellationToken);
    public Dialog Find(string dialogId);
    public IEnumerable`1<Dialog> GetDialogs();
}
public class Microsoft.Bot.Builder.Dialogs.DialogState : object {
    [CompilerGeneratedAttribute]
private List`1<DialogInstance> <DialogStack>k__BackingField;
    [JsonPropertyAttribute("dialogStack")]
public List`1<DialogInstance> DialogStack { get; public set; }
    public DialogState(List`1<DialogInstance> stack);
    [CompilerGeneratedAttribute]
public List`1<DialogInstance> get_DialogStack();
    [CompilerGeneratedAttribute]
public void set_DialogStack(List`1<DialogInstance> value);
}
[DebuggerDisplayAttribute("[DialogTurnStatus.{Status}]{Result ?? string.Empty}")]
public class Microsoft.Bot.Builder.Dialogs.DialogTurnResult : object {
    [CompilerGeneratedAttribute]
private DialogTurnStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ParentEnded>k__BackingField;
    public DialogTurnStatus Status { get; public set; }
    public object Result { get; public set; }
    public bool ParentEnded { get; public set; }
    public DialogTurnResult(DialogTurnStatus status, object result);
    [CompilerGeneratedAttribute]
public DialogTurnStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(DialogTurnStatus value);
    [CompilerGeneratedAttribute]
public object get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(object value);
    [CompilerGeneratedAttribute]
public bool get_ParentEnded();
    [CompilerGeneratedAttribute]
public void set_ParentEnded(bool value);
}
public enum Microsoft.Bot.Builder.Dialogs.DialogTurnStatus : Enum {
    public int value__;
    public static DialogTurnStatus Empty;
    public static DialogTurnStatus Waiting;
    public static DialogTurnStatus Complete;
    public static DialogTurnStatus Cancelled;
    public static DialogTurnStatus CompleteAndWait;
}
[ExtensionAttribute]
internal static class Microsoft.Bot.Builder.Dialogs.Extensions : object {
    [ExtensionAttribute]
public static T CastTo(object obj);
}
public interface Microsoft.Bot.Builder.Dialogs.IDialogDependencies {
    public abstract virtual IEnumerable`1<Dialog> GetDependencies();
}
public interface Microsoft.Bot.Builder.Dialogs.IItemIdentity {
    public abstract virtual string GetIdentity();
}
public interface Microsoft.Bot.Builder.Dialogs.ITemplate`1 {
    public abstract virtual Task`1<T> BindAsync(DialogContext dialogContext, object data, CancellationToken cancellationToken);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager : object {
    private static string PathTracker;
    private static Char[] Separators;
    private DialogContext _dialogContext;
    private int _version;
    [CompilerGeneratedAttribute]
private DialogStateManagerConfiguration <Configuration>k__BackingField;
    public DialogStateManagerConfiguration Configuration { get; public set; }
    public ICollection`1<string> Keys { get; }
    public ICollection`1<object> Values { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public object Item { get; public set; }
    public DialogStateManager(DialogContext dc, DialogStateManagerConfiguration configuration);
    private static DialogStateManager();
    [CompilerGeneratedAttribute]
public DialogStateManagerConfiguration get_Configuration();
    [CompilerGeneratedAttribute]
public void set_Configuration(DialogStateManagerConfiguration value);
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual ICollection`1<object> get_Values();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual object get_Item(string key);
    public sealed virtual void set_Item(string key, object value);
    public MemoryScope GetMemoryScope(string name);
    public string Version();
    public virtual MemoryScope ResolveMemoryScope(string path, String& remainingPath);
    public virtual string TransformPath(string path);
    public bool TryGetValue(string path, T& value);
    public T GetValue(string pathExpression, Func`1<T> defaultValue);
    public int GetIntValue(string pathExpression, int defaultValue);
    public bool GetBoolValue(string pathExpression, bool defaultValue);
    public string GetStringValue(string pathExpression, string defaultValue);
    public void SetValue(string path, object value);
    public void RemoveValue(string path);
    public JObject GetMemorySnapshot();
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager/<LoadAllScopesAsync>d__32")]
public Task LoadAllScopesAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager/<SaveAllChangesAsync>d__33")]
public Task SaveAllChangesAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager/<DeleteScopesMemoryAsync>d__34")]
public Task DeleteScopesMemoryAsync(string name, CancellationToken cancellationToken);
    public sealed virtual void Add(string key, object value);
    public sealed virtual bool ContainsKey(string key);
    public sealed virtual bool Remove(string key);
    public sealed virtual bool TryGetValue(string key, Object& value);
    public sealed virtual void Add(KeyValuePair`2<string, object> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<string, object> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual bool Remove(KeyValuePair`2<string, object> item);
    [IteratorStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager/<GetEnumerator>d__44")]
public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    public List`1<string> TrackPaths(IEnumerable`1<string> paths);
    public bool AnyPathChanged(UInt32 counter, IEnumerable`1<string> paths);
    [IteratorStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager/<System-Collections-IEnumerable-GetEnumerator>d__47")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private static bool TryGetFirstNestedValue(T& value, String& remainingPath, object memory);
    private string GetBadScopeMessage(string path);
    private bool TrackChange(string path, object value);
    [CompilerGeneratedAttribute]
private object <get_Values>b__12_0(MemoryScope ms);
}
public class Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManagerConfiguration : object {
    [CompilerGeneratedAttribute]
private List`1<IPathResolver> <PathResolvers>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<MemoryScope> <MemoryScopes>k__BackingField;
    public List`1<IPathResolver> PathResolvers { get; public set; }
    public List`1<MemoryScope> MemoryScopes { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<IPathResolver> get_PathResolvers();
    [CompilerGeneratedAttribute]
public void set_PathResolvers(List`1<IPathResolver> value);
    [CompilerGeneratedAttribute]
public List`1<MemoryScope> get_MemoryScopes();
    [CompilerGeneratedAttribute]
public void set_MemoryScopes(List`1<MemoryScope> value);
}
[ObsoleteAttribute("Bot components should create subclass `Microsoft.Bot.Builder.BotComponent` and use the provided `IServiceCollection` to register a custom memory scope. Example: `services.AddSingleton<MemoryScope, MyCustomMemoryScope>()`. In composer scenarios, the Startup method will be called automatically.")]
public interface Microsoft.Bot.Builder.Dialogs.Memory.IComponentMemoryScopes {
    public abstract virtual IEnumerable`1<MemoryScope> GetMemoryScopes();
}
[ObsoleteAttribute("Bot components should create subclass `Microsoft.Bot.Builder.BotComponent` and use the provided `IServiceCollection` to register a path resolver. Example: `services.AddSingleton<IPathResolver, MyPathResolver>()`. In composer scenarios, the Startup method will be called automatically.")]
public interface Microsoft.Bot.Builder.Dialogs.Memory.IComponentPathResolvers {
    public abstract virtual IEnumerable`1<IPathResolver> GetPathResolvers();
}
public interface Microsoft.Bot.Builder.Dialogs.Memory.IPathResolver {
    public abstract virtual string TransformPath(string path);
}
public class Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AliasPathResolver : object {
    private string _postfix;
    private string _prefix;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    public string Alias { get; }
    public AliasPathResolver(string alias, string prefix, string postfix);
    [CompilerGeneratedAttribute]
public string get_Alias();
    public virtual string TransformPath(string path);
    protected bool IsPathChar(char ch);
}
public class Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AtAtPathResolver : AliasPathResolver {
}
public class Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AtPathResolver : AliasPathResolver {
    private static string Prefix;
    private static Char[] _delims;
    private static AtPathResolver();
    public virtual string TransformPath(string path);
}
public class Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.DollarPathResolver : AliasPathResolver {
}
public class Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.HashPathResolver : AliasPathResolver {
}
public class Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.PercentPathResolver : AliasPathResolver {
}
public class Microsoft.Bot.Builder.Dialogs.Memory.Scopes.BotStateMemoryScope`1 : MemoryScope {
    public BotStateMemoryScope`1(string name);
    public virtual object GetMemory(DialogContext dialogContext);
    public virtual void SetMemory(DialogContext dialogContext, object memory);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Memory.Scopes.BotStateMemoryScope`1/<LoadAsync>d__3")]
public virtual Task LoadAsync(DialogContext dialogContext, bool force, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Memory.Scopes.BotStateMemoryScope`1/<SaveChangesAsync>d__4")]
public virtual Task SaveChangesAsync(DialogContext dialogContext, bool force, CancellationToken cancellationToken);
    public virtual Task DeleteAsync(DialogContext dialogContext, CancellationToken cancellationToken);
    private static T GetBotState(DialogContext dialogContext);
}
public class Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ClassMemoryScope : MemoryScope {
    public virtual object GetMemory(DialogContext dc);
    public virtual void SetMemory(DialogContext dc, object memory);
}
public class Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ConversationMemoryScope : BotStateMemoryScope`1<ConversationState> {
}
public class Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogClassMemoryScope : MemoryScope {
    public virtual object GetMemory(DialogContext dc);
    public virtual void SetMemory(DialogContext dc, object memory);
}
public class Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogContextMemoryScope : MemoryScope {
    public static string Stack;
    public static string ActiveDialog;
    public static string Parent;
    public virtual object GetMemory(DialogContext dc);
    public virtual void SetMemory(DialogContext dc, object memory);
}
public class Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogMemoryScope : MemoryScope {
    public virtual object GetMemory(DialogContext dc);
    public virtual void SetMemory(DialogContext dc, object memory);
}
public abstract class Microsoft.Bot.Builder.Dialogs.Memory.Scopes.MemoryScope : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeInSnapshot>k__BackingField;
    public string Name { get; public set; }
    public bool IncludeInSnapshot { get; protected set; }
    public MemoryScope(string name, bool includeInSnapshot);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IncludeInSnapshot();
    [CompilerGeneratedAttribute]
protected void set_IncludeInSnapshot(bool value);
    public abstract virtual object GetMemory(DialogContext dc);
    public abstract virtual void SetMemory(DialogContext dc, object memory);
    public virtual Task LoadAsync(DialogContext dialogContext, bool force, CancellationToken cancellationToken);
    public virtual Task SaveChangesAsync(DialogContext dialogContext, bool force, CancellationToken cancellationToken);
    public virtual Task DeleteAsync(DialogContext dialogContext, CancellationToken cancellationToken);
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ReadOnlyObject : object {
    private static string Notsupported;
    private object _obj;
    public ICollection`1<string> Keys { get; }
    public ICollection`1<object> Values { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public object Item { get; public set; }
    public ReadOnlyObject(object obj);
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual ICollection`1<object> get_Values();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual object get_Item(string key);
    public sealed virtual void set_Item(string key, object value);
    public sealed virtual void Add(string key, object value);
    public sealed virtual void Add(KeyValuePair`2<string, object> item);
    public sealed virtual void Clear();
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
    public sealed virtual bool Contains(KeyValuePair`2<string, object> item);
    public sealed virtual bool ContainsKey(string key);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    public sealed virtual bool Remove(string key);
    public sealed virtual bool Remove(KeyValuePair`2<string, object> item);
    public sealed virtual bool TryGetValue(string name, Object& value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private object GetValue(string name);
    [CompilerGeneratedAttribute]
private object <get_Values>b__6_0(string propertyName);
    [CompilerGeneratedAttribute]
private KeyValuePair`2<string, object> <GetEnumerator>b__22_0(string propertyName);
}
public class Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope : MemoryScope {
    private static List`1<string> _blockingList;
    private Dictionary`2<string, object> _emptySettings;
    private ImmutableDictionary`2<string, object> _initialSettings;
    public SettingsMemoryScope(IConfiguration configuration);
    private static SettingsMemoryScope();
    public virtual object GetMemory(DialogContext dc);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope/<LoadAsync>d__5")]
public virtual Task LoadAsync(DialogContext dialogContext, bool force, CancellationToken cancellationToken);
    public virtual void SetMemory(DialogContext dc, object memory);
    protected static ImmutableDictionary`2<string, object> LoadSettings(IConfiguration configuration);
    private static Node ConvertFlattenSettingToNode(List`1<KeyValuePair`2<string, string>> kvs);
    private static object ConvertNodeToObject(Node node);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(DialogContext dialogContext, bool force, CancellationToken cancellationToken);
}
public class Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ThisMemoryScope : MemoryScope {
    public virtual object GetMemory(DialogContext dc);
    public virtual void SetMemory(DialogContext dc, object memory);
}
public class Microsoft.Bot.Builder.Dialogs.Memory.Scopes.TurnMemoryScope : MemoryScope {
    public virtual object GetMemory(DialogContext dc);
    public virtual void SetMemory(DialogContext dc, object memory);
}
public class Microsoft.Bot.Builder.Dialogs.Memory.Scopes.UserMemoryScope : BotStateMemoryScope`1<UserState> {
}
public class Microsoft.Bot.Builder.Dialogs.NumberPrompt`1 : Prompt`1<T> {
    [CompilerGeneratedAttribute]
private string <DefaultLocale>k__BackingField;
    public string DefaultLocale { get; public set; }
    public NumberPrompt`1(string dialogId, PromptValidator`1<T> validator, string defaultLocale);
    [CompilerGeneratedAttribute]
public string get_DefaultLocale();
    [CompilerGeneratedAttribute]
public void set_DefaultLocale(string value);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.NumberPrompt`1/<OnPromptAsync>d__5")]
protected virtual Task OnPromptAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, bool isRetry, CancellationToken cancellationToken);
    protected virtual Task`1<PromptRecognizerResult`1<T>> OnRecognizeAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, CancellationToken cancellationToken);
    private static List`1<ModelResult> RecognizeNumberWithUnit(string utterance, string culture);
}
public class Microsoft.Bot.Builder.Dialogs.OAuthPrompt : Dialog {
    private static string PersistedOptions;
    private static string PersistedState;
    private static string PersistedExpires;
    private static string PersistedCaller;
    private OAuthPromptSettings _settings;
    private PromptValidator`1<TokenResponse> _validator;
    public OAuthPrompt(string dialogId, OAuthPromptSettings settings, PromptValidator`1<TokenResponse> validator);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.OAuthPrompt/<SendOAuthCardAsync>d__7")]
public static Task SendOAuthCardAsync(OAuthPromptSettings settings, ITurnContext turnContext, IMessageActivity prompt, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.OAuthPrompt/<RecognizeTokenAsync>d__8")]
public static Task`1<PromptRecognizerResult`1<TokenResponse>> RecognizeTokenAsync(OAuthPromptSettings settings, DialogContext dc, CancellationToken cancellationToken);
    public static void SetCallerInfoInDialogState(IDictionary`2<string, object> state, ITurnContext context);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.OAuthPrompt/<BeginDialogAsync>d__10")]
public virtual Task`1<DialogTurnResult> BeginDialogAsync(DialogContext dc, object options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.OAuthPrompt/<ContinueDialogAsync>d__11")]
public virtual Task`1<DialogTurnResult> ContinueDialogAsync(DialogContext dc, CancellationToken cancellationToken);
    public Task`1<TokenResponse> GetUserTokenAsync(ITurnContext turnContext, CancellationToken cancellationToken);
    public Task SignOutUserAsync(ITurnContext turnContext, CancellationToken cancellationToken);
    private static CallerInfo CreateCallerInfo(ITurnContext turnContext);
    private static bool IsTokenResponseEvent(ITurnContext turnContext);
    private static bool IsTeamsVerificationInvoke(ITurnContext turnContext);
    private static bool IsTokenExchangeRequestInvoke(ITurnContext turnContext);
    private static bool ChannelSupportsOAuthCard(string channelId);
    private static bool ChannelRequiresSignInLink(string channelId);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.OAuthPrompt/<SendInvokeResponseAsync>d__20")]
private static Task SendInvokeResponseAsync(ITurnContext turnContext, HttpStatusCode statusCode, object body, CancellationToken cancellationToken);
}
public class Microsoft.Bot.Builder.Dialogs.OAuthPromptSettings : object {
    [CompilerGeneratedAttribute]
private AppCredentials <OAuthAppCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConnectionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EndOnInvalidMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ShowSignInLink>k__BackingField;
    public AppCredentials OAuthAppCredentials { get; public set; }
    public string ConnectionName { get; public set; }
    public string Title { get; public set; }
    public string Text { get; public set; }
    public Nullable`1<int> Timeout { get; public set; }
    public bool EndOnInvalidMessage { get; public set; }
    public Nullable`1<bool> ShowSignInLink { get; public set; }
    [CompilerGeneratedAttribute]
public AppCredentials get_OAuthAppCredentials();
    [CompilerGeneratedAttribute]
public void set_OAuthAppCredentials(AppCredentials value);
    [CompilerGeneratedAttribute]
public string get_ConnectionName();
    [CompilerGeneratedAttribute]
public void set_ConnectionName(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_EndOnInvalidMessage();
    [CompilerGeneratedAttribute]
public void set_EndOnInvalidMessage(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ShowSignInLink();
    [CompilerGeneratedAttribute]
public void set_ShowSignInLink(Nullable`1<bool> value);
}
public static class Microsoft.Bot.Builder.Dialogs.ObjectPath : object {
    private static JsonSerializerSettings _expressionCaseSettings;
    private static ObjectPath();
    public static bool HasValue(object obj, string path);
    public static T GetPathValue(object obj, string path);
    public static T GetPathValue(object obj, string path, T defaultValue);
    public static bool TryGetPathValue(object obj, string path, T& value);
    public static void SetPathValue(object obj, string path, object value, bool json);
    public static void RemovePathValue(object obj, string path);
    public static void ForEachProperty(object obj, Action`2<string, object> action);
    [IteratorStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.ObjectPath/<GetProperties>d__8")]
public static IEnumerable`1<string> GetProperties(object obj);
    public static bool ContainsProperty(object obj, string name);
    public static T Clone(T obj);
    public static T Merge(T startObject, T overlayObject);
    public static T Assign(object startObject, object overlayObject);
    public static object Assign(object startObject, object overlayObject, Type type);
    public static T MapValueTo(object val);
    public static bool TryResolvePath(object obj, string propertyPath, List`1& segments, bool eval);
    private static bool ResolveSegment(Object& current, object segment);
    private static bool ResolveSegments(object current, List`1<object> segments, Object& result);
    private static object GetObjectProperty(object obj, string property);
    private static void SetObjectSegment(object obj, object segment, object value, bool json);
    private static object GetNormalizedValue(object value, bool json);
    [CompilerGeneratedAttribute]
internal static void <TryResolvePath>g__Emit|15_0(<>c__DisplayClass15_0& , <>c__DisplayClass15_1& );
}
[ObsoleteAttribute("This class only exists for backward compatibility of legacy `ComponentRegistrations`. Use `BotComponent` for new components.")]
public class Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1 : ComponentRegistration {
    private IConfiguration _configuration;
    [CompilerGeneratedAttribute]
private TComponent <BotComponent>k__BackingField;
    protected TComponent BotComponent { get; private set; }
    public ComponentRegistrationBridge`1(TComponent botComponent, IConfiguration configuration);
    [CompilerGeneratedAttribute]
protected TComponent get_BotComponent();
    [CompilerGeneratedAttribute]
private void set_BotComponent(TComponent value);
    public sealed virtual IEnumerable`1<MemoryScope> GetMemoryScopes();
    public sealed virtual IEnumerable`1<IPathResolver> GetPathResolvers();
    protected IEnumerable`1<TRegistration> GetFromComponent(IServiceCollection services);
}
public class Microsoft.Bot.Builder.Dialogs.PersistedState : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <UserState>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <ConversationState>k__BackingField;
    public IDictionary`2<string, object> UserState { get; public set; }
    public IDictionary`2<string, object> ConversationState { get; public set; }
    public PersistedState(PersistedStateKeys keys, IDictionary`2<string, object> data);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_UserState();
    [CompilerGeneratedAttribute]
public void set_UserState(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_ConversationState();
    [CompilerGeneratedAttribute]
public void set_ConversationState(IDictionary`2<string, object> value);
}
public class Microsoft.Bot.Builder.Dialogs.PersistedStateKeys : object {
    [CompilerGeneratedAttribute]
private string <UserState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConversationState>k__BackingField;
    public string UserState { get; public set; }
    public string ConversationState { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserState();
    [CompilerGeneratedAttribute]
public void set_UserState(string value);
    [CompilerGeneratedAttribute]
public string get_ConversationState();
    [CompilerGeneratedAttribute]
public void set_ConversationState(string value);
    [IteratorStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.PersistedStateKeys/<GetEnumerator>d__8")]
public sealed virtual IEnumerator`1<string> GetEnumerator();
    [IteratorStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.PersistedStateKeys/<System-Collections-IEnumerable-GetEnumerator>d__9")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public abstract class Microsoft.Bot.Builder.Dialogs.Prompt`1 : Dialog {
    internal static string AttemptCountKey;
    private static string PersistedOptions;
    private static string PersistedState;
    private PromptValidator`1<T> _validator;
    public Prompt`1(string dialogId, PromptValidator`1<T> validator);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Prompt`1/<BeginDialogAsync>d__5")]
public virtual Task`1<DialogTurnResult> BeginDialogAsync(DialogContext dc, object options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Prompt`1/<ContinueDialogAsync>d__6")]
public virtual Task`1<DialogTurnResult> ContinueDialogAsync(DialogContext dc, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Prompt`1/<ResumeDialogAsync>d__7")]
public virtual Task`1<DialogTurnResult> ResumeDialogAsync(DialogContext dc, DialogReason reason, object result, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Prompt`1/<RepromptDialogAsync>d__8")]
public virtual Task RepromptDialogAsync(ITurnContext turnContext, DialogInstance instance, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Prompt`1/<OnPreBubbleEventAsync>d__9")]
protected virtual Task`1<bool> OnPreBubbleEventAsync(DialogContext dc, DialogEvent e, CancellationToken cancellationToken);
    protected abstract virtual Task OnPromptAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, bool isRetry, CancellationToken cancellationToken);
    protected abstract virtual Task`1<PromptRecognizerResult`1<T>> OnRecognizeAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, CancellationToken cancellationToken);
    protected virtual IMessageActivity AppendChoices(IMessageActivity prompt, string channelId, IList`1<Choice> choices, ListStyle style, ChoiceFactoryOptions options, CancellationToken cancellationToken);
    protected virtual IMessageActivity AppendChoices(IMessageActivity prompt, string channelId, IList`1<Choice> choices, ListStyle style, ChoiceFactoryOptions options, string conversationType, IList`1<string> toList, CancellationToken cancellationToken);
}
public class Microsoft.Bot.Builder.Dialogs.PromptOptions : object {
    [CompilerGeneratedAttribute]
private Activity <Prompt>k__BackingField;
    [CompilerGeneratedAttribute]
private Activity <RetryPrompt>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Choice> <Choices>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ListStyle> <Style>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Validations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RecognizeLanguage>k__BackingField;
    public Activity Prompt { get; public set; }
    public Activity RetryPrompt { get; public set; }
    public IList`1<Choice> Choices { get; public set; }
    public Nullable`1<ListStyle> Style { get; public set; }
    public object Validations { get; public set; }
    public string RecognizeLanguage { get; public set; }
    [CompilerGeneratedAttribute]
public Activity get_Prompt();
    [CompilerGeneratedAttribute]
public void set_Prompt(Activity value);
    [CompilerGeneratedAttribute]
public Activity get_RetryPrompt();
    [CompilerGeneratedAttribute]
public void set_RetryPrompt(Activity value);
    [CompilerGeneratedAttribute]
public IList`1<Choice> get_Choices();
    [CompilerGeneratedAttribute]
public void set_Choices(IList`1<Choice> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ListStyle> get_Style();
    [CompilerGeneratedAttribute]
public void set_Style(Nullable`1<ListStyle> value);
    [CompilerGeneratedAttribute]
public object get_Validations();
    [CompilerGeneratedAttribute]
public void set_Validations(object value);
    [CompilerGeneratedAttribute]
public string get_RecognizeLanguage();
    [CompilerGeneratedAttribute]
public void set_RecognizeLanguage(string value);
}
public class Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult`1 : object {
    [CompilerGeneratedAttribute]
private bool <Succeeded>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowInterruption>k__BackingField;
    public bool Succeeded { get; public set; }
    public T Value { get; public set; }
    public bool AllowInterruption { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Succeeded();
    [CompilerGeneratedAttribute]
public void set_Succeeded(bool value);
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(T value);
    [CompilerGeneratedAttribute]
public bool get_AllowInterruption();
    [CompilerGeneratedAttribute]
public void set_AllowInterruption(bool value);
}
public class Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModel : object {
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Separator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InlineOr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InlineOrMore>k__BackingField;
    [CompilerGeneratedAttribute]
private string <YesInLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NoInLanguage>k__BackingField;
    public string Locale { get; public set; }
    public string Separator { get; public set; }
    public string InlineOr { get; public set; }
    public string InlineOrMore { get; public set; }
    public string YesInLanguage { get; public set; }
    public string NoInLanguage { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Locale();
    [CompilerGeneratedAttribute]
public void set_Locale(string value);
    [CompilerGeneratedAttribute]
public string get_Separator();
    [CompilerGeneratedAttribute]
public void set_Separator(string value);
    [CompilerGeneratedAttribute]
public string get_InlineOr();
    [CompilerGeneratedAttribute]
public void set_InlineOr(string value);
    [CompilerGeneratedAttribute]
public string get_InlineOrMore();
    [CompilerGeneratedAttribute]
public void set_InlineOrMore(string value);
    [CompilerGeneratedAttribute]
public string get_YesInLanguage();
    [CompilerGeneratedAttribute]
public void set_YesInLanguage(string value);
    [CompilerGeneratedAttribute]
public string get_NoInLanguage();
    [CompilerGeneratedAttribute]
public void set_NoInLanguage(string value);
}
public static class Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels : object {
    private static String[] SupportedLocales;
    public static PromptCultureModel Bulgarian { get; }
    public static PromptCultureModel Chinese { get; }
    public static PromptCultureModel Dutch { get; }
    public static PromptCultureModel English { get; }
    public static PromptCultureModel French { get; }
    public static PromptCultureModel German { get; }
    public static PromptCultureModel Hindi { get; }
    public static PromptCultureModel Italian { get; }
    public static PromptCultureModel Japanese { get; }
    public static PromptCultureModel Korean { get; }
    public static PromptCultureModel Portuguese { get; }
    public static PromptCultureModel Spanish { get; }
    public static PromptCultureModel Swedish { get; }
    public static PromptCultureModel Turkish { get; }
    private static PromptCultureModels();
    public static PromptCultureModel get_Bulgarian();
    public static PromptCultureModel get_Chinese();
    public static PromptCultureModel get_Dutch();
    public static PromptCultureModel get_English();
    public static PromptCultureModel get_French();
    public static PromptCultureModel get_German();
    public static PromptCultureModel get_Hindi();
    public static PromptCultureModel get_Italian();
    public static PromptCultureModel get_Japanese();
    public static PromptCultureModel get_Korean();
    public static PromptCultureModel get_Portuguese();
    public static PromptCultureModel get_Spanish();
    public static PromptCultureModel get_Swedish();
    public static PromptCultureModel get_Turkish();
    public static string MapToNearestLanguage(string cultureCode);
    public static PromptCultureModel[] GetSupportedCultures();
}
public class Microsoft.Bot.Builder.Dialogs.PromptValidator`1 : MulticastDelegate {
    public PromptValidator`1(object object, IntPtr method);
    public virtual Task`1<bool> Invoke(PromptValidatorContext`1<T> promptContext, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginInvoke(PromptValidatorContext`1<T> promptContext, CancellationToken cancellationToken, AsyncCallback callback, object object);
    public virtual Task`1<bool> EndInvoke(IAsyncResult result);
}
public class Microsoft.Bot.Builder.Dialogs.PromptValidatorContext`1 : object {
    [CompilerGeneratedAttribute]
private ITurnContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private PromptRecognizerResult`1<T> <Recognized>k__BackingField;
    [CompilerGeneratedAttribute]
private PromptOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <State>k__BackingField;
    public ITurnContext Context { get; }
    public PromptRecognizerResult`1<T> Recognized { get; }
    public PromptOptions Options { get; }
    public IDictionary`2<string, object> State { get; }
    public int AttemptCount { get; }
    internal PromptValidatorContext`1(ITurnContext turnContext, PromptRecognizerResult`1<T> recognized, IDictionary`2<string, object> state, PromptOptions options);
    [CompilerGeneratedAttribute]
public ITurnContext get_Context();
    [CompilerGeneratedAttribute]
public PromptRecognizerResult`1<T> get_Recognized();
    [CompilerGeneratedAttribute]
public PromptOptions get_Options();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_State();
    public int get_AttemptCount();
}
public class Microsoft.Bot.Builder.Dialogs.Recognizer : object {
    public static string ChooseIntent;
    public static string NoneIntent;
    private JsonSerializerSettings _settings;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IBotTelemetryClient <TelemetryClient>k__BackingField;
    [JsonPropertyAttribute("id")]
public string Id { get; public set; }
    [JsonIgnoreAttribute]
public IBotTelemetryClient TelemetryClient { get; public set; }
    public Recognizer(string callerPath, int callerLine);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public IBotTelemetryClient get_TelemetryClient();
    [CompilerGeneratedAttribute]
public void set_TelemetryClient(IBotTelemetryClient value);
    public virtual Task`1<RecognizerResult> RecognizeAsync(DialogContext dialogContext, Activity activity, CancellationToken cancellationToken, Dictionary`2<string, string> telemetryProperties, Dictionary`2<string, double> telemetryMetrics);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.Recognizer/<RecognizeAsync>d__13`1")]
public virtual Task`1<T> RecognizeAsync(DialogContext dialogContext, Activity activity, CancellationToken cancellationToken, Dictionary`2<string, string> telemetryProperties, Dictionary`2<string, double> telemetryMetrics);
    protected static RecognizerResult CreateChooseIntentResult(Dictionary`2<string, RecognizerResult> recognizerResults);
    protected virtual Dictionary`2<string, string> FillRecognizerResultTelemetryProperties(RecognizerResult recognizerResult, Dictionary`2<string, string> telemetryProperties, DialogContext dialogContext);
    protected void TrackRecognizerResult(DialogContext dialogContext, string eventName, Dictionary`2<string, string> telemetryProperties, Dictionary`2<string, double> telemetryMetrics);
}
public class Microsoft.Bot.Builder.Dialogs.ScopePath : object {
    public static string User;
    public static string Conversation;
    public static string Dialog;
    public static string DialogClass;
    public static string DialogContext;
    public static string This;
    public static string Class;
    public static string Settings;
    public static string Turn;
    [ObsoleteAttribute("This property is deprecated, use ScopePath.User instead.")]
public static string USER;
    [ObsoleteAttribute("This property is deprecated, use ScopePath.Conversation instead.")]
public static string CONVERSATION;
    [ObsoleteAttribute("This property is deprecated, use ScopePath.Dialog instead.")]
public static string DIALOG;
    [ObsoleteAttribute("This property is deprecated, use ScopePath.DialogClass instead.")]
public static string DIALOGCLASS;
    [ObsoleteAttribute("This property is deprecated, use ScopePath.This instead.")]
public static string THIS;
    [ObsoleteAttribute("This property is deprecated, use ScopePath.Class instead.")]
public static string CLASS;
    [ObsoleteAttribute("This property is deprecated, use ScopePath.Settings instead.")]
public static string SETTINGS;
    [ObsoleteAttribute("This property is deprecated, use ScopePath.Turn instead.")]
public static string TURN;
}
public class Microsoft.Bot.Builder.Dialogs.SkillDialog : Dialog {
    private static string DeliverModeStateKey;
    private static string SkillConversationIdStateKey;
    [CompilerGeneratedAttribute]
private SkillDialogOptions <DialogOptions>k__BackingField;
    protected SkillDialogOptions DialogOptions { get; }
    public SkillDialog(SkillDialogOptions dialogOptions, string dialogId);
    [CompilerGeneratedAttribute]
protected SkillDialogOptions get_DialogOptions();
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.SkillDialog/<BeginDialogAsync>d__6")]
public virtual Task`1<DialogTurnResult> BeginDialogAsync(DialogContext dc, object options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.SkillDialog/<ContinueDialogAsync>d__7")]
public virtual Task`1<DialogTurnResult> ContinueDialogAsync(DialogContext dc, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.SkillDialog/<RepromptDialogAsync>d__8")]
public virtual Task RepromptDialogAsync(ITurnContext turnContext, DialogInstance instance, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.SkillDialog/<ResumeDialogAsync>d__9")]
public virtual Task`1<DialogTurnResult> ResumeDialogAsync(DialogContext dc, DialogReason reason, object result, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.SkillDialog/<EndDialogAsync>d__10")]
public virtual Task EndDialogAsync(ITurnContext turnContext, DialogInstance instance, DialogReason reason, CancellationToken cancellationToken);
    protected virtual bool OnValidateActivity(Activity activity);
    private static BeginSkillDialogOptions ValidateBeginDialogArgs(object options);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.SkillDialog/<SendToSkillAsync>d__13")]
private Task`1<Activity> SendToSkillAsync(ITurnContext context, Activity activity, string skillConversationId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.SkillDialog/<InterceptOAuthCardsAsync>d__14")]
private Task`1<bool> InterceptOAuthCardsAsync(ITurnContext turnContext, Activity activity, string connectionName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.SkillDialog/<SendTokenExchangeInvokeToSkillAsync>d__15")]
private Task`1<bool> SendTokenExchangeInvokeToSkillAsync(Activity incomingActivity, string id, string connectionName, string token, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.SkillDialog/<CreateSkillConversationIdAsync>d__16")]
private Task`1<string> CreateSkillConversationIdAsync(ITurnContext context, Activity activity, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(ITurnContext turnContext, DialogInstance instance, DialogReason reason, CancellationToken cancellationToken);
}
public class Microsoft.Bot.Builder.Dialogs.SkillDialogOptions : object {
    [CompilerGeneratedAttribute]
private string <BotId>k__BackingField;
    [CompilerGeneratedAttribute]
private BotFrameworkClient <SkillClient>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <SkillHostEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private BotFrameworkSkill <Skill>k__BackingField;
    [CompilerGeneratedAttribute]
private SkillConversationIdFactoryBase <ConversationIdFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private ConversationState <ConversationState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConnectionName>k__BackingField;
    [JsonPropertyAttribute("botId")]
public string BotId { get; public set; }
    [JsonIgnoreAttribute]
public BotFrameworkClient SkillClient { get; public set; }
    [JsonPropertyAttribute("skillHostEndpoint")]
public Uri SkillHostEndpoint { get; public set; }
    [JsonPropertyAttribute("skill")]
public BotFrameworkSkill Skill { get; public set; }
    [JsonIgnoreAttribute]
public SkillConversationIdFactoryBase ConversationIdFactory { get; public set; }
    [JsonIgnoreAttribute]
public ConversationState ConversationState { get; public set; }
    [JsonPropertyAttribute("connectionName")]
public string ConnectionName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BotId();
    [CompilerGeneratedAttribute]
public void set_BotId(string value);
    [CompilerGeneratedAttribute]
public BotFrameworkClient get_SkillClient();
    [CompilerGeneratedAttribute]
public void set_SkillClient(BotFrameworkClient value);
    [CompilerGeneratedAttribute]
public Uri get_SkillHostEndpoint();
    [CompilerGeneratedAttribute]
public void set_SkillHostEndpoint(Uri value);
    [CompilerGeneratedAttribute]
public BotFrameworkSkill get_Skill();
    [CompilerGeneratedAttribute]
public void set_Skill(BotFrameworkSkill value);
    [CompilerGeneratedAttribute]
public SkillConversationIdFactoryBase get_ConversationIdFactory();
    [CompilerGeneratedAttribute]
public void set_ConversationIdFactory(SkillConversationIdFactoryBase value);
    [CompilerGeneratedAttribute]
public ConversationState get_ConversationState();
    [CompilerGeneratedAttribute]
public void set_ConversationState(ConversationState value);
    [CompilerGeneratedAttribute]
public string get_ConnectionName();
    [CompilerGeneratedAttribute]
public void set_ConnectionName(string value);
}
public class Microsoft.Bot.Builder.Dialogs.TextPrompt : Prompt`1<string> {
    public TextPrompt(string dialogId, PromptValidator`1<string> validator);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.TextPrompt/<OnPromptAsync>d__1")]
protected virtual Task OnPromptAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, bool isRetry, CancellationToken cancellationToken);
    protected virtual Task`1<PromptRecognizerResult`1<string>> OnRecognizeAsync(ITurnContext turnContext, IDictionary`2<string, object> state, PromptOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.TextPrompt/<OnPreBubbleEventAsync>d__3")]
protected virtual Task`1<bool> OnPreBubbleEventAsync(DialogContext dc, DialogEvent e, CancellationToken cancellationToken);
}
public class Microsoft.Bot.Builder.Dialogs.ThisPath : object {
    public static string Options;
    [ObsoleteAttribute("This property is deprecated, use ThisPath.Options instead.")]
public static string OPTIONS;
}
public class Microsoft.Bot.Builder.Dialogs.TurnPath : object {
    public static string LastResult;
    public static string Activity;
    public static string Recognized;
    public static string TopIntent;
    public static string TopScore;
    public static string Text;
    public static string UnrecognizedText;
    public static string RecognizedEntities;
    public static string Interrupted;
    public static string DialogEvent;
    public static string RepeatedIds;
    public static string ActivityProcessed;
    [ObsoleteAttribute("This property is deprecated, use TurnPath.LastResult instead.")]
public static string LASTRESULT;
    [ObsoleteAttribute("This property is deprecated, use TurnPath.Activity instead.")]
public static string ACTIVITY;
    [ObsoleteAttribute("This property is deprecated, use TurnPath.Recognized instead.")]
public static string RECOGNIZED;
    [ObsoleteAttribute("This property is deprecated, use TurnPath.TopIntent instead.")]
public static string TOPINTENT;
    [ObsoleteAttribute("This property is deprecated, use TurnPath.TopScore instead.")]
public static string TOPSCORE;
    [ObsoleteAttribute("This property is deprecated, use TurnPath.Text instead.")]
public static string TEXT;
    [ObsoleteAttribute("This property is deprecated, use TurnPath.UnrecognizedText instead.")]
public static string UNRECOGNIZEDTEXT;
    [ObsoleteAttribute("This property is deprecated, use TurnPath.RecognizedEntities instead.")]
public static string RECOGNIZEDENTITIES;
    [ObsoleteAttribute("This property is deprecated, use TurnPath.Interrupted instead.")]
public static string INTERRUPTED;
    [ObsoleteAttribute("This property is deprecated, use TurnPath.DialogEvent instead.")]
public static string DIALOGEVENT;
    [ObsoleteAttribute("This property is deprecated, use TurnPath.RepeatedIds instead.")]
public static string REPEATEDIDS;
    [ObsoleteAttribute("This property is deprecated, use TurnPath.ActivityProcessed instead.")]
public static string ACTIVITYPROCESSED;
    public static string GetPropertyName(string property);
}
internal static class Microsoft.Bot.Builder.Dialogs.UserTokenAccess : object {
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.UserTokenAccess/<GetUserTokenAsync>d__0")]
public static Task`1<TokenResponse> GetUserTokenAsync(ITurnContext turnContext, OAuthPromptSettings settings, string magicCode, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.UserTokenAccess/<GetSignInResourceAsync>d__1")]
public static Task`1<SignInResource> GetSignInResourceAsync(ITurnContext turnContext, OAuthPromptSettings settings, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.UserTokenAccess/<SignOutUserAsync>d__2")]
public static Task SignOutUserAsync(ITurnContext turnContext, OAuthPromptSettings settings, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.UserTokenAccess/<ExchangeTokenAsync>d__3")]
public static Task`1<TokenResponse> ExchangeTokenAsync(ITurnContext turnContext, OAuthPromptSettings settings, TokenExchangeRequest tokenExchangeRequest, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.UserTokenAccess/<CreateConnectorClientAsync>d__4")]
public static Task`1<IConnectorClient> CreateConnectorClientAsync(ITurnContext turnContext, string serviceUrl, ClaimsIdentity claimsIdentity, string audience, CancellationToken cancellationToken);
}
public class Microsoft.Bot.Builder.Dialogs.WaterfallDialog : Dialog {
    private static string PersistedOptions;
    private static string StepIndex;
    private static string PersistedValues;
    private static string PersistedInstanceId;
    private List`1<WaterfallStep> _steps;
    public WaterfallDialog(string dialogId, IEnumerable`1<WaterfallStep> actions);
    public virtual string GetVersion();
    public WaterfallDialog AddStep(WaterfallStep step);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.WaterfallDialog/<BeginDialogAsync>d__8")]
public virtual Task`1<DialogTurnResult> BeginDialogAsync(DialogContext dc, object options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.WaterfallDialog/<ContinueDialogAsync>d__9")]
public virtual Task`1<DialogTurnResult> ContinueDialogAsync(DialogContext dc, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.WaterfallDialog/<ResumeDialogAsync>d__10")]
public virtual Task`1<DialogTurnResult> ResumeDialogAsync(DialogContext dc, DialogReason reason, object result, CancellationToken cancellationToken);
    public virtual Task EndDialogAsync(ITurnContext turnContext, DialogInstance instance, DialogReason reason, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.WaterfallDialog/<OnStepAsync>d__12")]
protected virtual Task`1<DialogTurnResult> OnStepAsync(WaterfallStepContext stepContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.WaterfallDialog/<RunStepAsync>d__13")]
protected Task`1<DialogTurnResult> RunStepAsync(DialogContext dc, int index, DialogReason reason, object result, CancellationToken cancellationToken);
    private string WaterfallStepName(int index);
}
public class Microsoft.Bot.Builder.Dialogs.WaterfallStep : MulticastDelegate {
    public WaterfallStep(object object, IntPtr method);
    public virtual Task`1<DialogTurnResult> Invoke(WaterfallStepContext stepContext, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginInvoke(WaterfallStepContext stepContext, CancellationToken cancellationToken, AsyncCallback callback, object object);
    public virtual Task`1<DialogTurnResult> EndInvoke(IAsyncResult result);
}
public class Microsoft.Bot.Builder.Dialogs.WaterfallStepContext : DialogContext {
    private WaterfallDialog _parentWaterfall;
    private bool _nextCalled;
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private DialogReason <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Values>k__BackingField;
    public int Index { get; }
    public object Options { get; }
    public DialogReason Reason { get; }
    public object Result { get; }
    public IDictionary`2<string, object> Values { get; }
    internal WaterfallStepContext(WaterfallDialog parentWaterfall, DialogContext dc, object options, IDictionary`2<string, object> values, int index, DialogReason reason, object result);
    [CompilerGeneratedAttribute]
public int get_Index();
    [CompilerGeneratedAttribute]
public object get_Options();
    [CompilerGeneratedAttribute]
public DialogReason get_Reason();
    [CompilerGeneratedAttribute]
public object get_Result();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Values();
    [AsyncStateMachineAttribute("Microsoft.Bot.Builder.Dialogs.WaterfallStepContext/<NextAsync>d__18")]
public Task`1<DialogTurnResult> NextAsync(object result, CancellationToken cancellationToken);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
