public class Microsoft.Xrm.Tooling.CrmConnectControl.ConnectErrorEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Ex>k__BackingField;
    public string ErrorMessage { get; public set; }
    public Exception Ex { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public Exception get_Ex();
    [CompilerGeneratedAttribute]
public void set_Ex(Exception value);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.ConnectStatusEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private bool <ConnectSucceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    public bool ConnectSucceeded { get; private set; }
    public string Status { get; public set; }
    public ConnectStatusEventArgs(bool bConnected);
    [CompilerGeneratedAttribute]
public bool get_ConnectSucceeded();
    [CompilerGeneratedAttribute]
private void set_ConnectSucceeded(bool value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.CrmConnectionManager : object {
    private BackgroundWorker bgWorker;
    private Dictionary`2<Dynamics_ConfigFileServerKeys, object> ServerConfigKeys;
    [CompilerGeneratedAttribute]
private CrmServiceClient <CrmSvc>k__BackingField;
    private string httpsProtocal;
    private string httpProtocal;
    private LoginTracer tracer;
    private CrmDeploymentType deploymentType;
    private bool IsSSLReq;
    private bool IsOAuth;
    private bool UseDefaultCreds;
    private bool IsAdvancedCheckEnabled;
    private UserIdentifier user;
    private string tokenCachePath;
    private string clientId;
    private Uri redirectUri;
    private PromptBehavior promptBehavior;
    private Uri uUserHomeRealm;
    private NetworkCredential userCred;
    private ClientCredentials userClientCred;
    private ClientCredentials DeviceCredentials;
    private CrmOrgList orgListView;
    private CrmOnlineDiscoveryServers _CrmOnlineDiscoveryServerList;
    private ClaimsHomeRealmOptions _HomeRealmServersList;
    private string _profileName;
    private bool lastErrorSent;
    private string cachedAuthorityName;
    private string cachedUserId;
    private string crmDeploymentType;
    private bool isSkipDiscovery;
    private string directConnectUri;
    private static string _globalDiscoBaseWebAPIUriFormat;
    private static string _globlaDiscoVersion;
    [CompilerGeneratedAttribute]
private EventHandler`1<ServerConnectStatusEventArgs> ServerConnectionStatusUpdate;
    [CompilerGeneratedAttribute]
private EventHandler`1<ServerConnectStatusEventArgs> ConnectionCheckComplete;
    [CompilerGeneratedAttribute]
private UserControl <ParentControl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConnectedOrgFriendlyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConnectedOrgUniqueName>k__BackingField;
    [CompilerGeneratedAttribute]
private EndpointCollection <ConnectedOrgPublishedEndpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ConnectedOrgId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseUserLocalDirectoryForConfigStore>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostApplicatioNameOveride>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForceFirstOAuthPrompt>k__BackingField;
    private bool disposedValue;
    public CrmServiceClient CrmSvc { get; public set; }
    public CrmOnlineDiscoveryServers CrmOnlineDiscoveryServerList { get; public set; }
    public ClaimsHomeRealmOptions HomeRealmServersList { get; public set; }
    public UserIdentifier UserId { get; public set; }
    public string ClientId { get; public set; }
    public Uri RedirectUri { get; public set; }
    public string TokenCachePath { get; private set; }
    public CrmOrgList CrmOrgsFoundForUser { get; }
    public UserControl ParentControl { get; public set; }
    public string ConnectedOrgFriendlyName { get; private set; }
    public string ConnectedOrgUniqueName { get; private set; }
    public EndpointCollection ConnectedOrgPublishedEndpoints { get; private set; }
    public Guid ConnectedOrgId { get; private set; }
    public bool UseUserLocalDirectoryForConfigStore { get; public set; }
    public string HostApplicatioNameOveride { get; public set; }
    internal string LastcrmDeploymentType { get; internal set; }
    public string ProfileName { get; public set; }
    public string LastError { get; }
    public Exception LastException { get; }
    public bool ForceFirstOAuthPrompt { get; public set; }
    private string GlobalDiscoveryAllInstancesUri { get; }
    private string GlobalDiscoveryInstanceUriFormat { get; }
    private static CrmConnectionManager();
    [CompilerGeneratedAttribute]
public CrmServiceClient get_CrmSvc();
    [CompilerGeneratedAttribute]
public void set_CrmSvc(CrmServiceClient value);
    [CompilerGeneratedAttribute]
public void add_ServerConnectionStatusUpdate(EventHandler`1<ServerConnectStatusEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ServerConnectionStatusUpdate(EventHandler`1<ServerConnectStatusEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_ConnectionCheckComplete(EventHandler`1<ServerConnectStatusEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ConnectionCheckComplete(EventHandler`1<ServerConnectStatusEventArgs> value);
    public CrmOnlineDiscoveryServers get_CrmOnlineDiscoveryServerList();
    public void set_CrmOnlineDiscoveryServerList(CrmOnlineDiscoveryServers value);
    public ClaimsHomeRealmOptions get_HomeRealmServersList();
    public void set_HomeRealmServersList(ClaimsHomeRealmOptions value);
    public UserIdentifier get_UserId();
    public void set_UserId(UserIdentifier value);
    public string get_ClientId();
    public void set_ClientId(string value);
    public Uri get_RedirectUri();
    public void set_RedirectUri(Uri value);
    public string get_TokenCachePath();
    private void set_TokenCachePath(string value);
    public CrmOrgList get_CrmOrgsFoundForUser();
    [CompilerGeneratedAttribute]
public UserControl get_ParentControl();
    [CompilerGeneratedAttribute]
public void set_ParentControl(UserControl value);
    [CompilerGeneratedAttribute]
public string get_ConnectedOrgFriendlyName();
    [CompilerGeneratedAttribute]
private void set_ConnectedOrgFriendlyName(string value);
    [CompilerGeneratedAttribute]
public string get_ConnectedOrgUniqueName();
    [CompilerGeneratedAttribute]
private void set_ConnectedOrgUniqueName(string value);
    [CompilerGeneratedAttribute]
public EndpointCollection get_ConnectedOrgPublishedEndpoints();
    [CompilerGeneratedAttribute]
private void set_ConnectedOrgPublishedEndpoints(EndpointCollection value);
    [CompilerGeneratedAttribute]
public Guid get_ConnectedOrgId();
    [CompilerGeneratedAttribute]
private void set_ConnectedOrgId(Guid value);
    [CompilerGeneratedAttribute]
public bool get_UseUserLocalDirectoryForConfigStore();
    [CompilerGeneratedAttribute]
public void set_UseUserLocalDirectoryForConfigStore(bool value);
    [CompilerGeneratedAttribute]
public string get_HostApplicatioNameOveride();
    [CompilerGeneratedAttribute]
public void set_HostApplicatioNameOveride(string value);
    internal string get_LastcrmDeploymentType();
    internal void set_LastcrmDeploymentType(string value);
    public string get_ProfileName();
    public void set_ProfileName(string value);
    public string get_LastError();
    public Exception get_LastException();
    [CompilerGeneratedAttribute]
public bool get_ForceFirstOAuthPrompt();
    [CompilerGeneratedAttribute]
public void set_ForceFirstOAuthPrompt(bool value);
    private string get_GlobalDiscoveryAllInstancesUri();
    private string get_GlobalDiscoveryInstanceUriFormat();
    protected virtual override void Finalize();
    public void ConnectToServerCheck();
    public void ConnectToServerCheck(CrmOrgByServer selectedOrgToConnectTo);
    public void CancelConnectToServerCheck();
    public bool RequireUserLogin();
    public void SetConfigKeyInformation(Dictionary`2<Dynamics_ConfigFileServerKeys, object> configKeys);
    private void InitBackgroundWorker();
    private void bgWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e);
    private void bgWorker_ProgressChanged(object sender, ProgressChangedEventArgs e);
    private void bgWorker_DoWork(object sender, DoWorkEventArgs e);
    private bool ValidateServerConnection(CrmOrgByServer selectedOrg);
    internal void ResetOAuthIfOSDPOverrideSwitch();
    private void ClearOrgList();
    private bool ValidateUserSpecifiedData();
    private void AddOrgToOrgList(OrganizationDetail organizationDetail, string discoveryServer, Uri discoveryServerUri);
    private void AddOrgToOrgList(OrganizationDetailCollection organizationDetailList, string discoveryServer, Uri discoveryServerUri);
    private void FindCrmOnlineDiscoveryServer(ClientCredentials liveCreds);
    private void QueryOnlineServerList(ObservableCollection`1<CrmOnlineDiscoveryServer> svrs, OrganizationDetailCollection col, ClientCredentials liveCreds, Uri trimToDiscoveryUri, Uri globalDiscoUriToUse);
    private OrganizationDetailCollection QueryOAuthDiscoveryServer(Uri discoServer, ClientCredentials liveCreds, UserIdentifier user, string clientId, Uri redirectUri, PromptBehavior promptBehavior, string tokenCachePath, bool useGlobalDisco);
    private OrganizationDetailCollection QueryDiscoveryServer(ClientCredentials liveCreds, Uri discoServer);
    private void GenerateDeviceCreds();
    private bool ConnectAndInitCrmOrgService(CrmOrgByServer orgdata);
    private void PopulateOrgProperties(CrmOrgByServer orgdata);
    private Uri BuildOrgConnectUri(OrganizationDetail orgdata);
    public bool RemoveUserLocalDirectoryConfigFile();
    public Dictionary`2<Dynamics_ConfigFileServerKeys, object> LoadConfigFromFile(bool readLocalFirst);
    private void SetServerConfigKey(Configuration config, Dynamics_ConfigFileServerKeys key, string defaultValue, bool overrideDefaultSet);
    public bool SaveConfigToFile(Dictionary`2<Dynamics_ConfigFileServerKeys, object> configToSave);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.CrmServerLoginControl : UserControl {
    private GridViewColumnHeader _CurSortCol;
    private SortAdorner _CurAdorner;
    private bool _isSortButtonClicked;
    private bool _isConnected;
    private bool bOnlineMultiOrgFix;
    private bool showtitle;
    private double iRow3;
    private double iRow4;
    private double iRow5;
    private double iRow6;
    private double iRow7;
    private double iRow8;
    private double iRow9;
    private double advRow0;
    private double advRow3;
    private bool hideCancel;
    public static string DiscoveryServerName;
    public static string FriendlyName;
    private ServerLoginConfigCtrlMode ControlBehaviorMode;
    private Dictionary`2<Dynamics_ConfigFileServerKeys, object> ServerConfigKeys;
    private CrmConnectionManager storageAccess;
    private Storyboard goOnline;
    private Storyboard goPrem;
    private Storyboard goAdvancedCheck;
    private Storyboard goAdvancedUncheck;
    private bool LastBoardWasOnline;
    private bool LastSelectionWasOAuth;
    private ClaimsHomeRealmOptions AuthTypeListSource;
    private bool bMultiOrg;
    private LoginTracer tracer;
    [CompilerGeneratedAttribute]
private EventHandler`1<ConnectStatusEventArgs> ConnectionStatusEvent;
    [CompilerGeneratedAttribute]
private EventHandler UserCancelClicked;
    [CompilerGeneratedAttribute]
private EventHandler ConnectionCheckBegining;
    [CompilerGeneratedAttribute]
private EventHandler`1<ConnectErrorEventArgs> ConnectErrorEvent;
    internal CrmServerLoginControl UserControl;
    internal Grid LayoutRoot;
    internal Grid MessageGrid;
    internal TextBlock lblCrmOrg;
    internal PendulumDots ipb;
    internal StackPanel stkButtonsMessage;
    internal Button btnConnect;
    internal Button btnCancel;
    internal Grid LoginGrid;
    internal TextBlock lblSignin;
    internal TextBox tbCrmOrg;
    internal TextBlock lblDeplomentType;
    internal RadioButton rbOnPrem;
    internal RadioButton rbOn365;
    internal StackPanel stkAdvanced;
    internal CheckBox cbAdvanced;
    internal TextBlock lblAdvanced;
    internal TextBlock lblServerName;
    internal TextBox tbCrmServerName;
    internal TextBlock lblServicePort;
    internal TextBox tbCrmServerPort;
    internal CheckBox cbUseSSL;
    internal TextBlock lblCrmAuthSource;
    internal ComboBox ddlAuthSource;
    internal StackPanel stkUseDefaultCreds;
    internal CheckBox cbUseDefaultCreds;
    internal GroupBox GbAdvanced;
    internal Grid AdvancedGrid;
    internal TextBlock lblOnLineRegion;
    internal ComboBox ddlCrmOnlineRegions;
    internal TextBlock lblUserName;
    internal TextBox tbUserId;
    internal TextBlock lblPassword;
    internal PasswordBox tbPassword;
    internal TextBlock lblDomainName;
    internal TextBox tbDomain;
    internal StackPanel stkOrg;
    internal CheckBox cbAskforOrg;
    internal TextBlock lblAskForOrg;
    internal StackPanel stkMessage;
    internal Image imgErrResult;
    internal TextBlock tbConnectStatus;
    internal StackPanel stkButtons;
    internal Button btn_Connect;
    internal Button btn_Cancel;
    internal Grid OrgSelectGrid;
    internal TextBlock lblCrmMultOrg;
    internal ListView lvOrgList;
    internal GridViewColumnHeader RegColHeader;
    internal GridViewColumn OrgCol;
    internal GridViewColumnHeader OrgColHeader;
    internal StackPanel stkMessageOrg;
    internal Image imgErrResultOrg;
    internal TextBlock tbConnectStatusOrg;
    internal StackPanel stkButtonsOrg;
    internal Button btnConnectOrg;
    internal Button btnCancelOrg;
    private bool _contentLoaded;
    public bool IsConnected { get; private set; }
    public string GetConnectedOrgName { get; }
    [DescriptionAttribute("Hide Cancel Button")]
[CategoryAttribute("Common Properties")]
public bool HideCancel { get; public set; }
    [DescriptionAttribute("Show Title")]
[CategoryAttribute("Common Properties")]
public bool ShowTitle { get; public set; }
    private static CrmServerLoginControl();
    [CompilerGeneratedAttribute]
public void add_ConnectionStatusEvent(EventHandler`1<ConnectStatusEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ConnectionStatusEvent(EventHandler`1<ConnectStatusEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_UserCancelClicked(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_UserCancelClicked(EventHandler value);
    [CompilerGeneratedAttribute]
public void add_ConnectionCheckBegining(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_ConnectionCheckBegining(EventHandler value);
    [CompilerGeneratedAttribute]
public void add_ConnectErrorEvent(EventHandler`1<ConnectErrorEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ConnectErrorEvent(EventHandler`1<ConnectErrorEventArgs> value);
    public bool get_IsConnected();
    private void set_IsConnected(bool value);
    public string get_GetConnectedOrgName();
    public bool get_HideCancel();
    public void set_HideCancel(bool value);
    public bool get_ShowTitle();
    public void set_ShowTitle(bool value);
    public void SetGlobalStoreAccess(CrmConnectionManager globalStore);
    public void SetControlMode(ServerLoginConfigCtrlMode mode);
    public Visibility IsOrgSelect();
    private void SetInitialDefaultData();
    private void LoadDisplayWithAppSettingsData();
    private void SetCurrentOnLineRegionInfo();
    private void UpdateServerConfigKeysFromUI();
    private void LoadHomeRealmData();
    public void StartConnectCheck();
    private void CancelConnectCheck();
    private void storageAccess_ConnectionCheckComplete(object sender, ServerConnectStatusEventArgs e);
    private void ShowSelectOrgDialog();
    private void Sort_Click(object sender, RoutedEventArgs e);
    private void GridViewColumnHeader_KeyUp(object sender, KeyEventArgs e);
    private void SetSort(GridViewColumnHeader column);
    private void ConnectionCheckComplete(ServerConnectStatusEventArgs e);
    private void storageAccess_ServerConnectionStatusUpdate(object sender, ServerConnectStatusEventArgs e);
    private void HandleError(bool bOrg);
    private void UpdateConnectStatusText(ServerConnectStatusEventArgs e);
    private void linkMsg_MouseLeftButtonUp(object sender, MouseButtonEventArgs e);
    private void linkMsg_KeyDown(object sender, KeyEventArgs e);
    private void CompleteConnectCheck(bool bSuccess);
    private void SetAdvancedGridWidth();
    private bool IsSkipDiscoverySet();
    private void btn_ConnectToServer(object sender, RoutedEventArgs e);
    private void cbUseDefaultCreds_Click(object sender, RoutedEventArgs e);
    private void btn_CancelSave(object sender, RoutedEventArgs e);
    private void UiiServerConnectionCtrl_Loaded(object sender, RoutedEventArgs e);
    private void rbOnlinePrem_Click(object sender, RoutedEventArgs e);
    private void SetAdvancedGroupBoxVisibility();
    private void tbCrmServerPort_KeyDown(object sender, KeyEventArgs e);
    private void btnCancel_Click(object sender, RoutedEventArgs e);
    private void mouseConnectOrg_DoubleClick(object sender, MouseButtonEventArgs e);
    private void btnConnectOrg_Click(object sender, RoutedEventArgs e);
    private void ConnectToSelectedOrg();
    private void btnCancelOrg_Click(object sender, RoutedEventArgs e);
    private void lvOrgList_Loaded(object sender, RoutedEventArgs e);
    private void LoginGrid_Loaded(object sender, RoutedEventArgs e);
    public void GoBackToLogin();
    public void StartCancelSave();
    public void ShowMessageGrid();
    private void cbAdvanced_Checked(object sender, RoutedEventArgs e);
    private void ddlAuthSource_SelectionChanged(object sender, SelectionChangedEventArgs e);
    private void cbUseSSL_Click(object sender, RoutedEventArgs e);
    protected virtual AutomationPeer OnCreateAutomationPeer();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
internal Delegate _CreateDelegate(Type delegateType, string handler);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.CrmServerLoginControlAutomationPeer : UserControlAutomationPeer {
    public CrmServerLoginControlAutomationPeer(CrmServerLoginControl owner);
    protected virtual string GetLocalizedControlTypeCore();
}
public static class Microsoft.Xrm.Tooling.CrmConnectControl.CultureUtils : object {
    [CompilerGeneratedAttribute]
private static CultureInfo <_customUICulture>k__BackingField;
    private static CultureInfo _customUICulture { get; private set; }
    internal static CultureInfo UICulture { get; }
    [CompilerGeneratedAttribute]
private static CultureInfo get__customUICulture();
    [CompilerGeneratedAttribute]
private static void set__customUICulture(CultureInfo value);
    internal static CultureInfo get_UICulture();
    public static void SetDisplayCulture(int languageCode);
    private static bool SatelliteAssemblyExists(CultureInfo culture);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.ErrorWindow : Window {
    internal ErrorWindow Window;
    internal Grid LayoutRoot;
    internal TextBlock IntroductoryText;
    internal StackPanel ContentStackPanel;
    internal TextBlock LabelText;
    internal TextBox ErrorTextBox;
    internal Button OKButton;
    private bool _contentLoaded;
    public ErrorWindow(Exception e);
    public ErrorWindow(Uri uri);
    public ErrorWindow(string message, string details);
    private void OKButton_Click(object sender, RoutedEventArgs e);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.InstanceUrlCapture : Window {
    internal TextBox tbConnectUrl;
    internal StackPanel stkButtons;
    internal Button btn_Save;
    internal Button btn_Cancel;
    private bool _contentLoaded;
    private void btn_Save_Click(object sender, RoutedEventArgs e);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
[GeneratedCodeAttribute("xsd", "4.0.30319.1")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
[XmlRootAttribute]
public class Microsoft.Xrm.Tooling.CrmConnectControl.Model.ClaimsHomeRealmOptions : object {
    private ObservableCollection`1<ClaimsHomeRealmOptionsHomeRealm> itemsField;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    [XmlElementAttribute("HomeRealm")]
public ObservableCollection`1<ClaimsHomeRealmOptionsHomeRealm> Items { get; public set; }
    public ObservableCollection`1<ClaimsHomeRealmOptionsHomeRealm> get_Items();
    public void set_Items(ObservableCollection`1<ClaimsHomeRealmOptionsHomeRealm> value);
    public ClaimsHomeRealmOptionsHomeRealm GetServerByDisplayName(string shortName);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    protected void RaisePropertyChanged(string propertyName);
}
[GeneratedCodeAttribute("xsd", "4.0.30319.1")]
[DebuggerStepThroughAttribute]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute]
public class Microsoft.Xrm.Tooling.CrmConnectControl.Model.ClaimsHomeRealmOptionsHomeRealm : object {
    private string displayNameField;
    private string uriField;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    [XmlAttributeAttribute]
public string DisplayName { get; public set; }
    [XmlAttributeAttribute]
public string Uri { get; public set; }
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public string get_Uri();
    public void set_Uri(string value);
    public virtual string ToString();
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    protected void RaisePropertyChanged(string propertyName);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.Model.CrmOnlineDiscoveryServer : object {
    private string _DisplayName;
    private string _ShortName;
    private Uri _DiscoveryServer;
    private bool _RequiresRegionalDiscovery;
    private Uri _RegionalGlobalDiscovery;
    private string _GeoCode;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    public string DisplayName { get; public set; }
    public string ShortName { get; public set; }
    public Uri DiscoveryServer { get; public set; }
    public bool RequiresRegionalDiscovery { get; public set; }
    public Uri RegionalGlobalDiscoveryServer { get; public set; }
    public string GeoCode { get; public set; }
    public CrmOnlineDiscoveryServer(ServerInfo serverInfo);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public string get_ShortName();
    public void set_ShortName(string value);
    public Uri get_DiscoveryServer();
    public void set_DiscoveryServer(Uri value);
    public bool get_RequiresRegionalDiscovery();
    public void set_RequiresRegionalDiscovery(bool value);
    public Uri get_RegionalGlobalDiscoveryServer();
    public void set_RegionalGlobalDiscoveryServer(Uri value);
    public string get_GeoCode();
    public void set_GeoCode(string value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    private void NotifyPropertyChanged(string info);
    public virtual string ToString();
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.Model.CrmOnlineDiscoveryServers : object {
    private LoginTracer logger;
    private ObservableCollection`1<CrmOnlineDiscoveryServer> _Servers;
    private ObservableCollection`1<CrmOnlineDiscoveryServer> _OSDPServers;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    private bool disposedValue;
    public ObservableCollection`1<CrmOnlineDiscoveryServer> Servers { get; public set; }
    public ObservableCollection`1<CrmOnlineDiscoveryServer> OSDPServers { get; public set; }
    public ObservableCollection`1<CrmOnlineDiscoveryServer> get_Servers();
    public void set_Servers(ObservableCollection`1<CrmOnlineDiscoveryServer> value);
    public ObservableCollection`1<CrmOnlineDiscoveryServer> get_OSDPServers();
    public void set_OSDPServers(ObservableCollection`1<CrmOnlineDiscoveryServer> value);
    public CrmOnlineDiscoveryServer GetServerByOrgUrl(Uri orgUri);
    public CrmOnlineDiscoveryServer GetServerByShortName(string shortName, bool isO365);
    public string GetServerShortNameByDisplayName(string serverDisplayName, bool isO365);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    private void NotifyPropertyChanged(string info);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.Model.CrmOrgByServer : object {
    private OrganizationDetail _OrdDetail;
    private string _DiscoveryServerName;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    public string FriendlyName { get; }
    public string UniqueOrdName { get; }
    public string UrlHostName { get; }
    public OrganizationDetail OrdDetail { get; public set; }
    public string DiscoveryServerName { get; public set; }
    public Uri DiscoveryServer { get; }
    public string get_FriendlyName();
    public string get_UniqueOrdName();
    public string get_UrlHostName();
    public OrganizationDetail get_OrdDetail();
    public void set_OrdDetail(OrganizationDetail value);
    public string get_DiscoveryServerName();
    public void set_DiscoveryServerName(string value);
    public Uri get_DiscoveryServer();
    public virtual string ToString();
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    private void NotifyPropertyChanged(string info);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.Model.CrmOrgList : object {
    private ObservableCollection`1<CrmOrgByServer> _orgsList;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    public ObservableCollection`1<CrmOrgByServer> OrgsList { get; public set; }
    public ObservableCollection`1<CrmOrgByServer> get_OrgsList();
    public void set_OrgsList(ObservableCollection`1<CrmOrgByServer> value);
    public static CrmOrgByServer DeterminOrgDataFromOrgInfo(CrmOrgList orgList, string organizationName);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    private void NotifyPropertyChanged(string info);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.PendulumDots : UserControl {
    private Dictionary`2<int, KeyFrameDetails> keyFrameMap;
    private Dictionary`2<int, KeyFrameDetails> opKeyFrameMap;
    private Storyboard sb;
    private bool isStoryboardRunning;
    public static DependencyProperty DelayProperty;
    public static DependencyProperty DotWidthProperty;
    public static DependencyProperty DotHeightProperty;
    public static DependencyProperty DotRadiusXProperty;
    public static DependencyProperty DotRadiusYProperty;
    public static DependencyProperty DurationAProperty;
    public static DependencyProperty DurationBProperty;
    public static DependencyProperty DurationCProperty;
    public static DependencyProperty KeyFrameAProperty;
    public static DependencyProperty KeyFrameBProperty;
    public static DependencyProperty UnlikeWPProperty;
    public static DependencyProperty ReverseDurationProperty;
    public static DependencyProperty TotalDurationProperty;
    internal Rectangle Dot1;
    internal TranslateTransform TransDot1;
    internal Rectangle Dot2;
    internal TranslateTransform TransDot2;
    internal Rectangle Dot3;
    internal TranslateTransform TransDot3;
    internal Rectangle Dot4;
    internal TranslateTransform TransDot4;
    internal Rectangle Dot5;
    internal TranslateTransform TransDot5;
    private bool _contentLoaded;
    public Duration Delay { get; public set; }
    public double DotWidth { get; public set; }
    public double DotHeight { get; public set; }
    public double DotRadiusX { get; public set; }
    public double DotRadiusY { get; public set; }
    public Duration DurationA { get; public set; }
    public Duration DurationB { get; public set; }
    public Duration DurationC { get; public set; }
    public double KeyFrameA { get; public set; }
    public double KeyFrameB { get; public set; }
    public bool UnlikeWP { get; public set; }
    public Duration ReverseDuration { get; public set; }
    public Duration TotalDuration { get; public set; }
    private static PendulumDots();
    public Duration get_Delay();
    public void set_Delay(Duration value);
    private static void OnDelayChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnDelayChanged(Duration oldDelay, Duration newDelay);
    public double get_DotWidth();
    public void set_DotWidth(double value);
    private static void OnDotWidthChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnDotWidthChanged(double oldDotWidth, double newDotWidth);
    public double get_DotHeight();
    public void set_DotHeight(double value);
    private static void OnDotHeightChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnDotHeightChanged(double oldDotHeight, double newDotHeight);
    public double get_DotRadiusX();
    public void set_DotRadiusX(double value);
    private static void OnDotRadiusXChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnDotRadiusXChanged(double oldDotRadiusX, double newDotRadiusX);
    public double get_DotRadiusY();
    public void set_DotRadiusY(double value);
    private static void OnDotRadiusYChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnDotRadiusYChanged(double oldDotRadiusY, double newDotRadiusY);
    public Duration get_DurationA();
    public void set_DurationA(Duration value);
    private static void OnDurationAChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnDurationAChanged(Duration oldDurationA, Duration newDurationA);
    public Duration get_DurationB();
    public void set_DurationB(Duration value);
    private static void OnDurationBChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnDurationBChanged(Duration oldDurationB, Duration newDurationB);
    public Duration get_DurationC();
    public void set_DurationC(Duration value);
    private static void OnDurationCChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnDurationCChanged(Duration oldDurationC, Duration newDurationC);
    public double get_KeyFrameA();
    public void set_KeyFrameA(double value);
    private static void OnKeyFrameAChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnKeyFrameAChanged(double oldKeyFrameA, double newKeyFrameA);
    public double get_KeyFrameB();
    public void set_KeyFrameB(double value);
    private static void OnKeyFrameBChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnKeyFrameBChanged(double oldKeyFrameB, double newKeyFrameB);
    public bool get_UnlikeWP();
    public void set_UnlikeWP(bool value);
    private static void OnUnlikeWPChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnUnlikeWPChanged(bool oldUnlikeWP, bool newUnlikeWP);
    public Duration get_ReverseDuration();
    public void set_ReverseDuration(Duration value);
    private static void OnReverseDurationChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnReverseDurationChanged(Duration oldReverseDuration, Duration newReverseDuration);
    public Duration get_TotalDuration();
    public void set_TotalDuration(Duration value);
    private static void OnTotalDurationChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    protected virtual void OnTotalDurationChanged(Duration oldTotalDuration, Duration newTotalDuration);
    private void OnLoaded(object sender, RoutedEventArgs e);
    private void OnSizeChanged(object sender, SizeChangedEventArgs e);
    private void OnIsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e);
    private void StartIndeterminateAnimation();
    private void StopIndeterminateAnimation();
    private void RestartStoryboardAnimation();
    private void GetKeyFramesFromStoryboard();
    private void ProcessDoubleAnimationWithKeys(DoubleAnimationUsingKeyFrames dakeys, bool isOpacityAnim);
    private void UpdateKeyFrames();
    private void UpdateKeyFrame(int key, double newValue);
    private void UpdateKeyTimes(int key, Duration newDuration);
    private void UpdateKeyTime(int key, Duration newDuration);
    private void UpdateOpacityKeyTime(int key, Duration newDuration);
    private void UpdateTimelineDelay(Duration newDelay);
    public sealed virtual void Dispose();
    protected virtual override void Finalize();
    protected virtual void Dispose(bool disposing);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.Xrm.Tooling.CrmConnectControl.Properties.Messages : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string CRMCONNECT_ERR_ACCESS { get; }
    internal static string CRMCONNECT_ERR_MULTIORG { get; }
    internal static string CRMCONNECT_ERR_UNEXPECTED_STATUS { get; }
    internal static string CRMCONNECT_LOGIN_FAILED_TO_GENERATE_LIVE_DEVICEFILE { get; }
    internal static string CRMCONNECT_LOGIN_NO_ORGS_FOUND_ONLINE { get; }
    internal static string CRMCONNECT_LOGIN_NO_ORGS_FOUND_PREM { get; }
    internal static string CRMCONNECT_LOGIN_PROCESS_CONNECT_TO_UII { get; }
    internal static string CRMCONNECT_LOGIN_PROCESS_CONNNECTING { get; }
    internal static string CRMCONNECT_LOGIN_PROCESS_GET_ORGS { get; }
    internal static string CRMCONNECT_LOGIN_PROCESS_GET_ORGS_LIVE { get; }
    internal static string CRMCONNECT_LOGIN_PROCESS_INIT_UII_CONNECTION { get; }
    internal static string CRMCONNECT_LOGIN_PROCESS_WAIT_TEXT { get; }
    internal static string CRMCONNECT_LOGIN_UNABLE_TO_CONNECT_GENERAL { get; }
    internal static string CRMCONNECT_LOGIN_VALIDATION_ERR_AUTHTYPE { get; }
    internal static string CRMCONNECT_LOGIN_VALIDATION_ERR_AUTHTYPE_MSG { get; }
    internal static string CRMCONNECT_LOGIN_VALIDATION_ERR_LOGINTYPE { get; }
    internal static string CRMCONNECT_LOGIN_VALIDATION_ERR_LOGINTYPE_INCOMPATIBLE_LOGIN_TYPE { get; }
    internal static string CRMCONNECT_LOGIN_VALIDATION_ERR_PASSWORD { get; }
    internal static string CRMCONNECT_LOGIN_VALIDATION_ERR_PASSWORD_MSG { get; }
    internal static string CRMCONNECT_LOGIN_VALIDATION_ERR_SERVER { get; }
    internal static string CRMCONNECT_LOGIN_VALIDATION_ERR_SERVER_MSG { get; }
    internal static string CRMCONNECT_LOGIN_VALIDATION_ERR_USERID { get; }
    internal static string CRMCONNECT_LOGIN_VALIDATION_ERR_USERID_MSG { get; }
    internal static string CRMCONNECT_MSG_EMPTY_LOGIN_DETAILS { get; }
    internal static string CRMCONNECT_MSG_INVALID_LOGIN_DETAILS { get; }
    internal static string CRMCONNECT_MSG_INVALID_LOGIN_DETAILS_PARAMS { get; }
    internal static string CRMCONNECT_MSG_LOGIN_FAILURE { get; }
    internal static string CRMCONNECT_MSG_WEBSERVICE_CLIENT_MISCONFIGURED { get; }
    internal static string CRMCONNECT_NOORG_SEL { get; }
    internal static string CRMCONNECT_PROFILENAME_INVALID { get; }
    internal static string CRMCONNECT_SERVER_CONNECT_GOOD { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_CRMCONNECT_ERR_ACCESS();
    internal static string get_CRMCONNECT_ERR_MULTIORG();
    internal static string get_CRMCONNECT_ERR_UNEXPECTED_STATUS();
    internal static string get_CRMCONNECT_LOGIN_FAILED_TO_GENERATE_LIVE_DEVICEFILE();
    internal static string get_CRMCONNECT_LOGIN_NO_ORGS_FOUND_ONLINE();
    internal static string get_CRMCONNECT_LOGIN_NO_ORGS_FOUND_PREM();
    internal static string get_CRMCONNECT_LOGIN_PROCESS_CONNECT_TO_UII();
    internal static string get_CRMCONNECT_LOGIN_PROCESS_CONNNECTING();
    internal static string get_CRMCONNECT_LOGIN_PROCESS_GET_ORGS();
    internal static string get_CRMCONNECT_LOGIN_PROCESS_GET_ORGS_LIVE();
    internal static string get_CRMCONNECT_LOGIN_PROCESS_INIT_UII_CONNECTION();
    internal static string get_CRMCONNECT_LOGIN_PROCESS_WAIT_TEXT();
    internal static string get_CRMCONNECT_LOGIN_UNABLE_TO_CONNECT_GENERAL();
    internal static string get_CRMCONNECT_LOGIN_VALIDATION_ERR_AUTHTYPE();
    internal static string get_CRMCONNECT_LOGIN_VALIDATION_ERR_AUTHTYPE_MSG();
    internal static string get_CRMCONNECT_LOGIN_VALIDATION_ERR_LOGINTYPE();
    internal static string get_CRMCONNECT_LOGIN_VALIDATION_ERR_LOGINTYPE_INCOMPATIBLE_LOGIN_TYPE();
    internal static string get_CRMCONNECT_LOGIN_VALIDATION_ERR_PASSWORD();
    internal static string get_CRMCONNECT_LOGIN_VALIDATION_ERR_PASSWORD_MSG();
    internal static string get_CRMCONNECT_LOGIN_VALIDATION_ERR_SERVER();
    internal static string get_CRMCONNECT_LOGIN_VALIDATION_ERR_SERVER_MSG();
    internal static string get_CRMCONNECT_LOGIN_VALIDATION_ERR_USERID();
    internal static string get_CRMCONNECT_LOGIN_VALIDATION_ERR_USERID_MSG();
    internal static string get_CRMCONNECT_MSG_EMPTY_LOGIN_DETAILS();
    internal static string get_CRMCONNECT_MSG_INVALID_LOGIN_DETAILS();
    internal static string get_CRMCONNECT_MSG_INVALID_LOGIN_DETAILS_PARAMS();
    internal static string get_CRMCONNECT_MSG_LOGIN_FAILURE();
    internal static string get_CRMCONNECT_MSG_WEBSERVICE_CLIENT_MISCONFIGURED();
    internal static string get_CRMCONNECT_NOORG_SEL();
    internal static string get_CRMCONNECT_PROFILENAME_INVALID();
    internal static string get_CRMCONNECT_SERVER_CONNECT_GOOD();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public class Microsoft.Xrm.Tooling.CrmConnectControl.Properties.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
public static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
public static CultureInfo Culture { get; public set; }
    public static string CRMSERVER_LOGINCONTROL_LOCALIZEDCONTROLTYPE { get; }
    public static string ERROR_DETAILS { get; }
    public static string ERROR_LOGIN_REQUEST { get; }
    public static string INSTANCEURLCAPTURE_OKBTN { get; }
    public static string INSTANCEURLCAPTURE_TITLE { get; }
    public static string INSTANCEURLCAPTURE_URL_Error { get; }
    public static string INSTANCEURLCAPTURE_URL_Example { get; }
    public static string INSTANCEURLCAPTURE_URL_LABLE { get; }
    public static string LOGIN_FRM_ADVANCED { get; }
    public static string LOGIN_FRM_ASK_FOR_ORG { get; }
    public static string LOGIN_FRM_AUTHTYPE_AD { get; }
    public static string LOGIN_FRM_AUTHTYPE_CONFIG_FILE_NAME { get; }
    public static string LOGIN_FRM_AUTHTYPE_IFD { get; }
    public static string LOGIN_FRM_AUTHTYPE_OAUTH { get; }
    public static string LOGIN_FRM_CANCEL_BTN { get; }
    public static string LOGIN_FRM_CONNECTSTATUS { get; }
    public static string LOGIN_FRM_CRM_AUTH_SOURCE { get; }
    public static string LOGIN_FRM_CRM_PREM_NAME { get; }
    public static string LOGIN_FRM_DEPLOYMENT_O365 { get; }
    public static string LOGIN_FRM_DEPLOYMENT_ONLINE { get; }
    public static string LOGIN_FRM_DEPLOYMENT_PREM { get; }
    public static string LOGIN_FRM_DEPLOYMENT_TYPE { get; }
    public static string LOGIN_FRM_DOMAIN { get; }
    public static string LOGIN_FRM_ERR_FIRST { get; }
    public static string LOGIN_FRM_ERR_SECOND { get; }
    public static string LOGIN_FRM_GB_HEADER { get; }
    public static string LOGIN_FRM_GROUP_TITLE { get; }
    public static string LOGIN_FRM_LOGIN_BTN { get; }
    public static string LOGIN_FRM_LOGIN_LBL { get; }
    public static string LOGIN_FRM_MULT_ORG { get; }
    public static string LOGIN_FRM_ONLINE_REGION { get; }
    public static string LOGIN_FRM_ORG_HEADER { get; }
    public static string LOGIN_FRM_PASSWORD { get; }
    public static string LOGIN_FRM_REG_HEADER { get; }
    public static string LOGIN_FRM_RETRIEVE { get; }
    public static string LOGIN_FRM_RETRIEVE_DEF { get; }
    public static string LOGIN_FRM_SERVERNAME { get; }
    public static string LOGIN_FRM_SERVERORG { get; }
    public static string LOGIN_FRM_SERVERPORT { get; }
    public static string LOGIN_FRM_TITLE { get; }
    public static string LOGIN_FRM_USE_DEF_CREDS { get; }
    public static string LOGIN_FRM_USE_SSL { get; }
    public static string LOGIN_FRM_USERNAME { get; }
    public static string TITLE { get; }
    public static ResourceManager get_ResourceManager();
    public static CultureInfo get_Culture();
    public static void set_Culture(CultureInfo value);
    public static string get_CRMSERVER_LOGINCONTROL_LOCALIZEDCONTROLTYPE();
    public static string get_ERROR_DETAILS();
    public static string get_ERROR_LOGIN_REQUEST();
    public static string get_INSTANCEURLCAPTURE_OKBTN();
    public static string get_INSTANCEURLCAPTURE_TITLE();
    public static string get_INSTANCEURLCAPTURE_URL_Error();
    public static string get_INSTANCEURLCAPTURE_URL_Example();
    public static string get_INSTANCEURLCAPTURE_URL_LABLE();
    public static string get_LOGIN_FRM_ADVANCED();
    public static string get_LOGIN_FRM_ASK_FOR_ORG();
    public static string get_LOGIN_FRM_AUTHTYPE_AD();
    public static string get_LOGIN_FRM_AUTHTYPE_CONFIG_FILE_NAME();
    public static string get_LOGIN_FRM_AUTHTYPE_IFD();
    public static string get_LOGIN_FRM_AUTHTYPE_OAUTH();
    public static string get_LOGIN_FRM_CANCEL_BTN();
    public static string get_LOGIN_FRM_CONNECTSTATUS();
    public static string get_LOGIN_FRM_CRM_AUTH_SOURCE();
    public static string get_LOGIN_FRM_CRM_PREM_NAME();
    public static string get_LOGIN_FRM_DEPLOYMENT_O365();
    public static string get_LOGIN_FRM_DEPLOYMENT_ONLINE();
    public static string get_LOGIN_FRM_DEPLOYMENT_PREM();
    public static string get_LOGIN_FRM_DEPLOYMENT_TYPE();
    public static string get_LOGIN_FRM_DOMAIN();
    public static string get_LOGIN_FRM_ERR_FIRST();
    public static string get_LOGIN_FRM_ERR_SECOND();
    public static string get_LOGIN_FRM_GB_HEADER();
    public static string get_LOGIN_FRM_GROUP_TITLE();
    public static string get_LOGIN_FRM_LOGIN_BTN();
    public static string get_LOGIN_FRM_LOGIN_LBL();
    public static string get_LOGIN_FRM_MULT_ORG();
    public static string get_LOGIN_FRM_ONLINE_REGION();
    public static string get_LOGIN_FRM_ORG_HEADER();
    public static string get_LOGIN_FRM_PASSWORD();
    public static string get_LOGIN_FRM_REG_HEADER();
    public static string get_LOGIN_FRM_RETRIEVE();
    public static string get_LOGIN_FRM_RETRIEVE_DEF();
    public static string get_LOGIN_FRM_SERVERNAME();
    public static string get_LOGIN_FRM_SERVERORG();
    public static string get_LOGIN_FRM_SERVERPORT();
    public static string get_LOGIN_FRM_TITLE();
    public static string get_LOGIN_FRM_USE_DEF_CREDS();
    public static string get_LOGIN_FRM_USE_SSL();
    public static string get_LOGIN_FRM_USERNAME();
    public static string get_TITLE();
}
[CompilerGeneratedAttribute]
[GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
internal class Microsoft.Xrm.Tooling.CrmConnectControl.Properties.Settings : ApplicationSettingsBase {
    private static Settings defaultInstance;
    public static Settings Default { get; }
    private static Settings();
    public static Settings get_Default();
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.SelectOrgDlg : Window {
    private GridViewColumnHeader _CurSortCol;
    private SortAdorner _CurAdorner;
    internal SelectOrgDlg Window;
    internal Grid LayoutRoot;
    internal ListView lvOrgList;
    internal GridViewColumn OrgCol;
    internal Button btnSelect;
    internal Button btnCancel;
    private bool _contentLoaded;
    public CrmOrgByServer GetSelectedCrmOrg { get; }
    public CrmOrgByServer get_GetSelectedCrmOrg();
    private void btnSelect_Click(object sender, RoutedEventArgs e);
    private void Window_Loaded(object sender, RoutedEventArgs e);
    private void Sort_Click(object sender, RoutedEventArgs e);
    private void SetSort(GridViewColumnHeader column);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.ServerConnectStatusEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Connected>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <exEvent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MultiOrgsFound>k__BackingField;
    public string ErrorMessage { get; private set; }
    public bool Connected { get; private set; }
    public Exception exEvent { get; private set; }
    public string StatusMessage { get; public set; }
    public bool MultiOrgsFound { get; private set; }
    public ServerConnectStatusEventArgs(string statusMsg);
    public ServerConnectStatusEventArgs(string errMsg, bool connected);
    public ServerConnectStatusEventArgs(string errMsg, bool connected, bool multiOrgFound);
    public ServerConnectStatusEventArgs(string errMsg, bool connected, Exception except);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
private void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public bool get_Connected();
    [CompilerGeneratedAttribute]
private void set_Connected(bool value);
    [CompilerGeneratedAttribute]
public Exception get_exEvent();
    [CompilerGeneratedAttribute]
private void set_exEvent(Exception value);
    [CompilerGeneratedAttribute]
public string get_StatusMessage();
    [CompilerGeneratedAttribute]
public void set_StatusMessage(string value);
    [CompilerGeneratedAttribute]
public bool get_MultiOrgsFound();
    [CompilerGeneratedAttribute]
private void set_MultiOrgsFound(bool value);
}
public enum Microsoft.Xrm.Tooling.CrmConnectControl.ServerLoginConfigCtrlMode : Enum {
    public int value__;
    public static ServerLoginConfigCtrlMode ConfigPanel;
    public static ServerLoginConfigCtrlMode FullLoginPanel;
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.SortAdorner : Adorner {
    private static Geometry _DescGeometry;
    private static Geometry _AscGeometry;
    private string sortAdornerBrushKey;
    [CompilerGeneratedAttribute]
private ListSortDirection <Direction>k__BackingField;
    private Brush SortAdornerFillBrush { get; }
    public ListSortDirection Direction { get; private set; }
    public SortAdorner(UIElement element, ListSortDirection dir);
    public SortAdorner(UIElement element, ListSortDirection dir, string sortOrderBrushKey);
    private static SortAdorner();
    private Brush get_SortAdornerFillBrush();
    [CompilerGeneratedAttribute]
public ListSortDirection get_Direction();
    [CompilerGeneratedAttribute]
private void set_Direction(ListSortDirection value);
    protected virtual void OnRender(DrawingContext drawingContext);
}
public static class Microsoft.Xrm.Tooling.CrmConnectControl.Utility.CredentialManager : object {
    public static string CrmTargetPrefix;
    public static Uri GetCredentialTarget(Uri target);
    public static SavedCredentials ReadCredentials(Uri target);
    public static SavedCredentials ReadCredentials(string target);
    public static void WriteCredentials(Uri target, SavedCredentials userCredentials, bool storePasswordInCredentialCache);
    public static void WriteCredentials(string target, SavedCredentials userCredentials, bool storePasswordInCredentialCache);
    public static void DeleteCredentials(Uri target, bool deletePasswordOnly);
    public static void DeleteCredentials(string target, bool deletePasswordOnly);
}
public enum Microsoft.Xrm.Tooling.CrmConnectControl.Utility.CrmDeploymentType : Enum {
    public int value__;
    public static CrmDeploymentType Prem;
    public static CrmDeploymentType Online;
    public static CrmDeploymentType O365;
}
public enum Microsoft.Xrm.Tooling.CrmConnectControl.Utility.Dynamics_ConfigFileServerKeys : Enum {
    public int value__;
    public static Dynamics_ConfigFileServerKeys UseDefaultCreds;
    public static Dynamics_ConfigFileServerKeys CrmUserName;
    public static Dynamics_ConfigFileServerKeys CrmPassword;
    public static Dynamics_ConfigFileServerKeys CrmDomain;
    public static Dynamics_ConfigFileServerKeys CrmOrg;
    public static Dynamics_ConfigFileServerKeys CrmServerName;
    public static Dynamics_ConfigFileServerKeys CrmPort;
    public static Dynamics_ConfigFileServerKeys CrmDeploymentType;
    public static Dynamics_ConfigFileServerKeys CacheCredentials;
    public static Dynamics_ConfigFileServerKeys CrmUseSSL;
    public static Dynamics_ConfigFileServerKeys CrmOnlineRegion;
    public static Dynamics_ConfigFileServerKeys AuthHomeRealm;
    public static Dynamics_ConfigFileServerKeys AskForOrg;
    public static Dynamics_ConfigFileServerKeys AdvancedCheck;
    public static Dynamics_ConfigFileServerKeys Authority;
    public static Dynamics_ConfigFileServerKeys UserId;
    public static Dynamics_ConfigFileServerKeys UseDirectConnection;
    public static Dynamics_ConfigFileServerKeys DirectConnectionUri;
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.Utility.ErrorLogger : object {
    [CompilerGeneratedAttribute]
private static string <LogfileDirectoryOverride>k__BackingField;
    private static string ErrorFileName;
    private static LoginTracer tracer;
    private static FileVersionInfo fileVersionInfo;
    public static string LogfileDirectoryOverride { get; public set; }
    private static ErrorLogger();
    [CompilerGeneratedAttribute]
public static string get_LogfileDirectoryOverride();
    [CompilerGeneratedAttribute]
public static void set_LogfileDirectoryOverride(string value);
    public static void WriteToFile(Exception objException);
    public static void LaunchLogFile();
    private static bool WriteErrorLog(string strPathName, Exception objException);
    private static void LogExceptionToFile(Exception objException, StreamWriter sw, int level);
}
internal class Microsoft.Xrm.Tooling.CrmConnectControl.Utility.LoginTracer : TraceLoggerBase {
    public string LastError { get; }
    public string DefaultTraceSourceName { get; }
    public LoginTracer(string traceSourceName);
    public string get_LastError();
    public string get_DefaultTraceSourceName();
    public virtual void ResetLastError();
    public virtual void Log(string message);
    public virtual void Log(string message, TraceEventType eventType);
    public virtual void Log(string message, TraceEventType eventType, Exception exception);
    public virtual void Log(Exception exception);
    private void WriteTraceEvent(TraceEventType evntType, int traceId, string message);
    private void GetExceptionDetail(object objException, StringBuilder sw, int level, StringBuilder lastErrorMsg);
    private void FormatExceptionMessage(string source, string targetSite, string message, string stackTrace, StringBuilder sw, int level);
    private void FormatOrgFaultMessage(string message, string timeOfEvent, string errorCode, string traceText, StringBuilder sw, int level);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.Utility.OrgNameFormater : object {
    public sealed virtual object Convert(Object[] values, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual Object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.Utility.RadioButtonAccessibleNameFormater : object {
    public sealed virtual object Convert(Object[] values, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual Object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.Utility.SavedCredentials : object {
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private SecureString <Password>k__BackingField;
    public string UserName { get; public set; }
    public SecureString Password { get; public set; }
    public SavedCredentials(string userName, SecureString password);
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public SecureString get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SecureString value);
}
[ExtensionAttribute]
internal static class Microsoft.Xrm.Tooling.CrmConnectControl.Utility.SecureStringExtensions : object {
    [ExtensionAttribute]
public static SecureString MakeSecureString(SecureString value, string pass);
    [ExtensionAttribute]
public static string ToUnsecureString(SecureString value);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.Utility.StorageUtils : object {
    public static T GetConfigKey(Dictionary`2<Dynamics_ConfigFileServerKeys, object> ServerConfigKeys, Dynamics_ConfigFileServerKeys key);
    public static void SetConfigKey(Dictionary`2<Dynamics_ConfigFileServerKeys, object> ServerConfigKeys, Dynamics_ConfigFileServerKeys key, T value);
    public static ClaimsHomeRealmOptions ReadHomeRealmConfigFile();
    private static TType Deserialize(string deserializeString);
    private static object Deserialize(string deserializeString, Type type);
    private static string Serialize(TType serializeObject);
    private static string Serialize(object serialize);
}
public class Microsoft.Xrm.Tooling.CrmConnectControl.Utility.TraceControlSettings : object {
    private static string _traceSourceName;
    [CompilerGeneratedAttribute]
private static SourceLevels <TraceLevel>k__BackingField;
    internal static Dictionary`2<string, TraceListener> RegisterdTraceListeners { get; }
    public static SourceLevels TraceLevel { get; public set; }
    private static TraceControlSettings();
    internal static Dictionary`2<string, TraceListener> get_RegisterdTraceListeners();
    [CompilerGeneratedAttribute]
public static SourceLevels get_TraceLevel();
    [CompilerGeneratedAttribute]
public static void set_TraceLevel(SourceLevels value);
    public static void CloseListeners();
    public static bool AddTraceListener(TraceListener listenerToAdd);
}
