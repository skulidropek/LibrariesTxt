internal class Microsoft.Data.OData.AnnotationFilter : object {
    private static AnnotationFilter IncludeAll;
    private static AnnotationFilter ExcludeAll;
    private static Char[] AnnotationFilterPatternSeparator;
    private AnnotationFilterPattern[] prioritizedPatternsToMatch;
    [CompilerGeneratedAttribute]
private static Func`2<string, AnnotationFilterPattern> CS$<>9__CachedAnonymousMethodDelegate1;
    private AnnotationFilter(AnnotationFilterPattern[] prioritizedPatternsToMatch);
    private static AnnotationFilter();
    internal static AnnotationFilter Create(string filter);
    internal virtual bool Matches(string annotationName);
    [CompilerGeneratedAttribute]
private static AnnotationFilterPattern <Create>b__0(string pattern);
}
internal abstract class Microsoft.Data.OData.AnnotationFilterPattern : object {
    private static char NamespaceSeparator;
    private static char ExcludeOperator;
    private static string WildCard;
    private static string DotStar;
    internal static AnnotationFilterPattern IncludeAllPattern;
    internal static AnnotationFilterPattern ExcludeAllPattern;
    protected string Pattern;
    private bool isExclude;
    internal bool IsExclude { get; }
    private AnnotationFilterPattern(string pattern, bool isExclude);
    private static AnnotationFilterPattern();
    internal virtual bool get_IsExclude();
    public sealed virtual int CompareTo(AnnotationFilterPattern other);
    internal static AnnotationFilterPattern Create(string pattern);
    internal static void Sort(AnnotationFilterPattern[] pattersToSort);
    internal abstract virtual bool Matches(string annotationName);
    private static int ComparePatternPriority(string pattern1, string pattern2);
    private static bool RemoveExcludeOperator(String& pattern);
    private static void ValidatePattern(string pattern);
}
internal class Microsoft.Data.OData.AsyncBufferedStream : Stream {
    private Stream innerStream;
    private Queue`1<DataBuffer> bufferQueue;
    private DataBuffer bufferToAppendTo;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal AsyncBufferedStream(Stream stream);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    internal void Clear();
    internal void FlushSync();
    internal Task FlushAsync();
    internal Task FlushAsyncInternal();
    protected virtual void Dispose(bool disposing);
    private void QueueNewBuffer();
    private Queue`1<DataBuffer> PrepareFlushBuffers();
    private IEnumerable`1<Task> FlushBuffersAsync(Queue`1<DataBuffer> buffers);
}
public class Microsoft.Data.OData.Atom.AtomCategoriesMetadata : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Fixed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scheme>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Href>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AtomCategoryMetadata> <Categories>k__BackingField;
    public Nullable`1<bool> Fixed { get; public set; }
    public string Scheme { get; public set; }
    public Uri Href { get; public set; }
    public IEnumerable`1<AtomCategoryMetadata> Categories { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Fixed();
    [CompilerGeneratedAttribute]
public void set_Fixed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Scheme();
    [CompilerGeneratedAttribute]
public void set_Scheme(string value);
    [CompilerGeneratedAttribute]
public Uri get_Href();
    [CompilerGeneratedAttribute]
public void set_Href(Uri value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<AtomCategoryMetadata> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(IEnumerable`1<AtomCategoryMetadata> value);
}
public class Microsoft.Data.OData.Atom.AtomCategoryMetadata : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private string <Term>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scheme>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    public string Term { get; public set; }
    public string Scheme { get; public set; }
    public string Label { get; public set; }
    internal AtomCategoryMetadata(AtomCategoryMetadata other);
    [CompilerGeneratedAttribute]
public string get_Term();
    [CompilerGeneratedAttribute]
public void set_Term(string value);
    [CompilerGeneratedAttribute]
public string get_Scheme();
    [CompilerGeneratedAttribute]
public void set_Scheme(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
}
internal static class Microsoft.Data.OData.Atom.AtomConstants : object {
    internal static string XmlNamespacesNamespace;
    internal static string XmlNamespace;
    internal static string XmlnsNamespacePrefix;
    internal static string XmlNamespacePrefix;
    internal static string XmlBaseAttributeName;
    internal static string XmlLangAttributeName;
    internal static string XmlSpaceAttributeName;
    internal static string XmlPreserveSpaceAttributeValue;
    internal static string ODataMetadataNamespace;
    internal static string ODataMetadataNamespacePrefix;
    internal static string ODataNamespace;
    internal static string ODataNamespacePrefix;
    internal static string ODataETagAttributeName;
    internal static string ODataNullAttributeName;
    internal static string ODataCountElementName;
    internal static string ODataSchemeNamespace;
    internal static string ODataStreamPropertyMediaResourceSegmentName;
    internal static string ODataStreamPropertyEditMediaSegmentName;
    internal static string ODataStreamPropertyMediaResourceRelatedLinkRelationPrefix;
    internal static string ODataStreamPropertyEditMediaRelatedLinkRelationPrefix;
    internal static string ODataNavigationPropertiesRelatedSegmentName;
    internal static string ODataNavigationPropertiesRelatedLinkRelationPrefix;
    internal static string ODataNavigationPropertiesAssociationRelatedSegmentName;
    internal static string ODataNavigationPropertiesAssociationLinkRelationPrefix;
    internal static string ODataInlineElementName;
    internal static string ODataErrorElementName;
    internal static string ODataErrorCodeElementName;
    internal static string ODataErrorMessageElementName;
    internal static string ODataInnerErrorElementName;
    internal static string ODataInnerErrorMessageElementName;
    internal static string ODataInnerErrorTypeElementName;
    internal static string ODataInnerErrorStackTraceElementName;
    internal static string ODataInnerErrorInnerErrorElementName;
    internal static string ODataCollectionItemElementName;
    internal static string ODataActionElementName;
    internal static string ODataFunctionElementName;
    internal static string ODataOperationMetadataAttribute;
    internal static string ODataOperationTitleAttribute;
    internal static string ODataOperationTargetAttribute;
    internal static string ODataLinksElementName;
    internal static string ODataUriElementName;
    internal static string ODataNextLinkElementName;
    internal static string ODataAnnotationElementName;
    internal static string ODataAnnotationTargetAttribute;
    internal static string ODataAnnotationTermAttribute;
    internal static string ODataAnnotationStringAttribute;
    internal static string ODataAnnotationBoolAttribute;
    internal static string ODataAnnotationDecimalAttribute;
    internal static string ODataAnnotationIntAttribute;
    internal static string ODataAnnotationFloatAttribute;
    internal static string AtomNamespace;
    internal static string AtomNamespacePrefix;
    internal static string NonEmptyAtomNamespacePrefix;
    internal static string AtomEntryElementName;
    internal static string AtomFeedElementName;
    internal static string AtomContentElementName;
    internal static string AtomTypeAttributeName;
    internal static string AtomPropertiesElementName;
    internal static string AtomIdElementName;
    internal static string AtomTitleElementName;
    internal static string AtomSubtitleElementName;
    internal static string AtomSummaryElementName;
    internal static string AtomPublishedElementName;
    internal static string AtomSourceElementName;
    internal static string AtomRightsElementName;
    internal static string AtomLogoElementName;
    internal static string AtomAuthorElementName;
    internal static string AtomAuthorNameElementName;
    internal static string AtomContributorElementName;
    internal static string AtomGeneratorElementName;
    internal static string AtomGeneratorUriAttributeName;
    internal static string AtomGeneratorVersionAttributeName;
    internal static string AtomIconElementName;
    internal static string AtomPersonNameElementName;
    internal static string AtomPersonUriElementName;
    internal static string AtomPersonEmailElementName;
    internal static string AtomUpdatedElementName;
    internal static string AtomCategoryElementName;
    internal static string AtomCategoryTermAttributeName;
    internal static string AtomCategorySchemeAttributeName;
    internal static string AtomCategoryLabelAttributeName;
    internal static string AtomEditRelationAttributeValue;
    internal static string AtomSelfRelationAttributeValue;
    internal static string AtomLinkElementName;
    internal static string AtomLinkRelationAttributeName;
    internal static string AtomLinkTypeAttributeName;
    internal static string AtomLinkHrefAttributeName;
    internal static string AtomLinkHrefLangAttributeName;
    internal static string AtomLinkTitleAttributeName;
    internal static string AtomLinkLengthAttributeName;
    internal static string AtomHRefAttributeName;
    internal static string MediaLinkEntryContentSourceAttributeName;
    internal static string AtomEditMediaRelationAttributeValue;
    internal static string AtomNextRelationAttributeValue;
    internal static string AtomDeltaRelationAttributeValue;
    internal static string AtomAlternateRelationAttributeValue;
    internal static string AtomRelatedRelationAttributeValue;
    internal static string AtomEnclosureRelationAttributeValue;
    internal static string AtomViaRelationAttributeValue;
    internal static string AtomDescribedByRelationAttributeValue;
    internal static string AtomServiceRelationAttributeValue;
    internal static string AtomTextConstructTextKind;
    internal static string AtomTextConstructHtmlKind;
    internal static string AtomTextConstructXHtmlKind;
    internal static string AtomWorkspaceDefaultTitle;
    internal static string AtomTrueLiteral;
    internal static string AtomFalseLiteral;
    internal static string IanaLinkRelationsNamespace;
    internal static string AtomPublishingNamespace;
    internal static string AtomPublishingServiceElementName;
    internal static string AtomPublishingWorkspaceElementName;
    internal static string AtomPublishingCollectionElementName;
    internal static string AtomPublishingCategoriesElementName;
    internal static string AtomPublishingAcceptElementName;
    internal static string AtomPublishingFixedAttributeName;
    internal static string AtomPublishingFixedYesValue;
    internal static string AtomPublishingFixedNoValue;
    internal static string GeoRssNamespace;
    internal static string GeoRssPrefix;
    internal static string GmlNamespace;
    internal static string GmlPrefix;
}
public class Microsoft.Data.OData.Atom.AtomEntryMetadata : ODataAnnotatable {
    private string publishedString;
    private string updatedString;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AtomPersonMetadata> <Authors>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomCategoryMetadata <CategoryWithTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AtomCategoryMetadata> <Categories>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AtomPersonMetadata> <Contributors>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomLinkMetadata <SelfLink>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomLinkMetadata <EditLink>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AtomLinkMetadata> <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Published>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomTextConstruct <Rights>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomFeedMetadata <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomTextConstruct <Summary>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomTextConstruct <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Updated>k__BackingField;
    public IEnumerable`1<AtomPersonMetadata> Authors { get; public set; }
    public AtomCategoryMetadata CategoryWithTypeName { get; public set; }
    public IEnumerable`1<AtomCategoryMetadata> Categories { get; public set; }
    public IEnumerable`1<AtomPersonMetadata> Contributors { get; public set; }
    public AtomLinkMetadata SelfLink { get; public set; }
    public AtomLinkMetadata EditLink { get; public set; }
    public IEnumerable`1<AtomLinkMetadata> Links { get; public set; }
    public Nullable`1<DateTimeOffset> Published { get; public set; }
    public AtomTextConstruct Rights { get; public set; }
    public AtomFeedMetadata Source { get; public set; }
    public AtomTextConstruct Summary { get; public set; }
    public AtomTextConstruct Title { get; public set; }
    public Nullable`1<DateTimeOffset> Updated { get; public set; }
    internal string PublishedString { get; internal set; }
    internal string UpdatedString { get; internal set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<AtomPersonMetadata> get_Authors();
    [CompilerGeneratedAttribute]
public void set_Authors(IEnumerable`1<AtomPersonMetadata> value);
    [CompilerGeneratedAttribute]
public AtomCategoryMetadata get_CategoryWithTypeName();
    [CompilerGeneratedAttribute]
public void set_CategoryWithTypeName(AtomCategoryMetadata value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<AtomCategoryMetadata> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(IEnumerable`1<AtomCategoryMetadata> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<AtomPersonMetadata> get_Contributors();
    [CompilerGeneratedAttribute]
public void set_Contributors(IEnumerable`1<AtomPersonMetadata> value);
    [CompilerGeneratedAttribute]
public AtomLinkMetadata get_SelfLink();
    [CompilerGeneratedAttribute]
public void set_SelfLink(AtomLinkMetadata value);
    [CompilerGeneratedAttribute]
public AtomLinkMetadata get_EditLink();
    [CompilerGeneratedAttribute]
public void set_EditLink(AtomLinkMetadata value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<AtomLinkMetadata> get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(IEnumerable`1<AtomLinkMetadata> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Published();
    [CompilerGeneratedAttribute]
public void set_Published(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public AtomTextConstruct get_Rights();
    [CompilerGeneratedAttribute]
public void set_Rights(AtomTextConstruct value);
    [CompilerGeneratedAttribute]
public AtomFeedMetadata get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(AtomFeedMetadata value);
    [CompilerGeneratedAttribute]
public AtomTextConstruct get_Summary();
    [CompilerGeneratedAttribute]
public void set_Summary(AtomTextConstruct value);
    [CompilerGeneratedAttribute]
public AtomTextConstruct get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(AtomTextConstruct value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Updated();
    [CompilerGeneratedAttribute]
public void set_Updated(Nullable`1<DateTimeOffset> value);
    internal string get_PublishedString();
    internal void set_PublishedString(string value);
    internal string get_UpdatedString();
    internal void set_UpdatedString(string value);
}
public class Microsoft.Data.OData.Atom.AtomFeedMetadata : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private IEnumerable`1<AtomPersonMetadata> <Authors>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AtomCategoryMetadata> <Categories>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AtomPersonMetadata> <Contributors>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomGeneratorMetadata <Generator>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Icon>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AtomLinkMetadata> <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Logo>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomTextConstruct <Rights>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomLinkMetadata <SelfLink>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomLinkMetadata <NextPageLink>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceId>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomTextConstruct <Subtitle>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomTextConstruct <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Updated>k__BackingField;
    public IEnumerable`1<AtomPersonMetadata> Authors { get; public set; }
    public IEnumerable`1<AtomCategoryMetadata> Categories { get; public set; }
    public IEnumerable`1<AtomPersonMetadata> Contributors { get; public set; }
    public AtomGeneratorMetadata Generator { get; public set; }
    public Uri Icon { get; public set; }
    public IEnumerable`1<AtomLinkMetadata> Links { get; public set; }
    public Uri Logo { get; public set; }
    public AtomTextConstruct Rights { get; public set; }
    public AtomLinkMetadata SelfLink { get; public set; }
    public AtomLinkMetadata NextPageLink { get; public set; }
    public string SourceId { get; public set; }
    public AtomTextConstruct Subtitle { get; public set; }
    public AtomTextConstruct Title { get; public set; }
    public Nullable`1<DateTimeOffset> Updated { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<AtomPersonMetadata> get_Authors();
    [CompilerGeneratedAttribute]
public void set_Authors(IEnumerable`1<AtomPersonMetadata> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<AtomCategoryMetadata> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(IEnumerable`1<AtomCategoryMetadata> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<AtomPersonMetadata> get_Contributors();
    [CompilerGeneratedAttribute]
public void set_Contributors(IEnumerable`1<AtomPersonMetadata> value);
    [CompilerGeneratedAttribute]
public AtomGeneratorMetadata get_Generator();
    [CompilerGeneratedAttribute]
public void set_Generator(AtomGeneratorMetadata value);
    [CompilerGeneratedAttribute]
public Uri get_Icon();
    [CompilerGeneratedAttribute]
public void set_Icon(Uri value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<AtomLinkMetadata> get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(IEnumerable`1<AtomLinkMetadata> value);
    [CompilerGeneratedAttribute]
public Uri get_Logo();
    [CompilerGeneratedAttribute]
public void set_Logo(Uri value);
    [CompilerGeneratedAttribute]
public AtomTextConstruct get_Rights();
    [CompilerGeneratedAttribute]
public void set_Rights(AtomTextConstruct value);
    [CompilerGeneratedAttribute]
public AtomLinkMetadata get_SelfLink();
    [CompilerGeneratedAttribute]
public void set_SelfLink(AtomLinkMetadata value);
    [CompilerGeneratedAttribute]
public AtomLinkMetadata get_NextPageLink();
    [CompilerGeneratedAttribute]
public void set_NextPageLink(AtomLinkMetadata value);
    [CompilerGeneratedAttribute]
public string get_SourceId();
    [CompilerGeneratedAttribute]
public void set_SourceId(string value);
    [CompilerGeneratedAttribute]
public AtomTextConstruct get_Subtitle();
    [CompilerGeneratedAttribute]
public void set_Subtitle(AtomTextConstruct value);
    [CompilerGeneratedAttribute]
public AtomTextConstruct get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(AtomTextConstruct value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Updated();
    [CompilerGeneratedAttribute]
public void set_Updated(Nullable`1<DateTimeOffset> value);
}
public class Microsoft.Data.OData.Atom.AtomGeneratorMetadata : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    public string Name { get; public set; }
    public Uri Uri { get; public set; }
    public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
internal class Microsoft.Data.OData.Atom.AtomInstanceAnnotation : object {
    private string target;
    private string term;
    private ODataValue value;
    internal string Target { get; }
    internal string TermName { get; }
    internal ODataValue Value { get; }
    internal bool IsTargetingCurrentElement { get; }
    private AtomInstanceAnnotation(string target, string term, ODataValue value);
    internal string get_Target();
    internal string get_TermName();
    internal ODataValue get_Value();
    internal bool get_IsTargetingCurrentElement();
    internal static AtomInstanceAnnotation CreateFrom(ODataInstanceAnnotation odataInstanceAnnotation, string target);
    internal static AtomInstanceAnnotation CreateFrom(ODataAtomInputContext inputContext, ODataAtomPropertyAndValueDeserializer propertyAndValueDeserializer);
    internal static string LookupAttributeValueNotationNameByEdmTypeKind(EdmPrimitiveTypeKind typeKind);
    internal static IEdmPrimitiveTypeReference LookupEdmTypeByAttributeValueNotationName(string attributeName);
    private static ODataValue ReadValueFromElementContent(ODataAtomPropertyAndValueDeserializer propertyAndValueDeserializer, IEdmTypeReference expectedType);
    private static ODataPrimitiveValue GetValueFromAttributeValueNotation(IEdmTypeReference expectedTypeReference, IEdmPrimitiveTypeReference attributeValueNotationTypeReference, string attributeValueNotationAttributeName, string attributeValueNotationAttributeValue, string typeAttributeValue, bool positionedOnEmptyElement, IEdmModel model, ODataMessageReaderSettings messageReaderSettings, ODataVersion version);
}
public class Microsoft.Data.OData.Atom.AtomLinkMetadata : ODataAnnotatable {
    private string hrefFromEpm;
    [CompilerGeneratedAttribute]
private Uri <Href>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Relation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HrefLang>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Length>k__BackingField;
    public Uri Href { get; public set; }
    public string Relation { get; public set; }
    public string MediaType { get; public set; }
    public string HrefLang { get; public set; }
    public string Title { get; public set; }
    public Nullable`1<int> Length { get; public set; }
    internal AtomLinkMetadata(AtomLinkMetadata other);
    [CompilerGeneratedAttribute]
public Uri get_Href();
    [CompilerGeneratedAttribute]
public void set_Href(Uri value);
    [CompilerGeneratedAttribute]
public string get_Relation();
    [CompilerGeneratedAttribute]
public void set_Relation(string value);
    [CompilerGeneratedAttribute]
public string get_MediaType();
    [CompilerGeneratedAttribute]
public void set_MediaType(string value);
    [CompilerGeneratedAttribute]
public string get_HrefLang();
    [CompilerGeneratedAttribute]
public void set_HrefLang(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Length();
    [CompilerGeneratedAttribute]
public void set_Length(Nullable`1<int> value);
}
public class Microsoft.Data.OData.Atom.AtomPersonMetadata : ODataAnnotatable {
    private string name;
    private string email;
    private string uriFromEpm;
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    public string Name { get; public set; }
    public Uri Uri { get; public set; }
    public string Email { get; public set; }
    internal string UriFromEpm { get; internal set; }
    public string get_Name();
    public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    public string get_Email();
    public void set_Email(string value);
    internal string get_UriFromEpm();
    internal void set_UriFromEpm(string value);
    public static AtomPersonMetadata ToAtomPersonMetadata(string name);
    public static AtomPersonMetadata op_Implicit(string name);
}
public class Microsoft.Data.OData.Atom.AtomResourceCollectionMetadata : object {
    [CompilerGeneratedAttribute]
private AtomTextConstruct <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Accept>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomCategoriesMetadata <Categories>k__BackingField;
    public AtomTextConstruct Title { get; public set; }
    public string Accept { get; public set; }
    public AtomCategoriesMetadata Categories { get; public set; }
    [CompilerGeneratedAttribute]
public AtomTextConstruct get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(AtomTextConstruct value);
    [CompilerGeneratedAttribute]
public string get_Accept();
    [CompilerGeneratedAttribute]
public void set_Accept(string value);
    [CompilerGeneratedAttribute]
public AtomCategoriesMetadata get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(AtomCategoriesMetadata value);
}
public class Microsoft.Data.OData.Atom.AtomStreamReferenceMetadata : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private AtomLinkMetadata <SelfLink>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomLinkMetadata <EditLink>k__BackingField;
    public AtomLinkMetadata SelfLink { get; public set; }
    public AtomLinkMetadata EditLink { get; public set; }
    [CompilerGeneratedAttribute]
public AtomLinkMetadata get_SelfLink();
    [CompilerGeneratedAttribute]
public void set_SelfLink(AtomLinkMetadata value);
    [CompilerGeneratedAttribute]
public AtomLinkMetadata get_EditLink();
    [CompilerGeneratedAttribute]
public void set_EditLink(AtomLinkMetadata value);
}
public class Microsoft.Data.OData.Atom.AtomTextConstruct : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private AtomTextConstructKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public AtomTextConstructKind Kind { get; public set; }
    public string Text { get; public set; }
    [CompilerGeneratedAttribute]
public AtomTextConstructKind get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(AtomTextConstructKind value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    public static AtomTextConstruct ToTextConstruct(string text);
    public static AtomTextConstruct op_Implicit(string text);
}
public enum Microsoft.Data.OData.Atom.AtomTextConstructKind : Enum {
    public int value__;
    public static AtomTextConstructKind Text;
    public static AtomTextConstructKind Html;
    public static AtomTextConstructKind Xhtml;
}
internal static class Microsoft.Data.OData.Atom.AtomUtils : object {
    private static int MimeApplicationAtomXmlLength;
    private static int MimeApplicationAtomXmlLengthWithSemicolon;
    private static int MimeApplicationAtomXmlTypeEntryLength;
    private static int MimeApplicationAtomXmlTypeFeedLength;
    private static string MimeApplicationAtomXmlTypeEntryParameter;
    private static string MimeApplicationAtomXmlTypeFeedParameter;
    internal static string ComputeODataNavigationLinkRelation(ODataNavigationLink navigationLink);
    internal static string ComputeODataNavigationLinkType(ODataNavigationLink navigationLink);
    internal static string ComputeODataAssociationLinkRelation(ODataAssociationLink associationLink);
    internal static string ComputeStreamPropertyRelation(ODataProperty streamProperty, bool forEditLink);
    internal static string UnescapeAtomLinkRelationAttribute(string relation);
    internal static string GetNameFromAtomLinkRelationAttribute(string relation, string namespacePrefix);
    internal static bool IsExactNavigationLinkTypeMatch(string navigationLinkType, Boolean& hasEntryType, Boolean& hasFeedType);
}
public class Microsoft.Data.OData.Atom.AtomWorkspaceMetadata : object {
    [CompilerGeneratedAttribute]
private AtomTextConstruct <Title>k__BackingField;
    public AtomTextConstruct Title { get; public set; }
    [CompilerGeneratedAttribute]
public AtomTextConstruct get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(AtomTextConstruct value);
}
internal class Microsoft.Data.OData.Atom.BufferingXmlReader : XmlReader {
    internal string XmlNamespace;
    internal string XmlBaseAttributeName;
    internal string XmlLangAttributeName;
    internal string ODataMetadataNamespace;
    internal string ODataNamespace;
    internal string ODataErrorElementName;
    private XmlReader reader;
    private LinkedList`1<BufferedNode> bufferedNodes;
    private BufferedNode endOfInputBufferedNode;
    private bool disableXmlBase;
    private int maxInnerErrorDepth;
    private Uri documentBaseUri;
    private LinkedListNode`1<BufferedNode> currentBufferedNode;
    private LinkedListNode`1<BufferedNode> currentAttributeNode;
    private LinkedListNode`1<BufferedNode> currentBufferedNodeToReport;
    private bool isBuffering;
    private bool removeOnNextRead;
    private bool disableInStreamErrorDetection;
    private Stack`1<XmlBaseDefinition> xmlBaseStack;
    private Stack`1<XmlBaseDefinition> bufferStartXmlBaseStack;
    public XmlNodeType NodeType { get; }
    public bool IsEmptyElement { get; }
    public string LocalName { get; }
    public string Prefix { get; }
    public string NamespaceURI { get; }
    public string Value { get; }
    public int Depth { get; }
    public bool EOF { get; }
    public ReadState ReadState { get; }
    public XmlNameTable NameTable { get; }
    public int AttributeCount { get; }
    public string BaseURI { get; }
    public bool HasValue { get; }
    internal Uri XmlBaseUri { get; }
    internal Uri ParentXmlBaseUri { get; }
    internal bool DisableInStreamErrorDetection { get; internal set; }
    internal BufferingXmlReader(XmlReader reader, Uri parentXmlBaseUri, Uri documentBaseUri, bool disableXmlBase, int maxInnerErrorDepth, string odataNamespace);
    public virtual XmlNodeType get_NodeType();
    public virtual bool get_IsEmptyElement();
    public virtual string get_LocalName();
    public virtual string get_Prefix();
    public virtual string get_NamespaceURI();
    public virtual string get_Value();
    public virtual int get_Depth();
    public virtual bool get_EOF();
    public virtual ReadState get_ReadState();
    public virtual XmlNameTable get_NameTable();
    public virtual int get_AttributeCount();
    public virtual string get_BaseURI();
    public virtual bool get_HasValue();
    internal Uri get_XmlBaseUri();
    internal Uri get_ParentXmlBaseUri();
    internal bool get_DisableInStreamErrorDetection();
    internal void set_DisableInStreamErrorDetection(bool value);
    public virtual bool Read();
    public virtual bool MoveToElement();
    public virtual bool MoveToFirstAttribute();
    public virtual bool MoveToNextAttribute();
    public virtual bool ReadAttributeValue();
    public virtual string GetAttribute(int i);
    public virtual string GetAttribute(string name, string namespaceURI);
    public virtual string GetAttribute(string name);
    public virtual string LookupNamespace(string prefix);
    public virtual bool MoveToAttribute(string name, string ns);
    public virtual bool MoveToAttribute(string name);
    public virtual void ResolveEntity();
    internal void StartBuffering();
    internal void StopBuffering();
    private bool ReadInternal(bool ignoreInStreamErrors);
    private bool ReadNextAndCheckForInStreamError();
    private bool IsEndOfInputNode(BufferedNode node);
    private BufferedNode BufferCurrentReaderNode();
    private BufferedNode GetCurrentElementNode();
    private LinkedListNode`1<BufferedNode> FindAttributeBufferedNode(int index);
    private LinkedListNode`1<BufferedNode> FindAttributeBufferedNode(string localName, string namespaceUri);
    private LinkedListNode`1<BufferedNode> FindAttributeBufferedNode(string qualifiedName);
    private void MoveFromAttributeValueNode();
    private string GetAttributeWithAtomizedName(string name, string namespaceURI);
    [ConditionalAttribute("DEBUG")]
private void ValidateInternalState();
}
internal class Microsoft.Data.OData.Atom.DefaultNamespaceCompensatingXmlWriter : XmlWriter {
    private XmlWriter writer;
    private string rootPrefix;
    public string XmlLang { get; }
    public WriteState WriteState { get; }
    public XmlSpace XmlSpace { get; }
    public XmlWriterSettings Settings { get; }
    internal DefaultNamespaceCompensatingXmlWriter(XmlWriter writer);
    public virtual string get_XmlLang();
    public virtual WriteState get_WriteState();
    public virtual XmlSpace get_XmlSpace();
    public virtual XmlWriterSettings get_Settings();
    public virtual void WriteNode(XmlReader reader, bool defattr);
    public virtual void WriteAttributes(XmlReader reader, bool defattr);
    public virtual string LookupPrefix(string ns);
    public virtual void Flush();
    public virtual void WriteNmToken(string name);
    public virtual void WriteBinHex(Byte[] buffer, int index, int count);
    public virtual void WriteRaw(string data);
    public virtual void WriteBase64(Byte[] buffer, int index, int count);
    public virtual void WriteRaw(Char[] buffer, int index, int count);
    public virtual void WriteChars(Char[] buffer, int index, int count);
    public virtual void WriteSurrogateCharEntity(char lowChar, char highChar);
    public virtual void WriteString(string text);
    public virtual void WriteStartAttribute(string prefix, string localName, string ns);
    public virtual void WriteEndAttribute();
    public virtual void WriteCData(string text);
    public virtual void WriteComment(string text);
    public virtual void WriteProcessingInstruction(string name, string text);
    public virtual void WriteEntityRef(string name);
    public virtual void WriteCharEntity(char ch);
    public virtual void WriteWhitespace(string ws);
    public virtual void WriteStartDocument();
    public virtual void WriteStartDocument(bool standalone);
    public virtual void WriteEndDocument();
    public virtual void WriteDocType(string name, string pubid, string sysid, string subset);
    public virtual void WriteStartElement(string prefix, string localName, string ns);
    public virtual void WriteEndElement();
    public virtual void WriteFullEndElement();
}
internal class Microsoft.Data.OData.Atom.EntryPropertiesValueCache : EpmValueCache {
    private List`1<ODataProperty> entryPropertiesCache;
    [CompilerGeneratedAttribute]
private static Func`2<ODataProperty, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    [CompilerGeneratedAttribute]
private static Func`2<ODataProperty, bool> CS$<>9__CachedAnonymousMethodDelegate3;
    internal IEnumerable`1<ODataProperty> EntryProperties { get; }
    internal IEnumerable`1<ODataProperty> EntryStreamProperties { get; }
    internal EntryPropertiesValueCache(ODataEntry entry);
    internal IEnumerable`1<ODataProperty> get_EntryProperties();
    internal IEnumerable`1<ODataProperty> get_EntryStreamProperties();
    [CompilerGeneratedAttribute]
private static bool <get_EntryProperties>b__0(ODataProperty p);
    [CompilerGeneratedAttribute]
private static bool <get_EntryStreamProperties>b__2(ODataProperty p);
}
internal class Microsoft.Data.OData.Atom.EpmCustomReader : EpmReader {
    private EpmCustomReader(IODataAtomReaderEntryState entryState, ODataAtomInputContext inputContext);
    internal static void ReadEntryEpm(IODataAtomReaderEntryState entryState, ODataAtomInputContext inputContext);
    private void ReadEntryEpm();
}
internal class Microsoft.Data.OData.Atom.EpmCustomReaderValueCache : object {
    private List`1<KeyValuePair`2<EntityPropertyMappingInfo, string>> customEpmValues;
    internal IEnumerable`1<KeyValuePair`2<EntityPropertyMappingInfo, string>> CustomEpmValues { get; }
    internal IEnumerable`1<KeyValuePair`2<EntityPropertyMappingInfo, string>> get_CustomEpmValues();
    internal bool Contains(EntityPropertyMappingInfo epmInfo);
    internal void Add(EntityPropertyMappingInfo epmInfo, string value);
}
internal class Microsoft.Data.OData.Atom.EpmCustomWriter : EpmWriter {
    private EpmCustomWriter(ODataAtomOutputContext atomOutputContext);
    internal static void WriteEntryEpm(XmlWriter writer, EpmTargetTree epmTargetTree, EntryPropertiesValueCache epmValueCache, IEdmEntityTypeReference entityType, ODataAtomOutputContext atomOutputContext);
    private static void WriteNamespaceDeclaration(XmlWriter writer, EpmTargetPathSegment targetSegment, String& alreadyDeclaredPrefix);
    private void WriteEntryEpm(XmlWriter writer, EpmTargetTree epmTargetTree, EntryPropertiesValueCache epmValueCache, IEdmEntityTypeReference entityType);
    private void WriteElementEpm(XmlWriter writer, EpmTargetPathSegment targetSegment, EntryPropertiesValueCache epmValueCache, IEdmEntityTypeReference entityType, String& alreadyDeclaredPrefix);
    private void WriteAttributeEpm(XmlWriter writer, EpmTargetPathSegment targetSegment, EntryPropertiesValueCache epmValueCache, IEdmEntityTypeReference entityType, String& alreadyDeclaredPrefix);
    private string GetEntryPropertyValueAsText(EpmTargetPathSegment targetSegment, EntryPropertiesValueCache epmValueCache, IEdmEntityTypeReference entityType);
}
internal abstract class Microsoft.Data.OData.Atom.EpmReader : object {
    private ODataAtomInputContext atomInputContext;
    private IODataAtomReaderEntryState entryState;
    protected IODataAtomReaderEntryState EntryState { get; }
    protected ODataVersion Version { get; }
    protected ODataMessageReaderSettings MessageReaderSettings { get; }
    protected EpmReader(IODataAtomReaderEntryState entryState, ODataAtomInputContext inputContext);
    protected IODataAtomReaderEntryState get_EntryState();
    protected ODataVersion get_Version();
    protected ODataMessageReaderSettings get_MessageReaderSettings();
    protected void SetEntryEpmValue(EntityPropertyMappingInfo epmInfo, object propertyValue);
    protected void SetEpmValue(ReadOnlyEnumerable`1<ODataProperty> targetList, IEdmTypeReference targetTypeReference, EntityPropertyMappingInfo epmInfo, object propertyValue);
    private void SetEpmValueForSegment(EntityPropertyMappingInfo epmInfo, int propertyValuePathIndex, IEdmStructuredTypeReference segmentStructuralTypeReference, ReadOnlyEnumerable`1<ODataProperty> existingProperties, object propertyValue);
    private void AddEpmPropertyValue(ReadOnlyEnumerable`1<ODataProperty> properties, string propertyName, object propertyValue, bool checkDuplicateEntryPropertyNames);
}
internal class Microsoft.Data.OData.Atom.EpmSyndicationReader : EpmReader {
    private EpmSyndicationReader(IODataAtomReaderEntryState entryState, ODataAtomInputContext inputContext);
    internal static void ReadEntryEpm(IODataAtomReaderEntryState entryState, ODataAtomInputContext inputContext);
    private void ReadEntryEpm();
    private void ReadPropertyValueSegment(EpmTargetPathSegment targetSegment, AtomEntryMetadata entryMetadata);
    private void ReadParentSegment(EpmTargetPathSegment targetSegment, AtomEntryMetadata entryMetadata);
    private void ReadPersonEpm(ReadOnlyEnumerable`1<ODataProperty> targetList, IEdmTypeReference targetTypeReference, EpmTargetPathSegment targetSegment, AtomPersonMetadata personMetadata);
    private void ReadTextConstructEpm(EpmTargetPathSegment targetSegment, AtomTextConstruct textConstruct);
}
internal class Microsoft.Data.OData.Atom.EpmSyndicationWriter : EpmWriter {
    private EpmTargetTree epmTargetTree;
    private AtomEntryMetadata entryMetadata;
    private EpmSyndicationWriter(EpmTargetTree epmTargetTree, ODataAtomOutputContext atomOutputContext);
    internal static AtomEntryMetadata WriteEntryEpm(EpmTargetTree epmTargetTree, EntryPropertiesValueCache epmValueCache, IEdmEntityTypeReference type, ODataAtomOutputContext atomOutputContext);
    private static AtomTextConstruct CreateAtomTextConstruct(string textValue, SyndicationTextContentKind contentKind);
    private static DateTimeOffset CreateDateTimeValue(object propertyValue, SyndicationItemProperty targetProperty, ODataWriterBehavior writerBehavior);
    private static string CreateDateTimeStringValue(object propertyValue, ODataWriterBehavior writerBehavior);
    private AtomEntryMetadata WriteEntryEpm(EntryPropertiesValueCache epmValueCache, IEdmEntityTypeReference entityType);
    private void WriteParentSegment(EpmTargetPathSegment targetSegment, object epmValueCache, IEdmTypeReference typeReference);
    private AtomPersonMetadata WritePersonEpm(EpmTargetPathSegment targetSegment, object epmValueCache, IEdmTypeReference typeReference);
    private string GetPropertyValueAsText(EpmTargetPathSegment targetSegment, object epmValueCache, IEdmTypeReference typeReference);
}
internal class Microsoft.Data.OData.Atom.EpmValueCache : object {
    private Dictionary`2<object, object> epmValuesCache;
    internal static IEnumerable`1<ODataProperty> GetComplexValueProperties(EpmValueCache epmValueCache, ODataComplexValue complexValue, bool writingContent);
    internal IEnumerable`1<ODataProperty> CacheComplexValueProperties(ODataComplexValue complexValue);
    private IEnumerable`1<ODataProperty> GetComplexValueProperties(ODataComplexValue complexValue, bool writingContent);
}
internal abstract class Microsoft.Data.OData.Atom.EpmWriter : object {
    private ODataAtomOutputContext atomOutputContext;
    protected ODataVersion Version { get; }
    protected ODataWriterBehavior WriterBehavior { get; }
    protected EpmWriter(ODataAtomOutputContext atomOutputContext);
    protected ODataVersion get_Version();
    protected ODataWriterBehavior get_WriterBehavior();
    protected object ReadEntryPropertyValue(EntityPropertyMappingInfo epmInfo, EntryPropertiesValueCache epmValueCache, IEdmEntityTypeReference entityType);
    private object ReadComplexPropertyValue(EntityPropertyMappingInfo epmInfo, ODataComplexValue complexValue, EpmValueCache epmValueCache, int sourceSegmentIndex, IEdmComplexTypeReference complexType);
    private object ReadPropertyValue(EntityPropertyMappingInfo epmInfo, IEnumerable`1<ODataProperty> cachedProperties, int sourceSegmentIndex, IEdmStructuredTypeReference structuredTypeReference, EpmValueCache epmValueCache);
}
internal static class Microsoft.Data.OData.Atom.EpmWriterUtils : object {
    internal static string GetPropertyValueAsText(object propertyValue);
    internal static EntityPropertyMappingAttribute GetEntityPropertyMapping(EpmSourcePathSegment epmParentSourcePathSegment, string propertyName);
    internal static EntityPropertyMappingAttribute GetEntityPropertyMapping(EpmSourcePathSegment epmSourcePathSegment);
    internal static EpmSourcePathSegment GetPropertySourcePathSegment(EpmSourcePathSegment epmParentSourcePathSegment, string propertyName);
    internal static void CacheEpmProperties(EntryPropertiesValueCache propertyValueCache, EpmSourceTree sourceTree);
    private static void CacheEpmSourcePathSegments(EpmValueCache valueCache, List`1<EpmSourcePathSegment> segments, IEnumerable`1<ODataProperty> properties);
    private static bool TryGetPropertyValue(IEnumerable`1<ODataProperty> properties, string propertyName, T& propertyValue);
}
[ExtensionAttribute]
public static class Microsoft.Data.OData.Atom.ExtensionMethods : object {
    [ExtensionAttribute]
public static AtomEntryMetadata Atom(ODataEntry entry);
    [ExtensionAttribute]
public static AtomFeedMetadata Atom(ODataFeed feed);
    [ExtensionAttribute]
public static AtomLinkMetadata Atom(ODataNavigationLink navigationLink);
    [ExtensionAttribute]
public static AtomWorkspaceMetadata Atom(ODataWorkspace workspace);
    [ExtensionAttribute]
public static AtomResourceCollectionMetadata Atom(ODataResourceCollectionInfo collection);
    [ExtensionAttribute]
public static AtomLinkMetadata Atom(ODataAssociationLink associationLink);
}
internal interface Microsoft.Data.OData.Atom.IODataAtomReaderEntryState {
    public ODataEntry Entry { get; }
    public IEdmEntityType EntityType { get; }
    public bool EntryElementEmpty { get; public set; }
    public bool HasReadLink { get; public set; }
    public bool HasEditLink { get; public set; }
    public bool HasEditMediaLink { get; public set; }
    public bool HasId { get; public set; }
    public bool HasContent { get; public set; }
    public bool HasTypeNameCategory { get; public set; }
    public bool HasProperties { get; public set; }
    public Nullable`1<bool> MediaLinkEntry { get; public set; }
    public ODataAtomReaderNavigationLinkDescriptor FirstNavigationLinkDescriptor { get; public set; }
    public DuplicatePropertyNamesChecker DuplicatePropertyNamesChecker { get; }
    public ODataEntityPropertyMappingCache CachedEpm { get; }
    public AtomEntryMetadata AtomEntryMetadata { get; }
    public EpmCustomReaderValueCache EpmCustomReaderValueCache { get; }
    public abstract virtual ODataEntry get_Entry();
    public abstract virtual IEdmEntityType get_EntityType();
    public abstract virtual bool get_EntryElementEmpty();
    public abstract virtual void set_EntryElementEmpty(bool value);
    public abstract virtual bool get_HasReadLink();
    public abstract virtual void set_HasReadLink(bool value);
    public abstract virtual bool get_HasEditLink();
    public abstract virtual void set_HasEditLink(bool value);
    public abstract virtual bool get_HasEditMediaLink();
    public abstract virtual void set_HasEditMediaLink(bool value);
    public abstract virtual bool get_HasId();
    public abstract virtual void set_HasId(bool value);
    public abstract virtual bool get_HasContent();
    public abstract virtual void set_HasContent(bool value);
    public abstract virtual bool get_HasTypeNameCategory();
    public abstract virtual void set_HasTypeNameCategory(bool value);
    public abstract virtual bool get_HasProperties();
    public abstract virtual void set_HasProperties(bool value);
    public abstract virtual Nullable`1<bool> get_MediaLinkEntry();
    public abstract virtual void set_MediaLinkEntry(Nullable`1<bool> value);
    public abstract virtual ODataAtomReaderNavigationLinkDescriptor get_FirstNavigationLinkDescriptor();
    public abstract virtual void set_FirstNavigationLinkDescriptor(ODataAtomReaderNavigationLinkDescriptor value);
    public abstract virtual DuplicatePropertyNamesChecker get_DuplicatePropertyNamesChecker();
    public abstract virtual ODataEntityPropertyMappingCache get_CachedEpm();
    public abstract virtual AtomEntryMetadata get_AtomEntryMetadata();
    public abstract virtual EpmCustomReaderValueCache get_EpmCustomReaderValueCache();
}
internal interface Microsoft.Data.OData.Atom.IODataAtomReaderFeedState {
    public ODataFeed Feed { get; }
    public bool FeedElementEmpty { get; public set; }
    public AtomFeedMetadata AtomFeedMetadata { get; }
    public bool HasCount { get; public set; }
    public bool HasNextPageLink { get; public set; }
    public bool HasReadLink { get; public set; }
    public bool HasDeltaLink { get; public set; }
    public abstract virtual ODataFeed get_Feed();
    public abstract virtual bool get_FeedElementEmpty();
    public abstract virtual void set_FeedElementEmpty(bool value);
    public abstract virtual AtomFeedMetadata get_AtomFeedMetadata();
    public abstract virtual bool get_HasCount();
    public abstract virtual void set_HasCount(bool value);
    public abstract virtual bool get_HasNextPageLink();
    public abstract virtual void set_HasNextPageLink(bool value);
    public abstract virtual bool get_HasReadLink();
    public abstract virtual void set_HasReadLink(bool value);
    public abstract virtual bool get_HasDeltaLink();
    public abstract virtual void set_HasDeltaLink(bool value);
}
internal class Microsoft.Data.OData.Atom.ODataAtomAnnotationReader : object {
    private ODataAtomInputContext inputContext;
    private string odataMetadataNamespace;
    private string attributeElementName;
    private ODataAtomPropertyAndValueDeserializer propertyAndValueDeserializer;
    internal ODataAtomAnnotationReader(ODataAtomInputContext inputContext, ODataAtomPropertyAndValueDeserializer propertyAndValueDeserializer);
    internal bool TryReadAnnotation(AtomInstanceAnnotation& annotation);
}
internal class Microsoft.Data.OData.Atom.ODataAtomCollectionDeserializer : ODataAtomPropertyAndValueDeserializer {
    private DuplicatePropertyNamesChecker duplicatePropertyNamesChecker;
    internal ODataAtomCollectionDeserializer(ODataAtomInputContext atomInputContext);
    internal ODataCollectionStart ReadCollectionStart(Boolean& isCollectionElementEmpty);
    internal void ReadCollectionEnd();
    internal object ReadCollectionItem(IEdmTypeReference expectedItemType, CollectionWithoutExpectedTypeValidator collectionValidator);
    internal void SkipToElementInODataNamespace();
}
internal class Microsoft.Data.OData.Atom.ODataAtomCollectionReader : ODataCollectionReaderCore {
    private ODataAtomInputContext atomInputContext;
    private ODataAtomCollectionDeserializer atomCollectionDeserializer;
    internal ODataAtomCollectionReader(ODataAtomInputContext atomInputContext, IEdmTypeReference expectedItemTypeReference);
    protected virtual bool ReadAtStartImplementation();
    protected virtual bool ReadAtCollectionStartImplementation();
    protected virtual bool ReadAtValueImplementation();
    protected virtual bool ReadAtCollectionEndImplementation();
}
internal class Microsoft.Data.OData.Atom.ODataAtomCollectionSerializer : ODataAtomPropertyAndValueSerializer {
    internal ODataAtomCollectionSerializer(ODataAtomOutputContext atomOutputContext);
}
internal class Microsoft.Data.OData.Atom.ODataAtomCollectionWriter : ODataCollectionWriterCore {
    private ODataAtomOutputContext atomOutputContext;
    private ODataAtomCollectionSerializer atomCollectionSerializer;
    internal ODataAtomCollectionWriter(ODataAtomOutputContext atomOutputContext, IEdmTypeReference itemTypeReference);
    protected virtual void VerifyNotDisposed();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void StartPayload();
    protected virtual void EndPayload();
    protected virtual void StartCollection(ODataCollectionStart collectionStart);
    protected virtual void EndCollection();
    protected virtual void WriteCollectionItem(object item, IEdmTypeReference expectedItemType);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Atom.ODataAtomConvert : object {
    private static TimeSpan zeroOffset;
    private static ODataAtomConvert();
    internal static string ToString(bool b);
    internal static string ToString(byte b);
    internal static string ToString(decimal d);
    [ExtensionAttribute]
internal static string ToString(DateTime dt);
    internal static string ToString(DateTimeOffset dateTime);
    internal static string ToAtomString(DateTimeOffset dateTime);
    [ExtensionAttribute]
internal static string ToString(TimeSpan ts);
    [ExtensionAttribute]
internal static string ToString(double d);
    [ExtensionAttribute]
internal static string ToString(short i);
    [ExtensionAttribute]
internal static string ToString(int i);
    [ExtensionAttribute]
internal static string ToString(long i);
    [ExtensionAttribute]
internal static string ToString(sbyte sb);
    [ExtensionAttribute]
internal static string ToString(Byte[] bytes);
    [ExtensionAttribute]
internal static string ToString(float s);
    [ExtensionAttribute]
internal static string ToString(Guid guid);
}
internal abstract class Microsoft.Data.OData.Atom.ODataAtomDeserializer : ODataDeserializer {
    private ODataAtomInputContext atomInputContext;
    internal BufferingXmlReader XmlReader { get; }
    protected ODataAtomInputContext AtomInputContext { get; }
    protected ODataAtomDeserializer(ODataAtomInputContext atomInputContext);
    internal BufferingXmlReader get_XmlReader();
    protected ODataAtomInputContext get_AtomInputContext();
    internal void ReadPayloadStart();
    internal void ReadPayloadEnd();
    internal Uri ProcessUriFromPayload(string uriFromPayload, Uri xmlBaseUri);
    internal Uri ProcessUriFromPayload(string uriFromPayload, Uri xmlBaseUri, bool makeAbsolute);
    [ConditionalAttribute("DEBUG")]
internal void AssertXmlCondition(XmlNodeType[] allowedNodeTypes);
    [ConditionalAttribute("DEBUG")]
internal void AssertXmlCondition(bool allowEmptyElement, XmlNodeType[] allowedNodeTypes);
}
internal enum Microsoft.Data.OData.Atom.ODataAtomDeserializerExpandedNavigationLinkContent : Enum {
    public int value__;
    public static ODataAtomDeserializerExpandedNavigationLinkContent None;
    public static ODataAtomDeserializerExpandedNavigationLinkContent Empty;
    public static ODataAtomDeserializerExpandedNavigationLinkContent Entry;
    public static ODataAtomDeserializerExpandedNavigationLinkContent Feed;
}
internal class Microsoft.Data.OData.Atom.ODataAtomEntityReferenceLinkDeserializer : ODataAtomDeserializer {
    private string ODataLinksElementName;
    private string ODataCountElementName;
    private string ODataNextElementName;
    private string ODataUriElementName;
    internal ODataAtomEntityReferenceLinkDeserializer(ODataAtomInputContext atomInputContext);
    internal ODataEntityReferenceLinks ReadEntityReferenceLinks();
    internal ODataEntityReferenceLink ReadEntityReferenceLink();
    private static void VerifyEntityReferenceLinksElementNotFound(DuplicateEntityReferenceLinksElementBitMask& elementsFoundBitField, DuplicateEntityReferenceLinksElementBitMask elementFoundBitMask, string elementNamespace, string elementName);
    private ODataEntityReferenceLinks ReadLinksElement();
    private ODataEntityReferenceLink ReadUriElement();
}
internal class Microsoft.Data.OData.Atom.ODataAtomEntityReferenceLinkSerializer : ODataAtomSerializer {
    internal ODataAtomEntityReferenceLinkSerializer(ODataAtomOutputContext atomOutputContext);
    internal void WriteEntityReferenceLink(ODataEntityReferenceLink entityReferenceLink);
    internal void WriteEntityReferenceLinks(ODataEntityReferenceLinks entityReferenceLinks);
    private void WriteEntityReferenceLink(ODataEntityReferenceLink entityReferenceLink, bool isTopLevel);
}
internal class Microsoft.Data.OData.Atom.ODataAtomEntryAndFeedDeserializer : ODataAtomPropertyAndValueDeserializer {
    private string AtomNamespace;
    private string AtomEntryElementName;
    private string AtomCategoryElementName;
    private string AtomCategoryTermAttributeName;
    private string AtomCategorySchemeAttributeName;
    private string AtomContentElementName;
    private string AtomLinkElementName;
    private string AtomPropertiesElementName;
    private string AtomFeedElementName;
    private string AtomIdElementName;
    private string AtomLinkRelationAttributeName;
    private string AtomLinkHrefAttributeName;
    private string MediaLinkEntryContentSourceAttributeName;
    private string ODataETagAttributeName;
    private string ODataCountElementName;
    private string ODataInlineElementName;
    private string ODataActionElementName;
    private string ODataFunctionElementName;
    private string ODataOperationMetadataAttribute;
    private string ODataOperationTitleAttribute;
    private string ODataOperationTargetAttribute;
    private ODataAtomAnnotationReader atomAnnotationReader;
    private ODataAtomEntryMetadataDeserializer entryMetadataDeserializer;
    private ODataAtomFeedMetadataDeserializer feedMetadataDeserializer;
    private ODataAtomEntryMetadataDeserializer EntryMetadataDeserializer { get; }
    private ODataAtomFeedMetadataDeserializer FeedMetadataDeserializer { get; }
    private bool ReadAtomMetadata { get; }
    internal ODataAtomEntryAndFeedDeserializer(ODataAtomInputContext atomInputContext);
    private ODataAtomEntryMetadataDeserializer get_EntryMetadataDeserializer();
    private ODataAtomFeedMetadataDeserializer get_FeedMetadataDeserializer();
    private bool get_ReadAtomMetadata();
    internal static void EnsureMediaResource(IODataAtomReaderEntryState entryState, bool validateMLEPresence);
    internal void VerifyEntryStart();
    internal void ReadEntryStart(ODataEntry entry);
    internal ODataAtomReaderNavigationLinkDescriptor ReadEntryContent(IODataAtomReaderEntryState entryState);
    internal void ReadEntryEnd();
    internal void ReadFeedStart();
    internal bool ReadFeedContent(IODataAtomReaderFeedState feedState, bool isExpandedLinkContent);
    internal void ReadFeedEnd();
    internal ODataAtomDeserializerExpandedNavigationLinkContent ReadNavigationLinkContentBeforeExpansion();
    internal bool IsReaderOnInlineEndElement();
    internal void SkipNavigationLinkContentOnExpansion();
    internal void ReadNavigationLinkContentAfterExpansion(bool emptyInline);
    internal void ReadNavigationLinkEnd();
    internal string FindTypeName();
    private ODataStreamReferenceValue GetNewOrExistingStreamPropertyValue(IODataAtomReaderEntryState entryState, string streamPropertyName);
    private void ValidateDuplicateElement(bool duplicateElementFound);
    private ODataAtomReaderNavigationLinkDescriptor ReadAtomElementInEntry(IODataAtomReaderEntryState entryState);
    private void ReadAtomContentElement(IODataAtomReaderEntryState entryState);
    private void ReadAtomContentAttributes(String& contentType, String& contentSource);
    private void ReadAtomIdElementInEntry(IODataAtomReaderEntryState entryState);
    private ODataAtomReaderNavigationLinkDescriptor ReadAtomLinkElementInEntry(IODataAtomReaderEntryState entryState);
    private bool TryReadAtomStandardRelationLinkInEntry(IODataAtomReaderEntryState entryState, string linkRelation, string linkHRef);
    private ODataAtomReaderNavigationLinkDescriptor TryReadNavigationLinkInEntry(IODataAtomReaderEntryState entryState, string linkRelation, string linkHRef);
    private bool TryReadStreamPropertyLinkInEntry(IODataAtomReaderEntryState entryState, string linkRelation, string linkHRef, Boolean& isStreamPropertyLink);
    private bool ReadStreamPropertyLinkInEntry(IODataAtomReaderEntryState entryState, string streamPropertyName, string linkRelation, string linkHRef, bool editLink);
    private bool TryReadAssociationLinkInEntry(IODataAtomReaderEntryState entryState, string linkRelation, string linkHRef);
    private bool TryReadOperation(IODataAtomReaderEntryState entryState);
    private bool ReadAtomElementInFeed(IODataAtomReaderFeedState feedState, bool isExpandedLinkContent);
    private bool ReadAtomStandardRelationLinkInFeed(IODataAtomReaderFeedState feedState, string linkRelation, string linkHRef, bool isExpandedLinkContent);
    private void ReadLinkMetadataIfRequired(string linkRelation, string linkHRef, Action`1<AtomLinkMetadata> setFeedLink);
    private void ReadAtomLinkRelationAndHRef(String& linkRelation, String& linkHRef);
    private bool ReadNavigationLinkContent();
    private ODataAtomDeserializerExpandedNavigationLinkContent ReadInlineElementContent();
    private string VerifyAtomContentMediaType(string contentType);
}
internal class Microsoft.Data.OData.Atom.ODataAtomEntryAndFeedSerializer : ODataAtomPropertyAndValueSerializer {
    private ODataAtomEntryMetadataSerializer atomEntryMetadataSerializer;
    private ODataAtomFeedMetadataSerializer atomFeedMetadataSerializer;
    [CompilerGeneratedAttribute]
private static Func`2<AtomFeedMetadata, AtomLinkMetadata> CS$<>9__CachedAnonymousMethodDelegate1;
    [CompilerGeneratedAttribute]
private static Func`2<AtomFeedMetadata, AtomLinkMetadata> CS$<>9__CachedAnonymousMethodDelegate4;
    [CompilerGeneratedAttribute]
private static Func`2<AtomLinkMetadata, bool> CS$<>9__CachedAnonymousMethodDelegate5;
    internal ODataAtomEntryAndFeedSerializer(ODataAtomOutputContext atomOutputContext);
    internal void WriteEntryPropertiesStart();
    internal void WriteEntryPropertiesEnd();
    internal void WriteEntryTypeName(string typeName, AtomEntryMetadata entryMetadata);
    internal void WriteEntryMetadata(AtomEntryMetadata entryMetadata, AtomEntryMetadata epmEntryMetadata, string updatedTime);
    internal void WriteEntryId(string entryId);
    internal void WriteEntryReadLink(Uri readLink, AtomEntryMetadata entryMetadata);
    internal void WriteEntryEditLink(Uri editLink, AtomEntryMetadata entryMetadata);
    internal void WriteEntryMediaEditLink(ODataStreamReferenceValue mediaResource);
    internal void WriteAssociationLink(ODataAssociationLink associationLink, IEdmEntityType owningType, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, ProjectedPropertiesAnnotation projectedProperties);
    internal void WriteNavigationLinkStart(ODataNavigationLink navigationLink, Uri navigationLinkUrlOverride);
    internal void WriteFeedMetadata(ODataFeed feed, string updatedTime, Boolean& authorWritten);
    internal void WriteFeedDefaultAuthor();
    internal void WriteFeedNextPageLink(ODataFeed feed);
    internal void WriteFeedDeltaLink(ODataFeed feed);
    internal void WriteFeedLink(ODataFeed feed, string relation, Uri href, Func`2<AtomFeedMetadata, AtomLinkMetadata> getLinkMetadata);
    internal void WriteStreamProperty(ODataProperty streamProperty, IEdmEntityType owningType, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, ProjectedPropertiesAnnotation projectedProperties);
    internal void WriteOperation(ODataOperation operation);
    private void WriteReadOrEditLink(Uri link, AtomLinkMetadata linkMetadata, string linkRelation);
    [CompilerGeneratedAttribute]
private static AtomLinkMetadata <WriteFeedNextPageLink>b__0(AtomFeedMetadata feedMetadata);
    [CompilerGeneratedAttribute]
private static AtomLinkMetadata <WriteFeedDeltaLink>b__2(AtomFeedMetadata feedMetadata);
    [CompilerGeneratedAttribute]
private static bool <WriteFeedDeltaLink>b__3(AtomLinkMetadata link);
}
internal class Microsoft.Data.OData.Atom.ODataAtomEntryMetadataDeserializer : ODataAtomEpmDeserializer {
    private string EmptyNamespace;
    private string AtomNamespace;
    private ODataAtomFeedMetadataDeserializer sourceMetadataDeserializer;
    [CompilerGeneratedAttribute]
private static Func`2<EpmTargetPathSegment, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    private ODataAtomFeedMetadataDeserializer SourceMetadataDeserializer { get; }
    internal ODataAtomEntryMetadataDeserializer(ODataAtomInputContext atomInputContext);
    private ODataAtomFeedMetadataDeserializer get_SourceMetadataDeserializer();
    internal void ReadAtomElementInEntryContent(IODataAtomReaderEntryState entryState);
    internal AtomLinkMetadata ReadAtomLinkElementInEntryContent(string relation, string hrefStringValue);
    internal void ReadAtomCategoryElementInEntryContent(IODataAtomReaderEntryState entryState);
    internal AtomCategoryMetadata ReadAtomCategoryElement();
    internal AtomFeedMetadata ReadAtomSourceInEntryContent();
    private void ReadAuthorElement(IODataAtomReaderEntryState entryState, EpmTargetPathSegment epmTargetPathSegment);
    private void ReadContributorElement(IODataAtomReaderEntryState entryState, EpmTargetPathSegment epmTargetPathSegment);
    private bool ShouldReadCollectionElement(bool someAlreadyExist);
    private bool ShouldReadSingletonElement(bool alreadyExists);
    [CompilerGeneratedAttribute]
private static bool <ReadAtomCategoryElementInEntryContent>b__0(EpmTargetPathSegment segment);
}
internal class Microsoft.Data.OData.Atom.ODataAtomEntryMetadataSerializer : ODataAtomMetadataSerializer {
    private ODataAtomFeedMetadataSerializer sourceMetadataSerializer;
    private ODataAtomFeedMetadataSerializer SourceMetadataSerializer { get; }
    internal ODataAtomEntryMetadataSerializer(ODataAtomOutputContext atomOutputContext);
    private ODataAtomFeedMetadataSerializer get_SourceMetadataSerializer();
    internal void WriteEntryMetadata(AtomEntryMetadata entryMetadata, AtomEntryMetadata epmEntryMetadata, string updatedTime);
}
internal abstract class Microsoft.Data.OData.Atom.ODataAtomEpmDeserializer : ODataAtomMetadataDeserializer {
    internal ODataAtomEpmDeserializer(ODataAtomInputContext atomInputContext);
    internal bool TryReadExtensionElementInEntryContent(IODataAtomReaderEntryState entryState);
    private bool TryReadCustomEpmElement(IODataAtomReaderEntryState entryState, EpmTargetPathSegment epmTargetPathSegment);
    private void ReadCustomEpmAttribute(IODataAtomReaderEntryState entryState, EpmTargetPathSegment epmTargetPathSegmentForElement);
}
internal class Microsoft.Data.OData.Atom.ODataAtomErrorDeserializer : ODataAtomDeserializer {
    internal ODataAtomErrorDeserializer(ODataAtomInputContext atomInputContext);
    internal static ODataError ReadErrorElement(BufferingXmlReader xmlReader, int maxInnerErrorDepth);
    internal ODataError ReadTopLevelError();
    private static void VerifyErrorElementNotFound(DuplicateErrorElementPropertyBitMask& elementsFoundBitField, DuplicateErrorElementPropertyBitMask elementFoundBitMask, string elementName);
    private static void VerifyInnerErrorElementNotFound(DuplicateInnerErrorElementPropertyBitMask& elementsFoundBitField, DuplicateInnerErrorElementPropertyBitMask elementFoundBitMask, string elementName);
    private static ODataInnerError ReadInnerErrorElement(BufferingXmlReader xmlReader, int recursionDepth, int maxInnerErrorDepth);
}
internal class Microsoft.Data.OData.Atom.ODataAtomFeedMetadataDeserializer : ODataAtomMetadataDeserializer {
    private string EmptyNamespace;
    [CompilerGeneratedAttribute]
private bool <InSourceElement>k__BackingField;
    private bool InSourceElement { get; private set; }
    internal ODataAtomFeedMetadataDeserializer(ODataAtomInputContext atomInputContext, bool inSourceElement);
    [CompilerGeneratedAttribute]
private bool get_InSourceElement();
    [CompilerGeneratedAttribute]
private void set_InSourceElement(bool value);
    internal void ReadAtomElementAsFeedMetadata(AtomFeedMetadata atomFeedMetadata);
    internal AtomLinkMetadata ReadAtomLinkElementInFeed(string relation, string hrefStringValue);
    private void ReadAuthorElement(AtomFeedMetadata atomFeedMetadata);
    private void ReadCategoryElement(AtomFeedMetadata atomFeedMetadata);
    private void ReadContributorElement(AtomFeedMetadata atomFeedMetadata);
    private void ReadGeneratorElement(AtomFeedMetadata atomFeedMetadata);
    private void ReadIconElement(AtomFeedMetadata atomFeedMetadata);
    private void ReadIdElementAsSourceId(AtomFeedMetadata atomFeedMetadata);
    private void ReadLinkElementIntoLinksCollection(AtomFeedMetadata atomFeedMetadata);
    private void ReadLogoElement(AtomFeedMetadata atomFeedMetadata);
    private void ReadRightsElement(AtomFeedMetadata atomFeedMetadata);
    private void ReadSubtitleElement(AtomFeedMetadata atomFeedMetadata);
    private void ReadTitleElement(AtomFeedMetadata atomFeedMetadata);
    private void ReadUpdatedElement(AtomFeedMetadata atomFeedMetadata);
    private Uri ReadUriValuedElement();
    private void VerifyNotPreviouslyDefined(object metadataValue);
}
internal class Microsoft.Data.OData.Atom.ODataAtomFeedMetadataSerializer : ODataAtomMetadataSerializer {
    internal ODataAtomFeedMetadataSerializer(ODataAtomOutputContext atomOutputContext);
    internal void WriteFeedMetadata(AtomFeedMetadata feedMetadata, ODataFeed feed, string updatedTime, Boolean& authorWritten);
}
internal class Microsoft.Data.OData.Atom.ODataAtomFormat : ODataFormat {
    public virtual string ToString();
    internal virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataResponseMessage responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataRequestMessage requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual ODataInputContext CreateInputContext(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal virtual ODataOutputContext CreateOutputContext(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    internal virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataResponseMessageAsync responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataRequestMessageAsync requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual Task`1<ODataInputContext> CreateInputContextAsync(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal virtual Task`1<ODataOutputContext> CreateOutputContextAsync(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    private IEnumerable`1<ODataPayloadKind> DetectPayloadKindImplementation(Stream messageStream, bool readingResponse, bool synchronous, ODataPayloadKindDetectionInfo detectionInfo);
}
internal class Microsoft.Data.OData.Atom.ODataAtomInputContext : ODataInputContext {
    private XmlReader baseXmlReader;
    private BufferingXmlReader xmlReader;
    private Stack`1<BufferingXmlReader> xmlCustomizationReaders;
    internal BufferingXmlReader XmlReader { get; }
    internal ODataAtomInputContext(ODataFormat format, Stream messageStream, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver);
    internal BufferingXmlReader get_XmlReader();
    internal virtual ODataReader CreateFeedReader(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    internal virtual Task`1<ODataReader> CreateFeedReaderAsync(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    internal virtual ODataReader CreateEntryReader(IEdmEntitySet entitySet, IEdmEntityType expectedEntityType);
    internal virtual Task`1<ODataReader> CreateEntryReaderAsync(IEdmEntitySet entitySet, IEdmEntityType expectedEntityType);
    internal virtual ODataCollectionReader CreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    internal virtual Task`1<ODataCollectionReader> CreateCollectionReaderAsync(IEdmTypeReference expectedItemTypeReference);
    internal virtual ODataWorkspace ReadServiceDocument();
    internal virtual Task`1<ODataWorkspace> ReadServiceDocumentAsync();
    internal virtual ODataProperty ReadProperty(IEdmStructuralProperty property, IEdmTypeReference expectedPropertyTypeReference);
    internal virtual Task`1<ODataProperty> ReadPropertyAsync(IEdmStructuralProperty property, IEdmTypeReference expectedPropertyTypeReference);
    internal virtual ODataError ReadError();
    internal virtual Task`1<ODataError> ReadErrorAsync();
    internal virtual ODataEntityReferenceLinks ReadEntityReferenceLinks(IEdmNavigationProperty navigationProperty);
    internal virtual Task`1<ODataEntityReferenceLinks> ReadEntityReferenceLinksAsync(IEdmNavigationProperty navigationProperty);
    internal virtual ODataEntityReferenceLink ReadEntityReferenceLink(IEdmNavigationProperty navigationProperty);
    internal virtual Task`1<ODataEntityReferenceLink> ReadEntityReferenceLinkAsync(IEdmNavigationProperty navigationProperty);
    internal IEnumerable`1<ODataPayloadKind> DetectPayloadKind(ODataPayloadKindDetectionInfo detectionInfo);
    internal void InitializeReaderCustomization();
    internal void PushCustomReader(XmlReader customXmlReader, Uri xmlBaseUri);
    internal BufferingXmlReader PopCustomReader();
    protected virtual void DisposeImplementation();
    private ODataReader CreateFeedReaderImplementation(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    private ODataReader CreateEntryReaderImplementation(IEdmEntitySet entitySet, IEdmEntityType expectedEntityType);
    private ODataCollectionReader CreateCollectionReaderImplementation(IEdmTypeReference expectedItemTypeReference);
    private ODataProperty ReadPropertyImplementation(IEdmStructuralProperty property, IEdmTypeReference expectedPropertyTypeReference);
    private ODataWorkspace ReadServiceDocumentImplementation();
    private ODataError ReadErrorImplementation();
    private ODataEntityReferenceLinks ReadEntityReferenceLinksImplementation();
    private ODataEntityReferenceLink ReadEntityReferenceLinkImplementation();
    [CompilerGeneratedAttribute]
private ODataWorkspace <ReadServiceDocumentAsync>b__9();
    [CompilerGeneratedAttribute]
private ODataError <ReadErrorAsync>b__d();
}
internal abstract class Microsoft.Data.OData.Atom.ODataAtomMetadataDeserializer : ODataAtomDeserializer {
    private string EmptyNamespace;
    private string AtomNamespace;
    protected bool ReadAtomMetadata { get; }
    internal ODataAtomMetadataDeserializer(ODataAtomInputContext atomInputContext);
    protected bool get_ReadAtomMetadata();
    protected AtomPersonMetadata ReadAtomPersonConstruct(EpmTargetPathSegment epmTargetPathSegment);
    protected Nullable`1<DateTimeOffset> ReadAtomDateConstruct();
    protected string ReadAtomDateConstructAsString();
    protected AtomTextConstruct ReadAtomTextConstruct();
    protected string ReadElementStringValue();
    protected AtomTextConstruct ReadTitleElement();
    protected bool ShouldReadElement(EpmTargetPathSegment parentSegment, string segmentName, EpmTargetPathSegment& subSegment);
}
internal abstract class Microsoft.Data.OData.Atom.ODataAtomMetadataSerializer : ODataAtomSerializer {
    internal ODataAtomMetadataSerializer(ODataAtomOutputContext atomOutputContext);
    internal void WriteTextConstruct(string prefix, string localName, string ns, AtomTextConstruct textConstruct);
    internal void WriteCategory(AtomCategoryMetadata category);
    internal void WriteCategory(string atomPrefix, string term, string scheme, string label);
    internal void WriteEmptyAuthor();
    internal void WritePersonMetadata(AtomPersonMetadata personMetadata);
    internal void WriteAtomLink(AtomLinkMetadata linkMetadata, string etag);
    internal void WriteAtomLinkAttributes(AtomLinkMetadata linkMetadata, string etag);
    private void WriteAtomLinkMetadataAttributes(string relation, string href, string hrefLang, string title, string mediaType, Nullable`1<int> length);
}
internal class Microsoft.Data.OData.Atom.ODataAtomOutputContext : ODataOutputContext {
    private AtomAndVerboseJsonTypeNameOracle typeNameOracle;
    private Stream messageOutputStream;
    private AsyncBufferedStream asynchronousOutputStream;
    private XmlWriter xmlRootWriter;
    private XmlWriter xmlWriter;
    private Stack`1<XmlWriter> xmlCustomizationWriters;
    private IODataOutputInStreamErrorListener outputInStreamErrorListener;
    internal XmlWriter XmlWriter { get; }
    internal AtomAndVerboseJsonTypeNameOracle TypeNameOracle { get; }
    internal ODataAtomOutputContext(ODataFormat format, Stream messageStream, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver);
    internal XmlWriter get_XmlWriter();
    internal AtomAndVerboseJsonTypeNameOracle get_TypeNameOracle();
    internal void VerifyNotDisposed();
    internal void Flush();
    internal Task FlushAsync();
    internal virtual void WriteInStreamError(ODataError error, bool includeDebugInformation);
    internal virtual Task WriteInStreamErrorAsync(ODataError error, bool includeDebugInformation);
    internal virtual ODataWriter CreateODataFeedWriter(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual Task`1<ODataWriter> CreateODataFeedWriterAsync(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual ODataWriter CreateODataEntryWriter(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual Task`1<ODataWriter> CreateODataEntryWriterAsync(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual ODataCollectionWriter CreateODataCollectionWriter(IEdmTypeReference itemTypeReference);
    internal virtual Task`1<ODataCollectionWriter> CreateODataCollectionWriterAsync(IEdmTypeReference itemTypeReference);
    internal virtual void WriteServiceDocument(ODataWorkspace defaultWorkspace);
    internal virtual Task WriteServiceDocumentAsync(ODataWorkspace defaultWorkspace);
    internal virtual void WriteProperty(ODataProperty property);
    internal virtual Task WritePropertyAsync(ODataProperty property);
    internal virtual void WriteError(ODataError error, bool includeDebugInformation);
    internal virtual Task WriteErrorAsync(ODataError error, bool includeDebugInformation);
    internal virtual void WriteEntityReferenceLinks(ODataEntityReferenceLinks links, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual Task WriteEntityReferenceLinksAsync(ODataEntityReferenceLinks links, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual void WriteEntityReferenceLink(ODataEntityReferenceLink link, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink link, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal void InitializeWriterCustomization();
    internal void PushCustomWriter(XmlWriter customXmlWriter);
    internal XmlWriter PopCustomWriter();
    protected virtual void Dispose(bool disposing);
    private void WriteInStreamErrorImplementation(ODataError error, bool includeDebugInformation);
    private ODataWriter CreateODataFeedWriterImplementation(IEdmEntitySet entitySet, IEdmEntityType entityType);
    private ODataWriter CreateODataEntryWriterImplementation(IEdmEntitySet entitySet, IEdmEntityType entityType);
    private ODataCollectionWriter CreateODataCollectionWriterImplementation(IEdmTypeReference itemTypeReference);
    private void WritePropertyImplementation(ODataProperty property);
    private void WriteServiceDocumentImplementation(ODataWorkspace defaultWorkspace);
    private void WriteErrorImplementation(ODataError error, bool includeDebugInformation);
    private void WriteEntityReferenceLinksImplementation(ODataEntityReferenceLinks links);
    private void WriteEntityReferenceLinkImplementation(ODataEntityReferenceLink link);
    [CompilerGeneratedAttribute]
private Task <FlushAsync>b__0();
    [CompilerGeneratedAttribute]
private Task <FlushAsync>b__1(Task asyncBufferedStreamFlushTask);
}
internal class Microsoft.Data.OData.Atom.ODataAtomPayloadKindDetectionDeserializer : ODataAtomPropertyAndValueDeserializer {
    [CompilerGeneratedAttribute]
private static Func`2<ODataPayloadKind, bool> CS$<>9__CachedAnonymousMethodDelegate2;
    internal ODataAtomPayloadKindDetectionDeserializer(ODataAtomInputContext atomInputContext);
    internal IEnumerable`1<ODataPayloadKind> DetectPayloadKind(ODataPayloadKindDetectionInfo detectionInfo);
    private IEnumerable`1<ODataPayloadKind> DetectPropertyOrCollectionPayloadKind();
    [CompilerGeneratedAttribute]
private static bool <DetectPayloadKind>b__1(ODataPayloadKind k);
}
internal class Microsoft.Data.OData.Atom.ODataAtomPropertyAndValueDeserializer : ODataAtomDeserializer {
    protected string EmptyNamespace;
    protected string ODataNullAttributeName;
    protected string ODataCollectionItemElementName;
    protected string AtomTypeAttributeName;
    private static IEdmType edmStringType;
    private int recursionDepth;
    internal ODataAtomPropertyAndValueDeserializer(ODataAtomInputContext atomInputContext);
    private static ODataAtomPropertyAndValueDeserializer();
    internal ODataProperty ReadTopLevelProperty(IEdmStructuralProperty expectedProperty, IEdmTypeReference expectedPropertyTypeReference);
    internal object ReadNonEntityValue(IEdmTypeReference expectedValueTypeReference, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, CollectionWithoutExpectedTypeValidator collectionValidator, bool validateNullValue, bool epmPresent);
    protected EdmTypeKind GetNonEntityValueKind();
    protected void ReadNonEntityValueAttributes(String& typeName, Boolean& isNull);
    protected void ReadProperties(IEdmStructuredType structuredType, ReadOnlyEnumerable`1<ODataProperty> properties, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, bool epmPresent);
    private object ReadNonEntityValueImplementation(IEdmTypeReference expectedTypeReference, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, CollectionWithoutExpectedTypeValidator collectionValidator, bool validateNullValue, bool epmPresent, string propertyName);
    private object ReadNullValue(IEdmTypeReference expectedTypeReference, bool validateNullValue, string propertyName);
    private void ReadPropertiesImplementation(IEdmStructuredType structuredType, ReadOnlyEnumerable`1<ODataProperty> properties, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, bool epmPresent);
    private ODataProperty ReadProperty(string expectedPropertyName, IEdmTypeReference expectedPropertyTypeReference, ODataNullValueBehaviorKind nullValueReadBehaviorKind, bool epmPresent);
    private object ReadPrimitiveValue(IEdmPrimitiveTypeReference actualValueTypeReference);
    private ODataComplexValue ReadComplexValue(IEdmComplexTypeReference complexTypeReference, string payloadTypeName, SerializationTypeNameAnnotation serializationTypeNameAnnotation, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, bool epmPresent);
    private ODataCollectionValue ReadCollectionValue(IEdmCollectionTypeReference collectionTypeReference, string payloadTypeName, SerializationTypeNameAnnotation serializationTypeNameAnnotation);
    private void IncreaseRecursionDepth();
    private void DecreaseRecursionDepth();
    [ConditionalAttribute("DEBUG")]
private void AssertRecursionDepthIsZero();
}
internal class Microsoft.Data.OData.Atom.ODataAtomPropertyAndValueSerializer : ODataAtomSerializer {
    private int recursionDepth;
    [CompilerGeneratedAttribute]
private static Func`2<IEdmProperty, bool> CS$<>9__CachedAnonymousMethodDelegate3;
    internal ODataAtomPropertyAndValueSerializer(ODataAtomOutputContext atomOutputContext);
    internal void WriteTopLevelProperty(ODataProperty property);
    internal void WriteInstanceAnnotations(IEnumerable`1<AtomInstanceAnnotation> instanceAnnotations, InstanceAnnotationWriteTracker tracker);
    internal void WriteInstanceAnnotation(AtomInstanceAnnotation instanceAnnotation);
    internal bool WriteProperties(IEdmStructuredType owningType, IEnumerable`1<ODataProperty> cachedProperties, bool isWritingCollection, Action beforePropertiesAction, Action afterPropertiesAction, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, EpmValueCache epmValueCache, EpmSourcePathSegment epmSourcePathSegment, ProjectedPropertiesAnnotation projectedProperties);
    internal void WritePrimitiveValue(object value, CollectionWithoutExpectedTypeValidator collectionValidator, IEdmTypeReference expectedTypeReference, SerializationTypeNameAnnotation typeNameAnnotation);
    internal bool WriteComplexValue(ODataComplexValue complexValue, IEdmTypeReference metadataTypeReference, bool isOpenPropertyType, bool isWritingCollection, Action beforeValueAction, Action afterValueAction, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, CollectionWithoutExpectedTypeValidator collectionValidator, EpmValueCache epmValueCache, EpmSourcePathSegment epmSourcePathSegment, ProjectedPropertiesAnnotation projectedProperties);
    [ConditionalAttribute("DEBUG")]
internal void AssertRecursionDepthIsZero();
    private void WriteCollectionValue(ODataCollectionValue collectionValue, IEdmTypeReference propertyTypeReference, bool isOpenPropertyType, bool isWritingCollection);
    private void WritePrimitiveInstanceAnnotationValue(ODataPrimitiveValue primitiveValue, IEdmTypeReference expectedTypeReference);
    private bool WriteProperty(ODataProperty property, IEdmStructuredType owningType, bool isTopLevel, bool isWritingCollection, Action beforePropertyAction, EpmValueCache epmValueCache, EpmSourcePathSegment epmParentSourcePathSegment, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, ProjectedPropertiesAnnotation projectedProperties);
    private bool WriteComplexValueProperty(ODataComplexValue complexValue, string propertyName, bool isTopLevel, bool isWritingCollection, Action beforeValueAction, EpmValueCache epmValueCache, IEdmTypeReference propertyTypeReference, bool isOpenPropertyType, EpmSourcePathSegment epmSourcePathSegment, ProjectedPropertiesAnnotation complexValueProjectedProperties);
    private void WriteCollectionValueProperty(ODataCollectionValue collectionValue, string propertyName, bool isTopLevel, bool isWritingTopLevelCollection, Action beforePropertyAction, IEdmTypeReference propertyTypeReference, bool isOpenPropertyType);
    private bool ShouldWritePropertyInContent(IEdmStructuredType owningType, ProjectedPropertiesAnnotation projectedProperties, string propertyName, object propertyValue, EpmSourcePathSegment epmSourcePathSegment);
    private void WriteNullPropertyValue(IEdmTypeReference propertyTypeReference, string propertyName, bool isTopLevel, bool isWritingCollection, Action beforePropertyAction);
    private void WritePropertyStart(Action beforePropertyCallback, string propertyName, bool isWritingCollection, bool isTopLevel);
    private void WritePropertyEnd();
    private void WriteInstanceAnnotationStart(AtomInstanceAnnotation instanceAnnotation);
    private void WriteInstanceAnnotationEnd();
    private void WritePropertyTypeAttribute(string typeName);
    private void WriteNullAttribute();
    private void IncreaseRecursionDepth();
    private void DecreaseRecursionDepth();
    [CompilerGeneratedAttribute]
private static bool <WriteComplexValue>b__1(IEdmProperty p);
}
internal class Microsoft.Data.OData.Atom.ODataAtomReader : ODataReaderCore {
    private ODataAtomInputContext atomInputContext;
    private ODataAtomEntryAndFeedDeserializer atomEntryAndFeedDeserializer;
    private Stack`1<ODataAtomEntryAndFeedDeserializer> atomEntryAndFeedDeserializersStack;
    private IODataAtomReaderEntryState CurrentEntryState { get; }
    private IODataAtomReaderFeedState CurrentFeedState { get; }
    internal ODataAtomReader(ODataAtomInputContext atomInputContext, IEdmEntitySet entitySet, IEdmEntityType expectedEntityType, bool readingFeed);
    private IODataAtomReaderEntryState get_CurrentEntryState();
    private IODataAtomReaderFeedState get_CurrentFeedState();
    protected virtual bool ReadAtStartImplementation();
    protected virtual bool ReadAtFeedStartImplementation();
    protected virtual bool ReadAtFeedEndImplementation();
    protected virtual bool ReadAtEntryStartImplementation();
    protected virtual bool ReadAtEntryEndImplementation();
    protected virtual bool ReadAtNavigationLinkStartImplementation();
    protected virtual bool ReadAtNavigationLinkEndImplementation();
    protected virtual bool ReadAtEntityReferenceLink();
    private void ReadFeedStart();
    private void ReadEntryStart();
    private void EndEntry();
    private void StartNavigationLink(ODataAtomReaderNavigationLinkDescriptor navigationLinkDescriptor);
    private void ReadAtNonExpandedNavigationLinkStart();
    private void EnterScope(ODataReaderState state, ODataItem item, IEdmEntityType expectedEntityType);
    private void ReplaceScope(ODataReaderState state);
    private void ReplaceScopeToFeedEnd();
}
internal class Microsoft.Data.OData.Atom.ODataAtomReaderNavigationLinkDescriptor : object {
    private ODataNavigationLink navigationLink;
    private IEdmNavigationProperty navigationProperty;
    internal ODataNavigationLink NavigationLink { get; }
    internal IEdmNavigationProperty NavigationProperty { get; }
    internal ODataAtomReaderNavigationLinkDescriptor(ODataNavigationLink navigationLink, IEdmNavigationProperty navigationProperty);
    internal ODataNavigationLink get_NavigationLink();
    internal IEdmNavigationProperty get_NavigationProperty();
}
internal static class Microsoft.Data.OData.Atom.ODataAtomReaderUtils : object {
    internal static XmlReader CreateXmlReader(Stream stream, Encoding encoding, ODataMessageReaderSettings messageReaderSettings);
    internal static bool ReadMetadataNullAttributeValue(string attributeValue);
    private static XmlReaderSettings CreateXmlReaderSettings(ODataMessageReaderSettings messageReaderSettings);
}
internal class Microsoft.Data.OData.Atom.ODataAtomSerializer : ODataSerializer {
    private ODataAtomOutputContext atomOutputContext;
    internal XmlWriter XmlWriter { get; }
    protected ODataAtomOutputContext AtomOutputContext { get; }
    internal ODataAtomSerializer(ODataAtomOutputContext atomOutputContext);
    internal XmlWriter get_XmlWriter();
    protected ODataAtomOutputContext get_AtomOutputContext();
    internal string UriToUrlAttributeValue(Uri uri);
    internal string UriToUrlAttributeValue(Uri uri, bool failOnRelativeUriWithoutBaseUri);
    internal void WritePayloadStart();
    internal void WritePayloadEnd();
    internal void WriteTopLevelError(ODataError error, bool includeDebugInformation);
    internal void WriteDefaultNamespaceAttributes(DefaultNamespaceFlags flags);
    internal void WriteCount(long count, bool includeNamespaceDeclaration);
    internal void WriteBaseUriAndDefaultNamespaceAttributes();
    internal void WriteElementWithTextContent(string prefix, string localName, string ns, string textContent);
    internal void WriteEmptyElement(string prefix, string localName, string ns);
}
internal class Microsoft.Data.OData.Atom.ODataAtomServiceDocumentDeserializer : ODataAtomDeserializer {
    private string AtomPublishingServiceElementName;
    private string AtomPublishingWorkspaceElementName;
    private string AtomHRefAttributeName;
    private string AtomPublishingCollectionElementName;
    private string AtomPublishingCategoriesElementName;
    private string AtomPublishingAcceptElementName;
    private string AtomPublishingNamespace;
    private string AtomNamespace;
    private string AtomTitleElementName;
    private string EmptyNamespace;
    private ODataAtomServiceDocumentMetadataDeserializer serviceDocumentMetadataDeserializer;
    private ODataAtomServiceDocumentMetadataDeserializer ServiceDocumentMetadataDeserializer { get; }
    internal ODataAtomServiceDocumentDeserializer(ODataAtomInputContext atomInputContext);
    private ODataAtomServiceDocumentMetadataDeserializer get_ServiceDocumentMetadataDeserializer();
    internal ODataWorkspace ReadServiceDocument();
    private ODataWorkspace ReadWorkspace();
    private ODataResourceCollectionInfo ReadCollectionElement();
    private void SkipToElementInAtomPublishingNamespace();
}
internal class Microsoft.Data.OData.Atom.ODataAtomServiceDocumentMetadataDeserializer : ODataAtomMetadataDeserializer {
    private string AtomNamespace;
    private string AtomCategoryElementName;
    private string AtomHRefAttributeName;
    private string AtomPublishingFixedAttributeName;
    private string AtomCategorySchemeAttributeName;
    private string AtomCategoryTermAttributeName;
    private string AtomCategoryLabelAttributeName;
    private string EmptyNamespace;
    internal ODataAtomServiceDocumentMetadataDeserializer(ODataAtomInputContext atomInputContext);
    internal void ReadTitleElementInWorkspace(AtomWorkspaceMetadata workspaceMetadata);
    internal void ReadTitleElementInCollection(AtomResourceCollectionMetadata collectionMetadata, ODataResourceCollectionInfo collectionInfo);
    internal void ReadCategoriesElementInCollection(AtomResourceCollectionMetadata collectionMetadata);
    internal void ReadAcceptElementInCollection(AtomResourceCollectionMetadata collectionMetadata);
    private AtomCategoryMetadata ReadCategoryElementInCollection();
}
internal class Microsoft.Data.OData.Atom.ODataAtomServiceDocumentMetadataSerializer : ODataAtomMetadataSerializer {
    internal ODataAtomServiceDocumentMetadataSerializer(ODataAtomOutputContext atomOutputContext);
    internal void WriteWorkspaceMetadata(ODataWorkspace workspace);
    internal void WriteResourceCollectionMetadata(ODataResourceCollectionInfo collection);
}
internal class Microsoft.Data.OData.Atom.ODataAtomServiceDocumentSerializer : ODataAtomSerializer {
    private ODataAtomServiceDocumentMetadataSerializer atomServiceDocumentMetadataSerializer;
    internal ODataAtomServiceDocumentSerializer(ODataAtomOutputContext atomOutputContext);
    internal void WriteServiceDocument(ODataWorkspace defaultWorkspace);
}
internal class Microsoft.Data.OData.Atom.ODataAtomWriter : ODataWriterCore {
    private string updatedTime;
    private ODataAtomOutputContext atomOutputContext;
    private ODataAtomEntryAndFeedSerializer atomEntryAndFeedSerializer;
    [CompilerGeneratedAttribute]
private static Func`2<ODataInstanceAnnotation, AtomInstanceAnnotation> CS$<>9__CachedAnonymousMethodDelegate1;
    private AtomEntryScope CurrentEntryScope { get; }
    private AtomFeedScope CurrentFeedScope { get; }
    internal ODataAtomWriter(ODataAtomOutputContext atomOutputContext, IEdmEntitySet entitySet, IEdmEntityType entityType, bool writingFeed);
    private AtomEntryScope get_CurrentEntryScope();
    private AtomFeedScope get_CurrentFeedScope();
    protected virtual void VerifyNotDisposed();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void StartPayload();
    protected virtual void EndPayload();
    protected virtual void StartEntry(ODataEntry entry);
    protected virtual void EndEntry(ODataEntry entry);
    protected virtual void StartFeed(ODataFeed feed);
    protected virtual void EndFeed(ODataFeed feed);
    protected virtual void WriteDeferredNavigationLink(ODataNavigationLink navigationLink);
    protected virtual void StartNavigationLinkWithContent(ODataNavigationLink navigationLink);
    protected virtual void EndNavigationLinkWithContent(ODataNavigationLink navigationLink);
    protected virtual void WriteEntityReferenceInNavigationLinkContent(ODataNavigationLink parentNavigationLink, ODataEntityReferenceLink entityReferenceLink);
    protected virtual FeedScope CreateFeedScope(ODataFeed feed, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties);
    protected virtual EntryScope CreateEntryScope(ODataEntry entry, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties);
    private void WriteInstanceAnnotations(IEnumerable`1<ODataInstanceAnnotation> instanceAnnotations, InstanceAnnotationWriteTracker tracker);
    private void WriteFeedInstanceAnnotations(ODataFeed feed, AtomFeedScope currentFeedScope);
    private void WriteEntryContent(ODataEntry entry, IEdmEntityType entryType, EntryPropertiesValueCache propertiesValueCache, EpmSourcePathSegment rootSourcePathSegment, ProjectedPropertiesAnnotation projectedProperties);
    private void CheckAndWriteParentNavigationLinkStartForInlineElement();
    private void CheckAndWriteParentNavigationLinkEndForInlineElement();
    private void WriteNavigationLinkStart(ODataNavigationLink navigationLink, Uri navigationLinkUrlOverride);
    private void WriteNavigationLinkEnd();
    private void StartEntryXmlCustomization(ODataEntry entry);
    private void EndEntryXmlCustomization(ODataEntry entry);
    [CompilerGeneratedAttribute]
private static AtomInstanceAnnotation <WriteInstanceAnnotations>b__0(ODataInstanceAnnotation instanceAnnotation);
}
internal static class Microsoft.Data.OData.Atom.ODataAtomWriterMetadataEpmMergeUtils : object {
    internal static AtomEntryMetadata MergeCustomAndEpmEntryMetadata(AtomEntryMetadata customEntryMetadata, AtomEntryMetadata epmEntryMetadata, ODataWriterBehavior writerBehavior);
    private static IEnumerable`1<T> MergeSyndicationMapping(IEnumerable`1<T> customValues, IEnumerable`1<T> epmValues);
    private static AtomTextConstruct MergeAtomTextValue(AtomTextConstruct customValue, AtomTextConstruct epmValue, string propertyName);
    private static string MergeTextValue(string customValue, string epmValue, string propertyName);
    private static Nullable`1<DateTimeOffset> MergeDateTimeValue(Nullable`1<DateTimeOffset> customValue, Nullable`1<DateTimeOffset> epmValue, string propertyName);
    private static bool TryMergeIfNull(T customValue, T epmValue, T& result);
    private static bool TryMergeIfNull(Nullable`1<T> customValue, Nullable`1<T> epmValue, Nullable`1& result);
}
internal static class Microsoft.Data.OData.Atom.ODataAtomWriterMetadataUtils : object {
    internal static AtomLinkMetadata MergeLinkMetadata(AtomLinkMetadata metadata, string relation, Uri href, string title, string mediaType);
    internal static AtomCategoryMetadata MergeCategoryMetadata(AtomCategoryMetadata categoryMetadata, string term, string scheme);
}
internal static class Microsoft.Data.OData.Atom.ODataAtomWriterUtils : object {
    internal static XmlWriter CreateXmlWriter(Stream stream, ODataMessageWriterSettings messageWriterSettings, Encoding encoding);
    internal static void WriteError(XmlWriter writer, ODataError error, bool includeDebugInformation, int maxInnerErrorDepth);
    internal static void WriteETag(XmlWriter writer, string etag);
    internal static void WriteNullAttribute(XmlWriter writer);
    internal static void WriteRaw(XmlWriter writer, string value);
    internal static void WriteString(XmlWriter writer, string value);
    private static XmlWriterSettings CreateXmlWriterSettings(ODataMessageWriterSettings messageWriterSettings, Encoding encoding);
    private static void WritePreserveSpaceAttributeIfNeeded(XmlWriter writer, string value);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Atom.XmlReaderExtensions : object {
    [ConditionalAttribute("DEBUG")]
[ExtensionAttribute]
internal static void AssertNotBuffering(BufferingXmlReader bufferedXmlReader);
    [ExtensionAttribute]
[ConditionalAttribute("DEBUG")]
internal static void AssertBuffering(BufferingXmlReader bufferedXmlReader);
    [ExtensionAttribute]
internal static string ReadElementValue(XmlReader reader);
    [ExtensionAttribute]
internal static string ReadFirstTextNodeValue(XmlReader reader);
    [ExtensionAttribute]
internal static string ReadElementContentValue(XmlReader reader);
    [ExtensionAttribute]
internal static void SkipInsignificantNodes(XmlReader reader);
    [ExtensionAttribute]
internal static void SkipElementContent(XmlReader reader);
    [ExtensionAttribute]
internal static void ReadPayloadStart(XmlReader reader);
    [ExtensionAttribute]
internal static void ReadPayloadEnd(XmlReader reader);
    [ExtensionAttribute]
internal static bool NamespaceEquals(XmlReader reader, string namespaceUri);
    [ExtensionAttribute]
internal static bool LocalNameEquals(XmlReader reader, string localName);
    [ExtensionAttribute]
internal static bool TryReadEmptyElement(XmlReader reader);
    [ExtensionAttribute]
internal static bool TryReadToNextElement(XmlReader reader);
    private static bool IsNullOrWhitespace(string text);
}
internal class Microsoft.Data.OData.AtomAndVerboseJsonTypeNameOracle : TypeNameOracle {
    internal string GetEntryTypeNameForWriting(ODataEntry entry);
    internal string GetValueTypeNameForWriting(object value, IEdmTypeReference typeReferenceFromValue, SerializationTypeNameAnnotation typeNameAnnotation, CollectionWithoutExpectedTypeValidator collectionValidator, String& collectionItemTypeName);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.AtomMetadataReaderUtils : object {
    internal static AtomEntryMetadata CreateNewAtomEntryMetadata();
    internal static AtomFeedMetadata CreateNewAtomFeedMetadata();
    [ExtensionAttribute]
internal static void AddAuthor(AtomEntryMetadata entryMetadata, AtomPersonMetadata authorMetadata);
    [ExtensionAttribute]
internal static void AddContributor(AtomEntryMetadata entryMetadata, AtomPersonMetadata contributorMetadata);
    [ExtensionAttribute]
internal static void AddLink(AtomEntryMetadata entryMetadata, AtomLinkMetadata linkMetadata);
    [ExtensionAttribute]
internal static void AddLink(AtomFeedMetadata feedMetadata, AtomLinkMetadata linkMetadata);
    [ExtensionAttribute]
internal static void AddCategory(AtomEntryMetadata entryMetadata, AtomCategoryMetadata categoryMetadata);
    [ExtensionAttribute]
internal static void AddCategory(AtomFeedMetadata feedMetadata, AtomCategoryMetadata categoryMetadata);
    [ExtensionAttribute]
internal static void AddAuthor(AtomFeedMetadata feedMetadata, AtomPersonMetadata authorMetadata);
    [ExtensionAttribute]
internal static void AddContributor(AtomFeedMetadata feedMetadata, AtomPersonMetadata contributorMetadata);
}
internal static class Microsoft.Data.OData.AtomValueUtils : object {
    private static Char[] XmlWhitespaceChars;
    private static AtomValueUtils();
    internal static void WritePrimitiveValue(XmlWriter writer, object value);
    internal static string ConvertPrimitiveToString(object value);
    internal static object ReadPrimitiveValue(XmlReader reader, IEdmPrimitiveTypeReference primitiveTypeReference);
    internal static string ToString(AtomTextConstructKind textConstructKind);
    internal static bool TryConvertPrimitiveToString(object value, String& result);
    internal static object ConvertStringToPrimitive(string text, IEdmPrimitiveTypeReference targetTypeReference);
    private static bool ConvertXmlBooleanValue(string text);
}
internal class Microsoft.Data.OData.BufferedReadStream : Stream {
    private List`1<DataBuffer> buffers;
    private Stream inputStream;
    private int currentBufferIndex;
    private int currentBufferReadCount;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    private BufferedReadStream(Stream inputStream);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    internal static Task`1<BufferedReadStream> BufferStreamAsync(Stream inputStream);
    internal void ResetForReading();
    protected virtual void Dispose(bool disposing);
    private IEnumerable`1<Task> BufferInputStream();
    private DataBuffer AddNewBuffer();
}
internal class Microsoft.Data.OData.BufferingReadStream : Stream {
    private LinkedList`1<Byte[]> buffers;
    private Stream innerStream;
    private int positionInCurrentBuffer;
    private bool bufferingModeDisabled;
    private LinkedListNode`1<Byte[]> currentReadNode;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal bool IsBuffering { get; }
    internal BufferingReadStream(Stream stream);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    internal bool get_IsBuffering();
    public virtual void Flush();
    public virtual int Read(Byte[] userBuffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    internal void ResetStream();
    internal void StopBuffering();
    protected virtual void Dispose(bool disposing);
    private void MoveToNextBuffer();
}
internal class Microsoft.Data.OData.CollectionWithoutExpectedTypeValidator : object {
    private bool itemTypeDerivedFromCollectionValue;
    private string itemTypeName;
    private IEdmPrimitiveType primitiveItemType;
    private EdmTypeKind itemTypeKind;
    internal string ItemTypeNameFromCollection { get; }
    internal EdmTypeKind ItemTypeKindFromCollection { get; }
    internal CollectionWithoutExpectedTypeValidator(string itemTypeNameFromCollection);
    internal string get_ItemTypeNameFromCollection();
    internal EdmTypeKind get_ItemTypeKindFromCollection();
    internal void ValidateCollectionItem(string collectionItemTypeName, EdmTypeKind collectionItemTypeKind);
    private static EdmTypeKind ComputeExpectedTypeKind(string typeName, IEdmPrimitiveType& primitiveItemType);
    private void ValidateCollectionItemTypeNameAndKind(string collectionItemTypeName, EdmTypeKind collectionItemTypeKind);
}
internal static class Microsoft.Data.OData.DebugUtils : object {
    [ConditionalAttribute("DEBUG")]
internal static void CheckNoExternalCallers();
    [ConditionalAttribute("DEBUG")]
internal static void CheckNoExternalCallers(bool checkPublicMethods);
}
internal class Microsoft.Data.OData.DuplicatePropertyNamesChecker : object {
    private static Dictionary`2<string, object> propertyAnnotationsProcessedToken;
    private bool allowDuplicateProperties;
    private bool isResponse;
    private Dictionary`2<string, DuplicationRecord> propertyNameCache;
    private PropertyAnnotationCollector annotationCollector;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, DuplicationRecord>, string> CS$<>9__CachedAnonymousMethodDelegate2;
    public PropertyAnnotationCollector AnnotationCollector { get; }
    public DuplicatePropertyNamesChecker(bool allowDuplicateProperties, bool isResponse);
    private static DuplicatePropertyNamesChecker();
    public PropertyAnnotationCollector get_AnnotationCollector();
    internal void CheckForDuplicatePropertyNames(ODataProperty property);
    internal void CheckForDuplicatePropertyNamesOnNavigationLinkStart(ODataNavigationLink navigationLink);
    internal ODataAssociationLink CheckForDuplicatePropertyNames(ODataNavigationLink navigationLink, bool isExpanded, Nullable`1<bool> isCollection);
    internal ODataNavigationLink CheckForDuplicateAssociationLinkNames(ODataAssociationLink associationLink);
    internal void Clear();
    internal void AddODataPropertyAnnotation(string propertyName, string annotationName, object annotationValue);
    internal void AddCustomPropertyAnnotation(string propertyName, string annotationName);
    internal Dictionary`2<string, object> GetODataPropertyAnnotations(string propertyName);
    internal void MarkPropertyAsProcessed(string propertyName);
    internal IEnumerable`1<string> GetAllUnprocessedProperties();
    private static void ThrowIfPropertyIsProcessed(string propertyName, DuplicationRecord duplicationRecord);
    private static bool IsPropertyUnprocessed(KeyValuePair`2<string, DuplicationRecord> property);
    private static DuplicationKind GetDuplicationKind(ODataProperty property);
    private static Nullable`1<bool> GetIsCollectionEffectiveValue(bool isExpanded, Nullable`1<bool> isCollection);
    private static void ApplyNavigationLinkToDuplicationRecord(DuplicationRecord duplicationRecord, ODataNavigationLink navigationLink, bool isExpanded, Nullable`1<bool> isCollection);
    private bool TryGetDuplicationRecord(string propertyName, DuplicationRecord& duplicationRecord);
    private void CheckNavigationLinkDuplicateNameForExistingDuplicationRecord(string propertyName, DuplicationRecord existingDuplicationRecord);
    private DuplicationRecord GetDuplicationRecordToAddPropertyAnnotation(string propertyName, string annotationName);
    [CompilerGeneratedAttribute]
private static string <GetAllUnprocessedProperties>b__1(KeyValuePair`2<string, DuplicationRecord> property);
}
internal static class Microsoft.Data.OData.Error : object {
    internal static Exception ArgumentNull(string paramName);
    internal static Exception ArgumentOutOfRange(string paramName);
    internal static Exception NotImplemented();
    internal static Exception NotSupported();
}
internal static class Microsoft.Data.OData.ErrorUtils : object {
    internal static string ODataErrorMessageDefaultLanguage;
    internal static void GetErrorDetails(ODataError error, String& code, String& message, String& messageLanguage);
    internal static void WriteXmlError(XmlWriter writer, ODataError error, bool includeDebugInformation, int maxInnerErrorDepth);
    private static void WriteXmlError(XmlWriter writer, string code, string message, string messageLanguage, ODataInnerError innerError, int maxInnerErrorDepth);
    private static void WriteXmlInnerError(XmlWriter writer, ODataInnerError innerError, string innerErrorElementName, int recursionDepth, int maxInnerErrorDepth);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Evaluation.EdmValueUtils : object {
    internal static IEdmDelayedValue ConvertPrimitiveValue(object primitiveValue, IEdmPrimitiveTypeReference type);
    [ExtensionAttribute]
internal static object ToClrValue(IEdmPrimitiveValue edmValue);
    internal static bool TryGetStreamProperty(IEdmStructuredValue entityInstance, string streamPropertyName, IEdmProperty& streamProperty);
    [ExtensionAttribute]
internal static object GetPrimitivePropertyClrValue(IEdmStructuredValue structuredValue, string propertyName);
    private static object ConvertFloatingValue(IEdmFloatingValue floatingValue, EdmPrimitiveTypeKind primitiveKind);
    private static object ConvertIntegerValue(IEdmIntegerValue integerValue, EdmPrimitiveTypeKind primitiveKind);
    private static IEdmDelayedValue ConvertPrimitiveValueWithoutTypeCode(object primitiveValue, IEdmPrimitiveTypeReference type);
    private static IEdmPrimitiveTypeReference EnsurePrimitiveType(IEdmPrimitiveTypeReference type, EdmPrimitiveTypeKind primitiveKindFromValue);
}
internal interface Microsoft.Data.OData.Evaluation.IODataEntryMetadataContext {
    public ODataEntry Entry { get; }
    public IODataFeedAndEntryTypeContext TypeContext { get; }
    public string ActualEntityTypeName { get; }
    public ICollection`1<KeyValuePair`2<string, object>> KeyProperties { get; }
    public IEnumerable`1<KeyValuePair`2<string, object>> ETagProperties { get; }
    public IEnumerable`1<IEdmNavigationProperty> SelectedNavigationProperties { get; }
    public IDictionary`2<string, IEdmStructuralProperty> SelectedStreamProperties { get; }
    public IEnumerable`1<IEdmFunctionImport> SelectedAlwaysBindableOperations { get; }
    public abstract virtual ODataEntry get_Entry();
    public abstract virtual IODataFeedAndEntryTypeContext get_TypeContext();
    public abstract virtual string get_ActualEntityTypeName();
    public abstract virtual ICollection`1<KeyValuePair`2<string, object>> get_KeyProperties();
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, object>> get_ETagProperties();
    public abstract virtual IEnumerable`1<IEdmNavigationProperty> get_SelectedNavigationProperties();
    public abstract virtual IDictionary`2<string, IEdmStructuralProperty> get_SelectedStreamProperties();
    public abstract virtual IEnumerable`1<IEdmFunctionImport> get_SelectedAlwaysBindableOperations();
}
internal interface Microsoft.Data.OData.Evaluation.IODataMetadataContext {
    public IEdmModel Model { get; }
    public Uri ServiceBaseUri { get; }
    public Uri MetadataDocumentUri { get; }
    public abstract virtual IEdmModel get_Model();
    public abstract virtual Uri get_ServiceBaseUri();
    public abstract virtual Uri get_MetadataDocumentUri();
    public abstract virtual ODataEntityMetadataBuilder GetEntityMetadataBuilderForReader(IODataJsonLightReaderEntryState entryState);
    public abstract virtual IEdmFunctionImport[] GetAlwaysBindableOperationsForType(IEdmType bindingType);
    public abstract virtual bool OperationsBoundToEntityTypeMustBeContainerQualified(IEdmEntityType entityType);
}
internal abstract class Microsoft.Data.OData.Evaluation.KeySerializer : object {
    private static DefaultKeySerializer DefaultInstance;
    private static SegmentKeySerializer SegmentInstance;
    private static KeySerializer();
    internal static KeySerializer Create(UrlConvention urlConvention);
    internal abstract virtual void AppendKeyExpression(StringBuilder builder, ICollection`1<TProperty> keyProperties, Func`2<TProperty, string> getPropertyName, Func`2<TProperty, object> getPropertyValue);
    private static string GetKeyValueAsString(Func`2<TProperty, object> getPropertyValue, TProperty property, LiteralFormatter literalFormatter);
    private static void AppendKeyWithParentheses(StringBuilder builder, ICollection`1<TProperty> keyProperties, Func`2<TProperty, string> getPropertyName, Func`2<TProperty, object> getPropertyValue);
}
internal abstract class Microsoft.Data.OData.Evaluation.LiteralFormatter : object {
    private static string HexValues;
    private static LiteralFormatter DefaultInstance;
    private static LiteralFormatter DefaultInstanceWithoutEncoding;
    private static LiteralFormatter KeyAsSegmentInstance;
    internal static LiteralFormatter ForConstants { get; }
    internal static LiteralFormatter ForConstantsWithoutEncoding { get; }
    private static LiteralFormatter();
    internal static LiteralFormatter get_ForConstants();
    internal static LiteralFormatter get_ForConstantsWithoutEncoding();
    internal static LiteralFormatter ForKeys(bool keysAsSegment);
    internal abstract virtual string Format(object value);
    protected virtual string EscapeResultForUri(string result);
    private static string ConvertByteArrayToKeyString(Byte[] byteArray);
    private static string FormatRawLiteral(object value);
    private string FormatAndEscapeLiteral(object value);
}
internal class Microsoft.Data.OData.Evaluation.NoOpEntityMetadataBuilder : ODataEntityMetadataBuilder {
    private ODataEntry entry;
    internal NoOpEntityMetadataBuilder(ODataEntry entry);
    internal virtual Uri GetEditLink();
    internal virtual Uri GetReadLink();
    internal virtual string GetId();
    internal virtual string GetETag();
    internal virtual ODataStreamReferenceValue GetMediaResource();
    internal virtual IEnumerable`1<ODataProperty> GetProperties(IEnumerable`1<ODataProperty> nonComputedProperties);
    internal virtual IEnumerable`1<ODataAction> GetActions();
    internal virtual IEnumerable`1<ODataFunction> GetFunctions();
    internal virtual Uri GetNavigationLinkUri(string navigationPropertyName, Uri navigationLinkUrl, bool hasNavigationLinkUrl);
    internal virtual Uri GetAssociationLinkUri(string navigationPropertyName, Uri associationLinkUrl, bool hasAssociationLinkUrl);
}
internal class Microsoft.Data.OData.Evaluation.ODataConventionalEntityMetadataBuilder : ODataEntityMetadataBuilder {
    private ODataUriBuilder uriBuilder;
    private IODataEntryMetadataContext entryMetadataContext;
    private IODataMetadataContext metadataContext;
    private HashSet`1<string> processedNavigationLinks;
    private Uri computedEditLink;
    private Uri computedReadLink;
    private string computedETag;
    private bool etagComputed;
    private string computedId;
    private Uri computedEntityInstanceUri;
    private ODataStreamReferenceValue computedMediaResource;
    private List`1<ODataProperty> computedStreamProperties;
    private IEnumerator`1<ODataJsonLightReaderNavigationLinkInfo> unprocessedNavigationLinks;
    private ODataMissingOperationGenerator missingOperationGenerator;
    private string ComputedId { get; }
    private Uri ComputedEntityInstanceUri { get; }
    private ODataMissingOperationGenerator MissingOperationGenerator { get; }
    internal ODataConventionalEntityMetadataBuilder(IODataEntryMetadataContext entryMetadataContext, IODataMetadataContext metadataContext, ODataUriBuilder uriBuilder);
    private string get_ComputedId();
    private Uri get_ComputedEntityInstanceUri();
    private ODataMissingOperationGenerator get_MissingOperationGenerator();
    internal virtual Uri GetEditLink();
    internal virtual Uri GetReadLink();
    internal virtual string GetId();
    internal virtual string GetETag();
    internal virtual ODataStreamReferenceValue GetMediaResource();
    internal virtual IEnumerable`1<ODataProperty> GetProperties(IEnumerable`1<ODataProperty> nonComputedProperties);
    internal virtual IEnumerable`1<ODataAction> GetActions();
    internal virtual IEnumerable`1<ODataFunction> GetFunctions();
    internal virtual void MarkNavigationLinkProcessed(string navigationPropertyName);
    internal virtual ODataJsonLightReaderNavigationLinkInfo GetNextUnprocessedNavigationLink();
    internal virtual Uri GetStreamEditLink(string streamPropertyName);
    internal virtual Uri GetStreamReadLink(string streamPropertyName);
    internal virtual Uri GetNavigationLinkUri(string navigationPropertyName, Uri navigationLinkUrl, bool hasNavigationLinkUrl);
    internal virtual Uri GetAssociationLinkUri(string navigationPropertyName, Uri associationLinkUrl, bool hasAssociationLinkUrl);
    internal virtual Uri GetOperationTargetUri(string operationName, string bindingParameterTypeName);
    internal virtual string GetOperationTitle(string operationName);
    private Uri ComputeEditLink();
    private void ComputeAndCacheId();
    private IEnumerable`1<ODataProperty> GetComputedStreamProperties(IEnumerable`1<ODataProperty> nonComputedProperties);
    [CompilerGeneratedAttribute]
private bool <GetNextUnprocessedNavigationLink>b__0(IEdmNavigationProperty p);
}
internal class Microsoft.Data.OData.Evaluation.ODataConventionalUriBuilder : ODataUriBuilder {
    private Uri serviceBaseUri;
    private UrlConvention urlConvention;
    private KeySerializer keySerializer;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, object>, string> CS$<>9__CachedAnonymousMethodDelegate2;
    internal ODataConventionalUriBuilder(Uri serviceBaseUri, UrlConvention urlConvention);
    internal virtual Uri BuildBaseUri();
    internal virtual Uri BuildEntitySetUri(Uri baseUri, string entitySetName);
    internal virtual Uri BuildEntityInstanceUri(Uri baseUri, ICollection`1<KeyValuePair`2<string, object>> keyProperties, string entityTypeName);
    internal virtual Uri BuildStreamEditLinkUri(Uri baseUri, string streamPropertyName);
    internal virtual Uri BuildStreamReadLinkUri(Uri baseUri, string streamPropertyName);
    internal virtual Uri BuildNavigationLinkUri(Uri baseUri, string navigationPropertyName);
    internal virtual Uri BuildAssociationLinkUri(Uri baseUri, string navigationPropertyName);
    internal virtual Uri BuildOperationTargetUri(Uri baseUri, string operationName, string bindingParameterTypeName);
    internal virtual Uri AppendTypeSegment(Uri baseUri, string typeName);
    [ConditionalAttribute("DEBUG")]
private static void ValidateBaseUri(Uri baseUri);
    private static Uri AppendSegment(Uri baseUri, string segment, bool escapeSegment);
    private static object ValidateKeyValue(string keyPropertyName, object keyPropertyValue, string entityTypeName);
    private void AppendKeyExpression(StringBuilder builder, ICollection`1<KeyValuePair`2<string, object>> keyProperties, string entityTypeName);
    [CompilerGeneratedAttribute]
private static string <AppendKeyExpression>b__0(KeyValuePair`2<string, object> p);
}
internal class Microsoft.Data.OData.Evaluation.ODataEdmCollectionValue : EdmValue {
    private ODataCollectionValue collectionValue;
    public IEnumerable`1<IEdmDelayedValue> Elements { get; }
    public EdmValueKind ValueKind { get; }
    internal ODataEdmCollectionValue(ODataCollectionValue collectionValue);
    public sealed virtual IEnumerable`1<IEdmDelayedValue> get_Elements();
    public virtual EdmValueKind get_ValueKind();
}
internal class Microsoft.Data.OData.Evaluation.ODataEdmNullValue : EdmValue {
    internal static ODataEdmNullValue UntypedInstance;
    public EdmValueKind ValueKind { get; }
    internal ODataEdmNullValue(IEdmTypeReference type);
    private static ODataEdmNullValue();
    public virtual EdmValueKind get_ValueKind();
}
internal class Microsoft.Data.OData.Evaluation.ODataEdmStructuredValue : EdmValue {
    private IEnumerable`1<ODataProperty> properties;
    private IEdmStructuredTypeReference structuredType;
    public IEnumerable`1<IEdmPropertyValue> PropertyValues { get; }
    public EdmValueKind ValueKind { get; }
    internal ODataEdmStructuredValue(ODataEntry entry);
    internal ODataEdmStructuredValue(ODataComplexValue complexValue);
    public sealed virtual IEnumerable`1<IEdmPropertyValue> get_PropertyValues();
    public virtual EdmValueKind get_ValueKind();
    public sealed virtual IEdmPropertyValue FindPropertyValue(string propertyName);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Evaluation.ODataEdmValueUtils : object {
    [ExtensionAttribute]
internal static IEdmPropertyValue GetEdmPropertyValue(ODataProperty property, IEdmStructuredTypeReference declaringType);
    internal static IEdmDelayedValue ConvertValue(object value, IEdmTypeReference type);
}
internal abstract class Microsoft.Data.OData.Evaluation.ODataEntityMetadataBuilder : object {
    [CompilerGeneratedAttribute]
private static Func`2<ODataProperty, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    internal static ODataEntityMetadataBuilder Null { get; }
    internal static ODataEntityMetadataBuilder get_Null();
    internal abstract virtual Uri GetEditLink();
    internal abstract virtual Uri GetReadLink();
    internal abstract virtual string GetId();
    internal abstract virtual string GetETag();
    internal virtual ODataStreamReferenceValue GetMediaResource();
    internal virtual IEnumerable`1<ODataProperty> GetProperties(IEnumerable`1<ODataProperty> nonComputedProperties);
    internal virtual IEnumerable`1<ODataAction> GetActions();
    internal virtual IEnumerable`1<ODataFunction> GetFunctions();
    internal virtual void MarkNavigationLinkProcessed(string navigationPropertyName);
    internal virtual ODataJsonLightReaderNavigationLinkInfo GetNextUnprocessedNavigationLink();
    internal virtual Uri GetStreamEditLink(string streamPropertyName);
    internal virtual Uri GetStreamReadLink(string streamPropertyName);
    internal virtual Uri GetNavigationLinkUri(string navigationPropertyName, Uri navigationLinkUrl, bool hasNavigationLinkUrl);
    internal virtual Uri GetAssociationLinkUri(string navigationPropertyName, Uri associationLinkUrl, bool hasAssociationLinkUrl);
    internal virtual Uri GetOperationTargetUri(string operationName, string bindingParameterTypeName);
    internal virtual string GetOperationTitle(string operationName);
    [CompilerGeneratedAttribute]
private static bool <GetProperties>b__0(ODataProperty p);
}
internal abstract class Microsoft.Data.OData.Evaluation.ODataEntryMetadataContext : object {
    private static KeyValuePair`2[] EmptyProperties;
    private ODataEntry entry;
    private IODataFeedAndEntryTypeContext typeContext;
    private KeyValuePair`2[] keyProperties;
    private IEnumerable`1<KeyValuePair`2<string, object>> etagProperties;
    private IEnumerable`1<IEdmNavigationProperty> selectedNavigationProperties;
    private IDictionary`2<string, IEdmStructuralProperty> selectedStreamProperties;
    private IEnumerable`1<IEdmFunctionImport> selectedAlwaysBindableOperations;
    public ODataEntry Entry { get; }
    public IODataFeedAndEntryTypeContext TypeContext { get; }
    public string ActualEntityTypeName { get; }
    public ICollection`1<KeyValuePair`2<string, object>> KeyProperties { get; }
    public IEnumerable`1<KeyValuePair`2<string, object>> ETagProperties { get; }
    public IEnumerable`1<IEdmNavigationProperty> SelectedNavigationProperties { get; }
    public IDictionary`2<string, IEdmStructuralProperty> SelectedStreamProperties { get; }
    public IEnumerable`1<IEdmFunctionImport> SelectedAlwaysBindableOperations { get; }
    protected ODataEntryMetadataContext(ODataEntry entry, IODataFeedAndEntryTypeContext typeContext);
    private static ODataEntryMetadataContext();
    public sealed virtual ODataEntry get_Entry();
    public sealed virtual IODataFeedAndEntryTypeContext get_TypeContext();
    public abstract virtual string get_ActualEntityTypeName();
    public abstract virtual ICollection`1<KeyValuePair`2<string, object>> get_KeyProperties();
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, object>> get_ETagProperties();
    public abstract virtual IEnumerable`1<IEdmNavigationProperty> get_SelectedNavigationProperties();
    public abstract virtual IDictionary`2<string, IEdmStructuralProperty> get_SelectedStreamProperties();
    public abstract virtual IEnumerable`1<IEdmFunctionImport> get_SelectedAlwaysBindableOperations();
    internal static ODataEntryMetadataContext Create(ODataEntry entry, IODataFeedAndEntryTypeContext typeContext, ODataFeedAndEntrySerializationInfo serializationInfo, IEdmEntityType actualEntityType, IODataMetadataContext metadataContext, SelectedPropertiesNode selectedProperties);
    private static object GetPrimitivePropertyClrValue(ODataEntry entry, string propertyName, string entityTypeName, bool isKeyProperty);
    private static object GetPrimitivePropertyClrValue(string entityTypeName, ODataProperty property, bool isKeyProperty);
    private static void ValidateEntityTypeHasKeyProperties(KeyValuePair`2[] keyProperties, string actualEntityTypeName);
}
internal class Microsoft.Data.OData.Evaluation.ODataMetadataContext : object {
    private IEdmModel model;
    private EdmTypeResolver edmTypeResolver;
    private Dictionary`2<IEdmType, IEdmFunctionImport[]> alwaysBindableOperationsCache;
    private bool isResponse;
    private Func`2<IEdmEntityType, bool> operationsBoundToEntityTypeMustBeContainerQualified;
    private Uri metadataDocumentUri;
    private Uri serviceBaseUri;
    public IEdmModel Model { get; }
    public Uri ServiceBaseUri { get; }
    public Uri MetadataDocumentUri { get; }
    public ODataMetadataContext(bool isResponse, IEdmModel model, Uri metadataDocumentUri);
    public ODataMetadataContext(bool isResponse, Func`2<IEdmEntityType, bool> operationsBoundToEntityTypeMustBeContainerQualified, EdmTypeResolver edmTypeResolver, IEdmModel model, Uri metadataDocumentUri);
    public sealed virtual IEdmModel get_Model();
    public sealed virtual Uri get_ServiceBaseUri();
    public sealed virtual Uri get_MetadataDocumentUri();
    public sealed virtual ODataEntityMetadataBuilder GetEntityMetadataBuilderForReader(IODataJsonLightReaderEntryState entryState);
    public sealed virtual IEdmFunctionImport[] GetAlwaysBindableOperationsForType(IEdmType bindingType);
    public sealed virtual bool OperationsBoundToEntityTypeMustBeContainerQualified(IEdmEntityType entityType);
}
internal class Microsoft.Data.OData.Evaluation.ODataMissingOperationGenerator : object {
    private IODataMetadataContext metadataContext;
    private IODataEntryMetadataContext entryMetadataContext;
    private List`1<ODataAction> computedActions;
    private List`1<ODataFunction> computedFunctions;
    internal ODataMissingOperationGenerator(IODataEntryMetadataContext entryMetadataContext, IODataMetadataContext metadataContext);
    internal IEnumerable`1<ODataAction> GetComputedActions();
    internal IEnumerable`1<ODataFunction> GetComputedFunctions();
    private static HashSet`1<IEdmFunctionImport> GetFunctionImportsInEntry(ODataEntry entry, IEdmModel model, Uri metadataDocumentUri);
    private void ComputeMissingOperationsToEntry();
}
internal abstract class Microsoft.Data.OData.Evaluation.ODataUriBuilder : object {
    internal virtual Uri BuildBaseUri();
    internal virtual Uri BuildEntitySetUri(Uri baseUri, string entitySetName);
    internal virtual Uri BuildEntityInstanceUri(Uri baseUri, ICollection`1<KeyValuePair`2<string, object>> keyProperties, string entityTypeName);
    internal virtual Uri BuildStreamEditLinkUri(Uri baseUri, string streamPropertyName);
    internal virtual Uri BuildStreamReadLinkUri(Uri baseUri, string streamPropertyName);
    internal virtual Uri BuildNavigationLinkUri(Uri baseUri, string navigationPropertyName);
    internal virtual Uri BuildAssociationLinkUri(Uri baseUri, string navigationPropertyName);
    internal virtual Uri BuildOperationTargetUri(Uri baseUri, string operationName, string bindingParameterTypeName);
    internal virtual Uri AppendTypeSegment(Uri baseUri, string typeName);
}
internal class Microsoft.Data.OData.Evaluation.UrlConvention : object {
    private static string ConventionTermNamespace;
    private static string ConventionTermName;
    private static string KeyAsSegmentConventionName;
    private static string UrlConventionHeaderName;
    private bool generateKeyAsSegment;
    internal bool GenerateKeyAsSegment { get; }
    private UrlConvention(bool generateKeyAsSegment);
    internal bool get_GenerateKeyAsSegment();
    internal static UrlConvention CreateWithExplicitValue(bool generateKeyAsSegment);
    internal static UrlConvention ForEntityContainer(IEdmModel model, IEdmEntityContainer container);
    internal static UrlConvention ForUserSettingAndTypeContext(Nullable`1<bool> keyAsSegment, IODataFeedAndEntryTypeContext typeContext);
    private static bool IsKeyAsSegmentUrlConventionAnnotation(IEdmValueAnnotation annotation);
    private static bool IsKeyAsSegment(IEdmExpression value);
    private static bool IsUrlConventionTerm(IEdmTerm term);
}
internal static class Microsoft.Data.OData.ExceptionUtils : object {
    private static Type OutOfMemoryType;
    private static ExceptionUtils();
    internal static bool IsCatchableExceptionType(Exception e);
    internal static void CheckArgumentNotNull(T value, string parameterName);
    internal static void CheckArgumentStringNotEmpty(string value, string parameterName);
    internal static void CheckArgumentStringNotNullOrEmpty(string value, string parameterName);
    internal static void CheckIntegerNotNegative(int value, string parameterName);
    internal static void CheckIntegerPositive(int value, string parameterName);
    internal static void CheckLongPositive(long value, string parameterName);
    internal static void CheckArgumentCollectionNotNullOrEmpty(ICollection`1<T> value, string parameterName);
}
internal class Microsoft.Data.OData.FeedWithoutExpectedTypeValidator : object {
    private IEdmEntityType itemType;
    internal void ValidateEntry(IEdmEntityType entityType);
}
internal class Microsoft.Data.OData.GeographyTypeConverter : object {
    public sealed virtual object TokenizeFromXml(XmlReader reader);
    public sealed virtual void WriteAtom(object instance, XmlWriter writer);
    public sealed virtual void WriteVerboseJson(object instance, IJsonWriter jsonWriter, string typeName, ODataVersion odataVersion);
    public sealed virtual void WriteJsonLight(object instance, IJsonWriter jsonWriter, ODataVersion odataVersion);
}
internal class Microsoft.Data.OData.GeometryTypeConverter : object {
    public sealed virtual object TokenizeFromXml(XmlReader reader);
    public sealed virtual void WriteAtom(object instance, XmlWriter writer);
    public sealed virtual void WriteVerboseJson(object instance, IJsonWriter jsonWriter, string typeName, ODataVersion odataVersion);
    public sealed virtual void WriteJsonLight(object instance, IJsonWriter jsonWriter, ODataVersion odataVersion);
}
internal class Microsoft.Data.OData.HttpHeaderValue : Dictionary`2<string, HttpHeaderValueElement> {
    [CompilerGeneratedAttribute]
private static Func`2<HttpHeaderValueElement, string> CS$<>9__CachedAnonymousMethodDelegate1;
    public virtual string ToString();
    [CompilerGeneratedAttribute]
private static string <ToString>b__0(HttpHeaderValueElement element);
}
internal class Microsoft.Data.OData.HttpHeaderValueElement : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<KeyValuePair`2<string, string>> <Parameters>k__BackingField;
    public string Name { get; private set; }
    public string Value { get; private set; }
    public IEnumerable`1<KeyValuePair`2<string, string>> Parameters { get; private set; }
    public HttpHeaderValueElement(string name, string value, IEnumerable`1<KeyValuePair`2<string, string>> parameters);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<KeyValuePair`2<string, string>> get_Parameters();
    [CompilerGeneratedAttribute]
private void set_Parameters(IEnumerable`1<KeyValuePair`2<string, string>> value);
    public virtual string ToString();
    private static void AppendNameValuePair(StringBuilder stringBuilder, string name, string value);
}
internal abstract class Microsoft.Data.OData.HttpHeaderValueLexer : object {
    internal static string ElementSeparator;
    internal static string ParameterSeparator;
    internal static string ValueSeparator;
    private string httpHeaderName;
    private string httpHeaderValue;
    private int startIndexOfNextItem;
    private string value;
    private string originalText;
    [CompilerGeneratedAttribute]
private static Func`2<string, Exception> CS$<>9__CachedAnonymousMethodDelegate2;
    internal string Value { get; }
    internal string OriginalText { get; }
    internal HttpHeaderValueItemType Type { get; }
    private HttpHeaderValueLexer(string httpHeaderName, string httpHeaderValue, string value, string originalText, int startIndexOfNextItem);
    internal string get_Value();
    internal string get_OriginalText();
    internal abstract virtual HttpHeaderValueItemType get_Type();
    internal static HttpHeaderValueLexer Create(string httpHeaderName, string httpHeaderValue);
    internal HttpHeaderValue ToHttpHeaderValue();
    internal abstract virtual HttpHeaderValueLexer ReadNext();
    private static HttpHeaderValueElement ReadHttpHeaderValueElement(HttpHeaderValueLexer& lexer);
    private static KeyValuePair`2<string, string> ReadKeyValuePair(HttpHeaderValueLexer& lexer);
    private bool EndOfHeaderValue();
    private HttpHeaderValueLexer ReadNextTokenOrQuotedString();
    private HttpHeaderToken ReadNextToken();
    private HttpHeaderSeparator ReadNextSeparator();
    [CompilerGeneratedAttribute]
private static Exception <ReadNextTokenOrQuotedString>b__1(string message);
}
internal static class Microsoft.Data.OData.HttpUtils : object {
    [CompilerGeneratedAttribute]
private static Comparison`1<CharsetPart> CS$<>9__CachedAnonymousMethodDelegate1;
    [CompilerGeneratedAttribute]
private static Func`2<string, Exception> CS$<>9__CachedAnonymousMethodDelegated;
    internal static IList`1<KeyValuePair`2<string, string>> ReadMimeType(string contentType, String& mediaTypeName, String& mediaTypeCharset);
    internal static string BuildContentType(MediaType mediaType, Encoding encoding);
    internal static IList`1<KeyValuePair`2<MediaType, string>> MediaTypesFromString(string text);
    internal static bool CompareMediaTypeNames(string mediaTypeName1, string mediaTypeName2);
    internal static bool CompareMediaTypeParameterNames(string parameterName1, string parameterName2);
    internal static Encoding EncodingFromAcceptableCharsets(string acceptableCharsets, MediaType mediaType, Encoding utf8Encoding, Encoding defaultEncoding);
    internal static void ReadQualityValue(string text, Int32& textIndex, Int32& qualityValue);
    internal static void ValidateHttpMethod(string httpMethodString);
    internal static bool IsQueryMethod(string httpMethod);
    internal static string GetStatusMessage(int statusCode);
    internal static Encoding GetEncodingFromCharsetName(string charsetName);
    internal static string ReadTokenOrQuotedStringValue(string headerName, string headerText, Int32& textIndex, Boolean& isQuotedString, Func`2<string, Exception> createException);
    internal static bool SkipWhitespace(string text, Int32& textIndex);
    private static IEnumerable`1<CharsetPart> AcceptCharsetParts(string headerValue);
    private static IList`1<KeyValuePair`2<MediaType, string>> ReadMediaTypes(string text);
    private static void ReadMediaTypeParameter(string text, Int32& textIndex, List`1& parameters, String& charset);
    private static void ReadMediaTypeAndSubtype(string mediaTypeName, Int32& textIndex, String& type, String& subType);
    private static bool IsHttpToken(char c);
    private static bool IsValidInQuotedHeaderValue(char c);
    private static bool IsHttpSeparator(char c);
    private static bool ReadToken(string text, Int32& textIndex);
    private static int DigitToInt32(char c);
    private static bool IsHttpElementSeparator(char c);
    private static bool ReadLiteral(string text, int textIndex, string literal);
    [CompilerGeneratedAttribute]
private static int <EncodingFromAcceptableCharsets>b__0(CharsetPart x, CharsetPart y);
    [CompilerGeneratedAttribute]
private static Exception <ReadMediaTypeParameter>b__c(string message);
}
[ObsoleteAttribute("The InstanceAnnotationCollection class is deprecated, use the InstanceAnnotations property on objects that support instance annotations instead.")]
[DefaultMemberAttribute("Item")]
public class Microsoft.Data.OData.InstanceAnnotationCollection : object {
    private Dictionary`2<string, ODataValue> inner;
    public int Count { get; }
    public ODataValue Item { get; public set; }
    public int get_Count();
    public ODataValue get_Item(string key);
    public void set_Item(string key, ODataValue value);
    public bool ContainsKey(string key);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, ODataValue>> GetEnumerator();
    public void Clear();
    public void Add(string key, ODataValue value);
    public bool Remove(string key);
    public bool TryGetValue(string key, ODataValue& value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class Microsoft.Data.OData.InstanceAnnotationWriteTracker : object {
    private HashSet`1<string> writeStatus;
    public bool IsAnnotationWritten(string key);
    public bool MarkAnnotationWritten(string key);
}
internal enum Microsoft.Data.OData.InternalErrorCodes : Enum {
    public int value__;
    public static InternalErrorCodes ODataWriterCore_WriteEnd_UnreachableCodePath;
    public static InternalErrorCodes ODataWriterCore_ValidateTransition_UnreachableCodePath;
    public static InternalErrorCodes ODataWriterCore_Scope_Create_UnreachableCodePath;
    public static InternalErrorCodes ODataWriterCore_DuplicatePropertyNamesChecker;
    public static InternalErrorCodes ODataWriterCore_ParentNavigationLinkScope;
    public static InternalErrorCodes ODataUtils_VersionString_UnreachableCodePath;
    public static InternalErrorCodes ODataUtilsInternal_ToDataServiceVersion_UnreachableCodePath;
    public static InternalErrorCodes ODataUtilsInternal_IsPayloadKindSupported_UnreachableCodePath;
    public static InternalErrorCodes ODataUtils_GetDefaultEncoding_UnreachableCodePath;
    public static InternalErrorCodes ODataUtils_ParseSerializableEpmAnnotations_UnreachableCodePath;
    public static InternalErrorCodes ODataMessageWriter_WriteProperty;
    public static InternalErrorCodes ODataMessageWriter_WriteEntityReferenceLink;
    public static InternalErrorCodes ODataMessageWriter_WriteEntityReferenceLinks;
    public static InternalErrorCodes ODataMessageWriter_WriteError;
    public static InternalErrorCodes ODataMessageWriter_WriteServiceDocument;
    public static InternalErrorCodes ODataMessageWriter_WriteMetadataDocument;
    public static InternalErrorCodes EpmSyndicationWriter_WriteEntryEpm_ContentTarget;
    public static InternalErrorCodes EpmSyndicationWriter_CreateAtomTextConstruct;
    public static InternalErrorCodes EpmSyndicationWriter_WritePersonEpm;
    public static InternalErrorCodes EpmSyndicationWriter_WriteParentSegment_TargetSegmentName;
    public static InternalErrorCodes ODataAtomConvert_ToString;
    public static InternalErrorCodes ODataCollectionWriter_CreateCollectionWriter_UnreachableCodePath;
    public static InternalErrorCodes ODataCollectionWriterCore_ValidateTransition_UnreachableCodePath;
    public static InternalErrorCodes ODataCollectionWriterCore_WriteEnd_UnreachableCodePath;
    public static InternalErrorCodes ODataParameterWriter_CannotCreateParameterWriterForFormat;
    public static InternalErrorCodes ODataParameterWriterCore_ValidateTransition_InvalidTransitionFromStart;
    public static InternalErrorCodes ODataParameterWriterCore_ValidateTransition_InvalidTransitionFromCanWriteParameter;
    public static InternalErrorCodes ODataParameterWriterCore_ValidateTransition_InvalidTransitionFromActiveSubWriter;
    public static InternalErrorCodes ODataParameterWriterCore_ValidateTransition_InvalidTransitionFromCompleted;
    public static InternalErrorCodes ODataParameterWriterCore_ValidateTransition_InvalidTransitionFromError;
    public static InternalErrorCodes ODataParameterWriterCore_ValidateTransition_UnreachableCodePath;
    public static InternalErrorCodes ODataParameterWriterCore_WriteEndImplementation_UnreachableCodePath;
    public static InternalErrorCodes QueryPathValidator_ValidateSegment_Root;
    public static InternalErrorCodes QueryPathValidator_ValidateSegment_NonRoot;
    public static InternalErrorCodes ODataBatchWriter_ValidateTransition_UnreachableCodePath;
    public static InternalErrorCodes ODataBatchWriterUtils_HttpMethod_ToText_UnreachableCodePath;
    public static InternalErrorCodes ODataBatchReader_ReadImplementation;
    public static InternalErrorCodes ODataBatchReader_GetEndBoundary_Completed;
    public static InternalErrorCodes ODataBatchReader_GetEndBoundary_Exception;
    public static InternalErrorCodes ODataBatchReader_GetEndBoundary_UnknownValue;
    public static InternalErrorCodes ODataBatchReaderStream_SkipToBoundary;
    public static InternalErrorCodes ODataBatchReaderStream_ReadLine;
    public static InternalErrorCodes ODataBatchReaderStream_ReadWithDelimiter;
    public static InternalErrorCodes ODataBatchReaderStreamBuffer_ScanForBoundary;
    public static InternalErrorCodes ODataBatchReaderStreamBuffer_ReadWithLength;
    public static InternalErrorCodes JsonReader_Read;
    public static InternalErrorCodes ODataReader_CreateReader_UnreachableCodePath;
    public static InternalErrorCodes ODataReaderCore_ReadImplementation;
    public static InternalErrorCodes ODataReaderCoreAsync_ReadAsynchronously;
    public static InternalErrorCodes ODataVerboseJsonEntryAndFeedDeserializer_ReadFeedProperty;
    public static InternalErrorCodes ODataVerboseJsonReader_ReadEntryStart;
    public static InternalErrorCodes ODataVerboseJsonPropertyAndValueDeserializer_ReadPropertyValue;
    public static InternalErrorCodes ODataCollectionReader_CreateReader_UnreachableCodePath;
    public static InternalErrorCodes ODataCollectionReaderCore_ReadImplementation;
    public static InternalErrorCodes ODataCollectionReaderCoreAsync_ReadAsynchronously;
    public static InternalErrorCodes ODataParameterReaderCore_ReadImplementation;
    public static InternalErrorCodes ODataParameterReaderCoreAsync_ReadAsynchronously;
    public static InternalErrorCodes ODataParameterReaderCore_ValueMustBePrimitiveOrComplexOrNull;
    public static InternalErrorCodes ODataAtomReader_ReadAtNavigationLinkStartImplementation;
    public static InternalErrorCodes ODataAtomPropertyAndValueDeserializer_ReadNonEntityValue;
    public static InternalErrorCodes AtomValueUtils_ConvertStringToPrimitive;
    public static InternalErrorCodes EdmCoreModel_PrimitiveType;
    public static InternalErrorCodes EpmSyndicationReader_ReadEntryEpm_ContentTarget;
    public static InternalErrorCodes EpmSyndicationReader_ReadParentSegment_TargetSegmentName;
    public static InternalErrorCodes EpmSyndicationReader_ReadPersonEpm;
    public static InternalErrorCodes EpmReader_SetEpmValueForSegment_TypeKind;
    public static InternalErrorCodes EpmReader_SetEpmValueForSegment_StreamProperty;
    public static InternalErrorCodes ReaderValidationUtils_ResolveAndValidateTypeName_Strict_TypeKind;
    public static InternalErrorCodes ReaderValidationUtils_ResolveAndValidateTypeName_Lax_TypeKind;
    public static InternalErrorCodes EpmExtensionMethods_ToAttributeValue_SyndicationItemProperty;
    public static InternalErrorCodes ODataMetadataFormat_CreateOutputContextAsync;
    public static InternalErrorCodes ODataMetadataFormat_CreateInputContextAsync;
    public static InternalErrorCodes ODataModelFunctions_UnsupportedMethodOrProperty;
    public static InternalErrorCodes ODataJsonLightPropertyAndValueDeserializer_ReadPropertyValue;
    public static InternalErrorCodes ODataJsonLightPropertyAndValueDeserializer_GetNonEntityValueKind;
    public static InternalErrorCodes ODataJsonLightEntryAndFeedDeserializer_ReadFeedProperty;
    public static InternalErrorCodes ODataJsonLightReader_ReadEntryStart;
    public static InternalErrorCodes ODataJsonLightEntryAndFeedDeserializer_ReadTopLevelFeedAnnotations;
    public static InternalErrorCodes ODataJsonLightReader_ReadFeedEnd;
    public static InternalErrorCodes ODataJsonLightCollectionDeserializer_ReadCollectionStart;
    public static InternalErrorCodes ODataJsonLightCollectionDeserializer_ReadCollectionStart_TypeKindFromPayloadFunc;
    public static InternalErrorCodes ODataJsonLightCollectionDeserializer_ReadCollectionEnd;
    public static InternalErrorCodes ODataJsonLightEntityReferenceLinkDeserializer_ReadSingleEntityReferenceLink;
    public static InternalErrorCodes ODataJsonLightEntityReferenceLinkDeserializer_ReadEntityReferenceLinksAnnotations;
    public static InternalErrorCodes ODataJsonLightParameterDeserializer_ReadNextParameter;
    public static InternalErrorCodes ODataJsonLightAnnotationGroupDeserializer_ReadAnnotationGroupDeclaration;
    public static InternalErrorCodes EdmTypeWriterResolver_GetReturnTypeForFunctionImportGroup;
    public static InternalErrorCodes ODataVersionCache_UnknownVersion;
}
internal enum Microsoft.Data.OData.InternalErrorCodesCommon : Enum {
    public int value__;
    public static InternalErrorCodesCommon EdmLibraryExtensions_ToTypeReference;
    public static InternalErrorCodesCommon EdmLibraryExtensions_ToClrType;
    public static InternalErrorCodesCommon EdmLibraryExtensions_PrimitiveTypeReference;
    public static InternalErrorCodesCommon EdmLibraryExtensions_IsAssignableFrom_Primitive;
    public static InternalErrorCodesCommon EdmLibraryExtensions_IsAssignableFrom_Type;
    public static InternalErrorCodesCommon EdmLibraryExtensions_BaseType;
    public static InternalErrorCodesCommon EdmLibraryExtensions_Clone_TypeKind;
    public static InternalErrorCodesCommon EdmLibraryExtensions_Clone_PrimitiveTypeKind;
}
internal interface Microsoft.Data.OData.IODataBatchOperationListener {
    public abstract virtual void BatchOperationContentStreamRequested();
    public abstract virtual Task BatchOperationContentStreamRequestedAsync();
    public abstract virtual void BatchOperationContentStreamDisposed();
}
internal interface Microsoft.Data.OData.IODataFeedAndEntryTypeContext {
    public string EntitySetName { get; }
    public string EntitySetElementTypeName { get; }
    public string ExpectedEntityTypeName { get; }
    public bool IsMediaLinkEntry { get; }
    public UrlConvention UrlConvention { get; }
    public abstract virtual string get_EntitySetName();
    public abstract virtual string get_EntitySetElementTypeName();
    public abstract virtual string get_ExpectedEntityTypeName();
    public abstract virtual bool get_IsMediaLinkEntry();
    public abstract virtual UrlConvention get_UrlConvention();
}
internal interface Microsoft.Data.OData.IODataOutputInStreamErrorListener {
    public abstract virtual void OnInStreamError();
}
internal interface Microsoft.Data.OData.IODataReaderWriterListener {
    public abstract virtual void OnException();
    public abstract virtual void OnCompleted();
}
public interface Microsoft.Data.OData.IODataRequestMessage {
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    public Uri Url { get; public set; }
    public string Method { get; public set; }
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public abstract virtual Uri get_Url();
    public abstract virtual void set_Url(Uri value);
    public abstract virtual string get_Method();
    public abstract virtual void set_Method(string value);
    public abstract virtual string GetHeader(string headerName);
    public abstract virtual void SetHeader(string headerName, string headerValue);
    public abstract virtual Stream GetStream();
}
public interface Microsoft.Data.OData.IODataRequestMessageAsync {
    public abstract virtual Task`1<Stream> GetStreamAsync();
}
public interface Microsoft.Data.OData.IODataResponseMessage {
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    public int StatusCode { get; public set; }
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public abstract virtual int get_StatusCode();
    public abstract virtual void set_StatusCode(int value);
    public abstract virtual string GetHeader(string headerName);
    public abstract virtual void SetHeader(string headerName, string headerValue);
    public abstract virtual Stream GetStream();
}
public interface Microsoft.Data.OData.IODataResponseMessageAsync {
    public abstract virtual Task`1<Stream> GetStreamAsync();
}
public interface Microsoft.Data.OData.IODataUrlResolver {
    public abstract virtual Uri ResolveUrl(Uri baseUri, Uri payloadUri);
}
internal interface Microsoft.Data.OData.IPrimitiveTypeConverter {
    public abstract virtual object TokenizeFromXml(XmlReader reader);
    public abstract virtual void WriteAtom(object instance, XmlWriter writer);
    public abstract virtual void WriteVerboseJson(object instance, IJsonWriter jsonWriter, string typeName, ODataVersion odataVersion);
    public abstract virtual void WriteJsonLight(object instance, IJsonWriter jsonWriter, ODataVersion odataVersion);
}
internal class Microsoft.Data.OData.Json.BufferingJsonReader : JsonReader {
    protected BufferedNode bufferedNodesHead;
    protected BufferedNode currentBufferedNode;
    private int maxInnerErrorDepth;
    private string inStreamErrorPropertyName;
    private bool isBuffering;
    private bool removeOnNextRead;
    private bool parsingInStreamError;
    private bool disableInStreamErrorDetection;
    public JsonNodeType NodeType { get; }
    public object Value { get; }
    public string RawValue { get; }
    internal bool DisableInStreamErrorDetection { get; internal set; }
    internal bool IsBuffering { get; }
    internal BufferingJsonReader(TextReader reader, string inStreamErrorPropertyName, int maxInnerErrorDepth, ODataFormat jsonFormat);
    public virtual JsonNodeType get_NodeType();
    public virtual object get_Value();
    public virtual string get_RawValue();
    internal bool get_DisableInStreamErrorDetection();
    internal void set_DisableInStreamErrorDetection(bool value);
    internal bool get_IsBuffering();
    public virtual bool Read();
    internal void StartBuffering();
    internal object BookmarkCurrentPosition();
    internal void MoveToBookmark(object bookmark);
    internal void StopBuffering();
    internal bool StartBufferingAndTryToReadInStreamErrorPropertyValue(ODataError& error);
    protected bool ReadInternal();
    protected virtual void ProcessObjectValue();
    private bool ReadNextAndCheckForInStreamError();
    private bool TryReadInStreamErrorPropertyValue(ODataError& error);
    private bool TryReadMessagePropertyValue(ODataError error);
    private bool TryReadInnerErrorPropertyValue(ODataInnerError& innerError, int recursionDepth);
    private bool TryReadErrorStringPropertyValue(String& stringValue);
    private void SkipValueInternal();
    private void RemoveFirstNodeInBuffer();
}
internal interface Microsoft.Data.OData.Json.IJsonWriter {
    public abstract virtual void StartPaddingFunctionScope();
    public abstract virtual void EndPaddingFunctionScope();
    public abstract virtual void StartObjectScope();
    public abstract virtual void EndObjectScope();
    public abstract virtual void StartArrayScope();
    public abstract virtual void EndArrayScope();
    public abstract virtual void WriteDataWrapper();
    public abstract virtual void WriteDataArrayName();
    public abstract virtual void WriteName(string name);
    public abstract virtual void WritePaddingFunctionName(string functionName);
    public abstract virtual void WriteValue(bool value);
    public abstract virtual void WriteValue(int value);
    public abstract virtual void WriteValue(float value);
    public abstract virtual void WriteValue(short value);
    public abstract virtual void WriteValue(long value);
    public abstract virtual void WriteValue(double value);
    public abstract virtual void WriteValue(Guid value);
    public abstract virtual void WriteValue(decimal value);
    public abstract virtual void WriteValue(DateTime value, ODataVersion odataVersion);
    public abstract virtual void WriteValue(DateTimeOffset value, ODataVersion odataVersion);
    public abstract virtual void WriteValue(TimeSpan value);
    public abstract virtual void WriteValue(byte value);
    public abstract virtual void WriteValue(sbyte value);
    public abstract virtual void WriteValue(string value);
    public abstract virtual void WriteRawString(string value);
    public abstract virtual void Flush();
    public abstract virtual void WriteValueSeparator();
    public abstract virtual void StartScope(ScopeType type);
}
internal class Microsoft.Data.OData.Json.IndentedTextWriter : TextWriter {
    private static string IndentationString;
    private TextWriter writer;
    private bool enableIndentation;
    private int indentLevel;
    private bool indentationPending;
    public Encoding Encoding { get; }
    public string NewLine { get; }
    public IndentedTextWriter(TextWriter writer, bool enableIndentation);
    public virtual Encoding get_Encoding();
    public virtual string get_NewLine();
    public void IncreaseIndentation();
    public void DecreaseIndentation();
    public virtual void Flush();
    public virtual void Write(string s);
    public virtual void Write(char value);
    public virtual void WriteLine();
    private static void InternalCloseOrDispose();
    private void WriteIndentation();
}
internal interface Microsoft.Data.OData.Json.IODataJsonOperationsDeserializerContext {
    public JsonReader JsonReader { get; }
    public abstract virtual JsonReader get_JsonReader();
    public abstract virtual Uri ProcessUriFromPayload(string uriFromPayload);
    public abstract virtual void AddActionToEntry(ODataAction action);
    public abstract virtual void AddFunctionToEntry(ODataFunction function);
}
internal static class Microsoft.Data.OData.Json.JsonConstants : object {
    internal static string ODataResultsName;
    internal static string ODataDataWrapper;
    internal static string ODataDataWrapperPropertyName;
    internal static string ODataEntryIdName;
    internal static string ODataMetadataName;
    internal static string ODataMetadataUriName;
    internal static string ODataMetadataTypeName;
    internal static string ODataMetadataETagName;
    internal static string ODataMetadataMediaResourceName;
    internal static string ODataMetadataMediaUriName;
    internal static string ODataMetadataContentTypeName;
    internal static string ODataMetadataMediaETagName;
    internal static string ODataMetadataEditMediaName;
    internal static string ODataMetadataPropertiesName;
    internal static string ODataMetadataPropertiesAssociationUriName;
    internal static string ODataCountName;
    internal static string ODataNextLinkName;
    internal static string ODataDeferredName;
    internal static string ODataNavigationLinkUriName;
    internal static string ODataUriName;
    internal static string ODataActionsMetadataName;
    internal static string ODataFunctionsMetadataName;
    internal static string ODataOperationTitleName;
    internal static string ODataOperationMetadataName;
    internal static string ODataOperationTargetName;
    internal static string ODataErrorName;
    internal static string ODataErrorCodeName;
    internal static string ODataErrorMessageName;
    internal static string ODataErrorMessageLanguageName;
    internal static string ODataErrorMessageValueName;
    internal static string ODataErrorInnerErrorName;
    internal static string ODataErrorInnerErrorMessageName;
    internal static string ODataErrorInnerErrorTypeNameName;
    internal static string ODataErrorInnerErrorStackTraceName;
    internal static string ODataErrorInnerErrorInnerErrorName;
    internal static string ODataDateTimeFormat;
    internal static string ODataDateTimeOffsetFormat;
    internal static string ODataDateTimeOffsetPlusSign;
    internal static string ODataServiceDocumentEntitySetsName;
    internal static string JsonTrueLiteral;
    internal static string JsonFalseLiteral;
    internal static string JsonNullLiteral;
    internal static string StartObjectScope;
    internal static string EndObjectScope;
    internal static string StartArrayScope;
    internal static string EndArrayScope;
    internal static string StartPaddingFunctionScope;
    internal static string EndPaddingFunctionScope;
    internal static string ObjectMemberSeparator;
    internal static string ArrayElementSeparator;
    internal static string NameValueSeparator;
    internal static char QuoteCharacter;
}
internal enum Microsoft.Data.OData.Json.JsonNodeType : Enum {
    public int value__;
    public static JsonNodeType None;
    public static JsonNodeType StartObject;
    public static JsonNodeType EndObject;
    public static JsonNodeType StartArray;
    public static JsonNodeType EndArray;
    public static JsonNodeType Property;
    public static JsonNodeType PrimitiveValue;
    public static JsonNodeType EndOfInput;
}
[DebuggerDisplayAttribute("{NodeType}: {Value}")]
internal class Microsoft.Data.OData.Json.JsonReader : object {
    private static int InitialCharacterBufferSize;
    private static int MaxCharacterCountToMove;
    private static string DateTimeFormatPrefix;
    private static string DateTimeFormatSuffix;
    private TextReader reader;
    private Stack`1<Scope> scopes;
    private bool allowAnnotations;
    private bool supportAspNetDateTimeFormat;
    private bool endOfInputReached;
    private Char[] characterBuffer;
    private int storedCharacterCount;
    private int tokenStartIndex;
    private JsonNodeType nodeType;
    private object nodeValue;
    private string nodeRawValue;
    private StringBuilder stringValueBuilder;
    public object Value { get; }
    public JsonNodeType NodeType { get; }
    public string RawValue { get; }
    public JsonReader(TextReader reader, ODataFormat jsonFormat);
    public virtual object get_Value();
    public virtual JsonNodeType get_NodeType();
    public virtual string get_RawValue();
    public virtual bool Read();
    private void TryAppendJsonRawValue(string rawValue);
    private void TryAppendJsonRawValue(char rawValue);
    private static bool IsWhitespaceCharacter(char character);
    private static object TryParseDateTimePrimitiveValue(string stringValue);
    private JsonNodeType ParseValue(String& rawValue);
    private JsonNodeType ParseProperty(String& rawValue);
    private string ParseStringPrimitiveValue();
    private string ParseStringPrimitiveValue(Boolean& hasLeadingBackslash);
    private object ParseNullPrimitiveValue(String& rawValue);
    private object ParseBooleanPrimitiveValue(String& rawValue);
    private object ParseNumberPrimitiveValue(String& rawValue);
    private string ParseName(String& rawValue);
    private bool EndOfInput();
    private void PushScope(ScopeType newScopeType);
    private void PopScope();
    private void TryPopPropertyScope();
    private bool SkipWhitespaces();
    private bool EnsureAvailableCharacters(int characterCountAfterTokenStart);
    private string ConsumeTokenToString(int characterCount);
    private bool ReadInput();
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Json.JsonReaderExtensions : object {
    [ExtensionAttribute]
internal static void ReadStartObject(JsonReader jsonReader);
    [ExtensionAttribute]
internal static void ReadEndObject(JsonReader jsonReader);
    [ExtensionAttribute]
internal static void ReadStartArray(JsonReader jsonReader);
    [ExtensionAttribute]
internal static void ReadEndArray(JsonReader jsonReader);
    [ExtensionAttribute]
internal static string GetPropertyName(JsonReader jsonReader);
    [ExtensionAttribute]
internal static string ReadPropertyName(JsonReader jsonReader);
    [ExtensionAttribute]
internal static object ReadPrimitiveValue(JsonReader jsonReader);
    [ExtensionAttribute]
internal static string ReadStringValue(JsonReader jsonReader);
    [ExtensionAttribute]
internal static string ReadStringValue(JsonReader jsonReader, string propertyName);
    [ExtensionAttribute]
internal static Nullable`1<double> ReadDoubleValue(JsonReader jsonReader);
    [ExtensionAttribute]
internal static void SkipValue(JsonReader jsonReader);
    [ExtensionAttribute]
internal static void SkipValue(JsonReader jsonReader, StringBuilder jsonRawValueStringBuilder);
    [ExtensionAttribute]
internal static JsonNodeType ReadNext(JsonReader jsonReader);
    [ExtensionAttribute]
internal static bool IsOnValueNode(JsonReader jsonReader);
    [ConditionalAttribute("DEBUG")]
[ExtensionAttribute]
internal static void AssertNotBuffering(BufferingJsonReader bufferedJsonReader);
    [ConditionalAttribute("DEBUG")]
[ExtensionAttribute]
internal static void AssertBuffering(BufferingJsonReader bufferedJsonReader);
    internal static ODataException CreateException(string exceptionMessage);
    [ExtensionAttribute]
private static void ReadNext(JsonReader jsonReader, JsonNodeType expectedNodeType);
    [ExtensionAttribute]
private static void ValidateNodeType(JsonReader jsonReader, JsonNodeType expectedNodeType);
}
internal static class Microsoft.Data.OData.Json.JsonSharedUtils : object {
    internal static bool IsDoubleValueSerializedAsString(double value);
    internal static bool ValueTypeMatchesJsonType(ODataPrimitiveValue primitiveValue, IEdmPrimitiveTypeReference valueTypeReference);
}
internal static class Microsoft.Data.OData.Json.JsonValueUtils : object {
    private static long JsonDateTimeMinTimeTicks;
    private static Char[] DoubleIndicatingCharacters;
    private static String[] SpecialCharToEscapedStringMap;
    private static JsonValueUtils();
    internal static void WriteValue(TextWriter writer, bool value);
    internal static void WriteValue(TextWriter writer, int value);
    internal static void WriteValue(TextWriter writer, float value);
    internal static void WriteValue(TextWriter writer, short value);
    internal static void WriteValue(TextWriter writer, long value);
    internal static void WriteValue(TextWriter writer, double value, bool mustIncludeDecimalPoint);
    internal static void WriteValue(TextWriter writer, Guid value);
    internal static void WriteValue(TextWriter writer, decimal value);
    internal static void WriteValue(TextWriter writer, DateTime value, ODataJsonDateTimeFormat dateTimeFormat);
    internal static void WriteValue(TextWriter writer, DateTimeOffset value, ODataJsonDateTimeFormat dateTimeFormat);
    internal static void WriteValue(TextWriter writer, TimeSpan value);
    internal static void WriteValue(TextWriter writer, byte value);
    internal static void WriteValue(TextWriter writer, sbyte value);
    internal static void WriteValue(TextWriter writer, string value);
    internal static void WriteEscapedJsonString(TextWriter writer, string inputString);
    internal static long JsonTicksToDateTimeTicks(long ticks);
    private static void WriteQuoted(TextWriter writer, string text);
    private static long DateTimeTicksToJsonTicks(long ticks);
    private static DateTime GetUniversalDate(DateTime value);
    private static String[] CreateSpecialCharToEscapedStringMap();
}
internal class Microsoft.Data.OData.Json.JsonWriter : object {
    private IndentedTextWriter writer;
    private Stack`1<Scope> scopes;
    private bool mustWriteDecimalPointInDoubleValues;
    internal JsonWriter(TextWriter writer, bool indent, ODataFormat jsonFormat);
    public sealed virtual void StartPaddingFunctionScope();
    public sealed virtual void EndPaddingFunctionScope();
    public sealed virtual void StartObjectScope();
    public sealed virtual void EndObjectScope();
    public sealed virtual void StartArrayScope();
    public sealed virtual void EndArrayScope();
    public sealed virtual void WriteDataWrapper();
    public sealed virtual void WriteDataArrayName();
    public sealed virtual void WriteName(string name);
    public sealed virtual void WritePaddingFunctionName(string functionName);
    public sealed virtual void WriteValue(bool value);
    public sealed virtual void WriteValue(int value);
    public sealed virtual void WriteValue(float value);
    public sealed virtual void WriteValue(short value);
    public sealed virtual void WriteValue(long value);
    public sealed virtual void WriteValue(double value);
    public sealed virtual void WriteValue(Guid value);
    public sealed virtual void WriteValue(decimal value);
    public sealed virtual void WriteValue(DateTime value, ODataVersion odataVersion);
    public sealed virtual void WriteValue(DateTimeOffset value, ODataVersion odataVersion);
    public sealed virtual void WriteValue(TimeSpan value);
    public sealed virtual void WriteValue(byte value);
    public sealed virtual void WriteValue(sbyte value);
    public sealed virtual void WriteValue(string value);
    public sealed virtual void WriteRawString(string value);
    public sealed virtual void Flush();
    public sealed virtual void WriteValueSeparator();
    public sealed virtual void StartScope(ScopeType type);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Json.JsonWriterExtensions : object {
    [ExtensionAttribute]
internal static void WriteJsonObjectValue(IJsonWriter jsonWriter, IDictionary`2<string, object> jsonObjectValue, Action`1<IJsonWriter> injectPropertyAction, ODataVersion odataVersion);
    [ExtensionAttribute]
internal static void WritePrimitiveValue(IJsonWriter jsonWriter, object value, ODataVersion odataVersion);
    [ExtensionAttribute]
private static void WriteJsonArrayValue(IJsonWriter jsonWriter, IEnumerable arrayValue, ODataVersion odataVersion);
    [ExtensionAttribute]
private static void WriteJsonValue(IJsonWriter jsonWriter, object propertyValue, ODataVersion odataVersion);
}
internal abstract class Microsoft.Data.OData.Json.ODataJsonOutputContextBase : ODataOutputContext {
    protected IODataOutputInStreamErrorListener outputInStreamErrorListener;
    private Stream messageOutputStream;
    private AsyncBufferedStream asynchronousOutputStream;
    private TextWriter textWriter;
    private IJsonWriter jsonWriter;
    internal IJsonWriter JsonWriter { get; }
    protected internal ODataJsonOutputContextBase(ODataFormat format, TextWriter textWriter, ODataMessageWriterSettings messageWriterSettings, IEdmModel model);
    protected internal ODataJsonOutputContextBase(ODataFormat format, Stream messageStream, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver);
    internal IJsonWriter get_JsonWriter();
    internal void VerifyNotDisposed();
    internal void Flush();
    internal Task FlushAsync();
    protected virtual void Dispose(bool disposing);
    [CompilerGeneratedAttribute]
private Task <FlushAsync>b__0();
    [CompilerGeneratedAttribute]
private Task <FlushAsync>b__1(Task asyncBufferedStreamFlushTask);
}
internal static class Microsoft.Data.OData.Json.ODataJsonReaderCoreUtils : object {
    internal static ISpatial ReadSpatialValue(BufferingJsonReader jsonReader, bool insideJsonObjectValue, ODataInputContext inputContext, IEdmPrimitiveTypeReference expectedValueTypeReference, bool validateNullValue, int recursionDepth, string propertyName);
    internal static bool TryReadNullValue(BufferingJsonReader jsonReader, ODataInputContext inputContext, IEdmTypeReference expectedTypeReference, bool validateNullValue, string propertyName);
    private static IDictionary`2<string, object> ReadObjectValue(JsonReader jsonReader, bool insideJsonObjectValue, ODataInputContext inputContext, int recursionDepth);
    private static IEnumerable`1<object> ReadArrayValue(JsonReader jsonReader, ODataInputContext inputContext, int recursionDepth);
}
internal static class Microsoft.Data.OData.Json.ODataJsonWriterUtils : object {
    internal static void WriteError(IJsonWriter jsonWriter, Action`1<IEnumerable`1<ODataInstanceAnnotation>> writeInstanceAnnotationsDelegate, ODataError error, bool includeDebugInformation, int maxInnerErrorDepth, bool writingJsonLight);
    internal static void WriteMetadataWithTypeName(IJsonWriter jsonWriter, string typeName);
    internal static void StartJsonPaddingIfRequired(IJsonWriter jsonWriter, ODataMessageWriterSettings settings);
    internal static void EndJsonPaddingIfRequired(IJsonWriter jsonWriter, ODataMessageWriterSettings settings);
    internal static string UriToUriString(ODataOutputContext outputContext, Uri uri, bool makeAbsolute);
    private static void WriteError(IJsonWriter jsonWriter, string code, string message, string messageLanguage, ODataInnerError innerError, IEnumerable`1<ODataInstanceAnnotation> instanceAnnotations, Action`1<IEnumerable`1<ODataInstanceAnnotation>> writeInstanceAnnotationsDelegate, int maxInnerErrorDepth, bool writingJsonLight);
    private static void WriteInnerError(IJsonWriter jsonWriter, ODataInnerError innerError, string innerErrorPropertyName, int recursionDepth, int maxInnerErrorDepth);
}
internal interface Microsoft.Data.OData.JsonLight.IODataJsonLightReaderEntryState {
    public ODataEntry Entry { get; }
    public IEdmEntityType EntityType { get; }
    public ODataEntityMetadataBuilder MetadataBuilder { get; public set; }
    public bool AnyPropertyFound { get; public set; }
    public ODataJsonLightReaderNavigationLinkInfo FirstNavigationLinkInfo { get; public set; }
    public DuplicatePropertyNamesChecker DuplicatePropertyNamesChecker { get; }
    public SelectedPropertiesNode SelectedProperties { get; }
    public List`1<string> NavigationPropertiesRead { get; }
    public bool ProcessingMissingProjectedNavigationLinks { get; public set; }
    public abstract virtual ODataEntry get_Entry();
    public abstract virtual IEdmEntityType get_EntityType();
    public abstract virtual ODataEntityMetadataBuilder get_MetadataBuilder();
    public abstract virtual void set_MetadataBuilder(ODataEntityMetadataBuilder value);
    public abstract virtual bool get_AnyPropertyFound();
    public abstract virtual void set_AnyPropertyFound(bool value);
    public abstract virtual ODataJsonLightReaderNavigationLinkInfo get_FirstNavigationLinkInfo();
    public abstract virtual void set_FirstNavigationLinkInfo(ODataJsonLightReaderNavigationLinkInfo value);
    public abstract virtual DuplicatePropertyNamesChecker get_DuplicatePropertyNamesChecker();
    public abstract virtual SelectedPropertiesNode get_SelectedProperties();
    public abstract virtual List`1<string> get_NavigationPropertiesRead();
    public abstract virtual bool get_ProcessingMissingProjectedNavigationLinks();
    public abstract virtual void set_ProcessingMissingProjectedNavigationLinks(bool value);
}
internal interface Microsoft.Data.OData.JsonLight.IODataJsonLightValueSerializer {
    public IJsonWriter JsonWriter { get; }
    public ODataVersion Version { get; }
    public IEdmModel Model { get; }
    public ODataMessageWriterSettings Settings { get; }
    public abstract virtual IJsonWriter get_JsonWriter();
    public abstract virtual ODataVersion get_Version();
    public abstract virtual IEdmModel get_Model();
    public abstract virtual ODataMessageWriterSettings get_Settings();
    public abstract virtual void WriteNullValue();
    public abstract virtual void WriteComplexValue(ODataComplexValue complexValue, IEdmTypeReference metadataTypeReference, bool isTopLevel, bool isOpenPropertyType, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    public abstract virtual void WriteCollectionValue(ODataCollectionValue collectionValue, IEdmTypeReference metadataTypeReference, bool isTopLevelProperty, bool isInUri, bool isOpenPropertyType);
    public abstract virtual void WritePrimitiveValue(object value, IEdmTypeReference expectedTypeReference);
    public abstract virtual DuplicatePropertyNamesChecker CreateDuplicatePropertyNamesChecker();
}
internal interface Microsoft.Data.OData.JsonLight.IODataJsonLightWriterEntryState {
    public ODataEntry Entry { get; }
    public IEdmEntityType EntityType { get; }
    public IEdmEntityType EntityTypeFromMetadata { get; }
    public ODataFeedAndEntrySerializationInfo SerializationInfo { get; }
    public bool EditLinkWritten { get; public set; }
    public bool ReadLinkWritten { get; public set; }
    public bool MediaEditLinkWritten { get; public set; }
    public bool MediaReadLinkWritten { get; public set; }
    public bool MediaContentTypeWritten { get; public set; }
    public bool MediaETagWritten { get; public set; }
    public abstract virtual ODataEntry get_Entry();
    public abstract virtual IEdmEntityType get_EntityType();
    public abstract virtual IEdmEntityType get_EntityTypeFromMetadata();
    public abstract virtual ODataFeedAndEntrySerializationInfo get_SerializationInfo();
    public abstract virtual bool get_EditLinkWritten();
    public abstract virtual void set_EditLinkWritten(bool value);
    public abstract virtual bool get_ReadLinkWritten();
    public abstract virtual void set_ReadLinkWritten(bool value);
    public abstract virtual bool get_MediaEditLinkWritten();
    public abstract virtual void set_MediaEditLinkWritten(bool value);
    public abstract virtual bool get_MediaReadLinkWritten();
    public abstract virtual void set_MediaReadLinkWritten(bool value);
    public abstract virtual bool get_MediaContentTypeWritten();
    public abstract virtual void set_MediaContentTypeWritten(bool value);
    public abstract virtual bool get_MediaETagWritten();
    public abstract virtual void set_MediaETagWritten(bool value);
    public abstract virtual ODataFeedAndEntryTypeContext GetOrCreateTypeContext(IEdmModel model, bool writingResponse);
}
internal class Microsoft.Data.OData.JsonLight.JsonFullMetadataLevel : JsonLightMetadataLevel {
    private IEdmModel model;
    private Uri metadataDocumentUri;
    private Uri NonNullMetadataDocumentUri { get; }
    internal JsonFullMetadataLevel(Uri metadataDocumentUri, IEdmModel model);
    private Uri get_NonNullMetadataDocumentUri();
    internal virtual JsonLightTypeNameOracle GetTypeNameOracle(bool autoComputePayloadMetadataInJson);
    internal virtual bool ShouldWriteODataMetadataUri();
    internal virtual ODataEntityMetadataBuilder CreateEntityMetadataBuilder(ODataEntry entry, IODataFeedAndEntryTypeContext typeContext, ODataFeedAndEntrySerializationInfo serializationInfo, IEdmEntityType actualEntityType, SelectedPropertiesNode selectedProperties, bool isResponse, Nullable`1<bool> keyAsSegment);
    internal virtual void InjectMetadataBuilder(ODataEntry entry, ODataEntityMetadataBuilder builder);
}
internal class Microsoft.Data.OData.JsonLight.JsonFullMetadataTypeNameOracle : JsonLightTypeNameOracle {
    internal virtual string GetEntryTypeNameForWriting(string expectedTypeName, ODataEntry entry);
    internal virtual string GetValueTypeNameForWriting(ODataValue value, IEdmTypeReference typeReferenceFromMetadata, IEdmTypeReference typeReferenceFromValue, bool isOpenProperty);
}
internal class Microsoft.Data.OData.JsonLight.JsonLightAnnotationGroupDeserializer : ODataJsonLightDeserializer {
    private Dictionary`2<string, ODataJsonLightAnnotationGroup> annotationGroups;
    internal JsonLightAnnotationGroupDeserializer(ODataJsonLightInputContext inputContext);
    internal ODataJsonLightAnnotationGroup ReadAnnotationGroup(Func`2<string, object> readPropertyAnnotationValue, Func`3<string, DuplicatePropertyNamesChecker, object> readInstanceAnnotationValue);
    internal void AddAnnotationGroup(ODataJsonLightAnnotationGroup annotationGroup);
    private static void VerifyAnnotationGroupNameNotYetFound(ODataJsonLightAnnotationGroup annotationGroup);
    private static bool IsAnnotationGroupName(string propertyName);
    private static void VerifyAnnotationGroupNameFound(ODataJsonLightAnnotationGroup annotationGroup);
    private static void VerifyDataPropertyIsAnnotationName(string propertyName, ODataJsonLightAnnotationGroup annotationGroup);
    private static ODataException CreateExceptionForInvalidAnnotationInsideAnnotationGroup(string propertyName, ODataJsonLightAnnotationGroup annotationGroup);
    private ODataJsonLightAnnotationGroup ReadAnnotationGroupReference();
    private ODataJsonLightAnnotationGroup ReadAnnotationGroupDeclaration(Func`2<string, object> readPropertyAnnotationValue, Func`3<string, DuplicatePropertyNamesChecker, object> readInstanceAnnotationValue);
}
internal static class Microsoft.Data.OData.JsonLight.JsonLightConstants : object {
    internal static string ODataAnnotationNamespacePrefix;
    internal static char ODataPropertyAnnotationSeparatorChar;
    internal static string ODataNullAnnotationTrueValue;
    internal static string ODataValuePropertyName;
    internal static string ODataEntityReferenceLinkUrlName;
    internal static string ODataWorkspaceCollectionUrlName;
    internal static string ODataWorkspaceCollectionNameName;
    internal static string ODataAnnotationGroupNamePropertyName;
    internal static string MetadataUriSelectQueryOptionName;
    internal static char MetadataUriQueryOptionValueSeparator;
    internal static char MetadataUriQueryOptionSeparator;
    internal static char MetadataUriFragmentIndicator;
    internal static char MetadataUriFragmentPartSeparator;
    internal static string MetadataUriFragmentItemSelector;
    internal static char FunctionParameterStart;
    internal static char FunctionParameterEnd;
    internal static string FunctionParameterSeparator;
    internal static string MetadataUriFragmentNull;
}
internal abstract class Microsoft.Data.OData.JsonLight.JsonLightMetadataLevel : object {
    internal static JsonLightMetadataLevel Create(MediaType mediaType, Uri metadataDocumentUri, IEdmModel model, bool writingResponse);
    internal abstract virtual JsonLightTypeNameOracle GetTypeNameOracle(bool autoComputePayloadMetadataInJson);
    internal abstract virtual bool ShouldWriteODataMetadataUri();
    internal abstract virtual ODataEntityMetadataBuilder CreateEntityMetadataBuilder(ODataEntry entry, IODataFeedAndEntryTypeContext typeContext, ODataFeedAndEntrySerializationInfo serializationInfo, IEdmEntityType actualEntityType, SelectedPropertiesNode selectedProperties, bool isResponse, Nullable`1<bool> keyAsSegment);
    internal abstract virtual void InjectMetadataBuilder(ODataEntry entry, ODataEntityMetadataBuilder builder);
}
internal abstract class Microsoft.Data.OData.JsonLight.JsonLightTypeNameOracle : TypeNameOracle {
    internal abstract virtual string GetEntryTypeNameForWriting(string expectedTypeName, ODataEntry entry);
    internal abstract virtual string GetValueTypeNameForWriting(ODataValue value, IEdmTypeReference typeReferenceFromMetadata, IEdmTypeReference typeReferenceFromValue, bool isOpenProperty);
}
internal class Microsoft.Data.OData.JsonLight.JsonMinimalMetadataLevel : JsonLightMetadataLevel {
    internal virtual JsonLightTypeNameOracle GetTypeNameOracle(bool autoComputePayloadMetadataInJson);
    internal virtual bool ShouldWriteODataMetadataUri();
    internal virtual ODataEntityMetadataBuilder CreateEntityMetadataBuilder(ODataEntry entry, IODataFeedAndEntryTypeContext typeContext, ODataFeedAndEntrySerializationInfo serializationInfo, IEdmEntityType actualEntityType, SelectedPropertiesNode selectedProperties, bool isResponse, Nullable`1<bool> keyAsSegment);
    internal virtual void InjectMetadataBuilder(ODataEntry entry, ODataEntityMetadataBuilder builder);
}
internal class Microsoft.Data.OData.JsonLight.JsonMinimalMetadataTypeNameOracle : JsonLightTypeNameOracle {
    internal virtual string GetEntryTypeNameForWriting(string expectedTypeName, ODataEntry entry);
    internal virtual string GetValueTypeNameForWriting(ODataValue value, IEdmTypeReference typeReferenceFromMetadata, IEdmTypeReference typeReferenceFromValue, bool isOpenProperty);
}
internal class Microsoft.Data.OData.JsonLight.JsonNoMetadataLevel : JsonLightMetadataLevel {
    internal virtual JsonLightTypeNameOracle GetTypeNameOracle(bool autoComputePayloadMetadataInJson);
    internal virtual bool ShouldWriteODataMetadataUri();
    internal virtual ODataEntityMetadataBuilder CreateEntityMetadataBuilder(ODataEntry entry, IODataFeedAndEntryTypeContext typeContext, ODataFeedAndEntrySerializationInfo serializationInfo, IEdmEntityType actualEntityType, SelectedPropertiesNode selectedProperties, bool isResponse, Nullable`1<bool> keyAsSegment);
    internal virtual void InjectMetadataBuilder(ODataEntry entry, ODataEntityMetadataBuilder builder);
}
internal class Microsoft.Data.OData.JsonLight.JsonNoMetadataTypeNameOracle : JsonLightTypeNameOracle {
    internal virtual string GetEntryTypeNameForWriting(string expectedTypeName, ODataEntry entry);
    internal virtual string GetValueTypeNameForWriting(ODataValue value, IEdmTypeReference typeReferenceFromMetadata, IEdmTypeReference typeReferenceFromValue, bool isOpenProperty);
}
internal static class Microsoft.Data.OData.JsonLight.ODataAnnotationNames : object {
    internal static string ODataMetadata;
    internal static string ODataNull;
    internal static string ODataType;
    internal static string ODataId;
    internal static string ODataETag;
    internal static string ODataEditLink;
    internal static string ODataReadLink;
    internal static string ODataMediaEditLink;
    internal static string ODataMediaReadLink;
    internal static string ODataMediaContentType;
    internal static string ODataMediaETag;
    internal static string ODataCount;
    internal static string ODataNextLink;
    internal static string ODataNavigationLinkUrl;
    internal static string ODataBind;
    internal static string ODataAssociationLinkUrl;
    internal static string ODataAnnotationGroup;
    internal static string ODataAnnotationGroupReference;
    internal static string ODataError;
    internal static string ODataDeltaLink;
    internal static HashSet`1<string> KnownODataAnnotationNames;
    private static ODataAnnotationNames();
    internal static bool IsODataAnnotationName(string annotationName);
    internal static bool IsUnknownODataAnnotationName(string annotationName);
    internal static void ValidateIsCustomAnnotationName(string annotationName);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightCollectionDeserializer : ODataJsonLightPropertyAndValueDeserializer {
    private DuplicatePropertyNamesChecker duplicatePropertyNamesChecker;
    internal ODataJsonLightCollectionDeserializer(ODataJsonLightInputContext jsonLightInputContext);
    internal ODataCollectionStart ReadCollectionStart(DuplicatePropertyNamesChecker collectionStartDuplicatePropertyNamesChecker, bool isReadingNestedPayload, IEdmTypeReference expectedItemTypeReference, IEdmTypeReference& actualItemTypeReference);
    internal object ReadCollectionItem(IEdmTypeReference expectedItemTypeReference, CollectionWithoutExpectedTypeValidator collectionValidator);
    internal void ReadCollectionEnd(bool isReadingNestedPayload);
    [CompilerGeneratedAttribute]
private void <ReadCollectionEnd>b__9(PropertyParsingResult propertyParsingResult, string propertyName);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightCollectionReader : ODataCollectionReaderCoreAsync {
    private ODataJsonLightInputContext jsonLightInputContext;
    private ODataJsonLightCollectionDeserializer jsonLightCollectionDeserializer;
    internal ODataJsonLightCollectionReader(ODataJsonLightInputContext jsonLightInputContext, IEdmTypeReference expectedItemTypeReference, IODataReaderWriterListener listener);
    protected virtual bool ReadAtStartImplementation();
    protected virtual Task`1<bool> ReadAtStartImplementationAsync();
    protected virtual bool ReadAtCollectionStartImplementation();
    protected virtual Task`1<bool> ReadAtCollectionStartImplementationAsync();
    protected virtual bool ReadAtValueImplementation();
    protected virtual Task`1<bool> ReadAtValueImplementationAsync();
    protected virtual bool ReadAtCollectionEndImplementation();
    protected virtual Task`1<bool> ReadAtCollectionEndImplementationAsync();
    private bool ReadAtStartImplementationSynchronously(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    private bool ReadAtCollectionStartImplementationSynchronously();
    private bool ReadAtValueImplementationSynchronously();
    private bool ReadAtCollectionEndImplementationSynchronously();
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightCollectionSerializer : ODataJsonLightValueSerializer {
    private bool writingTopLevelCollection;
    private ODataJsonLightMetadataUriBuilder metadataUriBuilder;
    internal ODataJsonLightCollectionSerializer(ODataJsonLightOutputContext jsonLightOutputContext, bool writingTopLevelCollection);
    internal void WriteCollectionStart(ODataCollectionStart collectionStart, IEdmTypeReference itemTypeReference);
    internal void WriteCollectionEnd();
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightCollectionWriter : ODataCollectionWriterCore {
    private ODataJsonLightOutputContext jsonLightOutputContext;
    private ODataJsonLightCollectionSerializer jsonLightCollectionSerializer;
    internal ODataJsonLightCollectionWriter(ODataJsonLightOutputContext jsonLightOutputContext, IEdmTypeReference itemTypeReference);
    internal ODataJsonLightCollectionWriter(ODataJsonLightOutputContext jsonLightOutputContext, IEdmTypeReference expectedItemType, IODataReaderWriterListener listener);
    protected virtual void VerifyNotDisposed();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void StartPayload();
    protected virtual void EndPayload();
    protected virtual void StartCollection(ODataCollectionStart collectionStart);
    protected virtual void EndCollection();
    protected virtual void WriteCollectionItem(object item, IEdmTypeReference expectedItemType);
}
internal abstract class Microsoft.Data.OData.JsonLight.ODataJsonLightDeserializer : ODataDeserializer {
    private ODataJsonLightInputContext jsonLightInputContext;
    private IODataMetadataContext metadataContext;
    private ODataJsonLightMetadataUriParseResult metadataUriParseResult;
    internal IODataMetadataContext MetadataContext { get; }
    internal BufferingJsonReader JsonReader { get; }
    internal ODataJsonLightMetadataUriParseResult MetadataUriParseResult { get; }
    protected ODataJsonLightInputContext JsonLightInputContext { get; }
    private Uri MetadataDocumentUri { get; }
    protected ODataJsonLightDeserializer(ODataJsonLightInputContext jsonLightInputContext);
    internal IODataMetadataContext get_MetadataContext();
    internal BufferingJsonReader get_JsonReader();
    internal ODataJsonLightMetadataUriParseResult get_MetadataUriParseResult();
    protected ODataJsonLightInputContext get_JsonLightInputContext();
    private Uri get_MetadataDocumentUri();
    internal static bool TryParsePropertyAnnotation(string propertyAnnotationName, String& propertyName, String& annotationName);
    internal void ReadPayloadStart(ODataPayloadKind payloadKind, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, bool isReadingNestedPayload, bool allowEmptyPayload);
    internal Task ReadPayloadStartAsync(ODataPayloadKind payloadKind, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, bool isReadingNestedPayload, bool allowEmptyPayload);
    internal void ReadPayloadEnd(bool isReadingNestedPayload);
    internal string ReadAndValidateAnnotationStringValue(string annotationName);
    internal Uri ReadAndValidateAnnotationStringValueAsUri(string annotationName);
    internal long ReadAndValidateAnnotationStringValueAsLong(string annotationName);
    internal Uri ProcessUriFromPayload(string uriFromPayload);
    internal void ProcessProperty(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, Func`2<string, object> readPropertyAnnotationValue, Action`2<PropertyParsingResult, string> handleProperty);
    [ConditionalAttribute("DEBUG")]
internal void AssertJsonCondition(JsonNodeType[] allowedNodeTypes);
    private bool ShouldSkipCustomInstanceAnnotation(string annotationName);
    private bool SkippedOverUnknownODataAnnotation(string annotationName, String& skippedRawJson);
    private PropertyParsingResult ParseProperty(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, Func`2<string, object> readPropertyAnnotationValue, String& parsedPropertyName);
    private void ProcessPropertyAnnotation(string annotatedPropertyName, string annotationName, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, Func`2<string, object> readPropertyAnnotationValue);
    private string ReadPayloadStartImplementation(ODataPayloadKind payloadKind, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, bool isReadingNestedPayload, bool allowEmptyPayload);
    private string ReadMetadataUriAnnotation(ODataPayloadKind payloadKind, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, bool failOnMissingMetadataUriAnnotation);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightEntityReferenceLinkDeserializer : ODataJsonLightDeserializer {
    [CompilerGeneratedAttribute]
private static Func`2<string, object> CS$<>9__CachedAnonymousMethodDelegate8;
    [CompilerGeneratedAttribute]
private static Func`2<string, object> CS$<>9__CachedAnonymousMethodDelegate10;
    internal ODataJsonLightEntityReferenceLinkDeserializer(ODataJsonLightInputContext jsonLightInputContext);
    internal ODataEntityReferenceLinks ReadEntityReferenceLinks(IEdmNavigationProperty navigationProperty);
    internal Task`1<ODataEntityReferenceLinks> ReadEntityReferenceLinksAsync(IEdmNavigationProperty navigationProperty);
    internal ODataEntityReferenceLink ReadEntityReferenceLink(IEdmNavigationProperty navigationProperty);
    internal Task`1<ODataEntityReferenceLink> ReadEntityReferenceLinkAsync(IEdmNavigationProperty navigationProperty);
    private ODataEntityReferenceLinks ReadEntityReferenceLinksImplementation(IEdmNavigationProperty navigationProperty, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    private ODataEntityReferenceLink ReadEntityReferenceLinkImplementation(IEdmNavigationProperty navigationProperty, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    private void ReadEntityReferenceLinksAnnotations(ODataEntityReferenceLinks links, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, bool forLinksStart);
    private void ReadEntityReferenceLinksNextLinkAnnotationValue(ODataEntityReferenceLinks links);
    private void ReadEntityReferenceCountAnnotationValue(ODataEntityReferenceLinks links);
    private ODataEntityReferenceLink ReadSingleEntityReferenceLink(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, bool topLevel);
    [CompilerGeneratedAttribute]
private static object <ReadEntityReferenceLinksAnnotations>b__6(string annotationName);
    [CompilerGeneratedAttribute]
private static object <ReadSingleEntityReferenceLink>b__e(string annotationName);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightEntityReferenceLinkSerializer : ODataJsonLightSerializer {
    private ODataJsonLightMetadataUriBuilder metadataUriBuilder;
    internal ODataJsonLightEntityReferenceLinkSerializer(ODataJsonLightOutputContext jsonLightOutputContext);
    internal void WriteEntityReferenceLink(ODataEntityReferenceLink link, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal void WriteEntityReferenceLinks(ODataEntityReferenceLinks entityReferenceLinks, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    private void WriteEntityReferenceLinkImplementation(ODataEntityReferenceLink entityReferenceLink, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty, bool isTopLevel);
    private void WriteEntityReferenceLinksImplementation(ODataEntityReferenceLinks entityReferenceLinks, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    private void WriteNextLinkAnnotation(Uri nextPageLink);
    private void WriteCountAnnotation(long countValue);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightEntryAndFeedDeserializer : ODataJsonLightPropertyAndValueDeserializer {
    private JsonLightAnnotationGroupDeserializer annotationGroupDeserializer;
    internal ODataJsonLightEntryAndFeedDeserializer(ODataJsonLightInputContext jsonLightInputContext);
    internal void ReadFeedContentStart();
    internal void ReadFeedContentEnd();
    internal void ReadEntryTypeName(IODataJsonLightReaderEntryState entryState);
    internal ODataJsonLightReaderNavigationLinkInfo ReadEntryContent(IODataJsonLightReaderEntryState entryState);
    internal void ValidateEntryMetadata(IODataJsonLightReaderEntryState entryState);
    internal void ReadTopLevelFeedAnnotations(ODataFeed feed, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, bool forFeedStart, bool readAllFeedProperties);
    internal object ReadEntryPropertyAnnotationValue(string propertyAnnotationName);
    internal void ApplyAnnotationGroupIfPresent(IODataJsonLightReaderEntryState entryState);
    internal object ReadEntryInstanceAnnotation(string annotationName, bool anyPropertyFound, bool typeAnnotationFound, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    internal void ApplyEntryInstanceAnnotation(IODataJsonLightReaderEntryState entryState, string annotationName, object annotationValue);
    internal object ReadCustomInstanceAnnotationValue(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, string name);
    internal void ReadAndApplyFeedInstanceAnnotationValue(string annotationName, ODataFeed feed, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    internal ODataJsonLightReaderNavigationLinkInfo ReadEntryPropertyWithoutValue(IODataJsonLightReaderEntryState entryState, string propertyName);
    internal void ReadNextLinkAnnotationAtFeedEnd(ODataFeed feed, ODataJsonLightReaderNavigationLinkInfo expandedNavigationLinkInfo, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    private static ODataJsonLightReaderNavigationLinkInfo ReadDeferredNavigationLink(IODataJsonLightReaderEntryState entryState, string navigationPropertyName, IEdmNavigationProperty navigationProperty);
    private static ODataJsonLightReaderNavigationLinkInfo ReadExpandedEntryNavigationLink(IODataJsonLightReaderEntryState entryState, IEdmNavigationProperty navigationProperty);
    private static ODataJsonLightReaderNavigationLinkInfo ReadExpandedFeedNavigationLink(IODataJsonLightReaderEntryState entryState, IEdmNavigationProperty navigationProperty);
    private static ODataJsonLightReaderNavigationLinkInfo ReadEntityReferenceLinkForSingletonNavigationLinkInRequest(IODataJsonLightReaderEntryState entryState, IEdmNavigationProperty navigationProperty, bool isExpanded);
    private static ODataJsonLightReaderNavigationLinkInfo ReadEntityReferenceLinksForCollectionNavigationLinkInRequest(IODataJsonLightReaderEntryState entryState, IEdmNavigationProperty navigationProperty, bool isExpanded);
    private static ODataProperty AddEntryProperty(IODataJsonLightReaderEntryState entryState, string propertyName, object propertyValue);
    private void ReadExpandedFeedAnnotationsAtFeedEnd(ODataFeed feed, ODataJsonLightReaderNavigationLinkInfo expandedNavigationLinkInfo);
    private void ApplyAnnotationGroup(IODataJsonLightReaderEntryState entryState, ODataJsonLightAnnotationGroup annotationGroup);
    private void SetEntryMediaResource(IODataJsonLightReaderEntryState entryState, ODataStreamReferenceValue mediaResource);
    private ODataJsonLightReaderNavigationLinkInfo ReadEntryPropertyWithValue(IODataJsonLightReaderEntryState entryState, string propertyName);
    private void ReadEntryDataProperty(IODataJsonLightReaderEntryState entryState, IEdmProperty edmProperty, string propertyTypeName);
    private void InnerReadOpenUndeclaredProperty(IODataJsonLightReaderEntryState entryState, IEdmStructuredType owningStructuredType, string propertyName, bool propertyWithValue);
    private ODataJsonLightReaderNavigationLinkInfo ReadUndeclaredProperty(IODataJsonLightReaderEntryState entryState, string propertyName, bool propertyWithValue);
    private ODataStreamReferenceValue ReadStreamPropertyValue(IODataJsonLightReaderEntryState entryState, string streamPropertyName);
    private void ReadSingleOperationValue(IODataJsonOperationsDeserializerContext readerContext, IODataJsonLightReaderEntryState entryState, string metadataReferencePropertyName, bool insideArray);
    private void SetMetadataBuilder(IODataJsonLightReaderEntryState entryState, ODataOperation operation);
    private ODataOperation CreateODataOperationAndAddToEntry(IODataJsonOperationsDeserializerContext readerContext, IODataJsonLightReaderEntryState entryState, string metadataReferencePropertyName);
    private void ReadMetadataReferencePropertyValue(IODataJsonLightReaderEntryState entryState, string metadataReferencePropertyName);
    private void ValidateCanReadMetadataReferenceProperty();
    private void ValidateExpandedNavigationLinkPropertyValue(Nullable`1<bool> isCollection);
    [CompilerGeneratedAttribute]
private object <ApplyAnnotationGroupIfPresent>b__b(string annotationName, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightEntryAndFeedSerializer : ODataJsonLightPropertySerializer {
    private Dictionary`2<string, ODataJsonLightAnnotationGroup> annotationGroups;
    private ODataJsonLightMetadataUriBuilder metadataUriBuilder;
    [CompilerGeneratedAttribute]
private static Func`2<ODataOperation, bool> CS$<>9__CachedAnonymousMethodDelegate8;
    private Uri MetadataDocumentBaseUri { get; }
    internal ODataJsonLightEntryAndFeedSerializer(ODataJsonLightOutputContext jsonLightOutputContext);
    private Uri get_MetadataDocumentBaseUri();
    internal void WriteAnnotationGroup(ODataEntry entry);
    internal void WriteEntryStartMetadataProperties(IODataJsonLightWriterEntryState entryState);
    internal void WriteEntryMetadataProperties(IODataJsonLightWriterEntryState entryState);
    internal void WriteEntryEndMetadataProperties(IODataJsonLightWriterEntryState entryState, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    internal void WriteNavigationLinkMetadata(ODataNavigationLink navigationLink, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    internal void WriteOperations(IEnumerable`1<ODataOperation> operations, bool isAction);
    internal void TryWriteEntryMetadataUri(ODataFeedAndEntryTypeContext typeContext);
    internal void TryWriteFeedMetadataUri(ODataFeedAndEntryTypeContext typeContext);
    private void WriteAssociationLink(string propertyName, Uri associationLinkUrl);
    private string GetOperationMetadataString(ODataOperation operation);
    private string GetOperationTargetUriString(ODataOperation operation);
    private void ValidateOperationMetadataGroup(IGrouping`2<string, ODataOperation> operations);
    private void WriteOperationMetadataGroup(IGrouping`2<string, ODataOperation> operations);
    private void WriteOperation(ODataOperation operation);
    [CompilerGeneratedAttribute]
private static bool <ValidateOperationMetadataGroup>b__7(ODataOperation o);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightErrorDeserializer : ODataJsonLightDeserializer {
    internal ODataJsonLightErrorDeserializer(ODataJsonLightInputContext jsonLightInputContext);
    internal ODataError ReadTopLevelError();
    internal Task`1<ODataError> ReadTopLevelErrorAsync();
    private ODataError ReadTopLevelErrorImplementation();
    private void ReadJsonObjectInErrorPayload(Action`2<string, DuplicatePropertyNamesChecker> readPropertyWithValue);
    private object ReadErrorPropertyAnnotationValue(string propertyAnnotationName);
    private void ReadODataErrorObject(ODataError error);
    private void ReadErrorMessageObject(ODataError error);
    private ODataInnerError ReadInnerError(int recursionDepth);
    private void ReadPropertyValueInInnerError(int recursionDepth, ODataInnerError innerError, string propertyName);
    private void ReadPropertyValueInODataErrorObject(ODataError error, string propertyName, DuplicatePropertyNamesChecker duplicationPropertyNameChecker);
    private void ReadPropertyValueInMessageObject(ODataError error, string propertyName);
    [CompilerGeneratedAttribute]
private ODataError <ReadTopLevelErrorAsync>b__0(Task t);
    [CompilerGeneratedAttribute]
private void <ReadTopLevelErrorAsync>b__1(Task`1<ODataError> t);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightFormat : ODataFormat {
    public virtual string ToString();
    internal virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataResponseMessage responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataRequestMessage requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual ODataInputContext CreateInputContext(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal virtual ODataOutputContext CreateOutputContext(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    internal virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataResponseMessageAsync responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataRequestMessageAsync requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual Task`1<ODataInputContext> CreateInputContextAsync(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal virtual Task`1<ODataOutputContext> CreateOutputContextAsync(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    private IEnumerable`1<ODataPayloadKind> DetectPayloadKindImplementation(Stream messageStream, ODataMessage message, bool readingResponse, ODataPayloadKindDetectionInfo detectionInfo);
    private Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindImplementationAsync(Stream messageStream, ODataMessage message, bool readingResponse, ODataPayloadKindDetectionInfo detectionInfo);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightGeneralDeserializer : ODataJsonLightDeserializer {
    internal ODataJsonLightGeneralDeserializer(ODataJsonLightInputContext jsonLightInputContext);
    public object ReadValue();
    private ODataComplexValue ReadAsComplexValue();
    private ODataCollectionValue ReadAsCollectionValue();
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightInputContext : ODataInputContext {
    private ODataJsonLightPayloadKindDetectionState payloadKindDetectionState;
    private TextReader textReader;
    private BufferingJsonReader jsonReader;
    internal BufferingJsonReader JsonReader { get; }
    internal ODataJsonLightPayloadKindDetectionState PayloadKindDetectionState { get; }
    internal ODataJsonLightInputContext(ODataFormat format, Stream messageStream, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver, ODataJsonLightPayloadKindDetectionState payloadKindDetectionState);
    internal ODataJsonLightInputContext(ODataFormat format, TextReader reader, MediaType contentType, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver, ODataJsonLightPayloadKindDetectionState payloadKindDetectionState);
    internal BufferingJsonReader get_JsonReader();
    internal ODataJsonLightPayloadKindDetectionState get_PayloadKindDetectionState();
    internal virtual ODataReader CreateFeedReader(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    internal virtual Task`1<ODataReader> CreateFeedReaderAsync(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    internal virtual ODataReader CreateEntryReader(IEdmEntitySet entitySet, IEdmEntityType expectedEntityType);
    internal virtual Task`1<ODataReader> CreateEntryReaderAsync(IEdmEntitySet entitySet, IEdmEntityType expectedEntityType);
    internal virtual ODataCollectionReader CreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    internal virtual Task`1<ODataCollectionReader> CreateCollectionReaderAsync(IEdmTypeReference expectedItemTypeReference);
    internal virtual ODataParameterReader CreateParameterReader(IEdmFunctionImport functionImport);
    internal virtual Task`1<ODataParameterReader> CreateParameterReaderAsync(IEdmFunctionImport functionImport);
    internal virtual ODataWorkspace ReadServiceDocument();
    internal virtual Task`1<ODataWorkspace> ReadServiceDocumentAsync();
    internal virtual ODataProperty ReadProperty(IEdmStructuralProperty property, IEdmTypeReference expectedPropertyTypeReference);
    internal virtual Task`1<ODataProperty> ReadPropertyAsync(IEdmStructuralProperty property, IEdmTypeReference expectedPropertyTypeReference);
    internal virtual ODataError ReadError();
    internal virtual Task`1<ODataError> ReadErrorAsync();
    internal virtual ODataEntityReferenceLinks ReadEntityReferenceLinks(IEdmNavigationProperty navigationProperty);
    internal virtual Task`1<ODataEntityReferenceLinks> ReadEntityReferenceLinksAsync(IEdmNavigationProperty navigationProperty);
    internal virtual ODataEntityReferenceLink ReadEntityReferenceLink(IEdmNavigationProperty navigationProperty);
    internal virtual Task`1<ODataEntityReferenceLink> ReadEntityReferenceLinkAsync(IEdmNavigationProperty navigationProperty);
    internal IEnumerable`1<ODataPayloadKind> DetectPayloadKind(ODataPayloadKindDetectionInfo detectionInfo);
    internal Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(ODataPayloadKindDetectionInfo detectionInfo);
    protected virtual void DisposeImplementation();
    private static TextReader CreateTextReaderForMessageStreamConstructor(Stream messageStream, Encoding encoding);
    private void VerifyCanCreateParameterReader(IEdmFunctionImport functionImport);
    private void VerifyCanCreateODataReader(IEdmEntitySet entitySet, IEdmEntityType entityType);
    private void VerifyCanCreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    private void VerifyCanReadEntityReferenceLink(IEdmNavigationProperty navigationProperty);
    private void VerifyCanReadProperty();
    private void VerifyCanDetectPayloadKind();
    private void VerifyUserModel();
    private ODataReader CreateFeedReaderImplementation(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    private ODataReader CreateEntryReaderImplementation(IEdmEntitySet entitySet, IEdmEntityType expectedEntityType);
    private ODataCollectionReader CreateCollectionReaderImplementation(IEdmTypeReference expectedItemTypeReference);
    private ODataParameterReader CreateParameterReaderImplementation(IEdmFunctionImport functionImport);
}
internal abstract class Microsoft.Data.OData.JsonLight.ODataJsonLightMetadataUriBuilder : object {
    internal Uri BaseUri { get; }
    internal abstract virtual Uri get_BaseUri();
    internal static ODataJsonLightMetadataUriBuilder CreateFromSettings(JsonLightMetadataLevel metadataLevel, bool writingResponse, ODataMessageWriterSettings writerSettings, IEdmModel model);
    internal static ODataJsonLightMetadataUriBuilder CreateDirectlyFromUri(ODataMetadataDocumentUri metadataDocumentUri, IEdmModel model, bool writingResponse);
    internal abstract virtual bool TryBuildFeedMetadataUri(ODataFeedAndEntryTypeContext typeContext, Uri& metadataUri);
    internal abstract virtual bool TryBuildEntryMetadataUri(ODataFeedAndEntryTypeContext typeContext, Uri& metadataUri);
    internal abstract virtual bool TryBuildMetadataUriForValue(ODataProperty property, Uri& metadataUri);
    internal abstract virtual bool TryBuildEntityReferenceLinkMetadataUri(ODataEntityReferenceLinkSerializationInfo serializationInfo, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty, Uri& metadataUri);
    internal abstract virtual bool TryBuildEntityReferenceLinksMetadataUri(ODataEntityReferenceLinksSerializationInfo serializationInfo, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty, Uri& metadataUri);
    internal abstract virtual bool TryBuildCollectionMetadataUri(ODataCollectionStartSerializationInfo serializationInfo, IEdmTypeReference itemTypeReference, Uri& metadataUri);
    internal abstract virtual bool TryBuildServiceDocumentMetadataUri(Uri& metadataUri);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightMetadataUriParser : object {
    private static string SelectQueryOptionStart;
    private IEdmModel model;
    private ODataJsonLightMetadataUriParseResult parseResult;
    private ODataJsonLightMetadataUriParser(IEdmModel model, Uri metadataUriFromPayload);
    private static ODataJsonLightMetadataUriParser();
    internal static ODataJsonLightMetadataUriParseResult Parse(IEdmModel model, string metadataUriFromPayload, ODataPayloadKind payloadKind, ODataVersion version, ODataReaderBehavior readerBehavior);
    private static string ExtractSelectQueryOption(string fragment);
    private void TokenizeMetadataUri();
    private void ParseMetadataUri(ODataPayloadKind expectedPayloadKind, ODataReaderBehavior readerBehavior, ODataVersion version);
    private ODataPayloadKind ParseMetadataUriFragment(string fragment, ODataReaderBehavior readerBehavior, ODataVersion version);
    private ODataPayloadKind ParseAssociationLinks(EdmTypeResolver edmTypeResolver, int partCount, String[] parts, ODataReaderBehavior readerBehavior, ODataVersion version);
    private ODataPayloadKind SetEntityLinkParseResults(IEdmNavigationProperty navigationProperty, string singleElement);
    private IEdmNavigationProperty ResolveEntityReferenceLinkMetadataFragment(EdmTypeResolver edmTypeResolver, IEdmEntitySet entitySet, string typeName, string propertyName, ODataReaderBehavior readerBehavior, ODataVersion version);
    private void ValidateLinkMetadataUriFragmentItemSelector(string elementSelector);
    private void ValidateMetadataUriFragmentItemSelector(string elementSelector);
    private IEdmNavigationProperty ResolveNavigationProperty(IEdmEntityType entityType, string navigationPropertyName);
    private ODataPayloadKind ResolveEntitySet(string entitySetPart, Func`2<IEdmEntitySet, ODataPayloadKind> resolvedEntitySet);
    private IEdmEntityType ResolveTypeCast(IEdmEntitySet entitySet, string typeCast, ODataReaderBehavior readerBehavior, ODataVersion version, IEdmEntityType entitySetElementType);
    private IEdmType ResolveType(string typeName, ODataReaderBehavior readerBehavior, ODataVersion version);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightMetadataUriParseResult : object {
    private Uri metadataUriFromPayload;
    private Uri metadataDocumentUri;
    private string fragment;
    private string selectQueryOption;
    private IEdmEntitySet entitySet;
    private IEdmType edmType;
    private IEdmNavigationProperty navigationProperty;
    private IEnumerable`1<ODataPayloadKind> detectedPayloadKinds;
    private bool isNullProperty;
    internal Uri MetadataUri { get; }
    internal Uri MetadataDocumentUri { get; internal set; }
    internal string Fragment { get; internal set; }
    internal string SelectQueryOption { get; internal set; }
    internal IEdmEntitySet EntitySet { get; internal set; }
    internal IEdmType EdmType { get; internal set; }
    internal IEdmNavigationProperty NavigationProperty { get; internal set; }
    internal IEnumerable`1<ODataPayloadKind> DetectedPayloadKinds { get; internal set; }
    internal bool IsNullProperty { get; internal set; }
    internal ODataJsonLightMetadataUriParseResult(Uri metadataUriFromPayload);
    internal Uri get_MetadataUri();
    internal Uri get_MetadataDocumentUri();
    internal void set_MetadataDocumentUri(Uri value);
    internal string get_Fragment();
    internal void set_Fragment(string value);
    internal string get_SelectQueryOption();
    internal void set_SelectQueryOption(string value);
    internal IEdmEntitySet get_EntitySet();
    internal void set_EntitySet(IEdmEntitySet value);
    internal IEdmType get_EdmType();
    internal void set_EdmType(IEdmType value);
    internal IEdmNavigationProperty get_NavigationProperty();
    internal void set_NavigationProperty(IEdmNavigationProperty value);
    internal IEnumerable`1<ODataPayloadKind> get_DetectedPayloadKinds();
    internal void set_DetectedPayloadKinds(IEnumerable`1<ODataPayloadKind> value);
    internal bool get_IsNullProperty();
    internal void set_IsNullProperty(bool value);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightOutputContext : ODataJsonOutputContextBase {
    private JsonLightMetadataLevel metadataLevel;
    private JsonLightTypeNameOracle typeNameOracle;
    internal JsonLightTypeNameOracle TypeNameOracle { get; }
    internal JsonLightMetadataLevel MetadataLevel { get; }
    internal ODataJsonLightOutputContext(ODataFormat format, TextWriter textWriter, ODataMessageWriterSettings messageWriterSettings, IEdmModel model);
    internal ODataJsonLightOutputContext(ODataFormat format, Stream messageStream, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver);
    internal JsonLightTypeNameOracle get_TypeNameOracle();
    internal JsonLightMetadataLevel get_MetadataLevel();
    internal ODataJsonLightMetadataUriBuilder CreateMetadataUriBuilder();
    internal virtual void WriteInStreamError(ODataError error, bool includeDebugInformation);
    internal virtual Task WriteInStreamErrorAsync(ODataError error, bool includeDebugInformation);
    internal virtual ODataWriter CreateODataFeedWriter(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual Task`1<ODataWriter> CreateODataFeedWriterAsync(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual ODataWriter CreateODataEntryWriter(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual Task`1<ODataWriter> CreateODataEntryWriterAsync(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual ODataCollectionWriter CreateODataCollectionWriter(IEdmTypeReference itemTypeReference);
    internal virtual Task`1<ODataCollectionWriter> CreateODataCollectionWriterAsync(IEdmTypeReference itemTypeReference);
    internal virtual ODataParameterWriter CreateODataParameterWriter(IEdmFunctionImport functionImport);
    internal virtual Task`1<ODataParameterWriter> CreateODataParameterWriterAsync(IEdmFunctionImport functionImport);
    internal virtual void WriteServiceDocument(ODataWorkspace defaultWorkspace);
    internal virtual Task WriteServiceDocumentAsync(ODataWorkspace defaultWorkspace);
    internal virtual void WriteProperty(ODataProperty property);
    internal virtual Task WritePropertyAsync(ODataProperty property);
    internal virtual void WriteError(ODataError error, bool includeDebugInformation);
    internal virtual Task WriteErrorAsync(ODataError error, bool includeDebugInformation);
    internal virtual void WriteEntityReferenceLinks(ODataEntityReferenceLinks links, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual Task WriteEntityReferenceLinksAsync(ODataEntityReferenceLinks links, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual void WriteEntityReferenceLink(ODataEntityReferenceLink link, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink link, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    private ODataWriter CreateODataFeedWriterImplementation(IEdmEntitySet entitySet, IEdmEntityType entityType);
    private ODataWriter CreateODataEntryWriterImplementation(IEdmEntitySet entitySet, IEdmEntityType entityType);
    private ODataCollectionWriter CreateODataCollectionWriterImplementation(IEdmTypeReference itemTypeReference);
    private ODataParameterWriter CreateODataParameterWriterImplementation(IEdmFunctionImport functionImport);
    private void WriteInStreamErrorImplementation(ODataError error, bool includeDebugInformation);
    private void WritePropertyImplementation(ODataProperty property);
    private void WriteServiceDocumentImplementation(ODataWorkspace defaultWorkspace);
    private void WriteErrorImplementation(ODataError error, bool includeDebugInformation);
    private void WriteEntityReferenceLinksImplementation(ODataEntityReferenceLinks links, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    private void WriteEntityReferenceLinkImplementation(ODataEntityReferenceLink link, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightParameterDeserializer : ODataJsonLightPropertyAndValueDeserializer {
    private static Func`2<string, object> propertyAnnotationValueReader;
    private ODataJsonLightParameterReader parameterReader;
    [CompilerGeneratedAttribute]
private static Func`2<string, object> CS$<>9__CachedAnonymousMethodDelegate1d;
    internal ODataJsonLightParameterDeserializer(ODataJsonLightParameterReader parameterReader, ODataJsonLightInputContext jsonLightInputContext);
    private static ODataJsonLightParameterDeserializer();
    internal bool ReadNextParameter(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    [CompilerGeneratedAttribute]
private static object <.cctor>b__1c(string annotationName);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightParameterReader : ODataParameterReaderCoreAsync {
    private ODataJsonLightInputContext jsonLightInputContext;
    private ODataJsonLightParameterDeserializer jsonLightParameterDeserializer;
    private DuplicatePropertyNamesChecker duplicatePropertyNamesChecker;
    internal ODataJsonLightParameterReader(ODataJsonLightInputContext jsonLightInputContext, IEdmFunctionImport functionImport);
    protected virtual bool ReadAtStartImplementation();
    protected virtual Task`1<bool> ReadAtStartImplementationAsync();
    protected virtual bool ReadNextParameterImplementation();
    protected virtual Task`1<bool> ReadNextParameterImplementationAsync();
    protected virtual ODataCollectionReader CreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    protected virtual Task`1<ODataCollectionReader> CreateCollectionReaderAsync(IEdmTypeReference expectedItemTypeReference);
    private bool ReadAtStartImplementationSynchronously();
    private bool ReadNextParameterImplementationSynchronously();
    private ODataCollectionReader CreateCollectionReaderSynchronously(IEdmTypeReference expectedItemTypeReference);
    [CompilerGeneratedAttribute]
private bool <ReadAtStartImplementationAsync>b__0(Task t);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightParameterWriter : ODataParameterWriterCore {
    private ODataJsonLightOutputContext jsonLightOutputContext;
    private ODataJsonLightValueSerializer jsonLightValueSerializer;
    internal ODataJsonLightParameterWriter(ODataJsonLightOutputContext jsonLightOutputContext, IEdmFunctionImport functionImport);
    protected virtual void VerifyNotDisposed();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void StartPayload();
    protected virtual void EndPayload();
    protected virtual void WriteValueParameter(string parameterName, object parameterValue, IEdmTypeReference expectedTypeReference);
    protected virtual ODataCollectionWriter CreateFormatCollectionWriter(string parameterName, IEdmTypeReference expectedItemType);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightPayloadKindDetectionDeserializer : ODataJsonLightPropertyAndValueDeserializer {
    [CompilerGeneratedAttribute]
private static Func`2<ODataException, IEnumerable`1<ODataPayloadKind>> CS$<>9__CachedAnonymousMethodDelegate3;
    internal ODataJsonLightPayloadKindDetectionDeserializer(ODataJsonLightInputContext jsonLightInputContext);
    internal IEnumerable`1<ODataPayloadKind> DetectPayloadKind(ODataPayloadKindDetectionInfo detectionInfo);
    internal Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(ODataPayloadKindDetectionInfo detectionInfo);
    private IEnumerable`1<ODataPayloadKind> DetectPayloadKindImplementation(ODataPayloadKindDetectionInfo detectionInfo);
    [CompilerGeneratedAttribute]
private static IEnumerable`1<ODataPayloadKind> <DetectPayloadKindAsync>b__1(ODataException t);
    [CompilerGeneratedAttribute]
private void <DetectPayloadKindAsync>b__2(Task`1<IEnumerable`1<ODataPayloadKind>> t);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightPayloadKindDetectionState : object {
    private ODataJsonLightMetadataUriParseResult metadataUriParseResult;
    internal ODataJsonLightMetadataUriParseResult MetadataUriParseResult { get; }
    internal ODataJsonLightPayloadKindDetectionState(ODataJsonLightMetadataUriParseResult metadataUriParseResult);
    internal ODataJsonLightMetadataUriParseResult get_MetadataUriParseResult();
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightPropertyAndValueDeserializer : ODataJsonLightDeserializer {
    private static object missingPropertyValue;
    private int recursionDepth;
    [CompilerGeneratedAttribute]
private static Func`2<string, object> CS$<>9__CachedAnonymousMethodDelegate7;
    [CompilerGeneratedAttribute]
private static Func`2<string, object> CS$<>9__CachedAnonymousMethodDelegate15;
    internal ODataJsonLightPropertyAndValueDeserializer(ODataJsonLightInputContext jsonLightInputContext);
    private static ODataJsonLightPropertyAndValueDeserializer();
    internal ODataProperty ReadTopLevelProperty(IEdmTypeReference expectedPropertyTypeReference);
    internal Task`1<ODataProperty> ReadTopLevelPropertyAsync(IEdmTypeReference expectedPropertyTypeReference);
    internal object ReadNonEntityValue(string payloadTypeName, IEdmTypeReference expectedValueTypeReference, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, CollectionWithoutExpectedTypeValidator collectionValidator, bool validateNullValue, bool isTopLevelPropertyValue, bool insideComplexValue, string propertyName);
    internal object ReadNonEntityValue(string payloadTypeName, IEdmTypeReference expectedValueTypeReference, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, CollectionWithoutExpectedTypeValidator collectionValidator, bool validateNullValue, bool isTopLevelPropertyValue, bool insideComplexValue, string propertyName, bool readRawValueEvenIfNoTypeFound);
    internal static string ValidateDataPropertyTypeNameAnnotation(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, string propertyName);
    protected bool TryReadODataTypeAnnotationValue(string annotationName, String& value);
    protected string ReadODataTypeAnnotationValue();
    protected object ReadTypePropertyAnnotationValue(string propertyAnnotationName);
    protected static bool IsKnownValueTypeForNonOpenEntityOrComplex(JsonNodeType jsonReaderNodeType, object jsonReaderValue, string payloadTypeName, IEdmTypeReference payloadTypeReference);
    protected static bool IsKnownValueTypeForOpenEntityOrComplex(JsonNodeType jsonReaderNodeType, object jsonReaderValue, string payloadTypeName, IEdmTypeReference payloadTypeReference);
    protected string TryReadOrPeekPayloadType(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, string propertyName, bool insideComplexValue);
    protected object InnerReadNonOpenUndeclaredProperty(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, string propertyName, bool isTopLevelPropertyValue);
    protected static bool TryAttachRawAnnotationSetToPropertyValue(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, ODataProperty property);
    protected EdmTypeKind GetNonEntityValueKind();
    private bool TryReadODataTypeAnnotation(String& payloadTypeName);
    private ODataProperty ReadTopLevelPropertyImplementation(IEdmTypeReference expectedPropertyTypeReference, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    private IEdmTypeReference UpdateExpectedTypeBasedOnMetadataUri(IEdmTypeReference expectedPropertyTypeReference);
    private ODataCollectionValue ReadCollectionValue(IEdmCollectionTypeReference collectionValueTypeReference, string payloadTypeName, SerializationTypeNameAnnotation serializationTypeNameAnnotation);
    private object ReadPrimitiveValue(bool insideJsonObjectValue, IEdmPrimitiveTypeReference expectedValueTypeReference, bool validateNullValue, string propertyName);
    private ODataComplexValue ReadComplexValue(IEdmComplexTypeReference complexValueTypeReference, string payloadTypeName, SerializationTypeNameAnnotation serializationTypeNameAnnotation, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    private object ReadNonEntityValueImplementation(string payloadTypeName, IEdmTypeReference expectedTypeReference, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, CollectionWithoutExpectedTypeValidator collectionValidator, bool validateNullValue, bool isTopLevelPropertyValue, bool insideComplexValue, string propertyName);
    private object ReadNonEntityValueImplementation(string payloadTypeName, IEdmTypeReference expectedTypeReference, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, CollectionWithoutExpectedTypeValidator collectionValidator, bool validateNullValue, bool isTopLevelPropertyValue, bool insideComplexValue, string propertyName, bool readRawValueEvenIfNoTypeFound);
    private bool TryReadPayloadTypeFromObject(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, bool insideComplexValue, String& payloadTypeName);
    private bool ReadingComplexProperty(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, IEdmTypeReference expectedPropertyTypeReference, String& payloadTypeName);
    private bool IsTopLevelNullValue();
    private void ValidateNoPropertyInNullPayload(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    private void IncreaseRecursionDepth();
    private void DecreaseRecursionDepth();
    [ConditionalAttribute("DEBUG")]
private void AssertRecursionDepthIsZero();
    [CompilerGeneratedAttribute]
private static object <ReadTopLevelPropertyImplementation>b__5(string annotationName);
    [CompilerGeneratedAttribute]
private static object <ValidateNoPropertyInNullPayload>b__13(string annotationName);
    [CompilerGeneratedAttribute]
private void <ValidateNoPropertyInNullPayload>b__14(PropertyParsingResult propertyParsingResult, string propertyName);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightPropertySerializer : ODataJsonLightSerializer {
    private ODataJsonLightValueSerializer jsonLightValueSerializer;
    internal ODataJsonLightValueSerializer JsonLightValueSerializer { get; }
    internal ODataJsonLightPropertySerializer(ODataJsonLightOutputContext jsonLightOutputContext);
    internal ODataJsonLightValueSerializer get_JsonLightValueSerializer();
    internal void WriteTopLevelProperty(ODataProperty property);
    internal void WriteProperties(IEdmStructuredType owningType, IEnumerable`1<ODataProperty> properties, bool isComplexValue, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, ProjectedPropertiesAnnotation projectedProperties);
    private static bool IsOpenPropertyType(ODataProperty property, IEdmStructuredType owningType, IEdmProperty edmProperty);
    private bool ShouldWriteProperty(IEdmStructuredType owningType, ODataProperty property, IEdmProperty edmProperty, Boolean& shouldWriteRawAnnotations);
    private void WriteProperty(ODataProperty property, IEdmStructuredType owningType, bool isTopLevel, bool allowStreamProperty, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, ProjectedPropertiesAnnotation projectedProperties);
    private bool TryWriteRawAnnotations(ODataProperty property, Boolean& isODataTypeWritten);
    private void WriteStreamReferenceProperty(string propertyName, ODataStreamReferenceValue streamReferenceValue);
    private void WritePropertyTypeName(string propertyName, string typeNameToWrite, bool isTopLevel);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightReader : ODataReaderCoreAsync {
    private ODataJsonLightInputContext jsonLightInputContext;
    private ODataJsonLightEntryAndFeedDeserializer jsonLightEntryAndFeedDeserializer;
    private JsonLightTopLevelScope topLevelScope;
    private IODataJsonLightReaderEntryState CurrentEntryState { get; }
    private JsonLightFeedScope CurrentJsonLightFeedScope { get; }
    private JsonLightNavigationLinkScope CurrentJsonLightNavigationLinkScope { get; }
    internal ODataJsonLightReader(ODataJsonLightInputContext jsonLightInputContext, IEdmEntitySet entitySet, IEdmEntityType expectedEntityType, bool readingFeed, IODataReaderWriterListener listener);
    private IODataJsonLightReaderEntryState get_CurrentEntryState();
    private JsonLightFeedScope get_CurrentJsonLightFeedScope();
    private JsonLightNavigationLinkScope get_CurrentJsonLightNavigationLinkScope();
    protected virtual bool ReadAtStartImplementation();
    protected virtual Task`1<bool> ReadAtStartImplementationAsync();
    protected virtual bool ReadAtFeedStartImplementation();
    protected virtual Task`1<bool> ReadAtFeedStartImplementationAsync();
    protected virtual bool ReadAtFeedEndImplementation();
    protected virtual Task`1<bool> ReadAtFeedEndImplementationAsync();
    protected virtual bool ReadAtEntryStartImplementation();
    protected virtual Task`1<bool> ReadAtEntryStartImplementationAsync();
    protected virtual bool ReadAtEntryEndImplementation();
    protected virtual Task`1<bool> ReadAtEntryEndImplementationAsync();
    protected virtual bool ReadAtNavigationLinkStartImplementation();
    protected virtual Task`1<bool> ReadAtNavigationLinkStartImplementationAsync();
    protected virtual bool ReadAtNavigationLinkEndImplementation();
    protected virtual Task`1<bool> ReadAtNavigationLinkEndImplementationAsync();
    protected virtual bool ReadAtEntityReferenceLink();
    protected virtual Task`1<bool> ReadAtEntityReferenceLinkAsync();
    private bool ReadAtStartImplementationSynchronously(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    private bool ReadAtFeedStartImplementationSynchronously();
    private bool ReadAtFeedEndImplementationSynchronously();
    private bool ReadAtEntryStartImplementationSynchronously();
    private bool ReadAtEntryEndImplementationSynchronously();
    private bool ReadAtNavigationLinkStartImplementationSynchronously();
    private bool ReadAtNavigationLinkEndImplementationSynchronously();
    private bool ReadAtEntityReferenceLinkSynchronously();
    private void ReadFeedStart(ODataFeed feed, SelectedPropertiesNode selectedProperties);
    private void ReadFeedEnd();
    private void ReadExpandedEntryStart(ODataNavigationLink navigationLink);
    private void ReadEntryStart(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, SelectedPropertiesNode selectedProperties);
    private void ReadExpandedNavigationLinkEnd(bool isCollection);
    private void ReadNextNavigationLinkContentItemInRequest();
    private void StartEntry(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, SelectedPropertiesNode selectedProperties);
    private void StartNavigationLink(ODataJsonLightReaderNavigationLinkInfo navigationLinkInfo);
    private void ReplaceScope(ODataReaderState state);
    private void EndEntry();
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightReaderNavigationLinkInfo : object {
    private ODataNavigationLink navigationLink;
    private IEdmNavigationProperty navigationProperty;
    private bool isExpanded;
    private ODataFeed expandedFeed;
    private LinkedList`1<ODataEntityReferenceLink> entityReferenceLinks;
    internal ODataNavigationLink NavigationLink { get; }
    internal IEdmNavigationProperty NavigationProperty { get; }
    internal bool IsExpanded { get; }
    internal ODataFeed ExpandedFeed { get; }
    internal bool HasEntityReferenceLink { get; }
    private ODataJsonLightReaderNavigationLinkInfo(ODataNavigationLink navigationLink, IEdmNavigationProperty navigationProperty, bool isExpanded);
    internal ODataNavigationLink get_NavigationLink();
    internal IEdmNavigationProperty get_NavigationProperty();
    internal bool get_IsExpanded();
    internal ODataFeed get_ExpandedFeed();
    internal bool get_HasEntityReferenceLink();
    internal static ODataJsonLightReaderNavigationLinkInfo CreateDeferredLinkInfo(ODataNavigationLink navigationLink, IEdmNavigationProperty navigationProperty);
    internal static ODataJsonLightReaderNavigationLinkInfo CreateExpandedEntryLinkInfo(ODataNavigationLink navigationLink, IEdmNavigationProperty navigationProperty);
    internal static ODataJsonLightReaderNavigationLinkInfo CreateExpandedFeedLinkInfo(ODataNavigationLink navigationLink, IEdmNavigationProperty navigationProperty, ODataFeed expandedFeed);
    internal static ODataJsonLightReaderNavigationLinkInfo CreateSingletonEntityReferenceLinkInfo(ODataNavigationLink navigationLink, IEdmNavigationProperty navigationProperty, ODataEntityReferenceLink entityReferenceLink, bool isExpanded);
    internal static ODataJsonLightReaderNavigationLinkInfo CreateCollectionEntityReferenceLinksInfo(ODataNavigationLink navigationLink, IEdmNavigationProperty navigationProperty, LinkedList`1<ODataEntityReferenceLink> entityReferenceLinks, bool isExpanded);
    internal static ODataJsonLightReaderNavigationLinkInfo CreateProjectedNavigationLinkInfo(IEdmNavigationProperty navigationProperty);
    internal ODataEntityReferenceLink ReportEntityReferenceLink();
}
internal static class Microsoft.Data.OData.JsonLight.ODataJsonLightReaderUtils : object {
    internal static object ConvertValue(object value, IEdmPrimitiveTypeReference primitiveTypeReference, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool validateNullValue, string propertyName);
    internal static void EnsureInstance(T& instance);
    internal static bool IsODataAnnotationName(string propertyName);
    internal static bool IsAnnotationProperty(string propertyName);
    internal static void ValidateAnnotationStringValue(string propertyValue, string annotationName);
    internal static string GetPayloadTypeName(object payloadItem);
    private static object ConvertStringValue(string stringValue, Type targetType);
    private static object ConvertInt32Value(int intValue, Type targetType, IEdmPrimitiveTypeReference primitiveTypeReference);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightSerializer : ODataSerializer {
    private ODataJsonLightOutputContext jsonLightOutputContext;
    private SimpleLazy`1<JsonLightInstanceAnnotationWriter> instanceAnnotationWriter;
    private bool allowRelativeUri;
    internal ODataJsonLightOutputContext JsonLightOutputContext { get; }
    internal IJsonWriter JsonWriter { get; }
    internal JsonLightInstanceAnnotationWriter InstanceAnnotationWriter { get; }
    internal ODataJsonLightSerializer(ODataJsonLightOutputContext jsonLightOutputContext);
    internal ODataJsonLightOutputContext get_JsonLightOutputContext();
    internal IJsonWriter get_JsonWriter();
    internal JsonLightInstanceAnnotationWriter get_InstanceAnnotationWriter();
    internal void WritePayloadStart();
    internal void WritePayloadEnd();
    internal void WriteMetadataUriProperty(Uri metadataUri);
    internal void WriteTopLevelPayload(Action payloadWriterAction);
    internal void WriteTopLevelError(ODataError error, bool includeDebugInformation);
    internal string UriToString(Uri uri);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightServiceDocumentDeserializer : ODataJsonLightDeserializer {
    [CompilerGeneratedAttribute]
private static Func`2<string, object> CS$<>9__CachedAnonymousMethodDelegate6;
    [CompilerGeneratedAttribute]
private static Func`2<string, object> CS$<>9__CachedAnonymousMethodDelegated;
    internal ODataJsonLightServiceDocumentDeserializer(ODataJsonLightInputContext jsonLightInputContext);
    internal ODataWorkspace ReadServiceDocument();
    internal Task`1<ODataWorkspace> ReadServiceDocumentAsync();
    private ODataWorkspace ReadServiceDocumentImplementation(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    private ODataResourceCollectionInfo ReadResourceCollection(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    [CompilerGeneratedAttribute]
private static object <ReadServiceDocumentImplementation>b__4(string annotationName);
    [CompilerGeneratedAttribute]
private static object <ReadResourceCollection>b__b(string annotationName);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightServiceDocumentSerializer : ODataJsonLightSerializer {
    private ODataJsonLightMetadataUriBuilder metadataUriBuilder;
    internal ODataJsonLightServiceDocumentSerializer(ODataJsonLightOutputContext jsonLightOutputContext);
    internal void WriteServiceDocument(ODataWorkspace defaultWorkspace);
}
internal static class Microsoft.Data.OData.JsonLight.ODataJsonLightUtils : object {
    private static Char[] ParameterSeparatorSplitCharacters;
    private static Char[] CharactersToTrimFromParameters;
    private static ODataJsonLightUtils();
    internal static bool IsMetadataReferenceProperty(string propertyName);
    internal static string GetFullyQualifiedFunctionImportName(Uri metadataDocumentUri, string metadataReferencePropertyName, String& firstParameterTypeName);
    internal static string GetUriFragmentFromMetadataReferencePropertyName(Uri metadataDocumentUri, string propertyName);
    internal static Uri GetAbsoluteUriFromMetadataReferencePropertyName(Uri metadataDocumentUri, string propertyName);
    internal static string GetMetadataReferenceName(IEdmFunctionImport functionImport);
    internal static ODataOperation CreateODataOperation(Uri metadataDocumentUri, string metadataReferencePropertyName, IEdmFunctionImport functionImport, Boolean& isAction);
}
internal static class Microsoft.Data.OData.JsonLight.ODataJsonLightValidationUtils : object {
    internal static void ValidateMetadataReferencePropertyName(Uri metadataDocumentUri, string propertyName);
    internal static void ValidateOperation(Uri metadataDocumentUri, ODataOperation operation);
    internal static bool IsOpenMetadataReferencePropertyName(Uri metadataDocumentUri, string propertyName);
    internal static void ValidateOperationPropertyValueIsNotNull(object propertyValue, string propertyName, string metadata);
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightValueSerializer : ODataJsonLightSerializer {
    private int recursionDepth;
    private ODataJsonLightPropertySerializer propertySerializer;
    private IJsonWriter Microsoft.Data.OData.JsonLight.IODataJsonLightValueSerializer.JsonWriter { get; }
    private ODataVersion Microsoft.Data.OData.JsonLight.IODataJsonLightValueSerializer.Version { get; }
    private IEdmModel Microsoft.Data.OData.JsonLight.IODataJsonLightValueSerializer.Model { get; }
    private ODataMessageWriterSettings Microsoft.Data.OData.JsonLight.IODataJsonLightValueSerializer.Settings { get; }
    private ODataJsonLightPropertySerializer PropertySerializer { get; }
    internal ODataJsonLightValueSerializer(ODataJsonLightPropertySerializer propertySerializer);
    internal ODataJsonLightValueSerializer(ODataJsonLightOutputContext outputContext);
    private sealed virtual override IJsonWriter Microsoft.Data.OData.JsonLight.IODataJsonLightValueSerializer.get_JsonWriter();
    private sealed virtual override ODataVersion Microsoft.Data.OData.JsonLight.IODataJsonLightValueSerializer.get_Version();
    private sealed virtual override IEdmModel Microsoft.Data.OData.JsonLight.IODataJsonLightValueSerializer.get_Model();
    private sealed virtual override ODataMessageWriterSettings Microsoft.Data.OData.JsonLight.IODataJsonLightValueSerializer.get_Settings();
    private ODataJsonLightPropertySerializer get_PropertySerializer();
    public sealed virtual void WriteNullValue();
    public sealed virtual void WriteComplexValue(ODataComplexValue complexValue, IEdmTypeReference metadataTypeReference, bool isTopLevel, bool isOpenPropertyType, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    public sealed virtual void WriteCollectionValue(ODataCollectionValue collectionValue, IEdmTypeReference metadataTypeReference, bool isTopLevelProperty, bool isInUri, bool isOpenPropertyType);
    public sealed virtual void WritePrimitiveValue(object value, IEdmTypeReference expectedTypeReference);
    private sealed virtual override DuplicatePropertyNamesChecker Microsoft.Data.OData.JsonLight.IODataJsonLightValueSerializer.CreateDuplicatePropertyNamesChecker();
    [ConditionalAttribute("DEBUG")]
internal void AssertRecursionDepthIsZero();
    private void IncreaseRecursionDepth();
    private void DecreaseRecursionDepth();
}
internal class Microsoft.Data.OData.JsonLight.ODataJsonLightWriter : ODataWriterCore {
    private ODataJsonLightOutputContext jsonLightOutputContext;
    private ODataJsonLightEntryAndFeedSerializer jsonLightEntryAndFeedSerializer;
    private JsonLightEntryScope CurrentEntryScope { get; }
    private JsonLightFeedScope CurrentFeedScope { get; }
    internal ODataJsonLightWriter(ODataJsonLightOutputContext jsonLightOutputContext, IEdmEntitySet entitySet, IEdmEntityType entityType, bool writingFeed);
    private JsonLightEntryScope get_CurrentEntryScope();
    private JsonLightFeedScope get_CurrentFeedScope();
    protected virtual void VerifyNotDisposed();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void StartPayload();
    protected virtual void EndPayload();
    protected virtual void PrepareEntryForWriteStart(ODataEntry entry, ODataFeedAndEntryTypeContext typeContext, SelectedPropertiesNode selectedProperties);
    protected virtual void ValidateEntryMediaResource(ODataEntry entry, IEdmEntityType entityType);
    protected virtual void StartEntry(ODataEntry entry);
    protected virtual void EndEntry(ODataEntry entry);
    protected virtual void StartFeed(ODataFeed feed);
    protected virtual void EndFeed(ODataFeed feed);
    protected virtual void WriteDeferredNavigationLink(ODataNavigationLink navigationLink);
    protected virtual void StartNavigationLinkWithContent(ODataNavigationLink navigationLink);
    protected virtual void EndNavigationLinkWithContent(ODataNavigationLink navigationLink);
    protected virtual void WriteEntityReferenceInNavigationLinkContent(ODataNavigationLink parentNavigationLink, ODataEntityReferenceLink entityReferenceLink);
    protected virtual FeedScope CreateFeedScope(ODataFeed feed, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties);
    protected virtual EntryScope CreateEntryScope(ODataEntry entry, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties);
    protected virtual NavigationLinkScope CreateNavigationLinkScope(WriterState writerState, ODataNavigationLink navLink, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties);
    private void WriteFeedCount(ODataFeed feed, string propertyName);
    private void WriteFeedNextLink(ODataFeed feed, string propertyName);
    private void WriteFeedDeltaLink(ODataFeed feed);
    private void ValidateNoCustomInstanceAnnotationsForExpandedFeed(ODataFeed feed);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.JsonLight.ODataJsonLightWriterUtils : object {
    internal static void WriteODataTypeInstanceAnnotation(IJsonWriter jsonWriter, string typeName);
    internal static void WriteODataTypePropertyAnnotation(IJsonWriter jsonWriter, string propertyName, string typeName);
    [ExtensionAttribute]
internal static void WriteValuePropertyName(IJsonWriter jsonWriter);
    [ExtensionAttribute]
internal static void WritePropertyAnnotationName(IJsonWriter jsonWriter, string propertyName, string annotationName);
}
internal class Microsoft.Data.OData.JsonLight.ReorderingJsonReader : BufferingJsonReader {
    internal ReorderingJsonReader(TextReader reader, int maxInnerErrorDepth);
    protected virtual void ProcessObjectValue();
    private void ReadPropertyName(String& propertyName, String& annotationName);
    private void BufferValue();
}
internal class Microsoft.Data.OData.JsonLightInstanceAnnotationWriter : object {
    private IODataJsonLightValueSerializer valueSerializer;
    private JsonLightTypeNameOracle typeNameOracle;
    private IJsonWriter JsonWriter { get; }
    internal JsonLightInstanceAnnotationWriter(IODataJsonLightValueSerializer valueSerializer, JsonLightTypeNameOracle typeNameOracle);
    private IJsonWriter get_JsonWriter();
    internal void WriteInstanceAnnotations(IEnumerable`1<ODataInstanceAnnotation> instanceAnnotations, InstanceAnnotationWriteTracker tracker);
    internal void WriteInstanceAnnotations(IEnumerable`1<ODataInstanceAnnotation> instanceAnnotations);
    internal void WriteInstanceAnnotation(ODataInstanceAnnotation instanceAnnotation);
}
[DebuggerDisplayAttribute("MediaType [{ToText()}]")]
internal class Microsoft.Data.OData.MediaType : object {
    private IList`1<KeyValuePair`2<string, string>> parameters;
    private string subType;
    private string type;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegate3;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, string> CS$<>9__CachedAnonymousMethodDelegate4;
    [CompilerGeneratedAttribute]
private static Func`2<string, bool> CS$<>9__CachedAnonymousMethodDelegate5;
    internal static Encoding FallbackEncoding { get; }
    internal static Encoding MissingEncoding { get; }
    internal string FullTypeName { get; }
    internal string SubTypeName { get; }
    internal string TypeName { get; }
    internal IList`1<KeyValuePair`2<string, string>> Parameters { get; }
    internal MediaType(string type, string subType);
    internal MediaType(string type, string subType, KeyValuePair`2[] parameters);
    internal MediaType(string type, string subType, IList`1<KeyValuePair`2<string, string>> parameters);
    internal static Encoding get_FallbackEncoding();
    internal static Encoding get_MissingEncoding();
    internal string get_FullTypeName();
    internal string get_SubTypeName();
    internal string get_TypeName();
    internal IList`1<KeyValuePair`2<string, string>> get_Parameters();
    internal Encoding SelectEncoding();
    internal string ToText();
    internal string ToText(Encoding encoding);
    private static Encoding EncodingFromName(string name);
    [CompilerGeneratedAttribute]
private static bool <SelectEncoding>b__0(KeyValuePair`2<string, string> parameter);
    [CompilerGeneratedAttribute]
private static string <SelectEncoding>b__1(KeyValuePair`2<string, string> parameter);
    [CompilerGeneratedAttribute]
private static bool <SelectEncoding>b__2(string encodingName);
}
internal class Microsoft.Data.OData.MediaTypeResolver : object {
    private static MediaType ApplicationAtomXmlMediaType;
    private static MediaType ApplicationXmlMediaType;
    private static MediaType TextXmlMediaType;
    private static MediaType ApplicationJsonMediaType;
    private static MediaType ApplicationJsonVerboseMediaType;
    private static MediaTypeWithFormat[][] defaultMediaTypes;
    private static ODataVersionCache`1<MediaTypeResolver> MediaTypeResolverCache;
    private ODataVersion version;
    private IList`1[] mediaTypesForPayloadKind;
    private static ODataPayloadKind[] JsonPayloadKinds;
    [CompilerGeneratedAttribute]
private static Func`2<ODataVersion, MediaTypeResolver> CS$<>9__CachedAnonymousMethodDelegate24;
    public static MediaTypeResolver DefaultMediaTypeResolver { get; }
    private MediaTypeResolver(ODataVersion version);
    private MediaTypeResolver(ODataVersion version, ODataBehaviorKind formatBehaviorKind);
    private static MediaTypeResolver();
    public static MediaTypeResolver get_DefaultMediaTypeResolver();
    internal static MediaTypeResolver GetWriterMediaTypeResolver(ODataVersion version);
    internal static MediaTypeResolver CreateReaderMediaTypeResolver(ODataVersion version, ODataBehaviorKind formatBehaviorKind);
    internal IList`1<MediaTypeWithFormat> GetMediaTypesForPayloadKind(ODataPayloadKind payloadKind);
    internal bool IsIllegalMediaType(MediaType mediaType);
    private static IList`1[] CloneDefaultMediaTypes();
    private static void AddMediaTypeEntryOrdered(IList`1<MediaTypeWithFormat> mediaTypeList, MediaTypeWithFormat mediaTypeToInsert, ODataFormat beforeFormat);
    private void AddJsonLightMediaTypes();
    private void AddForJsonPayloadKinds(MediaTypeWithFormat mediaTypeWithFormat);
    private void InsertForJsonPayloadKinds(MediaTypeWithFormat mediaTypeWithFormat, ODataFormat beforeFormat);
    private void AddV2ClientMediaTypes();
    [CompilerGeneratedAttribute]
private static MediaTypeResolver <.cctor>b__23(ODataVersion version);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.MediaTypeUtils : object {
    private static ODataPayloadKind[] allSupportedPayloadKinds;
    private static UTF8Encoding encodingUtf8NoPreamble;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<MediaType, string>, MediaType> CS$<>9__CachedAnonymousMethodDelegate3;
    [CompilerGeneratedAttribute]
private static Func`2<MediaTypeWithFormat, MediaType> CS$<>9__CachedAnonymousMethodDelegate4;
    [CompilerGeneratedAttribute]
private static Func`2<MediaTypeWithFormat, string> CS$<>9__CachedAnonymousMethodDelegate5;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegate7;
    [CompilerGeneratedAttribute]
private static Func`2<MediaTypeWithFormat, MediaType> CS$<>9__CachedAnonymousMethodDelegate9;
    [CompilerGeneratedAttribute]
private static Func`2<MediaTypeWithFormat, MediaType> CS$<>9__CachedAnonymousMethodDelegate10;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegate15;
    internal static UTF8Encoding EncodingUtf8NoPreamble { get; }
    private static MediaTypeUtils();
    internal static UTF8Encoding get_EncodingUtf8NoPreamble();
    internal static ODataFormat GetContentTypeFromSettings(ODataMessageWriterSettings settings, ODataPayloadKind payloadKind, MediaTypeResolver mediaTypeResolver, MediaType& mediaType, Encoding& encoding);
    internal static ODataFormat GetFormatFromContentType(string contentTypeHeader, ODataPayloadKind[] supportedPayloadKinds, MediaTypeResolver mediaTypeResolver, MediaType& mediaType, Encoding& encoding, ODataPayloadKind& selectedPayloadKind, String& batchBoundary);
    internal static IList`1<ODataPayloadKindDetectionResult> GetPayloadKindsForContentType(string contentTypeHeader, MediaTypeResolver mediaTypeResolver, MediaType& contentType, Encoding& encoding);
    internal static bool MediaTypeAndSubtypeAreEqual(string firstTypeAndSubtype, string secondTypeAndSubtype);
    internal static bool MediaTypeStartsWithTypeAndSubtype(string mediaType, string typeAndSubtype);
    [ExtensionAttribute]
internal static bool MediaTypeHasParameterWithValue(MediaType mediaType, string parameterName, string parameterValue);
    [ExtensionAttribute]
internal static bool HasStreamingSetToTrue(MediaType mediaType);
    internal static void CheckMediaTypeForWildCards(MediaType mediaType);
    internal static string AlterContentTypeForJsonPadding(string contentType);
    private static ODataFormat GetFormatFromContentType(string contentTypeName, ODataPayloadKind[] supportedPayloadKinds, MediaTypeResolver mediaTypeResolver, MediaType& mediaType, Encoding& encoding, ODataPayloadKind& selectedPayloadKind);
    private static MediaType ParseContentType(string contentTypeHeader, String& charset);
    private static MediaType GetDefaultMediaType(IList`1<MediaTypeWithFormat> supportedMediaTypes, ODataFormat specifiedFormat, ODataFormat& actualFormat);
    private static Encoding GetEncoding(string acceptCharsetHeader, ODataPayloadKind payloadKind, MediaType mediaType, bool useDefaultEncoding);
    private static MediaTypeMatchInfo MatchMediaTypes(IEnumerable`1<MediaType> sourceTypes, MediaType[] targetTypes);
    private static void ConvertApplicationJsonInAcceptableMediaTypes(IList`1<KeyValuePair`2<MediaType, string>> specifiedTypes);
    [CompilerGeneratedAttribute]
private static MediaType <GetContentTypeFromSettings>b__0(KeyValuePair`2<MediaType, string> kvp);
    [CompilerGeneratedAttribute]
private static MediaType <GetContentTypeFromSettings>b__1(MediaTypeWithFormat smt);
    [CompilerGeneratedAttribute]
private static string <GetContentTypeFromSettings>b__2(MediaTypeWithFormat mt);
    [CompilerGeneratedAttribute]
private static bool <GetFormatFromContentType>b__6(KeyValuePair`2<string, string> p);
    [CompilerGeneratedAttribute]
private static MediaType <GetPayloadKindsForContentType>b__8(MediaTypeWithFormat smt);
    [CompilerGeneratedAttribute]
private static MediaType <GetFormatFromContentType>b__d(MediaTypeWithFormat smt);
    [CompilerGeneratedAttribute]
private static bool <ConvertApplicationJsonInAcceptableMediaTypes>b__14(KeyValuePair`2<string, string> p);
}
internal class Microsoft.Data.OData.MediaTypeWithFormat : object {
    [CompilerGeneratedAttribute]
private MediaType <MediaType>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataFormat <Format>k__BackingField;
    public MediaType MediaType { get; public set; }
    public ODataFormat Format { get; public set; }
    [CompilerGeneratedAttribute]
public MediaType get_MediaType();
    [CompilerGeneratedAttribute]
public void set_MediaType(MediaType value);
    [CompilerGeneratedAttribute]
public ODataFormat get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(ODataFormat value);
}
internal static class Microsoft.Data.OData.MessageStreamWrapper : object {
    internal static Stream CreateNonDisposingStream(Stream innerStream);
    internal static Stream CreateStreamWithMaxSize(Stream innerStream, long maxBytesToBeRead);
    internal static Stream CreateNonDisposingStreamWithMaxSize(Stream innerStream, long maxBytesToBeRead);
    internal static bool IsNonDisposingStream(Stream stream);
}
internal class Microsoft.Data.OData.Metadata.CachedPrimitiveKeepInContentAnnotation : object {
    private HashSet`1<string> keptInContentPropertyNames;
    internal CachedPrimitiveKeepInContentAnnotation(IEnumerable`1<string> keptInContentPropertyNames);
    internal bool IsKeptInContent(string propertyName);
}
internal static class Microsoft.Data.OData.Metadata.EdmConstants : object {
    internal static string EdmNamespace;
    internal static string EdmBinaryTypeName;
    internal static string EdmBooleanTypeName;
    internal static string EdmByteTypeName;
    internal static string EdmDateTimeTypeName;
    internal static string EdmDateTimeOffsetTypeName;
    internal static string EdmDecimalTypeName;
    internal static string EdmDoubleTypeName;
    internal static string EdmGuidTypeName;
    internal static string EdmSingleTypeName;
    internal static string EdmSByteTypeName;
    internal static string EdmInt16TypeName;
    internal static string EdmInt32TypeName;
    internal static string EdmInt64TypeName;
    internal static string EdmStringTypeName;
    internal static string EdmTimeTypeName;
    internal static string EdmStreamTypeName;
    internal static string EdmGeographyTypeName;
    internal static string EdmPointTypeName;
    internal static string EdmLineStringTypeName;
    internal static string EdmPolygonTypeName;
    internal static string EdmGeographyCollectionTypeName;
    internal static string EdmMultiPolygonTypeName;
    internal static string EdmMultiLineStringTypeName;
    internal static string EdmMultiPointTypeName;
    internal static string EdmGeometryTypeName;
    internal static string EdmGeometryPointTypeName;
    internal static string EdmGeometryLineStringTypeName;
    internal static string EdmGeometryPolygonTypeName;
    internal static string EdmGeometryCollectionTypeName;
    internal static string EdmGeometryMultiPolygonTypeName;
    internal static string EdmGeometryMultiLineStringTypeName;
    internal static string EdmGeometryMultiPointTypeName;
    internal static string EdmxVersion1Namespace;
    internal static string EdmxVersion2Namespace;
    internal static string EdmxVersion3Namespace;
    internal static string EdmxName;
    internal static string HasStreamAttributeName;
    internal static string MimeTypeAttributeName;
    internal static string HttpMethodAttributeName;
    internal static string IsAlwaysBindableAttributeName;
    internal static string IsDefaultEntityContainerAttributeName;
    internal static string TrueLiteral;
    internal static string FalseLiteral;
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Metadata.EdmLibraryExtensions : object {
    private static string CollectionTypeQualifier;
    private static string CollectionTypeFormat;
    private static Dictionary`2<Type, IEdmPrimitiveTypeReference> PrimitiveTypeReferenceMap;
    private static EdmPrimitiveTypeReference BooleanTypeReference;
    private static EdmPrimitiveTypeReference ByteTypeReference;
    private static EdmPrimitiveTypeReference DateTimeTypeReference;
    private static EdmPrimitiveTypeReference DecimalTypeReference;
    private static EdmPrimitiveTypeReference DoubleTypeReference;
    private static EdmPrimitiveTypeReference Int16TypeReference;
    private static EdmPrimitiveTypeReference Int32TypeReference;
    private static EdmPrimitiveTypeReference Int64TypeReference;
    private static EdmPrimitiveTypeReference SByteTypeReference;
    private static EdmPrimitiveTypeReference StringTypeReference;
    private static EdmPrimitiveTypeReference SingleTypeReference;
    [CompilerGeneratedAttribute]
private static Func`3<IEdmEntityContainer, string, IEnumerable`1<IEdmEntityContainerElement>> CS$<>9__CachedAnonymousMethodDelegate9;
    [CompilerGeneratedAttribute]
private static Func`2<IEdmFunctionImport, bool> CS$<>9__CachedAnonymousMethodDelegate17;
    [CompilerGeneratedAttribute]
private static Func`2<IEdmFunctionParameter, string> CS$<>9__CachedAnonymousMethodDelegate1b;
    private static EdmLibraryExtensions();
    [ExtensionAttribute]
internal static bool IsUserModel(IEdmModel model);
    internal static bool IsPrimitiveType(Type clrType);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmEntityType> EntityTypes(IEdmModel model);
    [ExtensionAttribute]
internal static IEdmCollectionTypeReference ToCollectionTypeReference(IEdmPrimitiveTypeReference itemTypeReference);
    [ExtensionAttribute]
internal static IEdmCollectionTypeReference ToCollectionTypeReference(IEdmComplexTypeReference itemTypeReference);
    [ExtensionAttribute]
internal static bool IsAssignableFrom(IEdmTypeReference baseType, IEdmTypeReference subtype);
    [ExtensionAttribute]
internal static bool IsAssignableFrom(IEdmType baseType, IEdmType subtype);
    [ExtensionAttribute]
internal static IEdmStructuredType GetCommonBaseType(IEdmStructuredType firstType, IEdmStructuredType secondType);
    [ExtensionAttribute]
internal static IEdmPrimitiveType GetCommonBaseType(IEdmPrimitiveType firstType, IEdmPrimitiveType secondType);
    [ExtensionAttribute]
internal static IEdmPrimitiveType BaseType(IEdmPrimitiveType type);
    [ExtensionAttribute]
internal static IEdmComplexTypeReference AsComplexOrNull(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static IEdmCollectionTypeReference AsCollectionOrNull(IEdmTypeReference typeReference);
    internal static IEdmSchemaType ResolvePrimitiveTypeName(string typeName);
    [ExtensionAttribute]
internal static IEdmTypeReference GetCollectionItemType(IEdmTypeReference typeReference);
    internal static IEdmCollectionType GetCollectionType(IEdmType itemType);
    internal static IEdmCollectionType GetCollectionType(IEdmTypeReference itemTypeReference);
    [ExtensionAttribute]
internal static bool IsGeographyType(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsGeometryType(IEdmTypeReference typeReference);
    internal static string GetCollectionItemTypeName(string typeName);
    [ExtensionAttribute]
internal static string FunctionImportGroupName(IEnumerable`1<IEdmFunctionImport> functionImportGroup);
    [ExtensionAttribute]
internal static string FunctionImportGroupFullName(IEnumerable`1<IEdmFunctionImport> functionImportGroup);
    [ExtensionAttribute]
internal static string NameWithParameters(IEdmFunctionImport functionImport);
    [ExtensionAttribute]
internal static string FullNameWithParameters(IEdmFunctionImport functionImport);
    [ExtensionAttribute]
internal static bool OperationsBoundToEntityTypeMustBeContainerQualified(IEdmEntityType entityType);
    [ExtensionAttribute]
internal static string ODataFullName(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static string ODataFullName(IEdmType type);
    [ExtensionAttribute]
internal static IEdmTypeReference Clone(IEdmTypeReference typeReference, bool nullable);
    [ExtensionAttribute]
internal static EdmMultiplicity TargetMultiplicityTemporary(IEdmNavigationProperty property);
    [ExtensionAttribute]
internal static bool IsAssignableFrom(IEdmStructuredType baseType, IEdmStructuredType subtype);
    [ExtensionAttribute]
internal static bool IsSpatialType(IEdmPrimitiveType primitiveType);
    [ExtensionAttribute]
internal static bool IsAssignableFrom(IEdmPrimitiveType baseType, IEdmPrimitiveType subtype);
    internal static Type GetPrimitiveClrType(IEdmPrimitiveTypeReference primitiveTypeReference);
    [ExtensionAttribute]
internal static IEdmTypeReference ToTypeReference(IEdmType type);
    [ExtensionAttribute]
internal static bool IsOpenType(IEdmType type);
    [ExtensionAttribute]
internal static bool IsStream(IEdmType type);
    [ExtensionAttribute]
internal static bool ContainsProperty(IEdmType type, IEdmProperty property);
    [ExtensionAttribute]
internal static bool ContainsProperty(IEdmTypeReference typeReference, IEdmProperty property);
    [ExtensionAttribute]
internal static string FullName(IEdmEntityContainerElement containerElement);
    internal static IEdmPrimitiveTypeReference GetPrimitiveTypeReference(Type clrType);
    [ExtensionAttribute]
internal static IEdmTypeReference ToTypeReference(IEdmType type, bool nullable);
    internal static string GetCollectionTypeName(string itemTypeName);
    [ExtensionAttribute]
internal static IEdmEntitySet ResolveEntitySet(IEdmModel model, string containerQualifiedEntitySetName);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmFunctionImport> ResolveFunctionImports(IEdmModel model, string containerQualifiedFunctionImportName);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmFunctionImport> ResolveFunctionImports(IEdmModel model, string containerQualifiedFunctionImportName, bool allowParameterTypeNames);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmFunctionImport> ResolveFunctionImports(IEdmEntityContainer container, string functionImportName);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmFunctionImport> ResolveFunctionImports(IEdmEntityContainer container, string functionImportName, bool allowParameterTypeNames);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmFunctionImport> FindFunctionImportsByBindingParameterTypeHierarchy(IEdmModel model, IEdmEntityType bindingType, string functionImportName);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmFunctionImport> FindFunctionImportsBySpecificBindingParameterType(IEdmModel model, IEdmType bindingType, string functionImportName);
    internal static Type GetPrimitiveClrType(IEdmPrimitiveType primitiveType, bool isNullable);
    private static string GetCollectionItemTypeName(string typeName, bool isNested);
    [ExtensionAttribute]
private static string ParameterTypesToString(IEdmFunctionImport functionImport);
    private static EdmPrimitiveTypeReference ToTypeReference(IEdmPrimitiveType primitiveType, bool nullable);
    [ExtensionAttribute]
private static bool TryGetSingleOrDefaultEntityContainer(IEdmModel model, IEdmEntityContainer& foundContainer);
    private static IEnumerable`1<IEdmEntityContainerElement> ResolveContainerQualifiedElementName(IEdmModel model, string containerQualifiedElementName, Func`3<IEdmEntityContainer, string, IEnumerable`1<IEdmEntityContainerElement>> resolver);
    [CompilerGeneratedAttribute]
private static IEnumerable`1<IEdmEntityContainerElement> <ResolveEntitySet>b__8(IEdmEntityContainer container, string entitySetName);
    [CompilerGeneratedAttribute]
private static bool <FindFunctionImportsBySpecificBindingParameterType>b__15(IEdmFunctionImport f);
    [CompilerGeneratedAttribute]
private static string <ParameterTypesToString>b__1a(IEdmFunctionParameter p);
}
internal class Microsoft.Data.OData.Metadata.EdmTypeReaderResolver : EdmTypeResolver {
    private IEdmModel model;
    private ODataReaderBehavior readerBehavior;
    private ODataVersion version;
    public EdmTypeReaderResolver(IEdmModel model, ODataReaderBehavior readerBehavior, ODataVersion version);
    internal virtual IEdmEntityType GetElementType(IEdmEntitySet entitySet);
    internal virtual IEdmTypeReference GetReturnType(IEdmFunctionImport functionImport);
    internal virtual IEdmTypeReference GetReturnType(IEnumerable`1<IEdmFunctionImport> functionImportGroup);
    internal virtual IEdmTypeReference GetParameterType(IEdmFunctionParameter functionParameter);
    private IEdmTypeReference ResolveTypeReference(IEdmTypeReference typeReferenceToResolve);
    private IEdmType ResolveType(IEdmType typeToResolve);
}
internal abstract class Microsoft.Data.OData.Metadata.EdmTypeResolver : object {
    internal abstract virtual IEdmEntityType GetElementType(IEdmEntitySet entitySet);
    internal abstract virtual IEdmTypeReference GetReturnType(IEdmFunctionImport functionImport);
    internal abstract virtual IEdmTypeReference GetReturnType(IEnumerable`1<IEdmFunctionImport> functionImportGroup);
    internal abstract virtual IEdmTypeReference GetParameterType(IEdmFunctionParameter functionParameter);
}
internal class Microsoft.Data.OData.Metadata.EdmTypeWriterResolver : EdmTypeResolver {
    internal static EdmTypeWriterResolver Instance;
    private static EdmTypeWriterResolver();
    internal virtual IEdmEntityType GetElementType(IEdmEntitySet entitySet);
    internal virtual IEdmTypeReference GetReturnType(IEdmFunctionImport functionImport);
    internal virtual IEdmTypeReference GetReturnType(IEnumerable`1<IEdmFunctionImport> functionImportGroup);
    internal virtual IEdmTypeReference GetParameterType(IEdmFunctionParameter functionParameter);
}
[DebuggerDisplayAttribute("EntityPropertyMappingInfo {DefiningType}")]
internal class Microsoft.Data.OData.Metadata.EntityPropertyMappingInfo : object {
    private EntityPropertyMappingAttribute attribute;
    private IEdmEntityType definingType;
    private IEdmEntityType actualPropertyType;
    private EpmSourcePathSegment[] propertyValuePath;
    private bool isSyndicationMapping;
    internal EntityPropertyMappingAttribute Attribute { get; }
    internal IEdmEntityType DefiningType { get; }
    internal IEdmEntityType ActualPropertyType { get; }
    internal EpmSourcePathSegment[] PropertyValuePath { get; }
    internal bool IsSyndicationMapping { get; }
    internal EntityPropertyMappingInfo(EntityPropertyMappingAttribute attribute, IEdmEntityType definingType, IEdmEntityType actualTypeDeclaringProperty);
    internal EntityPropertyMappingAttribute get_Attribute();
    internal IEdmEntityType get_DefiningType();
    internal IEdmEntityType get_ActualPropertyType();
    internal EpmSourcePathSegment[] get_PropertyValuePath();
    internal bool get_IsSyndicationMapping();
    internal void SetPropertyValuePath(EpmSourcePathSegment[] path);
    internal bool DefiningTypesAreEqual(EntityPropertyMappingInfo other);
}
internal class Microsoft.Data.OData.Metadata.EpmAttributeNameBuilder : object {
    private static string Separator;
    private int index;
    private string suffix;
    internal string EpmKeepInContent { get; }
    internal string EpmSourcePath { get; }
    internal string EpmTargetPath { get; }
    internal string EpmContentKind { get; }
    internal string EpmNsPrefix { get; }
    internal string EpmNsUri { get; }
    internal string get_EpmKeepInContent();
    internal string get_EpmSourcePath();
    internal string get_EpmTargetPath();
    internal string get_EpmContentKind();
    internal string get_EpmNsPrefix();
    internal string get_EpmNsUri();
    internal void MoveNext();
}
internal static class Microsoft.Data.OData.Metadata.EpmConstants : object {
    internal static string ODataEpmKeepInContent;
    internal static string ODataEpmContentKind;
    internal static string ODataEpmSourcePath;
    internal static string ODataEpmTargetPath;
    internal static string ODataEpmNsPrefix;
    internal static string ODataEpmNsUri;
    internal static string ODataSyndItemAuthorEmail;
    internal static string ODataSyndItemAuthorName;
    internal static string ODataSyndItemAuthorUri;
    internal static string ODataSyndItemContributorEmail;
    internal static string ODataSyndItemContributorName;
    internal static string ODataSyndItemContributorUri;
    internal static string ODataSyndItemUpdated;
    internal static string ODataSyndItemPublished;
    internal static string ODataSyndItemRights;
    internal static string ODataSyndItemSummary;
    internal static string ODataSyndItemTitle;
    internal static string PropertyMappingTargetPathAuthorEmail;
    internal static string PropertyMappingTargetPathAuthorName;
    internal static string PropertyMappingTargetPathAuthorUri;
    internal static string PropertyMappingTargetPathContributorEmail;
    internal static string PropertyMappingTargetPathContributorName;
    internal static string PropertyMappingTargetPathContributorUri;
    internal static string PropertyMappingTargetPathUpdated;
    internal static string PropertyMappingTargetPathPublished;
    internal static string PropertyMappingTargetPathRights;
    internal static string PropertyMappingTargetPathSummary;
    internal static string PropertyMappingTargetPathTitle;
    internal static string ODataSyndContentKindPlaintext;
    internal static string ODataSyndContentKindHtml;
    internal static string ODataSyndContentKindXHtml;
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Metadata.EpmExtensionMethods : object {
    private static String[] EpmAnnotationBaseNames;
    private static Dictionary`2<string, SyndicationItemProperty> TargetPathToSyndicationItemMap;
    private static EpmExtensionMethods();
    [ExtensionAttribute]
internal static ODataEntityPropertyMappingCache EnsureEpmCache(IEdmModel model, IEdmEntityType entityType, int maxMappingCount);
    [ExtensionAttribute]
internal static bool HasEntityPropertyMappings(IEdmModel model, IEdmEntityType entityType);
    [ExtensionAttribute]
internal static ODataEntityPropertyMappingCollection GetEntityPropertyMappings(IEdmModel model, IEdmEntityType entityType);
    [ExtensionAttribute]
internal static ODataEntityPropertyMappingCache GetEpmCache(IEdmModel model, IEdmEntityType entityType);
    [ExtensionAttribute]
internal static Dictionary`2<string, IEdmDirectValueAnnotationBinding> GetAnnotationBindingsToRemoveSerializableEpmAnnotations(IEdmModel model, IEdmElement annotatable);
    [ExtensionAttribute]
internal static void ClearInMemoryEpmAnnotations(IEdmModel model, IEdmElement annotatable);
    [ExtensionAttribute]
internal static void SaveEpmAnnotationsForProperty(IEdmModel model, IEdmProperty property, ODataEntityPropertyMappingCache epmCache);
    [ExtensionAttribute]
internal static void SaveEpmAnnotations(IEdmModel model, IEdmElement annotatable, IEnumerable`1<EntityPropertyMappingAttribute> mappings, bool skipSourcePath, bool removePrefix);
    [ExtensionAttribute]
internal static CachedPrimitiveKeepInContentAnnotation EpmCachedKeepPrimitiveInContent(IEdmModel model, IEdmComplexType complexType);
    [ExtensionAttribute]
internal static string ToTargetPath(SyndicationItemProperty targetSyndicationItem);
    private static void LoadEpmAnnotations(IEdmModel model, IEdmEntityType entityType);
    [ExtensionAttribute]
private static void LoadEpmAnnotations(IEdmModel model, IEdmElement annotatable, ODataEntityPropertyMappingCollection mappings, string typeName, IEdmProperty property);
    private static SyndicationItemProperty MapTargetPathToSyndicationProperty(string targetPath);
    [ExtensionAttribute]
private static string ToAttributeValue(SyndicationTextContentKind contentKind);
    [ExtensionAttribute]
private static string ToAttributeValue(SyndicationItemProperty syndicationItemProperty);
    private static SyndicationTextContentKind MapContentKindToSyndicationTextContentKind(string contentKind, string attributeSuffix, string typeName, string propertyName);
    [ExtensionAttribute]
private static IEnumerable`1<EpmAnnotationValues> ParseSerializableEpmAnnotations(IEdmModel model, IEdmElement annotatable, string typeName, IEdmProperty property);
    private static EntityPropertyMappingAttribute ValidateAnnotationValues(EpmAnnotationValues annotationValues, string typeName, IEdmProperty property);
    [ExtensionAttribute]
private static void RemoveEpmCache(IEdmModel model, IEdmEntityType entityType);
    [ExtensionAttribute]
private static bool IsEpmAnnotation(IEdmDirectValueAnnotation annotation);
    [ExtensionAttribute]
private static bool IsEpmAnnotation(IEdmDirectValueAnnotation annotation, String& baseName, String& suffix);
    private static string ConvertEdmAnnotationValue(IEdmDirectValueAnnotation annotation);
    private static bool NamesMatchByReference(string first, string second);
    [ExtensionAttribute]
private static bool HasOwnOrInheritedEpm(IEdmModel model, IEdmEntityType entityType);
    private static IEdmDirectValueAnnotationBinding GetODataAnnotationBinding(IEdmElement annotatable, string localName, string value);
    private static ODataEntityPropertyMappingCache EnsureEpmCacheInternal(IEdmModel model, IEdmEntityType entityType, int maxMappingCount, Boolean& cacheModified);
}
internal class Microsoft.Data.OData.Metadata.EpmSourcePathSegment : object {
    private string propertyName;
    private List`1<EpmSourcePathSegment> subProperties;
    private EntityPropertyMappingInfo epmInfo;
    internal string PropertyName { get; }
    internal List`1<EpmSourcePathSegment> SubProperties { get; }
    internal EntityPropertyMappingInfo EpmInfo { get; internal set; }
    internal EpmSourcePathSegment(string propertyName);
    internal string get_PropertyName();
    internal List`1<EpmSourcePathSegment> get_SubProperties();
    internal EntityPropertyMappingInfo get_EpmInfo();
    internal void set_EpmInfo(EntityPropertyMappingInfo value);
}
internal class Microsoft.Data.OData.Metadata.EpmSourceTree : object {
    private EpmSourcePathSegment root;
    private EpmTargetTree epmTargetTree;
    internal EpmSourcePathSegment Root { get; }
    internal EpmSourceTree(EpmTargetTree epmTargetTree);
    internal EpmSourcePathSegment get_Root();
    internal void Add(EntityPropertyMappingInfo epmInfo);
    internal void Validate(IEdmEntityType entityType);
    private static void Validate(EpmSourcePathSegment pathSegment, IEdmType type);
    private static IEdmTypeReference GetPropertyType(IEdmType type, string propertyName);
}
[DebuggerDisplayAttribute("EpmTargetPathSegment {SegmentName} HasContent={HasContent}")]
internal class Microsoft.Data.OData.Metadata.EpmTargetPathSegment : object {
    private string segmentName;
    private string segmentAttributeName;
    private string segmentNamespaceUri;
    private string segmentNamespacePrefix;
    private List`1<EpmTargetPathSegment> subSegments;
    private EpmTargetPathSegment parentSegment;
    private EntityPropertyMappingInfo epmInfo;
    internal string SegmentName { get; }
    internal string AttributeName { get; }
    internal string SegmentNamespaceUri { get; }
    internal string SegmentNamespacePrefix { get; }
    internal EntityPropertyMappingInfo EpmInfo { get; internal set; }
    internal bool HasContent { get; }
    internal bool IsAttribute { get; }
    internal EpmTargetPathSegment ParentSegment { get; }
    internal List`1<EpmTargetPathSegment> SubSegments { get; }
    internal EpmTargetPathSegment(string segmentName, string segmentNamespaceUri, string segmentNamespacePrefix, EpmTargetPathSegment parentSegment);
    internal string get_SegmentName();
    internal string get_AttributeName();
    internal string get_SegmentNamespaceUri();
    internal string get_SegmentNamespacePrefix();
    internal EntityPropertyMappingInfo get_EpmInfo();
    internal void set_EpmInfo(EntityPropertyMappingInfo value);
    internal bool get_HasContent();
    internal bool get_IsAttribute();
    internal EpmTargetPathSegment get_ParentSegment();
    internal List`1<EpmTargetPathSegment> get_SubSegments();
}
internal class Microsoft.Data.OData.Metadata.EpmTargetTree : object {
    private EpmTargetPathSegment syndicationRoot;
    private EpmTargetPathSegment nonSyndicationRoot;
    private int countOfNonContentV2Mappings;
    [CompilerGeneratedAttribute]
private static Func`2<EpmTargetPathSegment, bool> CS$<>9__CachedAnonymousMethodDelegateb;
    internal EpmTargetPathSegment SyndicationRoot { get; }
    internal EpmTargetPathSegment NonSyndicationRoot { get; }
    internal ODataVersion MinimumODataProtocolVersion { get; }
    internal EpmTargetPathSegment get_SyndicationRoot();
    internal EpmTargetPathSegment get_NonSyndicationRoot();
    internal ODataVersion get_MinimumODataProtocolVersion();
    internal void Add(EntityPropertyMappingInfo epmInfo);
    internal void Remove(EntityPropertyMappingInfo epmInfo);
    [ConditionalAttribute("DEBUG")]
internal void Validate();
    private static bool HasMixedContent(EpmTargetPathSegment currentSegment, List`1<EntityPropertyMappingAttribute> ancestorsWithContent);
    private static string GetPropertyNameFromEpmInfo(EntityPropertyMappingInfo epmInfo);
    [CompilerGeneratedAttribute]
private static bool <HasMixedContent>b__a(EpmTargetPathSegment s);
}
public interface Microsoft.Data.OData.Metadata.IODataUriParserModelExtensions {
    public abstract virtual IEnumerable`1<IEdmFunctionImport> FindFunctionImportsByBindingParameterTypeHierarchy(IEdmType bindingType, string functionImportName);
    public abstract virtual IEdmEntitySet FindEntitySetFromContainerQualifiedName(string containerQualifiedEntitySetName);
    public abstract virtual IEdmFunctionImport FindServiceOperation(string serviceOperationName);
    public abstract virtual IEdmFunctionImport FindFunctionImportByBindingParameterType(IEdmType bindingType, string functionImportName, IEnumerable`1<string> nonBindingParameterNamesFromUri);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Metadata.MetadataUtils : object {
    [CompilerGeneratedAttribute]
private static Func`2<IEdmDirectValueAnnotation, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    [ExtensionAttribute]
internal static bool TryGetODataAnnotation(IEdmModel model, IEdmElement annotatable, string localName, String& value);
    [ExtensionAttribute]
internal static void SetODataAnnotation(IEdmModel model, IEdmElement annotatable, string localName, string value);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmDirectValueAnnotation> GetODataAnnotations(IEdmModel model, IEdmElement annotatable);
    [ExtensionAttribute]
internal static IEdmTypeReference GetEdmType(ODataAnnotatable annotatable);
    internal static IEdmType ResolveTypeNameForWrite(IEdmModel model, string typeName);
    internal static IEdmType ResolveTypeNameForRead(IEdmModel model, IEdmType expectedType, string typeName, ODataReaderBehavior readerBehavior, ODataVersion version, EdmTypeKind& typeKind);
    internal static IEdmType ResolveTypeName(IEdmModel model, IEdmType expectedType, string typeName, Func`3<IEdmType, string, IEdmType> customTypeResolver, ODataVersion version, EdmTypeKind& typeKind);
    internal static IEdmFunctionImport[] CalculateAlwaysBindableOperationsForType(IEdmType bindingType, IEdmModel model, EdmTypeResolver edmTypeResolver);
    internal static IEdmTypeReference LookupTypeOfValueTerm(string qualifiedTermName, IEdmModel model);
    internal static IEdmTypeReference GetNullablePayloadTypeReference(IEdmType payloadType);
    [CompilerGeneratedAttribute]
private static bool <GetODataAnnotations>b__0(IEdmDirectValueAnnotation a);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Metadata.MetadataUtilsCommon : object {
    [ExtensionAttribute]
internal static bool IsODataPrimitiveTypeKind(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsODataPrimitiveTypeKind(IEdmType type);
    [ExtensionAttribute]
internal static bool IsODataComplexTypeKind(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsODataComplexTypeKind(IEdmType type);
    [ExtensionAttribute]
internal static bool IsODataEntityTypeKind(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsODataEntityTypeKind(IEdmType type);
    [ExtensionAttribute]
internal static bool IsODataValueType(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsNonEntityCollectionType(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsNonEntityCollectionType(IEdmType type);
    [ExtensionAttribute]
internal static IEdmPrimitiveTypeReference AsPrimitiveOrNull(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static IEdmEntityTypeReference AsEntityOrNull(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static IEdmStructuredTypeReference AsStructuredOrNull(IEdmTypeReference typeReference);
    internal static bool CanConvertPrimitiveTypeTo(IEdmPrimitiveType sourcePrimitiveType, IEdmPrimitiveType targetPrimitiveType);
}
public class Microsoft.Data.OData.Metadata.ODataEdmPropertyAnnotation : object {
    [CompilerGeneratedAttribute]
private ODataNullValueBehaviorKind <NullValueReadBehaviorKind>k__BackingField;
    public ODataNullValueBehaviorKind NullValueReadBehaviorKind { get; public set; }
    [CompilerGeneratedAttribute]
public ODataNullValueBehaviorKind get_NullValueReadBehaviorKind();
    [CompilerGeneratedAttribute]
public void set_NullValueReadBehaviorKind(ODataNullValueBehaviorKind value);
}
internal class Microsoft.Data.OData.Metadata.ODataEntityPropertyMappingCache : object {
    private ODataEntityPropertyMappingCollection mappings;
    private List`1<EntityPropertyMappingAttribute> mappingsForInheritedProperties;
    private List`1<EntityPropertyMappingAttribute> mappingsForDeclaredProperties;
    private EpmSourceTree epmSourceTree;
    private EpmTargetTree epmTargetTree;
    private IEdmModel model;
    private int totalMappingCount;
    internal List`1<EntityPropertyMappingAttribute> MappingsForInheritedProperties { get; }
    internal List`1<EntityPropertyMappingAttribute> MappingsForDeclaredProperties { get; }
    internal EpmSourceTree EpmSourceTree { get; }
    internal EpmTargetTree EpmTargetTree { get; }
    internal IEnumerable`1<EntityPropertyMappingAttribute> AllMappings { get; }
    internal int TotalMappingCount { get; }
    internal ODataEntityPropertyMappingCache(ODataEntityPropertyMappingCollection mappings, IEdmModel model, int totalMappingCount);
    internal List`1<EntityPropertyMappingAttribute> get_MappingsForInheritedProperties();
    internal List`1<EntityPropertyMappingAttribute> get_MappingsForDeclaredProperties();
    internal EpmSourceTree get_EpmSourceTree();
    internal EpmTargetTree get_EpmTargetTree();
    internal IEnumerable`1<EntityPropertyMappingAttribute> get_AllMappings();
    internal int get_TotalMappingCount();
    internal void BuildEpmForType(IEdmEntityType definingEntityType, IEdmEntityType affectedEntityType);
    internal bool IsDirty(ODataEntityPropertyMappingCollection propertyMappings);
    private static bool PropertyExistsOnType(IEdmStructuredType structuredType, EntityPropertyMappingAttribute epmAttribute);
}
public class Microsoft.Data.OData.Metadata.ODataEntityPropertyMappingCollection : object {
    private List`1<EntityPropertyMappingAttribute> mappings;
    internal int Count { get; }
    public ODataEntityPropertyMappingCollection(IEnumerable`1<EntityPropertyMappingAttribute> other);
    internal int get_Count();
    public void Add(EntityPropertyMappingAttribute mapping);
    public sealed virtual IEnumerator`1<EntityPropertyMappingAttribute> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public enum Microsoft.Data.OData.Metadata.ODataNullValueBehaviorKind : Enum {
    public int value__;
    public static ODataNullValueBehaviorKind Default;
    public static ODataNullValueBehaviorKind IgnoreValue;
    public static ODataNullValueBehaviorKind DisableValidation;
}
internal static class Microsoft.Data.OData.MimeConstants : object {
    internal static string MimeAny;
    internal static string MimeApplicationType;
    internal static string MimeTextType;
    internal static string MimeMultipartType;
    internal static string MimeAtomXmlSubType;
    internal static string MimeAtomSvcXmlSubType;
    internal static string MimeXmlSubType;
    internal static string MimeJsonSubType;
    internal static string MimePlainSubType;
    internal static string MimeJavaScriptType;
    internal static string MimeOctetStreamSubType;
    internal static string MimeMixedSubType;
    internal static string MimeHttpSubType;
    internal static string MimeTypeParameterName;
    internal static string MimeTypeParameterValueEntry;
    internal static string MimeTypeParameterValueFeed;
    internal static string MimeODataParameterName;
    internal static string MimeODataParameterValueVerbose;
    internal static string MimeODataParameterValueFullMetadata;
    internal static string MimeODataParameterValueMinimalMetadata;
    internal static string MimeODataParameterValueNoMetadata;
    internal static string MimeStreamingParameterName;
    internal static string MimeStreamingParameterValueTrue;
    internal static string MimeStreamingParameterValueFalse;
    internal static string MimeApplicationXml;
    internal static string MimeApplicationAtomXml;
    internal static string MimeApplicationAtomXmlTypeEntry;
    internal static string MimeApplicationAtomXmlTypeFeed;
    internal static string MimeApplicationJson;
    internal static string MimeApplicationOctetStream;
    internal static string MimeApplicationHttp;
    internal static string MimeTextXml;
    internal static string MimeTextPlain;
    internal static string TextJavaScript;
    internal static string MimeMultipartMixed;
    internal static string MimeStar;
    private static string Separator;
}
internal class Microsoft.Data.OData.NonDisposingStream : Stream {
    private Stream innerStream;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal NonDisposingStream(Stream innerStream);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual int EndRead(IAsyncResult asyncResult);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual void EndWrite(IAsyncResult asyncResult);
}
[DebuggerDisplayAttribute("{Metadata}")]
public class Microsoft.Data.OData.ODataAction : ODataOperation {
}
public abstract class Microsoft.Data.OData.ODataAnnotatable : object {
    private object annotations;
    private ICollection`1<ODataInstanceAnnotation> instanceAnnotations;
    public T GetAnnotation();
    public void SetAnnotation(T annotation);
    internal virtual void VerifySetAnnotation(object annotation);
    internal T GetOrCreateAnnotation();
    internal ICollection`1<ODataInstanceAnnotation> GetInstanceAnnotations();
    internal void SetInstanceAnnotations(ICollection`1<ODataInstanceAnnotation> value);
    private static bool IsOfType(object instance, Type type);
    private void AddOrReplaceAnnotation(T annotation);
    private void RemoveAnnotation();
}
[DebuggerDisplayAttribute("{Name}")]
public class Microsoft.Data.OData.ODataAssociationLink : ODataAnnotatable {
    private ODataEntityMetadataBuilder metadataBuilder;
    private Uri url;
    private bool hasAssociationLinkUrl;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    public Uri Url { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public Uri get_Url();
    public void set_Url(Uri value);
    internal void SetMetadataBuilder(ODataEntityMetadataBuilder builder);
}
internal class Microsoft.Data.OData.ODataBatchFormat : ODataFormat {
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegated;
    public virtual string ToString();
    internal virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataResponseMessage responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataRequestMessage requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual ODataInputContext CreateInputContext(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal virtual ODataOutputContext CreateOutputContext(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    internal virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataResponseMessageAsync responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataRequestMessageAsync requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual Task`1<ODataInputContext> CreateInputContextAsync(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal virtual Task`1<ODataOutputContext> CreateOutputContextAsync(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    private static IEnumerable`1<ODataPayloadKind> DetectPayloadKindImplementation(MediaType contentType);
    [CompilerGeneratedAttribute]
private static bool <DetectPayloadKindImplementation>b__c(KeyValuePair`2<string, string> kvp);
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.Data.OData.ODataBatchOperationHeaders : object {
    private Dictionary`2<string, string> caseSensitiveDictionary;
    public string Item { get; public set; }
    public string get_Item(string key);
    public void set_Item(string key, string value);
    public void Add(string key, string value);
    public bool ContainsKeyOrdinal(string key);
    public bool Remove(string key);
    public bool TryGetValue(string key, String& value);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, string>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private string FindKeyIgnoreCase(string key);
}
internal class Microsoft.Data.OData.ODataBatchOperationMessage : ODataMessage {
    private IODataBatchOperationListener operationListener;
    private IODataUrlResolver urlResolver;
    private Func`1<Stream> contentStreamCreatorFunc;
    private ODataBatchOperationHeaders headers;
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    internal ODataBatchOperationMessage(Func`1<Stream> contentStreamCreatorFunc, ODataBatchOperationHeaders headers, IODataBatchOperationListener operationListener, IODataUrlResolver urlResolver, bool writing);
    public virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public virtual string GetHeader(string headerName);
    public virtual void SetHeader(string headerName, string headerValue);
    public virtual Stream GetStream();
    public virtual Task`1<Stream> GetStreamAsync();
    internal virtual TInterface QueryInterface();
    internal Uri ResolveUrl(Uri baseUri, Uri payloadUri);
    internal void PartHeaderProcessingCompleted();
    internal void VerifyNotCompleted();
}
internal abstract class Microsoft.Data.OData.ODataBatchOperationReadStream : ODataBatchOperationStream {
    protected ODataBatchReaderStream batchReaderStream;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal ODataBatchOperationReadStream(ODataBatchReaderStream batchReaderStream, IODataBatchOperationListener listener);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    internal static ODataBatchOperationReadStream Create(ODataBatchReaderStream batchReaderStream, IODataBatchOperationListener listener, int length);
    internal static ODataBatchOperationReadStream Create(ODataBatchReaderStream batchReaderStream, IODataBatchOperationListener listener);
}
public class Microsoft.Data.OData.ODataBatchOperationRequestMessage : object {
    private ODataBatchOperationMessage message;
    [CompilerGeneratedAttribute]
private Uri <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    public Uri Url { get; public set; }
    public string Method { get; public set; }
    internal ODataBatchOperationMessage OperationMessage { get; }
    private ODataBatchOperationRequestMessage(Func`1<Stream> contentStreamCreatorFunc, string method, Uri requestUrl, ODataBatchOperationHeaders headers, IODataBatchOperationListener operationListener, IODataUrlResolver urlResolver, bool writing);
    public sealed virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Url(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Method();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Method(string value);
    internal ODataBatchOperationMessage get_OperationMessage();
    public sealed virtual string GetHeader(string headerName);
    public sealed virtual void SetHeader(string headerName, string headerValue);
    public sealed virtual Stream GetStream();
    public sealed virtual Task`1<Stream> GetStreamAsync();
    private sealed virtual override Uri Microsoft.Data.OData.IODataUrlResolver.ResolveUrl(Uri baseUri, Uri payloadUri);
    internal static ODataBatchOperationRequestMessage CreateWriteMessage(Stream outputStream, string method, Uri requestUrl, IODataBatchOperationListener operationListener, IODataUrlResolver urlResolver);
    internal static ODataBatchOperationRequestMessage CreateReadMessage(ODataBatchReaderStream batchReaderStream, string method, Uri requestUrl, ODataBatchOperationHeaders headers, IODataBatchOperationListener operationListener, IODataUrlResolver urlResolver);
}
public class Microsoft.Data.OData.ODataBatchOperationResponseMessage : object {
    private ODataBatchOperationMessage message;
    private int statusCode;
    public int StatusCode { get; public set; }
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    internal ODataBatchOperationMessage OperationMessage { get; }
    private ODataBatchOperationResponseMessage(Func`1<Stream> contentStreamCreatorFunc, ODataBatchOperationHeaders headers, IODataBatchOperationListener operationListener, IODataUrlResolver urlResolver, bool writing);
    public sealed virtual int get_StatusCode();
    public sealed virtual void set_StatusCode(int value);
    public sealed virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    internal ODataBatchOperationMessage get_OperationMessage();
    public sealed virtual string GetHeader(string headerName);
    public sealed virtual void SetHeader(string headerName, string headerValue);
    public sealed virtual Stream GetStream();
    public sealed virtual Task`1<Stream> GetStreamAsync();
    private sealed virtual override Uri Microsoft.Data.OData.IODataUrlResolver.ResolveUrl(Uri baseUri, Uri payloadUri);
    internal static ODataBatchOperationResponseMessage CreateWriteMessage(Stream outputStream, IODataBatchOperationListener operationListener, IODataUrlResolver urlResolver);
    internal static ODataBatchOperationResponseMessage CreateReadMessage(ODataBatchReaderStream batchReaderStream, int statusCode, ODataBatchOperationHeaders headers, IODataBatchOperationListener operationListener, IODataUrlResolver urlResolver);
}
internal abstract class Microsoft.Data.OData.ODataBatchOperationStream : Stream {
    private IODataBatchOperationListener listener;
    internal ODataBatchOperationStream(IODataBatchOperationListener listener);
    public virtual long Seek(long offset, SeekOrigin origin);
    protected virtual void Dispose(bool disposing);
    protected void ValidateNotDisposed();
}
internal class Microsoft.Data.OData.ODataBatchOperationWriteStream : ODataBatchOperationStream {
    private Stream batchStream;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal ODataBatchOperationWriteStream(Stream batchStream, IODataBatchOperationListener listener);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual void EndWrite(IAsyncResult asyncResult);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual void Flush();
    protected virtual void Dispose(bool disposing);
}
public class Microsoft.Data.OData.ODataBatchReader : object {
    private ODataRawInputContext inputContext;
    private ODataBatchReaderStream batchStream;
    private bool synchronous;
    private ODataBatchUrlResolver urlResolver;
    private ODataBatchReaderState batchReaderState;
    private UInt32 currentBatchSize;
    private UInt32 currentChangeSetSize;
    private OperationState operationState;
    private string contentIdToAddOnNextRead;
    public ODataBatchReaderState State { get; private set; }
    internal ODataBatchReader(ODataRawInputContext inputContext, string batchBoundary, Encoding batchEncoding, bool synchronous);
    public ODataBatchReaderState get_State();
    private void set_State(ODataBatchReaderState value);
    public bool Read();
    public Task`1<bool> ReadAsync();
    public ODataBatchOperationRequestMessage CreateOperationRequestMessage();
    public Task`1<ODataBatchOperationRequestMessage> CreateOperationRequestMessageAsync();
    public ODataBatchOperationResponseMessage CreateOperationResponseMessage();
    public Task`1<ODataBatchOperationResponseMessage> CreateOperationResponseMessageAsync();
    private sealed virtual override void Microsoft.Data.OData.IODataBatchOperationListener.BatchOperationContentStreamRequested();
    private sealed virtual override Task Microsoft.Data.OData.IODataBatchOperationListener.BatchOperationContentStreamRequestedAsync();
    private sealed virtual override void Microsoft.Data.OData.IODataBatchOperationListener.BatchOperationContentStreamDisposed();
    private ODataBatchReaderState GetEndBoundaryState();
    private bool ReadSynchronously();
    private Task`1<bool> ReadAsynchronously();
    private bool ReadImplementation();
    private ODataBatchReaderState SkipToNextPartAndReadHeaders();
    private ODataBatchOperationRequestMessage CreateOperationRequestMessageImplementation();
    private ODataBatchOperationResponseMessage CreateOperationResponseMessageImplementation();
    private void ParseRequestLine(string requestLine, String& httpMethod, Uri& requestUri);
    private int ParseResponseLine(string responseLine);
    private void VerifyCanCreateOperationRequestMessage(bool synchronousCall);
    private void VerifyCanCreateOperationResponseMessage(bool synchronousCall);
    private void VerifyCanRead(bool synchronousCall);
    private void VerifyReaderReady();
    private void VerifyCallAllowed(bool synchronousCall);
    private void IncreaseBatchSize();
    private void IncreaseChangeSetSize();
    private void ResetChangeSetSize();
    private void ThrowODataException(string errorMessage);
    private T InterceptException(Func`1<T> action);
    [CompilerGeneratedAttribute]
private void <ReadAsync>b__0(Task`1<bool> t);
    [CompilerGeneratedAttribute]
private void <CreateOperationRequestMessageAsync>b__1(Task`1<ODataBatchOperationRequestMessage> t);
    [CompilerGeneratedAttribute]
private void <CreateOperationResponseMessageAsync>b__2(Task`1<ODataBatchOperationResponseMessage> t);
}
public enum Microsoft.Data.OData.ODataBatchReaderState : Enum {
    public int value__;
    public static ODataBatchReaderState Initial;
    public static ODataBatchReaderState Operation;
    public static ODataBatchReaderState ChangesetStart;
    public static ODataBatchReaderState ChangesetEnd;
    public static ODataBatchReaderState Completed;
    public static ODataBatchReaderState Exception;
}
internal class Microsoft.Data.OData.ODataBatchReaderStream : object {
    private static int LineBufferLength;
    private Byte[] lineBuffer;
    private ODataRawInputContext inputContext;
    private string batchBoundary;
    private ODataBatchReaderStreamBuffer batchBuffer;
    private Encoding batchEncoding;
    private string changesetBoundary;
    private Encoding changesetEncoding;
    private bool underlyingStreamExhausted;
    internal string BatchBoundary { get; }
    internal string ChangeSetBoundary { get; }
    private IEnumerable`1<string> CurrentBoundaries { get; }
    private Encoding CurrentEncoding { get; }
    internal ODataBatchReaderStream(ODataRawInputContext inputContext, string batchBoundary, Encoding batchEncoding);
    internal string get_BatchBoundary();
    internal string get_ChangeSetBoundary();
    private IEnumerable`1<string> get_CurrentBoundaries();
    private Encoding get_CurrentEncoding();
    internal void ResetChangeSetBoundary();
    internal bool SkipToBoundary(Boolean& isEndBoundary, Boolean& isParentBoundary);
    internal int ReadWithDelimiter(Byte[] userBuffer, int userBufferOffset, int count);
    internal int ReadWithLength(Byte[] userBuffer, int userBufferOffset, int count);
    internal bool ProcessPartHeader();
    internal ODataBatchOperationHeaders ReadHeaders();
    internal string ReadFirstNonEmptyLine();
    private static void ValidateHeaderLine(string headerLine, String& headerName, String& headerValue);
    private string ReadLine();
    private void EnsureBatchEncoding();
    private Encoding DetectEncoding();
    private ODataBatchOperationHeaders ReadPartHeaders(Boolean& isChangeSetPart);
    private ODataBatchOperationHeaders ValidatePartHeaders(ODataBatchOperationHeaders headers, Boolean& isChangeSetPart);
    private void DetermineChangesetBoundaryAndEncoding(string contentType);
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.Data.OData.ODataBatchReaderStreamBuffer : object {
    internal static int BufferLength;
    private static int MaxLineFeedLength;
    private static int TwoDashesLength;
    private Byte[] bytes;
    private int currentReadPosition;
    private int numberOfBytesInBuffer;
    internal Byte[] Bytes { get; }
    internal int CurrentReadPosition { get; }
    internal int NumberOfBytesInBuffer { get; }
    internal byte Item { get; }
    internal Byte[] get_Bytes();
    internal int get_CurrentReadPosition();
    internal int get_NumberOfBytesInBuffer();
    internal byte get_Item(int index);
    internal void SkipTo(int newPosition);
    internal bool RefillFrom(Stream stream, int preserveFrom);
    internal ODataBatchReaderStreamScanResult ScanForLineEnd(Int32& lineEndStartPosition, Int32& lineEndEndPosition);
    internal ODataBatchReaderStreamScanResult ScanForBoundary(IEnumerable`1<string> boundaries, int maxDataBytesToScan, Int32& boundaryStartPosition, Int32& boundaryEndPosition, Boolean& isEndBoundary, Boolean& isParentBoundary);
    private ODataBatchReaderStreamScanResult ScanForBoundaryStart(int scanStartIx, int maxDataBytesToScan, Int32& lineEndStartPosition, Int32& boundaryDelimiterStartPosition);
    private ODataBatchReaderStreamScanResult ScanForLineEnd(int scanStartIx, int maxDataBytesToScan, bool allowLeadingWhitespaceOnly, Int32& lineEndStartPosition, Int32& lineEndEndPosition, Boolean& endOfBufferReached);
    private ODataBatchReaderStreamScanResult MatchBoundary(int lineEndStartPosition, int boundaryDelimiterStartPosition, string boundary, Int32& boundaryStartPosition, Int32& boundaryEndPosition, Boolean& isEndBoundary);
    private bool MatchBoundary(string boundary, int startIx, int matchLength, Boolean& isEndBoundary);
    private void ShiftToBeginning(int startIndex);
}
internal enum Microsoft.Data.OData.ODataBatchReaderStreamScanResult : Enum {
    public int value__;
    public static ODataBatchReaderStreamScanResult NoMatch;
    public static ODataBatchReaderStreamScanResult PartialMatch;
    public static ODataBatchReaderStreamScanResult Match;
}
internal class Microsoft.Data.OData.ODataBatchUrlResolver : object {
    private IODataUrlResolver batchMessageUrlResolver;
    private HashSet`1<string> contentIdCache;
    internal IODataUrlResolver BatchMessageUrlResolver { get; }
    internal ODataBatchUrlResolver(IODataUrlResolver batchMessageUrlResolver);
    internal IODataUrlResolver get_BatchMessageUrlResolver();
    private sealed virtual override Uri Microsoft.Data.OData.IODataUrlResolver.ResolveUrl(Uri baseUri, Uri payloadUri);
    internal void AddContentId(string contentId);
    internal bool ContainsContentId(string contentId);
    internal void Reset();
}
internal static class Microsoft.Data.OData.ODataBatchUtils : object {
    internal static Uri CreateOperationRequestUri(Uri uri, Uri baseUri, IODataUrlResolver urlResolver);
    internal static ODataBatchOperationReadStream CreateBatchOperationReadStream(ODataBatchReaderStream batchReaderStream, ODataBatchOperationHeaders headers, IODataBatchOperationListener operationListener);
    internal static ODataBatchOperationWriteStream CreateBatchOperationWriteStream(Stream outputStream, IODataBatchOperationListener operationListener);
    internal static void EnsureArraySize(Byte[]& buffer, int numberOfBytesInBuffer, int requiredByteCount);
}
public class Microsoft.Data.OData.ODataBatchWriter : object {
    private ODataRawOutputContext rawOutputContext;
    private string batchBoundary;
    private ODataBatchUrlResolver urlResolver;
    private BatchWriterState state;
    private string changeSetBoundary;
    private bool batchStartBoundaryWritten;
    private bool changesetStartBoundaryWritten;
    private ODataBatchOperationRequestMessage currentOperationRequestMessage;
    private ODataBatchOperationResponseMessage currentOperationResponseMessage;
    private string currentOperationContentId;
    private UInt32 currentBatchSize;
    private UInt32 currentChangeSetSize;
    private ODataBatchOperationRequestMessage CurrentOperationRequestMessage { get; private set; }
    private ODataBatchOperationResponseMessage CurrentOperationResponseMessage { get; private set; }
    private ODataBatchOperationMessage CurrentOperationMessage { get; }
    internal ODataBatchWriter(ODataRawOutputContext rawOutputContext, string batchBoundary);
    private ODataBatchOperationRequestMessage get_CurrentOperationRequestMessage();
    private void set_CurrentOperationRequestMessage(ODataBatchOperationRequestMessage value);
    private ODataBatchOperationResponseMessage get_CurrentOperationResponseMessage();
    private void set_CurrentOperationResponseMessage(ODataBatchOperationResponseMessage value);
    private ODataBatchOperationMessage get_CurrentOperationMessage();
    public void WriteStartBatch();
    public Task WriteStartBatchAsync();
    public void WriteEndBatch();
    public Task WriteEndBatchAsync();
    public void WriteStartChangeset();
    public Task WriteStartChangesetAsync();
    public void WriteEndChangeset();
    public Task WriteEndChangesetAsync();
    public ODataBatchOperationRequestMessage CreateOperationRequestMessage(string method, Uri uri);
    public Task`1<ODataBatchOperationRequestMessage> CreateOperationRequestMessageAsync(string method, Uri uri);
    public ODataBatchOperationResponseMessage CreateOperationResponseMessage();
    public Task`1<ODataBatchOperationResponseMessage> CreateOperationResponseMessageAsync();
    public void Flush();
    public Task FlushAsync();
    private sealed virtual override void Microsoft.Data.OData.IODataBatchOperationListener.BatchOperationContentStreamRequested();
    private sealed virtual override Task Microsoft.Data.OData.IODataBatchOperationListener.BatchOperationContentStreamRequestedAsync();
    private sealed virtual override void Microsoft.Data.OData.IODataBatchOperationListener.BatchOperationContentStreamDisposed();
    private sealed virtual override void Microsoft.Data.OData.IODataOutputInStreamErrorListener.OnInStreamError();
    private static bool IsErrorState(BatchWriterState state);
    private void VerifyCanWriteStartBatch(bool synchronousCall);
    private void WriteStartBatchImplementation();
    private void VerifyCanWriteEndBatch(bool synchronousCall);
    private void WriteEndBatchImplementation();
    private void VerifyCanWriteStartChangeset(bool synchronousCall);
    private void WriteStartChangesetImplementation();
    private void VerifyCanWriteEndChangeset(bool synchronousCall);
    private void WriteEndChangesetImplementation();
    private void VerifyCanCreateOperationRequestMessage(bool synchronousCall, string method, Uri uri);
    private ODataBatchOperationRequestMessage CreateOperationRequestMessageImplementation(string method, Uri uri);
    private void VerifyCanCreateOperationResponseMessage(bool synchronousCall);
    private ODataBatchOperationResponseMessage CreateOperationResponseMessageImplementation();
    private void StartBatchOperationContent();
    private void DisposeBatchWriterAndSetContentStreamRequestedState();
    private void RememberContentIdHeader(string contentId);
    private void VerifyCanFlush(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
    private void InterceptException(Action action);
    private void SetState(BatchWriterState newState);
    private void ValidateTransition(BatchWriterState newState);
    private void ValidateWriterReady();
    private void WritePendingMessageData(bool reportMessageCompleted);
    private void WriteStartBoundaryForOperation();
    private void ThrowODataException(string errorMessage);
    private void IncreaseBatchSize();
    private void IncreaseChangeSetSize();
    private void ResetChangeSetSize();
    [CompilerGeneratedAttribute]
private Task <WriteEndBatchAsync>b__0(Task task);
    [CompilerGeneratedAttribute]
private void <FlushAsync>b__4(Task t);
    [CompilerGeneratedAttribute]
private void <Microsoft.Data.OData.IODataBatchOperationListener.BatchOperationContentStreamRequestedAsync>b__5(Task task);
}
internal static class Microsoft.Data.OData.ODataBatchWriterUtils : object {
    internal static string CreateBatchBoundary(bool isResponse);
    internal static string CreateChangeSetBoundary(bool isResponse);
    internal static string CreateMultipartMixedContentType(string boundary);
    internal static void WriteStartBoundary(TextWriter writer, string boundary, bool firstBoundary);
    internal static void WriteEndBoundary(TextWriter writer, string boundary, bool missingStartBoundary);
    internal static void WriteRequestPreamble(TextWriter writer, string httpMethod, Uri uri);
    internal static void WriteResponsePreamble(TextWriter writer);
    internal static void WriteChangeSetPreamble(TextWriter writer, string changeSetBoundary);
}
internal enum Microsoft.Data.OData.ODataBehaviorKind : Enum {
    public int value__;
    public static ODataBehaviorKind Default;
    public static ODataBehaviorKind WcfDataServicesServer;
    public static ODataBehaviorKind WcfDataServicesClient;
}
public abstract class Microsoft.Data.OData.ODataCollectionReader : object {
    public ODataCollectionReaderState State { get; }
    public object Item { get; }
    public abstract virtual ODataCollectionReaderState get_State();
    public abstract virtual object get_Item();
    public abstract virtual bool Read();
    public abstract virtual Task`1<bool> ReadAsync();
}
internal abstract class Microsoft.Data.OData.ODataCollectionReaderCore : ODataCollectionReader {
    private ODataInputContext inputContext;
    private Stack`1<Scope> scopes;
    private IODataReaderWriterListener listener;
    private CollectionWithoutExpectedTypeValidator collectionValidator;
    private IEdmTypeReference expectedItemTypeReference;
    public ODataCollectionReaderState State { get; }
    public object Item { get; }
    protected bool IsCollectionElementEmpty { get; }
    protected IEdmTypeReference ExpectedItemTypeReference { get; protected set; }
    protected CollectionWithoutExpectedTypeValidator CollectionValidator { get; }
    protected bool IsReadingNestedPayload { get; }
    protected ODataCollectionReaderCore(ODataInputContext inputContext, IEdmTypeReference expectedItemTypeReference, IODataReaderWriterListener listener);
    public sealed virtual ODataCollectionReaderState get_State();
    public sealed virtual object get_Item();
    protected bool get_IsCollectionElementEmpty();
    protected IEdmTypeReference get_ExpectedItemTypeReference();
    protected void set_ExpectedItemTypeReference(IEdmTypeReference value);
    protected CollectionWithoutExpectedTypeValidator get_CollectionValidator();
    protected bool get_IsReadingNestedPayload();
    public sealed virtual bool Read();
    public sealed virtual Task`1<bool> ReadAsync();
    protected bool ReadImplementation();
    protected abstract virtual bool ReadAtStartImplementation();
    protected abstract virtual bool ReadAtCollectionStartImplementation();
    protected abstract virtual bool ReadAtValueImplementation();
    protected abstract virtual bool ReadAtCollectionEndImplementation();
    protected bool ReadSynchronously();
    protected virtual Task`1<bool> ReadAsynchronously();
    protected void EnterScope(ODataCollectionReaderState state, object item);
    protected void EnterScope(ODataCollectionReaderState state, object item, bool isCollectionElementEmpty);
    protected void ReplaceScope(ODataCollectionReaderState state, object item);
    protected void PopScope(ODataCollectionReaderState state);
    private T InterceptException(Func`1<T> action);
    private void VerifyCanRead(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
    private void VerifySynchronousCallAllowed();
    private void VerifyAsynchronousCallAllowed();
    [CompilerGeneratedAttribute]
private void <ReadAsync>b__0(Task`1<bool> t);
}
internal abstract class Microsoft.Data.OData.ODataCollectionReaderCoreAsync : ODataCollectionReaderCore {
    protected ODataCollectionReaderCoreAsync(ODataInputContext inputContext, IEdmTypeReference expectedItemTypeReference, IODataReaderWriterListener listener);
    protected abstract virtual Task`1<bool> ReadAtStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtCollectionStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtValueImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtCollectionEndImplementationAsync();
    protected virtual Task`1<bool> ReadAsynchronously();
}
public enum Microsoft.Data.OData.ODataCollectionReaderState : Enum {
    public int value__;
    public static ODataCollectionReaderState Start;
    public static ODataCollectionReaderState CollectionStart;
    public static ODataCollectionReaderState Value;
    public static ODataCollectionReaderState CollectionEnd;
    public static ODataCollectionReaderState Exception;
    public static ODataCollectionReaderState Completed;
}
public class Microsoft.Data.OData.ODataCollectionStart : ODataAnnotatable {
    private ODataCollectionStartSerializationInfo serializationInfo;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    internal ODataCollectionStartSerializationInfo SerializationInfo { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    internal ODataCollectionStartSerializationInfo get_SerializationInfo();
    internal void set_SerializationInfo(ODataCollectionStartSerializationInfo value);
}
public class Microsoft.Data.OData.ODataCollectionStartSerializationInfo : object {
    private string collectionTypeName;
    public string CollectionTypeName { get; public set; }
    public string get_CollectionTypeName();
    public void set_CollectionTypeName(string value);
    internal static ODataCollectionStartSerializationInfo Validate(ODataCollectionStartSerializationInfo serializationInfo);
}
public class Microsoft.Data.OData.ODataCollectionValue : ODataValue {
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable <Items>k__BackingField;
    public string TypeName { get; public set; }
    public IEnumerable Items { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
    [CompilerGeneratedAttribute]
public IEnumerable get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IEnumerable value);
}
public abstract class Microsoft.Data.OData.ODataCollectionWriter : object {
    public abstract virtual void WriteStart(ODataCollectionStart collectionStart);
    public abstract virtual Task WriteStartAsync(ODataCollectionStart collectionStart);
    public abstract virtual void WriteItem(object item);
    public abstract virtual Task WriteItemAsync(object item);
    public abstract virtual void WriteEnd();
    public abstract virtual Task WriteEndAsync();
    public abstract virtual void Flush();
    public abstract virtual Task FlushAsync();
}
internal abstract class Microsoft.Data.OData.ODataCollectionWriterCore : ODataCollectionWriter {
    private ODataOutputContext outputContext;
    private IODataReaderWriterListener listener;
    private Stack`1<Scope> scopes;
    private IEdmTypeReference expectedItemType;
    private DuplicatePropertyNamesChecker duplicatePropertyNamesChecker;
    private CollectionWithoutExpectedTypeValidator collectionValidator;
    protected CollectionWriterState State { get; }
    protected DuplicatePropertyNamesChecker DuplicatePropertyNamesChecker { get; }
    protected CollectionWithoutExpectedTypeValidator CollectionValidator { get; }
    protected IEdmTypeReference ItemTypeReference { get; }
    protected ODataCollectionWriterCore(ODataOutputContext outputContext, IEdmTypeReference itemTypeReference);
    protected ODataCollectionWriterCore(ODataOutputContext outputContext, IEdmTypeReference expectedItemType, IODataReaderWriterListener listener);
    protected CollectionWriterState get_State();
    protected DuplicatePropertyNamesChecker get_DuplicatePropertyNamesChecker();
    protected CollectionWithoutExpectedTypeValidator get_CollectionValidator();
    protected IEdmTypeReference get_ItemTypeReference();
    public sealed virtual void Flush();
    public sealed virtual Task FlushAsync();
    public sealed virtual void WriteStart(ODataCollectionStart collectionStart);
    public sealed virtual Task WriteStartAsync(ODataCollectionStart collection);
    public sealed virtual void WriteItem(object item);
    public sealed virtual Task WriteItemAsync(object item);
    public sealed virtual void WriteEnd();
    public sealed virtual Task WriteEndAsync();
    private sealed virtual override void Microsoft.Data.OData.IODataOutputInStreamErrorListener.OnInStreamError();
    protected static bool IsErrorState(CollectionWriterState state);
    protected abstract virtual void VerifyNotDisposed();
    protected abstract virtual void FlushSynchronously();
    protected abstract virtual Task FlushAsynchronously();
    protected abstract virtual void StartPayload();
    protected abstract virtual void EndPayload();
    protected abstract virtual void StartCollection(ODataCollectionStart collectionStart);
    protected abstract virtual void EndCollection();
    protected abstract virtual void WriteCollectionItem(object item, IEdmTypeReference expectedItemTypeReference);
    private void VerifyCanWriteStart(bool synchronousCall, ODataCollectionStart collectionStart);
    private void WriteStartImplementation(ODataCollectionStart collectionStart);
    private void VerifyCanWriteItem(bool synchronousCall);
    private void WriteItemImplementation(object item);
    private void VerifyCanWriteEnd(bool synchronousCall);
    private void WriteEndImplementation();
    private void VerifyCanFlush(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
    private void StartPayloadInStartState();
    private void InterceptException(Action action);
    private void NotifyListener(CollectionWriterState newState);
    private void EnterScope(CollectionWriterState newState, object item);
    private void LeaveScope();
    private void ReplaceScope(CollectionWriterState newState, ODataItem item);
    private void ValidateTransition(CollectionWriterState newState);
    [CompilerGeneratedAttribute]
private void <FlushAsync>b__0(Task t);
    [CompilerGeneratedAttribute]
private Task <WriteEndAsync>b__7(Task task);
    [CompilerGeneratedAttribute]
private void <WriteEndImplementation>b__e();
}
public class Microsoft.Data.OData.ODataComplexValue : ODataValue {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataProperty> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    public IEnumerable`1<ODataProperty> Properties { get; public set; }
    public string TypeName { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<ODataProperty> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IEnumerable`1<ODataProperty> value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
}
public static class Microsoft.Data.OData.ODataConstants : object {
    public static string MethodGet;
    public static string MethodPost;
    public static string MethodPut;
    public static string MethodDelete;
    public static string MethodPatch;
    public static string MethodMerge;
    public static string ContentTypeHeader;
    public static string DataServiceVersionHeader;
    public static string ContentIdHeader;
    internal static string ContentLengthHeader;
    internal static string HttpQValueParameter;
    internal static string HttpVersionInBatching;
    internal static string Charset;
    internal static string HttpMultipartBoundary;
    internal static string ContentTransferEncoding;
    internal static string BatchContentTransferEncoding;
    internal static ODataVersion ODataDefaultProtocolVersion;
    internal static string BatchRequestBoundaryTemplate;
    internal static string BatchResponseBoundaryTemplate;
    internal static string RequestChangeSetBoundaryTemplate;
    internal static string ResponseChangeSetBoundaryTemplate;
    internal static string HttpWeakETagPrefix;
    internal static string HttpWeakETagSuffix;
    internal static int DefaultMaxRecursionDepth;
    internal static long DefaultMaxReadMessageSize;
    internal static int DefaultMaxPartsPerBatch;
    internal static int DefulatMaxOperationsPerChangeset;
    internal static int DefaultMaxEntityPropertyMappingsPerType;
    internal static ODataVersion MaxODataVersion;
    internal static string UriSegmentSeparator;
    internal static char UriSegmentSeparatorChar;
    internal static string AssociationLinkSegmentName;
    internal static string DefaultStreamSegmentName;
}
[DebuggerDisplayAttribute("{Message}")]
public class Microsoft.Data.OData.ODataContentTypeException : ODataException {
    public ODataContentTypeException(string message);
    public ODataContentTypeException(string message, Exception innerException);
}
internal abstract class Microsoft.Data.OData.ODataDeserializer : object {
    private ODataInputContext inputContext;
    internal bool UseClientFormatBehavior { get; }
    internal bool UseServerFormatBehavior { get; }
    internal bool UseDefaultFormatBehavior { get; }
    internal ODataMessageReaderSettings MessageReaderSettings { get; }
    internal ODataVersion Version { get; }
    internal bool ReadingResponse { get; }
    internal IEdmModel Model { get; }
    protected ODataDeserializer(ODataInputContext inputContext);
    internal bool get_UseClientFormatBehavior();
    internal bool get_UseServerFormatBehavior();
    internal bool get_UseDefaultFormatBehavior();
    internal ODataMessageReaderSettings get_MessageReaderSettings();
    internal ODataVersion get_Version();
    internal bool get_ReadingResponse();
    internal IEdmModel get_Model();
    internal DuplicatePropertyNamesChecker CreateDuplicatePropertyNamesChecker();
}
[DebuggerDisplayAttribute("{Url.OriginalString}")]
public class Microsoft.Data.OData.ODataEntityReferenceLink : ODataItem {
    private ODataEntityReferenceLinkSerializationInfo serializationInfo;
    [CompilerGeneratedAttribute]
private Uri <Url>k__BackingField;
    public Uri Url { get; public set; }
    internal ODataEntityReferenceLinkSerializationInfo SerializationInfo { get; internal set; }
    [CompilerGeneratedAttribute]
public Uri get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(Uri value);
    internal ODataEntityReferenceLinkSerializationInfo get_SerializationInfo();
    internal void set_SerializationInfo(ODataEntityReferenceLinkSerializationInfo value);
}
public class Microsoft.Data.OData.ODataEntityReferenceLinks : ODataAnnotatable {
    private ODataEntityReferenceLinksSerializationInfo serializationInfo;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <NextPageLink>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataEntityReferenceLink> <Links>k__BackingField;
    public Nullable`1<long> Count { get; public set; }
    public Uri NextPageLink { get; public set; }
    public IEnumerable`1<ODataEntityReferenceLink> Links { get; public set; }
    internal ODataEntityReferenceLinksSerializationInfo SerializationInfo { get; internal set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Uri get_NextPageLink();
    [CompilerGeneratedAttribute]
public void set_NextPageLink(Uri value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ODataEntityReferenceLink> get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(IEnumerable`1<ODataEntityReferenceLink> value);
    internal ODataEntityReferenceLinksSerializationInfo get_SerializationInfo();
    internal void set_SerializationInfo(ODataEntityReferenceLinksSerializationInfo value);
}
public class Microsoft.Data.OData.ODataEntityReferenceLinkSerializationInfo : object {
    private string sourceEntitySetName;
    private string typecast;
    private string navigationPropertyName;
    [CompilerGeneratedAttribute]
private bool <IsCollectionNavigationProperty>k__BackingField;
    public string SourceEntitySetName { get; public set; }
    public string Typecast { get; public set; }
    public string NavigationPropertyName { get; public set; }
    public bool IsCollectionNavigationProperty { get; public set; }
    public string get_SourceEntitySetName();
    public void set_SourceEntitySetName(string value);
    public string get_Typecast();
    public void set_Typecast(string value);
    public string get_NavigationPropertyName();
    public void set_NavigationPropertyName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsCollectionNavigationProperty();
    [CompilerGeneratedAttribute]
public void set_IsCollectionNavigationProperty(bool value);
    internal static ODataEntityReferenceLinkSerializationInfo Validate(ODataEntityReferenceLinkSerializationInfo serializationInfo);
}
public class Microsoft.Data.OData.ODataEntityReferenceLinksSerializationInfo : object {
    private string sourceEntitySetName;
    private string typecast;
    private string navigationPropertyName;
    public string SourceEntitySetName { get; public set; }
    public string Typecast { get; public set; }
    public string NavigationPropertyName { get; public set; }
    public string get_SourceEntitySetName();
    public void set_SourceEntitySetName(string value);
    public string get_Typecast();
    public void set_Typecast(string value);
    public string get_NavigationPropertyName();
    public void set_NavigationPropertyName(string value);
    internal static ODataEntityReferenceLinksSerializationInfo Validate(ODataEntityReferenceLinksSerializationInfo serializationInfo);
}
[DebuggerDisplayAttribute("Id: {Id} TypeName: {TypeName}")]
public class Microsoft.Data.OData.ODataEntry : ODataItem {
    private ODataEntityMetadataBuilder metadataBuilder;
    private string etag;
    private bool hasNonComputedETag;
    private string id;
    private bool hasNonComputedId;
    private Uri editLink;
    private bool hasNonComputedEditLink;
    private Uri readLink;
    private bool hasNonComputedReadLink;
    private ODataStreamReferenceValue mediaResource;
    private IEnumerable`1<ODataProperty> properties;
    private IEnumerable`1<ODataAction> actions;
    private IEnumerable`1<ODataFunction> functions;
    private ODataFeedAndEntrySerializationInfo serializationInfo;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataAssociationLink> <AssociationLinks>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    public string ETag { get; public set; }
    public string Id { get; public set; }
    public Uri EditLink { get; public set; }
    public Uri ReadLink { get; public set; }
    public ODataStreamReferenceValue MediaResource { get; public set; }
    public IEnumerable`1<ODataAssociationLink> AssociationLinks { get; public set; }
    public IEnumerable`1<ODataAction> Actions { get; public set; }
    public IEnumerable`1<ODataFunction> Functions { get; public set; }
    public IEnumerable`1<ODataProperty> Properties { get; public set; }
    public string TypeName { get; public set; }
    public ICollection`1<ODataInstanceAnnotation> InstanceAnnotations { get; public set; }
    internal ODataEntityMetadataBuilder MetadataBuilder { get; internal set; }
    internal string NonComputedId { get; }
    internal bool HasNonComputedId { get; }
    internal Uri NonComputedEditLink { get; }
    internal bool HasNonComputedEditLink { get; }
    internal Uri NonComputedReadLink { get; }
    internal bool HasNonComputedReadLink { get; }
    internal string NonComputedETag { get; }
    internal bool HasNonComputedETag { get; }
    internal ODataStreamReferenceValue NonComputedMediaResource { get; }
    internal IEnumerable`1<ODataProperty> NonComputedProperties { get; }
    internal IEnumerable`1<ODataAction> NonComputedActions { get; }
    internal IEnumerable`1<ODataFunction> NonComputedFunctions { get; }
    internal ODataFeedAndEntrySerializationInfo SerializationInfo { get; internal set; }
    public string get_ETag();
    public void set_ETag(string value);
    public string get_Id();
    public void set_Id(string value);
    public Uri get_EditLink();
    public void set_EditLink(Uri value);
    public Uri get_ReadLink();
    public void set_ReadLink(Uri value);
    public ODataStreamReferenceValue get_MediaResource();
    public void set_MediaResource(ODataStreamReferenceValue value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ODataAssociationLink> get_AssociationLinks();
    [CompilerGeneratedAttribute]
public void set_AssociationLinks(IEnumerable`1<ODataAssociationLink> value);
    public IEnumerable`1<ODataAction> get_Actions();
    public void set_Actions(IEnumerable`1<ODataAction> value);
    public IEnumerable`1<ODataFunction> get_Functions();
    public void set_Functions(IEnumerable`1<ODataFunction> value);
    public IEnumerable`1<ODataProperty> get_Properties();
    public void set_Properties(IEnumerable`1<ODataProperty> value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
    public ICollection`1<ODataInstanceAnnotation> get_InstanceAnnotations();
    public void set_InstanceAnnotations(ICollection`1<ODataInstanceAnnotation> value);
    internal ODataEntityMetadataBuilder get_MetadataBuilder();
    internal void set_MetadataBuilder(ODataEntityMetadataBuilder value);
    internal string get_NonComputedId();
    internal bool get_HasNonComputedId();
    internal Uri get_NonComputedEditLink();
    internal bool get_HasNonComputedEditLink();
    internal Uri get_NonComputedReadLink();
    internal bool get_HasNonComputedReadLink();
    internal string get_NonComputedETag();
    internal bool get_HasNonComputedETag();
    internal ODataStreamReferenceValue get_NonComputedMediaResource();
    internal IEnumerable`1<ODataProperty> get_NonComputedProperties();
    internal IEnumerable`1<ODataAction> get_NonComputedActions();
    internal IEnumerable`1<ODataFunction> get_NonComputedFunctions();
    internal ODataFeedAndEntrySerializationInfo get_SerializationInfo();
    internal void set_SerializationInfo(ODataFeedAndEntrySerializationInfo value);
}
[DebuggerDisplayAttribute("{ErrorCode}: {Message}")]
public class Microsoft.Data.OData.ODataError : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private string <ErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataInnerError <InnerError>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, ODataValue>, ODataInstanceAnnotation> CS$<>9__CachedAnonymousMethodDelegate1;
    public string ErrorCode { get; public set; }
    public string Message { get; public set; }
    public string MessageLanguage { get; public set; }
    public ODataInnerError InnerError { get; public set; }
    public ICollection`1<ODataInstanceAnnotation> InstanceAnnotations { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ErrorCode();
    [CompilerGeneratedAttribute]
public void set_ErrorCode(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_MessageLanguage();
    [CompilerGeneratedAttribute]
public void set_MessageLanguage(string value);
    [CompilerGeneratedAttribute]
public ODataInnerError get_InnerError();
    [CompilerGeneratedAttribute]
public void set_InnerError(ODataInnerError value);
    public ICollection`1<ODataInstanceAnnotation> get_InstanceAnnotations();
    public void set_InstanceAnnotations(ICollection`1<ODataInstanceAnnotation> value);
    internal virtual void VerifySetAnnotation(object annotation);
    internal IEnumerable`1<ODataInstanceAnnotation> GetInstanceAnnotationsForWriting();
    internal void AddInstanceAnnotationForReading(string instanceAnnotationName, object instanceAnnotationValue);
    [CompilerGeneratedAttribute]
private static ODataInstanceAnnotation <GetInstanceAnnotationsForWriting>b__0(KeyValuePair`2<string, ODataValue> ia);
}
[DebuggerDisplayAttribute("{Message}")]
public class Microsoft.Data.OData.ODataErrorException : ODataException {
    private ODataErrorExceptionSafeSerializationState state;
    public ODataError Error { get; }
    public ODataErrorException(string message);
    public ODataErrorException(string message, Exception innerException);
    public ODataErrorException(ODataError error);
    public ODataErrorException(string message, ODataError error);
    public ODataErrorException(string message, Exception innerException, ODataError error);
    public ODataError get_Error();
}
[DebuggerDisplayAttribute("{Message}")]
public class Microsoft.Data.OData.ODataException : InvalidOperationException {
    public ODataException(string message);
    public ODataException(string message, Exception innerException);
}
public class Microsoft.Data.OData.ODataFeed : ODataItem {
    private Uri nextPageLink;
    private Uri deltaLink;
    private ODataFeedAndEntrySerializationInfo serializationInfo;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public Nullable`1<long> Count { get; public set; }
    public string Id { get; public set; }
    public Uri NextPageLink { get; public set; }
    public Uri DeltaLink { get; public set; }
    public ICollection`1<ODataInstanceAnnotation> InstanceAnnotations { get; public set; }
    internal ODataFeedAndEntrySerializationInfo SerializationInfo { get; internal set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    public Uri get_NextPageLink();
    public void set_NextPageLink(Uri value);
    public Uri get_DeltaLink();
    public void set_DeltaLink(Uri value);
    public ICollection`1<ODataInstanceAnnotation> get_InstanceAnnotations();
    public void set_InstanceAnnotations(ICollection`1<ODataInstanceAnnotation> value);
    internal ODataFeedAndEntrySerializationInfo get_SerializationInfo();
    internal void set_SerializationInfo(ODataFeedAndEntrySerializationInfo value);
}
public class Microsoft.Data.OData.ODataFeedAndEntrySerializationInfo : object {
    private string entitySetName;
    private string entitySetElementTypeName;
    private string expectedTypeName;
    public string EntitySetName { get; public set; }
    public string EntitySetElementTypeName { get; public set; }
    public string ExpectedTypeName { get; public set; }
    public string get_EntitySetName();
    public void set_EntitySetName(string value);
    public string get_EntitySetElementTypeName();
    public void set_EntitySetElementTypeName(string value);
    public string get_ExpectedTypeName();
    public void set_ExpectedTypeName(string value);
    internal static ODataFeedAndEntrySerializationInfo Validate(ODataFeedAndEntrySerializationInfo serializationInfo);
}
internal class Microsoft.Data.OData.ODataFeedAndEntryTypeContext : object {
    private static UrlConvention DefaultUrlConvention;
    private bool throwIfMissingTypeInfo;
    public string EntitySetName { get; }
    public string EntitySetElementTypeName { get; }
    public string ExpectedEntityTypeName { get; }
    public bool IsMediaLinkEntry { get; }
    public UrlConvention UrlConvention { get; }
    private ODataFeedAndEntryTypeContext(bool throwIfMissingTypeInfo);
    private static ODataFeedAndEntryTypeContext();
    public virtual string get_EntitySetName();
    public virtual string get_EntitySetElementTypeName();
    public virtual string get_ExpectedEntityTypeName();
    public virtual bool get_IsMediaLinkEntry();
    public virtual UrlConvention get_UrlConvention();
    internal static ODataFeedAndEntryTypeContext Create(ODataFeedAndEntrySerializationInfo serializationInfo, IEdmEntitySet entitySet, IEdmEntityType entitySetElementType, IEdmEntityType expectedEntityType, IEdmModel model, bool throwIfMissingTypeInfo);
    private T ValidateAndReturn(T value);
}
public abstract class Microsoft.Data.OData.ODataFormat : object {
    private static ODataAtomFormat atomFormat;
    private static ODataVerboseJsonFormat verboseJsonFormat;
    private static ODataJsonLightFormat jsonLightFormat;
    private static ODataRawValueFormat rawValueFormat;
    private static ODataBatchFormat batchFormat;
    private static ODataMetadataFormat metadataFormat;
    public static ODataFormat Atom { get; }
    public static ODataFormat VerboseJson { get; }
    public static ODataFormat Json { get; }
    public static ODataFormat RawValue { get; }
    public static ODataFormat Batch { get; }
    public static ODataFormat Metadata { get; }
    private static ODataFormat();
    public static ODataFormat get_Atom();
    public static ODataFormat get_VerboseJson();
    public static ODataFormat get_Json();
    public static ODataFormat get_RawValue();
    public static ODataFormat get_Batch();
    public static ODataFormat get_Metadata();
    internal abstract virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataResponseMessage responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal abstract virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataRequestMessage requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal abstract virtual ODataInputContext CreateInputContext(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal abstract virtual ODataOutputContext CreateOutputContext(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    internal abstract virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataResponseMessageAsync responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal abstract virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataRequestMessageAsync requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal abstract virtual Task`1<ODataInputContext> CreateInputContextAsync(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal abstract virtual Task`1<ODataOutputContext> CreateOutputContextAsync(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
}
[DebuggerDisplayAttribute("{Metadata}")]
public class Microsoft.Data.OData.ODataFunction : ODataOperation {
}
[DebuggerDisplayAttribute("{Message}")]
public class Microsoft.Data.OData.ODataInnerError : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataInnerError <InnerError>k__BackingField;
    public string Message { get; public set; }
    public string TypeName { get; public set; }
    public string StackTrace { get; public set; }
    public ODataInnerError InnerError { get; public set; }
    public ODataInnerError(Exception exception);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
    [CompilerGeneratedAttribute]
public string get_StackTrace();
    [CompilerGeneratedAttribute]
public void set_StackTrace(string value);
    [CompilerGeneratedAttribute]
public ODataInnerError get_InnerError();
    [CompilerGeneratedAttribute]
public void set_InnerError(ODataInnerError value);
}
internal abstract class Microsoft.Data.OData.ODataInputContext : object {
    private ODataFormat format;
    private ODataMessageReaderSettings messageReaderSettings;
    private ODataVersion version;
    private bool readingResponse;
    private bool synchronous;
    private IODataUrlResolver urlResolver;
    private IEdmModel model;
    private EdmTypeResolver edmTypeResolver;
    private bool disposed;
    internal ODataMessageReaderSettings MessageReaderSettings { get; }
    internal ODataVersion Version { get; }
    internal bool ReadingResponse { get; }
    internal bool Synchronous { get; }
    internal IEdmModel Model { get; }
    internal EdmTypeResolver EdmTypeResolver { get; }
    internal IODataUrlResolver UrlResolver { get; }
    protected internal bool UseClientFormatBehavior { get; }
    protected internal bool UseServerFormatBehavior { get; }
    protected internal bool UseDefaultFormatBehavior { get; }
    protected internal bool UseClientApiBehavior { get; }
    protected internal bool UseServerApiBehavior { get; }
    protected internal bool UseDefaultApiBehavior { get; }
    protected ODataInputContext(ODataFormat format, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver);
    internal ODataMessageReaderSettings get_MessageReaderSettings();
    internal ODataVersion get_Version();
    internal bool get_ReadingResponse();
    internal bool get_Synchronous();
    internal IEdmModel get_Model();
    internal EdmTypeResolver get_EdmTypeResolver();
    internal IODataUrlResolver get_UrlResolver();
    protected internal bool get_UseClientFormatBehavior();
    protected internal bool get_UseServerFormatBehavior();
    protected internal bool get_UseDefaultFormatBehavior();
    protected internal bool get_UseClientApiBehavior();
    protected internal bool get_UseServerApiBehavior();
    protected internal bool get_UseDefaultApiBehavior();
    public sealed virtual void Dispose();
    internal virtual ODataReader CreateFeedReader(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    internal virtual Task`1<ODataReader> CreateFeedReaderAsync(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    internal virtual ODataReader CreateEntryReader(IEdmEntitySet entitySet, IEdmEntityType expectedEntityType);
    internal virtual Task`1<ODataReader> CreateEntryReaderAsync(IEdmEntitySet entitySet, IEdmEntityType expectedEntityType);
    internal virtual ODataCollectionReader CreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    internal virtual Task`1<ODataCollectionReader> CreateCollectionReaderAsync(IEdmTypeReference expectedItemTypeReference);
    internal virtual ODataBatchReader CreateBatchReader(string batchBoundary);
    internal virtual Task`1<ODataBatchReader> CreateBatchReaderAsync(string batchBoundary);
    internal virtual ODataParameterReader CreateParameterReader(IEdmFunctionImport functionImport);
    internal virtual Task`1<ODataParameterReader> CreateParameterReaderAsync(IEdmFunctionImport functionImport);
    internal virtual ODataWorkspace ReadServiceDocument();
    internal virtual Task`1<ODataWorkspace> ReadServiceDocumentAsync();
    internal virtual IEdmModel ReadMetadataDocument();
    internal virtual ODataProperty ReadProperty(IEdmStructuralProperty property, IEdmTypeReference expectedPropertyTypeReference);
    internal virtual Task`1<ODataProperty> ReadPropertyAsync(IEdmStructuralProperty property, IEdmTypeReference expectedPropertyTypeReference);
    internal virtual ODataError ReadError();
    internal virtual Task`1<ODataError> ReadErrorAsync();
    internal virtual ODataEntityReferenceLinks ReadEntityReferenceLinks(IEdmNavigationProperty navigationProperty);
    internal virtual Task`1<ODataEntityReferenceLinks> ReadEntityReferenceLinksAsync(IEdmNavigationProperty navigationProperty);
    internal virtual ODataEntityReferenceLink ReadEntityReferenceLink(IEdmNavigationProperty navigationProperty);
    internal virtual Task`1<ODataEntityReferenceLink> ReadEntityReferenceLinkAsync(IEdmNavigationProperty navigationProperty);
    internal virtual object ReadValue(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    internal virtual Task`1<object> ReadValueAsync(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    internal void VerifyNotDisposed();
    [ConditionalAttribute("DEBUG")]
internal void AssertSynchronous();
    [ConditionalAttribute("DEBUG")]
internal void AssertAsynchronous();
    internal DuplicatePropertyNamesChecker CreateDuplicatePropertyNamesChecker();
    internal Uri ResolveUri(Uri baseUri, Uri payloadUri);
    protected abstract virtual void DisposeImplementation();
    private void Dispose(bool disposing);
    private ODataException CreatePayloadKindNotSupportedException(ODataPayloadKind payloadKind);
}
public class Microsoft.Data.OData.ODataInstanceAnnotation : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataValue <Value>k__BackingField;
    public string Name { get; private set; }
    public ODataValue Value { get; private set; }
    public ODataInstanceAnnotation(string name, ODataValue value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public ODataValue get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(ODataValue value);
    internal static void ValidateName(string name);
    internal static void ValidateValue(ODataValue value);
}
public abstract class Microsoft.Data.OData.ODataItem : ODataAnnotatable {
}
internal enum Microsoft.Data.OData.ODataJsonDateTimeFormat : Enum {
    public int value__;
    public static ODataJsonDateTimeFormat ODataDateTime;
    public static ODataJsonDateTimeFormat ISO8601DateTime;
}
[DebuggerDisplayAttribute("{Name}")]
internal class Microsoft.Data.OData.ODataJsonLightAnnotationGroup : object {
    private string name;
    private IDictionary`2<string, object> annotations;
    public string Name { get; public set; }
    public IDictionary`2<string, object> Annotations { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public IDictionary`2<string, object> get_Annotations();
    public void set_Annotations(IDictionary`2<string, object> value);
}
internal class Microsoft.Data.OData.ODataJsonLightRawAnnotationSet : object {
    private IDictionary`2<string, string> annotations;
    public IDictionary`2<string, string> Annotations { get; public set; }
    public IDictionary`2<string, string> get_Annotations();
    public void set_Annotations(IDictionary`2<string, string> value);
}
internal abstract class Microsoft.Data.OData.ODataMessage : object {
    private bool writing;
    private bool disableMessageStreamDisposal;
    private long maxMessageSize;
    private Nullable`1<bool> useBufferingReadStream;
    private BufferingReadStream bufferingReadStream;
    [CompilerGeneratedAttribute]
private static Func`2<Task`1<Stream>, Task`1<BufferedReadStream>> CS$<>9__CachedAnonymousMethodDelegate4;
    [CompilerGeneratedAttribute]
private static Func`2<Task`1<BufferedReadStream>, Stream> CS$<>9__CachedAnonymousMethodDelegate5;
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    protected internal BufferingReadStream BufferingReadStream { get; }
    protected internal Nullable`1<bool> UseBufferingReadStream { get; protected internal set; }
    protected ODataMessage(bool writing, bool disableMessageStreamDisposal, long maxMessageSize);
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    protected internal BufferingReadStream get_BufferingReadStream();
    protected internal Nullable`1<bool> get_UseBufferingReadStream();
    protected internal void set_UseBufferingReadStream(Nullable`1<bool> value);
    public abstract virtual string GetHeader(string headerName);
    public abstract virtual void SetHeader(string headerName, string headerValue);
    public abstract virtual Stream GetStream();
    public abstract virtual Task`1<Stream> GetStreamAsync();
    internal abstract virtual TInterface QueryInterface();
    protected internal Stream GetStream(Func`1<Stream> messageStreamFunc, bool isRequest);
    protected internal Task`1<Stream> GetStreamAsync(Func`1<Task`1<Stream>> streamFuncAsync, bool isRequest);
    protected void VerifyCanSetHeader();
    private static void ValidateMessageStream(Stream stream, bool isRequest);
    private static void ValidateMessageStreamTask(Task`1<Stream> streamTask, bool isRequest);
    private BufferingReadStream TryGetBufferingReadStream();
    [CompilerGeneratedAttribute]
private static Task`1<BufferedReadStream> <GetStreamAsync>b__1(Task`1<Stream> streamTask);
    [CompilerGeneratedAttribute]
private static Stream <GetStreamAsync>b__2(Task`1<BufferedReadStream> streamTask);
    [CompilerGeneratedAttribute]
private Stream <GetStreamAsync>b__3(Task`1<Stream> streamTask);
}
[ExtensionAttribute]
public static class Microsoft.Data.OData.ODataMessageExtensions : object {
    [ExtensionAttribute]
public static ODataVersion GetDataServiceVersion(IODataResponseMessage message, ODataVersion defaultVersion);
    [ExtensionAttribute]
public static ODataVersion GetDataServiceVersion(IODataRequestMessage message, ODataVersion defaultVersion);
    [ExtensionAttribute]
public static ODataPreferenceHeader PreferHeader(IODataRequestMessage requestMessage);
    [ExtensionAttribute]
public static ODataPreferenceHeader PreferenceAppliedHeader(IODataResponseMessage responseMessage);
}
public class Microsoft.Data.OData.ODataMessageQuotas : object {
    private int maxPartsPerBatch;
    private int maxOperationsPerChangeset;
    private int maxNestingDepth;
    private long maxReceivedMessageSize;
    private int maxEntityPropertyMappingsPerType;
    public int MaxPartsPerBatch { get; public set; }
    public int MaxOperationsPerChangeset { get; public set; }
    public int MaxNestingDepth { get; public set; }
    public long MaxReceivedMessageSize { get; public set; }
    public int MaxEntityPropertyMappingsPerType { get; public set; }
    public ODataMessageQuotas(ODataMessageQuotas other);
    public int get_MaxPartsPerBatch();
    public void set_MaxPartsPerBatch(int value);
    public int get_MaxOperationsPerChangeset();
    public void set_MaxOperationsPerChangeset(int value);
    public int get_MaxNestingDepth();
    public void set_MaxNestingDepth(int value);
    public long get_MaxReceivedMessageSize();
    public void set_MaxReceivedMessageSize(long value);
    public int get_MaxEntityPropertyMappingsPerType();
    public void set_MaxEntityPropertyMappingsPerType(int value);
}
public class Microsoft.Data.OData.ODataMessageReader : object {
    private ODataMessage message;
    private bool readingResponse;
    private ODataMessageReaderSettings settings;
    private IEdmModel model;
    private ODataVersion version;
    private IODataUrlResolver urlResolver;
    private EdmTypeResolver edmTypeResolver;
    private bool readMethodCalled;
    private bool isDisposed;
    private ODataInputContext inputContext;
    private ODataPayloadKind readerPayloadKind;
    private ODataFormat format;
    private MediaType contentType;
    private Encoding encoding;
    private string batchBoundary;
    private MediaTypeResolver mediaTypeResolver;
    private Dictionary`2<ODataFormat, object> payloadKindDetectionFormatStates;
    [CompilerGeneratedAttribute]
private static Func`2<ODataPayloadKindDetectionResult, ODataFormat> CS$<>9__CachedAnonymousMethodDelegate3;
    [CompilerGeneratedAttribute]
private static Func`2<ODataPayloadKindDetectionResult, ODataPayloadKind> CS$<>9__CachedAnonymousMethodDelegate4;
    [CompilerGeneratedAttribute]
private static Func`2<ODataInputContext, ODataWorkspace> CS$<>9__CachedAnonymousMethodDelegate27;
    [CompilerGeneratedAttribute]
private static Func`2<ODataInputContext, Task`1<ODataWorkspace>> CS$<>9__CachedAnonymousMethodDelegate29;
    [CompilerGeneratedAttribute]
private static Func`2<ODataInputContext, ODataError> CS$<>9__CachedAnonymousMethodDelegate37;
    [CompilerGeneratedAttribute]
private static Func`2<ODataInputContext, Task`1<ODataError>> CS$<>9__CachedAnonymousMethodDelegate39;
    [CompilerGeneratedAttribute]
private static Func`2<ODataInputContext, IEdmModel> CS$<>9__CachedAnonymousMethodDelegate4d;
    [CompilerGeneratedAttribute]
private static Func`2<ODataPayloadKindDetectionResult, ODataFormat> CS$<>9__CachedAnonymousMethodDelegate53;
    [CompilerGeneratedAttribute]
private static Func`2<ODataPayloadKindDetectionResult, ODataPayloadKind> CS$<>9__CachedAnonymousMethodDelegate54;
    internal ODataMessageReaderSettings Settings { get; }
    private MediaTypeResolver MediaTypeResolver { get; }
    public ODataMessageReader(IODataRequestMessage requestMessage);
    public ODataMessageReader(IODataRequestMessage requestMessage, ODataMessageReaderSettings settings);
    public ODataMessageReader(IODataRequestMessage requestMessage, ODataMessageReaderSettings settings, IEdmModel model);
    public ODataMessageReader(IODataResponseMessage responseMessage);
    public ODataMessageReader(IODataResponseMessage responseMessage, ODataMessageReaderSettings settings);
    public ODataMessageReader(IODataResponseMessage responseMessage, ODataMessageReaderSettings settings, IEdmModel model);
    internal ODataMessageReaderSettings get_Settings();
    private MediaTypeResolver get_MediaTypeResolver();
    public IEnumerable`1<ODataPayloadKindDetectionResult> DetectPayloadKind();
    public Task`1<IEnumerable`1<ODataPayloadKindDetectionResult>> DetectPayloadKindAsync();
    public ODataReader CreateODataFeedReader();
    public ODataReader CreateODataFeedReader(IEdmEntityType expectedBaseEntityType);
    public ODataReader CreateODataFeedReader(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    public Task`1<ODataReader> CreateODataFeedReaderAsync();
    public Task`1<ODataReader> CreateODataFeedReaderAsync(IEdmEntityType expectedBaseEntityType);
    public Task`1<ODataReader> CreateODataFeedReaderAsync(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    public ODataReader CreateODataEntryReader();
    public ODataReader CreateODataEntryReader(IEdmEntityType entityType);
    public ODataReader CreateODataEntryReader(IEdmEntitySet entitySet, IEdmEntityType entityType);
    public Task`1<ODataReader> CreateODataEntryReaderAsync();
    public Task`1<ODataReader> CreateODataEntryReaderAsync(IEdmEntityType entityType);
    public Task`1<ODataReader> CreateODataEntryReaderAsync(IEdmEntitySet entitySet, IEdmEntityType entityType);
    public ODataCollectionReader CreateODataCollectionReader();
    public ODataCollectionReader CreateODataCollectionReader(IEdmTypeReference expectedItemTypeReference);
    public Task`1<ODataCollectionReader> CreateODataCollectionReaderAsync();
    public Task`1<ODataCollectionReader> CreateODataCollectionReaderAsync(IEdmTypeReference expectedItemTypeReference);
    public ODataBatchReader CreateODataBatchReader();
    public Task`1<ODataBatchReader> CreateODataBatchReaderAsync();
    public ODataParameterReader CreateODataParameterReader(IEdmFunctionImport functionImport);
    public Task`1<ODataParameterReader> CreateODataParameterReaderAsync(IEdmFunctionImport functionImport);
    public ODataWorkspace ReadServiceDocument();
    public Task`1<ODataWorkspace> ReadServiceDocumentAsync();
    public ODataProperty ReadProperty();
    public ODataProperty ReadProperty(IEdmTypeReference expectedPropertyTypeReference);
    public ODataProperty ReadProperty(IEdmStructuralProperty property);
    public Task`1<ODataProperty> ReadPropertyAsync();
    public Task`1<ODataProperty> ReadPropertyAsync(IEdmTypeReference expectedPropertyTypeReference);
    public Task`1<ODataProperty> ReadPropertyAsync(IEdmStructuralProperty property);
    public ODataError ReadError();
    public Task`1<ODataError> ReadErrorAsync();
    public ODataEntityReferenceLinks ReadEntityReferenceLinks();
    public ODataEntityReferenceLinks ReadEntityReferenceLinks(IEdmNavigationProperty navigationProperty);
    public Task`1<ODataEntityReferenceLinks> ReadEntityReferenceLinksAsync();
    public Task`1<ODataEntityReferenceLinks> ReadEntityReferenceLinksAsync(IEdmNavigationProperty navigationProperty);
    public ODataEntityReferenceLink ReadEntityReferenceLink();
    public ODataEntityReferenceLink ReadEntityReferenceLink(IEdmNavigationProperty navigationProperty);
    public Task`1<ODataEntityReferenceLink> ReadEntityReferenceLinkAsync();
    public Task`1<ODataEntityReferenceLink> ReadEntityReferenceLinkAsync(IEdmNavigationProperty navigationProperty);
    public object ReadValue(IEdmTypeReference expectedTypeReference);
    public Task`1<object> ReadValueAsync(IEdmTypeReference expectedTypeReference);
    public IEdmModel ReadMetadataDocument();
    public sealed virtual void Dispose();
    internal ODataFormat GetFormat();
    private void ProcessContentType(ODataPayloadKind[] payloadKinds);
    private string GetContentTypeHeader();
    private void VerifyCanCreateODataFeedReader(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    private void VerifyCanCreateODataEntryReader(IEdmEntitySet entitySet, IEdmEntityType entityType);
    private void VerifyCanCreateODataCollectionReader(IEdmTypeReference expectedItemTypeReference);
    private void VerifyCanCreateODataBatchReader();
    private void VerifyCanCreateODataParameterReader(IEdmFunctionImport functionImport);
    private void VerifyCanReadServiceDocument();
    private void VerifyCanReadMetadataDocument();
    private void VerifyCanReadProperty(IEdmStructuralProperty property);
    private void VerifyCanReadProperty(IEdmTypeReference expectedPropertyTypeReference);
    private void VerifyCanReadError();
    private void VerifyCanReadEntityReferenceLinks(IEdmNavigationProperty navigationProperty);
    private void VerifyCanReadEntityReferenceLink();
    private ODataPayloadKind[] VerifyCanReadValue(IEdmTypeReference expectedTypeReference);
    private void VerifyReaderNotDisposedAndNotUsed();
    private void VerifyNotDisposed();
    private void Dispose(bool disposing);
    private T ReadFromInput(Func`2<ODataInputContext, T> readFunc, ODataPayloadKind[] payloadKinds);
    private bool TryGetSinglePayloadKindResultFromContentType(IEnumerable`1& payloadKindResults);
    private int ComparePayloadKindDetectionResult(ODataPayloadKindDetectionResult first, ODataPayloadKindDetectionResult second);
    private IEnumerable`1<Task> GetPayloadKindDetectionTasks(IEnumerable`1<ODataPayloadKindDetectionResult> payloadKindsFromContentType, List`1<ODataPayloadKindDetectionResult> detectionResults);
    private Task`1<T> ReadFromInputAsync(Func`2<ODataInputContext, Task`1<T>> readFunc, ODataPayloadKind[] payloadKinds);
    [CompilerGeneratedAttribute]
private static ODataFormat <DetectPayloadKind>b__0(ODataPayloadKindDetectionResult kvp);
    [CompilerGeneratedAttribute]
private static ODataPayloadKind <DetectPayloadKind>b__1(ODataPayloadKindDetectionResult pkg);
    [CompilerGeneratedAttribute]
private void <DetectPayloadKindAsync>b__8(Task t);
    [CompilerGeneratedAttribute]
private ODataBatchReader <CreateODataBatchReader>b__1e(ODataInputContext context);
    [CompilerGeneratedAttribute]
private Task`1<ODataBatchReader> <CreateODataBatchReaderAsync>b__1f(ODataInputContext context);
    [CompilerGeneratedAttribute]
private static ODataWorkspace <ReadServiceDocument>b__26(ODataInputContext context);
    [CompilerGeneratedAttribute]
private static Task`1<ODataWorkspace> <ReadServiceDocumentAsync>b__28(ODataInputContext context);
    [CompilerGeneratedAttribute]
private static ODataError <ReadError>b__36(ODataInputContext context);
    [CompilerGeneratedAttribute]
private static Task`1<ODataError> <ReadErrorAsync>b__38(ODataInputContext context);
    [CompilerGeneratedAttribute]
private static IEdmModel <ReadMetadataDocument>b__4c(ODataInputContext context);
    [CompilerGeneratedAttribute]
private bool <TryGetSinglePayloadKindResultFromContentType>b__4e(ODataPayloadKindDetectionResult r);
    [CompilerGeneratedAttribute]
private static ODataFormat <GetPayloadKindDetectionTasks>b__4f(ODataPayloadKindDetectionResult kvp);
    [CompilerGeneratedAttribute]
private static ODataPayloadKind <GetPayloadKindDetectionTasks>b__50(ODataPayloadKindDetectionResult pkg);
}
public class Microsoft.Data.OData.ODataMessageReaderSettings : ODataMessageReaderSettingsBase {
    private ODataReaderBehavior readerBehavior;
    private Func`4<ODataEntry, XmlReader, Uri, XmlReader> atomFormatEntryXmlCustomizationCallback;
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisablePrimitiveTypeConversion>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataUndeclaredPropertyBehaviorKinds <UndeclaredPropertyBehaviorKinds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableMessageStreamDisposal>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataVersion <MaxProtocolVersion>k__BackingField;
    public Uri BaseUri { get; public set; }
    public bool DisablePrimitiveTypeConversion { get; public set; }
    public ODataUndeclaredPropertyBehaviorKinds UndeclaredPropertyBehaviorKinds { get; public set; }
    public bool DisableMessageStreamDisposal { get; public set; }
    public ODataVersion MaxProtocolVersion { get; public set; }
    internal bool DisableStrictMetadataValidation { get; }
    internal ODataReaderBehavior ReaderBehavior { get; }
    internal Func`4<ODataEntry, XmlReader, Uri, XmlReader> AtomEntryXmlCustomizationCallback { get; }
    public ODataMessageReaderSettings(ODataMessageReaderSettings other);
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
public void set_BaseUri(Uri value);
    [CompilerGeneratedAttribute]
public bool get_DisablePrimitiveTypeConversion();
    [CompilerGeneratedAttribute]
public void set_DisablePrimitiveTypeConversion(bool value);
    [CompilerGeneratedAttribute]
public ODataUndeclaredPropertyBehaviorKinds get_UndeclaredPropertyBehaviorKinds();
    [CompilerGeneratedAttribute]
public void set_UndeclaredPropertyBehaviorKinds(ODataUndeclaredPropertyBehaviorKinds value);
    [CompilerGeneratedAttribute]
public bool get_DisableMessageStreamDisposal();
    [CompilerGeneratedAttribute]
public void set_DisableMessageStreamDisposal(bool value);
    [CompilerGeneratedAttribute]
public ODataVersion get_MaxProtocolVersion();
    [CompilerGeneratedAttribute]
public void set_MaxProtocolVersion(ODataVersion value);
    internal bool get_DisableStrictMetadataValidation();
    internal ODataReaderBehavior get_ReaderBehavior();
    internal Func`4<ODataEntry, XmlReader, Uri, XmlReader> get_AtomEntryXmlCustomizationCallback();
    public bool ContainUndeclaredPropertyBehavior(ODataUndeclaredPropertyBehaviorKinds undeclaredPropertyBehaviorKinds);
    public void SetAtomEntryXmlCustomizationCallback(Func`4<ODataEntry, XmlReader, Uri, XmlReader> atomEntryXmlCustomizationCallback);
    public void EnableDefaultBehavior();
    public void EnableWcfDataServicesServerBehavior(bool usesV1Provider);
    public void EnableWcfDataServicesClientBehavior(Func`3<IEdmType, string, IEdmType> typeResolver, string odataNamespace, string typeScheme, Func`4<ODataEntry, XmlReader, Uri, XmlReader> entryXmlCustomizationCallback);
    [ObsoleteAttribute("The 'shouldQualifyOperations' parameter is no longer needed and will be removed. Use the overload which does not take it.")]
public void EnableWcfDataServicesClientBehavior(Func`3<IEdmType, string, IEdmType> typeResolver, string odataNamespace, string typeScheme, Func`4<ODataEntry, XmlReader, Uri, XmlReader> entryXmlCustomizationCallback, Func`2<IEdmEntityType, bool> shouldQualifyOperations);
    internal bool ShouldSkipAnnotation(string annotationName);
}
public abstract class Microsoft.Data.OData.ODataMessageReaderSettingsBase : object {
    private ODataMessageQuotas messageQuotas;
    private bool checkCharacters;
    private bool enableAtomMetadataReading;
    private Func`2<string, bool> shouldIncludeAnnotation;
    public bool CheckCharacters { get; public set; }
    public bool EnableAtomMetadataReading { get; public set; }
    public ODataMessageQuotas MessageQuotas { get; public set; }
    public Func`2<string, bool> ShouldIncludeAnnotation { get; public set; }
    protected ODataMessageReaderSettingsBase(ODataMessageReaderSettingsBase other);
    public virtual bool get_CheckCharacters();
    public virtual void set_CheckCharacters(bool value);
    public virtual bool get_EnableAtomMetadataReading();
    public virtual void set_EnableAtomMetadataReading(bool value);
    public virtual ODataMessageQuotas get_MessageQuotas();
    public virtual void set_MessageQuotas(ODataMessageQuotas value);
    public virtual Func`2<string, bool> get_ShouldIncludeAnnotation();
    public virtual void set_ShouldIncludeAnnotation(Func`2<string, bool> value);
}
public class Microsoft.Data.OData.ODataMessageWriter : object {
    private ODataMessage message;
    private bool writingResponse;
    private ODataMessageWriterSettings settings;
    private IEdmModel model;
    private IODataUrlResolver urlResolver;
    private bool writeMethodCalled;
    private bool isDisposed;
    private ODataOutputContext outputContext;
    private ODataPayloadKind writerPayloadKind;
    private ODataFormat format;
    private Encoding encoding;
    private string batchBoundary;
    private bool writeErrorCalled;
    private MediaTypeResolver mediaTypeResolver;
    private MediaType mediaType;
    [CompilerGeneratedAttribute]
private static Action`1<ODataOutputContext> CS$<>9__CachedAnonymousMethodDelegate43;
    internal ODataMessageWriterSettings Settings { get; }
    private MediaTypeResolver MediaTypeResolver { get; }
    public ODataMessageWriter(IODataRequestMessage requestMessage);
    public ODataMessageWriter(IODataRequestMessage requestMessage, ODataMessageWriterSettings settings);
    public ODataMessageWriter(IODataRequestMessage requestMessage, ODataMessageWriterSettings settings, IEdmModel model);
    public ODataMessageWriter(IODataResponseMessage responseMessage);
    public ODataMessageWriter(IODataResponseMessage responseMessage, ODataMessageWriterSettings settings);
    public ODataMessageWriter(IODataResponseMessage responseMessage, ODataMessageWriterSettings settings, IEdmModel model);
    internal ODataMessageWriterSettings get_Settings();
    private MediaTypeResolver get_MediaTypeResolver();
    public ODataWriter CreateODataFeedWriter();
    public ODataWriter CreateODataFeedWriter(IEdmEntitySet entitySet);
    public ODataWriter CreateODataFeedWriter(IEdmEntitySet entitySet, IEdmEntityType entityType);
    public Task`1<ODataWriter> CreateODataFeedWriterAsync();
    public Task`1<ODataWriter> CreateODataFeedWriterAsync(IEdmEntitySet entitySet);
    public Task`1<ODataWriter> CreateODataFeedWriterAsync(IEdmEntitySet entitySet, IEdmEntityType entityType);
    public ODataWriter CreateODataEntryWriter();
    public ODataWriter CreateODataEntryWriter(IEdmEntitySet entitySet);
    public ODataWriter CreateODataEntryWriter(IEdmEntitySet entitySet, IEdmEntityType entityType);
    public Task`1<ODataWriter> CreateODataEntryWriterAsync();
    public Task`1<ODataWriter> CreateODataEntryWriterAsync(IEdmEntitySet entitySet);
    public Task`1<ODataWriter> CreateODataEntryWriterAsync(IEdmEntitySet entitySet, IEdmEntityType entityType);
    public ODataCollectionWriter CreateODataCollectionWriter();
    public ODataCollectionWriter CreateODataCollectionWriter(IEdmTypeReference itemTypeReference);
    public Task`1<ODataCollectionWriter> CreateODataCollectionWriterAsync();
    public Task`1<ODataCollectionWriter> CreateODataCollectionWriterAsync(IEdmTypeReference itemTypeReference);
    public ODataBatchWriter CreateODataBatchWriter();
    public Task`1<ODataBatchWriter> CreateODataBatchWriterAsync();
    public ODataParameterWriter CreateODataParameterWriter(IEdmFunctionImport functionImport);
    public Task`1<ODataParameterWriter> CreateODataParameterWriterAsync(IEdmFunctionImport functionImport);
    public void WriteServiceDocument(ODataWorkspace defaultWorkspace);
    public Task WriteServiceDocumentAsync(ODataWorkspace defaultWorkspace);
    public void WriteProperty(ODataProperty property);
    public Task WritePropertyAsync(ODataProperty property);
    public void WriteError(ODataError error, bool includeDebugInformation);
    public Task WriteErrorAsync(ODataError error, bool includeDebugInformation);
    public void WriteEntityReferenceLinks(ODataEntityReferenceLinks links);
    public void WriteEntityReferenceLinks(ODataEntityReferenceLinks links, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    public Task WriteEntityReferenceLinksAsync(ODataEntityReferenceLinks links);
    public Task WriteEntityReferenceLinksAsync(ODataEntityReferenceLinks links, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    public void WriteEntityReferenceLink(ODataEntityReferenceLink link);
    public void WriteEntityReferenceLink(ODataEntityReferenceLink link, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    public Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink link);
    public Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink link, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    public void WriteValue(object value);
    public Task WriteValueAsync(object value);
    public void WriteMetadataDocument();
    public sealed virtual void Dispose();
    internal ODataFormat SetHeaders(ODataPayloadKind payloadKind);
    private void SetOrVerifyHeaders(ODataPayloadKind payloadKind);
    private void EnsureODataVersion();
    private void EnsureODataFormatAndContentType();
    private void VerifyCanCreateODataFeedWriter();
    private void VerifyCanCreateODataEntryWriter();
    private void VerifyCanCreateODataCollectionWriter(IEdmTypeReference itemTypeReference);
    private void VerifyCanCreateODataBatchWriter();
    private void VerifyCanCreateODataParameterWriter(IEdmFunctionImport functionImport);
    private void VerifyODataParameterWriterHeaders();
    private void VerifyCanWriteServiceDocument(ODataWorkspace defaultWorkspace);
    private void VerifyCanWriteProperty(ODataProperty property);
    private void VerifyCanWriteTopLevelError(ODataError error);
    private void VerifyCanWriteInStreamError(ODataError error);
    private void VerifyCanWriteEntityReferenceLinks(ODataEntityReferenceLinks links, IEdmNavigationProperty navigationProperty);
    private void VerifyEntityReferenceLinksHeaders(ODataEntityReferenceLinks links);
    private void VerifyCanWriteEntityReferenceLink(ODataEntityReferenceLink link);
    private ODataPayloadKind VerifyCanWriteValue(object value);
    private void VerifyCanWriteMetadataDocument();
    private void VerifyMetadataDocumentHeaders();
    private void VerifyWriterNotDisposedAndNotUsed();
    private void VerifyNotDisposed();
    private void Dispose(bool disposing);
    private void VerifyPayloadKind(ODataPayloadKind payloadKindToWrite);
    private void WriteToOutput(ODataPayloadKind payloadKind, Action verifyHeaders, Action`1<ODataOutputContext> writeAction);
    private TResult WriteToOutput(ODataPayloadKind payloadKind, Action verifyHeaders, Func`2<ODataOutputContext, TResult> writeFunc);
    private Task WriteToOutputAsync(ODataPayloadKind payloadKind, Action verifyHeaders, Func`2<ODataOutputContext, Task> writeAsyncAction);
    private Task`1<TResult> WriteToOutputAsync(ODataPayloadKind payloadKind, Action verifyHeaders, Func`2<ODataOutputContext, Task`1<TResult>> writeFunc);
    [CompilerGeneratedAttribute]
private ODataBatchWriter <CreateODataBatchWriter>b__12(ODataOutputContext context);
    [CompilerGeneratedAttribute]
private Task`1<ODataBatchWriter> <CreateODataBatchWriterAsync>b__13(ODataOutputContext context);
    [CompilerGeneratedAttribute]
private static void <WriteMetadataDocument>b__42(ODataOutputContext context);
}
public class Microsoft.Data.OData.ODataMessageWriterSettings : ODataMessageWriterSettingsBase {
    private string acceptCharSets;
    private string acceptMediaTypes;
    private ODataFormat format;
    private Nullable`1<bool> useFormat;
    private Func`3<ODataEntry, XmlWriter, XmlWriter> atomFormatStartEntryXmlCustomizationCallback;
    private Action`3<ODataEntry, XmlWriter, XmlWriter> atomFormatEndEntryXmlCustomizationCallback;
    private ODataWriterBehavior writerBehavior;
    private ODataMetadataDocumentUri metadataDocumentUri;
    private Func`2<string, bool> shouldIncludeAnnotation;
    private bool alwaysUseDefaultXmlNamespaceForRootElement;
    [CompilerGeneratedAttribute]
private Nullable`1<ODataVersion> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataUndeclaredPropertyBehaviorKinds <UndeclaredPropertyBehaviorKinds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableMessageStreamDisposal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JsonPCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoComputePayloadMetadataInJson>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoGeneratedUrlsShouldPutKeyValueInDedicatedSegment>k__BackingField;
    public Nullable`1<ODataVersion> Version { get; public set; }
    public Uri BaseUri { get; public set; }
    public ODataUndeclaredPropertyBehaviorKinds UndeclaredPropertyBehaviorKinds { get; public set; }
    public bool DisableMessageStreamDisposal { get; public set; }
    public string JsonPCallback { get; public set; }
    public bool AutoComputePayloadMetadataInJson { get; public set; }
    public Nullable`1<bool> AutoGeneratedUrlsShouldPutKeyValueInDedicatedSegment { get; public set; }
    internal bool AlwaysUseDefaultXmlNamespaceForRootElement { get; }
    internal string AcceptableMediaTypes { get; }
    internal string AcceptableCharsets { get; }
    internal ODataWriterBehavior WriterBehavior { get; }
    internal ODataFormat Format { get; }
    internal Nullable`1<bool> UseFormat { get; }
    internal Func`3<ODataEntry, XmlWriter, XmlWriter> AtomStartEntryXmlCustomizationCallback { get; }
    internal Action`3<ODataEntry, XmlWriter, XmlWriter> AtomEndEntryXmlCustomizationCallback { get; }
    internal ODataMetadataDocumentUri MetadataDocumentUri { get; }
    internal Func`2<string, bool> ShouldIncludeAnnotation { get; internal set; }
    public ODataMessageWriterSettings(ODataMessageWriterSettings other);
    [CompilerGeneratedAttribute]
public Nullable`1<ODataVersion> get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Nullable`1<ODataVersion> value);
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
public void set_BaseUri(Uri value);
    [CompilerGeneratedAttribute]
public ODataUndeclaredPropertyBehaviorKinds get_UndeclaredPropertyBehaviorKinds();
    [CompilerGeneratedAttribute]
public void set_UndeclaredPropertyBehaviorKinds(ODataUndeclaredPropertyBehaviorKinds value);
    [CompilerGeneratedAttribute]
public bool get_DisableMessageStreamDisposal();
    [CompilerGeneratedAttribute]
public void set_DisableMessageStreamDisposal(bool value);
    [CompilerGeneratedAttribute]
public string get_JsonPCallback();
    [CompilerGeneratedAttribute]
public void set_JsonPCallback(string value);
    [CompilerGeneratedAttribute]
public bool get_AutoComputePayloadMetadataInJson();
    [CompilerGeneratedAttribute]
public void set_AutoComputePayloadMetadataInJson(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AutoGeneratedUrlsShouldPutKeyValueInDedicatedSegment();
    [CompilerGeneratedAttribute]
public void set_AutoGeneratedUrlsShouldPutKeyValueInDedicatedSegment(Nullable`1<bool> value);
    internal bool get_AlwaysUseDefaultXmlNamespaceForRootElement();
    internal string get_AcceptableMediaTypes();
    internal string get_AcceptableCharsets();
    internal ODataWriterBehavior get_WriterBehavior();
    internal ODataFormat get_Format();
    internal Nullable`1<bool> get_UseFormat();
    internal Func`3<ODataEntry, XmlWriter, XmlWriter> get_AtomStartEntryXmlCustomizationCallback();
    internal Action`3<ODataEntry, XmlWriter, XmlWriter> get_AtomEndEntryXmlCustomizationCallback();
    internal ODataMetadataDocumentUri get_MetadataDocumentUri();
    internal Func`2<string, bool> get_ShouldIncludeAnnotation();
    internal void set_ShouldIncludeAnnotation(Func`2<string, bool> value);
    public void SetContentType(string acceptableMediaTypes, string acceptableCharSets);
    public void SetContentType(ODataFormat payloadFormat);
    public void SetAtomEntryXmlCustomization(Func`3<ODataEntry, XmlWriter, XmlWriter> atomStartEntryXmlCustomizationCallback, Action`3<ODataEntry, XmlWriter, XmlWriter> atomEndEntryXmlCustomizationCallback);
    public void EnableDefaultBehavior();
    public void EnableWcfDataServicesServerBehavior(bool usesV1Provider);
    public void EnableWcfDataServicesServerBehavior(bool usesV1Provider, bool alwaysUseDefaultXmlNamespaceForRootElement);
    public void EnableWcfDataServicesClientBehavior(Func`3<ODataEntry, XmlWriter, XmlWriter> startEntryXmlCustomizationCallback, Action`3<ODataEntry, XmlWriter, XmlWriter> endEntryXmlCustomizationCallback, string odataNamespace, string typeScheme);
    public void SetMetadataDocumentUri(Uri value);
    public void SetMetadataDocumentUri(Uri value, string selectClause);
    public bool ContainUndeclaredPropertyBehavior(ODataUndeclaredPropertyBehaviorKinds undeclaredPropertyBehaviorKinds);
    internal bool HasJsonPaddingFunction();
    internal bool ShouldSkipAnnotation(string annotationName);
}
public abstract class Microsoft.Data.OData.ODataMessageWriterSettingsBase : object {
    private ODataMessageQuotas messageQuotas;
    private bool checkCharacters;
    private bool indent;
    public bool Indent { get; public set; }
    public bool CheckCharacters { get; public set; }
    public ODataMessageQuotas MessageQuotas { get; public set; }
    protected ODataMessageWriterSettingsBase(ODataMessageWriterSettingsBase other);
    public virtual bool get_Indent();
    public virtual void set_Indent(bool value);
    public virtual bool get_CheckCharacters();
    public virtual void set_CheckCharacters(bool value);
    public virtual ODataMessageQuotas get_MessageQuotas();
    public virtual void set_MessageQuotas(ODataMessageQuotas value);
}
internal class Microsoft.Data.OData.ODataMetadataDocumentUri : object {
    private Uri baseUri;
    private string selectClause;
    internal Uri BaseUri { get; }
    internal string SelectClause { get; internal set; }
    internal ODataMetadataDocumentUri(Uri baseUri);
    internal Uri get_BaseUri();
    internal string get_SelectClause();
    internal void set_SelectClause(string value);
}
internal class Microsoft.Data.OData.ODataMetadataFormat : ODataFormat {
    public virtual string ToString();
    internal virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataResponseMessage responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataRequestMessage requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual ODataInputContext CreateInputContext(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal virtual ODataOutputContext CreateOutputContext(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    internal virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataResponseMessageAsync responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataRequestMessageAsync requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual Task`1<ODataInputContext> CreateInputContextAsync(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal virtual Task`1<ODataOutputContext> CreateOutputContextAsync(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    private static IEnumerable`1<ODataPayloadKind> DetectPayloadKindImplementation(Stream messageStream, ODataPayloadKindDetectionInfo detectionInfo);
}
internal class Microsoft.Data.OData.ODataMetadataInputContext : ODataInputContext {
    private XmlReader baseXmlReader;
    private BufferingXmlReader xmlReader;
    internal ODataMetadataInputContext(ODataFormat format, Stream messageStream, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver);
    internal virtual IEdmModel ReadMetadataDocument();
    protected virtual void DisposeImplementation();
    private IEdmModel ReadMetadataDocumentImplementation();
}
internal class Microsoft.Data.OData.ODataMetadataOutputContext : ODataOutputContext {
    private Stream messageOutputStream;
    private XmlWriter xmlWriter;
    internal ODataMetadataOutputContext(ODataFormat format, Stream messageStream, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver);
    internal void Flush();
    internal virtual void WriteInStreamError(ODataError error, bool includeDebugInformation);
    internal virtual void WriteMetadataDocument();
    protected virtual void Dispose(bool disposing);
}
[DebuggerDisplayAttribute("{Name}")]
public class Microsoft.Data.OData.ODataNavigationLink : ODataItem {
    private ODataEntityMetadataBuilder metadataBuilder;
    private Uri url;
    private bool hasNavigationLink;
    private Uri associationLinkUrl;
    private bool hasAssociationUrl;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public Nullable`1<bool> IsCollection { get; public set; }
    public string Name { get; public set; }
    public Uri Url { get; public set; }
    public Uri AssociationLinkUrl { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsCollection();
    [CompilerGeneratedAttribute]
public void set_IsCollection(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public Uri get_Url();
    public void set_Url(Uri value);
    public Uri get_AssociationLinkUrl();
    public void set_AssociationLinkUrl(Uri value);
    internal void SetMetadataBuilder(ODataEntityMetadataBuilder builder);
}
public class Microsoft.Data.OData.ODataNullValue : ODataValue {
    internal bool IsNullValue { get; }
    internal virtual bool get_IsNullValue();
}
[ExtensionAttribute]
public static class Microsoft.Data.OData.ODataObjectModelExtensions : object {
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataFeed feed, ODataFeedAndEntrySerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataEntry entry, ODataFeedAndEntrySerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataProperty property, ODataPropertySerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataCollectionStart collectionStart, ODataCollectionStartSerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataEntityReferenceLink entityReferenceLink, ODataEntityReferenceLinkSerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataEntityReferenceLinks entityReferenceLinks, ODataEntityReferenceLinksSerializationInfo serializationInfo);
}
public abstract class Microsoft.Data.OData.ODataOperation : ODataAnnotatable {
    private ODataEntityMetadataBuilder metadataBuilder;
    private string title;
    private bool hasNonComputedTitle;
    private string computedTitle;
    private Uri target;
    private bool hasNonComputedTarget;
    private Uri computedTarget;
    private string operationFullName;
    private string bindingParameterTypeName;
    [CompilerGeneratedAttribute]
private Uri <Metadata>k__BackingField;
    public Uri Metadata { get; public set; }
    public string Title { get; public set; }
    public Uri Target { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(Uri value);
    public string get_Title();
    public void set_Title(string value);
    public Uri get_Target();
    public void set_Target(Uri value);
    internal void SetMetadataBuilder(ODataEntityMetadataBuilder builder, Uri metadataDocumentUri);
    internal ODataEntityMetadataBuilder GetMetadataBuilder();
}
internal abstract class Microsoft.Data.OData.ODataOutputContext : object {
    private ODataFormat format;
    private ODataMessageWriterSettings messageWriterSettings;
    private bool writingResponse;
    private bool synchronous;
    private IEdmModel model;
    private IODataUrlResolver urlResolver;
    private EdmTypeResolver edmTypeResolver;
    internal ODataMessageWriterSettings MessageWriterSettings { get; }
    internal ODataVersion Version { get; }
    internal bool WritingResponse { get; }
    internal bool Synchronous { get; }
    internal IEdmModel Model { get; }
    internal IODataUrlResolver UrlResolver { get; }
    internal EdmTypeResolver EdmTypeResolver { get; }
    protected internal bool UseClientFormatBehavior { get; }
    protected internal bool UseServerFormatBehavior { get; }
    protected internal bool UseDefaultFormatBehavior { get; }
    protected internal bool UseServerApiBehavior { get; }
    protected ODataOutputContext(ODataFormat format, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver);
    internal ODataMessageWriterSettings get_MessageWriterSettings();
    internal ODataVersion get_Version();
    internal bool get_WritingResponse();
    internal bool get_Synchronous();
    internal IEdmModel get_Model();
    internal IODataUrlResolver get_UrlResolver();
    internal EdmTypeResolver get_EdmTypeResolver();
    protected internal bool get_UseClientFormatBehavior();
    protected internal bool get_UseServerFormatBehavior();
    protected internal bool get_UseDefaultFormatBehavior();
    protected internal bool get_UseServerApiBehavior();
    public sealed virtual void Dispose();
    internal virtual void WriteInStreamError(ODataError error, bool includeDebugInformation);
    internal virtual Task WriteInStreamErrorAsync(ODataError error, bool includeDebugInformation);
    internal virtual ODataWriter CreateODataFeedWriter(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual Task`1<ODataWriter> CreateODataFeedWriterAsync(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual ODataWriter CreateODataEntryWriter(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual Task`1<ODataWriter> CreateODataEntryWriterAsync(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual ODataCollectionWriter CreateODataCollectionWriter(IEdmTypeReference itemTypeReference);
    internal virtual Task`1<ODataCollectionWriter> CreateODataCollectionWriterAsync(IEdmTypeReference itemTypeReference);
    internal virtual ODataBatchWriter CreateODataBatchWriter(string batchBoundary);
    internal virtual Task`1<ODataBatchWriter> CreateODataBatchWriterAsync(string batchBoundary);
    internal virtual ODataParameterWriter CreateODataParameterWriter(IEdmFunctionImport functionImport);
    internal virtual Task`1<ODataParameterWriter> CreateODataParameterWriterAsync(IEdmFunctionImport functionImport);
    internal virtual void WriteServiceDocument(ODataWorkspace defaultWorkspace);
    internal virtual Task WriteServiceDocumentAsync(ODataWorkspace defaultWorkspace);
    internal virtual void WriteProperty(ODataProperty property);
    internal virtual Task WritePropertyAsync(ODataProperty property);
    internal virtual void WriteError(ODataError error, bool includeDebugInformation);
    internal virtual Task WriteErrorAsync(ODataError error, bool includeDebugInformation);
    internal virtual void WriteEntityReferenceLinks(ODataEntityReferenceLinks links, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual Task WriteEntityReferenceLinksAsync(ODataEntityReferenceLinks links, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual void WriteEntityReferenceLink(ODataEntityReferenceLink link, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink link, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual void WriteValue(object value);
    internal virtual Task WriteValueAsync(object value);
    internal virtual void WriteMetadataDocument();
    [ConditionalAttribute("DEBUG")]
internal void AssertSynchronous();
    [ConditionalAttribute("DEBUG")]
internal void AssertAsynchronous();
    protected virtual void Dispose(bool disposing);
    private ODataException CreatePayloadKindNotSupportedException(ODataPayloadKind payloadKind);
}
public abstract class Microsoft.Data.OData.ODataParameterReader : object {
    public ODataParameterReaderState State { get; }
    public string Name { get; }
    public object Value { get; }
    public abstract virtual ODataParameterReaderState get_State();
    public abstract virtual string get_Name();
    public abstract virtual object get_Value();
    public abstract virtual ODataCollectionReader CreateCollectionReader();
    public abstract virtual bool Read();
    public abstract virtual Task`1<bool> ReadAsync();
}
internal abstract class Microsoft.Data.OData.ODataParameterReaderCore : ODataParameterReader {
    private ODataInputContext inputContext;
    private IEdmFunctionImport functionImport;
    private Stack`1<Scope> scopes;
    private HashSet`1<string> parametersRead;
    private SubReaderState subReaderState;
    public ODataParameterReaderState State { get; }
    public string Name { get; }
    public object Value { get; }
    protected IEdmFunctionImport FunctionImport { get; }
    protected ODataParameterReaderCore(ODataInputContext inputContext, IEdmFunctionImport functionImport);
    public sealed virtual ODataParameterReaderState get_State();
    public virtual string get_Name();
    public virtual object get_Value();
    protected IEdmFunctionImport get_FunctionImport();
    public virtual ODataCollectionReader CreateCollectionReader();
    public sealed virtual bool Read();
    public sealed virtual Task`1<bool> ReadAsync();
    private sealed virtual override void Microsoft.Data.OData.IODataReaderWriterListener.OnException();
    private sealed virtual override void Microsoft.Data.OData.IODataReaderWriterListener.OnCompleted();
    protected internal IEdmTypeReference GetParameterTypeReference(string parameterName);
    protected internal void EnterScope(ODataParameterReaderState state, string name, object value);
    protected internal void PopScope(ODataParameterReaderState state);
    protected void OnParameterCompleted();
    protected bool ReadImplementation();
    protected abstract virtual bool ReadAtStartImplementation();
    protected abstract virtual bool ReadNextParameterImplementation();
    protected abstract virtual ODataCollectionReader CreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    protected bool ReadSynchronously();
    protected virtual Task`1<bool> ReadAsynchronously();
    private static string GetCreateReaderMethodName(ODataParameterReaderState state);
    private void VerifyCanCreateSubReader(ODataParameterReaderState expectedState);
    private T InterceptException(Func`1<T> action);
    private void VerifyCanRead(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
    private void VerifySynchronousCallAllowed();
    private void VerifyAsynchronousCallAllowed();
    [CompilerGeneratedAttribute]
private void <ReadAsync>b__0(Task`1<bool> t);
}
internal abstract class Microsoft.Data.OData.ODataParameterReaderCoreAsync : ODataParameterReaderCore {
    protected ODataParameterReaderCoreAsync(ODataInputContext inputContext, IEdmFunctionImport functionImport);
    protected abstract virtual Task`1<bool> ReadAtStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadNextParameterImplementationAsync();
    protected abstract virtual Task`1<ODataCollectionReader> CreateCollectionReaderAsync(IEdmTypeReference expectedItemTypeReference);
    protected virtual Task`1<bool> ReadAsynchronously();
}
public enum Microsoft.Data.OData.ODataParameterReaderState : Enum {
    public int value__;
    public static ODataParameterReaderState Start;
    public static ODataParameterReaderState Value;
    public static ODataParameterReaderState Collection;
    public static ODataParameterReaderState Exception;
    public static ODataParameterReaderState Completed;
}
public abstract class Microsoft.Data.OData.ODataParameterWriter : object {
    public abstract virtual void WriteStart();
    public abstract virtual Task WriteStartAsync();
    public abstract virtual void WriteValue(string parameterName, object parameterValue);
    public abstract virtual Task WriteValueAsync(string parameterName, object parameterValue);
    public abstract virtual ODataCollectionWriter CreateCollectionWriter(string parameterName);
    public abstract virtual Task`1<ODataCollectionWriter> CreateCollectionWriterAsync(string parameterName);
    public abstract virtual void WriteEnd();
    public abstract virtual Task WriteEndAsync();
    public abstract virtual void Flush();
    public abstract virtual Task FlushAsync();
}
internal abstract class Microsoft.Data.OData.ODataParameterWriterCore : ODataParameterWriter {
    private ODataOutputContext outputContext;
    private IEdmFunctionImport functionImport;
    private Stack`1<ParameterWriterState> scopes;
    private HashSet`1<string> parameterNamesWritten;
    private DuplicatePropertyNamesChecker duplicatePropertyNamesChecker;
    [CompilerGeneratedAttribute]
private static Func`2<IEdmFunctionParameter, string> CS$<>9__CachedAnonymousMethodDelegate1d;
    [CompilerGeneratedAttribute]
private static Func`2<string, string> CS$<>9__CachedAnonymousMethodDelegate1e;
    protected DuplicatePropertyNamesChecker DuplicatePropertyNamesChecker { get; }
    private ParameterWriterState State { get; }
    protected ODataParameterWriterCore(ODataOutputContext outputContext, IEdmFunctionImport functionImport);
    protected DuplicatePropertyNamesChecker get_DuplicatePropertyNamesChecker();
    private ParameterWriterState get_State();
    public sealed virtual void Flush();
    public sealed virtual Task FlushAsync();
    public sealed virtual void WriteStart();
    public sealed virtual Task WriteStartAsync();
    public sealed virtual void WriteValue(string parameterName, object parameterValue);
    public sealed virtual Task WriteValueAsync(string parameterName, object parameterValue);
    public sealed virtual ODataCollectionWriter CreateCollectionWriter(string parameterName);
    public sealed virtual Task`1<ODataCollectionWriter> CreateCollectionWriterAsync(string parameterName);
    public sealed virtual void WriteEnd();
    public sealed virtual Task WriteEndAsync();
    private sealed virtual override void Microsoft.Data.OData.IODataReaderWriterListener.OnException();
    private sealed virtual override void Microsoft.Data.OData.IODataReaderWriterListener.OnCompleted();
    private sealed virtual override void Microsoft.Data.OData.IODataOutputInStreamErrorListener.OnInStreamError();
    protected abstract virtual void VerifyNotDisposed();
    protected abstract virtual void FlushSynchronously();
    protected abstract virtual Task FlushAsynchronously();
    protected abstract virtual void StartPayload();
    protected abstract virtual void WriteValueParameter(string parameterName, object parameterValue, IEdmTypeReference expectedTypeReference);
    protected abstract virtual ODataCollectionWriter CreateFormatCollectionWriter(string parameterName, IEdmTypeReference expectedItemType);
    protected abstract virtual void EndPayload();
    private void VerifyCanWriteStart(bool synchronousCall);
    private void WriteStartImplementation();
    private IEdmTypeReference VerifyCanWriteParameterAndGetTypeReference(bool synchronousCall, string parameterName);
    private IEdmTypeReference VerifyCanWriteValueParameter(bool synchronousCall, string parameterName, object parameterValue);
    private IEdmTypeReference VerifyCanCreateCollectionWriter(bool synchronousCall, string parameterName);
    private IEdmTypeReference GetParameterTypeReference(string parameterName);
    private void WriteValueImplementation(string parameterName, object parameterValue, IEdmTypeReference expectedTypeReference);
    private ODataCollectionWriter CreateCollectionWriterImplementation(string parameterName, IEdmTypeReference expectedItemType);
    private void VerifyCanWriteEnd(bool synchronousCall);
    private void VerifyAllParametersWritten();
    private void WriteEndImplementation();
    private void VerifyNotInErrorOrCompletedState();
    private void VerifyCanFlush(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
    private void InterceptException(Action action);
    private T InterceptException(Func`1<T> function);
    private void EnterErrorScope();
    private void EnterScope(ParameterWriterState newState);
    private void LeaveScope();
    private void ReplaceScope(ParameterWriterState newState);
    private void ValidateTransition(ParameterWriterState newState);
    [CompilerGeneratedAttribute]
private void <FlushAsync>b__0(Task t);
    [CompilerGeneratedAttribute]
private void <WriteStart>b__1();
    [CompilerGeneratedAttribute]
private void <WriteStartAsync>b__2();
    [CompilerGeneratedAttribute]
private void <WriteStartAsync>b__3();
    [CompilerGeneratedAttribute]
private void <WriteEnd>b__12();
    [CompilerGeneratedAttribute]
private void <WriteEndAsync>b__13();
    [CompilerGeneratedAttribute]
private Task <WriteEndAsync>b__15(Task task);
    [CompilerGeneratedAttribute]
private void <WriteEndAsync>b__14();
    [CompilerGeneratedAttribute]
private bool <VerifyAllParametersWritten>b__19(IEdmFunctionParameter p);
    [CompilerGeneratedAttribute]
private static string <VerifyAllParametersWritten>b__1a(IEdmFunctionParameter p);
    [CompilerGeneratedAttribute]
private static string <VerifyAllParametersWritten>b__1b(string name);
    [CompilerGeneratedAttribute]
private void <WriteEndImplementation>b__1f();
}
public enum Microsoft.Data.OData.ODataPayloadKind : Enum {
    public int value__;
    public static ODataPayloadKind Feed;
    public static ODataPayloadKind Entry;
    public static ODataPayloadKind Property;
    public static ODataPayloadKind EntityReferenceLink;
    public static ODataPayloadKind EntityReferenceLinks;
    public static ODataPayloadKind Value;
    public static ODataPayloadKind BinaryValue;
    public static ODataPayloadKind Collection;
    public static ODataPayloadKind ServiceDocument;
    public static ODataPayloadKind MetadataDocument;
    public static ODataPayloadKind Error;
    public static ODataPayloadKind Batch;
    public static ODataPayloadKind Parameter;
    public static ODataPayloadKind Unsupported;
}
internal class Microsoft.Data.OData.ODataPayloadKindDetectionInfo : object {
    private MediaType contentType;
    private Encoding encoding;
    private ODataMessageReaderSettings messageReaderSettings;
    private IEdmModel model;
    private IEnumerable`1<ODataPayloadKind> possiblePayloadKinds;
    private object payloadKindDetectionFormatState;
    public ODataMessageReaderSettings MessageReaderSettings { get; }
    public IEdmModel Model { get; }
    public IEnumerable`1<ODataPayloadKind> PossiblePayloadKinds { get; }
    internal MediaType ContentType { get; }
    internal object PayloadKindDetectionFormatState { get; }
    internal ODataPayloadKindDetectionInfo(MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, IEdmModel model, IEnumerable`1<ODataPayloadKind> possiblePayloadKinds);
    public ODataMessageReaderSettings get_MessageReaderSettings();
    public IEdmModel get_Model();
    public IEnumerable`1<ODataPayloadKind> get_PossiblePayloadKinds();
    internal MediaType get_ContentType();
    internal object get_PayloadKindDetectionFormatState();
    public Encoding GetEncoding();
    public void SetPayloadKindDetectionFormatState(object state);
}
public class Microsoft.Data.OData.ODataPayloadKindDetectionResult : object {
    private ODataPayloadKind payloadKind;
    private ODataFormat format;
    public ODataPayloadKind PayloadKind { get; }
    public ODataFormat Format { get; }
    internal ODataPayloadKindDetectionResult(ODataPayloadKind payloadKind, ODataFormat format);
    public ODataPayloadKind get_PayloadKind();
    public ODataFormat get_Format();
}
public class Microsoft.Data.OData.ODataPreferenceHeader : object {
    private static string ReturnNoContentPreferenceToken;
    private static string ReturnContentPreferenceToken;
    private static string ODataAnnotationPreferenceToken;
    private static string PreferHeaderName;
    private static string PreferenceAppliedHeaderName;
    private static KeyValuePair`2[] EmptyParameters;
    private static HttpHeaderValueElement ReturnNoContentPreference;
    private static HttpHeaderValueElement ReturnContentPreference;
    private ODataMessage message;
    private string preferenceHeaderName;
    private HttpHeaderValue preferences;
    public Nullable`1<bool> ReturnContent { get; public set; }
    public string AnnotationFilter { get; public set; }
    private HttpHeaderValue Preferences { get; }
    internal ODataPreferenceHeader(IODataRequestMessage requestMessage);
    internal ODataPreferenceHeader(IODataResponseMessage responseMessage);
    private static ODataPreferenceHeader();
    public Nullable`1<bool> get_ReturnContent();
    public void set_ReturnContent(Nullable`1<bool> value);
    public string get_AnnotationFilter();
    public void set_AnnotationFilter(string value);
    private HttpHeaderValue get_Preferences();
    private static string AddQuotes(string text);
    private bool PreferenceExists(string preference);
    private void Clear(string preference);
    private void Set(HttpHeaderValueElement preference);
    private HttpHeaderValueElement Get(string preferenceName);
    private HttpHeaderValue ParsePreferences();
    private void SetPreferencesToMessageHeader();
}
public class Microsoft.Data.OData.ODataPrimitiveValue : ODataValue {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public object Value { get; private set; }
    public ODataPrimitiveValue(object value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(object value);
}
public class Microsoft.Data.OData.ODataProperty : ODataAnnotatable {
    private ODataAnnotatable odataOrUntypedValue;
    private ODataPropertySerializationInfo serializationInfo;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    public object Value { get; public set; }
    internal ODataValue ODataValue { get; }
    internal ODataPropertySerializationInfo SerializationInfo { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public object get_Value();
    public void set_Value(object value);
    internal ODataValue get_ODataValue();
    internal ODataPropertySerializationInfo get_SerializationInfo();
    internal void set_SerializationInfo(ODataPropertySerializationInfo value);
}
public enum Microsoft.Data.OData.ODataPropertyKind : Enum {
    public int value__;
    public static ODataPropertyKind Unspecified;
    public static ODataPropertyKind Key;
    public static ODataPropertyKind ETag;
    public static ODataPropertyKind Open;
}
public class Microsoft.Data.OData.ODataPropertySerializationInfo : object {
    [CompilerGeneratedAttribute]
private ODataPropertyKind <PropertyKind>k__BackingField;
    public ODataPropertyKind PropertyKind { get; public set; }
    [CompilerGeneratedAttribute]
public ODataPropertyKind get_PropertyKind();
    [CompilerGeneratedAttribute]
public void set_PropertyKind(ODataPropertyKind value);
}
internal class Microsoft.Data.OData.ODataRawInputContext : ODataInputContext {
    private static int BufferSize;
    private ODataPayloadKind readerPayloadKind;
    private Encoding encoding;
    private Stream stream;
    private TextReader textReader;
    internal Stream Stream { get; }
    internal ODataRawInputContext(ODataFormat format, Stream messageStream, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver, ODataPayloadKind readerPayloadKind);
    internal Stream get_Stream();
    internal virtual ODataBatchReader CreateBatchReader(string batchBoundary);
    internal virtual Task`1<ODataBatchReader> CreateBatchReaderAsync(string batchBoundary);
    internal virtual object ReadValue(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    internal virtual Task`1<object> ReadValueAsync(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    protected virtual void DisposeImplementation();
    private ODataBatchReader CreateBatchReaderImplementation(string batchBoundary, bool synchronous);
    private object ReadValueImplementation(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    private Byte[] ReadBinaryValue();
    private object ReadRawValue(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
}
internal class Microsoft.Data.OData.ODataRawOutputContext : ODataOutputContext {
    private Encoding encoding;
    private Stream messageOutputStream;
    private AsyncBufferedStream asynchronousOutputStream;
    private Stream outputStream;
    private IODataOutputInStreamErrorListener outputInStreamErrorListener;
    private RawValueWriter rawValueWriter;
    internal Stream OutputStream { get; }
    internal TextWriter TextWriter { get; }
    internal ODataRawOutputContext(ODataFormat format, Stream messageStream, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver);
    internal Stream get_OutputStream();
    internal TextWriter get_TextWriter();
    internal void Flush();
    internal Task FlushAsync();
    internal virtual void WriteInStreamError(ODataError error, bool includeDebugInformation);
    internal virtual Task WriteInStreamErrorAsync(ODataError error, bool includeDebugInformation);
    internal virtual ODataBatchWriter CreateODataBatchWriter(string batchBoundary);
    internal virtual Task`1<ODataBatchWriter> CreateODataBatchWriterAsync(string batchBoundary);
    internal virtual void WriteValue(object value);
    internal virtual Task WriteValueAsync(object value);
    internal void InitializeRawValueWriter();
    internal void CloseWriter();
    internal void VerifyNotDisposed();
    internal void FlushBuffers();
    internal Task FlushBuffersAsync();
    protected virtual void Dispose(bool disposing);
    private void WriteValueImplementation(object value);
    private ODataBatchWriter CreateODataBatchWriterImplementation(string batchBoundary);
    [CompilerGeneratedAttribute]
private Task <FlushAsync>b__0();
    [CompilerGeneratedAttribute]
private Task <FlushAsync>b__1(Task asyncBufferedStreamFlushTask);
}
internal class Microsoft.Data.OData.ODataRawValueFormat : ODataFormat {
    public virtual string ToString();
    internal virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataResponseMessage responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataRequestMessage requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual ODataInputContext CreateInputContext(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal virtual ODataOutputContext CreateOutputContext(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    internal virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataResponseMessageAsync responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataRequestMessageAsync requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual Task`1<ODataInputContext> CreateInputContextAsync(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal virtual Task`1<ODataOutputContext> CreateOutputContextAsync(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    private static IEnumerable`1<ODataPayloadKind> DetectPayloadKindImplementation(MediaType contentType);
}
public abstract class Microsoft.Data.OData.ODataReader : object {
    public ODataReaderState State { get; }
    public ODataItem Item { get; }
    public abstract virtual ODataReaderState get_State();
    public abstract virtual ODataItem get_Item();
    public abstract virtual bool Read();
    public abstract virtual Task`1<bool> ReadAsync();
}
internal class Microsoft.Data.OData.ODataReaderBehavior : object {
    private static ODataReaderBehavior defaultReaderBehavior;
    private ODataBehaviorKind apiBehaviorKind;
    private Func`3<IEdmType, string, IEdmType> typeResolver;
    private bool allowDuplicatePropertyNames;
    private bool usesV1Provider;
    private string typeScheme;
    private string odataNamespace;
    private ODataBehaviorKind formatBehaviorKind;
    private Func`2<IEdmEntityType, bool> operationsBoundToEntityTypeMustBeContainerQualified;
    internal static ODataReaderBehavior DefaultBehavior { get; }
    internal string ODataTypeScheme { get; }
    internal string ODataNamespace { get; }
    internal bool AllowDuplicatePropertyNames { get; }
    internal bool UseV1ProviderBehavior { get; }
    internal Func`3<IEdmType, string, IEdmType> TypeResolver { get; }
    internal ODataBehaviorKind FormatBehaviorKind { get; }
    internal ODataBehaviorKind ApiBehaviorKind { get; }
    internal Func`2<IEdmEntityType, bool> OperationsBoundToEntityTypeMustBeContainerQualified { get; internal set; }
    private ODataReaderBehavior(ODataBehaviorKind formatBehaviorKind, ODataBehaviorKind apiBehaviorKind, bool allowDuplicatePropertyNames, bool usesV1Provider, Func`3<IEdmType, string, IEdmType> typeResolver, string odataNamespace, string typeScheme);
    private static ODataReaderBehavior();
    internal static ODataReaderBehavior get_DefaultBehavior();
    internal string get_ODataTypeScheme();
    internal string get_ODataNamespace();
    internal bool get_AllowDuplicatePropertyNames();
    internal bool get_UseV1ProviderBehavior();
    internal Func`3<IEdmType, string, IEdmType> get_TypeResolver();
    internal ODataBehaviorKind get_FormatBehaviorKind();
    internal ODataBehaviorKind get_ApiBehaviorKind();
    internal Func`2<IEdmEntityType, bool> get_OperationsBoundToEntityTypeMustBeContainerQualified();
    internal void set_OperationsBoundToEntityTypeMustBeContainerQualified(Func`2<IEdmEntityType, bool> value);
    internal static ODataReaderBehavior CreateWcfDataServicesClientBehavior(Func`3<IEdmType, string, IEdmType> typeResolver, string odataNamespace, string typeScheme);
    internal static ODataReaderBehavior CreateWcfDataServicesServerBehavior(bool usesV1Provider);
    internal void ResetFormatBehavior();
}
internal abstract class Microsoft.Data.OData.ODataReaderCore : ODataReader {
    private ODataInputContext inputContext;
    private bool readingFeed;
    private Stack`1<Scope> scopes;
    private IODataReaderWriterListener listener;
    private FeedWithoutExpectedTypeValidator feedValidator;
    private int currentEntryDepth;
    [CompilerGeneratedAttribute]
private static Func`1<EdmTypeKind> CS$<>9__CachedAnonymousMethodDelegate2;
    public ODataReaderState State { get; }
    public ODataItem Item { get; }
    protected ODataEntry CurrentEntry { get; }
    protected ODataFeed CurrentFeed { get; }
    protected ODataNavigationLink CurrentNavigationLink { get; }
    protected ODataEntityReferenceLink CurrentEntityReferenceLink { get; }
    protected IEdmEntityType CurrentEntityType { get; protected set; }
    protected IEdmEntitySet CurrentEntitySet { get; }
    protected Scope CurrentScope { get; }
    protected Scope LinkParentEntityScope { get; }
    protected bool IsTopLevel { get; }
    protected Scope ExpandedLinkContentParentScope { get; }
    protected bool IsExpandedLinkContent { get; }
    protected bool ReadingFeed { get; }
    protected bool IsReadingNestedPayload { get; }
    protected FeedWithoutExpectedTypeValidator CurrentFeedValidator { get; }
    protected ODataReaderCore(ODataInputContext inputContext, bool readingFeed, IODataReaderWriterListener listener);
    public sealed virtual ODataReaderState get_State();
    public sealed virtual ODataItem get_Item();
    protected ODataEntry get_CurrentEntry();
    protected ODataFeed get_CurrentFeed();
    protected ODataNavigationLink get_CurrentNavigationLink();
    protected ODataEntityReferenceLink get_CurrentEntityReferenceLink();
    protected IEdmEntityType get_CurrentEntityType();
    protected void set_CurrentEntityType(IEdmEntityType value);
    protected IEdmEntitySet get_CurrentEntitySet();
    protected Scope get_CurrentScope();
    protected Scope get_LinkParentEntityScope();
    protected bool get_IsTopLevel();
    protected Scope get_ExpandedLinkContentParentScope();
    protected bool get_IsExpandedLinkContent();
    protected bool get_ReadingFeed();
    protected bool get_IsReadingNestedPayload();
    protected FeedWithoutExpectedTypeValidator get_CurrentFeedValidator();
    public sealed virtual bool Read();
    public sealed virtual Task`1<bool> ReadAsync();
    protected abstract virtual bool ReadAtStartImplementation();
    protected abstract virtual bool ReadAtFeedStartImplementation();
    protected abstract virtual bool ReadAtFeedEndImplementation();
    protected abstract virtual bool ReadAtEntryStartImplementation();
    protected abstract virtual bool ReadAtEntryEndImplementation();
    protected abstract virtual bool ReadAtNavigationLinkStartImplementation();
    protected abstract virtual bool ReadAtNavigationLinkEndImplementation();
    protected abstract virtual bool ReadAtEntityReferenceLink();
    protected void EnterScope(Scope scope);
    protected void ReplaceScope(Scope scope);
    protected void PopScope(ODataReaderState state);
    protected void EndEntry(Scope scope);
    protected void ApplyEntityTypeNameFromPayload(string entityTypeNameFromPayload);
    protected bool ReadSynchronously();
    protected virtual Task`1<bool> ReadAsynchronously();
    protected void IncreaseEntryDepth();
    protected void DecreaseEntryDepth();
    private bool ReadImplementation();
    private T InterceptException(Func`1<T> action);
    private void VerifyCanRead(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
    [CompilerGeneratedAttribute]
private void <ReadAsync>b__0(Task`1<bool> t);
    [CompilerGeneratedAttribute]
private static EdmTypeKind <ApplyEntityTypeNameFromPayload>b__1();
}
internal abstract class Microsoft.Data.OData.ODataReaderCoreAsync : ODataReaderCore {
    protected ODataReaderCoreAsync(ODataInputContext inputContext, bool readingFeed, IODataReaderWriterListener listener);
    protected abstract virtual Task`1<bool> ReadAtStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtFeedStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtFeedEndImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtEntryStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtEntryEndImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtNavigationLinkStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtNavigationLinkEndImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtEntityReferenceLinkAsync();
    protected virtual Task`1<bool> ReadAsynchronously();
    [CompilerGeneratedAttribute]
private void <ReadAsynchronously>b__3();
    [CompilerGeneratedAttribute]
private Task`1<bool> <ReadAsynchronously>b__4(Task t);
    [CompilerGeneratedAttribute]
private void <ReadAsynchronously>b__5();
    [CompilerGeneratedAttribute]
private Task`1<bool> <ReadAsynchronously>b__6(Task t);
    [CompilerGeneratedAttribute]
private bool <ReadAsynchronously>b__7(Task`1<bool> t);
}
public enum Microsoft.Data.OData.ODataReaderState : Enum {
    public int value__;
    public static ODataReaderState Start;
    public static ODataReaderState FeedStart;
    public static ODataReaderState FeedEnd;
    public static ODataReaderState EntryStart;
    public static ODataReaderState EntryEnd;
    public static ODataReaderState NavigationLinkStart;
    public static ODataReaderState NavigationLinkEnd;
    public static ODataReaderState EntityReferenceLink;
    public static ODataReaderState Exception;
    public static ODataReaderState Completed;
}
internal class Microsoft.Data.OData.ODataRequestMessage : ODataMessage {
    private IODataRequestMessage requestMessage;
    public Uri Url { get; public set; }
    public string Method { get; public set; }
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    internal ODataRequestMessage(IODataRequestMessage requestMessage, bool writing, bool disableMessageStreamDisposal, long maxMessageSize);
    public sealed virtual Uri get_Url();
    public sealed virtual void set_Url(Uri value);
    public sealed virtual string get_Method();
    public sealed virtual void set_Method(string value);
    public virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public virtual string GetHeader(string headerName);
    public virtual void SetHeader(string headerName, string headerValue);
    public virtual Stream GetStream();
    public virtual Task`1<Stream> GetStreamAsync();
    internal virtual TInterface QueryInterface();
}
public class Microsoft.Data.OData.ODataResourceCollectionInfo : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private Uri <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public Uri Url { get; public set; }
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(Uri value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
internal class Microsoft.Data.OData.ODataResponseMessage : ODataMessage {
    private IODataResponseMessage responseMessage;
    public int StatusCode { get; public set; }
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    internal ODataResponseMessage(IODataResponseMessage responseMessage, bool writing, bool disableMessageStreamDisposal, long maxMessageSize);
    public sealed virtual int get_StatusCode();
    public sealed virtual void set_StatusCode(int value);
    public virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public virtual string GetHeader(string headerName);
    public virtual void SetHeader(string headerName, string headerValue);
    public virtual Stream GetStream();
    public virtual Task`1<Stream> GetStreamAsync();
    internal virtual TInterface QueryInterface();
}
internal abstract class Microsoft.Data.OData.ODataSerializer : object {
    private ODataOutputContext outputContext;
    internal bool UseClientFormatBehavior { get; }
    internal bool UseServerFormatBehavior { get; }
    internal bool UseDefaultFormatBehavior { get; }
    internal ODataMessageWriterSettings MessageWriterSettings { get; }
    internal IODataUrlResolver UrlResolver { get; }
    internal ODataVersion Version { get; }
    internal bool WritingResponse { get; }
    internal IEdmModel Model { get; }
    protected ODataSerializer(ODataOutputContext outputContext);
    internal bool get_UseClientFormatBehavior();
    internal bool get_UseServerFormatBehavior();
    internal bool get_UseDefaultFormatBehavior();
    internal ODataMessageWriterSettings get_MessageWriterSettings();
    internal IODataUrlResolver get_UrlResolver();
    internal ODataVersion get_Version();
    internal bool get_WritingResponse();
    internal IEdmModel get_Model();
    internal DuplicatePropertyNamesChecker CreateDuplicatePropertyNamesChecker();
    protected void ValidateAssociationLink(ODataAssociationLink associationLink, IEdmEntityType entryEntityType);
}
public class Microsoft.Data.OData.ODataStreamReferenceValue : ODataValue {
    private ODataEntityMetadataBuilder metadataBuilder;
    private string edmPropertyName;
    private Uri editLink;
    private Uri computedEditLink;
    private bool hasNonComputedEditLink;
    private Uri readLink;
    private Uri computedReadLink;
    private bool hasNonComputedReadLink;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    public Uri EditLink { get; public set; }
    public Uri ReadLink { get; public set; }
    public string ContentType { get; public set; }
    public string ETag { get; public set; }
    public Uri get_EditLink();
    public void set_EditLink(Uri value);
    public Uri get_ReadLink();
    public void set_ReadLink(Uri value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public string get_ETag();
    [CompilerGeneratedAttribute]
public void set_ETag(string value);
    internal void SetMetadataBuilder(ODataEntityMetadataBuilder builder, string propertyName);
    internal ODataEntityMetadataBuilder GetMetadataBuilder();
}
internal class Microsoft.Data.OData.ODataTypeAnnotation : object {
    private IEdmTypeReference type;
    private IEdmEntitySet entitySet;
    public IEdmTypeReference Type { get; }
    public IEdmEntitySet EntitySet { get; }
    public ODataTypeAnnotation(IEdmEntitySet entitySet, IEdmEntityType entityType);
    public ODataTypeAnnotation(IEdmComplexTypeReference complexType);
    public ODataTypeAnnotation(IEdmCollectionTypeReference collectionType);
    public IEdmTypeReference get_Type();
    public IEdmEntitySet get_EntitySet();
}
[FlagsAttribute]
public enum Microsoft.Data.OData.ODataUndeclaredPropertyBehaviorKinds : Enum {
    public int value__;
    public static ODataUndeclaredPropertyBehaviorKinds None;
    public static ODataUndeclaredPropertyBehaviorKinds IgnoreUndeclaredValueProperty;
    public static ODataUndeclaredPropertyBehaviorKinds ReportUndeclaredLinkProperty;
    public static ODataUndeclaredPropertyBehaviorKinds SupportUndeclaredValueProperty;
}
public class Microsoft.Data.OData.ODataUntypedValue : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private string <RawJson>k__BackingField;
    public string RawJson { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RawJson();
    [CompilerGeneratedAttribute]
public void set_RawJson(string value);
}
[ExtensionAttribute]
public static class Microsoft.Data.OData.ODataUtils : object {
    private static string Version1NumberString;
    private static string Version2NumberString;
    private static string Version3NumberString;
    public static ODataFormat SetHeadersForPayload(ODataMessageWriter messageWriter, ODataPayloadKind payloadKind);
    public static ODataFormat GetReadFormat(ODataMessageReader messageReader);
    [ExtensionAttribute]
public static void LoadODataAnnotations(IEdmModel model);
    [ExtensionAttribute]
public static void LoadODataAnnotations(IEdmModel model, int maxEntityPropertyMappingsPerType);
    [ExtensionAttribute]
public static void LoadODataAnnotations(IEdmModel model, IEdmEntityType entityType);
    [ExtensionAttribute]
public static void LoadODataAnnotations(IEdmModel model, IEdmEntityType entityType, int maxEntityPropertyMappingsPerType);
    [ExtensionAttribute]
public static void SaveODataAnnotations(IEdmModel model);
    [ExtensionAttribute]
public static void SaveODataAnnotations(IEdmModel model, IEdmEntityType entityType);
    [ExtensionAttribute]
public static bool HasDefaultStream(IEdmModel model, IEdmEntityType entityType);
    [ExtensionAttribute]
public static void SetHasDefaultStream(IEdmModel model, IEdmEntityType entityType, bool hasStream);
    [ExtensionAttribute]
public static bool IsDefaultEntityContainer(IEdmModel model, IEdmEntityContainer entityContainer);
    [ExtensionAttribute]
public static void SetIsDefaultEntityContainer(IEdmModel model, IEdmEntityContainer entityContainer, bool isDefaultContainer);
    [ExtensionAttribute]
public static string GetMimeType(IEdmModel model, IEdmElement annotatable);
    [ExtensionAttribute]
public static void SetMimeType(IEdmModel model, IEdmElement annotatable, string mimeType);
    [ExtensionAttribute]
public static string GetHttpMethod(IEdmModel model, IEdmElement annotatable);
    [ExtensionAttribute]
public static void SetHttpMethod(IEdmModel model, IEdmElement annotatable, string httpMethod);
    [ExtensionAttribute]
public static bool IsAlwaysBindable(IEdmModel model, IEdmFunctionImport functionImport);
    [ExtensionAttribute]
public static void SetIsAlwaysBindable(IEdmModel model, IEdmFunctionImport functionImport, bool isAlwaysBindable);
    [ExtensionAttribute]
public static ODataNullValueBehaviorKind NullValueReadBehaviorKind(IEdmModel model, IEdmProperty property);
    [ExtensionAttribute]
public static void SetNullValueReaderBehavior(IEdmModel model, IEdmProperty property, ODataNullValueBehaviorKind nullValueReadBehaviorKind);
    public static string ODataVersionToString(ODataVersion version);
    public static ODataVersion StringToODataVersion(string version);
    public static Func`2<string, bool> CreateAnnotationFilter(string annotationFilter);
    private static void SaveODataAnnotationsImplementation(IEdmModel model, IEdmEntityType entityType);
    private static bool TryGetBooleanAnnotation(IEdmModel model, IEdmStructuredType structuredType, string annotationLocalName, bool recursive, Boolean& boolValue);
    private static bool TryGetBooleanAnnotation(IEdmModel model, IEdmElement annotatable, string annotationLocalName, Boolean& boolValue);
    private static void SetBooleanAnnotation(IEdmModel model, IEdmElement annotatable, string annotationLocalName, bool boolValue);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.ODataUtilsInternal : object {
    [ExtensionAttribute]
internal static Version ToDataServiceVersion(ODataVersion version);
    internal static void SetDataServiceVersion(ODataMessage message, ODataMessageWriterSettings settings);
    internal static ODataVersion GetDataServiceVersion(ODataMessage message, ODataVersion defaultVersion);
    internal static bool IsPayloadKindSupported(ODataPayloadKind payloadKind, bool inRequest);
    internal static IEnumerable`1<T> ConcatEnumerables(IEnumerable`1<T> enumerable1, IEnumerable`1<T> enumerable2);
    [ExtensionAttribute]
internal static SelectedPropertiesNode SelectedProperties(ODataMetadataDocumentUri metadataDocumentUri);
}
public abstract class Microsoft.Data.OData.ODataValue : ODataAnnotatable {
    internal bool IsNullValue { get; }
    internal virtual bool get_IsNullValue();
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.ODataValueUtils : object {
    [ExtensionAttribute]
internal static ODataValue ToODataValue(object objectToConvert);
    [ExtensionAttribute]
internal static object FromODataValue(ODataValue odataValue);
}
public enum Microsoft.Data.OData.ODataVersion : Enum {
    public int value__;
    public static ODataVersion V1;
    public static ODataVersion V2;
    public static ODataVersion V3;
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.Data.OData.ODataVersionCache`1 : object {
    private SimpleLazy`1<T> v1;
    private SimpleLazy`1<T> v2;
    private SimpleLazy`1<T> v3;
    internal T Item { get; }
    internal ODataVersionCache`1(Func`2<ODataVersion, T> factory);
    internal T get_Item(ODataVersion version);
}
internal static class Microsoft.Data.OData.ODataVersionChecker : object {
    internal static void CheckCount(ODataVersion version);
    internal static void CheckCollectionValueProperties(ODataVersion version, string propertyName);
    internal static void CheckCollectionValue(ODataVersion version);
    internal static void CheckNextLink(ODataVersion version);
    internal static void CheckDeltaLink(ODataVersion version);
    internal static void CheckStreamReferenceProperty(ODataVersion version);
    internal static void CheckAssociationLinks(ODataVersion version);
    internal static void CheckCustomTypeScheme(ODataVersion version);
    internal static void CheckCustomDataNamespace(ODataVersion version);
    internal static void CheckParameterPayload(ODataVersion version);
    internal static void CheckEntityPropertyMapping(ODataVersion version, IEdmEntityType entityType, IEdmModel model);
    internal static void CheckSpatialValue(ODataVersion version);
    internal static void CheckVersionSupported(ODataVersion version, ODataMessageReaderSettings messageReaderSettings);
}
public class Microsoft.Data.OData.ODataWorkspace : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataResourceCollectionInfo> <Collections>k__BackingField;
    public IEnumerable`1<ODataResourceCollectionInfo> Collections { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<ODataResourceCollectionInfo> get_Collections();
    [CompilerGeneratedAttribute]
public void set_Collections(IEnumerable`1<ODataResourceCollectionInfo> value);
}
public abstract class Microsoft.Data.OData.ODataWriter : object {
    public abstract virtual void WriteStart(ODataFeed feed);
    public abstract virtual Task WriteStartAsync(ODataFeed feed);
    public abstract virtual void WriteStart(ODataEntry entry);
    public abstract virtual Task WriteStartAsync(ODataEntry entry);
    public abstract virtual void WriteStart(ODataNavigationLink navigationLink);
    public abstract virtual Task WriteStartAsync(ODataNavigationLink navigationLink);
    public abstract virtual void WriteEnd();
    public abstract virtual Task WriteEndAsync();
    public abstract virtual void WriteEntityReferenceLink(ODataEntityReferenceLink entityReferenceLink);
    public abstract virtual Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink entityReferenceLink);
    public abstract virtual void Flush();
    public abstract virtual Task FlushAsync();
}
internal class Microsoft.Data.OData.ODataWriterBehavior : object {
    private static ODataWriterBehavior defaultWriterBehavior;
    private ODataBehaviorKind apiBehaviorKind;
    private bool usesV1Provider;
    private bool allowNullValuesForNonNullablePrimitiveTypes;
    private bool allowDuplicatePropertyNames;
    private string typeScheme;
    private string odataNamespace;
    private ODataBehaviorKind formatBehaviorKind;
    internal static ODataWriterBehavior DefaultBehavior { get; }
    internal string ODataTypeScheme { get; }
    internal string ODataNamespace { get; }
    internal bool UseV1ProviderBehavior { get; }
    internal bool AllowNullValuesForNonNullablePrimitiveTypes { get; }
    internal bool AllowDuplicatePropertyNames { get; }
    internal ODataBehaviorKind FormatBehaviorKind { get; }
    internal ODataBehaviorKind ApiBehaviorKind { get; }
    private ODataWriterBehavior(ODataBehaviorKind formatBehaviorKind, ODataBehaviorKind apiBehaviorKind, bool usesV1Provider, bool allowNullValuesForNonNullablePrimitiveTypes, bool allowDuplicatePropertyNames, string odataNamespace, string typeScheme);
    private static ODataWriterBehavior();
    internal static ODataWriterBehavior get_DefaultBehavior();
    internal string get_ODataTypeScheme();
    internal string get_ODataNamespace();
    internal bool get_UseV1ProviderBehavior();
    internal bool get_AllowNullValuesForNonNullablePrimitiveTypes();
    internal bool get_AllowDuplicatePropertyNames();
    internal ODataBehaviorKind get_FormatBehaviorKind();
    internal ODataBehaviorKind get_ApiBehaviorKind();
    internal static ODataWriterBehavior CreateWcfDataServicesClientBehavior(string odataNamespace, string typeScheme);
    internal static ODataWriterBehavior CreateWcfDataServicesServerBehavior(bool usesV1Provider);
    internal void UseDefaultFormatBehavior();
}
internal abstract class Microsoft.Data.OData.ODataWriterCore : ODataWriter {
    private ODataOutputContext outputContext;
    private bool writingFeed;
    private ScopeStack scopes;
    private FeedWithoutExpectedTypeValidator feedValidator;
    private int currentEntryDepth;
    protected Scope CurrentScope { get; }
    protected WriterState State { get; }
    protected bool SkipWriting { get; }
    protected bool IsTopLevel { get; }
    protected ODataNavigationLink ParentNavigationLink { get; }
    protected IEdmEntityType ParentEntryEntityType { get; }
    protected IEdmEntitySet ParentEntryEntitySet { get; }
    protected int FeedScopeEntryCount { get; }
    protected DuplicatePropertyNamesChecker DuplicatePropertyNamesChecker { get; }
    protected IEdmEntityType EntryEntityType { get; }
    protected NavigationLinkScope ParentNavigationLinkScope { get; }
    private FeedWithoutExpectedTypeValidator CurrentFeedValidator { get; }
    protected ODataWriterCore(ODataOutputContext outputContext, IEdmEntitySet entitySet, IEdmEntityType entityType, bool writingFeed);
    protected Scope get_CurrentScope();
    protected WriterState get_State();
    protected bool get_SkipWriting();
    protected bool get_IsTopLevel();
    protected ODataNavigationLink get_ParentNavigationLink();
    protected IEdmEntityType get_ParentEntryEntityType();
    protected IEdmEntitySet get_ParentEntryEntitySet();
    protected int get_FeedScopeEntryCount();
    protected DuplicatePropertyNamesChecker get_DuplicatePropertyNamesChecker();
    protected IEdmEntityType get_EntryEntityType();
    protected NavigationLinkScope get_ParentNavigationLinkScope();
    private FeedWithoutExpectedTypeValidator get_CurrentFeedValidator();
    public sealed virtual void Flush();
    public sealed virtual Task FlushAsync();
    public sealed virtual void WriteStart(ODataFeed feed);
    public sealed virtual Task WriteStartAsync(ODataFeed feed);
    public sealed virtual void WriteStart(ODataEntry entry);
    public sealed virtual Task WriteStartAsync(ODataEntry entry);
    public sealed virtual void WriteStart(ODataNavigationLink navigationLink);
    public sealed virtual Task WriteStartAsync(ODataNavigationLink navigationLink);
    public sealed virtual void WriteEnd();
    public sealed virtual Task WriteEndAsync();
    public sealed virtual void WriteEntityReferenceLink(ODataEntityReferenceLink entityReferenceLink);
    public sealed virtual Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink entityReferenceLink);
    private sealed virtual override void Microsoft.Data.OData.IODataOutputInStreamErrorListener.OnInStreamError();
    protected static bool IsErrorState(WriterState state);
    protected static ProjectedPropertiesAnnotation GetProjectedPropertiesAnnotation(Scope currentScope);
    protected abstract virtual void VerifyNotDisposed();
    protected abstract virtual void FlushSynchronously();
    protected abstract virtual Task FlushAsynchronously();
    protected abstract virtual void StartPayload();
    protected abstract virtual void StartEntry(ODataEntry entry);
    protected abstract virtual void EndEntry(ODataEntry entry);
    protected abstract virtual void StartFeed(ODataFeed feed);
    protected abstract virtual void EndPayload();
    protected abstract virtual void EndFeed(ODataFeed feed);
    protected abstract virtual void WriteDeferredNavigationLink(ODataNavigationLink navigationLink);
    protected abstract virtual void StartNavigationLinkWithContent(ODataNavigationLink navigationLink);
    protected abstract virtual void EndNavigationLinkWithContent(ODataNavigationLink navigationLink);
    protected abstract virtual void WriteEntityReferenceInNavigationLinkContent(ODataNavigationLink parentNavigationLink, ODataEntityReferenceLink entityReferenceLink);
    protected abstract virtual FeedScope CreateFeedScope(ODataFeed feed, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties);
    protected abstract virtual EntryScope CreateEntryScope(ODataEntry entry, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties);
    protected ODataFeedAndEntrySerializationInfo GetEntrySerializationInfo(ODataEntry entry);
    protected virtual NavigationLinkScope CreateNavigationLinkScope(WriterState writerState, ODataNavigationLink navLink, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties);
    protected virtual void PrepareEntryForWriteStart(ODataEntry entry, ODataFeedAndEntryTypeContext typeContext, SelectedPropertiesNode selectedProperties);
    protected virtual void ValidateEntryMediaResource(ODataEntry entry, IEdmEntityType entityType);
    protected IEdmEntityType ValidateEntryType(ODataEntry entry);
    protected void ValidateNoDeltaLinkForExpandedFeed(ODataFeed feed);
    private void VerifyCanWriteStartFeed(bool synchronousCall, ODataFeed feed);
    private void WriteStartFeedImplementation(ODataFeed feed);
    private void VerifyCanWriteStartEntry(bool synchronousCall, ODataEntry entry);
    private void WriteStartEntryImplementation(ODataEntry entry);
    private void VerifyCanWriteStartNavigationLink(bool synchronousCall, ODataNavigationLink navigationLink);
    private void WriteStartNavigationLinkImplementation(ODataNavigationLink navigationLink);
    private void VerifyCanWriteEnd(bool synchronousCall);
    private void WriteEndImplementation();
    private void MarkNavigationLinkAsProcessed(ODataNavigationLink link);
    private void VerifyCanWriteEntityReferenceLink(ODataEntityReferenceLink entityReferenceLink, bool synchronousCall);
    private void WriteEntityReferenceLinkImplementation(ODataEntityReferenceLink entityReferenceLink);
    private void VerifyCanFlush(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
    private void ThrowODataException(string errorMessage, ODataItem item);
    private void StartPayloadInStartState();
    private void CheckForNavigationLinkWithContent(ODataPayloadKind contentPayloadKind);
    private void InterceptException(Action action);
    private void IncreaseEntryDepth();
    private void DecreaseEntryDepth();
    private void EnterScope(WriterState newState, ODataItem item);
    private void LeaveScope();
    private void PromoteNavigationLinkScope();
    private void ValidateTransition(WriterState newState);
    private void PushScope(WriterState state, ODataItem item, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties);
    [CompilerGeneratedAttribute]
private void <FlushAsync>b__0(Task t);
    [CompilerGeneratedAttribute]
private Task <WriteEndAsync>b__a(Task task);
    [CompilerGeneratedAttribute]
private void <WriteEndImplementation>b__16();
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.PlatformHelper : object {
    internal static Type[] EmptyTypes;
    internal static string UriSchemeHttp;
    internal static string UriSchemeHttps;
    private static PlatformHelper();
    [ExtensionAttribute]
internal static Assembly GetAssembly(Type type);
    [ExtensionAttribute]
internal static bool IsValueType(Type type);
    [ExtensionAttribute]
internal static bool IsGenericParameter(Type type);
    [ExtensionAttribute]
internal static bool IsAbstract(Type type);
    [ExtensionAttribute]
internal static bool IsGenericType(Type type);
    [ExtensionAttribute]
internal static bool IsGenericTypeDefinition(Type type);
    [ExtensionAttribute]
internal static bool IsVisible(Type type);
    [ExtensionAttribute]
internal static bool IsInterface(Type type);
    [ExtensionAttribute]
internal static bool IsClass(Type type);
    [ExtensionAttribute]
internal static bool IsEnum(Type type);
    [ExtensionAttribute]
internal static Type GetBaseType(Type type);
    [ExtensionAttribute]
internal static bool ContainsGenericParameters(Type type);
    [ExtensionAttribute]
internal static ReadOnlyCollection`1<T> AsReadOnly(T[] array);
    internal static DateTime ConvertStringToDateTime(string text);
    internal static DateTimeOffset ConvertStringToDateTimeOffset(string text);
    internal static string AddSecondsPaddingIfMissing(string text);
    internal static string ConvertDateTimeToStringInternal(DateTime dateTime);
    internal static string ConvertDateTimeToString(DateTime dateTime);
    internal static Type GetTypeOrThrow(string typeName);
    internal static TypeCode GetTypeCode(Type type);
    internal static UnicodeCategory GetUnicodeCategory(char c);
    internal static bool IsProperty(MemberInfo member);
    [ExtensionAttribute]
internal static bool IsPrimitive(Type type);
    [ExtensionAttribute]
internal static bool IsSealed(Type type);
    internal static bool IsMethod(MemberInfo member);
    internal static bool AreMembersEqual(MemberInfo member1, MemberInfo member2);
    [ExtensionAttribute]
internal static IEnumerable`1<PropertyInfo> GetPublicProperties(Type type, bool instanceOnly);
    [ExtensionAttribute]
internal static IEnumerable`1<PropertyInfo> GetPublicProperties(Type type, bool instanceOnly, bool declaredOnly);
    [ExtensionAttribute]
internal static IEnumerable`1<ConstructorInfo> GetInstanceConstructors(Type type, bool isPublic);
    [ExtensionAttribute]
internal static ConstructorInfo GetInstanceConstructor(Type type, bool isPublic, Type[] argTypes);
    [ExtensionAttribute]
internal static bool TryGetMethod(Type type, string name, Type[] parameterTypes, MethodInfo& foundMethod);
    [ExtensionAttribute]
internal static MethodInfo GetMethod(Type type, string name, bool isPublic, bool isStatic);
    [ExtensionAttribute]
internal static MethodInfo GetMethod(Type type, string name, Type[] types, bool isPublic, bool isStatic);
    [ExtensionAttribute]
internal static IEnumerable`1<MethodInfo> GetPublicStaticMethods(Type type);
    [ExtensionAttribute]
internal static IEnumerable`1<Type> GetNonPublicNestedTypes(Type type);
    private static bool CheckTypeArgs(ConstructorInfo constructorInfo, Type[] types);
    public static Regex CreateCompiled(string pattern, RegexOptions options);
    [ExtensionAttribute]
public static String[] GetSegments(Uri uri);
}
internal class Microsoft.Data.OData.PrimitiveConverter : object {
    private static IPrimitiveTypeConverter geographyTypeConverter;
    private static IPrimitiveTypeConverter geometryTypeConverter;
    private static PrimitiveConverter primitiveConverter;
    private Dictionary`2<Type, IPrimitiveTypeConverter> spatialPrimitiveTypeConverters;
    internal static PrimitiveConverter Instance { get; }
    internal PrimitiveConverter(KeyValuePair`2[] spatialPrimitiveTypeConverters);
    private static PrimitiveConverter();
    internal static PrimitiveConverter get_Instance();
    internal bool TryTokenizeFromXml(XmlReader reader, Type targetType, Object& tokenizedPropertyValue);
    internal bool TryWriteAtom(object instance, XmlWriter writer);
    internal void WriteVerboseJson(object instance, IJsonWriter jsonWriter, string typeName, ODataVersion odataVersion);
    internal void WriteJsonLight(object instance, IJsonWriter jsonWriter, ODataVersion odataVersion);
    private bool TryWriteValue(object instance, Action`1<IPrimitiveTypeConverter> writeMethod);
    private bool TryGetConverter(Type type, IPrimitiveTypeConverter& primitiveTypeConverter);
}
public class Microsoft.Data.OData.ProjectedPropertiesAnnotation : object {
    internal static string StarSegment;
    private static ProjectedPropertiesAnnotation emptyProjectedPropertiesMarker;
    private static ProjectedPropertiesAnnotation allProjectedPropertiesMarker;
    private HashSet`1<string> projectedProperties;
    internal static ProjectedPropertiesAnnotation EmptyProjectedPropertiesInstance { get; }
    internal static ProjectedPropertiesAnnotation AllProjectedPropertiesInstance { get; }
    internal IEnumerable`1<string> ProjectedProperties { get; }
    public ProjectedPropertiesAnnotation(IEnumerable`1<string> projectedPropertyNames);
    private static ProjectedPropertiesAnnotation();
    internal static ProjectedPropertiesAnnotation get_EmptyProjectedPropertiesInstance();
    internal static ProjectedPropertiesAnnotation get_AllProjectedPropertiesInstance();
    internal IEnumerable`1<string> get_ProjectedProperties();
    internal bool IsPropertyProjected(string propertyName);
    internal void Add(string propertyName);
    internal void Remove(string propertyName);
}
internal class Microsoft.Data.OData.Query.BinaryOperator : object {
    private static BinaryOperator Add;
    private static BinaryOperator And;
    private static BinaryOperator Divide;
    private static BinaryOperator Equal;
    private static BinaryOperator GreaterThanOrEqual;
    private static BinaryOperator GreaterThan;
    private static BinaryOperator LessThanOrEqual;
    private static BinaryOperator LessThan;
    private static BinaryOperator Modulo;
    private static BinaryOperator Multiply;
    private static BinaryOperator NotEqual;
    private static BinaryOperator Or;
    private static BinaryOperator Subtract;
    private string text;
    private short precedence;
    private bool needParenEvenWhenTheSame;
    public bool NeedParenEvenWhenTheSame { get; }
    public short Precedence { get; }
    public string Text { get; }
    private BinaryOperator(string text, short precedence, bool needParenEvenWhenTheSame);
    private static BinaryOperator();
    public bool get_NeedParenEvenWhenTheSame();
    public short get_Precedence();
    public string get_Text();
    public static BinaryOperator GetOperator(BinaryOperatorKind operatorKind);
}
internal class Microsoft.Data.OData.Query.BinaryOperatorBinder : object {
    private Func`2<QueryToken, QueryNode> bindMethod;
    internal BinaryOperatorBinder(Func`2<QueryToken, QueryNode> bindMethod);
    internal QueryNode BindBinaryOperator(BinaryOperatorToken binaryOperatorToken);
    private static void PromoteOperandTypes(BinaryOperatorKind binaryOperatorKind, SingleValueNode& left, SingleValueNode& right);
    private SingleValueNode GetOperandFromToken(BinaryOperatorKind operatorKind, QueryToken queryToken);
}
public enum Microsoft.Data.OData.Query.BinaryOperatorKind : Enum {
    public int value__;
    public static BinaryOperatorKind Or;
    public static BinaryOperatorKind And;
    public static BinaryOperatorKind Equal;
    public static BinaryOperatorKind NotEqual;
    public static BinaryOperatorKind GreaterThan;
    public static BinaryOperatorKind GreaterThanOrEqual;
    public static BinaryOperatorKind LessThan;
    public static BinaryOperatorKind LessThanOrEqual;
    public static BinaryOperatorKind Add;
    public static BinaryOperatorKind Subtract;
    public static BinaryOperatorKind Multiply;
    public static BinaryOperatorKind Divide;
    public static BinaryOperatorKind Modulo;
}
internal class Microsoft.Data.OData.Query.BinaryOperatorUriBuilder : object {
    private ODataUriBuilder builder;
    public BinaryOperatorUriBuilder(ODataUriBuilder builder);
    public void Write(BinaryOperatorToken binary);
    private static bool NeedParenthesesLeft(BinaryOperator currentOperator, BinaryOperatorToken leftSubtree);
    private static bool NeedParenthesesRight(BinaryOperator currentOperator, BinaryOperatorToken rightSubtree);
    private void Write(bool needParenthesis, BinaryOperatorToken binary);
}
internal class Microsoft.Data.OData.Query.BindingState : object {
    private ODataUriParserConfiguration configuration;
    private Stack`1<RangeVariable> rangeVariables;
    private RangeVariable implicitRangeVariable;
    private List`1<CustomQueryOptionToken> queryOptions;
    private int bindingRecursionDepth;
    internal IEdmModel Model { get; }
    internal ODataUriParserConfiguration Configuration { get; }
    internal RangeVariable ImplicitRangeVariable { get; internal set; }
    internal Stack`1<RangeVariable> RangeVariables { get; }
    internal List`1<CustomQueryOptionToken> QueryOptions { get; internal set; }
    internal BindingState(ODataUriParserConfiguration configuration);
    internal IEdmModel get_Model();
    internal ODataUriParserConfiguration get_Configuration();
    internal RangeVariable get_ImplicitRangeVariable();
    internal void set_ImplicitRangeVariable(RangeVariable value);
    internal Stack`1<RangeVariable> get_RangeVariables();
    internal List`1<CustomQueryOptionToken> get_QueryOptions();
    internal void set_QueryOptions(List`1<CustomQueryOptionToken> value);
    internal void RecurseEnter();
    internal void RecurseLeave();
}
internal static class Microsoft.Data.OData.Query.BuiltInFunctions : object {
    private static Dictionary`2<string, FunctionSignatureWithReturnType[]> builtInFunctions;
    private static BuiltInFunctions();
    internal static bool TryGetBuiltInFunction(string name, FunctionSignatureWithReturnType[]& signatures);
    internal static string BuildFunctionSignatureListDescription(string name, IEnumerable`1<FunctionSignature> signatures);
    internal static void CreateSpatialFunctions(IDictionary`2<string, FunctionSignatureWithReturnType[]> functions);
    private static Dictionary`2<string, FunctionSignatureWithReturnType[]> InitializeBuiltInFunctions();
    private static void CreateStringFunctions(IDictionary`2<string, FunctionSignatureWithReturnType[]> functions);
    private static void CreateDateTimeFunctions(IDictionary`2<string, FunctionSignatureWithReturnType[]> functions);
    private static FunctionSignatureWithReturnType[] CreateDateTimeFunctionSignatureArray();
    private static IEnumerable`1<FunctionSignatureWithReturnType> CreateTimeSpanFunctionSignatures();
    private static void CreateMathFunctions(IDictionary`2<string, FunctionSignatureWithReturnType[]> functions);
    private static FunctionSignatureWithReturnType[] CreateMathFunctionSignatureArray();
}
internal static class Microsoft.Data.OData.Query.DataServiceProviderMethods : object {
    internal static MethodInfo GetValueMethodInfo;
    internal static MethodInfo GetSequenceValueMethodInfo;
    internal static MethodInfo ConvertMethodInfo;
    internal static MethodInfo TypeIsMethodInfo;
    internal static MethodInfo StringCompareMethodInfo;
    internal static MethodInfo BoolCompareMethodInfo;
    internal static MethodInfo BoolCompareMethodInfoNullable;
    internal static MethodInfo GuidCompareMethodInfo;
    internal static MethodInfo GuidCompareMethodInfoNullable;
    internal static MethodInfo AreByteArraysEqualMethodInfo;
    internal static MethodInfo AreByteArraysNotEqualMethodInfo;
    [CompilerGeneratedAttribute]
private static Func`2<MethodInfo, bool> CS$<>9__CachedAnonymousMethodDelegate5;
    [CompilerGeneratedAttribute]
private static Func`2<MethodInfo, bool> CS$<>9__CachedAnonymousMethodDelegate6;
    [CompilerGeneratedAttribute]
private static Func`2<MethodInfo, bool> CS$<>9__CachedAnonymousMethodDelegate7;
    [CompilerGeneratedAttribute]
private static Func`2<MethodInfo, bool> CS$<>9__CachedAnonymousMethodDelegate8;
    [CompilerGeneratedAttribute]
private static Func`2<MethodInfo, bool> CS$<>9__CachedAnonymousMethodDelegate9;
    private static DataServiceProviderMethods();
    public static object GetValue(object value, IEdmProperty property);
    public static IEnumerable`1<T> GetSequenceValue(object value, IEdmProperty property);
    public static object Convert(object value, IEdmTypeReference typeReference);
    public static bool TypeIs(object value, IEdmTypeReference typeReference);
    public static int Compare(string left, string right);
    public static int Compare(bool left, bool right);
    public static int Compare(Nullable`1<bool> left, Nullable`1<bool> right);
    public static int Compare(Guid left, Guid right);
    public static int Compare(Nullable`1<Guid> left, Nullable`1<Guid> right);
    public static bool AreByteArraysEqual(Byte[] left, Byte[] right);
    public static bool AreByteArraysNotEqual(Byte[] left, Byte[] right);
    [CompilerGeneratedAttribute]
private static bool <.cctor>b__0(MethodInfo m);
    [CompilerGeneratedAttribute]
private static bool <.cctor>b__1(MethodInfo m);
    [CompilerGeneratedAttribute]
private static bool <.cctor>b__2(MethodInfo m);
    [CompilerGeneratedAttribute]
private static bool <.cctor>b__3(MethodInfo m);
    [CompilerGeneratedAttribute]
private static bool <.cctor>b__4(MethodInfo m);
}
internal class Microsoft.Data.OData.Query.DottedIdentifierBinder : object {
    private QueryTokenVisitor bindMethod;
    internal DottedIdentifierBinder(QueryTokenVisitor bindMethod);
    internal QueryNode BindDottedIdentifier(DottedIdentifierToken dottedIdentifierToken, BindingState state);
}
internal class Microsoft.Data.OData.Query.EndPathBinder : object {
    private QueryTokenVisitor bind;
    private FunctionCallBinder functionCallBinder;
    internal EndPathBinder(QueryTokenVisitor bindMethod);
    internal static SingleValueOpenPropertyAccessNode GeneratePropertyAccessQueryForOpenType(EndPathToken endPathToken, SingleValueNode parentNode);
    internal static QueryNode GeneratePropertyAccessQueryNode(SingleValueNode parentNode, IEdmProperty property);
    internal static SingleValueNode CreateParentFromImplicitRangeVariable(BindingState state);
    internal QueryNode BindEndPath(EndPathToken endPathToken, BindingState state);
    private QueryNode DetermineParentNode(EndPathToken segmentToken, BindingState state);
}
internal static class Microsoft.Data.OData.Query.EntitySetExpressionResolver : object {
    internal static IEdmEntitySet ResolveEntitySetFromExpression(IEdmExpression expression);
}
internal static class Microsoft.Data.OData.Query.ExceptionUtil : object {
    internal static ODataException CreateResourceNotFound(string identifier);
    internal static ODataException ResourceNotFoundError(string errorMessage);
    internal static ODataException CreateSyntaxError();
    internal static ODataException CreateBadRequestError(string message);
    internal static void ThrowSyntaxErrorIfNotValid(bool valid);
    internal static void ThrowIfResourceDoesNotExist(bool resourceExists, string identifier);
}
internal class Microsoft.Data.OData.Query.ExpandDepthAndCountValidator : object {
    private int maxDepth;
    private int maxCount;
    private int currentCount;
    internal ExpandDepthAndCountValidator(int maxDepth, int maxCount);
    internal void Validate(SelectExpandClause expandTree);
    private void EnsureMaximumCountAndDepthAreNotExceeded(SelectExpandClause expandTree, int currentDepth);
}
internal class Microsoft.Data.OData.Query.ExpandOptionSelectExpandTermParser : SelectExpandTermParser {
    public ExpandOptionSelectExpandTermParser(string clauseToParse, int maxDepth);
    internal virtual ExpandTermToken BuildExpandTermToken(bool isInnerTerm, PathSegmentToken pathToken);
    internal virtual bool IsNotEndOfTerm(bool isInnerTerm);
    private string ReadQueryOption();
}
internal static class Microsoft.Data.OData.Query.ExpressionConstants : object {
    internal static string It;
    internal static string KeywordAdd;
    internal static string KeywordAnd;
    internal static string KeywordAscending;
    internal static string KeywordDescending;
    internal static string KeywordDivide;
    internal static string KeywordModulo;
    internal static string KeywordMultiply;
    internal static string KeywordNot;
    internal static string KeywordOr;
    internal static string KeywordSub;
    internal static string SymbolNegate;
    internal static string SymbolEqual;
    internal static string SymbolComma;
    internal static string SymbolForwardSlash;
    internal static string SymbolOpenParen;
    internal static string SymbolClosedParen;
    internal static string SymbolQueryStart;
    internal static string SymbolQueryConcatenate;
    internal static string SymbolSingleQuote;
    internal static string SymbolSingleQuoteEscaped;
    internal static string SymbolEscapedSpace;
    internal static string InlineCountAllPages;
    internal static string InlineCountNone;
    internal static string KeywordEqual;
    internal static string KeywordFalse;
    internal static string KeywordGreaterThan;
    internal static string KeywordGreaterThanOrEqual;
    internal static string KeywordLessThan;
    internal static string KeywordLessThanOrEqual;
    internal static string KeywordNotEqual;
    internal static string KeywordNull;
    internal static string KeywordTrue;
    internal static string UnboundFunctionCast;
    internal static string UnboundFunctionIsOf;
    internal static string UnboundFunctionLength;
    internal static string UnboundFunctionIntersects;
    internal static string InfinityLiteral;
    internal static string NaNLiteral;
    internal static string LiteralPrefixDateTime;
    internal static string LiteralPrefixDateTimeOffset;
    internal static string LiteralPrefixTime;
    internal static string LiteralPrefixGeometry;
    internal static string LiteralPrefixGeography;
    internal static string LiteralPrefixGuid;
    internal static string LiteralPrefixShortBinary;
    internal static string LiteralPrefixBinary;
    internal static string LiteralSuffixInt64;
    internal static string LiteralSuffixSingle;
    internal static string LiteralSuffixDouble;
    internal static string LiteralSuffixDecimal;
    internal static string LiteralSingleQuote;
    internal static string QueryOptionFilter;
    internal static string QueryOptionOrderby;
    internal static string QueryOptionTop;
    internal static string QueryOptionSkip;
    internal static string QueryOptionInlineCount;
    internal static string QueryOptionSelect;
    internal static string QueryOptionExpand;
}
[DebuggerDisplayAttribute("ExpressionLexer ({text} @ {textPos} [{token}]")]
internal class Microsoft.Data.OData.Query.ExpressionLexer : object {
    private static HashSet`1<UnicodeCategory> AdditionalUnicodeCategoriesForIdentifier;
    private string text;
    private int textLen;
    private bool useSemicolonDelimeter;
    private bool parsingFunctionParameters;
    private int textPos;
    private Nullable`1<char> ch;
    private ExpressionToken token;
    private bool ignoreWhitespace;
    internal ExpressionToken CurrentToken { get; internal set; }
    internal string ExpressionText { get; }
    internal int Position { get; }
    private bool IsValidWhiteSpace { get; }
    private bool IsValidDigit { get; }
    private bool IsValidStartingCharForIdentifier { get; }
    private bool IsValidNonStartingCharForIdentifier { get; }
    internal ExpressionLexer(string expression, bool moveToFirstToken, bool useSemicolonDelimeter);
    internal ExpressionLexer(string expression, bool moveToFirstToken, bool useSemicolonDelimeter, bool parsingFunctionParameters);
    private static ExpressionLexer();
    internal ExpressionToken get_CurrentToken();
    internal void set_CurrentToken(ExpressionToken value);
    internal string get_ExpressionText();
    internal int get_Position();
    private bool get_IsValidWhiteSpace();
    private bool get_IsValidDigit();
    private bool get_IsValidStartingCharForIdentifier();
    private bool get_IsValidNonStartingCharForIdentifier();
    internal bool TryPeekNextToken(ExpressionToken& resultToken, Exception& error);
    internal ExpressionToken NextToken();
    internal string ReadDottedIdentifier(bool acceptStar);
    internal ExpressionToken PeekNextToken();
    internal bool ExpandIdentifierAsFunction();
    internal void ValidateToken(ExpressionTokenKind t);
    private static Exception ParseError(string message);
    private ExpressionToken NextTokenImplementation(Exception& error);
    private bool MoveNextWhenMatch(ExpressionTokenKind id);
    private void HandleTypePrefixedLiterals();
    private void NextChar();
    private ExpressionTokenKind ParseFromDigit();
    private void ParseWhitespace();
    private void ParseBracketedExpression(char startingCharacter, char endingCharacter);
    private void AdvanceToNextOccuranceOf(char endingValue);
    private void ParseIdentifier();
    private void SetTextPos(int pos);
    private void ValidateDigit();
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Query.ExpressionLexerLiteralExtensions : object {
    [ExtensionAttribute]
internal static bool IsLiteralType(ExpressionTokenKind tokenKind);
    [ExtensionAttribute]
internal static object ReadLiteralToken(ExpressionLexer expressionLexer);
    [ExtensionAttribute]
private static object ParseNullLiteral(ExpressionLexer expressionLexer);
    [ExtensionAttribute]
private static object ParseTypedLiteral(ExpressionLexer expressionLexer, IEdmPrimitiveTypeReference targetTypeReference);
    [ExtensionAttribute]
private static object TryParseLiteral(ExpressionLexer expressionLexer);
}
internal class Microsoft.Data.OData.Query.ExpressionLexerUtils : object {
    private static char SingleSuffixLower;
    private static char SingleSuffixUpper;
    internal static bool IsNumeric(ExpressionTokenKind id);
    internal static bool IsInfinityOrNaNDouble(string tokenText);
    internal static bool IsInfinityLiteralDouble(string text);
    internal static bool IsInfinityOrNanSingle(string tokenText);
    internal static bool IsInfinityLiteralSingle(string text);
}
[DebuggerDisplayAttribute("{InternalKind} @ {Position}: [{Text}]")]
internal class Microsoft.Data.OData.Query.ExpressionToken : ValueType {
    internal static ExpressionToken GreaterThan;
    internal static ExpressionToken EqualsTo;
    internal static ExpressionToken LessThan;
    internal ExpressionTokenKind Kind;
    internal string Text;
    internal int Position;
    internal bool IsComparisonOperator { get; }
    internal bool IsEqualityOperator { get; }
    internal bool IsKeyValueToken { get; }
    internal bool IsFunctionParameterToken { get; }
    private static ExpressionToken();
    internal bool get_IsComparisonOperator();
    internal bool get_IsEqualityOperator();
    internal bool get_IsKeyValueToken();
    internal bool get_IsFunctionParameterToken();
    public virtual string ToString();
    internal string GetIdentifier();
    internal bool IdentifierIs(string id);
}
internal enum Microsoft.Data.OData.Query.ExpressionTokenKind : Enum {
    public int value__;
    public static ExpressionTokenKind Unknown;
    public static ExpressionTokenKind End;
    public static ExpressionTokenKind Equal;
    public static ExpressionTokenKind Identifier;
    public static ExpressionTokenKind NullLiteral;
    public static ExpressionTokenKind BooleanLiteral;
    public static ExpressionTokenKind StringLiteral;
    public static ExpressionTokenKind IntegerLiteral;
    public static ExpressionTokenKind Int64Literal;
    public static ExpressionTokenKind SingleLiteral;
    public static ExpressionTokenKind DateTimeLiteral;
    public static ExpressionTokenKind DateTimeOffsetLiteral;
    public static ExpressionTokenKind TimeLiteral;
    public static ExpressionTokenKind DecimalLiteral;
    public static ExpressionTokenKind DoubleLiteral;
    public static ExpressionTokenKind GuidLiteral;
    public static ExpressionTokenKind BinaryLiteral;
    public static ExpressionTokenKind GeographyLiteral;
    public static ExpressionTokenKind GeometryLiteral;
    public static ExpressionTokenKind Exclamation;
    public static ExpressionTokenKind OpenParen;
    public static ExpressionTokenKind CloseParen;
    public static ExpressionTokenKind Comma;
    public static ExpressionTokenKind Colon;
    public static ExpressionTokenKind Minus;
    public static ExpressionTokenKind Slash;
    public static ExpressionTokenKind Question;
    public static ExpressionTokenKind Dot;
    public static ExpressionTokenKind Star;
    public static ExpressionTokenKind SemiColon;
    public static ExpressionTokenKind ParameterAlias;
    public static ExpressionTokenKind BracketedExpression;
}
internal class Microsoft.Data.OData.Query.FilterBinder : object {
    private QueryTokenVisitor bindMethod;
    private BindingState state;
    internal FilterBinder(QueryTokenVisitor bindMethod, BindingState state);
    internal FilterClause BindFilter(QueryToken filter);
}
internal class Microsoft.Data.OData.Query.FunctionCallBinder : object {
    private QueryTokenVisitor bindMethod;
    private static String[] UnboundFunctionNames;
    [CompilerGeneratedAttribute]
private static Func`2<IEdmTypeReference, bool> CS$<>9__CachedAnonymousMethodDelegate2;
    [CompilerGeneratedAttribute]
private static Func`2<FunctionParameterToken, string> CS$<>9__CachedAnonymousMethodDelegate9;
    internal FunctionCallBinder(QueryTokenVisitor bindMethod);
    private static FunctionCallBinder();
    internal static void TypePromoteArguments(FunctionSignature signature, List`1<QueryNode> argumentNodes);
    internal static IEdmTypeReference[] EnsureArgumentsAreSingleValue(string functionName, List`1<QueryNode> argumentNodes);
    internal static FunctionSignatureWithReturnType MatchSignatureToBuiltInFunction(string functionName, IEdmTypeReference[] argumentTypes, FunctionSignatureWithReturnType[] signatures);
    internal static FunctionSignatureWithReturnType[] GetBuiltInFunctionSignatures(string functionName);
    internal QueryNode BindFunctionCall(FunctionCallToken functionCallToken, BindingState state);
    internal bool TryBindEndPathAsFunctionCall(EndPathToken endPathToken, QueryNode parent, BindingState state, QueryNode& boundFunction);
    internal bool TryBindInnerPathAsFunctionCall(InnerPathToken innerPathToken, QueryNode parent, BindingState state, QueryNode& boundFunction);
    internal bool TryBindDottedIdentifierAsFunctionCall(DottedIdentifierToken dottedIdentifierToken, SingleValueNode parent, BindingState state, QueryNode& boundFunction);
    private static QueryNode BindAsBuiltInFunction(FunctionCallToken functionCallToken, BindingState state, List`1<QueryNode> argumentNodes);
    private bool TryBindIdentifier(string identifier, IEnumerable`1<FunctionParameterToken> arguments, QueryNode parent, BindingState state, QueryNode& boundFunction);
    private static bool IsUnboundFunction(string functionName);
    private static SingleValueNode CreateUnboundFunctionNode(FunctionCallToken functionCallToken, List`1<QueryNode> args, BindingState state);
    private static IEdmTypeReference ValidateAndBuildCastArgs(BindingState state, List`1& args);
    private static IEdmTypeReference ValidateAndBuildIsOfArgs(BindingState state, List`1& args);
    private static IEdmTypeReference ValidateIsOfOrCast(BindingState state, bool isCast, List`1& args);
    private static IEdmTypeReference TryGetTypeReference(IEdmModel model, string fullTypeName);
    [CompilerGeneratedAttribute]
private static bool <MatchSignatureToBuiltInFunction>b__0(IEdmTypeReference a);
    [CompilerGeneratedAttribute]
private QueryNode <BindFunctionCall>b__6(FunctionParameterToken ar);
    [CompilerGeneratedAttribute]
private static string <TryBindIdentifier>b__7(FunctionParameterToken ar);
    [CompilerGeneratedAttribute]
private QueryNode <TryBindIdentifier>b__8(FunctionParameterToken p);
}
internal class Microsoft.Data.OData.Query.FunctionCallParser : object {
    private ExpressionLexer lexer;
    private Parser parseMethod;
    [CompilerGeneratedAttribute]
private static Func`2<FunctionParameterToken, string> CS$<>9__CachedAnonymousMethodDelegate1;
    public ExpressionLexer Lexer { get; }
    public FunctionCallParser(ExpressionLexer lexer, Parser parseMethod);
    public sealed virtual ExpressionLexer get_Lexer();
    public sealed virtual QueryToken ParseIdentifierAsFunction(QueryToken parent);
    public FunctionParameterToken[] ParseArgumentList();
    public FunctionParameterToken[] ParseArguments();
    private List`1<FunctionParameterToken> ReadArgumentsAsPositionalValues();
    private bool TryReadArgumentsAsNamedValues(ICollection`1& argList);
    [CompilerGeneratedAttribute]
private static string <TryReadArgumentsAsNamedValues>b__0(FunctionParameterToken t);
}
internal static class Microsoft.Data.OData.Query.FunctionOverloadResolver : object {
    [CompilerGeneratedAttribute]
private static Func`2<IEdmFunctionImport, bool> CS$<>9__CachedAnonymousMethodDelegate8;
    internal static IEdmFunctionImport ResolveOverloadsByParameterNames(ICollection`1<IEdmFunctionImport> functionImports, ICollection`1<string> parameters, string functionName);
    internal static bool ResolveFunctionsFromList(string identifier, IList`1<string> parameterNames, IEdmType bindingType, IEdmModel model, IEdmFunctionImport& matchingFunctionImport);
    [CompilerGeneratedAttribute]
private static bool <ResolveFunctionsFromList>b__7(IEdmFunctionImport f);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Query.FunctionParameterParser : object {
    [CompilerGeneratedAttribute]
private static Func`3<string, object, FunctionParameterToken> CS$<>9__CachedAnonymousMethodDelegate1;
    [CompilerGeneratedAttribute]
private static Func`3<string, object, OperationSegmentParameter> CS$<>9__CachedAnonymousMethodDelegate3;
    [ExtensionAttribute]
internal static bool TrySplitFunctionParameters(ExpressionLexer lexer, ICollection`1& splitParameters);
    internal static bool TryParseFunctionParameters(ICollection`1<FunctionParameterToken> splitParameters, ODataUriParserConfiguration configuration, IEdmFunctionImport functionImport, ICollection`1& parsedParameters);
    internal static bool TrySplitFunctionParameters(string functionName, string parenthesisExpression, ICollection`1& splitParameters);
    internal static bool TryParseFunctionParameters(ICollection`1<FunctionParameterToken> splitParameters, ODataUriParserConfiguration configuration, IEdmFunctionImport functionImport, ICollection`1& parsedParameters);
    [ExtensionAttribute]
private static bool TrySplitFunctionParameters(ExpressionLexer lexer, ExpressionTokenKind endTokenKind, ICollection`1& splitParameters);
    private static bool TryParseFunctionParameters(ICollection`1<FunctionParameterToken> splitParameters, ODataUriParserConfiguration configuration, IEdmFunctionImport functionImport, Func`3<string, object, TParam> createParameter, ICollection`1& parsedParameters);
    private static bool TryCreateParameterValueToken(ExpressionToken expressionToken, QueryToken& parameterValue);
    private static bool TryCreateParameter(FunctionParameterToken parameterToken, ODataUriParserConfiguration configuration, IEdmTypeReference expectedType, Func`2<object, TParam> createParameter, TParam& parameter);
    [CompilerGeneratedAttribute]
private static FunctionParameterToken <TryParseFunctionParameters>b__0(string paramName, object convertedValue);
    [CompilerGeneratedAttribute]
private static OperationSegmentParameter <TryParseFunctionParameters>b__2(string paramName, object convertedValue);
}
internal class Microsoft.Data.OData.Query.FunctionSignature : object {
    private IEdmTypeReference[] argumentTypes;
    internal IEdmTypeReference[] ArgumentTypes { get; }
    internal FunctionSignature(IEdmTypeReference[] argumentTypes);
    internal IEdmTypeReference[] get_ArgumentTypes();
}
internal class Microsoft.Data.OData.Query.FunctionSignatureWithReturnType : FunctionSignature {
    private IEdmTypeReference returnType;
    internal IEdmTypeReference ReturnType { get; }
    internal FunctionSignatureWithReturnType(IEdmTypeReference returnType, IEdmTypeReference[] argumentTypes);
    internal IEdmTypeReference get_ReturnType();
}
internal class Microsoft.Data.OData.Query.IdentifierTokenizer : object {
    private ExpressionLexer lexer;
    private HashSet`1<string> parameters;
    private IFunctionCallParser functionCallParser;
    public IdentifierTokenizer(HashSet`1<string> parameters, IFunctionCallParser functionCallParser);
    public QueryToken ParseIdentifier(QueryToken parent);
    public QueryToken ParseMemberAccess(QueryToken instance);
    public QueryToken ParseStarMemberAccess(QueryToken instance);
    private static Exception ParseError(string message);
}
internal interface Microsoft.Data.OData.Query.IFunctionCallParser {
    public ExpressionLexer Lexer { get; }
    public abstract virtual ExpressionLexer get_Lexer();
    public abstract virtual QueryToken ParseIdentifierAsFunction(QueryToken parent);
}
internal enum Microsoft.Data.OData.Query.InlineCountKind : Enum {
    public int value__;
    public static InlineCountKind None;
    public static InlineCountKind AllPages;
}
internal class Microsoft.Data.OData.Query.InnerPathTokenBinder : object {
    private QueryTokenVisitor bindMethod;
    internal InnerPathTokenBinder(QueryTokenVisitor bindMethod);
    internal static SingleEntityNode EnsureParentIsEntityForNavProp(SingleValueNode parent);
    internal static IEdmProperty BindProperty(IEdmTypeReference parentReference, string propertyName);
    internal static QueryNode GetNavigationNode(IEdmNavigationProperty property, SingleEntityNode parent, IEnumerable`1<NamedValue> namedValues, BindingState state, KeyBinder keyBinder);
    internal QueryNode BindInnerPathSegment(InnerPathToken segmentToken, BindingState state);
    private QueryNode DetermineParentNode(InnerPathToken segmentToken, BindingState state);
}
internal enum Microsoft.Data.OData.Query.InternalErrorCodes : Enum {
    public int value__;
    public static InternalErrorCodes TypePromotionUtils_GetFunctionSignatures_Binary_UnreachableCodepath;
    public static InternalErrorCodes TypePromotionUtils_GetFunctionSignatures_Unary_UnreachableCodepath;
    public static InternalErrorCodes MetadataBinder_BindServiceOperation;
    public static InternalErrorCodes QueryExpressionTranslator_TranslateBinaryOperator_UnreachableCodepath;
    public static InternalErrorCodes UriPrimitiveTypeParser_HexCharToNibble;
    public static InternalErrorCodes UriQueryExpressionParser_ParseComparison;
    public static InternalErrorCodes UriPrimitiveTypeParser_TryUriStringToPrimitive;
    public static InternalErrorCodes QueryNodeUtils_BinaryOperatorResultType_UnreachableCodepath;
    public static InternalErrorCodes QueryExpressionTranslator_TranslateUnaryOperator_UnreachableCodepath;
    public static InternalErrorCodes BinaryOperator_GetOperator_UnreachableCodePath;
    public static InternalErrorCodes ODataUriBuilder_WriteUnary_UnreachableCodePath;
    public static InternalErrorCodes ODataUriBuilderUtils_ToText_InlineCountKind_UnreachableCodePath;
}
internal enum Microsoft.Data.OData.Query.InternalQueryNodeKind : Enum {
    public int value__;
    public static InternalQueryNodeKind None;
    public static InternalQueryNodeKind Constant;
    public static InternalQueryNodeKind Convert;
    public static InternalQueryNodeKind NonentityRangeVariableReference;
    public static InternalQueryNodeKind BinaryOperator;
    public static InternalQueryNodeKind UnaryOperator;
    public static InternalQueryNodeKind SingleValuePropertyAccess;
    public static InternalQueryNodeKind CollectionPropertyAccess;
    public static InternalQueryNodeKind SingleValueFunctionCall;
    public static InternalQueryNodeKind Any;
    public static InternalQueryNodeKind CollectionNavigationNode;
    public static InternalQueryNodeKind SingleNavigationNode;
    public static InternalQueryNodeKind SingleValueOpenPropertyAccess;
    public static InternalQueryNodeKind SingleEntityCast;
    public static InternalQueryNodeKind All;
    public static InternalQueryNodeKind EntityCollectionCast;
    public static InternalQueryNodeKind EntityRangeVariableReference;
    public static InternalQueryNodeKind SingleEntityFunctionCall;
    public static InternalQueryNodeKind CollectionFunctionCall;
    public static InternalQueryNodeKind EntityCollectionFunctionCall;
    public static InternalQueryNodeKind NamedFunctionParameter;
    public static InternalQueryNodeKind EntitySet;
    public static InternalQueryNodeKind KeyLookup;
}
internal interface Microsoft.Data.OData.Query.ISelectExpandTermParser {
    public abstract virtual SelectToken ParseSelect();
    public abstract virtual ExpandToken ParseExpand();
    public abstract virtual PathSegmentToken ParseSingleSelectTerm(bool isInnerTerm);
    public abstract virtual ExpandTermToken ParseSingleExpandTerm(bool isInnerTerm);
}
internal class Microsoft.Data.OData.Query.KeyBinder : object {
    private QueryTokenVisitor keyValueBindMethod;
    internal KeyBinder(QueryTokenVisitor keyValueBindMethod);
    internal QueryNode BindKeyValues(EntityCollectionNode collectionNode, IEnumerable`1<NamedValue> namedValues);
    private KeyPropertyValue BindKeyPropertyValue(NamedValue namedValue, IEdmEntityType collectionItemEntityType);
}
public class Microsoft.Data.OData.Query.KeyPropertyValue : object {
    [CompilerGeneratedAttribute]
private IEdmProperty <KeyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private SingleValueNode <KeyValue>k__BackingField;
    public IEdmProperty KeyProperty { get; public set; }
    public SingleValueNode KeyValue { get; public set; }
    [CompilerGeneratedAttribute]
public IEdmProperty get_KeyProperty();
    [CompilerGeneratedAttribute]
public void set_KeyProperty(IEdmProperty value);
    [CompilerGeneratedAttribute]
public SingleValueNode get_KeyValue();
    [CompilerGeneratedAttribute]
public void set_KeyValue(SingleValueNode value);
}
internal enum Microsoft.Data.OData.Query.KeywordKind : Enum {
    public int value__;
    public static KeywordKind Metadata;
    public static KeywordKind Value;
    public static KeywordKind Batch;
    public static KeywordKind Links;
    public static KeywordKind Count;
}
internal class Microsoft.Data.OData.Query.LambdaBinder : object {
    private QueryTokenVisitor bindMethod;
    internal LambdaBinder(QueryTokenVisitor bindMethod);
    internal LambdaNode BindLambdaToken(LambdaToken lambdaToken, BindingState state);
    private CollectionNode BindParentToken(QueryToken queryToken);
    private SingleValueNode BindExpressionToken(QueryToken queryToken);
}
internal class Microsoft.Data.OData.Query.LiteralBinder : object {
    internal static ConstantNode BindLiteral(LiteralToken literalToken);
}
internal abstract class Microsoft.Data.OData.Query.LiteralParser : object {
    private static LiteralParser DefaultInstance;
    private static LiteralParser KeysAsSegmentsInstance;
    private static IDictionary`2<Type, PrimitiveParser> Parsers;
    [CompilerGeneratedAttribute]
private static Func`2<string, DateTime> CS$<>9__CachedAnonymousMethodDelegate2;
    internal static LiteralParser ForETags { get; }
    private static LiteralParser();
    internal static LiteralParser get_ForETags();
    internal static LiteralParser ForKeys(bool keyAsSegment);
    internal abstract virtual bool TryParseLiteral(Type targetType, string text, Object& result);
    [CompilerGeneratedAttribute]
private static DateTime <.cctor>b__1(string s);
}
internal static class Microsoft.Data.OData.Query.LiteralUtils : object {
    private static WellKnownTextSqlFormatter Formatter { get; }
    private static WellKnownTextSqlFormatter get_Formatter();
    internal static Geography ParseGeography(string text);
    internal static Geometry ParseGeometry(string text);
    internal static string ToWellKnownText(Geography instance);
    internal static string ToWellKnownText(Geometry instance);
}
internal class Microsoft.Data.OData.Query.Metadata.ODataQueryEdmPropertyAnnotation : object {
    [CompilerGeneratedAttribute]
private bool <CanReflectOnProperty>k__BackingField;
    public bool CanReflectOnProperty { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_CanReflectOnProperty();
    [CompilerGeneratedAttribute]
public void set_CanReflectOnProperty(bool value);
}
internal class Microsoft.Data.OData.Query.Metadata.ODataQueryEdmServiceOperationAnnotation : object {
    [CompilerGeneratedAttribute]
private ODataServiceOperationResultKind <ResultKind>k__BackingField;
    public ODataServiceOperationResultKind ResultKind { get; public set; }
    [CompilerGeneratedAttribute]
public ODataServiceOperationResultKind get_ResultKind();
    [CompilerGeneratedAttribute]
public void set_ResultKind(ODataServiceOperationResultKind value);
}
internal class Microsoft.Data.OData.Query.Metadata.ODataQueryEdmTypeAnnotation : object {
    [CompilerGeneratedAttribute]
private bool <CanReflectOnInstanceType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <InstanceType>k__BackingField;
    public bool CanReflectOnInstanceType { get; public set; }
    public Type InstanceType { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_CanReflectOnInstanceType();
    [CompilerGeneratedAttribute]
public void set_CanReflectOnInstanceType(bool value);
    [CompilerGeneratedAttribute]
public Type get_InstanceType();
    [CompilerGeneratedAttribute]
public void set_InstanceType(Type value);
}
internal enum Microsoft.Data.OData.Query.Metadata.ODataServiceOperationResultKind : Enum {
    public int value__;
    public static ODataServiceOperationResultKind DirectValue;
    public static ODataServiceOperationResultKind Enumeration;
    public static ODataServiceOperationResultKind QueryWithMultipleResults;
    public static ODataServiceOperationResultKind QueryWithSingleResult;
    public static ODataServiceOperationResultKind Void;
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Query.Metadata.UriEdmHelpers : object {
    public static IEdmSchemaType FindTypeFromModel(IEdmModel model, string qualifiedName);
    public static IEdmTypeReference FindCollectionTypeFromModel(IEdmModel model, string qualifiedName);
    public static IEdmTypeReference GetFunctionReturnType(IEdmFunctionImport serviceOperation);
    public static IEdmEntityType GetEntitySetElementType(IEdmEntitySet entitySet);
    public static IEdmTypeReference GetOperationParameterType(IEdmFunctionParameter serviceOperationParameter);
    public static void CheckRelatedTo(IEdmType parentType, IEdmType childType);
    public static IEdmNavigationProperty GetNavigationPropertyFromExpandPath(ODataPath path);
    public static IEdmType GetMostDerivedTypeFromPath(ODataPath path, IEdmType startingType);
    public static bool TryGetEntityContainer(string containerIdentifier, IEdmModel model, IEdmEntityContainer& entityContainer);
    [ExtensionAttribute]
public static bool IsEntityCollection(IEdmTypeReference type);
    [ExtensionAttribute]
public static bool AllHaveEqualReturnTypeAndAttributes(IList`1<IEdmFunctionImport> functionImports);
    public static bool IsBindingTypeValid(IEdmType bindingType);
}
internal class Microsoft.Data.OData.Query.MetadataBinder : object {
    private BindingState bindingState;
    internal BindingState BindingState { get; private set; }
    internal MetadataBinder(BindingState initialState);
    internal BindingState get_BindingState();
    private void set_BindingState(BindingState value);
    public static Nullable`1<long> ProcessSkip(Nullable`1<long> skip);
    public static Nullable`1<long> ProcessTop(Nullable`1<long> top);
    public static List`1<QueryNode> ProcessQueryOptions(BindingState bindingState, QueryTokenVisitor bindMethod);
    protected internal QueryNode Bind(QueryToken token);
    protected virtual QueryNode BindFunctionParameter(FunctionParameterToken token);
    protected virtual QueryNode BindInnerPathSegment(InnerPathToken token);
    protected virtual SingleValueNode BindRangeVariable(RangeVariableToken rangeVariableToken);
    protected virtual QueryNode BindLiteral(LiteralToken literalToken);
    protected virtual QueryNode BindBinaryOperator(BinaryOperatorToken binaryOperatorToken);
    protected virtual QueryNode BindUnaryOperator(UnaryOperatorToken unaryOperatorToken);
    protected virtual QueryNode BindCast(DottedIdentifierToken dottedIdentifierToken);
    protected virtual QueryNode BindAnyAll(LambdaToken lambdaToken);
    protected virtual QueryNode BindEndPath(EndPathToken endPathToken);
    protected virtual QueryNode BindFunctionCall(FunctionCallToken functionCallToken);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Query.MetadataBindingUtils : object {
    internal static SingleValueNode ConvertToTypeIfNeeded(SingleValueNode source, IEdmTypeReference targetTypeReference);
    [ExtensionAttribute]
internal static IEdmType GetEdmType(QueryNode segment);
    [ExtensionAttribute]
internal static IEdmTypeReference GetEdmTypeReference(QueryNode segment);
}
internal class Microsoft.Data.OData.Query.NamedValue : object {
    private string name;
    private LiteralToken value;
    public string Name { get; }
    public LiteralToken Value { get; }
    public NamedValue(string name, LiteralToken value);
    public string get_Name();
    public LiteralToken get_Value();
}
internal static class Microsoft.Data.OData.Query.NodeFactory : object {
    internal static RangeVariable CreateImplicitRangeVariable(ODataPath path);
    internal static RangeVariable CreateImplicitRangeVariable(IEdmTypeReference elementType, IEdmEntitySet entitySet);
    internal static SingleValueNode CreateRangeVariableReferenceNode(RangeVariable rangeVariable);
    internal static RangeVariable CreateParameterNode(string parameter, CollectionNode nodeToIterateOver);
    internal static LambdaNode CreateLambdaNode(BindingState state, CollectionNode parent, SingleValueNode lambdaExpression, RangeVariable newRangeVariable, QueryTokenKind queryTokenKind);
}
internal class Microsoft.Data.OData.Query.NonOptionSelectExpandTermParser : SelectExpandTermParser {
    public NonOptionSelectExpandTermParser(string clauseToParse, int maxDepth);
    internal virtual ExpandTermToken BuildExpandTermToken(bool isInnerTerm, PathSegmentToken pathToken);
    internal virtual bool IsNotEndOfTerm(bool isInnerTerm);
}
internal static class Microsoft.Data.OData.Query.ODataPathFactory : object {
    internal static ODataPath BindPath(ICollection`1<string> segments, ODataUriParserConfiguration configuration);
}
internal class Microsoft.Data.OData.Query.ODataPathParser : object {
    internal static Regex ContentIdRegex;
    private Queue`1<string> segmentQueue;
    private List`1<ODataPathSegment> parsedSegments;
    private ODataUriParserConfiguration configuration;
    private bool nextSegmentMustReferToMetadata;
    [CompilerGeneratedAttribute]
private static Func`2<FunctionParameterToken, string> CS$<>9__CachedAnonymousMethodDelegate1;
    internal ODataPathParser(ODataUriParserConfiguration configuration);
    private static ODataPathParser();
    internal static void ExtractSegmentIdentifierAndParenthesisExpression(string segmentText, String& identifier, String& parenthesisExpression);
    internal IList`1<ODataPathSegment> ParsePath(ICollection`1<string> segments);
    private static bool TryBindingParametersAndMatchingOperation(string identifier, string parenthesisExpression, IEdmType bindingType, ODataUriParserConfiguration configuration, ICollection`1& parsedParameters, IEdmFunctionImport& matchingFunctionImport);
    private static RequestTargetKind TargetKindFromType(IEdmType type);
    private static void CheckSingleResult(bool isSingleResult, string identifier);
    private bool TryGetNextSegmentText(String& segmentText);
    private bool TryGetNextSegmentText(bool previousSegmentWasEscapeMarker, String& segmentText);
    private bool TryHandleAsKeySegment(string segmentText);
    private void ThrowIfMustBeLeafSegment(ODataPathSegment previous);
    private bool TryCreateCountSegment(string segmentText);
    private bool TryCreateLinksSegment(string text);
    private void TryBindKeyFromParentheses(string parenthesesSection);
    private bool TryCreateValueSegment(string text);
    private void CreateOpenPropertySegment(ODataPathSegment previous, string identifier, string parenthesisExpression);
    private void CreateNamedStreamSegment(ODataPathSegment previous, IEdmProperty streamProperty);
    private void CreateFirstSegment(string segmentText);
    private bool TryCreateSegmentForServiceOperation(string identifier, string queryPortion);
    private bool TryCreateSegmentForOperation(ODataPathSegment previousSegment, string identifier, string parenthesisExpression);
    private void CreateNextSegment(string text);
    private bool TryBindProperty(string identifier, IEdmProperty& projectedProperty);
    private bool TryCreateTypeNameSegment(ODataPathSegment previous, string identifier, string parenthesisExpression);
    private void CreatePropertySegment(ODataPathSegment previous, IEdmProperty property, string queryPortion);
    [CompilerGeneratedAttribute]
private static string <TryBindingParametersAndMatchingOperation>b__0(FunctionParameterToken k);
    [CompilerGeneratedAttribute]
private bool <TryCreateSegmentForServiceOperation>b__4(IEdmFunctionImport f);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Query.ODataQueryUtils : object {
    [ExtensionAttribute]
public static bool GetCanReflectOnInstanceTypeProperty(IEdmProperty property, IEdmModel model);
    [ExtensionAttribute]
public static void SetCanReflectOnInstanceTypeProperty(IEdmProperty property, IEdmModel model, bool canReflect);
    [ExtensionAttribute]
public static Nullable`1<ODataServiceOperationResultKind> GetServiceOperationResultKind(IEdmFunctionImport serviceOperation, IEdmModel model);
    [ExtensionAttribute]
public static void SetServiceOperationResultKind(IEdmFunctionImport serviceOperation, IEdmModel model, ODataServiceOperationResultKind resultKind);
    [ExtensionAttribute]
public static IEdmFunctionImport ResolveServiceOperation(IEdmModel model, string operationName);
    [ExtensionAttribute]
public static IEdmFunctionImport TryResolveServiceOperation(IEdmModel model, string operationName);
    [ExtensionAttribute]
public static Type GetInstanceType(IEdmTypeReference typeReference, IEdmModel model);
    [ExtensionAttribute]
public static Type GetInstanceType(IEdmType type, IEdmModel model);
    [ExtensionAttribute]
public static void SetInstanceType(IEdmType type, IEdmModel model, Type instanceType);
    [ExtensionAttribute]
public static bool GetCanReflectOnInstanceType(IEdmTypeReference typeReference, IEdmModel model);
    [ExtensionAttribute]
public static void SetCanReflectOnInstanceType(IEdmTypeReference typeReference, IEdmModel model, bool canReflect);
    [ExtensionAttribute]
public static void SetCanReflectOnInstanceType(IEdmType type, IEdmModel model, bool canReflect);
    [ExtensionAttribute]
public static IEdmEntitySet ResolveEntitySet(IEdmModel model, string entitySetName);
    [ExtensionAttribute]
public static IEdmEntitySet TryResolveEntitySet(IEdmModel model, string entitySetName);
    [ExtensionAttribute]
internal static bool IsServiceOperation(IEdmModel model, IEdmFunctionImport functionImport);
    [ExtensionAttribute]
internal static bool IsAction(IEdmModel model, IEdmFunctionImport functionImport);
}
[DebuggerDisplayAttribute("{Message}")]
public class Microsoft.Data.OData.Query.ODataUnrecognizedPathException : ODataException {
    public ODataUnrecognizedPathException(string message);
    public ODataUnrecognizedPathException(string message, Exception innerException);
}
internal class Microsoft.Data.OData.Query.ODataUri : object {
    private ODataPath path;
    private IEnumerable`1<QueryNode> customQueryOptions;
    private SelectExpandClause selectAndExpand;
    private FilterClause filter;
    private OrderByClause orderBy;
    private Nullable`1<long> skip;
    private Nullable`1<long> top;
    private Nullable`1<InlineCountKind> inlineCount;
    public ODataPath Path { get; }
    public IEnumerable`1<QueryNode> CustomQueryOptions { get; }
    public SelectExpandClause SelectAndExpand { get; }
    public FilterClause Filter { get; }
    public OrderByClause OrderBy { get; }
    public Nullable`1<long> Skip { get; }
    public Nullable`1<long> Top { get; }
    public Nullable`1<InlineCountKind> InlineCount { get; }
    public ODataUri(ODataPath path, IEnumerable`1<QueryNode> customQueryOptions, SelectExpandClause selectAndExpand, FilterClause filter, OrderByClause orderby, Nullable`1<long> skip, Nullable`1<long> top, Nullable`1<InlineCountKind> inlineCount);
    public ODataPath get_Path();
    public IEnumerable`1<QueryNode> get_CustomQueryOptions();
    public SelectExpandClause get_SelectAndExpand();
    public FilterClause get_Filter();
    public OrderByClause get_OrderBy();
    public Nullable`1<long> get_Skip();
    public Nullable`1<long> get_Top();
    public Nullable`1<InlineCountKind> get_InlineCount();
}
internal class Microsoft.Data.OData.Query.ODataUriBuilder : object {
    private SyntacticTree query;
    private StringBuilder builder;
    private ODataUriBuilder(SyntacticTree query);
    public static Uri CreateUri(Uri baseUri, SyntacticTree queryDescriptor);
    public static string GetUriRepresentation(object clrLiteral);
    public void WriteQueryDescriptor(SyntacticTree queryDescriptor);
    internal void Append(string text);
    internal void WriteQuery(QueryToken queryPart);
    private static void WriteClrLiteral(StringBuilder builder, object clrLiteral);
    private string Build();
    private void WriteBinary(BinaryOperatorToken binary);
    private void WriteFunctionCall(FunctionCallToken functionToken);
    private void WritePath(IEnumerable`1<string> path);
    private void WriteLiteral(LiteralToken literal);
    private void WriteOrderBys(IEnumerable`1<OrderByToken> orderBys);
    private void WriteOrderBy(OrderByToken orderBy);
    private void WritePathSegment(PathSegmentToken segmentToken);
    private void WritePropertyAccess(EndPathToken endPath);
    private void WriteNavigationProperty(InnerPathToken navigation);
    private void WriteQueryOption(CustomQueryOptionToken queryOption);
    private void WriteQueryPrefixOrSeparator(bool writeQueryPrefix);
    private void WriteSelect(SelectToken selectToken);
    private void WriteExpand(ExpandToken expand);
    private void WriteStar(StarToken star);
    private void WriteUnary(UnaryOperatorToken unary);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Query.ODataUriBuilderUtils : object {
    internal static string IntegerFormat;
    internal static string FloatFormat;
    internal static string BinaryFormat;
    internal static string DoubleFormat;
    internal static string DateTimeFormat;
    internal static string DateTimeOffsetFormat;
    internal static NumberFormatInfo DecimalFormatInfo;
    internal static NumberFormatInfo DoubleFormatInfo;
    private static ODataUriBuilderUtils();
    internal static string Escape(string text);
    [ExtensionAttribute]
internal static string ToText(InlineCountKind inlineCount);
    internal static void NotSupportedQueryTokenKind(QueryTokenKind queryTokenKind);
    internal static void NotSupported(Type type);
}
internal static class Microsoft.Data.OData.Query.ODataUriConversionUtils : object {
    internal static string ConvertToUriPrimitiveLiteral(object value, ODataVersion version);
    internal static object ConvertFromComplexOrCollectionValue(string value, ODataVersion version, IEdmModel model, IEdmTypeReference typeReference);
    internal static object VerifyAndCoerceUriPrimitiveLiteral(object primitiveValue, IEdmModel model, IEdmTypeReference expectedTypeReference, ODataVersion version);
    internal static string ConvertToUriComplexLiteral(ODataComplexValue complexValue, IEdmModel model, ODataVersion version, ODataFormat format);
    internal static string ConvertToUriNullValue(ODataUriNullValue nullValue);
    internal static string ConvertToUriCollectionLiteral(ODataCollectionValue collectionValue, IEdmModel model, ODataVersion version, ODataFormat format);
    private static void WriteJsonVerboseLiteral(IEdmModel model, ODataMessageWriterSettings messageWriterSettings, TextWriter textWriter, Action`1<ODataVerboseJsonPropertyAndValueSerializer> writeValue);
    private static void WriteJsonLightLiteral(IEdmModel model, ODataMessageWriterSettings messageWriterSettings, TextWriter textWriter, Action`1<ODataJsonLightValueSerializer> writeValue);
    private static object CoerceNumericType(object primitiveValue, IEdmPrimitiveType targetEdmType);
}
public class Microsoft.Data.OData.Query.ODataUriNullValue : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    public string TypeName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
}
public class Microsoft.Data.OData.Query.ODataUriParser : object {
    private ODataUriParserConfiguration configuration;
    public ODataUriParserSettings Settings { get; }
    public IEdmModel Model { get; }
    public Uri ServiceRoot { get; }
    public ODataUrlConventions UrlConventions { get; public set; }
    public Func`2<string, BatchReferenceSegment> BatchReferenceCallback { get; public set; }
    public Func`2<string, string> FunctionParameterAliasCallback { get; public set; }
    public ODataUriParser(IEdmModel model, Uri serviceRoot);
    public ODataUriParserSettings get_Settings();
    public IEdmModel get_Model();
    public Uri get_ServiceRoot();
    public ODataUrlConventions get_UrlConventions();
    public void set_UrlConventions(ODataUrlConventions value);
    public Func`2<string, BatchReferenceSegment> get_BatchReferenceCallback();
    public void set_BatchReferenceCallback(Func`2<string, BatchReferenceSegment> value);
    public Func`2<string, string> get_FunctionParameterAliasCallback();
    public void set_FunctionParameterAliasCallback(Func`2<string, string> value);
    public static FilterClause ParseFilter(string filter, IEdmModel model, IEdmType elementType);
    public static FilterClause ParseFilter(string filter, IEdmModel model, IEdmType elementType, IEdmEntitySet entitySet);
    public static OrderByClause ParseOrderBy(string orderBy, IEdmModel model, IEdmType elementType);
    public static OrderByClause ParseOrderBy(string orderBy, IEdmModel model, IEdmType elementType, IEdmEntitySet entitySet);
    public FilterClause ParseFilter(string filter, IEdmType elementType, IEdmEntitySet entitySet);
    public OrderByClause ParseOrderBy(string orderBy, IEdmType elementType, IEdmEntitySet entitySet);
    public ODataPath ParsePath(Uri pathUri);
    public SelectExpandClause ParseSelectAndExpand(string select, string expand, IEdmEntityType elementType, IEdmEntitySet entitySet);
    internal ODataUri ParseUri(Uri fullUri);
    internal InlineCountKind ParseInlineCount(string inlineCount);
    private ODataUri ParseUriImplementation(Uri fullUri);
    private FilterClause ParseFilterImplementation(string filter, IEdmType elementType, IEdmEntitySet entitySet);
    private OrderByClause ParseOrderByImplementation(string orderBy, IEdmType elementType, IEdmEntitySet entitySet);
    private SelectExpandClause ParseSelectAndExpandImplementation(string select, string expand, IEdmEntityType elementType, IEdmEntitySet entitySet);
    private InlineCountKind ParseInlineCountImplementation(string inlineCount);
}
internal class Microsoft.Data.OData.Query.ODataUriParserConfiguration : object {
    private IEdmModel model;
    private Uri serviceRoot;
    private ODataUrlConventions urlConventions;
    [CompilerGeneratedAttribute]
private ODataUriParserSettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, BatchReferenceSegment> <BatchReferenceCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, string> <FunctionParameterAliasCallback>k__BackingField;
    public ODataUriParserSettings Settings { get; private set; }
    public IEdmModel Model { get; }
    public Uri ServiceRoot { get; }
    public ODataUrlConventions UrlConventions { get; public set; }
    public Func`2<string, BatchReferenceSegment> BatchReferenceCallback { get; public set; }
    public Func`2<string, string> FunctionParameterAliasCallback { get; public set; }
    public ODataUriParserConfiguration(IEdmModel model, Uri serviceRoot);
    [CompilerGeneratedAttribute]
public ODataUriParserSettings get_Settings();
    [CompilerGeneratedAttribute]
private void set_Settings(ODataUriParserSettings value);
    public IEdmModel get_Model();
    public Uri get_ServiceRoot();
    public ODataUrlConventions get_UrlConventions();
    public void set_UrlConventions(ODataUrlConventions value);
    [CompilerGeneratedAttribute]
public Func`2<string, BatchReferenceSegment> get_BatchReferenceCallback();
    [CompilerGeneratedAttribute]
public void set_BatchReferenceCallback(Func`2<string, BatchReferenceSegment> value);
    [CompilerGeneratedAttribute]
public Func`2<string, string> get_FunctionParameterAliasCallback();
    [CompilerGeneratedAttribute]
public void set_FunctionParameterAliasCallback(Func`2<string, string> value);
}
public class Microsoft.Data.OData.Query.ODataUriParserSettings : object {
    internal static int DefaultFilterLimit;
    internal static int DefaultOrderByLimit;
    internal static int DefaultSelectExpandLimit;
    internal static int DefaultPathLimit;
    private int filterLimit;
    private int orderByLimit;
    private int pathLimit;
    private int selectExpandLimit;
    private bool supportExpandOptions;
    private bool useWcfDataServicesServerBehavior;
    private int maxExpandDepth;
    private int maxExpandCount;
    public int MaximumExpansionDepth { get; public set; }
    public int MaximumExpansionCount { get; public set; }
    internal int SelectExpandLimit { get; internal set; }
    internal bool UseWcfDataServicesServerBehavior { get; internal set; }
    internal bool SupportExpandOptions { get; internal set; }
    internal int FilterLimit { get; internal set; }
    internal int OrderByLimit { get; internal set; }
    internal int PathLimit { get; internal set; }
    public int get_MaximumExpansionDepth();
    public void set_MaximumExpansionDepth(int value);
    public int get_MaximumExpansionCount();
    public void set_MaximumExpansionCount(int value);
    internal int get_SelectExpandLimit();
    internal void set_SelectExpandLimit(int value);
    internal bool get_UseWcfDataServicesServerBehavior();
    internal void set_UseWcfDataServicesServerBehavior(bool value);
    internal bool get_SupportExpandOptions();
    internal void set_SupportExpandOptions(bool value);
    internal int get_FilterLimit();
    internal void set_FilterLimit(int value);
    internal int get_OrderByLimit();
    internal void set_OrderByLimit(int value);
    internal int get_PathLimit();
    internal void set_PathLimit(int value);
    public void EnableWcfDataServicesServerBehavior();
}
internal class Microsoft.Data.OData.Query.ODataUriSemanticBinder : object {
    private BindingState bindingState;
    private QueryTokenVisitor bindMethod;
    public ODataUriSemanticBinder(BindingState bindingState, QueryTokenVisitor bindMethod);
    public ODataUri BindTree(SyntacticTree syntax);
    public static Nullable`1<InlineCountKind> BindInlineCount(SyntacticTree syntax, ODataPath path);
    public static SelectExpandClause BindSelectExpand(SyntacticTree syntax, ODataPath path, ODataUriParserConfiguration configuration);
    public static Nullable`1<long> BindTop(SyntacticTree syntax, RangeVariable rangeVariable, ODataPath path);
    public static Nullable`1<long> BindSkip(SyntacticTree syntax, RangeVariable rangeVariable, ODataPath path);
    public OrderByClause BindOrderBy(SyntacticTree syntax, RangeVariable rangeVariable, ODataPath path);
    public FilterClause BindFilter(SyntacticTree syntax, RangeVariable rangeVariable);
}
public static class Microsoft.Data.OData.Query.ODataUriUtils : object {
    public static object ConvertFromUriLiteral(string value, ODataVersion version);
    public static object ConvertFromUriLiteral(string value, ODataVersion version, IEdmModel model, IEdmTypeReference typeReference);
    public static string ConvertToUriLiteral(object value, ODataVersion version);
    public static string ConvertToUriLiteral(object value, ODataVersion version, IEdmModel model);
    public static string ConvertToUriLiteral(object value, ODataVersion version, IEdmModel model, ODataFormat format);
}
public class Microsoft.Data.OData.Query.ODataUrlConventions : object {
    private static ODataUrlConventions DefaultInstance;
    private static ODataUrlConventions KeyAsSegmentInstance;
    private UrlConvention urlConvention;
    public static ODataUrlConventions Default { get; }
    public static ODataUrlConventions KeyAsSegment { get; }
    internal UrlConvention UrlConvention { get; }
    private ODataUrlConventions(UrlConvention urlConvention);
    private static ODataUrlConventions();
    public static ODataUrlConventions get_Default();
    public static ODataUrlConventions get_KeyAsSegment();
    internal UrlConvention get_UrlConvention();
}
internal static class Microsoft.Data.OData.Query.OpenTypeMethods : object {
    internal static MethodInfo AddMethodInfo;
    internal static MethodInfo AndAlsoMethodInfo;
    internal static MethodInfo ConvertMethodInfo;
    internal static MethodInfo DivideMethodInfo;
    internal static MethodInfo EqualMethodInfo;
    internal static MethodInfo GreaterThanMethodInfo;
    internal static MethodInfo GreaterThanOrEqualMethodInfo;
    internal static MethodInfo LessThanMethodInfo;
    internal static MethodInfo LessThanOrEqualMethodInfo;
    internal static MethodInfo ModuloMethodInfo;
    internal static MethodInfo MultiplyMethodInfo;
    internal static MethodInfo NegateMethodInfo;
    internal static MethodInfo NotMethodInfo;
    internal static MethodInfo NotEqualMethodInfo;
    internal static MethodInfo OrElseMethodInfo;
    internal static MethodInfo SubtractMethodInfo;
    internal static MethodInfo TypeIsMethodInfo;
    internal static MethodInfo GetValueOpenPropertyMethodInfo;
    private static OpenTypeMethods();
    public static object GetValue(object value, string propertyName);
    public static object Add(object left, object right);
    public static object AndAlso(object left, object right);
    public static object Divide(object left, object right);
    public static object Equal(object left, object right);
    public static object GreaterThan(object left, object right);
    public static object GreaterThanOrEqual(object left, object right);
    public static object LessThan(object left, object right);
    public static object LessThanOrEqual(object left, object right);
    public static object Modulo(object left, object right);
    public static object Multiply(object left, object right);
    public static object NotEqual(object left, object right);
    public static object OrElse(object left, object right);
    public static object Subtract(object left, object right);
    public static object Negate(object value);
    public static object Not(object value);
    public static object Convert(object value, IEdmTypeReference typeReference);
    public static object TypeIs(object value, IEdmTypeReference typeReference);
    public static object Concat(object first, object second);
    public static object EndsWith(object targetString, object substring);
    public static object IndexOf(object targetString, object substring);
    public static object Length(object value);
    public static object Replace(object targetString, object substring, object newString);
    public static object StartsWith(object targetString, object substring);
    public static object Substring(object targetString, object startIndex);
    public static object Substring(object targetString, object startIndex, object length);
    public static object SubstringOf(object substring, object targetString);
    public static object ToLower(object targetString);
    public static object ToUpper(object targetString);
    public static object Trim(object targetString);
    public static object Year(object dateTime);
    public static object Month(object dateTime);
    public static object Day(object dateTime);
    public static object Hour(object dateTime);
    public static object Minute(object dateTime);
    public static object Second(object dateTime);
    public static object Ceiling(object value);
    public static object Floor(object value);
    public static object Round(object value);
    internal static Expression AddExpression(Expression left, Expression right);
    internal static Expression AndAlsoExpression(Expression left, Expression right);
    internal static Expression DivideExpression(Expression left, Expression right);
    internal static Expression EqualExpression(Expression left, Expression right);
    internal static Expression GreaterThanExpression(Expression left, Expression right);
    internal static Expression GreaterThanOrEqualExpression(Expression left, Expression right);
    internal static Expression LessThanExpression(Expression left, Expression right);
    internal static Expression LessThanOrEqualExpression(Expression left, Expression right);
    internal static Expression ModuloExpression(Expression left, Expression right);
    internal static Expression MultiplyExpression(Expression left, Expression right);
    internal static Expression OrElseExpression(Expression left, Expression right);
    internal static Expression NotEqualExpression(Expression left, Expression right);
    internal static Expression SubtractExpression(Expression left, Expression right);
    internal static Expression NegateExpression(Expression expression);
    internal static Expression NotExpression(Expression expression);
    private static Expression ExpressionAsObject(Expression expression);
}
internal class Microsoft.Data.OData.Query.OrderByBinder : object {
    private QueryTokenVisitor bindMethod;
    internal OrderByBinder(QueryTokenVisitor bindMethod);
    internal OrderByClause BindOrderBy(BindingState state, IEnumerable`1<OrderByToken> orderByTokens);
    private OrderByClause ProcessSingleOrderBy(BindingState state, OrderByClause thenBy, OrderByToken orderByToken);
}
public enum Microsoft.Data.OData.Query.OrderByDirection : Enum {
    public int value__;
    public static OrderByDirection Ascending;
    public static OrderByDirection Descending;
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Query.PathParserModelUtils : object {
    [ExtensionAttribute]
internal static bool IsOpenType(IEdmType edmType);
    [ExtensionAttribute]
internal static bool IsEntityOrEntityCollectionType(IEdmType edmType);
    [ExtensionAttribute]
internal static bool IsEntityOrEntityCollectionType(IEdmType edmType, IEdmEntityType& entityType);
    [ExtensionAttribute]
internal static IEdmEntitySet GetTargetEntitySet(IEdmFunctionImport functionImport, IEdmEntitySet sourceEntitySet, IEdmModel model);
    private static void ThrowIfOpenComplexType(IEdmType edmType);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Query.PropertyInfoExtensionMethods : object {
    [ExtensionAttribute]
internal static PropertyInfo GetPropertyInfo(IEdmStructuredTypeReference typeReference, IEdmProperty property, IEdmModel model);
}
internal class Microsoft.Data.OData.Query.PropertyInfoTypeAnnotation : object {
    private Dictionary`2<IEdmProperty, PropertyInfo> propertyInfosDeclaredOnThisType;
    internal static PropertyInfoTypeAnnotation GetPropertyInfoTypeAnnotation(IEdmStructuredType structuredType, IEdmModel model);
    internal PropertyInfo GetPropertyInfo(IEdmStructuredType structuredType, IEdmProperty property, IEdmModel model);
}
public enum Microsoft.Data.OData.Query.QueryNodeKind : Enum {
    public int value__;
    public static QueryNodeKind None;
    public static QueryNodeKind Constant;
    public static QueryNodeKind Convert;
    public static QueryNodeKind NonentityRangeVariableReference;
    public static QueryNodeKind BinaryOperator;
    public static QueryNodeKind UnaryOperator;
    public static QueryNodeKind SingleValuePropertyAccess;
    public static QueryNodeKind CollectionPropertyAccess;
    public static QueryNodeKind SingleValueFunctionCall;
    public static QueryNodeKind Any;
    public static QueryNodeKind CollectionNavigationNode;
    public static QueryNodeKind SingleNavigationNode;
    public static QueryNodeKind SingleValueOpenPropertyAccess;
    public static QueryNodeKind SingleEntityCast;
    public static QueryNodeKind All;
    public static QueryNodeKind EntityCollectionCast;
    public static QueryNodeKind EntityRangeVariableReference;
    public static QueryNodeKind SingleEntityFunctionCall;
    public static QueryNodeKind CollectionFunctionCall;
    public static QueryNodeKind EntityCollectionFunctionCall;
    public static QueryNodeKind NamedFunctionParameter;
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Query.QueryNodeUtils : object {
    [ExtensionAttribute]
internal static EntityCollectionNode AsEntityCollectionNode(QueryNode query);
    [ExtensionAttribute]
internal static CollectionNode AsCollectionNode(QueryNode query);
    internal static IEdmPrimitiveTypeReference GetBinaryOperatorResultType(IEdmPrimitiveTypeReference typeReference, BinaryOperatorKind operatorKind);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Query.QueryOptionUtils : object {
    [ExtensionAttribute]
internal static string GetQueryOptionValueAndRemove(List`1<CustomQueryOptionToken> queryOptions, string queryOptionName);
}
internal enum Microsoft.Data.OData.Query.QueryTokenKind : Enum {
    public int value__;
    public static QueryTokenKind BinaryOperator;
    public static QueryTokenKind UnaryOperator;
    public static QueryTokenKind Literal;
    public static QueryTokenKind FunctionCall;
    public static QueryTokenKind EndPath;
    public static QueryTokenKind OrderBy;
    public static QueryTokenKind CustomQueryOption;
    public static QueryTokenKind Select;
    public static QueryTokenKind Star;
    public static QueryTokenKind Expand;
    public static QueryTokenKind TypeSegment;
    public static QueryTokenKind Any;
    public static QueryTokenKind InnerPath;
    public static QueryTokenKind DottedIdentifier;
    public static QueryTokenKind RangeVariable;
    public static QueryTokenKind All;
    public static QueryTokenKind ExpandTerm;
    public static QueryTokenKind FunctionParameter;
    public static QueryTokenKind FunctionParameterAlias;
    public static QueryTokenKind RawFunctionParameterValue;
}
internal static class Microsoft.Data.OData.Query.QueryTokenUtils : object {
    internal static Nullable`1<InlineCountKind> ParseInlineCountKind(string inlineCount);
    internal static Nullable`1<KeywordKind> ParseKeywordKind(string segment);
    internal static string GetNameFromKeywordKind(KeywordKind keyword);
}
internal class Microsoft.Data.OData.Query.RangeVariableBinder : object {
    internal static SingleValueNode BindRangeVariableToken(RangeVariableToken rangeVariableToken, BindingState state);
}
internal class Microsoft.Data.OData.Query.ReadOnlyEnumerableForUriParser`1 : object {
    private IEnumerable`1<T> sourceEnumerable;
    internal ReadOnlyEnumerableForUriParser`1(IEnumerable`1<T> sourceEnumerable);
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal enum Microsoft.Data.OData.Query.RequestTargetKind : Enum {
    public int value__;
    public static RequestTargetKind Nothing;
    public static RequestTargetKind ServiceDirectory;
    public static RequestTargetKind Resource;
    public static RequestTargetKind ComplexObject;
    public static RequestTargetKind Primitive;
    public static RequestTargetKind PrimitiveValue;
    public static RequestTargetKind Metadata;
    public static RequestTargetKind VoidOperation;
    public static RequestTargetKind Batch;
    public static RequestTargetKind OpenProperty;
    public static RequestTargetKind OpenPropertyValue;
    public static RequestTargetKind MediaResource;
    public static RequestTargetKind Collection;
}
internal class Microsoft.Data.OData.Query.SegmentArgumentParser : object {
    private static SegmentArgumentParser Empty;
    private Dictionary`2<string, string> namedValues;
    private List`1<string> positionalValues;
    private bool keysAsSegments;
    internal bool AreValuesNamed { get; }
    internal bool IsEmpty { get; }
    internal IDictionary`2<string, string> NamedValues { get; }
    internal IList`1<string> PositionalValues { get; }
    internal int ValueCount { get; }
    private SegmentArgumentParser(Dictionary`2<string, string> namedValues, List`1<string> positionalValues, bool keysAsSegments);
    private static SegmentArgumentParser();
    internal bool get_AreValuesNamed();
    internal bool get_IsEmpty();
    internal IDictionary`2<string, string> get_NamedValues();
    internal IList`1<string> get_PositionalValues();
    internal int get_ValueCount();
    internal static bool TryParseKeysFromUri(string text, SegmentArgumentParser& instance);
    internal static SegmentArgumentParser FromSegment(string segmentText);
    internal static bool TryParseNullableTokens(string text, SegmentArgumentParser& instance);
    internal bool TryConvertValues(IList`1<IEdmStructuralProperty> keyProperties, IEnumerable`1& keyPairs);
    private bool TryConvertValue(IEdmPrimitiveTypeReference primitiveType, string valueText, Object& convertedValue);
    private static bool TryParseFromUri(string text, bool allowNamedValues, bool allowNull, SegmentArgumentParser& instance);
    private static void CreateIfNull(T& value);
}
internal static class Microsoft.Data.OData.Query.SegmentKeyHandler : object {
    internal static bool TryCreateKeySegmentFromParentheses(ODataPathSegment previous, string parenthesisExpression, ODataPathSegment& keySegment);
    internal static bool TryHandleSegmentAsKey(string segmentText, ODataPathSegment previous, UrlConvention urlConvention, KeySegment& keySegment);
    private static bool IsSystemSegment(string segmentText);
    private static KeySegment CreateKeySegment(ODataPathSegment segment, SegmentArgumentParser key);
}
internal static class Microsoft.Data.OData.Query.SelectExpandSemanticBinder : object {
    public static SelectExpandClause Parse(IEdmEntityType elementType, IEdmEntitySet entitySet, ExpandToken expandToken, SelectToken selectToken, ODataUriParserConfiguration configuration);
}
internal abstract class Microsoft.Data.OData.Query.SelectExpandTermParser : object {
    public ExpressionLexer Lexer;
    private bool isSelect;
    private int maxDepth;
    private int recursionDepth;
    public int MaxDepth { get; }
    protected SelectExpandTermParser(string clauseToParse, int maxDepth);
    public int get_MaxDepth();
    public sealed virtual SelectToken ParseSelect();
    public sealed virtual ExpandToken ParseExpand();
    public sealed virtual PathSegmentToken ParseSingleSelectTerm(bool isInnerTerm);
    public sealed virtual ExpandTermToken ParseSingleExpandTerm(bool isInnerTerm);
    internal abstract virtual ExpandTermToken BuildExpandTermToken(bool isInnerTerm, PathSegmentToken pathToken);
    internal abstract virtual bool IsNotEndOfTerm(bool isInnerTerm);
    private PathSegmentToken ParseSelectExpandProperty();
    private PathSegmentToken ParseNext(PathSegmentToken previousToken);
    private PathSegmentToken ParseSegment(PathSegmentToken parent);
    private void RecurseEnter();
    private void RecurseLeave();
}
internal static class Microsoft.Data.OData.Query.SelectExpandTermParserFactory : object {
    public static ISelectExpandTermParser Create(string clauseToParse, ODataUriParserSettings settings);
    public static ISelectExpandTermParser Create(string clauseToParse);
}
public class Microsoft.Data.OData.Query.SemanticAst.AllNode : LambdaNode {
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public AllNode(Collection`1<RangeVariable> rangeVariables);
    public AllNode(Collection`1<RangeVariable> rangeVariables, RangeVariable currentRangeVariable);
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SemanticAst.AllSelection : Selection {
    public static AllSelection Instance;
    private static AllSelection();
}
public class Microsoft.Data.OData.Query.SemanticAst.AnyNode : LambdaNode {
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public AnyNode(Collection`1<RangeVariable> parameters);
    public AnyNode(Collection`1<RangeVariable> parameters, RangeVariable currentRangeVariable);
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.Data.OData.Query.SemanticAst.BatchReferenceSegment : ODataPathSegment {
    private IEdmType edmType;
    private IEdmEntitySet entitySet;
    private string contentId;
    public IEdmType EdmType { get; }
    public IEdmEntitySet EntitySet { get; }
    public string ContentId { get; }
    public BatchReferenceSegment(string contentId, IEdmType edmType, IEdmEntitySet entitySet);
    public virtual IEdmType get_EdmType();
    public IEdmEntitySet get_EntitySet();
    public string get_ContentId();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.Data.OData.Query.SemanticAst.BatchSegment : ODataPathSegment {
    public static BatchSegment Instance;
    public IEdmType EdmType { get; }
    private static BatchSegment();
    public virtual IEdmType get_EdmType();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode : SingleValueNode {
    private BinaryOperatorKind operatorKind;
    private SingleValueNode left;
    private SingleValueNode right;
    private IEdmTypeReference typeReference;
    public BinaryOperatorKind OperatorKind { get; }
    public SingleValueNode Left { get; }
    public SingleValueNode Right { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public BinaryOperatorNode(BinaryOperatorKind operatorKind, SingleValueNode left, SingleValueNode right);
    public BinaryOperatorKind get_OperatorKind();
    public SingleValueNode get_Left();
    public SingleValueNode get_Right();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.Data.OData.Query.SemanticAst.CollectionFunctionCallNode : CollectionNode {
    private string name;
    private ReadOnlyCollection`1<IEdmFunctionImport> functionImports;
    private ReadOnlyCollection`1<QueryNode> parameters;
    private IEdmTypeReference itemType;
    private IEdmCollectionTypeReference returnedCollectionType;
    private QueryNode source;
    public string Name { get; }
    public IEnumerable`1<IEdmFunctionImport> FunctionImports { get; }
    public IEnumerable`1<QueryNode> Parameters { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    public QueryNode Source { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public CollectionFunctionCallNode(string name, IEnumerable`1<IEdmFunctionImport> functionImports, IEnumerable`1<QueryNode> parameters, IEdmCollectionTypeReference returnedCollectionType, QueryNode source);
    public string get_Name();
    public IEnumerable`1<IEdmFunctionImport> get_FunctionImports();
    public IEnumerable`1<QueryNode> get_Parameters();
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    public QueryNode get_Source();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.Data.OData.Query.SemanticAst.CollectionNavigationNode : EntityCollectionNode {
    private IEdmNavigationProperty navigationProperty;
    private IEdmEntityTypeReference edmEntityTypeReference;
    private IEdmCollectionTypeReference collectionTypeReference;
    private SingleValueNode source;
    private IEdmEntitySet entitySet;
    public SingleValueNode Source { get; }
    public EdmMultiplicity TargetMultiplicity { get; }
    public IEdmNavigationProperty NavigationProperty { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    public IEdmEntityTypeReference EntityItemType { get; }
    public IEdmEntitySet EntitySet { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public CollectionNavigationNode(IEdmNavigationProperty navigationProperty, SingleEntityNode source);
    public CollectionNavigationNode(IEdmNavigationProperty navigationProperty, IEdmEntitySet sourceSet);
    private CollectionNavigationNode(IEdmNavigationProperty navigationProperty);
    public SingleValueNode get_Source();
    public EdmMultiplicity get_TargetMultiplicity();
    public IEdmNavigationProperty get_NavigationProperty();
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    public virtual IEdmEntityTypeReference get_EntityItemType();
    public virtual IEdmEntitySet get_EntitySet();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public abstract class Microsoft.Data.OData.Query.SemanticAst.CollectionNode : QueryNode {
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    public QueryNodeKind Kind { get; }
    public abstract virtual IEdmTypeReference get_ItemType();
    public abstract virtual IEdmCollectionTypeReference get_CollectionType();
    public virtual QueryNodeKind get_Kind();
}
public class Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode : CollectionNode {
    private SingleValueNode source;
    private IEdmProperty property;
    private IEdmTypeReference itemType;
    private IEdmCollectionTypeReference collectionTypeReference;
    public SingleValueNode Source { get; }
    public IEdmProperty Property { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public CollectionPropertyAccessNode(SingleValueNode source, IEdmProperty property);
    public SingleValueNode get_Source();
    public IEdmProperty get_Property();
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.Data.OData.Query.SemanticAst.ConstantNode : SingleValueNode {
    private object constantValue;
    private IEdmTypeReference typeReference;
    [CompilerGeneratedAttribute]
private string <LiteralText>k__BackingField;
    public object Value { get; }
    public string LiteralText { get; private set; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public ConstantNode(object constantValue, string literalText);
    public ConstantNode(object constantValue);
    public object get_Value();
    [CompilerGeneratedAttribute]
public string get_LiteralText();
    [CompilerGeneratedAttribute]
private void set_LiteralText(string value);
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.Data.OData.Query.SemanticAst.ContainerQualifiedWildcardSelectItem : SelectItem {
    private IEdmEntityContainer container;
    public IEdmEntityContainer Container { get; }
    public ContainerQualifiedWildcardSelectItem(IEdmEntityContainer container);
    public IEdmEntityContainer get_Container();
}
public class Microsoft.Data.OData.Query.SemanticAst.ConvertNode : SingleValueNode {
    private SingleValueNode source;
    private IEdmTypeReference typeReference;
    public SingleValueNode Source { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public ConvertNode(SingleValueNode source, IEdmTypeReference typeReference);
    public SingleValueNode get_Source();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.Data.OData.Query.SemanticAst.CountSegment : ODataPathSegment {
    public static CountSegment Instance;
    public IEdmType EdmType { get; }
    private static CountSegment();
    public virtual IEdmType get_EdmType();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
internal class Microsoft.Data.OData.Query.SemanticAst.DetermineEntitySetTranslator : PathSegmentTranslator`1<IEdmEntitySet> {
    public virtual IEdmEntitySet Translate(NavigationPropertyLinkSegment segment);
    public virtual IEdmEntitySet Translate(TypeSegment segment);
    public virtual IEdmEntitySet Translate(NavigationPropertySegment segment);
    public virtual IEdmEntitySet Translate(EntitySetSegment segment);
    public virtual IEdmEntitySet Translate(KeySegment segment);
    public virtual IEdmEntitySet Translate(PropertySegment segment);
    public virtual IEdmEntitySet Translate(OperationSegment segment);
    public virtual IEdmEntitySet Translate(CountSegment segment);
    public virtual IEdmEntitySet Translate(OpenPropertySegment segment);
    public virtual IEdmEntitySet Translate(ValueSegment segment);
    public virtual IEdmEntitySet Translate(BatchSegment segment);
    public virtual IEdmEntitySet Translate(BatchReferenceSegment segment);
    public virtual IEdmEntitySet Translate(MetadataSegment segment);
}
public class Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode : EntityCollectionNode {
    private EntityCollectionNode source;
    private IEdmEntityTypeReference edmTypeReference;
    private IEdmCollectionTypeReference collectionTypeReference;
    private IEdmEntitySet entitySet;
    public EntityCollectionNode Source { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    public IEdmEntityTypeReference EntityItemType { get; }
    public IEdmEntitySet EntitySet { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public EntityCollectionCastNode(EntityCollectionNode source, IEdmEntityType entityType);
    public EntityCollectionNode get_Source();
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    public virtual IEdmEntityTypeReference get_EntityItemType();
    public virtual IEdmEntitySet get_EntitySet();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.Data.OData.Query.SemanticAst.EntityCollectionFunctionCallNode : EntityCollectionNode {
    private string name;
    private ReadOnlyCollection`1<IEdmFunctionImport> functionImports;
    private ReadOnlyCollection`1<QueryNode> parameters;
    private IEdmEntityTypeReference entityTypeReference;
    private IEdmCollectionTypeReference returnedCollectionTypeReference;
    private IEdmEntitySet entitySet;
    private QueryNode source;
    public string Name { get; }
    public IEnumerable`1<IEdmFunctionImport> FunctionImports { get; }
    public IEnumerable`1<QueryNode> Parameters { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    public IEdmEntityTypeReference EntityItemType { get; }
    public IEdmEntitySet EntitySet { get; }
    public QueryNode Source { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public EntityCollectionFunctionCallNode(string name, IEnumerable`1<IEdmFunctionImport> functionImports, IEnumerable`1<QueryNode> parameters, IEdmCollectionTypeReference returnedCollectionTypeReference, IEdmEntitySet entitySet, QueryNode source);
    public string get_Name();
    public IEnumerable`1<IEdmFunctionImport> get_FunctionImports();
    public IEnumerable`1<QueryNode> get_Parameters();
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    public virtual IEdmEntityTypeReference get_EntityItemType();
    public virtual IEdmEntitySet get_EntitySet();
    public QueryNode get_Source();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public abstract class Microsoft.Data.OData.Query.SemanticAst.EntityCollectionNode : CollectionNode {
    public IEdmEntityTypeReference EntityItemType { get; }
    public IEdmEntitySet EntitySet { get; }
    public abstract virtual IEdmEntityTypeReference get_EntityItemType();
    public abstract virtual IEdmEntitySet get_EntitySet();
}
public class Microsoft.Data.OData.Query.SemanticAst.EntityRangeVariable : RangeVariable {
    private string name;
    private EntityCollectionNode entityCollectionNode;
    private IEdmEntitySet entitySet;
    private IEdmEntityTypeReference entityTypeReference;
    public string Name { get; }
    public EntityCollectionNode EntityCollectionNode { get; }
    public IEdmEntitySet EntitySet { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmEntityTypeReference EntityTypeReference { get; }
    public int Kind { get; }
    public EntityRangeVariable(string name, IEdmEntityTypeReference entityType, EntityCollectionNode entityCollectionNode);
    public EntityRangeVariable(string name, IEdmEntityTypeReference entityType, IEdmEntitySet entitySet);
    public virtual string get_Name();
    public EntityCollectionNode get_EntityCollectionNode();
    public IEdmEntitySet get_EntitySet();
    public virtual IEdmTypeReference get_TypeReference();
    public IEdmEntityTypeReference get_EntityTypeReference();
    public virtual int get_Kind();
}
public class Microsoft.Data.OData.Query.SemanticAst.EntityRangeVariableReferenceNode : SingleEntityNode {
    private string name;
    private IEdmEntityTypeReference entityTypeReference;
    private EntityRangeVariable rangeVariable;
    private IEdmEntitySet entitySet;
    public string Name { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmEntityTypeReference EntityTypeReference { get; }
    public EntityRangeVariable RangeVariable { get; }
    public IEdmEntitySet EntitySet { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public EntityRangeVariableReferenceNode(string name, EntityRangeVariable rangeVariable);
    public string get_Name();
    public virtual IEdmTypeReference get_TypeReference();
    public virtual IEdmEntityTypeReference get_EntityTypeReference();
    public EntityRangeVariable get_RangeVariable();
    public virtual IEdmEntitySet get_EntitySet();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SemanticAst.EntitySetNode : EntityCollectionNode {
    private IEdmEntitySet entitySet;
    private IEdmEntityTypeReference entityType;
    private IEdmCollectionTypeReference collectionTypeReference;
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    public IEdmEntityTypeReference EntityItemType { get; }
    public IEdmEntitySet EntitySet { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public EntitySetNode(IEdmEntitySet entitySet);
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    public virtual IEdmEntityTypeReference get_EntityItemType();
    public virtual IEdmEntitySet get_EntitySet();
    internal virtual InternalQueryNodeKind get_InternalKind();
}
public class Microsoft.Data.OData.Query.SemanticAst.EntitySetSegment : ODataPathSegment {
    private IEdmEntitySet entitySet;
    private IEdmType type;
    public IEdmEntitySet EntitySet { get; }
    public IEdmType EdmType { get; }
    public EntitySetSegment(IEdmEntitySet entitySet);
    public IEdmEntitySet get_EntitySet();
    public virtual IEdmType get_EdmType();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.Data.OData.Query.SemanticAst.ExpandedNavigationSelectItem : SelectItem {
    private ODataExpandPath pathToNavigationProperty;
    private IEdmEntitySet entitySet;
    private FilterClause filterOption;
    private OrderByClause orderByOption;
    private Nullable`1<long> topOption;
    private Nullable`1<long> skipOption;
    private Nullable`1<InlineCountKind> inlineCountOption;
    private SelectExpandClause selectAndExpand;
    public ODataExpandPath PathToNavigationProperty { get; }
    public IEdmEntitySet EntitySet { get; }
    public SelectExpandClause SelectAndExpand { get; }
    internal FilterClause FilterOption { get; }
    internal OrderByClause OrderByOption { get; }
    internal Nullable`1<long> TopOption { get; }
    internal Nullable`1<long> SkipOption { get; }
    internal Nullable`1<InlineCountKind> InlineCountOption { get; }
    public ExpandedNavigationSelectItem(ODataExpandPath pathToNavigationProperty, IEdmEntitySet entitySet, SelectExpandClause selectExpandOption);
    internal ExpandedNavigationSelectItem(ODataExpandPath pathToNavigationProperty, IEdmEntitySet entitySet, FilterClause filterOption, OrderByClause orderByOption, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<InlineCountKind> inlineCountOption, SelectExpandClause selectAndExpand);
    public ODataExpandPath get_PathToNavigationProperty();
    public IEdmEntitySet get_EntitySet();
    public SelectExpandClause get_SelectAndExpand();
    internal FilterClause get_FilterOption();
    internal OrderByClause get_OrderByOption();
    internal Nullable`1<long> get_TopOption();
    internal Nullable`1<long> get_SkipOption();
    internal Nullable`1<InlineCountKind> get_InlineCountOption();
}
internal class Microsoft.Data.OData.Query.SemanticAst.Expansion : object {
    private IEnumerable`1<ExpandedNavigationSelectItem> expandItems;
    public IEnumerable`1<ExpandedNavigationSelectItem> ExpandItems { get; }
    public Expansion(IEnumerable`1<ExpandedNavigationSelectItem> expandItems);
    public IEnumerable`1<ExpandedNavigationSelectItem> get_ExpandItems();
}
internal class Microsoft.Data.OData.Query.SemanticAst.ExpansionsOnly : Selection {
    public static ExpansionsOnly Instance;
    private static ExpansionsOnly();
}
public class Microsoft.Data.OData.Query.SemanticAst.FilterClause : object {
    private SingleValueNode expression;
    private RangeVariable rangeVariable;
    public SingleValueNode Expression { get; }
    public RangeVariable RangeVariable { get; }
    public IEdmTypeReference ItemType { get; }
    public FilterClause(SingleValueNode expression, RangeVariable rangeVariable);
    public SingleValueNode get_Expression();
    public RangeVariable get_RangeVariable();
    public IEdmTypeReference get_ItemType();
}
internal class Microsoft.Data.OData.Query.SemanticAst.IsCollectionTranslator : PathSegmentTranslator`1<bool> {
    public virtual bool Translate(NavigationPropertySegment segment);
    public virtual bool Translate(EntitySetSegment segment);
    public virtual bool Translate(KeySegment segment);
    public virtual bool Translate(PropertySegment segment);
    public virtual bool Translate(OpenPropertySegment segment);
    public virtual bool Translate(CountSegment segment);
    public virtual bool Translate(NavigationPropertyLinkSegment segment);
    public virtual bool Translate(BatchSegment segment);
    public virtual bool Translate(BatchReferenceSegment segment);
    public virtual bool Translate(ValueSegment segment);
    public virtual bool Translate(MetadataSegment segment);
}
internal class Microsoft.Data.OData.Query.SemanticAst.KeyLookupNode : SingleEntityNode {
    private EntityCollectionNode source;
    private IEdmEntitySet entitySet;
    private IEdmEntityTypeReference entityTypeReference;
    private IEnumerable`1<KeyPropertyValue> keyPropertyValues;
    public EntityCollectionNode Source { get; }
    public IEnumerable`1<KeyPropertyValue> KeyPropertyValues { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmEntityTypeReference EntityTypeReference { get; }
    public IEdmEntitySet EntitySet { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public KeyLookupNode(EntityCollectionNode source, IEnumerable`1<KeyPropertyValue> keyPropertyValues);
    public EntityCollectionNode get_Source();
    public IEnumerable`1<KeyPropertyValue> get_KeyPropertyValues();
    public virtual IEdmTypeReference get_TypeReference();
    public virtual IEdmEntityTypeReference get_EntityTypeReference();
    public virtual IEdmEntitySet get_EntitySet();
    internal virtual InternalQueryNodeKind get_InternalKind();
}
public class Microsoft.Data.OData.Query.SemanticAst.KeySegment : ODataPathSegment {
    private ReadOnlyCollection`1<KeyValuePair`2<string, object>> keys;
    private IEdmEntityType edmType;
    private IEdmEntitySet entitySet;
    public IEnumerable`1<KeyValuePair`2<string, object>> Keys { get; }
    public IEdmType EdmType { get; }
    public IEdmEntitySet EntitySet { get; }
    public KeySegment(IEnumerable`1<KeyValuePair`2<string, object>> keys, IEdmEntityType edmType, IEdmEntitySet entitySet);
    public IEnumerable`1<KeyValuePair`2<string, object>> get_Keys();
    public virtual IEdmType get_EdmType();
    public IEdmEntitySet get_EntitySet();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public abstract class Microsoft.Data.OData.Query.SemanticAst.LambdaNode : SingleValueNode {
    private Collection`1<RangeVariable> rangeVariables;
    private RangeVariable currentRangeVariable;
    [CompilerGeneratedAttribute]
private SingleValueNode <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private CollectionNode <Source>k__BackingField;
    public Collection`1<RangeVariable> RangeVariables { get; }
    public RangeVariable CurrentRangeVariable { get; }
    public SingleValueNode Body { get; public set; }
    public CollectionNode Source { get; public set; }
    protected LambdaNode(Collection`1<RangeVariable> rangeVariables);
    protected LambdaNode(Collection`1<RangeVariable> rangeVariables, RangeVariable currentRangeVariable);
    public Collection`1<RangeVariable> get_RangeVariables();
    public RangeVariable get_CurrentRangeVariable();
    [CompilerGeneratedAttribute]
public SingleValueNode get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(SingleValueNode value);
    [CompilerGeneratedAttribute]
public CollectionNode get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(CollectionNode value);
}
public class Microsoft.Data.OData.Query.SemanticAst.MetadataSegment : ODataPathSegment {
    public static MetadataSegment Instance;
    public IEdmType EdmType { get; }
    private static MetadataSegment();
    public virtual IEdmType get_EdmType();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.Data.OData.Query.SemanticAst.NamedFunctionParameterNode : QueryNode {
    private string name;
    private QueryNode value;
    public string Name { get; }
    public QueryNode Value { get; }
    public QueryNodeKind Kind { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public NamedFunctionParameterNode(string name, QueryNode value);
    public string get_Name();
    public QueryNode get_Value();
    public virtual QueryNodeKind get_Kind();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.Data.OData.Query.SemanticAst.NavigationPropertyLinkSegment : ODataPathSegment {
    private IEdmNavigationProperty navigationProperty;
    public IEdmNavigationProperty NavigationProperty { get; }
    public IEdmEntitySet EntitySet { get; }
    public IEdmType EdmType { get; }
    public NavigationPropertyLinkSegment(IEdmNavigationProperty navigationProperty, IEdmEntitySet entitySet);
    public IEdmNavigationProperty get_NavigationProperty();
    public IEdmEntitySet get_EntitySet();
    public virtual IEdmType get_EdmType();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.Data.OData.Query.SemanticAst.NavigationPropertySegment : ODataPathSegment {
    private IEdmNavigationProperty navigationProperty;
    public IEdmNavigationProperty NavigationProperty { get; }
    public IEdmEntitySet EntitySet { get; }
    public IEdmType EdmType { get; }
    public NavigationPropertySegment(IEdmNavigationProperty navigationProperty, IEdmEntitySet entitySet);
    public IEdmNavigationProperty get_NavigationProperty();
    public IEdmEntitySet get_EntitySet();
    public virtual IEdmType get_EdmType();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.Data.OData.Query.SemanticAst.NonentityRangeVariable : RangeVariable {
    private string name;
    private CollectionNode collectionNode;
    private IEdmTypeReference typeReference;
    public string Name { get; }
    public IEdmTypeReference TypeReference { get; }
    public CollectionNode CollectionNode { get; }
    public int Kind { get; }
    public NonentityRangeVariable(string name, IEdmTypeReference typeReference, CollectionNode collectionNode);
    public virtual string get_Name();
    public virtual IEdmTypeReference get_TypeReference();
    public CollectionNode get_CollectionNode();
    public virtual int get_Kind();
}
public class Microsoft.Data.OData.Query.SemanticAst.NonentityRangeVariableReferenceNode : SingleValueNode {
    private string name;
    private IEdmTypeReference typeReference;
    private NonentityRangeVariable rangeVariable;
    public string Name { get; }
    public IEdmTypeReference TypeReference { get; }
    public NonentityRangeVariable RangeVariable { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public NonentityRangeVariableReferenceNode(string name, NonentityRangeVariable rangeVariable);
    public string get_Name();
    public virtual IEdmTypeReference get_TypeReference();
    public NonentityRangeVariable get_RangeVariable();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.Data.OData.Query.SemanticAst.ODataExpandPath : ODataPath {
    public ODataExpandPath(IEnumerable`1<ODataPathSegment> segments);
    public ODataExpandPath(ODataPathSegment[] segments);
    internal IEdmNavigationProperty GetNavigationProperty();
    private void ValidatePath();
}
public class Microsoft.Data.OData.Query.SemanticAst.ODataPath : ODataAnnotatable {
    private IList`1<ODataPathSegment> segments;
    [CompilerGeneratedAttribute]
private static Func`2<ODataPathSegment, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    public ODataPathSegment FirstSegment { get; }
    public ODataPathSegment LastSegment { get; }
    public int Count { get; }
    public ODataPath(IEnumerable`1<ODataPathSegment> segments);
    public ODataPath(ODataPathSegment[] segments);
    public ODataPathSegment get_FirstSegment();
    public ODataPathSegment get_LastSegment();
    public int get_Count();
    public sealed virtual IEnumerator`1<ODataPathSegment> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public IEnumerable`1<T> WalkWith(PathSegmentTranslator`1<T> translator);
    public void WalkWith(PathSegmentHandler handler);
    internal bool Equals(ODataPath other);
    internal void Add(ODataPathSegment newSegment);
    [CompilerGeneratedAttribute]
private static bool <.ctor>b__0(ODataPathSegment s);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Query.SemanticAst.ODataPathExtensions : object {
    [ExtensionAttribute]
public static IEdmTypeReference EdmType(ODataPath path);
    [ExtensionAttribute]
public static IEdmEntitySet EntitySet(ODataPath path);
    [ExtensionAttribute]
public static bool IsCollection(ODataPath path);
}
public abstract class Microsoft.Data.OData.Query.SemanticAst.ODataPathSegment : ODataAnnotatable {
    private string identifier;
    private bool singleResult;
    private IEdmEntitySet targetEdmEntitySet;
    private IEdmType targetEdmType;
    private RequestTargetKind targetKind;
    public IEdmType EdmType { get; }
    internal string Identifier { get; internal set; }
    internal bool SingleResult { get; internal set; }
    internal IEdmEntitySet TargetEdmEntitySet { get; internal set; }
    internal IEdmType TargetEdmType { get; internal set; }
    internal RequestTargetKind TargetKind { get; internal set; }
    internal ODataPathSegment(ODataPathSegment other);
    public abstract virtual IEdmType get_EdmType();
    internal string get_Identifier();
    internal void set_Identifier(string value);
    internal bool get_SingleResult();
    internal void set_SingleResult(bool value);
    internal IEdmEntitySet get_TargetEdmEntitySet();
    internal void set_TargetEdmEntitySet(IEdmEntitySet value);
    internal IEdmType get_TargetEdmType();
    internal void set_TargetEdmType(IEdmType value);
    internal RequestTargetKind get_TargetKind();
    internal void set_TargetKind(RequestTargetKind value);
    public abstract virtual T Translate(PathSegmentTranslator`1<T> translator);
    public abstract virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
    internal void CopyValuesFrom(ODataPathSegment other);
}
public class Microsoft.Data.OData.Query.SemanticAst.ODataSelectPath : ODataPath {
    public ODataSelectPath(IEnumerable`1<ODataPathSegment> segments);
    public ODataSelectPath(ODataPathSegment[] segments);
    private void ValidatePath();
}
public class Microsoft.Data.OData.Query.SemanticAst.ODataUnresolvedFunctionParameterAlias : ODataValue {
    [CompilerGeneratedAttribute]
private IEdmTypeReference <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    public IEdmTypeReference Type { get; private set; }
    public string Alias { get; private set; }
    public ODataUnresolvedFunctionParameterAlias(string alias, IEdmTypeReference type);
    [CompilerGeneratedAttribute]
public IEdmTypeReference get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(IEdmTypeReference value);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
private void set_Alias(string value);
}
public class Microsoft.Data.OData.Query.SemanticAst.OpenPropertySegment : ODataPathSegment {
    private string propertyName;
    public string PropertyName { get; }
    public IEdmType EdmType { get; }
    public OpenPropertySegment(string propertyName);
    public string get_PropertyName();
    public virtual IEdmType get_EdmType();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.Data.OData.Query.SemanticAst.OperationSegment : ODataPathSegment {
    private static IEdmType UnknownSentinel;
    private ReadOnlyCollection`1<IEdmFunctionImport> operations;
    private ReadOnlyCollection`1<OperationSegmentParameter> parameters;
    private IEdmEntitySet entitySet;
    private IEdmType computedReturnEdmType;
    [CompilerGeneratedAttribute]
private static Func`2<IEdmFunctionImport, bool> CS$<>9__CachedAnonymousMethodDelegate2;
    public IEnumerable`1<IEdmFunctionImport> Operations { get; }
    public IEnumerable`1<OperationSegmentParameter> Parameters { get; }
    public IEdmType EdmType { get; }
    public IEdmEntitySet EntitySet { get; }
    public OperationSegment(IEdmFunctionImport operation, IEdmEntitySet entitySet);
    public OperationSegment(IEnumerable`1<IEdmFunctionImport> operationsIn, IEdmEntitySet entitySet);
    public OperationSegment(IEnumerable`1<IEdmFunctionImport> operationsIn, IEnumerable`1<OperationSegmentParameter> parameters, IEdmEntitySet entitySet);
    private static OperationSegment();
    public IEnumerable`1<IEdmFunctionImport> get_Operations();
    public IEnumerable`1<OperationSegmentParameter> get_Parameters();
    public virtual IEdmType get_EdmType();
    public IEdmEntitySet get_EntitySet();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
    private void EnsureTypeAndSetAreCompatable();
    [CompilerGeneratedAttribute]
private static bool <.ctor>b__0(IEdmFunctionImport operation);
}
public class Microsoft.Data.OData.Query.SemanticAst.OperationSegmentParameter : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public string Name { get; private set; }
    public object Value { get; private set; }
    public OperationSegmentParameter(string name, object value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(object value);
}
public class Microsoft.Data.OData.Query.SemanticAst.OrderByClause : object {
    private SingleValueNode expression;
    private OrderByDirection direction;
    private RangeVariable rangeVariable;
    private OrderByClause thenBy;
    public OrderByClause ThenBy { get; }
    public SingleValueNode Expression { get; }
    public OrderByDirection Direction { get; }
    public RangeVariable RangeVariable { get; }
    public IEdmTypeReference ItemType { get; }
    public OrderByClause(OrderByClause thenBy, SingleValueNode expression, OrderByDirection direction, RangeVariable rangeVariable);
    public OrderByClause get_ThenBy();
    public SingleValueNode get_Expression();
    public OrderByDirection get_Direction();
    public RangeVariable get_RangeVariable();
    public IEdmTypeReference get_ItemType();
}
internal class Microsoft.Data.OData.Query.SemanticAst.PartialSelection : Selection {
    private IEnumerable`1<SelectItem> selectedItems;
    public IEnumerable`1<SelectItem> SelectedItems { get; }
    public PartialSelection(IEnumerable`1<SelectItem> selectedItems);
    public IEnumerable`1<SelectItem> get_SelectedItems();
}
public abstract class Microsoft.Data.OData.Query.SemanticAst.PathSegmentHandler : object {
    public virtual void Handle(TypeSegment segment);
    public virtual void Handle(NavigationPropertySegment segment);
    public virtual void Handle(EntitySetSegment segment);
    public virtual void Handle(KeySegment segment);
    public virtual void Handle(PropertySegment segment);
    public virtual void Handle(OperationSegment segment);
    public virtual void Handle(OpenPropertySegment segment);
    public virtual void Handle(CountSegment segment);
    public virtual void Handle(NavigationPropertyLinkSegment segment);
    public virtual void Handle(ValueSegment segment);
    public virtual void Handle(BatchSegment segment);
    public virtual void Handle(BatchReferenceSegment segment);
    public virtual void Handle(MetadataSegment segment);
}
public abstract class Microsoft.Data.OData.Query.SemanticAst.PathSegmentTranslator`1 : object {
    public virtual T Translate(TypeSegment segment);
    public virtual T Translate(NavigationPropertySegment segment);
    public virtual T Translate(EntitySetSegment segment);
    public virtual T Translate(KeySegment segment);
    public virtual T Translate(PropertySegment segment);
    public virtual T Translate(OperationSegment segment);
    public virtual T Translate(OpenPropertySegment segment);
    public virtual T Translate(CountSegment segment);
    public virtual T Translate(NavigationPropertyLinkSegment segment);
    public virtual T Translate(ValueSegment segment);
    public virtual T Translate(BatchSegment segment);
    public virtual T Translate(BatchReferenceSegment segment);
    public virtual T Translate(MetadataSegment segment);
}
public class Microsoft.Data.OData.Query.SemanticAst.PathSelectItem : SelectItem {
    private ODataSelectPath selectedPath;
    public ODataSelectPath SelectedPath { get; }
    public PathSelectItem(ODataSelectPath selectedPath);
    public ODataSelectPath get_SelectedPath();
}
public class Microsoft.Data.OData.Query.SemanticAst.PropertySegment : ODataPathSegment {
    private IEdmStructuralProperty property;
    public IEdmStructuralProperty Property { get; }
    public IEdmType EdmType { get; }
    public PropertySegment(IEdmStructuralProperty property);
    public IEdmStructuralProperty get_Property();
    public virtual IEdmType get_EdmType();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public abstract class Microsoft.Data.OData.Query.SemanticAst.QueryNode : ODataAnnotatable {
    public QueryNodeKind Kind { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public abstract virtual QueryNodeKind get_Kind();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public abstract class Microsoft.Data.OData.Query.SemanticAst.QueryNodeVisitor`1 : object {
    public virtual T Visit(AllNode nodeIn);
    public virtual T Visit(AnyNode nodeIn);
    public virtual T Visit(BinaryOperatorNode nodeIn);
    public virtual T Visit(CollectionNavigationNode nodeIn);
    public virtual T Visit(CollectionPropertyAccessNode nodeIn);
    public virtual T Visit(ConstantNode nodeIn);
    public virtual T Visit(ConvertNode nodeIn);
    public virtual T Visit(EntityCollectionCastNode nodeIn);
    public virtual T Visit(EntityRangeVariableReferenceNode nodeIn);
    public virtual T Visit(NonentityRangeVariableReferenceNode nodeIn);
    public virtual T Visit(SingleEntityCastNode nodeIn);
    public virtual T Visit(SingleNavigationNode nodeIn);
    public virtual T Visit(SingleEntityFunctionCallNode nodeIn);
    public virtual T Visit(SingleValueFunctionCallNode nodeIn);
    public virtual T Visit(EntityCollectionFunctionCallNode nodeIn);
    public virtual T Visit(CollectionFunctionCallNode nodeIn);
    public virtual T Visit(SingleValueOpenPropertyAccessNode nodeIn);
    public virtual T Visit(SingleValuePropertyAccessNode nodeIn);
    public virtual T Visit(UnaryOperatorNode nodeIn);
    public virtual T Visit(NamedFunctionParameterNode nodeIn);
}
public abstract class Microsoft.Data.OData.Query.SemanticAst.RangeVariable : ODataAnnotatable {
    public string Name { get; }
    public IEdmTypeReference TypeReference { get; }
    public int Kind { get; }
    public abstract virtual string get_Name();
    public abstract virtual IEdmTypeReference get_TypeReference();
    public abstract virtual int get_Kind();
}
public static class Microsoft.Data.OData.Query.SemanticAst.RangeVariableKind : object {
    public static int Entity;
    public static int Nonentity;
}
public class Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause : object {
    private Expansion expansion;
    private bool usedInternalLegacyConsturctor;
    private Selection selection;
    private ICollection`1<SelectItem> selectedItems;
    private Nullable`1<bool> allSelected;
    [CompilerGeneratedAttribute]
private static Func`2<SelectItem, bool> CS$<>9__CachedAnonymousMethodDelegate2;
    public IEnumerable`1<SelectItem> SelectedItems { get; }
    public bool AllSelected { get; }
    internal Selection Selection { get; }
    internal Expansion Expansion { get; }
    public SelectExpandClause(ICollection`1<SelectItem> selectedItems, bool allSelected);
    internal SelectExpandClause(Selection selection, Expansion expansion);
    public IEnumerable`1<SelectItem> get_SelectedItems();
    public bool get_AllSelected();
    internal Selection get_Selection();
    internal Expansion get_Expansion();
    internal void AddSelectItem(SelectItem itemToAdd);
    internal void SetAllSelectionRecursively();
    internal void InitializeEmptySelection();
    internal void ComputeFinalSelectedItems();
    [CompilerGeneratedAttribute]
private static bool <AddSelectItem>b__1(SelectItem item);
}
internal static class Microsoft.Data.OData.Query.SemanticAst.SelectExpandTreeFinisher : object {
    internal static SelectExpandClause PruneSelectExpandTree(SelectExpandClause clauseToPrune);
}
internal abstract class Microsoft.Data.OData.Query.SemanticAst.Selection : object {
}
public abstract class Microsoft.Data.OData.Query.SemanticAst.SelectItem : ODataAnnotatable {
}
public class Microsoft.Data.OData.Query.SemanticAst.SingleEntityCastNode : SingleEntityNode {
    private SingleEntityNode source;
    private IEdmEntityTypeReference entityTypeReference;
    private IEdmEntitySet entitySet;
    public SingleEntityNode Source { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmEntityTypeReference EntityTypeReference { get; }
    public IEdmEntitySet EntitySet { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleEntityCastNode(SingleEntityNode source, IEdmEntityType entityType);
    public SingleEntityNode get_Source();
    public virtual IEdmTypeReference get_TypeReference();
    public virtual IEdmEntityTypeReference get_EntityTypeReference();
    public virtual IEdmEntitySet get_EntitySet();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public abstract class Microsoft.Data.OData.Query.SemanticAst.SingleEntityNode : SingleValueNode {
    public IEdmEntitySet EntitySet { get; }
    public IEdmEntityTypeReference EntityTypeReference { get; }
    public abstract virtual IEdmEntitySet get_EntitySet();
    public abstract virtual IEdmEntityTypeReference get_EntityTypeReference();
}
public class Microsoft.Data.OData.Query.SemanticAst.SingleNavigationNode : SingleEntityNode {
    private IEdmEntitySet entitySet;
    private SingleEntityNode source;
    private IEdmNavigationProperty navigationProperty;
    private IEdmEntityTypeReference entityTypeReference;
    public SingleEntityNode Source { get; }
    public IEdmNavigationProperty NavigationProperty { get; }
    public EdmMultiplicity TargetMultiplicity { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmEntityTypeReference EntityTypeReference { get; }
    public IEdmEntitySet EntitySet { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleNavigationNode(IEdmNavigationProperty navigationProperty, SingleEntityNode source);
    public SingleNavigationNode(IEdmNavigationProperty navigationProperty, IEdmEntitySet sourceSet);
    public SingleEntityNode get_Source();
    public IEdmNavigationProperty get_NavigationProperty();
    public EdmMultiplicity get_TargetMultiplicity();
    public virtual IEdmTypeReference get_TypeReference();
    public virtual IEdmEntityTypeReference get_EntityTypeReference();
    public virtual IEdmEntitySet get_EntitySet();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public abstract class Microsoft.Data.OData.Query.SemanticAst.SingleValueNode : QueryNode {
    public IEdmTypeReference TypeReference { get; }
    public QueryNodeKind Kind { get; }
    public abstract virtual IEdmTypeReference get_TypeReference();
    public virtual QueryNodeKind get_Kind();
}
public class Microsoft.Data.OData.Query.SemanticAst.SingleValueOpenPropertyAccessNode : SingleValueNode {
    private SingleValueNode source;
    private string name;
    public SingleValueNode Source { get; }
    public string Name { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleValueOpenPropertyAccessNode(SingleValueNode source, string openPropertyName);
    public SingleValueNode get_Source();
    public string get_Name();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.Data.OData.Query.SemanticAst.SingleValuePropertyAccessNode : SingleValueNode {
    private SingleValueNode source;
    private IEdmProperty property;
    public SingleValueNode Source { get; }
    public IEdmProperty Property { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleValuePropertyAccessNode(SingleValueNode source, IEdmProperty property);
    public SingleValueNode get_Source();
    public IEdmProperty get_Property();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.Data.OData.Query.SemanticAst.TypeSegment : ODataPathSegment {
    private IEdmType edmType;
    private IEdmEntitySet entitySet;
    public IEdmType EdmType { get; }
    public IEdmEntitySet EntitySet { get; }
    public TypeSegment(IEdmType edmType, IEdmEntitySet entitySet);
    public virtual IEdmType get_EdmType();
    public IEdmEntitySet get_EntitySet();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.Data.OData.Query.SemanticAst.UnaryOperatorNode : SingleValueNode {
    private SingleValueNode operand;
    private UnaryOperatorKind operatorKind;
    private IEdmTypeReference typeReference;
    public UnaryOperatorKind OperatorKind { get; }
    public SingleValueNode Operand { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public UnaryOperatorNode(UnaryOperatorKind operatorKind, SingleValueNode operand);
    public UnaryOperatorKind get_OperatorKind();
    public SingleValueNode get_Operand();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SemanticAst.UnknownSelection : Selection {
    public static UnknownSelection Instance;
    private static UnknownSelection();
}
public class Microsoft.Data.OData.Query.SemanticAst.ValueSegment : ODataPathSegment {
    private IEdmType edmType;
    public IEdmType EdmType { get; }
    public ValueSegment(IEdmType previousType);
    public virtual IEdmType get_EdmType();
    public virtual T Translate(PathSegmentTranslator`1<T> translator);
    public virtual void Handle(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.Data.OData.Query.SemanticAst.WildcardSelectItem : SelectItem {
}
public class Microsoft.Data.OData.Query.SingleEntityFunctionCallNode : SingleEntityNode {
    private string name;
    private ReadOnlyCollection`1<IEdmFunctionImport> functionImports;
    private IEnumerable`1<QueryNode> arguments;
    private IEdmEntityTypeReference entityTypeReference;
    private IEdmEntitySet entitySet;
    private QueryNode source;
    public string Name { get; }
    public IEnumerable`1<IEdmFunctionImport> FunctionImports { get; }
    public IEnumerable`1<QueryNode> Arguments { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmEntitySet EntitySet { get; }
    public IEdmEntityTypeReference EntityTypeReference { get; }
    public QueryNode Source { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleEntityFunctionCallNode(string name, IEnumerable`1<QueryNode> arguments, IEdmEntityTypeReference entityTypeReference, IEdmEntitySet entitySet);
    public SingleEntityFunctionCallNode(string name, IEnumerable`1<IEdmFunctionImport> functionImports, IEnumerable`1<QueryNode> arguments, IEdmEntityTypeReference entityTypeReference, IEdmEntitySet entitySet, QueryNode source);
    public string get_Name();
    public IEnumerable`1<IEdmFunctionImport> get_FunctionImports();
    public IEnumerable`1<QueryNode> get_Arguments();
    public virtual IEdmTypeReference get_TypeReference();
    public virtual IEdmEntitySet get_EntitySet();
    public virtual IEdmEntityTypeReference get_EntityTypeReference();
    public QueryNode get_Source();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.Data.OData.Query.SingleValueFunctionCallNode : SingleValueNode {
    private string name;
    private ReadOnlyCollection`1<IEdmFunctionImport> functionImports;
    private IEnumerable`1<QueryNode> arguments;
    private IEdmTypeReference typeReference;
    private QueryNode source;
    public string Name { get; }
    public IEnumerable`1<IEdmFunctionImport> FunctionImports { get; }
    public IEnumerable`1<QueryNode> Arguments { get; }
    public IEdmTypeReference TypeReference { get; }
    public QueryNode Source { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleValueFunctionCallNode(string name, IEnumerable`1<QueryNode> arguments, IEdmTypeReference typeReference);
    public SingleValueFunctionCallNode(string name, IEnumerable`1<IEdmFunctionImport> functionImports, IEnumerable`1<QueryNode> arguments, IEdmTypeReference typeReference, QueryNode source);
    public string get_Name();
    public IEnumerable`1<IEdmFunctionImport> get_FunctionImports();
    public IEnumerable`1<QueryNode> get_Arguments();
    public virtual IEdmTypeReference get_TypeReference();
    public QueryNode get_Source();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.AllToken : LambdaToken {
    public QueryTokenKind Kind { get; }
    public AllToken(QueryToken expression, string parameter, QueryToken parent);
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.AnyToken : LambdaToken {
    public QueryTokenKind Kind { get; }
    public AnyToken(QueryToken expression, string parameter, QueryToken parent);
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.BinaryOperatorToken : QueryToken {
    private BinaryOperatorKind operatorKind;
    private QueryToken left;
    private QueryToken right;
    public QueryTokenKind Kind { get; }
    public BinaryOperatorKind OperatorKind { get; }
    public QueryToken Left { get; }
    public QueryToken Right { get; }
    public BinaryOperatorToken(BinaryOperatorKind operatorKind, QueryToken left, QueryToken right);
    public virtual QueryTokenKind get_Kind();
    public BinaryOperatorKind get_OperatorKind();
    public QueryToken get_Left();
    public QueryToken get_Right();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.CustomQueryOptionToken : QueryToken {
    private string name;
    private string value;
    public QueryTokenKind Kind { get; }
    public string Name { get; }
    public string Value { get; }
    public CustomQueryOptionToken(string name, string value);
    public virtual QueryTokenKind get_Kind();
    public string get_Name();
    public string get_Value();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.DottedIdentifierToken : PathToken {
    private string identifier;
    private QueryToken nextToken;
    public QueryTokenKind Kind { get; }
    public string Identifier { get; }
    public QueryToken NextToken { get; public set; }
    public DottedIdentifierToken(string identifier, QueryToken nextToken);
    public virtual QueryTokenKind get_Kind();
    public virtual string get_Identifier();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.EndPathToken : PathToken {
    private string identifier;
    private QueryToken nextToken;
    public QueryTokenKind Kind { get; }
    public QueryToken NextToken { get; public set; }
    public string Identifier { get; }
    public EndPathToken(string identifier, QueryToken nextToken);
    public virtual QueryTokenKind get_Kind();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public virtual string get_Identifier();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal abstract class Microsoft.Data.OData.Query.SyntacticAst.ExpandBinder : object {
    private ODataUriParserConfiguration configuration;
    private IEdmEntitySet entitySet;
    private IEdmEntityType entityType;
    [CompilerGeneratedAttribute]
private static Func`2<ExpandedNavigationSelectItem, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    public IEdmModel Model { get; }
    public IEdmEntityType EntityType { get; }
    public IEdmEntitySet EntitySet { get; }
    protected ODataUriParserSettings Settings { get; }
    protected ODataUriParserConfiguration Configuration { get; }
    protected ExpandBinder(ODataUriParserConfiguration configuration, IEdmEntityType entityType, IEdmEntitySet entitySet);
    public IEdmModel get_Model();
    public IEdmEntityType get_EntityType();
    public IEdmEntitySet get_EntitySet();
    protected ODataUriParserSettings get_Settings();
    protected ODataUriParserConfiguration get_Configuration();
    public SelectExpandClause Bind(ExpandToken tokenIn);
    protected abstract virtual SelectExpandClause GenerateSubExpand(IEdmNavigationProperty currentNavProp, ExpandTermToken tokenIn);
    protected abstract virtual SelectExpandClause DecorateExpandWithSelect(SelectExpandClause subExpand, IEdmNavigationProperty currentNavProp, SelectToken select);
    private static SelectExpandClause BuildDefaultSubExpand();
    private ExpandedNavigationSelectItem GenerateExpandItem(ExpandTermToken tokenIn);
    private MetadataBinder BuildNewMetadataBinder(IEdmEntitySet targetEntitySet);
    [CompilerGeneratedAttribute]
private static bool <Bind>b__0(ExpandedNavigationSelectItem i);
}
internal static class Microsoft.Data.OData.Query.SyntacticAst.ExpandBinderFactory : object {
    public static ExpandBinder Create(IEdmEntityType elementType, IEdmEntitySet entitySet, ODataUriParserConfiguration configuration);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.ExpandOptionExpandBinder : ExpandBinder {
    public ExpandOptionExpandBinder(ODataUriParserConfiguration configuration, IEdmEntityType entityType, IEdmEntitySet entitySet);
    protected virtual SelectExpandClause GenerateSubExpand(IEdmNavigationProperty currentNavProp, ExpandTermToken tokenIn);
    protected virtual SelectExpandClause DecorateExpandWithSelect(SelectExpandClause subExpand, IEdmNavigationProperty currentNavProp, SelectToken select);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.ExpandTermToken : QueryToken {
    private PathSegmentToken pathToNavProp;
    private QueryToken filterOption;
    private OrderByToken orderByOption;
    private Nullable`1<long> topOption;
    private Nullable`1<long> skipOption;
    private Nullable`1<InlineCountKind> inlineCountOption;
    private SelectToken selectOption;
    private ExpandToken expandOption;
    public PathSegmentToken PathToNavProp { get; }
    public QueryToken FilterOption { get; }
    public OrderByToken OrderByOption { get; }
    public Nullable`1<long> TopOption { get; }
    public Nullable`1<long> SkipOption { get; }
    public Nullable`1<InlineCountKind> InlineCountOption { get; }
    public SelectToken SelectOption { get; }
    public ExpandToken ExpandOption { get; }
    public QueryTokenKind Kind { get; }
    public ExpandTermToken(PathSegmentToken pathToNavProp);
    public ExpandTermToken(PathSegmentToken pathToNavProp, SelectToken selectOption, ExpandToken expandOption);
    public ExpandTermToken(PathSegmentToken pathToNavProp, QueryToken filterOption, OrderByToken orderByOption, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<InlineCountKind> inlineCountOption, SelectToken selectOption, ExpandToken expandOption);
    public PathSegmentToken get_PathToNavProp();
    public QueryToken get_FilterOption();
    public OrderByToken get_OrderByOption();
    public Nullable`1<long> get_TopOption();
    public Nullable`1<long> get_SkipOption();
    public Nullable`1<InlineCountKind> get_InlineCountOption();
    public SelectToken get_SelectOption();
    public ExpandToken get_ExpandOption();
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.ExpandToken : QueryToken {
    private IEnumerable`1<ExpandTermToken> expandTerms;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<ExpandTermToken> ExpandTerms { get; }
    public ExpandToken(IEnumerable`1<ExpandTermToken> expandTerms);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<ExpandTermToken> get_ExpandTerms();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal static class Microsoft.Data.OData.Query.SyntacticAst.ExpandTreeNormalizer : object {
    public static ExpandToken NormalizeExpandTree(ExpandToken treeToNormalize);
    public static ExpandToken InvertPaths(ExpandToken treeToInvert);
    public static ExpandToken CombineTerms(ExpandToken treeToCollapse);
    public static ExpandTermToken BuildSubExpandTree(ExpandTermToken termToExpand);
    public static ExpandTermToken CombineTerms(ExpandTermToken existingToken, ExpandTermToken newToken);
    public static IEnumerable`1<ExpandTermToken> CombineChildNodes(ExpandTermToken existingToken, ExpandTermToken newToken);
    private static void AddChildOptionsToDictionary(ExpandTermToken newToken, Dictionary`2<PathSegmentToken, ExpandTermToken> combinedTerms);
    private static void AddOrCombine(IDictionary`2<PathSegmentToken, ExpandTermToken> combinedTerms, ExpandTermToken expandedTerm);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.FunctionCallToken : QueryToken {
    private string name;
    private IEnumerable`1<FunctionParameterToken> arguments;
    private QueryToken source;
    [CompilerGeneratedAttribute]
private static Func`2<QueryToken, FunctionParameterToken> CS$<>9__CachedAnonymousMethodDelegate1;
    public QueryTokenKind Kind { get; }
    public string Name { get; }
    public IEnumerable`1<FunctionParameterToken> Arguments { get; }
    public QueryToken Source { get; }
    public FunctionCallToken(string name, IEnumerable`1<QueryToken> argumentValues);
    public FunctionCallToken(string name, IEnumerable`1<FunctionParameterToken> arguments, QueryToken source);
    public virtual QueryTokenKind get_Kind();
    public string get_Name();
    public IEnumerable`1<FunctionParameterToken> get_Arguments();
    public QueryToken get_Source();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
    [CompilerGeneratedAttribute]
private static FunctionParameterToken <.ctor>b__0(QueryToken v);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.FunctionParameterAliasToken : QueryToken {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    public string Alias { get; private set; }
    public QueryTokenKind Kind { get; }
    public FunctionParameterAliasToken(string alias);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
private void set_Alias(string value);
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.FunctionParameterToken : QueryToken {
    public static FunctionParameterToken[] EmptyParameterList;
    private string parameterName;
    private QueryToken valueToken;
    public string ParameterName { get; }
    public QueryToken ValueToken { get; }
    public QueryTokenKind Kind { get; }
    public FunctionParameterToken(string parameterName, QueryToken valueToken);
    private static FunctionParameterToken();
    public string get_ParameterName();
    public QueryToken get_ValueToken();
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.InnerPathToken : PathToken {
    private string identifier;
    private IEnumerable`1<NamedValue> namedValues;
    private QueryToken nextToken;
    public QueryTokenKind Kind { get; }
    public string Identifier { get; }
    public QueryToken NextToken { get; public set; }
    public IEnumerable`1<NamedValue> NamedValues { get; }
    public InnerPathToken(string identifier, QueryToken nextToken, IEnumerable`1<NamedValue> namedValues);
    public virtual QueryTokenKind get_Kind();
    public virtual string get_Identifier();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public IEnumerable`1<NamedValue> get_NamedValues();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal interface Microsoft.Data.OData.Query.SyntacticAst.IPathSegmentTokenVisitor {
    public abstract virtual void Visit(SystemToken tokenIn);
    public abstract virtual void Visit(NonSystemToken tokenIn);
}
internal interface Microsoft.Data.OData.Query.SyntacticAst.IPathSegmentTokenVisitor`1 {
    public abstract virtual T Visit(SystemToken tokenIn);
    public abstract virtual T Visit(NonSystemToken tokenIn);
}
internal interface Microsoft.Data.OData.Query.SyntacticAst.ISyntacticTreeVisitor`1 {
    public abstract virtual T Visit(AllToken tokenIn);
    public abstract virtual T Visit(AnyToken tokenIn);
    public abstract virtual T Visit(BinaryOperatorToken tokenIn);
    public abstract virtual T Visit(DottedIdentifierToken tokenIn);
    public abstract virtual T Visit(ExpandToken tokenIn);
    public abstract virtual T Visit(ExpandTermToken tokenIn);
    public abstract virtual T Visit(FunctionCallToken tokenIn);
    public abstract virtual T Visit(LambdaToken tokenIn);
    public abstract virtual T Visit(LiteralToken tokenIn);
    public abstract virtual T Visit(InnerPathToken tokenIn);
    public abstract virtual T Visit(OrderByToken tokenIn);
    public abstract virtual T Visit(EndPathToken tokenIn);
    public abstract virtual T Visit(CustomQueryOptionToken tokenIn);
    public abstract virtual T Visit(RangeVariableToken tokenIn);
    public abstract virtual T Visit(SelectToken tokenIn);
    public abstract virtual T Visit(StarToken tokenIn);
    public abstract virtual T Visit(UnaryOperatorToken tokenIn);
    public abstract virtual T Visit(FunctionParameterToken tokenIn);
}
internal abstract class Microsoft.Data.OData.Query.SyntacticAst.LambdaToken : QueryToken {
    private QueryToken parent;
    private string parameter;
    private QueryToken expression;
    public QueryToken Parent { get; }
    public QueryToken Expression { get; }
    public string Parameter { get; }
    protected LambdaToken(QueryToken expression, string parameter, QueryToken parent);
    public QueryToken get_Parent();
    public QueryToken get_Expression();
    public string get_Parameter();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.LiteralToken : QueryToken {
    private string originalText;
    private object value;
    public QueryTokenKind Kind { get; }
    public object Value { get; }
    internal string OriginalText { get; }
    public LiteralToken(object value);
    internal LiteralToken(object value, string originalText);
    public virtual QueryTokenKind get_Kind();
    public object get_Value();
    internal string get_OriginalText();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.NonOptionExpandBinder : ExpandBinder {
    public NonOptionExpandBinder(ODataUriParserConfiguration configuration, IEdmEntityType entityType, IEdmEntitySet entitySet);
    protected virtual SelectExpandClause GenerateSubExpand(IEdmNavigationProperty currentNavProp, ExpandTermToken tokenIn);
    protected virtual SelectExpandClause DecorateExpandWithSelect(SelectExpandClause subExpand, IEdmNavigationProperty currentNavProp, SelectToken select);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.NonSystemToken : PathSegmentToken {
    private IEnumerable`1<NamedValue> namedValues;
    private string identifier;
    public IEnumerable`1<NamedValue> NamedValues { get; }
    public string Identifier { get; }
    public NonSystemToken(string identifier, IEnumerable`1<NamedValue> namedValues, PathSegmentToken nextToken);
    public IEnumerable`1<NamedValue> get_NamedValues();
    public virtual string get_Identifier();
    public virtual bool IsNamespaceOrContainerQualified();
    public virtual T Accept(IPathSegmentTokenVisitor`1<T> visitor);
    public virtual void Accept(IPathSegmentTokenVisitor visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.OrderByToken : QueryToken {
    private OrderByDirection direction;
    private QueryToken expression;
    public QueryTokenKind Kind { get; }
    public OrderByDirection Direction { get; }
    public QueryToken Expression { get; }
    public OrderByToken(QueryToken expression, OrderByDirection direction);
    public virtual QueryTokenKind get_Kind();
    public OrderByDirection get_Direction();
    public QueryToken get_Expression();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.PathReverser : PathSegmentTokenVisitor`1<PathSegmentToken> {
    private PathSegmentToken childToken;
    private PathReverser(PathSegmentToken childToken);
    public virtual PathSegmentToken Visit(NonSystemToken tokenIn);
    public virtual PathSegmentToken Visit(SystemToken tokenIn);
    private static PathSegmentToken BuildNextStep(PathSegmentToken nextLevelToken, PathSegmentToken nextChildToken);
}
internal abstract class Microsoft.Data.OData.Query.SyntacticAst.PathSegmentToken : ODataAnnotatable {
    private PathSegmentToken nextToken;
    public PathSegmentToken NextToken { get; }
    public string Identifier { get; }
    protected PathSegmentToken(PathSegmentToken nextToken);
    public PathSegmentToken get_NextToken();
    public abstract virtual string get_Identifier();
    public abstract virtual bool IsNamespaceOrContainerQualified();
    public abstract virtual T Accept(IPathSegmentTokenVisitor`1<T> visitor);
    public abstract virtual void Accept(IPathSegmentTokenVisitor visitor);
    internal void SetNextToken(PathSegmentToken nextTokenIn);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.PathSegmentTokenEqualityComparer : EqualityComparer`1<PathSegmentToken> {
    public virtual bool Equals(PathSegmentToken first, PathSegmentToken second);
    public virtual int GetHashCode(PathSegmentToken path);
    private string ToHashableString(PathSegmentToken token);
}
internal abstract class Microsoft.Data.OData.Query.SyntacticAst.PathSegmentTokenVisitor : object {
    public virtual void Visit(SystemToken tokenIn);
    public virtual void Visit(NonSystemToken tokenIn);
}
internal abstract class Microsoft.Data.OData.Query.SyntacticAst.PathSegmentTokenVisitor`1 : object {
    public virtual T Visit(SystemToken tokenIn);
    public virtual T Visit(NonSystemToken tokenIn);
}
internal abstract class Microsoft.Data.OData.Query.SyntacticAst.PathToken : QueryToken {
    public QueryToken NextToken { get; public set; }
    public string Identifier { get; }
    public abstract virtual QueryToken get_NextToken();
    public abstract virtual void set_NextToken(QueryToken value);
    public abstract virtual string get_Identifier();
}
internal abstract class Microsoft.Data.OData.Query.SyntacticAst.QueryToken : ODataAnnotatable {
    public static QueryToken[] EmptyTokens;
    public QueryTokenKind Kind { get; }
    private static QueryToken();
    public abstract virtual QueryTokenKind get_Kind();
    public abstract virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.RangeVariableToken : QueryToken {
    private string name;
    public QueryTokenKind Kind { get; }
    public string Name { get; }
    public RangeVariableToken(string name);
    public virtual QueryTokenKind get_Kind();
    public string get_Name();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.RawFunctionParameterValueToken : QueryToken {
    [CompilerGeneratedAttribute]
private string <RawText>k__BackingField;
    public string RawText { get; private set; }
    public QueryTokenKind Kind { get; }
    public RawFunctionParameterValueToken(string rawText);
    [CompilerGeneratedAttribute]
public string get_RawText();
    [CompilerGeneratedAttribute]
private void set_RawText(string value);
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.SelectBinder : object {
    private SelectPropertyVisitor visitor;
    public SelectBinder(IEdmModel model, IEdmEntityType entityType, int maxDepth, SelectExpandClause expandClauseToDecorate);
    public SelectExpandClause Bind(SelectToken tokenIn);
}
internal static class Microsoft.Data.OData.Query.SyntacticAst.SelectExpandPathBinder : object {
    public static IEnumerable`1<ODataPathSegment> FollowTypeSegments(PathSegmentToken firstTypeToken, IEdmModel model, int maxDepth, IEdmEntityType& currentLevelEntityType, PathSegmentToken& firstNonTypeToken);
}
internal static class Microsoft.Data.OData.Query.SyntacticAst.SelectPathSegmentTokenBinder : object {
    public static ODataPathSegment ConvertNonTypeTokenToSegment(PathSegmentToken tokenIn, IEdmModel model, IEdmEntityType entityType);
    public static bool TryBindAsWildcard(PathSegmentToken tokenIn, IEdmModel model, SelectItem& item);
    private static bool TryBindAsOperation(PathSegmentToken pathToken, IEdmModel model, IEdmEntityType entityType, ODataPathSegment& segment);
    private static bool TryBindAsDeclaredProperty(PathSegmentToken tokenIn, IEdmEntityType entityType, ODataPathSegment& segment);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.SelectPropertyVisitor : PathSegmentTokenVisitor {
    private IEdmModel model;
    private int maxDepth;
    private SelectExpandClause expandClauseToDecorate;
    private IEdmEntityType entityType;
    public SelectExpandClause DecoratedExpandClause { get; }
    public SelectPropertyVisitor(IEdmModel model, IEdmEntityType entityType, int maxDepth, SelectExpandClause expandClauseToDecorate);
    public SelectExpandClause get_DecoratedExpandClause();
    public virtual void Visit(SystemToken tokenIn);
    public virtual void Visit(NonSystemToken tokenIn);
    private void ProcessTokenAsPath(NonSystemToken tokenIn);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.SelectToken : QueryToken {
    private IEnumerable`1<PathSegmentToken> properties;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<PathSegmentToken> Properties { get; }
    public SelectToken(IEnumerable`1<PathSegmentToken> properties);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<PathSegmentToken> get_Properties();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal static class Microsoft.Data.OData.Query.SyntacticAst.SelectTreeNormalizer : object {
    public static SelectToken NormalizeSelectTree(SelectToken treeToNormalize);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.StarToken : PathToken {
    private QueryToken nextToken;
    public QueryTokenKind Kind { get; }
    public QueryToken NextToken { get; public set; }
    public string Identifier { get; }
    public StarToken(QueryToken nextToken);
    public virtual QueryTokenKind get_Kind();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public virtual string get_Identifier();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal abstract class Microsoft.Data.OData.Query.SyntacticAst.SyntacticTreeVisitor`1 : object {
    public virtual T Visit(AllToken tokenIn);
    public virtual T Visit(AnyToken tokenIn);
    public virtual T Visit(BinaryOperatorToken tokenIn);
    public virtual T Visit(DottedIdentifierToken tokenIn);
    public virtual T Visit(ExpandToken tokenIn);
    public virtual T Visit(ExpandTermToken tokenIn);
    public virtual T Visit(FunctionCallToken tokenIn);
    public virtual T Visit(LiteralToken tokenIn);
    public virtual T Visit(LambdaToken tokenIn);
    public virtual T Visit(InnerPathToken tokenIn);
    public virtual T Visit(OrderByToken tokenIn);
    public virtual T Visit(EndPathToken tokenIn);
    public virtual T Visit(CustomQueryOptionToken tokenIn);
    public virtual T Visit(RangeVariableToken tokenIn);
    public virtual T Visit(SelectToken tokenIn);
    public virtual T Visit(StarToken tokenIn);
    public virtual T Visit(UnaryOperatorToken tokenIn);
    public virtual T Visit(FunctionParameterToken tokenIn);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.SystemToken : PathSegmentToken {
    private string identifier;
    public string Identifier { get; }
    public SystemToken(string identifier, PathSegmentToken nextToken);
    public virtual string get_Identifier();
    public virtual bool IsNamespaceOrContainerQualified();
    public virtual T Accept(IPathSegmentTokenVisitor`1<T> visitor);
    public virtual void Accept(IPathSegmentTokenVisitor visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticAst.UnaryOperatorToken : QueryToken {
    private UnaryOperatorKind operatorKind;
    private QueryToken operand;
    public QueryTokenKind Kind { get; }
    public UnaryOperatorKind OperatorKind { get; }
    public QueryToken Operand { get; }
    public UnaryOperatorToken(UnaryOperatorKind operatorKind, QueryToken operand);
    public virtual QueryTokenKind get_Kind();
    public UnaryOperatorKind get_OperatorKind();
    public QueryToken get_Operand();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.Data.OData.Query.SyntacticTree : object {
    private static int DefaultMaxDepth;
    private ICollection`1<string> path;
    private QueryToken filter;
    private IEnumerable`1<OrderByToken> orderByTokens;
    private SelectToken select;
    private ExpandToken expand;
    private Nullable`1<int> skip;
    private Nullable`1<int> top;
    private string format;
    private Nullable`1<InlineCountKind> inlineCount;
    private IEnumerable`1<CustomQueryOptionToken> queryOptions;
    public ICollection`1<string> Path { get; }
    public QueryToken Filter { get; }
    public IEnumerable`1<OrderByToken> OrderByTokens { get; }
    public SelectToken Select { get; }
    public ExpandToken Expand { get; }
    public Nullable`1<int> Skip { get; }
    public Nullable`1<int> Top { get; }
    public string Format { get; }
    public Nullable`1<InlineCountKind> InlineCount { get; }
    public IEnumerable`1<CustomQueryOptionToken> QueryOptions { get; }
    public SyntacticTree(ICollection`1<string> path, QueryToken filter, IEnumerable`1<OrderByToken> orderByTokens, SelectToken select, ExpandToken expand, Nullable`1<int> skip, Nullable`1<int> top, Nullable`1<InlineCountKind> inlineCount, string format, IEnumerable`1<CustomQueryOptionToken> queryOptions);
    public ICollection`1<string> get_Path();
    public QueryToken get_Filter();
    public IEnumerable`1<OrderByToken> get_OrderByTokens();
    public SelectToken get_Select();
    public ExpandToken get_Expand();
    public Nullable`1<int> get_Skip();
    public Nullable`1<int> get_Top();
    public string get_Format();
    public Nullable`1<InlineCountKind> get_InlineCount();
    public IEnumerable`1<CustomQueryOptionToken> get_QueryOptions();
    public static SyntacticTree ParseUri(Uri queryUri, Uri serviceBaseUri);
    public static SyntacticTree ParseUri(Uri queryUri, Uri serviceBaseUri, int maxDepth);
}
internal static class Microsoft.Data.OData.Query.TypePromotionUtils : object {
    private static FunctionSignature[] logicalSignatures;
    private static FunctionSignature[] notSignatures;
    private static FunctionSignature[] arithmeticSignatures;
    private static FunctionSignature[] relationalSignatures;
    private static FunctionSignature[] negationSignatures;
    private static TypePromotionUtils();
    internal static bool PromoteOperandTypes(BinaryOperatorKind operatorKind, IEdmTypeReference& left, IEdmTypeReference& right);
    internal static bool PromoteOperandType(UnaryOperatorKind operatorKind, IEdmTypeReference& typeReference);
    internal static FunctionSignatureWithReturnType FindBestFunctionSignature(FunctionSignatureWithReturnType[] functions, IEdmTypeReference[] argumentTypes);
    internal static FunctionSignature FindExactFunctionSignature(FunctionSignature[] functions, IEdmTypeReference[] argumentTypes);
    internal static bool CanConvertTo(IEdmTypeReference sourceReference, IEdmTypeReference targetReference);
    private static FunctionSignature[] GetFunctionSignatures(BinaryOperatorKind operatorKind);
    private static FunctionSignature[] GetFunctionSignatures(UnaryOperatorKind operatorKind);
    private static int FindBestSignature(FunctionSignature[] signatures, IEdmTypeReference[] argumentTypes);
    private static bool IsApplicable(FunctionSignature signature, IEdmTypeReference[] argumentTypes);
    private static bool CanPromoteTo(IEdmTypeReference sourceType, IEdmTypeReference targetType);
    private static List`1<FunctionSignature> FindBestApplicableSignatures(List`1<FunctionSignature> signatures, IEdmTypeReference[] argumentTypes);
    private static bool MatchesArgumentTypesBetterThan(IEdmTypeReference[] argumentTypes, IEdmTypeReference[] firstCandidate, IEdmTypeReference[] secondCandidate);
    private static int CompareConversions(IEdmTypeReference source, IEdmTypeReference targetA, IEdmTypeReference targetB);
    private static bool TryHandleEqualityOperatorForEntityOrComplexTypes(IEdmTypeReference& left, IEdmTypeReference& right);
    private static bool IsSignedIntegralType(IEdmTypeReference typeReference);
    private static bool IsUnsignedIntegralType(IEdmTypeReference typeReference);
    private static bool IsDecimalType(IEdmTypeReference typeReference);
    private static bool IsDoubleOrSingle(IEdmTypeReference typeReference);
    private static NumericTypeKind GetNumericTypeKind(IEdmTypeReference typeReference);
}
internal class Microsoft.Data.OData.Query.UnaryOperatorBinder : object {
    private Func`2<QueryToken, QueryNode> bindMethod;
    internal UnaryOperatorBinder(Func`2<QueryToken, QueryNode> bindMethod);
    internal QueryNode BindUnaryOperator(UnaryOperatorToken unaryOperatorToken);
    private static IEdmTypeReference PromoteOperandType(SingleValueNode operand, UnaryOperatorKind unaryOperatorKind);
    private SingleValueNode GetOperandFromToken(UnaryOperatorToken unaryOperatorToken);
}
public enum Microsoft.Data.OData.Query.UnaryOperatorKind : Enum {
    public int value__;
    public static UnaryOperatorKind Negate;
    public static UnaryOperatorKind Not;
}
internal static class Microsoft.Data.OData.Query.UriParserErrorHelper : object {
    public static void ThrowIfTypesUnrelated(IEdmType type, IEdmType secondType, string segmentName);
}
internal class Microsoft.Data.OData.Query.UriPathParser : object {
    private int maxSegments;
    internal UriPathParser(int maxSegments);
    internal String[] ParsePath(string escapedRelativePathUri);
    internal ICollection`1<string> ParsePathIntoSegments(Uri absoluteUri, Uri serviceBaseUri);
}
internal static class Microsoft.Data.OData.Query.UriPrimitiveTypeParser : object {
    private static Char[] WhitespaceChars;
    private static UriPrimitiveTypeParser();
    internal static bool IsCharHexDigit(char c);
    internal static bool TryUriStringToPrimitive(string text, IEdmTypeReference targetType, Object& targetValue);
    internal static bool TryUriStringToNonNegativeInteger(string text, Int32& nonNegativeInteger);
    internal static bool TryRemoveSuffix(string suffix, String& text);
    internal static bool TryRemovePrefix(string prefix, String& text);
    internal static bool TryRemoveQuotes(String& text);
    private static bool TryUriStringToByteArray(string text, Byte[]& targetValue);
    private static bool TryUriStringToGuid(string text, Guid& targetValue);
    private static bool TryUriStringToDateTime(string text, DateTime& targetValue);
    private static bool TryUriStringToDateTimeOffset(string text, DateTimeOffset& targetValue);
    private static bool TryUriStringToTime(string text, TimeSpan& targetValue);
    private static bool TryUriStringToGeography(string text, Geography& targetValue);
    private static bool TryUriStringToGeometry(string text, Geometry& targetValue);
    private static bool TryRemoveLiteralSuffix(string suffix, String& text);
    private static bool TryRemoveLiteralPrefix(string prefix, String& text);
    private static bool IsUriValueQuoted(string text);
    private static string RemoveQuotes(string text);
    private static byte HexCharToNibble(char c);
}
internal static class Microsoft.Data.OData.Query.UriQueryConstants : object {
    internal static string MetadataSegment;
    internal static string ValueSegment;
    internal static string BatchSegment;
    internal static string LinkSegment;
    internal static string CountSegment;
    internal static string FilterQueryOption;
    internal static string OrderByQueryOption;
    internal static string SelectQueryOption;
    internal static string ExpandQueryOption;
    internal static string SkipQueryOption;
    internal static string Star;
    internal static string TopQueryOption;
    internal static string InlineCountQueryOption;
    internal static string FormatQueryOption;
}
internal class Microsoft.Data.OData.Query.UriQueryExpressionParser : object {
    private int maxDepth;
    private HashSet`1<string> parameters;
    private int recursionDepth;
    private ExpressionLexer lexer;
    internal UriQueryExpressionParser(int maxDepth);
    internal static LiteralToken TryParseLiteral(ExpressionLexer lexer);
    internal QueryToken ParseFilter(string filter);
    internal IEnumerable`1<OrderByToken> ParseOrderBy(string orderBy);
    private static ExpressionLexer CreateLexerForFilterOrOrderByExpression(string expression);
    private static Exception ParseError(string message);
    private static LiteralToken ParseTypedLiteral(ExpressionLexer lexer, IEdmPrimitiveTypeReference targetTypeReference, string targetTypeName);
    private static LiteralToken ParseNullLiteral(ExpressionLexer lexer);
    private QueryToken ParseExpression();
    private QueryToken ParseLogicalOr();
    private QueryToken ParseLogicalAnd();
    private QueryToken ParseComparison();
    private QueryToken ParseAdditive();
    private QueryToken ParseMultiplicative();
    private QueryToken ParseUnary();
    private QueryToken ParsePrimary();
    private QueryToken ParsePrimaryStart();
    private QueryToken ParseParenExpression();
    private QueryToken ParseAny(QueryToken parent);
    private QueryToken ParseAll(QueryToken parent);
    private QueryToken ParseAnyAll(QueryToken parent, bool isAny);
    private QueryToken ParseSegment(QueryToken parent);
    private bool TokenIdentifierIs(string id);
    private void RecurseEnter();
    private void RecurseLeave();
}
internal static class Microsoft.Data.OData.Query.UriUtils : object {
    internal static bool UriInvariantInsensitiveIsBaseOf(Uri baseUri, Uri uri);
    internal static List`1<CustomQueryOptionToken> ParseQueryOptions(Uri uri);
    internal static bool IsStructuralOrNavigationPropertySelectionItem(SelectItem selectItem);
    private static Uri CreateBaseComparableUri(Uri uri);
    private static bool IsBaseOf(Uri baseUri, Uri uri);
}
internal class Microsoft.Data.OData.RawValueWriter : object {
    private ODataMessageWriterSettings settings;
    private Stream stream;
    private Encoding encoding;
    private TextWriter textWriter;
    internal TextWriter TextWriter { get; }
    internal RawValueWriter(ODataMessageWriterSettings settings, Stream stream, Encoding encoding);
    internal TextWriter get_TextWriter();
    public sealed virtual void Dispose();
    internal void Start();
    internal void End();
    internal void WriteRawValue(object value);
    internal void Flush();
    private void InitializeTextWriter();
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.ReaderUtils : object {
    internal static ODataEntry CreateNewEntry();
    internal static void CheckForDuplicateNavigationLinkNameAndSetAssociationLink(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, ODataNavigationLink navigationLink, bool isExpanded, Nullable`1<bool> isCollection);
    internal static void CheckForDuplicateAssociationLinkAndUpdateNavigationLink(DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, ODataAssociationLink associationLink);
    internal static ODataAssociationLink GetOrCreateAssociationLinkForNavigationProperty(ODataEntry entry, IEdmNavigationProperty navigationProperty);
    [ExtensionAttribute]
internal static bool HasFlag(ODataUndeclaredPropertyBehaviorKinds undeclaredPropertyBehaviorKinds, ODataUndeclaredPropertyBehaviorKinds flag);
    internal static string GetExpectedPropertyName(IEdmStructuralProperty expectedProperty);
}
internal static class Microsoft.Data.OData.ReaderValidationUtils : object {
    internal static void ValidateMessageReaderSettings(ODataMessageReaderSettings messageReaderSettings, bool readingResponse);
    internal static void ValidateEntityReferenceLink(ODataEntityReferenceLink link);
    internal static void ValidateStreamReferenceProperty(ODataProperty streamProperty, IEdmStructuredType structuredType, IEdmProperty streamEdmProperty, ODataMessageReaderSettings messageReaderSettings);
    internal static void ValidateNullValue(IEdmModel model, IEdmTypeReference expectedTypeReference, ODataMessageReaderSettings messageReaderSettings, bool validateNullValue, ODataVersion version, string propertyName);
    internal static void ValidateEntry(ODataEntry entry);
    internal static IEdmProperty FindDefinedProperty(string propertyName, IEdmStructuredType owningStructuredType);
    internal static IEdmProperty ValidateValuePropertyDefined(string propertyName, IEdmStructuredType owningStructuredType, ODataMessageReaderSettings messageReaderSettings, Boolean& ignoreProperty);
    internal static void ValidateExpectedPropertyName(string expectedPropertyName, string payloadPropertyName);
    internal static IEdmProperty ValidateLinkPropertyDefined(string propertyName, IEdmStructuredType owningStructuredType, ODataMessageReaderSettings messageReaderSettings);
    internal static IEdmNavigationProperty ValidateNavigationPropertyDefined(string propertyName, IEdmEntityType owningEntityType, ODataMessageReaderSettings messageReaderSettings);
    internal static ODataException GetPrimitiveTypeConversionException(IEdmPrimitiveTypeReference targetTypeReference, Exception innerException);
    internal static IEdmType ResolvePayloadTypeName(IEdmModel model, IEdmTypeReference expectedTypeReference, string payloadTypeName, EdmTypeKind expectedTypeKind, ODataReaderBehavior readerBehavior, ODataVersion version, EdmTypeKind& payloadTypeKind);
    internal static IEdmTypeReference ResolvePayloadTypeNameAndComputeTargetType(EdmTypeKind expectedTypeKind, IEdmType defaultPrimitivePayloadType, IEdmTypeReference expectedTypeReference, string payloadTypeName, IEdmModel model, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, Func`1<EdmTypeKind> typeKindPeekedFromPayloadFunc, EdmTypeKind& targetTypeKind, SerializationTypeNameAnnotation& serializationTypeNameAnnotation);
    internal static IEdmTypeReference ResolveAndValidatePrimitiveTargetType(IEdmTypeReference expectedTypeReference, EdmTypeKind payloadTypeKind, IEdmType payloadType, string payloadTypeName, IEdmType defaultPayloadType, IEdmModel model, ODataMessageReaderSettings messageReaderSettings, ODataVersion version);
    internal static IEdmTypeReference ResolveAndValidateNonPrimitiveTargetType(EdmTypeKind expectedTypeKind, IEdmTypeReference expectedTypeReference, EdmTypeKind payloadTypeKind, IEdmType payloadType, string payloadTypeName, IEdmModel model, ODataMessageReaderSettings messageReaderSettings, ODataVersion version);
    internal static void ValidateEncodingSupportedInBatch(Encoding encoding);
    internal static void ValidateTypeSupported(IEdmTypeReference typeReference, ODataVersion version);
    internal static void ValidateFeedOrEntryMetadataUri(ODataJsonLightMetadataUriParseResult metadataUriParseResult, Scope scope);
    internal static void ValidateEntityReferenceLinkMetadataUri(ODataJsonLightMetadataUriParseResult metadataUriParseResult, IEdmNavigationProperty navigationProperty);
    internal static IEdmTypeReference ValidateCollectionMetadataUriAndGetPayloadItemTypeReference(ODataJsonLightMetadataUriParseResult metadataUriParseResult, IEdmTypeReference expectedItemTypeReference);
    internal static void ValidateOperationProperty(object propertyValue, string propertyName, string metadata, string operationsHeader);
    private static IEdmTypeReference ResolveAndValidateTargetTypeWithNoExpectedType(EdmTypeKind expectedTypeKind, IEdmType payloadType, ODataUndeclaredPropertyBehaviorKinds undeclaredPropertyBehaviorKinds);
    private static IEdmTypeReference ResolveAndValidateTargetTypeStrictValidationDisabled(EdmTypeKind expectedTypeKind, IEdmTypeReference expectedTypeReference, IEdmType payloadType);
    private static IEdmTypeReference ResolveAndValidateTargetTypeStrictValidationEnabled(EdmTypeKind expectedTypeKind, IEdmTypeReference expectedTypeReference, IEdmType payloadType);
    private static void VerifyPayloadTypeDefined(string payloadTypeName, IEdmType payloadType);
    private static void VerifyComplexType(IEdmTypeReference expectedTypeReference, IEdmType payloadType, bool failIfNotRelated);
    private static void VerifyCollectionComplexItemType(IEdmTypeReference expectedTypeReference, IEdmType payloadType);
    private static SerializationTypeNameAnnotation CreateSerializationTypeNameAnnotation(string payloadTypeName, IEdmTypeReference targetTypeReference);
    private static EdmTypeKind ComputeTargetTypeKind(IEdmTypeReference expectedTypeReference, bool forEntityValue, string payloadTypeName, EdmTypeKind payloadTypeKind, ODataMessageReaderSettings messageReaderSettings, Func`1<EdmTypeKind> typeKindFromPayloadFunc);
    private static EdmTypeKind GetExpectedTypeKind(IEdmTypeReference expectedTypeReference, ODataMessageReaderSettings messageReaderSettings);
    private static bool ShouldValidatePayloadTypeKind(ODataMessageReaderSettings messageReaderSettings, IEdmTypeReference expectedValueTypeReference, EdmTypeKind payloadTypeKind);
    private static void ValidateNullValueAllowed(IEdmTypeReference expectedValueTypeReference, bool validateNullValue, IEdmModel model, string propertyName);
    private static void ThrowNullValueForNonNullableTypeException(IEdmTypeReference expectedValueTypeReference, string propertyName);
}
internal class Microsoft.Data.OData.ReadOnlyEnumerable : object {
    private IEnumerable sourceEnumerable;
    internal ReadOnlyEnumerable(IEnumerable sourceEnumerable);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class Microsoft.Data.OData.ReadOnlyEnumerable`1 : ReadOnlyEnumerable {
    private IList`1<T> sourceList;
    private static SimpleLazy`1<ReadOnlyEnumerable`1<T>> EmptyInstance;
    [CompilerGeneratedAttribute]
private static Func`1<ReadOnlyEnumerable`1<T>> CS$<>9__CachedAnonymousMethodDelegate1;
    internal ReadOnlyEnumerable`1(IList`1<T> sourceList);
    private static ReadOnlyEnumerable`1();
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
    internal static ReadOnlyEnumerable`1<T> Empty();
    internal void AddToSourceList(T itemToAdd);
    [CompilerGeneratedAttribute]
private static ReadOnlyEnumerable`1<T> <.cctor>b__0();
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.ReadOnlyEnumerableExtensions : object {
    [ExtensionAttribute]
internal static bool IsEmptyReadOnlyEnumerable(IEnumerable`1<T> source);
    [ExtensionAttribute]
internal static ReadOnlyEnumerable`1<T> ToReadOnlyEnumerable(IEnumerable`1<T> source, string collectionName);
    [ExtensionAttribute]
internal static ReadOnlyEnumerable`1<T> GetOrCreateReadOnlyEnumerable(IEnumerable`1<T> source, string collectionName);
    [ExtensionAttribute]
internal static ReadOnlyEnumerable`1<T> ConcatToReadOnlyEnumerable(IEnumerable`1<T> source, string collectionName, T item);
    [ExtensionAttribute]
internal static void AddAction(ODataEntry entry, ODataAction action);
    [ExtensionAttribute]
internal static void AddFunction(ODataEntry entry, ODataFunction function);
    [ExtensionAttribute]
internal static void AddAssociationLink(ODataEntry entry, ODataAssociationLink associationLink);
}
internal class Microsoft.Data.OData.ReferenceEqualityComparer`1 : object {
    private static ReferenceEqualityComparer`1<T> instance;
    internal static ReferenceEqualityComparer`1<T> Instance { get; }
    internal static ReferenceEqualityComparer`1<T> get_Instance();
    public sealed virtual bool Equals(T x, T y);
    public sealed virtual int GetHashCode(T obj);
}
internal class Microsoft.Data.OData.SelectedPropertiesNode : object {
    private static char PathSeparator;
    private static char ItemSeparator;
    private static SelectedPropertiesNode Empty;
    private static SelectedPropertiesNode EntireSubtree;
    private static Dictionary`2<string, IEdmStructuralProperty> EmptyStreamProperties;
    private static IEnumerable`1<IEdmNavigationProperty> EmptyNavigationProperties;
    private SelectionType selectionType;
    private HashSet`1<string> selectedProperties;
    private Dictionary`2<string, SelectedPropertiesNode> children;
    private bool hasWildcard;
    [CompilerGeneratedAttribute]
private static Func`2<IEdmStructuralProperty, bool> CS$<>9__CachedAnonymousMethodDelegate9;
    [CompilerGeneratedAttribute]
private static Func`2<IEdmStructuralProperty, string> CS$<>9__CachedAnonymousMethodDelegatea;
    [CompilerGeneratedAttribute]
private static Func`2<IEdmStructuralProperty, bool> CS$<>9__CachedAnonymousMethodDelegateb;
    [CompilerGeneratedAttribute]
private static Func`2<IEdmStructuralProperty, string> CS$<>9__CachedAnonymousMethodDelegatec;
    internal SelectedPropertiesNode(string selectClause);
    private SelectedPropertiesNode(SelectionType selectionType);
    private static SelectedPropertiesNode();
    internal static SelectedPropertiesNode Create(string selectQueryOption);
    internal static SelectedPropertiesNode CombineNodes(SelectedPropertiesNode left, SelectedPropertiesNode right);
    internal SelectedPropertiesNode GetSelectedPropertiesForNavigationProperty(IEdmEntityType entityType, string navigationPropertyName);
    internal IEnumerable`1<IEdmNavigationProperty> GetSelectedNavigationProperties(IEdmEntityType entityType);
    internal IDictionary`2<string, IEdmStructuralProperty> GetSelectedStreamProperties(IEdmEntityType entityType);
    internal bool IsOperationSelected(IEdmEntityType entityType, IEdmFunctionImport operation, bool mustBeContainerQualified);
    private static IEnumerable`1<IEdmEntityType> GetBaseTypesAndSelf(IEdmEntityType entityType);
    private static HashSet`1<string> CreateSelectedPropertiesHashSet(IEnumerable`1<string> properties);
    private static HashSet`1<string> CreateSelectedPropertiesHashSet();
    private static IEnumerable`1<string> GetPossibleMatchesForSelectedOperation(IEdmFunctionImport operation, bool mustBeContainerQualified);
    private IEnumerable`1<SelectedPropertiesNode> GetMatchingTypeSegments(IEdmEntityType entityType);
    private void ParsePathSegment(String[] segments, int index);
    private SelectedPropertiesNode EnsureChildAnnotation(string segmentName);
    private bool IsOperationSelectedAtThisLevel(IEdmFunctionImport operation, bool mustBeContainerQualified);
    [CompilerGeneratedAttribute]
private static bool <GetSelectedStreamProperties>b__5(IEdmStructuralProperty sp);
    [CompilerGeneratedAttribute]
private static string <GetSelectedStreamProperties>b__6(IEdmStructuralProperty sp);
    [CompilerGeneratedAttribute]
private static bool <GetSelectedStreamProperties>b__7(IEdmStructuralProperty p);
    [CompilerGeneratedAttribute]
private static string <GetSelectedStreamProperties>b__8(IEdmStructuralProperty p);
    [CompilerGeneratedAttribute]
private bool <IsOperationSelectedAtThisLevel>b__22(string possibleMatch);
}
public class Microsoft.Data.OData.SerializationTypeNameAnnotation : object {
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    public string TypeName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
}
internal class Microsoft.Data.OData.SimpleLazy`1 : object {
    private object mutex;
    private Func`1<T> factory;
    private T value;
    private bool valueCreated;
    internal T Value { get; }
    internal SimpleLazy`1(Func`1<T> factory);
    internal SimpleLazy`1(Func`1<T> factory, bool isThreadSafe);
    internal T get_Value();
    private void CreateValue();
}
internal static class Microsoft.Data.OData.Strings : object {
    internal static string ExceptionUtils_ArgumentStringEmpty { get; }
    internal static string ODataRequestMessage_AsyncNotAvailable { get; }
    internal static string ODataRequestMessage_StreamTaskIsNull { get; }
    internal static string ODataRequestMessage_MessageStreamIsNull { get; }
    internal static string ODataResponseMessage_AsyncNotAvailable { get; }
    internal static string ODataResponseMessage_StreamTaskIsNull { get; }
    internal static string ODataResponseMessage_MessageStreamIsNull { get; }
    internal static string AsyncBufferedStream_WriterDisposedWithoutFlush { get; }
    internal static string ODataWriterCore_OnlyTopLevelFeedsSupportInlineCount { get; }
    internal static string ODataWriterCore_InlineCountInRequest { get; }
    internal static string ODataWriterCore_CannotWriteTopLevelFeedWithEntryWriter { get; }
    internal static string ODataWriterCore_CannotWriteTopLevelEntryWithFeedWriter { get; }
    internal static string ODataWriterCore_SyncCallOnAsyncWriter { get; }
    internal static string ODataWriterCore_AsyncCallOnSyncWriter { get; }
    internal static string ODataWriterCore_EntityReferenceLinkWithoutNavigationLink { get; }
    internal static string ODataWriterCore_EntityReferenceLinkInResponse { get; }
    internal static string ODataWriterCore_DeferredLinkInRequest { get; }
    internal static string ODataWriterCore_MultipleItemsInNavigationLinkContent { get; }
    internal static string ODataWriterCore_DeltaLinkNotSupportedOnExpandedFeed { get; }
    internal static string ODataException_GeneralError { get; }
    internal static string ODataErrorException_GeneralError { get; }
    internal static string ODataUriParserException_GeneralError { get; }
    internal static string ODataVersionChecker_ProtocolVersion3IsNotSupported { get; }
    internal static string ODataAtomCollectionWriter_CollectionNameMustNotBeNull { get; }
    internal static string ODataAtomWriter_StartEntryXmlCustomizationCallbackReturnedSameInstance { get; }
    internal static string ODataAtomWriterMetadataUtils_AuthorMetadataMustNotContainNull { get; }
    internal static string ODataAtomWriterMetadataUtils_CategoryMetadataMustNotContainNull { get; }
    internal static string ODataAtomWriterMetadataUtils_ContributorMetadataMustNotContainNull { get; }
    internal static string ODataAtomWriterMetadataUtils_LinkMetadataMustNotContainNull { get; }
    internal static string ODataAtomWriterMetadataUtils_LinkMustSpecifyHref { get; }
    internal static string ODataAtomWriterMetadataUtils_CategoryMustSpecifyTerm { get; }
    internal static string ODataAtomWriterMetadataUtils_CategoriesHrefWithOtherValues { get; }
    internal static string ODataMessageWriter_WriterAlreadyUsed { get; }
    internal static string ODataMessageWriter_EntityReferenceLinksInRequestNotAllowed { get; }
    internal static string ODataMessageWriter_ErrorPayloadInRequest { get; }
    internal static string ODataMessageWriter_ServiceDocumentInRequest { get; }
    internal static string ODataMessageWriter_MetadataDocumentInRequest { get; }
    internal static string ODataMessageWriter_CannotWriteNullInRawFormat { get; }
    internal static string ODataMessageWriter_WriteErrorAlreadyCalled { get; }
    internal static string ODataMessageWriter_CannotWriteInStreamErrorForRawValues { get; }
    internal static string ODataMessageWriter_CannotWriteMetadataWithoutModel { get; }
    internal static string ODataMessageWriter_CannotSpecifyFunctionImportWithoutModel { get; }
    internal static string ODataMessageWriterSettings_MessageWriterSettingsXmlCustomizationCallbacksMustBeSpecifiedBoth { get; }
    internal static string ODataCollectionWriterCore_SyncCallOnAsyncWriter { get; }
    internal static string ODataCollectionWriterCore_AsyncCallOnSyncWriter { get; }
    internal static string ODataCollectionWriterCore_CollectionsMustNotHaveEmptyName { get; }
    internal static string ODataParameterWriter_InStreamErrorNotSupported { get; }
    internal static string ODataParameterWriter_CannotCreateParameterWriterOnResponseMessage { get; }
    internal static string ODataParameterWriterCore_SyncCallOnAsyncWriter { get; }
    internal static string ODataParameterWriterCore_AsyncCallOnSyncWriter { get; }
    internal static string ODataParameterWriterCore_CannotWriteStart { get; }
    internal static string ODataParameterWriterCore_CannotWriteParameter { get; }
    internal static string ODataParameterWriterCore_CannotWriteEnd { get; }
    internal static string ODataParameterWriterCore_CannotWriteInErrorOrCompletedState { get; }
    internal static string ODataBatchWriter_FlushOrFlushAsyncCalledInStreamRequestedState { get; }
    internal static string ODataBatchWriter_CannotCompleteBatchWithActiveChangeSet { get; }
    internal static string ODataBatchWriter_CannotStartChangeSetWithActiveChangeSet { get; }
    internal static string ODataBatchWriter_CannotCompleteChangeSetWithoutActiveChangeSet { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromStart { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromBatchStarted { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromChangeSetStarted { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromOperationCreated { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromOperationContentStreamRequested { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromOperationContentStreamDisposed { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromChangeSetCompleted { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromBatchCompleted { get; }
    internal static string ODataBatchWriter_CannotCreateRequestOperationWhenWritingResponse { get; }
    internal static string ODataBatchWriter_CannotCreateResponseOperationWhenWritingRequest { get; }
    internal static string ODataBatchWriter_SyncCallOnAsyncWriter { get; }
    internal static string ODataBatchWriter_AsyncCallOnSyncWriter { get; }
    internal static string ODataBatchWriter_CannotWriteInStreamErrorForBatch { get; }
    internal static string ODataBatchOperationMessage_VerifyNotCompleted { get; }
    internal static string ODataBatchOperationStream_Disposed { get; }
    internal static string ODataBatchReader_CannotCreateRequestOperationWhenReadingResponse { get; }
    internal static string ODataBatchReader_CannotCreateResponseOperationWhenReadingRequest { get; }
    internal static string ODataBatchReader_OperationRequestMessageAlreadyCreated { get; }
    internal static string ODataBatchReader_OperationResponseMessageAlreadyCreated { get; }
    internal static string ODataBatchReader_CannotUseReaderWhileOperationStreamActive { get; }
    internal static string ODataBatchReader_SyncCallOnAsyncReader { get; }
    internal static string ODataBatchReader_AsyncCallOnSyncReader { get; }
    internal static string ODataBatchReader_NoMessageWasCreatedForOperation { get; }
    internal static string ODataBatchReaderStream_MissingContentTypeHeader { get; }
    internal static string ODataBatchReaderStream_NestedChangesetsAreNotSupported { get; }
    internal static string ODataBatchReaderStream_UnexpectedEndOfInput { get; }
    internal static string HttpUtils_MediaTypeMissingParameterName { get; }
    internal static string HttpUtils_ContentTypeMissing { get; }
    internal static string ODataUriUtils_ConvertFromUriLiteralTypeRefWithoutModel { get; }
    internal static string ODataUtils_CannotSaveAnnotationsToBuiltInModel { get; }
    internal static string ODataUtils_UnsupportedVersionNumber { get; }
    internal static string ODataUtils_NullValueForMimeTypeAnnotation { get; }
    internal static string ODataUtils_NullValueForHttpMethodAnnotation { get; }
    internal static string ODataUtils_IsAlwaysBindableAnnotationSetForANonBindableFunctionImport { get; }
    internal static string ODataUtils_UnexpectedIsAlwaysBindableAnnotationInANonBindableFunctionImport { get; }
    internal static string ReaderValidationUtils_EntityReferenceLinkMissingUri { get; }
    internal static string ReaderValidationUtils_ValueWithoutType { get; }
    internal static string ReaderValidationUtils_EntryWithoutType { get; }
    internal static string ReaderValidationUtils_UndeclaredPropertyBehaviorKindSpecifiedOnRequest { get; }
    internal static string ODataMessageReader_ReaderAlreadyUsed { get; }
    internal static string ODataMessageReader_ErrorPayloadInRequest { get; }
    internal static string ODataMessageReader_ServiceDocumentInRequest { get; }
    internal static string ODataMessageReader_MetadataDocumentInRequest { get; }
    internal static string ODataMessageReader_ExpectedPropertyTypeEntityCollectionKind { get; }
    internal static string ODataMessageReader_ExpectedPropertyTypeEntityKind { get; }
    internal static string ODataMessageReader_ExpectedPropertyTypeStream { get; }
    internal static string ODataMessageReader_NoneOrEmptyContentTypeHeader { get; }
    internal static string ODataMessageReader_EntityReferenceLinksInRequestNotAllowed { get; }
    internal static string ODataMessageReader_GetFormatCalledBeforeReadingStarted { get; }
    internal static string ODataMessageReader_DetectPayloadKindMultipleTimes { get; }
    internal static string ODataMessageReader_PayloadKindDetectionRunning { get; }
    internal static string ODataMessageReader_PayloadKindDetectionInServerMode { get; }
    internal static string ODataMessageReader_ParameterPayloadInResponse { get; }
    internal static string ODataMessage_MustNotModifyMessage { get; }
    internal static string ODataReaderCore_SyncCallOnAsyncReader { get; }
    internal static string ODataReaderCore_AsyncCallOnSyncReader { get; }
    internal static string ODataJsonReader_ParsingWithoutMetadata { get; }
    internal static string ODataJsonReaderUtils_CannotConvertInt64OrDecimal { get; }
    internal static string ODataJsonDeserializer_DataWrapperPropertyNotFound { get; }
    internal static string ODataJsonDeserializer_DataWrapperMultipleProperties { get; }
    internal static string ODataJsonCollectionDeserializer_MissingResultsPropertyForCollection { get; }
    internal static string ODataJsonCollectionDeserializer_MultipleResultsPropertiesForCollection { get; }
    internal static string ODataJsonEntityReferenceLinkDeserializer_ExpectedEntityReferenceLinksResultsPropertyNotFound { get; }
    internal static string ODataJsonEntityReferenceLinkDeserializer_MultipleUriPropertiesInEntityReferenceLink { get; }
    internal static string ODataJsonEntityReferenceLinkDeserializer_EntityReferenceLinkUriCannotBeNull { get; }
    internal static string ODataJsonEntryAndFeedDeserializer_ExpectedFeedResultsPropertyNotFound { get; }
    internal static string ODataJsonEntryAndFeedDeserializer_MultipleMetadataPropertiesInEntryValue { get; }
    internal static string ODataJsonEntryAndFeedDeserializer_MultipleUriPropertiesInDeferredLink { get; }
    internal static string ODataJsonEntryAndFeedDeserializer_DeferredLinkUriCannotBeNull { get; }
    internal static string ODataJsonEntryAndFeedDeserializer_DeferredLinkMissingUri { get; }
    internal static string ODataJsonEntryAndFeedDeserializer_CannotReadNavigationPropertyValue { get; }
    internal static string ODataJsonEntryAndFeedDeserializer_MultipleFeedResultsPropertiesFound { get; }
    internal static string ODataJsonEntryAndFeedDeserializer_CannotParseStreamReference { get; }
    internal static string ODataJsonEntryAndFeedDeserializer_StreamPropertyInRequest { get; }
    internal static string ODataJsonLightEntryAndFeedSerializer_AnnotationGroupWithoutName { get; }
    internal static string ODataJsonLightEntryAndFeedSerializer_AnnotationGroupInRequest { get; }
    internal static string ODataJsonPropertyAndValueDeserializer_TopLevelPropertyWithoutMetadata { get; }
    internal static string ODataJsonPropertyAndValueDeserializer_InvalidTopLevelPropertyPayload { get; }
    internal static string ODataJsonPropertyAndValueDeserializer_MultipleMetadataPropertiesInComplexValue { get; }
    internal static string ODataJsonPropertyAndValueDeserializer_CollectionWithoutResults { get; }
    internal static string ODataJsonServiceDocumentDeserializer_MultipleEntitySetsPropertiesForServiceDocument { get; }
    internal static string ODataJsonServiceDocumentDeserializer_NoEntitySetsPropertyForServiceDocument { get; }
    internal static string ODataCollectionReaderCore_SyncCallOnAsyncReader { get; }
    internal static string ODataCollectionReaderCore_AsyncCallOnSyncReader { get; }
    internal static string ODataParameterReaderCore_SyncCallOnAsyncReader { get; }
    internal static string ODataParameterReaderCore_AsyncCallOnSyncReader { get; }
    internal static string ODataJsonCollectionReader_ParsingWithoutMetadata { get; }
    internal static string ValidationUtils_AssociationLinkMustSpecifyName { get; }
    internal static string ValidationUtils_AssociationLinkMustSpecifyUrl { get; }
    internal static string ValidationUtils_TypeNameMustNotBeEmpty { get; }
    internal static string ValidationUtils_ResourceCollectionMustSpecifyUrl { get; }
    internal static string ValidationUtils_ResourceCollectionUrlMustNotBeNull { get; }
    internal static string ValidationUtils_NonStreamingCollectionElementsMustNotBeNull { get; }
    internal static string ValidationUtils_LinkMustSpecifyName { get; }
    internal static string ValidationUtils_NestedCollectionsAreNotSupported { get; }
    internal static string ValidationUtils_StreamReferenceValuesNotSupportedInCollections { get; }
    internal static string ValidationUtils_WorkspaceCollectionsMustNotContainNullItem { get; }
    internal static string ODataAtomWriter_FeedsMustHaveNonEmptyId { get; }
    internal static string WriterValidationUtils_PropertyMustNotBeNull { get; }
    internal static string WriterValidationUtils_PropertiesMustHaveNonEmptyName { get; }
    internal static string WriterValidationUtils_MissingTypeNameWithMetadata { get; }
    internal static string WriterValidationUtils_NextPageLinkInRequest { get; }
    internal static string WriterValidationUtils_DefaultStreamWithContentTypeWithoutReadLink { get; }
    internal static string WriterValidationUtils_DefaultStreamWithReadLinkWithoutContentType { get; }
    internal static string WriterValidationUtils_StreamReferenceValueMustHaveEditLinkOrReadLink { get; }
    internal static string WriterValidationUtils_StreamReferenceValueMustHaveEditLinkToHaveETag { get; }
    internal static string WriterValidationUtils_StreamReferenceValueEmptyContentType { get; }
    internal static string WriterValidationUtils_EntriesMustHaveNonEmptyId { get; }
    internal static string WriterValidationUtils_EntityReferenceLinkUrlMustNotBeNull { get; }
    internal static string WriterValidationUtils_EntityReferenceLinksLinkMustNotBeNull { get; }
    internal static string WriterValidationUtils_MessageWriterSettingsJsonPaddingOnRequestMessage { get; }
    internal static string ODataAtomReader_MediaLinkEntryMismatch { get; }
    internal static string ODataAtomReader_ExpandedFeedInEntryNavigationLink { get; }
    internal static string ODataAtomReader_ExpandedEntryInFeedNavigationLink { get; }
    internal static string ODataAtomReader_DeferredEntryInFeedNavigationLink { get; }
    internal static string ODataAtomReader_EntryXmlCustomizationCallbackReturnedSameInstance { get; }
    internal static string ODataAtomReaderUtils_InvalidTypeName { get; }
    internal static string ODataAtomCollectionDeserializer_TypeOrNullAttributeNotAllowed { get; }
    internal static string EdmLibraryExtensions_CollectionItemCanBeOnlyPrimitiveOrComplex { get; }
    internal static string ODataAtomEntryAndFeedDeserializer_ContentWithSourceLinkIsNotEmpty { get; }
    internal static string ODataAtomEntryAndFeedDeserializer_MultipleInlineElementsInLink { get; }
    internal static string ODataAtomEntryAndFeedDeserializer_StreamPropertyWithEmptyName { get; }
    internal static string ODataAtomEntryAndFeedDeserializer_EncounteredAnnotationInNestedFeed { get; }
    internal static string ODataAtomEntryAndFeedDeserializer_EncounteredDeltaLinkInNestedFeed { get; }
    internal static string ODataAtomServiceDocumentDeserializer_MissingWorkspaceElement { get; }
    internal static string ODataAtomServiceDocumentDeserializer_MultipleWorkspaceElementsFound { get; }
    internal static string ODataAtomServiceDocumentMetadataDeserializer_MultipleAcceptElementsFoundInCollection { get; }
    internal static string ODataJsonLightInputContext_MetadataDocumentUriMissing { get; }
    internal static string ODataJsonLightInputContext_PayloadKindDetectionForRequest { get; }
    internal static string ODataJsonLightInputContext_NoEntitySetForRequest { get; }
    internal static string ODataJsonLightInputContext_FunctionImportOrItemTypeRequiredForCollectionReaderInRequests { get; }
    internal static string ODataJsonLightInputContext_NavigationPropertyRequiredForReadEntityReferenceLinkInRequests { get; }
    internal static string ODataJsonLightInputContext_ModelRequiredForReading { get; }
    internal static string ODataJsonLightInputContext_BaseUriMustBeNonNullAndAbsolute { get; }
    internal static string ODataJsonLightInputContext_ItemTypeRequiredForCollectionReaderInRequests { get; }
    internal static string ODataJsonLightInputContext_NoItemTypeSpecified { get; }
    internal static string ODataJsonLightDeserializer_MetadataLinkNotFoundAsFirstProperty { get; }
    internal static string ODataJsonLightWriter_EntityReferenceLinkAfterFeedInRequest { get; }
    internal static string ODataJsonLightWriter_InstanceAnnotationNotSupportedOnExpandedFeed { get; }
    internal static string ODataJsonLightOutputContext_MetadataDocumentUriMissing { get; }
    internal static string ODataJsonLightPropertyAndValueSerializer_NoExpectedTypeOrTypeNameSpecifiedForComplexValueRequest { get; }
    internal static string ODataJsonLightPropertyAndValueSerializer_NoExpectedTypeOrTypeNameSpecifiedForCollectionValueInRequest { get; }
    internal static string ODataJsonLightServiceDocumentSerializer_ResourceCollectionMustSpecifyName { get; }
    internal static string ODataFeedAndEntryTypeContext_MetadataOrSerializationInfoMissing { get; }
    internal static string ODataFeedAndEntryTypeContext_ODataEntryTypeNameMissing { get; }
    internal static string ODataJsonLightMetadataUriBuilder_TypeNameMissingForTopLevelCollectionWhenWritingResponsePayload { get; }
    internal static string ODataJsonLightMetadataUriBuilder_EntitySetOrNavigationPropertyMissingForTopLevelEntityReferenceLinkResponse { get; }
    internal static string ODataJsonLightMetadataUriBuilder_EntitySetOrNavigationPropertyMissingForTopLevelEntityReferenceLinksResponse { get; }
    internal static string ODataJsonLightPropertyAndValueDeserializer_InvalidTopLevelPropertyPayload { get; }
    internal static string ODataJsonLightPropertyAndValueDeserializer_ComplexTypeAnnotationNotFirst { get; }
    internal static string ODataJsonReaderCoreUtils_CannotReadSpatialPropertyValue { get; }
    internal static string ODataJsonLightMetadataUriParser_NullMetadataDocumentUri { get; }
    internal static string ODataJsonLightMetadataUriParser_NoModel { get; }
    internal static string ODataJsonLightMetadataUriParser_ModelResolverReturnedNull { get; }
    internal static string ODataJsonLightEntryAndFeedDeserializer_EntryTypeAnnotationNotFirst { get; }
    internal static string ODataJsonLightEntryAndFeedDeserializer_FeedPropertyAnnotationForTopLevelFeed { get; }
    internal static string ODataJsonLightEntryAndFeedDeserializer_StreamPropertyInRequest { get; }
    internal static string ODataJsonLightEntryAndFeedDeserializer_CannotReadNavigationPropertyValue { get; }
    internal static string ODataJsonLightEntryAndFeedDeserializer_AnnotationGroupWithoutName { get; }
    internal static string ODataJsonLightEntryAndFeedDeserializer_AnnotationGroupInRequest { get; }
    internal static string ODataJsonLightEntryAndFeedDeserializer_MetadataReferencePropertyInRequest { get; }
    internal static string ODataJsonLightEntryAndFeedDeserializer_EncounteredAnnotationGroupInUnexpectedPosition { get; }
    internal static string ODataJsonLightEntryAndFeedDeserializer_EntryTypeAlreadySpecified { get; }
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_PropertyAnnotationForEntityReferenceLinks { get; }
    internal static string ODataJsonLightParameterDeserializer_PropertyAnnotationForParameters { get; }
    internal static string SelectedPropertiesNode_StarSegmentNotLastSegment { get; }
    internal static string SelectedPropertiesNode_StarSegmentAfterTypeSegment { get; }
    internal static string JsonLightAnnotationGroupDeserializer_AnnotationGroupDeclarationWithoutName { get; }
    internal static string JsonLightAnnotationGroupDeserializer_EncounteredMultipleNameProperties { get; }
    internal static string ODataPrimitiveValue_CannotCreateODataPrimitiveValueFromNull { get; }
    internal static string ODataAnnotatable_InstanceAnnotationsOnlyOnODataError { get; }
    internal static string ODataInstanceAnnotation_ValueCannotBeODataStreamReferenceValue { get; }
    internal static string ODataJsonLightValueSerializer_MissingTypeNameOnComplex { get; }
    internal static string ODataJsonLightValueSerializer_MissingTypeNameOnCollection { get; }
    internal static string AtomInstanceAnnotation_MissingTermAttributeOnAnnotationElement { get; }
    internal static string AtomInstanceAnnotation_MultipleAttributeValueNotationAttributes { get; }
    internal static string JsonFullMetadataLevel_MissingEntitySet { get; }
    internal static string ODataQueryUtils_CannotSetMetadataAnnotationOnPrimitiveType { get; }
    internal static string SyntacticTree_MaxDepthInvalid { get; }
    internal static string UriQueryExpressionParser_TooDeep { get; }
    internal static string UriQueryExpressionParser_RepeatedVisitor { get; }
    internal static string UriQueryPathParser_SyntaxError { get; }
    internal static string UriQueryPathParser_TooManySegments { get; }
    internal static string SelectionItemBinder_NonNavigationPathToken { get; }
    internal static string SelectTreeNormalizer_NonPathProperty { get; }
    internal static string ExpandItem_NonEntityNavProp { get; }
    internal static string MetadataBinder_UnsupportedExtensionToken { get; }
    internal static string MetadataBinder_FilterExpressionNotSingleValue { get; }
    internal static string MetadataBinder_OrderByExpressionNotSingleValue { get; }
    internal static string MetadataBinder_PropertyAccessWithoutParentParameter { get; }
    internal static string MetadataBinder_BuiltInFunctionSignatureWithoutAReturnType { get; }
    internal static string MetadataBinder_MustBeCalledOnRoot { get; }
    internal static string MetadataBinder_NoTypeSupported { get; }
    internal static string MetadataBinder_LambdaParentMustBeCollection { get; }
    internal static string MetadataBinder_NullNavigationProperty { get; }
    internal static string MetadataBinder_NavigationPropertyNotFollowingSingleEntityType { get; }
    internal static string MetadataBinder_AnyAllExpressionNotSingleValue { get; }
    internal static string MetadataBinder_CastOrIsOfFunctionWithoutATypeArgument { get; }
    internal static string MetadataBinder_CastOrIsOfCollectionsNotSupported { get; }
    internal static string MetadataBinder_SpatialLengthFunctionWithoutASingleValueArg { get; }
    internal static string MetadataBinder_SpatialLengthFunctionWithOutLineStringArg { get; }
    internal static string MetadataBinder_SpatialIntersectsFunctionWithoutASingleValueArg { get; }
    internal static string MetadataBinder_SpatialIntersectsFunctionWithInvalidArgTypes { get; }
    internal static string MetadataBinder_NonValidTypeArgument { get; }
    internal static string MetadataBinder_CollectionOpenPropertiesNotSupportedInThisRelease { get; }
    internal static string FunctionCallParser_DuplicateParameterName { get; }
    internal static string SelectionItemBinder_NonPathSelectToken { get; }
    internal static string SelectPropertyVisitor_DisparateTypeSegmentsInSelectExpand { get; }
    internal static string SelectExpandClause_CannotDeleteFromAllSelection { get; }
    internal static string SegmentFactory_LinksSegmentNotFollowedByNavProp { get; }
    internal static string ExpandItemBinder_TraversingANonNormalizedTree { get; }
    internal static string ExpandItemBinder_TypeSegmentNotFollowedByPath { get; }
    internal static string ExpandItemBinder_PathTooDeep { get; }
    internal static string Nodes_CollectionNavigationNode_MustHaveSingleMultiplicity { get; }
    internal static string Nodes_CollectionNavigationNode_MustHaveManyMultiplicity { get; }
    internal static string Nodes_NonStaticEntitySetExpressionsAreNotSupportedInThisRelease { get; }
    internal static string Nodes_CollectionFunctionCallNode_ItemTypeMustBePrimitiveOrComplex { get; }
    internal static string Nodes_EntityCollectionFunctionCallNode_ItemTypeMustBeAnEntity { get; }
    internal static string ExpandTreeNormalizer_CallAddTermsOnUnexpandedTerms { get; }
    internal static string ExpandTreeNormalizer_NonPathInPropertyChain { get; }
    internal static string UriParser_NeedServiceRootForThisOverload { get; }
    internal static string UriParser_NegativeLimit { get; }
    internal static string PathParser_FunctionsAreNotSupported { get; }
    internal static string PathParser_CannotUseValueOnCollection { get; }
    internal static string ODataFeed_MustNotContainBothNextPageLinkAndDeltaLink { get; }
    internal static string ODataExpandPath_OnlyLastSegmentMustBeNavigationProperty { get; }
    internal static string ODataSelectPath_CannotEndInTypeSegment { get; }
    internal static string ODataSelectPath_OperationSegmentCanOnlyBeLastSegment { get; }
    internal static string ODataSelectPath_NavPropSegmentCanOnlyBeLastSegment { get; }
    internal static string OperationSegment_ReturnTypeForMultipleOverloads { get; }
    internal static string OperationSegment_CannotReturnNull { get; }
    internal static string SingleValueFunctionCallNode_FunctionImportsWithLegacyConstructor { get; }
    internal static string SingleEntityFunctionCallNode_CallFunctionImportsUsingLegacyConstructor { get; }
    internal static string SegmentArgumentParser_TryConvertValuesForNamedValues { get; }
    internal static string SegmentArgumentParser_TryConvertValuesToNonPrimitive { get; }
    internal static string SegmentArgumentParser_TryConvertValuesForPositionalValues { get; }
    internal static string RequestUriProcessor_EmptySegmentInRequestUrl { get; }
    internal static string RequestUriProcessor_SyntaxError { get; }
    internal static string RequestUriProcessor_CountOnRoot { get; }
    internal static string BadRequest_ValuesCannotBeReturnedForSpatialTypes { get; }
    internal static string BadRequest_ResourceCanBeCrossReferencedOnlyForBindOperation { get; }
    internal static string RequestUriProcessor_KeysMustBeNamed { get; }
    internal static string RequestUriProcessor_Forbidden { get; }
    internal static string RequestUriProcessor_OperationSegmentBoundToANonEntityType { get; }
    internal static string ExceptionUtils_ArgumentStringNullOrEmpty { get; }
    internal static string ExpressionLexer_UnbalancedBracketExpression { get; }
    internal static string JsonReader_MultipleTopLevelValues { get; }
    internal static string JsonReader_EndOfInputWithOpenScope { get; }
    internal static string JsonReader_UnrecognizedToken { get; }
    internal static string JsonReader_UnexpectedEndOfString { get; }
    internal static string get_ExceptionUtils_ArgumentStringEmpty();
    internal static string get_ODataRequestMessage_AsyncNotAvailable();
    internal static string get_ODataRequestMessage_StreamTaskIsNull();
    internal static string get_ODataRequestMessage_MessageStreamIsNull();
    internal static string get_ODataResponseMessage_AsyncNotAvailable();
    internal static string get_ODataResponseMessage_StreamTaskIsNull();
    internal static string get_ODataResponseMessage_MessageStreamIsNull();
    internal static string get_AsyncBufferedStream_WriterDisposedWithoutFlush();
    internal static string ODataOutputContext_UnsupportedPayloadKindForFormat(object p0, object p1);
    internal static string ODataOutputContext_CustomInstanceAnnotationsNotSupportedForFormat(object p0);
    internal static string ODataInputContext_UnsupportedPayloadKindForFormat(object p0, object p1);
    internal static string ODataJsonLightSerializer_RelativeUriUsedWithoutMetadataDocumentUriOrMetadata(object p0);
    internal static string ODataWriter_RelativeUriUsedWithoutBaseUriSpecified(object p0);
    internal static string ODataWriter_StreamPropertiesMustBePropertiesOfODataEntry(object p0);
    internal static string ODataWriterCore_InvalidStateTransition(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromStart(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromEntry(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromNullEntry(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromFeed(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromExpandedLink(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromCompleted(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromError(object p0, object p1);
    internal static string ODataWriterCore_WriteEndCalledInInvalidState(object p0);
    internal static string get_ODataWriterCore_OnlyTopLevelFeedsSupportInlineCount();
    internal static string get_ODataWriterCore_InlineCountInRequest();
    internal static string get_ODataWriterCore_CannotWriteTopLevelFeedWithEntryWriter();
    internal static string get_ODataWriterCore_CannotWriteTopLevelEntryWithFeedWriter();
    internal static string get_ODataWriterCore_SyncCallOnAsyncWriter();
    internal static string get_ODataWriterCore_AsyncCallOnSyncWriter();
    internal static string get_ODataWriterCore_EntityReferenceLinkWithoutNavigationLink();
    internal static string get_ODataWriterCore_EntityReferenceLinkInResponse();
    internal static string get_ODataWriterCore_DeferredLinkInRequest();
    internal static string get_ODataWriterCore_MultipleItemsInNavigationLinkContent();
    internal static string get_ODataWriterCore_DeltaLinkNotSupportedOnExpandedFeed();
    internal static string DuplicatePropertyNamesChecker_DuplicatePropertyNamesNotAllowed(object p0);
    internal static string DuplicatePropertyNamesChecker_MultipleLinksForSingleton(object p0);
    internal static string DuplicatePropertyNamesChecker_DuplicateAnnotationNotAllowed(object p0);
    internal static string DuplicatePropertyNamesChecker_DuplicateAnnotationForPropertyNotAllowed(object p0, object p1);
    internal static string DuplicatePropertyNamesChecker_DuplicateAnnotationForInstanceAnnotationNotAllowed(object p0, object p1);
    internal static string DuplicatePropertyNamesChecker_PropertyAnnotationAfterTheProperty(object p0, object p1);
    internal static string AtomValueUtils_CannotConvertValueToAtomPrimitive(object p0);
    internal static string ODataJsonWriter_UnsupportedValueType(object p0);
    internal static string get_ODataException_GeneralError();
    internal static string get_ODataErrorException_GeneralError();
    internal static string get_ODataUriParserException_GeneralError();
    internal static string ODataVersionChecker_MaxProtocolVersionExceeded(object p0, object p1);
    internal static string ODataVersionChecker_PropertyNotSupportedForODataVersionGreaterThanX(object p0, object p1);
    internal static string ODataVersionChecker_ParameterPayloadNotSupported(object p0);
    internal static string ODataVersionChecker_AssociationLinksNotSupported(object p0);
    internal static string ODataVersionChecker_InlineCountNotSupported(object p0);
    internal static string ODataVersionChecker_NextLinkNotSupported(object p0);
    internal static string ODataVersionChecker_DeltaLinkNotSupported(object p0);
    internal static string ODataVersionChecker_CollectionPropertiesNotSupported(object p0, object p1);
    internal static string ODataVersionChecker_CollectionNotSupported(object p0);
    internal static string ODataVersionChecker_StreamPropertiesNotSupported(object p0);
    internal static string ODataVersionChecker_EpmVersionNotSupported(object p0, object p1, object p2);
    internal static string get_ODataVersionChecker_ProtocolVersion3IsNotSupported();
    internal static string ODataVersionChecker_GeographyAndGeometryNotSupported(object p0);
    internal static string get_ODataAtomCollectionWriter_CollectionNameMustNotBeNull();
    internal static string get_ODataAtomWriter_StartEntryXmlCustomizationCallbackReturnedSameInstance();
    internal static string get_ODataAtomWriterMetadataUtils_AuthorMetadataMustNotContainNull();
    internal static string get_ODataAtomWriterMetadataUtils_CategoryMetadataMustNotContainNull();
    internal static string get_ODataAtomWriterMetadataUtils_ContributorMetadataMustNotContainNull();
    internal static string get_ODataAtomWriterMetadataUtils_LinkMetadataMustNotContainNull();
    internal static string get_ODataAtomWriterMetadataUtils_LinkMustSpecifyHref();
    internal static string get_ODataAtomWriterMetadataUtils_CategoryMustSpecifyTerm();
    internal static string ODataAtomWriterMetadataUtils_LinkHrefsMustMatch(object p0, object p1);
    internal static string ODataAtomWriterMetadataUtils_LinkTitlesMustMatch(object p0, object p1);
    internal static string ODataAtomWriterMetadataUtils_LinkRelationsMustMatch(object p0, object p1);
    internal static string ODataAtomWriterMetadataUtils_LinkMediaTypesMustMatch(object p0, object p1);
    internal static string ODataAtomWriterMetadataUtils_InvalidAnnotationValue(object p0, object p1);
    internal static string get_ODataAtomWriterMetadataUtils_CategoriesHrefWithOtherValues();
    internal static string ODataAtomWriterMetadataUtils_CategoryTermsMustMatch(object p0, object p1);
    internal static string ODataAtomWriterMetadataUtils_CategorySchemesMustMatch(object p0, object p1);
    internal static string ODataAtomMetadataEpmMerge_TextKindConflict(object p0, object p1, object p2);
    internal static string ODataAtomMetadataEpmMerge_TextValueConflict(object p0, object p1, object p2);
    internal static string get_ODataMessageWriter_WriterAlreadyUsed();
    internal static string ODataMessageWriter_InvalidContentTypeForWritingRawValue(object p0);
    internal static string get_ODataMessageWriter_EntityReferenceLinksInRequestNotAllowed();
    internal static string get_ODataMessageWriter_ErrorPayloadInRequest();
    internal static string get_ODataMessageWriter_ServiceDocumentInRequest();
    internal static string get_ODataMessageWriter_MetadataDocumentInRequest();
    internal static string get_ODataMessageWriter_CannotWriteNullInRawFormat();
    internal static string ODataMessageWriter_CannotSetHeadersWithInvalidPayloadKind(object p0);
    internal static string ODataMessageWriter_IncompatiblePayloadKinds(object p0, object p1);
    internal static string ODataMessageWriter_CannotWriteStreamPropertyAsTopLevelProperty(object p0);
    internal static string ODataMessageWriter_InvalidPropertyOwningType(object p0, object p1);
    internal static string ODataMessageWriter_InvalidPropertyProducingFunctionImport(object p0);
    internal static string get_ODataMessageWriter_WriteErrorAlreadyCalled();
    internal static string get_ODataMessageWriter_CannotWriteInStreamErrorForRawValues();
    internal static string get_ODataMessageWriter_CannotWriteMetadataWithoutModel();
    internal static string get_ODataMessageWriter_CannotSpecifyFunctionImportWithoutModel();
    internal static string ODataMessageWriter_EntityReferenceLinksWithSingletonNavPropNotAllowed(object p0);
    internal static string ODataMessageWriter_JsonPaddingOnInvalidContentType(object p0);
    internal static string ODataMessageWriter_NonCollectionType(object p0);
    internal static string get_ODataMessageWriterSettings_MessageWriterSettingsXmlCustomizationCallbacksMustBeSpecifiedBoth();
    internal static string ODataCollectionWriter_CannotCreateCollectionWriterForFormat(object p0);
    internal static string ODataCollectionWriterCore_InvalidTransitionFromStart(object p0, object p1);
    internal static string ODataCollectionWriterCore_InvalidTransitionFromCollection(object p0, object p1);
    internal static string ODataCollectionWriterCore_InvalidTransitionFromItem(object p0, object p1);
    internal static string ODataCollectionWriterCore_WriteEndCalledInInvalidState(object p0);
    internal static string get_ODataCollectionWriterCore_SyncCallOnAsyncWriter();
    internal static string get_ODataCollectionWriterCore_AsyncCallOnSyncWriter();
    internal static string get_ODataCollectionWriterCore_CollectionsMustNotHaveEmptyName();
    internal static string ODataCollectionWriterCore_CollectionNameDoesntMatchFunctionImportName(object p0, object p1);
    internal static string ODataCollectionWriterCore_NonCollectionType(object p0, object p1);
    internal static string ODataBatch_InvalidHttpMethodForQueryOperation(object p0);
    internal static string ODataBatch_InvalidHttpMethodForChangeSetRequest(object p0);
    internal static string ODataBatchOperationHeaderDictionary_KeyNotFound(object p0);
    internal static string ODataBatchOperationHeaderDictionary_DuplicateCaseInsensitiveKeys(object p0);
    internal static string get_ODataParameterWriter_InStreamErrorNotSupported();
    internal static string get_ODataParameterWriter_CannotCreateParameterWriterOnResponseMessage();
    internal static string get_ODataParameterWriterCore_SyncCallOnAsyncWriter();
    internal static string get_ODataParameterWriterCore_AsyncCallOnSyncWriter();
    internal static string get_ODataParameterWriterCore_CannotWriteStart();
    internal static string get_ODataParameterWriterCore_CannotWriteParameter();
    internal static string get_ODataParameterWriterCore_CannotWriteEnd();
    internal static string get_ODataParameterWriterCore_CannotWriteInErrorOrCompletedState();
    internal static string ODataParameterWriterCore_DuplicatedParameterNameNotAllowed(object p0);
    internal static string ODataParameterWriterCore_CannotWriteValueOnNonValueTypeKind(object p0, object p1);
    internal static string ODataParameterWriterCore_CannotWriteValueOnNonSupportedValueType(object p0, object p1);
    internal static string ODataParameterWriterCore_CannotCreateCollectionWriterOnNonCollectionTypeKind(object p0, object p1);
    internal static string ODataParameterWriterCore_ParameterNameNotFoundInFunctionImport(object p0, object p1);
    internal static string ODataParameterWriterCore_MissingParameterInParameterPayload(object p0, object p1);
    internal static string get_ODataBatchWriter_FlushOrFlushAsyncCalledInStreamRequestedState();
    internal static string get_ODataBatchWriter_CannotCompleteBatchWithActiveChangeSet();
    internal static string get_ODataBatchWriter_CannotStartChangeSetWithActiveChangeSet();
    internal static string get_ODataBatchWriter_CannotCompleteChangeSetWithoutActiveChangeSet();
    internal static string get_ODataBatchWriter_InvalidTransitionFromStart();
    internal static string get_ODataBatchWriter_InvalidTransitionFromBatchStarted();
    internal static string get_ODataBatchWriter_InvalidTransitionFromChangeSetStarted();
    internal static string get_ODataBatchWriter_InvalidTransitionFromOperationCreated();
    internal static string get_ODataBatchWriter_InvalidTransitionFromOperationContentStreamRequested();
    internal static string get_ODataBatchWriter_InvalidTransitionFromOperationContentStreamDisposed();
    internal static string get_ODataBatchWriter_InvalidTransitionFromChangeSetCompleted();
    internal static string get_ODataBatchWriter_InvalidTransitionFromBatchCompleted();
    internal static string get_ODataBatchWriter_CannotCreateRequestOperationWhenWritingResponse();
    internal static string get_ODataBatchWriter_CannotCreateResponseOperationWhenWritingRequest();
    internal static string ODataBatchWriter_MaxBatchSizeExceeded(object p0);
    internal static string ODataBatchWriter_MaxChangeSetSizeExceeded(object p0);
    internal static string get_ODataBatchWriter_SyncCallOnAsyncWriter();
    internal static string get_ODataBatchWriter_AsyncCallOnSyncWriter();
    internal static string ODataBatchWriter_DuplicateContentIDsNotAllowed(object p0);
    internal static string get_ODataBatchWriter_CannotWriteInStreamErrorForBatch();
    internal static string ODataBatchUtils_RelativeUriUsedWithoutBaseUriSpecified(object p0);
    internal static string ODataBatchUtils_RelativeUriStartingWithDollarUsedWithoutBaseUriSpecified(object p0);
    internal static string get_ODataBatchOperationMessage_VerifyNotCompleted();
    internal static string get_ODataBatchOperationStream_Disposed();
    internal static string get_ODataBatchReader_CannotCreateRequestOperationWhenReadingResponse();
    internal static string get_ODataBatchReader_CannotCreateResponseOperationWhenReadingRequest();
    internal static string ODataBatchReader_InvalidStateForCreateOperationRequestMessage(object p0);
    internal static string get_ODataBatchReader_OperationRequestMessageAlreadyCreated();
    internal static string get_ODataBatchReader_OperationResponseMessageAlreadyCreated();
    internal static string ODataBatchReader_InvalidStateForCreateOperationResponseMessage(object p0);
    internal static string get_ODataBatchReader_CannotUseReaderWhileOperationStreamActive();
    internal static string get_ODataBatchReader_SyncCallOnAsyncReader();
    internal static string get_ODataBatchReader_AsyncCallOnSyncReader();
    internal static string ODataBatchReader_ReadOrReadAsyncCalledInInvalidState(object p0);
    internal static string ODataBatchReader_MaxBatchSizeExceeded(object p0);
    internal static string ODataBatchReader_MaxChangeSetSizeExceeded(object p0);
    internal static string get_ODataBatchReader_NoMessageWasCreatedForOperation();
    internal static string ODataBatchReader_DuplicateContentIDsNotAllowed(object p0);
    internal static string ODataBatchReaderStream_InvalidHeaderSpecified(object p0);
    internal static string ODataBatchReaderStream_InvalidRequestLine(object p0);
    internal static string ODataBatchReaderStream_InvalidResponseLine(object p0);
    internal static string ODataBatchReaderStream_InvalidHttpVersionSpecified(object p0, object p1);
    internal static string ODataBatchReaderStream_NonIntegerHttpStatusCode(object p0);
    internal static string get_ODataBatchReaderStream_MissingContentTypeHeader();
    internal static string ODataBatchReaderStream_MissingOrInvalidContentEncodingHeader(object p0, object p1);
    internal static string ODataBatchReaderStream_InvalidContentTypeSpecified(object p0, object p1, object p2, object p3);
    internal static string ODataBatchReaderStream_InvalidContentLengthSpecified(object p0);
    internal static string ODataBatchReaderStream_DuplicateHeaderFound(object p0);
    internal static string get_ODataBatchReaderStream_NestedChangesetsAreNotSupported();
    internal static string ODataBatchReaderStream_MultiByteEncodingsNotSupported(object p0);
    internal static string get_ODataBatchReaderStream_UnexpectedEndOfInput();
    internal static string ODataBatchReaderStreamBuffer_BoundaryLineSecurityLimitReached(object p0);
    internal static string HttpUtils_MediaTypeUnspecified(object p0);
    internal static string HttpUtils_MediaTypeRequiresSlash(object p0);
    internal static string HttpUtils_MediaTypeRequiresSubType(object p0);
    internal static string HttpUtils_MediaTypeMissingParameterValue(object p0);
    internal static string get_HttpUtils_MediaTypeMissingParameterName();
    internal static string HttpUtils_EscapeCharWithoutQuotes(object p0, object p1, object p2, object p3);
    internal static string HttpUtils_EscapeCharAtEnd(object p0, object p1, object p2, object p3);
    internal static string HttpUtils_ClosingQuoteNotFound(object p0, object p1, object p2);
    internal static string HttpUtils_InvalidCharacterInQuotedParameterValue(object p0, object p1, object p2, object p3);
    internal static string get_HttpUtils_ContentTypeMissing();
    internal static string HttpUtils_MediaTypeRequiresSemicolonBeforeParameter(object p0);
    internal static string HttpUtils_InvalidQualityValueStartChar(object p0, object p1);
    internal static string HttpUtils_InvalidQualityValue(object p0, object p1);
    internal static string HttpUtils_CannotConvertCharToInt(object p0);
    internal static string HttpUtils_MissingSeparatorBetweenCharsets(object p0);
    internal static string HttpUtils_InvalidSeparatorBetweenCharsets(object p0);
    internal static string HttpUtils_InvalidCharsetName(object p0);
    internal static string HttpUtils_UnexpectedEndOfQValue(object p0);
    internal static string HttpUtils_ExpectedLiteralNotFoundInString(object p0, object p1, object p2);
    internal static string HttpUtils_InvalidHttpMethodString(object p0);
    internal static string HttpUtils_NoOrMoreThanOneContentTypeSpecified(object p0);
    internal static string HttpHeaderValueLexer_UnrecognizedSeparator(object p0, object p1, object p2, object p3);
    internal static string HttpHeaderValueLexer_TokenExpectedButFoundQuotedString(object p0, object p1, object p2);
    internal static string HttpHeaderValueLexer_FailedToReadTokenOrQuotedString(object p0, object p1, object p2);
    internal static string HttpHeaderValueLexer_InvalidSeparatorAfterQuotedString(object p0, object p1, object p2, object p3);
    internal static string HttpHeaderValueLexer_EndOfFileAfterSeparator(object p0, object p1, object p2, object p3);
    internal static string MediaType_EncodingNotSupported(object p0);
    internal static string MediaTypeUtils_DidNotFindMatchingMediaType(object p0, object p1);
    internal static string MediaTypeUtils_CannotDetermineFormatFromContentType(object p0, object p1);
    internal static string MediaTypeUtils_NoOrMoreThanOneContentTypeSpecified(object p0);
    internal static string MediaTypeUtils_BoundaryMustBeSpecifiedForBatchPayloads(object p0, object p1);
    internal static string EntityPropertyMapping_EpmAttribute(object p0);
    internal static string EntityPropertyMapping_InvalidTargetPath(object p0);
    internal static string EntityPropertyMapping_TargetNamespaceUriNotValid(object p0);
    internal static string EpmSourceTree_InvalidSourcePath(object p0, object p1);
    internal static string EpmSourceTree_EndsWithNonPrimitiveType(object p0);
    internal static string EpmSourceTree_TraversalOfNonComplexType(object p0);
    internal static string EpmSourceTree_DuplicateEpmAttributesWithSameSourceName(object p0, object p1);
    internal static string EpmSourceTree_MissingPropertyOnType(object p0, object p1);
    internal static string EpmSourceTree_MissingPropertyOnInstance(object p0, object p1);
    internal static string EpmSourceTree_StreamPropertyCannotBeMapped(object p0, object p1);
    internal static string EpmSourceTree_SpatialTypeCannotBeMapped(object p0, object p1);
    internal static string EpmSourceTree_OpenPropertySpatialTypeCannotBeMapped(object p0, object p1);
    internal static string EpmSourceTree_OpenComplexPropertyCannotBeMapped(object p0, object p1);
    internal static string EpmSourceTree_CollectionPropertyCannotBeMapped(object p0, object p1);
    internal static string EpmTargetTree_InvalidTargetPath_EmptySegment(object p0);
    internal static string EpmTargetTree_InvalidTargetPath_MixedContent(object p0, object p1);
    internal static string EpmTargetTree_AttributeInMiddle(object p0);
    internal static string EpmTargetTree_DuplicateEpmAttributesWithSameTargetName(object p0, object p1, object p2, object p3);
    internal static string EpmSyndicationWriter_DateTimePropertyCanNotBeConverted(object p0);
    internal static string EpmSyndicationWriter_EmptyCollectionMappedToAuthor(object p0);
    internal static string EpmSyndicationWriter_NullValueForAttributeTarget(object p0, object p1, object p2);
    internal static string EpmSyndicationWriter_InvalidLinkLengthValue(object p0);
    internal static string EpmSyndicationWriter_InvalidValueForLinkRelCriteriaAttribute(object p0, object p1, object p2);
    internal static string EpmSyndicationWriter_InvalidValueForCategorySchemeCriteriaAttribute(object p0, object p1, object p2);
    internal static string ExpressionLexer_ExpectedLiteralToken(object p0);
    internal static string UriUtils_InvalidRelativeUriForEscaping(object p0, object p1);
    internal static string ODataUriUtils_ConvertToUriLiteralUnsupportedType(object p0);
    internal static string ODataUriUtils_ConvertToUriLiteralUnsupportedFormat(object p0);
    internal static string get_ODataUriUtils_ConvertFromUriLiteralTypeRefWithoutModel();
    internal static string ODataUriUtils_ConvertFromUriLiteralTypeVerificationFailure(object p0, object p1);
    internal static string ODataUriUtils_ConvertFromUriLiteralNullTypeVerificationFailure(object p0, object p1);
    internal static string ODataUriUtils_ConvertFromUriLiteralNullOnNonNullableType(object p0);
    internal static string ODataUtils_CannotConvertValueToRawPrimitive(object p0);
    internal static string ODataUtils_DidNotFindDefaultMediaType(object p0);
    internal static string get_ODataUtils_CannotSaveAnnotationsToBuiltInModel();
    internal static string ODataUtils_UnsupportedVersionHeader(object p0);
    internal static string get_ODataUtils_UnsupportedVersionNumber();
    internal static string get_ODataUtils_NullValueForMimeTypeAnnotation();
    internal static string get_ODataUtils_NullValueForHttpMethodAnnotation();
    internal static string get_ODataUtils_IsAlwaysBindableAnnotationSetForANonBindableFunctionImport();
    internal static string get_ODataUtils_UnexpectedIsAlwaysBindableAnnotationInANonBindableFunctionImport();
    internal static string ReaderUtils_EnumerableModified(object p0);
    internal static string ReaderValidationUtils_NullValueForNonNullableType(object p0);
    internal static string ReaderValidationUtils_NullNamedValueForNonNullableType(object p0, object p1);
    internal static string get_ReaderValidationUtils_EntityReferenceLinkMissingUri();
    internal static string get_ReaderValidationUtils_ValueWithoutType();
    internal static string get_ReaderValidationUtils_EntryWithoutType();
    internal static string ReaderValidationUtils_DerivedComplexTypesAreNotAllowed(object p0, object p1);
    internal static string ReaderValidationUtils_CannotConvertPrimitiveValue(object p0);
    internal static string ReaderValidationUtils_MessageReaderSettingsBaseUriMustBeNullOrAbsolute(object p0);
    internal static string get_ReaderValidationUtils_UndeclaredPropertyBehaviorKindSpecifiedOnRequest();
    internal static string ReaderValidationUtils_UndeclaredPropertyBehaviorKindSpecifiedForOpenType(object p0, object p1);
    internal static string ReaderValidationUtils_MetadataUriValidationInvalidExpectedEntitySet(object p0, object p1, object p2);
    internal static string ReaderValidationUtils_MetadataUriValidationInvalidExpectedEntityType(object p0, object p1, object p2);
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingPropertyNames(object p0, object p1, object p2, object p3);
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingDeclaringTypes(object p0, object p1, object p2, object p3);
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingCollectionNames(object p0, object p1, object p2);
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingCollectionItemTypes(object p0, object p1, object p2, object p3);
    internal static string ReaderValidationUtils_MetadataUriValidationPropertyWithExpectedFunctionImport(object p0, object p1, object p2, object p3);
    internal static string ReaderValidationUtils_MetadataUriValidationFunctionImportWithExpectedProperty(object p0, object p1, object p2, object p3);
    internal static string ReaderValidationUtils_NonMatchingCollectionNames(object p0, object p1);
    internal static string ReaderValidationUtils_NonMatchingPropertyNames(object p0, object p1);
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingPropertyDeclaringTypes(object p0, object p1, object p2, object p3);
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingPropertyTypes(object p0, object p1, object p2, object p3, object p4);
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingFunctionImportNames(object p0, object p1, object p2);
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingFunctionImportReturnTypes(object p0, object p1, object p2, object p3);
    internal static string ReaderValidationUtils_TypeInMetadataUriDoesNotMatchExpectedType(object p0, object p1, object p2);
    internal static string ReaderValidationUtils_MetadataUriDoesNotReferTypeAssignableToExpectedType(object p0, object p1, object p2);
    internal static string get_ODataMessageReader_ReaderAlreadyUsed();
    internal static string get_ODataMessageReader_ErrorPayloadInRequest();
    internal static string get_ODataMessageReader_ServiceDocumentInRequest();
    internal static string get_ODataMessageReader_MetadataDocumentInRequest();
    internal static string ODataMessageReader_ExpectedTypeSpecifiedWithoutMetadata(object p0);
    internal static string ODataMessageReader_EntitySetSpecifiedWithoutMetadata(object p0);
    internal static string ODataMessageReader_FunctionImportSpecifiedWithoutMetadata(object p0);
    internal static string ODataMessageReader_ProducingFunctionImportNonCollectionType(object p0, object p1);
    internal static string ODataMessageReader_ExpectedCollectionTypeWrongKind(object p0);
    internal static string get_ODataMessageReader_ExpectedPropertyTypeEntityCollectionKind();
    internal static string get_ODataMessageReader_ExpectedPropertyTypeEntityKind();
    internal static string get_ODataMessageReader_ExpectedPropertyTypeStream();
    internal static string ODataMessageReader_ExpectedValueTypeWrongKind(object p0);
    internal static string get_ODataMessageReader_NoneOrEmptyContentTypeHeader();
    internal static string ODataMessageReader_WildcardInContentType(object p0);
    internal static string get_ODataMessageReader_EntityReferenceLinksInRequestNotAllowed();
    internal static string get_ODataMessageReader_GetFormatCalledBeforeReadingStarted();
    internal static string get_ODataMessageReader_DetectPayloadKindMultipleTimes();
    internal static string get_ODataMessageReader_PayloadKindDetectionRunning();
    internal static string get_ODataMessageReader_PayloadKindDetectionInServerMode();
    internal static string get_ODataMessageReader_ParameterPayloadInResponse();
    internal static string ODataMessageReader_SingletonNavigationPropertyForEntityReferenceLinks(object p0, object p1);
    internal static string get_ODataMessage_MustNotModifyMessage();
    internal static string ODataMediaTypeUtils_BoundaryMustBeSpecifiedForBatchPayloads(object p0, object p1);
    internal static string get_ODataReaderCore_SyncCallOnAsyncReader();
    internal static string get_ODataReaderCore_AsyncCallOnSyncReader();
    internal static string ODataReaderCore_ReadOrReadAsyncCalledInInvalidState(object p0);
    internal static string ODataReaderCore_NoReadCallsAllowed(object p0);
    internal static string ODataJsonReader_CannotReadEntriesOfFeed(object p0);
    internal static string ODataJsonReader_CannotReadFeedStart(object p0);
    internal static string ODataJsonReader_CannotReadEntryStart(object p0);
    internal static string get_ODataJsonReader_ParsingWithoutMetadata();
    internal static string get_ODataJsonReaderUtils_CannotConvertInt64OrDecimal();
    internal static string ODataJsonReaderUtils_CannotConvertInt32(object p0);
    internal static string ODataJsonReaderUtils_CannotConvertDouble(object p0);
    internal static string ODataJsonReaderUtils_CannotConvertBoolean(object p0);
    internal static string ODataJsonReaderUtils_CannotConvertDateTime(object p0);
    internal static string ODataJsonReaderUtils_CannotConvertDateTimeOffset(object p0);
    internal static string ODataJsonReaderUtils_MultipleMetadataPropertiesWithSameName(object p0);
    internal static string ODataJsonReaderUtils_MultipleEntityReferenceLinksWrapperPropertiesWithSameName(object p0);
    internal static string ODataJsonReaderUtils_MultipleErrorPropertiesWithSameName(object p0);
    internal static string ODataJsonReaderUtils_FeedPropertyWithNullValue(object p0);
    internal static string ODataJsonReaderUtils_MediaResourcePropertyWithNullValue(object p0);
    internal static string ODataJsonReaderUtils_EntityReferenceLinksInlineCountWithNullValue(object p0);
    internal static string ODataJsonReaderUtils_EntityReferenceLinksPropertyWithNullValue(object p0);
    internal static string ODataJsonReaderUtils_MetadataPropertyWithNullValue(object p0);
    internal static string get_ODataJsonDeserializer_DataWrapperPropertyNotFound();
    internal static string get_ODataJsonDeserializer_DataWrapperMultipleProperties();
    internal static string ODataJsonDeserializer_RelativeUriUsedWithoutBaseUriSpecified(object p0);
    internal static string get_ODataJsonCollectionDeserializer_MissingResultsPropertyForCollection();
    internal static string ODataJsonCollectionDeserializer_CannotReadCollectionContentStart(object p0);
    internal static string get_ODataJsonCollectionDeserializer_MultipleResultsPropertiesForCollection();
    internal static string get_ODataJsonEntityReferenceLinkDeserializer_ExpectedEntityReferenceLinksResultsPropertyNotFound();
    internal static string ODataJsonEntityReferenceLinkDeserializer_EntityReferenceLinkMustBeObjectValue(object p0);
    internal static string get_ODataJsonEntityReferenceLinkDeserializer_MultipleUriPropertiesInEntityReferenceLink();
    internal static string get_ODataJsonEntityReferenceLinkDeserializer_EntityReferenceLinkUriCannotBeNull();
    internal static string get_ODataJsonEntryAndFeedDeserializer_ExpectedFeedResultsPropertyNotFound();
    internal static string ODataJsonEntryAndFeedDeserializer_CannotReadFeedContentStart(object p0);
    internal static string get_ODataJsonEntryAndFeedDeserializer_MultipleMetadataPropertiesInEntryValue();
    internal static string get_ODataJsonEntryAndFeedDeserializer_MultipleUriPropertiesInDeferredLink();
    internal static string get_ODataJsonEntryAndFeedDeserializer_DeferredLinkUriCannotBeNull();
    internal static string get_ODataJsonEntryAndFeedDeserializer_DeferredLinkMissingUri();
    internal static string get_ODataJsonEntryAndFeedDeserializer_CannotReadNavigationPropertyValue();
    internal static string get_ODataJsonEntryAndFeedDeserializer_MultipleFeedResultsPropertiesFound();
    internal static string ODataJsonEntryAndFeedDeserializer_MultipleMetadataPropertiesForStreamProperty(object p0);
    internal static string get_ODataJsonEntryAndFeedDeserializer_CannotParseStreamReference();
    internal static string ODataJsonEntryAndFeedDeserializer_PropertyInEntryMustHaveObjectValue(object p0, object p1);
    internal static string ODataJsonEntryAndFeedDeserializer_CannotReadSingletonNavigationPropertyValue(object p0);
    internal static string ODataJsonEntryAndFeedDeserializer_CannotReadCollectionNavigationPropertyValue(object p0);
    internal static string get_ODataJsonEntryAndFeedDeserializer_StreamPropertyInRequest();
    internal static string get_ODataJsonLightEntryAndFeedSerializer_AnnotationGroupWithoutName();
    internal static string ODataJsonLightEntryAndFeedSerializer_AnnotationGroupMemberWithoutName(object p0);
    internal static string ODataJsonLightEntryAndFeedSerializer_AnnotationGroupMemberWithInvalidValue(object p0, object p1, object p2);
    internal static string get_ODataJsonLightEntryAndFeedSerializer_AnnotationGroupInRequest();
    internal static string ODataJsonLightEntryAndFeedSerializer_AnnotationGroupMemberMustBeAnnotation(object p0, object p1);
    internal static string ODataJsonLightEntryAndFeedSerializer_DuplicateAnnotationGroup(object p0);
    internal static string ODataJsonLightEntryAndFeedSerializer_ActionsAndFunctionsGroupMustSpecifyTarget(object p0);
    internal static string ODataJsonLightEntryAndFeedSerializer_ActionsAndFunctionsGroupMustNotHaveDuplicateTarget(object p0, object p1);
    internal static string ODataJsonErrorDeserializer_TopLevelErrorWithInvalidProperty(object p0);
    internal static string ODataJsonErrorDeserializer_TopLevelErrorMessageValueWithInvalidProperty(object p0);
    internal static string ODataVerboseJsonErrorDeserializer_TopLevelErrorValueWithInvalidProperty(object p0);
    internal static string get_ODataJsonPropertyAndValueDeserializer_TopLevelPropertyWithoutMetadata();
    internal static string get_ODataJsonPropertyAndValueDeserializer_InvalidTopLevelPropertyPayload();
    internal static string ODataJsonPropertyAndValueDeserializer_CannotReadPropertyValue(object p0);
    internal static string get_ODataJsonPropertyAndValueDeserializer_MultipleMetadataPropertiesInComplexValue();
    internal static string ODataJsonPropertyAndValueDeserializer_MultiplePropertiesInCollectionWrapper(object p0);
    internal static string get_ODataJsonPropertyAndValueDeserializer_CollectionWithoutResults();
    internal static string ODataJsonPropertyAndValueDeserializer_InvalidTypeName(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_InvalidPrimitiveTypeName(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_MetadataPropertyMustHaveObjectValue(object p0);
    internal static string get_ODataJsonServiceDocumentDeserializer_MultipleEntitySetsPropertiesForServiceDocument();
    internal static string get_ODataJsonServiceDocumentDeserializer_NoEntitySetsPropertyForServiceDocument();
    internal static string ODataCollectionReaderCore_ReadOrReadAsyncCalledInInvalidState(object p0);
    internal static string get_ODataCollectionReaderCore_SyncCallOnAsyncReader();
    internal static string get_ODataCollectionReaderCore_AsyncCallOnSyncReader();
    internal static string ODataCollectionReaderCore_ExpectedItemTypeSetInInvalidState(object p0, object p1);
    internal static string ODataParameterReaderCore_ReadOrReadAsyncCalledInInvalidState(object p0);
    internal static string get_ODataParameterReaderCore_SyncCallOnAsyncReader();
    internal static string get_ODataParameterReaderCore_AsyncCallOnSyncReader();
    internal static string ODataParameterReaderCore_SubReaderMustBeCreatedAndReadToCompletionBeforeTheNextReadOrReadAsyncCall(object p0, object p1);
    internal static string ODataParameterReaderCore_SubReaderMustBeInCompletedStateBeforeTheNextReadOrReadAsyncCall(object p0, object p1);
    internal static string ODataParameterReaderCore_InvalidCreateReaderMethodCalledForState(object p0, object p1);
    internal static string ODataParameterReaderCore_CreateReaderAlreadyCalled(object p0, object p1);
    internal static string ODataParameterReaderCore_ParameterNameNotInMetadata(object p0, object p1);
    internal static string ODataParameterReaderCore_DuplicateParametersInPayload(object p0);
    internal static string ODataParameterReaderCore_ParametersMissingInPayload(object p0, object p1);
    internal static string ODataJsonParameterReader_UnsupportedPrimitiveParameterType(object p0, object p1);
    internal static string ODataJsonParameterReader_UnsupportedParameterTypeKind(object p0, object p1);
    internal static string ODataJsonParameterReader_NullCollectionExpected(object p0, object p1);
    internal static string ODataJsonInputContext_FunctionImportCannotBeNullForCreateParameterReader(object p0);
    internal static string ODataJsonCollectionReader_CannotReadWrappedCollectionStart(object p0);
    internal static string ODataJsonCollectionReader_CannotReadCollectionStart(object p0);
    internal static string get_ODataJsonCollectionReader_ParsingWithoutMetadata();
    internal static string ValidationUtils_ActionsAndFunctionsMustSpecifyMetadata(object p0);
    internal static string ValidationUtils_ActionsAndFunctionsMustSpecifyTarget(object p0);
    internal static string ValidationUtils_EnumerableContainsANullItem(object p0);
    internal static string get_ValidationUtils_AssociationLinkMustSpecifyName();
    internal static string get_ValidationUtils_AssociationLinkMustSpecifyUrl();
    internal static string get_ValidationUtils_TypeNameMustNotBeEmpty();
    internal static string ValidationUtils_PropertyDoesNotExistOnType(object p0, object p1);
    internal static string get_ValidationUtils_ResourceCollectionMustSpecifyUrl();
    internal static string get_ValidationUtils_ResourceCollectionUrlMustNotBeNull();
    internal static string ValidationUtils_NonPrimitiveTypeForPrimitiveValue(object p0);
    internal static string ValidationUtils_UnsupportedPrimitiveType(object p0);
    internal static string ValidationUtils_IncompatiblePrimitiveItemType(object p0, object p1, object p2, object p3);
    internal static string get_ValidationUtils_NonStreamingCollectionElementsMustNotBeNull();
    internal static string ValidationUtils_InvalidCollectionTypeName(object p0);
    internal static string ValidationUtils_UnrecognizedTypeName(object p0);
    internal static string ValidationUtils_IncorrectTypeKind(object p0, object p1, object p2);
    internal static string ValidationUtils_IncorrectTypeKindNoTypeName(object p0, object p1);
    internal static string ValidationUtils_IncorrectValueTypeKind(object p0, object p1);
    internal static string get_ValidationUtils_LinkMustSpecifyName();
    internal static string ValidationUtils_MismatchPropertyKindForStreamProperty(object p0);
    internal static string ValidationUtils_InvalidEtagValue(object p0);
    internal static string get_ValidationUtils_NestedCollectionsAreNotSupported();
    internal static string get_ValidationUtils_StreamReferenceValuesNotSupportedInCollections();
    internal static string ValidationUtils_IncompatibleType(object p0, object p1);
    internal static string ValidationUtils_OpenCollectionProperty(object p0);
    internal static string ValidationUtils_OpenStreamProperty(object p0);
    internal static string ValidationUtils_InvalidCollectionTypeReference(object p0);
    internal static string ValidationUtils_EntryWithMediaResourceAndNonMLEType(object p0);
    internal static string ValidationUtils_EntryWithoutMediaResourceAndMLEType(object p0);
    internal static string ValidationUtils_EntryTypeNotAssignableToExpectedType(object p0, object p1);
    internal static string ValidationUtils_OpenNavigationProperty(object p0, object p1);
    internal static string ValidationUtils_NavigationPropertyExpected(object p0, object p1, object p2);
    internal static string ValidationUtils_InvalidBatchBoundaryDelimiterLength(object p0, object p1);
    internal static string ValidationUtils_RecursionDepthLimitReached(object p0);
    internal static string ValidationUtils_MaxDepthOfNestedEntriesExceeded(object p0);
    internal static string ValidationUtils_NullCollectionItemForNonNullableType(object p0);
    internal static string ValidationUtils_PropertiesMustNotContainReservedChars(object p0, object p1);
    internal static string ValidationUtils_MaxNumberOfEntityPropertyMappingsExceeded(object p0, object p1);
    internal static string get_ValidationUtils_WorkspaceCollectionsMustNotContainNullItem();
    internal static string ValidationUtils_InvalidMetadataReferenceProperty(object p0);
    internal static string get_ODataAtomWriter_FeedsMustHaveNonEmptyId();
    internal static string get_WriterValidationUtils_PropertyMustNotBeNull();
    internal static string get_WriterValidationUtils_PropertiesMustHaveNonEmptyName();
    internal static string WriterValidationUtils_PropertyNameDoesntMatchFunctionImportName(object p0, object p1);
    internal static string get_WriterValidationUtils_MissingTypeNameWithMetadata();
    internal static string get_WriterValidationUtils_NextPageLinkInRequest();
    internal static string WriterValidationUtils_ResourceCollectionMustHaveUniqueName(object p0);
    internal static string get_WriterValidationUtils_DefaultStreamWithContentTypeWithoutReadLink();
    internal static string get_WriterValidationUtils_DefaultStreamWithReadLinkWithoutContentType();
    internal static string get_WriterValidationUtils_StreamReferenceValueMustHaveEditLinkOrReadLink();
    internal static string get_WriterValidationUtils_StreamReferenceValueMustHaveEditLinkToHaveETag();
    internal static string get_WriterValidationUtils_StreamReferenceValueEmptyContentType();
    internal static string get_WriterValidationUtils_EntriesMustHaveNonEmptyId();
    internal static string WriterValidationUtils_MessageWriterSettingsBaseUriMustBeNullOrAbsolute(object p0);
    internal static string get_WriterValidationUtils_EntityReferenceLinkUrlMustNotBeNull();
    internal static string get_WriterValidationUtils_EntityReferenceLinksLinkMustNotBeNull();
    internal static string WriterValidationUtils_EntryTypeInExpandedLinkNotCompatibleWithNavigationPropertyType(object p0, object p1);
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionTrueWithEntryContent(object p0);
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionFalseWithFeedContent(object p0);
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionTrueWithEntryMetadata(object p0);
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionFalseWithFeedMetadata(object p0);
    internal static string WriterValidationUtils_ExpandedLinkWithFeedPayloadAndEntryMetadata(object p0);
    internal static string WriterValidationUtils_ExpandedLinkWithEntryPayloadAndFeedMetadata(object p0);
    internal static string WriterValidationUtils_CollectionPropertiesMustNotHaveNullValue(object p0);
    internal static string WriterValidationUtils_NonNullablePropertiesMustNotHaveNullValue(object p0, object p1);
    internal static string WriterValidationUtils_StreamPropertiesMustNotHaveNullValue(object p0);
    internal static string WriterValidationUtils_OperationInRequest(object p0);
    internal static string WriterValidationUtils_AssociationLinkInRequest(object p0);
    internal static string WriterValidationUtils_StreamPropertyInRequest(object p0);
    internal static string WriterValidationUtils_MessageWriterSettingsMetadataDocumentUriMustBeNullOrAbsolute(object p0);
    internal static string WriterValidationUtils_NavigationLinkMustSpecifyUrl(object p0);
    internal static string WriterValidationUtils_NavigationLinkMustSpecifyIsCollection(object p0);
    internal static string get_WriterValidationUtils_MessageWriterSettingsJsonPaddingOnRequestMessage();
    internal static string XmlReaderExtension_InvalidNodeInStringValue(object p0);
    internal static string XmlReaderExtension_InvalidRootNode(object p0);
    internal static string ODataAtomInputContext_NonEmptyElementWithNullAttribute(object p0);
    internal static string ODataMetadataInputContext_ErrorReadingMetadata(object p0);
    internal static string ODataMetadataOutputContext_ErrorWritingMetadata(object p0);
    internal static string EpmExtensionMethods_InvalidKeepInContentOnType(object p0, object p1);
    internal static string EpmExtensionMethods_InvalidKeepInContentOnProperty(object p0, object p1, object p2);
    internal static string EpmExtensionMethods_InvalidTargetTextContentKindOnType(object p0, object p1);
    internal static string EpmExtensionMethods_InvalidTargetTextContentKindOnProperty(object p0, object p1, object p2);
    internal static string EpmExtensionMethods_MissingAttributeOnType(object p0, object p1);
    internal static string EpmExtensionMethods_MissingAttributeOnProperty(object p0, object p1, object p2);
    internal static string EpmExtensionMethods_AttributeNotAllowedForCustomMappingOnType(object p0, object p1);
    internal static string EpmExtensionMethods_AttributeNotAllowedForCustomMappingOnProperty(object p0, object p1, object p2);
    internal static string EpmExtensionMethods_AttributeNotAllowedForAtomPubMappingOnType(object p0, object p1);
    internal static string EpmExtensionMethods_AttributeNotAllowedForAtomPubMappingOnProperty(object p0, object p1, object p2);
    internal static string EpmExtensionMethods_CannotConvertEdmAnnotationValue(object p0, object p1, object p2);
    internal static string get_ODataAtomReader_MediaLinkEntryMismatch();
    internal static string ODataAtomReader_FeedNavigationLinkForResourceReferenceProperty(object p0);
    internal static string get_ODataAtomReader_ExpandedFeedInEntryNavigationLink();
    internal static string get_ODataAtomReader_ExpandedEntryInFeedNavigationLink();
    internal static string get_ODataAtomReader_DeferredEntryInFeedNavigationLink();
    internal static string get_ODataAtomReader_EntryXmlCustomizationCallbackReturnedSameInstance();
    internal static string get_ODataAtomReaderUtils_InvalidTypeName();
    internal static string ODataAtomDeserializer_RelativeUriUsedWithoutBaseUriSpecified(object p0);
    internal static string get_ODataAtomCollectionDeserializer_TypeOrNullAttributeNotAllowed();
    internal static string ODataAtomCollectionDeserializer_WrongCollectionItemElementName(object p0, object p1);
    internal static string ODataAtomCollectionDeserializer_TopLevelCollectionElementWrongNamespace(object p0, object p1);
    internal static string ODataAtomPropertyAndValueDeserializer_TopLevelPropertyElementWrongNamespace(object p0, object p1);
    internal static string ODataAtomPropertyAndValueDeserializer_NonEmptyElementWithNullAttribute(object p0);
    internal static string ODataAtomPropertyAndValueDeserializer_InvalidCollectionElement(object p0, object p1);
    internal static string ODataAtomPropertyAndValueDeserializer_NavigationPropertyInProperties(object p0, object p1);
    internal static string ODataAtomPropertyAndValueSerializer_NullValueNotAllowedForInstanceAnnotation(object p0, object p1);
    internal static string get_EdmLibraryExtensions_CollectionItemCanBeOnlyPrimitiveOrComplex();
    internal static string ODataAtomEntryAndFeedDeserializer_ElementExpected(object p0);
    internal static string ODataAtomEntryAndFeedDeserializer_EntryElementWrongName(object p0, object p1);
    internal static string get_ODataAtomEntryAndFeedDeserializer_ContentWithSourceLinkIsNotEmpty();
    internal static string ODataAtomEntryAndFeedDeserializer_ContentWithWrongType(object p0);
    internal static string ODataAtomEntryAndFeedDeserializer_ContentWithInvalidNode(object p0);
    internal static string ODataAtomEntryAndFeedDeserializer_FeedElementWrongName(object p0, object p1);
    internal static string ODataAtomEntryAndFeedDeserializer_UnknownElementInInline(object p0);
    internal static string ODataAtomEntryAndFeedDeserializer_MultipleExpansionsInInline(object p0);
    internal static string get_ODataAtomEntryAndFeedDeserializer_MultipleInlineElementsInLink();
    internal static string ODataAtomEntryAndFeedDeserializer_StreamPropertyWithMultipleEditLinks(object p0);
    internal static string ODataAtomEntryAndFeedDeserializer_StreamPropertyWithMultipleReadLinks(object p0);
    internal static string ODataAtomEntryAndFeedDeserializer_StreamPropertyWithMultipleContentTypes(object p0);
    internal static string ODataAtomEntryAndFeedDeserializer_StreamPropertyDuplicatePropertyName(object p0);
    internal static string get_ODataAtomEntryAndFeedDeserializer_StreamPropertyWithEmptyName();
    internal static string ODataAtomEntryAndFeedDeserializer_OperationMissingMetadataAttribute(object p0);
    internal static string ODataAtomEntryAndFeedDeserializer_OperationMissingTargetAttribute(object p0);
    internal static string ODataAtomEntryAndFeedDeserializer_MultipleLinksInEntry(object p0);
    internal static string ODataAtomEntryAndFeedDeserializer_MultipleLinksInFeed(object p0);
    internal static string ODataAtomEntryAndFeedDeserializer_DuplicateElements(object p0, object p1);
    internal static string ODataAtomEntryAndFeedDeserializer_InvalidTypeAttributeOnAssociationLink(object p0);
    internal static string get_ODataAtomEntryAndFeedDeserializer_EncounteredAnnotationInNestedFeed();
    internal static string get_ODataAtomEntryAndFeedDeserializer_EncounteredDeltaLinkInNestedFeed();
    internal static string ODataAtomEntryAndFeedDeserializer_AnnotationWithNonDotTarget(object p0, object p1);
    internal static string ODataAtomServiceDocumentDeserializer_ServiceDocumentRootElementWrongNameOrNamespace(object p0, object p1);
    internal static string get_ODataAtomServiceDocumentDeserializer_MissingWorkspaceElement();
    internal static string get_ODataAtomServiceDocumentDeserializer_MultipleWorkspaceElementsFound();
    internal static string ODataAtomServiceDocumentDeserializer_UnexpectedElementInServiceDocument(object p0);
    internal static string ODataAtomServiceDocumentDeserializer_UnexpectedElementInWorkspace(object p0);
    internal static string ODataAtomServiceDocumentDeserializer_UnexpectedElementInResourceCollection(object p0);
    internal static string ODataAtomEntryMetadataDeserializer_InvalidTextConstructKind(object p0, object p1);
    internal static string ODataAtomMetadataDeserializer_MultipleSingletonMetadataElements(object p0, object p1);
    internal static string ODataAtomErrorDeserializer_InvalidRootElement(object p0, object p1);
    internal static string ODataAtomErrorDeserializer_MultipleErrorElementsWithSameName(object p0);
    internal static string ODataAtomErrorDeserializer_MultipleInnerErrorElementsWithSameName(object p0);
    internal static string ODataAtomEntityReferenceLinkDeserializer_InvalidEntityReferenceLinkStartElement(object p0, object p1);
    internal static string ODataAtomEntityReferenceLinkDeserializer_InvalidEntityReferenceLinksStartElement(object p0, object p1);
    internal static string ODataAtomEntityReferenceLinkDeserializer_MultipleEntityReferenceLinksElementsWithSameName(object p0, object p1);
    internal static string EpmReader_OpenComplexOrCollectionEpmProperty(object p0);
    internal static string EpmSyndicationReader_MultipleValuesForNonCollectionProperty(object p0, object p1, object p2);
    internal static string ODataAtomServiceDocumentMetadataDeserializer_InvalidFixedAttributeValue(object p0);
    internal static string ODataAtomServiceDocumentMetadataDeserializer_MultipleTitleElementsFound(object p0);
    internal static string get_ODataAtomServiceDocumentMetadataDeserializer_MultipleAcceptElementsFoundInCollection();
    internal static string ODataAtomServiceDocumentMetadataSerializer_ResourceCollectionNameAndTitleMismatch(object p0, object p1);
    internal static string CollectionWithoutExpectedTypeValidator_InvalidItemTypeKind(object p0);
    internal static string CollectionWithoutExpectedTypeValidator_IncompatibleItemTypeKind(object p0, object p1);
    internal static string CollectionWithoutExpectedTypeValidator_IncompatibleItemTypeName(object p0, object p1);
    internal static string FeedWithoutExpectedTypeValidator_IncompatibleTypes(object p0, object p1);
    internal static string MessageStreamWrappingStream_ByteLimitExceeded(object p0, object p1);
    internal static string MetadataUtils_ResolveTypeName(object p0);
    internal static string EdmValueUtils_UnsupportedPrimitiveType(object p0);
    internal static string EdmValueUtils_IncorrectPrimitiveTypeKind(object p0, object p1, object p2);
    internal static string EdmValueUtils_IncorrectPrimitiveTypeKindNoTypeName(object p0, object p1);
    internal static string EdmValueUtils_CannotConvertTypeToClrValue(object p0);
    internal static string ODataEdmStructuredValue_UndeclaredProperty(object p0, object p1);
    internal static string ODataModelAnnotationEvaluator_AmbiguousAnnotationTerm(object p0, object p1);
    internal static string ODataModelAnnotationEvaluator_AmbiguousAnnotationTermWithQualifier(object p0, object p1, object p2);
    internal static string ODataModelAnnotationEvaluator_AnnotationTermWithInvalidQualifier(object p0, object p1, object p2);
    internal static string ODataModelAnnotationEvaluator_AnnotationTermWithUnsupportedQualifier(object p0, object p1, object p2, object p3);
    internal static string ODataMetadataBuilder_MissingEntitySetUri(object p0);
    internal static string ODataMetadataBuilder_MissingSegmentForEntitySetUriSuffix(object p0, object p1);
    internal static string ODataMetadataBuilder_MissingEntityInstanceUri(object p0);
    internal static string ODataJsonLightInputContext_EntityTypeMustBeCompatibleWithEntitySetBaseType(object p0, object p1, object p2);
    internal static string get_ODataJsonLightInputContext_MetadataDocumentUriMissing();
    internal static string get_ODataJsonLightInputContext_PayloadKindDetectionForRequest();
    internal static string ODataJsonLightInputContext_FunctionImportCannotBeNullForCreateParameterReader(object p0);
    internal static string get_ODataJsonLightInputContext_NoEntitySetForRequest();
    internal static string get_ODataJsonLightInputContext_FunctionImportOrItemTypeRequiredForCollectionReaderInRequests();
    internal static string get_ODataJsonLightInputContext_NavigationPropertyRequiredForReadEntityReferenceLinkInRequests();
    internal static string get_ODataJsonLightInputContext_ModelRequiredForReading();
    internal static string get_ODataJsonLightInputContext_BaseUriMustBeNonNullAndAbsolute();
    internal static string get_ODataJsonLightInputContext_ItemTypeRequiredForCollectionReaderInRequests();
    internal static string get_ODataJsonLightInputContext_NoItemTypeSpecified();
    internal static string get_ODataJsonLightDeserializer_MetadataLinkNotFoundAsFirstProperty();
    internal static string ODataJsonLightDeserializer_RequiredPropertyNotFound(object p0, object p1);
    internal static string ODataJsonLightDeserializer_OnlyODataTypeAnnotationCanTargetInstanceAnnotation(object p0, object p1, object p2);
    internal static string ODataJsonLightDeserializer_AnnotationTargetingInstanceAnnotationWithoutValue(object p0, object p1);
    internal static string get_ODataJsonLightWriter_EntityReferenceLinkAfterFeedInRequest();
    internal static string get_ODataJsonLightWriter_InstanceAnnotationNotSupportedOnExpandedFeed();
    internal static string get_ODataJsonLightOutputContext_MetadataDocumentUriMissing();
    internal static string get_ODataJsonLightPropertyAndValueSerializer_NoExpectedTypeOrTypeNameSpecifiedForComplexValueRequest();
    internal static string get_ODataJsonLightPropertyAndValueSerializer_NoExpectedTypeOrTypeNameSpecifiedForCollectionValueInRequest();
    internal static string get_ODataJsonLightServiceDocumentSerializer_ResourceCollectionMustSpecifyName();
    internal static string get_ODataFeedAndEntryTypeContext_MetadataOrSerializationInfoMissing();
    internal static string get_ODataFeedAndEntryTypeContext_ODataEntryTypeNameMissing();
    internal static string ODataJsonLightMetadataUriBuilder_ValidateDerivedType(object p0, object p1);
    internal static string get_ODataJsonLightMetadataUriBuilder_TypeNameMissingForTopLevelCollectionWhenWritingResponsePayload();
    internal static string get_ODataJsonLightMetadataUriBuilder_EntitySetOrNavigationPropertyMissingForTopLevelEntityReferenceLinkResponse();
    internal static string get_ODataJsonLightMetadataUriBuilder_EntitySetOrNavigationPropertyMissingForTopLevelEntityReferenceLinksResponse();
    internal static string ODataJsonLightPropertyAndValueDeserializer_UnexpectedAnnotationProperties(object p0);
    internal static string ODataJsonLightPropertyAndValueDeserializer_UnexpectedPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonLightPropertyAndValueDeserializer_UnexpectedODataPropertyAnnotation(object p0);
    internal static string ODataJsonLightPropertyAndValueDeserializer_UnexpectedProperty(object p0);
    internal static string get_ODataJsonLightPropertyAndValueDeserializer_InvalidTopLevelPropertyPayload();
    internal static string ODataJsonLightPropertyAndValueDeserializer_InvalidTopLevelPropertyName(object p0, object p1);
    internal static string ODataJsonLightPropertyAndValueDeserializer_InvalidTypeName(object p0);
    internal static string ODataJsonLightPropertyAndValueDeserializer_InvalidPrimitiveTypeName(object p0);
    internal static string ODataJsonLightPropertyAndValueDeserializer_TopLevelPropertyAnnotationWithoutProperty(object p0);
    internal static string ODataJsonLightPropertyAndValueDeserializer_ComplexValuePropertyAnnotationWithoutProperty(object p0);
    internal static string ODataJsonLightPropertyAndValueDeserializer_ComplexValueWithPropertyTypeAnnotation(object p0);
    internal static string get_ODataJsonLightPropertyAndValueDeserializer_ComplexTypeAnnotationNotFirst();
    internal static string ODataJsonLightPropertyAndValueDeserializer_UnexpectedDataPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonLightPropertyAndValueDeserializer_TypePropertyAfterValueProperty(object p0, object p1);
    internal static string ODataJsonLightPropertyAndValueDeserializer_ODataTypeAnnotationInPrimitiveValue(object p0);
    internal static string ODataJsonLightPropertyAndValueDeserializer_TopLevelPropertyWithPrimitiveNullValue(object p0, object p1);
    internal static string ODataJsonLightPropertyAndValueDeserializer_UnexpectedMetadataReferenceProperty(object p0);
    internal static string ODataJsonLightPropertyAndValueDeserializer_NoPropertyAndAnnotationAllowedInNullPayload(object p0);
    internal static string ODataJsonLightPropertyAndValueDeserializer_EdmNullInMetadataUriWithoutNullValueInPayload(object p0);
    internal static string get_ODataJsonReaderCoreUtils_CannotReadSpatialPropertyValue();
    internal static string ODataJsonLightReaderUtils_AnnotationWithNullValue(object p0);
    internal static string ODataJsonLightReaderUtils_InvalidValueForODataNullAnnotation(object p0, object p1);
    internal static string JsonLightInstanceAnnotationWriter_DuplicateAnnotationNameInCollection(object p0);
    internal static string ODataJsonLightMetadataUriParser_ServiceDocumentUriMustNotHaveFragment(object p0);
    internal static string get_ODataJsonLightMetadataUriParser_NullMetadataDocumentUri();
    internal static string ODataJsonLightMetadataUriParser_MetadataUriDoesNotMatchExpectedPayloadKind(object p0, object p1);
    internal static string ODataJsonLightMetadataUriParser_InvalidEntitySetNameOrTypeName(object p0, object p1);
    internal static string ODataJsonLightMetadataUriParser_InvalidPropertyName(object p0, object p1, object p2);
    internal static string ODataJsonLightMetadataUriParser_InvalidEntityWithTypeCastUriSuffix(object p0, object p1, object p2);
    internal static string ODataJsonLightMetadataUriParser_InvalidEntityTypeInTypeCast(object p0, object p1);
    internal static string ODataJsonLightMetadataUriParser_IncompatibleEntityTypeInTypeCast(object p0, object p1, object p2, object p3);
    internal static string ODataJsonLightMetadataUriParser_InvalidEntityReferenceLinkUriSuffix(object p0, object p1, object p2);
    internal static string ODataJsonLightMetadataUriParser_InvalidPropertyForEntityReferenceLinkUri(object p0, object p1);
    internal static string ODataJsonLightMetadataUriParser_InvalidSingletonNavPropertyForEntityReferenceLinkUri(object p0, object p1, object p2);
    internal static string ODataJsonLightMetadataUriParser_FragmentWithInvalidNumberOfParts(object p0, object p1, object p2);
    internal static string ODataJsonLightMetadataUriParser_InvalidEntitySetOrFunctionImportName(object p0, object p1);
    internal static string ODataJsonLightMetadataUriParser_InvalidPayloadKindWithSelectQueryOption(object p0);
    internal static string get_ODataJsonLightMetadataUriParser_NoModel();
    internal static string get_ODataJsonLightMetadataUriParser_ModelResolverReturnedNull();
    internal static string ODataJsonLightMetadataUriParser_InvalidAssociationLink(object p0);
    internal static string ODataJsonLightMetadataUriParser_InvalidEntitySetName(object p0, object p1);
    internal static string get_ODataJsonLightEntryAndFeedDeserializer_EntryTypeAnnotationNotFirst();
    internal static string ODataJsonLightEntryAndFeedDeserializer_EntryInstanceAnnotationPrecededByProperty(object p0);
    internal static string ODataJsonLightEntryAndFeedDeserializer_CannotReadFeedContentStart(object p0);
    internal static string ODataJsonLightEntryAndFeedDeserializer_ExpectedFeedPropertyNotFound(object p0);
    internal static string ODataJsonLightEntryAndFeedDeserializer_InvalidNodeTypeForItemsInFeed(object p0);
    internal static string ODataJsonLightEntryAndFeedDeserializer_InvalidPropertyAnnotationInTopLevelFeed(object p0);
    internal static string ODataJsonLightEntryAndFeedDeserializer_InvalidPropertyInTopLevelFeed(object p0, object p1);
    internal static string get_ODataJsonLightEntryAndFeedDeserializer_FeedPropertyAnnotationForTopLevelFeed();
    internal static string ODataJsonLightEntryAndFeedDeserializer_PropertyWithoutValueWithWrongType(object p0, object p1);
    internal static string ODataJsonLightEntryAndFeedDeserializer_OpenPropertyWithoutValue(object p0);
    internal static string get_ODataJsonLightEntryAndFeedDeserializer_StreamPropertyInRequest();
    internal static string ODataJsonLightEntryAndFeedDeserializer_UnexpectedStreamPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonLightEntryAndFeedDeserializer_StreamPropertyWithValue(object p0);
    internal static string ODataJsonLightEntryAndFeedDeserializer_UnexpectedDeferredLinkPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonLightEntryAndFeedDeserializer_CannotReadSingletonNavigationPropertyValue(object p0);
    internal static string ODataJsonLightEntryAndFeedDeserializer_CannotReadCollectionNavigationPropertyValue(object p0);
    internal static string get_ODataJsonLightEntryAndFeedDeserializer_CannotReadNavigationPropertyValue();
    internal static string ODataJsonLightEntryAndFeedDeserializer_UnexpectedExpandedSingletonNavigationLinkPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonLightEntryAndFeedDeserializer_UnexpectedExpandedCollectionNavigationLinkPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonLightEntryAndFeedDeserializer_DuplicateExpandedFeedAnnotation(object p0, object p1);
    internal static string ODataJsonLightEntryAndFeedDeserializer_UnexpectedPropertyAnnotationAfterExpandedFeed(object p0, object p1);
    internal static string get_ODataJsonLightEntryAndFeedDeserializer_AnnotationGroupWithoutName();
    internal static string ODataJsonLightEntryAndFeedDeserializer_AnnotationGroupMemberWithoutName(object p0);
    internal static string ODataJsonLightEntryAndFeedDeserializer_AnnotationGroupMemberWithInvalidValue(object p0, object p1, object p2);
    internal static string get_ODataJsonLightEntryAndFeedDeserializer_AnnotationGroupInRequest();
    internal static string ODataJsonLightEntryAndFeedDeserializer_UnexpectedNavigationLinkInRequestPropertyAnnotation(object p0, object p1, object p2);
    internal static string ODataJsonLightEntryAndFeedDeserializer_ArrayValueForSingletonBindPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonLightEntryAndFeedDeserializer_StringValueForCollectionBindPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonLightEntryAndFeedDeserializer_EmptyBindArray(object p0);
    internal static string ODataJsonLightEntryAndFeedDeserializer_NavigationPropertyWithoutValueAndEntityReferenceLink(object p0, object p1);
    internal static string ODataJsonLightEntryAndFeedDeserializer_SingletonNavigationPropertyWithBindingAndValue(object p0, object p1);
    internal static string ODataJsonLightEntryAndFeedDeserializer_PropertyWithoutValueWithUnknownType(object p0);
    internal static string ODataJsonLightEntryAndFeedDeserializer_FunctionImportIsNotActionOrFunction(object p0);
    internal static string ODataJsonLightEntryAndFeedDeserializer_MultipleOptionalPropertiesInOperation(object p0, object p1);
    internal static string ODataJsonLightEntryAndFeedDeserializer_MultipleTargetPropertiesInOperation(object p0);
    internal static string ODataJsonLightEntryAndFeedDeserializer_OperationMissingTargetProperty(object p0);
    internal static string get_ODataJsonLightEntryAndFeedDeserializer_MetadataReferencePropertyInRequest();
    internal static string get_ODataJsonLightEntryAndFeedDeserializer_EncounteredAnnotationGroupInUnexpectedPosition();
    internal static string get_ODataJsonLightEntryAndFeedDeserializer_EntryTypeAlreadySpecified();
    internal static string ODataJsonLightValidationUtils_OperationPropertyCannotBeNull(object p0, object p1);
    internal static string ODataJsonLightValidationUtils_OpenMetadataReferencePropertyNotSupported(object p0, object p1);
    internal static string ODataJsonLightDeserializer_RelativeUriUsedWithouODataMetadataAnnotation(object p0, object p1);
    internal static string ODataJsonLightEntryMetadataContext_MetadataAnnotationMustBeInPayload(object p0);
    internal static string ODataJsonLightCollectionDeserializer_ExpectedCollectionPropertyNotFound(object p0);
    internal static string ODataJsonLightCollectionDeserializer_CannotReadCollectionContentStart(object p0);
    internal static string ODataJsonLightCollectionDeserializer_CannotReadCollectionEnd(object p0);
    internal static string ODataJsonLightCollectionDeserializer_InvalidCollectionTypeName(object p0);
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_EntityReferenceLinkMustBeObjectValue(object p0);
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_PropertyAnnotationForEntityReferenceLink(object p0);
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_InvalidAnnotationInEntityReferenceLink(object p0);
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_InvalidPropertyInEntityReferenceLink(object p0, object p1);
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_MissingEntityReferenceLinkProperty(object p0);
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_MultipleUriPropertiesInEntityReferenceLink(object p0);
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_EntityReferenceLinkUrlCannotBeNull(object p0);
    internal static string get_ODataJsonLightEntityReferenceLinkDeserializer_PropertyAnnotationForEntityReferenceLinks();
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_InvalidEntityReferenceLinksPropertyFound(object p0, object p1);
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_InvalidPropertyAnnotationInEntityReferenceLinks(object p0);
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_ExpectedEntityReferenceLinksPropertyNotFound(object p0);
    internal static string ODataJsonOperationsDeserializerUtils_OperationPropertyCannotBeNull(object p0, object p1, object p2);
    internal static string ODataJsonOperationsDeserializerUtils_OperationsPropertyMustHaveObjectValue(object p0, object p1);
    internal static string ODataJsonOperationsDeserializerUtils_RepeatMetadataValue(object p0, object p1);
    internal static string ODataJsonOperationsDeserializerUtils_MetadataMustHaveArrayValue(object p0, object p1, object p2);
    internal static string ODataJsonOperationsDeserializerUtils_OperationMetadataArrayExpectedAnObject(object p0, object p1, object p2);
    internal static string ODataJsonOperationsDeserializerUtils_MultipleOptionalPropertiesInOperation(object p0, object p1, object p2);
    internal static string ODataJsonOperationsDeserializerUtils_MultipleTargetPropertiesInOperation(object p0, object p1);
    internal static string ODataJsonOperationsDeserializerUtils_OperationMissingTargetProperty(object p0, object p1);
    internal static string ODataJsonLightServiceDocumentDeserializer_DuplicatePropertiesInServiceDocument(object p0);
    internal static string ODataJsonLightServiceDocumentDeserializer_DuplicatePropertiesInResourceCollection(object p0);
    internal static string ODataJsonLightServiceDocumentDeserializer_MissingValuePropertyInServiceDocument(object p0);
    internal static string ODataJsonLightServiceDocumentDeserializer_MissingRequiredPropertyInResourceCollection(object p0);
    internal static string ODataJsonLightServiceDocumentDeserializer_PropertyAnnotationInServiceDocument(object p0, object p1);
    internal static string ODataJsonLightServiceDocumentDeserializer_InstanceAnnotationInServiceDocument(object p0, object p1);
    internal static string ODataJsonLightServiceDocumentDeserializer_PropertyAnnotationInResourceCollection(object p0);
    internal static string ODataJsonLightServiceDocumentDeserializer_InstanceAnnotationInResourceCollection(object p0);
    internal static string ODataJsonLightServiceDocumentDeserializer_UnexpectedPropertyInResourceCollection(object p0, object p1, object p2);
    internal static string ODataJsonLightServiceDocumentDeserializer_UnexpectedPropertyInServiceDocument(object p0, object p1);
    internal static string ODataJsonLightServiceDocumentDeserializer_PropertyAnnotationWithoutProperty(object p0);
    internal static string get_ODataJsonLightParameterDeserializer_PropertyAnnotationForParameters();
    internal static string ODataJsonLightParameterDeserializer_PropertyAnnotationWithoutPropertyForParameters(object p0);
    internal static string ODataJsonLightParameterDeserializer_UnsupportedPrimitiveParameterType(object p0, object p1);
    internal static string ODataJsonLightParameterDeserializer_NullCollectionExpected(object p0, object p1);
    internal static string ODataJsonLightParameterDeserializer_UnsupportedParameterTypeKind(object p0, object p1);
    internal static string get_SelectedPropertiesNode_StarSegmentNotLastSegment();
    internal static string get_SelectedPropertiesNode_StarSegmentAfterTypeSegment();
    internal static string ODataJsonLightErrorDeserializer_PropertyAnnotationNotAllowedInErrorPayload(object p0);
    internal static string ODataJsonLightErrorDeserializer_InstanceAnnotationNotAllowedInErrorPayload(object p0);
    internal static string ODataJsonLightErrorDeserializer_PropertyAnnotationWithoutPropertyForError(object p0);
    internal static string ODataJsonLightErrorDeserializer_TopLevelErrorValueWithInvalidProperty(object p0);
    internal static string ODataConventionalUriBuilder_EntityTypeWithNoKeyProperties(object p0);
    internal static string ODataConventionalUriBuilder_NullKeyValue(object p0, object p1);
    internal static string ODataEntryMetadataContext_EntityTypeWithNoKeyProperties(object p0);
    internal static string ODataEntryMetadataContext_NullKeyValue(object p0, object p1);
    internal static string ODataEntryMetadataContext_KeyOrETagValuesMustBePrimitiveValues(object p0, object p1);
    internal static string EdmValueUtils_NonPrimitiveValue(object p0, object p1);
    internal static string EdmValueUtils_PropertyDoesntExist(object p0, object p1);
    internal static string get_JsonLightAnnotationGroupDeserializer_AnnotationGroupDeclarationWithoutName();
    internal static string JsonLightAnnotationGroupDeserializer_InvalidAnnotationFoundInsideAnnotationGroup(object p0);
    internal static string JsonLightAnnotationGroupDeserializer_InvalidAnnotationFoundInsideNamedAnnotationGroup(object p0, object p1);
    internal static string get_JsonLightAnnotationGroupDeserializer_EncounteredMultipleNameProperties();
    internal static string JsonLightAnnotationGroupDeserializer_UndefinedAnnotationGroupReference(object p0);
    internal static string JsonLightAnnotationGroupDeserializer_MultipleAnnotationGroupsWithSameName(object p0);
    internal static string get_ODataPrimitiveValue_CannotCreateODataPrimitiveValueFromNull();
    internal static string ODataPrimitiveValue_CannotCreateODataPrimitiveValueFromUnsupportedValueType(object p0);
    internal static string get_ODataAnnotatable_InstanceAnnotationsOnlyOnODataError();
    internal static string ODataInstanceAnnotation_NeedPeriodInName(object p0);
    internal static string ODataInstanceAnnotation_ReservedNamesNotAllowed(object p0, object p1);
    internal static string ODataInstanceAnnotation_BadTermName(object p0);
    internal static string get_ODataInstanceAnnotation_ValueCannotBeODataStreamReferenceValue();
    internal static string get_ODataJsonLightValueSerializer_MissingTypeNameOnComplex();
    internal static string get_ODataJsonLightValueSerializer_MissingTypeNameOnCollection();
    internal static string get_AtomInstanceAnnotation_MissingTermAttributeOnAnnotationElement();
    internal static string AtomInstanceAnnotation_AttributeValueNotationUsedWithIncompatibleType(object p0, object p1);
    internal static string AtomInstanceAnnotation_AttributeValueNotationUsedOnNonEmptyElement(object p0);
    internal static string get_AtomInstanceAnnotation_MultipleAttributeValueNotationAttributes();
    internal static string AnnotationFilterPattern_InvalidPatternMissingDot(object p0);
    internal static string AnnotationFilterPattern_InvalidPatternEmptySegment(object p0);
    internal static string AnnotationFilterPattern_InvalidPatternWildCardInSegment(object p0);
    internal static string AnnotationFilterPattern_InvalidPatternWildCardMustBeInLastSegment(object p0);
    internal static string get_JsonFullMetadataLevel_MissingEntitySet();
    internal static string ODataQueryUtils_DidNotFindServiceOperation(object p0);
    internal static string ODataQueryUtils_FoundMultipleServiceOperations(object p0);
    internal static string get_ODataQueryUtils_CannotSetMetadataAnnotationOnPrimitiveType();
    internal static string ODataQueryUtils_DidNotFindEntitySet(object p0);
    internal static string BinaryOperatorQueryNode_InvalidOperandType(object p0, object p1);
    internal static string BinaryOperatorQueryNode_OperandsMustHaveSameTypes(object p0, object p1);
    internal static string SyntacticTree_UriMustBeAbsolute(object p0);
    internal static string get_SyntacticTree_MaxDepthInvalid();
    internal static string SyntacticTree_InvalidSkipQueryOptionValue(object p0);
    internal static string SyntacticTree_InvalidTopQueryOptionValue(object p0);
    internal static string SyntacticTree_InvalidInlineCountQueryOptionValue(object p0, object p1);
    internal static string QueryOptionUtils_QueryParameterMustBeSpecifiedOnce(object p0);
    internal static string UriBuilder_NotSupportedClrLiteral(object p0);
    internal static string UriBuilder_NotSupportedQueryToken(object p0);
    internal static string get_UriQueryExpressionParser_TooDeep();
    internal static string UriQueryExpressionParser_ExpressionExpected(object p0, object p1);
    internal static string UriQueryExpressionParser_OpenParenExpected(object p0, object p1);
    internal static string UriQueryExpressionParser_CloseParenOrCommaExpected(object p0, object p1);
    internal static string UriQueryExpressionParser_CloseParenOrOperatorExpected(object p0, object p1);
    internal static string get_UriQueryExpressionParser_RepeatedVisitor();
    internal static string UriQueryExpressionParser_CannotCreateStarTokenFromNonStar(object p0);
    internal static string UriQueryExpressionParser_RangeVariableAlreadyDeclared(object p0);
    internal static string UriQueryPathParser_RequestUriDoesNotHaveTheCorrectBaseUri(object p0, object p1);
    internal static string get_UriQueryPathParser_SyntaxError();
    internal static string get_UriQueryPathParser_TooManySegments();
    internal static string UriQueryPathParser_InvalidKeyValueLiteral(object p0);
    internal static string PropertyInfoTypeAnnotation_CannotFindProperty(object p0, object p1, object p2);
    internal static string get_SelectionItemBinder_NonNavigationPathToken();
    internal static string get_SelectTreeNormalizer_NonPathProperty();
    internal static string get_ExpandItem_NonEntityNavProp();
    internal static string MetadataBinder_UnsupportedQueryTokenKind(object p0);
    internal static string get_MetadataBinder_UnsupportedExtensionToken();
    internal static string MetadataBinder_RootSegmentResourceNotFound(object p0);
    internal static string MetadataBinder_KeyValueApplicableOnlyToEntityType(object p0);
    internal static string MetadataBinder_PropertyNotDeclared(object p0, object p1);
    internal static string MetadataBinder_PropertyNotDeclaredOrNotKeyInKeyValue(object p0, object p1);
    internal static string MetadataBinder_UnnamedKeyValueOnTypeWithMultipleKeyProperties(object p0);
    internal static string MetadataBinder_DuplicitKeyPropertyInKeyValues(object p0);
    internal static string MetadataBinder_NotAllKeyPropertiesSpecifiedInKeyValues(object p0);
    internal static string MetadataBinder_CannotConvertToType(object p0, object p1);
    internal static string MetadataBinder_NonQueryableServiceOperationWithKeyLookup(object p0);
    internal static string MetadataBinder_QueryServiceOperationOfNonEntityType(object p0, object p1, object p2);
    internal static string MetadataBinder_ServiceOperationParameterMissing(object p0, object p1);
    internal static string MetadataBinder_ServiceOperationParameterInvalidType(object p0, object p1, object p2, object p3);
    internal static string get_MetadataBinder_FilterExpressionNotSingleValue();
    internal static string get_MetadataBinder_OrderByExpressionNotSingleValue();
    internal static string get_MetadataBinder_PropertyAccessWithoutParentParameter();
    internal static string MetadataBinder_MultiValuePropertyNotSupportedInExpression(object p0);
    internal static string MetadataBinder_BinaryOperatorOperandNotSingleValue(object p0);
    internal static string MetadataBinder_UnaryOperatorOperandNotSingleValue(object p0);
    internal static string MetadataBinder_PropertyAccessSourceNotSingleValue(object p0);
    internal static string MetadataBinder_IncompatibleOperandsError(object p0, object p1, object p2);
    internal static string MetadataBinder_IncompatibleOperandError(object p0, object p1);
    internal static string MetadataBinder_UnknownFunction(object p0);
    internal static string MetadataBinder_FunctionArgumentNotSingleValue(object p0);
    internal static string MetadataBinder_NoApplicableFunctionFound(object p0, object p1);
    internal static string get_MetadataBinder_BuiltInFunctionSignatureWithoutAReturnType();
    internal static string MetadataBinder_UnsupportedSystemQueryOption(object p0);
    internal static string MetadataBinder_BoundNodeCannotBeNull(object p0);
    internal static string MetadataBinder_TopRequiresNonNegativeInteger(object p0);
    internal static string MetadataBinder_SkipRequiresNonNegativeInteger(object p0);
    internal static string MetadataBinder_ServiceOperationWithoutResultKind(object p0);
    internal static string MetadataBinder_HierarchyNotFollowed(object p0, object p1);
    internal static string get_MetadataBinder_MustBeCalledOnRoot();
    internal static string get_MetadataBinder_NoTypeSupported();
    internal static string get_MetadataBinder_LambdaParentMustBeCollection();
    internal static string MetadataBinder_ParameterNotInScope(object p0);
    internal static string get_MetadataBinder_NullNavigationProperty();
    internal static string get_MetadataBinder_NavigationPropertyNotFollowingSingleEntityType();
    internal static string get_MetadataBinder_AnyAllExpressionNotSingleValue();
    internal static string MetadataBinder_CastOrIsOfExpressionWithWrongNumberOfOperands(object p0);
    internal static string get_MetadataBinder_CastOrIsOfFunctionWithoutATypeArgument();
    internal static string get_MetadataBinder_CastOrIsOfCollectionsNotSupported();
    internal static string MetadataBinder_SpatialLengthFunctionWithInvalidArgs(object p0);
    internal static string get_MetadataBinder_SpatialLengthFunctionWithoutASingleValueArg();
    internal static string get_MetadataBinder_SpatialLengthFunctionWithOutLineStringArg();
    internal static string MetadataBinder_SpatialIntersectsFunctionWithInvalidArgs(object p0);
    internal static string get_MetadataBinder_SpatialIntersectsFunctionWithoutASingleValueArg();
    internal static string get_MetadataBinder_SpatialIntersectsFunctionWithInvalidArgTypes();
    internal static string get_MetadataBinder_NonValidTypeArgument();
    internal static string MetadataBinder_OperatorNotSupportedInThisVersion(object p0);
    internal static string MetadataBinder_KeywordNotSupportedInThisRelease(object p0);
    internal static string get_MetadataBinder_CollectionOpenPropertiesNotSupportedInThisRelease();
    internal static string MetadataBinder_IllegalSegmentType(object p0);
    internal static string MetadataBinder_QueryOptionNotApplicable(object p0);
    internal static string FunctionCallBinder_CannotFindASuitableOverload(object p0, object p1);
    internal static string FunctionCallBinder_NonSingleValueParent(object p0);
    internal static string FunctionCallBinder_FoundInvalidFunctionImports(object p0);
    internal static string FunctionCallBinder_BuiltInFunctionMustHaveHaveNullParent(object p0);
    internal static string FunctionCallBinder_CallingFunctionOnOpenProperty(object p0);
    internal static string get_FunctionCallParser_DuplicateParameterName();
    internal static string ODataUriParser_InvalidInlineCount(object p0);
    internal static string CastBinder_ChildTypeIsNotEntity(object p0);
    internal static string BatchReferenceSegment_InvalidContentID(object p0);
    internal static string SelectExpandBinder_UnknownPropertyType(object p0);
    internal static string SelectExpandBinder_CantFindProperty(object p0);
    internal static string SelectionItemBinder_NoExpandForSelectedProperty(object p0);
    internal static string get_SelectionItemBinder_NonPathSelectToken();
    internal static string SelectionItemBinder_NonEntityTypeSegment(object p0);
    internal static string SelectExpandPathBinder_FollowNonTypeSegment(object p0);
    internal static string SelectPropertyVisitor_SystemTokenInSelect(object p0);
    internal static string SelectPropertyVisitor_InvalidSegmentInSelectPath(object p0);
    internal static string get_SelectPropertyVisitor_DisparateTypeSegmentsInSelectExpand();
    internal static string get_SelectExpandClause_CannotDeleteFromAllSelection();
    internal static string get_SegmentFactory_LinksSegmentNotFollowedByNavProp();
    internal static string get_ExpandItemBinder_TraversingANonNormalizedTree();
    internal static string ExpandItemBinder_CannotFindType(object p0);
    internal static string ExpandItemBinder_PropertyIsNotANavigationProperty(object p0, object p1);
    internal static string get_ExpandItemBinder_TypeSegmentNotFollowedByPath();
    internal static string get_ExpandItemBinder_PathTooDeep();
    internal static string get_Nodes_CollectionNavigationNode_MustHaveSingleMultiplicity();
    internal static string Nodes_NonentityParameterQueryNodeWithEntityType(object p0);
    internal static string Nodes_EntityCollectionServiceOperationRequiresEntityReturnType(object p0);
    internal static string get_Nodes_CollectionNavigationNode_MustHaveManyMultiplicity();
    internal static string Nodes_PropertyAccessShouldBeNonEntityProperty(object p0);
    internal static string Nodes_PropertyAccessTypeShouldNotBeCollection(object p0);
    internal static string Nodes_PropertyAccessTypeMustBeCollection(object p0);
    internal static string get_Nodes_NonStaticEntitySetExpressionsAreNotSupportedInThisRelease();
    internal static string get_Nodes_CollectionFunctionCallNode_ItemTypeMustBePrimitiveOrComplex();
    internal static string get_Nodes_EntityCollectionFunctionCallNode_ItemTypeMustBeAnEntity();
    internal static string get_ExpandTreeNormalizer_CallAddTermsOnUnexpandedTerms();
    internal static string get_ExpandTreeNormalizer_NonPathInPropertyChain();
    internal static string UriSelectParser_TermIsNotValid(object p0);
    internal static string UriSelectParser_FunctionsAreNotAllowed(object p0);
    internal static string UriSelectParser_InvalidTopOption(object p0);
    internal static string UriSelectParser_InvalidSkipOption(object p0);
    internal static string UriSelectParser_SystemTokenInSelectExpand(object p0, object p1);
    internal static string get_UriParser_NeedServiceRootForThisOverload();
    internal static string UriParser_UriMustBeAbsolute(object p0);
    internal static string get_UriParser_NegativeLimit();
    internal static string UriParser_ExpandCountExceeded(object p0, object p1);
    internal static string UriParser_ExpandDepthExceeded(object p0, object p1);
    internal static string PathParser_ServiceOperationWithoutResultKindAttribute(object p0);
    internal static string get_PathParser_FunctionsAreNotSupported();
    internal static string PathParser_ServiceOperationsWithSameName(object p0);
    internal static string PathParser_LinksNotSupported(object p0);
    internal static string get_PathParser_CannotUseValueOnCollection();
    internal static string PathParser_TypeMustBeRelatedToSet(object p0, object p1, object p2);
    internal static string get_ODataFeed_MustNotContainBothNextPageLinkAndDeltaLink();
    internal static string get_ODataExpandPath_OnlyLastSegmentMustBeNavigationProperty();
    internal static string ODataExpandPath_InvalidExpandPathSegment(object p0);
    internal static string get_ODataSelectPath_CannotEndInTypeSegment();
    internal static string ODataSelectPath_InvalidSelectPathSegmentType(object p0);
    internal static string get_ODataSelectPath_OperationSegmentCanOnlyBeLastSegment();
    internal static string get_ODataSelectPath_NavPropSegmentCanOnlyBeLastSegment();
    internal static string RequestUriProcessor_EntitySetNotSpecified(object p0);
    internal static string RequestUriProcessor_TargetEntitySetNotFound(object p0);
    internal static string RequestUriProcessor_FoundInvalidFunctionImport(object p0);
    internal static string get_OperationSegment_ReturnTypeForMultipleOverloads();
    internal static string get_OperationSegment_CannotReturnNull();
    internal static string get_SingleValueFunctionCallNode_FunctionImportsWithLegacyConstructor();
    internal static string get_SingleEntityFunctionCallNode_CallFunctionImportsUsingLegacyConstructor();
    internal static string get_SegmentArgumentParser_TryConvertValuesForNamedValues();
    internal static string get_SegmentArgumentParser_TryConvertValuesToNonPrimitive();
    internal static string get_SegmentArgumentParser_TryConvertValuesForPositionalValues();
    internal static string FunctionOverloadResolver_NoSingleMatchFound(object p0, object p1);
    internal static string FunctionOverloadResolver_MultipleActionOverloads(object p0);
    internal static string get_RequestUriProcessor_EmptySegmentInRequestUrl();
    internal static string get_RequestUriProcessor_SyntaxError();
    internal static string RequestUriProcessor_CannotSpecifyAfterPostLinkSegment(object p0, object p1);
    internal static string get_RequestUriProcessor_CountOnRoot();
    internal static string RequestUriProcessor_MustBeLeafSegment(object p0);
    internal static string RequestUriProcessor_LinkSegmentMustBeFollowedByEntitySegment(object p0, object p1);
    internal static string RequestUriProcessor_MissingSegmentAfterLink(object p0);
    internal static string RequestUriProcessor_CountNotSupported(object p0);
    internal static string RequestUriProcessor_CannotQuerySingletons(object p0, object p1);
    internal static string RequestUriProcessor_CannotQueryCollections(object p0);
    internal static string RequestUriProcessor_SegmentDoesNotSupportKeyPredicates(object p0);
    internal static string RequestUriProcessor_ValueSegmentAfterScalarPropertySegment(object p0, object p1);
    internal static string RequestUriProcessor_InvalidTypeIdentifier_UnrelatedType(object p0, object p1);
    internal static string ResourceType_ComplexTypeCannotBeOpen(object p0);
    internal static string get_BadRequest_ValuesCannotBeReturnedForSpatialTypes();
    internal static string OpenNavigationPropertiesNotSupportedOnOpenTypes(object p0);
    internal static string get_BadRequest_ResourceCanBeCrossReferencedOnlyForBindOperation();
    internal static string DataServiceConfiguration_ResponseVersionIsBiggerThanProtocolVersion(object p0, object p1);
    internal static string BadRequest_KeyCountMismatch(object p0);
    internal static string get_RequestUriProcessor_KeysMustBeNamed();
    internal static string RequestUriProcessor_ResourceNotFound(object p0);
    internal static string RequestUriProcessor_BatchedActionOnEntityCreatedInSameChangeset(object p0);
    internal static string RequestUriProcessor_IEnumerableServiceOperationsCannotBeFurtherComposed(object p0);
    internal static string get_RequestUriProcessor_Forbidden();
    internal static string get_RequestUriProcessor_OperationSegmentBoundToANonEntityType();
    internal static string General_InternalError(object p0);
    internal static string ExceptionUtils_CheckIntegerNotNegative(object p0);
    internal static string ExceptionUtils_CheckIntegerPositive(object p0);
    internal static string ExceptionUtils_CheckLongPositive(object p0);
    internal static string get_ExceptionUtils_ArgumentStringNullOrEmpty();
    internal static string ExpressionToken_IdentifierExpected(object p0);
    internal static string ExpressionLexer_UnterminatedStringLiteral(object p0, object p1);
    internal static string ExpressionLexer_InvalidCharacter(object p0, object p1, object p2);
    internal static string ExpressionLexer_SyntaxError(object p0, object p1);
    internal static string ExpressionLexer_UnterminatedLiteral(object p0, object p1);
    internal static string ExpressionLexer_DigitExpected(object p0, object p1);
    internal static string get_ExpressionLexer_UnbalancedBracketExpression();
    internal static string UriQueryExpressionParser_UnrecognizedLiteral(object p0, object p1, object p2, object p3);
    internal static string JsonReader_UnexpectedComma(object p0);
    internal static string get_JsonReader_MultipleTopLevelValues();
    internal static string get_JsonReader_EndOfInputWithOpenScope();
    internal static string JsonReader_UnexpectedToken(object p0);
    internal static string get_JsonReader_UnrecognizedToken();
    internal static string JsonReader_MissingColon(object p0);
    internal static string JsonReader_UnrecognizedEscapeSequence(object p0);
    internal static string get_JsonReader_UnexpectedEndOfString();
    internal static string JsonReader_InvalidNumberFormat(object p0);
    internal static string JsonReader_MissingComma(object p0);
    internal static string JsonReader_InvalidPropertyNameOrUnexpectedComma(object p0);
    internal static string JsonReaderExtensions_UnexpectedNodeDetected(object p0, object p1);
    internal static string JsonReaderExtensions_CannotReadPropertyValueAsString(object p0, object p1);
    internal static string JsonReaderExtensions_CannotReadValueAsString(object p0);
    internal static string JsonReaderExtensions_CannotReadValueAsDouble(object p0);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.TaskUtils : object {
    private static Task completedTask;
    [CompilerGeneratedAttribute]
private static Func`2<Task, object> CS$<>9__CachedAnonymousMethodDelegate18;
    [CompilerGeneratedAttribute]
private static Func`2<Task, object> CS$<>9__CachedAnonymousMethodDelegate1f;
    [CompilerGeneratedAttribute]
private static Action`1<Task> CS$<>9__CachedAnonymousMethodDelegate25;
    internal static Task CompletedTask { get; }
    internal static Task get_CompletedTask();
    internal static Task`1<T> GetCompletedTask(T value);
    internal static Task GetFaultedTask(Exception exception);
    internal static Task`1<T> GetFaultedTask(Exception exception);
    internal static Task GetTaskForSynchronousOperation(Action synchronousOperation);
    internal static Task`1<T> GetTaskForSynchronousOperation(Func`1<T> synchronousOperation);
    internal static Task GetTaskForSynchronousOperationReturningTask(Func`1<Task> synchronousOperation);
    internal static Task`1<TResult> GetTaskForSynchronousOperationReturningTask(Func`1<Task`1<TResult>> synchronousOperation);
    [ExtensionAttribute]
internal static Task FollowOnSuccessWith(Task antecedentTask, Action`1<Task> operation);
    [ExtensionAttribute]
internal static Task`1<TFollowupTaskResult> FollowOnSuccessWith(Task antecedentTask, Func`2<Task, TFollowupTaskResult> operation);
    [ExtensionAttribute]
internal static Task FollowOnSuccessWith(Task`1<TAntecedentTaskResult> antecedentTask, Action`1<Task`1<TAntecedentTaskResult>> operation);
    [ExtensionAttribute]
internal static Task`1<TFollowupTaskResult> FollowOnSuccessWith(Task`1<TAntecedentTaskResult> antecedentTask, Func`2<Task`1<TAntecedentTaskResult>, TFollowupTaskResult> operation);
    [ExtensionAttribute]
internal static Task FollowOnSuccessWithTask(Task antecedentTask, Func`2<Task, Task> operation);
    [ExtensionAttribute]
internal static Task`1<TFollowupTaskResult> FollowOnSuccessWithTask(Task antecedentTask, Func`2<Task, Task`1<TFollowupTaskResult>> operation);
    [ExtensionAttribute]
internal static Task FollowOnSuccessWithTask(Task`1<TAntecedentTaskResult> antecedentTask, Func`2<Task`1<TAntecedentTaskResult>, Task> operation);
    [ExtensionAttribute]
internal static Task`1<TFollowupTaskResult> FollowOnSuccessWithTask(Task`1<TAntecedentTaskResult> antecedentTask, Func`2<Task`1<TAntecedentTaskResult>, Task`1<TFollowupTaskResult>> operation);
    [ExtensionAttribute]
internal static Task FollowOnFaultWith(Task antecedentTask, Action`1<Task> operation);
    [ExtensionAttribute]
internal static Task`1<TResult> FollowOnFaultWith(Task`1<TResult> antecedentTask, Action`1<Task`1<TResult>> operation);
    [ExtensionAttribute]
internal static Task`1<TResult> FollowOnFaultAndCatchExceptionWith(Task`1<TResult> antecedentTask, Func`2<TExceptionType, TResult> catchBlock);
    [ExtensionAttribute]
internal static Task FollowAlwaysWith(Task antecedentTask, Action`1<Task> operation);
    [ExtensionAttribute]
internal static Task`1<TResult> FollowAlwaysWith(Task`1<TResult> antecedentTask, Action`1<Task`1<TResult>> operation);
    [ExtensionAttribute]
internal static Task IgnoreExceptions(Task task);
    [ExtensionAttribute]
internal static TaskScheduler GetTargetScheduler(TaskFactory factory);
    [ExtensionAttribute]
internal static Task Iterate(TaskFactory factory, IEnumerable`1<Task> source);
    private static void FollowOnSuccessWithContinuation(Task antecedentTask, TaskCompletionSource`1<TResult> taskCompletionSource, Func`2<Task, TResult> operation);
    private static Task`1<TResult> FollowOnSuccessWithImplementation(Task antecedentTask, Func`2<Task, TResult> operation);
    private static Task`1<TResult> FollowOnFaultWithImplementation(Task antecedentTask, Func`2<Task, TResult> getTaskResult, Action`1<Task> operation);
    private static Task`1<TResult> FollowOnFaultAndCatchExceptionWithImplementation(Task antecedentTask, Func`2<Task, TResult> getTaskResult, Func`2<TExceptionType, TResult> catchBlock);
    [ExtensionAttribute]
private static Task`1<TResult> FollowAlwaysWithImplementation(Task antecedentTask, Func`2<Task, TResult> getTaskResult, Action`1<Task> operation);
    [CompilerGeneratedAttribute]
private static object <FollowOnFaultWith>b__17(Task t);
    [CompilerGeneratedAttribute]
private static TResult <FollowOnFaultWith>b__19(Task t);
    [CompilerGeneratedAttribute]
private static TResult <FollowOnFaultAndCatchExceptionWith>b__1d(Task t);
    [CompilerGeneratedAttribute]
private static object <FollowAlwaysWith>b__1e(Task t);
    [CompilerGeneratedAttribute]
private static TResult <FollowAlwaysWith>b__20(Task t);
    [CompilerGeneratedAttribute]
private static void <IgnoreExceptions>b__24(Task t);
}
internal class Microsoft.Data.OData.TextRes : object {
    internal static string ExceptionUtils_ArgumentStringEmpty;
    internal static string ODataRequestMessage_AsyncNotAvailable;
    internal static string ODataRequestMessage_StreamTaskIsNull;
    internal static string ODataRequestMessage_MessageStreamIsNull;
    internal static string ODataResponseMessage_AsyncNotAvailable;
    internal static string ODataResponseMessage_StreamTaskIsNull;
    internal static string ODataResponseMessage_MessageStreamIsNull;
    internal static string AsyncBufferedStream_WriterDisposedWithoutFlush;
    internal static string ODataOutputContext_UnsupportedPayloadKindForFormat;
    internal static string ODataOutputContext_CustomInstanceAnnotationsNotSupportedForFormat;
    internal static string ODataInputContext_UnsupportedPayloadKindForFormat;
    internal static string ODataJsonLightSerializer_RelativeUriUsedWithoutMetadataDocumentUriOrMetadata;
    internal static string ODataWriter_RelativeUriUsedWithoutBaseUriSpecified;
    internal static string ODataWriter_StreamPropertiesMustBePropertiesOfODataEntry;
    internal static string ODataWriterCore_InvalidStateTransition;
    internal static string ODataWriterCore_InvalidTransitionFromStart;
    internal static string ODataWriterCore_InvalidTransitionFromEntry;
    internal static string ODataWriterCore_InvalidTransitionFromNullEntry;
    internal static string ODataWriterCore_InvalidTransitionFromFeed;
    internal static string ODataWriterCore_InvalidTransitionFromExpandedLink;
    internal static string ODataWriterCore_InvalidTransitionFromCompleted;
    internal static string ODataWriterCore_InvalidTransitionFromError;
    internal static string ODataWriterCore_WriteEndCalledInInvalidState;
    internal static string ODataWriterCore_OnlyTopLevelFeedsSupportInlineCount;
    internal static string ODataWriterCore_InlineCountInRequest;
    internal static string ODataWriterCore_CannotWriteTopLevelFeedWithEntryWriter;
    internal static string ODataWriterCore_CannotWriteTopLevelEntryWithFeedWriter;
    internal static string ODataWriterCore_SyncCallOnAsyncWriter;
    internal static string ODataWriterCore_AsyncCallOnSyncWriter;
    internal static string ODataWriterCore_EntityReferenceLinkWithoutNavigationLink;
    internal static string ODataWriterCore_EntityReferenceLinkInResponse;
    internal static string ODataWriterCore_DeferredLinkInRequest;
    internal static string ODataWriterCore_MultipleItemsInNavigationLinkContent;
    internal static string ODataWriterCore_DeltaLinkNotSupportedOnExpandedFeed;
    internal static string DuplicatePropertyNamesChecker_DuplicatePropertyNamesNotAllowed;
    internal static string DuplicatePropertyNamesChecker_MultipleLinksForSingleton;
    internal static string DuplicatePropertyNamesChecker_DuplicateAnnotationNotAllowed;
    internal static string DuplicatePropertyNamesChecker_DuplicateAnnotationForPropertyNotAllowed;
    internal static string DuplicatePropertyNamesChecker_DuplicateAnnotationForInstanceAnnotationNotAllowed;
    internal static string DuplicatePropertyNamesChecker_PropertyAnnotationAfterTheProperty;
    internal static string AtomValueUtils_CannotConvertValueToAtomPrimitive;
    internal static string ODataJsonWriter_UnsupportedValueType;
    internal static string ODataException_GeneralError;
    internal static string ODataErrorException_GeneralError;
    internal static string ODataUriParserException_GeneralError;
    internal static string ODataVersionChecker_MaxProtocolVersionExceeded;
    internal static string ODataVersionChecker_PropertyNotSupportedForODataVersionGreaterThanX;
    internal static string ODataVersionChecker_ParameterPayloadNotSupported;
    internal static string ODataVersionChecker_AssociationLinksNotSupported;
    internal static string ODataVersionChecker_InlineCountNotSupported;
    internal static string ODataVersionChecker_NextLinkNotSupported;
    internal static string ODataVersionChecker_DeltaLinkNotSupported;
    internal static string ODataVersionChecker_CollectionPropertiesNotSupported;
    internal static string ODataVersionChecker_CollectionNotSupported;
    internal static string ODataVersionChecker_StreamPropertiesNotSupported;
    internal static string ODataVersionChecker_EpmVersionNotSupported;
    internal static string ODataVersionChecker_ProtocolVersion3IsNotSupported;
    internal static string ODataVersionChecker_GeographyAndGeometryNotSupported;
    internal static string ODataAtomCollectionWriter_CollectionNameMustNotBeNull;
    internal static string ODataAtomWriter_StartEntryXmlCustomizationCallbackReturnedSameInstance;
    internal static string ODataAtomWriterMetadataUtils_AuthorMetadataMustNotContainNull;
    internal static string ODataAtomWriterMetadataUtils_CategoryMetadataMustNotContainNull;
    internal static string ODataAtomWriterMetadataUtils_ContributorMetadataMustNotContainNull;
    internal static string ODataAtomWriterMetadataUtils_LinkMetadataMustNotContainNull;
    internal static string ODataAtomWriterMetadataUtils_LinkMustSpecifyHref;
    internal static string ODataAtomWriterMetadataUtils_CategoryMustSpecifyTerm;
    internal static string ODataAtomWriterMetadataUtils_LinkHrefsMustMatch;
    internal static string ODataAtomWriterMetadataUtils_LinkTitlesMustMatch;
    internal static string ODataAtomWriterMetadataUtils_LinkRelationsMustMatch;
    internal static string ODataAtomWriterMetadataUtils_LinkMediaTypesMustMatch;
    internal static string ODataAtomWriterMetadataUtils_InvalidAnnotationValue;
    internal static string ODataAtomWriterMetadataUtils_CategoriesHrefWithOtherValues;
    internal static string ODataAtomWriterMetadataUtils_CategoryTermsMustMatch;
    internal static string ODataAtomWriterMetadataUtils_CategorySchemesMustMatch;
    internal static string ODataAtomMetadataEpmMerge_TextKindConflict;
    internal static string ODataAtomMetadataEpmMerge_TextValueConflict;
    internal static string ODataMessageWriter_WriterAlreadyUsed;
    internal static string ODataMessageWriter_InvalidContentTypeForWritingRawValue;
    internal static string ODataMessageWriter_EntityReferenceLinksInRequestNotAllowed;
    internal static string ODataMessageWriter_ErrorPayloadInRequest;
    internal static string ODataMessageWriter_ServiceDocumentInRequest;
    internal static string ODataMessageWriter_MetadataDocumentInRequest;
    internal static string ODataMessageWriter_CannotWriteNullInRawFormat;
    internal static string ODataMessageWriter_CannotSetHeadersWithInvalidPayloadKind;
    internal static string ODataMessageWriter_IncompatiblePayloadKinds;
    internal static string ODataMessageWriter_CannotWriteStreamPropertyAsTopLevelProperty;
    internal static string ODataMessageWriter_InvalidPropertyOwningType;
    internal static string ODataMessageWriter_InvalidPropertyProducingFunctionImport;
    internal static string ODataMessageWriter_WriteErrorAlreadyCalled;
    internal static string ODataMessageWriter_CannotWriteInStreamErrorForRawValues;
    internal static string ODataMessageWriter_CannotWriteMetadataWithoutModel;
    internal static string ODataMessageWriter_CannotSpecifyFunctionImportWithoutModel;
    internal static string ODataMessageWriter_EntityReferenceLinksWithSingletonNavPropNotAllowed;
    internal static string ODataMessageWriter_JsonPaddingOnInvalidContentType;
    internal static string ODataMessageWriter_NonCollectionType;
    internal static string ODataMessageWriterSettings_MessageWriterSettingsXmlCustomizationCallbacksMustBeSpecifiedBoth;
    internal static string ODataCollectionWriter_CannotCreateCollectionWriterForFormat;
    internal static string ODataCollectionWriterCore_InvalidTransitionFromStart;
    internal static string ODataCollectionWriterCore_InvalidTransitionFromCollection;
    internal static string ODataCollectionWriterCore_InvalidTransitionFromItem;
    internal static string ODataCollectionWriterCore_WriteEndCalledInInvalidState;
    internal static string ODataCollectionWriterCore_SyncCallOnAsyncWriter;
    internal static string ODataCollectionWriterCore_AsyncCallOnSyncWriter;
    internal static string ODataCollectionWriterCore_CollectionsMustNotHaveEmptyName;
    internal static string ODataCollectionWriterCore_CollectionNameDoesntMatchFunctionImportName;
    internal static string ODataCollectionWriterCore_NonCollectionType;
    internal static string ODataBatch_InvalidHttpMethodForQueryOperation;
    internal static string ODataBatch_InvalidHttpMethodForChangeSetRequest;
    internal static string ODataBatchOperationHeaderDictionary_KeyNotFound;
    internal static string ODataBatchOperationHeaderDictionary_DuplicateCaseInsensitiveKeys;
    internal static string ODataParameterWriter_InStreamErrorNotSupported;
    internal static string ODataParameterWriter_CannotCreateParameterWriterOnResponseMessage;
    internal static string ODataParameterWriterCore_SyncCallOnAsyncWriter;
    internal static string ODataParameterWriterCore_AsyncCallOnSyncWriter;
    internal static string ODataParameterWriterCore_CannotWriteStart;
    internal static string ODataParameterWriterCore_CannotWriteParameter;
    internal static string ODataParameterWriterCore_CannotWriteEnd;
    internal static string ODataParameterWriterCore_CannotWriteInErrorOrCompletedState;
    internal static string ODataParameterWriterCore_DuplicatedParameterNameNotAllowed;
    internal static string ODataParameterWriterCore_CannotWriteValueOnNonValueTypeKind;
    internal static string ODataParameterWriterCore_CannotWriteValueOnNonSupportedValueType;
    internal static string ODataParameterWriterCore_CannotCreateCollectionWriterOnNonCollectionTypeKind;
    internal static string ODataParameterWriterCore_ParameterNameNotFoundInFunctionImport;
    internal static string ODataParameterWriterCore_MissingParameterInParameterPayload;
    internal static string ODataBatchWriter_FlushOrFlushAsyncCalledInStreamRequestedState;
    internal static string ODataBatchWriter_CannotCompleteBatchWithActiveChangeSet;
    internal static string ODataBatchWriter_CannotStartChangeSetWithActiveChangeSet;
    internal static string ODataBatchWriter_CannotCompleteChangeSetWithoutActiveChangeSet;
    internal static string ODataBatchWriter_InvalidTransitionFromStart;
    internal static string ODataBatchWriter_InvalidTransitionFromBatchStarted;
    internal static string ODataBatchWriter_InvalidTransitionFromChangeSetStarted;
    internal static string ODataBatchWriter_InvalidTransitionFromOperationCreated;
    internal static string ODataBatchWriter_InvalidTransitionFromOperationContentStreamRequested;
    internal static string ODataBatchWriter_InvalidTransitionFromOperationContentStreamDisposed;
    internal static string ODataBatchWriter_InvalidTransitionFromChangeSetCompleted;
    internal static string ODataBatchWriter_InvalidTransitionFromBatchCompleted;
    internal static string ODataBatchWriter_CannotCreateRequestOperationWhenWritingResponse;
    internal static string ODataBatchWriter_CannotCreateResponseOperationWhenWritingRequest;
    internal static string ODataBatchWriter_MaxBatchSizeExceeded;
    internal static string ODataBatchWriter_MaxChangeSetSizeExceeded;
    internal static string ODataBatchWriter_SyncCallOnAsyncWriter;
    internal static string ODataBatchWriter_AsyncCallOnSyncWriter;
    internal static string ODataBatchWriter_DuplicateContentIDsNotAllowed;
    internal static string ODataBatchWriter_CannotWriteInStreamErrorForBatch;
    internal static string ODataBatchUtils_RelativeUriUsedWithoutBaseUriSpecified;
    internal static string ODataBatchUtils_RelativeUriStartingWithDollarUsedWithoutBaseUriSpecified;
    internal static string ODataBatchOperationMessage_VerifyNotCompleted;
    internal static string ODataBatchOperationStream_Disposed;
    internal static string ODataBatchReader_CannotCreateRequestOperationWhenReadingResponse;
    internal static string ODataBatchReader_CannotCreateResponseOperationWhenReadingRequest;
    internal static string ODataBatchReader_InvalidStateForCreateOperationRequestMessage;
    internal static string ODataBatchReader_OperationRequestMessageAlreadyCreated;
    internal static string ODataBatchReader_OperationResponseMessageAlreadyCreated;
    internal static string ODataBatchReader_InvalidStateForCreateOperationResponseMessage;
    internal static string ODataBatchReader_CannotUseReaderWhileOperationStreamActive;
    internal static string ODataBatchReader_SyncCallOnAsyncReader;
    internal static string ODataBatchReader_AsyncCallOnSyncReader;
    internal static string ODataBatchReader_ReadOrReadAsyncCalledInInvalidState;
    internal static string ODataBatchReader_MaxBatchSizeExceeded;
    internal static string ODataBatchReader_MaxChangeSetSizeExceeded;
    internal static string ODataBatchReader_NoMessageWasCreatedForOperation;
    internal static string ODataBatchReader_DuplicateContentIDsNotAllowed;
    internal static string ODataBatchReaderStream_InvalidHeaderSpecified;
    internal static string ODataBatchReaderStream_InvalidRequestLine;
    internal static string ODataBatchReaderStream_InvalidResponseLine;
    internal static string ODataBatchReaderStream_InvalidHttpVersionSpecified;
    internal static string ODataBatchReaderStream_NonIntegerHttpStatusCode;
    internal static string ODataBatchReaderStream_MissingContentTypeHeader;
    internal static string ODataBatchReaderStream_MissingOrInvalidContentEncodingHeader;
    internal static string ODataBatchReaderStream_InvalidContentTypeSpecified;
    internal static string ODataBatchReaderStream_InvalidContentLengthSpecified;
    internal static string ODataBatchReaderStream_DuplicateHeaderFound;
    internal static string ODataBatchReaderStream_NestedChangesetsAreNotSupported;
    internal static string ODataBatchReaderStream_MultiByteEncodingsNotSupported;
    internal static string ODataBatchReaderStream_UnexpectedEndOfInput;
    internal static string ODataBatchReaderStreamBuffer_BoundaryLineSecurityLimitReached;
    internal static string HttpUtils_MediaTypeUnspecified;
    internal static string HttpUtils_MediaTypeRequiresSlash;
    internal static string HttpUtils_MediaTypeRequiresSubType;
    internal static string HttpUtils_MediaTypeMissingParameterValue;
    internal static string HttpUtils_MediaTypeMissingParameterName;
    internal static string HttpUtils_EscapeCharWithoutQuotes;
    internal static string HttpUtils_EscapeCharAtEnd;
    internal static string HttpUtils_ClosingQuoteNotFound;
    internal static string HttpUtils_InvalidCharacterInQuotedParameterValue;
    internal static string HttpUtils_ContentTypeMissing;
    internal static string HttpUtils_MediaTypeRequiresSemicolonBeforeParameter;
    internal static string HttpUtils_InvalidQualityValueStartChar;
    internal static string HttpUtils_InvalidQualityValue;
    internal static string HttpUtils_CannotConvertCharToInt;
    internal static string HttpUtils_MissingSeparatorBetweenCharsets;
    internal static string HttpUtils_InvalidSeparatorBetweenCharsets;
    internal static string HttpUtils_InvalidCharsetName;
    internal static string HttpUtils_UnexpectedEndOfQValue;
    internal static string HttpUtils_ExpectedLiteralNotFoundInString;
    internal static string HttpUtils_InvalidHttpMethodString;
    internal static string HttpUtils_NoOrMoreThanOneContentTypeSpecified;
    internal static string HttpHeaderValueLexer_UnrecognizedSeparator;
    internal static string HttpHeaderValueLexer_TokenExpectedButFoundQuotedString;
    internal static string HttpHeaderValueLexer_FailedToReadTokenOrQuotedString;
    internal static string HttpHeaderValueLexer_InvalidSeparatorAfterQuotedString;
    internal static string HttpHeaderValueLexer_EndOfFileAfterSeparator;
    internal static string MediaType_EncodingNotSupported;
    internal static string MediaTypeUtils_DidNotFindMatchingMediaType;
    internal static string MediaTypeUtils_CannotDetermineFormatFromContentType;
    internal static string MediaTypeUtils_NoOrMoreThanOneContentTypeSpecified;
    internal static string MediaTypeUtils_BoundaryMustBeSpecifiedForBatchPayloads;
    internal static string EntityPropertyMapping_EpmAttribute;
    internal static string EntityPropertyMapping_InvalidTargetPath;
    internal static string EntityPropertyMapping_TargetNamespaceUriNotValid;
    internal static string EpmSourceTree_InvalidSourcePath;
    internal static string EpmSourceTree_EndsWithNonPrimitiveType;
    internal static string EpmSourceTree_TraversalOfNonComplexType;
    internal static string EpmSourceTree_DuplicateEpmAttributesWithSameSourceName;
    internal static string EpmSourceTree_MissingPropertyOnType;
    internal static string EpmSourceTree_MissingPropertyOnInstance;
    internal static string EpmSourceTree_StreamPropertyCannotBeMapped;
    internal static string EpmSourceTree_SpatialTypeCannotBeMapped;
    internal static string EpmSourceTree_OpenPropertySpatialTypeCannotBeMapped;
    internal static string EpmSourceTree_OpenComplexPropertyCannotBeMapped;
    internal static string EpmSourceTree_CollectionPropertyCannotBeMapped;
    internal static string EpmTargetTree_InvalidTargetPath_EmptySegment;
    internal static string EpmTargetTree_InvalidTargetPath_MixedContent;
    internal static string EpmTargetTree_AttributeInMiddle;
    internal static string EpmTargetTree_DuplicateEpmAttributesWithSameTargetName;
    internal static string EpmSyndicationWriter_DateTimePropertyCanNotBeConverted;
    internal static string EpmSyndicationWriter_EmptyCollectionMappedToAuthor;
    internal static string EpmSyndicationWriter_NullValueForAttributeTarget;
    internal static string EpmSyndicationWriter_InvalidLinkLengthValue;
    internal static string EpmSyndicationWriter_InvalidValueForLinkRelCriteriaAttribute;
    internal static string EpmSyndicationWriter_InvalidValueForCategorySchemeCriteriaAttribute;
    internal static string ExpressionLexer_ExpectedLiteralToken;
    internal static string UriUtils_InvalidRelativeUriForEscaping;
    internal static string ODataUriUtils_ConvertToUriLiteralUnsupportedType;
    internal static string ODataUriUtils_ConvertToUriLiteralUnsupportedFormat;
    internal static string ODataUriUtils_ConvertFromUriLiteralTypeRefWithoutModel;
    internal static string ODataUriUtils_ConvertFromUriLiteralTypeVerificationFailure;
    internal static string ODataUriUtils_ConvertFromUriLiteralNullTypeVerificationFailure;
    internal static string ODataUriUtils_ConvertFromUriLiteralNullOnNonNullableType;
    internal static string ODataUtils_CannotConvertValueToRawPrimitive;
    internal static string ODataUtils_DidNotFindDefaultMediaType;
    internal static string ODataUtils_CannotSaveAnnotationsToBuiltInModel;
    internal static string ODataUtils_UnsupportedVersionHeader;
    internal static string ODataUtils_UnsupportedVersionNumber;
    internal static string ODataUtils_NullValueForMimeTypeAnnotation;
    internal static string ODataUtils_NullValueForHttpMethodAnnotation;
    internal static string ODataUtils_IsAlwaysBindableAnnotationSetForANonBindableFunctionImport;
    internal static string ODataUtils_UnexpectedIsAlwaysBindableAnnotationInANonBindableFunctionImport;
    internal static string ReaderUtils_EnumerableModified;
    internal static string ReaderValidationUtils_NullValueForNonNullableType;
    internal static string ReaderValidationUtils_NullNamedValueForNonNullableType;
    internal static string ReaderValidationUtils_EntityReferenceLinkMissingUri;
    internal static string ReaderValidationUtils_ValueWithoutType;
    internal static string ReaderValidationUtils_EntryWithoutType;
    internal static string ReaderValidationUtils_DerivedComplexTypesAreNotAllowed;
    internal static string ReaderValidationUtils_CannotConvertPrimitiveValue;
    internal static string ReaderValidationUtils_MessageReaderSettingsBaseUriMustBeNullOrAbsolute;
    internal static string ReaderValidationUtils_UndeclaredPropertyBehaviorKindSpecifiedOnRequest;
    internal static string ReaderValidationUtils_UndeclaredPropertyBehaviorKindSpecifiedForOpenType;
    internal static string ReaderValidationUtils_MetadataUriValidationInvalidExpectedEntitySet;
    internal static string ReaderValidationUtils_MetadataUriValidationInvalidExpectedEntityType;
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingPropertyNames;
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingDeclaringTypes;
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingCollectionNames;
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingCollectionItemTypes;
    internal static string ReaderValidationUtils_MetadataUriValidationPropertyWithExpectedFunctionImport;
    internal static string ReaderValidationUtils_MetadataUriValidationFunctionImportWithExpectedProperty;
    internal static string ReaderValidationUtils_NonMatchingCollectionNames;
    internal static string ReaderValidationUtils_NonMatchingPropertyNames;
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingPropertyDeclaringTypes;
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingPropertyTypes;
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingFunctionImportNames;
    internal static string ReaderValidationUtils_MetadataUriValidationNonMatchingFunctionImportReturnTypes;
    internal static string ReaderValidationUtils_TypeInMetadataUriDoesNotMatchExpectedType;
    internal static string ReaderValidationUtils_MetadataUriDoesNotReferTypeAssignableToExpectedType;
    internal static string ODataMessageReader_ReaderAlreadyUsed;
    internal static string ODataMessageReader_ErrorPayloadInRequest;
    internal static string ODataMessageReader_ServiceDocumentInRequest;
    internal static string ODataMessageReader_MetadataDocumentInRequest;
    internal static string ODataMessageReader_ExpectedTypeSpecifiedWithoutMetadata;
    internal static string ODataMessageReader_EntitySetSpecifiedWithoutMetadata;
    internal static string ODataMessageReader_FunctionImportSpecifiedWithoutMetadata;
    internal static string ODataMessageReader_ProducingFunctionImportNonCollectionType;
    internal static string ODataMessageReader_ExpectedCollectionTypeWrongKind;
    internal static string ODataMessageReader_ExpectedPropertyTypeEntityCollectionKind;
    internal static string ODataMessageReader_ExpectedPropertyTypeEntityKind;
    internal static string ODataMessageReader_ExpectedPropertyTypeStream;
    internal static string ODataMessageReader_ExpectedValueTypeWrongKind;
    internal static string ODataMessageReader_NoneOrEmptyContentTypeHeader;
    internal static string ODataMessageReader_WildcardInContentType;
    internal static string ODataMessageReader_EntityReferenceLinksInRequestNotAllowed;
    internal static string ODataMessageReader_GetFormatCalledBeforeReadingStarted;
    internal static string ODataMessageReader_DetectPayloadKindMultipleTimes;
    internal static string ODataMessageReader_PayloadKindDetectionRunning;
    internal static string ODataMessageReader_PayloadKindDetectionInServerMode;
    internal static string ODataMessageReader_ParameterPayloadInResponse;
    internal static string ODataMessageReader_SingletonNavigationPropertyForEntityReferenceLinks;
    internal static string ODataMessage_MustNotModifyMessage;
    internal static string ODataMediaTypeUtils_BoundaryMustBeSpecifiedForBatchPayloads;
    internal static string ODataReaderCore_SyncCallOnAsyncReader;
    internal static string ODataReaderCore_AsyncCallOnSyncReader;
    internal static string ODataReaderCore_ReadOrReadAsyncCalledInInvalidState;
    internal static string ODataReaderCore_NoReadCallsAllowed;
    internal static string ODataJsonReader_CannotReadEntriesOfFeed;
    internal static string ODataJsonReader_CannotReadFeedStart;
    internal static string ODataJsonReader_CannotReadEntryStart;
    internal static string ODataJsonReader_ParsingWithoutMetadata;
    internal static string ODataJsonReaderUtils_CannotConvertInt64OrDecimal;
    internal static string ODataJsonReaderUtils_CannotConvertInt32;
    internal static string ODataJsonReaderUtils_CannotConvertDouble;
    internal static string ODataJsonReaderUtils_CannotConvertBoolean;
    internal static string ODataJsonReaderUtils_CannotConvertDateTime;
    internal static string ODataJsonReaderUtils_CannotConvertDateTimeOffset;
    internal static string ODataJsonReaderUtils_MultipleMetadataPropertiesWithSameName;
    internal static string ODataJsonReaderUtils_MultipleEntityReferenceLinksWrapperPropertiesWithSameName;
    internal static string ODataJsonReaderUtils_MultipleErrorPropertiesWithSameName;
    internal static string ODataJsonReaderUtils_FeedPropertyWithNullValue;
    internal static string ODataJsonReaderUtils_MediaResourcePropertyWithNullValue;
    internal static string ODataJsonReaderUtils_EntityReferenceLinksInlineCountWithNullValue;
    internal static string ODataJsonReaderUtils_EntityReferenceLinksPropertyWithNullValue;
    internal static string ODataJsonReaderUtils_MetadataPropertyWithNullValue;
    internal static string ODataJsonDeserializer_DataWrapperPropertyNotFound;
    internal static string ODataJsonDeserializer_DataWrapperMultipleProperties;
    internal static string ODataJsonDeserializer_RelativeUriUsedWithoutBaseUriSpecified;
    internal static string ODataJsonCollectionDeserializer_MissingResultsPropertyForCollection;
    internal static string ODataJsonCollectionDeserializer_CannotReadCollectionContentStart;
    internal static string ODataJsonCollectionDeserializer_MultipleResultsPropertiesForCollection;
    internal static string ODataJsonEntityReferenceLinkDeserializer_ExpectedEntityReferenceLinksResultsPropertyNotFound;
    internal static string ODataJsonEntityReferenceLinkDeserializer_EntityReferenceLinkMustBeObjectValue;
    internal static string ODataJsonEntityReferenceLinkDeserializer_MultipleUriPropertiesInEntityReferenceLink;
    internal static string ODataJsonEntityReferenceLinkDeserializer_EntityReferenceLinkUriCannotBeNull;
    internal static string ODataJsonEntryAndFeedDeserializer_ExpectedFeedResultsPropertyNotFound;
    internal static string ODataJsonEntryAndFeedDeserializer_CannotReadFeedContentStart;
    internal static string ODataJsonEntryAndFeedDeserializer_MultipleMetadataPropertiesInEntryValue;
    internal static string ODataJsonEntryAndFeedDeserializer_MultipleUriPropertiesInDeferredLink;
    internal static string ODataJsonEntryAndFeedDeserializer_DeferredLinkUriCannotBeNull;
    internal static string ODataJsonEntryAndFeedDeserializer_DeferredLinkMissingUri;
    internal static string ODataJsonEntryAndFeedDeserializer_CannotReadNavigationPropertyValue;
    internal static string ODataJsonEntryAndFeedDeserializer_MultipleFeedResultsPropertiesFound;
    internal static string ODataJsonEntryAndFeedDeserializer_MultipleMetadataPropertiesForStreamProperty;
    internal static string ODataJsonEntryAndFeedDeserializer_CannotParseStreamReference;
    internal static string ODataJsonEntryAndFeedDeserializer_PropertyInEntryMustHaveObjectValue;
    internal static string ODataJsonEntryAndFeedDeserializer_CannotReadSingletonNavigationPropertyValue;
    internal static string ODataJsonEntryAndFeedDeserializer_CannotReadCollectionNavigationPropertyValue;
    internal static string ODataJsonEntryAndFeedDeserializer_StreamPropertyInRequest;
    internal static string ODataJsonLightEntryAndFeedSerializer_AnnotationGroupWithoutName;
    internal static string ODataJsonLightEntryAndFeedSerializer_AnnotationGroupMemberWithoutName;
    internal static string ODataJsonLightEntryAndFeedSerializer_AnnotationGroupMemberWithInvalidValue;
    internal static string ODataJsonLightEntryAndFeedSerializer_AnnotationGroupInRequest;
    internal static string ODataJsonLightEntryAndFeedSerializer_AnnotationGroupMemberMustBeAnnotation;
    internal static string ODataJsonLightEntryAndFeedSerializer_DuplicateAnnotationGroup;
    internal static string ODataJsonLightEntryAndFeedSerializer_ActionsAndFunctionsGroupMustSpecifyTarget;
    internal static string ODataJsonLightEntryAndFeedSerializer_ActionsAndFunctionsGroupMustNotHaveDuplicateTarget;
    internal static string ODataJsonErrorDeserializer_TopLevelErrorWithInvalidProperty;
    internal static string ODataJsonErrorDeserializer_TopLevelErrorMessageValueWithInvalidProperty;
    internal static string ODataVerboseJsonErrorDeserializer_TopLevelErrorValueWithInvalidProperty;
    internal static string ODataJsonPropertyAndValueDeserializer_TopLevelPropertyWithoutMetadata;
    internal static string ODataJsonPropertyAndValueDeserializer_InvalidTopLevelPropertyPayload;
    internal static string ODataJsonPropertyAndValueDeserializer_CannotReadPropertyValue;
    internal static string ODataJsonPropertyAndValueDeserializer_MultipleMetadataPropertiesInComplexValue;
    internal static string ODataJsonPropertyAndValueDeserializer_MultiplePropertiesInCollectionWrapper;
    internal static string ODataJsonPropertyAndValueDeserializer_CollectionWithoutResults;
    internal static string ODataJsonPropertyAndValueDeserializer_InvalidTypeName;
    internal static string ODataJsonPropertyAndValueDeserializer_InvalidPrimitiveTypeName;
    internal static string ODataJsonPropertyAndValueDeserializer_MetadataPropertyMustHaveObjectValue;
    internal static string ODataJsonServiceDocumentDeserializer_MultipleEntitySetsPropertiesForServiceDocument;
    internal static string ODataJsonServiceDocumentDeserializer_NoEntitySetsPropertyForServiceDocument;
    internal static string ODataCollectionReaderCore_ReadOrReadAsyncCalledInInvalidState;
    internal static string ODataCollectionReaderCore_SyncCallOnAsyncReader;
    internal static string ODataCollectionReaderCore_AsyncCallOnSyncReader;
    internal static string ODataCollectionReaderCore_ExpectedItemTypeSetInInvalidState;
    internal static string ODataParameterReaderCore_ReadOrReadAsyncCalledInInvalidState;
    internal static string ODataParameterReaderCore_SyncCallOnAsyncReader;
    internal static string ODataParameterReaderCore_AsyncCallOnSyncReader;
    internal static string ODataParameterReaderCore_SubReaderMustBeCreatedAndReadToCompletionBeforeTheNextReadOrReadAsyncCall;
    internal static string ODataParameterReaderCore_SubReaderMustBeInCompletedStateBeforeTheNextReadOrReadAsyncCall;
    internal static string ODataParameterReaderCore_InvalidCreateReaderMethodCalledForState;
    internal static string ODataParameterReaderCore_CreateReaderAlreadyCalled;
    internal static string ODataParameterReaderCore_ParameterNameNotInMetadata;
    internal static string ODataParameterReaderCore_DuplicateParametersInPayload;
    internal static string ODataParameterReaderCore_ParametersMissingInPayload;
    internal static string ODataJsonParameterReader_UnsupportedPrimitiveParameterType;
    internal static string ODataJsonParameterReader_UnsupportedParameterTypeKind;
    internal static string ODataJsonParameterReader_NullCollectionExpected;
    internal static string ODataJsonInputContext_FunctionImportCannotBeNullForCreateParameterReader;
    internal static string ODataJsonCollectionReader_CannotReadWrappedCollectionStart;
    internal static string ODataJsonCollectionReader_CannotReadCollectionStart;
    internal static string ODataJsonCollectionReader_ParsingWithoutMetadata;
    internal static string ValidationUtils_ActionsAndFunctionsMustSpecifyMetadata;
    internal static string ValidationUtils_ActionsAndFunctionsMustSpecifyTarget;
    internal static string ValidationUtils_EnumerableContainsANullItem;
    internal static string ValidationUtils_AssociationLinkMustSpecifyName;
    internal static string ValidationUtils_AssociationLinkMustSpecifyUrl;
    internal static string ValidationUtils_TypeNameMustNotBeEmpty;
    internal static string ValidationUtils_PropertyDoesNotExistOnType;
    internal static string ValidationUtils_ResourceCollectionMustSpecifyUrl;
    internal static string ValidationUtils_ResourceCollectionUrlMustNotBeNull;
    internal static string ValidationUtils_NonPrimitiveTypeForPrimitiveValue;
    internal static string ValidationUtils_UnsupportedPrimitiveType;
    internal static string ValidationUtils_IncompatiblePrimitiveItemType;
    internal static string ValidationUtils_NonStreamingCollectionElementsMustNotBeNull;
    internal static string ValidationUtils_InvalidCollectionTypeName;
    internal static string ValidationUtils_UnrecognizedTypeName;
    internal static string ValidationUtils_IncorrectTypeKind;
    internal static string ValidationUtils_IncorrectTypeKindNoTypeName;
    internal static string ValidationUtils_IncorrectValueTypeKind;
    internal static string ValidationUtils_LinkMustSpecifyName;
    internal static string ValidationUtils_MismatchPropertyKindForStreamProperty;
    internal static string ValidationUtils_InvalidEtagValue;
    internal static string ValidationUtils_NestedCollectionsAreNotSupported;
    internal static string ValidationUtils_StreamReferenceValuesNotSupportedInCollections;
    internal static string ValidationUtils_IncompatibleType;
    internal static string ValidationUtils_OpenCollectionProperty;
    internal static string ValidationUtils_OpenStreamProperty;
    internal static string ValidationUtils_InvalidCollectionTypeReference;
    internal static string ValidationUtils_EntryWithMediaResourceAndNonMLEType;
    internal static string ValidationUtils_EntryWithoutMediaResourceAndMLEType;
    internal static string ValidationUtils_EntryTypeNotAssignableToExpectedType;
    internal static string ValidationUtils_OpenNavigationProperty;
    internal static string ValidationUtils_NavigationPropertyExpected;
    internal static string ValidationUtils_InvalidBatchBoundaryDelimiterLength;
    internal static string ValidationUtils_RecursionDepthLimitReached;
    internal static string ValidationUtils_MaxDepthOfNestedEntriesExceeded;
    internal static string ValidationUtils_NullCollectionItemForNonNullableType;
    internal static string ValidationUtils_PropertiesMustNotContainReservedChars;
    internal static string ValidationUtils_MaxNumberOfEntityPropertyMappingsExceeded;
    internal static string ValidationUtils_WorkspaceCollectionsMustNotContainNullItem;
    internal static string ValidationUtils_InvalidMetadataReferenceProperty;
    internal static string ODataAtomWriter_FeedsMustHaveNonEmptyId;
    internal static string WriterValidationUtils_PropertyMustNotBeNull;
    internal static string WriterValidationUtils_PropertiesMustHaveNonEmptyName;
    internal static string WriterValidationUtils_PropertyNameDoesntMatchFunctionImportName;
    internal static string WriterValidationUtils_MissingTypeNameWithMetadata;
    internal static string WriterValidationUtils_NextPageLinkInRequest;
    internal static string WriterValidationUtils_ResourceCollectionMustHaveUniqueName;
    internal static string WriterValidationUtils_DefaultStreamWithContentTypeWithoutReadLink;
    internal static string WriterValidationUtils_DefaultStreamWithReadLinkWithoutContentType;
    internal static string WriterValidationUtils_StreamReferenceValueMustHaveEditLinkOrReadLink;
    internal static string WriterValidationUtils_StreamReferenceValueMustHaveEditLinkToHaveETag;
    internal static string WriterValidationUtils_StreamReferenceValueEmptyContentType;
    internal static string WriterValidationUtils_EntriesMustHaveNonEmptyId;
    internal static string WriterValidationUtils_MessageWriterSettingsBaseUriMustBeNullOrAbsolute;
    internal static string WriterValidationUtils_EntityReferenceLinkUrlMustNotBeNull;
    internal static string WriterValidationUtils_EntityReferenceLinksLinkMustNotBeNull;
    internal static string WriterValidationUtils_EntryTypeInExpandedLinkNotCompatibleWithNavigationPropertyType;
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionTrueWithEntryContent;
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionFalseWithFeedContent;
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionTrueWithEntryMetadata;
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionFalseWithFeedMetadata;
    internal static string WriterValidationUtils_ExpandedLinkWithFeedPayloadAndEntryMetadata;
    internal static string WriterValidationUtils_ExpandedLinkWithEntryPayloadAndFeedMetadata;
    internal static string WriterValidationUtils_CollectionPropertiesMustNotHaveNullValue;
    internal static string WriterValidationUtils_NonNullablePropertiesMustNotHaveNullValue;
    internal static string WriterValidationUtils_StreamPropertiesMustNotHaveNullValue;
    internal static string WriterValidationUtils_OperationInRequest;
    internal static string WriterValidationUtils_AssociationLinkInRequest;
    internal static string WriterValidationUtils_StreamPropertyInRequest;
    internal static string WriterValidationUtils_MessageWriterSettingsMetadataDocumentUriMustBeNullOrAbsolute;
    internal static string WriterValidationUtils_NavigationLinkMustSpecifyUrl;
    internal static string WriterValidationUtils_NavigationLinkMustSpecifyIsCollection;
    internal static string WriterValidationUtils_MessageWriterSettingsJsonPaddingOnRequestMessage;
    internal static string XmlReaderExtension_InvalidNodeInStringValue;
    internal static string XmlReaderExtension_InvalidRootNode;
    internal static string ODataAtomInputContext_NonEmptyElementWithNullAttribute;
    internal static string ODataMetadataInputContext_ErrorReadingMetadata;
    internal static string ODataMetadataOutputContext_ErrorWritingMetadata;
    internal static string EpmExtensionMethods_InvalidKeepInContentOnType;
    internal static string EpmExtensionMethods_InvalidKeepInContentOnProperty;
    internal static string EpmExtensionMethods_InvalidTargetTextContentKindOnType;
    internal static string EpmExtensionMethods_InvalidTargetTextContentKindOnProperty;
    internal static string EpmExtensionMethods_MissingAttributeOnType;
    internal static string EpmExtensionMethods_MissingAttributeOnProperty;
    internal static string EpmExtensionMethods_AttributeNotAllowedForCustomMappingOnType;
    internal static string EpmExtensionMethods_AttributeNotAllowedForCustomMappingOnProperty;
    internal static string EpmExtensionMethods_AttributeNotAllowedForAtomPubMappingOnType;
    internal static string EpmExtensionMethods_AttributeNotAllowedForAtomPubMappingOnProperty;
    internal static string EpmExtensionMethods_CannotConvertEdmAnnotationValue;
    internal static string ODataAtomReader_MediaLinkEntryMismatch;
    internal static string ODataAtomReader_FeedNavigationLinkForResourceReferenceProperty;
    internal static string ODataAtomReader_ExpandedFeedInEntryNavigationLink;
    internal static string ODataAtomReader_ExpandedEntryInFeedNavigationLink;
    internal static string ODataAtomReader_DeferredEntryInFeedNavigationLink;
    internal static string ODataAtomReader_EntryXmlCustomizationCallbackReturnedSameInstance;
    internal static string ODataAtomReaderUtils_InvalidTypeName;
    internal static string ODataAtomDeserializer_RelativeUriUsedWithoutBaseUriSpecified;
    internal static string ODataAtomCollectionDeserializer_TypeOrNullAttributeNotAllowed;
    internal static string ODataAtomCollectionDeserializer_WrongCollectionItemElementName;
    internal static string ODataAtomCollectionDeserializer_TopLevelCollectionElementWrongNamespace;
    internal static string ODataAtomPropertyAndValueDeserializer_TopLevelPropertyElementWrongNamespace;
    internal static string ODataAtomPropertyAndValueDeserializer_NonEmptyElementWithNullAttribute;
    internal static string ODataAtomPropertyAndValueDeserializer_InvalidCollectionElement;
    internal static string ODataAtomPropertyAndValueDeserializer_NavigationPropertyInProperties;
    internal static string ODataAtomPropertyAndValueSerializer_NullValueNotAllowedForInstanceAnnotation;
    internal static string EdmLibraryExtensions_CollectionItemCanBeOnlyPrimitiveOrComplex;
    internal static string ODataAtomEntryAndFeedDeserializer_ElementExpected;
    internal static string ODataAtomEntryAndFeedDeserializer_EntryElementWrongName;
    internal static string ODataAtomEntryAndFeedDeserializer_ContentWithSourceLinkIsNotEmpty;
    internal static string ODataAtomEntryAndFeedDeserializer_ContentWithWrongType;
    internal static string ODataAtomEntryAndFeedDeserializer_ContentWithInvalidNode;
    internal static string ODataAtomEntryAndFeedDeserializer_FeedElementWrongName;
    internal static string ODataAtomEntryAndFeedDeserializer_UnknownElementInInline;
    internal static string ODataAtomEntryAndFeedDeserializer_MultipleExpansionsInInline;
    internal static string ODataAtomEntryAndFeedDeserializer_MultipleInlineElementsInLink;
    internal static string ODataAtomEntryAndFeedDeserializer_StreamPropertyWithMultipleEditLinks;
    internal static string ODataAtomEntryAndFeedDeserializer_StreamPropertyWithMultipleReadLinks;
    internal static string ODataAtomEntryAndFeedDeserializer_StreamPropertyWithMultipleContentTypes;
    internal static string ODataAtomEntryAndFeedDeserializer_StreamPropertyDuplicatePropertyName;
    internal static string ODataAtomEntryAndFeedDeserializer_StreamPropertyWithEmptyName;
    internal static string ODataAtomEntryAndFeedDeserializer_OperationMissingMetadataAttribute;
    internal static string ODataAtomEntryAndFeedDeserializer_OperationMissingTargetAttribute;
    internal static string ODataAtomEntryAndFeedDeserializer_MultipleLinksInEntry;
    internal static string ODataAtomEntryAndFeedDeserializer_MultipleLinksInFeed;
    internal static string ODataAtomEntryAndFeedDeserializer_DuplicateElements;
    internal static string ODataAtomEntryAndFeedDeserializer_InvalidTypeAttributeOnAssociationLink;
    internal static string ODataAtomEntryAndFeedDeserializer_EncounteredAnnotationInNestedFeed;
    internal static string ODataAtomEntryAndFeedDeserializer_EncounteredDeltaLinkInNestedFeed;
    internal static string ODataAtomEntryAndFeedDeserializer_AnnotationWithNonDotTarget;
    internal static string ODataAtomServiceDocumentDeserializer_ServiceDocumentRootElementWrongNameOrNamespace;
    internal static string ODataAtomServiceDocumentDeserializer_MissingWorkspaceElement;
    internal static string ODataAtomServiceDocumentDeserializer_MultipleWorkspaceElementsFound;
    internal static string ODataAtomServiceDocumentDeserializer_UnexpectedElementInServiceDocument;
    internal static string ODataAtomServiceDocumentDeserializer_UnexpectedElementInWorkspace;
    internal static string ODataAtomServiceDocumentDeserializer_UnexpectedElementInResourceCollection;
    internal static string ODataAtomEntryMetadataDeserializer_InvalidTextConstructKind;
    internal static string ODataAtomMetadataDeserializer_MultipleSingletonMetadataElements;
    internal static string ODataAtomErrorDeserializer_InvalidRootElement;
    internal static string ODataAtomErrorDeserializer_MultipleErrorElementsWithSameName;
    internal static string ODataAtomErrorDeserializer_MultipleInnerErrorElementsWithSameName;
    internal static string ODataAtomEntityReferenceLinkDeserializer_InvalidEntityReferenceLinkStartElement;
    internal static string ODataAtomEntityReferenceLinkDeserializer_InvalidEntityReferenceLinksStartElement;
    internal static string ODataAtomEntityReferenceLinkDeserializer_MultipleEntityReferenceLinksElementsWithSameName;
    internal static string EpmReader_OpenComplexOrCollectionEpmProperty;
    internal static string EpmSyndicationReader_MultipleValuesForNonCollectionProperty;
    internal static string ODataAtomServiceDocumentMetadataDeserializer_InvalidFixedAttributeValue;
    internal static string ODataAtomServiceDocumentMetadataDeserializer_MultipleTitleElementsFound;
    internal static string ODataAtomServiceDocumentMetadataDeserializer_MultipleAcceptElementsFoundInCollection;
    internal static string ODataAtomServiceDocumentMetadataSerializer_ResourceCollectionNameAndTitleMismatch;
    internal static string CollectionWithoutExpectedTypeValidator_InvalidItemTypeKind;
    internal static string CollectionWithoutExpectedTypeValidator_IncompatibleItemTypeKind;
    internal static string CollectionWithoutExpectedTypeValidator_IncompatibleItemTypeName;
    internal static string FeedWithoutExpectedTypeValidator_IncompatibleTypes;
    internal static string MessageStreamWrappingStream_ByteLimitExceeded;
    internal static string MetadataUtils_ResolveTypeName;
    internal static string EdmValueUtils_UnsupportedPrimitiveType;
    internal static string EdmValueUtils_IncorrectPrimitiveTypeKind;
    internal static string EdmValueUtils_IncorrectPrimitiveTypeKindNoTypeName;
    internal static string EdmValueUtils_CannotConvertTypeToClrValue;
    internal static string ODataEdmStructuredValue_UndeclaredProperty;
    internal static string ODataModelAnnotationEvaluator_AmbiguousAnnotationTerm;
    internal static string ODataModelAnnotationEvaluator_AmbiguousAnnotationTermWithQualifier;
    internal static string ODataModelAnnotationEvaluator_AnnotationTermWithInvalidQualifier;
    internal static string ODataModelAnnotationEvaluator_AnnotationTermWithUnsupportedQualifier;
    internal static string ODataMetadataBuilder_MissingEntitySetUri;
    internal static string ODataMetadataBuilder_MissingSegmentForEntitySetUriSuffix;
    internal static string ODataMetadataBuilder_MissingEntityInstanceUri;
    internal static string ODataJsonLightInputContext_EntityTypeMustBeCompatibleWithEntitySetBaseType;
    internal static string ODataJsonLightInputContext_MetadataDocumentUriMissing;
    internal static string ODataJsonLightInputContext_PayloadKindDetectionForRequest;
    internal static string ODataJsonLightInputContext_FunctionImportCannotBeNullForCreateParameterReader;
    internal static string ODataJsonLightInputContext_NoEntitySetForRequest;
    internal static string ODataJsonLightInputContext_FunctionImportOrItemTypeRequiredForCollectionReaderInRequests;
    internal static string ODataJsonLightInputContext_NavigationPropertyRequiredForReadEntityReferenceLinkInRequests;
    internal static string ODataJsonLightInputContext_ModelRequiredForReading;
    internal static string ODataJsonLightInputContext_BaseUriMustBeNonNullAndAbsolute;
    internal static string ODataJsonLightInputContext_ItemTypeRequiredForCollectionReaderInRequests;
    internal static string ODataJsonLightInputContext_NoItemTypeSpecified;
    internal static string ODataJsonLightDeserializer_MetadataLinkNotFoundAsFirstProperty;
    internal static string ODataJsonLightDeserializer_RequiredPropertyNotFound;
    internal static string ODataJsonLightDeserializer_OnlyODataTypeAnnotationCanTargetInstanceAnnotation;
    internal static string ODataJsonLightDeserializer_AnnotationTargetingInstanceAnnotationWithoutValue;
    internal static string ODataJsonLightWriter_EntityReferenceLinkAfterFeedInRequest;
    internal static string ODataJsonLightWriter_InstanceAnnotationNotSupportedOnExpandedFeed;
    internal static string ODataJsonLightOutputContext_MetadataDocumentUriMissing;
    internal static string ODataJsonLightPropertyAndValueSerializer_NoExpectedTypeOrTypeNameSpecifiedForComplexValueRequest;
    internal static string ODataJsonLightPropertyAndValueSerializer_NoExpectedTypeOrTypeNameSpecifiedForCollectionValueInRequest;
    internal static string ODataJsonLightServiceDocumentSerializer_ResourceCollectionMustSpecifyName;
    internal static string ODataFeedAndEntryTypeContext_MetadataOrSerializationInfoMissing;
    internal static string ODataFeedAndEntryTypeContext_ODataEntryTypeNameMissing;
    internal static string ODataJsonLightMetadataUriBuilder_ValidateDerivedType;
    internal static string ODataJsonLightMetadataUriBuilder_TypeNameMissingForTopLevelCollectionWhenWritingResponsePayload;
    internal static string ODataJsonLightMetadataUriBuilder_EntitySetOrNavigationPropertyMissingForTopLevelEntityReferenceLinkResponse;
    internal static string ODataJsonLightMetadataUriBuilder_EntitySetOrNavigationPropertyMissingForTopLevelEntityReferenceLinksResponse;
    internal static string ODataJsonLightPropertyAndValueDeserializer_UnexpectedAnnotationProperties;
    internal static string ODataJsonLightPropertyAndValueDeserializer_UnexpectedPropertyAnnotation;
    internal static string ODataJsonLightPropertyAndValueDeserializer_UnexpectedODataPropertyAnnotation;
    internal static string ODataJsonLightPropertyAndValueDeserializer_UnexpectedProperty;
    internal static string ODataJsonLightPropertyAndValueDeserializer_InvalidTopLevelPropertyPayload;
    internal static string ODataJsonLightPropertyAndValueDeserializer_InvalidTopLevelPropertyName;
    internal static string ODataJsonLightPropertyAndValueDeserializer_InvalidTypeName;
    internal static string ODataJsonLightPropertyAndValueDeserializer_InvalidPrimitiveTypeName;
    internal static string ODataJsonLightPropertyAndValueDeserializer_TopLevelPropertyAnnotationWithoutProperty;
    internal static string ODataJsonLightPropertyAndValueDeserializer_ComplexValuePropertyAnnotationWithoutProperty;
    internal static string ODataJsonLightPropertyAndValueDeserializer_ComplexValueWithPropertyTypeAnnotation;
    internal static string ODataJsonLightPropertyAndValueDeserializer_ComplexTypeAnnotationNotFirst;
    internal static string ODataJsonLightPropertyAndValueDeserializer_UnexpectedDataPropertyAnnotation;
    internal static string ODataJsonLightPropertyAndValueDeserializer_TypePropertyAfterValueProperty;
    internal static string ODataJsonLightPropertyAndValueDeserializer_ODataTypeAnnotationInPrimitiveValue;
    internal static string ODataJsonLightPropertyAndValueDeserializer_TopLevelPropertyWithPrimitiveNullValue;
    internal static string ODataJsonLightPropertyAndValueDeserializer_UnexpectedMetadataReferenceProperty;
    internal static string ODataJsonLightPropertyAndValueDeserializer_NoPropertyAndAnnotationAllowedInNullPayload;
    internal static string ODataJsonLightPropertyAndValueDeserializer_EdmNullInMetadataUriWithoutNullValueInPayload;
    internal static string ODataJsonReaderCoreUtils_CannotReadSpatialPropertyValue;
    internal static string ODataJsonLightReaderUtils_AnnotationWithNullValue;
    internal static string ODataJsonLightReaderUtils_InvalidValueForODataNullAnnotation;
    internal static string JsonLightInstanceAnnotationWriter_DuplicateAnnotationNameInCollection;
    internal static string ODataJsonLightMetadataUriParser_ServiceDocumentUriMustNotHaveFragment;
    internal static string ODataJsonLightMetadataUriParser_NullMetadataDocumentUri;
    internal static string ODataJsonLightMetadataUriParser_MetadataUriDoesNotMatchExpectedPayloadKind;
    internal static string ODataJsonLightMetadataUriParser_InvalidEntitySetNameOrTypeName;
    internal static string ODataJsonLightMetadataUriParser_InvalidPropertyName;
    internal static string ODataJsonLightMetadataUriParser_InvalidEntityWithTypeCastUriSuffix;
    internal static string ODataJsonLightMetadataUriParser_InvalidEntityTypeInTypeCast;
    internal static string ODataJsonLightMetadataUriParser_IncompatibleEntityTypeInTypeCast;
    internal static string ODataJsonLightMetadataUriParser_InvalidEntityReferenceLinkUriSuffix;
    internal static string ODataJsonLightMetadataUriParser_InvalidPropertyForEntityReferenceLinkUri;
    internal static string ODataJsonLightMetadataUriParser_InvalidSingletonNavPropertyForEntityReferenceLinkUri;
    internal static string ODataJsonLightMetadataUriParser_FragmentWithInvalidNumberOfParts;
    internal static string ODataJsonLightMetadataUriParser_InvalidEntitySetOrFunctionImportName;
    internal static string ODataJsonLightMetadataUriParser_InvalidPayloadKindWithSelectQueryOption;
    internal static string ODataJsonLightMetadataUriParser_NoModel;
    internal static string ODataJsonLightMetadataUriParser_ModelResolverReturnedNull;
    internal static string ODataJsonLightMetadataUriParser_InvalidAssociationLink;
    internal static string ODataJsonLightMetadataUriParser_InvalidEntitySetName;
    internal static string ODataJsonLightEntryAndFeedDeserializer_EntryTypeAnnotationNotFirst;
    internal static string ODataJsonLightEntryAndFeedDeserializer_EntryInstanceAnnotationPrecededByProperty;
    internal static string ODataJsonLightEntryAndFeedDeserializer_CannotReadFeedContentStart;
    internal static string ODataJsonLightEntryAndFeedDeserializer_ExpectedFeedPropertyNotFound;
    internal static string ODataJsonLightEntryAndFeedDeserializer_InvalidNodeTypeForItemsInFeed;
    internal static string ODataJsonLightEntryAndFeedDeserializer_InvalidPropertyAnnotationInTopLevelFeed;
    internal static string ODataJsonLightEntryAndFeedDeserializer_InvalidPropertyInTopLevelFeed;
    internal static string ODataJsonLightEntryAndFeedDeserializer_FeedPropertyAnnotationForTopLevelFeed;
    internal static string ODataJsonLightEntryAndFeedDeserializer_PropertyWithoutValueWithWrongType;
    internal static string ODataJsonLightEntryAndFeedDeserializer_OpenPropertyWithoutValue;
    internal static string ODataJsonLightEntryAndFeedDeserializer_StreamPropertyInRequest;
    internal static string ODataJsonLightEntryAndFeedDeserializer_UnexpectedStreamPropertyAnnotation;
    internal static string ODataJsonLightEntryAndFeedDeserializer_StreamPropertyWithValue;
    internal static string ODataJsonLightEntryAndFeedDeserializer_UnexpectedDeferredLinkPropertyAnnotation;
    internal static string ODataJsonLightEntryAndFeedDeserializer_CannotReadSingletonNavigationPropertyValue;
    internal static string ODataJsonLightEntryAndFeedDeserializer_CannotReadCollectionNavigationPropertyValue;
    internal static string ODataJsonLightEntryAndFeedDeserializer_CannotReadNavigationPropertyValue;
    internal static string ODataJsonLightEntryAndFeedDeserializer_UnexpectedExpandedSingletonNavigationLinkPropertyAnnotation;
    internal static string ODataJsonLightEntryAndFeedDeserializer_UnexpectedExpandedCollectionNavigationLinkPropertyAnnotation;
    internal static string ODataJsonLightEntryAndFeedDeserializer_DuplicateExpandedFeedAnnotation;
    internal static string ODataJsonLightEntryAndFeedDeserializer_UnexpectedPropertyAnnotationAfterExpandedFeed;
    internal static string ODataJsonLightEntryAndFeedDeserializer_AnnotationGroupWithoutName;
    internal static string ODataJsonLightEntryAndFeedDeserializer_AnnotationGroupMemberWithoutName;
    internal static string ODataJsonLightEntryAndFeedDeserializer_AnnotationGroupMemberWithInvalidValue;
    internal static string ODataJsonLightEntryAndFeedDeserializer_AnnotationGroupInRequest;
    internal static string ODataJsonLightEntryAndFeedDeserializer_UnexpectedNavigationLinkInRequestPropertyAnnotation;
    internal static string ODataJsonLightEntryAndFeedDeserializer_ArrayValueForSingletonBindPropertyAnnotation;
    internal static string ODataJsonLightEntryAndFeedDeserializer_StringValueForCollectionBindPropertyAnnotation;
    internal static string ODataJsonLightEntryAndFeedDeserializer_EmptyBindArray;
    internal static string ODataJsonLightEntryAndFeedDeserializer_NavigationPropertyWithoutValueAndEntityReferenceLink;
    internal static string ODataJsonLightEntryAndFeedDeserializer_SingletonNavigationPropertyWithBindingAndValue;
    internal static string ODataJsonLightEntryAndFeedDeserializer_PropertyWithoutValueWithUnknownType;
    internal static string ODataJsonLightEntryAndFeedDeserializer_FunctionImportIsNotActionOrFunction;
    internal static string ODataJsonLightEntryAndFeedDeserializer_MultipleOptionalPropertiesInOperation;
    internal static string ODataJsonLightEntryAndFeedDeserializer_MultipleTargetPropertiesInOperation;
    internal static string ODataJsonLightEntryAndFeedDeserializer_OperationMissingTargetProperty;
    internal static string ODataJsonLightEntryAndFeedDeserializer_MetadataReferencePropertyInRequest;
    internal static string ODataJsonLightEntryAndFeedDeserializer_EncounteredAnnotationGroupInUnexpectedPosition;
    internal static string ODataJsonLightEntryAndFeedDeserializer_EntryTypeAlreadySpecified;
    internal static string ODataJsonLightValidationUtils_OperationPropertyCannotBeNull;
    internal static string ODataJsonLightValidationUtils_OpenMetadataReferencePropertyNotSupported;
    internal static string ODataJsonLightDeserializer_RelativeUriUsedWithouODataMetadataAnnotation;
    internal static string ODataJsonLightEntryMetadataContext_MetadataAnnotationMustBeInPayload;
    internal static string ODataJsonLightCollectionDeserializer_ExpectedCollectionPropertyNotFound;
    internal static string ODataJsonLightCollectionDeserializer_CannotReadCollectionContentStart;
    internal static string ODataJsonLightCollectionDeserializer_CannotReadCollectionEnd;
    internal static string ODataJsonLightCollectionDeserializer_InvalidCollectionTypeName;
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_EntityReferenceLinkMustBeObjectValue;
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_PropertyAnnotationForEntityReferenceLink;
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_InvalidAnnotationInEntityReferenceLink;
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_InvalidPropertyInEntityReferenceLink;
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_MissingEntityReferenceLinkProperty;
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_MultipleUriPropertiesInEntityReferenceLink;
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_EntityReferenceLinkUrlCannotBeNull;
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_PropertyAnnotationForEntityReferenceLinks;
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_InvalidEntityReferenceLinksPropertyFound;
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_InvalidPropertyAnnotationInEntityReferenceLinks;
    internal static string ODataJsonLightEntityReferenceLinkDeserializer_ExpectedEntityReferenceLinksPropertyNotFound;
    internal static string ODataJsonOperationsDeserializerUtils_OperationPropertyCannotBeNull;
    internal static string ODataJsonOperationsDeserializerUtils_OperationsPropertyMustHaveObjectValue;
    internal static string ODataJsonOperationsDeserializerUtils_RepeatMetadataValue;
    internal static string ODataJsonOperationsDeserializerUtils_MetadataMustHaveArrayValue;
    internal static string ODataJsonOperationsDeserializerUtils_OperationMetadataArrayExpectedAnObject;
    internal static string ODataJsonOperationsDeserializerUtils_MultipleOptionalPropertiesInOperation;
    internal static string ODataJsonOperationsDeserializerUtils_MultipleTargetPropertiesInOperation;
    internal static string ODataJsonOperationsDeserializerUtils_OperationMissingTargetProperty;
    internal static string ODataJsonLightServiceDocumentDeserializer_DuplicatePropertiesInServiceDocument;
    internal static string ODataJsonLightServiceDocumentDeserializer_DuplicatePropertiesInResourceCollection;
    internal static string ODataJsonLightServiceDocumentDeserializer_MissingValuePropertyInServiceDocument;
    internal static string ODataJsonLightServiceDocumentDeserializer_MissingRequiredPropertyInResourceCollection;
    internal static string ODataJsonLightServiceDocumentDeserializer_PropertyAnnotationInServiceDocument;
    internal static string ODataJsonLightServiceDocumentDeserializer_InstanceAnnotationInServiceDocument;
    internal static string ODataJsonLightServiceDocumentDeserializer_PropertyAnnotationInResourceCollection;
    internal static string ODataJsonLightServiceDocumentDeserializer_InstanceAnnotationInResourceCollection;
    internal static string ODataJsonLightServiceDocumentDeserializer_UnexpectedPropertyInResourceCollection;
    internal static string ODataJsonLightServiceDocumentDeserializer_UnexpectedPropertyInServiceDocument;
    internal static string ODataJsonLightServiceDocumentDeserializer_PropertyAnnotationWithoutProperty;
    internal static string ODataJsonLightParameterDeserializer_PropertyAnnotationForParameters;
    internal static string ODataJsonLightParameterDeserializer_PropertyAnnotationWithoutPropertyForParameters;
    internal static string ODataJsonLightParameterDeserializer_UnsupportedPrimitiveParameterType;
    internal static string ODataJsonLightParameterDeserializer_NullCollectionExpected;
    internal static string ODataJsonLightParameterDeserializer_UnsupportedParameterTypeKind;
    internal static string SelectedPropertiesNode_StarSegmentNotLastSegment;
    internal static string SelectedPropertiesNode_StarSegmentAfterTypeSegment;
    internal static string ODataJsonLightErrorDeserializer_PropertyAnnotationNotAllowedInErrorPayload;
    internal static string ODataJsonLightErrorDeserializer_InstanceAnnotationNotAllowedInErrorPayload;
    internal static string ODataJsonLightErrorDeserializer_PropertyAnnotationWithoutPropertyForError;
    internal static string ODataJsonLightErrorDeserializer_TopLevelErrorValueWithInvalidProperty;
    internal static string ODataConventionalUriBuilder_EntityTypeWithNoKeyProperties;
    internal static string ODataConventionalUriBuilder_NullKeyValue;
    internal static string ODataEntryMetadataContext_EntityTypeWithNoKeyProperties;
    internal static string ODataEntryMetadataContext_NullKeyValue;
    internal static string ODataEntryMetadataContext_KeyOrETagValuesMustBePrimitiveValues;
    internal static string EdmValueUtils_NonPrimitiveValue;
    internal static string EdmValueUtils_PropertyDoesntExist;
    internal static string JsonLightAnnotationGroupDeserializer_AnnotationGroupDeclarationWithoutName;
    internal static string JsonLightAnnotationGroupDeserializer_InvalidAnnotationFoundInsideAnnotationGroup;
    internal static string JsonLightAnnotationGroupDeserializer_InvalidAnnotationFoundInsideNamedAnnotationGroup;
    internal static string JsonLightAnnotationGroupDeserializer_EncounteredMultipleNameProperties;
    internal static string JsonLightAnnotationGroupDeserializer_UndefinedAnnotationGroupReference;
    internal static string JsonLightAnnotationGroupDeserializer_MultipleAnnotationGroupsWithSameName;
    internal static string ODataPrimitiveValue_CannotCreateODataPrimitiveValueFromNull;
    internal static string ODataPrimitiveValue_CannotCreateODataPrimitiveValueFromUnsupportedValueType;
    internal static string ODataAnnotatable_InstanceAnnotationsOnlyOnODataError;
    internal static string ODataInstanceAnnotation_NeedPeriodInName;
    internal static string ODataInstanceAnnotation_ReservedNamesNotAllowed;
    internal static string ODataInstanceAnnotation_BadTermName;
    internal static string ODataInstanceAnnotation_ValueCannotBeODataStreamReferenceValue;
    internal static string ODataJsonLightValueSerializer_MissingTypeNameOnComplex;
    internal static string ODataJsonLightValueSerializer_MissingTypeNameOnCollection;
    internal static string AtomInstanceAnnotation_MissingTermAttributeOnAnnotationElement;
    internal static string AtomInstanceAnnotation_AttributeValueNotationUsedWithIncompatibleType;
    internal static string AtomInstanceAnnotation_AttributeValueNotationUsedOnNonEmptyElement;
    internal static string AtomInstanceAnnotation_MultipleAttributeValueNotationAttributes;
    internal static string AnnotationFilterPattern_InvalidPatternMissingDot;
    internal static string AnnotationFilterPattern_InvalidPatternEmptySegment;
    internal static string AnnotationFilterPattern_InvalidPatternWildCardInSegment;
    internal static string AnnotationFilterPattern_InvalidPatternWildCardMustBeInLastSegment;
    internal static string JsonFullMetadataLevel_MissingEntitySet;
    internal static string ODataQueryUtils_DidNotFindServiceOperation;
    internal static string ODataQueryUtils_FoundMultipleServiceOperations;
    internal static string ODataQueryUtils_CannotSetMetadataAnnotationOnPrimitiveType;
    internal static string ODataQueryUtils_DidNotFindEntitySet;
    internal static string BinaryOperatorQueryNode_InvalidOperandType;
    internal static string BinaryOperatorQueryNode_OperandsMustHaveSameTypes;
    internal static string SyntacticTree_UriMustBeAbsolute;
    internal static string SyntacticTree_MaxDepthInvalid;
    internal static string SyntacticTree_InvalidSkipQueryOptionValue;
    internal static string SyntacticTree_InvalidTopQueryOptionValue;
    internal static string SyntacticTree_InvalidInlineCountQueryOptionValue;
    internal static string QueryOptionUtils_QueryParameterMustBeSpecifiedOnce;
    internal static string UriBuilder_NotSupportedClrLiteral;
    internal static string UriBuilder_NotSupportedQueryToken;
    internal static string UriQueryExpressionParser_TooDeep;
    internal static string UriQueryExpressionParser_ExpressionExpected;
    internal static string UriQueryExpressionParser_OpenParenExpected;
    internal static string UriQueryExpressionParser_CloseParenOrCommaExpected;
    internal static string UriQueryExpressionParser_CloseParenOrOperatorExpected;
    internal static string UriQueryExpressionParser_RepeatedVisitor;
    internal static string UriQueryExpressionParser_CannotCreateStarTokenFromNonStar;
    internal static string UriQueryExpressionParser_RangeVariableAlreadyDeclared;
    internal static string UriQueryPathParser_RequestUriDoesNotHaveTheCorrectBaseUri;
    internal static string UriQueryPathParser_SyntaxError;
    internal static string UriQueryPathParser_TooManySegments;
    internal static string UriQueryPathParser_InvalidKeyValueLiteral;
    internal static string PropertyInfoTypeAnnotation_CannotFindProperty;
    internal static string SelectionItemBinder_NonNavigationPathToken;
    internal static string SelectTreeNormalizer_NonPathProperty;
    internal static string ExpandItem_NonEntityNavProp;
    internal static string MetadataBinder_UnsupportedQueryTokenKind;
    internal static string MetadataBinder_UnsupportedExtensionToken;
    internal static string MetadataBinder_RootSegmentResourceNotFound;
    internal static string MetadataBinder_KeyValueApplicableOnlyToEntityType;
    internal static string MetadataBinder_PropertyNotDeclared;
    internal static string MetadataBinder_PropertyNotDeclaredOrNotKeyInKeyValue;
    internal static string MetadataBinder_UnnamedKeyValueOnTypeWithMultipleKeyProperties;
    internal static string MetadataBinder_DuplicitKeyPropertyInKeyValues;
    internal static string MetadataBinder_NotAllKeyPropertiesSpecifiedInKeyValues;
    internal static string MetadataBinder_CannotConvertToType;
    internal static string MetadataBinder_NonQueryableServiceOperationWithKeyLookup;
    internal static string MetadataBinder_QueryServiceOperationOfNonEntityType;
    internal static string MetadataBinder_ServiceOperationParameterMissing;
    internal static string MetadataBinder_ServiceOperationParameterInvalidType;
    internal static string MetadataBinder_FilterExpressionNotSingleValue;
    internal static string MetadataBinder_OrderByExpressionNotSingleValue;
    internal static string MetadataBinder_PropertyAccessWithoutParentParameter;
    internal static string MetadataBinder_MultiValuePropertyNotSupportedInExpression;
    internal static string MetadataBinder_BinaryOperatorOperandNotSingleValue;
    internal static string MetadataBinder_UnaryOperatorOperandNotSingleValue;
    internal static string MetadataBinder_PropertyAccessSourceNotSingleValue;
    internal static string MetadataBinder_IncompatibleOperandsError;
    internal static string MetadataBinder_IncompatibleOperandError;
    internal static string MetadataBinder_UnknownFunction;
    internal static string MetadataBinder_FunctionArgumentNotSingleValue;
    internal static string MetadataBinder_NoApplicableFunctionFound;
    internal static string MetadataBinder_BuiltInFunctionSignatureWithoutAReturnType;
    internal static string MetadataBinder_UnsupportedSystemQueryOption;
    internal static string MetadataBinder_BoundNodeCannotBeNull;
    internal static string MetadataBinder_TopRequiresNonNegativeInteger;
    internal static string MetadataBinder_SkipRequiresNonNegativeInteger;
    internal static string MetadataBinder_ServiceOperationWithoutResultKind;
    internal static string MetadataBinder_HierarchyNotFollowed;
    internal static string MetadataBinder_MustBeCalledOnRoot;
    internal static string MetadataBinder_NoTypeSupported;
    internal static string MetadataBinder_LambdaParentMustBeCollection;
    internal static string MetadataBinder_ParameterNotInScope;
    internal static string MetadataBinder_NullNavigationProperty;
    internal static string MetadataBinder_NavigationPropertyNotFollowingSingleEntityType;
    internal static string MetadataBinder_AnyAllExpressionNotSingleValue;
    internal static string MetadataBinder_CastOrIsOfExpressionWithWrongNumberOfOperands;
    internal static string MetadataBinder_CastOrIsOfFunctionWithoutATypeArgument;
    internal static string MetadataBinder_CastOrIsOfCollectionsNotSupported;
    internal static string MetadataBinder_SpatialLengthFunctionWithInvalidArgs;
    internal static string MetadataBinder_SpatialLengthFunctionWithoutASingleValueArg;
    internal static string MetadataBinder_SpatialLengthFunctionWithOutLineStringArg;
    internal static string MetadataBinder_SpatialIntersectsFunctionWithInvalidArgs;
    internal static string MetadataBinder_SpatialIntersectsFunctionWithoutASingleValueArg;
    internal static string MetadataBinder_SpatialIntersectsFunctionWithInvalidArgTypes;
    internal static string MetadataBinder_NonValidTypeArgument;
    internal static string MetadataBinder_OperatorNotSupportedInThisVersion;
    internal static string MetadataBinder_KeywordNotSupportedInThisRelease;
    internal static string MetadataBinder_CollectionOpenPropertiesNotSupportedInThisRelease;
    internal static string MetadataBinder_IllegalSegmentType;
    internal static string MetadataBinder_QueryOptionNotApplicable;
    internal static string FunctionCallBinder_CannotFindASuitableOverload;
    internal static string FunctionCallBinder_NonSingleValueParent;
    internal static string FunctionCallBinder_FoundInvalidFunctionImports;
    internal static string FunctionCallBinder_BuiltInFunctionMustHaveHaveNullParent;
    internal static string FunctionCallBinder_CallingFunctionOnOpenProperty;
    internal static string FunctionCallParser_DuplicateParameterName;
    internal static string ODataUriParser_InvalidInlineCount;
    internal static string CastBinder_ChildTypeIsNotEntity;
    internal static string BatchReferenceSegment_InvalidContentID;
    internal static string SelectExpandBinder_UnknownPropertyType;
    internal static string SelectExpandBinder_CantFindProperty;
    internal static string SelectionItemBinder_NoExpandForSelectedProperty;
    internal static string SelectionItemBinder_NonPathSelectToken;
    internal static string SelectionItemBinder_NonEntityTypeSegment;
    internal static string SelectExpandPathBinder_FollowNonTypeSegment;
    internal static string SelectPropertyVisitor_SystemTokenInSelect;
    internal static string SelectPropertyVisitor_InvalidSegmentInSelectPath;
    internal static string SelectPropertyVisitor_DisparateTypeSegmentsInSelectExpand;
    internal static string SelectExpandClause_CannotDeleteFromAllSelection;
    internal static string SegmentFactory_LinksSegmentNotFollowedByNavProp;
    internal static string ExpandItemBinder_TraversingANonNormalizedTree;
    internal static string ExpandItemBinder_CannotFindType;
    internal static string ExpandItemBinder_PropertyIsNotANavigationProperty;
    internal static string ExpandItemBinder_TypeSegmentNotFollowedByPath;
    internal static string ExpandItemBinder_PathTooDeep;
    internal static string Nodes_CollectionNavigationNode_MustHaveSingleMultiplicity;
    internal static string Nodes_NonentityParameterQueryNodeWithEntityType;
    internal static string Nodes_EntityCollectionServiceOperationRequiresEntityReturnType;
    internal static string Nodes_CollectionNavigationNode_MustHaveManyMultiplicity;
    internal static string Nodes_PropertyAccessShouldBeNonEntityProperty;
    internal static string Nodes_PropertyAccessTypeShouldNotBeCollection;
    internal static string Nodes_PropertyAccessTypeMustBeCollection;
    internal static string Nodes_NonStaticEntitySetExpressionsAreNotSupportedInThisRelease;
    internal static string Nodes_CollectionFunctionCallNode_ItemTypeMustBePrimitiveOrComplex;
    internal static string Nodes_EntityCollectionFunctionCallNode_ItemTypeMustBeAnEntity;
    internal static string ExpandTreeNormalizer_CallAddTermsOnUnexpandedTerms;
    internal static string ExpandTreeNormalizer_NonPathInPropertyChain;
    internal static string UriSelectParser_TermIsNotValid;
    internal static string UriSelectParser_FunctionsAreNotAllowed;
    internal static string UriSelectParser_InvalidTopOption;
    internal static string UriSelectParser_InvalidSkipOption;
    internal static string UriSelectParser_SystemTokenInSelectExpand;
    internal static string UriParser_NeedServiceRootForThisOverload;
    internal static string UriParser_UriMustBeAbsolute;
    internal static string UriParser_NegativeLimit;
    internal static string UriParser_ExpandCountExceeded;
    internal static string UriParser_ExpandDepthExceeded;
    internal static string PathParser_ServiceOperationWithoutResultKindAttribute;
    internal static string PathParser_FunctionsAreNotSupported;
    internal static string PathParser_ServiceOperationsWithSameName;
    internal static string PathParser_LinksNotSupported;
    internal static string PathParser_CannotUseValueOnCollection;
    internal static string PathParser_TypeMustBeRelatedToSet;
    internal static string ODataFeed_MustNotContainBothNextPageLinkAndDeltaLink;
    internal static string ODataExpandPath_OnlyLastSegmentMustBeNavigationProperty;
    internal static string ODataExpandPath_InvalidExpandPathSegment;
    internal static string ODataSelectPath_CannotEndInTypeSegment;
    internal static string ODataSelectPath_InvalidSelectPathSegmentType;
    internal static string ODataSelectPath_OperationSegmentCanOnlyBeLastSegment;
    internal static string ODataSelectPath_NavPropSegmentCanOnlyBeLastSegment;
    internal static string RequestUriProcessor_EntitySetNotSpecified;
    internal static string RequestUriProcessor_TargetEntitySetNotFound;
    internal static string RequestUriProcessor_FoundInvalidFunctionImport;
    internal static string OperationSegment_ReturnTypeForMultipleOverloads;
    internal static string OperationSegment_CannotReturnNull;
    internal static string SingleValueFunctionCallNode_FunctionImportsWithLegacyConstructor;
    internal static string SingleEntityFunctionCallNode_CallFunctionImportsUsingLegacyConstructor;
    internal static string SegmentArgumentParser_TryConvertValuesForNamedValues;
    internal static string SegmentArgumentParser_TryConvertValuesToNonPrimitive;
    internal static string SegmentArgumentParser_TryConvertValuesForPositionalValues;
    internal static string FunctionOverloadResolver_NoSingleMatchFound;
    internal static string FunctionOverloadResolver_MultipleActionOverloads;
    internal static string RequestUriProcessor_EmptySegmentInRequestUrl;
    internal static string RequestUriProcessor_SyntaxError;
    internal static string RequestUriProcessor_CannotSpecifyAfterPostLinkSegment;
    internal static string RequestUriProcessor_CountOnRoot;
    internal static string RequestUriProcessor_MustBeLeafSegment;
    internal static string RequestUriProcessor_LinkSegmentMustBeFollowedByEntitySegment;
    internal static string RequestUriProcessor_MissingSegmentAfterLink;
    internal static string RequestUriProcessor_CountNotSupported;
    internal static string RequestUriProcessor_CannotQuerySingletons;
    internal static string RequestUriProcessor_CannotQueryCollections;
    internal static string RequestUriProcessor_SegmentDoesNotSupportKeyPredicates;
    internal static string RequestUriProcessor_ValueSegmentAfterScalarPropertySegment;
    internal static string RequestUriProcessor_InvalidTypeIdentifier_UnrelatedType;
    internal static string ResourceType_ComplexTypeCannotBeOpen;
    internal static string BadRequest_ValuesCannotBeReturnedForSpatialTypes;
    internal static string OpenNavigationPropertiesNotSupportedOnOpenTypes;
    internal static string BadRequest_ResourceCanBeCrossReferencedOnlyForBindOperation;
    internal static string DataServiceConfiguration_ResponseVersionIsBiggerThanProtocolVersion;
    internal static string BadRequest_KeyCountMismatch;
    internal static string RequestUriProcessor_KeysMustBeNamed;
    internal static string RequestUriProcessor_ResourceNotFound;
    internal static string RequestUriProcessor_BatchedActionOnEntityCreatedInSameChangeset;
    internal static string RequestUriProcessor_IEnumerableServiceOperationsCannotBeFurtherComposed;
    internal static string RequestUriProcessor_Forbidden;
    internal static string RequestUriProcessor_OperationSegmentBoundToANonEntityType;
    internal static string General_InternalError;
    internal static string ExceptionUtils_CheckIntegerNotNegative;
    internal static string ExceptionUtils_CheckIntegerPositive;
    internal static string ExceptionUtils_CheckLongPositive;
    internal static string ExceptionUtils_ArgumentStringNullOrEmpty;
    internal static string ExpressionToken_IdentifierExpected;
    internal static string ExpressionLexer_UnterminatedStringLiteral;
    internal static string ExpressionLexer_InvalidCharacter;
    internal static string ExpressionLexer_SyntaxError;
    internal static string ExpressionLexer_UnterminatedLiteral;
    internal static string ExpressionLexer_DigitExpected;
    internal static string ExpressionLexer_UnbalancedBracketExpression;
    internal static string UriQueryExpressionParser_UnrecognizedLiteral;
    internal static string JsonReader_UnexpectedComma;
    internal static string JsonReader_MultipleTopLevelValues;
    internal static string JsonReader_EndOfInputWithOpenScope;
    internal static string JsonReader_UnexpectedToken;
    internal static string JsonReader_UnrecognizedToken;
    internal static string JsonReader_MissingColon;
    internal static string JsonReader_UnrecognizedEscapeSequence;
    internal static string JsonReader_UnexpectedEndOfString;
    internal static string JsonReader_InvalidNumberFormat;
    internal static string JsonReader_MissingComma;
    internal static string JsonReader_InvalidPropertyNameOrUnexpectedComma;
    internal static string JsonReaderExtensions_UnexpectedNodeDetected;
    internal static string JsonReaderExtensions_CannotReadPropertyValueAsString;
    internal static string JsonReaderExtensions_CannotReadValueAsString;
    internal static string JsonReaderExtensions_CannotReadValueAsDouble;
    private static TextRes loader;
    private ResourceManager resources;
    private static CultureInfo Culture { get; }
    public static ResourceManager Resources { get; }
    private static TextRes();
    private static TextRes GetLoader();
    private static CultureInfo get_Culture();
    public static ResourceManager get_Resources();
    public static string GetString(string name, Object[] args);
    public static string GetString(string name);
    public static string GetString(string name, Boolean& usedFallback);
}
internal class Microsoft.Data.OData.TypeNameOracle : object {
    internal static IEdmType ResolveAndValidateTypeName(IEdmModel model, string typeName, EdmTypeKind expectedTypeKind);
    internal static IEdmTypeReference ResolveAndValidateTypeNameForValue(IEdmModel model, IEdmTypeReference typeReferenceFromMetadata, ODataValue value, bool isOpenProperty);
    protected static string GetTypeNameFromValue(object value);
    private static IEdmTypeReference ResolveAndValidateTypeFromNameAndMetadata(IEdmModel model, IEdmTypeReference typeReferenceFromMetadata, string typeName, EdmTypeKind typeKindFromValue, bool isOpenPropertyType);
    private static IEdmTypeReference ValidateMetadataType(IEdmTypeReference typeReferenceFromMetadata, IEdmTypeReference typeReferenceFromValue);
}
internal static class Microsoft.Data.OData.TypeUtils : object {
    internal static bool IsNullableType(Type type);
    internal static Type GetNonNullableType(Type type);
    internal static Type GetNullableType(Type type);
    internal static bool TypeAllowsNull(Type type);
    internal static bool AreTypesEquivalent(Type typeA, Type typeB);
}
internal static class Microsoft.Data.OData.UriUtils : object {
    private static Uri ExampleMetadataAbsoluteUri;
    private static UriUtils();
    internal static Uri UriToAbsoluteUri(Uri baseUri, Uri relativeUri);
    internal static Uri EnsureEscapedRelativeUri(Uri uri);
    internal static string EnsureEscapedFragment(string fragmentString);
}
internal static class Microsoft.Data.OData.UriUtilsCommon : object {
    internal static string UriToString(Uri uri);
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.Utils : object {
    internal static bool TryDispose(object o);
    [ExtensionAttribute]
internal static Task FlushAsync(Stream stream);
    [ExtensionAttribute]
internal static KeyValuePair`2[] StableSort(T[] array, Comparison`1<T> comparison);
}
internal static class Microsoft.Data.OData.ValidationUtils : object {
    private static int MaxBoundaryLength;
    internal static Char[] InvalidCharactersInPropertyNames;
    [CompilerGeneratedAttribute]
private static Func`2<char, string> CS$<>9__CachedAnonymousMethodDelegate1;
    private static ValidationUtils();
    internal static void ValidateOpenPropertyValue(string propertyName, object value, ODataUndeclaredPropertyBehaviorKinds undeclaredPropertyBehaviorKinds);
    internal static void ValidateValueTypeKind(EdmTypeKind typeKind, string typeName);
    internal static string ValidateCollectionTypeName(string collectionTypeName);
    internal static void ValidateEntityTypeIsAssignable(IEdmEntityTypeReference expectedEntityTypeReference, IEdmEntityTypeReference payloadEntityTypeReference);
    internal static IEdmCollectionTypeReference ValidateCollectionType(IEdmTypeReference typeReference);
    internal static void ValidateCollectionItem(object item, bool isStreamable);
    internal static void ValidateNullCollectionItem(IEdmTypeReference expectedItemType, ODataWriterBehavior writerBehavior);
    internal static void ValidateStreamReferenceProperty(ODataProperty streamProperty, IEdmProperty edmProperty);
    internal static void ValidateAssociationLinkNotNull(ODataAssociationLink associationLink);
    internal static void ValidateAssociationLinkName(string associationLinkName);
    internal static void ValidateAssociationLink(ODataAssociationLink associationLink);
    internal static void IncreaseAndValidateRecursionDepth(Int32& recursionDepth, int maxDepth);
    internal static void ValidateOperationNotNull(ODataOperation operation, bool isAction);
    internal static void ValidateOperationMetadataNotNull(ODataOperation operation);
    internal static void ValidateOperationTargetNotNull(ODataOperation operation);
    internal static void ValidateEntryMetadataResource(ODataEntry entry, IEdmEntityType entityType, IEdmModel model, bool validateMediaResource);
    internal static void ValidateIsExpectedPrimitiveType(object value, IEdmTypeReference expectedTypeReference);
    internal static void ValidateIsExpectedPrimitiveType(object value, IEdmPrimitiveTypeReference valuePrimitiveTypeReference, IEdmTypeReference expectedTypeReference);
    internal static void ValidateMetadataPrimitiveType(IEdmTypeReference expectedTypeReference, IEdmTypeReference typeReferenceFromValue);
    internal static void ValidateResourceCollectionInfo(ODataResourceCollectionInfo collectionInfo);
    internal static void ValidateResourceCollectionInfoUrl(string collectionInfoUrl);
    internal static void ValidateTypeKind(EdmTypeKind actualTypeKind, EdmTypeKind expectedTypeKind, string typeName);
    internal static void ValidateBoundaryString(string boundary);
    internal static bool ShouldValidateComplexPropertyNullValue(IEdmModel model);
    internal static bool IsValidPropertyName(string propertyName);
    internal static void ValidatePropertyName(string propertyName);
    internal static int ValidateTotalEntityPropertyMappingCount(ODataEntityPropertyMappingCache baseCache, ODataEntityPropertyMappingCollection mappings, int maxMappingCount);
    [CompilerGeneratedAttribute]
private static string <ValidatePropertyName>b__0(char c);
}
internal interface Microsoft.Data.OData.VerboseJson.IODataVerboseJsonReaderEntryState {
    public ODataEntry Entry { get; }
    public IEdmEntityType EntityType { get; }
    public bool MetadataPropertyFound { get; public set; }
    public ODataNavigationLink FirstNavigationLink { get; public set; }
    public IEdmNavigationProperty FirstNavigationProperty { get; public set; }
    public DuplicatePropertyNamesChecker DuplicatePropertyNamesChecker { get; }
    public abstract virtual ODataEntry get_Entry();
    public abstract virtual IEdmEntityType get_EntityType();
    public abstract virtual bool get_MetadataPropertyFound();
    public abstract virtual void set_MetadataPropertyFound(bool value);
    public abstract virtual ODataNavigationLink get_FirstNavigationLink();
    public abstract virtual void set_FirstNavigationLink(ODataNavigationLink value);
    public abstract virtual IEdmNavigationProperty get_FirstNavigationProperty();
    public abstract virtual void set_FirstNavigationProperty(IEdmNavigationProperty value);
    public abstract virtual DuplicatePropertyNamesChecker get_DuplicatePropertyNamesChecker();
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonCollectionDeserializer : ODataVerboseJsonPropertyAndValueDeserializer {
    private DuplicatePropertyNamesChecker duplicatePropertyNamesChecker;
    internal ODataVerboseJsonCollectionDeserializer(ODataVerboseJsonInputContext jsonInputContext);
    internal ODataCollectionStart ReadCollectionStart(bool isResultsWrapperExpected);
    internal object ReadCollectionItem(IEdmTypeReference expectedItemTypeReference, CollectionWithoutExpectedTypeValidator collectionValidator);
    internal void ReadCollectionEnd(bool isResultsWrapperExpected);
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonCollectionReader : ODataCollectionReaderCore {
    private ODataVerboseJsonInputContext verboseJsonInputContext;
    private ODataVerboseJsonCollectionDeserializer verboseJsonCollectionDeserializer;
    private bool IsResultsWrapperExpected { get; }
    internal ODataVerboseJsonCollectionReader(ODataVerboseJsonInputContext verboseJsonInputContext, IEdmTypeReference expectedItemTypeReference, IODataReaderWriterListener listener);
    private bool get_IsResultsWrapperExpected();
    protected virtual bool ReadAtStartImplementation();
    protected virtual bool ReadAtCollectionStartImplementation();
    protected virtual bool ReadAtValueImplementation();
    protected virtual bool ReadAtCollectionEndImplementation();
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonCollectionSerializer : ODataVerboseJsonPropertyAndValueSerializer {
    internal ODataVerboseJsonCollectionSerializer(ODataVerboseJsonOutputContext verboseJsonOutputContext);
    internal void WriteCollectionStart();
    internal void WriteCollectionEnd();
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonCollectionWriter : ODataCollectionWriterCore {
    private ODataVerboseJsonOutputContext verboseJsonOutputContext;
    private ODataVerboseJsonCollectionSerializer verboseJsonCollectionSerializer;
    internal ODataVerboseJsonCollectionWriter(ODataVerboseJsonOutputContext verboseJsonOutputContext, IEdmTypeReference itemTypeReference);
    internal ODataVerboseJsonCollectionWriter(ODataVerboseJsonOutputContext verboseJsonOutputContext, IEdmTypeReference expectedItemType, IODataReaderWriterListener listener);
    protected virtual void VerifyNotDisposed();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void StartPayload();
    protected virtual void EndPayload();
    protected virtual void StartCollection(ODataCollectionStart collectionStart);
    protected virtual void EndCollection();
    protected virtual void WriteCollectionItem(object item, IEdmTypeReference expectedItemType);
}
internal abstract class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonDeserializer : ODataDeserializer {
    private ODataVerboseJsonInputContext jsonInputContext;
    internal BufferingJsonReader JsonReader { get; }
    protected ODataVerboseJsonInputContext VerboseJsonInputContext { get; }
    protected ODataVerboseJsonDeserializer(ODataVerboseJsonInputContext jsonInputContext);
    internal BufferingJsonReader get_JsonReader();
    protected ODataVerboseJsonInputContext get_VerboseJsonInputContext();
    internal void ReadPayloadStart(bool isReadingNestedPayload);
    internal void ReadPayloadStart(bool isReadingNestedPayload, bool expectResponseWrapper);
    internal void ReadPayloadEnd(bool isReadingNestedPayload);
    internal void ReadPayloadEnd(bool isReadingNestedPayload, bool expectResponseWrapper);
    internal Uri ProcessUriFromPayload(string uriFromPayload);
    internal Uri ProcessUriFromPayload(string uriFromPayload, bool requireAbsoluteUri);
    [ConditionalAttribute("DEBUG")]
internal void AssertJsonCondition(JsonNodeType[] allowedNodeTypes);
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonEntityReferenceLinkDeserializer : ODataVerboseJsonDeserializer {
    internal ODataVerboseJsonEntityReferenceLinkDeserializer(ODataVerboseJsonInputContext verboseJsonInputContext);
    internal ODataEntityReferenceLinks ReadEntityReferenceLinks();
    internal ODataEntityReferenceLink ReadEntityReferenceLink();
    private bool ReadEntityReferenceLinkProperties(ODataEntityReferenceLinks entityReferenceLinks, EntityReferenceLinksWrapperPropertyBitMask& propertiesFoundBitField);
    private ODataEntityReferenceLink ReadSingleEntityReferenceLink();
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonEntityReferenceLinkSerializer : ODataVerboseJsonSerializer {
    internal ODataVerboseJsonEntityReferenceLinkSerializer(ODataVerboseJsonOutputContext verboseJsonOutputContext);
    internal void WriteEntityReferenceLink(ODataEntityReferenceLink link);
    internal void WriteEntityReferenceLinks(ODataEntityReferenceLinks entityReferenceLinks);
    private void WriteEntityReferenceLinkImplementation(ODataEntityReferenceLink entityReferenceLink);
    private void WriteEntityReferenceLinksImplementation(ODataEntityReferenceLinks entityReferenceLinks, bool includeResultsWrapper);
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonEntryAndFeedDeserializer : ODataVerboseJsonPropertyAndValueDeserializer {
    internal ODataVerboseJsonEntryAndFeedDeserializer(ODataVerboseJsonInputContext verboseJsonInputContext);
    internal void ReadFeedStart(ODataFeed feed, bool isResultsWrapperExpected, bool isExpandedLinkContent);
    internal void ReadFeedEnd(ODataFeed feed, bool readResultsWrapper, bool isExpandedLinkContent);
    internal void ReadEntryStart();
    internal void ReadEntryMetadataPropertyValue(IODataVerboseJsonReaderEntryState entryState);
    internal void ValidateEntryMetadata(IODataVerboseJsonReaderEntryState entryState);
    internal ODataNavigationLink ReadEntryContent(IODataVerboseJsonReaderEntryState entryState, IEdmNavigationProperty& navigationProperty);
    internal void ReadDeferredNavigationLink(ODataNavigationLink navigationLink);
    internal ODataEntityReferenceLink ReadEntityReferenceLink();
    internal bool IsDeferredLink(bool navigationLinkFound);
    internal bool IsEntityReferenceLink();
    private static void AddEntryProperty(IODataVerboseJsonReaderEntryState entryState, string propertyName, object propertyValue);
    private void ReadFeedProperty(ODataFeed feed, string propertyName, bool isExpandedLinkContent);
    private void ReadEntryProperty(IODataVerboseJsonReaderEntryState entryState, IEdmProperty edmProperty);
    private void ReadOpenProperty(IODataVerboseJsonReaderEntryState entryState, string propertyName);
    private ODataNavigationLink ReadUndeclaredProperty(IODataVerboseJsonReaderEntryState entryState, string propertyName);
    private ODataStreamReferenceValue ReadStreamPropertyValue();
    private void ReadUriMetadataProperty(ODataEntry entry, MetadataPropertyBitMask& metadataPropertiesFoundBitField);
    private void ReadIdMetadataProperty(ODataEntry entry, MetadataPropertyBitMask& metadataPropertiesFoundBitField);
    private void ReadETagMetadataProperty(ODataEntry entry, MetadataPropertyBitMask& metadataPropertiesFoundBitField);
    private void ReadMediaSourceMetadataProperty(MetadataPropertyBitMask& metadataPropertiesFoundBitField, ODataStreamReferenceValue& mediaResource);
    private void ReadEditMediaMetadataProperty(MetadataPropertyBitMask& metadataPropertiesFoundBitField, ODataStreamReferenceValue& mediaResource);
    private void ReadContentTypeMetadataProperty(MetadataPropertyBitMask& metadataPropertiesFoundBitField, ODataStreamReferenceValue& mediaResource);
    private void ReadMediaETagMetadataProperty(MetadataPropertyBitMask& metadataPropertiesFoundBitField, ODataStreamReferenceValue& mediaResource);
    private void ReadActionsMetadataProperty(ODataEntry entry, MetadataPropertyBitMask& metadataPropertiesFoundBitField);
    private void ReadFunctionsMetadataProperty(ODataEntry entry, MetadataPropertyBitMask& metadataPropertiesFoundBitField);
    private void ReadPropertiesMetadataProperty(IODataVerboseJsonReaderEntryState entryState, MetadataPropertyBitMask& metadataPropertiesFoundBitField);
    private void ReadOperationsMetadata(ODataEntry entry, bool isActions);
    private ODataStreamReferenceValue ReadStreamReferenceValue();
    private Uri ResolveUri(string uriFromPayload);
    private void ValidateNavigationLinkPropertyValue(bool isCollection);
    private bool ShouldEntryPropertyBeSkipped();
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonEntryAndFeedSerializer : ODataVerboseJsonPropertyAndValueSerializer {
    internal ODataVerboseJsonEntryAndFeedSerializer(ODataVerboseJsonOutputContext verboseJsonOutputContext);
    internal void WriteEntryMetadata(ODataEntry entry, ProjectedPropertiesAnnotation projectedProperties, IEdmEntityType entryEntityType, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    internal void WriteOperations(IEnumerable`1<ODataOperation> operations, string operationName, bool isAction, bool writingJsonLight);
    private void WriteAssociationLink(ODataAssociationLink associationLink, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    private void WriteOperationMetadataGroup(IGrouping`2<string, ODataOperation> operations);
    private void WriteOperation(ODataOperation operation);
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonErrorDeserializer : ODataVerboseJsonDeserializer {
    internal ODataVerboseJsonErrorDeserializer(ODataVerboseJsonInputContext verboseJsonInputContext);
    internal ODataError ReadTopLevelError();
    private ODataInnerError ReadInnerError(int recursionDepth);
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonFormat : ODataFormat {
    public virtual string ToString();
    internal virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataResponseMessage responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(IODataRequestMessage requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual ODataInputContext CreateInputContext(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal virtual ODataOutputContext CreateOutputContext(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    internal virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataResponseMessageAsync responseMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(IODataRequestMessageAsync requestMessage, ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual Task`1<ODataInputContext> CreateInputContextAsync(ODataPayloadKind readerPayloadKind, ODataMessage message, MediaType contentType, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, IEdmModel model, IODataUrlResolver urlResolver, object payloadKindDetectionFormatState);
    internal virtual Task`1<ODataOutputContext> CreateOutputContextAsync(ODataMessage message, MediaType mediaType, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, IEdmModel model, IODataUrlResolver urlResolver);
    private IEnumerable`1<ODataPayloadKind> DetectPayloadKindImplementation(Stream messageStream, bool readingResponse, bool synchronous, ODataPayloadKindDetectionInfo detectionInfo);
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonInputContext : ODataInputContext {
    private TextReader textReader;
    private BufferingJsonReader jsonReader;
    internal BufferingJsonReader JsonReader { get; }
    internal ODataVerboseJsonInputContext(ODataFormat format, TextReader reader, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver);
    internal ODataVerboseJsonInputContext(ODataFormat format, Stream messageStream, Encoding encoding, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool readingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver);
    internal BufferingJsonReader get_JsonReader();
    internal virtual ODataReader CreateFeedReader(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    internal virtual Task`1<ODataReader> CreateFeedReaderAsync(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    internal virtual ODataReader CreateEntryReader(IEdmEntitySet entitySet, IEdmEntityType expectedEntityType);
    internal virtual Task`1<ODataReader> CreateEntryReaderAsync(IEdmEntitySet entitySet, IEdmEntityType expectedEntityType);
    internal virtual ODataCollectionReader CreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    internal virtual Task`1<ODataCollectionReader> CreateCollectionReaderAsync(IEdmTypeReference expectedItemTypeReference);
    internal virtual ODataParameterReader CreateParameterReader(IEdmFunctionImport functionImport);
    internal virtual Task`1<ODataParameterReader> CreateParameterReaderAsync(IEdmFunctionImport functionImport);
    internal virtual ODataWorkspace ReadServiceDocument();
    internal virtual Task`1<ODataWorkspace> ReadServiceDocumentAsync();
    internal virtual ODataProperty ReadProperty(IEdmStructuralProperty property, IEdmTypeReference expectedPropertyTypeReference);
    internal virtual Task`1<ODataProperty> ReadPropertyAsync(IEdmStructuralProperty property, IEdmTypeReference expectedPropertyTypeReference);
    internal virtual ODataError ReadError();
    internal virtual Task`1<ODataError> ReadErrorAsync();
    internal virtual ODataEntityReferenceLinks ReadEntityReferenceLinks(IEdmNavigationProperty navigationProperty);
    internal virtual Task`1<ODataEntityReferenceLinks> ReadEntityReferenceLinksAsync(IEdmNavigationProperty navigationProperty);
    internal virtual ODataEntityReferenceLink ReadEntityReferenceLink(IEdmNavigationProperty navigationProperty);
    internal virtual Task`1<ODataEntityReferenceLink> ReadEntityReferenceLinkAsync(IEdmNavigationProperty navigationProperty);
    internal IEnumerable`1<ODataPayloadKind> DetectPayloadKind();
    protected virtual void DisposeImplementation();
    private static TextReader CreateTextReaderForMessageStreamConstructor(Stream messageStream, Encoding encoding);
    private static void VerifyCanCreateParameterReader(IEdmFunctionImport functionImport);
    private ODataReader CreateFeedReaderImplementation(IEdmEntitySet entitySet, IEdmEntityType expectedBaseEntityType);
    private ODataReader CreateEntryReaderImplementation(IEdmEntitySet entitySet, IEdmEntityType expectedEntityType);
    private ODataCollectionReader CreateCollectionReaderImplementation(IEdmTypeReference expectedItemTypeReference);
    private ODataParameterReader CreateParameterReaderImplementation(IEdmFunctionImport functionImport);
    private ODataProperty ReadPropertyImplementation(IEdmStructuralProperty Property, IEdmTypeReference expectedPropertyTypeReference);
    private ODataWorkspace ReadServiceDocumentImplementation();
    private ODataError ReadErrorImplementation();
    private ODataEntityReferenceLinks ReadEntityReferenceLinksImplementation();
    private ODataEntityReferenceLink ReadEntityReferenceLinkImplementation();
    [CompilerGeneratedAttribute]
private ODataError <ReadErrorAsync>b__f();
    [CompilerGeneratedAttribute]
private ODataEntityReferenceLinks <ReadEntityReferenceLinksAsync>b__10();
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonOutputContext : ODataJsonOutputContextBase {
    private AtomAndVerboseJsonTypeNameOracle typeNameOracle;
    internal AtomAndVerboseJsonTypeNameOracle TypeNameOracle { get; }
    internal ODataVerboseJsonOutputContext(ODataFormat format, TextWriter textWriter, ODataMessageWriterSettings messageWriterSettings, IEdmModel model);
    internal ODataVerboseJsonOutputContext(ODataFormat format, Stream messageStream, Encoding encoding, ODataMessageWriterSettings messageWriterSettings, bool writingResponse, bool synchronous, IEdmModel model, IODataUrlResolver urlResolver);
    internal AtomAndVerboseJsonTypeNameOracle get_TypeNameOracle();
    internal virtual void WriteInStreamError(ODataError error, bool includeDebugInformation);
    internal virtual Task WriteInStreamErrorAsync(ODataError error, bool includeDebugInformation);
    internal virtual ODataWriter CreateODataFeedWriter(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual Task`1<ODataWriter> CreateODataFeedWriterAsync(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual ODataWriter CreateODataEntryWriter(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual Task`1<ODataWriter> CreateODataEntryWriterAsync(IEdmEntitySet entitySet, IEdmEntityType entityType);
    internal virtual ODataCollectionWriter CreateODataCollectionWriter(IEdmTypeReference itemTypeReference);
    internal virtual Task`1<ODataCollectionWriter> CreateODataCollectionWriterAsync(IEdmTypeReference itemTypeReference);
    internal virtual ODataParameterWriter CreateODataParameterWriter(IEdmFunctionImport functionImport);
    internal virtual Task`1<ODataParameterWriter> CreateODataParameterWriterAsync(IEdmFunctionImport functionImport);
    internal virtual void WriteServiceDocument(ODataWorkspace defaultWorkspace);
    internal virtual Task WriteServiceDocumentAsync(ODataWorkspace defaultWorkspace);
    internal virtual void WriteProperty(ODataProperty property);
    internal virtual Task WritePropertyAsync(ODataProperty property);
    internal virtual void WriteError(ODataError error, bool includeDebugInformation);
    internal virtual Task WriteErrorAsync(ODataError error, bool includeDebugInformation);
    internal virtual void WriteEntityReferenceLinks(ODataEntityReferenceLinks links, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual Task WriteEntityReferenceLinksAsync(ODataEntityReferenceLinks links, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual void WriteEntityReferenceLink(ODataEntityReferenceLink link, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    internal virtual Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink link, IEdmEntitySet entitySet, IEdmNavigationProperty navigationProperty);
    private ODataWriter CreateODataFeedWriterImplementation(IEdmEntitySet entitySet, IEdmEntityType entityType);
    private ODataWriter CreateODataEntryWriterImplementation(IEdmEntitySet entitySet, IEdmEntityType entityType);
    private ODataCollectionWriter CreateODataCollectionWriterImplementation(IEdmTypeReference itemTypeReference);
    private ODataParameterWriter CreateODataParameterWriterImplementation(IEdmFunctionImport functionImport);
    private void WriteInStreamErrorImplementation(ODataError error, bool includeDebugInformation);
    private void WritePropertyImplementation(ODataProperty property);
    private void WriteServiceDocumentImplementation(ODataWorkspace defaultWorkspace);
    private void WriteErrorImplementation(ODataError error, bool includeDebugInformation);
    private void WriteEntityReferenceLinksImplementation(ODataEntityReferenceLinks links);
    private void WriteEntityReferenceLinkImplementation(ODataEntityReferenceLink link);
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonParameterReader : ODataParameterReaderCore {
    private ODataVerboseJsonInputContext verboseJsonInputContext;
    private ODataVerboseJsonPropertyAndValueDeserializer verboseJsonPropertyAndValueDeserializer;
    internal ODataVerboseJsonParameterReader(ODataVerboseJsonInputContext verboseJsonInputContext, IEdmFunctionImport functionImport);
    protected virtual bool ReadAtStartImplementation();
    protected virtual bool ReadNextParameterImplementation();
    protected virtual ODataCollectionReader CreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    private bool EndOfParameters();
    private void ReadParametersEnd();
    private void ReadNextParameter();
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonParameterWriter : ODataParameterWriterCore {
    private ODataVerboseJsonOutputContext verboseJsonOutputContext;
    private ODataVerboseJsonPropertyAndValueSerializer verboseJsonPropertyAndValueSerializer;
    internal ODataVerboseJsonParameterWriter(ODataVerboseJsonOutputContext verboseJsonOutputContext, IEdmFunctionImport functionImport);
    protected virtual void VerifyNotDisposed();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void StartPayload();
    protected virtual void EndPayload();
    protected virtual void WriteValueParameter(string parameterName, object parameterValue, IEdmTypeReference expectedTypeReference);
    protected virtual ODataCollectionWriter CreateFormatCollectionWriter(string parameterName, IEdmTypeReference expectedItemType);
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonPayloadKindDetectionDeserializer : ODataVerboseJsonPropertyAndValueDeserializer {
    private HashSet`1<ODataPayloadKind> detectedPayloadKinds;
    internal ODataVerboseJsonPayloadKindDetectionDeserializer(ODataVerboseJsonInputContext verboseJsonInputContext);
    internal IEnumerable`1<ODataPayloadKind> DetectPayloadKind();
    private void DetectStartArrayPayloadKind(bool isTopLevel);
    private void ProcessMetadataPropertyValue();
    private void ProcessEntitySetsArray();
    private void AddPayloadKinds(ODataPayloadKind[] payloadKinds);
    private void RemovePayloadKinds(ODataPayloadKind[] payloadKinds);
    private void AddOrRemovePayloadKinds(Func`2<ODataPayloadKind, bool> addOrRemoveAction, ODataPayloadKind[] payloadKinds);
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonPropertyAndValueDeserializer : ODataVerboseJsonDeserializer {
    private int recursionDepth;
    internal ODataVerboseJsonPropertyAndValueDeserializer(ODataVerboseJsonInputContext verboseJsonInputContext);
    internal ODataProperty ReadTopLevelProperty(IEdmStructuralProperty expectedProperty, IEdmTypeReference expectedPropertyTypeReference);
    internal string FindTypeNameInPayload();
    internal object ReadNonEntityValue(IEdmTypeReference expectedValueTypeReference, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, CollectionWithoutExpectedTypeValidator collectionValidator, bool validateNullValue, string propertyName);
    internal string ReadTypeNameFromMetadataPropertyValue();
    internal object ReadPrimitiveValue(IEdmPrimitiveTypeReference expectedValueTypeReference, bool validateNullValue, string propertyName);
    private ODataCollectionValue ReadCollectionValueImplementation(IEdmCollectionTypeReference collectionValueTypeReference, string payloadTypeName, SerializationTypeNameAnnotation serializationTypeNameAnnotation);
    private ODataComplexValue ReadComplexValueImplementation(IEdmComplexTypeReference complexValueTypeReference, string payloadTypeName, SerializationTypeNameAnnotation serializationTypeNameAnnotation, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker);
    private object ReadNonEntityValueImplementation(IEdmTypeReference expectedTypeReference, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, CollectionWithoutExpectedTypeValidator collectionValidator, bool validateNullValue, string propertyName);
    private EdmTypeKind GetNonEntityValueKind();
    private bool ShouldReadTopLevelPropertyValueWithoutPropertyWrapper(IEdmTypeReference expectedPropertyTypeReference);
    private void IncreaseRecursionDepth();
    private void DecreaseRecursionDepth();
    [ConditionalAttribute("DEBUG")]
private void AssertRecursionDepthIsZero();
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonPropertyAndValueSerializer : ODataVerboseJsonSerializer {
    private int recursionDepth;
    internal ODataVerboseJsonPropertyAndValueSerializer(ODataVerboseJsonOutputContext verboseJsonOutputContext);
    internal void WriteTopLevelProperty(ODataProperty property);
    internal void WriteProperties(IEdmStructuredType owningType, IEnumerable`1<ODataProperty> properties, bool isComplexValue, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, ProjectedPropertiesAnnotation projectedProperties);
    internal void WritePrimitiveValue(object value, CollectionWithoutExpectedTypeValidator collectionValidator, IEdmTypeReference expectedTypeReference);
    internal void WriteComplexValue(ODataComplexValue complexValue, IEdmTypeReference propertyTypeReference, bool isOpenPropertyType, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, CollectionWithoutExpectedTypeValidator collectionValidator);
    internal void WriteCollectionValue(ODataCollectionValue collectionValue, IEdmTypeReference metadataTypeReference, bool isOpenPropertyType);
    internal void WriteStreamReferenceValueContent(ODataStreamReferenceValue streamReferenceValue);
    internal void WriteETag(string etagName, string etagValue);
    [ConditionalAttribute("DEBUG")]
internal void AssertRecursionDepthIsZero();
    private void WriteProperty(ODataProperty property, IEdmStructuredType owningType, bool allowStreamProperty, DuplicatePropertyNamesChecker duplicatePropertyNamesChecker, ProjectedPropertiesAnnotation projectedProperties);
    private void WriteStreamReferenceValue(ODataStreamReferenceValue streamReferenceValue);
    private void IncreaseRecursionDepth();
    private void DecreaseRecursionDepth();
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonReader : ODataReaderCore {
    private ODataVerboseJsonInputContext verboseJsonInputContext;
    private ODataVerboseJsonEntryAndFeedDeserializer verboseJsonEntryAndFeedDeserializer;
    private IODataVerboseJsonReaderEntryState CurrentEntryState { get; }
    private JsonScope CurrentJsonScope { get; }
    internal ODataVerboseJsonReader(ODataVerboseJsonInputContext verboseJsonInputContext, IEdmEntitySet entitySet, IEdmEntityType expectedEntityType, bool readingFeed, IODataReaderWriterListener listener);
    private IODataVerboseJsonReaderEntryState get_CurrentEntryState();
    private JsonScope get_CurrentJsonScope();
    protected virtual bool ReadAtStartImplementation();
    protected virtual bool ReadAtFeedStartImplementation();
    protected virtual bool ReadAtFeedEndImplementation();
    protected virtual bool ReadAtEntryStartImplementation();
    protected virtual bool ReadAtEntryEndImplementation();
    protected virtual bool ReadAtNavigationLinkStartImplementation();
    protected virtual bool ReadAtNavigationLinkEndImplementation();
    protected virtual bool ReadAtEntityReferenceLink();
    private void ReadFeedStart(bool isExpandedLinkContent);
    private void ReadExpandedCollectionNavigationLinkContentInRequest();
    private void ReadEntryStart();
    private void ReadEntryMetadata();
    private void ReadExpandedNavigationLinkEnd(bool isCollection);
    private void StartEntry();
    private void StartNavigationLink(ODataNavigationLink navigationLink, IEdmNavigationProperty navigationProperty);
    private void EnterScope(ODataReaderState state, ODataItem item, IEdmEntityType expectedEntityType);
    private void ReplaceScope(ODataReaderState state);
    private void EndEntry();
}
internal static class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonReaderUtils : object {
    internal static FeedPropertyKind DetermineFeedPropertyKind(string propertyName);
    internal static object ConvertValue(object value, IEdmPrimitiveTypeReference primitiveTypeReference, ODataMessageReaderSettings messageReaderSettings, ODataVersion version, bool validateNullValue, string propertyName);
    internal static void EnsureInstance(T& instance);
    internal static bool ErrorPropertyNotFound(ErrorPropertyBitMask& propertiesFoundBitField, ErrorPropertyBitMask propertyFoundBitMask);
    internal static void ValidateMetadataStringProperty(string propertyValue, string propertyName);
    internal static void VerifyMetadataPropertyNotFound(MetadataPropertyBitMask& propertiesFoundBitField, MetadataPropertyBitMask propertyFoundBitMask, string propertyName);
    internal static void ValidateEntityReferenceLinksStringProperty(string propertyValue, string propertyName);
    internal static void ValidateCountPropertyInEntityReferenceLinks(Nullable`1<long> propertyValue);
    internal static void VerifyEntityReferenceLinksWrapperPropertyNotFound(EntityReferenceLinksWrapperPropertyBitMask& propertiesFoundBitField, EntityReferenceLinksWrapperPropertyBitMask propertyFoundBitMask, string propertyName);
    internal static void VerifyErrorPropertyNotFound(ErrorPropertyBitMask& propertiesFoundBitField, ErrorPropertyBitMask propertyFoundBitMask, string propertyName);
    internal static void ValidateMediaResourceStringProperty(string propertyValue, string propertyName);
    internal static void ValidateFeedProperty(object propertyValue, string propertyName);
    internal static string GetPayloadTypeName(object payloadItem);
    private static object ConvertStringValue(string stringValue, Type targetType, ODataVersion version);
    private static object ConvertInt32Value(int intValue, Type targetType, IEdmPrimitiveTypeReference primitiveTypeReference, bool usesV1ProviderBehavior);
    private static object ConvertDateTimeValue(DateTime datetimeValue, Type targetType, IEdmPrimitiveTypeReference primitiveTypeReference, ODataReaderBehavior readerBehavior);
    private static bool IsV1PrimitiveType(Type targetType);
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonSerializer : ODataSerializer {
    private ODataVerboseJsonOutputContext verboseJsonOutputContext;
    internal ODataVerboseJsonOutputContext VerboseJsonOutputContext { get; }
    internal IJsonWriter JsonWriter { get; }
    internal ODataVerboseJsonSerializer(ODataVerboseJsonOutputContext verboseJsonOutputContext);
    internal ODataVerboseJsonOutputContext get_VerboseJsonOutputContext();
    internal IJsonWriter get_JsonWriter();
    internal void WritePayloadStart();
    internal void WritePayloadStart(bool disableResponseWrapper);
    internal void WritePayloadEnd();
    internal void WritePayloadEnd(bool disableResponseWrapper);
    internal void WriteTopLevelPayload(Action payloadWriterAction);
    internal void WriteTopLevelPayload(Action payloadWriterAction, bool disableResponseWrapper);
    internal void WriteTopLevelError(ODataError error, bool includeDebugInformation);
    internal string UriToAbsoluteUriString(Uri uri);
    internal string UriToUriString(Uri uri, bool makeAbsolute);
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonServiceDocumentDeserializer : ODataVerboseJsonDeserializer {
    internal ODataVerboseJsonServiceDocumentDeserializer(ODataVerboseJsonInputContext verboseJsonInputContext);
    internal ODataWorkspace ReadServiceDocument();
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonServiceDocumentSerializer : ODataVerboseJsonSerializer {
    internal ODataVerboseJsonServiceDocumentSerializer(ODataVerboseJsonOutputContext verboseJsonOutputContext);
    internal void WriteServiceDocument(ODataWorkspace defaultWorkspace);
}
internal class Microsoft.Data.OData.VerboseJson.ODataVerboseJsonWriter : ODataWriterCore {
    private ODataVerboseJsonOutputContext verboseJsonOutputContext;
    private ODataVerboseJsonEntryAndFeedSerializer verboseJsonEntryAndFeedSerializer;
    private VerboseJsonFeedScope CurrentFeedScope { get; }
    internal ODataVerboseJsonWriter(ODataVerboseJsonOutputContext jsonOutputContext, IEdmEntitySet entitySet, IEdmEntityType entityType, bool writingFeed);
    private VerboseJsonFeedScope get_CurrentFeedScope();
    protected virtual void VerifyNotDisposed();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void StartPayload();
    protected virtual void EndPayload();
    protected virtual void StartEntry(ODataEntry entry);
    protected virtual void EndEntry(ODataEntry entry);
    protected virtual void StartFeed(ODataFeed feed);
    protected virtual void EndFeed(ODataFeed feed);
    protected virtual void WriteDeferredNavigationLink(ODataNavigationLink navigationLink);
    protected virtual void StartNavigationLinkWithContent(ODataNavigationLink navigationLink);
    protected virtual void EndNavigationLinkWithContent(ODataNavigationLink navigationLink);
    protected virtual void WriteEntityReferenceInNavigationLinkContent(ODataNavigationLink parentNavigationLink, ODataEntityReferenceLink entityReferenceLink);
    protected virtual FeedScope CreateFeedScope(ODataFeed feed, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties);
    protected virtual EntryScope CreateEntryScope(ODataEntry entry, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties);
    private void WriteFeedCount(ODataFeed feed);
}
internal class Microsoft.Data.OData.VerboseJson.PropertyDeduplicatingJsonReader : BufferingJsonReader {
    internal PropertyDeduplicatingJsonReader(TextReader reader, int maxInnerErrorDepth);
    protected virtual void ProcessObjectValue();
}
[ExtensionAttribute]
internal static class Microsoft.Data.OData.WriterUtils : object {
    [ExtensionAttribute]
internal static bool ShouldSkipProperty(ProjectedPropertiesAnnotation projectedProperties, string propertyName);
}
internal static class Microsoft.Data.OData.WriterValidationUtils : object {
    internal static void ValidateMessageWriterSettings(ODataMessageWriterSettings messageWriterSettings, bool writingResponse);
    internal static void ValidatePropertyNotNull(ODataProperty property);
    internal static void ValidatePropertyName(string propertyName);
    internal static IEdmProperty ValidatePropertyDefined(string propertyName, IEdmStructuredType owningStructuredType, ODataUndeclaredPropertyBehaviorKinds undeclaredPropertyBehaviorKinds);
    internal static IEdmNavigationProperty ValidateNavigationPropertyDefined(string propertyName, IEdmEntityType owningEntityType, ODataUndeclaredPropertyBehaviorKinds undeclaredPropertyBehaviorKinds);
    internal static void ValidateEntryInExpandedLink(IEdmEntityType entryEntityType, IEdmEntityType parentNavigationPropertyType);
    internal static void ValidateAssociationLink(ODataAssociationLink associationLink, ODataVersion version, bool writingResponse);
    internal static void ValidateCanWriteOperation(ODataOperation operation, bool writingResponse);
    internal static void ValidateFeedAtEnd(ODataFeed feed, bool writingRequest, ODataVersion version);
    internal static void ValidateEntryAtStart(ODataEntry entry);
    internal static void ValidateEntryAtEnd(ODataEntry entry);
    internal static void ValidateStreamReferenceValue(ODataStreamReferenceValue streamReference, bool isDefaultStream);
    internal static void ValidateStreamReferenceProperty(ODataProperty streamProperty, IEdmProperty edmProperty, ODataVersion version, bool writingResponse);
    internal static void ValidateEntityReferenceLinkNotNull(ODataEntityReferenceLink entityReferenceLink);
    internal static void ValidateEntityReferenceLink(ODataEntityReferenceLink entityReferenceLink);
    internal static IEdmNavigationProperty ValidateNavigationLink(ODataNavigationLink navigationLink, IEdmEntityType declaringEntityType, Nullable`1<ODataPayloadKind> expandedPayloadKind, ODataUndeclaredPropertyBehaviorKinds undeclaredPropertyBehaviorKinds);
    internal static void ValidateNavigationLinkUrlPresent(ODataNavigationLink navigationLink);
    internal static void ValidateNavigationLinkHasCardinality(ODataNavigationLink navigationLink);
    internal static void ValidateNullPropertyValue(IEdmTypeReference expectedPropertyTypeReference, string propertyName, ODataWriterBehavior writerBehavior, IEdmModel model);
    private static void ValidateEntryId(string id);
}
[AttributeUsageAttribute("4")]
public class System.Data.Services.Common.EntityPropertyMappingAttribute : Attribute {
    private string sourcePath;
    private string targetPath;
    private SyndicationItemProperty targetSyndicationItem;
    private SyndicationTextContentKind targetTextContentKind;
    private string targetNamespacePrefix;
    private string targetNamespaceUri;
    private bool keepInContent;
    public string SourcePath { get; }
    public string TargetPath { get; }
    public SyndicationItemProperty TargetSyndicationItem { get; }
    public string TargetNamespacePrefix { get; }
    public string TargetNamespaceUri { get; }
    public SyndicationTextContentKind TargetTextContentKind { get; }
    public bool KeepInContent { get; }
    public EntityPropertyMappingAttribute(string sourcePath, SyndicationItemProperty targetSyndicationItem, SyndicationTextContentKind targetTextContentKind, bool keepInContent);
    public EntityPropertyMappingAttribute(string sourcePath, string targetPath, string targetNamespacePrefix, string targetNamespaceUri, bool keepInContent);
    public string get_SourcePath();
    public string get_TargetPath();
    public SyndicationItemProperty get_TargetSyndicationItem();
    public string get_TargetNamespacePrefix();
    public string get_TargetNamespaceUri();
    public SyndicationTextContentKind get_TargetTextContentKind();
    public bool get_KeepInContent();
}
public enum System.Data.Services.Common.SyndicationItemProperty : Enum {
    public int value__;
    public static SyndicationItemProperty CustomProperty;
    public static SyndicationItemProperty AuthorEmail;
    public static SyndicationItemProperty AuthorName;
    public static SyndicationItemProperty AuthorUri;
    public static SyndicationItemProperty ContributorEmail;
    public static SyndicationItemProperty ContributorName;
    public static SyndicationItemProperty ContributorUri;
    public static SyndicationItemProperty Updated;
    public static SyndicationItemProperty Published;
    public static SyndicationItemProperty Rights;
    public static SyndicationItemProperty Summary;
    public static SyndicationItemProperty Title;
}
public enum System.Data.Services.Common.SyndicationTextContentKind : Enum {
    public int value__;
    public static SyndicationTextContentKind Plaintext;
    public static SyndicationTextContentKind Html;
    public static SyndicationTextContentKind Xhtml;
}
[AttributeUsageAttribute("1")]
internal class System.Reflection.AssemblyMetadataAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public AssemblyMetadataAttribute(string key, string value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
