[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DefaultMemberAttribute("Item")]
public abstract class System.Collections.ObjectModel.KeyedCollection`2 : Collection`1<TItem> {
    public IEqualityComparer`1<TKey> Comparer { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected IDictionary`2<TKey, TItem> Dictionary { get; }
    public TItem Item { get; }
    protected KeyedCollection`2(IEqualityComparer`1<TKey> comparer);
    protected KeyedCollection`2(IEqualityComparer`1<TKey> comparer, int dictionaryCreationThreshold);
    public IEqualityComparer`1<TKey> get_Comparer();
    protected IDictionary`2<TKey, TItem> get_Dictionary();
    public TItem get_Item(TKey key);
    protected void ChangeItemKey(TItem item, TKey newKey);
    protected virtual void ClearItems();
    public bool Contains(TKey key);
    protected abstract virtual TKey GetKeyForItem(TItem item);
    protected virtual void InsertItem(int index, TItem item);
    public bool Remove(TKey key);
    protected virtual void RemoveItem(int index);
    protected virtual void SetItem(int index, TItem item);
    public bool TryGetValue(TKey key, TItem& item);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class System.Collections.ObjectModel.ObservableCollection`1 : Collection`1<T> {
    [NullableContextAttribute("1")]
public ObservableCollection`1(IEnumerable`1<T> collection);
    [NullableContextAttribute("1")]
public ObservableCollection`1(List`1<T> list);
    public virtual void add_CollectionChanged(NotifyCollectionChangedEventHandler value);
    public virtual void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
    protected virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    protected virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    private sealed virtual override void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value);
    private sealed virtual override void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value);
    [NullableContextAttribute("1")]
protected IDisposable BlockReentrancy();
    protected void CheckReentrancy();
    protected virtual void ClearItems();
    [NullableContextAttribute("1")]
protected virtual void InsertItem(int index, T item);
    public void Move(int oldIndex, int newIndex);
    protected virtual void MoveItem(int oldIndex, int newIndex);
    [NullableContextAttribute("1")]
protected virtual void OnCollectionChanged(NotifyCollectionChangedEventArgs e);
    [NullableContextAttribute("1")]
protected virtual void OnPropertyChanged(PropertyChangedEventArgs e);
    protected virtual void RemoveItem(int index);
    [NullableContextAttribute("1")]
protected virtual void SetItem(int index, T item);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class System.Collections.ObjectModel.ReadOnlyObservableCollection`1 : ReadOnlyCollection`1<T> {
    [NullableAttribute("1")]
public static ReadOnlyObservableCollection`1<T> Empty { get; }
    [NullableContextAttribute("1")]
public ReadOnlyObservableCollection`1(ObservableCollection`1<T> list);
    [NullableContextAttribute("1")]
public static ReadOnlyObservableCollection`1<T> get_Empty();
    protected virtual void add_CollectionChanged(NotifyCollectionChangedEventHandler value);
    protected virtual void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
    protected virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    protected virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    private sealed virtual override void System.Collections.Specialized.INotifyCollectionChanged.add_CollectionChanged(NotifyCollectionChangedEventHandler value);
    private sealed virtual override void System.Collections.Specialized.INotifyCollectionChanged.remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
    private sealed virtual override void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value);
    private sealed virtual override void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value);
    [NullableContextAttribute("1")]
protected virtual void OnCollectionChanged(NotifyCollectionChangedEventArgs args);
    [NullableContextAttribute("1")]
protected virtual void OnPropertyChanged(PropertyChangedEventArgs args);
}
[NullableContextAttribute("2")]
public interface System.Collections.Specialized.INotifyCollectionChanged {
    [CompilerGeneratedAttribute]
public abstract virtual void add_CollectionChanged(NotifyCollectionChangedEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
}
public enum System.Collections.Specialized.NotifyCollectionChangedAction : Enum {
    public int value__;
    public static NotifyCollectionChangedAction Add;
    public static NotifyCollectionChangedAction Remove;
    public static NotifyCollectionChangedAction Replace;
    public static NotifyCollectionChangedAction Move;
    public static NotifyCollectionChangedAction Reset;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.Collections.Specialized.NotifyCollectionChangedEventArgs : EventArgs {
    public NotifyCollectionChangedAction Action { get; }
    public IList NewItems { get; }
    public int NewStartingIndex { get; }
    public IList OldItems { get; }
    public int OldStartingIndex { get; }
    public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action);
    public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList changedItems);
    [NullableContextAttribute("1")]
public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList newItems, IList oldItems);
    [NullableContextAttribute("1")]
public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int startingIndex);
    public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList changedItems, int startingIndex);
    public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList changedItems, int index, int oldIndex);
    public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object changedItem);
    public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object changedItem, int index);
    public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object changedItem, int index, int oldIndex);
    public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object newItem, object oldItem);
    public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object newItem, object oldItem, int index);
    public NotifyCollectionChangedAction get_Action();
    public IList get_NewItems();
    public int get_NewStartingIndex();
    public IList get_OldItems();
    public int get_OldStartingIndex();
}
public class System.Collections.Specialized.NotifyCollectionChangedEventHandler : MulticastDelegate {
    public NotifyCollectionChangedEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, NotifyCollectionChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, NotifyCollectionChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.DataErrorsChangedEventArgs : EventArgs {
    public string PropertyName { get; }
    public DataErrorsChangedEventArgs(string propertyName);
    public virtual string get_PropertyName();
}
[NullableContextAttribute("1")]
public interface System.ComponentModel.INotifyDataErrorInfo {
    public bool HasErrors { get; }
    public abstract virtual bool get_HasErrors();
    [CompilerGeneratedAttribute]
public abstract virtual void add_ErrorsChanged(EventHandler`1<DataErrorsChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ErrorsChanged(EventHandler`1<DataErrorsChangedEventArgs> value);
    public abstract virtual IEnumerable GetErrors(string propertyName);
}
[NullableContextAttribute("2")]
public interface System.ComponentModel.INotifyPropertyChanged {
    [CompilerGeneratedAttribute]
public abstract virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
}
[NullableContextAttribute("2")]
public interface System.ComponentModel.INotifyPropertyChanging {
    [CompilerGeneratedAttribute]
public abstract virtual void add_PropertyChanging(PropertyChangingEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_PropertyChanging(PropertyChangingEventHandler value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.PropertyChangedEventArgs : EventArgs {
    public string PropertyName { get; }
    public PropertyChangedEventArgs(string propertyName);
    public virtual string get_PropertyName();
}
public class System.ComponentModel.PropertyChangedEventHandler : MulticastDelegate {
    public PropertyChangedEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, PropertyChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, PropertyChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.PropertyChangingEventArgs : EventArgs {
    public string PropertyName { get; }
    public PropertyChangingEventArgs(string propertyName);
    public virtual string get_PropertyName();
}
public class System.ComponentModel.PropertyChangingEventHandler : MulticastDelegate {
    public PropertyChangingEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, PropertyChangingEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, PropertyChangingEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
public class System.ComponentModel.TypeConverterAttribute : Attribute {
    public static TypeConverterAttribute Default;
    [DynamicallyAccessedMembersAttribute("3")]
public string ConverterTypeName { get; }
    public TypeConverterAttribute(string typeName);
    public TypeConverterAttribute(Type type);
    public string get_ConverterTypeName();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
public class System.ComponentModel.TypeDescriptionProviderAttribute : Attribute {
    [DynamicallyAccessedMembersAttribute("1")]
public string TypeName { get; }
    public TypeDescriptionProviderAttribute(string typeName);
    public TypeDescriptionProviderAttribute(Type type);
    public string get_TypeName();
}
[NullableContextAttribute("1")]
public interface System.Reflection.ICustomTypeProvider {
    public abstract virtual Type GetCustomType();
}
[NullableContextAttribute("2")]
[TypeConverterAttribute("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]
[ValueSerializerAttribute("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]
public interface System.Windows.Input.ICommand {
    [CompilerGeneratedAttribute]
public abstract virtual void add_CanExecuteChanged(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_CanExecuteChanged(EventHandler value);
    public abstract virtual bool CanExecute(object parameter);
    public abstract virtual void Execute(object parameter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1244")]
public class System.Windows.Markup.ValueSerializerAttribute : Attribute {
    [DynamicallyAccessedMembersAttribute("3")]
public Type ValueSerializerType { get; }
    [DynamicallyAccessedMembersAttribute("3")]
public string ValueSerializerTypeName { get; }
    public ValueSerializerAttribute(string valueSerializerTypeName);
    public ValueSerializerAttribute(Type valueSerializerType);
    public Type get_ValueSerializerType();
    public string get_ValueSerializerTypeName();
}
