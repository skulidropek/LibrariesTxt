public enum System.Reflection.Emit.FlowControl : Enum {
    public int value__;
    public static FlowControl Branch;
    public static FlowControl Break;
    public static FlowControl Call;
    public static FlowControl Cond_Branch;
    public static FlowControl Meta;
    public static FlowControl Next;
    [ObsoleteAttribute("FlowControl.Phi has been deprecated and is not supported.")]
public static FlowControl Phi;
    public static FlowControl Return;
    public static FlowControl Throw;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class System.Reflection.Emit.OpCode : ValueType {
    private int _dummyPrimitive;
    public FlowControl FlowControl { get; }
    public string Name { get; }
    public OpCodeType OpCodeType { get; }
    public OperandType OperandType { get; }
    public int Size { get; }
    public StackBehaviour StackBehaviourPop { get; }
    public StackBehaviour StackBehaviourPush { get; }
    public short Value { get; }
    public FlowControl get_FlowControl();
    public string get_Name();
    public OpCodeType get_OpCodeType();
    public OperandType get_OperandType();
    public int get_Size();
    public StackBehaviour get_StackBehaviourPop();
    public StackBehaviour get_StackBehaviourPush();
    public short get_Value();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(OpCode obj);
    public virtual int GetHashCode();
    public static bool op_Equality(OpCode a, OpCode b);
    public static bool op_Inequality(OpCode a, OpCode b);
    public virtual string ToString();
}
public class System.Reflection.Emit.OpCodes : object {
    public static OpCode Add;
    public static OpCode Add_Ovf;
    public static OpCode Add_Ovf_Un;
    public static OpCode And;
    public static OpCode Arglist;
    public static OpCode Beq;
    public static OpCode Beq_S;
    public static OpCode Bge;
    public static OpCode Bge_S;
    public static OpCode Bge_Un;
    public static OpCode Bge_Un_S;
    public static OpCode Bgt;
    public static OpCode Bgt_S;
    public static OpCode Bgt_Un;
    public static OpCode Bgt_Un_S;
    public static OpCode Ble;
    public static OpCode Ble_S;
    public static OpCode Ble_Un;
    public static OpCode Ble_Un_S;
    public static OpCode Blt;
    public static OpCode Blt_S;
    public static OpCode Blt_Un;
    public static OpCode Blt_Un_S;
    public static OpCode Bne_Un;
    public static OpCode Bne_Un_S;
    public static OpCode Box;
    public static OpCode Br;
    public static OpCode Break;
    public static OpCode Brfalse;
    public static OpCode Brfalse_S;
    public static OpCode Brtrue;
    public static OpCode Brtrue_S;
    public static OpCode Br_S;
    public static OpCode Call;
    public static OpCode Calli;
    public static OpCode Callvirt;
    public static OpCode Castclass;
    public static OpCode Ceq;
    public static OpCode Cgt;
    public static OpCode Cgt_Un;
    public static OpCode Ckfinite;
    public static OpCode Clt;
    public static OpCode Clt_Un;
    public static OpCode Constrained;
    public static OpCode Conv_I;
    public static OpCode Conv_I1;
    public static OpCode Conv_I2;
    public static OpCode Conv_I4;
    public static OpCode Conv_I8;
    public static OpCode Conv_Ovf_I;
    public static OpCode Conv_Ovf_I1;
    public static OpCode Conv_Ovf_I1_Un;
    public static OpCode Conv_Ovf_I2;
    public static OpCode Conv_Ovf_I2_Un;
    public static OpCode Conv_Ovf_I4;
    public static OpCode Conv_Ovf_I4_Un;
    public static OpCode Conv_Ovf_I8;
    public static OpCode Conv_Ovf_I8_Un;
    public static OpCode Conv_Ovf_I_Un;
    public static OpCode Conv_Ovf_U;
    public static OpCode Conv_Ovf_U1;
    public static OpCode Conv_Ovf_U1_Un;
    public static OpCode Conv_Ovf_U2;
    public static OpCode Conv_Ovf_U2_Un;
    public static OpCode Conv_Ovf_U4;
    public static OpCode Conv_Ovf_U4_Un;
    public static OpCode Conv_Ovf_U8;
    public static OpCode Conv_Ovf_U8_Un;
    public static OpCode Conv_Ovf_U_Un;
    public static OpCode Conv_R4;
    public static OpCode Conv_R8;
    public static OpCode Conv_R_Un;
    public static OpCode Conv_U;
    public static OpCode Conv_U1;
    public static OpCode Conv_U2;
    public static OpCode Conv_U4;
    public static OpCode Conv_U8;
    public static OpCode Cpblk;
    public static OpCode Cpobj;
    public static OpCode Div;
    public static OpCode Div_Un;
    public static OpCode Dup;
    public static OpCode Endfilter;
    public static OpCode Endfinally;
    public static OpCode Initblk;
    public static OpCode Initobj;
    public static OpCode Isinst;
    public static OpCode Jmp;
    public static OpCode Ldarg;
    public static OpCode Ldarga;
    public static OpCode Ldarga_S;
    public static OpCode Ldarg_0;
    public static OpCode Ldarg_1;
    public static OpCode Ldarg_2;
    public static OpCode Ldarg_3;
    public static OpCode Ldarg_S;
    public static OpCode Ldc_I4;
    public static OpCode Ldc_I4_0;
    public static OpCode Ldc_I4_1;
    public static OpCode Ldc_I4_2;
    public static OpCode Ldc_I4_3;
    public static OpCode Ldc_I4_4;
    public static OpCode Ldc_I4_5;
    public static OpCode Ldc_I4_6;
    public static OpCode Ldc_I4_7;
    public static OpCode Ldc_I4_8;
    public static OpCode Ldc_I4_M1;
    public static OpCode Ldc_I4_S;
    public static OpCode Ldc_I8;
    public static OpCode Ldc_R4;
    public static OpCode Ldc_R8;
    public static OpCode Ldelem;
    public static OpCode Ldelema;
    public static OpCode Ldelem_I;
    public static OpCode Ldelem_I1;
    public static OpCode Ldelem_I2;
    public static OpCode Ldelem_I4;
    public static OpCode Ldelem_I8;
    public static OpCode Ldelem_R4;
    public static OpCode Ldelem_R8;
    public static OpCode Ldelem_Ref;
    public static OpCode Ldelem_U1;
    public static OpCode Ldelem_U2;
    public static OpCode Ldelem_U4;
    public static OpCode Ldfld;
    public static OpCode Ldflda;
    public static OpCode Ldftn;
    public static OpCode Ldind_I;
    public static OpCode Ldind_I1;
    public static OpCode Ldind_I2;
    public static OpCode Ldind_I4;
    public static OpCode Ldind_I8;
    public static OpCode Ldind_R4;
    public static OpCode Ldind_R8;
    public static OpCode Ldind_Ref;
    public static OpCode Ldind_U1;
    public static OpCode Ldind_U2;
    public static OpCode Ldind_U4;
    public static OpCode Ldlen;
    public static OpCode Ldloc;
    public static OpCode Ldloca;
    public static OpCode Ldloca_S;
    public static OpCode Ldloc_0;
    public static OpCode Ldloc_1;
    public static OpCode Ldloc_2;
    public static OpCode Ldloc_3;
    public static OpCode Ldloc_S;
    public static OpCode Ldnull;
    public static OpCode Ldobj;
    public static OpCode Ldsfld;
    public static OpCode Ldsflda;
    public static OpCode Ldstr;
    public static OpCode Ldtoken;
    public static OpCode Ldvirtftn;
    public static OpCode Leave;
    public static OpCode Leave_S;
    public static OpCode Localloc;
    public static OpCode Mkrefany;
    public static OpCode Mul;
    public static OpCode Mul_Ovf;
    public static OpCode Mul_Ovf_Un;
    public static OpCode Neg;
    public static OpCode Newarr;
    public static OpCode Newobj;
    public static OpCode Nop;
    public static OpCode Not;
    public static OpCode Or;
    public static OpCode Pop;
    public static OpCode Prefix1;
    public static OpCode Prefix2;
    public static OpCode Prefix3;
    public static OpCode Prefix4;
    public static OpCode Prefix5;
    public static OpCode Prefix6;
    public static OpCode Prefix7;
    public static OpCode Prefixref;
    public static OpCode Readonly;
    public static OpCode Refanytype;
    public static OpCode Refanyval;
    public static OpCode Rem;
    public static OpCode Rem_Un;
    public static OpCode Ret;
    public static OpCode Rethrow;
    public static OpCode Shl;
    public static OpCode Shr;
    public static OpCode Shr_Un;
    public static OpCode Sizeof;
    public static OpCode Starg;
    public static OpCode Starg_S;
    public static OpCode Stelem;
    public static OpCode Stelem_I;
    public static OpCode Stelem_I1;
    public static OpCode Stelem_I2;
    public static OpCode Stelem_I4;
    public static OpCode Stelem_I8;
    public static OpCode Stelem_R4;
    public static OpCode Stelem_R8;
    public static OpCode Stelem_Ref;
    public static OpCode Stfld;
    public static OpCode Stind_I;
    public static OpCode Stind_I1;
    public static OpCode Stind_I2;
    public static OpCode Stind_I4;
    public static OpCode Stind_I8;
    public static OpCode Stind_R4;
    public static OpCode Stind_R8;
    public static OpCode Stind_Ref;
    public static OpCode Stloc;
    public static OpCode Stloc_0;
    public static OpCode Stloc_1;
    public static OpCode Stloc_2;
    public static OpCode Stloc_3;
    public static OpCode Stloc_S;
    public static OpCode Stobj;
    public static OpCode Stsfld;
    public static OpCode Sub;
    public static OpCode Sub_Ovf;
    public static OpCode Sub_Ovf_Un;
    public static OpCode Switch;
    public static OpCode Tailcall;
    public static OpCode Throw;
    public static OpCode Unaligned;
    public static OpCode Unbox;
    public static OpCode Unbox_Any;
    public static OpCode Volatile;
    public static OpCode Xor;
    public static bool TakesSingleByteArgument(OpCode inst);
}
public enum System.Reflection.Emit.OpCodeType : Enum {
    public int value__;
    [ObsoleteAttribute("OpCodeType.Annotation has been deprecated and is not supported.")]
public static OpCodeType Annotation;
    public static OpCodeType Macro;
    public static OpCodeType Nternal;
    public static OpCodeType Objmodel;
    public static OpCodeType Prefix;
    public static OpCodeType Primitive;
}
public enum System.Reflection.Emit.OperandType : Enum {
    public int value__;
    public static OperandType InlineBrTarget;
    public static OperandType InlineField;
    public static OperandType InlineI;
    public static OperandType InlineI8;
    public static OperandType InlineMethod;
    public static OperandType InlineNone;
    [ObsoleteAttribute("OperandType.InlinePhi has been deprecated and is not supported.")]
public static OperandType InlinePhi;
    public static OperandType InlineR;
    public static OperandType InlineSig;
    public static OperandType InlineString;
    public static OperandType InlineSwitch;
    public static OperandType InlineTok;
    public static OperandType InlineType;
    public static OperandType InlineVar;
    public static OperandType ShortInlineBrTarget;
    public static OperandType ShortInlineI;
    public static OperandType ShortInlineR;
    public static OperandType ShortInlineVar;
}
public enum System.Reflection.Emit.PackingSize : Enum {
    public int value__;
    public static PackingSize Unspecified;
    public static PackingSize Size1;
    public static PackingSize Size2;
    public static PackingSize Size4;
    public static PackingSize Size8;
    public static PackingSize Size16;
    public static PackingSize Size32;
    public static PackingSize Size64;
    public static PackingSize Size128;
}
public enum System.Reflection.Emit.StackBehaviour : Enum {
    public int value__;
    public static StackBehaviour Pop0;
    public static StackBehaviour Pop1;
    public static StackBehaviour Pop1_pop1;
    public static StackBehaviour Popi;
    public static StackBehaviour Popi_pop1;
    public static StackBehaviour Popi_popi;
    public static StackBehaviour Popi_popi8;
    public static StackBehaviour Popi_popi_popi;
    public static StackBehaviour Popi_popr4;
    public static StackBehaviour Popi_popr8;
    public static StackBehaviour Popref;
    public static StackBehaviour Popref_pop1;
    public static StackBehaviour Popref_popi;
    public static StackBehaviour Popref_popi_popi;
    public static StackBehaviour Popref_popi_popi8;
    public static StackBehaviour Popref_popi_popr4;
    public static StackBehaviour Popref_popi_popr8;
    public static StackBehaviour Popref_popi_popref;
    public static StackBehaviour Push0;
    public static StackBehaviour Push1;
    public static StackBehaviour Push1_push1;
    public static StackBehaviour Pushi;
    public static StackBehaviour Pushi8;
    public static StackBehaviour Pushr4;
    public static StackBehaviour Pushr8;
    public static StackBehaviour Pushref;
    public static StackBehaviour Varpop;
    public static StackBehaviour Varpush;
    public static StackBehaviour Popref_popi_pop1;
}
