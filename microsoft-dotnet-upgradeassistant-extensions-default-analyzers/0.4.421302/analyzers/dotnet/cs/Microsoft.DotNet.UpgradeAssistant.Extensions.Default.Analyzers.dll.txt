[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.ApiAlertAnalyzer : DiagnosticAnalyzer {
    public static string BaseDiagnosticId;
    private static string Category;
    private static string AttributeSuffix;
    private static string DefaultApiAlertsResourceName;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static DiagnosticDescriptor ThisAnalyzerDiagnostic;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DiagnosticDescriptor <ActiveAnalyzerRule>k__BackingField;
    private static Regex GenericParameterMatcher;
    protected DiagnosticDescriptor ActiveAnalyzerRule { get; }
    protected Lazy`1<IEnumerable`1<TargetSyntaxMessage>> TargetSyntaxes { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static ApiAlertAnalyzer();
    [CompilerGeneratedAttribute]
protected virtual DiagnosticDescriptor get_ActiveAnalyzerRule();
    protected virtual Lazy`1<IEnumerable`1<TargetSyntaxMessage>> get_TargetSyntaxes();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void AnalyzeIdentifier(SyntaxNodeAnalysisContext context, IEnumerable`1<TargetSyntaxMessage> targetSyntaxMessages);
    protected virtual bool SkipDiagnostic(SyntaxNodeAnalysisContext context, string detectedDiagnosticId);
    private static bool AnalyzeNamespace(SyntaxNodeAnalysisContext context, string qualifiedName, TargetSyntax targetSyntax);
    private static bool AnalyzeType(SyntaxNodeAnalysisContext context, string qualifiedName, TargetSyntax targetSyntax);
    private static bool AnalyzeMember(SyntaxNodeAnalysisContext context, string qualifiedName, TargetSyntax targetSyntax);
    private static string UnbindGenericName(string name);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private DiagnosticDescriptor <get_SupportedDiagnostics>b__14_0(TargetSyntaxMessage t);
    [CompilerGeneratedAttribute]
private void <Initialize>b__15_0(CompilationStartAnalysisContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ApplicableComponentsAttribute("32")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.AttributeUpgradeAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static string Category;
    private static string AttributeSuffix;
    public static string NewTypeKey;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static DiagnosticDescriptor Rule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static AttributeUpgradeAnalyzer();
    public virtual void Initialize(AnalysisContext context);
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    private static void AnalyzeCSharpAttribute(SyntaxNodeAnalysisContext context, IEnumerable`1<TypeMapping> mappings);
    private static void AnalyzeVBAttribute(SyntaxNodeAnalysisContext context, IEnumerable`1<TypeMapping> mappings);
    private static void AnalyzeAttribute(SyntaxNodeAnalysisContext context, IEnumerable`1<TypeMapping> mappings, string attributeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.BinaryFormatterUnsafeDeserializeAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static string Category;
    internal static string QualifiedTargetSymbolName;
    internal static string TargetTypeSymbolNamespace;
    internal static string TargetTypeSymbolName;
    internal static string TargetMember;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static DiagnosticDescriptor Rule;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private static NameMatcher <BinaryFormatterUnsafeDeserialize>k__BackingField;
    public static NameMatcher BinaryFormatterUnsafeDeserialize { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static BinaryFormatterUnsafeDeserializeAnalyzer();
    [CompilerGeneratedAttribute]
public static NameMatcher get_BinaryFormatterUnsafeDeserialize();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void AnalyzeMemberAccessExpressions(SyntaxNodeAnalysisContext context);
    private static bool IsSymbolAConstructorInstanceOfBinaryFormatter(ISymbol theSymbol);
    private static bool IsSymbolAVariableOfTheTypeBinaryFormatter(ISymbol theSymbol);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.DiagnosticAnalyzerExtensions : object {
    [ExtensionAttribute]
public static void RegisterMemberAccess(AnalysisContext context, Action`1<InvocationAnalysisContext> action);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ApplicableComponentsAttribute("32")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.HtmlHelperAnalyzer : DiagnosticAnalyzer {
    public static string NewIdentifierKey;
    public static string DiagnosticId;
    private static string Category;
    private static string HtmlHelperName;
    private static string SystemWebHtmlHelperName;
    private static string AspNetCoreHtmlHelperName;
    private static string AspNetCoreIHtmlHelperName;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static DiagnosticDescriptor Rule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static HtmlHelperAnalyzer();
    public virtual void Initialize(AnalysisContext context);
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    private void AnalyzeIdentifiers(SyntaxNodeAnalysisContext context);
    private static string GetReplacementType(SyntaxNode node);
    [CompilerGeneratedAttribute]
private void <Initialize>b__7_0(CompilationStartAnalysisContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ApplicableComponentsAttribute("34")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.HttpContextCurrentAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static string Category;
    private static string TargetTypeSimpleName;
    private static string TargetMember;
    private static string TargetPropertySymbolName;
    private static String[] TargetTypeSymbolNames;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static DiagnosticDescriptor Rule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static HttpContextCurrentAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void AnalyzeMemberAccessExpressionsCsharp(SyntaxNodeAnalysisContext context);
    private void AnalyzeMemberAccessExpressionsVb(SyntaxNodeAnalysisContext context);
    [NullableContextAttribute("2")]
private static void AnalyzeMemberAccessExpressions(SyntaxNodeAnalysisContext context, SyntaxNode memberAccessExpression, SyntaxNode accessedIdentifier, string identifierValue);
    private static bool TryMatchSymbol(SyntaxNodeAnalysisContext context, SyntaxNode accessedIdentifier);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ApplicableComponentsAttribute("34")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.HttpContextIsDebuggingEnabledAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static string Category;
    private static string MemberName;
    private static String[] HttpContextTypes;
    private static String[] WellKnownInstances;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static DiagnosticDescriptor Rule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static HttpContextIsDebuggingEnabledAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void AnalyzeMemberAccess(SyntaxNodeAnalysisContext context);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ApiAlertGenericDescription { get; }
    internal static string ApiAlertGenericMessageFormat { get; }
    internal static string ApiAlertGenericTitle { get; }
    internal static string AttributeUpgradeDescription { get; }
    internal static string AttributeUpgradeMessageFormat { get; }
    internal static string AttributeUpgradeTitle { get; }
    internal static string BinaryFormatterUnsafeDeserializeDescription { get; }
    internal static string BinaryFormatterUnsafeDeserializeMessageFormat { get; }
    internal static string BinaryFormatterUnsafeDeserializeTitle { get; }
    internal static string FilterDescription { get; }
    internal static string FilterMessageFormat { get; }
    internal static string FilterTitle { get; }
    internal static string HelperResultDescription { get; }
    internal static string HelperResultMessageFormat { get; }
    internal static string HelperResultTitle { get; }
    internal static string HtmlHelperDescription { get; }
    internal static string HtmlHelperMessageFormat { get; }
    internal static string HtmlHelperTitle { get; }
    internal static string HtmlStringDescription { get; }
    internal static string HtmlStringMessageFormat { get; }
    internal static string HtmlStringTitle { get; }
    internal static string HttpContextCurrentDescription { get; }
    internal static string HttpContextCurrentMessageFormat { get; }
    internal static string HttpContextCurrentTitle { get; }
    internal static string HttpContextDebuggingEnabledDescription { get; }
    internal static string HttpContextDebuggingEnabledMessageFormat { get; }
    internal static string HttpContextDebuggingEnabledTitle { get; }
    internal static string ResultTypeDescription { get; }
    internal static string ResultTypeMessageFormat { get; }
    internal static string ResultTypeTitle { get; }
    internal static string TypeUpgradeDescription { get; }
    internal static string TypeUpgradeMessageFormat { get; }
    internal static string TypeUpgradeTitle { get; }
    internal static string UrlHelperDescription { get; }
    internal static string UrlHelperMessageFormat { get; }
    internal static string UrlHelperTitle { get; }
    internal static string UsingSystemDeployment { get; }
    internal static string UsingSystemDeploymentDescription { get; }
    internal static string UsingSystemWebDescription { get; }
    internal static string UsingSystemWebMessageFormat { get; }
    internal static string UsingSystemWebTitle { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ApiAlertGenericDescription();
    internal static string get_ApiAlertGenericMessageFormat();
    internal static string get_ApiAlertGenericTitle();
    internal static string get_AttributeUpgradeDescription();
    internal static string get_AttributeUpgradeMessageFormat();
    internal static string get_AttributeUpgradeTitle();
    internal static string get_BinaryFormatterUnsafeDeserializeDescription();
    internal static string get_BinaryFormatterUnsafeDeserializeMessageFormat();
    internal static string get_BinaryFormatterUnsafeDeserializeTitle();
    internal static string get_FilterDescription();
    internal static string get_FilterMessageFormat();
    internal static string get_FilterTitle();
    internal static string get_HelperResultDescription();
    internal static string get_HelperResultMessageFormat();
    internal static string get_HelperResultTitle();
    internal static string get_HtmlHelperDescription();
    internal static string get_HtmlHelperMessageFormat();
    internal static string get_HtmlHelperTitle();
    internal static string get_HtmlStringDescription();
    internal static string get_HtmlStringMessageFormat();
    internal static string get_HtmlStringTitle();
    internal static string get_HttpContextCurrentDescription();
    internal static string get_HttpContextCurrentMessageFormat();
    internal static string get_HttpContextCurrentTitle();
    internal static string get_HttpContextDebuggingEnabledDescription();
    internal static string get_HttpContextDebuggingEnabledMessageFormat();
    internal static string get_HttpContextDebuggingEnabledTitle();
    internal static string get_ResultTypeDescription();
    internal static string get_ResultTypeMessageFormat();
    internal static string get_ResultTypeTitle();
    internal static string get_TypeUpgradeDescription();
    internal static string get_TypeUpgradeMessageFormat();
    internal static string get_TypeUpgradeTitle();
    internal static string get_UrlHelperDescription();
    internal static string get_UrlHelperMessageFormat();
    internal static string get_UrlHelperTitle();
    internal static string get_UsingSystemDeployment();
    internal static string get_UsingSystemDeploymentDescription();
    internal static string get_UsingSystemWebDescription();
    internal static string get_UsingSystemWebMessageFormat();
    internal static string get_UsingSystemWebTitle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.SystemDeploymentAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static string Category;
    private static string AssemblyName;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static DiagnosticDescriptor Rule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static SystemDeploymentAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.TargetSyntax : object {
    [NullableAttribute("2")]
private string _fullName;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <SimpleName>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private TargetSyntaxType <SyntaxType>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <AlertOnAmbiguousMatch>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NameMatcher <NameMatcher>k__BackingField;
    public string FullName { get; private set; }
    public string SimpleName { get; private set; }
    public TargetSyntaxType SyntaxType { get; }
    public bool AlertOnAmbiguousMatch { get; }
    public NameMatcher NameMatcher { get; }
    public TargetSyntax(string fullName, TargetSyntaxType syntaxType, bool alertOnAmbiguousMatch);
    public string get_FullName();
    private Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FullName(string value);
    [CompilerGeneratedAttribute]
public string get_SimpleName();
    [CompilerGeneratedAttribute]
private Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SimpleName(string value);
    [CompilerGeneratedAttribute]
public TargetSyntaxType get_SyntaxType();
    [CompilerGeneratedAttribute]
public bool get_AlertOnAmbiguousMatch();
    [CompilerGeneratedAttribute]
public NameMatcher get_NameMatcher();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.TargetSyntaxMessage : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IEnumerable`1<TargetSyntax> <TargetSyntaxes>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Id { get; public set; }
    public IEnumerable`1<TargetSyntax> TargetSyntaxes { get; public set; }
    public string Message { get; public set; }
    public TargetSyntaxMessage(string Id, IEnumerable`1<TargetSyntax> TargetSyntaxes, string Message);
    [CompilerGeneratedAttribute]
protected TargetSyntaxMessage(TargetSyntaxMessage original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Id(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<TargetSyntax> get_TargetSyntaxes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TargetSyntaxes(IEnumerable`1<TargetSyntax> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Message(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TargetSyntaxMessage left, TargetSyntaxMessage right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TargetSyntaxMessage left, TargetSyntaxMessage right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TargetSyntaxMessage other);
    [CompilerGeneratedAttribute]
public virtual TargetSyntaxMessage <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Id, IEnumerable`1& TargetSyntaxes, String& Message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.TargetSyntaxMessageLoader : object {
    private static string TargetSyntaxMessageFileSuffix;
    private static Char[] NewLineCharacters;
    private static Char[] IdMessageDelimiters;
    private static Char[] ApiSyntaxDelimiters;
    private static TargetSyntaxMessageLoader();
    [IteratorStateMachineAttribute("Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.TargetSyntaxMessageLoader/<LoadMappings>d__4")]
public static IEnumerable`1<TargetSyntaxMessage> LoadMappings(ImmutableArray`1<AdditionalText> additionalTexts);
    public static IEnumerable`1<TargetSyntaxMessage> LoadMappings(string serializedContents);
    [CompilerGeneratedAttribute]
internal static void <LoadMappings>g__AddNextMessageToRet|5_0(<>c__DisplayClass5_0& );
}
public enum Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.TargetSyntaxType : Enum {
    public int value__;
    public static TargetSyntaxType Namespace;
    public static TargetSyntaxType Type;
    public static TargetSyntaxType Member;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.TypeMapLoader : object {
    private static string TypeMapFileSuffix;
    [IteratorStateMachineAttribute("Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.TypeMapLoader/<LoadMappings>d__1")]
public static IEnumerable`1<TypeMapping> LoadMappings(ImmutableArray`1<AdditionalText> additionalTexts);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.TypeMapping : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <OldName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <NewName>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <SimpleName>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string OldName { get; public set; }
    [NullableAttribute("2")]
public string NewName { get; public set; }
    public string SimpleName { get; public set; }
    public TypeMapping(string oldName, string newName);
    [CompilerGeneratedAttribute]
protected TypeMapping(TypeMapping original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_OldName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OldName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_NewName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NewName(string value);
    [CompilerGeneratedAttribute]
public string get_SimpleName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SimpleName(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TypeMapping left, TypeMapping right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TypeMapping left, TypeMapping right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TypeMapping other);
    [CompilerGeneratedAttribute]
public virtual TypeMapping <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.TypeUpgradeAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    public static string NewIdentifierKey;
    private static string Category;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static DiagnosticDescriptor Rule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static TypeUpgradeAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private static Diagnostic CreateDiagnostic(Location location, ImmutableDictionary`2<string, string> properties, Object[] messageArgs);
    private static void AnalyzeCSharpIdentifier(SyntaxNodeAnalysisContext context, IEnumerable`1<TypeMapping> mappings);
    private static void AnalyzeVBIdentifier(SyntaxNodeAnalysisContext context, IEnumerable`1<TypeMapping> mappings);
    private static void AnalyzeIdentifier(SyntaxNodeAnalysisContext context, IEnumerable`1<TypeMapping> mappings, string simpleName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ApplicableComponentsAttribute("32")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.UrlHelperAnalyzer : DiagnosticAnalyzer {
    public static string NewIdentifierKey;
    public static string DiagnosticId;
    private static string Category;
    private static string UrlHelperName;
    private static string SystemWebUrlHelperName;
    private static string AspNetCoreUrlHelperName;
    private static string AspNetCoreIUrlHelperName;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static DiagnosticDescriptor Rule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static UrlHelperAnalyzer();
    public virtual void Initialize(AnalysisContext context);
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    private void AnalyzeIdentifiers(SyntaxNodeAnalysisContext context);
    private static string GetReplacementType(SyntaxNode node);
    [CompilerGeneratedAttribute]
private void <Initialize>b__7_0(CompilationStartAnalysisContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ApplicableComponentsAttribute("32")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.UsingSystemWebAnalyzer : DiagnosticAnalyzer {
    public static string DiagnosticId;
    private static string Category;
    private static String[] DisallowedNamespaces;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static DiagnosticDescriptor Rule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    private static UsingSystemWebAnalyzer();
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void AnalyzeUsingStatements(SyntaxNodeAnalysisContext context);
    [CompilerGeneratedAttribute]
private void <Initialize>b__9_0(CompilationStartAnalysisContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[ApplicableComponentsAttribute("2048")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers.WinUIApiAlertAnalyzer : ApiAlertAnalyzer {
    private static string WinUIApiAlertsResourceName;
    public static string BaseDiagnosticId;
    private static string Category;
    private static LocalizableString Title;
    private static LocalizableString MessageFormat;
    private static LocalizableString Description;
    private static DiagnosticDescriptor ThisAnalyzerDiagnostic;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DiagnosticDescriptor <ActiveAnalyzerRule>k__BackingField;
    protected DiagnosticDescriptor ActiveAnalyzerRule { get; }
    protected Lazy`1<IEnumerable`1<TargetSyntaxMessage>> TargetSyntaxes { get; }
    private static WinUIApiAlertAnalyzer();
    [CompilerGeneratedAttribute]
protected virtual DiagnosticDescriptor get_ActiveAnalyzerRule();
    protected virtual bool SkipDiagnostic(SyntaxNodeAnalysisContext context, string detectedDiagnosticId);
    protected virtual Lazy`1<IEnumerable`1<TargetSyntaxMessage>> get_TargetSyntaxes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.UpgradeAssistant.Extensions.Default.NameMatcher : object {
    private String[] _typeName;
    [NullableAttribute("2")]
private string _memberName;
    private ConcurrentDictionary`2<string, bool> _partialMatchCache;
    public string TypeName { get; }
    private NameMatcher(string typeName, string memberName);
    public static NameMatcher MatchType(string typeName);
    public static NameMatcher MatchMemberAccess(string memberName);
    public static NameMatcher MatchMemberAccess(string typeName, string memberName);
    public string get_TypeName();
    public bool MatchesPartiallyQualifiedType(string partiallyQualifiedTypeName, StringComparison stringComparison);
    public bool MatchesPartiallyQualifiedMember(string partiallyQualifiedMemberName, StringComparison stringComparison);
    public bool Matches(IPropertySymbol property);
    public bool MatchesConstructorOfType(ISymbol theSymbol);
    [NullableContextAttribute("2")]
public bool Matches(ITypeSymbol typeSymbol);
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class System.SR : object {
    public static string Format(string str, object arg0);
    public static string Format(string str, object arg0, object arg1);
    [NullableContextAttribute("2")]
public static string Format(string str, object arg0, object arg1, object arg2);
}
