[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal static class Microsoft.Extensions.ApiDescription.Client.CSharpIdentifier : object {
    private static bool IsIdentifierStart(char character);
    public static bool IsIdentifierPart(char character);
    private static bool IsIdentifierPartByUnicodeCategory(char character);
    public static string SanitizeIdentifier(string inputName);
}
public class Microsoft.Extensions.ApiDescription.Client.GetCurrentOpenApiReference : Task {
    [CompilerGeneratedAttribute]
private string <Input>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <Outputs>k__BackingField;
    [RequiredAttribute]
public string Input { get; public set; }
    [OutputAttribute]
public ITaskItem[] Outputs { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Input();
    [CompilerGeneratedAttribute]
public void set_Input(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Outputs();
    [CompilerGeneratedAttribute]
public void set_Outputs(ITaskItem[] value);
    public virtual bool Execute();
}
public class Microsoft.Extensions.ApiDescription.Client.GetOpenApiReferenceMetadata : Task {
    private static string TypeScriptLanguageName;
    [CompilerGeneratedAttribute]
private string <Extension>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <Inputs>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <Outputs>k__BackingField;
    [RequiredAttribute]
public string Extension { get; public set; }
    [RequiredAttribute]
public string Namespace { get; public set; }
    public string OutputDirectory { get; public set; }
    [RequiredAttribute]
public ITaskItem[] Inputs { get; public set; }
    [OutputAttribute]
public ITaskItem[] Outputs { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Extension();
    [CompilerGeneratedAttribute]
public void set_Extension(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_OutputDirectory();
    [CompilerGeneratedAttribute]
public void set_OutputDirectory(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Inputs();
    [CompilerGeneratedAttribute]
public void set_Inputs(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Outputs();
    [CompilerGeneratedAttribute]
public void set_Outputs(ITaskItem[] value);
    public virtual bool Execute();
}
public static class Microsoft.Extensions.ApiDescription.Client.MetadataSerializer : object {
    private static Char[] CharsToEscape;
    private static HashSet`1<char> CharsToEscapeHash;
    private static MetadataSerializer();
    public static void SetMetadata(ITaskItem item, string key, string value);
    public static string SerializeMetadata(ITaskItem item);
    public static ITaskItem DeserializeMetadata(string value);
    private static void EscapeValue(string value, StringBuilder builder);
    private static char HexDigitChar(int x);
}
internal static class Microsoft.Extensions.ApiDescription.Client.Resources : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string DuplicateFileOutputPaths { get; }
    internal static string InvalidEmptyMetadataValue { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    private static string GetResourceString(string resourceKey, String[] formatterNames);
    internal static string get_DuplicateFileOutputPaths();
    internal static string FormatDuplicateFileOutputPaths(object p0);
    internal static string get_InvalidEmptyMetadataValue();
    internal static string FormatInvalidEmptyMetadataValue(object p0, object p1, object p2);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
