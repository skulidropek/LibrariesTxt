[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.EntityFrameworkCoreHealthChecksBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IHealthChecksBuilder AddDbContextCheck(IHealthChecksBuilder builder, string name, Nullable`1<HealthStatus> failureStatus, IEnumerable`1<string> tags, Func`3<TContext, CancellationToken, Task`1<bool>> customTestQuery);
}
internal class Microsoft.Extensions.Diagnostics.HealthChecks.DbContextHealthCheck`1 : object {
    private static Func`3<TContext, CancellationToken, Task`1<bool>> DefaultTestQuery;
    private TContext _dbContext;
    private IOptionsMonitor`1<DbContextHealthCheckOptions`1<TContext>> _options;
    [NullableContextAttribute("1")]
public DbContextHealthCheck`1(TContext dbContext, IOptionsMonitor`1<DbContextHealthCheckOptions`1<TContext>> options);
    private static DbContextHealthCheck`1();
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.Extensions.Diagnostics.HealthChecks.DbContextHealthCheck`1/<CheckHealthAsync>d__4")]
public sealed virtual Task`1<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken);
}
internal class Microsoft.Extensions.Diagnostics.HealthChecks.DbContextHealthCheckOptions`1 : object {
    [CompilerGeneratedAttribute]
private Func`3<TContext, CancellationToken, Task`1<bool>> <CustomTestQuery>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`3<TContext, CancellationToken, Task`1<bool>> CustomTestQuery { get; public set; }
    [CompilerGeneratedAttribute]
public Func`3<TContext, CancellationToken, Task`1<bool>> get_CustomTestQuery();
    [CompilerGeneratedAttribute]
public void set_CustomTestQuery(Func`3<TContext, CancellationToken, Task`1<bool>> value);
}
