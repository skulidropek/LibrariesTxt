[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("Count = {GetCount()}")]
[DebuggerTypeProxyAttribute("Microsoft.AspNetCore.Http.Features.FeatureCollection/FeatureCollectionDebugView")]
public class Microsoft.AspNetCore.Http.Features.FeatureCollection : object {
    private static KeyComparer FeatureKeyComparer;
    private IFeatureCollection _defaults;
    private int _initialCapacity;
    private IDictionary`2<Type, object> _features;
    private Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _containerRevision;
    public int Revision { get; }
    public bool IsReadOnly { get; }
    [NullableAttribute("2")]
public object Item { get; public set; }
    public FeatureCollection(int initialCapacity);
    [NullableContextAttribute("1")]
public FeatureCollection(IFeatureCollection defaults);
    private static FeatureCollection();
    public virtual int get_Revision();
    public sealed virtual bool get_IsReadOnly();
    [NullableContextAttribute("1")]
public sealed virtual object get_Item(Type key);
    [NullableContextAttribute("1")]
public sealed virtual void set_Item(Type key, object value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Http.Features.FeatureCollection/<GetEnumerator>d__16")]
public sealed virtual IEnumerator`1<KeyValuePair`2<Type, object>> GetEnumerator();
    [NullableContextAttribute("2")]
public sealed virtual TFeature Get();
    [NullableContextAttribute("2")]
public sealed virtual void Set(TFeature instance);
    private int GetCount();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Http.Features.FeatureCollectionExtensions : object {
    [ExtensionAttribute]
public static TFeature GetRequiredFeature(IFeatureCollection featureCollection);
    [ExtensionAttribute]
public static object GetRequiredFeature(IFeatureCollection featureCollection, Type key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Http.Features.FeatureReference`1 : ValueType {
    private T _feature;
    private int _revision;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static FeatureReference`1<T> Default;
    private FeatureReference`1(T feature, int revision);
    private static FeatureReference`1();
    public T Fetch(IFeatureCollection features);
    public T Update(IFeatureCollection features, T feature);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Http.Features.FeatureReferences`1 : ValueType {
    [CompilerGeneratedAttribute]
private IFeatureCollection <Collection>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [NullableAttribute("2")]
public TCache Cache;
    public IFeatureCollection Collection { get; private set; }
    public int Revision { get; private set; }
    public FeatureReferences`1(IFeatureCollection collection);
    public void Initalize(IFeatureCollection collection);
    public void Initalize(IFeatureCollection collection, int revision);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public IFeatureCollection get_Collection();
    [CompilerGeneratedAttribute]
private void set_Collection(IFeatureCollection value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Revision();
    [CompilerGeneratedAttribute]
private void set_Revision(int value);
    [NullableContextAttribute("2")]
public TFeature Fetch(TFeature& cached, TState state, Func`2<TState, TFeature> factory);
    private TFeature UpdateCached(TFeature& cached, TState state, Func`2<TState, TFeature> factory, int revision, bool flush);
    [NullableContextAttribute("2")]
public TFeature Fetch(TFeature& cached, Func`2<IFeatureCollection, TFeature> factory);
    private static int ContextDisposed();
    private static void ThrowContextDisposed();
}
[NullableContextAttribute("2")]
[DefaultMemberAttribute("Item")]
public interface Microsoft.AspNetCore.Http.Features.IFeatureCollection {
    public bool IsReadOnly { get; }
    public int Revision { get; }
    public object Item { get; public set; }
    public abstract virtual bool get_IsReadOnly();
    public abstract virtual int get_Revision();
    [NullableContextAttribute("1")]
public abstract virtual object get_Item(Type key);
    [NullableContextAttribute("1")]
public abstract virtual void set_Item(Type key, object value);
    public abstract virtual TFeature Get();
    public abstract virtual void Set(TFeature instance);
}
internal static class Microsoft.AspNetCore.Shared.ArgumentNullThrowHelper : object {
    public static void ThrowIfNull(object argument, string paramName);
    [DoesNotReturnAttribute]
internal static void Throw(string paramName);
}
internal static class Microsoft.AspNetCore.Shared.ArgumentOutOfRangeThrowHelper : object {
    [DoesNotReturnAttribute]
private static void ThrowZero(string paramName, T value);
    [DoesNotReturnAttribute]
private static void ThrowNegative(string paramName, T value);
    [DoesNotReturnAttribute]
private static void ThrowNegativeOrZero(string paramName, T value);
    [DoesNotReturnAttribute]
private static void ThrowGreater(string paramName, T value, T other);
    [DoesNotReturnAttribute]
private static void ThrowGreaterEqual(string paramName, T value, T other);
    [DoesNotReturnAttribute]
private static void ThrowLess(string paramName, T value, T other);
    [DoesNotReturnAttribute]
private static void ThrowLessEqual(string paramName, T value, T other);
    public static void ThrowIfZero(int value, string paramName);
    public static void ThrowIfNegative(int value, string paramName);
    public static void ThrowIfNegative(long value, string paramName);
    public static void ThrowIfNegativeOrZero(int value, string paramName);
    public static void ThrowIfGreaterThan(T value, T other, string paramName);
    public static void ThrowIfGreaterThanOrEqual(T value, T other, string paramName);
    public static void ThrowIfLessThan(T value, T other, string paramName);
    public static void ThrowIfLessThanOrEqual(T value, T other, string paramName);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
