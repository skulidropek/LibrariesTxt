internal static class Interop : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public interface Microsoft.Extensions.Hosting.Systemd.ISystemdNotifier {
    public bool IsEnabled { get; }
    public abstract virtual void Notify(ServiceState state);
    public abstract virtual bool get_IsEnabled();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Hosting.Systemd.ServiceState : ValueType {
    private Byte[] _data;
    public static ServiceState Ready;
    public static ServiceState Stopping;
    public ServiceState(string state);
    private static ServiceState();
    public virtual string ToString();
    internal Byte[] GetData();
}
public static class Microsoft.Extensions.Hosting.Systemd.SystemdHelpers : object {
    private static Nullable`1<bool> _isSystemdService;
    public static bool IsSystemdService();
    private static bool GetIsSystemdService();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[UnsupportedOSPlatformAttribute("android")]
[UnsupportedOSPlatformAttribute("browser")]
[UnsupportedOSPlatformAttribute("ios")]
[UnsupportedOSPlatformAttribute("maccatalyst")]
[UnsupportedOSPlatformAttribute("tvos")]
public class Microsoft.Extensions.Hosting.Systemd.SystemdLifetime : object {
    private CancellationTokenRegistration _applicationStartedRegistration;
    private CancellationTokenRegistration _applicationStoppingRegistration;
    [CompilerGeneratedAttribute]
private IHostApplicationLifetime <ApplicationLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private IHostEnvironment <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private ISystemdNotifier <SystemdNotifier>k__BackingField;
    private PosixSignalRegistration _sigTermRegistration;
    private IHostApplicationLifetime ApplicationLifetime { get; }
    private IHostEnvironment Environment { get; }
    private ILogger Logger { get; }
    private ISystemdNotifier SystemdNotifier { get; }
    public SystemdLifetime(IHostEnvironment environment, IHostApplicationLifetime applicationLifetime, ISystemdNotifier systemdNotifier, ILoggerFactory loggerFactory);
    [CompilerGeneratedAttribute]
private IHostApplicationLifetime get_ApplicationLifetime();
    [CompilerGeneratedAttribute]
private IHostEnvironment get_Environment();
    [CompilerGeneratedAttribute]
private ILogger get_Logger();
    [CompilerGeneratedAttribute]
private ISystemdNotifier get_SystemdNotifier();
    public sealed virtual Task StopAsync(CancellationToken cancellationToken);
    public sealed virtual Task WaitForStartAsync(CancellationToken cancellationToken);
    private void RegisterShutdownHandlers();
    private void OnApplicationStarted();
    private void OnApplicationStopping();
    public sealed virtual void Dispose();
    private void UnregisterShutdownHandlers();
    private void HandlePosixSignal(PosixSignalContext context);
}
[UnsupportedOSPlatformAttribute("browser")]
public class Microsoft.Extensions.Hosting.Systemd.SystemdNotifier : object {
    private static string NOTIFY_SOCKET;
    private string _socketPath;
    public bool IsEnabled { get; }
    internal SystemdNotifier(string socketPath);
    public sealed virtual bool get_IsEnabled();
    public sealed virtual void Notify(ServiceState state);
    private static string GetNotifySocketPath();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Hosting.SystemdHostBuilderExtensions : object {
    [ExtensionAttribute]
public static IHostBuilder UseSystemd(IHostBuilder hostBuilder);
    [ExtensionAttribute]
public static IServiceCollection AddSystemd(IServiceCollection services);
    private static void AddSystemdLifetime(IServiceCollection services);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("64")]
internal class System.Runtime.InteropServices.LibraryImportAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <LibraryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntryPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private StringMarshalling <StringMarshalling>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <StringMarshallingCustomType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetLastError>k__BackingField;
    public string LibraryName { get; }
    public string EntryPoint { get; public set; }
    public StringMarshalling StringMarshalling { get; public set; }
    public Type StringMarshallingCustomType { get; public set; }
    public bool SetLastError { get; public set; }
    public LibraryImportAttribute(string libraryName);
    [CompilerGeneratedAttribute]
public string get_LibraryName();
    [CompilerGeneratedAttribute]
public string get_EntryPoint();
    [CompilerGeneratedAttribute]
public void set_EntryPoint(string value);
    [CompilerGeneratedAttribute]
public StringMarshalling get_StringMarshalling();
    [CompilerGeneratedAttribute]
public void set_StringMarshalling(StringMarshalling value);
    [CompilerGeneratedAttribute]
public Type get_StringMarshallingCustomType();
    [CompilerGeneratedAttribute]
public void set_StringMarshallingCustomType(Type value);
    [CompilerGeneratedAttribute]
public bool get_SetLastError();
    [CompilerGeneratedAttribute]
public void set_SetLastError(bool value);
}
internal enum System.Runtime.InteropServices.StringMarshalling : Enum {
    public int value__;
    public static StringMarshalling Custom;
    public static StringMarshalling Utf8;
    public static StringMarshalling Utf16;
}
internal static class System.ThrowHelper : object {
    internal static void ThrowIfNull(object argument, string paramName);
    [DoesNotReturnAttribute]
private static void Throw(string paramName);
    public static string IfNullOrWhitespace(string argument, string paramName);
}
