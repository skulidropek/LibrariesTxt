[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratedCodeAttribute("Microsoft.Extensions.Options.SourceGeneration", "8.0.10.6711")]
[AttributeUsageAttribute("2432")]
internal class __OptionValidationGeneratedAttributes.<Validators_g>F87211364FC75EB03A566AEFD4CD779A71E0BB66F10FCD4F9A7C1C6D7C9B2E28C____SourceGen__RangeAttribute : ValidationAttribute {
    [CompilerGeneratedAttribute]
private object <Minimum>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Maximum>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MinimumIsExclusive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MaximumIsExclusive>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <OperandType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ParseLimitsInInvariantCulture>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConvertValueInInvariantCulture>k__BackingField;
    private bool _needToConvertMinMax;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _initialized;
    private object _lock;
    private static string MinMaxError;
    public object Minimum { get; private set; }
    public object Maximum { get; private set; }
    public bool MinimumIsExclusive { get; public set; }
    public bool MaximumIsExclusive { get; public set; }
    public Type OperandType { get; }
    public bool ParseLimitsInInvariantCulture { get; public set; }
    public bool ConvertValueInInvariantCulture { get; public set; }
    public <Validators_g>F87211364FC75EB03A566AEFD4CD779A71E0BB66F10FCD4F9A7C1C6D7C9B2E28C____SourceGen__RangeAttribute(int minimum, int maximum);
    public <Validators_g>F87211364FC75EB03A566AEFD4CD779A71E0BB66F10FCD4F9A7C1C6D7C9B2E28C____SourceGen__RangeAttribute(double minimum, double maximum);
    public <Validators_g>F87211364FC75EB03A566AEFD4CD779A71E0BB66F10FCD4F9A7C1C6D7C9B2E28C____SourceGen__RangeAttribute(Type type, string minimum, string maximum);
    [CompilerGeneratedAttribute]
public object get_Minimum();
    [CompilerGeneratedAttribute]
private void set_Minimum(object value);
    [CompilerGeneratedAttribute]
public object get_Maximum();
    [CompilerGeneratedAttribute]
private void set_Maximum(object value);
    [CompilerGeneratedAttribute]
public bool get_MinimumIsExclusive();
    [CompilerGeneratedAttribute]
public void set_MinimumIsExclusive(bool value);
    [CompilerGeneratedAttribute]
public bool get_MaximumIsExclusive();
    [CompilerGeneratedAttribute]
public void set_MaximumIsExclusive(bool value);
    [CompilerGeneratedAttribute]
public Type get_OperandType();
    [CompilerGeneratedAttribute]
public bool get_ParseLimitsInInvariantCulture();
    [CompilerGeneratedAttribute]
public void set_ParseLimitsInInvariantCulture(bool value);
    [CompilerGeneratedAttribute]
public bool get_ConvertValueInInvariantCulture();
    [CompilerGeneratedAttribute]
public void set_ConvertValueInInvariantCulture(bool value);
    public virtual string FormatErrorMessage(string name);
    [NullableContextAttribute("2")]
public virtual bool IsValid(object value);
    private string GetValidationErrorMessage();
    [NullableContextAttribute("2")]
private object ConvertValue(object value, CultureInfo formatProvider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratedCodeAttribute("Microsoft.Extensions.Options.SourceGeneration", "8.0.10.6711")]
internal static class __OptionValidationStaticInstances.<Validators_g>F87211364FC75EB03A566AEFD4CD779A71E0BB66F10FCD4F9A7C1C6D7C9B2E28C____Attributes : object {
    internal static <Validators_g>F87211364FC75EB03A566AEFD4CD779A71E0BB66F10FCD4F9A7C1C6D7C9B2E28C____SourceGen__RangeAttribute A1;
    internal static TimeSpanAttribute A2;
    internal static RequiredAttribute A3;
    private static <Validators_g>F87211364FC75EB03A566AEFD4CD779A71E0BB66F10FCD4F9A7C1C6D7C9B2E28C____Attributes();
}
[GeneratedCodeAttribute("Microsoft.Extensions.Options.SourceGeneration", "8.0.10.6711")]
internal static class __OptionValidationStaticInstances.<Validators_g>F87211364FC75EB03A566AEFD4CD779A71E0BB66F10FCD4F9A7C1C6D7C9B2E28C____Validators : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
[GeneratedCodeAttribute("Microsoft.Extensions.Configuration.Binder.SourceGeneration", "8.0.9.3103")]
internal static class Microsoft.Extensions.Configuration.Binder.SourceGeneration.<BindingExtensions_g>FD5C8B2CC653E76379DF02554A2B727E1A17AF4E76A254F199E6D22930B8462B5__BindingExtensions : object {
    private static Lazy`1<HashSet`1<string>> s_configKeys_HttpClientLatencyTelemetryOptions;
    private static Lazy`1<HashSet`1<string>> s_configKeys_DataClassification;
    private static Lazy`1<HashSet`1<string>> s_configKeys_LoggingOptions;
    private static <BindingExtensions_g>FD5C8B2CC653E76379DF02554A2B727E1A17AF4E76A254F199E6D22930B8462B5__BindingExtensions();
    [ExtensionAttribute]
[<BindingExtensions_g>FD5C8B2CC653E76379DF02554A2B727E1A17AF4E76A254F199E6D22930B8462B5__InterceptsLocationAttribute("/_/src/Libraries/Microsoft.Extensions.Http.Diagnostics/Logging/HttpClientLoggingHttpClientBuilderExtensions.cs", "57", "81")]
[<BindingExtensions_g>FD5C8B2CC653E76379DF02554A2B727E1A17AF4E76A254F199E6D22930B8462B5__InterceptsLocationAttribute("/_/src/Libraries/Microsoft.Extensions.Http.Diagnostics/Logging/HttpClientLoggingServiceCollectionExtensions.cs", "68", "14")]
public static OptionsBuilder`1<TOptions> Bind(OptionsBuilder`1<TOptions> optionsBuilder, IConfiguration config);
    [ExtensionAttribute]
public static OptionsBuilder`1<TOptions> Bind(OptionsBuilder`1<TOptions> optionsBuilder, IConfiguration config, Action`1<BinderOptions> configureBinder);
    [ExtensionAttribute]
[<BindingExtensions_g>FD5C8B2CC653E76379DF02554A2B727E1A17AF4E76A254F199E6D22930B8462B5__InterceptsLocationAttribute("/_/src/Libraries/Microsoft.Extensions.Http.Diagnostics/Latency/HttpClientLatencyTelemetryExtensions.cs", "64", "14")]
public static IServiceCollection Configure(IServiceCollection services, IConfiguration config);
    [ExtensionAttribute]
public static IServiceCollection Configure(IServiceCollection services, string name, IConfiguration config, Action`1<BinderOptions> configureOptions);
    public static void BindCoreMain(IConfiguration configuration, object instance, Type type, Action`1<BinderOptions> configureOptions);
    public static void BindCore(IConfiguration configuration, HttpClientLatencyTelemetryOptions& instance, bool defaultValueIfNotFound, BinderOptions binderOptions);
    public static void BindCore(IConfiguration configuration, ISet`1& instance, bool defaultValueIfNotFound, BinderOptions binderOptions);
    public static void BindCore(IConfiguration configuration, DataClassification& instance, bool defaultValueIfNotFound, BinderOptions binderOptions);
    public static void BindCore(IConfiguration configuration, IDictionary`2& instance, bool defaultValueIfNotFound, BinderOptions binderOptions);
    public static void BindCore(IConfiguration configuration, LoggingOptions& instance, bool defaultValueIfNotFound, BinderOptions binderOptions);
    public static DataClassification InitializeDataClassification(IConfiguration configuration, BinderOptions binderOptions);
    public static void ValidateConfigurationKeys(Type type, Lazy`1<HashSet`1<string>> keys, IConfiguration configuration, BinderOptions binderOptions);
    public static bool HasValueOrChildren(IConfiguration configuration);
    public static IConfiguration AsConfigWithChildren(IConfiguration configuration);
    [NullableContextAttribute("2")]
public static BinderOptions GetBinderOptions(Action`1<BinderOptions> configureOptions);
    public static bool ParseBool(string value, Func`1<string> getPath);
    public static int ParseInt(string value, Func`1<string> getPath);
    public static TimeSpan ParseTimeSpan(string value, Func`1<string> getPath);
    [NullableContextAttribute("0")]
public static T ParseEnum(string value, Func`1<string> getPath);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.HttpClientLatencyTelemetryExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddHttpClientLatencyTelemetry(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddHttpClientLatencyTelemetry(IServiceCollection services, IConfigurationSection section);
    [ExtensionAttribute]
public static IServiceCollection AddHttpClientLatencyTelemetry(IServiceCollection services, Action`1<HttpClientLatencyTelemetryOptions> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.HttpClientLoggingHttpClientBuilderExtensions : object {
    [ExtensionAttribute]
public static IHttpClientBuilder AddExtendedHttpClientLogging(IHttpClientBuilder builder);
    [ExtensionAttribute]
public static IHttpClientBuilder AddExtendedHttpClientLogging(IHttpClientBuilder builder, IConfigurationSection section);
    [ExtensionAttribute]
public static IHttpClientBuilder AddExtendedHttpClientLogging(IHttpClientBuilder builder, Action`1<LoggingOptions> configure);
    private static IHttpClientBuilder AddExtendedHttpClientLoggingInternal(IHttpClientBuilder builder, Action`1<OptionsBuilder`1<LoggingOptions>> configureOptionsBuilder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.HttpClientLoggingServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddExtendedHttpClientLogging(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddExtendedHttpClientLogging(IServiceCollection services, IConfigurationSection section);
    [ExtensionAttribute]
public static IServiceCollection AddExtendedHttpClientLogging(IServiceCollection services, Action`1<LoggingOptions> configure);
    [ExtensionAttribute]
public static IServiceCollection AddHttpClientLogEnricher(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.HttpDiagnosticsServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddDownstreamDependencyMetadata(IServiceCollection services, IDownstreamDependencyMetadata downstreamDependencyMetadata);
    [ExtensionAttribute]
public static IServiceCollection AddDownstreamDependencyMetadata(IServiceCollection services);
}
internal static class Microsoft.Extensions.Http.Diagnostics.Constants : object {
    public static int ASCIICharCount;
    public static char DefaultRouteEndDelim;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Http.Diagnostics.DownstreamDependencyMetadataManager : object {
    private static char AsteriskChar;
    private static Regex _routeRegex;
    private static Char[] _toUpper;
    private HostSuffixTrieNode _hostSuffixTrieRoot;
    private FrozenDictionary`2<string, ProcessedMetadata> _frozenProcessedMetadataMap;
    public DownstreamDependencyMetadataManager(IEnumerable`1<IDownstreamDependencyMetadata> downstreamDependencyMetadata);
    private static DownstreamDependencyMetadataManager();
    public sealed virtual RequestMetadata GetRequestMetadata(HttpRequestMessage requestMessage);
    public sealed virtual RequestMetadata GetRequestMetadata(HttpWebRequest requestMessage);
    private static Char[] MakeToUpperArray();
    private static void AddRouteToTrie(RequestMetadata routeMetadata, Dictionary`2<string, RequestMetadataTrieNode> dependencyTrieMap);
    private static Dictionary`2<string, ProcessedMetadata> ProcessDownstreamDependencyMetadata(Dictionary`2<string, RequestMetadataTrieNode> dependencyTrieMap);
    [ExcludeFromCodeCoverageAttribute]
private static ProcessedMetadata ProcessDownstreamDependencyMetadataInternal(RequestMetadataTrieNode requestMetadataTrieRoot);
    private static FrozenRequestMetadataTrieNode GetChildNode(char ch, FrozenRequestMetadataTrieNode node, ProcessedMetadata routeMetadataRoot);
    private void AddDependency(IDownstreamDependencyMetadata downstreamDependencyMetadata, Dictionary`2<string, RequestMetadataTrieNode> dependencyTrieMap);
    private void AddHostnameToTrie(string hostNameSuffix, string dependencyName);
    private HostSuffixTrieNode GetHostMetadata(string host);
    private RequestMetadata GetRequestMetadataInternal(string httpMethod, string requestPath, HostSuffixTrieNode hostMetadata);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.Extensions.Http.Diagnostics.DownstreamDependencyMetadataManagerRegex : object {
    private static string RouteRegexString;
    public static Regex MakeRouteRegex();
}
internal class Microsoft.Extensions.Http.Diagnostics.FrozenRequestMetadataTrieNode : object {
    [CompilerGeneratedAttribute]
private char <Delimiter>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <ChildNodesCount>k__BackingField;
    [CompilerGeneratedAttribute]
private char <YoungestChild>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ChildStartIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RequestMetadataEntryIndex>k__BackingField;
    public char Delimiter { get; public set; }
    public byte ChildNodesCount { get; public set; }
    public char YoungestChild { get; public set; }
    public int ChildStartIndex { get; public set; }
    public int RequestMetadataEntryIndex { get; public set; }
    [CompilerGeneratedAttribute]
public char get_Delimiter();
    [CompilerGeneratedAttribute]
public void set_Delimiter(char value);
    [CompilerGeneratedAttribute]
public byte get_ChildNodesCount();
    [CompilerGeneratedAttribute]
public void set_ChildNodesCount(byte value);
    [CompilerGeneratedAttribute]
public char get_YoungestChild();
    [CompilerGeneratedAttribute]
public void set_YoungestChild(char value);
    [CompilerGeneratedAttribute]
public int get_ChildStartIndex();
    [CompilerGeneratedAttribute]
public void set_ChildStartIndex(int value);
    [CompilerGeneratedAttribute]
public int get_RequestMetadataEntryIndex();
    [CompilerGeneratedAttribute]
public void set_RequestMetadataEntryIndex(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Http.Diagnostics.HostSuffixTrieNode : object {
    private static int ASCIICharCount;
    [CompilerGeneratedAttribute]
private string <DependencyName>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMetadata <RequestMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private HostSuffixTrieNode[] <Nodes>k__BackingField;
    public string DependencyName { get; public set; }
    public RequestMetadata RequestMetadata { get; }
    public HostSuffixTrieNode[] Nodes { get; }
    [CompilerGeneratedAttribute]
public string get_DependencyName();
    [CompilerGeneratedAttribute]
public void set_DependencyName(string value);
    [CompilerGeneratedAttribute]
public RequestMetadata get_RequestMetadata();
    [CompilerGeneratedAttribute]
public HostSuffixTrieNode[] get_Nodes();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Http.Diagnostics.RequestMetadataTrieNode : object {
    [CompilerGeneratedAttribute]
private byte <ChildNodesCount>k__BackingField;
    [CompilerGeneratedAttribute]
private char <YoungestChild>k__BackingField;
    [CompilerGeneratedAttribute]
private char <EldestChild>k__BackingField;
    [CompilerGeneratedAttribute]
private char <Delimiter>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMetadata <RequestMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMetadataTrieNode <Parent>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private RequestMetadataTrieNode[] <Nodes>k__BackingField;
    public byte ChildNodesCount { get; public set; }
    public char YoungestChild { get; public set; }
    public char EldestChild { get; public set; }
    public char Delimiter { get; public set; }
    public RequestMetadata RequestMetadata { get; public set; }
    public RequestMetadataTrieNode Parent { get; public set; }
    [NullableAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
public RequestMetadataTrieNode[] Nodes { get; }
    [CompilerGeneratedAttribute]
public byte get_ChildNodesCount();
    [CompilerGeneratedAttribute]
public void set_ChildNodesCount(byte value);
    [CompilerGeneratedAttribute]
public char get_YoungestChild();
    [CompilerGeneratedAttribute]
public void set_YoungestChild(char value);
    [CompilerGeneratedAttribute]
public char get_EldestChild();
    [CompilerGeneratedAttribute]
public void set_EldestChild(char value);
    [CompilerGeneratedAttribute]
public char get_Delimiter();
    [CompilerGeneratedAttribute]
public void set_Delimiter(char value);
    [CompilerGeneratedAttribute]
public RequestMetadata get_RequestMetadata();
    [CompilerGeneratedAttribute]
public void set_RequestMetadata(RequestMetadata value);
    [CompilerGeneratedAttribute]
public RequestMetadataTrieNode get_Parent();
    [CompilerGeneratedAttribute]
public void set_Parent(RequestMetadataTrieNode value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public RequestMetadataTrieNode[] get_Nodes();
}
public class Microsoft.Extensions.Http.Latency.HttpClientLatencyTelemetryOptions : object {
    [CompilerGeneratedAttribute]
private bool <EnableDetailedLatencyBreakdown>k__BackingField;
    public bool EnableDetailedLatencyBreakdown { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_EnableDetailedLatencyBreakdown();
    [CompilerGeneratedAttribute]
public void set_EnableDetailedLatencyBreakdown(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.Extensions.Http.Latency.Internal.HttpCheckpoints : object {
    public static string SocketConnectStart;
    public static string SocketConnectEnd;
    public static string ConnectionEstablished;
    public static string RequestLeftQueue;
    public static string NameResolutionStart;
    public static string NameResolutionEnd;
    public static string RequestHeadersStart;
    public static string RequestHeadersEnd;
    public static string RequestContentStart;
    public static string RequestContentEnd;
    public static string ResponseHeadersStart;
    public static string ResponseHeadersEnd;
    public static string ResponseContentStart;
    public static string ResponseContentEnd;
    public static string HandlerRequestStart;
    public static string EnricherInvoked;
    public static String[] Checkpoints;
    private static HttpCheckpoints();
}
internal class Microsoft.Extensions.Http.Latency.Internal.HttpClientLatencyContext : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLocal`1<ILatencyContext> _latencyContext;
    [NullableContextAttribute("2")]
public ILatencyContext Get();
    [NullableContextAttribute("1")]
public void Set(ILatencyContext context);
    public void Unset();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Http.Latency.Internal.HttpClientLatencyLogEnricher : object {
    private static ObjectPool`1<StringBuilder> _builderPool;
    private HttpClientLatencyContext _latencyContext;
    private CheckpointToken _enricherInvoked;
    public HttpClientLatencyLogEnricher(HttpClientLatencyContext latencyContext, ILatencyContextTokenIssuer tokenIssuer);
    private static HttpClientLatencyLogEnricher();
    public sealed virtual void Enrich(IEnrichmentTagCollector collector, HttpRequestMessage request, HttpResponseMessage response, Exception exception);
    private static void AppendServerName(HttpHeaders headers, StringBuilder stringBuilder);
    private static void AppendCheckpoints(ILatencyContext latencyContext, StringBuilder stringBuilder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Http.Latency.Internal.HttpLatencyTelemetryHandler : DelegatingHandler {
    private HttpRequestLatencyListener _latencyListener;
    private ILatencyContextProvider _latencyContextProvider;
    private CheckpointToken _handlerStart;
    private string _applicationName;
    public HttpLatencyTelemetryHandler(HttpRequestLatencyListener latencyListener, ILatencyContextTokenIssuer tokenIssuer, ILatencyContextProvider latencyContextProvider, IOptions`1<HttpClientLatencyTelemetryOptions> options, IOptions`1<ApplicationMetadata> appMetdata);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Http.Latency.Internal.HttpLatencyTelemetryHandler/<SendAsync>d__5")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Http.Latency.Internal.HttpRequestLatencyListener : EventListener {
    private static string SocketProviderName;
    private static string HttpProviderName;
    private static string NameResolutionProivderName;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<string, EventSource> _eventSources;
    [CompilerGeneratedAttribute]
private HttpClientLatencyContext <LatencyContext>k__BackingField;
    private EventToCheckpointToken _eventToCheckpointToken;
    private int _enabled;
    internal HttpClientLatencyContext LatencyContext { get; }
    internal bool Enabled { get; }
    public HttpRequestLatencyListener(HttpClientLatencyContext latencyContext, ILatencyContextTokenIssuer tokenIssuer);
    [CompilerGeneratedAttribute]
internal HttpClientLatencyContext get_LatencyContext();
    internal bool get_Enabled();
    public void Enable();
    internal void OnEventWritten(string eventSourceName, string eventName);
    internal void OnEventSourceCreated(string eventSourceName, EventSource eventSource);
    protected virtual void OnEventSourceCreated(EventSource eventSource);
    protected virtual void OnEventWritten(EventWrittenEventArgs eventData);
    private void EnableEventSource(EventSource eventSource);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Http.Logging.HttpClientLogger : object {
    private static string SyncLoggingExceptionMessage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectPool`1<List`1<KeyValuePair`2<string, string>>> _headersPool;
    private ObjectPool`1<LogRecord> _logRecordPool;
    private bool _logRequestStart;
    private bool _logResponseHeaders;
    private bool _logRequestHeaders;
    private bool _pathParametersRedactionSkipped;
    private ILogger`1<HttpClientLogger> _logger;
    private IHttpRequestReader _httpRequestReader;
    private IHttpClientLogEnricher[] _enrichers;
    public HttpClientLogger(IServiceProvider serviceProvider, ILogger`1<HttpClientLogger> logger, IEnumerable`1<IHttpClientLogEnricher> enrichers, IOptionsMonitor`1<LoggingOptions> optionsMonitor, string serviceKey);
    internal HttpClientLogger(ILogger`1<HttpClientLogger> logger, IHttpRequestReader httpRequestReader, IEnumerable`1<IHttpClientLogEnricher> enrichers, LoggingOptions options);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Http.Logging.HttpClientLogger/<LogRequestStartAsync>d__12")]
public sealed virtual ValueTask`1<object> LogRequestStartAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Http.Logging.HttpClientLogger/<LogRequestStopAsync>d__13")]
public sealed virtual ValueTask LogRequestStopAsync(object context, HttpRequestMessage request, HttpResponseMessage response, TimeSpan elapsed, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Http.Logging.HttpClientLogger/<LogRequestFailedAsync>d__14")]
public sealed virtual ValueTask LogRequestFailedAsync(object context, HttpRequestMessage request, HttpResponseMessage response, Exception exception, TimeSpan elapsed, CancellationToken cancellationToken);
    public sealed virtual object LogRequestStart(HttpRequestMessage request);
    public sealed virtual void LogRequestStop(object context, HttpRequestMessage request, HttpResponseMessage response, TimeSpan elapsed);
    public sealed virtual void LogRequestFailed(object context, HttpRequestMessage request, HttpResponseMessage response, Exception exception, TimeSpan elapsed);
    private static LogLevel GetLogLevel(LogRecord logRecord);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.Extensions.Http.Logging.HttpClientLogger/<LogResponseAsync>d__19")]
private ValueTask LogResponseAsync(object context, HttpRequestMessage request, HttpResponseMessage response, Exception exception, TimeSpan elapsed, CancellationToken cancellationToken);
    private void FillLogRecord(LogRecord logRecord, LoggerMessageState loggerMessageState, TimeSpan& elapsed, HttpRequestMessage request, HttpResponseMessage response, Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.Extensions.Http.Logging.HttpClientLoggingTagNames : object {
    public static string Duration;
    public static string Host;
    public static string Method;
    public static string Path;
    public static string RequestBody;
    public static string ResponseBody;
    public static string RequestHeaderPrefix;
    public static string ResponseHeaderPrefix;
    public static string StatusCode;
    [CompilerGeneratedAttribute]
private static IReadOnlyList`1<string> <TagNames>k__BackingField;
    public static IReadOnlyList`1<string> TagNames { get; }
    private static HttpClientLoggingTagNames();
    [CompilerGeneratedAttribute]
public static IReadOnlyList`1<string> get_TagNames();
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Http.Logging.IHttpClientLogEnricher {
    public abstract virtual void Enrich(IEnrichmentTagCollector collector, HttpRequestMessage request, HttpResponseMessage response, Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.Extensions.Http.Logging.Internal.Constants : object {
    public static string NoContent;
    public static string UnreadableContent;
    public static string ReadCancelled;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Http.Logging.Internal.HttpHeadersReader : object {
    private FrozenDictionary`2<string, DataClassification> _requestHeadersToLog;
    private FrozenDictionary`2<string, DataClassification> _responseHeadersToLog;
    private IHttpHeadersRedactor _redactor;
    private bool _logContentHeaders;
    private int _headersCountThreshold;
    public HttpHeadersReader(IOptionsMonitor`1<LoggingOptions> optionsMonitor, IHttpHeadersRedactor redactor, string serviceKey);
    public sealed virtual void ReadRequestHeaders(HttpRequestMessage request, List`1<KeyValuePair`2<string, string>> destination);
    public sealed virtual void ReadResponseHeaders(HttpResponseMessage response, List`1<KeyValuePair`2<string, string>> destination);
    private void ReadHeaders(HttpHeaders headers, FrozenDictionary`2<string, DataClassification> headersToLog, List`1<KeyValuePair`2<string, string>> destination);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Http.Logging.Internal.HttpRequestBodyReader : object {
    internal TimeSpan RequestReadTimeout;
    private static ObjectPool`1<BufferWriter`1<byte>> _bufferWriterPool;
    private FrozenSet`1<string> _readableRequestContentTypes;
    private int _requestReadLimit;
    public HttpRequestBodyReader(LoggingOptions requestOptions, IDebuggerState debugger);
    private static HttpRequestBodyReader();
    public ValueTask`1<string> ReadAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Http.Logging.Internal.HttpRequestBodyReader/<ReadFromStreamWithTimeoutAsync>d__6")]
private static ValueTask`1<string> ReadFromStreamWithTimeoutAsync(HttpRequestMessage request, TimeSpan readTimeout, int readSizeLimit, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Http.Logging.Internal.HttpRequestBodyReader/<ReadFromStreamAsync>d__7")]
private static ValueTask`1<string> ReadFromStreamAsync(HttpRequestMessage request, int readSizeLimit, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Http.Logging.Internal.HttpRequestReader : object {
    private IHttpRouteFormatter _routeFormatter;
    private IHttpRouteParser _httpRouteParser;
    private IHttpHeadersReader _httpHeadersReader;
    private FrozenDictionary`2<string, DataClassification> _defaultSensitiveParameters;
    private bool _logRequestBody;
    private bool _logResponseBody;
    private bool _logRequestHeaders;
    private bool _logResponseHeaders;
    private HttpRouteParameterRedactionMode _routeParameterRedactionMode;
    private HttpRequestBodyReader _httpRequestBodyReader;
    private HttpResponseBodyReader _httpResponseBodyReader;
    private OutgoingPathLoggingMode _outgoingPathLogMode;
    private IOutgoingRequestContext _requestMetadataContext;
    [NullableAttribute("2")]
private IDownstreamDependencyMetadataManager _downstreamDependencyMetadataManager;
    public HttpRequestReader(IServiceProvider serviceProvider, IOptionsMonitor`1<LoggingOptions> optionsMonitor, IHttpRouteFormatter routeFormatter, IHttpRouteParser httpRouteParser, IOutgoingRequestContext requestMetadataContext, IDownstreamDependencyMetadataManager downstreamDependencyMetadataManager, string serviceKey);
    internal HttpRequestReader(LoggingOptions options, IHttpRouteFormatter routeFormatter, IHttpRouteParser httpRouteParser, IHttpHeadersReader httpHeadersReader, IOutgoingRequestContext requestMetadataContext, IDownstreamDependencyMetadataManager downstreamDependencyMetadataManager);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Http.Logging.Internal.HttpRequestReader/<ReadRequestAsync>d__16")]
public sealed virtual Task ReadRequestAsync(LogRecord logRecord, HttpRequestMessage request, List`1<KeyValuePair`2<string, string>> requestHeadersBuffer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Http.Logging.Internal.HttpRequestReader/<ReadResponseAsync>d__17")]
public sealed virtual Task ReadResponseAsync(LogRecord logRecord, HttpResponseMessage response, List`1<KeyValuePair`2<string, string>> responseHeadersBuffer, CancellationToken cancellationToken);
    private void GetRedactedPathAndParameters(HttpRequestMessage request, LogRecord logRecord);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Http.Logging.Internal.HttpResponseBodyReader : object {
    internal TimeSpan ResponseReadTimeout;
    private static ObjectPool`1<BufferWriter`1<byte>> _bufferWriterPool;
    private FrozenSet`1<string> _readableResponseContentTypes;
    private int _responseReadLimit;
    private RecyclableMemoryStreamManager _streamManager;
    public HttpResponseBodyReader(LoggingOptions responseOptions, IDebuggerState debugger);
    private static HttpResponseBodyReader();
    public ValueTask`1<string> ReadAsync(HttpResponseMessage response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Http.Logging.Internal.HttpResponseBodyReader/<ReadFromStreamAsync>d__7")]
private static ValueTask`1<string> ReadFromStreamAsync(HttpResponseMessage response, int readSizeLimit, RecyclableMemoryStreamManager streamManager, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Http.Logging.Internal.HttpResponseBodyReader/<ReadFromStreamWithTimeoutAsync>d__8")]
private static ValueTask`1<string> ReadFromStreamWithTimeoutAsync(HttpResponseMessage response, TimeSpan readTimeout, int readSizeLimit, RecyclableMemoryStreamManager streamManager, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Microsoft.Extensions.Http.Logging.Internal.IHttpHeadersReader {
    public abstract virtual void ReadRequestHeaders(HttpRequestMessage request, List`1<KeyValuePair`2<string, string>> destination);
    public abstract virtual void ReadResponseHeaders(HttpResponseMessage response, List`1<KeyValuePair`2<string, string>> destination);
}
[NullableContextAttribute("1")]
internal interface Microsoft.Extensions.Http.Logging.Internal.IHttpRequestReader {
    public abstract virtual Task ReadResponseAsync(LogRecord record, HttpResponseMessage response, List`1<KeyValuePair`2<string, string>> responseHeadersBuffer, CancellationToken cancellationToken);
    public abstract virtual Task ReadRequestAsync(LogRecord record, HttpRequestMessage request, List`1<KeyValuePair`2<string, string>> requestHeadersBuffer, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.Extensions.Http.Logging.Internal.Log : object {
    internal static string OriginalFormat;
    private static int MinimalPropertyCount;
    private static string RequestReadErrorMessage;
    private static string ResponseReadErrorMessage;
    private static string LoggerContextMissingMessage;
    private static string EnrichmentErrorMessage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`3<LoggerMessageState, Exception, string> _originalFormatValueFmtFunc;
    private static Log();
    public static void OutgoingRequest(ILogger logger, LogLevel level, LogRecord record);
    public static void OutgoingRequestError(ILogger logger, LogRecord record, Exception exception);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Gen.Logging", "8.9.1.0")]
public static void RequestReadError(ILogger logger, Exception exception, HttpMethod method, string host, string path);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Gen.Logging", "8.9.1.0")]
public static void ResponseReadError(ILogger logger, Exception exception, HttpMethod method, string host, string path);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Gen.Logging", "8.9.1.0")]
public static void LoggerContextMissing(ILogger logger, Exception exception, string requestState, HttpMethod method, string host);
    [LoggerMessageAttribute]
[GeneratedCodeAttribute("Microsoft.Gen.Logging", "8.9.1.0")]
public static void EnrichmentError(ILogger logger, Exception exception, string enricher, HttpMethod method, string host, string path);
    private static void OutgoingRequest(ILogger logger, LogLevel level, int eventId, string eventName, LogRecord record, Exception exception);
    private static string OriginalFormatValueFmt(LoggerMessageState request, Exception _);
    private static int FindStartIndex(LoggerMessageState request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.Extensions.Http.Logging.Internal.LoggerMessageStateExtensions : object {
    private static ConcurrentDictionary`2<string, string> _requestPrefixedNamesCache;
    private static ConcurrentDictionary`2<string, string> _responsePrefixedNamesCache;
    private static LoggerMessageStateExtensions();
    [ExtensionAttribute]
public static void AddRequestHeaders(LoggerMessageState state, List`1<KeyValuePair`2<string, string>> items, Int32& index);
    [ExtensionAttribute]
public static void AddResponseHeaders(LoggerMessageState state, List`1<KeyValuePair`2<string, string>> items, Int32& index);
    [ExtensionAttribute]
public static void AddPathParameters(LoggerMessageState state, HttpRouteParameter[] parameters, int paramsCount, Int32& index);
    private static string Normalize(string header);
}
[OptionsValidatorAttribute]
internal class Microsoft.Extensions.Http.Logging.Internal.LoggingOptionsValidator : object {
    [NullableContextAttribute("1")]
[GeneratedCodeAttribute("Microsoft.Extensions.Options.SourceGeneration", "8.0.10.6711")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:RequiresUnreferencedCode")]
public sealed virtual ValidateOptionsResult Validate(string name, LoggingOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Http.Logging.Internal.LogRecord : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMethod <Method>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StatusCode>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<KeyValuePair`2<string, string>> <RequestHeaders>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<KeyValuePair`2<string, string>> <ResponseHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestBody>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseBody>k__BackingField;
    [CompilerGeneratedAttribute]
private LoggerMessageState <EnrichmentTags>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpRouteParameter[] <PathParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PathParametersCount>k__BackingField;
    [NullableAttribute("1")]
public string Host { get; public set; }
    public HttpMethod Method { get; public set; }
    [NullableAttribute("1")]
public string Path { get; public set; }
    public long Duration { get; public set; }
    public Nullable`1<int> StatusCode { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<KeyValuePair`2<string, string>> RequestHeaders { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<KeyValuePair`2<string, string>> ResponseHeaders { get; public set; }
    public string RequestBody { get; public set; }
    public string ResponseBody { get; public set; }
    public LoggerMessageState EnrichmentTags { get; public set; }
    public HttpRouteParameter[] PathParameters { get; public set; }
    public int PathParametersCount { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Host();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public HttpMethod get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(HttpMethod value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Path();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public long get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public List`1<KeyValuePair`2<string, string>> get_RequestHeaders();
    [CompilerGeneratedAttribute]
public void set_RequestHeaders(List`1<KeyValuePair`2<string, string>> value);
    [CompilerGeneratedAttribute]
public List`1<KeyValuePair`2<string, string>> get_ResponseHeaders();
    [CompilerGeneratedAttribute]
public void set_ResponseHeaders(List`1<KeyValuePair`2<string, string>> value);
    [CompilerGeneratedAttribute]
public string get_RequestBody();
    [CompilerGeneratedAttribute]
public void set_RequestBody(string value);
    [CompilerGeneratedAttribute]
public string get_ResponseBody();
    [CompilerGeneratedAttribute]
public void set_ResponseBody(string value);
    [CompilerGeneratedAttribute]
public LoggerMessageState get_EnrichmentTags();
    [CompilerGeneratedAttribute]
public void set_EnrichmentTags(LoggerMessageState value);
    [CompilerGeneratedAttribute]
public HttpRouteParameter[] get_PathParameters();
    [CompilerGeneratedAttribute]
public void set_PathParameters(HttpRouteParameter[] value);
    [CompilerGeneratedAttribute]
public int get_PathParametersCount();
    [CompilerGeneratedAttribute]
public void set_PathParametersCount(int value);
    public sealed virtual bool TryReset();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.Extensions.Http.Logging.Internal.MediaTypeCollectionExtensions : object {
    private static string Application;
    private static string Json;
    private static string Xml;
    private static string Text;
    [ExtensionAttribute]
public static bool Covers(FrozenSet`1<string> collection, string sample);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Http.Logging.Internal.OptionsExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static TOptions GetKeyedOrCurrent(IOptionsMonitor`1<TOptions> optionsMonitor, string serviceKey);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Http.Logging.Internal.ServiceProviderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static T GetRequiredOrKeyedRequiredService(IServiceProvider provider, string serviceKey);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Http.Logging.LoggingOptions : object {
    private static int MaxIncomingBodySize;
    private static int Millisecond;
    private static int Minute;
    private static int DefaultReadSizeLimit;
    private static OutgoingPathLoggingMode DefaultPathLoggingMode;
    private static HttpRouteParameterRedactionMode DefaultPathParameterRedactionMode;
    [CompilerGeneratedAttribute]
private bool <LogRequestStart>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LogBody>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BodySizeLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <BodyReadTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <RequestBodyContentTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <ResponseBodyContentTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, DataClassification> <RequestHeadersDataClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, DataClassification> <ResponseHeadersDataClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private OutgoingPathLoggingMode <RequestPathLoggingMode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpRouteParameterRedactionMode <RequestPathParameterRedactionMode>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, DataClassification> <RouteParameterDataClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LogContentHeaders>k__BackingField;
    public bool LogRequestStart { get; public set; }
    public bool LogBody { get; public set; }
    [RangeAttribute("1", "1572864")]
public int BodySizeLimit { get; public set; }
    [TimeSpanAttribute("1", "60000")]
public TimeSpan BodyReadTimeout { get; public set; }
    [RequiredAttribute]
public ISet`1<string> RequestBodyContentTypes { get; public set; }
    [RequiredAttribute]
public ISet`1<string> ResponseBodyContentTypes { get; public set; }
    [RequiredAttribute]
public IDictionary`2<string, DataClassification> RequestHeadersDataClasses { get; public set; }
    [RequiredAttribute]
public IDictionary`2<string, DataClassification> ResponseHeadersDataClasses { get; public set; }
    public OutgoingPathLoggingMode RequestPathLoggingMode { get; public set; }
    public HttpRouteParameterRedactionMode RequestPathParameterRedactionMode { get; public set; }
    [RequiredAttribute]
public IDictionary`2<string, DataClassification> RouteParameterDataClasses { get; public set; }
    [ExperimentalAttribute("EXTEXP0003")]
public bool LogContentHeaders { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_LogRequestStart();
    [CompilerGeneratedAttribute]
public void set_LogRequestStart(bool value);
    [CompilerGeneratedAttribute]
public bool get_LogBody();
    [CompilerGeneratedAttribute]
public void set_LogBody(bool value);
    [CompilerGeneratedAttribute]
public int get_BodySizeLimit();
    [CompilerGeneratedAttribute]
public void set_BodySizeLimit(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_BodyReadTimeout();
    [CompilerGeneratedAttribute]
public void set_BodyReadTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_RequestBodyContentTypes();
    [CompilerGeneratedAttribute]
public void set_RequestBodyContentTypes(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_ResponseBodyContentTypes();
    [CompilerGeneratedAttribute]
public void set_ResponseBodyContentTypes(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, DataClassification> get_RequestHeadersDataClasses();
    [CompilerGeneratedAttribute]
public void set_RequestHeadersDataClasses(IDictionary`2<string, DataClassification> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, DataClassification> get_ResponseHeadersDataClasses();
    [CompilerGeneratedAttribute]
public void set_ResponseHeadersDataClasses(IDictionary`2<string, DataClassification> value);
    [CompilerGeneratedAttribute]
public OutgoingPathLoggingMode get_RequestPathLoggingMode();
    [CompilerGeneratedAttribute]
public void set_RequestPathLoggingMode(OutgoingPathLoggingMode value);
    [CompilerGeneratedAttribute]
public HttpRouteParameterRedactionMode get_RequestPathParameterRedactionMode();
    [CompilerGeneratedAttribute]
public void set_RequestPathParameterRedactionMode(HttpRouteParameterRedactionMode value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, DataClassification> get_RouteParameterDataClasses();
    [CompilerGeneratedAttribute]
public void set_RouteParameterDataClasses(IDictionary`2<string, DataClassification> value);
    [CompilerGeneratedAttribute]
public bool get_LogContentHeaders();
    [CompilerGeneratedAttribute]
public void set_LogContentHeaders(bool value);
}
public enum Microsoft.Extensions.Http.Logging.OutgoingPathLoggingMode : Enum {
    public int value__;
    public static OutgoingPathLoggingMode Formatted;
    public static OutgoingPathLoggingMode Structured;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Telemetry.Internal.HttpHeadersRedactor : object {
    private static char SeparatorChar;
    private IRedactorProvider _redactorProvider;
    public HttpHeadersRedactor(IRedactorProvider redactorProvider);
    public sealed virtual string Redact(IEnumerable`1<string> headerValues, DataClassification classification);
    private string RedactIEnumerable(IEnumerable`1<string> input, DataClassification classification);
    private string RedactList(IReadOnlyList`1<string> input, DataClassification classification);
}
[NullableContextAttribute("1")]
internal interface Microsoft.Extensions.Telemetry.Internal.IDownstreamDependencyMetadataManager {
    public abstract virtual RequestMetadata GetRequestMetadata(HttpRequestMessage requestMessage);
    public abstract virtual RequestMetadata GetRequestMetadata(HttpWebRequest requestMessage);
}
[NullableContextAttribute("1")]
internal interface Microsoft.Extensions.Telemetry.Internal.IHttpHeadersRedactor {
    public abstract virtual string Redact(IEnumerable`1<string> headerValues, DataClassification classification);
}
internal class Microsoft.Extensions.Telemetry.Internal.OutgoingRequestContext : object {
    [NullableAttribute("1")]
private static AsyncLocal`1<RequestMetadata> _asyncLocal;
    [NullableAttribute("2")]
public RequestMetadata RequestMetadata { get; }
    private static OutgoingRequestContext();
    [NullableContextAttribute("1")]
public sealed virtual void SetRequestMetadata(RequestMetadata metadata);
    [NullableContextAttribute("2")]
public sealed virtual RequestMetadata get_RequestMetadata();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.Extensions.Telemetry.Internal.TelemetryCommonHttpExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddHttpHeadersRedactor(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddOutgoingRequestContext(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal static class Microsoft.Shared.Collections.Empty : object {
    public static IReadOnlyCollection`1<T> ReadOnlyCollection();
    public static IEnumerable`1<T> Enumerable();
    public static IReadOnlyList`1<T> ReadOnlyList();
    public static IReadOnlyDictionary`2<TKey, TValue> ReadOnlyDictionary();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
[ExcludeFromCodeCoverageAttribute]
internal static class Microsoft.Shared.Collections.EmptyCollectionExtensions : object {
    [ExtensionAttribute]
public static IReadOnlyCollection`1<T> EmptyIfNull(IReadOnlyCollection`1<T> collection);
    [ExtensionAttribute]
public static IEnumerable`1<T> EmptyIfNull(ICollection`1<T> collection);
    [ExtensionAttribute]
public static IReadOnlyList`1<T> EmptyIfNull(IReadOnlyList`1<T> list);
    [ExtensionAttribute]
public static IEnumerable`1<T> EmptyIfNull(IList`1<T> list);
    [ExtensionAttribute]
public static T[] EmptyIfNull(T[] array);
    [ExtensionAttribute]
public static IEnumerable`1<T> EmptyIfNull(IEnumerable`1<T> enumerable);
    [ExtensionAttribute]
public static IReadOnlyDictionary`2<TKey, TValue> EmptyIfNull(IReadOnlyDictionary`2<TKey, TValue> dictionary);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Collections.EmptyReadOnlyDictionary`2 : object {
    public static EmptyReadOnlyDictionary`2<TKey, TValue> Instance;
    public int Count { get; }
    public TValue Item { get; }
    public IEnumerable`1<TKey> Keys { get; }
    public IEnumerable`1<TValue> Values { get; }
    private ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys { get; }
    private ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values { get; }
    private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly { get; }
    private TValue System.Collections.Generic.IDictionary<TKey,TValue>.Item { get; private set; }
    private static EmptyReadOnlyDictionary`2();
    public sealed virtual int get_Count();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual IEnumerable`1<TKey> get_Keys();
    public sealed virtual IEnumerable`1<TValue> get_Values();
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys();
    private sealed virtual override ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.get_Values();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly();
    private sealed virtual override TValue System.Collections.Generic.IDictionary<TKey,TValue>.get_Item(TKey key);
    private sealed virtual override void System.Collections.Generic.IDictionary<TKey,TValue>.set_Item(TKey key, TValue value);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear();
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair`2[] array, int arrayIndex);
    private sealed virtual override void System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey key, TValue value);
    private sealed virtual override bool System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey key);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2<TKey, TValue> item);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2<TKey, TValue> item);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2<TKey, TValue> item);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Collections.EmptyReadOnlyList`1 : object {
    public static EmptyReadOnlyList`1<T> Instance;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Enumerator<T> _enumerator;
    public int Count { get; }
    public T Item { get; }
    private bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }
    private static EmptyReadOnlyList`1();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual int get_Count();
    public sealed virtual T get_Item(int index);
    private sealed virtual override void System.Collections.Generic.ICollection<T>.CopyTo(T[] array, int arrayIndex);
    private sealed virtual override bool System.Collections.Generic.ICollection<T>.Contains(T item);
    private sealed virtual override bool System.Collections.Generic.ICollection<T>.get_IsReadOnly();
    private sealed virtual override void System.Collections.Generic.ICollection<T>.Add(T item);
    private sealed virtual override bool System.Collections.Generic.ICollection<T>.Remove(T item);
    private sealed virtual override void System.Collections.Generic.ICollection<T>.Clear();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.Shared.DiagnosticIds.DiagnosticIds : object {
    internal static string UrlFormat;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Diagnostics.AttachedDebugger : object {
    [CompilerGeneratedAttribute]
private static AttachedDebugger <Instance>k__BackingField;
    public static AttachedDebugger Instance { get; }
    public bool IsAttached { get; }
    private static AttachedDebugger();
    [CompilerGeneratedAttribute]
public static AttachedDebugger get_Instance();
    public sealed virtual bool get_IsAttached();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
[ExcludeFromCodeCoverageAttribute]
internal static class Microsoft.Shared.Diagnostics.DebuggerExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddSystemDebuggerState(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddAttachedDebuggerState(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddDetachedDebuggerState(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal static class Microsoft.Shared.Diagnostics.DebuggerState : object {
    public static IDebuggerState System { get; }
    public static IDebuggerState Attached { get; }
    public static IDebuggerState Detached { get; }
    public static IDebuggerState get_System();
    public static IDebuggerState get_Attached();
    public static IDebuggerState get_Detached();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Diagnostics.DetachedDebugger : object {
    [CompilerGeneratedAttribute]
private static DetachedDebugger <Instance>k__BackingField;
    public static DetachedDebugger Instance { get; }
    public bool IsAttached { get; }
    private static DetachedDebugger();
    [CompilerGeneratedAttribute]
public static DetachedDebugger get_Instance();
    public sealed virtual bool get_IsAttached();
}
internal interface Microsoft.Shared.Diagnostics.IDebuggerState {
    public bool IsAttached { get; }
    public abstract virtual bool get_IsAttached();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Diagnostics.SystemDebugger : object {
    [CompilerGeneratedAttribute]
private static SystemDebugger <Instance>k__BackingField;
    public static SystemDebugger Instance { get; }
    public bool IsAttached { get; }
    private static SystemDebugger();
    [CompilerGeneratedAttribute]
public static SystemDebugger get_Instance();
    public sealed virtual bool get_IsAttached();
}
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Pools.BufferWriter`1 : object {
    internal static int MaxArrayLength;
    private static int DefaultCapacity;
    [NullableAttribute("1")]
private T[] _buffer;
    [CompilerGeneratedAttribute]
private int <WrittenCount>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ReadOnlyMemory`1<T> WrittenMemory { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ReadOnlySpan`1<T> WrittenSpan { get; }
    public int WrittenCount { get; private set; }
    public int Capacity { get; public set; }
    public ReadOnlyMemory`1<T> get_WrittenMemory();
    public ReadOnlySpan`1<T> get_WrittenSpan();
    [CompilerGeneratedAttribute]
public int get_WrittenCount();
    [CompilerGeneratedAttribute]
private void set_WrittenCount(int value);
    public int get_Capacity();
    public void set_Capacity(int value);
    public void Reset();
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<T> GetMemory(int sizeHint);
    public sealed virtual Span`1<T> GetSpan(int sizeHint);
    private void EnsureCapacity(int sizeHint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal static class Microsoft.Shared.Pools.BufferWriterPool : object {
    internal static int DefaultCapacity;
    private static int DefaultMaxBufferWriterCapacity;
    [CompilerGeneratedAttribute]
private static ObjectPool`1<BufferWriter`1<byte>> <SharedBufferWriterPool>k__BackingField;
    public static ObjectPool`1<BufferWriter`1<byte>> SharedBufferWriterPool { get; }
    private static BufferWriterPool();
    public static ObjectPool`1<BufferWriter`1<T>> CreateBufferWriterPool(int maxCapacity, int maxBufferWriterCapacity);
    [CompilerGeneratedAttribute]
public static ObjectPool`1<BufferWriter`1<byte>> get_SharedBufferWriterPool();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Pools.BufferWriterPooledObjectPolicy`1 : PooledObjectPolicy`1<BufferWriter`1<T>> {
    private static int DefaultMaximumRetainedCapacity;
    [CompilerGeneratedAttribute]
private int <MaximumRetainedCapacity>k__BackingField;
    public int MaximumRetainedCapacity { get; }
    public BufferWriterPooledObjectPolicy`1(int maximumRetainedCapacity);
    [CompilerGeneratedAttribute]
public int get_MaximumRetainedCapacity();
    public virtual BufferWriter`1<T> Create();
    public virtual bool Return(BufferWriter`1<T> obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Pools.ReturnableBufferWriter`1 : ValueType {
    private ObjectPool`1<BufferWriter`1<T>> _pool;
    [CompilerGeneratedAttribute]
private BufferWriter`1<T> <Buffer>k__BackingField;
    public BufferWriter`1<T> Buffer { get; }
    public ReturnableBufferWriter`1(ObjectPool`1<BufferWriter`1<T>> pool);
    [CompilerGeneratedAttribute]
public BufferWriter`1<T> get_Buffer();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
[ExcludeFromCodeCoverageAttribute]
internal static class Microsoft.Shared.Text.NumericExtensions : object {
    private static int MinCachedValue;
    private static int MaxCachedValue;
    private static int NumCachedValues;
    private static String[] _cachedValues;
    private static NumericExtensions();
    [ExtensionAttribute]
public static string ToInvariantString(int value);
    [ExtensionAttribute]
public static string ToInvariantString(long value);
    private static String[] MakeCachedValues();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
[AttributeUsageAttribute("6141")]
internal class System.Diagnostics.CodeAnalysis.ExperimentalAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <DiagnosticId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UrlFormat>k__BackingField;
    public string DiagnosticId { get; }
    [NullableAttribute("2")]
public string UrlFormat { get; public set; }
    public ExperimentalAttribute(string diagnosticId);
    [CompilerGeneratedAttribute]
public string get_DiagnosticId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UrlFormat();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UrlFormat(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class System.Net.Http.HttpDiagnosticsHttpRequestMessageExtensions : object {
    [ExtensionAttribute]
public static void SetRequestMetadata(HttpRequestMessage request, RequestMetadata metadata);
    [ExtensionAttribute]
public static RequestMetadata GetRequestMetadata(HttpRequestMessage request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class System.Net.HttpDiagnosticsHttpWebRequestExtensions : object {
    [ExtensionAttribute]
public static void SetRequestMetadata(HttpWebRequest request, RequestMetadata metadata);
    [ExtensionAttribute]
public static RequestMetadata GetRequestMetadata(HttpWebRequest request);
}
[GeneratedCodeAttribute("Microsoft.Extensions.Configuration.Binder.SourceGeneration", "8.0.9.3103")]
[AttributeUsageAttribute("64")]
internal class System.Runtime.CompilerServices.<BindingExtensions_g>FD5C8B2CC653E76379DF02554A2B727E1A17AF4E76A254F199E6D22930B8462B5__InterceptsLocationAttribute : Attribute {
    [NullableContextAttribute("1")]
public <BindingExtensions_g>FD5C8B2CC653E76379DF02554A2B727E1A17AF4E76A254F199E6D22930B8462B5__InterceptsLocationAttribute(string filePath, int line, int column);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
