[GeneratedCodeAttribute("Microsoft.Extensions.Options.SourceGeneration", "8.0.10.6711")]
internal static class __OptionValidationStaticInstances.<Validators_g>F7AC2B3CB1740D6089AFF65F288E1C55F3792297DFD26639397D7E7144BB3F80A____Attributes : object {
    [NullableAttribute("1")]
internal static RequiredAttribute A1;
    private static <Validators_g>F7AC2B3CB1740D6089AFF65F288E1C55F3792297DFD26639397D7E7144BB3F80A____Attributes();
}
[GeneratedCodeAttribute("Microsoft.Extensions.Options.SourceGeneration", "8.0.10.6711")]
internal static class __OptionValidationStaticInstances.<Validators_g>F7AC2B3CB1740D6089AFF65F288E1C55F3792297DFD26639397D7E7144BB3F80A____Validators : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.EnrichmentServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddLogEnricher(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddLogEnricher(IServiceCollection services, ILogEnricher enricher);
    [ExtensionAttribute]
public static IServiceCollection AddStaticLogEnricher(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddStaticLogEnricher(IServiceCollection services, IStaticLogEnricher enricher);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.LatencyRegistryServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection RegisterCheckpointNames(IServiceCollection services, String[] names);
    [ExtensionAttribute]
public static IServiceCollection RegisterMeasureNames(IServiceCollection services, String[] names);
    [ExtensionAttribute]
public static IServiceCollection RegisterTagNames(IServiceCollection services, String[] names);
    private static void CheckNames(String[] names);
    [ExtensionAttribute]
private static void ConfigureOption(IServiceCollection services, Action`1<LatencyContextRegistrationOptions> action);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.NullLatencyContextServiceCollectionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IServiceCollection AddNullLatencyContext(IServiceCollection services);
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector {
    public abstract virtual void Add(string tagName, object tagValue);
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Diagnostics.Enrichment.ILogEnricher {
    public abstract virtual void Enrich(IEnrichmentTagCollector collector);
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Diagnostics.Enrichment.IStaticLogEnricher {
    public abstract virtual void Enrich(IEnrichmentTagCollector collector);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.Extensions.Diagnostics.Latency.Checkpoint : ValueType {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Elapsed>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Frequency>k__BackingField;
    public string Name { get; }
    public long Elapsed { get; }
    public long Frequency { get; }
    public Checkpoint(string name, long elapsed, long frequency);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public long get_Elapsed();
    [CompilerGeneratedAttribute]
public long get_Frequency();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(Checkpoint other);
    public virtual int GetHashCode();
    public static bool op_Equality(Checkpoint left, Checkpoint right);
    public static bool op_Inequality(Checkpoint left, Checkpoint right);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.Extensions.Diagnostics.Latency.CheckpointToken : ValueType {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    public string Name { get; }
    public int Position { get; }
    public CheckpointToken(string name, int position);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public int get_Position();
}
public interface Microsoft.Extensions.Diagnostics.Latency.ILatencyContext {
    public LatencyData LatencyData { get; }
    [NullableContextAttribute("1")]
public abstract virtual void SetTag(TagToken token, string value);
    public abstract virtual void AddCheckpoint(CheckpointToken token);
    public abstract virtual void AddMeasure(MeasureToken token, long value);
    public abstract virtual void RecordMeasure(MeasureToken token, long value);
    public abstract virtual void Freeze();
    public abstract virtual LatencyData get_LatencyData();
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Diagnostics.Latency.ILatencyContextProvider {
    public abstract virtual ILatencyContext CreateContext();
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Diagnostics.Latency.ILatencyContextTokenIssuer {
    public abstract virtual TagToken GetTagToken(string name);
    public abstract virtual CheckpointToken GetCheckpointToken(string name);
    public abstract virtual MeasureToken GetMeasureToken(string name);
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Diagnostics.Latency.ILatencyDataExporter {
    public abstract virtual Task ExportAsync(LatencyData data, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Diagnostics.Latency.LatencyContextRegistrationOptions : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <CheckpointNames>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <MeasureNames>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <TagNames>k__BackingField;
    [RequiredAttribute]
public IReadOnlyList`1<string> CheckpointNames { get; public set; }
    [RequiredAttribute]
public IReadOnlyList`1<string> MeasureNames { get; public set; }
    [RequiredAttribute]
public IReadOnlyList`1<string> TagNames { get; public set; }
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_CheckpointNames();
    [CompilerGeneratedAttribute]
public void set_CheckpointNames(IReadOnlyList`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_MeasureNames();
    [CompilerGeneratedAttribute]
public void set_MeasureNames(IReadOnlyList`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_TagNames();
    [CompilerGeneratedAttribute]
public void set_TagNames(IReadOnlyList`1<string> value);
    internal void AddTagNames(String[] names);
    internal void AddCheckpointNames(String[] names);
    internal void AddMeasureNames(String[] names);
    private static void AddToList(IReadOnlyList`1<string> list, String[] names);
}
[OptionsValidatorAttribute]
internal class Microsoft.Extensions.Diagnostics.Latency.LatencyContextRegistrationOptionsValidator : object {
    [NullableContextAttribute("1")]
[GeneratedCodeAttribute("Microsoft.Extensions.Options.SourceGeneration", "8.0.10.6711")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:RequiresUnreferencedCode")]
public sealed virtual ValidateOptionsResult Validate(string name, LatencyContextRegistrationOptions options);
}
[IsReadOnlyAttribute]
public class Microsoft.Extensions.Diagnostics.Latency.LatencyData : ValueType {
    private ArraySegment`1<Tag> _tags;
    private ArraySegment`1<Checkpoint> _checkpoints;
    private ArraySegment`1<Measure> _measures;
    [CompilerGeneratedAttribute]
private long <DurationTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DurationTimestampFrequency>k__BackingField;
    public ReadOnlySpan`1<Checkpoint> Checkpoints { get; }
    public ReadOnlySpan`1<Tag> Tags { get; }
    public ReadOnlySpan`1<Measure> Measures { get; }
    public long DurationTimestamp { get; }
    public long DurationTimestampFrequency { get; }
    public LatencyData(ArraySegment`1<Tag> tags, ArraySegment`1<Checkpoint> checkpoints, ArraySegment`1<Measure> measures, long durationTimestamp, long durationTimestampFrequency);
    public ReadOnlySpan`1<Checkpoint> get_Checkpoints();
    public ReadOnlySpan`1<Tag> get_Tags();
    public ReadOnlySpan`1<Measure> get_Measures();
    [CompilerGeneratedAttribute]
public long get_DurationTimestamp();
    [CompilerGeneratedAttribute]
public long get_DurationTimestampFrequency();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.Extensions.Diagnostics.Latency.Measure : ValueType {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Value>k__BackingField;
    public string Name { get; }
    public long Value { get; }
    public Measure(string name, long value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public long get_Value();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(Measure other);
    public virtual int GetHashCode();
    public static bool op_Equality(Measure left, Measure right);
    public static bool op_Inequality(Measure left, Measure right);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.Extensions.Diagnostics.Latency.MeasureToken : ValueType {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    public string Name { get; }
    public int Position { get; }
    public MeasureToken(string name, int position);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public int get_Position();
}
internal class Microsoft.Extensions.Diagnostics.Latency.NullLatencyContext : object {
    private ArraySegment`1<Checkpoint> _checkpoints;
    private ArraySegment`1<Tag> _tags;
    private ArraySegment`1<Measure> _measures;
    public LatencyData LatencyData { get; }
    public sealed virtual LatencyData get_LatencyData();
    public sealed virtual void Freeze();
    [NullableContextAttribute("1")]
public sealed virtual ILatencyContext CreateContext();
    public sealed virtual void Dispose();
    [NullableContextAttribute("1")]
public sealed virtual void SetTag(TagToken token, string value);
    public sealed virtual void AddCheckpoint(CheckpointToken token);
    public sealed virtual void AddMeasure(MeasureToken name, long value);
    public sealed virtual void RecordMeasure(MeasureToken name, long value);
    [NullableContextAttribute("1")]
public sealed virtual TagToken GetTagToken(string name);
    [NullableContextAttribute("1")]
public sealed virtual CheckpointToken GetCheckpointToken(string name);
    [NullableContextAttribute("1")]
public sealed virtual MeasureToken GetMeasureToken(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.Extensions.Diagnostics.Latency.Tag : ValueType {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Name { get; }
    public string Value { get; }
    public Tag(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Value();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.Extensions.Diagnostics.Latency.TagToken : ValueType {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    public string Name { get; }
    public int Position { get; }
    public TagToken(string name, int position);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public int get_Position();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
[ConditionalAttribute("CODE_GENERATION_ATTRIBUTES")]
public class Microsoft.Extensions.Diagnostics.Metrics.CounterAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <TagNames>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public string Name { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] TagNames { get; }
    public Type Type { get; }
    [NullableContextAttribute("1")]
public CounterAttribute(String[] tagNames);
    [NullableContextAttribute("1")]
public CounterAttribute(Type type);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public String[] get_TagNames();
    [CompilerGeneratedAttribute]
public Type get_Type();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
[ConditionalAttribute("CODE_GENERATION_ATTRIBUTES")]
public class Microsoft.Extensions.Diagnostics.Metrics.CounterAttribute`1 : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <TagNames>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public string Name { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] TagNames { get; }
    public Type Type { get; }
    [NullableContextAttribute("1")]
public CounterAttribute`1(String[] tagNames);
    [NullableContextAttribute("1")]
public CounterAttribute`1(Type type);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public String[] get_TagNames();
    [CompilerGeneratedAttribute]
public Type get_Type();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
[ConditionalAttribute("CODE_GENERATION_ATTRIBUTES")]
public class Microsoft.Extensions.Diagnostics.Metrics.GaugeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <TagNames>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public string Name { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] TagNames { get; }
    public Type Type { get; }
    [NullableContextAttribute("1")]
public GaugeAttribute(String[] tagNames);
    [NullableContextAttribute("1")]
public GaugeAttribute(Type type);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public String[] get_TagNames();
    [CompilerGeneratedAttribute]
public Type get_Type();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
[ConditionalAttribute("CODE_GENERATION_ATTRIBUTES")]
public class Microsoft.Extensions.Diagnostics.Metrics.HistogramAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <TagNames>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public string Name { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] TagNames { get; }
    public Type Type { get; }
    [NullableContextAttribute("1")]
public HistogramAttribute(String[] tagNames);
    [NullableContextAttribute("1")]
public HistogramAttribute(Type type);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public String[] get_TagNames();
    [CompilerGeneratedAttribute]
public Type get_Type();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
[ConditionalAttribute("CODE_GENERATION_ATTRIBUTES")]
public class Microsoft.Extensions.Diagnostics.Metrics.HistogramAttribute`1 : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <TagNames>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public string Name { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] TagNames { get; }
    public Type Type { get; }
    [NullableContextAttribute("1")]
public HistogramAttribute`1(String[] tagNames);
    [NullableContextAttribute("1")]
public HistogramAttribute`1(Type type);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public String[] get_TagNames();
    [CompilerGeneratedAttribute]
public Type get_Type();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("384")]
public class Microsoft.Extensions.Diagnostics.Metrics.TagNameAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public TagNameAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
public enum Microsoft.Extensions.Http.Diagnostics.HttpRouteParameterRedactionMode : Enum {
    public int value__;
    public static HttpRouteParameterRedactionMode Strict;
    public static HttpRouteParameterRedactionMode Loose;
    public static HttpRouteParameterRedactionMode None;
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Http.Diagnostics.IDownstreamDependencyMetadata {
    public string DependencyName { get; }
    public ISet`1<string> UniqueHostNameSuffixes { get; }
    public ISet`1<RequestMetadata> RequestMetadata { get; }
    public abstract virtual string get_DependencyName();
    public abstract virtual ISet`1<string> get_UniqueHostNameSuffixes();
    public abstract virtual ISet`1<RequestMetadata> get_RequestMetadata();
}
[NullableContextAttribute("2")]
public interface Microsoft.Extensions.Http.Diagnostics.IOutgoingRequestContext {
    public RequestMetadata RequestMetadata { get; }
    [NullableContextAttribute("1")]
public abstract virtual void SetRequestMetadata(RequestMetadata metadata);
    public abstract virtual RequestMetadata get_RequestMetadata();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Http.Diagnostics.RequestMetadata : object {
    [CompilerGeneratedAttribute]
private string <RequestRoute>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DependencyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodType>k__BackingField;
    public string RequestRoute { get; public set; }
    public string RequestName { get; public set; }
    public string DependencyName { get; public set; }
    public string MethodType { get; public set; }
    public RequestMetadata(string methodType, string requestRoute, string requestName);
    [CompilerGeneratedAttribute]
public string get_RequestRoute();
    [CompilerGeneratedAttribute]
public void set_RequestRoute(string value);
    [CompilerGeneratedAttribute]
public string get_RequestName();
    [CompilerGeneratedAttribute]
public void set_RequestName(string value);
    [CompilerGeneratedAttribute]
public string get_DependencyName();
    [CompilerGeneratedAttribute]
public void set_DependencyName(string value);
    [CompilerGeneratedAttribute]
public string get_MethodType();
    [CompilerGeneratedAttribute]
public void set_MethodType(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.Extensions.Http.Diagnostics.TelemetryConstants : object {
    public static string RequestMetadataKey;
    public static string Unknown;
    public static string Redacted;
    public static string ClientApplicationNameHeader;
    public static string ServerApplicationNameHeader;
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Logging.ITagCollector {
    public abstract virtual void Add(string tagName, object tagValue);
    public abstract virtual void Add(string tagName, object tagValue, DataClassificationSet classifications);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EditorBrowsableAttribute("1")]
public static class Microsoft.Extensions.Logging.LoggerMessageHelper : object {
    [NullableAttribute("2")]
[ThreadStaticAttribute]
private static LoggerMessageState _state;
    public static LoggerMessageState ThreadLocalState { get; }
    public static LoggerMessageState get_ThreadLocalState();
    public static string Stringify(IEnumerable enumerable);
    [NullableContextAttribute("2")]
public static string Stringify(IEnumerable`1<KeyValuePair`2<TKey, TValue>> enumerable);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[EditorBrowsableAttribute("1")]
public class Microsoft.Extensions.Logging.LoggerMessageState : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private KeyValuePair`2[] _tags;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private KeyValuePair`2[] _redactedTags;
    private ClassifiedTag[] _classifiedTags;
    [CompilerGeneratedAttribute]
private int <TagsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ClassifiedTagsCount>k__BackingField;
    private static char Separator;
    [CompilerGeneratedAttribute]
private string <TagNamePrefix>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public KeyValuePair`2[] TagArray { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public KeyValuePair`2[] RedactedTagArray { get; }
    public ClassifiedTag[] ClassifiedTagArray { get; }
    public int TagsCount { get; private set; }
    public int ClassifiedTagsCount { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public KeyValuePair`2<string, object> Item { get; }
    private int System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Count { get; }
    public string TagNamePrefix { get; public set; }
    public KeyValuePair`2[] get_TagArray();
    public KeyValuePair`2[] get_RedactedTagArray();
    public ClassifiedTag[] get_ClassifiedTagArray();
    public int ReserveTagSpace(int count);
    public int ReserveClassifiedTagSpace(int count);
    public void AddTag(string name, object value);
    public void AddClassifiedTag(string name, object value, DataClassificationSet classifications);
    public void Clear();
    [CompilerGeneratedAttribute]
public int get_TagsCount();
    [CompilerGeneratedAttribute]
private void set_TagsCount(int value);
    [CompilerGeneratedAttribute]
public int get_ClassifiedTagsCount();
    [CompilerGeneratedAttribute]
private void set_ClassifiedTagsCount(int value);
    public virtual string ToString();
    private sealed virtual override void Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector.Add(string key, object value);
    public sealed virtual KeyValuePair`2<string, object> get_Item(int index);
    private sealed virtual override int System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_Count();
    [IteratorStateMachineAttribute("Microsoft.Extensions.Logging.LoggerMessageState/<System-Collections-Generic-IEnumerable<System-Collections-Generic-KeyValuePair<System-String,System-Object>>-GetEnumerator>d__29")]
private sealed virtual override IEnumerator`1<KeyValuePair`2<string, object>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator();
    [IteratorStateMachineAttribute("Microsoft.Extensions.Logging.LoggerMessageState/<System-Collections-IEnumerable-GetEnumerator>d__30")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override void Microsoft.Extensions.Logging.ITagCollector.Add(string tagName, object tagValue);
    private sealed virtual override void Microsoft.Extensions.Logging.ITagCollector.Add(string tagName, object tagValue, DataClassificationSet classifications);
    [CompilerGeneratedAttribute]
public string get_TagNamePrefix();
    [CompilerGeneratedAttribute]
public void set_TagNamePrefix(string value);
}
[AttributeUsageAttribute("2176")]
[ConditionalAttribute("CODE_GENERATION_ATTRIBUTES")]
public class Microsoft.Extensions.Logging.LogPropertiesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <SkipNullProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OmitReferenceName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Transitive>k__BackingField;
    public bool SkipNullProperties { get; public set; }
    public bool OmitReferenceName { get; public set; }
    [ExperimentalAttribute("EXTEXP0003")]
public bool Transitive { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_SkipNullProperties();
    [CompilerGeneratedAttribute]
public void set_SkipNullProperties(bool value);
    [CompilerGeneratedAttribute]
public bool get_OmitReferenceName();
    [CompilerGeneratedAttribute]
public void set_OmitReferenceName(bool value);
    [CompilerGeneratedAttribute]
public bool get_Transitive();
    [CompilerGeneratedAttribute]
public void set_Transitive(bool value);
}
[AttributeUsageAttribute("128")]
[ConditionalAttribute("CODE_GENERATION_ATTRIBUTES")]
public class Microsoft.Extensions.Logging.LogPropertyIgnoreAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2176")]
[ConditionalAttribute("CODE_GENERATION_ATTRIBUTES")]
[ExperimentalAttribute("EXTEXP0003")]
public class Microsoft.Extensions.Logging.TagNameAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public TagNameAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2176")]
[ConditionalAttribute("CODE_GENERATION_ATTRIBUTES")]
public class Microsoft.Extensions.Logging.TagProviderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <ProviderType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OmitReferenceName>k__BackingField;
    public Type ProviderType { get; }
    public string ProviderMethod { get; }
    public bool OmitReferenceName { get; public set; }
    public TagProviderAttribute(Type providerType, string providerMethod);
    [CompilerGeneratedAttribute]
public Type get_ProviderType();
    [CompilerGeneratedAttribute]
public string get_ProviderMethod();
    [CompilerGeneratedAttribute]
public bool get_OmitReferenceName();
    [CompilerGeneratedAttribute]
public void set_OmitReferenceName(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.Shared.DiagnosticIds.DiagnosticIds : object {
    internal static string UrlFormat;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal static class Microsoft.Shared.Diagnostics.Throw : object {
    public static T IfNull(T argument, string paramName);
    public static TMember IfNullOrMemberNull(TParameter argument, TMember member, string paramName, string memberName);
    public static TMember IfMemberNull(TParameter argument, TMember member, string paramName, string memberName);
    public static string IfNullOrWhitespace(string argument, string paramName);
    public static string IfNullOrEmpty(string argument, string paramName);
    public static void IfBufferTooSmall(int bufferSize, int requiredSize, string paramName);
    [NullableContextAttribute("0")]
public static T IfOutOfRange(T argument, string paramName);
    [ExcludeFromCodeCoverageAttribute]
public static IEnumerable`1<T> IfNullOrEmpty(IEnumerable`1<T> argument, string paramName);
    [DoesNotReturnAttribute]
public static void ArgumentNullException(string paramName);
    [DoesNotReturnAttribute]
public static void ArgumentNullException(string paramName, string message);
    [DoesNotReturnAttribute]
public static void ArgumentOutOfRangeException(string paramName);
    [DoesNotReturnAttribute]
public static void ArgumentOutOfRangeException(string paramName, string message);
    [NullableContextAttribute("2")]
[DoesNotReturnAttribute]
public static void ArgumentOutOfRangeException(string paramName, object actualValue, string message);
    [DoesNotReturnAttribute]
public static void ArgumentException(string paramName, string message);
    [NullableContextAttribute("2")]
[DoesNotReturnAttribute]
public static void ArgumentException(string paramName, string message, Exception innerException);
    [DoesNotReturnAttribute]
public static void InvalidOperationException(string message);
    [DoesNotReturnAttribute]
public static void InvalidOperationException(string message, Exception innerException);
    public static int IfLessThan(int argument, int min, string paramName);
    public static int IfGreaterThan(int argument, int max, string paramName);
    public static int IfLessThanOrEqual(int argument, int min, string paramName);
    public static int IfGreaterThanOrEqual(int argument, int max, string paramName);
    public static int IfOutOfRange(int argument, int min, int max, string paramName);
    public static int IfZero(int argument, string paramName);
    public static UInt32 IfLessThan(UInt32 argument, UInt32 min, string paramName);
    public static UInt32 IfGreaterThan(UInt32 argument, UInt32 max, string paramName);
    public static UInt32 IfLessThanOrEqual(UInt32 argument, UInt32 min, string paramName);
    public static UInt32 IfGreaterThanOrEqual(UInt32 argument, UInt32 max, string paramName);
    public static UInt32 IfOutOfRange(UInt32 argument, UInt32 min, UInt32 max, string paramName);
    public static UInt32 IfZero(UInt32 argument, string paramName);
    public static long IfLessThan(long argument, long min, string paramName);
    public static long IfGreaterThan(long argument, long max, string paramName);
    public static long IfLessThanOrEqual(long argument, long min, string paramName);
    public static long IfGreaterThanOrEqual(long argument, long max, string paramName);
    public static long IfOutOfRange(long argument, long min, long max, string paramName);
    public static long IfZero(long argument, string paramName);
    public static ulong IfLessThan(ulong argument, ulong min, string paramName);
    public static ulong IfGreaterThan(ulong argument, ulong max, string paramName);
    public static ulong IfLessThanOrEqual(ulong argument, ulong min, string paramName);
    public static ulong IfGreaterThanOrEqual(ulong argument, ulong max, string paramName);
    public static ulong IfOutOfRange(ulong argument, ulong min, ulong max, string paramName);
    public static ulong IfZero(ulong argument, string paramName);
    public static double IfLessThan(double argument, double min, string paramName);
    public static double IfGreaterThan(double argument, double max, string paramName);
    public static double IfLessThanOrEqual(double argument, double min, string paramName);
    public static double IfGreaterThanOrEqual(double argument, double max, string paramName);
    public static double IfOutOfRange(double argument, double min, double max, string paramName);
    public static double IfZero(double argument, string paramName);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Pools.NoopPooledObjectPolicy`1 : PooledObjectPolicy`1<T> {
    [CompilerGeneratedAttribute]
private static NoopPooledObjectPolicy`1<T> <Instance>k__BackingField;
    public static NoopPooledObjectPolicy`1<T> Instance { get; }
    private static NoopPooledObjectPolicy`1();
    [CompilerGeneratedAttribute]
public static NoopPooledObjectPolicy`1<T> get_Instance();
    public virtual T Create();
    public virtual bool Return(T obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Pools.PooledCancellationTokenSourcePolicy : PooledObjectPolicy`1<CancellationTokenSource> {
    [CompilerGeneratedAttribute]
private static PooledCancellationTokenSourcePolicy <Instance>k__BackingField;
    public static PooledCancellationTokenSourcePolicy Instance { get; }
    private static PooledCancellationTokenSourcePolicy();
    [CompilerGeneratedAttribute]
public static PooledCancellationTokenSourcePolicy get_Instance();
    public virtual CancellationTokenSource Create();
    public virtual bool Return(CancellationTokenSource obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Pools.PooledDictionaryPolicy`2 : PooledObjectPolicy`1<Dictionary`2<TKey, TValue>> {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEqualityComparer`1<TKey> _comparer;
    public PooledDictionaryPolicy`2(IEqualityComparer`1<TKey> comparer);
    public virtual Dictionary`2<TKey, TValue> Create();
    public virtual bool Return(Dictionary`2<TKey, TValue> obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Pools.PooledListPolicy`1 : PooledObjectPolicy`1<List`1<T>> {
    [CompilerGeneratedAttribute]
private static PooledListPolicy`1<T> <Instance>k__BackingField;
    public static PooledListPolicy`1<T> Instance { get; }
    private static PooledListPolicy`1();
    [CompilerGeneratedAttribute]
public static PooledListPolicy`1<T> get_Instance();
    public virtual List`1<T> Create();
    public virtual bool Return(List`1<T> obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ExcludeFromCodeCoverageAttribute]
internal class Microsoft.Shared.Pools.PooledSetPolicy`1 : PooledObjectPolicy`1<HashSet`1<T>> {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEqualityComparer`1<T> _comparer;
    public PooledSetPolicy`1(IEqualityComparer`1<T> comparer);
    public virtual HashSet`1<T> Create();
    public virtual bool Return(HashSet`1<T> obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal static class Microsoft.Shared.Pools.PoolFactory : object {
    internal static int DefaultCapacity;
    private static int DefaultMaxStringBuilderCapacity;
    private static int InitialStringBuilderCapacity;
    private static IPooledObjectPolicy`1<StringBuilder> _defaultStringBuilderPolicy;
    [CompilerGeneratedAttribute]
private static ObjectPool`1<StringBuilder> <SharedStringBuilderPool>k__BackingField;
    public static ObjectPool`1<StringBuilder> SharedStringBuilderPool { get; }
    private static PoolFactory();
    public static ObjectPool`1<T> CreatePool(int maxCapacity);
    public static ObjectPool`1<T> CreatePool(IPooledObjectPolicy`1<T> policy, int maxCapacity);
    public static ObjectPool`1<T> CreateResettingPool(int maxCapacity);
    public static ObjectPool`1<StringBuilder> CreateStringBuilderPool(int maxCapacity, int maxStringBuilderCapacity);
    public static ObjectPool`1<List`1<T>> CreateListPool(int maxCapacity);
    public static ObjectPool`1<Dictionary`2<TKey, TValue>> CreateDictionaryPool(IEqualityComparer`1<TKey> comparer, int maxCapacity);
    public static ObjectPool`1<HashSet`1<T>> CreateHashSetPool(IEqualityComparer`1<T> comparer, int maxCapacity);
    public static ObjectPool`1<CancellationTokenSource> CreateCancellationTokenSourcePool(int maxCapacity);
    [CompilerGeneratedAttribute]
public static ObjectPool`1<StringBuilder> get_SharedStringBuilderPool();
    private static DefaultObjectPool`1<T> MakePool(IPooledObjectPolicy`1<T> policy, int maxRetained);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
[AttributeUsageAttribute("6141")]
internal class System.Diagnostics.CodeAnalysis.ExperimentalAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <DiagnosticId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UrlFormat>k__BackingField;
    public string DiagnosticId { get; }
    [NullableAttribute("2")]
public string UrlFormat { get; public set; }
    public ExperimentalAttribute(string diagnosticId);
    [CompilerGeneratedAttribute]
public string get_DiagnosticId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UrlFormat();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UrlFormat(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
