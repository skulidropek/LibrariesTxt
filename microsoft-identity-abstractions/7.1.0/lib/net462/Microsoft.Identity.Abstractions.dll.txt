[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Identity.Abstractions.AcquireTokenOptions : object {
    [CompilerGeneratedAttribute]
private string <AuthenticationOptionsName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <CorrelationId>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ExtraQueryParameters>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, object> <ExtraParameters>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ExtraHeadersParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForceRefresh>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PopPublicKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PopClaim>k__BackingField;
    [CompilerGeneratedAttribute]
private ManagedIdentityOptions <ManagedIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LongRunningWebApiSessionKey>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static string <LongRunningWebApiSessionKeyAuto>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tenant>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserFlow>k__BackingField;
    public string AuthenticationOptionsName { get; public set; }
    public Nullable`1<Guid> CorrelationId { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> ExtraQueryParameters { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[EditorBrowsableAttribute("1")]
public IDictionary`2<string, object> ExtraParameters { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> ExtraHeadersParameters { get; public set; }
    public string Claims { get; public set; }
    public bool ForceRefresh { get; public set; }
    public string PopPublicKey { get; public set; }
    public string PopClaim { get; public set; }
    public ManagedIdentityOptions ManagedIdentity { get; public set; }
    public string LongRunningWebApiSessionKey { get; public set; }
    [NullableAttribute("1")]
public static string LongRunningWebApiSessionKeyAuto { get; }
    public string Tenant { get; public set; }
    public string UserFlow { get; public set; }
    [NullableContextAttribute("1")]
public AcquireTokenOptions(AcquireTokenOptions other);
    private static AcquireTokenOptions();
    [CompilerGeneratedAttribute]
public string get_AuthenticationOptionsName();
    [CompilerGeneratedAttribute]
public void set_AuthenticationOptionsName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_CorrelationId();
    [CompilerGeneratedAttribute]
public void set_CorrelationId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ExtraQueryParameters();
    [CompilerGeneratedAttribute]
public void set_ExtraQueryParameters(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_ExtraParameters();
    [CompilerGeneratedAttribute]
public void set_ExtraParameters(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ExtraHeadersParameters();
    [CompilerGeneratedAttribute]
public void set_ExtraHeadersParameters(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(string value);
    [CompilerGeneratedAttribute]
public bool get_ForceRefresh();
    [CompilerGeneratedAttribute]
public void set_ForceRefresh(bool value);
    [CompilerGeneratedAttribute]
public string get_PopPublicKey();
    [CompilerGeneratedAttribute]
public void set_PopPublicKey(string value);
    [CompilerGeneratedAttribute]
public string get_PopClaim();
    [CompilerGeneratedAttribute]
public void set_PopClaim(string value);
    [CompilerGeneratedAttribute]
public ManagedIdentityOptions get_ManagedIdentity();
    [CompilerGeneratedAttribute]
public void set_ManagedIdentity(ManagedIdentityOptions value);
    [CompilerGeneratedAttribute]
public string get_LongRunningWebApiSessionKey();
    [CompilerGeneratedAttribute]
public void set_LongRunningWebApiSessionKey(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public static string get_LongRunningWebApiSessionKeyAuto();
    [CompilerGeneratedAttribute]
public string get_Tenant();
    [CompilerGeneratedAttribute]
public void set_Tenant(string value);
    [CompilerGeneratedAttribute]
public string get_UserFlow();
    [CompilerGeneratedAttribute]
public void set_UserFlow(string value);
    [NullableContextAttribute("1")]
public virtual AcquireTokenOptions Clone();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Identity.Abstractions.AcquireTokenResult : object {
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ExpiresOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdToken>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <CorrelationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    public string AccessToken { get; public set; }
    public DateTimeOffset ExpiresOn { get; public set; }
    public string TenantId { get; public set; }
    public string IdToken { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> Scopes { get; public set; }
    public Guid CorrelationId { get; public set; }
    public string TokenType { get; public set; }
    [NullableContextAttribute("1")]
public AcquireTokenResult(string accessToken, DateTimeOffset expiresOn, string tenantId, string idToken, IEnumerable`1<string> scopes, Guid correlationId, string tokenType);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ExpiresOn();
    [CompilerGeneratedAttribute]
public void set_ExpiresOn(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public string get_IdToken();
    [CompilerGeneratedAttribute]
public void set_IdToken(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public Guid get_CorrelationId();
    [CompilerGeneratedAttribute]
public void set_CorrelationId(Guid value);
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions : object {
    private AcquireTokenOptions _acquireTokenOptions;
    private string _httpMethod;
    private string _protocolScheme;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <BaseUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelativePath>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<HttpRequestMessage> <CustomizeHttpRequestMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequestAppToken>k__BackingField;
    [NullableAttribute("2")]
public string BaseUrl { get; public set; }
    public string RelativePath { get; public set; }
    [DefaultValueAttribute("Get")]
public string HttpMethod { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<HttpRequestMessage> CustomizeHttpRequestMessage { get; public set; }
    public AcquireTokenOptions AcquireTokenOptions { get; public set; }
    [DefaultValueAttribute("Bearer")]
public string ProtocolScheme { get; public set; }
    public bool RequestAppToken { get; public set; }
    public AuthorizationHeaderProviderOptions(AuthorizationHeaderProviderOptions other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_BaseUrl();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_BaseUrl(string value);
    [CompilerGeneratedAttribute]
public string get_RelativePath();
    [CompilerGeneratedAttribute]
public void set_RelativePath(string value);
    public string get_HttpMethod();
    public void set_HttpMethod(string value);
    [CompilerGeneratedAttribute]
public Action`1<HttpRequestMessage> get_CustomizeHttpRequestMessage();
    [CompilerGeneratedAttribute]
public void set_CustomizeHttpRequestMessage(Action`1<HttpRequestMessage> value);
    public AcquireTokenOptions get_AcquireTokenOptions();
    public void set_AcquireTokenOptions(AcquireTokenOptions value);
    public string get_ProtocolScheme();
    public void set_ProtocolScheme(string value);
    [CompilerGeneratedAttribute]
public bool get_RequestAppToken();
    [CompilerGeneratedAttribute]
public void set_RequestAppToken(bool value);
    public AuthorizationHeaderProviderOptions Clone();
    protected virtual AuthorizationHeaderProviderOptions CloneInternal();
    public string GetApiUrl();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Identity.Abstractions.CredentialDescription : object {
    private string _cachedId;
    [CompilerGeneratedAttribute]
private CredentialSource <SourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyVaultUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateStorePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateDistinguishedName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyVaultCertificateName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateThumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateDiskPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificatePassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Base64EncodedValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManagedIdentityClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignedAssertionFileDiskPath>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationHeaderProviderOptions <DecryptKeysAuthenticationOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private X509Certificate2 <Certificate>k__BackingField;
    [CompilerGeneratedAttribute]
private object <CachedValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Skip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenExchangeUrl>k__BackingField;
    [NullableAttribute("1")]
public string Id { get; }
    public CredentialSource SourceType { get; public set; }
    public string Container { get; public set; }
    public string KeyVaultUrl { get; public set; }
    public string CertificateStorePath { get; public set; }
    public string CertificateDistinguishedName { get; public set; }
    public string KeyVaultCertificateName { get; public set; }
    public string CertificateThumbprint { get; public set; }
    public string CertificateDiskPath { get; public set; }
    public string CertificatePassword { get; public set; }
    public string Base64EncodedValue { get; public set; }
    public string ClientSecret { get; public set; }
    public string ManagedIdentityClientId { get; public set; }
    public string SignedAssertionFileDiskPath { get; public set; }
    public AuthorizationHeaderProviderOptions DecryptKeysAuthenticationOptions { get; public set; }
    public string ReferenceOrValue { get; public set; }
    public X509Certificate2 Certificate { get; public set; }
    public object CachedValue { get; public set; }
    public bool Skip { get; public set; }
    public CredentialType CredentialType { get; }
    public string TokenExchangeUrl { get; public set; }
    [NullableContextAttribute("1")]
public string get_Id();
    [CompilerGeneratedAttribute]
public CredentialSource get_SourceType();
    [CompilerGeneratedAttribute]
public void set_SourceType(CredentialSource value);
    public string get_Container();
    public void set_Container(string value);
    [CompilerGeneratedAttribute]
public string get_KeyVaultUrl();
    [CompilerGeneratedAttribute]
public void set_KeyVaultUrl(string value);
    [CompilerGeneratedAttribute]
public string get_CertificateStorePath();
    [CompilerGeneratedAttribute]
public void set_CertificateStorePath(string value);
    [CompilerGeneratedAttribute]
public string get_CertificateDistinguishedName();
    [CompilerGeneratedAttribute]
public void set_CertificateDistinguishedName(string value);
    [CompilerGeneratedAttribute]
public string get_KeyVaultCertificateName();
    [CompilerGeneratedAttribute]
public void set_KeyVaultCertificateName(string value);
    [CompilerGeneratedAttribute]
public string get_CertificateThumbprint();
    [CompilerGeneratedAttribute]
public void set_CertificateThumbprint(string value);
    [CompilerGeneratedAttribute]
public string get_CertificateDiskPath();
    [CompilerGeneratedAttribute]
public void set_CertificateDiskPath(string value);
    [CompilerGeneratedAttribute]
public string get_CertificatePassword();
    [CompilerGeneratedAttribute]
public void set_CertificatePassword(string value);
    [CompilerGeneratedAttribute]
public string get_Base64EncodedValue();
    [CompilerGeneratedAttribute]
public void set_Base64EncodedValue(string value);
    [CompilerGeneratedAttribute]
public string get_ClientSecret();
    [CompilerGeneratedAttribute]
public void set_ClientSecret(string value);
    [CompilerGeneratedAttribute]
public string get_ManagedIdentityClientId();
    [CompilerGeneratedAttribute]
public void set_ManagedIdentityClientId(string value);
    [CompilerGeneratedAttribute]
public string get_SignedAssertionFileDiskPath();
    [CompilerGeneratedAttribute]
public void set_SignedAssertionFileDiskPath(string value);
    [CompilerGeneratedAttribute]
public AuthorizationHeaderProviderOptions get_DecryptKeysAuthenticationOptions();
    [CompilerGeneratedAttribute]
public void set_DecryptKeysAuthenticationOptions(AuthorizationHeaderProviderOptions value);
    public string get_ReferenceOrValue();
    public void set_ReferenceOrValue(string value);
    [CompilerGeneratedAttribute]
public X509Certificate2 get_Certificate();
    [CompilerGeneratedAttribute]
public void set_Certificate(X509Certificate2 value);
    [CompilerGeneratedAttribute]
public virtual object get_CachedValue();
    [CompilerGeneratedAttribute]
public virtual void set_CachedValue(object value);
    [CompilerGeneratedAttribute]
public bool get_Skip();
    [CompilerGeneratedAttribute]
public void set_Skip(bool value);
    public CredentialType get_CredentialType();
    [CompilerGeneratedAttribute]
public string get_TokenExchangeUrl();
    [CompilerGeneratedAttribute]
public void set_TokenExchangeUrl(string value);
}
public enum Microsoft.Identity.Abstractions.CredentialSource : Enum {
    public int value__;
    public static CredentialSource Certificate;
    public static CredentialSource KeyVault;
    public static CredentialSource Base64Encoded;
    public static CredentialSource Path;
    public static CredentialSource StoreWithThumbprint;
    public static CredentialSource StoreWithDistinguishedName;
    public static CredentialSource ClientSecret;
    public static CredentialSource SignedAssertionFromManagedIdentity;
    public static CredentialSource SignedAssertionFilePath;
    public static CredentialSource SignedAssertionFromVault;
    public static CredentialSource AutoDecryptKeys;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Identity.Abstractions.CredentialSourceLoaderParameters : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Authority>k__BackingField;
    public string ClientId { get; public set; }
    public string Authority { get; public set; }
    public CredentialSourceLoaderParameters(string clientId, string authority);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_Authority();
    [CompilerGeneratedAttribute]
public void set_Authority(string value);
}
public enum Microsoft.Identity.Abstractions.CredentialType : Enum {
    public int value__;
    public static CredentialType Certificate;
    public static CredentialType Secret;
    public static CredentialType SignedAssertion;
    public static CredentialType DecryptKeys;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Identity.Abstractions.DownstreamApiOptions : AuthorizationHeaderProviderOptions {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <Scopes>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Func`2<object, HttpContent> <Serializer>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Func`2<HttpContent, object> <Deserializer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AcceptHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> Scopes { get; public set; }
    [NullableAttribute("2")]
public Func`2<object, HttpContent> Serializer { get; public set; }
    [NullableAttribute("2")]
public Func`2<HttpContent, object> Deserializer { get; public set; }
    public string AcceptHeader { get; public set; }
    public string ContentType { get; public set; }
    public DownstreamApiOptions(DownstreamApiOptions other);
    public DownstreamApiOptions Clone();
    protected virtual AuthorizationHeaderProviderOptions CloneInternal();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(IEnumerable`1<string> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Func`2<object, HttpContent> get_Serializer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Serializer(Func`2<object, HttpContent> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Func`2<HttpContent, object> get_Deserializer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Deserializer(Func`2<HttpContent, object> value);
    [CompilerGeneratedAttribute]
public string get_AcceptHeader();
    [CompilerGeneratedAttribute]
public void set_AcceptHeader(string value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod : DownstreamApiOptions {
    public string HttpMethod { get; private set; }
    private DownstreamApiOptionsReadOnlyHttpMethod(DownstreamApiOptionsReadOnlyHttpMethod other);
    public DownstreamApiOptionsReadOnlyHttpMethod(DownstreamApiOptions options, string httpMethod);
    public string get_HttpMethod();
    private void set_HttpMethod(string value);
    public DownstreamApiOptionsReadOnlyHttpMethod Clone();
    protected virtual AuthorizationHeaderProviderOptions CloneInternal();
}
[NullableContextAttribute("1")]
public interface Microsoft.Identity.Abstractions.IAuthorizationHeaderProvider {
    public abstract virtual Task`1<string> CreateAuthorizationHeaderForUserAsync(IEnumerable`1<string> scopes, AuthorizationHeaderProviderOptions authorizationHeaderProviderOptions, ClaimsPrincipal claimsPrincipal, CancellationToken cancellationToken);
    public abstract virtual Task`1<string> CreateAuthorizationHeaderForAppAsync(string scopes, AuthorizationHeaderProviderOptions downstreamApiOptions, CancellationToken cancellationToken);
    public abstract virtual Task`1<string> CreateAuthorizationHeaderAsync(IEnumerable`1<string> scopes, AuthorizationHeaderProviderOptions options, ClaimsPrincipal claimsPrincipal, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Microsoft.Identity.Abstractions.ICredentialsLoader {
    public IDictionary`2<CredentialSource, ICredentialSourceLoader> CredentialSourceLoaders { get; }
    public abstract virtual IDictionary`2<CredentialSource, ICredentialSourceLoader> get_CredentialSourceLoaders();
    public abstract virtual Task LoadCredentialsIfNeededAsync(CredentialDescription credentialDescription, CredentialSourceLoaderParameters parameters);
    public abstract virtual Task`1<CredentialDescription> LoadFirstValidCredentialsAsync(IEnumerable`1<CredentialDescription> credentialDescriptions, CredentialSourceLoaderParameters parameters);
    public abstract virtual void ResetCredentials(IEnumerable`1<CredentialDescription> credentialDescriptions);
}
[NullableContextAttribute("1")]
public interface Microsoft.Identity.Abstractions.ICredentialSourceLoader {
    public CredentialSource CredentialSource { get; }
    public abstract virtual Task LoadIfNeededAsync(CredentialDescription credentialDescription, CredentialSourceLoaderParameters parameters);
    public abstract virtual CredentialSource get_CredentialSource();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Identity.Abstractions.IdentityApplicationOptions : object {
    [CompilerGeneratedAttribute]
private string <Authority>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnablePiiLogging>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ExtraQueryParameters>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<CredentialDescription> <ClientCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Audience>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <Audiences>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<CredentialDescription> <TokenDecryptionCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowWebApiToBeAuthorizedByACL>k__BackingField;
    public string Authority { get; public set; }
    public string ClientId { get; public set; }
    public bool EnablePiiLogging { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> ExtraQueryParameters { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<CredentialDescription> ClientCredentials { get; public set; }
    public string Audience { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> Audiences { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<CredentialDescription> TokenDecryptionCredentials { get; public set; }
    public bool AllowWebApiToBeAuthorizedByACL { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Authority();
    [CompilerGeneratedAttribute]
public virtual void set_Authority(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public bool get_EnablePiiLogging();
    [CompilerGeneratedAttribute]
public void set_EnablePiiLogging(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ExtraQueryParameters();
    [CompilerGeneratedAttribute]
public void set_ExtraQueryParameters(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<CredentialDescription> get_ClientCredentials();
    [CompilerGeneratedAttribute]
public void set_ClientCredentials(IEnumerable`1<CredentialDescription> value);
    [CompilerGeneratedAttribute]
public string get_Audience();
    [CompilerGeneratedAttribute]
public void set_Audience(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Audiences();
    [CompilerGeneratedAttribute]
public void set_Audiences(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<CredentialDescription> get_TokenDecryptionCredentials();
    [CompilerGeneratedAttribute]
public void set_TokenDecryptionCredentials(IEnumerable`1<CredentialDescription> value);
    [CompilerGeneratedAttribute]
public bool get_AllowWebApiToBeAuthorizedByACL();
    [CompilerGeneratedAttribute]
public void set_AllowWebApiToBeAuthorizedByACL(bool value);
}
[NullableContextAttribute("1")]
public interface Microsoft.Identity.Abstractions.IDownstreamApi {
    public abstract virtual Task`1<HttpResponseMessage> CallApiAsync(DownstreamApiOptions downstreamApiOptions, ClaimsPrincipal user, HttpContent content, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<HttpResponseMessage> CallApiAsync(string serviceName, Action`1<DownstreamApiOptions> downstreamApiOptionsOverride, ClaimsPrincipal user, HttpContent content, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<HttpResponseMessage> CallApiForUserAsync(string serviceName, Action`1<DownstreamApiOptions> downstreamApiOptionsOverride, ClaimsPrincipal user, HttpContent content, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<HttpResponseMessage> CallApiForAppAsync(string serviceName, Action`1<DownstreamApiOptions> downstreamApiOptionsOverride, HttpContent content, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<TOutput> CallApiForUserAsync(string serviceName, TInput input, Action`1<DownstreamApiOptions> downstreamApiOptionsOverride, ClaimsPrincipal user, CancellationToken cancellationToken);
    public abstract virtual Task`1<TOutput> CallApiForUserAsync(string serviceName, Action`1<DownstreamApiOptions> downstreamApiOptionsOverride, ClaimsPrincipal user, CancellationToken cancellationToken);
    public abstract virtual Task`1<TOutput> CallApiForAppAsync(string serviceName, TInput input, Action`1<DownstreamApiOptions> downstreamApiOptionsOverride, CancellationToken cancellationToken);
    public abstract virtual Task`1<TOutput> CallApiForAppAsync(string serviceName, Action`1<DownstreamApiOptions> downstreamApiOptionsOverride, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<TOutput> GetForUserAsync(string serviceName, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, ClaimsPrincipal user, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<TOutput> GetForUserAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, ClaimsPrincipal user, CancellationToken cancellationToken);
    public abstract virtual Task`1<TOutput> GetForAppAsync(string serviceName, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, CancellationToken cancellationToken);
    public abstract virtual Task`1<TOutput> GetForAppAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual Task PostForUserAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, ClaimsPrincipal user, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<TOutput> PostForUserAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, ClaimsPrincipal user, CancellationToken cancellationToken);
    public abstract virtual Task PostForAppAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, CancellationToken cancellationToken);
    public abstract virtual Task`1<TOutput> PostForAppAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual Task PutForUserAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, ClaimsPrincipal user, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<TOutput> PutForUserAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, ClaimsPrincipal user, CancellationToken cancellationToken);
    public abstract virtual Task PutForAppAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, CancellationToken cancellationToken);
    public abstract virtual Task`1<TOutput> PutForAppAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual Task DeleteForUserAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, ClaimsPrincipal user, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<TOutput> DeleteForUserAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, ClaimsPrincipal user, CancellationToken cancellationToken);
    public abstract virtual Task DeleteForAppAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, CancellationToken cancellationToken);
    public abstract virtual Task`1<TOutput> DeleteForAppAsync(string serviceName, TInput input, Action`1<DownstreamApiOptionsReadOnlyHttpMethod> downstreamApiOptionsOverride, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Microsoft.Identity.Abstractions.ITokenAcquirer {
    public abstract virtual Task`1<AcquireTokenResult> GetTokenForUserAsync(IEnumerable`1<string> scopes, AcquireTokenOptions tokenAcquisitionOptions, ClaimsPrincipal user, CancellationToken cancellationToken);
    public abstract virtual Task`1<AcquireTokenResult> GetTokenForAppAsync(string scope, AcquireTokenOptions tokenAcquisitionOptions, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Microsoft.Identity.Abstractions.ITokenAcquirerFactory {
    public abstract virtual ITokenAcquirer GetTokenAcquirer(IdentityApplicationOptions identityApplicationOptions);
    public abstract virtual ITokenAcquirer GetTokenAcquirer(string optionName);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Identity.Abstractions.ManagedIdentityOptions : object {
    [CompilerGeneratedAttribute]
private string <UserAssignedClientId>k__BackingField;
    [DefaultValueAttribute("")]
public string UserAssignedClientId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserAssignedClientId();
    [CompilerGeneratedAttribute]
public void set_UserAssignedClientId(string value);
    [NullableContextAttribute("1")]
public ManagedIdentityOptions Clone();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Identity.Abstractions.MicrosoftIdentityApplicationOptions : IdentityApplicationOptions {
    private string _authority;
    [CompilerGeneratedAttribute]
private string <Instance>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureRegion>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <ClientCapabilities>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SendX5C>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WithSpaAuthCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EditProfilePolicyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignUpSignInPolicyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResetPasswordPolicyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResetPasswordPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorPath>k__BackingField;
    public string Instance { get; public set; }
    public string TenantId { get; public set; }
    public string Authority { get; public set; }
    public string AzureRegion { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> ClientCapabilities { get; public set; }
    public bool SendX5C { get; public set; }
    public bool WithSpaAuthCode { get; public set; }
    public string Domain { get; public set; }
    public string EditProfilePolicyId { get; public set; }
    public string SignUpSignInPolicyId { get; public set; }
    public string ResetPasswordPolicyId { get; public set; }
    public string DefaultUserFlow { get; }
    public string ResetPasswordPath { get; public set; }
    public string ErrorPath { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Instance();
    [CompilerGeneratedAttribute]
public void set_Instance(string value);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(string value);
    public virtual string get_Authority();
    public virtual void set_Authority(string value);
    [CompilerGeneratedAttribute]
public string get_AzureRegion();
    [CompilerGeneratedAttribute]
public void set_AzureRegion(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ClientCapabilities();
    [CompilerGeneratedAttribute]
public void set_ClientCapabilities(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_SendX5C();
    [CompilerGeneratedAttribute]
public void set_SendX5C(bool value);
    [CompilerGeneratedAttribute]
public bool get_WithSpaAuthCode();
    [CompilerGeneratedAttribute]
public void set_WithSpaAuthCode(bool value);
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
public void set_Domain(string value);
    [CompilerGeneratedAttribute]
public string get_EditProfilePolicyId();
    [CompilerGeneratedAttribute]
public void set_EditProfilePolicyId(string value);
    [CompilerGeneratedAttribute]
public string get_SignUpSignInPolicyId();
    [CompilerGeneratedAttribute]
public void set_SignUpSignInPolicyId(string value);
    [CompilerGeneratedAttribute]
public string get_ResetPasswordPolicyId();
    [CompilerGeneratedAttribute]
public void set_ResetPasswordPolicyId(string value);
    public string get_DefaultUserFlow();
    [CompilerGeneratedAttribute]
public string get_ResetPasswordPath();
    [CompilerGeneratedAttribute]
public void set_ResetPasswordPath(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorPath();
    [CompilerGeneratedAttribute]
public void set_ErrorPath(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
