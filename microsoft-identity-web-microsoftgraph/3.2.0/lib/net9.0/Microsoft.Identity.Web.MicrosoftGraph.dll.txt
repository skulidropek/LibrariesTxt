[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Identity.Web.BaseRequestExtensions : object {
    [ExtensionAttribute]
public static T WithScopes(T baseRequest, String[] scopes);
    [ExtensionAttribute]
public static T WithAppOnly(T baseRequest, bool appOnly, string tenant);
    [ExtensionAttribute]
public static T WithAuthenticationScheme(T baseRequest, string authenticationScheme);
    [ExtensionAttribute]
public static T WithAuthenticationOptions(T baseRequest, Action`1<AuthorizationHeaderProviderOptions> overrideAuthenticationOptions);
    private static T SetParameter(T baseRequest, Action`1<TokenAcquisitionAuthenticationProviderOption> action);
    [ExtensionAttribute]
public static T WithUser(T baseRequest, ClaimsPrincipal user);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Identity.Web.GraphServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddMicrosoftGraph(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddMicrosoftGraph(IServiceCollection services, Action`1<MicrosoftGraphOptions> configureMicrosoftGraphOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Identity.Web.MicrosoftGraphExtensions : object {
    [ExtensionAttribute]
public static MicrosoftIdentityAppCallsWebApiAuthenticationBuilder AddMicrosoftGraph(MicrosoftIdentityAppCallsWebApiAuthenticationBuilder builder, IConfigurationSection configurationSection);
    [ExtensionAttribute]
public static MicrosoftIdentityAppCallsWebApiAuthenticationBuilder AddMicrosoftGraph(MicrosoftIdentityAppCallsWebApiAuthenticationBuilder builder, string graphBaseUrl, string defaultScopes);
    [ExtensionAttribute]
public static MicrosoftIdentityAppCallsWebApiAuthenticationBuilder AddMicrosoftGraph(MicrosoftIdentityAppCallsWebApiAuthenticationBuilder builder, Action`1<MicrosoftGraphOptions> configureMicrosoftGraphOptions);
    [ExtensionAttribute]
public static MicrosoftIdentityAppCallsWebApiAuthenticationBuilder AddMicrosoftGraph(MicrosoftIdentityAppCallsWebApiAuthenticationBuilder builder, Func`2<IAuthenticationProvider, GraphServiceClient> graphServiceClientFactory, IEnumerable`1<string> initialScopes);
    [ExtensionAttribute]
public static MicrosoftIdentityAppCallsWebApiAuthenticationBuilder AddMicrosoftGraphAppOnly(MicrosoftIdentityAppCallsWebApiAuthenticationBuilder builder, Func`2<IAuthenticationProvider, GraphServiceClient> graphServiceClientFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Identity.Web.MicrosoftGraphOptions : object {
    [CompilerGeneratedAttribute]
private string <BaseUrl>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    public string BaseUrl { get; public set; }
    [NullableAttribute("2")]
public string Scopes { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BaseUrl();
    [CompilerGeneratedAttribute]
public void set_BaseUrl(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Scopes();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Scopes(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Identity.Web.TokenAcquisitionAuthenticationProvider : object {
    private IAuthorizationHeaderProvider _authorizationHeaderProvider;
    private TokenAcquisitionAuthenticationProviderOption _initialOptions;
    private IEnumerable`1<string> _defaultGraphScope;
    public TokenAcquisitionAuthenticationProvider(IAuthorizationHeaderProvider authorizationHeaderProvider, TokenAcquisitionAuthenticationProviderOption options);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenAcquisitionAuthenticationProvider/<AuthenticateRequestAsync>d__4")]
public sealed virtual Task AuthenticateRequestAsync(HttpRequestMessage request);
    private TokenAcquisitionAuthenticationProviderOption GetMsalAuthProviderOption(HttpRequestMessage httpRequestMessage);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.Identity.Web.TokenAcquisitionAuthenticationProviderOption : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AppOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tenant>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationScheme>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<AuthorizationHeaderProviderOptions> <AuthorizationHeaderProviderOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <User>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Scopes { get; public set; }
    public Nullable`1<bool> AppOnly { get; public set; }
    public string Tenant { get; public set; }
    public string AuthenticationScheme { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<AuthorizationHeaderProviderOptions> AuthorizationHeaderProviderOptions { get; public set; }
    public ClaimsPrincipal User { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_Scopes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Scopes(String[] value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AppOnly();
    [CompilerGeneratedAttribute]
public void set_AppOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Tenant();
    [CompilerGeneratedAttribute]
public void set_Tenant(string value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationScheme();
    [CompilerGeneratedAttribute]
public void set_AuthenticationScheme(string value);
    [CompilerGeneratedAttribute]
public Action`1<AuthorizationHeaderProviderOptions> get_AuthorizationHeaderProviderOptions();
    [CompilerGeneratedAttribute]
public void set_AuthorizationHeaderProviderOptions(Action`1<AuthorizationHeaderProviderOptions> value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_User();
    [CompilerGeneratedAttribute]
public void set_User(ClaimsPrincipal value);
}
