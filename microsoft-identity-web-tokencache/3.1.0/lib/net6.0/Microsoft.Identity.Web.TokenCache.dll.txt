[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Identity.Web.ClaimsPrincipalExtensions : object {
    private static string Oid;
    private static string ObjectId;
    private static string TenantId;
    private static string Tid;
    private static string PreferredUserName;
    private static string Name;
    private static string UserFlow;
    private static string Tfp;
    private static string UniqueObjectIdentifier;
    private static string UniqueTenantIdentifier;
    private static string NameIdentifierId;
    private static string MsaTenantId;
    private static string Consumers;
    private static string Organizations;
    [ExtensionAttribute]
public static string GetMsalAccountId(ClaimsPrincipal claimsPrincipal);
    [ExtensionAttribute]
public static string GetObjectId(ClaimsPrincipal claimsPrincipal);
    [ExtensionAttribute]
public static string GetTenantId(ClaimsPrincipal claimsPrincipal);
    [ExtensionAttribute]
public static string GetLoginHint(ClaimsPrincipal claimsPrincipal);
    [ExtensionAttribute]
public static string GetDomainHint(ClaimsPrincipal claimsPrincipal);
    [ExtensionAttribute]
public static string GetDisplayName(ClaimsPrincipal claimsPrincipal);
    [ExtensionAttribute]
public static string GetUserFlowId(ClaimsPrincipal claimsPrincipal);
    [ExtensionAttribute]
public static string GetHomeObjectId(ClaimsPrincipal claimsPrincipal);
    [ExtensionAttribute]
public static string GetHomeTenantId(ClaimsPrincipal claimsPrincipal);
    [ExtensionAttribute]
public static string GetNameIdentifierId(ClaimsPrincipal claimsPrincipal);
    [NullableContextAttribute("2")]
private static string GetClaimValue(ClaimsPrincipal claimsPrincipal, String[] claimNames);
    [ExtensionAttribute]
private static string FindFirstValue(ClaimsPrincipal claimsPrincipal, string type);
}
internal static class Microsoft.Identity.Web.LoggingEventId : object {
    public static EventId DistributedCacheState;
    public static EventId DistributedCacheStateWithTime;
    public static EventId DistributedCacheReadTime;
    public static EventId DistributedCacheConnectionError;
    public static EventId DistributedCacheRetry;
    public static EventId MemoryCacheRemove;
    public static EventId MemoryCacheRead;
    public static EventId MemoryCacheCount;
    public static EventId BackPropagateL2toL1;
    public static EventId CacheDeserializationError;
    private static LoggingEventId();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.Identity.Web.TokenCacheErrorMessage : object {
    public static string InitializeAsyncIsObsolete;
    public static string ExceptionDeserializingCache;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Identity.Web.TokenCacheExtensions : object {
    internal static ConcurrentDictionary`2<MethodInfo, IServiceProvider> s_serviceProviderFromAction;
    private static TokenCacheExtensions();
    [ExtensionAttribute]
internal static IConfidentialClientApplication AddTokenCaches(IConfidentialClientApplication confidentialClientApp, Action`1<IServiceCollection> initializeCaches);
    [ExtensionAttribute]
public static IConfidentialClientApplication AddInMemoryTokenCache(IConfidentialClientApplication confidentialClientApp);
    [ExtensionAttribute]
public static IConfidentialClientApplication AddInMemoryTokenCache(IConfidentialClientApplication confidentialClientApp, Action`1<IServiceCollection> initializeMemoryCache);
    [ExtensionAttribute]
public static IConfidentialClientApplication AddDistributedTokenCache(IConfidentialClientApplication confidentialClientApp, Action`1<IServiceCollection> initializeDistributedCache);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Identity.Web.TokenCacheProviders.CacheSerializerHints : object {
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <SuggestedCacheExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private TelemetryData <TelemetryData>k__BackingField;
    public CancellationToken CancellationToken { get; public set; }
    public Nullable`1<DateTimeOffset> SuggestedCacheExpiry { get; public set; }
    internal TelemetryData TelemetryData { get; internal set; }
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
    [CompilerGeneratedAttribute]
public void set_CancellationToken(CancellationToken value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_SuggestedCacheExpiry();
    [CompilerGeneratedAttribute]
public void set_SuggestedCacheExpiry(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
internal TelemetryData get_TelemetryData();
    [CompilerGeneratedAttribute]
internal void set_TelemetryData(TelemetryData value);
}
[ExtensionAttribute]
public static class Microsoft.Identity.Web.TokenCacheProviders.Distributed.DistributedTokenCacheAdapterExtension : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IServiceCollection AddDistributedTokenCaches(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapter : MsalAbstractTokenCacheProvider {
    internal IDistributedCache _distributedCache;
    [NullableAttribute("2")]
internal MemoryCache _memoryCache;
    private ILogger`1<MsalDistributedTokenCacheAdapter> _logger;
    private Nullable`1<TimeSpan> _memoryCacheExpirationTime;
    private string _distributedCacheType;
    private string _memoryCacheType;
    private static string DefaultPurpose;
    private MsalDistributedTokenCacheAdapterOptions _distributedCacheOptions;
    public MsalDistributedTokenCacheAdapter(IDistributedCache distributedCache, IOptions`1<MsalDistributedTokenCacheAdapterOptions> distributedCacheOptions, ILogger`1<MsalDistributedTokenCacheAdapter> logger, IServiceProvider serviceProvider);
    [NullableContextAttribute("2")]
private static IDataProtector GetDataProtector(IOptions`1<MsalDistributedTokenCacheAdapterOptions> distributedCacheOptions, IServiceProvider serviceProvider);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapter/<RemoveKeyAsync>d__10")]
protected virtual Task RemoveKeyAsync(string cacheKey);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapter/<RemoveKeyAsync>d__11")]
protected virtual Task RemoveKeyAsync(string cacheKey, CacheSerializerHints cacheSerializerHints);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapter/<ReadCacheBytesAsync>d__12")]
protected virtual Task`1<Byte[]> ReadCacheBytesAsync(string cacheKey);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapter/<ReadCacheBytesAsync>d__13")]
protected virtual Task`1<Byte[]> ReadCacheBytesAsync(string cacheKey, CacheSerializerHints cacheSerializerHints);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapter/<WriteCacheBytesAsync>d__14")]
protected virtual Task WriteCacheBytesAsync(string cacheKey, Byte[] bytes);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapter/<WriteCacheBytesAsync>d__15")]
protected virtual Task WriteCacheBytesAsync(string cacheKey, Byte[] bytes, CacheSerializerHints cacheSerializerHints);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapter/<L2OperationWithRetryOnFailureAsync>d__16")]
private Task L2OperationWithRetryOnFailureAsync(string operation, Func`2<string, Task> cacheOperation, string cacheKey, Byte[] bytes, bool inRetry);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapter/<L2OperationWithRetryOnFailureAsync>d__17")]
private Task`1<Byte[]> L2OperationWithRetryOnFailureAsync(string operation, Func`2<string, Task`1<Byte[]>> cacheOperation, string cacheKey, bool inRetry);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions : DistributedCacheEntryOptions {
    internal static int FiveHundredMb;
    [CompilerGeneratedAttribute]
private MemoryCacheOptions <L1CacheOptions>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<Exception, bool> <OnL2CacheFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private double <L1ExpirationTimeRatio>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Encrypt>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableL1Cache>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableAsyncL2Write>k__BackingField;
    public MemoryCacheOptions L1CacheOptions { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<Exception, bool> OnL2CacheFailure { get; public set; }
    internal double L1ExpirationTimeRatio { get; internal set; }
    public bool Encrypt { get; public set; }
    public bool DisableL1Cache { get; public set; }
    public bool EnableAsyncL2Write { get; public set; }
    [CompilerGeneratedAttribute]
public MemoryCacheOptions get_L1CacheOptions();
    [CompilerGeneratedAttribute]
public void set_L1CacheOptions(MemoryCacheOptions value);
    [CompilerGeneratedAttribute]
public Func`2<Exception, bool> get_OnL2CacheFailure();
    [CompilerGeneratedAttribute]
public void set_OnL2CacheFailure(Func`2<Exception, bool> value);
    [CompilerGeneratedAttribute]
internal double get_L1ExpirationTimeRatio();
    [CompilerGeneratedAttribute]
internal void set_L1ExpirationTimeRatio(double value);
    [CompilerGeneratedAttribute]
public bool get_Encrypt();
    [CompilerGeneratedAttribute]
public void set_Encrypt(bool value);
    [CompilerGeneratedAttribute]
public bool get_DisableL1Cache();
    [CompilerGeneratedAttribute]
public void set_DisableL1Cache(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableAsyncL2Write();
    [CompilerGeneratedAttribute]
public void set_EnableAsyncL2Write(bool value);
}
[NullableContextAttribute("1")]
public interface Microsoft.Identity.Web.TokenCacheProviders.IMsalTokenCacheProvider {
    [ObsoleteAttribute("IDW10801: Use Initialize instead. See https://aka.ms/ms-id-web/1.9.0. ", "True")]
public abstract virtual Task InitializeAsync(ITokenCache tokenCache);
    public abstract virtual void Initialize(ITokenCache tokenCache);
    public abstract virtual Task ClearAsync(string homeAccountId);
}
[ExtensionAttribute]
public static class Microsoft.Identity.Web.TokenCacheProviders.InMemory.InMemoryTokenCacheProviderExtension : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IServiceCollection AddInMemoryTokenCaches(IServiceCollection services);
}
public class Microsoft.Identity.Web.TokenCacheProviders.InMemory.MsalMemoryTokenCacheOptions : object {
    internal static TimeSpan DefaultAbsoluteExpirationRelativeToNow;
    [CompilerGeneratedAttribute]
private TimeSpan <AbsoluteExpirationRelativeToNow>k__BackingField;
    public TimeSpan AbsoluteExpirationRelativeToNow { get; public set; }
    private static MsalMemoryTokenCacheOptions();
    [CompilerGeneratedAttribute]
public TimeSpan get_AbsoluteExpirationRelativeToNow();
    [CompilerGeneratedAttribute]
public void set_AbsoluteExpirationRelativeToNow(TimeSpan value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Identity.Web.TokenCacheProviders.InMemory.MsalMemoryTokenCacheProvider : MsalAbstractTokenCacheProvider {
    private IMemoryCache _memoryCache;
    private MsalMemoryTokenCacheOptions _cacheOptions;
    public MsalMemoryTokenCacheProvider(IMemoryCache memoryCache, IOptions`1<MsalMemoryTokenCacheOptions> cacheOptions);
    protected virtual Task RemoveKeyAsync(string cacheKey);
    protected virtual Task`1<Byte[]> ReadCacheBytesAsync(string cacheKey);
    protected virtual Task`1<Byte[]> ReadCacheBytesAsync(string cacheKey, CacheSerializerHints cacheSerializerHints);
    protected virtual Task WriteCacheBytesAsync(string cacheKey, Byte[] bytes);
    protected virtual Task WriteCacheBytesAsync(string cacheKey, Byte[] bytes, CacheSerializerHints cacheSerializerHints);
    internal TimeSpan DetermineCacheEntryExpiry(CacheSerializerHints cacheSerializerHints);
}
[IsReadOnlyAttribute]
internal class Microsoft.Identity.Web.TokenCacheProviders.MeasureDurationResult : ValueType {
    private static double Thousand;
    [CompilerGeneratedAttribute]
private long <Ticks>k__BackingField;
    public long Ticks { get; }
    public double MilliSeconds { get; }
    public MeasureDurationResult(long ticks);
    [CompilerGeneratedAttribute]
public long get_Ticks();
    public double get_MilliSeconds();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Microsoft.Identity.Web.TokenCacheProviders.MeasureDurationResult`1 : ValueType {
    [CompilerGeneratedAttribute]
private TResult <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Ticks>k__BackingField;
    public TResult Result { get; }
    public long Ticks { get; }
    public MeasureDurationResult`1(TResult result, long ticks);
    [CompilerGeneratedAttribute]
public TResult get_Result();
    [CompilerGeneratedAttribute]
public long get_Ticks();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.Identity.Web.TokenCacheProviders.MsalAbstractTokenCacheProvider : object {
    [NullableAttribute("2")]
private IDataProtector _protector;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ILogger`1<MsalAbstractTokenCacheProvider> _logger;
    [NullableContextAttribute("2")]
protected MsalAbstractTokenCacheProvider(IDataProtector dataProtector);
    protected MsalAbstractTokenCacheProvider(IDataProtector dataProtector, ILogger`1<MsalAbstractTokenCacheProvider> logger);
    public sealed virtual void Initialize(ITokenCache tokenCache);
    public sealed virtual Task InitializeAsync(ITokenCache tokenCache);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.MsalAbstractTokenCacheProvider/<OnAfterAccessAsync>d__6")]
private Task OnAfterAccessAsync(TokenCacheNotificationArgs args);
    private Byte[] ProtectBytes(Byte[] msalBytes);
    private static CacheSerializerHints CreateHintsFromArgs(TokenCacheNotificationArgs args);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.MsalAbstractTokenCacheProvider/<OnBeforeAccessAsync>d__9")]
private Task OnBeforeAccessAsync(TokenCacheNotificationArgs args);
    [NullableContextAttribute("2")]
private Byte[] UnprotectBytes(Byte[] msalBytes);
    protected virtual Task OnBeforeWriteAsync(TokenCacheNotificationArgs args);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.MsalAbstractTokenCacheProvider/<ClearAsync>d__12")]
public sealed virtual Task ClearAsync(string homeAccountId);
    protected abstract virtual Task WriteCacheBytesAsync(string cacheKey, Byte[] bytes);
    protected virtual Task WriteCacheBytesAsync(string cacheKey, Byte[] bytes, CacheSerializerHints cacheSerializerHints);
    protected abstract virtual Task`1<Byte[]> ReadCacheBytesAsync(string cacheKey);
    protected virtual Task`1<Byte[]> ReadCacheBytesAsync(string cacheKey, CacheSerializerHints cacheSerializerHints);
    protected abstract virtual Task RemoveKeyAsync(string cacheKey);
    protected virtual Task RemoveKeyAsync(string cacheKey, CacheSerializerHints cacheSerializerHints);
    public virtual string GetSuggestedCacheKey(TokenCacheNotificationArgs args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.Identity.Web.TokenCacheProviders.Utility : object {
    internal static Stopwatch s_watch;
    private static Utility();
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.Utility/<Measure>d__1")]
[ExtensionAttribute]
internal static Task`1<MeasureDurationResult> Measure(Task task);
    [AsyncStateMachineAttribute("Microsoft.Identity.Web.TokenCacheProviders.Utility/<Measure>d__2`1")]
[ExtensionAttribute]
internal static Task`1<MeasureDurationResult`1<TResult>> Measure(Task`1<TResult> task);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
