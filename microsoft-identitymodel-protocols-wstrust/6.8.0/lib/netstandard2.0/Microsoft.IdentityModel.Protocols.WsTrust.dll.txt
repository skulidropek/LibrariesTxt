public class Microsoft.IdentityModel.Protocols.WsAddressing.EndpointReference : object {
    [CompilerGeneratedAttribute]
private ICollection`1<XmlElement> <AdditionalXmlElements>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    public ICollection`1<XmlElement> AdditionalXmlElements { get; }
    public string Uri { get; }
    public EndpointReference(string uri);
    [CompilerGeneratedAttribute]
public ICollection`1<XmlElement> get_AdditionalXmlElements();
    [CompilerGeneratedAttribute]
public string get_Uri();
}
public class Microsoft.IdentityModel.Protocols.WsAddressing.WsAddressing10Constants : WsAddressingConstants {
}
public class Microsoft.IdentityModel.Protocols.WsAddressing.WsAddressing10Version : WsAddressingVersion {
}
public class Microsoft.IdentityModel.Protocols.WsAddressing.WsAddressing200408Constants : WsAddressingConstants {
}
public class Microsoft.IdentityModel.Protocols.WsAddressing.WsAddressing200408Version : WsAddressingVersion {
}
public static class Microsoft.IdentityModel.Protocols.WsAddressing.WsAddressingAttributes : object {
    public static string PortName;
    public static string RelationshipType;
}
public abstract class Microsoft.IdentityModel.Protocols.WsAddressing.WsAddressingConstants : WsConstantsBase {
    [CompilerGeneratedAttribute]
private static IList`1<string> <KnownNamespaces>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsAddressing10Constants <Addressing10>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsAddressing200408Constants <Addressing200408>k__BackingField;
    public static IList`1<string> KnownNamespaces { get; }
    public static WsAddressing10Constants Addressing10 { get; }
    public static WsAddressing200408Constants Addressing200408 { get; }
    private static WsAddressingConstants();
    [CompilerGeneratedAttribute]
public static IList`1<string> get_KnownNamespaces();
    [CompilerGeneratedAttribute]
public static WsAddressing10Constants get_Addressing10();
    [CompilerGeneratedAttribute]
public static WsAddressing200408Constants get_Addressing200408();
}
public static class Microsoft.IdentityModel.Protocols.WsAddressing.WsAddressingElements : object {
    public static string Action;
    public static string Address;
    public static string EndpointReference;
    public static string Fault;
    public static string FaultTo;
    public static string From;
    public static string MessageId;
    public static string ReplyTo;
    public static string RelatesTo;
    public static string To;
}
internal class Microsoft.IdentityModel.Protocols.WsAddressing.WsAddressingSerializer : object {
    public virtual EndpointReference ReadEndpointReference(XmlDictionaryReader reader);
    public static void WriteEndpointReference(XmlDictionaryWriter writer, WsSerializationContext serializationContext, EndpointReference endpointReference);
}
public abstract class Microsoft.IdentityModel.Protocols.WsAddressing.WsAddressingVersion : object {
    public static WsAddressingVersion Addressing10;
    public static WsAddressingVersion Addressing200408;
    private static WsAddressingVersion();
}
public abstract class Microsoft.IdentityModel.Protocols.WsConstantsBase : object {
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    public string Namespace { get; protected set; }
    public string Prefix { get; protected set; }
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
protected void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
protected void set_Prefix(string value);
}
public class Microsoft.IdentityModel.Protocols.WsFed.AdditionalContext : object {
    [CompilerGeneratedAttribute]
private IList`1<ContextItem> <Items>k__BackingField;
    public IList`1<ContextItem> Items { get; }
    public AdditionalContext(IList`1<ContextItem> items);
    [CompilerGeneratedAttribute]
public IList`1<ContextItem> get_Items();
}
public class Microsoft.IdentityModel.Protocols.WsFed.ClaimType : object {
    private string _uri;
    private string _value;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsOptional>k__BackingField;
    public Nullable`1<bool> IsOptional { get; public set; }
    public string Value { get; public set; }
    public string Uri { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsOptional();
    [CompilerGeneratedAttribute]
public void set_IsOptional(Nullable`1<bool> value);
    public string get_Value();
    public void set_Value(string value);
    public string get_Uri();
    public void set_Uri(string value);
}
public class Microsoft.IdentityModel.Protocols.WsFed.ContextItem : object {
    private string _name;
    private string _scope;
    private string _value;
    public string Name { get; public set; }
    public string Scope { get; public set; }
    public string Value { get; public set; }
    public ContextItem(string name);
    public ContextItem(string name, string value);
    public ContextItem(string name, string value, string scope);
    public string get_Name();
    public void set_Name(string value);
    public string get_Scope();
    public void set_Scope(string value);
    public string get_Value();
    public void set_Value(string value);
}
public class Microsoft.IdentityModel.Protocols.WsFed.WsFed12Constants : WsFedConstants {
}
internal class Microsoft.IdentityModel.Protocols.WsFed.WsFed12Version : WsFedVersion {
}
public static class Microsoft.IdentityModel.Protocols.WsFed.WsFedAttributes : object {
    public static string Dialect;
    public static string Name;
    public static string Optional;
    public static string Scope;
    public static string Uri;
}
public abstract class Microsoft.IdentityModel.Protocols.WsFed.WsFedConstants : WsConstantsBase {
    [CompilerGeneratedAttribute]
private static IList`1<string> <KnownNamespaces>k__BackingField;
    [CompilerGeneratedAttribute]
private static IList`1<string> <KnownAuthNamespaces>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsFed12Constants <Fed12>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrivacyNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrivacyPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SchemaLocation>k__BackingField;
    public static IList`1<string> KnownNamespaces { get; }
    public static IList`1<string> KnownAuthNamespaces { get; }
    public static WsFed12Constants Fed12 { get; }
    public string AuthNamespace { get; protected set; }
    public string AuthPrefix { get; protected set; }
    public string PrivacyNamespace { get; protected set; }
    public string PrivacyPrefix { get; protected set; }
    public string SchemaLocation { get; protected set; }
    private static WsFedConstants();
    [CompilerGeneratedAttribute]
public static IList`1<string> get_KnownNamespaces();
    [CompilerGeneratedAttribute]
public static IList`1<string> get_KnownAuthNamespaces();
    [CompilerGeneratedAttribute]
public static WsFed12Constants get_Fed12();
    [CompilerGeneratedAttribute]
public string get_AuthNamespace();
    [CompilerGeneratedAttribute]
protected void set_AuthNamespace(string value);
    [CompilerGeneratedAttribute]
public string get_AuthPrefix();
    [CompilerGeneratedAttribute]
protected void set_AuthPrefix(string value);
    [CompilerGeneratedAttribute]
public string get_PrivacyNamespace();
    [CompilerGeneratedAttribute]
protected void set_PrivacyNamespace(string value);
    [CompilerGeneratedAttribute]
public string get_PrivacyPrefix();
    [CompilerGeneratedAttribute]
protected void set_PrivacyPrefix(string value);
    [CompilerGeneratedAttribute]
public string get_SchemaLocation();
    [CompilerGeneratedAttribute]
protected void set_SchemaLocation(string value);
}
public static class Microsoft.IdentityModel.Protocols.WsFed.WsFedElements : object {
    public static string AdditionalContext;
    public static string Claims;
    public static string ClaimType;
    public static string ContextItem;
    public static string Value;
}
internal class Microsoft.IdentityModel.Protocols.WsFed.WsFedSerializer : object {
    public virtual AdditionalContext ReadAdditionalContext(XmlDictionaryReader reader, string namespace);
    public virtual ContextItem ReadContextItem(XmlDictionaryReader reader, string namespace);
    public virtual ClaimType ReadClaimType(XmlDictionaryReader reader, string namespace);
    public static void WriteClaimType(XmlDictionaryWriter writer, WsSerializationContext serializationContext, ClaimType claimType);
    public static void WriteAdditionalContext(XmlDictionaryWriter writer, WsSerializationContext serializationContext, AdditionalContext additionalContext);
}
internal abstract class Microsoft.IdentityModel.Protocols.WsFed.WsFedVersion : object {
    public static WsFedVersion Fed12;
    private static WsFedVersion();
}
public class Microsoft.IdentityModel.Protocols.WsPolicy.AppliesTo : object {
    [CompilerGeneratedAttribute]
private EndpointReference <EndpointReference>k__BackingField;
    public EndpointReference EndpointReference { get; }
    public AppliesTo(EndpointReference endpointReference);
    [CompilerGeneratedAttribute]
public EndpointReference get_EndpointReference();
}
internal class Microsoft.IdentityModel.Protocols.WsPolicy.PolicyReference : object {
    [CompilerGeneratedAttribute]
private string <Digest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DigestAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    public string Digest { get; public set; }
    public string DigestAlgorithm { get; public set; }
    public string Uri { get; public set; }
    public PolicyReference(string uri, string digest, string digestAlgorithm);
    [CompilerGeneratedAttribute]
public string get_Digest();
    [CompilerGeneratedAttribute]
public void set_Digest(string value);
    [CompilerGeneratedAttribute]
public string get_DigestAlgorithm();
    [CompilerGeneratedAttribute]
public void set_DigestAlgorithm(string value);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
}
public class Microsoft.IdentityModel.Protocols.WsPolicy.WsPolicy12Constants : WsPolicyConstants {
}
internal class Microsoft.IdentityModel.Protocols.WsPolicy.WsPolicy12Version : WsPolicyVersion {
}
public class Microsoft.IdentityModel.Protocols.WsPolicy.WsPolicy15Constants : WsPolicyConstants {
}
internal class Microsoft.IdentityModel.Protocols.WsPolicy.WsPolicy15Version : WsPolicyVersion {
}
public static class Microsoft.IdentityModel.Protocols.WsPolicy.WsPolicyAttributes : object {
    public static string Digest;
    public static string DigestAlgorithm;
    public static string Optional;
    public static string PolicyURIs;
    public static string TargetNamespace;
    public static string URI;
}
public abstract class Microsoft.IdentityModel.Protocols.WsPolicy.WsPolicyConstants : WsConstantsBase {
    [CompilerGeneratedAttribute]
private static IList`1<string> <KnownNamespaces>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsPolicy12Constants <Policy12>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsPolicy15Constants <Policy15>k__BackingField;
    public static IList`1<string> KnownNamespaces { get; }
    public static WsPolicy12Constants Policy12 { get; }
    public static WsPolicy15Constants Policy15 { get; }
    private static WsPolicyConstants();
    [CompilerGeneratedAttribute]
public static IList`1<string> get_KnownNamespaces();
    [CompilerGeneratedAttribute]
public static WsPolicy12Constants get_Policy12();
    [CompilerGeneratedAttribute]
public static WsPolicy15Constants get_Policy15();
}
public static class Microsoft.IdentityModel.Protocols.WsPolicy.WsPolicyElements : object {
    public static string All;
    public static string AppliesTo;
    public static string ExactlyOne;
    public static string Policy;
    public static string PolicyReference;
}
internal class Microsoft.IdentityModel.Protocols.WsPolicy.WsPolicySerializer : object {
    private WsAddressingSerializer _wsAddressingSerializer;
    public virtual AppliesTo ReadAppliesTo(XmlDictionaryReader reader, string namespace);
    public virtual PolicyReference ReadPolicyReference(XmlDictionaryReader reader, string namespace);
    public static void WriteAppliesTo(XmlDictionaryWriter writer, WsSerializationContext serializationContext, AppliesTo appliesTo);
    public static void WritePolicyReference(XmlDictionaryWriter writer, WsSerializationContext serializationContext, PolicyReference policyReference);
}
internal abstract class Microsoft.IdentityModel.Protocols.WsPolicy.WsPolicyVersion : object {
    [CompilerGeneratedAttribute]
private static WsPolicyVersion <Policy12>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsPolicyVersion <Policy15>k__BackingField;
    public static WsPolicyVersion Policy12 { get; }
    public static WsPolicyVersion Policy15 { get; }
    private static WsPolicyVersion();
    [CompilerGeneratedAttribute]
public static WsPolicyVersion get_Policy12();
    [CompilerGeneratedAttribute]
public static WsPolicyVersion get_Policy15();
}
public class Microsoft.IdentityModel.Protocols.WsSecurity.KeyIdentifier : object {
    private string _encodingType;
    private string _id;
    private string _valueType;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string EncodingType { get; public set; }
    public string Id { get; public set; }
    public string Value { get; internal set; }
    public string ValueType { get; public set; }
    public KeyIdentifier(string value);
    public string get_EncodingType();
    public void set_EncodingType(string value);
    public string get_Id();
    public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
internal void set_Value(string value);
    public string get_ValueType();
    public void set_ValueType(string value);
}
public class Microsoft.IdentityModel.Protocols.WsSecurity.SecurityTokenReference : object {
    private string _id;
    private string _tokenType;
    private string _usage;
    private KeyIdentifier _keyIdentifier;
    public string Id { get; public set; }
    public KeyIdentifier KeyIdentifier { get; public set; }
    public string TokenType { get; public set; }
    public string Usage { get; public set; }
    public SecurityTokenReference(KeyIdentifier keyIdentifier);
    public string get_Id();
    public void set_Id(string value);
    public KeyIdentifier get_KeyIdentifier();
    public void set_KeyIdentifier(KeyIdentifier value);
    public string get_TokenType();
    public void set_TokenType(string value);
    public string get_Usage();
    public void set_Usage(string value);
}
public class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurity10Constants : WsSecurityConstants {
}
public class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurity10EncodingTypes : WsSecurityEncodingTypes {
}
public class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurity10KeyTypes : WsSecurityKeyTypes {
}
internal class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurity10Version : WsSecurityVersion {
}
public class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurity11Constants : WsSecurityConstants {
}
public class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurity11EncodingTypes : WsSecurityEncodingTypes {
}
public class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurity11KeyTypes : WsSecurityKeyTypes {
}
internal class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurity11Version : WsSecurityVersion {
}
public static class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurityAttributes : object {
    public static string EncodingType;
    public static string Id;
    public static string TokenType;
    public static string Type;
    public static string URI;
    public static string Usage;
    public static string ValueType;
}
public abstract class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurityConstants : WsConstantsBase {
    public static IList`1<string> KnownNamespaces;
    [CompilerGeneratedAttribute]
private string <FragmentBaseAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private WsSecurityEncodingTypes <EncodingTypes>k__BackingField;
    public static WsSecurity10Constants WsSecurity10 { get; }
    public static WsSecurity11Constants WsSecurity11 { get; }
    public string FragmentBaseAddress { get; protected set; }
    public WsSecurityEncodingTypes EncodingTypes { get; protected set; }
    private static WsSecurityConstants();
    public static WsSecurity10Constants get_WsSecurity10();
    public static WsSecurity11Constants get_WsSecurity11();
    [CompilerGeneratedAttribute]
public string get_FragmentBaseAddress();
    [CompilerGeneratedAttribute]
protected void set_FragmentBaseAddress(string value);
    [CompilerGeneratedAttribute]
public WsSecurityEncodingTypes get_EncodingTypes();
    [CompilerGeneratedAttribute]
protected void set_EncodingTypes(WsSecurityEncodingTypes value);
}
public static class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurityElements : object {
    public static string BinarySecurityToken;
    public static string Created;
    public static string EncryptedHeader;
    public static string KeyIdentifier;
    public static string Nonce;
    public static string Password;
    public static string Reference;
    public static string SecurityTokenReference;
    public static string Username;
    public static string UsernameToken;
}
public abstract class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurityEncodingTypes : WsConstantsBase {
    [CompilerGeneratedAttribute]
private static WsSecurity10EncodingTypes <WsSecurity10>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsSecurity11EncodingTypes <WsSecurity11>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Base64>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HexBinary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public static WsSecurity10EncodingTypes WsSecurity10 { get; }
    public static WsSecurity11EncodingTypes WsSecurity11 { get; }
    public string Base64 { get; protected set; }
    public string HexBinary { get; protected set; }
    public string Text { get; protected set; }
    private static WsSecurityEncodingTypes();
    [CompilerGeneratedAttribute]
public static WsSecurity10EncodingTypes get_WsSecurity10();
    [CompilerGeneratedAttribute]
public static WsSecurity11EncodingTypes get_WsSecurity11();
    [CompilerGeneratedAttribute]
public string get_Base64();
    [CompilerGeneratedAttribute]
protected void set_Base64(string value);
    [CompilerGeneratedAttribute]
public string get_HexBinary();
    [CompilerGeneratedAttribute]
protected void set_HexBinary(string value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
protected void set_Text(string value);
}
public abstract class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurityKeyTypes : object {
    [CompilerGeneratedAttribute]
private static WsSecurity10KeyTypes <WsSecurity10>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsSecurity11KeyTypes <WsSecurity11>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Sha1Thumbprint>k__BackingField;
    public static WsSecurity10KeyTypes WsSecurity10 { get; }
    public static WsSecurity11KeyTypes WsSecurity11 { get; }
    public string Sha1Thumbprint { get; protected set; }
    private static WsSecurityKeyTypes();
    [CompilerGeneratedAttribute]
public static WsSecurity10KeyTypes get_WsSecurity10();
    [CompilerGeneratedAttribute]
public static WsSecurity11KeyTypes get_WsSecurity11();
    [CompilerGeneratedAttribute]
public string get_Sha1Thumbprint();
    [CompilerGeneratedAttribute]
protected void set_Sha1Thumbprint(string value);
}
public static class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecuritySerializer : object {
    public static XmlElement CreateXmlElement(SecurityTokenReference securityTokenReference);
    internal static SecurityTokenReference ReadSecurityTokenReference(XmlDictionaryReader reader);
    internal static KeyIdentifier ReadKeyIdentifier(XmlDictionaryReader reader);
    internal static void WriteKeyIdentifier(XmlDictionaryWriter writer, KeyIdentifier keyIdentifier);
    internal static void WriteSecurityTokenReference(XmlDictionaryWriter writer, SecurityTokenReference securityTokenReference);
}
public abstract class Microsoft.IdentityModel.Protocols.WsSecurity.WsSecurityVersion : object {
    public static WsSecurityVersion Security10;
    public static WsSecurityVersion Security11;
    private static WsSecurityVersion();
}
public class Microsoft.IdentityModel.Protocols.WsSerializationContext : object {
    [CompilerGeneratedAttribute]
private WsAddressingConstants <AddressingConstants>k__BackingField;
    [CompilerGeneratedAttribute]
private WsFedConstants <FedConstants>k__BackingField;
    [CompilerGeneratedAttribute]
private WsPolicyConstants <PolicyConstants>k__BackingField;
    [CompilerGeneratedAttribute]
private WsSecurityConstants <SecurityConstants>k__BackingField;
    [CompilerGeneratedAttribute]
private WsTrustActions <TrustActions>k__BackingField;
    [CompilerGeneratedAttribute]
private WsTrustConstants <TrustConstants>k__BackingField;
    [CompilerGeneratedAttribute]
private WsTrustKeyTypes <TrustKeyTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private WsTrustVersion <TrustVersion>k__BackingField;
    public WsAddressingConstants AddressingConstants { get; }
    public WsFedConstants FedConstants { get; }
    public WsPolicyConstants PolicyConstants { get; }
    public WsSecurityConstants SecurityConstants { get; }
    public WsTrustActions TrustActions { get; }
    public WsTrustConstants TrustConstants { get; }
    public WsTrustKeyTypes TrustKeyTypes { get; }
    public WsTrustVersion TrustVersion { get; }
    public WsSerializationContext(WsTrustVersion wsTrustVersion);
    [CompilerGeneratedAttribute]
public WsAddressingConstants get_AddressingConstants();
    [CompilerGeneratedAttribute]
public WsFedConstants get_FedConstants();
    [CompilerGeneratedAttribute]
public WsPolicyConstants get_PolicyConstants();
    [CompilerGeneratedAttribute]
public WsSecurityConstants get_SecurityConstants();
    [CompilerGeneratedAttribute]
public WsTrustActions get_TrustActions();
    [CompilerGeneratedAttribute]
public WsTrustConstants get_TrustConstants();
    [CompilerGeneratedAttribute]
public WsTrustKeyTypes get_TrustKeyTypes();
    [CompilerGeneratedAttribute]
public WsTrustVersion get_TrustVersion();
}
internal class Microsoft.IdentityModel.Protocols.WsTrust.BinaryExchange : object {
    private Byte[] _binaryData;
    [CompilerGeneratedAttribute]
private Uri <ValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <EncodingType>k__BackingField;
    public Byte[] BinaryData { get; private set; }
    public Uri ValueType { get; }
    public Uri EncodingType { get; }
    public BinaryExchange(Byte[] binaryData, Uri valueType);
    public BinaryExchange(Byte[] binaryData, Uri valueType, Uri encodingType);
    public Byte[] get_BinaryData();
    private void set_BinaryData(Byte[] value);
    [CompilerGeneratedAttribute]
public Uri get_ValueType();
    [CompilerGeneratedAttribute]
public Uri get_EncodingType();
}
public class Microsoft.IdentityModel.Protocols.WsTrust.BinarySecret : object {
    private Byte[] _data;
    private string _encodingType;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AdditionalAttributes>k__BackingField;
    public Byte[] Data { get; internal set; }
    public string EncodingType { get; public set; }
    public ICollection`1<string> AdditionalAttributes { get; }
    public BinarySecret(Byte[] data);
    public BinarySecret(Byte[] data, string encodingType);
    public Byte[] get_Data();
    internal void set_Data(Byte[] value);
    public string get_EncodingType();
    public void set_EncodingType(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AdditionalAttributes();
}
public class Microsoft.IdentityModel.Protocols.WsTrust.Claims : object {
    [CompilerGeneratedAttribute]
private IList`1<ClaimType> <ClaimTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Dialect>k__BackingField;
    public IList`1<ClaimType> ClaimTypes { get; }
    public string Dialect { get; }
    public Claims(string dialect, IList`1<ClaimType> claimTypes);
    [CompilerGeneratedAttribute]
public IList`1<ClaimType> get_ClaimTypes();
    [CompilerGeneratedAttribute]
public string get_Dialect();
}
public class Microsoft.IdentityModel.Protocols.WsTrust.Entropy : object {
    [CompilerGeneratedAttribute]
private BinarySecret <BinarySecret>k__BackingField;
    [CompilerGeneratedAttribute]
private ProtectedKey <ProtectedKey>k__BackingField;
    public BinarySecret BinarySecret { get; internal set; }
    public ProtectedKey ProtectedKey { get; }
    public Entropy(BinarySecret binarySecret);
    public Entropy(ProtectedKey protectedKey);
    [CompilerGeneratedAttribute]
public BinarySecret get_BinarySecret();
    [CompilerGeneratedAttribute]
internal void set_BinarySecret(BinarySecret value);
    [CompilerGeneratedAttribute]
public ProtectedKey get_ProtectedKey();
    private static Byte[] GetKeyBytesFromProtectedKey(ProtectedKey protectedKey);
    private static EncryptingCredentials GetWrappingCredentialsFromProtectedKey(ProtectedKey protectedKey);
}
internal class Microsoft.IdentityModel.Protocols.WsTrust.ExceptionLogger : object {
    internal static Exception LogWsTrustReadException(string message);
    internal static Exception LogWsTrustReadException(string message, Exception innerException);
    internal static Exception LogWsTrustReadException(string format, Object[] args);
    internal static Exception LogWsTrustReadException(Exception innerException, string format, Object[] args);
}
public interface Microsoft.IdentityModel.Protocols.WsTrust.IXmlOpenItem {
    public IList`1<XmlElement> AdditionalXmlElements { get; }
    public IList`1<XmlAttribute> AdditionalXmlAttributes { get; }
    public abstract virtual IList`1<XmlElement> get_AdditionalXmlElements();
    public abstract virtual IList`1<XmlAttribute> get_AdditionalXmlAttributes();
}
public class Microsoft.IdentityModel.Protocols.WsTrust.Lifetime : object {
    private Nullable`1<DateTime> _created;
    private Nullable`1<DateTime> _expires;
    public Nullable`1<DateTime> Created { get; public set; }
    public Nullable`1<DateTime> Expires { get; public set; }
    public Lifetime(DateTime created, DateTime expires);
    public Lifetime(Nullable`1<DateTime> created, Nullable`1<DateTime> expires);
    public Nullable`1<DateTime> get_Created();
    public void set_Created(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_Expires();
    public void set_Expires(Nullable`1<DateTime> value);
}
internal static class Microsoft.IdentityModel.Protocols.WsTrust.LogMessages : object {
    internal static string IDX15000;
    internal static string IDX15001;
    internal static string IDX15011;
    internal static string IDX15013;
    internal static string IDX15016;
    internal static string IDX15017;
    internal static string IDX15022;
    internal static string IDX15024;
    internal static string IDX15407;
    internal static string IDX15101;
    internal static string IDX15500;
    public static string IDX15850;
    public static string IDX15851;
    public static string IDX15852;
    public static string IDX15853;
    public static string IDX15854;
}
public class Microsoft.IdentityModel.Protocols.WsTrust.Participants : object {
    private SecurityTokenElement _primary;
    [CompilerGeneratedAttribute]
private ICollection`1<SecurityTokenElement> <AdditionalParticipants>k__BackingField;
    public SecurityTokenElement Primary { get; public set; }
    public ICollection`1<SecurityTokenElement> AdditionalParticipants { get; }
    public Participants(SecurityTokenElement primary);
    public SecurityTokenElement get_Primary();
    public void set_Primary(SecurityTokenElement value);
    [CompilerGeneratedAttribute]
public ICollection`1<SecurityTokenElement> get_AdditionalParticipants();
}
public class Microsoft.IdentityModel.Protocols.WsTrust.ProtectedKey : object {
    [CompilerGeneratedAttribute]
private Byte[] <Secret>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptingCredentials <WrappingCredentials>k__BackingField;
    public Byte[] Secret { get; }
    public EncryptingCredentials WrappingCredentials { get; }
    public ProtectedKey(Byte[] secret, EncryptingCredentials wrappingCredentials);
    [CompilerGeneratedAttribute]
public Byte[] get_Secret();
    [CompilerGeneratedAttribute]
public EncryptingCredentials get_WrappingCredentials();
}
public static class Microsoft.IdentityModel.Protocols.WsTrust.Psha1KeyGenerator : object {
    private static RandomNumberGenerator _random;
    private static int s_minKeySizeInBits;
    private static int s_maxKeySizeInBits;
    internal static RandomNumberGenerator RandomNumberGenerator { get; }
    private static Psha1KeyGenerator();
    public static Byte[] ComputeCombinedKey(Byte[] issuerEntropy, Byte[] requestorEntropy, int keySizeInBits);
    internal static int ValidateKeySizeInBytes(int keySizeInBits);
    internal static Byte[] GenerateSymmetricKey(int keySizeInBits, Byte[] senderEntropy, Byte[]& receiverEntropy);
    internal static int CeilingDivide(int dividend, int divisor);
    internal static RandomNumberGenerator get_RandomNumberGenerator();
    internal static Byte[] GenerateDerivedKey(string algorithm, Byte[] masterKey, Byte[] label, Byte[] nonce, int derivedKeySizeInBits, int position);
    public static void FillRandomBytes(Byte[] buffer);
    internal static void GenerateRandomBytes(Byte[] data);
    internal static Byte[] GenerateRandomBytes(int sizeInBits);
}
internal class Microsoft.IdentityModel.Protocols.WsTrust.PshaDerivedKeyGenerator : object {
    private static int s_minKeySizeInBits;
    private static int s_maxKeySizeInBits;
    private Byte[] _masterKey;
    private static string HmacSha1;
    public PshaDerivedKeyGenerator(Byte[] masterKey);
    private static PshaDerivedKeyGenerator();
    public Byte[] ComputeCombinedKey(string algorithm, Byte[] label, Byte[] nonce, int keySizeInBits, int position);
}
internal class Microsoft.IdentityModel.Protocols.WsTrust.Renewing : object {
    [CompilerGeneratedAttribute]
private bool <Allow>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RenewAfterExpiration>k__BackingField;
    [DefaultValueAttribute("True")]
public bool Allow { get; public set; }
    [DefaultValueAttribute("False")]
public bool RenewAfterExpiration { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Allow();
    [CompilerGeneratedAttribute]
public void set_Allow(bool value);
    [CompilerGeneratedAttribute]
public bool get_RenewAfterExpiration();
    [CompilerGeneratedAttribute]
public void set_RenewAfterExpiration(bool value);
}
public class Microsoft.IdentityModel.Protocols.WsTrust.RequestedProofToken : object {
    private BinarySecret _binarySecret;
    private string _computedKeyAlgorithm;
    private EncryptedKey _encryptedKey;
    public BinarySecret BinarySecret { get; public set; }
    public string ComputedKeyAlgorithm { get; public set; }
    public EncryptedKey EncryptedKey { get; public set; }
    public RequestedProofToken(BinarySecret binarySecret);
    internal RequestedProofToken(string computedKeyAlgorithm);
    public RequestedProofToken(EncryptedKey encryptedKey);
    public BinarySecret get_BinarySecret();
    public void set_BinarySecret(BinarySecret value);
    public string get_ComputedKeyAlgorithm();
    public void set_ComputedKeyAlgorithm(string value);
    public EncryptedKey get_EncryptedKey();
    public void set_EncryptedKey(EncryptedKey value);
}
public class Microsoft.IdentityModel.Protocols.WsTrust.RequestedSecurityToken : object {
    private SecurityToken _securityToken;
    private XmlElement _xmlElement;
    public XmlElement TokenElement { get; public set; }
    public SecurityToken SecurityToken { get; public set; }
    public RequestedSecurityToken(XmlElement xmlElement);
    public RequestedSecurityToken(SecurityToken securityToken);
    public XmlElement get_TokenElement();
    public void set_TokenElement(XmlElement value);
    public SecurityToken get_SecurityToken();
    public void set_SecurityToken(SecurityToken value);
}
public class Microsoft.IdentityModel.Protocols.WsTrust.RequestSecurityTokenResponse : WsTrustMessage {
    private SecurityTokenReference _attachedReference;
    private RequestedProofToken _requestedProofToken;
    private RequestedSecurityToken _securityToken;
    private SecurityTokenReference _unattachedReference;
    public SecurityTokenReference AttachedReference { get; public set; }
    public RequestedProofToken RequestedProofToken { get; public set; }
    public RequestedSecurityToken RequestedSecurityToken { get; public set; }
    public SecurityTokenReference UnattachedReference { get; public set; }
    public SecurityTokenReference get_AttachedReference();
    public void set_AttachedReference(SecurityTokenReference value);
    public RequestedProofToken get_RequestedProofToken();
    public void set_RequestedProofToken(RequestedProofToken value);
    public RequestedSecurityToken get_RequestedSecurityToken();
    public void set_RequestedSecurityToken(RequestedSecurityToken value);
    public SecurityTokenReference get_UnattachedReference();
    public void set_UnattachedReference(SecurityTokenReference value);
}
public class Microsoft.IdentityModel.Protocols.WsTrust.SecurityTokenElement : object {
    [CompilerGeneratedAttribute]
private SecurityToken <SecurityToken>k__BackingField;
    [CompilerGeneratedAttribute]
private SecurityTokenReference <SecurityTokenReference>k__BackingField;
    public SecurityToken SecurityToken { get; }
    public SecurityTokenReference SecurityTokenReference { get; }
    public SecurityTokenElement(SecurityToken securityToken);
    public SecurityTokenElement(SecurityTokenReference securityTokenReference);
    [CompilerGeneratedAttribute]
public SecurityToken get_SecurityToken();
    [CompilerGeneratedAttribute]
public SecurityTokenReference get_SecurityTokenReference();
}
public class Microsoft.IdentityModel.Protocols.WsTrust.UseKey : object {
    private string _signatureId;
    [CompilerGeneratedAttribute]
private SecurityTokenElement <SecurityTokenElement>k__BackingField;
    public SecurityTokenElement SecurityTokenElement { get; }
    public string SignatureId { get; public set; }
    public UseKey(SecurityTokenElement securityTokenElement);
    [CompilerGeneratedAttribute]
public SecurityTokenElement get_SecurityTokenElement();
    public string get_SignatureId();
    public void set_SignatureId(string value);
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrust13Actions : WsTrustActions {
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrust13BinarySecretTypes : WsTrustBinarySecretTypes {
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrust13Constants : WsTrustConstants {
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrust13KeyTypes : WsTrustKeyTypes {
}
internal class Microsoft.IdentityModel.Protocols.WsTrust.WsTrust13Version : WsTrustVersion {
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrust14Actions : WsTrustActions {
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrust14BinarySecretTypes : WsTrustBinarySecretTypes {
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrust14Constants : WsTrustConstants {
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrust14KeyTypes : WsTrustKeyTypes {
}
internal class Microsoft.IdentityModel.Protocols.WsTrust.WsTrust14Version : WsTrustVersion {
}
public abstract class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustActions : object {
    [CompilerGeneratedAttribute]
private static WsTrustFeb2005Actions <TrustFeb2005>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsTrust13Actions <Trust13>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsTrust14Actions <Trust14>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Cancel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CancelFinal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CancelRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CancelResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Issue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssueFinal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssueRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssueResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Renew>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RenewFinal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RenewRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RenewResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Validate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidateFinal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidateRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidateResponse>k__BackingField;
    public static WsTrustFeb2005Actions TrustFeb2005 { get; }
    public static WsTrust13Actions Trust13 { get; }
    public static WsTrust14Actions Trust14 { get; }
    public string Cancel { get; protected set; }
    public string CancelFinal { get; protected set; }
    public string CancelRequest { get; protected set; }
    public string CancelResponse { get; protected set; }
    public string Issue { get; protected set; }
    public string IssueFinal { get; protected set; }
    public string IssueRequest { get; protected set; }
    public string IssueResponse { get; protected set; }
    public string Renew { get; protected set; }
    public string RenewFinal { get; protected set; }
    public string RenewRequest { get; protected set; }
    public string RenewResponse { get; protected set; }
    public string Status { get; protected set; }
    public string Validate { get; protected set; }
    public string ValidateFinal { get; protected set; }
    public string ValidateRequest { get; protected set; }
    public string ValidateResponse { get; protected set; }
    private static WsTrustActions();
    [CompilerGeneratedAttribute]
public static WsTrustFeb2005Actions get_TrustFeb2005();
    [CompilerGeneratedAttribute]
public static WsTrust13Actions get_Trust13();
    [CompilerGeneratedAttribute]
public static WsTrust14Actions get_Trust14();
    [CompilerGeneratedAttribute]
public string get_Cancel();
    [CompilerGeneratedAttribute]
protected void set_Cancel(string value);
    [CompilerGeneratedAttribute]
public string get_CancelFinal();
    [CompilerGeneratedAttribute]
protected void set_CancelFinal(string value);
    [CompilerGeneratedAttribute]
public string get_CancelRequest();
    [CompilerGeneratedAttribute]
protected void set_CancelRequest(string value);
    [CompilerGeneratedAttribute]
public string get_CancelResponse();
    [CompilerGeneratedAttribute]
protected void set_CancelResponse(string value);
    [CompilerGeneratedAttribute]
public string get_Issue();
    [CompilerGeneratedAttribute]
protected void set_Issue(string value);
    [CompilerGeneratedAttribute]
public string get_IssueFinal();
    [CompilerGeneratedAttribute]
protected void set_IssueFinal(string value);
    [CompilerGeneratedAttribute]
public string get_IssueRequest();
    [CompilerGeneratedAttribute]
protected void set_IssueRequest(string value);
    [CompilerGeneratedAttribute]
public string get_IssueResponse();
    [CompilerGeneratedAttribute]
protected void set_IssueResponse(string value);
    [CompilerGeneratedAttribute]
public string get_Renew();
    [CompilerGeneratedAttribute]
protected void set_Renew(string value);
    [CompilerGeneratedAttribute]
public string get_RenewFinal();
    [CompilerGeneratedAttribute]
protected void set_RenewFinal(string value);
    [CompilerGeneratedAttribute]
public string get_RenewRequest();
    [CompilerGeneratedAttribute]
protected void set_RenewRequest(string value);
    [CompilerGeneratedAttribute]
public string get_RenewResponse();
    [CompilerGeneratedAttribute]
protected void set_RenewResponse(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
protected void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Validate();
    [CompilerGeneratedAttribute]
protected void set_Validate(string value);
    [CompilerGeneratedAttribute]
public string get_ValidateFinal();
    [CompilerGeneratedAttribute]
protected void set_ValidateFinal(string value);
    [CompilerGeneratedAttribute]
public string get_ValidateRequest();
    [CompilerGeneratedAttribute]
protected void set_ValidateRequest(string value);
    [CompilerGeneratedAttribute]
public string get_ValidateResponse();
    [CompilerGeneratedAttribute]
protected void set_ValidateResponse(string value);
}
public static class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustAttributes : object {
    public static string Allow;
    public static string Context;
    public static string Dialect;
    public static string EncodingType;
    public static string KeyExchangeToken;
    public static string OK;
    public static string RequestKET;
    public static string Sig;
    public static string Type;
    public static string ValueType;
}
public abstract class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustBinarySecretTypes : object {
    [CompilerGeneratedAttribute]
private static WsTrustFeb2005BinarySecretTypes <TrustFeb2005>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsTrust13BinarySecretTypes <Trust13>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsTrust14BinarySecretTypes <Trust14>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AsymmetricKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SymmetricKey>k__BackingField;
    public static WsTrustFeb2005BinarySecretTypes TrustFeb2005 { get; }
    public static WsTrust13BinarySecretTypes Trust13 { get; }
    public static WsTrust14BinarySecretTypes Trust14 { get; }
    public string AsymmetricKey { get; protected set; }
    public string Nonce { get; protected set; }
    public string SymmetricKey { get; protected set; }
    private static WsTrustBinarySecretTypes();
    [CompilerGeneratedAttribute]
public static WsTrustFeb2005BinarySecretTypes get_TrustFeb2005();
    [CompilerGeneratedAttribute]
public static WsTrust13BinarySecretTypes get_Trust13();
    [CompilerGeneratedAttribute]
public static WsTrust14BinarySecretTypes get_Trust14();
    [CompilerGeneratedAttribute]
public string get_AsymmetricKey();
    [CompilerGeneratedAttribute]
protected void set_AsymmetricKey(string value);
    [CompilerGeneratedAttribute]
public string get_Nonce();
    [CompilerGeneratedAttribute]
protected void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public string get_SymmetricKey();
    [CompilerGeneratedAttribute]
protected void set_SymmetricKey(string value);
}
public abstract class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustConstants : WsConstantsBase {
    [CompilerGeneratedAttribute]
private static IList`1<string> <KnownNamespaces>k__BackingField;
    [CompilerGeneratedAttribute]
private WsTrustActions <WsTrustActions>k__BackingField;
    [CompilerGeneratedAttribute]
private WsTrustKeyTypes <WsTrustKeyTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private WsTrustBinarySecretTypes <WsTrustBinarySecretTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsTrustFeb2005Constants <TrustFeb2005>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsTrust13Constants <Trust13>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsTrust14Constants <Trust14>k__BackingField;
    public static IList`1<string> KnownNamespaces { get; }
    public WsTrustActions WsTrustActions { get; protected set; }
    public WsTrustKeyTypes WsTrustKeyTypes { get; protected set; }
    public WsTrustBinarySecretTypes WsTrustBinarySecretTypes { get; protected set; }
    public static WsTrustFeb2005Constants TrustFeb2005 { get; }
    public static WsTrust13Constants Trust13 { get; }
    public static WsTrust14Constants Trust14 { get; }
    private static WsTrustConstants();
    [CompilerGeneratedAttribute]
public static IList`1<string> get_KnownNamespaces();
    [CompilerGeneratedAttribute]
public WsTrustActions get_WsTrustActions();
    [CompilerGeneratedAttribute]
protected void set_WsTrustActions(WsTrustActions value);
    [CompilerGeneratedAttribute]
public WsTrustKeyTypes get_WsTrustKeyTypes();
    [CompilerGeneratedAttribute]
protected void set_WsTrustKeyTypes(WsTrustKeyTypes value);
    [CompilerGeneratedAttribute]
public WsTrustBinarySecretTypes get_WsTrustBinarySecretTypes();
    [CompilerGeneratedAttribute]
protected void set_WsTrustBinarySecretTypes(WsTrustBinarySecretTypes value);
    [CompilerGeneratedAttribute]
public static WsTrustFeb2005Constants get_TrustFeb2005();
    [CompilerGeneratedAttribute]
public static WsTrust13Constants get_Trust13();
    [CompilerGeneratedAttribute]
public static WsTrust14Constants get_Trust14();
}
public static class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustElements : object {
    public static string ActAs;
    public static string AllowPostdating;
    public static string AuthenticationType;
    public static string BinaryExchange;
    public static string BinarySecret;
    public static string CancelTarget;
    public static string Claims;
    public static string Challenge;
    public static string Created;
    public static string CanonicalizationAlgorithm;
    public static string ComputedKey;
    public static string ComputedKeyAlgorithm;
    public static string Context;
    public static string Code;
    public static string Delegatable;
    public static string DelegateTo;
    public static string EncryptionAlgorithm;
    public static string EncryptWith;
    public static string Entropy;
    public static string Expires;
    public static string Forwardable;
    public static string IssuedTokens;
    public static string Issuer;
    public static string KeySize;
    public static string KeyType;
    public static string KeyWrapAlgorithm;
    public static string Lifetime;
    public static string OnBehalfOf;
    public static string Participant;
    public static string Participants;
    public static string Primary;
    public static string ProofEncryption;
    public static string Reason;
    public static string Renewing;
    public static string RenewTarget;
    public static string RequestedAttachedReference;
    public static string RequestedProofToken;
    public static string RequestedSecurityToken;
    public static string RequestedUnattachedReference;
    public static string RequestSecurityToken;
    public static string RequestSecurityTokenResponse;
    public static string RequestSecurityTokenResponseCollection;
    public static string RequestType;
    public static string SecondaryParameters;
    public static string SignatureAlgorithm;
    public static string SignChallenge;
    public static string SignWith;
    public static string Status;
    public static string TokenType;
    public static string UseKey;
    public static string ValidateTarget;
    public static string Value;
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustException : Exception {
    public WsTrustException(string message);
    public WsTrustException(string message, Exception innerException);
}
public static class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustFaultCodes : object {
    public static string FailedAuthentication;
    public static string FailedCheck;
    public static string InvalidSecurity;
    public static string InvalidSecurityToken;
    public static string MessageExpired;
    public static string SecurityTokenUnavailable;
    public static string UnsupportedAlgorithm;
    public static string UnsupportedSecurityToken;
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustFeb2005Actions : WsTrustActions {
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustFeb2005BinarySecretTypes : WsTrustBinarySecretTypes {
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustFeb2005Constants : WsTrustConstants {
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustFeb2005KeyTypes : WsTrustKeyTypes {
}
internal class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustFeb2005Version : WsTrustVersion {
}
public abstract class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustKeyTypes : object {
    [CompilerGeneratedAttribute]
private static WsTrustFeb2005KeyTypes <TrustFeb2005>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsTrust13KeyTypes <Trust13>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsTrust14KeyTypes <Trust14>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Bearer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublicKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PSHA1>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Symmetric>k__BackingField;
    public static WsTrustFeb2005KeyTypes TrustFeb2005 { get; }
    public static WsTrust13KeyTypes Trust13 { get; }
    public static WsTrust14KeyTypes Trust14 { get; }
    public string Bearer { get; protected set; }
    public string PublicKey { get; protected set; }
    public string PSHA1 { get; protected set; }
    public string Symmetric { get; protected set; }
    private static WsTrustKeyTypes();
    [CompilerGeneratedAttribute]
public static WsTrustFeb2005KeyTypes get_TrustFeb2005();
    [CompilerGeneratedAttribute]
public static WsTrust13KeyTypes get_Trust13();
    [CompilerGeneratedAttribute]
public static WsTrust14KeyTypes get_Trust14();
    [CompilerGeneratedAttribute]
public string get_Bearer();
    [CompilerGeneratedAttribute]
protected void set_Bearer(string value);
    [CompilerGeneratedAttribute]
public string get_PublicKey();
    [CompilerGeneratedAttribute]
protected void set_PublicKey(string value);
    [CompilerGeneratedAttribute]
public string get_PSHA1();
    [CompilerGeneratedAttribute]
protected void set_PSHA1(string value);
    [CompilerGeneratedAttribute]
public string get_Symmetric();
    [CompilerGeneratedAttribute]
protected void set_Symmetric(string value);
}
public abstract class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustMessage : object {
    private SecurityTokenElement _actAs;
    private AdditionalContext _additionalContext;
    private AppliesTo _appliesTo;
    private string _authenticationType;
    private BinaryExchange _binaryExchange;
    private string _canonicalizationAlgorithm;
    private string _context;
    private SecurityTokenReference _delegateTo;
    private SecurityTokenElement _encryption;
    private string _encryptionAlgorithm;
    private string _encryptWith;
    private Entropy _entropy;
    private EndpointReference _issuer;
    private Nullable`1<int> _keySizeInBits;
    private string _keyType;
    private string _keyWrapAlgorithm;
    private Lifetime _lifetime;
    private SecurityTokenElement _onBehalfOf;
    private Participants _participants;
    private PolicyReference _policyReference;
    private SecurityTokenElement _proofEncryption;
    private Claims _requestClaims;
    private WsTrustRequest _secondaryParameters;
    private string _signatureAlgorithm;
    private string _signWith;
    private string _tokenType;
    private WsTrustVersion _wsTrustVersion;
    private UseKey _useKey;
    [CompilerGeneratedAttribute]
private string <ComputedKeyAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Delegatable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Forwardable>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<XmlAttribute> <AdditionalXmlAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<XmlElement> <AdditionalXmlElements>k__BackingField;
    public SecurityTokenElement ActAs { get; public set; }
    public AdditionalContext AdditionalContext { get; public set; }
    public AppliesTo AppliesTo { get; public set; }
    public string AuthenticationType { get; public set; }
    internal BinaryExchange BinaryExchange { get; internal set; }
    public string CanonicalizationAlgorithm { get; public set; }
    public Claims Claims { get; public set; }
    public string ComputedKeyAlgorithm { get; public set; }
    public string Context { get; public set; }
    public Nullable`1<bool> Delegatable { get; public set; }
    public SecurityTokenReference DelegateTo { get; public set; }
    public Entropy Entropy { get; public set; }
    public SecurityTokenElement Encryption { get; public set; }
    public string EncryptionAlgorithm { get; public set; }
    public string EncryptWith { get; public set; }
    public Nullable`1<bool> Forwardable { get; public set; }
    public Nullable`1<int> KeySizeInBits { get; public set; }
    public string KeyType { get; public set; }
    public string KeyWrapAlgorithm { get; public set; }
    public Lifetime Lifetime { get; public set; }
    public EndpointReference Issuer { get; public set; }
    public SecurityTokenElement OnBehalfOf { get; public set; }
    public Participants Participants { get; public set; }
    internal PolicyReference PolicyReference { get; internal set; }
    public SecurityTokenElement ProofEncryption { get; public set; }
    public WsTrustRequest SecondaryParameters { get; public set; }
    public string SignatureAlgorithm { get; public set; }
    public string SignWith { get; public set; }
    public string TokenType { get; public set; }
    public WsTrustVersion WsTrustVersion { get; public set; }
    public UseKey UseKey { get; public set; }
    public IList`1<XmlAttribute> AdditionalXmlAttributes { get; }
    public IList`1<XmlElement> AdditionalXmlElements { get; }
    public SecurityTokenElement get_ActAs();
    public void set_ActAs(SecurityTokenElement value);
    public AdditionalContext get_AdditionalContext();
    public void set_AdditionalContext(AdditionalContext value);
    public AppliesTo get_AppliesTo();
    public void set_AppliesTo(AppliesTo value);
    public string get_AuthenticationType();
    public void set_AuthenticationType(string value);
    internal BinaryExchange get_BinaryExchange();
    internal void set_BinaryExchange(BinaryExchange value);
    public string get_CanonicalizationAlgorithm();
    public void set_CanonicalizationAlgorithm(string value);
    public Claims get_Claims();
    public void set_Claims(Claims value);
    [CompilerGeneratedAttribute]
public string get_ComputedKeyAlgorithm();
    [CompilerGeneratedAttribute]
public void set_ComputedKeyAlgorithm(string value);
    public string get_Context();
    public void set_Context(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Delegatable();
    [CompilerGeneratedAttribute]
public void set_Delegatable(Nullable`1<bool> value);
    public SecurityTokenReference get_DelegateTo();
    public void set_DelegateTo(SecurityTokenReference value);
    public Entropy get_Entropy();
    public void set_Entropy(Entropy value);
    public SecurityTokenElement get_Encryption();
    public void set_Encryption(SecurityTokenElement value);
    public string get_EncryptionAlgorithm();
    public void set_EncryptionAlgorithm(string value);
    public string get_EncryptWith();
    public void set_EncryptWith(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Forwardable();
    [CompilerGeneratedAttribute]
public void set_Forwardable(Nullable`1<bool> value);
    public Nullable`1<int> get_KeySizeInBits();
    public void set_KeySizeInBits(Nullable`1<int> value);
    public string get_KeyType();
    public void set_KeyType(string value);
    public string get_KeyWrapAlgorithm();
    public void set_KeyWrapAlgorithm(string value);
    public Lifetime get_Lifetime();
    public void set_Lifetime(Lifetime value);
    public EndpointReference get_Issuer();
    public void set_Issuer(EndpointReference value);
    public SecurityTokenElement get_OnBehalfOf();
    public void set_OnBehalfOf(SecurityTokenElement value);
    public Participants get_Participants();
    public void set_Participants(Participants value);
    internal PolicyReference get_PolicyReference();
    internal void set_PolicyReference(PolicyReference value);
    public SecurityTokenElement get_ProofEncryption();
    public void set_ProofEncryption(SecurityTokenElement value);
    public WsTrustRequest get_SecondaryParameters();
    public void set_SecondaryParameters(WsTrustRequest value);
    public string get_SignatureAlgorithm();
    public void set_SignatureAlgorithm(string value);
    public string get_SignWith();
    public void set_SignWith(string value);
    public string get_TokenType();
    public void set_TokenType(string value);
    public WsTrustVersion get_WsTrustVersion();
    public void set_WsTrustVersion(WsTrustVersion value);
    public UseKey get_UseKey();
    public void set_UseKey(UseKey value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<XmlAttribute> get_AdditionalXmlAttributes();
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<XmlElement> get_AdditionalXmlElements();
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustReadException : WsTrustException {
    public WsTrustReadException(string message);
    public WsTrustReadException(string message, Exception innerException);
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustRequest : WsTrustMessage {
    private string _requestType;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowPostdating>k__BackingField;
    public Nullable`1<bool> AllowPostdating { get; public set; }
    public string RequestType { get; internal set; }
    public WsTrustRequest(string requestType);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowPostdating();
    [CompilerGeneratedAttribute]
public void set_AllowPostdating(Nullable`1<bool> value);
    public string get_RequestType();
    internal void set_RequestType(string value);
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustResponse : object {
    [CompilerGeneratedAttribute]
private IList`1<RequestSecurityTokenResponse> <RequestSecurityTokenResponseCollection>k__BackingField;
    public IList`1<RequestSecurityTokenResponse> RequestSecurityTokenResponseCollection { get; }
    public WsTrustResponse(RequestSecurityTokenResponse requestSecurityTokenResponse);
    [CompilerGeneratedAttribute]
public IList`1<RequestSecurityTokenResponse> get_RequestSecurityTokenResponseCollection();
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustSerializer : object {
    private static BindingFlags getPropertyFlags;
    private static BindingFlags invokeMethodFlags;
    private static Type _saml2AssertionType;
    private static Type _samlAssertionType;
    private static Type _xmlTokenStreamType;
    private WsFedSerializer _wsFedSerializer;
    private WsPolicySerializer _wsPolicySerializer;
    internal static string GeneratedDateTimeFormat;
    [CompilerGeneratedAttribute]
private ICollection`1<SecurityTokenHandler> <SecurityTokenHandlers>k__BackingField;
    public ICollection`1<SecurityTokenHandler> SecurityTokenHandlers { get; private set; }
    private static WsTrustSerializer();
    public static BinarySecret ReadBinarySecrect(XmlDictionaryReader reader, WsSerializationContext serializationContext);
    public virtual Claims ReadClaims(XmlDictionaryReader reader, WsSerializationContext serializationContext);
    public static Entropy ReadEntropy(XmlDictionaryReader reader, WsSerializationContext serializationContext);
    public static Lifetime ReadLifetime(XmlDictionaryReader reader, WsSerializationContext serializationContext);
    public virtual SecurityTokenElement ReadOnBehalfOf(XmlDictionaryReader reader, WsSerializationContext serializationContext);
    private static SecurityTokenReference ReadReference(XmlDictionaryReader reader, string elementName);
    public WsTrustRequest ReadRequest(XmlDictionaryReader reader);
    private void ReadRequest(XmlDictionaryReader reader, WsTrustRequest trustRequest, WsSerializationContext serializationContext);
    public RequestSecurityTokenResponse ReadRequestSeurityTokenResponse(XmlDictionaryReader reader, WsSerializationContext serializationContext);
    public static SecurityTokenReference ReadRequestedAttachedReference(XmlDictionaryReader reader, WsSerializationContext serializationContext);
    public static RequestedProofToken ReadRequestedProofToken(XmlDictionaryReader reader, WsSerializationContext serializationContext);
    internal static XmlElement CreateXmlElement(XmlReader reader);
    public static RequestedSecurityToken ReadRequestedSecurityToken(XmlDictionaryReader reader, WsSerializationContext serializationContext);
    public static SecurityTokenReference ReadRequestedUnattachedReference(XmlDictionaryReader reader, WsSerializationContext serializationContext);
    public WsTrustResponse ReadResponse(XmlDictionaryReader reader);
    private WsTrustResponse ReadResponse(XmlDictionaryReader reader, WsSerializationContext serializationContext);
    private static void ReadUnknownElement(XmlDictionaryReader reader, WsTrustRequest trustRequest);
    public static UseKey ReadUseKey(XmlDictionaryReader reader, WsSerializationContext serializationContext);
    [CompilerGeneratedAttribute]
public ICollection`1<SecurityTokenHandler> get_SecurityTokenHandlers();
    [CompilerGeneratedAttribute]
private void set_SecurityTokenHandlers(ICollection`1<SecurityTokenHandler> value);
    public static void WriteBinarySecret(XmlDictionaryWriter writer, WsSerializationContext serializationContext, BinarySecret binarySecret);
    public static void WriteClaims(XmlDictionaryWriter writer, WsSerializationContext serializationContext, Claims claims);
    public static void WriteEntropy(XmlDictionaryWriter writer, WsSerializationContext serializationContext, Entropy entropy);
    public static void WriteLifetime(XmlDictionaryWriter writer, WsSerializationContext serializationContext, Lifetime lifetime);
    public void WriteOnBehalfOf(XmlDictionaryWriter writer, WsSerializationContext serializationContext, SecurityTokenElement onBehalfOf);
    private static bool TryWriteSourceData(XmlDictionaryWriter writer, object assertion, Type assertionType);
    public static void WriteProofEncryption(XmlDictionaryWriter writer, WsSerializationContext serializationContext, SecurityTokenElement proofEncryption);
    public void WriteRequest(XmlDictionaryWriter writer, WsTrustVersion wsTrustVersion, WsTrustRequest trustRequest);
    public void WriteRequestSecurityTokenResponse(XmlDictionaryWriter writer, WsTrustVersion wsTrustVersion, RequestSecurityTokenResponse requestSecurityTokenResponse);
    public static void WriteRequestedAttachedReference(XmlDictionaryWriter writer, WsSerializationContext serializationContext, SecurityTokenReference securityTokenReference);
    public static void WriteRequestedProofToken(XmlDictionaryWriter writer, WsSerializationContext serializationContext, RequestedProofToken requestedProofToken);
    public void WriteRequestedSecurityToken(XmlDictionaryWriter writer, WsSerializationContext serializationContext, RequestedSecurityToken requestedSecurityToken);
    public static void WriteRequestedUnattachedReference(XmlDictionaryWriter writer, WsSerializationContext serializationContext, SecurityTokenReference securityTokenReference);
    public void WriteResponse(XmlDictionaryWriter writer, WsTrustVersion wsTrustVersion, WsTrustResponse trustResponse);
    public static void WriteUseKey(XmlDictionaryWriter writer, WsSerializationContext serializationContext, UseKey useKey);
}
public abstract class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustVersion : object {
    public static WsTrustVersion TrustFeb2005;
    public static WsTrustVersion Trust13;
    public static WsTrustVersion Trust14;
    private static WsTrustVersion();
}
public class Microsoft.IdentityModel.Protocols.WsTrust.WsTrustWriteException : WsTrustException {
    public WsTrustWriteException(string message);
    public WsTrustWriteException(string message, Exception innerException);
}
internal static class Microsoft.IdentityModel.Protocols.WsTrust.WsUtils : object {
    internal static XmlElement ReadAsXmlElement(XmlDictionaryReader reader);
    internal static string ReadStringElement(XmlDictionaryReader reader);
    internal static Nullable`1<int> ReadIntElement(XmlDictionaryReader reader);
    internal static void ValidateParamsForWritting(XmlWriter writer, WsSerializationContext serializationContext, object obj, string objName);
    internal static void CheckReaderOnEntry(XmlReader reader);
    internal static void CheckReaderOnEntry(XmlReader reader, string element, WsSerializationContext serializationContext);
}
public class Microsoft.IdentityModel.Protocols.WsUtility.WsUtility10Constants : WsUtilityConstants {
}
public static class Microsoft.IdentityModel.Protocols.WsUtility.WsUtilityAttributes : object {
    public static string Id;
}
public abstract class Microsoft.IdentityModel.Protocols.WsUtility.WsUtilityConstants : WsConstantsBase {
    [CompilerGeneratedAttribute]
private static IList`1<string> <KnownNamespaces>k__BackingField;
    [CompilerGeneratedAttribute]
private static WsUtility10Constants <WsUtility10>k__BackingField;
    public static IList`1<string> KnownNamespaces { get; }
    public static WsUtility10Constants WsUtility10 { get; }
    private static WsUtilityConstants();
    [CompilerGeneratedAttribute]
public static IList`1<string> get_KnownNamespaces();
    [CompilerGeneratedAttribute]
public static WsUtility10Constants get_WsUtility10();
}
public static class Microsoft.IdentityModel.Protocols.WsUtility.WsUtilityElements : object {
    public static string Created;
    public static string Expires;
    public static string Timestamp;
}
internal class Microsoft.IdentityModel.Protocols.XmlEnc.EncryptedData : object {
}
public class Microsoft.IdentityModel.Protocols.XmlEnc.EncryptedKey : object {
}
internal class Microsoft.IdentityModel.Protocols.XmlEnc.XmlEncryption11Constants : XmlEncryptionConstants {
}
internal class Microsoft.IdentityModel.Protocols.XmlEnc.XmlEncryption11DataTypes : XmlEncryptionDataTypes {
}
internal static class Microsoft.IdentityModel.Protocols.XmlEnc.XmlEncryptionAttributes : object {
    public static string Algorithm;
    public static string Encoding;
    public static string Id;
    public static string MimeType;
    public static string Recipient;
    public static string Type;
    public static string Uri;
}
internal abstract class Microsoft.IdentityModel.Protocols.XmlEnc.XmlEncryptionConstants : WsConstantsBase {
    public static IList`1<string> KnownNamespaces;
    [CompilerGeneratedAttribute]
private static XmlEncryption11Constants <XmlEnc11>k__BackingField;
    public static XmlEncryption11Constants XmlEnc11 { get; }
    private static XmlEncryptionConstants();
    [CompilerGeneratedAttribute]
public static XmlEncryption11Constants get_XmlEnc11();
}
internal abstract class Microsoft.IdentityModel.Protocols.XmlEnc.XmlEncryptionDataTypes : object {
    [CompilerGeneratedAttribute]
private static XmlEncryption11DataTypes <XmlEnc11>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Element>k__BackingField;
    public static XmlEncryption11DataTypes XmlEnc11 { get; }
    public string Content { get; protected set; }
    public string Element { get; protected set; }
    private static XmlEncryptionDataTypes();
    [CompilerGeneratedAttribute]
public static XmlEncryption11DataTypes get_XmlEnc11();
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
protected void set_Content(string value);
    [CompilerGeneratedAttribute]
public string get_Element();
    [CompilerGeneratedAttribute]
protected void set_Element(string value);
}
internal static class Microsoft.IdentityModel.Protocols.XmlEnc.XmlEncryptionElements : object {
    public static string CarriedKeyName;
    public static string CipherData;
    public static string CipherReference;
    public static string CipherValue;
    public static string DataReference;
    public static string EncryptedData;
    public static string EncryptedKey;
    public static string EncryptionMethod;
    public static string EncryptionProperties;
    public static string KeyReference;
    public static string KeySize;
    public static string OaepParams;
    public static string Recipient;
    public static string ReferenceList;
}
internal class Microsoft.IdentityModel.Xml.XmlAttributeHolder : ValueType {
    public static XmlAttributeHolder[] EmptyArray;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamespaceUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Prefix { get; }
    public string NamespaceUri { get; }
    public string LocalName { get; }
    public string Value { get; }
    public XmlAttributeHolder(string prefix, string localName, string ns, string value);
    private static XmlAttributeHolder();
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public string get_NamespaceUri();
    [CompilerGeneratedAttribute]
public string get_LocalName();
    [CompilerGeneratedAttribute]
public string get_Value();
    public static XmlAttributeHolder[] ReadAttributes(XmlDictionaryReader reader);
    public static string GetAttribute(XmlAttributeHolder[] attributes, string localName, string ns);
}
