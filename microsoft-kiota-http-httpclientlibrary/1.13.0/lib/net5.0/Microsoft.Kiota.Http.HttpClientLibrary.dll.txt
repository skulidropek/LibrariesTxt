[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public static class Microsoft.Kiota.Http.Generated.Version : object {
    public static string Current();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Kiota.Http.HttpClientLibrary.Extensions.HttpRequestMessageExtensions : object {
    [ExtensionAttribute]
public static T GetRequestOption(HttpRequestMessage httpRequestMessage);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.Extensions.HttpRequestMessageExtensions/<CloneAsync>d__1")]
[ExtensionAttribute]
internal static Task`1<HttpRequestMessage> CloneAsync(HttpRequestMessage originalRequest, CancellationToken cancellationToken);
    [ExtensionAttribute]
internal static bool IsBuffered(HttpRequestMessage httpRequestMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.HttpClientRequestAdapter : object {
    private HttpClient client;
    private IAuthenticationProvider authProvider;
    private IParseNodeFactory pNodeFactory;
    private ISerializationWriterFactory sWriterFactory;
    [NullableAttribute("2")]
private string baseUrl;
    private bool createdClient;
    private ObservabilityOptions obsOptions;
    private ActivitySource activitySource;
    private static Char[] charactersToDecodeForUriTemplate;
    private static Regex queryParametersCleanupRegex;
    public static string EventResponseHandlerInvokedKey;
    public static string ErrorMappingFoundAttributeName;
    public static string ErrorBodyFoundAttributeName;
    private static string ClaimsKey;
    private static string BearerAuthenticationScheme;
    private static Func`2<AuthenticationHeaderValue, bool> filterAuthHeader;
    private static Regex caeValueRegex;
    public static string AuthenticateChallengedEventKey;
    private static Char[] ComaSplitSeparator;
    public ISerializationWriterFactory SerializationWriterFactory { get; }
    [NullableAttribute("2")]
public string BaseUrl { get; public set; }
    [NullableContextAttribute("2")]
public HttpClientRequestAdapter(IAuthenticationProvider authenticationProvider, IParseNodeFactory parseNodeFactory, ISerializationWriterFactory serializationWriterFactory, HttpClient httpClient, ObservabilityOptions observabilityOptions);
    private static HttpClientRequestAdapter();
    public sealed virtual ISerializationWriterFactory get_SerializationWriterFactory();
    [NullableContextAttribute("2")]
public sealed virtual string get_BaseUrl();
    [NullableContextAttribute("2")]
public sealed virtual void set_BaseUrl(string value);
    private Activity startTracingSpan(RequestInformation requestInfo, string methodName);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.HttpClientRequestAdapter/<SendCollectionAsync>d__17`1")]
public sealed virtual Task`1<IEnumerable`1<ModelType>> SendCollectionAsync(RequestInformation requestInfo, ParsableFactory`1<ModelType> factory, Dictionary`2<string, ParsableFactory`1<IParsable>> errorMapping, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.HttpClientRequestAdapter/<SendPrimitiveCollectionAsync>d__18`1")]
public sealed virtual Task`1<IEnumerable`1<ModelType>> SendPrimitiveCollectionAsync(RequestInformation requestInfo, Dictionary`2<string, ParsableFactory`1<IParsable>> errorMapping, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.HttpClientRequestAdapter/<SendAsync>d__20`1")]
public sealed virtual Task`1<ModelType> SendAsync(RequestInformation requestInfo, ParsableFactory`1<ModelType> factory, Dictionary`2<string, ParsableFactory`1<IParsable>> errorMapping, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.HttpClientRequestAdapter/<SendPrimitiveAsync>d__21`1")]
public sealed virtual Task`1<ModelType> SendPrimitiveAsync(RequestInformation requestInfo, Dictionary`2<string, ParsableFactory`1<IParsable>> errorMapping, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.HttpClientRequestAdapter/<SendNoContentAsync>d__22")]
public sealed virtual Task SendNoContentAsync(RequestInformation requestInfo, Dictionary`2<string, ParsableFactory`1<IParsable>> errorMapping, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private static void SetResponseType(object result, Activity activity);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.HttpClientRequestAdapter/<DrainAsync>d__24")]
private static Task DrainAsync(HttpResponseMessage response, CancellationToken cancellationToken);
    private static bool shouldReturnNull(HttpResponseMessage response);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.HttpClientRequestAdapter/<ThrowIfFailedResponseAsync>d__28")]
private Task ThrowIfFailedResponseAsync(HttpResponseMessage response, Dictionary`2<string, ParsableFactory`1<IParsable>> errorMapping, Activity activityForAttributes, CancellationToken cancellationToken);
    private static IResponseHandler GetResponseHandler(RequestInformation requestInfo);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.HttpClientRequestAdapter/<GetRootParseNodeAsync>d__30")]
private Task`1<IParseNode> GetRootParseNodeAsync(HttpResponseMessage response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.HttpClientRequestAdapter/<GetHttpResponseMessageAsync>d__34")]
private Task`1<HttpResponseMessage> GetHttpResponseMessageAsync(RequestInformation requestInfo, CancellationToken cancellationToken, Activity activityForAttributes, string claims, bool isStreamResponse);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.HttpClientRequestAdapter/<RetryCAEResponseIfRequiredAsync>d__38")]
private Task`1<HttpResponseMessage> RetryCAEResponseIfRequiredAsync(HttpResponseMessage response, RequestInformation requestInfo, CancellationToken cancellationToken, string claims, Activity activityForAttributes);
    private void SetBaseUrlForRequestInformation(RequestInformation requestInfo);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.HttpClientRequestAdapter/<ConvertToNativeRequestAsync>d__40`1")]
public sealed virtual Task`1<T> ConvertToNativeRequestAsync(RequestInformation requestInfo, CancellationToken cancellationToken);
    private HttpRequestMessage GetRequestMessageFromRequestInformation(RequestInformation requestInfo, Activity activityForAttributes);
    public sealed virtual void EnableBackingStore(IBackingStoreFactory backingStoreFactory);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.Kiota.Http.HttpClientLibrary.KiotaClientFactory : object {
    public static HttpClient Create(HttpMessageHandler finalHandler, IRequestOption[] optionsForHandlers);
    public static HttpClient Create(IList`1<DelegatingHandler> handlers, HttpMessageHandler finalHandler);
    public static IList`1<DelegatingHandler> CreateDefaultHandlers(IRequestOption[] optionsForHandlers);
    public static IList`1<Type> GetDefaultHandlerTypes();
    [NullableContextAttribute("2")]
public static DelegatingHandler ChainHandlersCollectionAndGetFirstLink(HttpMessageHandler finalHandler, DelegatingHandler[] handlers);
    public static DelegatingHandler ChainHandlersCollectionAndGetFirstLink(DelegatingHandler[] handlers);
    public static HttpMessageHandler GetDefaultHttpMessageHandler(IWebProxy proxy);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.ActivitySourceRegistry : object {
    private ConcurrentDictionary`2<string, ActivitySource> _activitySources;
    public static ActivitySourceRegistry DefaultInstance;
    private static ActivitySourceRegistry();
    public ActivitySource GetOrCreateActivitySource(string sourceName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.ChaosHandler : DelegatingHandler {
    private Random _random;
    private ChaosHandlerOption _chaosHandlerOptions;
    private List`1<HttpResponseMessage> _knownFailures;
    private static string Json;
    public static string ChaosHandlerTriggeredEventKey;
    [NullableContextAttribute("2")]
public ChaosHandler(ChaosHandlerOption chaosHandlerOptions);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.Middleware.ChaosHandler/<SendAsync>d__6")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    private HttpResponseMessage CreateChaosResponse(List`1<HttpResponseMessage> knownFailures);
    private void LoadKnownFailures(List`1<HttpResponseMessage> knownFailures);
    public static HttpResponseMessage Create429TooManyRequestsResponse(TimeSpan retry);
    public static HttpResponseMessage Create503Response(TimeSpan retry);
    public static HttpResponseMessage Create502BadGatewayResponse();
    public static HttpResponseMessage Create500InternalServerErrorResponse();
    public static HttpResponseMessage Create504GatewayTimeoutResponse(TimeSpan retry);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("kiota clients now rely on the HttpClientHandler to handle decompression")]
[EditorBrowsableAttribute("1")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.CompressionHandler : DelegatingHandler {
    internal static string GZip;
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.Middleware.CompressionHandler/<SendAsync>d__1")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    private static bool ShouldDecompressContent(HttpResponseMessage httpResponse);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.Error : object {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string Code { get; public set; }
    public string Message { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.HeadersInspectionHandler : DelegatingHandler {
    private HeadersInspectionHandlerOption _defaultOptions;
    [NullableContextAttribute("2")]
public HeadersInspectionHandler(HeadersInspectionHandlerOption defaultOptions);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.Middleware.HeadersInspectionHandler/<SendAsync>d__2")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static String[] <SendAsync>g__ConvertHeaderValuesToArray|2_0(IEnumerable`1<string> headerValues);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.MainError : object {
    [CompilerGeneratedAttribute]
private Error <error>k__BackingField;
    public Error error { get; public set; }
    [CompilerGeneratedAttribute]
public Error get_error();
    [CompilerGeneratedAttribute]
public void set_error(Error value);
}
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.Options.ChaosHandlerOption : object {
    [CompilerGeneratedAttribute]
private int <ChaosPercentLevel>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<HttpResponseMessage> <KnownChaos>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<HttpRequestMessage, HttpResponseMessage> <PlannedChaosFactory>k__BackingField;
    public int ChaosPercentLevel { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<HttpResponseMessage> KnownChaos { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<HttpRequestMessage, HttpResponseMessage> PlannedChaosFactory { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ChaosPercentLevel();
    [CompilerGeneratedAttribute]
public void set_ChaosPercentLevel(int value);
    [CompilerGeneratedAttribute]
public List`1<HttpResponseMessage> get_KnownChaos();
    [CompilerGeneratedAttribute]
public void set_KnownChaos(List`1<HttpResponseMessage> value);
    [CompilerGeneratedAttribute]
public Func`2<HttpRequestMessage, HttpResponseMessage> get_PlannedChaosFactory();
    [CompilerGeneratedAttribute]
public void set_PlannedChaosFactory(Func`2<HttpRequestMessage, HttpResponseMessage> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.Options.HeadersInspectionHandlerOption : object {
    [CompilerGeneratedAttribute]
private bool <InspectRequestHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InspectResponseHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestHeaders <RequestHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestHeaders <ResponseHeaders>k__BackingField;
    public bool InspectRequestHeaders { get; public set; }
    public bool InspectResponseHeaders { get; public set; }
    public RequestHeaders RequestHeaders { get; private set; }
    public RequestHeaders ResponseHeaders { get; private set; }
    [CompilerGeneratedAttribute]
public bool get_InspectRequestHeaders();
    [CompilerGeneratedAttribute]
public void set_InspectRequestHeaders(bool value);
    [CompilerGeneratedAttribute]
public bool get_InspectResponseHeaders();
    [CompilerGeneratedAttribute]
public void set_InspectResponseHeaders(bool value);
    [CompilerGeneratedAttribute]
public RequestHeaders get_RequestHeaders();
    [CompilerGeneratedAttribute]
private void set_RequestHeaders(RequestHeaders value);
    [CompilerGeneratedAttribute]
public RequestHeaders get_ResponseHeaders();
    [CompilerGeneratedAttribute]
private void set_ResponseHeaders(RequestHeaders value);
}
public interface Microsoft.Kiota.Http.HttpClientLibrary.Middleware.Options.IUriReplacementHandlerOption {
    public abstract virtual bool IsEnabled();
    [NullableContextAttribute("2")]
public abstract virtual Uri Replace(Uri original);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.Options.ParametersNameDecodingOption : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<char> <ParametersToDecode>k__BackingField;
    public bool Enabled { get; public set; }
    public List`1<char> ParametersToDecode { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public List`1<char> get_ParametersToDecode();
    [CompilerGeneratedAttribute]
public void set_ParametersToDecode(List`1<char> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.Options.RedirectHandlerOption : object {
    private static int DefaultMaxRedirect;
    private static int MaxMaxRedirect;
    private int _maxRedirect;
    [CompilerGeneratedAttribute]
private Func`2<HttpResponseMessage, bool> <ShouldRedirect>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowRedirectOnSchemeChange>k__BackingField;
    public int MaxRedirect { get; public set; }
    public Func`2<HttpResponseMessage, bool> ShouldRedirect { get; public set; }
    public bool AllowRedirectOnSchemeChange { get; public set; }
    public int get_MaxRedirect();
    public void set_MaxRedirect(int value);
    [CompilerGeneratedAttribute]
public Func`2<HttpResponseMessage, bool> get_ShouldRedirect();
    [CompilerGeneratedAttribute]
public void set_ShouldRedirect(Func`2<HttpResponseMessage, bool> value);
    [CompilerGeneratedAttribute]
public bool get_AllowRedirectOnSchemeChange();
    [CompilerGeneratedAttribute]
public void set_AllowRedirectOnSchemeChange(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.Options.RetryHandlerOption : object {
    internal static int DefaultDelay;
    internal static int DefaultMaxRetry;
    internal static int MaxMaxRetry;
    internal static int MaxDelay;
    private int _maxRetry;
    private int _delay;
    [CompilerGeneratedAttribute]
private TimeSpan <RetriesTimeLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`4<int, int, HttpResponseMessage, bool> <ShouldRetry>k__BackingField;
    public int Delay { get; public set; }
    public int MaxRetry { get; public set; }
    public TimeSpan RetriesTimeLimit { get; public set; }
    public Func`4<int, int, HttpResponseMessage, bool> ShouldRetry { get; public set; }
    public int get_Delay();
    public void set_Delay(int value);
    public int get_MaxRetry();
    public void set_MaxRetry(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_RetriesTimeLimit();
    [CompilerGeneratedAttribute]
public void set_RetriesTimeLimit(TimeSpan value);
    [CompilerGeneratedAttribute]
public Func`4<int, int, HttpResponseMessage, bool> get_ShouldRetry();
    [CompilerGeneratedAttribute]
public void set_ShouldRetry(Func`4<int, int, HttpResponseMessage, bool> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.Options.TelemetryHandlerOption : object {
    [CompilerGeneratedAttribute]
private Func`2<HttpRequestMessage, HttpRequestMessage> <TelemetryConfigurator>k__BackingField;
    public Func`2<HttpRequestMessage, HttpRequestMessage> TelemetryConfigurator { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<HttpRequestMessage, HttpRequestMessage> get_TelemetryConfigurator();
    [CompilerGeneratedAttribute]
public void set_TelemetryConfigurator(Func`2<HttpRequestMessage, HttpRequestMessage> value);
}
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.Options.UriReplacementHandlerOption : object {
    private bool isEnabled;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<KeyValuePair`2<string, string>> replacementPairs;
    public UriReplacementHandlerOption(bool isEnabled, IEnumerable`1<KeyValuePair`2<string, string>> replacementPairs);
    public UriReplacementHandlerOption(bool isEnabled);
    public sealed virtual bool IsEnabled();
    [NullableContextAttribute("2")]
public sealed virtual Uri Replace(Uri original);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.Options.UserAgentHandlerOption : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductVersion>k__BackingField;
    public bool Enabled { get; public set; }
    public string ProductName { get; public set; }
    public string ProductVersion { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public string get_ProductName();
    [CompilerGeneratedAttribute]
public void set_ProductName(string value);
    [CompilerGeneratedAttribute]
public string get_ProductVersion();
    [CompilerGeneratedAttribute]
public void set_ProductVersion(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.ParametersNameDecodingHandler : DelegatingHandler {
    [CompilerGeneratedAttribute]
private ParametersNameDecodingOption <EncodingOptions>k__BackingField;
    private static Char[] EntriesSeparator;
    private static Char[] ParameterSeparator;
    internal ParametersNameDecodingOption EncodingOptions { get; internal set; }
    [NullableContextAttribute("2")]
public ParametersNameDecodingHandler(ParametersNameDecodingOption options);
    private static ParametersNameDecodingHandler();
    [CompilerGeneratedAttribute]
internal ParametersNameDecodingOption get_EncodingOptions();
    [CompilerGeneratedAttribute]
internal void set_EncodingOptions(ParametersNameDecodingOption value);
    protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
internal static string DecodeUriEncodedString(string original, Char[] charactersToDecode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.RedirectHandler : DelegatingHandler {
    [CompilerGeneratedAttribute]
private RedirectHandlerOption <RedirectOption>k__BackingField;
    internal RedirectHandlerOption RedirectOption { get; private set; }
    [NullableContextAttribute("2")]
public RedirectHandler(RedirectHandlerOption redirectOption);
    [CompilerGeneratedAttribute]
internal RedirectHandlerOption get_RedirectOption();
    [CompilerGeneratedAttribute]
private void set_RedirectOption(RedirectHandlerOption value);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.Middleware.RedirectHandler/<SendAsync>d__5")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    private bool ShouldRedirect(HttpResponseMessage responseMessage, RedirectHandlerOption redirectOption);
    private static bool IsRedirect(HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.RetryHandler : DelegatingHandler {
    private static string RetryAfter;
    private static string RetryAttempt;
    [CompilerGeneratedAttribute]
private RetryHandlerOption <RetryOption>k__BackingField;
    internal RetryHandlerOption RetryOption { get; internal set; }
    [NullableContextAttribute("2")]
public RetryHandler(RetryHandlerOption retryOption);
    [CompilerGeneratedAttribute]
internal RetryHandlerOption get_RetryOption();
    [CompilerGeneratedAttribute]
internal void set_RetryOption(RetryHandlerOption value);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.Middleware.RetryHandler/<SendAsync>d__7")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.Middleware.RetryHandler/<SendRetryAsync>d__8")]
private Task`1<HttpResponseMessage> SendRetryAsync(HttpResponseMessage response, RetryHandlerOption retryOption, CancellationToken cancellationToken, ActivitySource activitySource);
    private static void AddOrUpdateRetryAttempt(HttpRequestMessage request, int retryCount);
    internal static Task DelayAsync(HttpResponseMessage response, int retryCount, int delay, Double& delayInSeconds, CancellationToken cancellationToken);
    private static double CalculateExponentialDelay(int retryCount, int delay);
    private static bool ShouldRetry(HttpStatusCode statusCode);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.Middleware.RetryHandler/<GetInnerExceptionAsync>d__13")]
private static Task`1<Exception> GetInnerExceptionAsync(HttpResponseMessage response);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSerializableAttribute("Microsoft.Kiota.Http.HttpClientLibrary.Middleware.MainError")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "6.0.5.2210")]
internal class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.SourceGenerationContext : JsonSerializerContext {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Error> _Error;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<MainError> _MainError;
    [CompilerGeneratedAttribute]
private static JsonSerializerOptions <s_defaultOptions>k__BackingField;
    [NullableAttribute("2")]
private static SourceGenerationContext s_defaultContext;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_error;
    private static JsonEncodedText PropName_Code;
    private static JsonEncodedText PropName_Message;
    public JsonTypeInfo`1<string> String { get; }
    public JsonTypeInfo`1<Error> Error { get; }
    public JsonTypeInfo`1<MainError> MainError { get; }
    private static JsonSerializerOptions s_defaultOptions { get; }
    public static SourceGenerationContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public SourceGenerationContext(JsonSerializerOptions options);
    private static SourceGenerationContext();
    public JsonTypeInfo`1<string> get_String();
    public JsonTypeInfo`1<Error> get_Error();
    private static JsonPropertyInfo[] ErrorPropInit(JsonSerializerContext context);
    private static void ErrorSerializeHandler(Utf8JsonWriter writer, Error value);
    public JsonTypeInfo`1<MainError> get_MainError();
    private static JsonPropertyInfo[] MainErrorPropInit(JsonSerializerContext context);
    private static void MainErrorSerializeHandler(Utf8JsonWriter writer, MainError value);
    [CompilerGeneratedAttribute]
private static JsonSerializerOptions get_s_defaultOptions();
    public static SourceGenerationContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private JsonConverter GetRuntimeProvidedCustomConverter(Type type);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.TelemetryHandler : DelegatingHandler {
    private TelemetryHandlerOption _telemetryHandlerOption;
    [NullableContextAttribute("2")]
public TelemetryHandler(TelemetryHandlerOption telemetryHandlerOption);
    [AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.Middleware.TelemetryHandler/<SendAsync>d__2")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.UriReplacementHandler`1 : DelegatingHandler {
    [NullableAttribute("2")]
private TUriReplacementHandlerOption _uriReplacement;
    [NullableContextAttribute("2")]
public UriReplacementHandler`1(TUriReplacementHandlerOption uriReplacement);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Microsoft.Kiota.Http.HttpClientLibrary.Middleware.UriReplacementHandler`1/<SendAsync>d__2")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.Middleware.UserAgentHandler : DelegatingHandler {
    private UserAgentHandlerOption _userAgentOption;
    [NullableContextAttribute("2")]
public UserAgentHandler(UserAgentHandlerOption userAgentHandlerOption);
    protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Kiota.Http.HttpClientLibrary.ObservabilityOptions : object {
    [CompilerGeneratedAttribute]
private bool <IncludeEUIIAttributes>k__BackingField;
    private static Lazy`1<string> _name;
    public bool IncludeEUIIAttributes { get; public set; }
    public string TracerInstrumentationName { get; }
    private static ObservabilityOptions();
    [CompilerGeneratedAttribute]
public bool get_IncludeEUIIAttributes();
    [CompilerGeneratedAttribute]
public void set_IncludeEUIIAttributes(bool value);
    public string get_TracerInstrumentationName();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
