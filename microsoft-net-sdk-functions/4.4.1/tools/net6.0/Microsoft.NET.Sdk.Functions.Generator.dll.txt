[ExtensionAttribute]
internal static class MakeFunctionJson.AttributeExtensions : object {
    private static HashSet`1<string> _supportedAttributes;
    private static AttributeExtensions();
    [ExtensionAttribute]
public static string ToAttributeFriendlyName(Attribute attribute);
    [ExtensionAttribute]
public static string ToAttributeFriendlyName(CustomAttribute attribute);
    private static string ToAttributeFriendlyName(string name);
    [ExtensionAttribute]
public static bool IsWebJobsAttribute(CustomAttribute attribute);
    [ExtensionAttribute]
public static JObject ToJObject(Attribute attribute);
    [ExtensionAttribute]
public static T GetValue(Attribute attribute, string propertyName);
    [ExtensionAttribute]
public static void SetValue(Attribute attribute, string propertyName, object propertyValue);
    private static bool TryGetPropertyValue(PropertyInfo property, object propertyValue, String& value);
    private static void CheckIfPropertyIsSupported(string attributeName, PropertyInfo property);
    private static string NormalizePropertyName(Attribute attribute, PropertyInfo property);
}
internal class MakeFunctionJson.ConsoleLogger : object {
    public sealed virtual void LogError(string message);
    public sealed virtual void LogErrorFromException(Exception e);
    public sealed virtual void LogWarningFromException(Exception e);
    public sealed virtual void LogWarning(string message);
}
internal class MakeFunctionJson.FunctionJsonConverter : object {
    private string _assemblyPath;
    private string _outputPath;
    private bool _functionsInDependencies;
    private HashSet`1<string> _excludedFunctionNames;
    private ILogger _logger;
    private IDictionary`2<string, MethodDefinition> _functionNamesSet;
    private static IEnumerable`1<string> _functionsArtifacts;
    private static IEnumerable`1<string> _triggersWithoutStorage;
    internal FunctionJsonConverter(ILogger logger, string assemblyPath, string outputPath, bool functionsInDependencies, IEnumerable`1<string> excludedFunctionNames);
    private static FunctionJsonConverter();
    internal bool TryRun();
    private void CopyFunctionArtifacts();
    [IteratorStateMachineAttribute("MakeFunctionJson.FunctionJsonConverter/<GenerateFunctions>d__11")]
public IEnumerable`1<Nullable`1<ValueTuple`2<FunctionJsonSchema, FileInfo>>> GenerateFunctions(IEnumerable`1<TypeDefinition> types);
    private bool TryGenerateFunctionJsons();
    private bool CheckAppSettingsAndFunctionName(FunctionJsonSchema functionJson, MethodDefinition method);
    private void CleanOutputPath();
    [CompilerGeneratedAttribute]
private bool <CleanOutputPath>b__14_1(string d);
    [CompilerGeneratedAttribute]
private void <CleanOutputPath>b__14_2(string directory);
}
internal class MakeFunctionJson.FunctionJsonSchema : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<JObject> <Bindings>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScriptFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntryPoint>k__BackingField;
    [JsonPropertyAttribute("configurationSource")]
public static string ConfigurationSource;
    [JsonPropertyAttribute("generatedBy")]
public string GeneratedBy;
    [JsonPropertyAttribute("bindings")]
public IEnumerable`1<JObject> Bindings { get; public set; }
    [JsonPropertyAttribute("disabled")]
public object Disabled { get; public set; }
    [JsonPropertyAttribute("scriptFile")]
public string ScriptFile { get; public set; }
    [JsonPropertyAttribute("entryPoint")]
public string EntryPoint { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<JObject> get_Bindings();
    [CompilerGeneratedAttribute]
public void set_Bindings(IEnumerable`1<JObject> value);
    [CompilerGeneratedAttribute]
public object get_Disabled();
    [CompilerGeneratedAttribute]
public void set_Disabled(object value);
    [CompilerGeneratedAttribute]
public string get_ScriptFile();
    [CompilerGeneratedAttribute]
public void set_ScriptFile(string value);
    [CompilerGeneratedAttribute]
public string get_EntryPoint();
    [CompilerGeneratedAttribute]
public void set_EntryPoint(string value);
}
[ExtensionAttribute]
internal static class MakeFunctionJson.FunctionJsonSchemaExtension : object {
    [ExtensionAttribute]
public static void Serialize(FunctionJsonSchema functionJson, string path);
}
internal interface MakeFunctionJson.ILogger {
    public abstract virtual void LogError(string message);
    public abstract virtual void LogErrorFromException(Exception e);
    public abstract virtual void LogWarning(string message);
    public abstract virtual void LogWarningFromException(Exception e);
}
internal class MakeFunctionJson.LocalSettingsJson : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Values>k__BackingField;
    public Dictionary`2<string, string> Values { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(Dictionary`2<string, string> value);
}
[ExtensionAttribute]
internal static class MakeFunctionJson.MethodInfoExtensions : object {
    [ExtensionAttribute]
public static bool IsWebJobsSdkMethod(MethodDefinition method);
    [ExtensionAttribute]
public static bool HasValidWebJobSdkTriggerAttribute(MethodDefinition method);
    [ExtensionAttribute]
public static bool HasFunctionNameAttribute(MethodDefinition method);
    [ExtensionAttribute]
public static bool HasNoAutomaticTriggerAttribute(MethodDefinition method);
    [ExtensionAttribute]
public static bool HasTriggerAttribute(MethodDefinition method);
    [ExtensionAttribute]
public static JObject ManualTriggerBinding(MethodDefinition method);
    [ExtensionAttribute]
public static FunctionJsonSchema ToFunctionJson(MethodDefinition method, string assemblyPath);
    private static JObject[] GetOutputBindingsFromReturnAttribute(MethodDefinition method);
    [ExtensionAttribute]
public static string GetSdkFunctionName(MethodDefinition method);
    [ExtensionAttribute]
public static object GetDisabled(MethodDefinition method);
    [ExtensionAttribute]
public static CustomAttribute GetDisabledAttribute(MethodDefinition method);
    [ExtensionAttribute]
public static bool HasUnsuportedAttributes(MethodDefinition method, String& error);
}
[ExtensionAttribute]
internal static class MakeFunctionJson.ParameterInfoExtensions : object {
    [ExtensionAttribute]
public static bool IsWebJobSdkTriggerParameter(ParameterDefinition parameterInfo);
    [ExtensionAttribute]
public static IEnumerable`1<JObject> ToFunctionJsonBindings(ParameterDefinition parameterInfo);
    [ExtensionAttribute]
public static CustomAttribute GetDisabledAttribute(ParameterDefinition parameterInfo);
}
internal class MakeFunctionJson.PathUtility : object {
    internal static string MakeRelativePath(string fromPath, string toPath);
}
[ExtensionAttribute]
internal static class MakeFunctionJson.TypeInfoExtensions : object {
    [ExtensionAttribute]
public static bool IsImplementing(TypeInfo typeInfo, string interfaceName);
    [ExtensionAttribute]
public static CustomAttribute GetDisabledAttribute(TypeDefinition type);
}
[ExtensionAttribute]
internal static class MakeFunctionJson.TypeUtility : object {
    private static CustomAttribute GetHierarchicalAttributeOrNull(ParameterDefinition parameter, Type attributeType);
    private static CustomAttribute GetHierarchicalAttributeOrNull(MethodDefinition method, Type type);
    internal static Attribute GetResolvedAttribute(ParameterDefinition parameter, CustomAttribute customAttribute);
    [ExtensionAttribute]
public static Attribute ToReflection(CustomAttribute customAttribute);
    [ExtensionAttribute]
public static Type ToReflectionType(TypeReference typeDef);
    private static object NormalizeArg(CustomAttributeArgument arg);
    [ExtensionAttribute]
public static CustomAttribute GetCustomAttribute(ICustomAttributeProvider provider, Type parameterType);
    [ExtensionAttribute]
public static string GetReflectionFullName(TypeReference typeRef);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class Microsoft.NET.Sdk.Functions.Console.Program : object {
    private static void Main(String[] args);
    internal static void ParseArgs(String[] args, String& assemblyPath, String& outputPath, Boolean& functionsInDependencies, IEnumerable`1& excludedFunctionNames);
}
internal static class Microsoft.NET.Sdk.Functions.Generator.PackageVersionHelper : object {
    public static string Name { get; }
    public static string Version { get; }
    public static string get_Name();
    public static string get_Version();
}
[ExtensionAttribute]
public static class Microsoft.NET.Sdk.Functions.MakeFunction.StringExtension : object {
    [ExtensionAttribute]
public static string ToLowerFirstCharacter(string str);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
