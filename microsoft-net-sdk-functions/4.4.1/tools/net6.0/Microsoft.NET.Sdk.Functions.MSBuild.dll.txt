internal class Microsoft.NET.Sdk.Functions.Http.DefaultHttpClient : object {
    private HttpClient _httpClient;
    public HttpRequestHeaders DefaultRequestHeaders { get; }
    public sealed virtual HttpRequestHeaders get_DefaultRequestHeaders();
    public sealed virtual void Dispose();
    public sealed virtual Task`1<HttpResponseMessage> PostAsync(Uri uri, StreamContent content);
    public sealed virtual Task`1<HttpResponseMessage> GetAsync(Uri uri, CancellationToken cancellationToken);
}
[ExtensionAttribute]
internal static class Microsoft.NET.Sdk.Functions.Http.HttpClientHelpers : object {
    internal static string AzureADUserName;
    internal static string BearerAuthenticationScheme;
    internal static string BasicAuthenticationScheme;
    private static HttpClientHelpers();
    [AsyncStateMachineAttribute("Microsoft.NET.Sdk.Functions.Http.HttpClientHelpers/<PostRequestAsync>d__3")]
[ExtensionAttribute]
public static Task`1<IHttpResponse> PostRequestAsync(IHttpClient client, Uri uri, string username, string password, string contentType, string userAgent, Encoding encoding, Stream messageBody);
    [AsyncStateMachineAttribute("Microsoft.NET.Sdk.Functions.Http.HttpClientHelpers/<GetRequestAsync>d__4")]
[ExtensionAttribute]
public static Task`1<IHttpResponse> GetRequestAsync(IHttpClient client, Uri uri, string username, string password, string userAgent, CancellationToken cancellationToken);
    private static void AddAuthenticationHeader(string username, string password, IHttpClient client);
}
internal class Microsoft.NET.Sdk.Functions.Http.HttpResponseMessageForStatusCode : object {
    [CompilerGeneratedAttribute]
private HttpStatusCode <StatusCode>k__BackingField;
    public HttpStatusCode StatusCode { get; private set; }
    public HttpResponseMessageForStatusCode(HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_StatusCode();
    [CompilerGeneratedAttribute]
private void set_StatusCode(HttpStatusCode value);
    public sealed virtual Task`1<Stream> GetResponseBodyAsync();
    public sealed virtual IEnumerable`1<string> GetHeader(string name);
}
public class Microsoft.NET.Sdk.Functions.Http.HttpResponseMessageWrapper : object {
    private HttpResponseMessage _message;
    private Lazy`1<Task`1<Stream>> _responseBodyTask;
    [CompilerGeneratedAttribute]
private HttpStatusCode <StatusCode>k__BackingField;
    public HttpStatusCode StatusCode { get; private set; }
    public HttpResponseMessageWrapper(HttpResponseMessage message);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_StatusCode();
    [CompilerGeneratedAttribute]
private void set_StatusCode(HttpStatusCode value);
    [AsyncStateMachineAttribute("Microsoft.NET.Sdk.Functions.Http.HttpResponseMessageWrapper/<GetResponseBodyAsync>d__7")]
public sealed virtual Task`1<Stream> GetResponseBodyAsync();
    private Task`1<Stream> GetResponseStream();
    public sealed virtual IEnumerable`1<string> GetHeader(string name);
}
public interface Microsoft.NET.Sdk.Functions.Http.IHttpClient {
    public HttpRequestHeaders DefaultRequestHeaders { get; }
    public abstract virtual HttpRequestHeaders get_DefaultRequestHeaders();
    public abstract virtual Task`1<HttpResponseMessage> PostAsync(Uri uri, StreamContent content);
    public abstract virtual Task`1<HttpResponseMessage> GetAsync(Uri uri, CancellationToken cancellationToken);
}
public interface Microsoft.NET.Sdk.Functions.Http.IHttpResponse {
    public HttpStatusCode StatusCode { get; }
    public abstract virtual HttpStatusCode get_StatusCode();
    public abstract virtual Task`1<Stream> GetResponseBodyAsync();
    public abstract virtual IEnumerable`1<string> GetHeader(string name);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.NET.Sdk.Functions.MSBuild.Properties.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string DeploymentStatus { get; }
    internal static string DeploymentStatusPolling { get; }
    internal static string NeitherSiteNameNorPublishUrlGivenError { get; }
    internal static string PublishingZipViaZipDeploy { get; }
    internal static string ZipDeployDeploymentStatus { get; }
    internal static string ZipDeployFailureErrorMessage { get; }
    internal static string ZipDeploymentFailed { get; }
    internal static string ZipDeploymentSucceeded { get; }
    internal static string ZipFileUploaded { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_DeploymentStatus();
    internal static string get_DeploymentStatusPolling();
    internal static string get_NeitherSiteNameNorPublishUrlGivenError();
    internal static string get_PublishingZipViaZipDeploy();
    internal static string get_ZipDeployDeploymentStatus();
    internal static string get_ZipDeployFailureErrorMessage();
    internal static string get_ZipDeploymentFailed();
    internal static string get_ZipDeploymentSucceeded();
    internal static string get_ZipFileUploaded();
}
public class Microsoft.NET.Sdk.Functions.MSBuild.Tasks.CreateZipFileTask : Task {
    [CompilerGeneratedAttribute]
private string <FolderToZip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublishIntermediateTempPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CreatedZipPath>k__BackingField;
    [RequiredAttribute]
public string FolderToZip { get; public set; }
    [RequiredAttribute]
public string ProjectName { get; public set; }
    [RequiredAttribute]
public string PublishIntermediateTempPath { get; public set; }
    [OutputAttribute]
public string CreatedZipPath { get; private set; }
    [CompilerGeneratedAttribute]
public string get_FolderToZip();
    [CompilerGeneratedAttribute]
public void set_FolderToZip(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_PublishIntermediateTempPath();
    [CompilerGeneratedAttribute]
public void set_PublishIntermediateTempPath(string value);
    [CompilerGeneratedAttribute]
public string get_CreatedZipPath();
    [CompilerGeneratedAttribute]
private void set_CreatedZipPath(string value);
    public virtual bool Execute();
}
public enum Microsoft.NET.Sdk.Functions.MSBuild.Tasks.DeployStatus : Enum {
    public int value__;
    public static DeployStatus Unknown;
    public static DeployStatus Pending;
    public static DeployStatus Building;
    public static DeployStatus Deploying;
    public static DeployStatus Failed;
    public static DeployStatus Success;
}
internal class Microsoft.NET.Sdk.Functions.MSBuild.Tasks.ZipDeploymentStatus : object {
    private static int MaxMinutesToWait;
    private static int StatusRefreshDelaySeconds;
    private static int RetryCount;
    private static int RetryDelaySeconds;
    private IHttpClient _client;
    private string _userAgent;
    private TaskLoggingHelper _log;
    private bool _logMessages;
    public ZipDeploymentStatus(IHttpClient client, string userAgent, TaskLoggingHelper log, bool logMessages);
    [AsyncStateMachineAttribute("Microsoft.NET.Sdk.Functions.MSBuild.Tasks.ZipDeploymentStatus/<PollDeploymentStatusAsync>d__9")]
public Task`1<DeployStatus> PollDeploymentStatusAsync(string deploymentUrl, string userName, string password);
    [AsyncStateMachineAttribute("Microsoft.NET.Sdk.Functions.MSBuild.Tasks.ZipDeploymentStatus/<GetDeploymentStatusAsync>d__10")]
private Task`1<DeployStatus> GetDeploymentStatusAsync(string deploymentUrl, string userName, string password, int retryCount, TimeSpan retryDelay, CancellationTokenSource cts);
    [AsyncStateMachineAttribute("Microsoft.NET.Sdk.Functions.MSBuild.Tasks.ZipDeploymentStatus/<InvokeGetRequestWithRetryAsync>d__11`1")]
private Task`1<T> InvokeGetRequestWithRetryAsync(string url, string userName, string password, int retryCount, TimeSpan retryDelay, CancellationTokenSource cts);
    [AsyncStateMachineAttribute("Microsoft.NET.Sdk.Functions.MSBuild.Tasks.ZipDeploymentStatus/<RetryAsync>d__12")]
private Task RetryAsync(Func`1<Task> func, int retryCount, TimeSpan retryDelay);
}
internal static class Microsoft.NET.Sdk.Functions.Tasks.DotNetMuxer : object {
    private static string MuxerName;
    [CompilerGeneratedAttribute]
private static string <MuxerPath>k__BackingField;
    public static string MuxerPath { get; }
    private static DotNetMuxer();
    [CompilerGeneratedAttribute]
public static string get_MuxerPath();
    public static string MuxerPathOrDefault();
    private static string TryFindMuxerPath();
}
public class Microsoft.NET.Sdk.Functions.Tasks.GenerateFunctions : Task {
    [CompilerGeneratedAttribute]
private string <TargetPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskAssemblyDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GenerateHostJson>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <UserProvidedFunctionJsonFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FunctionsInDependencies>k__BackingField;
    private static string NETCoreAppFolder;
    [RequiredAttribute]
public string TargetPath { get; public set; }
    [RequiredAttribute]
public string OutputPath { get; public set; }
    [RequiredAttribute]
public string TaskAssemblyDirectory { get; public set; }
    public bool GenerateHostJson { get; public set; }
    public ITaskItem[] UserProvidedFunctionJsonFiles { get; public set; }
    public bool FunctionsInDependencies { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TargetPath();
    [CompilerGeneratedAttribute]
public void set_TargetPath(string value);
    [CompilerGeneratedAttribute]
public string get_OutputPath();
    [CompilerGeneratedAttribute]
public void set_OutputPath(string value);
    [CompilerGeneratedAttribute]
public string get_TaskAssemblyDirectory();
    [CompilerGeneratedAttribute]
public void set_TaskAssemblyDirectory(string value);
    [CompilerGeneratedAttribute]
public bool get_GenerateHostJson();
    [CompilerGeneratedAttribute]
public void set_GenerateHostJson(bool value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_UserProvidedFunctionJsonFiles();
    [CompilerGeneratedAttribute]
public void set_UserProvidedFunctionJsonFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public bool get_FunctionsInDependencies();
    [CompilerGeneratedAttribute]
public void set_FunctionsInDependencies(bool value);
    public virtual bool Execute();
    private ProcessStartInfo GetProcessStartInfo(string baseLocation);
}
public class Microsoft.NET.Sdk.Functions.Tasks.ZipDeployTask : Task {
    private static string UserAgentName;
    [CompilerGeneratedAttribute]
private string <ZipToPublishPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentUsername>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgentVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublishUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteName>k__BackingField;
    [RequiredAttribute]
public string ZipToPublishPath { get; public set; }
    [RequiredAttribute]
public string DeploymentUsername { get; public set; }
    [RequiredAttribute]
public string DeploymentPassword { get; public set; }
    [RequiredAttribute]
public string UserAgentVersion { get; public set; }
    public string PublishUrl { get; public set; }
    public string SiteName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ZipToPublishPath();
    [CompilerGeneratedAttribute]
public void set_ZipToPublishPath(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentUsername();
    [CompilerGeneratedAttribute]
public void set_DeploymentUsername(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentPassword();
    [CompilerGeneratedAttribute]
public void set_DeploymentPassword(string value);
    [CompilerGeneratedAttribute]
public string get_UserAgentVersion();
    [CompilerGeneratedAttribute]
public void set_UserAgentVersion(string value);
    [CompilerGeneratedAttribute]
public string get_PublishUrl();
    [CompilerGeneratedAttribute]
public void set_PublishUrl(string value);
    [CompilerGeneratedAttribute]
public string get_SiteName();
    [CompilerGeneratedAttribute]
public void set_SiteName(string value);
    public virtual bool Execute();
    [AsyncStateMachineAttribute("Microsoft.NET.Sdk.Functions.Tasks.ZipDeployTask/<ZipDeployAsync>d__26")]
internal Task`1<bool> ZipDeployAsync(string zipToPublishPath, string userName, string password, string publishUrl, string siteName, string userAgentVersion, IHttpClient client, bool logMessages);
}
