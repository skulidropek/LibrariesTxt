[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class System.IO.Compression.ZipFile : object {
    public static void CreateFromDirectory(string sourceDirectoryName, Stream destination);
    public static void CreateFromDirectory(string sourceDirectoryName, Stream destination, CompressionLevel compressionLevel, bool includeBaseDirectory);
    public static void CreateFromDirectory(string sourceDirectoryName, Stream destination, CompressionLevel compressionLevel, bool includeBaseDirectory, Encoding entryNameEncoding);
    public static void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName);
    public static void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, CompressionLevel compressionLevel, bool includeBaseDirectory);
    public static void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, CompressionLevel compressionLevel, bool includeBaseDirectory, Encoding entryNameEncoding);
    public static void ExtractToDirectory(Stream source, string destinationDirectoryName);
    public static void ExtractToDirectory(Stream source, string destinationDirectoryName, bool overwriteFiles);
    public static void ExtractToDirectory(Stream source, string destinationDirectoryName, Encoding entryNameEncoding);
    public static void ExtractToDirectory(Stream source, string destinationDirectoryName, Encoding entryNameEncoding, bool overwriteFiles);
    public static void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName);
    public static void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, bool overwriteFiles);
    public static void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, Encoding entryNameEncoding);
    public static void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, Encoding entryNameEncoding, bool overwriteFiles);
    public static ZipArchive Open(string archiveFileName, ZipArchiveMode mode);
    public static ZipArchive Open(string archiveFileName, ZipArchiveMode mode, Encoding entryNameEncoding);
    public static ZipArchive OpenRead(string archiveFileName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static class System.IO.Compression.ZipFileExtensions : object {
    [ExtensionAttribute]
public static ZipArchiveEntry CreateEntryFromFile(ZipArchive destination, string sourceFileName, string entryName);
    [ExtensionAttribute]
public static ZipArchiveEntry CreateEntryFromFile(ZipArchive destination, string sourceFileName, string entryName, CompressionLevel compressionLevel);
    [ExtensionAttribute]
public static void ExtractToDirectory(ZipArchive source, string destinationDirectoryName);
    [ExtensionAttribute]
public static void ExtractToDirectory(ZipArchive source, string destinationDirectoryName, bool overwriteFiles);
    [ExtensionAttribute]
public static void ExtractToFile(ZipArchiveEntry source, string destinationFileName);
    [ExtensionAttribute]
public static void ExtractToFile(ZipArchiveEntry source, string destinationFileName, bool overwrite);
}
