internal static class FxResources.System.Reflection.DispatchProxy.SR : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class System.Reflection.DispatchProxy : object {
    [NullableContextAttribute("2")]
protected abstract virtual object Invoke(MethodInfo targetMethod, Object[] args);
    [RequiresDynamicCodeAttribute("Creating a proxy instance requires generating code at runtime")]
public static T Create();
    [RequiresDynamicCodeAttribute("Creating a proxy instance requires generating code at runtime")]
public static object Create(Type interfaceType, Type proxyType);
}
internal static class System.Reflection.DispatchProxyGenerator : object {
    private static ConditionalWeakTable`2<AssemblyLoadContext, ProxyAssembly> s_alcProxyAssemblyMap;
    private static MethodInfo s_dispatchProxyInvokeMethod;
    private static MethodInfo s_getTypeFromHandleMethod;
    private static MethodInfo s_makeGenericMethodMethod;
    private static DispatchProxyGenerator();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
private static MethodInfo GetGenericMethodMethodInfo();
    [RequiresDynamicCodeAttribute("Defining a dynamic assembly requires generating code at runtime")]
internal static object CreateProxyInstance(Type baseType, Type interfaceType, string interfaceParameter, string proxyParameter);
}
internal static class System.Reflection.Emit.IgnoreAccessChecksToAttributeBuilder : object {
    public static ConstructorInfo AddToModule(ModuleBuilder mb);
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string BaseType_Cannot_Be_Sealed { get; }
    internal static string BaseType_Must_Have_Default_Ctor { get; }
    internal static string InterfaceType_Must_Be_Interface { get; }
    internal static string BaseType_Cannot_Be_Abstract { get; }
    internal static string ProxyType_Must_Be_Derived_From_DispatchProxy { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    internal static string Format(string resourceFormat, object p1);
    internal static ResourceManager get_ResourceManager();
    internal static string get_BaseType_Cannot_Be_Sealed();
    internal static string get_BaseType_Must_Have_Default_Ctor();
    internal static string get_InterfaceType_Must_Be_Interface();
    internal static string get_BaseType_Cannot_Be_Abstract();
    internal static string get_ProxyType_Must_Be_Derived_From_DispatchProxy();
}
