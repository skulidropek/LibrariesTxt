internal static class FxResources.System.Runtime.InteropServices.JavaScript.SR : object {
}
internal static class Interop : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute]
public class System.Runtime.InteropServices.JavaScript.Array : JSObject {
    public object Item { get; public set; }
    public int Length { get; public set; }
    public Array(Object[] _params);
    internal Array(IntPtr jsHandle);
    public int Push(Object[] elements);
    public object Pop();
    public object Shift();
    public int UnShift(Object[] elements);
    public int IndexOf(object searchElement, int fromIndex);
    public int LastIndexOf(object searchElement);
    public int LastIndexOf(object searchElement, int endIndex);
    public object get_Item(int i);
    public void set_Item(int i, object value);
    public int get_Length();
    public void set_Length(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute]
public class System.Runtime.InteropServices.JavaScript.ArrayBuffer : JSObject {
    public int ByteLength { get; }
    public bool IsView { get; }
    public ArrayBuffer(int length);
    internal ArrayBuffer(IntPtr jsHandle);
    public int get_ByteLength();
    public bool get_IsView();
    public ArrayBuffer Slice(int begin);
    public ArrayBuffer Slice(int begin, int end);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class System.Runtime.InteropServices.JavaScript.CancelablePromise : object {
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature__CancelPromise_2096228313;
    [JSImportAttribute("INTERNAL.mono_wasm_cancel_promise")]
[DebuggerNonUserCodeAttribute]
private static void _CancelPromise(IntPtr promiseGCHandle);
    public static void CancelPromise(Task promise);
    public static void CancelPromise(Task promise, Action`2<T1, T2> callback, T1 state1, T2 state2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute]
public class System.Runtime.InteropServices.JavaScript.DataView : JSObject {
    public int ByteLength { get; }
    public int ByteOffset { get; }
    public ArrayBuffer Buffer { get; }
    public DataView(ArrayBuffer buffer);
    public DataView(ArrayBuffer buffer, int byteOffset);
    public DataView(ArrayBuffer buffer, int byteOffset, int byteLength);
    internal DataView(IntPtr jsHandle);
    public int get_ByteLength();
    public int get_ByteOffset();
    public ArrayBuffer get_Buffer();
    public float GetFloat32(int byteOffset, bool littleEndian);
    public double GetFloat64(int byteOffset, bool littleEndian);
    public short GetInt16(int byteOffset, bool littleEndian);
    public int GetInt32(int byteOffset, bool littleEndian);
    [CLSCompliantAttribute("False")]
public sbyte GetInt8(int byteOffset, bool littleEndian);
    [CLSCompliantAttribute("False")]
public ushort GetUint16(int byteOffset, bool littleEndian);
    [CLSCompliantAttribute("False")]
public UInt32 GetUint32(int byteOffset, bool littleEndian);
    public byte GetUint8(int byteOffset, bool littleEndian);
    public void SetFloat32(int byteOffset, float value, bool littleEndian);
    public void SetFloat64(int byteOffset, double value, bool littleEndian);
    public void SetInt16(int byteOffset, short value, bool littleEndian);
    public void SetInt32(int byteOffset, int value, bool littleEndian);
    [CLSCompliantAttribute("False")]
public void SetInt8(int byteOffset, sbyte value, bool littleEndian);
    [CLSCompliantAttribute("False")]
public void SetUint16(int byteOffset, ushort value, bool littleEndian);
    [CLSCompliantAttribute("False")]
public void SetUint32(int byteOffset, UInt32 value, bool littleEndian);
    public void SetUint8(int byteOffset, byte value, bool littleEndian);
    private static U UnBoxValue(object jsValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute]
public class System.Runtime.InteropServices.JavaScript.Function : JSObject {
    public Function(Object[] args);
    internal Function(IntPtr jsHandle);
    public object Apply(object thisArg, Object[] argsArray);
    public Function Bind(object thisArg, Object[] argsArray);
    public object Call(object thisArg, Object[] argsArray);
    public object Call();
}
internal static class System.Runtime.InteropServices.JavaScript.JavaScriptExports : object {
    public static void CallEntrypoint(JSMarshalerArgument* arguments_buffer);
    public static void LoadLazyAssembly(JSMarshalerArgument* arguments_buffer);
    public static void LoadSatelliteAssembly(JSMarshalerArgument* arguments_buffer);
    public static void ReleaseJSOwnedObjectByGCHandle(JSMarshalerArgument* arguments_buffer);
    public static void CreateTaskCallback(JSMarshalerArgument* arguments_buffer);
    public static void CallDelegate(JSMarshalerArgument* arguments_buffer);
    public static void CompleteTask(JSMarshalerArgument* arguments_buffer);
    public static void GetManagedStackTrace(JSMarshalerArgument* arguments_buffer);
    public static void StopProfile();
    public static void DumpAotProfileData(Byte& buf, int len, string extraArg);
}
internal static class System.Runtime.InteropServices.JavaScript.JavaScriptImports : object {
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_HasProperty_2118786623;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_GetTypeOfProperty_630743888;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_GetPropertyAsBoolean_2118786623;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_GetPropertyAsInt32_1308106409;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_GetPropertyAsDouble_1751274805;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_GetPropertyAsString_630743888;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_GetPropertyAsJSObject_1982786028;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_GetPropertyAsByteArray_1367162212;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_SetPropertyBool_873088387;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_SetPropertyInt_1511805529;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_SetPropertyDouble_1160268407;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_SetPropertyString_1536988466;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_SetPropertyJSObject_952037238;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_SetPropertyBytes_182856902;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_GetGlobalThis_390679632;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_GetDotnetInstance_390679632;
    [ThreadStaticAttribute]
private static JSFunctionBinding __signature_DynamicImport_481953276;
    [JSImportAttribute("INTERNAL.has_property")]
[DebuggerNonUserCodeAttribute]
public static bool HasProperty(JSObject self, string propertyName);
    [JSImportAttribute("INTERNAL.get_typeof_property")]
[DebuggerNonUserCodeAttribute]
public static string GetTypeOfProperty(JSObject self, string propertyName);
    [JSImportAttribute("INTERNAL.get_property")]
[DebuggerNonUserCodeAttribute]
public static bool GetPropertyAsBoolean(JSObject self, string propertyName);
    [JSImportAttribute("INTERNAL.get_property")]
[DebuggerNonUserCodeAttribute]
public static int GetPropertyAsInt32(JSObject self, string propertyName);
    [JSImportAttribute("INTERNAL.get_property")]
[DebuggerNonUserCodeAttribute]
public static double GetPropertyAsDouble(JSObject self, string propertyName);
    [JSImportAttribute("INTERNAL.get_property")]
[DebuggerNonUserCodeAttribute]
public static string GetPropertyAsString(JSObject self, string propertyName);
    [JSImportAttribute("INTERNAL.get_property")]
[DebuggerNonUserCodeAttribute]
public static JSObject GetPropertyAsJSObject(JSObject self, string propertyName);
    [JSImportAttribute("INTERNAL.get_property")]
[DebuggerNonUserCodeAttribute]
public static Byte[] GetPropertyAsByteArray(JSObject self, string propertyName);
    [JSImportAttribute("INTERNAL.set_property")]
[DebuggerNonUserCodeAttribute]
public static void SetPropertyBool(JSObject self, string propertyName, bool value);
    [JSImportAttribute("INTERNAL.set_property")]
[DebuggerNonUserCodeAttribute]
public static void SetPropertyInt(JSObject self, string propertyName, int value);
    [JSImportAttribute("INTERNAL.set_property")]
[DebuggerNonUserCodeAttribute]
public static void SetPropertyDouble(JSObject self, string propertyName, double value);
    [JSImportAttribute("INTERNAL.set_property")]
[DebuggerNonUserCodeAttribute]
public static void SetPropertyString(JSObject self, string propertyName, string value);
    [JSImportAttribute("INTERNAL.set_property")]
[DebuggerNonUserCodeAttribute]
public static void SetPropertyJSObject(JSObject self, string propertyName, JSObject value);
    [JSImportAttribute("INTERNAL.set_property")]
[DebuggerNonUserCodeAttribute]
public static void SetPropertyBytes(JSObject self, string propertyName, Byte[] value);
    [JSImportAttribute("INTERNAL.get_global_this")]
[DebuggerNonUserCodeAttribute]
public static JSObject GetGlobalThis();
    [JSImportAttribute("INTERNAL.get_dotnet_instance")]
[DebuggerNonUserCodeAttribute]
public static JSObject GetDotnetInstance();
    [JSImportAttribute("INTERNAL.dynamic_import")]
[DebuggerNonUserCodeAttribute]
public static Task`1<JSObject> DynamicImport(string moduleName, string moduleUrl);
    public static void MarshalPromise(Span`1<JSMarshalerArgument> arguments);
    public static object GetGlobalObject(string str);
    public static IntPtr CreateCSOwnedObject(string typeName, Object[] parms);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[SupportedOSPlatformAttribute("browser")]
public class System.Runtime.InteropServices.JavaScript.JSException : Exception {
    internal JSObject jsException;
    internal string combinedStackTrace;
    public string StackTrace { get; }
    [NullableContextAttribute("1")]
public JSException(string msg);
    internal JSException(string msg, JSObject jsException);
    public virtual string get_StackTrace();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[AttributeUsageAttribute("64")]
[SupportedOSPlatformAttribute("browser")]
public class System.Runtime.InteropServices.JavaScript.JSExportAttribute : Attribute {
}
[DefaultMemberAttribute("Item")]
[CLSCompliantAttribute("False")]
[SupportedOSPlatformAttribute("browser")]
[EditorBrowsableAttribute("1")]
public class System.Runtime.InteropServices.JavaScript.JSFunctionBinding : object {
    internal JSBindingHeader* Header;
    internal JSBindingType* Sigs;
    internal IntPtr FnHandle;
    unknown int ArgumentCount {internal set; }
    unknown int Version {internal set; }
    unknown JSBindingType Result {internal set; }
    unknown JSBindingType Exception {internal set; }
    internal void set_ArgumentCount(int value);
    internal void set_Version(int value);
    internal void set_Result(JSBindingType value);
    internal void set_Exception(JSBindingType value);
    public static void InvokeJS(JSFunctionBinding signature, Span`1<JSMarshalerArgument> arguments);
    [NullableContextAttribute("1")]
[DynamicDependencyAttribute("8", "System.Runtime.InteropServices.JavaScript.JavaScriptExports", "System.Runtime.InteropServices.JavaScript")]
[DynamicDependencyAttribute("8", "System.Runtime.InteropServices.JavaScript.LegacyExportsTrimmingRoot", "System.Runtime.InteropServices.JavaScript")]
public static JSFunctionBinding BindJSFunction(string functionName, string moduleName, ReadOnlySpan`1<JSMarshalerType> signatures);
    [NullableContextAttribute("1")]
public static JSFunctionBinding BindManagedFunction(string fullyQualifiedName, int signatureHash, ReadOnlySpan`1<JSMarshalerType> signatures);
    internal static void InvokeJSImpl(JSObject jsFunction, Span`1<JSMarshalerArgument> arguments);
    internal static void InvokeImportImpl(IntPtr fnHandle, Span`1<JSMarshalerArgument> arguments);
    internal static JSFunctionBinding BindJSFunctionImpl(string functionName, string moduleName, ReadOnlySpan`1<JSMarshalerType> signatures);
    internal static JSFunctionBinding BindManagedFunctionImpl(string fullyQualifiedName, int signatureHash, ReadOnlySpan`1<JSMarshalerType> signatures);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SupportedOSPlatformAttribute("browser")]
public static class System.Runtime.InteropServices.JavaScript.JSHost : object {
    public static JSObject GlobalThis { get; }
    public static JSObject DotnetInstance { get; }
    [NullableAttribute("2")]
public static SynchronizationContext CurrentOrMainJSSynchronizationContext { get; }
    public static JSObject get_GlobalThis();
    public static JSObject get_DotnetInstance();
    public static Task`1<JSObject> ImportAsync(string moduleName, string moduleUrl, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public static SynchronizationContext get_CurrentOrMainJSSynchronizationContext();
}
internal static class System.Runtime.InteropServices.JavaScript.JSHostImplementation : object {
    private static MethodInfo s_taskGetResultMethodInfo;
    private static Dictionary`2<int, WeakReference`1<JSObject>> s_csOwnedObjects;
    private static Dictionary`2<object, IntPtr> s_jsOwnedObjects;
    public static Dictionary`2<int, WeakReference`1<JSObject>> ThreadCsOwnedObjects { get; }
    public static Dictionary`2<object, IntPtr> ThreadJsOwnedObjects { get; }
    public static Dictionary`2<int, WeakReference`1<JSObject>> get_ThreadCsOwnedObjects();
    public static Dictionary`2<object, IntPtr> get_ThreadJsOwnedObjects();
    public static void ReleaseCSOwnedObject(IntPtr jsHandle);
    public static object GetTaskResultDynamic(Task task);
    public static IntPtr GetJSOwnedObjectGCHandle(object obj, GCHandleType handleType);
    public static RuntimeMethodHandle GetMethodHandleFromIntPtr(IntPtr ptr);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2070:UnrecognizedReflectionPattern")]
public static MethodInfo GetTaskResultMethodInfo(Type taskType);
    public static void ThrowException(JSMarshalerArgument& arg);
    [AsyncStateMachineAttribute("System.Runtime.InteropServices.JavaScript.JSHostImplementation/<ImportAsync>d__14")]
public static Task`1<JSObject> ImportAsync(string moduleName, string moduleUrl, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Runtime.InteropServices.JavaScript.JSHostImplementation/<CancelationHelper>d__15")]
public static Task`1<JSObject> CancelationHelper(Task`1<JSObject> jsTask, CancellationToken cancellationToken);
    public static JSFunctionBinding GetMethodSignature(ReadOnlySpan`1<JSMarshalerType> types);
    public static void FreeMethodSignatureBuffer(JSFunctionBinding signature);
    public static JSObject CreateCSOwnedProxy(IntPtr jsHandle);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026")]
public static void LoadLazyAssembly(Byte[] dllBytes, Byte[] pdbBytes);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026")]
public static void LoadSatelliteAssembly(Byte[] dllBytes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
[SupportedOSPlatformAttribute("browser")]
public class System.Runtime.InteropServices.JavaScript.JSImportAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FunctionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModuleName>k__BackingField;
    public string FunctionName { get; }
    [NullableAttribute("2")]
public string ModuleName { get; }
    public JSImportAttribute(string functionName);
    public JSImportAttribute(string functionName, string moduleName);
    [CompilerGeneratedAttribute]
public string get_FunctionName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ModuleName();
}
[AttributeUsageAttribute("10240")]
[SupportedOSPlatformAttribute("browser")]
public class System.Runtime.InteropServices.JavaScript.JSMarshalAsAttribute`1 : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[SupportedOSPlatformAttribute("browser")]
[CLSCompliantAttribute("False")]
[EditorBrowsableAttribute("1")]
public class System.Runtime.InteropServices.JavaScript.JSMarshalerArgument : ValueType {
    internal JSMarshalerArgumentImpl slot;
    public void Initialize();
    public void ToManagedBig(Int64& value);
    public void ToJSBig(long value);
    public void ToManagedBig(Nullable`1& value);
    public void ToJSBig(Nullable`1<long> value);
    public void ToManaged(Char& value);
    public void ToJS(char value);
    public void ToManaged(Nullable`1& value);
    public void ToJS(Nullable`1<char> value);
    public void ToManaged(Double& value);
    public void ToJS(double value);
    public void ToManaged(Nullable`1& value);
    public void ToJS(Nullable`1<double> value);
    public void ToManaged(Double[]& value);
    [NullableContextAttribute("1")]
public void ToJS(Double[] value);
    [NullableContextAttribute("0")]
public void ToManaged(ArraySegment`1& value);
    [NullableContextAttribute("0")]
public void ToJS(ArraySegment`1<double> value);
    [NullableContextAttribute("0")]
public void ToManaged(Span`1& value);
    [NullableContextAttribute("0")]
public void ToJS(Span`1<double> value);
    public void ToManaged(Action& value);
    [NullableContextAttribute("1")]
public void ToManaged(Action`1& value, ArgumentToJSCallback`1<T> arg1Marshaler);
    [NullableContextAttribute("1")]
public void ToManaged(Action`2& value, ArgumentToJSCallback`1<T1> arg1Marshaler, ArgumentToJSCallback`1<T2> arg2Marshaler);
    [NullableContextAttribute("1")]
public void ToManaged(Action`3& value, ArgumentToJSCallback`1<T1> arg1Marshaler, ArgumentToJSCallback`1<T2> arg2Marshaler, ArgumentToJSCallback`1<T3> arg3Marshaler);
    [NullableContextAttribute("1")]
public void ToManaged(Func`1& value, ArgumentToManagedCallback`1<TResult> resMarshaler);
    [NullableContextAttribute("1")]
public void ToManaged(Func`2& value, ArgumentToJSCallback`1<T> arg1Marshaler, ArgumentToManagedCallback`1<TResult> resMarshaler);
    [NullableContextAttribute("1")]
public void ToManaged(Func`3& value, ArgumentToJSCallback`1<T1> arg1Marshaler, ArgumentToJSCallback`1<T2> arg2Marshaler, ArgumentToManagedCallback`1<TResult> resMarshaler);
    [NullableContextAttribute("1")]
public void ToManaged(Func`4& value, ArgumentToJSCallback`1<T1> arg1Marshaler, ArgumentToJSCallback`1<T2> arg2Marshaler, ArgumentToJSCallback`1<T3> arg3Marshaler, ArgumentToManagedCallback`1<TResult> resMarshaler);
    [NullableContextAttribute("1")]
public void ToJS(Action value);
    [NullableContextAttribute("1")]
public void ToJS(Action`1<T> value, ArgumentToManagedCallback`1<T> arg1Marshaler);
    [NullableContextAttribute("1")]
public void ToJS(Action`2<T1, T2> value, ArgumentToManagedCallback`1<T1> arg1Marshaler, ArgumentToManagedCallback`1<T2> arg2Marshaler);
    [NullableContextAttribute("1")]
public void ToJS(Action`3<T1, T2, T3> value, ArgumentToManagedCallback`1<T1> arg1Marshaler, ArgumentToManagedCallback`1<T2> arg2Marshaler, ArgumentToManagedCallback`1<T3> arg3Marshaler);
    [NullableContextAttribute("1")]
public void ToJS(Func`1<TResult> value, ArgumentToJSCallback`1<TResult> resMarshaler);
    [NullableContextAttribute("1")]
public void ToJS(Func`2<T, TResult> value, ArgumentToManagedCallback`1<T> arg1Marshaler, ArgumentToJSCallback`1<TResult> resMarshaler);
    [NullableContextAttribute("1")]
public void ToJS(Func`3<T1, T2, TResult> value, ArgumentToManagedCallback`1<T1> arg1Marshaler, ArgumentToManagedCallback`1<T2> arg2Marshaler, ArgumentToJSCallback`1<TResult> resMarshaler);
    [NullableContextAttribute("1")]
public void ToJS(Func`4<T1, T2, T3, TResult> value, ArgumentToManagedCallback`1<T1> arg1Marshaler, ArgumentToManagedCallback`1<T2> arg2Marshaler, ArgumentToManagedCallback`1<T3> arg3Marshaler, ArgumentToJSCallback`1<TResult> resMarshaler);
    public void ToManaged(Single& value);
    public void ToJS(float value);
    public void ToManaged(Nullable`1& value);
    public void ToJS(Nullable`1<float> value);
    public void ToManaged(Int64& value);
    public void ToJS(long value);
    public void ToManaged(Nullable`1& value);
    public void ToJS(Nullable`1<long> value);
    public void ToManaged(Int16& value);
    public void ToJS(short value);
    public void ToManaged(Nullable`1& value);
    public void ToJS(Nullable`1<short> value);
    public void ToManaged(Byte& value);
    public void ToJS(byte value);
    public void ToManaged(Nullable`1& value);
    public void ToJS(Nullable`1<byte> value);
    public void ToManaged(Byte[]& value);
    public void ToJS(Byte[] value);
    [NullableContextAttribute("0")]
public void ToManaged(ArraySegment`1& value);
    [NullableContextAttribute("0")]
public void ToJS(ArraySegment`1<byte> value);
    [NullableContextAttribute("0")]
public void ToManaged(Span`1& value);
    [NullableContextAttribute("0")]
public void ToJS(Span`1<byte> value);
    public void ToManaged(Boolean& value);
    public void ToJS(bool value);
    public void ToManaged(Nullable`1& value);
    public void ToJS(Nullable`1<bool> value);
    public void ToManaged(Task& value);
    [NullableContextAttribute("1")]
public void ToManaged(Task`1& value, ArgumentToManagedCallback`1<T> marshaler);
    internal void ToJSDynamic(Task value);
    public void ToJS(Task value);
    [NullableContextAttribute("1")]
public void ToJS(Task`1<T> value, ArgumentToJSCallback`1<T> marshaler);
    private static IntPtr CreatePendingPromise();
    private static IntPtr CreateFailedPromise(Exception ex);
    private static void FailPromise(JSObject promise, Exception ex);
    private static IntPtr CreateResolvedPromise(T value, ArgumentToJSCallback`1<T> marshaler);
    private static void ResolveVoidPromise(JSObject promise);
    private static void ResolvePromise(JSObject promise, T value, ArgumentToJSCallback`1<T> marshaler);
    public void ToManaged(DateTimeOffset& value);
    public void ToJS(DateTimeOffset value);
    public void ToManaged(Nullable`1& value);
    public void ToJS(Nullable`1<DateTimeOffset> value);
    public void ToManaged(DateTime& value);
    public void ToJS(DateTime value);
    public void ToManaged(Nullable`1& value);
    public void ToJS(Nullable`1<DateTime> value);
    public void ToManaged(IntPtr& value);
    public void ToJS(IntPtr value);
    public void ToManaged(Nullable`1& value);
    public void ToJS(Nullable`1<IntPtr> value);
    [NullableContextAttribute("0")]
public void ToManaged(Void*& value);
    [NullableContextAttribute("0")]
public void ToJS(Void* value);
    public void ToManaged(Object& value);
    public void ToJS(object value);
    public void ToManaged(Object[]& value);
    public void ToJS(Object[] value);
    public void ToManaged(Int32& value);
    public void ToJS(int value);
    public void ToManaged(Nullable`1& value);
    public void ToJS(Nullable`1<int> value);
    public void ToManaged(Int32[]& value);
    public void ToJS(Int32[] value);
    [NullableContextAttribute("0")]
public void ToManaged(ArraySegment`1& value);
    [NullableContextAttribute("0")]
public void ToJS(ArraySegment`1<int> value);
    [NullableContextAttribute("0")]
public void ToManaged(Span`1& value);
    [NullableContextAttribute("0")]
public void ToJS(Span`1<int> value);
    public void ToManaged(JSObject& value);
    public void ToJS(JSObject value);
    public void ToManaged(JSObject[]& value);
    public void ToJS(JSObject[] value);
    public void ToManaged(String& value);
    public void ToJS(string value);
    public void ToManaged(String[]& value);
    public void ToJS(String[] value);
    public void ToManaged(Exception& value);
    public void ToJS(Exception value);
    [CompilerGeneratedAttribute]
internal static void <ToJSDynamic>g__MarshalResult|77_1(JSMarshalerArgument& arg, object taskResult);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SupportedOSPlatformAttribute("browser")]
[EditorBrowsableAttribute("1")]
public class System.Runtime.InteropServices.JavaScript.JSMarshalerType : object {
    internal JSBindingType _signatureType;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <Void>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <Discard>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <Boolean>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <Byte>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <Char>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <Int16>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <Int32>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <Int52>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <BigInt64>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <Double>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <Single>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <IntPtr>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <JSObject>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <Object>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <String>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <DateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <DateTimeOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <_task>k__BackingField;
    [CompilerGeneratedAttribute]
private static JSMarshalerType <_action>k__BackingField;
    public static JSMarshalerType Void { get; }
    public static JSMarshalerType Discard { get; }
    public static JSMarshalerType Boolean { get; }
    public static JSMarshalerType Byte { get; }
    public static JSMarshalerType Char { get; }
    public static JSMarshalerType Int16 { get; }
    public static JSMarshalerType Int32 { get; }
    public static JSMarshalerType Int52 { get; }
    public static JSMarshalerType BigInt64 { get; }
    public static JSMarshalerType Double { get; }
    public static JSMarshalerType Single { get; }
    public static JSMarshalerType IntPtr { get; }
    public static JSMarshalerType JSObject { get; }
    public static JSMarshalerType Object { get; }
    public static JSMarshalerType String { get; }
    public static JSMarshalerType Exception { get; }
    public static JSMarshalerType DateTime { get; }
    public static JSMarshalerType DateTimeOffset { get; }
    private static JSMarshalerType _task { get; }
    private static JSMarshalerType _action { get; }
    private JSMarshalerType(JSBindingType signatureType);
    private static JSMarshalerType();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_Void();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_Discard();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_Boolean();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_Byte();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_Char();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_Int16();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_Int32();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_Int52();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_BigInt64();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_Double();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_Single();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_IntPtr();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_JSObject();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_Object();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_String();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_Exception();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_DateTime();
    [CompilerGeneratedAttribute]
public static JSMarshalerType get_DateTimeOffset();
    public static JSMarshalerType Nullable(JSMarshalerType primitive);
    [CompilerGeneratedAttribute]
private static JSMarshalerType get__task();
    public static JSMarshalerType Task();
    public static JSMarshalerType Task(JSMarshalerType result);
    public static JSMarshalerType Array(JSMarshalerType element);
    public static JSMarshalerType ArraySegment(JSMarshalerType element);
    public static JSMarshalerType Span(JSMarshalerType element);
    [CompilerGeneratedAttribute]
private static JSMarshalerType get__action();
    public static JSMarshalerType Action();
    public static JSMarshalerType Action(JSMarshalerType arg1);
    public static JSMarshalerType Action(JSMarshalerType arg1, JSMarshalerType arg2);
    public static JSMarshalerType Action(JSMarshalerType arg1, JSMarshalerType arg2, JSMarshalerType arg3);
    public static JSMarshalerType Function(JSMarshalerType result);
    public static JSMarshalerType Function(JSMarshalerType arg1, JSMarshalerType result);
    public static JSMarshalerType Function(JSMarshalerType arg1, JSMarshalerType arg2, JSMarshalerType result);
    public static JSMarshalerType Function(JSMarshalerType arg1, JSMarshalerType arg2, JSMarshalerType arg3, JSMarshalerType result);
    internal static void CheckNullable(JSMarshalerType underlyingType);
    internal static void CheckArray(JSMarshalerType underlyingType);
    internal static void CheckArraySegment(JSMarshalerType underlyingType);
    internal static void CheckTask(JSMarshalerType underlyingType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SupportedOSPlatformAttribute("browser")]
public class System.Runtime.InteropServices.JavaScript.JSObject : object {
    internal IntPtr JSHandle;
    internal Nullable`1<GCHandle> InFlight;
    internal int InFlightCounter;
    private bool _isDisposed;
    public bool IsDisposed { get; }
    public SynchronizationContext SynchronizationContext { get; }
    internal JSObject(IntPtr jsHandle);
    public bool get_IsDisposed();
    public bool HasProperty(string propertyName);
    public string GetTypeOfProperty(string propertyName);
    public bool GetPropertyAsBoolean(string propertyName);
    public int GetPropertyAsInt32(string propertyName);
    public double GetPropertyAsDouble(string propertyName);
    public string GetPropertyAsString(string propertyName);
    public JSObject GetPropertyAsJSObject(string propertyName);
    public Byte[] GetPropertyAsByteArray(string propertyName);
    public void SetProperty(string propertyName, bool value);
    public void SetProperty(string propertyName, int value);
    public void SetProperty(string propertyName, double value);
    public void SetProperty(string propertyName, string value);
    public void SetProperty(string propertyName, JSObject value);
    public void SetProperty(string propertyName, Byte[] value);
    public SynchronizationContext get_SynchronizationContext();
    internal void AddInFlight();
    internal void ReleaseInFlight();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    private void DisposeThis();
    protected virtual override void Finalize();
    public sealed virtual void Dispose();
}
[SupportedOSPlatformAttribute("browser")]
public abstract class System.Runtime.InteropServices.JavaScript.JSType : object {
}
internal static class System.Runtime.InteropServices.JavaScript.LegacyExports : object {
    private static Type uriType;
    [DynamicDependencyAttribute("-1", "System.Runtime.InteropServices.JavaScript.LegacyExports")]
internal static void PreventTrimming();
    public static void GetCSOwnedObjectByJSHandleRef(IntPtr jsHandle, int shouldAddInflight, JSObject& result);
    public static IntPtr GetCSOwnedObjectJSHandleRef(JSObject& jsObject, int shouldAddInflight);
    public static IntPtr TryGetCSOwnedObjectJSHandleRef(Object& rawObj, int shouldAddInflight);
    public static void CreateCSOwnedProxyRef(IntPtr jsHandle, MappedType mappedType, int shouldAddInflight, JSObject& jsObject);
    public static void GetJSOwnedObjectByGCHandleRef(int gcHandle, Object& result);
    public static IntPtr GetJSOwnedObjectGCHandleRef(Object& obj);
    public static IntPtr CreateTaskSource();
    public static void SetTaskSourceResultRef(int tcsGCHandle, Object& result);
    public static void SetTaskSourceFailure(int tcsGCHandle, string reason);
    public static void GetTaskSourceTaskRef(int tcsGCHandle, Object& result);
    public static void SetupJSContinuationRef(Task& _task, JSObject continuationObj);
    public static string ObjectToStringRef(Object& o);
    public static double GetDateValueRef(Object& dtv);
    public static void CreateDateTimeRef(double ticks, Object& result);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2077")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
public static void CreateUriRef(string uri, Object& result);
    public static bool IsSimpleArrayRef(Object& a);
    public static string GetCallSignatureRef(IntPtr _methodHandle, Object& objForRuntimeType);
}
internal static class System.Runtime.InteropServices.JavaScript.LegacyExportsTrimmingRoot : object {
    public static void TrimWhenNotWasmEnableLegacyJsInterop();
}
[SupportedOSPlatformAttribute("browser")]
internal static class System.Runtime.InteropServices.JavaScript.LegacyHostImplementation : object {
    public static void ReleaseInFlight(object obj);
    public static void RegisterCSOwnedObject(JSObject proxy);
    public static MarshalType GetMarshalTypeFromType(Type type);
    public static char GetCallSignatureCharacterForMarshalType(MarshalType type, Nullable`1<char> defaultValue);
}
internal enum System.Runtime.InteropServices.JavaScript.MarshalerType : Enum {
    public int value__;
    public static MarshalerType None;
    public static MarshalerType Void;
    public static MarshalerType Discard;
    public static MarshalerType Boolean;
    public static MarshalerType Byte;
    public static MarshalerType Char;
    public static MarshalerType Int16;
    public static MarshalerType Int32;
    public static MarshalerType Int52;
    public static MarshalerType BigInt64;
    public static MarshalerType Double;
    public static MarshalerType Single;
    public static MarshalerType IntPtr;
    public static MarshalerType JSObject;
    public static MarshalerType Object;
    public static MarshalerType String;
    public static MarshalerType Exception;
    public static MarshalerType DateTime;
    public static MarshalerType DateTimeOffset;
    public static MarshalerType Nullable;
    public static MarshalerType Task;
    public static MarshalerType Array;
    public static MarshalerType ArraySegment;
    public static MarshalerType Span;
    public static MarshalerType Action;
    public static MarshalerType Function;
    public static MarshalerType JSException;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
[ObsoleteAttribute]
public static class System.Runtime.InteropServices.JavaScript.Runtime : object {
    public static object GetGlobalObject(string str);
    [ExtensionAttribute]
public static object Invoke(JSObject self, string method, Object[] args);
    [ExtensionAttribute]
public static object GetObjectProperty(JSObject self, string name);
    [ExtensionAttribute]
public static void SetObjectProperty(JSObject self, string name, object value, bool createIfNotExists, bool hasOwnProperty);
    [ExtensionAttribute]
public static void AssertNotDisposed(JSObject self);
    [ExtensionAttribute]
public static void AssertInFlight(JSObject self, int expectedInFlightCount);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class System.Runtime.InteropServices.JavaScript.SynchronizationContextExtension : object {
    [ExtensionAttribute]
public static void Send(SynchronizationContext self, Action`1<T> body, T value);
    [ExtensionAttribute]
public static TRes Send(SynchronizationContext self, Func`1<TRes> body);
    [ExtensionAttribute]
public static TRes Send(SynchronizationContext self, Func`2<T1, TRes> body, T1 p1);
}
[ObsoleteAttribute]
public class System.Runtime.InteropServices.JavaScript.Uint8Array : JSObject {
    public int Length { get; public set; }
    public Uint8Array(int length);
    [NullableContextAttribute("1")]
public Uint8Array(ArrayBuffer buffer);
    internal Uint8Array(IntPtr jsHandle);
    public int get_Length();
    public void set_Length(int value);
    public static Span`1<byte> op_Implicit(Uint8Array typedarray);
    public static Uint8Array op_Implicit(Span`1<byte> span);
    [NullableContextAttribute("1")]
public Byte[] ToArray();
    public static Uint8Array From(ReadOnlySpan`1<byte> span);
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string ArgumentCannotBeNull { get; }
    internal static string UnableCastNullToType { get; }
    internal static string UnableCastObjectToType { get; }
    internal static string MissingManagedEntrypointHandle { get; }
    internal static string CannotResolveManagedEntrypointHandle { get; }
    internal static string ReturnTypeNotSupportedForMain { get; }
    internal static string NullToManagedCallback { get; }
    internal static string NullTaskCallback { get; }
    internal static string EmptyProfileData { get; }
    internal static string ErrorLegacySettingProperty { get; }
    internal static string ErrorResolvingFromGlobalThis { get; }
    internal static string FailedToMarshalException { get; }
    internal static string FailedToMarshalTaskCallback { get; }
    internal static string ToJSNotImplemented { get; }
    internal static string ToManagedNotImplemented { get; }
    internal static string UnableToResolveHandleAsException { get; }
    internal static string UnsupportedArrayType { get; }
    internal static string UnsupportedElementType { get; }
    internal static string UnsupportedEnumType { get; }
    internal static string UnsupportedLegacyMarshlerType { get; }
    internal static string UnsupportedNullableType { get; }
    internal static string UnsupportedTaskResultType { get; }
    internal static string UriConstructorMissing { get; }
    internal static string UriTypeMissing { get; }
    internal static string ValueOutOf52BitRange { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static ResourceManager get_ResourceManager();
    internal static string get_ArgumentCannotBeNull();
    internal static string get_UnableCastNullToType();
    internal static string get_UnableCastObjectToType();
    internal static string get_MissingManagedEntrypointHandle();
    internal static string get_CannotResolveManagedEntrypointHandle();
    internal static string get_ReturnTypeNotSupportedForMain();
    internal static string get_NullToManagedCallback();
    internal static string get_NullTaskCallback();
    internal static string get_EmptyProfileData();
    internal static string get_ErrorLegacySettingProperty();
    internal static string get_ErrorResolvingFromGlobalThis();
    internal static string get_FailedToMarshalException();
    internal static string get_FailedToMarshalTaskCallback();
    internal static string get_ToJSNotImplemented();
    internal static string get_ToManagedNotImplemented();
    internal static string get_UnableToResolveHandleAsException();
    internal static string get_UnsupportedArrayType();
    internal static string get_UnsupportedElementType();
    internal static string get_UnsupportedEnumType();
    internal static string get_UnsupportedLegacyMarshlerType();
    internal static string get_UnsupportedNullableType();
    internal static string get_UnsupportedTaskResultType();
    internal static string get_UriConstructorMissing();
    internal static string get_UriTypeMissing();
    internal static string get_ValueOutOf52BitRange();
}
