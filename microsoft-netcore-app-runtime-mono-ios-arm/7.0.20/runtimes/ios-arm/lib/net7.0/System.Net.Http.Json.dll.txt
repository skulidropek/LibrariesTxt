internal static class FxResources.System.Net.Http.Json.SR : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class System.Net.Http.Json.HttpClientJsonExtensions : object {
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<object> DeleteFromJsonAsync(HttpClient client, string requestUri, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<object> DeleteFromJsonAsync(HttpClient client, Uri requestUri, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<TValue> DeleteFromJsonAsync(HttpClient client, string requestUri, JsonSerializerOptions options, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<TValue> DeleteFromJsonAsync(HttpClient client, Uri requestUri, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<object> DeleteFromJsonAsync(HttpClient client, string requestUri, Type type, JsonSerializerContext context, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<object> DeleteFromJsonAsync(HttpClient client, Uri requestUri, Type type, JsonSerializerContext context, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TValue> DeleteFromJsonAsync(HttpClient client, string requestUri, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TValue> DeleteFromJsonAsync(HttpClient client, Uri requestUri, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<object> DeleteFromJsonAsync(HttpClient client, string requestUri, Type type, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<object> DeleteFromJsonAsync(HttpClient client, Uri requestUri, Type type, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<TValue> DeleteFromJsonAsync(HttpClient client, string requestUri, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<TValue> DeleteFromJsonAsync(HttpClient client, Uri requestUri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpClientJsonExtensions/<DeleteFromJsonAsyncCore>d__12")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
private static Task`1<object> DeleteFromJsonAsyncCore(Task`1<HttpResponseMessage> taskResponse, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpClientJsonExtensions/<DeleteFromJsonAsyncCore>d__13`1")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
private static Task`1<T> DeleteFromJsonAsyncCore(Task`1<HttpResponseMessage> taskResponse, JsonSerializerOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpClientJsonExtensions/<DeleteFromJsonAsyncCore>d__14")]
private static Task`1<object> DeleteFromJsonAsyncCore(Task`1<HttpResponseMessage> taskResponse, Type type, JsonSerializerContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpClientJsonExtensions/<DeleteFromJsonAsyncCore>d__15`1")]
private static Task`1<T> DeleteFromJsonAsyncCore(Task`1<HttpResponseMessage> taskResponse, JsonTypeInfo`1<T> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<object> GetFromJsonAsync(HttpClient client, string requestUri, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<object> GetFromJsonAsync(HttpClient client, Uri requestUri, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<TValue> GetFromJsonAsync(HttpClient client, string requestUri, JsonSerializerOptions options, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<TValue> GetFromJsonAsync(HttpClient client, Uri requestUri, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<object> GetFromJsonAsync(HttpClient client, string requestUri, Type type, JsonSerializerContext context, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<object> GetFromJsonAsync(HttpClient client, Uri requestUri, Type type, JsonSerializerContext context, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TValue> GetFromJsonAsync(HttpClient client, string requestUri, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TValue> GetFromJsonAsync(HttpClient client, Uri requestUri, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<object> GetFromJsonAsync(HttpClient client, string requestUri, Type type, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<object> GetFromJsonAsync(HttpClient client, Uri requestUri, Type type, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<TValue> GetFromJsonAsync(HttpClient client, string requestUri, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<TValue> GetFromJsonAsync(HttpClient client, Uri requestUri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpClientJsonExtensions/<GetFromJsonAsyncCore>d__28")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
private static Task`1<object> GetFromJsonAsyncCore(Task`1<HttpResponseMessage> taskResponse, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpClientJsonExtensions/<GetFromJsonAsyncCore>d__29`1")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
private static Task`1<T> GetFromJsonAsyncCore(Task`1<HttpResponseMessage> taskResponse, JsonSerializerOptions options, CancellationToken cancellationToken);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2091:UnrecognizedReflectionPattern")]
[UnconditionalSuppressMessageAttribute("AotAnalysis", "IL3050:RequiresDynamicCode")]
private static Task`1<T> ReadFromJsonAsyncHelper(HttpContent content, JsonSerializerOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpClientJsonExtensions/<GetFromJsonAsyncCore>d__31")]
private static Task`1<object> GetFromJsonAsyncCore(Task`1<HttpResponseMessage> taskResponse, Type type, JsonSerializerContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpClientJsonExtensions/<GetFromJsonAsyncCore>d__32`1")]
private static Task`1<T> GetFromJsonAsyncCore(Task`1<HttpResponseMessage> taskResponse, JsonTypeInfo`1<T> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<HttpResponseMessage> PostAsJsonAsync(HttpClient client, string requestUri, TValue value, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<HttpResponseMessage> PostAsJsonAsync(HttpClient client, Uri requestUri, TValue value, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<HttpResponseMessage> PostAsJsonAsync(HttpClient client, string requestUri, TValue value, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<HttpResponseMessage> PostAsJsonAsync(HttpClient client, Uri requestUri, TValue value, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PostAsJsonAsync(HttpClient client, string requestUri, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PostAsJsonAsync(HttpClient client, Uri requestUri, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<HttpResponseMessage> PutAsJsonAsync(HttpClient client, string requestUri, TValue value, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<HttpResponseMessage> PutAsJsonAsync(HttpClient client, Uri requestUri, TValue value, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<HttpResponseMessage> PutAsJsonAsync(HttpClient client, string requestUri, TValue value, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<HttpResponseMessage> PutAsJsonAsync(HttpClient client, Uri requestUri, TValue value, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PutAsJsonAsync(HttpClient client, string requestUri, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PutAsJsonAsync(HttpClient client, Uri requestUri, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<HttpResponseMessage> PatchAsJsonAsync(HttpClient client, string requestUri, TValue value, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<HttpResponseMessage> PatchAsJsonAsync(HttpClient client, Uri requestUri, TValue value, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<HttpResponseMessage> PatchAsJsonAsync(HttpClient client, string requestUri, TValue value, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<HttpResponseMessage> PatchAsJsonAsync(HttpClient client, Uri requestUri, TValue value, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PatchAsJsonAsync(HttpClient client, string requestUri, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PatchAsJsonAsync(HttpClient client, Uri requestUri, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2067:UnrecognizedReflectionPattern")]
[UnconditionalSuppressMessageAttribute("AotAnalysis", "IL3050:RequiresDynamicCode")]
internal static Task`1<object> <DeleteFromJsonAsyncCore>g__ReadFromJsonAsyncHelper|12_0(HttpContent content, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2067:UnrecognizedReflectionPattern")]
[UnconditionalSuppressMessageAttribute("AotAnalysis", "IL3050:RequiresDynamicCode")]
internal static Task`1<object> <GetFromJsonAsyncCore>g__ReadFromJsonAsyncHelper|28_0(HttpContent content, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class System.Net.Http.Json.HttpContentJsonExtensions : object {
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<object> ReadFromJsonAsync(HttpContent content, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static Task`1<T> ReadFromJsonAsync(HttpContent content, JsonSerializerOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpContentJsonExtensions/<ReadFromJsonAsyncCore>d__4")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
private static Task`1<object> ReadFromJsonAsyncCore(HttpContent content, Type type, Encoding sourceEncoding, JsonSerializerOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpContentJsonExtensions/<ReadFromJsonAsyncCore>d__5`1")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
private static Task`1<T> ReadFromJsonAsyncCore(HttpContent content, Encoding sourceEncoding, JsonSerializerOptions options, CancellationToken cancellationToken);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2091:UnrecognizedReflectionPattern")]
[UnconditionalSuppressMessageAttribute("AotAnalysis", "IL3050:RequiresDynamicCode")]
private static ValueTask`1<TValue> DeserializeAsyncHelper(Stream contentStream, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<object> ReadFromJsonAsync(HttpContent content, Type type, JsonSerializerContext context, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<T> ReadFromJsonAsync(HttpContent content, JsonTypeInfo`1<T> jsonTypeInfo, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpContentJsonExtensions/<ReadFromJsonAsyncCore>d__9")]
private static Task`1<object> ReadFromJsonAsyncCore(HttpContent content, Type type, Encoding sourceEncoding, JsonSerializerContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpContentJsonExtensions/<ReadFromJsonAsyncCore>d__10`1")]
private static Task`1<T> ReadFromJsonAsyncCore(HttpContent content, Encoding sourceEncoding, JsonTypeInfo`1<T> jsonTypeInfo, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.Json.HttpContentJsonExtensions/<GetContentStream>d__11")]
private static Task`1<Stream> GetContentStream(HttpContent content, Encoding sourceEncoding, CancellationToken cancellationToken);
    private static Task`1<Stream> ReadHttpContentStreamAsync(HttpContent content, CancellationToken cancellationToken);
    private static Stream GetTranscodingStream(Stream contentStream, Encoding sourceEncoding);
    [CompilerGeneratedAttribute]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2067:UnrecognizedReflectionPattern")]
[UnconditionalSuppressMessageAttribute("AotAnalysis", "IL3050:RequiresDynamicCode")]
internal static ValueTask`1<object> <ReadFromJsonAsyncCore>g__DeserializeAsyncHelper|4_0(Stream contentStream, Type returnType, JsonSerializerOptions options, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Net.Http.Json.JsonContent : HttpContent {
    private JsonSerializerOptions _jsonSerializerOptions;
    [CompilerGeneratedAttribute]
private Type <ObjectType>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public Type ObjectType { get; }
    [NullableAttribute("2")]
public object Value { get; }
    [RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
private JsonContent(object inputValue, Type inputType, MediaTypeHeaderValue mediaType, JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public Type get_ObjectType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Value();
    [NullableContextAttribute("2")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static JsonContent Create(T inputValue, MediaTypeHeaderValue mediaType, JsonSerializerOptions options);
    [NullableContextAttribute("2")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static JsonContent Create(object inputValue, Type inputType, MediaTypeHeaderValue mediaType, JsonSerializerOptions options);
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    protected virtual bool TryComputeLength(Int64& length);
    [AsyncStateMachineAttribute("System.Net.Http.Json.JsonContent/<SerializeToStreamAsyncCore>d__12")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[UnconditionalSuppressMessageAttribute("AotAnalysis", "IL3050:RequiresDynamicCode")]
private Task SerializeToStreamAsyncCore(Stream targetStream, bool async, CancellationToken cancellationToken);
    protected virtual void SerializeToStream(Stream stream, TransportContext context, CancellationToken cancellationToken);
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[UnconditionalSuppressMessageAttribute("AotAnalysis", "IL3050:RequiresDynamicCode")]
internal static void <SerializeToStreamAsyncCore>g__SerializeSyncHelper|12_0(Stream utf8Json, object value, Type inputType, JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
[UnconditionalSuppressMessageAttribute("AotAnalysis", "IL3050:RequiresDynamicCode")]
internal static Task <SerializeToStreamAsyncCore>g__SerializeAsyncHelper|12_1(Stream utf8Json, object value, Type inputType, JsonSerializerOptions options, CancellationToken cancellationToken);
}
internal class System.Net.Http.Json.JsonContent`1 : HttpContent {
    private JsonTypeInfo`1<TValue> _typeInfo;
    private TValue _typedValue;
    public JsonContent`1(TValue inputValue, JsonTypeInfo`1<TValue> jsonTypeInfo);
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    protected virtual bool TryComputeLength(Int64& length);
    [AsyncStateMachineAttribute("System.Net.Http.Json.JsonContent`1/<SerializeToStreamAsyncCore>d__5")]
private Task SerializeToStreamAsyncCore(Stream targetStream, bool async, CancellationToken cancellationToken);
    protected virtual void SerializeToStream(Stream stream, TransportContext context, CancellationToken cancellationToken);
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context, CancellationToken cancellationToken);
}
internal static class System.Net.Http.Json.JsonHelpers : object {
    internal static JsonSerializerOptions s_defaultSerializerOptions;
    private static JsonHelpers();
    internal static MediaTypeHeaderValue GetDefaultMediaType();
    internal static Encoding GetEncoding(string charset);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string CharSetInvalid { get; }
    internal static string SerializeWrongType { get; }
    private static SR();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static ResourceManager get_ResourceManager();
    internal static string get_CharSetInvalid();
    internal static string get_SerializeWrongType();
}
