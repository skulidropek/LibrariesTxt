internal static class FxResources.System.Net.WebHeaderCollection.SR : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class System.Net.CaseInsensitiveAscii : object {
    internal static CaseInsensitiveAscii StaticInstance;
    internal static ReadOnlySpan`1<byte> AsciiToLower { get; }
    private static CaseInsensitiveAscii();
    internal static ReadOnlySpan`1<byte> get_AsciiToLower();
    public sealed virtual int GetHashCode(object myObject);
    public sealed virtual int Compare(object firstObject, object secondObject);
    private static int FastGetHashCode(string myString);
    public sealed virtual bool Equals(object firstObject, object secondObject);
}
internal class System.Net.HeaderInfo : object {
    internal bool IsRequestRestricted;
    internal bool IsResponseRestricted;
    internal Func`2<string, String[]> Parser;
    internal string HeaderName;
    internal bool AllowMultiValues;
    internal HeaderInfo(string name, bool requestRestricted, bool responseRestricted, bool multi, Func`2<string, String[]> parser);
}
[DefaultMemberAttribute("Item")]
internal class System.Net.HeaderInfoTable : object {
    private static Func`2<string, String[]> s_singleParser;
    private static Func`2<string, String[]> s_multiParser;
    private static Func`2<string, String[]> s_setCookieParser;
    private static HeaderInfo s_unknownHeaderInfo;
    private static Hashtable s_headerHashTable;
    internal HeaderInfo Item { get; }
    private static HeaderInfoTable();
    private static String[] ParseValueHelper(string value, bool isSetCookie);
    private static bool IsDuringExpiresAttributeParsing(string singleValue);
    private static Hashtable CreateHeaderHashtable();
    internal HeaderInfo get_Item(string name);
}
public enum System.Net.HttpRequestHeader : Enum {
    public int value__;
    public static HttpRequestHeader CacheControl;
    public static HttpRequestHeader Connection;
    public static HttpRequestHeader Date;
    public static HttpRequestHeader KeepAlive;
    public static HttpRequestHeader Pragma;
    public static HttpRequestHeader Trailer;
    public static HttpRequestHeader TransferEncoding;
    public static HttpRequestHeader Upgrade;
    public static HttpRequestHeader Via;
    public static HttpRequestHeader Warning;
    public static HttpRequestHeader Allow;
    public static HttpRequestHeader ContentLength;
    public static HttpRequestHeader ContentType;
    public static HttpRequestHeader ContentEncoding;
    public static HttpRequestHeader ContentLanguage;
    public static HttpRequestHeader ContentLocation;
    public static HttpRequestHeader ContentMd5;
    public static HttpRequestHeader ContentRange;
    public static HttpRequestHeader Expires;
    public static HttpRequestHeader LastModified;
    public static HttpRequestHeader Accept;
    public static HttpRequestHeader AcceptCharset;
    public static HttpRequestHeader AcceptEncoding;
    public static HttpRequestHeader AcceptLanguage;
    public static HttpRequestHeader Authorization;
    public static HttpRequestHeader Cookie;
    public static HttpRequestHeader Expect;
    public static HttpRequestHeader From;
    public static HttpRequestHeader Host;
    public static HttpRequestHeader IfMatch;
    public static HttpRequestHeader IfModifiedSince;
    public static HttpRequestHeader IfNoneMatch;
    public static HttpRequestHeader IfRange;
    public static HttpRequestHeader IfUnmodifiedSince;
    public static HttpRequestHeader MaxForwards;
    public static HttpRequestHeader ProxyAuthorization;
    public static HttpRequestHeader Referer;
    public static HttpRequestHeader Range;
    public static HttpRequestHeader Te;
    public static HttpRequestHeader Translate;
    public static HttpRequestHeader UserAgent;
}
[ExtensionAttribute]
internal static class System.Net.HttpRequestHeaderExtensions : object {
    private static String[] s_names;
    private static HttpRequestHeaderExtensions();
    [ExtensionAttribute]
public static string GetName(HttpRequestHeader header);
}
public enum System.Net.HttpResponseHeader : Enum {
    public int value__;
    public static HttpResponseHeader CacheControl;
    public static HttpResponseHeader Connection;
    public static HttpResponseHeader Date;
    public static HttpResponseHeader KeepAlive;
    public static HttpResponseHeader Pragma;
    public static HttpResponseHeader Trailer;
    public static HttpResponseHeader TransferEncoding;
    public static HttpResponseHeader Upgrade;
    public static HttpResponseHeader Via;
    public static HttpResponseHeader Warning;
    public static HttpResponseHeader Allow;
    public static HttpResponseHeader ContentLength;
    public static HttpResponseHeader ContentType;
    public static HttpResponseHeader ContentEncoding;
    public static HttpResponseHeader ContentLanguage;
    public static HttpResponseHeader ContentLocation;
    public static HttpResponseHeader ContentMd5;
    public static HttpResponseHeader ContentRange;
    public static HttpResponseHeader Expires;
    public static HttpResponseHeader LastModified;
    public static HttpResponseHeader AcceptRanges;
    public static HttpResponseHeader Age;
    public static HttpResponseHeader ETag;
    public static HttpResponseHeader Location;
    public static HttpResponseHeader ProxyAuthenticate;
    public static HttpResponseHeader RetryAfter;
    public static HttpResponseHeader Server;
    public static HttpResponseHeader SetCookie;
    public static HttpResponseHeader Vary;
    public static HttpResponseHeader WwwAuthenticate;
}
[ExtensionAttribute]
internal static class System.Net.HttpResponseHeaderExtensions : object {
    private static String[] s_names;
    private static HttpResponseHeaderExtensions();
    [ExtensionAttribute]
public static string GetName(HttpResponseHeader header);
}
internal static class System.Net.HttpValidationHelpers : object {
    private static Char[] s_httpTrimCharacters;
    private static HttpValidationHelpers();
    internal static string CheckBadHeaderNameChars(string name);
    internal static bool ContainsNonAsciiChars(string token);
    public static string CheckBadHeaderValueChars(string value);
    public static bool IsInvalidMethodOrHeaderString(string stringValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class System.Net.WebHeaderCollection : NameValueCollection {
    private WebHeaderCollectionType _type;
    private NameValueCollection _innerCollection;
    private static HeaderInfoTable _headerInfo;
    private bool AllowHttpRequestHeader { get; }
    private static HeaderInfoTable HeaderInfo { get; }
    private NameValueCollection InnerCollection { get; }
    private bool AllowHttpResponseHeader { get; }
    [NullableAttribute("2")]
public string Item { get; public set; }
    [NullableAttribute("2")]
public string Item { get; public set; }
    public int Count { get; }
    public KeysCollection Keys { get; }
    public String[] AllKeys { get; }
    protected WebHeaderCollection(SerializationInfo serializationInfo, StreamingContext streamingContext);
    private bool get_AllowHttpRequestHeader();
    private static HeaderInfoTable get_HeaderInfo();
    private NameValueCollection get_InnerCollection();
    private bool get_AllowHttpResponseHeader();
    [NullableContextAttribute("2")]
public string get_Item(HttpRequestHeader header);
    [NullableContextAttribute("2")]
public void set_Item(HttpRequestHeader header, string value);
    [NullableContextAttribute("2")]
public string get_Item(HttpResponseHeader header);
    [NullableContextAttribute("2")]
public void set_Item(HttpResponseHeader header, string value);
    public virtual void Set(string name, string value);
    [NullableContextAttribute("2")]
public void Set(HttpRequestHeader header, string value);
    [NullableContextAttribute("2")]
public void Set(HttpResponseHeader header, string value);
    public virtual void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext);
    private sealed virtual override void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext);
    public void Remove(HttpRequestHeader header);
    public void Remove(HttpResponseHeader header);
    [NullableContextAttribute("2")]
public virtual void OnDeserialization(object sender);
    public static bool IsRestricted(string headerName);
    public static bool IsRestricted(string headerName, bool response);
    public virtual String[] GetValues(int index);
    public virtual String[] GetValues(string header);
    public virtual string GetKey(int index);
    public virtual void Clear();
    [NullableContextAttribute("2")]
public virtual string Get(int index);
    [NullableContextAttribute("2")]
public virtual string Get(string name);
    [NullableContextAttribute("2")]
public void Add(HttpRequestHeader header, string value);
    [NullableContextAttribute("2")]
public void Add(HttpResponseHeader header, string value);
    public void Add(string header);
    public virtual void Add(string name, string value);
    protected void AddWithoutValidate(string headerName, string headerValue);
    public virtual void Remove(string name);
    public virtual string ToString();
    public Byte[] ToByteArray();
    public virtual int get_Count();
    public virtual KeysCollection get_Keys();
    public virtual String[] get_AllKeys();
    public virtual IEnumerator GetEnumerator();
}
internal enum System.Net.WebHeaderCollectionType : Enum {
    public byte value__;
    public static WebHeaderCollectionType Unknown;
    public static WebHeaderCollectionType WebRequest;
    public static WebHeaderCollectionType WebResponse;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string net_headers_req { get; }
    internal static string net_headers_rsp { get; }
    internal static string net_WebHeaderInvalidControlChars { get; }
    internal static string net_WebHeaderInvalidCRLFChars { get; }
    internal static string net_WebHeaderInvalidHeaderChars { get; }
    internal static string net_WebHeaderMissingColon { get; }
    private static SR();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey);
    internal static ResourceManager get_ResourceManager();
    internal static string get_net_headers_req();
    internal static string get_net_headers_rsp();
    internal static string get_net_WebHeaderInvalidControlChars();
    internal static string get_net_WebHeaderInvalidCRLFChars();
    internal static string get_net_WebHeaderInvalidHeaderChars();
    internal static string get_net_WebHeaderMissingColon();
}
[ExtensionAttribute]
internal static class System.StringExtensions : object {
    [ExtensionAttribute]
internal static string SubstringTrim(string value, int startIndex, int length);
}
