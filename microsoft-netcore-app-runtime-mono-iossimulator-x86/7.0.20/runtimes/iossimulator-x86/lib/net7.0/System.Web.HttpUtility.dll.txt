[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal static class System.HexConverter : object {
    public static ReadOnlySpan`1<byte> CharToHexLookup { get; }
    public static char ToCharLower(int value);
    public static int FromChar(int c);
    public static ReadOnlySpan`1<byte> get_CharToHexLookup();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.Web.HttpUtility : object {
    [NullableContextAttribute("1")]
public static NameValueCollection ParseQueryString(string query);
    [NullableContextAttribute("1")]
public static NameValueCollection ParseQueryString(string query, Encoding encoding);
    public static string HtmlDecode(string s);
    [NullableContextAttribute("1")]
public static void HtmlDecode(string s, TextWriter output);
    public static string HtmlEncode(string s);
    public static string HtmlEncode(object value);
    [NullableContextAttribute("1")]
public static void HtmlEncode(string s, TextWriter output);
    public static string HtmlAttributeEncode(string s);
    [NullableContextAttribute("1")]
public static void HtmlAttributeEncode(string s, TextWriter output);
    public static string UrlEncode(string str);
    public static string UrlPathEncode(string str);
    public static string UrlEncode(string str, Encoding e);
    public static string UrlEncode(Byte[] bytes);
    public static string UrlEncode(Byte[] bytes, int offset, int count);
    public static Byte[] UrlEncodeToBytes(string str);
    public static Byte[] UrlEncodeToBytes(Byte[] bytes);
    [ObsoleteAttribute("This method produces non-standards-compliant output and has interoperability issues. The preferred alternative is UrlEncodeToBytes(String).")]
public static Byte[] UrlEncodeUnicodeToBytes(string str);
    public static string UrlDecode(string str);
    public static string UrlDecode(Byte[] bytes, Encoding e);
    public static Byte[] UrlDecodeToBytes(string str);
    public static Byte[] UrlDecodeToBytes(string str, Encoding e);
    public static Byte[] UrlDecodeToBytes(Byte[] bytes);
    public static Byte[] UrlEncodeToBytes(string str, Encoding e);
    public static Byte[] UrlEncodeToBytes(Byte[] bytes, int offset, int count);
    [ObsoleteAttribute("This method produces non-standards-compliant output and has interoperability issues. The preferred alternative is UrlEncode(String).")]
public static string UrlEncodeUnicode(string str);
    public static string UrlDecode(string str, Encoding e);
    public static string UrlDecode(Byte[] bytes, int offset, int count, Encoding e);
    public static Byte[] UrlDecodeToBytes(Byte[] bytes, int offset, int count);
    [NullableContextAttribute("1")]
public static string JavaScriptStringEncode(string value);
    [NullableContextAttribute("1")]
public static string JavaScriptStringEncode(string value, bool addDoubleQuotes);
}
internal static class System.Web.Util.HttpEncoder : object {
    private static void AppendCharAsUnicodeJavaScript(StringBuilder builder, char c);
    private static bool CharRequiresJavaScriptEncoding(char c);
    internal static string HtmlAttributeEncode(string value);
    internal static void HtmlAttributeEncode(string value, TextWriter output);
    private static void HtmlAttributeEncodeInternal(string s, TextWriter output);
    internal static string HtmlDecode(string value);
    internal static void HtmlDecode(string value, TextWriter output);
    internal static string HtmlEncode(string value);
    internal static void HtmlEncode(string value, TextWriter output);
    private static int IndexOfHtmlAttributeEncodingChars(string s, int startPos);
    private static bool IsNonAsciiByte(byte b);
    internal static string JavaScriptStringEncode(string value);
    internal static Byte[] UrlDecode(Byte[] bytes, int offset, int count);
    internal static string UrlDecode(Byte[] bytes, int offset, int count, Encoding encoding);
    internal static string UrlDecode(string value, Encoding encoding);
    internal static Byte[] UrlEncode(Byte[] bytes, int offset, int count, bool alwaysCreateNewReturnValue);
    private static Byte[] UrlEncode(Byte[] bytes, int offset, int count);
    private static string UrlEncodeNonAscii(string str, Encoding e);
    private static Byte[] UrlEncodeNonAscii(Byte[] bytes, int offset, int count);
    [ObsoleteAttribute("This method produces non-standards-compliant output and has interoperability issues. The preferred alternative is UrlEncode(*).")]
internal static string UrlEncodeUnicode(string value);
    internal static string UrlPathEncode(string value);
    private static string UrlPathEncodeImpl(string value);
    private static bool ValidateUrlEncodingParameters(Byte[] bytes, int offset, int count);
}
internal static class System.Web.Util.HttpEncoderUtility : object {
    public static bool IsUrlSafeChar(char ch);
    internal static string UrlEncodeSpaces(string str);
}
internal static class System.Web.Util.UriUtil : object {
    private static void ExtractQueryAndFragment(string input, String& path, String& queryAndFragment);
    internal static bool TrySplitUriForPathEncode(string input, String& schemeAndAuthority, String& path, String& queryAndFragment);
}
internal static class System.Web.Util.Utf16StringValidator : object {
    internal static string ValidateString(string input);
}
