[NullableContextAttribute("1")]
public interface System.Net.IWebProxyScript {
    public abstract virtual void Close();
    public abstract virtual bool Load(Uri scriptLocation, string script, Type helperType);
    public abstract virtual string Run(string url, string host);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.Net.WebProxy : object {
    private ChangeTrackingArrayList _bypassList;
    private Regex[] _regexBypassList;
    [CompilerGeneratedAttribute]
private Uri <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BypassProxyOnLocal>k__BackingField;
    [CompilerGeneratedAttribute]
private ICredentials <Credentials>k__BackingField;
    private static String modreq(System.Runtime.CompilerServices.IsVolatile) s_domainName;
    private static IPAddress[] modreq(System.Runtime.CompilerServices.IsVolatile) s_localAddresses;
    private static int s_networkChangeRegistered;
    public Uri Address { get; public set; }
    public bool BypassProxyOnLocal { get; public set; }
    [NullableAttribute("1")]
public String[] BypassList { get; public set; }
    [NullableAttribute("1")]
public ArrayList BypassArrayList { get; }
    public ICredentials Credentials { get; public set; }
    public bool UseDefaultCredentials { get; public set; }
    public WebProxy(Uri Address);
    public WebProxy(Uri Address, bool BypassOnLocal);
    public WebProxy(Uri Address, bool BypassOnLocal, String[] BypassList);
    public WebProxy(Uri Address, bool BypassOnLocal, String[] BypassList, ICredentials Credentials);
    [NullableContextAttribute("1")]
public WebProxy(string Host, int Port);
    public WebProxy(string Address);
    public WebProxy(string Address, bool BypassOnLocal);
    public WebProxy(string Address, bool BypassOnLocal, String[] BypassList);
    public WebProxy(string Address, bool BypassOnLocal, String[] BypassList, ICredentials Credentials);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called or extended by application code.")]
[EditorBrowsableAttribute("1")]
protected WebProxy(SerializationInfo serializationInfo, StreamingContext streamingContext);
    [CompilerGeneratedAttribute]
public Uri get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(Uri value);
    [CompilerGeneratedAttribute]
public bool get_BypassProxyOnLocal();
    [CompilerGeneratedAttribute]
public void set_BypassProxyOnLocal(bool value);
    [NullableContextAttribute("1")]
public String[] get_BypassList();
    [NullableContextAttribute("1")]
public void set_BypassList(String[] value);
    [NullableContextAttribute("1")]
public ArrayList get_BypassArrayList();
    [CompilerGeneratedAttribute]
public sealed virtual ICredentials get_Credentials();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Credentials(ICredentials value);
    public bool get_UseDefaultCredentials();
    public void set_UseDefaultCredentials(bool value);
    [NullableContextAttribute("1")]
public sealed virtual Uri GetProxy(Uri destination);
    private static Uri CreateProxyUri(string address, Nullable`1<int> port);
    private void UpdateRegexList();
    private bool IsMatchInBypassList(Uri input);
    [NullableContextAttribute("1")]
public sealed virtual bool IsBypassed(Uri host);
    private sealed virtual override void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext);
    [NullableContextAttribute("1")]
protected virtual void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("WebProxy.GetDefaultProxy has been deprecated. Use the proxy selected for you by default.")]
public static WebProxy GetDefaultProxy();
    private static bool IsLocal(Uri host);
    private static void EnsureNetworkChangeRegistration();
    [CompilerGeneratedAttribute]
internal static void <EnsureNetworkChangeRegistration>g__Register|46_0();
}
