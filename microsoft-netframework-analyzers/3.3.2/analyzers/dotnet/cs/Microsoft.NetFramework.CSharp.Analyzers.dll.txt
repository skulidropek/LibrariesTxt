[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpAvoidDuplicateAcceleratorsAnalyzer : AvoidDuplicateAcceleratorsAnalyzer {
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpAvoidDuplicateAcceleratorsFixer : AvoidDuplicateAcceleratorsFixer {
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpCallBaseClassMethodsOnISerializableTypesAnalyzer : CallBaseClassMethodsOnISerializableTypesAnalyzer {
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpCallBaseClassMethodsOnISerializableTypesFixer : CallBaseClassMethodsOnISerializableTypesFixer {
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpDoNotMarkServicedComponentsWithWebMethodAnalyzer : DoNotMarkServicedComponentsWithWebMethodAnalyzer {
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpDoNotMarkServicedComponentsWithWebMethodFixer : DoNotMarkServicedComponentsWithWebMethodFixer {
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpDoNotUseInsecureDtdProcessingInApiDesignAnalyzer : DoNotUseInsecureDtdProcessingInApiDesignAnalyzer {
    [NullableContextAttribute("1")]
protected virtual SymbolAndNodeAnalyzer GetAnalyzer(CompilationStartAnalysisContext context, CompilationSecurityTypes types, Version targetFrameworkVersion);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpDoNotUseInsecureXSLTScriptExecutionAnalyzer : DoNotUseInsecureXSLTScriptExecutionAnalyzer`1<SyntaxKind> {
    [NullableContextAttribute("1")]
protected virtual SyntaxNodeAnalyzer<SyntaxKind> GetAnalyzer(CodeBlockStartAnalysisContext`1<SyntaxKind> context, CompilationSecurityTypes types);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpMarkWindowsFormsEntryPointsWithStaThreadAnalyzer : MarkWindowsFormsEntryPointsWithStaThreadAnalyzer {
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpMarkWindowsFormsEntryPointsWithStaThreadFixer : MarkWindowsFormsEntryPointsWithStaThreadFixer {
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpSetLocaleForDataTypesAnalyzer : SetLocaleForDataTypesAnalyzer {
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpSetLocaleForDataTypesFixer : SetLocaleForDataTypesFixer {
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpSpecifyMessageBoxOptionsAnalyzer : SpecifyMessageBoxOptionsAnalyzer {
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpSpecifyMessageBoxOptionsFixer : SpecifyMessageBoxOptionsFixer {
}
[ExportCodeFixProviderAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.NetFramework.CSharp.Analyzers.CSharpTypesShouldNotExtendCertainBaseTypesFixer : TypesShouldNotExtendCertainBaseTypesFixer {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.NetFramework.CSharp.Analyzers.Helpers.CSharpSyntaxNodeHelper : SyntaxNodeHelper {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static CSharpSyntaxNodeHelper <Default>k__BackingField;
    [NullableAttribute("1")]
public static CSharpSyntaxNodeHelper Default { get; }
    private static CSharpSyntaxNodeHelper();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public static CSharpSyntaxNodeHelper get_Default();
    public virtual ITypeSymbol GetClassDeclarationTypeSymbol(SyntaxNode node, SemanticModel semanticModel);
    public virtual SyntaxNode GetAssignmentLeftNode(SyntaxNode node);
    public virtual SyntaxNode GetAssignmentRightNode(SyntaxNode node);
    public virtual SyntaxNode GetMemberAccessExpressionNode(SyntaxNode node);
    public virtual SyntaxNode GetMemberAccessNameNode(SyntaxNode node);
    public virtual SyntaxNode GetInvocationExpressionNode(SyntaxNode node);
    public virtual SyntaxNode GetCallTargetNode(SyntaxNode node);
    public virtual SyntaxNode GetDefaultValueForAnOptionalParameter(SyntaxNode declNode, int paramIndex);
    [NullableContextAttribute("1")]
protected virtual IEnumerable`1<SyntaxNode> GetCallArgumentExpressionNodes(SyntaxNode node, CallKinds callKind);
    [NullableContextAttribute("1")]
public virtual IEnumerable`1<SyntaxNode> GetObjectInitializerExpressionNodes(SyntaxNode node);
    public virtual bool IsMethodInvocationNode(SyntaxNode node);
    public virtual IMethodSymbol GetCalleeMethodSymbol(SyntaxNode node, SemanticModel semanticModel);
    public virtual IMethodSymbol GetCallerMethodSymbol(SyntaxNode node, SemanticModel semanticModel);
    public virtual ITypeSymbol GetEnclosingTypeSymbol(SyntaxNode node, SemanticModel semanticModel);
    [NullableContextAttribute("1")]
public virtual IEnumerable`1<SyntaxNode> GetDescendantAssignmentExpressionNodes(SyntaxNode node);
    [NullableContextAttribute("1")]
public virtual IEnumerable`1<SyntaxNode> GetDescendantMemberAccessExpressionNodes(SyntaxNode node);
    public virtual bool IsObjectCreationExpressionUnderFieldDeclaration(SyntaxNode node);
    public virtual SyntaxNode GetVariableDeclaratorOfAFieldDeclarationNode(SyntaxNode node);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
