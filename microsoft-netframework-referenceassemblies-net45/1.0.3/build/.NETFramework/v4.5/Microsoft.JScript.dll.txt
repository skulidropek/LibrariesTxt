[ComVisibleAttribute("True")]
public abstract class Microsoft.JScript.ActivationObject : ScriptObject {
    protected ArrayList field_table;
    protected virtual JSVariableField CreateField(string name, FieldAttributes attributeFlags, object value);
    public virtual FieldInfo GetField(string name, int lexLevel);
    public virtual object GetDefaultThisObject();
    public virtual GlobalScope GetGlobalScope();
    public virtual FieldInfo GetLocalField(string name);
    public virtual MemberInfo[] GetMember(string name, BindingFlags bindingAttr);
    public virtual MemberInfo[] GetMembers(BindingFlags bindingAttr);
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public sealed virtual object GetMemberValue(string name, int lexlevel);
}
public class Microsoft.JScript.ActiveXObjectConstructor : ScriptFunction {
    private static ActiveXObjectConstructor();
    [JSFunctionAttribute("16")]
public object CreateInstance(Object[] args);
    public object Invoke();
}
public class Microsoft.JScript.ArgumentsObject : JSObject {
    public object callee;
    public object caller;
    public object length;
}
public class Microsoft.JScript.ArrayConstructor : ScriptFunction {
    private static ArrayConstructor();
    public ArrayObject ConstructArray(Object[] args);
    [JSFunctionAttribute("16")]
public ArrayObject CreateInstance(Object[] args);
    [JSFunctionAttribute("16")]
public ArrayObject Invoke(Object[] args);
}
public class Microsoft.JScript.ArrayLiteral : AST {
    public ArrayLiteral(Context context, ASTList elements);
}
public class Microsoft.JScript.ArrayObject : JSObject {
    public object length { get; public set; }
    public virtual object get_length();
    public virtual void set_length(object value);
    protected void SpliceSlowly(UInt32 start, UInt32 deleteCount, Object[] args, ArrayObject outArray, UInt32 oldLength, UInt32 newLength);
}
public class Microsoft.JScript.ArrayPrototype : ArrayObject {
    public static ArrayConstructor constructor { get; }
    private static ArrayPrototype();
    [JSFunctionAttribute("50", "1")]
public static ArrayObject concat(object thisob, VsaEngine engine, Object[] args);
    public static ArrayConstructor get_constructor();
    [JSFunctionAttribute("2", "2")]
public static string join(object thisob, object separator);
    [JSFunctionAttribute("2", "3")]
public static object pop(object thisob);
    [JSFunctionAttribute("18", "4")]
public static long push(object thisob, Object[] args);
    [JSFunctionAttribute("2", "5")]
public static object reverse(object thisob);
    [JSFunctionAttribute("2", "6")]
public static object shift(object thisob);
    [JSFunctionAttribute("34", "7")]
public static ArrayObject slice(object thisob, VsaEngine engine, double start, object end);
    [JSFunctionAttribute("2", "8")]
public static object sort(object thisob, object function);
    [JSFunctionAttribute("50", "9")]
public static ArrayObject splice(object thisob, VsaEngine engine, double start, double deleteCnt, Object[] args);
    [JSFunctionAttribute("2", "10")]
public static string toLocaleString(object thisob);
    [JSFunctionAttribute("2", "11")]
public static string toString(object thisob);
    [JSFunctionAttribute("18", "12")]
public static object unshift(object thisob, Object[] args);
}
public class Microsoft.JScript.ArrayWrapper : ArrayObject {
    public object length { get; public set; }
    public Type GetType();
    public virtual object get_length();
    public virtual void set_length(object value);
}
public class Microsoft.JScript.AssemblyCustomAttributeList : AST {
}
public abstract class Microsoft.JScript.AST : object {
}
[DefaultMemberAttribute("Item")]
public class Microsoft.JScript.ASTList : AST {
}
public abstract class Microsoft.JScript.BinaryOp : AST {
    protected AST operand1;
    protected AST operand2;
    protected JSToken operatorTok;
    protected Type type1;
    protected Type type2;
    protected MethodInfo operatorMeth;
    protected MethodInfo GetOperator(IReflect ir1, IReflect ir2);
}
public abstract class Microsoft.JScript.Binding : AST {
    protected MemberInfo defaultMember;
    protected bool isAssignmentToDefaultIndexedProperty;
    protected bool isFullyResolved;
    protected bool isNonVirtual;
    protected string name;
    private static Binding();
    protected abstract virtual object GetObject();
    protected abstract virtual void HandleNoSuchMemberError();
    public static bool IsMissing(object value);
    protected void ResolveRHValue();
    protected abstract virtual void TranslateToILObject(ILGenerator il, Type obtype, bool noValue);
    protected abstract virtual void TranslateToILWithDupOfThisOb(ILGenerator il);
}
public class Microsoft.JScript.BitwiseBinary : BinaryOp {
    public BitwiseBinary(int operatorTok);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public object EvaluateBitwiseBinary(object v1, object v2);
}
public class Microsoft.JScript.Block : AST {
}
public class Microsoft.JScript.BlockScope : ActivationObject {
    public BlockScope(ScriptObject parent, string name, int scopeId);
    private static BlockScope();
    protected virtual JSVariableField CreateField(string name, FieldAttributes attributeFlags, object value);
}
public class Microsoft.JScript.BooleanConstructor : ScriptFunction {
    private static BooleanConstructor();
    [JSFunctionAttribute("16")]
public BooleanObject CreateInstance(Object[] args);
    public bool Invoke(object arg);
}
public class Microsoft.JScript.BooleanObject : JSObject {
    protected BooleanObject(ScriptObject prototype, Type subType);
    public Type GetType();
}
public class Microsoft.JScript.BooleanPrototype : BooleanObject {
    public static BooleanConstructor constructor { get; }
    protected BooleanPrototype(ObjectPrototype parent, Type baseType);
    private static BooleanPrototype();
    public static BooleanConstructor get_constructor();
    [JSFunctionAttribute("2", "13")]
public static string toString(object thisob);
    [JSFunctionAttribute("2", "14")]
public static object valueOf(object thisob);
}
public class Microsoft.JScript.BreakOutOfFinally : ApplicationException {
    public int target;
    public BreakOutOfFinally(int target);
    public BreakOutOfFinally(string m);
    public BreakOutOfFinally(string m, Exception e);
    private BreakOutOfFinally(SerializationInfo s, StreamingContext c);
    public virtual void GetObjectData(SerializationInfo s, StreamingContext c);
}
public class Microsoft.JScript.Closure : ScriptFunction {
    public object arguments;
    public object caller;
    public Closure(FunctionObject func);
    public virtual string ToString();
}
public enum Microsoft.JScript.CmdLineError : Enum {
    public int value__;
    public static CmdLineError NoError;
    public static CmdLineError AssemblyNotFound;
    public static CmdLineError CannotCreateEngine;
    public static CmdLineError CompilerConstant;
    public static CmdLineError DuplicateFileAsSourceAndAssembly;
    public static CmdLineError DuplicateResourceFile;
    public static CmdLineError DuplicateResourceName;
    public static CmdLineError DuplicateSourceFile;
    public static CmdLineError ErrorSavingCompiledState;
    public static CmdLineError IncompatibleTargets;
    public static CmdLineError InvalidAssembly;
    public static CmdLineError InvalidCharacters;
    public static CmdLineError InvalidCodePage;
    public static CmdLineError InvalidDefinition;
    public static CmdLineError InvalidForCompilerOptions;
    public static CmdLineError InvalidLocaleID;
    public static CmdLineError InvalidPlatform;
    public static CmdLineError InvalidTarget;
    public static CmdLineError InvalidSourceFile;
    public static CmdLineError InvalidVersion;
    public static CmdLineError InvalidWarningLevel;
    public static CmdLineError ManagedResourceNotFound;
    public static CmdLineError MissingDefineArgument;
    public static CmdLineError MissingExtension;
    public static CmdLineError MissingLibArgument;
    public static CmdLineError MissingReference;
    public static CmdLineError MissingVersionInfo;
    public static CmdLineError MultipleOutputNames;
    public static CmdLineError MultipleTargets;
    public static CmdLineError MultipleWin32Resources;
    public static CmdLineError NestedResponseFiles;
    public static CmdLineError NoCodePage;
    public static CmdLineError NoFileName;
    public static CmdLineError NoInputSourcesSpecified;
    public static CmdLineError NoLocaleID;
    public static CmdLineError NoWarningLevel;
    public static CmdLineError ResourceNotFound;
    public static CmdLineError SourceFileTooBig;
    public static CmdLineError SourceNotFound;
    public static CmdLineError UnknownOption;
    public static CmdLineError Unspecified;
    public static CmdLineError LAST;
}
public class Microsoft.JScript.CmdLineException : Exception {
    public string Message { get; }
    public CmdLineException(CmdLineError errorCode, CultureInfo culture);
    public CmdLineException(CmdLineError errorCode, string context, CultureInfo culture);
    public CmdLineException(string m);
    public CmdLineException(string m, Exception e);
    protected CmdLineException(SerializationInfo s, StreamingContext c);
    public virtual void GetObjectData(SerializationInfo s, StreamingContext c);
    public virtual string get_Message();
    public string ResourceKey(CmdLineError errorCode);
}
public class Microsoft.JScript.CmdLineOptionParser : object {
    public static bool IsSimpleOption(string option, string prefix);
    public static string IsArgumentOption(string option, string prefix);
    public static string IsArgumentOption(string option, string shortPrefix, string longPrefix);
    public static object IsBooleanOption(string option, string prefix);
    public static object IsBooleanOption(string option, string shortPrefix, string longPrefix);
}
public class Microsoft.JScript.COMCharStream : Stream {
    public bool CanWrite { get; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public COMCharStream(IMessageReceiver messageReceiver);
    public virtual bool get_CanWrite();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Close();
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
}
[GuidAttribute("CA0F511A-FAF2-4942-B9A8-17D5E46514E8")]
[ComVisibleAttribute("True")]
public class Microsoft.JScript.COMFieldInfo : FieldInfo {
    public FieldAttributes Attributes { get; }
    public Type DeclaringType { get; }
    public RuntimeFieldHandle FieldHandle { get; }
    public Type FieldType { get; }
    public MemberTypes MemberType { get; }
    public string Name { get; }
    public Type ReflectedType { get; }
    public virtual FieldAttributes get_Attributes();
    public virtual Type get_DeclaringType();
    public virtual RuntimeFieldHandle get_FieldHandle();
    public virtual Type get_FieldType();
    public virtual object GetValue(object obj);
    public virtual void Initialize(string name, COMMemberInfo dispatch);
    public sealed virtual COMMemberInfo GetCOMMemberInfo();
    public virtual MemberTypes get_MemberType();
    public virtual string get_Name();
    public virtual Type get_ReflectedType();
    public virtual void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo culture);
    public virtual Object[] GetCustomAttributes(Type t, bool inherit);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual bool IsDefined(Type t, bool inherit);
}
[GuidAttribute("84BCEB62-16EB-4e1c-975C-FCB40D331043")]
[ComVisibleAttribute("True")]
public interface Microsoft.JScript.COMMemberInfo {
    public abstract virtual object Call(BindingFlags invokeAttr, Binder binder, Object[] arguments, CultureInfo culture);
    public abstract virtual object GetValue(BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture);
    public abstract virtual void SetValue(object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture);
}
[ComVisibleAttribute("True")]
[GuidAttribute("C7B9C313-2FD4-4384-8571-7ABC08BD17E5")]
public class Microsoft.JScript.COMMethodInfo : JSMethod {
    protected static ParameterInfo[] EmptyParams;
    protected COMMemberInfo _comObject;
    protected string _name;
    public MethodAttributes Attributes { get; }
    public Type DeclaringType { get; }
    public MemberTypes MemberType { get; }
    public RuntimeMethodHandle MethodHandle { get; }
    public string Name { get; }
    public Type ReflectedType { get; }
    public Type ReturnType { get; }
    public ICustomAttributeProvider ReturnTypeCustomAttributes { get; }
    private static COMMethodInfo();
    public virtual MethodAttributes get_Attributes();
    public virtual void Initialize(string name, COMMemberInfo dispatch);
    public sealed virtual COMMemberInfo GetCOMMemberInfo();
    public virtual object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture);
    public virtual Type get_DeclaringType();
    public virtual MethodInfo GetBaseDefinition();
    public virtual MethodImplAttributes GetMethodImplementationFlags();
    public virtual ParameterInfo[] GetParameters();
    public virtual MemberTypes get_MemberType();
    public virtual RuntimeMethodHandle get_MethodHandle();
    public virtual string get_Name();
    public virtual Type get_ReflectedType();
    public virtual Type get_ReturnType();
    public virtual ICustomAttributeProvider get_ReturnTypeCustomAttributes();
    public virtual string ToString();
}
[GuidAttribute("6A02951C-B129-4d26-AB92-B9CA19BDCA26")]
[ComVisibleAttribute("True")]
public class Microsoft.JScript.COMPropertyInfo : PropertyInfo {
    public PropertyAttributes Attributes { get; }
    public bool CanRead { get; }
    public bool CanWrite { get; }
    public Type DeclaringType { get; }
    public MemberTypes MemberType { get; }
    public string Name { get; }
    public Type ReflectedType { get; }
    public Type PropertyType { get; }
    public virtual PropertyAttributes get_Attributes();
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
    public virtual Type get_DeclaringType();
    public virtual MethodInfo[] GetAccessors(bool nonPublic);
    public virtual Object[] GetCustomAttributes(Type t, bool inherit);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual MethodInfo GetGetMethod(bool nonPublic);
    public virtual ParameterInfo[] GetIndexParameters();
    public virtual MethodInfo GetSetMethod(bool nonPublic);
    public virtual object GetValue(object obj, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture);
    public sealed virtual void Initialize(string name, COMMemberInfo dispatch);
    public sealed virtual COMMemberInfo GetCOMMemberInfo();
    public virtual MemberTypes get_MemberType();
    public virtual string get_Name();
    public virtual Type get_ReflectedType();
    public virtual void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture);
    public virtual Type get_PropertyType();
    public virtual bool IsDefined(Type t, bool inherit);
}
public class Microsoft.JScript.Context : object {
    public int EndColumn { get; }
    public int EndLine { get; }
    public int EndPosition { get; }
    public int StartColumn { get; }
    public int StartLine { get; }
    public int StartPosition { get; }
    public int get_EndColumn();
    public int get_EndLine();
    public int get_EndPosition();
    public string GetCode();
    public JSToken GetToken();
    public int get_StartColumn();
    public int get_StartLine();
    public int get_StartPosition();
}
public class Microsoft.JScript.ContinueOutOfFinally : ApplicationException {
    public int target;
    public ContinueOutOfFinally(int target);
    public ContinueOutOfFinally(string m);
    public ContinueOutOfFinally(string m, Exception e);
    private ContinueOutOfFinally(SerializationInfo s, StreamingContext c);
    public virtual void GetObjectData(SerializationInfo s, StreamingContext c);
}
public class Microsoft.JScript.Convert : object {
    private static Convert();
    public static bool IsBadIndex(AST ast);
    public static double CheckIfDoubleIsInteger(double d);
    public static float CheckIfSingleIsInteger(float s);
    public static object Coerce(object value, object type);
    public static object CoerceT(object value, Type t, bool explicitOK);
    public static object Coerce2(object value, TypeCode target, bool truncationPermitted);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public static void ThrowTypeMismatch(object val);
    public static bool ToBoolean(double d);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public static bool ToBoolean(object value);
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public static bool ToBoolean(object value, bool explicitConversion);
    public static object ToForInObject(object value, VsaEngine engine);
    public static int ToInt32(object value);
    public static double ToNumber(object value);
    public static double ToNumber(string str);
    public static object ToNativeArray(object value, RuntimeTypeHandle handle);
    public static object ToObject(object value, VsaEngine engine);
    public static object ToObject2(object value, VsaEngine engine);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public static string ToString(object value, bool explicitOK);
    public static string ToString(bool b);
    public static string ToString(double d);
}
public class Microsoft.JScript.DateConstructor : ScriptFunction {
    private static DateConstructor();
    [JSFunctionAttribute("16")]
public DateObject CreateInstance(Object[] args);
    public string Invoke();
    [JSFunctionAttribute("0", "35")]
public static double parse(string str);
    [JSFunctionAttribute("0", "60")]
public static double UTC(object year, object month, object date, object hours, object minutes, object seconds, object ms);
}
public class Microsoft.JScript.DateObject : JSObject {
}
public class Microsoft.JScript.DatePrototype : DateObject {
    public static DateConstructor constructor { get; }
    private static DatePrototype();
    public static DateConstructor get_constructor();
    [JSFunctionAttribute("2", "15")]
public static double getDate(object thisob);
    [JSFunctionAttribute("2", "16")]
public static double getDay(object thisob);
    [JSFunctionAttribute("2", "17")]
public static double getFullYear(object thisob);
    [JSFunctionAttribute("2", "18")]
public static double getHours(object thisob);
    [JSFunctionAttribute("2", "19")]
public static double getMilliseconds(object thisob);
    [JSFunctionAttribute("2", "20")]
public static double getMinutes(object thisob);
    [JSFunctionAttribute("2", "21")]
public static double getMonth(object thisob);
    [JSFunctionAttribute("2", "22")]
public static double getSeconds(object thisob);
    [JSFunctionAttribute("2", "23")]
public static double getTime(object thisob);
    [JSFunctionAttribute("2", "24")]
public static double getTimezoneOffset(object thisob);
    [JSFunctionAttribute("2", "25")]
public static double getUTCDate(object thisob);
    [JSFunctionAttribute("2", "26")]
public static double getUTCDay(object thisob);
    [JSFunctionAttribute("2", "27")]
public static double getUTCFullYear(object thisob);
    [JSFunctionAttribute("2", "28")]
public static double getUTCHours(object thisob);
    [JSFunctionAttribute("2", "29")]
public static double getUTCMilliseconds(object thisob);
    [JSFunctionAttribute("2", "30")]
public static double getUTCMinutes(object thisob);
    [JSFunctionAttribute("2", "31")]
public static double getUTCMonth(object thisob);
    [JSFunctionAttribute("2", "32")]
public static double getUTCSeconds(object thisob);
    [JSFunctionAttribute("2", "33")]
public static object getVarDate(object thisob);
    [NotRecommended("getYear")]
[JSFunctionAttribute("2", "34")]
public static double getYear(object thisob);
    [JSFunctionAttribute("2", "36")]
public static double setDate(object thisob, double ddate);
    [JSFunctionAttribute("2", "37")]
public static double setFullYear(object thisob, double dyear, object month, object date);
    [JSFunctionAttribute("2", "38")]
public static double setHours(object thisob, double dhour, object min, object sec, object msec);
    [JSFunctionAttribute("2", "39")]
public static double setMinutes(object thisob, double dmin, object sec, object msec);
    [JSFunctionAttribute("2", "40")]
public static double setMilliseconds(object thisob, double dmsec);
    [JSFunctionAttribute("2", "41")]
public static double setMonth(object thisob, double dmonth, object date);
    [JSFunctionAttribute("2", "42")]
public static double setSeconds(object thisob, double dsec, object msec);
    [JSFunctionAttribute("2", "43")]
public static double setTime(object thisob, double time);
    [JSFunctionAttribute("2", "44")]
public static double setUTCDate(object thisob, double ddate);
    [JSFunctionAttribute("2", "45")]
public static double setUTCFullYear(object thisob, double dyear, object month, object date);
    [JSFunctionAttribute("2", "46")]
public static double setUTCHours(object thisob, double dhour, object min, object sec, object msec);
    [JSFunctionAttribute("2", "47")]
public static double setUTCMinutes(object thisob, double dmin, object sec, object msec);
    [JSFunctionAttribute("2", "48")]
public static double setUTCMilliseconds(object thisob, double dmsec);
    [JSFunctionAttribute("2", "49")]
public static double setUTCMonth(object thisob, double dmonth, object date);
    [JSFunctionAttribute("2", "50")]
public static double setUTCSeconds(object thisob, double dsec, object msec);
    [NotRecommended("setYear")]
[JSFunctionAttribute("2", "51")]
public static double setYear(object thisob, double dyear);
    [JSFunctionAttribute("2", "52")]
public static string toDateString(object thisob);
    [NotRecommended("toGMTString")]
[JSFunctionAttribute("2", "53")]
public static string toGMTString(object thisob);
    [JSFunctionAttribute("2", "54")]
public static string toLocaleDateString(object thisob);
    [JSFunctionAttribute("2", "55")]
public static string toLocaleString(object thisob);
    [JSFunctionAttribute("2", "56")]
public static string toLocaleTimeString(object thisob);
    [JSFunctionAttribute("2", "57")]
public static string toString(object thisob);
    [JSFunctionAttribute("2", "58")]
public static string toTimeString(object thisob);
    [JSFunctionAttribute("2", "59")]
public static string toUTCString(object thisob);
    [JSFunctionAttribute("2", "61")]
public static double valueOf(object thisob);
}
public class Microsoft.JScript.DebugBreak : AST {
}
[ComVisibleAttribute("True")]
[GuidAttribute("432D76CE-8C9E-4eed-ADDD-91737F27A8CB")]
public class Microsoft.JScript.DebugConvert : object {
    public sealed virtual object ToPrimitive(object value, TypeCode typeCode, bool truncationPermitted);
    public sealed virtual string ByteToString(byte value, int radix);
    public sealed virtual string SByteToString(sbyte value, int radix);
    public sealed virtual string Int16ToString(short value, int radix);
    public sealed virtual string UInt16ToString(ushort value, int radix);
    public sealed virtual string Int32ToString(int value, int radix);
    public sealed virtual string UInt32ToString(UInt32 value, int radix);
    public sealed virtual string Int64ToString(long value, int radix);
    public sealed virtual string UInt64ToString(ulong value, int radix);
    public sealed virtual string SingleToString(float value);
    public sealed virtual string DoubleToString(double value);
    public sealed virtual string BooleanToString(bool value);
    public sealed virtual string DoubleToDateString(double value);
    public sealed virtual string RegexpToString(string source, bool ignoreCase, bool global, bool multiline);
    public sealed virtual string DecimalToString(decimal value);
    public sealed virtual string StringToPrintable(string source);
    public sealed virtual object GetManagedObject(object value);
    public sealed virtual object GetManagedInt64Object(long i);
    public sealed virtual object GetManagedUInt64Object(ulong i);
    public sealed virtual object GetManagedCharObject(ushort i);
    public sealed virtual string GetErrorMessageForHR(int hr, IJSVsaEngine engine);
}
public class Microsoft.JScript.DocumentContext : object {
    private static DocumentContext();
}
public class Microsoft.JScript.DynamicFieldInfo : object {
    public string name;
    public object value;
    public string fieldTypeName;
    public DynamicFieldInfo(string name, object value);
    public DynamicFieldInfo(string name, object value, string fieldTypeName);
}
public class Microsoft.JScript.Empty : object {
    public static Empty Value;
    private static Empty();
}
public class Microsoft.JScript.EndOfFile : ParserException {
}
public class Microsoft.JScript.EnumeratorConstructor : ScriptFunction {
    private static EnumeratorConstructor();
    [JSFunctionAttribute("16")]
public EnumeratorObject CreateInstance(Object[] args);
    public object Invoke();
}
public class Microsoft.JScript.EnumeratorObject : JSObject {
    protected IEnumerator enumerator;
    protected void LoadObject();
}
public class Microsoft.JScript.EnumeratorPrototype : JSObject {
    public static EnumeratorConstructor constructor { get; }
    private static EnumeratorPrototype();
    [JSFunctionAttribute("2", "62")]
public static bool atEnd(object thisob);
    public static EnumeratorConstructor get_constructor();
    [JSFunctionAttribute("2", "63")]
public static object item(object thisob);
    [JSFunctionAttribute("2", "64")]
public static void moveFirst(object thisob);
    [JSFunctionAttribute("2", "65")]
public static void moveNext(object thisob);
}
public class Microsoft.JScript.Equality : BinaryOp {
    public Equality(int operatorTok);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public bool EvaluateEquality(object v1, object v2);
    public static bool JScriptEquals(object v1, object v2);
}
public class Microsoft.JScript.ErrorConstructor : ScriptFunction {
    private static ErrorConstructor();
    [JSFunctionAttribute("16")]
public ErrorObject CreateInstance(Object[] args);
    [JSFunctionAttribute("16")]
public object Invoke(Object[] args);
}
public class Microsoft.JScript.ErrorObject : JSObject {
    public object message;
    public object number;
    public object description;
    public static Exception op_Explicit(ErrorObject err);
    public static Exception ToException(ErrorObject err);
}
public class Microsoft.JScript.ErrorPrototype : JSObject {
    public string name;
    public ErrorConstructor constructor { get; }
    private static ErrorPrototype();
    public ErrorConstructor get_constructor();
    [JSFunctionAttribute("2", "66")]
public static string toString(object thisob);
}
public enum Microsoft.JScript.ErrorType : Enum {
    public int value__;
    public static ErrorType OtherError;
    public static ErrorType EvalError;
    public static ErrorType RangeError;
    public static ErrorType ReferenceError;
    public static ErrorType SyntaxError;
    public static ErrorType TypeError;
    public static ErrorType URIError;
}
public class Microsoft.JScript.Eval : AST {
    public static object JScriptEvaluate(object source, VsaEngine engine);
    public static object JScriptEvaluate(object source, object unsafeOption, VsaEngine engine);
}
public class Microsoft.JScript.EvalErrorObject : ErrorObject {
}
[AttributeUsageAttribute("68")]
public class Microsoft.JScript.Expando : Attribute {
}
public abstract class Microsoft.JScript.FieldAccessor : object {
    private static FieldAccessor();
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public abstract virtual object GetValue(object thisob);
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public abstract virtual void SetValue(object thisob, object value);
}
public class Microsoft.JScript.ForIn : AST {
    public static IEnumerator JScriptGetEnumerator(object coll);
}
public class Microsoft.JScript.FunctionConstructor : ScriptFunction {
    private static FunctionConstructor();
    [JSFunctionAttribute("16")]
public ScriptFunction CreateInstance(Object[] args);
    [JSFunctionAttribute("16")]
public ScriptFunction Invoke(Object[] args);
}
public class Microsoft.JScript.FunctionDeclaration : AST {
    public static Closure JScriptFunctionDeclaration(RuntimeTypeHandle handle, string name, string method_name, String[] formal_parameters, JSLocalField[] fields, bool must_save_stack_locals, bool hasArgumentsObject, string text, object declaringObject, VsaEngine engine);
}
public class Microsoft.JScript.FunctionExpression : AST {
    private static FunctionExpression();
    public static FunctionObject JScriptFunctionExpression(RuntimeTypeHandle handle, string name, string method_name, String[] formal_params, JSLocalField[] fields, bool must_save_stack_locals, bool hasArgumentsObject, string text, VsaEngine engine);
}
public class Microsoft.JScript.FunctionObject : ScriptFunction {
    public virtual string ToString();
}
public class Microsoft.JScript.FunctionPrototype : ScriptFunction {
    public static FunctionConstructor constructor { get; }
    private static FunctionPrototype();
    [JSFunctionAttribute("2", "67")]
public static object apply(object thisob, object thisarg, object argArray);
    [JSFunctionAttribute("18", "68")]
public static object call(object thisob, object thisarg, Object[] args);
    public static FunctionConstructor get_constructor();
    [JSFunctionAttribute("2", "69")]
public static string toString(object thisob);
}
public class Microsoft.JScript.FunctionWrapper : ScriptFunction {
    public virtual string ToString();
}
public class Microsoft.JScript.GlobalObject : object {
    public static double Infinity;
    public static double NaN;
    public static Empty undefined;
    protected ActiveXObjectConstructor originalActiveXObjectField;
    protected ArrayConstructor originalArrayField;
    protected BooleanConstructor originalBooleanField;
    protected DateConstructor originalDateField;
    protected EnumeratorConstructor originalEnumeratorField;
    protected ErrorConstructor originalErrorField;
    protected ErrorConstructor originalEvalErrorField;
    protected FunctionConstructor originalFunctionField;
    protected NumberConstructor originalNumberField;
    protected ObjectConstructor originalObjectField;
    protected ObjectPrototype originalObjectPrototypeField;
    protected ErrorConstructor originalRangeErrorField;
    protected ErrorConstructor originalReferenceErrorField;
    protected RegExpConstructor originalRegExpField;
    protected StringConstructor originalStringField;
    protected ErrorConstructor originalSyntaxErrorField;
    protected ErrorConstructor originalTypeErrorField;
    protected VBArrayConstructor originalVBArrayField;
    protected ErrorConstructor originalURIErrorField;
    public static ActiveXObjectConstructor ActiveXObject { get; }
    public static ArrayConstructor Array { get; }
    public static BooleanConstructor Boolean { get; }
    public static Type boolean { get; }
    public static Type byte { get; }
    public static Type char { get; }
    public static DateConstructor Date { get; }
    public static Type decimal { get; }
    public static Type double { get; }
    public static EnumeratorConstructor Enumerator { get; }
    public static ErrorConstructor Error { get; }
    public static ErrorConstructor EvalError { get; }
    public static Type float { get; }
    public static FunctionConstructor Function { get; }
    public static Type int { get; }
    public static Type long { get; }
    public static MathObject Math { get; }
    public static NumberConstructor Number { get; }
    public static ObjectConstructor Object { get; }
    public static ErrorConstructor RangeError { get; }
    public static ErrorConstructor ReferenceError { get; }
    public static RegExpConstructor RegExp { get; }
    public static Type sbyte { get; }
    public static Type short { get; }
    public static StringConstructor String { get; }
    public static ErrorConstructor SyntaxError { get; }
    public static ErrorConstructor TypeError { get; }
    public static ErrorConstructor URIError { get; }
    public static VBArrayConstructor VBArray { get; }
    public static Type void { get; }
    public static Type uint { get; }
    public static Type ulong { get; }
    public static Type ushort { get; }
    private static GlobalObject();
    public static ActiveXObjectConstructor get_ActiveXObject();
    public static ArrayConstructor get_Array();
    public static BooleanConstructor get_Boolean();
    public static Type get_boolean();
    public static Type get_byte();
    public static Type get_char();
    [JSFunctionAttribute("0", "70")]
public static void CollectGarbage();
    public static DateConstructor get_Date();
    public static Type get_decimal();
    [JSFunctionAttribute("0", "71")]
public static string decodeURI(object encodedURI);
    [JSFunctionAttribute("0", "72")]
public static string decodeURIComponent(object encodedURI);
    public static Type get_double();
    [JSFunctionAttribute("0", "73")]
public static string encodeURI(object uri);
    [JSFunctionAttribute("0", "74")]
public static string encodeURIComponent(object uriComponent);
    public static EnumeratorConstructor get_Enumerator();
    public static ErrorConstructor get_Error();
    [JSFunctionAttribute("0", "75")]
[NotRecommended("escape")]
public static string escape(object string);
    [JSFunctionAttribute("0", "76")]
public static object eval(object x);
    public static ErrorConstructor get_EvalError();
    public static Type get_float();
    public static FunctionConstructor get_Function();
    [JSFunctionAttribute("0", "77")]
public static object GetObject(object moniker, object progId);
    public static Type get_int();
    [JSFunctionAttribute("0", "78")]
public static bool isNaN(object num);
    [JSFunctionAttribute("0", "79")]
public static bool isFinite(double number);
    public static Type get_long();
    public static MathObject get_Math();
    public static NumberConstructor get_Number();
    public static ObjectConstructor get_Object();
    [JSFunctionAttribute("0", "80")]
public static double parseFloat(object string);
    [JSFunctionAttribute("0", "81")]
public static double parseInt(object string, object radix);
    public static ErrorConstructor get_RangeError();
    public static ErrorConstructor get_ReferenceError();
    public static RegExpConstructor get_RegExp();
    [JSFunctionAttribute("0", "82")]
public static string ScriptEngine();
    [JSFunctionAttribute("0", "83")]
public static int ScriptEngineBuildVersion();
    [JSFunctionAttribute("0", "84")]
public static int ScriptEngineMajorVersion();
    [JSFunctionAttribute("0", "85")]
public static int ScriptEngineMinorVersion();
    public static Type get_sbyte();
    public static Type get_short();
    public static StringConstructor get_String();
    public static ErrorConstructor get_SyntaxError();
    public static ErrorConstructor get_TypeError();
    [JSFunctionAttribute("0", "86")]
[NotRecommended("unescape")]
public static string unescape(object string);
    public static ErrorConstructor get_URIError();
    public static VBArrayConstructor get_VBArray();
    public static Type get_void();
    public static Type get_uint();
    public static Type get_ulong();
    public static Type get_ushort();
}
public class Microsoft.JScript.Globals : object {
    [ContextStaticAttribute]
public static VsaEngine contextEngine;
    private static Globals();
    [JSFunctionAttribute("16")]
public static ArrayObject ConstructArray(Object[] args);
    public static ArrayObject ConstructArrayLiteral(Object[] args);
}
[ComVisibleAttribute("True")]
public class Microsoft.JScript.GlobalScope : ActivationObject {
    public GlobalScope(GlobalScope parent, VsaEngine engine);
    public sealed virtual FieldInfo AddField(string name);
    private sealed virtual override MethodInfo System.Runtime.InteropServices.Expando.IExpando.AddMethod(string name, Delegate method);
    private sealed virtual override PropertyInfo System.Runtime.InteropServices.Expando.IExpando.AddProperty(string name);
    public virtual object GetDefaultThisObject();
    public virtual FieldInfo GetField(string name, int lexLevel);
    public virtual FieldInfo[] GetFields(BindingFlags bindingAttr);
    public virtual GlobalScope GetGlobalScope();
    public virtual FieldInfo GetLocalField(string name);
    public virtual MemberInfo[] GetMember(string name, BindingFlags bindingAttr);
    public virtual MemberInfo[] GetMembers(BindingFlags bindingAttr);
    public virtual MethodInfo[] GetMethods(BindingFlags bindingAttr);
    public virtual PropertyInfo[] GetProperties(BindingFlags bindingAttr);
    private sealed virtual override void System.Runtime.InteropServices.Expando.IExpando.RemoveMember(MemberInfo m);
}
[AttributeUsageAttribute("320")]
public class Microsoft.JScript.Hide : Attribute {
}
public interface Microsoft.JScript.IActivationObject {
    public abstract virtual object GetDefaultThisObject();
    public abstract virtual GlobalScope GetGlobalScope();
    public abstract virtual FieldInfo GetLocalField(string name);
    public abstract virtual object GetMemberValue(string name, int lexlevel);
    public abstract virtual FieldInfo GetField(string name, int lexLevel);
}
[ComVisibleAttribute("True")]
[GuidAttribute("9E2B453C-6EAA-4329-A619-62E4889C8C8A")]
public interface Microsoft.JScript.IAuthorServices {
    public abstract virtual IColorizeText GetColorizer();
    public abstract virtual IParseText GetCodeSense();
}
[GuidAttribute("DB283E60-7ADB-4cf6-9758-2931893A12FC")]
[ComVisibleAttribute("True")]
public interface Microsoft.JScript.IColorizeText {
    public abstract virtual ITokenEnumerator Colorize(string sourceCode, SourceState state);
    public abstract virtual SourceState GetStateForText(string sourceCode, SourceState currentState);
}
[ComVisibleAttribute("True")]
[GuidAttribute("AA51516D-C0F2-49fe-9D38-61D20456904C")]
public interface Microsoft.JScript.IDebugConvert {
    public abstract virtual object ToPrimitive(object value, TypeCode typeCode, bool truncationPermitted);
    public abstract virtual string ByteToString(byte value, int radix);
    public abstract virtual string SByteToString(sbyte value, int radix);
    public abstract virtual string Int16ToString(short value, int radix);
    public abstract virtual string UInt16ToString(ushort value, int radix);
    public abstract virtual string Int32ToString(int value, int radix);
    public abstract virtual string UInt32ToString(UInt32 value, int radix);
    public abstract virtual string Int64ToString(long value, int radix);
    public abstract virtual string UInt64ToString(ulong value, int radix);
    public abstract virtual string SingleToString(float value);
    public abstract virtual string DoubleToString(double value);
    public abstract virtual string BooleanToString(bool value);
    public abstract virtual string DoubleToDateString(double value);
    public abstract virtual string RegexpToString(string source, bool ignoreCase, bool global, bool multiline);
    public abstract virtual string StringToPrintable(string source);
    public abstract virtual object GetManagedObject(object value);
    public abstract virtual object GetManagedInt64Object(long i);
    public abstract virtual object GetManagedUInt64Object(ulong i);
    public abstract virtual object GetManagedCharObject(ushort i);
    public abstract virtual string GetErrorMessageForHR(int hr, IJSVsaEngine engine);
}
[ComVisibleAttribute("True")]
[GuidAttribute("B370D709-72BD-4696-9825-C4EBADBF98CB")]
public interface Microsoft.JScript.IDebugConvert2 {
    public abstract virtual string DecimalToString(decimal value);
}
[ComVisibleAttribute("True")]
[GuidAttribute("8E93D770-6168-4b68-B896-A71B74C7076A")]
public interface Microsoft.JScript.IDebuggerObject {
    public abstract virtual bool IsCOMObject();
    public abstract virtual bool IsEqual(IDebuggerObject o);
    public abstract virtual bool HasEnumerableMember(string name);
    public abstract virtual bool IsScriptFunction();
    public abstract virtual bool IsScriptObject();
}
[GuidAttribute("59447635-3E26-4873-BF26-05F173B80F5E")]
[ComVisibleAttribute("True")]
public interface Microsoft.JScript.IDebugScriptScope {
    public abstract virtual void SetThisValue(object thisValue);
}
[ComVisibleAttribute("True")]
[GuidAttribute("613CC05D-05F4-4969-B369-5AEEF56E32D0")]
public interface Microsoft.JScript.IDebugType {
    public abstract virtual bool HasInstance(object o);
}
[GuidAttribute("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")]
[ComVisibleAttribute("True")]
public interface Microsoft.JScript.IDebugVsaScriptCodeItem {
    public abstract virtual object Evaluate();
    public abstract virtual bool ParseNamedBreakPoint(string input, String& functionName, Int32& nargs, String& arguments, String& returnType, UInt64& offset);
}
[ComVisibleAttribute("True")]
[GuidAttribute("D1A19408-BB6B-43eb-BB6F-E7CF6AF047D7")]
public interface Microsoft.JScript.IDefineEvent {
    public abstract virtual object AddEvent(string code, int startLine);
}
[ComVisibleAttribute("True")]
[GuidAttribute("BFF6C97F-0705-4394-88B8-A03A4B8B4CD7")]
public interface Microsoft.JScript.IEngine2 {
    public abstract virtual Assembly GetAssembly();
    public abstract virtual void Run(AppDomain domain);
    public abstract virtual bool CompileEmpty();
    public abstract virtual void RunEmpty();
    public abstract virtual void DisconnectEvents();
    public abstract virtual void ConnectEvents();
    public abstract virtual void RegisterEventSource(string name);
    public abstract virtual void Interrupt();
    public abstract virtual void InitVsaEngine(string rootMoniker, IJSVsaSite site);
    public abstract virtual IVsaScriptScope GetGlobalScope();
    public abstract virtual Module GetModule();
    public abstract virtual IJSVsaEngine Clone(AppDomain domain);
    public abstract virtual void Restart();
}
[ComVisibleAttribute("True")]
[GuidAttribute("E93D012C-56BB-4f32-864F-7C75EDA17B14")]
public interface Microsoft.JScript.IErrorHandler {
    public abstract virtual bool OnCompilerError(IVsaFullErrorInfo error);
}
[ComVisibleAttribute("True")]
[GuidAttribute("F062C7FB-53BF-4f0d-B0F6-D66C5948E63F")]
public interface Microsoft.JScript.IMessageReceiver {
    public abstract virtual void Message(string strValue);
}
[GuidAttribute("E0BCF37B-1C24-451c-AC43-40FF86839117")]
[ComVisibleAttribute("True")]
public interface Microsoft.JScript.IMethodsCompletionInfo {
}
public class Microsoft.JScript.Import : AST {
    public static void JScriptImport(string name, VsaEngine engine);
}
public class Microsoft.JScript.In : BinaryOp {
    public static bool JScriptIn(object v1, object v2);
}
public interface Microsoft.JScript.INeedEngine {
    public abstract virtual VsaEngine GetEngine();
    public abstract virtual void SetEngine(VsaEngine engine);
}
public class Microsoft.JScript.Instanceof : BinaryOp {
    public static bool JScriptInstanceof(object v1, object v2);
}
[ComVisibleAttribute("True")]
[GuidAttribute("052019B5-704B-4b99-AEF8-25A11A922B2E")]
public interface Microsoft.JScript.IObjectCompletionInfo {
}
[GuidAttribute("C1468187-3DA1-49df-ADF8-5F8600E59EA8")]
[ComVisibleAttribute("True")]
public interface Microsoft.JScript.IParseText {
    public abstract virtual void Parse(string code, IErrorHandler error);
}
[GuidAttribute("5B807FA1-00CD-46ee-A493-FD80AC944715")]
[ComVisibleAttribute("True")]
public interface Microsoft.JScript.IRedirectOutput {
    public abstract virtual void SetOutputStream(IMessageReceiver output);
}
[GuidAttribute("BFF6C980-0705-4394-88B8-A03A4B8B4CD7")]
[ComVisibleAttribute("True")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.JScript.ISite2 {
    public abstract virtual Object[] GetParentChain(object obj);
}
[ComVisibleAttribute("True")]
[GuidAttribute("0F20D5C8-CBDB-4b64-AB7F-10B158407323")]
public interface Microsoft.JScript.ITokenColorInfo {
    public int StartPosition { get; }
    public int EndPosition { get; }
    public TokenColor Color { get; }
    public abstract virtual int get_StartPosition();
    public abstract virtual int get_EndPosition();
    public abstract virtual TokenColor get_Color();
}
[ComVisibleAttribute("True")]
[GuidAttribute("556BA9E0-BD6A-4837-89F0-C79B14759181")]
public interface Microsoft.JScript.ITokenEnumerator {
    public abstract virtual ITokenColorInfo GetNext();
    public abstract virtual void Reset();
}
[GuidAttribute("DC3691BC-F188-4b67-8338-326671E0F3F6")]
[ComVisibleAttribute("True")]
public interface Microsoft.JScript.IVsaFullErrorInfo {
    public int EndLine { get; }
    public abstract virtual int get_EndLine();
}
[GuidAttribute("E0C0FFE8-7eea-4ee5-b7e4-0080c7eb0b74")]
[InterfaceTypeAttribute("1")]
[ComVisibleAttribute("True")]
public interface Microsoft.JScript.IVsaScriptCodeItem {
    public int StartLine { get; public set; }
    public int StartColumn { get; public set; }
    public abstract virtual int get_StartLine();
    public abstract virtual void set_StartLine(int value);
    public abstract virtual int get_StartColumn();
    public abstract virtual void set_StartColumn(int value);
    public abstract virtual object Execute();
}
[ComVisibleAttribute("True")]
[GuidAttribute("ED4BAE22-2F3C-419a-B487-CF869E716B95")]
public interface Microsoft.JScript.IVsaScriptScope {
    public IVsaScriptScope Parent { get; }
    public abstract virtual IVsaScriptScope get_Parent();
    public abstract virtual IJSVsaItem AddItem(string itemName, JSVsaItemType type);
    public abstract virtual IJSVsaItem GetItem(string itemName);
    public abstract virtual void RemoveItem(string itemName);
    public abstract virtual void RemoveItem(IJSVsaItem item);
    public abstract virtual int GetItemCount();
    public abstract virtual IJSVsaItem GetItemAtIndex(int index);
    public abstract virtual void RemoveItemAtIndex(int index);
    public abstract virtual object GetObject();
    public abstract virtual IJSVsaItem CreateDynamicItem(string itemName, JSVsaItemType type);
}
public interface Microsoft.JScript.IWrappedMember {
    public abstract virtual object GetWrappedObject();
}
[GuidAttribute("0E4EFFC0-2387-11d3-B372-00105A98B7CE")]
[ComVisibleAttribute("True")]
public class Microsoft.JScript.JSAuthor : object {
    public virtual IColorizeText GetColorizer();
    public virtual IParseText GetCodeSense();
}
public enum Microsoft.JScript.JSBuiltin : Enum {
    public int value__;
    public static JSBuiltin None;
    public static JSBuiltin Array_concat;
    public static JSBuiltin Array_join;
    public static JSBuiltin Array_pop;
    public static JSBuiltin Array_push;
    public static JSBuiltin Array_reverse;
    public static JSBuiltin Array_shift;
    public static JSBuiltin Array_slice;
    public static JSBuiltin Array_sort;
    public static JSBuiltin Array_splice;
    public static JSBuiltin Array_toLocaleString;
    public static JSBuiltin Array_toString;
    public static JSBuiltin Array_unshift;
    public static JSBuiltin Boolean_toString;
    public static JSBuiltin Boolean_valueOf;
    public static JSBuiltin Date_getDate;
    public static JSBuiltin Date_getDay;
    public static JSBuiltin Date_getFullYear;
    public static JSBuiltin Date_getHours;
    public static JSBuiltin Date_getMilliseconds;
    public static JSBuiltin Date_getMinutes;
    public static JSBuiltin Date_getMonth;
    public static JSBuiltin Date_getSeconds;
    public static JSBuiltin Date_getTime;
    public static JSBuiltin Date_getTimezoneOffset;
    public static JSBuiltin Date_getUTCDate;
    public static JSBuiltin Date_getUTCDay;
    public static JSBuiltin Date_getUTCFullYear;
    public static JSBuiltin Date_getUTCHours;
    public static JSBuiltin Date_getUTCMilliseconds;
    public static JSBuiltin Date_getUTCMinutes;
    public static JSBuiltin Date_getUTCMonth;
    public static JSBuiltin Date_getUTCSeconds;
    public static JSBuiltin Date_getVarDate;
    public static JSBuiltin Date_getYear;
    public static JSBuiltin Date_parse;
    public static JSBuiltin Date_setDate;
    public static JSBuiltin Date_setFullYear;
    public static JSBuiltin Date_setHours;
    public static JSBuiltin Date_setMinutes;
    public static JSBuiltin Date_setMilliseconds;
    public static JSBuiltin Date_setMonth;
    public static JSBuiltin Date_setSeconds;
    public static JSBuiltin Date_setTime;
    public static JSBuiltin Date_setUTCDate;
    public static JSBuiltin Date_setUTCFullYear;
    public static JSBuiltin Date_setUTCHours;
    public static JSBuiltin Date_setUTCMinutes;
    public static JSBuiltin Date_setUTCMilliseconds;
    public static JSBuiltin Date_setUTCMonth;
    public static JSBuiltin Date_setUTCSeconds;
    public static JSBuiltin Date_setYear;
    public static JSBuiltin Date_toDateString;
    public static JSBuiltin Date_toGMTString;
    public static JSBuiltin Date_toLocaleDateString;
    public static JSBuiltin Date_toLocaleString;
    public static JSBuiltin Date_toLocaleTimeString;
    public static JSBuiltin Date_toString;
    public static JSBuiltin Date_toTimeString;
    public static JSBuiltin Date_toUTCString;
    public static JSBuiltin Date_UTC;
    public static JSBuiltin Date_valueOf;
    public static JSBuiltin Enumerator_atEnd;
    public static JSBuiltin Enumerator_item;
    public static JSBuiltin Enumerator_moveFirst;
    public static JSBuiltin Enumerator_moveNext;
    public static JSBuiltin Error_toString;
    public static JSBuiltin Function_apply;
    public static JSBuiltin Function_call;
    public static JSBuiltin Function_toString;
    public static JSBuiltin Global_CollectGarbage;
    public static JSBuiltin Global_decodeURI;
    public static JSBuiltin Global_decodeURIComponent;
    public static JSBuiltin Global_encodeURI;
    public static JSBuiltin Global_encodeURIComponent;
    public static JSBuiltin Global_escape;
    public static JSBuiltin Global_eval;
    public static JSBuiltin Global_GetObject;
    public static JSBuiltin Global_isNaN;
    public static JSBuiltin Global_isFinite;
    public static JSBuiltin Global_parseFloat;
    public static JSBuiltin Global_parseInt;
    public static JSBuiltin Global_ScriptEngine;
    public static JSBuiltin Global_ScriptEngineBuildVersion;
    public static JSBuiltin Global_ScriptEngineMajorVersion;
    public static JSBuiltin Global_ScriptEngineMinorVersion;
    public static JSBuiltin Global_unescape;
    public static JSBuiltin Math_abs;
    public static JSBuiltin Math_acos;
    public static JSBuiltin Math_asin;
    public static JSBuiltin Math_atan;
    public static JSBuiltin Math_atan2;
    public static JSBuiltin Math_ceil;
    public static JSBuiltin Math_cos;
    public static JSBuiltin Math_exp;
    public static JSBuiltin Math_floor;
    public static JSBuiltin Math_log;
    public static JSBuiltin Math_max;
    public static JSBuiltin Math_min;
    public static JSBuiltin Math_pow;
    public static JSBuiltin Math_random;
    public static JSBuiltin Math_round;
    public static JSBuiltin Math_sin;
    public static JSBuiltin Math_sqrt;
    public static JSBuiltin Math_tan;
    public static JSBuiltin Number_toExponential;
    public static JSBuiltin Number_toFixed;
    public static JSBuiltin Number_toLocaleString;
    public static JSBuiltin Number_toPrecision;
    public static JSBuiltin Number_toString;
    public static JSBuiltin Number_valueOf;
    public static JSBuiltin Object_hasOwnProperty;
    public static JSBuiltin Object_isPrototypeOf;
    public static JSBuiltin Object_propertyIsEnumerable;
    public static JSBuiltin Object_toLocaleString;
    public static JSBuiltin Object_toString;
    public static JSBuiltin Object_valueOf;
    public static JSBuiltin RegExp_compile;
    public static JSBuiltin RegExp_exec;
    public static JSBuiltin RegExp_test;
    public static JSBuiltin RegExp_toString;
    public static JSBuiltin String_anchor;
    public static JSBuiltin String_big;
    public static JSBuiltin String_blink;
    public static JSBuiltin String_bold;
    public static JSBuiltin String_charAt;
    public static JSBuiltin String_charCodeAt;
    public static JSBuiltin String_concat;
    public static JSBuiltin String_fixed;
    public static JSBuiltin String_fontcolor;
    public static JSBuiltin String_fontsize;
    public static JSBuiltin String_fromCharCode;
    public static JSBuiltin String_indexOf;
    public static JSBuiltin String_italics;
    public static JSBuiltin String_lastIndexOf;
    public static JSBuiltin String_link;
    public static JSBuiltin String_localeCompare;
    public static JSBuiltin String_match;
    public static JSBuiltin String_replace;
    public static JSBuiltin String_search;
    public static JSBuiltin String_slice;
    public static JSBuiltin String_small;
    public static JSBuiltin String_split;
    public static JSBuiltin String_strike;
    public static JSBuiltin String_sub;
    public static JSBuiltin String_substr;
    public static JSBuiltin String_substring;
    public static JSBuiltin String_sup;
    public static JSBuiltin String_toLocaleLowerCase;
    public static JSBuiltin String_toLocaleUpperCase;
    public static JSBuiltin String_toLowerCase;
    public static JSBuiltin String_toString;
    public static JSBuiltin String_toUpperCase;
    public static JSBuiltin String_valueOf;
    public static JSBuiltin VBArray_dimensions;
    public static JSBuiltin VBArray_getItem;
    public static JSBuiltin VBArray_lbound;
    public static JSBuiltin VBArray_toArray;
    public static JSBuiltin VBArray_ubound;
}
public class Microsoft.JScript.JSConstructor : ConstructorInfo {
    public MethodAttributes Attributes { get; }
    public string Name { get; }
    public Type DeclaringType { get; }
    public MemberTypes MemberType { get; }
    public RuntimeMethodHandle MethodHandle { get; }
    public Type ReflectedType { get; }
    public virtual MethodAttributes get_Attributes();
    public virtual string get_Name();
    public virtual Type get_DeclaringType();
    public virtual Object[] GetCustomAttributes(Type t, bool inherit);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual MethodImplAttributes GetMethodImplementationFlags();
    public virtual ParameterInfo[] GetParameters();
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public virtual object Invoke(BindingFlags options, Binder binder, Object[] parameters, CultureInfo culture);
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public virtual object Invoke(object obj, BindingFlags options, Binder binder, Object[] parameters, CultureInfo culture);
    public virtual bool IsDefined(Type type, bool inherit);
    public virtual MemberTypes get_MemberType();
    public virtual RuntimeMethodHandle get_MethodHandle();
    public virtual Type get_ReflectedType();
}
[DesignerCategoryAttribute("code")]
public class Microsoft.JScript.JScriptCodeProvider : CodeDomProvider {
    public string FileExtension { get; }
    public virtual ICodeGenerator CreateGenerator();
    public virtual ICodeCompiler CreateCompiler();
    public virtual string get_FileExtension();
}
public class Microsoft.JScript.JScriptException : ApplicationException {
    public string SourceMoniker { get; }
    public int StartColumn { get; }
    public int Column { get; }
    private string Microsoft.JScript.Vsa.IJSVsaError.Description { get; }
    public string Description { get; }
    public int EndLine { get; }
    public int EndColumn { get; }
    private int Microsoft.JScript.Vsa.IJSVsaError.Number { get; }
    public int Number { get; }
    public int ErrorNumber { get; }
    public int Line { get; }
    public string LineText { get; }
    public string Message { get; }
    public int Severity { get; }
    public IJSVsaItem SourceItem { get; }
    public string StackTrace { get; }
    public JScriptException(string m);
    public JScriptException(string m, Exception e);
    public JScriptException(JSError errorNumber);
    protected JScriptException(SerializationInfo info, StreamingContext context);
    private static JScriptException();
    public sealed virtual string get_SourceMoniker();
    public sealed virtual int get_StartColumn();
    public int get_Column();
    private sealed virtual override string Microsoft.JScript.Vsa.IJSVsaError.get_Description();
    public string get_Description();
    public sealed virtual int get_EndLine();
    public sealed virtual int get_EndColumn();
    private sealed virtual override int Microsoft.JScript.Vsa.IJSVsaError.get_Number();
    public int get_Number();
    public int get_ErrorNumber();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public sealed virtual int get_Line();
    public sealed virtual string get_LineText();
    public virtual string get_Message();
    public sealed virtual int get_Severity();
    public sealed virtual IJSVsaItem get_SourceItem();
    public virtual string get_StackTrace();
}
[GuidAttribute("268CA962-2FEF-3152-BA46-E18658B7FA4F")]
[ComVisibleAttribute("True")]
public enum Microsoft.JScript.JSError : Enum {
    public int value__;
    public static JSError NoError;
    public static JSError InvalidCall;
    public static JSError OutOfMemory;
    public static JSError TypeMismatch;
    public static JSError OutOfStack;
    public static JSError InternalError;
    public static JSError FileNotFound;
    public static JSError NeedObject;
    public static JSError CantCreateObject;
    public static JSError OLENoPropOrMethod;
    public static JSError ActionNotSupported;
    public static JSError NotCollection;
    public static JSError SyntaxError;
    public static JSError NoColon;
    public static JSError NoSemicolon;
    public static JSError NoLeftParen;
    public static JSError NoRightParen;
    public static JSError NoRightBracket;
    public static JSError NoLeftCurly;
    public static JSError NoRightCurly;
    public static JSError NoIdentifier;
    public static JSError NoEqual;
    public static JSError IllegalChar;
    public static JSError UnterminatedString;
    public static JSError NoCommentEnd;
    public static JSError BadReturn;
    public static JSError BadBreak;
    public static JSError BadContinue;
    public static JSError BadHexDigit;
    public static JSError NoWhile;
    public static JSError BadLabel;
    public static JSError NoLabel;
    public static JSError DupDefault;
    public static JSError NoMemberIdentifier;
    public static JSError NoCcEnd;
    public static JSError CcOff;
    public static JSError NotConst;
    public static JSError NoAt;
    public static JSError NoCatch;
    public static JSError InvalidElse;
    public static JSError NoComma;
    public static JSError DupVisibility;
    public static JSError IllegalVisibility;
    public static JSError BadSwitch;
    public static JSError CcInvalidEnd;
    public static JSError CcInvalidElse;
    public static JSError CcInvalidElif;
    public static JSError ErrEOF;
    public static JSError IncompatibleVisibility;
    public static JSError ClassNotAllowed;
    public static JSError NeedCompileTimeConstant;
    public static JSError DuplicateName;
    public static JSError NeedType;
    public static JSError NotInsideClass;
    public static JSError InvalidPositionDirective;
    public static JSError MustBeEOL;
    public static JSError WrongDirective;
    public static JSError CannotNestPositionDirective;
    public static JSError CircularDefinition;
    public static JSError Deprecated;
    public static JSError IllegalUseOfThis;
    public static JSError NotAccessible;
    public static JSError CannotUseNameOfClass;
    public static JSError MustImplementMethod;
    public static JSError NeedInterface;
    public static JSError UnreachableCatch;
    public static JSError TypeCannotBeExtended;
    public static JSError UndeclaredVariable;
    public static JSError VariableLeftUninitialized;
    public static JSError KeywordUsedAsIdentifier;
    public static JSError NotAllowedInSuperConstructorCall;
    public static JSError NotMeantToBeCalledDirectly;
    public static JSError GetAndSetAreInconsistent;
    public static JSError InvalidCustomAttribute;
    public static JSError InvalidCustomAttributeArgument;
    public static JSError InvalidCustomAttributeClassOrCtor;
    public static JSError TooManyParameters;
    public static JSError AmbiguousBindingBecauseOfWith;
    public static JSError AmbiguousBindingBecauseOfEval;
    public static JSError NoSuchMember;
    public static JSError ItemNotAllowedOnExpandoClass;
    public static JSError MethodNotAllowedOnExpandoClass;
    public static JSError MethodClashOnExpandoSuperClass;
    public static JSError BaseClassIsExpandoAlready;
    public static JSError AbstractCannotBePrivate;
    public static JSError NotIndexable;
    public static JSError StaticMissingInStaticInit;
    public static JSError MissingConstructForAttributes;
    public static JSError OnlyClassesAllowed;
    public static JSError ExpandoClassShouldNotImpleEnumerable;
    public static JSError NonCLSCompliantMember;
    public static JSError NotDeletable;
    public static JSError PackageExpected;
    public static JSError UselessExpression;
    public static JSError HidesParentMember;
    public static JSError CannotChangeVisibility;
    public static JSError HidesAbstractInBase;
    public static JSError NewNotSpecifiedInMethodDeclaration;
    public static JSError MethodInBaseIsNotVirtual;
    public static JSError NoMethodInBaseToNew;
    public static JSError DifferentReturnTypeFromBase;
    public static JSError ClashWithProperty;
    public static JSError OverrideAndHideUsedTogether;
    public static JSError InvalidLanguageOption;
    public static JSError NoMethodInBaseToOverride;
    public static JSError NotValidForConstructor;
    public static JSError CannotReturnValueFromVoidFunction;
    public static JSError AmbiguousMatch;
    public static JSError AmbiguousConstructorCall;
    public static JSError SuperClassConstructorNotAccessible;
    public static JSError OctalLiteralsAreDeprecated;
    public static JSError VariableMightBeUnitialized;
    public static JSError NotOKToCallSuper;
    public static JSError IllegalUseOfSuper;
    public static JSError BadWayToLeaveFinally;
    public static JSError NoCommaOrTypeDefinitionError;
    public static JSError AbstractWithBody;
    public static JSError NoRightParenOrComma;
    public static JSError NoRightBracketOrComma;
    public static JSError ExpressionExpected;
    public static JSError UnexpectedSemicolon;
    public static JSError TooManyTokensSkipped;
    public static JSError BadVariableDeclaration;
    public static JSError BadFunctionDeclaration;
    public static JSError BadPropertyDeclaration;
    public static JSError DoesNotHaveAnAddress;
    public static JSError TooFewParameters;
    public static JSError UselessAssignment;
    public static JSError SuspectAssignment;
    public static JSError SuspectSemicolon;
    public static JSError ImpossibleConversion;
    public static JSError FinalPrecludesAbstract;
    public static JSError NeedInstance;
    public static JSError CannotBeAbstract;
    public static JSError InvalidBaseTypeForEnum;
    public static JSError CannotInstantiateAbstractClass;
    public static JSError ArrayMayBeCopied;
    public static JSError AbstractCannotBeStatic;
    public static JSError StaticIsAlreadyFinal;
    public static JSError StaticMethodsCannotOverride;
    public static JSError StaticMethodsCannotHide;
    public static JSError ExpandoPrecludesOverride;
    public static JSError IllegalParamArrayAttribute;
    public static JSError ExpandoPrecludesAbstract;
    public static JSError ShouldBeAbstract;
    public static JSError BadModifierInInterface;
    public static JSError VarIllegalInInterface;
    public static JSError InterfaceIllegalInInterface;
    public static JSError NoVarInEnum;
    public static JSError InvalidImport;
    public static JSError EnumNotAllowed;
    public static JSError InvalidCustomAttributeTarget;
    public static JSError PackageInWrongContext;
    public static JSError ConstructorMayNotHaveReturnType;
    public static JSError OnlyClassesAndPackagesAllowed;
    public static JSError InvalidDebugDirective;
    public static JSError CustomAttributeUsedMoreThanOnce;
    public static JSError NestedInstanceTypeCannotBeExtendedByStatic;
    public static JSError PropertyLevelAttributesMustBeOnGetter;
    public static JSError BadThrow;
    public static JSError ParamListNotLast;
    public static JSError NoSuchType;
    public static JSError BadOctalLiteral;
    public static JSError InstanceNotAccessibleFromStatic;
    public static JSError StaticRequiresTypeName;
    public static JSError NonStaticWithTypeName;
    public static JSError NoSuchStaticMember;
    public static JSError SuspectLoopCondition;
    public static JSError ExpectedAssembly;
    public static JSError AssemblyAttributesMustBeGlobal;
    public static JSError ExpandoPrecludesStatic;
    public static JSError DuplicateMethod;
    public static JSError NotAnExpandoFunction;
    public static JSError NotValidVersionString;
    public static JSError ExecutablesCannotBeLocalized;
    public static JSError StringConcatIsSlow;
    public static JSError CcInvalidInDebugger;
    public static JSError ExpandoMustBePublic;
    public static JSError DelegatesShouldNotBeExplicitlyConstructed;
    public static JSError ImplicitlyReferencedAssemblyNotFound;
    public static JSError PossibleBadConversion;
    public static JSError PossibleBadConversionFromString;
    public static JSError InvalidResource;
    public static JSError WrongUseOfAddressOf;
    public static JSError NonCLSCompliantType;
    public static JSError MemberTypeCLSCompliantMismatch;
    public static JSError TypeAssemblyCLSCompliantMismatch;
    public static JSError IncompatibleAssemblyReference;
    public static JSError InvalidAssemblyKeyFile;
    public static JSError TypeNameTooLong;
    public static JSError MemberInitializerCannotContainFuncExpr;
    public static JSError CantAssignThis;
    public static JSError NumberExpected;
    public static JSError FunctionExpected;
    public static JSError CannotAssignToFunctionResult;
    public static JSError StringExpected;
    public static JSError DateExpected;
    public static JSError ObjectExpected;
    public static JSError IllegalAssignment;
    public static JSError UndefinedIdentifier;
    public static JSError BooleanExpected;
    public static JSError VBArrayExpected;
    public static JSError EnumeratorExpected;
    public static JSError RegExpExpected;
    public static JSError RegExpSyntax;
    public static JSError UncaughtException;
    public static JSError InvalidPrototype;
    public static JSError URIEncodeError;
    public static JSError URIDecodeError;
    public static JSError FractionOutOfRange;
    public static JSError PrecisionOutOfRange;
    public static JSError ArrayLengthConstructIncorrect;
    public static JSError ArrayLengthAssignIncorrect;
    public static JSError NeedArrayObject;
    public static JSError NoConstructor;
    public static JSError IllegalEval;
    public static JSError NotYetImplemented;
    public static JSError MustProvideNameForNamedParameter;
    public static JSError DuplicateNamedParameter;
    public static JSError MissingNameParameter;
    public static JSError MoreNamedParametersThanArguments;
    public static JSError NonSupportedInDebugger;
    public static JSError AssignmentToReadOnly;
    public static JSError WriteOnlyProperty;
    public static JSError IncorrectNumberOfIndices;
    public static JSError RefParamsNonSupportedInDebugger;
    public static JSError CannotCallSecurityMethodLateBound;
    public static JSError CannotUseStaticSecurityAttribute;
    public static JSError NonClsException;
    public static JSError FuncEvalAborted;
    public static JSError FuncEvalTimedout;
    public static JSError FuncEvalThreadSuspended;
    public static JSError FuncEvalThreadSleepWaitJoin;
    public static JSError FuncEvalBadThreadState;
    public static JSError FuncEvalBadThreadNotStarted;
    public static JSError NoFuncEvalAllowed;
    public static JSError FuncEvalBadLocation;
    public static JSError FuncEvalWebMethod;
    public static JSError StaticVarNotAvailable;
    public static JSError TypeObjectNotAvailable;
    public static JSError ExceptionFromHResult;
    public static JSError SideEffectsDisallowed;
}
public abstract class Microsoft.JScript.JSField : FieldInfo {
    public FieldAttributes Attributes { get; }
    public Type DeclaringType { get; }
    public RuntimeFieldHandle FieldHandle { get; }
    public Type FieldType { get; }
    public MemberTypes MemberType { get; }
    public string Name { get; }
    public Type ReflectedType { get; }
    public virtual FieldAttributes get_Attributes();
    public virtual Type get_DeclaringType();
    public virtual RuntimeFieldHandle get_FieldHandle();
    public virtual Type get_FieldType();
    public virtual Object[] GetCustomAttributes(Type t, bool inherit);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual bool IsDefined(Type type, bool inherit);
    public virtual MemberTypes get_MemberType();
    public virtual string get_Name();
    public virtual Type get_ReflectedType();
}
public class Microsoft.JScript.JSFieldInfo : FieldInfo {
    public FieldAttributes Attributes { get; }
    public Type DeclaringType { get; }
    public RuntimeFieldHandle FieldHandle { get; }
    public Type FieldType { get; }
    public MemberTypes MemberType { get; }
    public string Name { get; }
    public Type ReflectedType { get; }
    public virtual FieldAttributes get_Attributes();
    public virtual Type get_DeclaringType();
    public virtual RuntimeFieldHandle get_FieldHandle();
    public virtual Type get_FieldType();
    public virtual Object[] GetCustomAttributes(Type t, bool inherit);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual object GetValue(object obj);
    public virtual bool IsDefined(Type type, bool inherit);
    public virtual MemberTypes get_MemberType();
    public virtual string get_Name();
    public virtual Type get_ReflectedType();
    public void SetValue(object obj, object value);
    public virtual void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo culture);
}
[AttributeUsageAttribute("96")]
public class Microsoft.JScript.JSFunctionAttribute : Attribute {
    public JSFunctionAttribute(JSFunctionAttributeEnum value);
    public JSFunctionAttribute(JSFunctionAttributeEnum value, JSBuiltin builtinFunction);
    public JSFunctionAttributeEnum GetAttributeValue();
}
[FlagsAttribute]
[GuidAttribute("BA5ED019-F669-3C35-93AC-3ABF776B62B3")]
[ComVisibleAttribute("True")]
public enum Microsoft.JScript.JSFunctionAttributeEnum : Enum {
    public int value__;
    public static JSFunctionAttributeEnum None;
    public static JSFunctionAttributeEnum HasArguments;
    public static JSFunctionAttributeEnum HasThisObject;
    public static JSFunctionAttributeEnum IsNested;
    public static JSFunctionAttributeEnum HasStackFrame;
    public static JSFunctionAttributeEnum HasVarArgs;
    public static JSFunctionAttributeEnum HasEngine;
    public static JSFunctionAttributeEnum IsExpandoMethod;
    public static JSFunctionAttributeEnum IsInstanceNestedClassConstructor;
    public static JSFunctionAttributeEnum ClassicFunction;
    public static JSFunctionAttributeEnum NestedFunction;
    public static JSFunctionAttributeEnum ClassicNestedFunction;
}
public class Microsoft.JScript.JSLocalField : JSVariableField {
    public Type FieldType { get; }
    public JSLocalField(string name, RuntimeTypeHandle handle, int slotNumber);
    public virtual Type get_FieldType();
    public virtual object GetValue(object obj);
    public virtual void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo locale);
}
[ComVisibleAttribute("True")]
[GuidAttribute("561AC104-8869-4368-902F-4E0D7DDEDDDD")]
public abstract class Microsoft.JScript.JSMethod : MethodInfo {
    public MemberTypes MemberType { get; }
    public RuntimeMethodHandle MethodHandle { get; }
    public Type ReflectedType { get; }
    public ICustomAttributeProvider ReturnTypeCustomAttributes { get; }
    public virtual MethodInfo GetBaseDefinition();
    public virtual Object[] GetCustomAttributes(Type t, bool inherit);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual MethodImplAttributes GetMethodImplementationFlags();
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public virtual object Invoke(object obj, BindingFlags options, Binder binder, Object[] parameters, CultureInfo culture);
    public sealed virtual bool IsDefined(Type type, bool inherit);
    public virtual MemberTypes get_MemberType();
    public virtual RuntimeMethodHandle get_MethodHandle();
    public virtual Type get_ReflectedType();
    public virtual ICustomAttributeProvider get_ReturnTypeCustomAttributes();
}
public class Microsoft.JScript.JSMethodInfo : MethodInfo {
    public MethodAttributes Attributes { get; }
    public Type DeclaringType { get; }
    public MemberTypes MemberType { get; }
    public RuntimeMethodHandle MethodHandle { get; }
    public string Name { get; }
    public Type ReflectedType { get; }
    public Type ReturnType { get; }
    public ICustomAttributeProvider ReturnTypeCustomAttributes { get; }
    public virtual MethodAttributes get_Attributes();
    public virtual Type get_DeclaringType();
    public virtual MethodInfo GetBaseDefinition();
    public sealed virtual Object[] GetCustomAttributes(bool inherit);
    public sealed virtual Object[] GetCustomAttributes(Type type, bool inherit);
    public virtual MethodImplAttributes GetMethodImplementationFlags();
    public virtual ParameterInfo[] GetParameters();
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public virtual object Invoke(object obj, BindingFlags options, Binder binder, Object[] parameters, CultureInfo culture);
    public sealed virtual bool IsDefined(Type type, bool inherit);
    public virtual MemberTypes get_MemberType();
    public virtual RuntimeMethodHandle get_MethodHandle();
    public virtual string get_Name();
    public virtual Type get_ReflectedType();
    public virtual Type get_ReturnType();
    public virtual ICustomAttributeProvider get_ReturnTypeCustomAttributes();
    public virtual string ToString();
}
public class Microsoft.JScript.JSObject : ScriptObject {
    protected ArrayList field_table;
    public sealed virtual FieldInfo AddField(string name);
    private sealed virtual override MethodInfo System.Runtime.InteropServices.Expando.IExpando.AddMethod(string name, Delegate method);
    private sealed virtual override PropertyInfo System.Runtime.InteropServices.Expando.IExpando.AddProperty(string name);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual MemberInfo[] GetMember(string name, BindingFlags bindingAttr);
    public virtual MemberInfo[] GetMembers(BindingFlags bindingAttr);
    private sealed virtual override void System.Runtime.InteropServices.Expando.IExpando.RemoveMember(MemberInfo m);
    public void SetMemberValue2(string name, object value);
    public virtual string ToString();
}
public class Microsoft.JScript.JSParser : object {
    public JSParser(Context context);
    public ScriptBlock Parse();
    public Block ParseEvalBody();
}
public class Microsoft.JScript.JSPrototypeObject : JSObject {
    public object constructor;
}
public class Microsoft.JScript.JSScanner : object {
    public JSScanner(Context sourceContext);
    private static JSScanner();
    public void SetAuthoringMode(bool mode);
    public void SetSource(Context sourceContext);
    public void GetNextToken();
    public int GetCurrentPosition(bool absolute);
    public int GetCurrentLine();
    public int GetStartLinePosition();
    public string GetStringLiteral();
    public string GetSourceCode();
    public bool GotEndOfLine();
    public int SkipMultiLineComment();
    public static bool IsOperator(JSToken token);
    public static bool IsKeyword(JSToken token);
}
public enum Microsoft.JScript.JSToken : Enum {
    public int value__;
    public static JSToken None;
    public static JSToken EndOfFile;
    public static JSToken If;
    public static JSToken For;
    public static JSToken Do;
    public static JSToken While;
    public static JSToken Continue;
    public static JSToken Break;
    public static JSToken Return;
    public static JSToken Import;
    public static JSToken With;
    public static JSToken Switch;
    public static JSToken Throw;
    public static JSToken Try;
    public static JSToken Package;
    public static JSToken Internal;
    public static JSToken Abstract;
    public static JSToken Public;
    public static JSToken Static;
    public static JSToken Private;
    public static JSToken Protected;
    public static JSToken Final;
    public static JSToken Event;
    public static JSToken Var;
    public static JSToken Const;
    public static JSToken Class;
    public static JSToken Function;
    public static JSToken LeftCurly;
    public static JSToken Semicolon;
    public static JSToken Null;
    public static JSToken True;
    public static JSToken False;
    public static JSToken This;
    public static JSToken Identifier;
    public static JSToken StringLiteral;
    public static JSToken IntegerLiteral;
    public static JSToken NumericLiteral;
    public static JSToken LeftParen;
    public static JSToken LeftBracket;
    public static JSToken AccessField;
    public static JSToken FirstOp;
    public static JSToken LogicalNot;
    public static JSToken BitwiseNot;
    public static JSToken Delete;
    public static JSToken Void;
    public static JSToken Typeof;
    public static JSToken Increment;
    public static JSToken Decrement;
    public static JSToken FirstBinaryOp;
    public static JSToken Plus;
    public static JSToken Minus;
    public static JSToken LogicalOr;
    public static JSToken LogicalAnd;
    public static JSToken BitwiseOr;
    public static JSToken BitwiseXor;
    public static JSToken BitwiseAnd;
    public static JSToken Equal;
    public static JSToken NotEqual;
    public static JSToken StrictEqual;
    public static JSToken StrictNotEqual;
    public static JSToken GreaterThan;
    public static JSToken LessThan;
    public static JSToken LessThanEqual;
    public static JSToken GreaterThanEqual;
    public static JSToken LeftShift;
    public static JSToken RightShift;
    public static JSToken UnsignedRightShift;
    public static JSToken Multiply;
    public static JSToken Divide;
    public static JSToken Modulo;
    public static JSToken LastPPOperator;
    public static JSToken Instanceof;
    public static JSToken In;
    public static JSToken Assign;
    public static JSToken PlusAssign;
    public static JSToken MinusAssign;
    public static JSToken MultiplyAssign;
    public static JSToken DivideAssign;
    public static JSToken BitwiseAndAssign;
    public static JSToken BitwiseOrAssign;
    public static JSToken BitwiseXorAssign;
    public static JSToken ModuloAssign;
    public static JSToken LeftShiftAssign;
    public static JSToken RightShiftAssign;
    public static JSToken UnsignedRightShiftAssign;
    public static JSToken LastAssign;
    public static JSToken LastBinaryOp;
    public static JSToken ConditionalIf;
    public static JSToken Colon;
    public static JSToken Comma;
    public static JSToken LastOp;
    public static JSToken Case;
    public static JSToken Catch;
    public static JSToken Debugger;
    public static JSToken Default;
    public static JSToken Else;
    public static JSToken Export;
    public static JSToken Extends;
    public static JSToken Finally;
    public static JSToken Get;
    public static JSToken Implements;
    public static JSToken Interface;
    public static JSToken New;
    public static JSToken Set;
    public static JSToken Super;
    public static JSToken RightParen;
    public static JSToken RightCurly;
    public static JSToken RightBracket;
    public static JSToken PreProcessorConstant;
    public static JSToken Comment;
    public static JSToken UnterminatedComment;
    public static JSToken Assert;
    public static JSToken Boolean;
    public static JSToken Byte;
    public static JSToken Char;
    public static JSToken Decimal;
    public static JSToken Double;
    public static JSToken DoubleColon;
    public static JSToken Enum;
    public static JSToken Ensure;
    public static JSToken Float;
    public static JSToken Goto;
    public static JSToken Int;
    public static JSToken Invariant;
    public static JSToken Long;
    public static JSToken Namespace;
    public static JSToken Native;
    public static JSToken Require;
    public static JSToken Sbyte;
    public static JSToken Short;
    public static JSToken Synchronized;
    public static JSToken Transient;
    public static JSToken Throws;
    public static JSToken ParamArray;
    public static JSToken Volatile;
    public static JSToken Ushort;
    public static JSToken Uint;
    public static JSToken Ulong;
    public static JSToken Use;
    public static JSToken EndOfLine;
    public static JSToken PreProcessDirective;
}
public abstract class Microsoft.JScript.JSVariableField : JSField {
    public FieldAttributes Attributes { get; }
    public Type DeclaringType { get; }
    public Type FieldType { get; }
    public string Name { get; }
    public virtual FieldAttributes get_Attributes();
    public virtual Type get_DeclaringType();
    public virtual Type get_FieldType();
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual string get_Name();
}
public class Microsoft.JScript.LateBinding : object {
    public object obj;
    public LateBinding(string name);
    public LateBinding(string name, object obj);
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public object Call(Object[] arguments, bool construct, bool brackets, VsaEngine engine);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public static object CallValue(object thisob, object val, Object[] arguments, bool construct, bool brackets, VsaEngine engine);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public static object CallValue2(object val, object thisob, Object[] arguments, bool construct, bool brackets, VsaEngine engine);
    public bool Delete();
    public static bool DeleteMember(object obj, string name);
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public object GetNonMissingValue();
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public object GetValue2();
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public static void SetIndexedPropertyValueStatic(object obj, Object[] arguments, object value);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public void SetValue(object value);
}
public class Microsoft.JScript.LenientArrayPrototype : ArrayPrototype {
    public object constructor;
    public object concat;
    public object join;
    public object pop;
    public object push;
    public object reverse;
    public object shift;
    public object slice;
    public object sort;
    public object splice;
    public object unshift;
    public object toLocaleString;
    public object toString;
}
public class Microsoft.JScript.LenientBooleanPrototype : BooleanPrototype {
    public object constructor;
    public object toString;
    public object valueOf;
}
public class Microsoft.JScript.LenientDateConstructor : DateConstructor {
    public object parse;
    public object UTC;
}
public class Microsoft.JScript.LenientDatePrototype : DatePrototype {
    public object constructor;
    public object getTime;
    [NotRecommended("getYear")]
public object getYear;
    public object getFullYear;
    public object getUTCFullYear;
    public object getMonth;
    public object getUTCMonth;
    public object getDate;
    public object getUTCDate;
    public object getDay;
    public object getUTCDay;
    public object getHours;
    public object getUTCHours;
    public object getMinutes;
    public object getUTCMinutes;
    public object getSeconds;
    public object getUTCSeconds;
    public object getMilliseconds;
    public object getUTCMilliseconds;
    public object getVarDate;
    public object getTimezoneOffset;
    public object setTime;
    public object setMilliseconds;
    public object setUTCMilliseconds;
    public object setSeconds;
    public object setUTCSeconds;
    public object setMinutes;
    public object setUTCMinutes;
    public object setHours;
    public object setUTCHours;
    public object setDate;
    public object setUTCDate;
    public object setMonth;
    public object setUTCMonth;
    public object setFullYear;
    public object setUTCFullYear;
    [NotRecommended("setYear")]
public object setYear;
    [NotRecommended("toGMTString")]
public object toGMTString;
    public object toDateString;
    public object toLocaleDateString;
    public object toLocaleString;
    public object toLocaleTimeString;
    public object toString;
    public object toTimeString;
    public object toUTCString;
    public object valueOf;
}
public class Microsoft.JScript.LenientEnumeratorPrototype : EnumeratorPrototype {
    public object constructor;
    public object atEnd;
    public object item;
    public object moveFirst;
    public object moveNext;
}
public class Microsoft.JScript.LenientErrorPrototype : ErrorPrototype {
    public object constructor;
    public object name;
    public object toString;
}
public class Microsoft.JScript.LenientFunctionPrototype : FunctionPrototype {
    public object constructor;
    public object apply;
    public object call;
    public object toString;
}
public class Microsoft.JScript.LenientGlobalObject : GlobalObject {
    public object Infinity;
    public object NaN;
    public object undefined;
    public object decodeURI;
    public object decodeURIComponent;
    public object encodeURI;
    public object encodeURIComponent;
    [NotRecommended("escape")]
public object escape;
    public object eval;
    public object isNaN;
    public object isFinite;
    public object parseInt;
    public object parseFloat;
    public object GetObject;
    public object ScriptEngine;
    public object ScriptEngineBuildVersion;
    public object ScriptEngineMajorVersion;
    public object ScriptEngineMinorVersion;
    [NotRecommended("unescape")]
public object unescape;
    public object boolean;
    public object byte;
    public object char;
    public object decimal;
    public object double;
    public object float;
    public object int;
    public object long;
    public object sbyte;
    public object short;
    public object void;
    public object uint;
    public object ulong;
    public object ushort;
    public object ActiveXObject { get; public set; }
    public object Array { get; public set; }
    public object Boolean { get; public set; }
    public object Date { get; public set; }
    public object Enumerator { get; public set; }
    public object Error { get; public set; }
    public object EvalError { get; public set; }
    public object Function { get; public set; }
    public object Math { get; public set; }
    public object Number { get; public set; }
    public object Object { get; public set; }
    public object RangeError { get; public set; }
    public object ReferenceError { get; public set; }
    public object RegExp { get; public set; }
    public object String { get; public set; }
    public object SyntaxError { get; public set; }
    public object TypeError { get; public set; }
    public object URIError { get; public set; }
    public object VBArray { get; public set; }
    public object get_ActiveXObject();
    public void set_ActiveXObject(object value);
    public object get_Array();
    public void set_Array(object value);
    public object get_Boolean();
    public void set_Boolean(object value);
    public object get_Date();
    public void set_Date(object value);
    public object get_Enumerator();
    public void set_Enumerator(object value);
    public object get_Error();
    public void set_Error(object value);
    public object get_EvalError();
    public void set_EvalError(object value);
    public object get_Function();
    public void set_Function(object value);
    public object get_Math();
    public void set_Math(object value);
    public object get_Number();
    public void set_Number(object value);
    public object get_Object();
    public void set_Object(object value);
    public object get_RangeError();
    public void set_RangeError(object value);
    public object get_ReferenceError();
    public void set_ReferenceError(object value);
    public object get_RegExp();
    public void set_RegExp(object value);
    public object get_String();
    public void set_String(object value);
    public object get_SyntaxError();
    public void set_SyntaxError(object value);
    public object get_TypeError();
    public void set_TypeError(object value);
    public object get_URIError();
    public void set_URIError(object value);
    public object get_VBArray();
    public void set_VBArray(object value);
}
public class Microsoft.JScript.LenientMathObject : MathObject {
    public static double E;
    public static double LN10;
    public static double LN2;
    public static double LOG2E;
    public static double LOG10E;
    public static double PI;
    public static double SQRT1_2;
    public static double SQRT2;
    public object abs;
    public object acos;
    public object asin;
    public object atan;
    public object atan2;
    public object ceil;
    public object cos;
    public object exp;
    public object floor;
    public object log;
    public object max;
    public object min;
    public object pow;
    public object random;
    public object round;
    public object sin;
    public object sqrt;
    public object tan;
}
public class Microsoft.JScript.LenientNumberPrototype : NumberPrototype {
    public object constructor;
    public object toExponential;
    public object toFixed;
    public object toLocaleString;
    public object toPrecision;
    public object toString;
    public object valueOf;
}
public class Microsoft.JScript.LenientObjectPrototype : ObjectPrototype {
    public object constructor;
    public object hasOwnProperty;
    public object isPrototypeOf;
    public object propertyIsEnumerable;
    public object toLocaleString;
    public object toString;
    public object valueOf;
}
public class Microsoft.JScript.LenientRegExpPrototype : RegExpPrototype {
    public object constructor;
    public object compile;
    public object exec;
    public object test;
    public object toString;
}
public class Microsoft.JScript.LenientStringConstructor : StringConstructor {
    public object fromCharCode;
}
public class Microsoft.JScript.LenientStringPrototype : StringPrototype {
    public object constructor;
    public object anchor;
    public object big;
    public object blink;
    public object bold;
    public object charAt;
    public object charCodeAt;
    public object concat;
    public object fixed;
    public object fontcolor;
    public object fontsize;
    public object indexOf;
    public object italics;
    public object lastIndexOf;
    public object link;
    public object localeCompare;
    public object match;
    public object replace;
    public object search;
    public object slice;
    public object small;
    public object split;
    public object strike;
    public object sub;
    [NotRecommended("substr")]
public object substr;
    public object substring;
    public object sup;
    public object toLocaleLowerCase;
    public object toLocaleUpperCase;
    public object toLowerCase;
    public object toString;
    public object toUpperCase;
    public object valueOf;
}
public class Microsoft.JScript.LenientVBArrayPrototype : VBArrayPrototype {
    public object constructor;
    public object dimensions;
    public object getItem;
    public object lbound;
    public object toArray;
    public object ubound;
}
public class Microsoft.JScript.MathObject : JSObject {
    public static double E;
    public static double LN10;
    public static double LN2;
    public static double LOG2E;
    public static double LOG10E;
    public static double PI;
    public static double SQRT1_2;
    public static double SQRT2;
    private static MathObject();
    [JSFunctionAttribute("0", "87")]
public static double abs(double d);
    [JSFunctionAttribute("0", "88")]
public static double acos(double x);
    [JSFunctionAttribute("0", "89")]
public static double asin(double x);
    [JSFunctionAttribute("0", "90")]
public static double atan(double x);
    [JSFunctionAttribute("0", "91")]
public static double atan2(double dy, double dx);
    [JSFunctionAttribute("0", "92")]
public static double ceil(double x);
    [JSFunctionAttribute("0", "93")]
public static double cos(double x);
    [JSFunctionAttribute("0", "94")]
public static double exp(double x);
    [JSFunctionAttribute("0", "95")]
public static double floor(double x);
    [JSFunctionAttribute("0", "96")]
public static double log(double x);
    [JSFunctionAttribute("16", "97")]
public static double max(object x, object y, Object[] args);
    [JSFunctionAttribute("16", "98")]
public static double min(object x, object y, Object[] args);
    [JSFunctionAttribute("0", "99")]
public static double pow(double dx, double dy);
    [JSFunctionAttribute("0", "100")]
public static double random();
    [JSFunctionAttribute("0", "101")]
public static double round(double d);
    [JSFunctionAttribute("0", "102")]
public static double sin(double x);
    [JSFunctionAttribute("0", "103")]
public static double sqrt(double x);
    [JSFunctionAttribute("0", "104")]
public static double tan(double x);
}
[ComVisibleAttribute("True")]
[GuidAttribute("98A3BF0A-1B56-4f32-ACE0-594FEB27EC48")]
public interface Microsoft.JScript.MemberInfoInitializer {
    public abstract virtual void Initialize(string name, COMMemberInfo dispatch);
    public abstract virtual COMMemberInfo GetCOMMemberInfo();
}
[DefaultMemberAttribute("Item")]
public class Microsoft.JScript.MemberInfoList : object {
}
public abstract class Microsoft.JScript.MethodInvoker : object {
    private static MethodInvoker();
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public abstract virtual object Invoke(object thisob, Object[] parameters);
}
public class Microsoft.JScript.Missing : object {
    public static Missing Value;
    private static Missing();
}
public class Microsoft.JScript.Namespace : object {
    public static Namespace GetNamespace(string name, VsaEngine engine);
}
public class Microsoft.JScript.NoContextException : ApplicationException {
    public NoContextException(string m);
    public NoContextException(string m, Exception e);
    protected NoContextException(SerializationInfo s, StreamingContext c);
}
[AttributeUsageAttribute("320")]
public class Microsoft.JScript.NotRecommended : Attribute {
    public bool IsError { get; }
    public string Message { get; }
    public NotRecommended(string message);
    public bool get_IsError();
    public string get_Message();
}
public class Microsoft.JScript.NumberConstructor : ScriptFunction {
    public static double MAX_VALUE;
    public static double MIN_VALUE;
    public static double NaN;
    public static double NEGATIVE_INFINITY;
    public static double POSITIVE_INFINITY;
    private static NumberConstructor();
    [JSFunctionAttribute("16")]
public NumberObject CreateInstance(Object[] args);
    public double Invoke(object arg);
}
public class Microsoft.JScript.NumberObject : JSObject {
    protected NumberObject(ScriptObject parent, object value);
    public Type GetType();
}
public class Microsoft.JScript.NumberPrototype : NumberObject {
    public static NumberConstructor constructor { get; }
    private static NumberPrototype();
    public static NumberConstructor get_constructor();
    [JSFunctionAttribute("2", "105")]
public static string toExponential(object thisob, object fractionDigits);
    [JSFunctionAttribute("2", "106")]
public static string toFixed(object thisob, double fractionDigits);
    [JSFunctionAttribute("2", "107")]
public static string toLocaleString(object thisob);
    [JSFunctionAttribute("2", "108")]
public static string toPrecision(object thisob, object precision);
    [JSFunctionAttribute("2", "109")]
public static string toString(object thisob, object radix);
    [JSFunctionAttribute("2", "110")]
public static object valueOf(object thisob);
}
public class Microsoft.JScript.NumericBinary : BinaryOp {
    public NumericBinary(int operatorTok);
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public object EvaluateNumericBinary(object v1, object v2);
    public static object DoOp(object v1, object v2, JSToken operatorTok);
}
public class Microsoft.JScript.NumericUnary : UnaryOp {
    public NumericUnary(int operatorTok);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public object EvaluateUnary(object v);
}
public class Microsoft.JScript.ObjectConstructor : ScriptFunction {
    private static ObjectConstructor();
    public JSObject ConstructObject();
    [JSFunctionAttribute("16")]
public object CreateInstance(Object[] args);
    [JSFunctionAttribute("16")]
public object Invoke(Object[] args);
}
public class Microsoft.JScript.ObjectPrototype : JSObject {
    public static ObjectConstructor constructor { get; }
    private static ObjectPrototype();
    public static ObjectConstructor get_constructor();
    [JSFunctionAttribute("2", "111")]
public static bool hasOwnProperty(object thisob, object name);
    [JSFunctionAttribute("2", "112")]
public static bool isPrototypeOf(object thisob, object ob);
    [JSFunctionAttribute("2", "113")]
public static bool propertyIsEnumerable(object thisob, object name);
    [JSFunctionAttribute("2", "114")]
public static string toLocaleString(object thisob);
    [JSFunctionAttribute("2", "115")]
public static string toString(object thisob);
    [JSFunctionAttribute("2", "116")]
public static object valueOf(object thisob);
}
[AttributeUsageAttribute("320")]
public class Microsoft.JScript.Override : Attribute {
}
public class Microsoft.JScript.Package : AST {
    public static void JScriptPackage(string rootName, VsaEngine engine);
}
public class Microsoft.JScript.ParserException : Exception {
}
public class Microsoft.JScript.Plus : BinaryOp {
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public object EvaluatePlus(object v1, object v2);
    public static object DoOp(object v1, object v2);
}
public class Microsoft.JScript.PostOrPrefixOperator : UnaryOp {
    public PostOrPrefixOperator(int operatorTok);
    [DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public object EvaluatePostOrPrefix(Object& v);
}
public class Microsoft.JScript.RangeErrorObject : ErrorObject {
}
[AttributeUsageAttribute("1")]
public class Microsoft.JScript.ReferenceAttribute : Attribute {
    public string reference;
    public ReferenceAttribute(string reference);
}
public class Microsoft.JScript.ReferenceErrorObject : ErrorObject {
}
public class Microsoft.JScript.RegExpConstructor : ScriptFunction {
    public object index { get; }
    public object input { get; public set; }
    public object lastIndex { get; }
    public object lastMatch { get; }
    public object lastParen { get; }
    public object leftContext { get; }
    public object rightContext { get; }
    private static RegExpConstructor();
    public object Construct(string pattern, bool ignoreCase, bool global, bool multiline);
    [JSFunctionAttribute("16")]
public RegExpObject CreateInstance(Object[] args);
    [JSFunctionAttribute("16")]
public RegExpObject Invoke(Object[] args);
    public object get_index();
    public object get_input();
    public void set_input(object value);
    public object get_lastIndex();
    public object get_lastMatch();
    public object get_lastParen();
    public object get_leftContext();
    public object get_rightContext();
}
public class Microsoft.JScript.RegExpMatch : ArrayObject {
}
public class Microsoft.JScript.RegExpObject : JSObject {
    public string source { get; }
    public bool ignoreCase { get; }
    public bool global { get; }
    public bool multiline { get; }
    public object lastIndex { get; public set; }
    public virtual string ToString();
    public string get_source();
    public bool get_ignoreCase();
    public bool get_global();
    public bool get_multiline();
    public object get_lastIndex();
    public void set_lastIndex(object value);
}
public class Microsoft.JScript.RegExpPrototype : JSObject {
    public static RegExpConstructor constructor { get; }
    private static RegExpPrototype();
    [JSFunctionAttribute("2", "117")]
public static RegExpObject compile(object thisob, object source, object flags);
    public static RegExpConstructor get_constructor();
    [JSFunctionAttribute("2", "118")]
public static object exec(object thisob, object input);
    [JSFunctionAttribute("2", "119")]
public static bool test(object thisob, object input);
    [JSFunctionAttribute("2", "120")]
public static string toString(object thisob);
}
public class Microsoft.JScript.Relational : BinaryOp {
    public Relational(int operatorTok);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public double EvaluateRelational(object v1, object v2);
    public static double JScriptCompare(object v1, object v2);
}
public class Microsoft.JScript.ReturnOutOfFinally : ApplicationException {
    public ReturnOutOfFinally(string m);
    public ReturnOutOfFinally(string m, Exception e);
    private ReturnOutOfFinally(SerializationInfo s, StreamingContext c);
}
public static class Microsoft.JScript.Runtime : object {
    private static Runtime();
    public static bool Equals(object v1, object v2);
    public static long DoubleToInt64(double val);
    public static long UncheckedDecimalToInt64(decimal val);
}
public class Microsoft.JScript.ScriptBlock : AST {
}
public abstract class Microsoft.JScript.ScriptFunction : JSObject {
    protected int ilength;
    public int length { get; public set; }
    public object prototype { get; public set; }
    protected ScriptFunction(ScriptObject parent, string name);
    [DebuggerStepThroughAttribute]
[JSFunctionAttribute("16")]
[DebuggerHiddenAttribute]
public object CreateInstance(Object[] args);
    protected ScriptObject GetPrototypeForConstructedObject();
    [JSFunctionAttribute("18")]
[DebuggerStepThroughAttribute]
[DebuggerHiddenAttribute]
public object Invoke(object thisob, Object[] args);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public virtual object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters);
    public virtual int get_length();
    public virtual void set_length(int value);
    public virtual string ToString();
    public object get_prototype();
    public void set_prototype(object value);
}
[ComVisibleAttribute("True")]
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.JScript.ScriptObject : object {
    protected ScriptObject parent;
    public VsaEngine engine;
    public object Item { get; public set; }
    public object Item { get; public set; }
    public object Item { get; public set; }
    public object Item { get; public set; }
    public Type UnderlyingSystemType { get; }
    public sealed virtual FieldInfo GetField(string name, BindingFlags bindingAttr);
    public virtual FieldInfo[] GetFields(BindingFlags bindingAttr);
    public abstract virtual MemberInfo[] GetMember(string name, BindingFlags bindingAttr);
    public abstract virtual MemberInfo[] GetMembers(BindingFlags bindingAttr);
    public sealed virtual MethodInfo GetMethod(string name, BindingFlags bindingAttr);
    public sealed virtual MethodInfo GetMethod(string name, BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers);
    public virtual MethodInfo[] GetMethods(BindingFlags bindingAttr);
    public ScriptObject GetParent();
    public sealed virtual PropertyInfo GetProperty(string name, BindingFlags bindingAttr);
    public sealed virtual PropertyInfo GetProperty(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers);
    public virtual PropertyInfo[] GetProperties(BindingFlags bindingAttr);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public virtual object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo locale, String[] namedParameters);
    public object get_Item(double index);
    public void set_Item(double index, object value);
    public object get_Item(int index);
    public void set_Item(int index, object value);
    public object get_Item(string name);
    public void set_Item(string name, object value);
    public object get_Item(Object[] pars);
    public void set_Item(Object[] pars, object value);
    public virtual Type get_UnderlyingSystemType();
    protected static MemberInfo[] WrapMembers(MemberInfo[] members, object obj);
    protected static MemberInfo[] WrapMembers(MemberInfo member, object obj);
    protected static MemberInfo[] WrapMembers(MemberInfo[] members, object obj, SimpleHashtable cache);
}
public class Microsoft.JScript.ScriptStream : object {
    public static TextWriter Out;
    public static TextWriter Error;
    private static ScriptStream();
    public static void PrintStackTrace();
    public static void PrintStackTrace(Exception e);
    public static void Write(string str);
    public static void WriteLine(string str);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.JScript.SimpleHashtable : object {
    public object Item { get; public set; }
    public SimpleHashtable(UInt32 threshold);
    public IDictionaryEnumerator GetEnumerator();
    public void Remove(object key);
    public object get_Item(object key);
    public void set_Item(object key, object value);
}
[ComVisibleAttribute("True")]
[GuidAttribute("BA731F6A-3D25-39AE-BE18-C2EF646AE58B")]
public enum Microsoft.JScript.SourceState : Enum {
    public int value__;
    public static SourceState STATE_COLOR_NORMAL;
    public static SourceState STATE_COLOR_COMMENT;
    public static SourceState STATE_COLOR_STRING;
}
public class Microsoft.JScript.StackFrame : ScriptObject {
    public Object[] localVars;
    public object closureInstance;
    public sealed virtual object GetDefaultThisObject();
    public sealed virtual FieldInfo GetField(string name, int lexLevel);
    public sealed virtual GlobalScope GetGlobalScope();
    private sealed virtual override FieldInfo Microsoft.JScript.IActivationObject.GetLocalField(string name);
    public virtual MemberInfo[] GetMember(string name, BindingFlags bindingAttr);
    public virtual MemberInfo[] GetMembers(BindingFlags bindingAttr);
    [DebuggerHiddenAttribute]
[DebuggerStepThroughAttribute]
public sealed virtual object GetMemberValue(string name, int lexlevel);
    public static void PushStackFrameForStaticMethod(RuntimeTypeHandle thisclass, JSLocalField[] fields, VsaEngine engine);
    public static void PushStackFrameForMethod(object thisob, JSLocalField[] fields, VsaEngine engine);
}
public class Microsoft.JScript.StrictEquality : BinaryOp {
    public static bool JScriptStrictEquals(object v1, object v2);
}
public class Microsoft.JScript.StringConstructor : ScriptFunction {
    private static StringConstructor();
    [JSFunctionAttribute("16")]
public StringObject CreateInstance(Object[] args);
    public string Invoke(object arg);
    [JSFunctionAttribute("16", "131")]
public static string fromCharCode(Object[] args);
}
public class Microsoft.JScript.StringObject : JSObject {
    public int length { get; }
    protected StringObject(ScriptObject prototype, string value);
    public int get_length();
    public virtual bool Equals(object ob);
    public virtual int GetHashCode();
    public Type GetType();
}
public class Microsoft.JScript.StringPrototype : StringObject {
    public static StringConstructor constructor { get; }
    private static StringPrototype();
    [JSFunctionAttribute("2", "121")]
public static string anchor(object thisob, object anchorName);
    [JSFunctionAttribute("2", "122")]
public static string big(object thisob);
    [JSFunctionAttribute("2", "123")]
public static string blink(object thisob);
    [JSFunctionAttribute("2", "124")]
public static string bold(object thisob);
    [JSFunctionAttribute("2", "125")]
public static string charAt(object thisob, double pos);
    [JSFunctionAttribute("2", "126")]
public static object charCodeAt(object thisob, double pos);
    [JSFunctionAttribute("18", "127")]
public static string concat(object thisob, Object[] args);
    public static StringConstructor get_constructor();
    [JSFunctionAttribute("2", "128")]
public static string fixed(object thisob);
    [JSFunctionAttribute("2", "129")]
public static string fontcolor(object thisob, object colorName);
    [JSFunctionAttribute("2", "130")]
public static string fontsize(object thisob, object fontSize);
    [JSFunctionAttribute("2", "132")]
public static int indexOf(object thisob, object searchString, double position);
    [JSFunctionAttribute("2", "133")]
public static string italics(object thisob);
    [JSFunctionAttribute("2", "134")]
public static int lastIndexOf(object thisob, object searchString, double position);
    [JSFunctionAttribute("2", "135")]
public static string link(object thisob, object linkRef);
    [JSFunctionAttribute("2", "136")]
public static int localeCompare(object thisob, object thatob);
    [JSFunctionAttribute("34", "137")]
public static object match(object thisob, VsaEngine engine, object regExp);
    [JSFunctionAttribute("2", "138")]
public static string replace(object thisob, object regExp, object replacement);
    [JSFunctionAttribute("34", "139")]
public static int search(object thisob, VsaEngine engine, object regExp);
    [JSFunctionAttribute("2", "140")]
public static string slice(object thisob, double start, object end);
    [JSFunctionAttribute("2", "141")]
public static string small(object thisob);
    [JSFunctionAttribute("34", "142")]
public static ArrayObject split(object thisob, VsaEngine engine, object separator, object limit);
    [JSFunctionAttribute("2", "143")]
public static string strike(object thisob);
    [JSFunctionAttribute("2", "144")]
public static string sub(object thisob);
    [NotRecommended("substr")]
[JSFunctionAttribute("2", "145")]
public static string substr(object thisob, double start, object count);
    [JSFunctionAttribute("2", "146")]
public static string substring(object thisob, double start, object end);
    [JSFunctionAttribute("2", "147")]
public static string sup(object thisob);
    [JSFunctionAttribute("2", "148")]
public static string toLocaleLowerCase(object thisob);
    [JSFunctionAttribute("2", "149")]
public static string toLocaleUpperCase(object thisob);
    [JSFunctionAttribute("2", "150")]
public static string toLowerCase(object thisob);
    [JSFunctionAttribute("2", "151")]
public static string toString(object thisob);
    [JSFunctionAttribute("2", "152")]
public static string toUpperCase(object thisob);
    [JSFunctionAttribute("2", "153")]
public static object valueOf(object thisob);
}
public class Microsoft.JScript.SuperTypeMembersSorter : object {
}
public class Microsoft.JScript.SyntaxErrorObject : ErrorObject {
}
public class Microsoft.JScript.Throw : AST {
    public static Exception JScriptThrow(object value);
}
[GuidAttribute("78008402-40D4-30BF-BD91-A61D8815625E")]
[ComVisibleAttribute("True")]
public enum Microsoft.JScript.TokenColor : Enum {
    public int value__;
    public static TokenColor COLOR_TEXT;
    public static TokenColor COLOR_IDENTIFIER;
    public static TokenColor COLOR_KEYWORD;
    public static TokenColor COLOR_COMMENT;
    public static TokenColor COLOR_OPERATOR;
    public static TokenColor COLOR_NUMBER;
    public static TokenColor COLOR_STRING;
    public static TokenColor COLOR_CONDITIONAL_COMP;
}
public class Microsoft.JScript.Try : AST {
    public static object JScriptExceptionValue(object e, VsaEngine engine);
    public static void PushHandlerScope(VsaEngine engine, string id, int scopeId);
}
public class Microsoft.JScript.TypedArray : object {
    public Type UnderlyingSystemType { get; }
    public TypedArray(IReflect elementType, int rank);
    public virtual bool Equals(object obj);
    public sealed virtual FieldInfo GetField(string name, BindingFlags bindingAttr);
    public sealed virtual FieldInfo[] GetFields(BindingFlags bindingAttr);
    public virtual int GetHashCode();
    public sealed virtual MemberInfo[] GetMember(string name, BindingFlags bindingAttr);
    public sealed virtual MemberInfo[] GetMembers(BindingFlags bindingAttr);
    public sealed virtual MethodInfo GetMethod(string name, BindingFlags bindingAttr);
    public sealed virtual MethodInfo GetMethod(string name, BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers);
    public sealed virtual MethodInfo[] GetMethods(BindingFlags bindingAttr);
    public sealed virtual PropertyInfo GetProperty(string name, BindingFlags bindingAttr);
    public sealed virtual PropertyInfo GetProperty(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers);
    public sealed virtual PropertyInfo[] GetProperties(BindingFlags bindingAttr);
    public sealed virtual object InvokeMember(string name, BindingFlags flags, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo locale, String[] namedParameters);
    public virtual string ToString();
    public sealed virtual Type get_UnderlyingSystemType();
}
public class Microsoft.JScript.TypeErrorObject : ErrorObject {
}
public class Microsoft.JScript.Typeof : UnaryOp {
    public static string JScriptTypeof(object value);
}
public class Microsoft.JScript.TypeReflector : ScriptObject {
    private static TypeReflector();
    public virtual MemberInfo[] GetMember(string name, BindingFlags bindingAttr);
    public virtual MemberInfo[] GetMembers(BindingFlags bindingAttr);
}
public abstract class Microsoft.JScript.UnaryOp : AST {
    protected AST operand;
}
public class Microsoft.JScript.URIErrorObject : ErrorObject {
}
public class Microsoft.JScript.VBArrayConstructor : ScriptFunction {
    private static VBArrayConstructor();
    [JSFunctionAttribute("16")]
public object CreateInstance(Object[] args);
}
public class Microsoft.JScript.VBArrayObject : JSObject {
    public VBArrayObject(VBArrayPrototype parent, Array array);
}
public class Microsoft.JScript.VBArrayPrototype : JSObject {
    public static VBArrayConstructor constructor { get; }
    private static VBArrayPrototype();
    public static VBArrayConstructor get_constructor();
    [JSFunctionAttribute("2", "154")]
public static int dimensions(object thisob);
    [JSFunctionAttribute("18", "155")]
public static object getItem(object thisob, Object[] args);
    [JSFunctionAttribute("2", "156")]
public static int lbound(object thisob, object dimension);
    [JSFunctionAttribute("34", "157")]
public static ArrayObject toArray(object thisob, VsaEngine engine);
    [JSFunctionAttribute("2", "158")]
public static int ubound(object thisob, object dimension);
}
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
[GuidAttribute("F8932A50-9127-48B6-B115-2BFDC627CEE3")]
[ComVisibleAttribute("True")]
public abstract class Microsoft.JScript.Vsa.BaseVsaEngine : object {
    protected string applicationPath;
    protected Assembly loadedAssembly;
    protected string compiledRootNamespace;
    protected IJSVsaSite engineSite;
    protected bool genDebugInfo;
    protected bool haveCompiledState;
    protected bool failedCompilation;
    protected bool isClosed;
    protected bool isEngineCompiled;
    protected bool isDebugInfoSupported;
    protected bool isEngineDirty;
    protected bool isEngineInitialized;
    protected bool isEngineRunning;
    protected IJSVsaItems vsaItems;
    protected string scriptLanguage;
    protected int errorLocale;
    protected static Hashtable nameTable;
    protected string engineName;
    protected string engineMoniker;
    protected string rootNamespace;
    protected Type startupClass;
    protected BaseVsaStartup startupInstance;
    protected string assemblyVersion;
    protected Evidence executionEvidence;
    public _AppDomain AppDomain { get; public set; }
    public Evidence Evidence { get; public set; }
    public string ApplicationBase { get; public set; }
    public Assembly Assembly { get; }
    public bool GenerateDebugInfo { get; public set; }
    public bool IsCompiled { get; }
    public bool IsDirty { get; public set; }
    public bool IsRunning { get; }
    public IJSVsaItems Items { get; }
    public string Language { get; }
    public int LCID { get; public set; }
    public string Name { get; public set; }
    public string RootMoniker { get; public set; }
    public string RootNamespace { get; public set; }
    public IJSVsaSite Site { get; public set; }
    public string Version { get; }
    private static BaseVsaEngine();
    protected JSVsaException Error(JSVsaError vsaErrorNumber);
    protected void Preconditions(Pre flags);
    public _AppDomain get_AppDomain();
    public void set_AppDomain(_AppDomain value);
    public sealed virtual Evidence get_Evidence();
    public sealed virtual void set_Evidence(Evidence value);
    public string get_ApplicationBase();
    public void set_ApplicationBase(string value);
    public sealed virtual Assembly get_Assembly();
    public sealed virtual bool get_GenerateDebugInfo();
    public sealed virtual void set_GenerateDebugInfo(bool value);
    public sealed virtual bool get_IsCompiled();
    public sealed virtual bool get_IsDirty();
    public void set_IsDirty(bool value);
    public sealed virtual bool get_IsRunning();
    public sealed virtual IJSVsaItems get_Items();
    public sealed virtual string get_Language();
    public sealed virtual int get_LCID();
    public sealed virtual void set_LCID(int value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual string get_RootMoniker();
    public sealed virtual void set_RootMoniker(string value);
    public sealed virtual string get_RootNamespace();
    public sealed virtual void set_RootNamespace(string value);
    public sealed virtual IJSVsaSite get_Site();
    public sealed virtual void set_Site(IJSVsaSite value);
    public sealed virtual string get_Version();
    public virtual void Close();
    public virtual bool Compile();
    public virtual object GetOption(string name);
    public virtual void InitNew();
    protected virtual Assembly LoadCompiledState();
    public virtual void LoadSourceState(IJSVsaPersistSite site);
    public virtual void Reset();
    public virtual void RevokeCache();
    public virtual void Run();
    public virtual void SetOption(string name, object value);
    public virtual void SaveCompiledState(Byte[]& pe, Byte[]& debugInfo);
    public virtual void SaveSourceState(IJSVsaPersistSite site);
    protected virtual void ValidateRootMoniker(string rootMoniker);
    protected abstract virtual void DoClose();
    protected abstract virtual bool DoCompile();
    protected abstract virtual void DoLoadSourceState(IJSVsaPersistSite site);
    protected abstract virtual void DoSaveCompiledState(Byte[]& pe, Byte[]& debugInfo);
    protected abstract virtual void DoSaveSourceState(IJSVsaPersistSite site);
    protected abstract virtual object GetCustomOption(string name);
    protected abstract virtual bool IsValidNamespaceName(string name);
    public abstract virtual bool IsValidIdentifier(string ident);
    protected abstract virtual void ResetCompiledState();
    protected abstract virtual void SetCustomOption(string name, object value);
}
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
public class Microsoft.JScript.Vsa.BaseVsaSite : object {
    public Byte[] Assembly { get; }
    public Byte[] DebugInfo { get; }
    public virtual Byte[] get_Assembly();
    public virtual Byte[] get_DebugInfo();
    public virtual void GetCompiledState(Byte[]& pe, Byte[]& debugInfo);
    public virtual object GetEventSourceInstance(string itemName, string eventSourceName);
    public virtual object GetGlobalInstance(string name);
    public virtual void Notify(string notify, object optional);
    public virtual bool OnCompilerError(IJSVsaError error);
}
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
public abstract class Microsoft.JScript.Vsa.BaseVsaStartup : object {
    protected IJSVsaSite site;
    public void SetSite(IJSVsaSite site);
    public abstract virtual void Startup();
    public abstract virtual void Shutdown();
}
[GuidAttribute("528BBC87-CCDC-4F07-B29C-9B10575DEB2F")]
[ComVisibleAttribute("True")]
[InterfaceTypeAttribute("1")]
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
public interface Microsoft.JScript.Vsa.IJSVsaCodeItem {
    public string SourceText { get; public set; }
    public CodeObject CodeDOM { get; }
    public abstract virtual string get_SourceText();
    public abstract virtual void set_SourceText(string value);
    public abstract virtual CodeObject get_CodeDOM();
    public abstract virtual void AppendSourceText(string text);
    public abstract virtual void AddEventSource(string eventSourceName, string eventSourceType);
    public abstract virtual void RemoveEventSource(string eventSourceName);
}
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
[InterfaceTypeAttribute("1")]
[ComVisibleAttribute("True")]
[GuidAttribute("8FA2C97B-47E4-4A31-A7F5-FF39D1195CD9")]
public interface Microsoft.JScript.Vsa.IJSVsaEngine {
    public IJSVsaSite Site { get; public set; }
    public string Name { get; public set; }
    public string RootMoniker { get; public set; }
    public string RootNamespace { get; public set; }
    public int LCID { get; public set; }
    public bool GenerateDebugInfo { get; public set; }
    public Evidence Evidence { get; public set; }
    public IJSVsaItems Items { get; }
    public bool IsDirty { get; }
    public string Language { get; }
    public string Version { get; }
    public bool IsRunning { get; }
    public bool IsCompiled { get; }
    public Assembly Assembly { get; }
    public abstract virtual IJSVsaSite get_Site();
    public abstract virtual void set_Site(IJSVsaSite value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_RootMoniker();
    public abstract virtual void set_RootMoniker(string value);
    public abstract virtual string get_RootNamespace();
    public abstract virtual void set_RootNamespace(string value);
    public abstract virtual int get_LCID();
    public abstract virtual void set_LCID(int value);
    public abstract virtual bool get_GenerateDebugInfo();
    public abstract virtual void set_GenerateDebugInfo(bool value);
    public abstract virtual Evidence get_Evidence();
    public abstract virtual void set_Evidence(Evidence value);
    public abstract virtual IJSVsaItems get_Items();
    public abstract virtual bool get_IsDirty();
    public abstract virtual string get_Language();
    public abstract virtual string get_Version();
    public abstract virtual object GetOption(string name);
    public abstract virtual void SetOption(string name, object value);
    public abstract virtual bool Compile();
    public abstract virtual void Run();
    public abstract virtual void Reset();
    public abstract virtual void Close();
    public abstract virtual bool get_IsRunning();
    public abstract virtual bool get_IsCompiled();
    public abstract virtual void RevokeCache();
    public abstract virtual void SaveSourceState(IJSVsaPersistSite site);
    public abstract virtual void LoadSourceState(IJSVsaPersistSite site);
    public abstract virtual void SaveCompiledState(Byte[]& pe, Byte[]& pdb);
    public abstract virtual void InitNew();
    public abstract virtual bool IsValidIdentifier(string identifier);
    public abstract virtual Assembly get_Assembly();
}
[ComVisibleAttribute("True")]
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
[GuidAttribute("425EA439-6417-4F3E-BCC9-1AFAC79E3F66")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.JScript.Vsa.IJSVsaError {
    public int Line { get; }
    public int Severity { get; }
    public string Description { get; }
    public string LineText { get; }
    public IJSVsaItem SourceItem { get; }
    public int EndColumn { get; }
    public int StartColumn { get; }
    public int Number { get; }
    public string SourceMoniker { get; }
    public abstract virtual int get_Line();
    public abstract virtual int get_Severity();
    public abstract virtual string get_Description();
    public abstract virtual string get_LineText();
    public abstract virtual IJSVsaItem get_SourceItem();
    public abstract virtual int get_EndColumn();
    public abstract virtual int get_StartColumn();
    public abstract virtual int get_Number();
    public abstract virtual string get_SourceMoniker();
}
[GuidAttribute("15B2CCE5-D1EA-4EB9-9E06-8729C72D631B")]
[ComVisibleAttribute("True")]
[InterfaceTypeAttribute("1")]
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
public interface Microsoft.JScript.Vsa.IJSVsaGlobalItem {
    unknown string TypeString {public set; }
    public bool ExposeMembers { get; public set; }
    public abstract virtual void set_TypeString(string value);
    public abstract virtual bool get_ExposeMembers();
    public abstract virtual void set_ExposeMembers(bool value);
}
[InterfaceTypeAttribute("1")]
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
[ComVisibleAttribute("True")]
[GuidAttribute("1F2377AC-8A09-417B-89DC-D146769F0B45")]
public interface Microsoft.JScript.Vsa.IJSVsaItem {
    public string Name { get; public set; }
    public JSVsaItemType ItemType { get; }
    public bool IsDirty { get; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual JSVsaItemType get_ItemType();
    public abstract virtual bool get_IsDirty();
    public abstract virtual object GetOption(string name);
    public abstract virtual void SetOption(string name, object value);
}
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
[DefaultMemberAttribute("Item")]
[ComVisibleAttribute("True")]
[GuidAttribute("172341E0-9B0D-43E6-9EFF-75E030A46461")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.JScript.Vsa.IJSVsaItems {
    public int Count { get; }
    public IJSVsaItem Item { get; }
    public IJSVsaItem Item { get; }
    public abstract virtual int get_Count();
    public abstract virtual IJSVsaItem get_Item(string name);
    public abstract virtual IJSVsaItem get_Item(int index);
    public abstract virtual IJSVsaItem CreateItem(string name, JSVsaItemType itemType, JSVsaItemFlag itemFlag);
    public abstract virtual void Remove(string name);
    public abstract virtual void Remove(int index);
}
[ComVisibleAttribute("True")]
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
[GuidAttribute("F901A1FF-8EBA-4C38-B6E0-E7E52606D325")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.JScript.Vsa.IJSVsaPersistSite {
    public abstract virtual void SaveElement(string name, string source);
    public abstract virtual string LoadElement(string name);
}
[ComVisibleAttribute("True")]
[GuidAttribute("8EFD265B-677A-4B09-A471-E086787AA727")]
[InterfaceTypeAttribute("1")]
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
public interface Microsoft.JScript.Vsa.IJSVsaReferenceItem {
    public string AssemblyName { get; public set; }
    public abstract virtual string get_AssemblyName();
    public abstract virtual void set_AssemblyName(string value);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("605A62B5-3BA8-49E0-A056-0A6A7A5846A3")]
[ComVisibleAttribute("True")]
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
public interface Microsoft.JScript.Vsa.IJSVsaSite {
    public abstract virtual void GetCompiledState(Byte[]& pe, Byte[]& debugInfo);
    public abstract virtual bool OnCompilerError(IJSVsaError error);
    public abstract virtual object GetGlobalInstance(string name);
    public abstract virtual object GetEventSourceInstance(string itemName, string eventSourceName);
    public abstract virtual void Notify(string notify, object info);
}
[GuidAttribute("7607D148-3AA5-4CC6-AED5-D4DB0ECBD992")]
[ComVisibleAttribute("True")]
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
public enum Microsoft.JScript.Vsa.JSVsaError : Enum {
    public int value__;
    public static JSVsaError AppDomainCannotBeSet;
    public static JSVsaError AppDomainInvalid;
    public static JSVsaError ApplicationBaseCannotBeSet;
    public static JSVsaError ApplicationBaseInvalid;
    public static JSVsaError AssemblyExpected;
    public static JSVsaError AssemblyNameInvalid;
    public static JSVsaError BadAssembly;
    public static JSVsaError CachedAssemblyInvalid;
    public static JSVsaError CallbackUnexpected;
    public static JSVsaError CodeDOMNotAvailable;
    public static JSVsaError CompiledStateNotFound;
    public static JSVsaError DebugInfoNotSupported;
    public static JSVsaError ElementNameInvalid;
    public static JSVsaError ElementNotFound;
    public static JSVsaError EngineBusy;
    public static JSVsaError EngineCannotClose;
    public static JSVsaError EngineCannotReset;
    public static JSVsaError EngineClosed;
    public static JSVsaError EngineEmpty;
    public static JSVsaError EngineInitialized;
    public static JSVsaError EngineNameInUse;
    public static JSVsaError EngineNotCompiled;
    public static JSVsaError EngineNotInitialized;
    public static JSVsaError EngineNotRunning;
    public static JSVsaError EngineRunning;
    public static JSVsaError EventSourceInvalid;
    public static JSVsaError EventSourceNameInUse;
    public static JSVsaError EventSourceNameInvalid;
    public static JSVsaError EventSourceNotFound;
    public static JSVsaError EventSourceTypeInvalid;
    public static JSVsaError GetCompiledStateFailed;
    public static JSVsaError GlobalInstanceInvalid;
    public static JSVsaError GlobalInstanceTypeInvalid;
    public static JSVsaError InternalCompilerError;
    public static JSVsaError ItemCannotBeRemoved;
    public static JSVsaError ItemFlagNotSupported;
    public static JSVsaError ItemNameInUse;
    public static JSVsaError ItemNameInvalid;
    public static JSVsaError ItemNotFound;
    public static JSVsaError ItemTypeNotSupported;
    public static JSVsaError LCIDNotSupported;
    public static JSVsaError LoadElementFailed;
    public static JSVsaError NotificationInvalid;
    public static JSVsaError OptionInvalid;
    public static JSVsaError OptionNotSupported;
    public static JSVsaError RevokeFailed;
    public static JSVsaError RootMonikerAlreadySet;
    public static JSVsaError RootMonikerInUse;
    public static JSVsaError RootMonikerInvalid;
    public static JSVsaError RootMonikerNotSet;
    public static JSVsaError RootMonikerProtocolInvalid;
    public static JSVsaError RootNamespaceInvalid;
    public static JSVsaError RootNamespaceNotSet;
    public static JSVsaError SaveCompiledStateFailed;
    public static JSVsaError SaveElementFailed;
    public static JSVsaError SiteAlreadySet;
    public static JSVsaError SiteInvalid;
    public static JSVsaError SiteNotSet;
    public static JSVsaError SourceItemNotAvailable;
    public static JSVsaError SourceMonikerNotAvailable;
    public static JSVsaError URLInvalid;
    public static JSVsaError BrowserNotExist;
    public static JSVsaError DebuggeeNotStarted;
    public static JSVsaError EngineNameInvalid;
    public static JSVsaError EngineNotExist;
    public static JSVsaError FileFormatUnsupported;
    public static JSVsaError FileTypeUnknown;
    public static JSVsaError ItemCannotBeRenamed;
    public static JSVsaError MissingSource;
    public static JSVsaError NotInitCompleted;
    public static JSVsaError NameTooLong;
    public static JSVsaError ProcNameInUse;
    public static JSVsaError ProcNameInvalid;
    public static JSVsaError VsaServerDown;
    public static JSVsaError MissingPdb;
    public static JSVsaError NotClientSideAndNoUrl;
    public static JSVsaError CannotAttachToWebServer;
    public static JSVsaError EngineNameNotSet;
    public static JSVsaError UnknownError;
}
[GuidAttribute("064C47AC-C9DF-4FCD-9009-E9299D620018")]
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
[ComVisibleAttribute("True")]
public class Microsoft.JScript.Vsa.JSVsaException : ExternalException {
    public JSVsaError ErrorCode { get; }
    public JSVsaException(string message);
    public JSVsaException(string message, Exception innerException);
    public JSVsaException(SerializationInfo info, StreamingContext context);
    public JSVsaException(JSVsaError error);
    public JSVsaException(JSVsaError error, string message);
    public JSVsaException(JSVsaError error, string message, Exception innerException);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual string ToString();
    public JSVsaError get_ErrorCode();
}
[ComVisibleAttribute("True")]
[GuidAttribute("55BB0B6C-7629-4824-97FF-78A6928E92A7")]
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
public enum Microsoft.JScript.Vsa.JSVsaItemFlag : Enum {
    public int value__;
    public static JSVsaItemFlag None;
    public static JSVsaItemFlag Module;
    public static JSVsaItemFlag Class;
}
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
[ComVisibleAttribute("True")]
[GuidAttribute("97453226-34DD-4379-B658-005DF8F84EA1")]
public enum Microsoft.JScript.Vsa.JSVsaItemType : Enum {
    public int value__;
    public static JSVsaItemType Reference;
    public static JSVsaItemType AppGlobal;
    public static JSVsaItemType Code;
}
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
public class Microsoft.JScript.Vsa.ResInfo : object {
    public string filename;
    public string fullpath;
    public string name;
    public bool isPublic;
    public bool isLinked;
    public ResInfo(string filename, string name, bool isPublic, bool isLinked);
    public ResInfo(string resinfo, bool isLinked);
}
[GuidAttribute("B71E484D-93ED-4b56-BFB9-CEED5134822B")]
[ComVisibleAttribute("True")]
[ObsoleteAttribute("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]
public class Microsoft.JScript.Vsa.VsaEngine : BaseVsaEngine {
    public LenientGlobalObject LenientGlobalObject { get; }
    public VsaEngine(bool fast);
    private static VsaEngine();
    public sealed virtual IJSVsaEngine Clone(AppDomain domain);
    public sealed virtual bool CompileEmpty();
    public sealed virtual void ConnectEvents();
    public static GlobalScope CreateEngineAndGetGlobalScope(bool fast, String[] assemblyNames);
    public static GlobalScope CreateEngineAndGetGlobalScopeWithType(bool fast, String[] assemblyNames, RuntimeTypeHandle callingTypeHandle);
    public static GlobalScope CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace(bool fast, String[] assemblyNames, RuntimeTypeHandle callingTypeHandle, string rootNamespace);
    public static VsaEngine CreateEngine();
    public static VsaEngine CreateEngineWithType(RuntimeTypeHandle callingTypeHandle);
    public sealed virtual void DisconnectEvents();
    protected virtual void DoClose();
    protected virtual bool DoCompile();
    public sealed virtual Assembly GetAssembly();
    public IJSVsaItem GetItem(string itemName);
    public IJSVsaItem GetItemAtIndex(int index);
    public int GetItemCount();
    public sealed virtual IVsaScriptScope GetGlobalScope();
    public GlobalScope GetMainScope();
    public sealed virtual Module GetModule();
    public ArrayConstructor GetOriginalArrayConstructor();
    public ObjectConstructor GetOriginalObjectConstructor();
    public RegExpConstructor GetOriginalRegExpConstructor();
    protected virtual object GetCustomOption(string name);
    public sealed virtual void InitVsaEngine(string rootMoniker, IJSVsaSite site);
    public sealed virtual void Interrupt();
    protected virtual bool IsValidNamespaceName(string name);
    public virtual bool IsValidIdentifier(string ident);
    public LenientGlobalObject get_LenientGlobalObject();
    protected virtual Assembly LoadCompiledState();
    protected virtual void DoLoadSourceState(IJSVsaPersistSite site);
    public ScriptObject PopScriptObject();
    public void PushScriptObject(ScriptObject obj);
    public sealed virtual void RegisterEventSource(string name);
    public virtual void Reset();
    protected virtual void ResetCompiledState();
    public sealed virtual void Restart();
    public sealed virtual void RunEmpty();
    public sealed virtual void Run(AppDomain domain);
    protected virtual void DoSaveCompiledState(Byte[]& pe, Byte[]& pdb);
    protected virtual void DoSaveSourceState(IJSVsaPersistSite site);
    public ScriptObject ScriptObjectStackTop();
    public sealed virtual void SetOutputStream(IMessageReceiver output);
    protected virtual void SetCustomOption(string name, object value);
    protected virtual void ValidateRootMoniker(string rootMoniker);
}
public abstract class Microsoft.JScript.VsaItem : object {
    protected string name;
    protected JSVsaItemType type;
    protected JSVsaItemFlag flag;
    protected bool isDirty;
    public bool IsDirty { get; public set; }
    public string Name { get; public set; }
    public JSVsaItemType ItemType { get; }
    public virtual bool get_IsDirty();
    public virtual void set_IsDirty(bool value);
    public virtual object GetOption(string name);
    public virtual string get_Name();
    public virtual void set_Name(string value);
    public virtual void SetOption(string name, object value);
    public sealed virtual JSVsaItemType get_ItemType();
}
[DefaultMemberAttribute("Item")]
public class Microsoft.JScript.VsaItems : object {
    public IJSVsaItem Item { get; }
    public IJSVsaItem Item { get; }
    public int Count { get; }
    public VsaItems(VsaEngine engine);
    public sealed virtual IJSVsaItem get_Item(int index);
    public sealed virtual IJSVsaItem get_Item(string itemName);
    public sealed virtual int get_Count();
    public void Close();
    public sealed virtual IJSVsaItem CreateItem(string name, JSVsaItemType itemType, JSVsaItemFlag itemFlag);
    public sealed virtual IEnumerator GetEnumerator();
    public sealed virtual void Remove(string itemName);
    public sealed virtual void Remove(int itemIndex);
}
[ComVisibleAttribute("True")]
[GuidAttribute("581AD3D9-2BAA-3770-B92B-38607E1B463A")]
public enum Microsoft.JScript.VSAITEMTYPE2 : Enum {
    public int value__;
    public static VSAITEMTYPE2 None;
    public static VSAITEMTYPE2 HOSTOBJECT;
    public static VSAITEMTYPE2 HOSTSCOPE;
    public static VSAITEMTYPE2 HOSTSCOPEANDOBJECT;
    public static VSAITEMTYPE2 SCRIPTSCOPE;
    public static VSAITEMTYPE2 SCRIPTBLOCK;
    public static VSAITEMTYPE2 STATEMENT;
    public static VSAITEMTYPE2 EXPRESSION;
}
public class Microsoft.JScript.With : AST {
    public static object JScriptWith(object withOb, VsaEngine engine);
}
