[AttributeUsageAttribute("2")]
internal class BidIdentityAttribute : Attribute {
    internal BidIdentityAttribute(string idStr);
}
[AttributeUsageAttribute("2")]
internal class BidMetaTextAttribute : Attribute {
    internal BidMetaTextAttribute(string str);
}
public class System.Data.OracleClient.OracleBFile : Stream {
    public static OracleBFile Null;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public OracleConnection Connection { get; }
    public string DirectoryName { get; }
    public bool FileExists { get; }
    public string FileName { get; }
    public bool IsNull { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public object Value { get; }
    private static OracleBFile();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public OracleConnection get_Connection();
    public string get_DirectoryName();
    public bool get_FileExists();
    public string get_FileName();
    public sealed virtual bool get_IsNull();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public object get_Value();
    public sealed virtual object Clone();
    public long CopyTo(OracleLob destination);
    public long CopyTo(OracleLob destination, long destinationOffset);
    public long CopyTo(long sourceOffset, OracleLob destination, long destinationOffset, long amount);
    protected virtual void Dispose(bool disposing);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public void SetFileName(string directory, string file);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
}
[DefaultMemberAttribute("Item")]
public class System.Data.OracleClient.OracleBinary : ValueType {
    private Byte[] _value;
    public static OracleBinary Null;
    public bool IsNull { get; }
    public int Length { get; }
    public Byte[] Value { get; }
    public byte Item { get; }
    public OracleBinary(Byte[] b);
    private static OracleBinary();
    public sealed virtual bool get_IsNull();
    public int get_Length();
    public Byte[] get_Value();
    public byte get_Item(int index);
    public sealed virtual int CompareTo(object obj);
    public virtual bool Equals(object value);
    public virtual int GetHashCode();
    public static OracleBinary Concat(OracleBinary x, OracleBinary y);
    public static OracleBoolean Equals(OracleBinary x, OracleBinary y);
    public static OracleBoolean GreaterThan(OracleBinary x, OracleBinary y);
    public static OracleBoolean GreaterThanOrEqual(OracleBinary x, OracleBinary y);
    public static OracleBoolean LessThan(OracleBinary x, OracleBinary y);
    public static OracleBoolean LessThanOrEqual(OracleBinary x, OracleBinary y);
    public static OracleBoolean NotEquals(OracleBinary x, OracleBinary y);
    public static OracleBinary op_Implicit(Byte[] b);
    public static Byte[] op_Explicit(OracleBinary x);
    public static OracleBinary op_Addition(OracleBinary x, OracleBinary y);
    public static OracleBoolean op_Equality(OracleBinary x, OracleBinary y);
    public static OracleBoolean op_GreaterThan(OracleBinary x, OracleBinary y);
    public static OracleBoolean op_GreaterThanOrEqual(OracleBinary x, OracleBinary y);
    public static OracleBoolean op_LessThan(OracleBinary x, OracleBinary y);
    public static OracleBoolean op_LessThanOrEqual(OracleBinary x, OracleBinary y);
    public static OracleBoolean op_Inequality(OracleBinary x, OracleBinary y);
}
public class System.Data.OracleClient.OracleBoolean : ValueType {
    private static byte x_Null;
    private static byte x_True;
    private static byte x_False;
    private byte _value;
    public static OracleBoolean False;
    public static OracleBoolean Null;
    public static OracleBoolean One;
    public static OracleBoolean True;
    public static OracleBoolean Zero;
    public bool IsFalse { get; }
    public bool IsNull { get; }
    public bool IsTrue { get; }
    public bool Value { get; }
    public OracleBoolean(bool value);
    public OracleBoolean(int value);
    private static OracleBoolean();
    public bool get_IsFalse();
    public bool get_IsNull();
    public bool get_IsTrue();
    public bool get_Value();
    public sealed virtual int CompareTo(object obj);
    public virtual bool Equals(object value);
    public virtual int GetHashCode();
    public static OracleBoolean Parse(string s);
    public virtual string ToString();
    public static OracleBoolean And(OracleBoolean x, OracleBoolean y);
    public static OracleBoolean Equals(OracleBoolean x, OracleBoolean y);
    public static OracleBoolean NotEquals(OracleBoolean x, OracleBoolean y);
    public static OracleBoolean OnesComplement(OracleBoolean x);
    public static OracleBoolean Or(OracleBoolean x, OracleBoolean y);
    public static OracleBoolean Xor(OracleBoolean x, OracleBoolean y);
    public static OracleBoolean op_Implicit(bool x);
    public static OracleBoolean op_Explicit(string x);
    public static OracleBoolean op_Explicit(OracleNumber x);
    public static bool op_Explicit(OracleBoolean x);
    public static OracleBoolean op_LogicalNot(OracleBoolean x);
    public static OracleBoolean op_OnesComplement(OracleBoolean x);
    public static bool op_True(OracleBoolean x);
    public static bool op_False(OracleBoolean x);
    public static OracleBoolean op_BitwiseAnd(OracleBoolean x, OracleBoolean y);
    public static OracleBoolean op_Equality(OracleBoolean x, OracleBoolean y);
    public static OracleBoolean op_Inequality(OracleBoolean x, OracleBoolean y);
    public static OracleBoolean op_BitwiseOr(OracleBoolean x, OracleBoolean y);
    public static OracleBoolean op_ExclusiveOr(OracleBoolean x, OracleBoolean y);
}
[ObsoleteAttribute("OracleClientFactory has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", "False")]
public class System.Data.OracleClient.OracleClientFactory : DbProviderFactory {
    public static OracleClientFactory Instance;
    private static OracleClientFactory();
    public virtual DbCommand CreateCommand();
    public virtual DbCommandBuilder CreateCommandBuilder();
    public virtual DbConnection CreateConnection();
    public virtual DbConnectionStringBuilder CreateConnectionStringBuilder();
    public virtual DbDataAdapter CreateDataAdapter();
    public virtual DbParameter CreateParameter();
    public virtual CodeAccessPermission CreatePermission(PermissionState state);
}
[ObsoleteAttribute("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", "False")]
[DefaultEventAttribute("RecordsAffected")]
[DesignerAttribute("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[ToolboxItemAttribute("True")]
public class System.Data.OracleClient.OracleCommand : DbCommand {
    [DefaultValueAttribute("")]
[RefreshPropertiesAttribute("1")]
[EditorAttribute("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[ResCategoryAttribute("OracleCategory_Data")]
[ResDescriptionAttribute("DbCommand_CommandText")]
public string CommandText { get; public set; }
    [EditorBrowsableAttribute("1")]
[BrowsableAttribute("False")]
[ResCategoryAttribute("OracleCategory_Data")]
[ResDescriptionAttribute("DbCommand_CommandTimeout")]
[DesignerSerializationVisibilityAttribute("0")]
public int CommandTimeout { get; public set; }
    [ResCategoryAttribute("OracleCategory_Data")]
[ResDescriptionAttribute("DbCommand_CommandType")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
[RefreshPropertiesAttribute("1")]
public CommandType CommandType { get; public set; }
    [DefaultValueAttribute("")]
[ResCategoryAttribute("OracleCategory_Behavior")]
[ResDescriptionAttribute("DbCommand_Connection")]
[EditorAttribute("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public OracleConnection Connection { get; public set; }
    protected DbConnection DbConnection { get; protected set; }
    protected DbParameterCollection DbParameterCollection { get; }
    protected DbTransaction DbTransaction { get; protected set; }
    [EditorBrowsableAttribute("1")]
[BrowsableAttribute("False")]
[DesignOnlyAttribute("True")]
[DefaultValueAttribute("True")]
public bool DesignTimeVisible { get; public set; }
    [ResCategoryAttribute("OracleCategory_Data")]
[DesignerSerializationVisibilityAttribute("2")]
[ResDescriptionAttribute("DbCommand_Parameters")]
public OracleParameterCollection Parameters { get; }
    [BrowsableAttribute("False")]
[ResDescriptionAttribute("DbCommand_Transaction")]
[DesignerSerializationVisibilityAttribute("0")]
public OracleTransaction Transaction { get; public set; }
    [ResDescriptionAttribute("DbCommand_UpdatedRowSource")]
[ResCategoryAttribute("DataCategory_Update")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public UpdateRowSource UpdatedRowSource { get; public set; }
    public OracleCommand(string commandText);
    public OracleCommand(string commandText, OracleConnection connection);
    public OracleCommand(string commandText, OracleConnection connection, OracleTransaction tx);
    public virtual string get_CommandText();
    public virtual void set_CommandText(string value);
    public virtual int get_CommandTimeout();
    public virtual void set_CommandTimeout(int value);
    public void ResetCommandTimeout();
    public virtual CommandType get_CommandType();
    public virtual void set_CommandType(CommandType value);
    public OracleConnection get_Connection();
    public void set_Connection(OracleConnection value);
    protected virtual DbConnection get_DbConnection();
    protected virtual void set_DbConnection(DbConnection value);
    protected virtual DbParameterCollection get_DbParameterCollection();
    protected virtual DbTransaction get_DbTransaction();
    protected virtual void set_DbTransaction(DbTransaction value);
    public virtual bool get_DesignTimeVisible();
    public virtual void set_DesignTimeVisible(bool value);
    public OracleParameterCollection get_Parameters();
    public OracleTransaction get_Transaction();
    public void set_Transaction(OracleTransaction value);
    public virtual UpdateRowSource get_UpdatedRowSource();
    public virtual void set_UpdatedRowSource(UpdateRowSource value);
    public virtual void Cancel();
    public sealed virtual object Clone();
    public OracleParameter CreateParameter();
    protected virtual DbParameter CreateDbParameter();
    protected virtual DbDataReader ExecuteDbDataReader(CommandBehavior behavior);
    public virtual int ExecuteNonQuery();
    public int ExecuteOracleNonQuery(OracleString& rowid);
    public object ExecuteOracleScalar();
    public OracleDataReader ExecuteReader();
    public OracleDataReader ExecuteReader(CommandBehavior behavior);
    public virtual object ExecuteScalar();
    public virtual void Prepare();
}
[ObsoleteAttribute("OracleCommandBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", "False")]
public class System.Data.OracleClient.OracleCommandBuilder : DbCommandBuilder {
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
[DesignerSerializationVisibilityAttribute("0")]
public CatalogLocation CatalogLocation { get; public set; }
    [DesignerSerializationVisibilityAttribute("0")]
[EditorBrowsableAttribute("1")]
[BrowsableAttribute("False")]
public string CatalogSeparator { get; public set; }
    [ResDescriptionAttribute("OracleCommandBuilder_DataAdapter")]
[DefaultValueAttribute("")]
[ResCategoryAttribute("OracleCategory_Update")]
public OracleDataAdapter DataAdapter { get; public set; }
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
[DesignerSerializationVisibilityAttribute("0")]
public string SchemaSeparator { get; public set; }
    public OracleCommandBuilder(OracleDataAdapter adapter);
    private static OracleCommandBuilder();
    public virtual CatalogLocation get_CatalogLocation();
    public virtual void set_CatalogLocation(CatalogLocation value);
    public virtual string get_CatalogSeparator();
    public virtual void set_CatalogSeparator(string value);
    public OracleDataAdapter get_DataAdapter();
    public void set_DataAdapter(OracleDataAdapter value);
    public virtual string get_SchemaSeparator();
    public virtual void set_SchemaSeparator(string value);
    protected virtual void ApplyParameterInfo(DbParameter parameter, DataRow datarow, StatementType statementType, bool whereClause);
    public static void DeriveParameters(OracleCommand command);
    public OracleCommand GetInsertCommand();
    public OracleCommand GetInsertCommand(bool useColumnsForParameterNames);
    public OracleCommand GetUpdateCommand();
    public OracleCommand GetUpdateCommand(bool useColumnsForParameterNames);
    public OracleCommand GetDeleteCommand();
    public OracleCommand GetDeleteCommand(bool useColumnsForParameterNames);
    protected virtual string GetParameterName(int parameterOrdinal);
    protected virtual string GetParameterName(string parameterName);
    protected virtual string GetParameterPlaceholder(int parameterOrdinal);
    public virtual string QuoteIdentifier(string unquotedIdentifier);
    protected virtual void SetRowUpdatingHandler(DbDataAdapter adapter);
    public virtual string UnquoteIdentifier(string quotedIdentifier);
}
[DefaultEventAttribute("InfoMessage")]
[ObsoleteAttribute("OracleConnection has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", "False")]
public class System.Data.OracleClient.OracleConnection : DbConnection {
    [EditorAttribute("Microsoft.VSDesigner.Data.Oracle.Design.OracleConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[DefaultValueAttribute("")]
[SettingsBindableAttribute("True")]
[ResCategoryAttribute("OracleCategory_Data")]
[RecommendedAsConfigurableAttribute("True")]
[RefreshPropertiesAttribute("1")]
[ResDescriptionAttribute("OracleConnection_ConnectionString")]
public string ConnectionString { get; public set; }
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public int ConnectionTimeout { get; }
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public string Database { get; }
    [DesignerSerializationVisibilityAttribute("0")]
[ResDescriptionAttribute("OracleConnection_DataSource")]
[BrowsableAttribute("False")]
public string DataSource { get; }
    [DesignerSerializationVisibilityAttribute("0")]
[ResDescriptionAttribute("OracleConnection_ServerVersion")]
[BrowsableAttribute("False")]
public string ServerVersion { get; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
[ResDescriptionAttribute("DbConnection_State")]
public ConnectionState State { get; }
    public OracleConnection(string connectionString);
    private static OracleConnection();
    public virtual string get_ConnectionString();
    public virtual void set_ConnectionString(string value);
    public virtual int get_ConnectionTimeout();
    public virtual string get_Database();
    public virtual string get_DataSource();
    public virtual string get_ServerVersion();
    public OracleTransaction BeginTransaction();
    public OracleTransaction BeginTransaction(IsolationLevel il);
    public virtual void ChangeDatabase(string value);
    public static void ClearAllPools();
    public static void ClearPool(OracleConnection connection);
    private sealed virtual override object System.ICloneable.Clone();
    public virtual void Close();
    public OracleCommand CreateCommand();
    public void EnlistDistributedTransaction(ITransaction distributedTransaction);
    public virtual void Open();
    public void add_InfoMessage(OracleInfoMessageEventHandler value);
    public void remove_InfoMessage(OracleInfoMessageEventHandler value);
    public virtual ConnectionState get_State();
    protected virtual DbTransaction BeginDbTransaction(IsolationLevel isolationLevel);
    protected virtual DbCommand CreateDbCommand();
    protected virtual void Dispose(bool disposing);
    public virtual void EnlistTransaction(Transaction transaction);
    public virtual DataTable GetSchema();
    public virtual DataTable GetSchema(string collectionName);
    public virtual DataTable GetSchema(string collectionName, String[] restrictionValues);
}
[DefaultMemberAttribute("Item")]
[DefaultPropertyAttribute("DataSource")]
[ObsoleteAttribute("OracleConnectionStringBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", "False")]
[TypeConverterAttribute("System.Data.OracleClient.OracleConnectionStringBuilder/OracleConnectionStringBuilderConverter")]
public class System.Data.OracleClient.OracleConnectionStringBuilder : DbConnectionStringBuilder {
    public object Item { get; public set; }
    [ResCategoryAttribute("DataCategory_Source")]
[RefreshPropertiesAttribute("1")]
[DisplayNameAttribute("Data Source")]
[ResDescriptionAttribute("DbConnectionString_DataSource")]
public string DataSource { get; public set; }
    [RefreshPropertiesAttribute("1")]
[ResDescriptionAttribute("DbConnectionString_Enlist")]
[ResCategoryAttribute("DataCategory_Pooling")]
[DisplayNameAttribute("Enlist")]
public bool Enlist { get; public set; }
    [DisplayNameAttribute("Integrated Security")]
[ResCategoryAttribute("DataCategory_Security")]
[ResDescriptionAttribute("DbConnectionString_IntegratedSecurity")]
[RefreshPropertiesAttribute("1")]
public bool IntegratedSecurity { get; public set; }
    [RefreshPropertiesAttribute("1")]
[ResCategoryAttribute("DataCategory_Pooling")]
[DisplayNameAttribute("Load Balance Timeout")]
[ResDescriptionAttribute("DbConnectionString_LoadBalanceTimeout")]
public int LoadBalanceTimeout { get; public set; }
    [ResDescriptionAttribute("DbConnectionString_MaxPoolSize")]
[RefreshPropertiesAttribute("1")]
[ResCategoryAttribute("DataCategory_Pooling")]
[DisplayNameAttribute("Max Pool Size")]
public int MaxPoolSize { get; public set; }
    [DisplayNameAttribute("Min Pool Size")]
[ResCategoryAttribute("DataCategory_Pooling")]
[ResDescriptionAttribute("DbConnectionString_MinPoolSize")]
[RefreshPropertiesAttribute("1")]
public int MinPoolSize { get; public set; }
    [ResCategoryAttribute("DataCategory_Initialization")]
[ResDescriptionAttribute("DbConnectionString_OmitOracleConnectionName")]
[DisplayNameAttribute("Omit Oracle Connection Name")]
[RefreshPropertiesAttribute("1")]
public bool OmitOracleConnectionName { get; public set; }
    [DisplayNameAttribute("Password")]
[PasswordPropertyTextAttribute("True")]
[ResDescriptionAttribute("DbConnectionString_Password")]
[RefreshPropertiesAttribute("1")]
[ResCategoryAttribute("DataCategory_Security")]
public string Password { get; public set; }
    [ResCategoryAttribute("DataCategory_Security")]
[ResDescriptionAttribute("DbConnectionString_PersistSecurityInfo")]
[RefreshPropertiesAttribute("1")]
[DisplayNameAttribute("Persist Security Info")]
public bool PersistSecurityInfo { get; public set; }
    [ResCategoryAttribute("DataCategory_Pooling")]
[RefreshPropertiesAttribute("1")]
[ResDescriptionAttribute("DbConnectionString_Pooling")]
[DisplayNameAttribute("Pooling")]
public bool Pooling { get; public set; }
    [ResDescriptionAttribute("DbConnectionString_Unicode")]
[RefreshPropertiesAttribute("1")]
[ResCategoryAttribute("DataCategory_Initialization")]
[DisplayNameAttribute("Unicode")]
public bool Unicode { get; public set; }
    [ResCategoryAttribute("DataCategory_Security")]
[RefreshPropertiesAttribute("1")]
[DisplayNameAttribute("User ID")]
[ResDescriptionAttribute("DbConnectionString_UserID")]
public string UserID { get; public set; }
    public bool IsFixedSize { get; }
    public ICollection Keys { get; }
    public ICollection Values { get; }
    private static OracleConnectionStringBuilder();
    public OracleConnectionStringBuilder(string connectionString);
    public virtual object get_Item(string keyword);
    public virtual void set_Item(string keyword, object value);
    public string get_DataSource();
    public void set_DataSource(string value);
    public bool get_Enlist();
    public void set_Enlist(bool value);
    public bool get_IntegratedSecurity();
    public void set_IntegratedSecurity(bool value);
    public int get_LoadBalanceTimeout();
    public void set_LoadBalanceTimeout(int value);
    public int get_MaxPoolSize();
    public void set_MaxPoolSize(int value);
    public int get_MinPoolSize();
    public void set_MinPoolSize(int value);
    public bool get_OmitOracleConnectionName();
    public void set_OmitOracleConnectionName(bool value);
    public string get_Password();
    public void set_Password(string value);
    public bool get_PersistSecurityInfo();
    public void set_PersistSecurityInfo(bool value);
    public bool get_Pooling();
    public void set_Pooling(bool value);
    public bool get_Unicode();
    public void set_Unicode(bool value);
    public string get_UserID();
    public void set_UserID(string value);
    public virtual bool get_IsFixedSize();
    public virtual ICollection get_Keys();
    public virtual ICollection get_Values();
    public virtual void Clear();
    internal void ClearPropertyDescriptors();
    public virtual bool ContainsKey(string keyword);
    private Attribute[] GetAttributesFromCollection(AttributeCollection collection);
    protected virtual void GetProperties(Hashtable propertyDescriptors);
    public virtual bool Remove(string keyword);
    public virtual bool ShouldSerialize(string keyword);
    public virtual bool TryGetValue(string keyword, Object& value);
}
[ObsoleteAttribute("OracleDataAdapter has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", "False")]
[ToolboxItemAttribute("Microsoft.VSDesigner.Data.VS.OracleDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[DesignerAttribute("Microsoft.VSDesigner.Data.VS.OracleDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[DefaultEventAttribute("RowUpdated")]
public class System.Data.OracleClient.OracleDataAdapter : DbDataAdapter {
    [EditorAttribute("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[DefaultValueAttribute("")]
[ResDescriptionAttribute("DbDataAdapter_DeleteCommand")]
[ResCategoryAttribute("OracleCategory_Update")]
public OracleCommand DeleteCommand { get; public set; }
    private IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; private set; }
    [ResCategoryAttribute("OracleCategory_Update")]
[EditorAttribute("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[ResDescriptionAttribute("DbDataAdapter_InsertCommand")]
[DefaultValueAttribute("")]
public OracleCommand InsertCommand { get; public set; }
    private IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; private set; }
    [EditorAttribute("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[ResDescriptionAttribute("DbDataAdapter_SelectCommand")]
[ResCategoryAttribute("OracleCategory_Fill")]
[DefaultValueAttribute("")]
public OracleCommand SelectCommand { get; public set; }
    private IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; private set; }
    public int UpdateBatchSize { get; public set; }
    [DefaultValueAttribute("")]
[EditorAttribute("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[ResDescriptionAttribute("DbDataAdapter_UpdateCommand")]
[ResCategoryAttribute("OracleCategory_Update")]
public OracleCommand UpdateCommand { get; public set; }
    private IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; private set; }
    public OracleDataAdapter(OracleCommand selectCommand);
    public OracleDataAdapter(string selectCommandText, string selectConnectionString);
    public OracleDataAdapter(string selectCommandText, OracleConnection selectConnection);
    private static OracleDataAdapter();
    public OracleCommand get_DeleteCommand();
    public void set_DeleteCommand(OracleCommand value);
    private sealed virtual override IDbCommand System.Data.IDbDataAdapter.get_DeleteCommand();
    private sealed virtual override void System.Data.IDbDataAdapter.set_DeleteCommand(IDbCommand value);
    public OracleCommand get_InsertCommand();
    public void set_InsertCommand(OracleCommand value);
    private sealed virtual override IDbCommand System.Data.IDbDataAdapter.get_InsertCommand();
    private sealed virtual override void System.Data.IDbDataAdapter.set_InsertCommand(IDbCommand value);
    public OracleCommand get_SelectCommand();
    public void set_SelectCommand(OracleCommand value);
    private sealed virtual override IDbCommand System.Data.IDbDataAdapter.get_SelectCommand();
    private sealed virtual override void System.Data.IDbDataAdapter.set_SelectCommand(IDbCommand value);
    public virtual int get_UpdateBatchSize();
    public virtual void set_UpdateBatchSize(int value);
    public OracleCommand get_UpdateCommand();
    public void set_UpdateCommand(OracleCommand value);
    private sealed virtual override IDbCommand System.Data.IDbDataAdapter.get_UpdateCommand();
    private sealed virtual override void System.Data.IDbDataAdapter.set_UpdateCommand(IDbCommand value);
    protected virtual int AddToBatch(IDbCommand command);
    protected virtual void ClearBatch();
    private sealed virtual override object System.ICloneable.Clone();
    protected virtual RowUpdatedEventArgs CreateRowUpdatedEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping);
    protected virtual RowUpdatingEventArgs CreateRowUpdatingEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping);
    protected virtual int ExecuteBatch();
    protected virtual IDataParameter GetBatchedParameter(int commandIdentifier, int parameterIndex);
    protected virtual bool GetBatchedRecordsAffected(int commandIdentifier, Int32& recordsAffected, Exception& error);
    protected virtual void InitializeBatching();
    protected virtual void OnRowUpdated(RowUpdatedEventArgs value);
    protected virtual void OnRowUpdating(RowUpdatingEventArgs value);
    protected virtual void TerminateBatching();
    public void add_RowUpdated(OracleRowUpdatedEventHandler value);
    public void remove_RowUpdated(OracleRowUpdatedEventHandler value);
    public void add_RowUpdating(OracleRowUpdatingEventHandler value);
    public void remove_RowUpdating(OracleRowUpdatingEventHandler value);
}
[DefaultMemberAttribute("Item")]
public class System.Data.OracleClient.OracleDataReader : DbDataReader {
    public int Depth { get; }
    public int FieldCount { get; }
    public bool HasRows { get; }
    public bool IsClosed { get; }
    public int RecordsAffected { get; }
    public object Item { get; }
    public object Item { get; }
    public virtual int get_Depth();
    public virtual int get_FieldCount();
    public virtual bool get_HasRows();
    public virtual bool get_IsClosed();
    public virtual int get_RecordsAffected();
    public virtual object get_Item(int i);
    public virtual object get_Item(string name);
    public virtual void Close();
    public virtual string GetDataTypeName(int i);
    public virtual Type GetProviderSpecificFieldType(int i);
    public virtual IEnumerator GetEnumerator();
    public virtual Type GetFieldType(int i);
    public virtual string GetName(int i);
    public virtual int GetOrdinal(string name);
    public virtual DataTable GetSchemaTable();
    public virtual object GetValue(int i);
    public virtual int GetValues(Object[] values);
    public virtual bool GetBoolean(int i);
    public virtual byte GetByte(int i);
    public virtual long GetBytes(int i, long fieldOffset, Byte[] buffer2, int bufferoffset, int length);
    public virtual char GetChar(int i);
    public virtual long GetChars(int i, long fieldOffset, Char[] buffer2, int bufferoffset, int length);
    public virtual DateTime GetDateTime(int i);
    public virtual decimal GetDecimal(int i);
    public virtual double GetDouble(int i);
    public virtual float GetFloat(int i);
    public virtual Guid GetGuid(int i);
    public virtual short GetInt16(int i);
    public virtual int GetInt32(int i);
    public virtual long GetInt64(int i);
    public virtual object GetProviderSpecificValue(int i);
    public virtual int GetProviderSpecificValues(Object[] values);
    public virtual string GetString(int i);
    public TimeSpan GetTimeSpan(int i);
    public OracleBFile GetOracleBFile(int i);
    public OracleBinary GetOracleBinary(int i);
    public OracleDateTime GetOracleDateTime(int i);
    public OracleLob GetOracleLob(int i);
    public OracleMonthSpan GetOracleMonthSpan(int i);
    public OracleNumber GetOracleNumber(int i);
    public OracleString GetOracleString(int i);
    public OracleTimeSpan GetOracleTimeSpan(int i);
    public object GetOracleValue(int i);
    public int GetOracleValues(Object[] values);
    public virtual bool IsDBNull(int i);
    public virtual bool NextResult();
    public virtual bool Read();
}
public class System.Data.OracleClient.OracleDateTime : ValueType {
    private static int MaxOracleFSecPrecision;
    private static byte x_DATE_Length;
    private static byte x_TIMESTAMP_Length;
    private static byte x_TIMESTAMP_WITH_TIMEZONE_Length;
    private static int FractionalSecondsPerTick;
    private Byte[] _value;
    public static OracleDateTime MaxValue;
    public static OracleDateTime MinValue;
    public static OracleDateTime Null;
    public bool IsNull { get; }
    public DateTime Value { get; }
    public int Year { get; }
    public int Month { get; }
    public int Day { get; }
    public int Hour { get; }
    public int Minute { get; }
    public int Second { get; }
    public int Millisecond { get; }
    public OracleDateTime(DateTime dt);
    public OracleDateTime(long ticks);
    public OracleDateTime(int year, int month, int day);
    public OracleDateTime(int year, int month, int day, Calendar calendar);
    public OracleDateTime(int year, int month, int day, int hour, int minute, int second);
    public OracleDateTime(int year, int month, int day, int hour, int minute, int second, Calendar calendar);
    public OracleDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond);
    public OracleDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar);
    public OracleDateTime(OracleDateTime from);
    private static OracleDateTime();
    public sealed virtual bool get_IsNull();
    public DateTime get_Value();
    public int get_Year();
    public int get_Month();
    public int get_Day();
    public int get_Hour();
    public int get_Minute();
    public int get_Second();
    public int get_Millisecond();
    public sealed virtual int CompareTo(object obj);
    public virtual bool Equals(object value);
    public virtual int GetHashCode();
    public static OracleDateTime Parse(string s);
    public virtual string ToString();
    public static OracleBoolean Equals(OracleDateTime x, OracleDateTime y);
    public static OracleBoolean GreaterThan(OracleDateTime x, OracleDateTime y);
    public static OracleBoolean GreaterThanOrEqual(OracleDateTime x, OracleDateTime y);
    public static OracleBoolean LessThan(OracleDateTime x, OracleDateTime y);
    public static OracleBoolean LessThanOrEqual(OracleDateTime x, OracleDateTime y);
    public static OracleBoolean NotEquals(OracleDateTime x, OracleDateTime y);
    public static DateTime op_Explicit(OracleDateTime x);
    public static OracleDateTime op_Explicit(string x);
    public static OracleBoolean op_Equality(OracleDateTime x, OracleDateTime y);
    public static OracleBoolean op_GreaterThan(OracleDateTime x, OracleDateTime y);
    public static OracleBoolean op_GreaterThanOrEqual(OracleDateTime x, OracleDateTime y);
    public static OracleBoolean op_LessThan(OracleDateTime x, OracleDateTime y);
    public static OracleBoolean op_LessThanOrEqual(OracleDateTime x, OracleDateTime y);
    public static OracleBoolean op_Inequality(OracleDateTime x, OracleDateTime y);
}
public class System.Data.OracleClient.OracleException : DbException {
    public int Code { get; }
    private OracleException(SerializationInfo si, StreamingContext sc);
    private OracleException(string message, int code);
    public int get_Code();
    public virtual void GetObjectData(SerializationInfo si, StreamingContext context);
}
public class System.Data.OracleClient.OracleInfoMessageEventArgs : EventArgs {
    public int Code { get; }
    public string Message { get; }
    public string Source { get; }
    public int get_Code();
    public string get_Message();
    public string get_Source();
    public virtual string ToString();
}
public class System.Data.OracleClient.OracleInfoMessageEventHandler : MulticastDelegate {
    public OracleInfoMessageEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, OracleInfoMessageEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, OracleInfoMessageEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class System.Data.OracleClient.OracleLob : Stream {
    public static OracleLob Null;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public int ChunkSize { get; }
    public OracleConnection Connection { get; }
    public bool IsBatched { get; }
    public bool IsNull { get; }
    public bool IsTemporary { get; }
    public OracleType LobType { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public object Value { get; }
    private static OracleLob();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public int get_ChunkSize();
    public OracleConnection get_Connection();
    public bool get_IsBatched();
    public sealed virtual bool get_IsNull();
    public bool get_IsTemporary();
    public OracleType get_LobType();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public object get_Value();
    public void Append(OracleLob source);
    public void BeginBatch();
    public void BeginBatch(OracleLobOpenMode mode);
    public sealed virtual object Clone();
    protected virtual void Dispose(bool disposing);
    public long CopyTo(OracleLob destination);
    public long CopyTo(OracleLob destination, long destinationOffset);
    public long CopyTo(long sourceOffset, OracleLob destination, long destinationOffset, long amount);
    public void EndBatch();
    public long Erase();
    public long Erase(long offset, long amount);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void WriteByte(byte value);
}
public enum System.Data.OracleClient.OracleLobOpenMode : Enum {
    public int value__;
    public static OracleLobOpenMode ReadOnly;
    public static OracleLobOpenMode ReadWrite;
}
public class System.Data.OracleClient.OracleMonthSpan : ValueType {
    private static int MaxMonth;
    private static int MinMonth;
    private static int NullValue;
    private int _value;
    public static OracleMonthSpan MaxValue;
    public static OracleMonthSpan MinValue;
    public static OracleMonthSpan Null;
    public bool IsNull { get; }
    public int Value { get; }
    public OracleMonthSpan(int months);
    public OracleMonthSpan(int years, int months);
    public OracleMonthSpan(OracleMonthSpan from);
    private static OracleMonthSpan();
    public sealed virtual bool get_IsNull();
    public int get_Value();
    public sealed virtual int CompareTo(object obj);
    public virtual bool Equals(object value);
    public virtual int GetHashCode();
    public static OracleMonthSpan Parse(string s);
    public virtual string ToString();
    public static OracleBoolean Equals(OracleMonthSpan x, OracleMonthSpan y);
    public static OracleBoolean GreaterThan(OracleMonthSpan x, OracleMonthSpan y);
    public static OracleBoolean GreaterThanOrEqual(OracleMonthSpan x, OracleMonthSpan y);
    public static OracleBoolean LessThan(OracleMonthSpan x, OracleMonthSpan y);
    public static OracleBoolean LessThanOrEqual(OracleMonthSpan x, OracleMonthSpan y);
    public static OracleBoolean NotEquals(OracleMonthSpan x, OracleMonthSpan y);
    public static int op_Explicit(OracleMonthSpan x);
    public static OracleMonthSpan op_Explicit(string x);
    public static OracleBoolean op_Equality(OracleMonthSpan x, OracleMonthSpan y);
    public static OracleBoolean op_GreaterThan(OracleMonthSpan x, OracleMonthSpan y);
    public static OracleBoolean op_GreaterThanOrEqual(OracleMonthSpan x, OracleMonthSpan y);
    public static OracleBoolean op_LessThan(OracleMonthSpan x, OracleMonthSpan y);
    public static OracleBoolean op_LessThanOrEqual(OracleMonthSpan x, OracleMonthSpan y);
    public static OracleBoolean op_Inequality(OracleMonthSpan x, OracleMonthSpan y);
}
public class System.Data.OracleClient.OracleNumber : ValueType {
    private static string WholeDigitPattern;
    private static int WholeDigitPattern_Length;
    private Byte[] _value;
    public static OracleNumber E;
    public static int MaxPrecision;
    public static int MaxScale;
    public static int MinScale;
    public static OracleNumber MaxValue;
    public static OracleNumber MinValue;
    public static OracleNumber MinusOne;
    public static OracleNumber Null;
    public static OracleNumber One;
    public static OracleNumber PI;
    public static OracleNumber Zero;
    public bool IsNull { get; }
    public decimal Value { get; }
    public OracleNumber(decimal decValue);
    public OracleNumber(double dblValue);
    public OracleNumber(int intValue);
    public OracleNumber(long longValue);
    public OracleNumber(OracleNumber from);
    private static OracleNumber();
    public sealed virtual bool get_IsNull();
    public decimal get_Value();
    public sealed virtual int CompareTo(object obj);
    public virtual bool Equals(object value);
    public virtual int GetHashCode();
    public static OracleNumber Parse(string s);
    public virtual string ToString();
    public static OracleBoolean op_Equality(OracleNumber x, OracleNumber y);
    public static OracleBoolean op_GreaterThan(OracleNumber x, OracleNumber y);
    public static OracleBoolean op_GreaterThanOrEqual(OracleNumber x, OracleNumber y);
    public static OracleBoolean op_LessThan(OracleNumber x, OracleNumber y);
    public static OracleBoolean op_LessThanOrEqual(OracleNumber x, OracleNumber y);
    public static OracleBoolean op_Inequality(OracleNumber x, OracleNumber y);
    public static OracleNumber op_UnaryNegation(OracleNumber x);
    public static OracleNumber op_Addition(OracleNumber x, OracleNumber y);
    public static OracleNumber op_Subtraction(OracleNumber x, OracleNumber y);
    public static OracleNumber op_Multiply(OracleNumber x, OracleNumber y);
    public static OracleNumber op_Division(OracleNumber x, OracleNumber y);
    public static OracleNumber op_Modulus(OracleNumber x, OracleNumber y);
    public static decimal op_Explicit(OracleNumber x);
    public static double op_Explicit(OracleNumber x);
    public static int op_Explicit(OracleNumber x);
    public static long op_Explicit(OracleNumber x);
    public static OracleNumber op_Explicit(decimal x);
    public static OracleNumber op_Explicit(double x);
    public static OracleNumber op_Explicit(int x);
    public static OracleNumber op_Explicit(long x);
    public static OracleNumber op_Explicit(string x);
    public static OracleNumber Abs(OracleNumber n);
    public static OracleNumber Acos(OracleNumber n);
    public static OracleNumber Add(OracleNumber x, OracleNumber y);
    public static OracleNumber Asin(OracleNumber n);
    public static OracleNumber Atan(OracleNumber n);
    public static OracleNumber Atan2(OracleNumber y, OracleNumber x);
    public static OracleNumber Ceiling(OracleNumber n);
    public static OracleNumber Cos(OracleNumber n);
    public static OracleNumber Cosh(OracleNumber n);
    public static OracleNumber Divide(OracleNumber x, OracleNumber y);
    public static OracleBoolean Equals(OracleNumber x, OracleNumber y);
    public static OracleNumber Exp(OracleNumber p);
    public static OracleNumber Floor(OracleNumber n);
    public static OracleBoolean GreaterThan(OracleNumber x, OracleNumber y);
    public static OracleBoolean GreaterThanOrEqual(OracleNumber x, OracleNumber y);
    public static OracleBoolean LessThan(OracleNumber x, OracleNumber y);
    public static OracleBoolean LessThanOrEqual(OracleNumber x, OracleNumber y);
    public static OracleNumber Log(OracleNumber n);
    public static OracleNumber Log(OracleNumber n, int newBase);
    public static OracleNumber Log(OracleNumber n, OracleNumber newBase);
    public static OracleNumber Log10(OracleNumber n);
    public static OracleNumber Max(OracleNumber x, OracleNumber y);
    public static OracleNumber Min(OracleNumber x, OracleNumber y);
    public static OracleNumber Modulo(OracleNumber x, OracleNumber y);
    public static OracleNumber Multiply(OracleNumber x, OracleNumber y);
    public static OracleNumber Negate(OracleNumber x);
    public static OracleBoolean NotEquals(OracleNumber x, OracleNumber y);
    public static OracleNumber Pow(OracleNumber x, int y);
    public static OracleNumber Pow(OracleNumber x, OracleNumber y);
    public static OracleNumber Round(OracleNumber n, int position);
    public static OracleNumber Shift(OracleNumber n, int digits);
    public static OracleNumber Sign(OracleNumber n);
    public static OracleNumber Sin(OracleNumber n);
    public static OracleNumber Sinh(OracleNumber n);
    public static OracleNumber Sqrt(OracleNumber n);
    public static OracleNumber Subtract(OracleNumber x, OracleNumber y);
    public static OracleNumber Tan(OracleNumber n);
    public static OracleNumber Tanh(OracleNumber n);
    public static OracleNumber Truncate(OracleNumber n, int position);
}
[TypeConverterAttribute("System.Data.OracleClient.OracleParameter/OracleParameterConverter")]
public class System.Data.OracleClient.OracleParameter : DbParameter {
    public DbType DbType { get; public set; }
    [ResDescriptionAttribute("OracleParameter_OracleType")]
[RefreshPropertiesAttribute("1")]
[ResCategoryAttribute("OracleCategory_Data")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
[DbProviderSpecificTypePropertyAttribute("True")]
public OracleType OracleType { get; public set; }
    [ResCategoryAttribute("DataCategory_Data")]
[ResDescriptionAttribute("DbParameter_ParameterName")]
public string ParameterName { get; public set; }
    [EditorBrowsableAttribute("1")]
[BrowsableAttribute("False")]
[ObsoleteAttribute("Precision has been deprecated.  Use the Math classes to explicitly set the precision of a decimal.  http://go.microsoft.com/fwlink/?linkid=14202")]
public byte Precision { get; public set; }
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Scale has been deprecated.  Use the Math classes to explicitly set the scale of a decimal.  http://go.microsoft.com/fwlink/?linkid=14202")]
public byte Scale { get; public set; }
    [RefreshPropertiesAttribute("1")]
[TypeConverterAttribute("System.ComponentModel.StringConverter")]
[ResCategoryAttribute("DataCategory_Data")]
[ResDescriptionAttribute("DbParameter_Value")]
public object Value { get; public set; }
    [ResDescriptionAttribute("DbParameter_Direction")]
[RefreshPropertiesAttribute("1")]
[ResCategoryAttribute("DataCategory_Data")]
public ParameterDirection Direction { get; public set; }
    public bool IsNullable { get; public set; }
    [ResCategoryAttribute("DataCategory_Data")]
[EditorBrowsableAttribute("2")]
[BrowsableAttribute("False")]
[ResDescriptionAttribute("DbParameter_Offset")]
public int Offset { get; public set; }
    [ResCategoryAttribute("DataCategory_Data")]
[ResDescriptionAttribute("DbParameter_Size")]
public int Size { get; public set; }
    [ResDescriptionAttribute("DbParameter_SourceColumn")]
[ResCategoryAttribute("DataCategory_Update")]
public string SourceColumn { get; public set; }
    public bool SourceColumnNullMapping { get; public set; }
    [ResDescriptionAttribute("DbParameter_SourceVersion")]
[ResCategoryAttribute("DataCategory_Update")]
public DataRowVersion SourceVersion { get; public set; }
    public OracleParameter(string name, object value);
    public OracleParameter(string name, OracleType oracleType);
    public OracleParameter(string name, OracleType oracleType, int size);
    public OracleParameter(string name, OracleType oracleType, int size, string srcColumn);
    public OracleParameter(string name, OracleType oracleType, int size, ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, DataRowVersion srcVersion, object value);
    public OracleParameter(string name, OracleType oracleType, int size, ParameterDirection direction, string sourceColumn, DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);
    public virtual DbType get_DbType();
    public virtual void set_DbType(DbType value);
    public virtual void ResetDbType();
    public OracleType get_OracleType();
    public void set_OracleType(OracleType value);
    public void ResetOracleType();
    public virtual string get_ParameterName();
    public virtual void set_ParameterName(string value);
    public sealed virtual byte get_Precision();
    public sealed virtual void set_Precision(byte value);
    public sealed virtual byte get_Scale();
    public sealed virtual void set_Scale(byte value);
    private sealed virtual override object System.ICloneable.Clone();
    public virtual object get_Value();
    public virtual void set_Value(object value);
    public virtual ParameterDirection get_Direction();
    public virtual void set_Direction(ParameterDirection value);
    public virtual bool get_IsNullable();
    public virtual void set_IsNullable(bool value);
    public int get_Offset();
    public void set_Offset(int value);
    public virtual int get_Size();
    public virtual void set_Size(int value);
    public virtual string get_SourceColumn();
    public virtual void set_SourceColumn(string value);
    public virtual bool get_SourceColumnNullMapping();
    public virtual void set_SourceColumnNullMapping(bool value);
    public virtual DataRowVersion get_SourceVersion();
    public virtual void set_SourceVersion(DataRowVersion value);
    public virtual string ToString();
}
[DefaultMemberAttribute("Item")]
[EditorAttribute("Microsoft.VSDesigner.Data.Design.DBParametersEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[ListBindableAttribute("False")]
public class System.Data.OracleClient.OracleParameterCollection : DbParameterCollection {
    public OracleParameter Item { get; public set; }
    public OracleParameter Item { get; public set; }
    public int Count { get; }
    public bool IsFixedSize { get; }
    public bool IsReadOnly { get; }
    public bool IsSynchronized { get; }
    public object SyncRoot { get; }
    private static OracleParameterCollection();
    public OracleParameter get_Item(int index);
    public void set_Item(int index, OracleParameter value);
    public OracleParameter get_Item(string parameterName);
    public void set_Item(string parameterName, OracleParameter value);
    public OracleParameter Add(OracleParameter value);
    [ObsoleteAttribute("Add(String parameterName, Object value) has been deprecated.  Use AddWithValue(String parameterName, Object value).  http://go.microsoft.com/fwlink/?linkid=14202", "False")]
[EditorBrowsableAttribute("1")]
public OracleParameter Add(string parameterName, object value);
    public OracleParameter Add(string parameterName, OracleType dataType);
    public OracleParameter Add(string parameterName, OracleType dataType, int size);
    public OracleParameter Add(string parameterName, OracleType dataType, int size, string srcColumn);
    public void AddRange(OracleParameter[] values);
    public OracleParameter AddWithValue(string parameterName, object value);
    public virtual bool Contains(string parameterName);
    public bool Contains(OracleParameter value);
    public void CopyTo(OracleParameter[] array, int index);
    public int IndexOf(OracleParameter value);
    public void Insert(int index, OracleParameter value);
    public void Remove(OracleParameter value);
    public virtual int get_Count();
    public virtual bool get_IsFixedSize();
    public virtual bool get_IsReadOnly();
    public virtual bool get_IsSynchronized();
    public virtual object get_SyncRoot();
    [EditorBrowsableAttribute("1")]
public virtual int Add(object value);
    public virtual void AddRange(Array values);
    public virtual void Clear();
    public virtual bool Contains(object value);
    public virtual void CopyTo(Array array, int index);
    public virtual IEnumerator GetEnumerator();
    protected virtual DbParameter GetParameter(int index);
    protected virtual DbParameter GetParameter(string parameterName);
    public virtual int IndexOf(string parameterName);
    public virtual int IndexOf(object value);
    public virtual void Insert(int index, object value);
    public virtual void Remove(object value);
    public virtual void RemoveAt(int index);
    public virtual void RemoveAt(string parameterName);
    protected virtual void SetParameter(int index, DbParameter value);
    protected virtual void SetParameter(string parameterName, DbParameter value);
}
[ObsoleteAttribute("OraclePermission has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", "False")]
public class System.Data.OracleClient.OraclePermission : CodeAccessPermission {
    public bool AllowBlankPassword { get; public set; }
    public OraclePermission(PermissionState state);
    public void Add(string connectionString, string restrictions, KeyRestrictionBehavior behavior);
    public virtual IPermission Copy();
    public bool get_AllowBlankPassword();
    public void set_AllowBlankPassword(bool value);
    public virtual IPermission Intersect(IPermission target);
    public virtual bool IsSubsetOf(IPermission target);
    public sealed virtual bool IsUnrestricted();
    public virtual IPermission Union(IPermission target);
    public virtual void FromXml(SecurityElement securityElement);
    public virtual SecurityElement ToXml();
}
[ObsoleteAttribute("OraclePermissionAttribute has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", "False")]
[AttributeUsageAttribute("109")]
public class System.Data.OracleClient.OraclePermissionAttribute : CodeAccessSecurityAttribute {
    public bool AllowBlankPassword { get; public set; }
    public string ConnectionString { get; public set; }
    public KeyRestrictionBehavior KeyRestrictionBehavior { get; public set; }
    public string KeyRestrictions { get; public set; }
    public OraclePermissionAttribute(SecurityAction action);
    public virtual IPermission CreatePermission();
    public bool get_AllowBlankPassword();
    public void set_AllowBlankPassword(bool value);
    public string get_ConnectionString();
    public void set_ConnectionString(string value);
    public KeyRestrictionBehavior get_KeyRestrictionBehavior();
    public void set_KeyRestrictionBehavior(KeyRestrictionBehavior value);
    public string get_KeyRestrictions();
    public void set_KeyRestrictions(string value);
    [EditorBrowsableAttribute("1")]
public bool ShouldSerializeConnectionString();
    [EditorBrowsableAttribute("1")]
public bool ShouldSerializeKeyRestrictions();
}
public class System.Data.OracleClient.OracleRowUpdatedEventArgs : RowUpdatedEventArgs {
    public OracleCommand Command { get; }
    public OracleRowUpdatedEventArgs(DataRow row, IDbCommand command, StatementType statementType, DataTableMapping tableMapping);
    public OracleCommand get_Command();
}
public class System.Data.OracleClient.OracleRowUpdatedEventHandler : MulticastDelegate {
    public OracleRowUpdatedEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, OracleRowUpdatedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, OracleRowUpdatedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class System.Data.OracleClient.OracleRowUpdatingEventArgs : RowUpdatingEventArgs {
    public OracleCommand Command { get; public set; }
    protected IDbCommand BaseCommand { get; protected set; }
    public OracleRowUpdatingEventArgs(DataRow row, IDbCommand command, StatementType statementType, DataTableMapping tableMapping);
    public OracleCommand get_Command();
    public void set_Command(OracleCommand value);
    protected virtual IDbCommand get_BaseCommand();
    protected virtual void set_BaseCommand(IDbCommand value);
}
public class System.Data.OracleClient.OracleRowUpdatingEventHandler : MulticastDelegate {
    public OracleRowUpdatingEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, OracleRowUpdatingEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, OracleRowUpdatingEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[DefaultMemberAttribute("Item")]
public class System.Data.OracleClient.OracleString : ValueType {
    private string _value;
    public static OracleString Empty;
    public static OracleString Null;
    public bool IsNull { get; }
    public int Length { get; }
    public string Value { get; }
    public char Item { get; }
    public OracleString(string s);
    private static OracleString();
    public sealed virtual bool get_IsNull();
    public int get_Length();
    public string get_Value();
    public char get_Item(int index);
    public sealed virtual int CompareTo(object obj);
    public virtual bool Equals(object value);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static OracleString Concat(OracleString x, OracleString y);
    public static OracleBoolean Equals(OracleString x, OracleString y);
    public static OracleBoolean GreaterThan(OracleString x, OracleString y);
    public static OracleBoolean GreaterThanOrEqual(OracleString x, OracleString y);
    public static OracleBoolean LessThan(OracleString x, OracleString y);
    public static OracleBoolean LessThanOrEqual(OracleString x, OracleString y);
    public static OracleBoolean NotEquals(OracleString x, OracleString y);
    public static OracleString op_Implicit(string s);
    public static string op_Explicit(OracleString x);
    public static OracleString op_Addition(OracleString x, OracleString y);
    public static OracleBoolean op_Equality(OracleString x, OracleString y);
    public static OracleBoolean op_GreaterThan(OracleString x, OracleString y);
    public static OracleBoolean op_GreaterThanOrEqual(OracleString x, OracleString y);
    public static OracleBoolean op_LessThan(OracleString x, OracleString y);
    public static OracleBoolean op_LessThanOrEqual(OracleString x, OracleString y);
    public static OracleBoolean op_Inequality(OracleString x, OracleString y);
}
public class System.Data.OracleClient.OracleTimeSpan : ValueType {
    private static int FractionalSecondsPerTick;
    private Byte[] _value;
    public static OracleTimeSpan MaxValue;
    public static OracleTimeSpan MinValue;
    public static OracleTimeSpan Null;
    public bool IsNull { get; }
    public TimeSpan Value { get; }
    public int Days { get; }
    public int Hours { get; }
    public int Minutes { get; }
    public int Seconds { get; }
    public int Milliseconds { get; }
    public OracleTimeSpan(TimeSpan ts);
    public OracleTimeSpan(long ticks);
    public OracleTimeSpan(int hours, int minutes, int seconds);
    public OracleTimeSpan(int days, int hours, int minutes, int seconds);
    public OracleTimeSpan(int days, int hours, int minutes, int seconds, int milliseconds);
    public OracleTimeSpan(OracleTimeSpan from);
    private static OracleTimeSpan();
    public sealed virtual bool get_IsNull();
    public TimeSpan get_Value();
    public int get_Days();
    public int get_Hours();
    public int get_Minutes();
    public int get_Seconds();
    public int get_Milliseconds();
    public sealed virtual int CompareTo(object obj);
    public virtual bool Equals(object value);
    public virtual int GetHashCode();
    public static OracleTimeSpan Parse(string s);
    public virtual string ToString();
    public static OracleBoolean Equals(OracleTimeSpan x, OracleTimeSpan y);
    public static OracleBoolean GreaterThan(OracleTimeSpan x, OracleTimeSpan y);
    public static OracleBoolean GreaterThanOrEqual(OracleTimeSpan x, OracleTimeSpan y);
    public static OracleBoolean LessThan(OracleTimeSpan x, OracleTimeSpan y);
    public static OracleBoolean LessThanOrEqual(OracleTimeSpan x, OracleTimeSpan y);
    public static OracleBoolean NotEquals(OracleTimeSpan x, OracleTimeSpan y);
    public static TimeSpan op_Explicit(OracleTimeSpan x);
    public static OracleTimeSpan op_Explicit(string x);
    public static OracleBoolean op_Equality(OracleTimeSpan x, OracleTimeSpan y);
    public static OracleBoolean op_GreaterThan(OracleTimeSpan x, OracleTimeSpan y);
    public static OracleBoolean op_GreaterThanOrEqual(OracleTimeSpan x, OracleTimeSpan y);
    public static OracleBoolean op_LessThan(OracleTimeSpan x, OracleTimeSpan y);
    public static OracleBoolean op_LessThanOrEqual(OracleTimeSpan x, OracleTimeSpan y);
    public static OracleBoolean op_Inequality(OracleTimeSpan x, OracleTimeSpan y);
}
public class System.Data.OracleClient.OracleTransaction : DbTransaction {
    public OracleConnection Connection { get; }
    protected DbConnection DbConnection { get; }
    public IsolationLevel IsolationLevel { get; }
    public OracleConnection get_Connection();
    protected virtual DbConnection get_DbConnection();
    public virtual IsolationLevel get_IsolationLevel();
    public virtual void Commit();
    protected virtual void Dispose(bool disposing);
    public virtual void Rollback();
}
public enum System.Data.OracleClient.OracleType : Enum {
    public int value__;
    public static OracleType BFile;
    public static OracleType Blob;
    public static OracleType Char;
    public static OracleType Clob;
    public static OracleType Cursor;
    public static OracleType DateTime;
    public static OracleType IntervalDayToSecond;
    public static OracleType IntervalYearToMonth;
    public static OracleType LongRaw;
    public static OracleType LongVarChar;
    public static OracleType NChar;
    public static OracleType NClob;
    public static OracleType Number;
    public static OracleType NVarChar;
    public static OracleType Raw;
    public static OracleType RowId;
    public static OracleType Timestamp;
    public static OracleType TimestampLocal;
    public static OracleType TimestampWithTZ;
    public static OracleType VarChar;
    public static OracleType Byte;
    public static OracleType UInt16;
    public static OracleType UInt32;
    public static OracleType SByte;
    public static OracleType Int16;
    public static OracleType Int32;
    public static OracleType Float;
    public static OracleType Double;
}
[AttributeUsageAttribute("32767")]
internal class System.Data.OracleClient.ResCategoryAttribute : CategoryAttribute {
    public ResCategoryAttribute(string category);
    protected virtual string GetLocalizedString(string value);
}
[AttributeUsageAttribute("32767")]
internal class System.Data.OracleClient.ResDescriptionAttribute : DescriptionAttribute {
    public string Description { get; }
    public ResDescriptionAttribute(string description);
    public virtual string get_Description();
}
