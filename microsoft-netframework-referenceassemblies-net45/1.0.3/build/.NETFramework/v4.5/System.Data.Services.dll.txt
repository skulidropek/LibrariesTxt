[AttributeUsageAttribute("64")]
public class System.Data.Services.ChangeInterceptorAttribute : Attribute {
    public string EntitySetName { get; }
    public ChangeInterceptorAttribute(string entitySetName);
    [DebuggerStepThroughAttribute]
public string get_EntitySetName();
}
public class System.Data.Services.Configuration.DataServicesFeaturesSection : ConfigurationSection {
    [ConfigurationPropertyAttribute("replaceFunction")]
public DataServicesReplaceFunctionFeature ReplaceFunction { get; public set; }
    public DataServicesReplaceFunctionFeature get_ReplaceFunction();
    public void set_ReplaceFunction(DataServicesReplaceFunctionFeature value);
}
public class System.Data.Services.Configuration.DataServicesReplaceFunctionFeature : ConfigurationElement {
    [ConfigurationPropertyAttribute("enable")]
public bool Enable { get; public set; }
    public bool get_Enable();
    public void set_Enable(bool value);
}
public class System.Data.Services.Configuration.DataServicesSectionGroup : ConfigurationSectionGroup {
    [ConfigurationPropertyAttribute("features")]
public DataServicesFeaturesSection Features { get; }
    public DataServicesFeaturesSection get_Features();
}
[AspNetCompatibilityRequirementsAttribute]
[ServiceBehaviorAttribute]
public class System.Data.Services.DataService`1 : object {
    public DataServiceProcessingPipeline ProcessingPipeline { get; }
    protected T CurrentDataSource { get; }
    [DebuggerStepThroughAttribute]
public DataServiceProcessingPipeline get_ProcessingPipeline();
    protected T get_CurrentDataSource();
    public void AttachHost(IDataServiceHost host);
    public sealed virtual Message ProcessRequestForMessage(Stream messageBody);
    public void ProcessRequest();
    protected virtual T CreateDataSource();
    protected virtual void HandleException(HandleExceptionArgs args);
    protected virtual void OnStartProcessingRequest(ProcessRequestArgs args);
}
public class System.Data.Services.DataServiceBehavior : object {
    public bool InvokeInterceptorsOnLinkDelete { get; public set; }
    public bool AcceptCountRequests { get; public set; }
    public bool AcceptProjectionRequests { get; public set; }
    public DataServiceProtocolVersion MaxProtocolVersion { get; public set; }
    public bool AcceptReplaceFunctionInQuery { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_InvokeInterceptorsOnLinkDelete();
    [CompilerGeneratedAttribute]
public void set_InvokeInterceptorsOnLinkDelete(bool value);
    [CompilerGeneratedAttribute]
public bool get_AcceptCountRequests();
    [CompilerGeneratedAttribute]
public void set_AcceptCountRequests(bool value);
    [CompilerGeneratedAttribute]
public bool get_AcceptProjectionRequests();
    [CompilerGeneratedAttribute]
public void set_AcceptProjectionRequests(bool value);
    [CompilerGeneratedAttribute]
public DataServiceProtocolVersion get_MaxProtocolVersion();
    [CompilerGeneratedAttribute]
public void set_MaxProtocolVersion(DataServiceProtocolVersion value);
    [CompilerGeneratedAttribute]
public bool get_AcceptReplaceFunctionInQuery();
    [CompilerGeneratedAttribute]
public void set_AcceptReplaceFunctionInQuery(bool value);
}
public class System.Data.Services.DataServiceConfiguration : object {
    public bool EnableTypeConversion { get; public set; }
    public int MaxBatchCount { get; public set; }
    public int MaxChangesetCount { get; public set; }
    public int MaxExpandCount { get; public set; }
    public int MaxExpandDepth { get; public set; }
    public int MaxResultsPerCollection { get; public set; }
    public int MaxObjectCountOnInsert { get; public set; }
    public bool UseVerboseErrors { get; public set; }
    public DataServiceBehavior DataServiceBehavior { get; }
    public bool get_EnableTypeConversion();
    public void set_EnableTypeConversion(bool value);
    public sealed virtual int get_MaxBatchCount();
    public sealed virtual void set_MaxBatchCount(int value);
    public sealed virtual int get_MaxChangesetCount();
    public sealed virtual void set_MaxChangesetCount(int value);
    public sealed virtual int get_MaxExpandCount();
    public sealed virtual void set_MaxExpandCount(int value);
    public sealed virtual int get_MaxExpandDepth();
    public sealed virtual void set_MaxExpandDepth(int value);
    public sealed virtual int get_MaxResultsPerCollection();
    public sealed virtual void set_MaxResultsPerCollection(int value);
    public sealed virtual int get_MaxObjectCountOnInsert();
    public sealed virtual void set_MaxObjectCountOnInsert(int value);
    public sealed virtual bool get_UseVerboseErrors();
    public sealed virtual void set_UseVerboseErrors(bool value);
    public DataServiceBehavior get_DataServiceBehavior();
    public sealed virtual void SetEntitySetAccessRule(string name, EntitySetRights rights);
    public sealed virtual void SetServiceOperationAccessRule(string name, ServiceOperationRights rights);
    public sealed virtual void RegisterKnownType(Type type);
    public void SetEntitySetPageSize(string name, int size);
    public void EnableTypeAccess(string typeName);
}
[DebuggerDisplayAttribute("{statusCode}: {Message}")]
public class System.Data.Services.DataServiceException : InvalidOperationException {
    public string ErrorCode { get; }
    public string MessageLanguage { get; }
    public int StatusCode { get; }
    public DataServiceException(string message);
    public DataServiceException(string message, Exception innerException);
    public DataServiceException(int statusCode, string message);
    public DataServiceException(int statusCode, string errorCode, string message, string messageXmlLang, Exception innerException);
    protected DataServiceException(SerializationInfo serializationInfo, StreamingContext streamingContext);
    public string get_ErrorCode();
    public string get_MessageLanguage();
    public int get_StatusCode();
    [SecurityCriticalAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
[CLSCompliantAttribute("False")]
public class System.Data.Services.DataServiceHost : WebServiceHost {
    public DataServiceHost(Type serviceType, Uri[] baseAddresses);
}
public class System.Data.Services.DataServiceHostFactory : ServiceHostFactory {
    protected virtual ServiceHost CreateServiceHost(Type serviceType, Uri[] baseAddresses);
}
public class System.Data.Services.DataServiceOperationContext : object {
    public bool IsBatchRequest { get; }
    public string RequestMethod { get; }
    public Uri AbsoluteRequestUri { get; }
    public Uri AbsoluteServiceUri { get; }
    public WebHeaderCollection RequestHeaders { get; }
    public WebHeaderCollection ResponseHeaders { get; }
    public int ResponseStatusCode { get; public set; }
    public bool get_IsBatchRequest();
    public string get_RequestMethod();
    public Uri get_AbsoluteRequestUri();
    public Uri get_AbsoluteServiceUri();
    public WebHeaderCollection get_RequestHeaders();
    public WebHeaderCollection get_ResponseHeaders();
    public int get_ResponseStatusCode();
    public void set_ResponseStatusCode(int value);
}
public class System.Data.Services.DataServiceProcessingPipeline : object {
    public void add_ProcessingRequest(EventHandler`1<DataServiceProcessingPipelineEventArgs> value);
    public void remove_ProcessingRequest(EventHandler`1<DataServiceProcessingPipelineEventArgs> value);
    public void add_ProcessedRequest(EventHandler`1<DataServiceProcessingPipelineEventArgs> value);
    public void remove_ProcessedRequest(EventHandler`1<DataServiceProcessingPipelineEventArgs> value);
    public void add_ProcessingChangeset(EventHandler`1<EventArgs> value);
    public void remove_ProcessingChangeset(EventHandler`1<EventArgs> value);
    public void add_ProcessedChangeset(EventHandler`1<EventArgs> value);
    public void remove_ProcessedChangeset(EventHandler`1<EventArgs> value);
}
public class System.Data.Services.DataServiceProcessingPipelineEventArgs : EventArgs {
    public DataServiceOperationContext OperationContext { get; }
    [DebuggerStepThroughAttribute]
public DataServiceOperationContext get_OperationContext();
}
[FlagsAttribute]
public enum System.Data.Services.EntitySetRights : Enum {
    public int value__;
    public static EntitySetRights None;
    public static EntitySetRights ReadSingle;
    public static EntitySetRights ReadMultiple;
    public static EntitySetRights WriteAppend;
    public static EntitySetRights WriteReplace;
    public static EntitySetRights WriteDelete;
    public static EntitySetRights WriteMerge;
    public static EntitySetRights AllRead;
    public static EntitySetRights AllWrite;
    public static EntitySetRights All;
}
[AttributeUsageAttribute("4")]
public class System.Data.Services.ETagAttribute : Attribute {
    public ReadOnlyCollection`1<string> PropertyNames { get; }
    public ETagAttribute(string propertyName);
    public ETagAttribute(String[] propertyNames);
    public ReadOnlyCollection`1<string> get_PropertyNames();
}
[DebuggerDisplayAttribute("ExpandSegment ({name},Filter={filter})]")]
public class System.Data.Services.ExpandSegment : object {
    public Expression Filter { get; }
    public bool HasFilter { get; }
    public int MaxResultsExpected { get; }
    public string Name { get; }
    public ResourceProperty ExpandedProperty { get; }
    public ExpandSegment(string name, Expression filter);
    public Expression get_Filter();
    public bool get_HasFilter();
    public int get_MaxResultsExpected();
    public string get_Name();
    public ResourceProperty get_ExpandedProperty();
    public static bool PathHasFilter(IEnumerable`1<ExpandSegment> path);
}
public class System.Data.Services.ExpandSegmentCollection : List`1<ExpandSegment> {
    public bool HasFilter { get; }
    public ExpandSegmentCollection(int capacity);
    public bool get_HasFilter();
}
public class System.Data.Services.HandleExceptionArgs : object {
    public Exception Exception { get; public set; }
    public string ResponseContentType { get; }
    public int ResponseStatusCode { get; }
    public bool ResponseWritten { get; }
    public bool UseVerboseErrors { get; public set; }
    public Exception get_Exception();
    public void set_Exception(Exception value);
    public string get_ResponseContentType();
    public int get_ResponseStatusCode();
    public bool get_ResponseWritten();
    public bool get_UseVerboseErrors();
    public void set_UseVerboseErrors(bool value);
}
public interface System.Data.Services.IDataServiceConfiguration {
    public int MaxBatchCount { get; public set; }
    public int MaxChangesetCount { get; public set; }
    public int MaxExpandCount { get; public set; }
    public int MaxExpandDepth { get; public set; }
    public int MaxResultsPerCollection { get; public set; }
    public int MaxObjectCountOnInsert { get; public set; }
    public bool UseVerboseErrors { get; public set; }
    public abstract virtual int get_MaxBatchCount();
    public abstract virtual void set_MaxBatchCount(int value);
    public abstract virtual int get_MaxChangesetCount();
    public abstract virtual void set_MaxChangesetCount(int value);
    public abstract virtual int get_MaxExpandCount();
    public abstract virtual void set_MaxExpandCount(int value);
    public abstract virtual int get_MaxExpandDepth();
    public abstract virtual void set_MaxExpandDepth(int value);
    public abstract virtual int get_MaxResultsPerCollection();
    public abstract virtual void set_MaxResultsPerCollection(int value);
    public abstract virtual int get_MaxObjectCountOnInsert();
    public abstract virtual void set_MaxObjectCountOnInsert(int value);
    public abstract virtual bool get_UseVerboseErrors();
    public abstract virtual void set_UseVerboseErrors(bool value);
    public abstract virtual void SetEntitySetAccessRule(string name, EntitySetRights rights);
    public abstract virtual void SetServiceOperationAccessRule(string name, ServiceOperationRights rights);
    public abstract virtual void RegisterKnownType(Type type);
}
public interface System.Data.Services.IDataServiceHost {
    public Uri AbsoluteRequestUri { get; }
    public Uri AbsoluteServiceUri { get; }
    public string RequestAccept { get; }
    public string RequestAcceptCharSet { get; }
    public string RequestContentType { get; }
    public string RequestHttpMethod { get; }
    public string RequestIfMatch { get; }
    public string RequestIfNoneMatch { get; }
    public string RequestMaxVersion { get; }
    public Stream RequestStream { get; }
    public string RequestVersion { get; }
    public string ResponseCacheControl { get; public set; }
    public string ResponseContentType { get; public set; }
    public string ResponseETag { get; public set; }
    public string ResponseLocation { get; public set; }
    public int ResponseStatusCode { get; public set; }
    public Stream ResponseStream { get; }
    public string ResponseVersion { get; public set; }
    public abstract virtual Uri get_AbsoluteRequestUri();
    public abstract virtual Uri get_AbsoluteServiceUri();
    public abstract virtual string get_RequestAccept();
    public abstract virtual string get_RequestAcceptCharSet();
    public abstract virtual string get_RequestContentType();
    public abstract virtual string get_RequestHttpMethod();
    public abstract virtual string get_RequestIfMatch();
    public abstract virtual string get_RequestIfNoneMatch();
    public abstract virtual string get_RequestMaxVersion();
    public abstract virtual Stream get_RequestStream();
    public abstract virtual string get_RequestVersion();
    public abstract virtual string get_ResponseCacheControl();
    public abstract virtual void set_ResponseCacheControl(string value);
    public abstract virtual string get_ResponseContentType();
    public abstract virtual void set_ResponseContentType(string value);
    public abstract virtual string get_ResponseETag();
    public abstract virtual void set_ResponseETag(string value);
    public abstract virtual string get_ResponseLocation();
    public abstract virtual void set_ResponseLocation(string value);
    public abstract virtual int get_ResponseStatusCode();
    public abstract virtual void set_ResponseStatusCode(int value);
    public abstract virtual Stream get_ResponseStream();
    public abstract virtual string get_ResponseVersion();
    public abstract virtual void set_ResponseVersion(string value);
    public abstract virtual string GetQueryStringItem(string item);
    public abstract virtual void ProcessException(HandleExceptionArgs args);
}
public interface System.Data.Services.IDataServiceHost2 {
    public WebHeaderCollection RequestHeaders { get; }
    public WebHeaderCollection ResponseHeaders { get; }
    public abstract virtual WebHeaderCollection get_RequestHeaders();
    public abstract virtual WebHeaderCollection get_ResponseHeaders();
}
public interface System.Data.Services.IExpandedResult {
    public object ExpandedElement { get; }
    public abstract virtual object get_ExpandedElement();
    public abstract virtual object GetExpandedPropertyValue(string name);
}
public interface System.Data.Services.IExpandProvider {
    public abstract virtual IEnumerable ApplyExpansions(IQueryable queryable, ICollection`1<ExpandSegmentCollection> expandPaths);
}
[AttributeUsageAttribute("4")]
public class System.Data.Services.IgnorePropertiesAttribute : Attribute {
    public ReadOnlyCollection`1<string> PropertyNames { get; }
    public IgnorePropertiesAttribute(string propertyName);
    public IgnorePropertiesAttribute(String[] propertyNames);
    public ReadOnlyCollection`1<string> get_PropertyNames();
}
[EditorBrowsableAttribute("1")]
public abstract class System.Data.Services.Internal.ExpandedWrapper`1 : object {
    public string Description { get; public set; }
    public TExpandedElement ExpandedElement { get; public set; }
    private object System.Data.Services.IExpandedResult.ExpandedElement { get; }
    public string get_Description();
    public void set_Description(string value);
    public TExpandedElement get_ExpandedElement();
    public void set_ExpandedElement(TExpandedElement value);
    private sealed virtual override object System.Data.Services.IExpandedResult.get_ExpandedElement();
    public sealed virtual object GetExpandedPropertyValue(string name);
    protected abstract virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ExpandedWrapper`10 : ExpandedWrapper`1<TExpandedElement> {
    public TProperty0 ProjectedProperty0 { get; public set; }
    public TProperty1 ProjectedProperty1 { get; public set; }
    public TProperty2 ProjectedProperty2 { get; public set; }
    public TProperty3 ProjectedProperty3 { get; public set; }
    public TProperty4 ProjectedProperty4 { get; public set; }
    public TProperty5 ProjectedProperty5 { get; public set; }
    public TProperty6 ProjectedProperty6 { get; public set; }
    public TProperty7 ProjectedProperty7 { get; public set; }
    public TProperty8 ProjectedProperty8 { get; public set; }
    [CompilerGeneratedAttribute]
public TProperty0 get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(TProperty0 value);
    [CompilerGeneratedAttribute]
public TProperty1 get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(TProperty1 value);
    [CompilerGeneratedAttribute]
public TProperty2 get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(TProperty2 value);
    [CompilerGeneratedAttribute]
public TProperty3 get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(TProperty3 value);
    [CompilerGeneratedAttribute]
public TProperty4 get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(TProperty4 value);
    [CompilerGeneratedAttribute]
public TProperty5 get_ProjectedProperty5();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty5(TProperty5 value);
    [CompilerGeneratedAttribute]
public TProperty6 get_ProjectedProperty6();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty6(TProperty6 value);
    [CompilerGeneratedAttribute]
public TProperty7 get_ProjectedProperty7();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty7(TProperty7 value);
    [CompilerGeneratedAttribute]
public TProperty8 get_ProjectedProperty8();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty8(TProperty8 value);
    protected virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ExpandedWrapper`11 : ExpandedWrapper`1<TExpandedElement> {
    public TProperty0 ProjectedProperty0 { get; public set; }
    public TProperty1 ProjectedProperty1 { get; public set; }
    public TProperty2 ProjectedProperty2 { get; public set; }
    public TProperty3 ProjectedProperty3 { get; public set; }
    public TProperty4 ProjectedProperty4 { get; public set; }
    public TProperty5 ProjectedProperty5 { get; public set; }
    public TProperty6 ProjectedProperty6 { get; public set; }
    public TProperty7 ProjectedProperty7 { get; public set; }
    public TProperty8 ProjectedProperty8 { get; public set; }
    public TProperty9 ProjectedProperty9 { get; public set; }
    [CompilerGeneratedAttribute]
public TProperty0 get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(TProperty0 value);
    [CompilerGeneratedAttribute]
public TProperty1 get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(TProperty1 value);
    [CompilerGeneratedAttribute]
public TProperty2 get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(TProperty2 value);
    [CompilerGeneratedAttribute]
public TProperty3 get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(TProperty3 value);
    [CompilerGeneratedAttribute]
public TProperty4 get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(TProperty4 value);
    [CompilerGeneratedAttribute]
public TProperty5 get_ProjectedProperty5();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty5(TProperty5 value);
    [CompilerGeneratedAttribute]
public TProperty6 get_ProjectedProperty6();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty6(TProperty6 value);
    [CompilerGeneratedAttribute]
public TProperty7 get_ProjectedProperty7();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty7(TProperty7 value);
    [CompilerGeneratedAttribute]
public TProperty8 get_ProjectedProperty8();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty8(TProperty8 value);
    [CompilerGeneratedAttribute]
public TProperty9 get_ProjectedProperty9();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty9(TProperty9 value);
    protected virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ExpandedWrapper`12 : ExpandedWrapper`1<TExpandedElement> {
    public TProperty0 ProjectedProperty0 { get; public set; }
    public TProperty1 ProjectedProperty1 { get; public set; }
    public TProperty2 ProjectedProperty2 { get; public set; }
    public TProperty3 ProjectedProperty3 { get; public set; }
    public TProperty4 ProjectedProperty4 { get; public set; }
    public TProperty5 ProjectedProperty5 { get; public set; }
    public TProperty6 ProjectedProperty6 { get; public set; }
    public TProperty7 ProjectedProperty7 { get; public set; }
    public TProperty8 ProjectedProperty8 { get; public set; }
    public TProperty9 ProjectedProperty9 { get; public set; }
    public TProperty10 ProjectedProperty10 { get; public set; }
    [CompilerGeneratedAttribute]
public TProperty0 get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(TProperty0 value);
    [CompilerGeneratedAttribute]
public TProperty1 get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(TProperty1 value);
    [CompilerGeneratedAttribute]
public TProperty2 get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(TProperty2 value);
    [CompilerGeneratedAttribute]
public TProperty3 get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(TProperty3 value);
    [CompilerGeneratedAttribute]
public TProperty4 get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(TProperty4 value);
    [CompilerGeneratedAttribute]
public TProperty5 get_ProjectedProperty5();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty5(TProperty5 value);
    [CompilerGeneratedAttribute]
public TProperty6 get_ProjectedProperty6();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty6(TProperty6 value);
    [CompilerGeneratedAttribute]
public TProperty7 get_ProjectedProperty7();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty7(TProperty7 value);
    [CompilerGeneratedAttribute]
public TProperty8 get_ProjectedProperty8();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty8(TProperty8 value);
    [CompilerGeneratedAttribute]
public TProperty9 get_ProjectedProperty9();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty9(TProperty9 value);
    [CompilerGeneratedAttribute]
public TProperty10 get_ProjectedProperty10();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty10(TProperty10 value);
    protected virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ExpandedWrapper`13 : ExpandedWrapper`1<TExpandedElement> {
    public TProperty0 ProjectedProperty0 { get; public set; }
    public TProperty1 ProjectedProperty1 { get; public set; }
    public TProperty2 ProjectedProperty2 { get; public set; }
    public TProperty3 ProjectedProperty3 { get; public set; }
    public TProperty4 ProjectedProperty4 { get; public set; }
    public TProperty5 ProjectedProperty5 { get; public set; }
    public TProperty6 ProjectedProperty6 { get; public set; }
    public TProperty7 ProjectedProperty7 { get; public set; }
    public TProperty8 ProjectedProperty8 { get; public set; }
    public TProperty9 ProjectedProperty9 { get; public set; }
    public TProperty10 ProjectedProperty10 { get; public set; }
    public TProperty11 ProjectedProperty11 { get; public set; }
    [CompilerGeneratedAttribute]
public TProperty0 get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(TProperty0 value);
    [CompilerGeneratedAttribute]
public TProperty1 get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(TProperty1 value);
    [CompilerGeneratedAttribute]
public TProperty2 get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(TProperty2 value);
    [CompilerGeneratedAttribute]
public TProperty3 get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(TProperty3 value);
    [CompilerGeneratedAttribute]
public TProperty4 get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(TProperty4 value);
    [CompilerGeneratedAttribute]
public TProperty5 get_ProjectedProperty5();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty5(TProperty5 value);
    [CompilerGeneratedAttribute]
public TProperty6 get_ProjectedProperty6();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty6(TProperty6 value);
    [CompilerGeneratedAttribute]
public TProperty7 get_ProjectedProperty7();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty7(TProperty7 value);
    [CompilerGeneratedAttribute]
public TProperty8 get_ProjectedProperty8();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty8(TProperty8 value);
    [CompilerGeneratedAttribute]
public TProperty9 get_ProjectedProperty9();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty9(TProperty9 value);
    [CompilerGeneratedAttribute]
public TProperty10 get_ProjectedProperty10();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty10(TProperty10 value);
    [CompilerGeneratedAttribute]
public TProperty11 get_ProjectedProperty11();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty11(TProperty11 value);
    protected virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ExpandedWrapper`2 : ExpandedWrapper`1<TExpandedElement> {
    public TProperty0 ProjectedProperty0 { get; public set; }
    [CompilerGeneratedAttribute]
public TProperty0 get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(TProperty0 value);
    protected virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ExpandedWrapper`3 : ExpandedWrapper`1<TExpandedElement> {
    public TProperty0 ProjectedProperty0 { get; public set; }
    public TProperty1 ProjectedProperty1 { get; public set; }
    [CompilerGeneratedAttribute]
public TProperty0 get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(TProperty0 value);
    [CompilerGeneratedAttribute]
public TProperty1 get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(TProperty1 value);
    protected virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ExpandedWrapper`4 : ExpandedWrapper`1<TExpandedElement> {
    public TProperty0 ProjectedProperty0 { get; public set; }
    public TProperty1 ProjectedProperty1 { get; public set; }
    public TProperty2 ProjectedProperty2 { get; public set; }
    [CompilerGeneratedAttribute]
public TProperty0 get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(TProperty0 value);
    [CompilerGeneratedAttribute]
public TProperty1 get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(TProperty1 value);
    [CompilerGeneratedAttribute]
public TProperty2 get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(TProperty2 value);
    protected virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ExpandedWrapper`5 : ExpandedWrapper`1<TExpandedElement> {
    public TProperty0 ProjectedProperty0 { get; public set; }
    public TProperty1 ProjectedProperty1 { get; public set; }
    public TProperty2 ProjectedProperty2 { get; public set; }
    public TProperty3 ProjectedProperty3 { get; public set; }
    [CompilerGeneratedAttribute]
public TProperty0 get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(TProperty0 value);
    [CompilerGeneratedAttribute]
public TProperty1 get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(TProperty1 value);
    [CompilerGeneratedAttribute]
public TProperty2 get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(TProperty2 value);
    [CompilerGeneratedAttribute]
public TProperty3 get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(TProperty3 value);
    protected virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ExpandedWrapper`6 : ExpandedWrapper`1<TExpandedElement> {
    public TProperty0 ProjectedProperty0 { get; public set; }
    public TProperty1 ProjectedProperty1 { get; public set; }
    public TProperty2 ProjectedProperty2 { get; public set; }
    public TProperty3 ProjectedProperty3 { get; public set; }
    public TProperty4 ProjectedProperty4 { get; public set; }
    [CompilerGeneratedAttribute]
public TProperty0 get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(TProperty0 value);
    [CompilerGeneratedAttribute]
public TProperty1 get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(TProperty1 value);
    [CompilerGeneratedAttribute]
public TProperty2 get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(TProperty2 value);
    [CompilerGeneratedAttribute]
public TProperty3 get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(TProperty3 value);
    [CompilerGeneratedAttribute]
public TProperty4 get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(TProperty4 value);
    protected virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ExpandedWrapper`7 : ExpandedWrapper`1<TExpandedElement> {
    public TProperty0 ProjectedProperty0 { get; public set; }
    public TProperty1 ProjectedProperty1 { get; public set; }
    public TProperty2 ProjectedProperty2 { get; public set; }
    public TProperty3 ProjectedProperty3 { get; public set; }
    public TProperty4 ProjectedProperty4 { get; public set; }
    public TProperty5 ProjectedProperty5 { get; public set; }
    [CompilerGeneratedAttribute]
public TProperty0 get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(TProperty0 value);
    [CompilerGeneratedAttribute]
public TProperty1 get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(TProperty1 value);
    [CompilerGeneratedAttribute]
public TProperty2 get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(TProperty2 value);
    [CompilerGeneratedAttribute]
public TProperty3 get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(TProperty3 value);
    [CompilerGeneratedAttribute]
public TProperty4 get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(TProperty4 value);
    [CompilerGeneratedAttribute]
public TProperty5 get_ProjectedProperty5();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty5(TProperty5 value);
    protected virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ExpandedWrapper`8 : ExpandedWrapper`1<TExpandedElement> {
    public TProperty0 ProjectedProperty0 { get; public set; }
    public TProperty1 ProjectedProperty1 { get; public set; }
    public TProperty2 ProjectedProperty2 { get; public set; }
    public TProperty3 ProjectedProperty3 { get; public set; }
    public TProperty4 ProjectedProperty4 { get; public set; }
    public TProperty5 ProjectedProperty5 { get; public set; }
    public TProperty6 ProjectedProperty6 { get; public set; }
    [CompilerGeneratedAttribute]
public TProperty0 get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(TProperty0 value);
    [CompilerGeneratedAttribute]
public TProperty1 get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(TProperty1 value);
    [CompilerGeneratedAttribute]
public TProperty2 get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(TProperty2 value);
    [CompilerGeneratedAttribute]
public TProperty3 get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(TProperty3 value);
    [CompilerGeneratedAttribute]
public TProperty4 get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(TProperty4 value);
    [CompilerGeneratedAttribute]
public TProperty5 get_ProjectedProperty5();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty5(TProperty5 value);
    [CompilerGeneratedAttribute]
public TProperty6 get_ProjectedProperty6();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty6(TProperty6 value);
    protected virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ExpandedWrapper`9 : ExpandedWrapper`1<TExpandedElement> {
    public TProperty0 ProjectedProperty0 { get; public set; }
    public TProperty1 ProjectedProperty1 { get; public set; }
    public TProperty2 ProjectedProperty2 { get; public set; }
    public TProperty3 ProjectedProperty3 { get; public set; }
    public TProperty4 ProjectedProperty4 { get; public set; }
    public TProperty5 ProjectedProperty5 { get; public set; }
    public TProperty6 ProjectedProperty6 { get; public set; }
    public TProperty7 ProjectedProperty7 { get; public set; }
    [CompilerGeneratedAttribute]
public TProperty0 get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(TProperty0 value);
    [CompilerGeneratedAttribute]
public TProperty1 get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(TProperty1 value);
    [CompilerGeneratedAttribute]
public TProperty2 get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(TProperty2 value);
    [CompilerGeneratedAttribute]
public TProperty3 get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(TProperty3 value);
    [CompilerGeneratedAttribute]
public TProperty4 get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(TProperty4 value);
    [CompilerGeneratedAttribute]
public TProperty5 get_ProjectedProperty5();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty5(TProperty5 value);
    [CompilerGeneratedAttribute]
public TProperty6 get_ProjectedProperty6();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty6(TProperty6 value);
    [CompilerGeneratedAttribute]
public TProperty7 get_ProjectedProperty7();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty7(TProperty7 value);
    protected virtual object InternalGetExpandedPropertyValue(int nameIndex);
}
[EditorBrowsableAttribute("1")]
public abstract class System.Data.Services.Internal.ProjectedWrapper : object {
    public string ResourceTypeName { get; public set; }
    public string PropertyNameList { get; public set; }
    private static ProjectedWrapper();
    public sealed virtual string get_ResourceTypeName();
    public void set_ResourceTypeName(string value);
    public string get_PropertyNameList();
    public void set_PropertyNameList(string value);
    public sealed virtual object GetProjectedPropertyValue(string propertyName);
    protected abstract virtual object InternalGetProjectedPropertyValue(int propertyIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ProjectedWrapper0 : ProjectedWrapper {
    protected virtual object InternalGetProjectedPropertyValue(int propertyIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ProjectedWrapper1 : ProjectedWrapper {
    public object ProjectedProperty0 { get; public set; }
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(object value);
    protected virtual object InternalGetProjectedPropertyValue(int propertyIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ProjectedWrapper2 : ProjectedWrapper {
    public object ProjectedProperty0 { get; public set; }
    public object ProjectedProperty1 { get; public set; }
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(object value);
    protected virtual object InternalGetProjectedPropertyValue(int propertyIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ProjectedWrapper3 : ProjectedWrapper {
    public object ProjectedProperty0 { get; public set; }
    public object ProjectedProperty1 { get; public set; }
    public object ProjectedProperty2 { get; public set; }
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(object value);
    protected virtual object InternalGetProjectedPropertyValue(int propertyIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ProjectedWrapper4 : ProjectedWrapper {
    public object ProjectedProperty0 { get; public set; }
    public object ProjectedProperty1 { get; public set; }
    public object ProjectedProperty2 { get; public set; }
    public object ProjectedProperty3 { get; public set; }
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(object value);
    protected virtual object InternalGetProjectedPropertyValue(int propertyIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ProjectedWrapper5 : ProjectedWrapper {
    public object ProjectedProperty0 { get; public set; }
    public object ProjectedProperty1 { get; public set; }
    public object ProjectedProperty2 { get; public set; }
    public object ProjectedProperty3 { get; public set; }
    public object ProjectedProperty4 { get; public set; }
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(object value);
    protected virtual object InternalGetProjectedPropertyValue(int propertyIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ProjectedWrapper6 : ProjectedWrapper {
    public object ProjectedProperty0 { get; public set; }
    public object ProjectedProperty1 { get; public set; }
    public object ProjectedProperty2 { get; public set; }
    public object ProjectedProperty3 { get; public set; }
    public object ProjectedProperty4 { get; public set; }
    public object ProjectedProperty5 { get; public set; }
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty5();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty5(object value);
    protected virtual object InternalGetProjectedPropertyValue(int propertyIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ProjectedWrapper7 : ProjectedWrapper {
    public object ProjectedProperty0 { get; public set; }
    public object ProjectedProperty1 { get; public set; }
    public object ProjectedProperty2 { get; public set; }
    public object ProjectedProperty3 { get; public set; }
    public object ProjectedProperty4 { get; public set; }
    public object ProjectedProperty5 { get; public set; }
    public object ProjectedProperty6 { get; public set; }
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty5();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty5(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty6();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty6(object value);
    protected virtual object InternalGetProjectedPropertyValue(int propertyIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ProjectedWrapper8 : ProjectedWrapper {
    public object ProjectedProperty0 { get; public set; }
    public object ProjectedProperty1 { get; public set; }
    public object ProjectedProperty2 { get; public set; }
    public object ProjectedProperty3 { get; public set; }
    public object ProjectedProperty4 { get; public set; }
    public object ProjectedProperty5 { get; public set; }
    public object ProjectedProperty6 { get; public set; }
    public object ProjectedProperty7 { get; public set; }
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty5();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty5(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty6();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty6(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty7();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty7(object value);
    protected virtual object InternalGetProjectedPropertyValue(int propertyIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ProjectedWrapperMany : ProjectedWrapper {
    public object ProjectedProperty0 { get; public set; }
    public object ProjectedProperty1 { get; public set; }
    public object ProjectedProperty2 { get; public set; }
    public object ProjectedProperty3 { get; public set; }
    public object ProjectedProperty4 { get; public set; }
    public object ProjectedProperty5 { get; public set; }
    public object ProjectedProperty6 { get; public set; }
    public object ProjectedProperty7 { get; public set; }
    public ProjectedWrapperMany Next { get; public set; }
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty0();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty0(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty1();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty1(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty2();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty2(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty3();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty3(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty4();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty4(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty5();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty5(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty6();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty6(object value);
    [CompilerGeneratedAttribute]
public object get_ProjectedProperty7();
    [CompilerGeneratedAttribute]
public void set_ProjectedProperty7(object value);
    [CompilerGeneratedAttribute]
public ProjectedWrapperMany get_Next();
    [CompilerGeneratedAttribute]
public void set_Next(ProjectedWrapperMany value);
    protected virtual object InternalGetProjectedPropertyValue(int propertyIndex);
}
[EditorBrowsableAttribute("1")]
public class System.Data.Services.Internal.ProjectedWrapperManyEnd : ProjectedWrapperMany {
    protected virtual object InternalGetProjectedPropertyValue(int propertyIndex);
}
[ServiceContractAttribute]
public interface System.Data.Services.IRequestHandler {
    [OperationContractAttribute]
[WebInvokeAttribute]
public abstract virtual Message ProcessRequestForMessage(Stream messageBody);
}
public interface System.Data.Services.IUpdatable {
    public abstract virtual object CreateResource(string containerName, string fullTypeName);
    public abstract virtual object GetResource(IQueryable query, string fullTypeName);
    public abstract virtual object ResetResource(object resource);
    public abstract virtual void SetValue(object targetResource, string propertyName, object propertyValue);
    public abstract virtual object GetValue(object targetResource, string propertyName);
    public abstract virtual void SetReference(object targetResource, string propertyName, object propertyValue);
    public abstract virtual void AddReferenceToCollection(object targetResource, string propertyName, object resourceToBeAdded);
    public abstract virtual void RemoveReferenceFromCollection(object targetResource, string propertyName, object resourceToBeRemoved);
    public abstract virtual void DeleteResource(object targetResource);
    public abstract virtual void SaveChanges();
    public abstract virtual object ResolveResource(object resource);
    public abstract virtual void ClearChanges();
}
[AttributeUsageAttribute("4")]
public class System.Data.Services.MimeTypeAttribute : Attribute {
    public string MemberName { get; }
    public string MimeType { get; }
    public MimeTypeAttribute(string memberName, string mimeType);
    public string get_MemberName();
    public string get_MimeType();
}
public class System.Data.Services.ProcessRequestArgs : object {
    public Uri RequestUri { get; }
    public bool IsBatchOperation { get; }
    public DataServiceOperationContext OperationContext { get; private set; }
    public Uri get_RequestUri();
    public bool get_IsBatchOperation();
    [CompilerGeneratedAttribute]
public DataServiceOperationContext get_OperationContext();
    [CompilerGeneratedAttribute]
private void set_OperationContext(DataServiceOperationContext value);
}
public static class System.Data.Services.Providers.DataServiceProviderMethods : object {
    private static DataServiceProviderMethods();
    public static object GetValue(object value, ResourceProperty property);
    public static IEnumerable`1<T> GetSequenceValue(object value, ResourceProperty property);
    public static object Convert(object value, ResourceType type);
    public static bool TypeIs(object value, ResourceType type);
    public static int Compare(string left, string right);
    public static int Compare(bool left, bool right);
    public static int Compare(Nullable`1<bool> left, Nullable`1<bool> right);
    public static int Compare(Guid left, Guid right);
    public static int Compare(Nullable`1<Guid> left, Nullable`1<Guid> right);
}
public interface System.Data.Services.Providers.IDataServiceMetadataProvider {
    public string ContainerNamespace { get; }
    public string ContainerName { get; }
    public IEnumerable`1<ResourceSet> ResourceSets { get; }
    public IEnumerable`1<ResourceType> Types { get; }
    public IEnumerable`1<ServiceOperation> ServiceOperations { get; }
    public abstract virtual string get_ContainerNamespace();
    public abstract virtual string get_ContainerName();
    public abstract virtual IEnumerable`1<ResourceSet> get_ResourceSets();
    public abstract virtual IEnumerable`1<ResourceType> get_Types();
    public abstract virtual IEnumerable`1<ServiceOperation> get_ServiceOperations();
    public abstract virtual bool TryResolveResourceSet(string name, ResourceSet& resourceSet);
    public abstract virtual ResourceAssociationSet GetResourceAssociationSet(ResourceSet resourceSet, ResourceType resourceType, ResourceProperty resourceProperty);
    public abstract virtual bool TryResolveResourceType(string name, ResourceType& resourceType);
    public abstract virtual IEnumerable`1<ResourceType> GetDerivedTypes(ResourceType resourceType);
    public abstract virtual bool HasDerivedTypes(ResourceType resourceType);
    public abstract virtual bool TryResolveServiceOperation(string name, ServiceOperation& serviceOperation);
}
public interface System.Data.Services.Providers.IDataServicePagingProvider {
    public abstract virtual Object[] GetContinuationToken(IEnumerator enumerator);
    public abstract virtual void SetContinuationToken(IQueryable query, ResourceType resourceType, Object[] continuationToken);
}
public interface System.Data.Services.Providers.IDataServiceQueryProvider {
    public object CurrentDataSource { get; public set; }
    public bool IsNullPropagationRequired { get; }
    public abstract virtual object get_CurrentDataSource();
    public abstract virtual void set_CurrentDataSource(object value);
    public abstract virtual bool get_IsNullPropagationRequired();
    public abstract virtual IQueryable GetQueryRootForResourceSet(ResourceSet resourceSet);
    public abstract virtual ResourceType GetResourceType(object target);
    public abstract virtual object GetPropertyValue(object target, ResourceProperty resourceProperty);
    public abstract virtual object GetOpenPropertyValue(object target, string propertyName);
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, object>> GetOpenPropertyValues(object target);
    public abstract virtual object InvokeServiceOperation(ServiceOperation serviceOperation, Object[] parameters);
}
public interface System.Data.Services.Providers.IDataServiceStreamProvider {
    public int StreamBufferSize { get; }
    public abstract virtual int get_StreamBufferSize();
    public abstract virtual Stream GetReadStream(object entity, string etag, Nullable`1<bool> checkETagForEquality, DataServiceOperationContext operationContext);
    public abstract virtual Stream GetWriteStream(object entity, string etag, Nullable`1<bool> checkETagForEquality, DataServiceOperationContext operationContext);
    public abstract virtual void DeleteStream(object entity, DataServiceOperationContext operationContext);
    public abstract virtual string GetStreamContentType(object entity, DataServiceOperationContext operationContext);
    public abstract virtual Uri GetReadStreamUri(object entity, DataServiceOperationContext operationContext);
    public abstract virtual string GetStreamETag(object entity, DataServiceOperationContext operationContext);
    public abstract virtual string ResolveType(string entitySetName, DataServiceOperationContext operationContext);
}
public interface System.Data.Services.Providers.IDataServiceUpdateProvider {
    public abstract virtual void SetConcurrencyValues(object resourceCookie, Nullable`1<bool> checkForEquality, IEnumerable`1<KeyValuePair`2<string, object>> concurrencyValues);
}
public static class System.Data.Services.Providers.OpenTypeMethods : object {
    private static OpenTypeMethods();
    public static object GetValue(object value, string propertyName);
    public static object Add(object left, object right);
    public static object AndAlso(object left, object right);
    public static object Divide(object left, object right);
    public static object Equal(object left, object right);
    public static object GreaterThan(object left, object right);
    public static object GreaterThanOrEqual(object left, object right);
    public static object LessThan(object left, object right);
    public static object LessThanOrEqual(object left, object right);
    public static object Modulo(object left, object right);
    public static object Multiply(object left, object right);
    public static object NotEqual(object left, object right);
    public static object OrElse(object left, object right);
    public static object Subtract(object left, object right);
    public static object Negate(object value);
    public static object Not(object value);
    public static object Convert(object value, ResourceType type);
    public static object TypeIs(object value, ResourceType type);
    public static object Concat(object first, object second);
    public static object EndsWith(object targetString, object substring);
    public static object IndexOf(object targetString, object substring);
    public static object Length(object value);
    public static object Replace(object targetString, object substring, object newString);
    public static object StartsWith(object targetString, object substring);
    public static object Substring(object targetString, object startIndex);
    public static object Substring(object targetString, object startIndex, object length);
    public static object SubstringOf(object substring, object targetString);
    public static object ToLower(object targetString);
    public static object ToUpper(object targetString);
    public static object Trim(object targetString);
    public static object Year(object dateTime);
    public static object Month(object dateTime);
    public static object Day(object dateTime);
    public static object Hour(object dateTime);
    public static object Minute(object dateTime);
    public static object Second(object dateTime);
    public static object Ceiling(object value);
    public static object Floor(object value);
    public static object Round(object value);
}
[DebuggerDisplayAttribute("ResourceAssociationSet: ({End1.ResourceSet.Name}, {End1.ResourceType.Name}, {End1.ResourceProperty.Name}) <-> ({End2.ResourceSet.Name}, {End2.ResourceType.Name}, {End2.ResourceProperty.Name})")]
public class System.Data.Services.Providers.ResourceAssociationSet : object {
    public string Name { get; }
    public ResourceAssociationSetEnd End1 { get; }
    public ResourceAssociationSetEnd End2 { get; }
    public ResourceAssociationSet(string name, ResourceAssociationSetEnd end1, ResourceAssociationSetEnd end2);
    [DebuggerStepThroughAttribute]
public string get_Name();
    [DebuggerStepThroughAttribute]
public ResourceAssociationSetEnd get_End1();
    [DebuggerStepThroughAttribute]
public ResourceAssociationSetEnd get_End2();
}
[DebuggerDisplayAttribute("ResourceAssociationSetEnd: {Name}: ({ResourceSet.Name}, {ResourceType.Name}, {ResourceProperty.Name})")]
public class System.Data.Services.Providers.ResourceAssociationSetEnd : object {
    public ResourceSet ResourceSet { get; }
    public ResourceType ResourceType { get; }
    public ResourceProperty ResourceProperty { get; }
    public ResourceAssociationSetEnd(ResourceSet resourceSet, ResourceType resourceType, ResourceProperty resourceProperty);
    [DebuggerStepThroughAttribute]
public ResourceSet get_ResourceSet();
    [DebuggerStepThroughAttribute]
public ResourceType get_ResourceType();
    [DebuggerStepThroughAttribute]
public ResourceProperty get_ResourceProperty();
}
[DebuggerDisplayAttribute("{kind}: {name}")]
public class System.Data.Services.Providers.ResourceProperty : object {
    public bool CanReflectOnInstanceTypeProperty { get; public set; }
    public ResourceType ResourceType { get; }
    public string Name { get; }
    public string MimeType { get; public set; }
    public ResourcePropertyKind Kind { get; internal set; }
    public object CustomState { get; public set; }
    public bool IsReadOnly { get; }
    public ResourceProperty(string name, ResourcePropertyKind kind, ResourceType propertyResourceType);
    public bool get_CanReflectOnInstanceTypeProperty();
    public void set_CanReflectOnInstanceTypeProperty(bool value);
    [DebuggerStepThroughAttribute]
public ResourceType get_ResourceType();
    [DebuggerStepThroughAttribute]
public string get_Name();
    [DebuggerStepThroughAttribute]
public string get_MimeType();
    public void set_MimeType(string value);
    [DebuggerStepThroughAttribute]
public ResourcePropertyKind get_Kind();
    [DebuggerStepThroughAttribute]
internal void set_Kind(ResourcePropertyKind value);
    [CompilerGeneratedAttribute]
public object get_CustomState();
    [CompilerGeneratedAttribute]
public void set_CustomState(object value);
    public bool get_IsReadOnly();
    public void SetReadOnly();
}
[FlagsAttribute]
public enum System.Data.Services.Providers.ResourcePropertyKind : Enum {
    public int value__;
    public static ResourcePropertyKind Primitive;
    public static ResourcePropertyKind Key;
    public static ResourcePropertyKind ComplexType;
    public static ResourcePropertyKind ResourceReference;
    public static ResourcePropertyKind ResourceSetReference;
    public static ResourcePropertyKind ETag;
}
[DebuggerDisplayAttribute("{Name}: {ResourceType}")]
public class System.Data.Services.Providers.ResourceSet : object {
    public string Name { get; }
    public ResourceType ResourceType { get; }
    public object CustomState { get; public set; }
    public bool IsReadOnly { get; }
    public ResourceSet(string name, ResourceType elementType);
    public string get_Name();
    public ResourceType get_ResourceType();
    [CompilerGeneratedAttribute]
public object get_CustomState();
    [CompilerGeneratedAttribute]
public void set_CustomState(object value);
    public bool get_IsReadOnly();
    public void SetReadOnly();
}
[DebuggerDisplayAttribute("{Name}: {InstanceType}, {ResourceTypeKind}")]
public class System.Data.Services.Providers.ResourceType : object {
    public bool IsMediaLinkEntry { get; public set; }
    public Type InstanceType { get; }
    public ResourceType BaseType { get; }
    public ResourceTypeKind ResourceTypeKind { get; }
    public ReadOnlyCollection`1<ResourceProperty> Properties { get; }
    public ReadOnlyCollection`1<ResourceProperty> PropertiesDeclaredOnThisType { get; }
    public ReadOnlyCollection`1<ResourceProperty> KeyProperties { get; }
    public ReadOnlyCollection`1<ResourceProperty> ETagProperties { get; }
    public string Name { get; }
    public string FullName { get; }
    public string Namespace { get; }
    public bool IsAbstract { get; }
    public bool IsOpenType { get; public set; }
    public bool CanReflectOnInstanceType { get; public set; }
    public object CustomState { get; public set; }
    public bool IsReadOnly { get; }
    public ResourceType(Type instanceType, ResourceTypeKind resourceTypeKind, ResourceType baseType, string namespaceName, string name, bool isAbstract);
    private static ResourceType();
    [DebuggerStepThroughAttribute]
public bool get_IsMediaLinkEntry();
    public void set_IsMediaLinkEntry(bool value);
    [DebuggerStepThroughAttribute]
public Type get_InstanceType();
    [DebuggerStepThroughAttribute]
public ResourceType get_BaseType();
    [DebuggerStepThroughAttribute]
public ResourceTypeKind get_ResourceTypeKind();
    public ReadOnlyCollection`1<ResourceProperty> get_Properties();
    public ReadOnlyCollection`1<ResourceProperty> get_PropertiesDeclaredOnThisType();
    public ReadOnlyCollection`1<ResourceProperty> get_KeyProperties();
    public ReadOnlyCollection`1<ResourceProperty> get_ETagProperties();
    public string get_Name();
    public string get_FullName();
    public string get_Namespace();
    public bool get_IsAbstract();
    [DebuggerStepThroughAttribute]
public bool get_IsOpenType();
    public void set_IsOpenType(bool value);
    [DebuggerStepThroughAttribute]
public bool get_CanReflectOnInstanceType();
    public void set_CanReflectOnInstanceType(bool value);
    [CompilerGeneratedAttribute]
public object get_CustomState();
    [CompilerGeneratedAttribute]
public void set_CustomState(object value);
    public bool get_IsReadOnly();
    public static ResourceType GetPrimitiveResourceType(Type type);
    public void AddProperty(ResourceProperty property);
    public void AddEntityPropertyMappingAttribute(EntityPropertyMappingAttribute attribute);
    public void SetReadOnly();
    protected virtual IEnumerable`1<ResourceProperty> LoadPropertiesDeclaredOnThisType();
}
public enum System.Data.Services.Providers.ResourceTypeKind : Enum {
    public int value__;
    public static ResourceTypeKind EntityType;
    public static ResourceTypeKind ComplexType;
    public static ResourceTypeKind Primitive;
}
[DebuggerVisualizerAttribute("ServiceOperation={Name}")]
public class System.Data.Services.Providers.ServiceOperation : object {
    public string Method { get; }
    public string MimeType { get; public set; }
    public string Name { get; }
    public ReadOnlyCollection`1<ServiceOperationParameter> Parameters { get; }
    public ServiceOperationResultKind ResultKind { get; }
    public ResourceType ResultType { get; }
    public object CustomState { get; public set; }
    public bool IsReadOnly { get; }
    public ResourceSet ResourceSet { get; }
    public ServiceOperation(string name, ServiceOperationResultKind resultKind, ResourceType resultType, ResourceSet resultSet, string method, IEnumerable`1<ServiceOperationParameter> parameters);
    private static ServiceOperation();
    public string get_Method();
    public string get_MimeType();
    public void set_MimeType(string value);
    public string get_Name();
    public ReadOnlyCollection`1<ServiceOperationParameter> get_Parameters();
    public ServiceOperationResultKind get_ResultKind();
    public ResourceType get_ResultType();
    [CompilerGeneratedAttribute]
public object get_CustomState();
    [CompilerGeneratedAttribute]
public void set_CustomState(object value);
    public bool get_IsReadOnly();
    public ResourceSet get_ResourceSet();
    public void SetReadOnly();
}
[DebuggerVisualizerAttribute("ServiceOperationParameter={Name}")]
public class System.Data.Services.Providers.ServiceOperationParameter : object {
    public string Name { get; }
    public ResourceType ParameterType { get; }
    public object CustomState { get; public set; }
    public bool IsReadOnly { get; }
    public ServiceOperationParameter(string name, ResourceType parameterType);
    public string get_Name();
    public ResourceType get_ParameterType();
    [CompilerGeneratedAttribute]
public object get_CustomState();
    [CompilerGeneratedAttribute]
public void set_CustomState(object value);
    public bool get_IsReadOnly();
    public void SetReadOnly();
}
public enum System.Data.Services.Providers.ServiceOperationResultKind : Enum {
    public int value__;
    public static ServiceOperationResultKind DirectValue;
    public static ServiceOperationResultKind Enumeration;
    public static ServiceOperationResultKind QueryWithMultipleResults;
    public static ServiceOperationResultKind QueryWithSingleResult;
    public static ServiceOperationResultKind Void;
}
[AttributeUsageAttribute("64")]
public class System.Data.Services.QueryInterceptorAttribute : Attribute {
    public string EntitySetName { get; }
    public QueryInterceptorAttribute(string entitySetName);
    [DebuggerStepThroughAttribute]
public string get_EntitySetName();
}
[FlagsAttribute]
public enum System.Data.Services.ServiceOperationRights : Enum {
    public int value__;
    public static ServiceOperationRights None;
    public static ServiceOperationRights ReadSingle;
    public static ServiceOperationRights ReadMultiple;
    public static ServiceOperationRights AllRead;
    public static ServiceOperationRights All;
    public static ServiceOperationRights OverrideEntitySetRights;
}
[AttributeUsageAttribute("64")]
public class System.Data.Services.SingleResultAttribute : Attribute {
}
[FlagsAttribute]
public enum System.Data.Services.UpdateOperations : Enum {
    public int value__;
    public static UpdateOperations None;
    public static UpdateOperations Add;
    public static UpdateOperations Change;
    public static UpdateOperations Delete;
}
