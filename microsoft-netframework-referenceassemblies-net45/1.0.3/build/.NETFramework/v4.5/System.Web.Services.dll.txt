public class System.Web.Services.Configuration.DiagnosticsElement : ConfigurationElement {
    [ConfigurationPropertyAttribute("suppressReturningExceptions")]
public bool SuppressReturningExceptions { get; public set; }
    protected ConfigurationPropertyCollection Properties { get; }
    public bool get_SuppressReturningExceptions();
    public void set_SuppressReturningExceptions(bool value);
    protected virtual ConfigurationPropertyCollection get_Properties();
}
public enum System.Web.Services.Configuration.PriorityGroup : Enum {
    public int value__;
    public static PriorityGroup High;
    public static PriorityGroup Low;
}
public class System.Web.Services.Configuration.ProtocolElement : ConfigurationElement {
    [ConfigurationPropertyAttribute("name")]
public WebServiceProtocols Name { get; public set; }
    protected ConfigurationPropertyCollection Properties { get; }
    public ProtocolElement(WebServiceProtocols protocol);
    public WebServiceProtocols get_Name();
    public void set_Name(WebServiceProtocols value);
    protected virtual ConfigurationPropertyCollection get_Properties();
}
[ConfigurationCollectionAttribute("System.Web.Services.Configuration.ProtocolElement")]
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Configuration.ProtocolElementCollection : ConfigurationElementCollection {
    public ProtocolElement Item { get; public set; }
    public ProtocolElement Item { get; public set; }
    public void Add(ProtocolElement element);
    public void Clear();
    public bool ContainsKey(object key);
    protected virtual ConfigurationElement CreateNewElement();
    public void CopyTo(ProtocolElement[] array, int index);
    protected virtual object GetElementKey(ConfigurationElement element);
    public int IndexOf(ProtocolElement element);
    public void Remove(ProtocolElement element);
    public void RemoveAt(object key);
    public void RemoveAt(int index);
    public ProtocolElement get_Item(object key);
    public void set_Item(object key, ProtocolElement value);
    public ProtocolElement get_Item(int index);
    public void set_Item(int index, ProtocolElement value);
}
public class System.Web.Services.Configuration.SoapEnvelopeProcessingElement : ConfigurationElement {
    [TypeConverterAttribute("System.Configuration.InfiniteIntConverter")]
[ConfigurationPropertyAttribute("readTimeout")]
public int ReadTimeout { get; public set; }
    [ConfigurationPropertyAttribute("strict")]
public bool IsStrict { get; public set; }
    protected ConfigurationPropertyCollection Properties { get; }
    public SoapEnvelopeProcessingElement(int readTimeout);
    public SoapEnvelopeProcessingElement(int readTimeout, bool strict);
    public int get_ReadTimeout();
    public void set_ReadTimeout(int value);
    public bool get_IsStrict();
    public void set_IsStrict(bool value);
    protected virtual ConfigurationPropertyCollection get_Properties();
}
public class System.Web.Services.Configuration.SoapExtensionTypeElement : ConfigurationElement {
    [ConfigurationPropertyAttribute("group")]
public PriorityGroup Group { get; public set; }
    [ConfigurationPropertyAttribute("priority")]
[IntegerValidatorAttribute]
public int Priority { get; public set; }
    [TypeConverterAttribute("System.Web.Services.Configuration.TypeTypeConverter")]
[ConfigurationPropertyAttribute("type")]
public Type Type { get; public set; }
    protected ConfigurationPropertyCollection Properties { get; }
    public SoapExtensionTypeElement(string type, int priority, PriorityGroup group);
    public SoapExtensionTypeElement(Type type, int priority, PriorityGroup group);
    public PriorityGroup get_Group();
    public void set_Group(PriorityGroup value);
    public int get_Priority();
    public void set_Priority(int value);
    public Type get_Type();
    public void set_Type(Type value);
    protected virtual ConfigurationPropertyCollection get_Properties();
}
[ConfigurationCollectionAttribute("System.Web.Services.Configuration.SoapExtensionTypeElement")]
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Configuration.SoapExtensionTypeElementCollection : ConfigurationElementCollection {
    public SoapExtensionTypeElement Item { get; public set; }
    public SoapExtensionTypeElement Item { get; public set; }
    public void Add(SoapExtensionTypeElement element);
    public void Clear();
    public bool ContainsKey(object key);
    protected virtual ConfigurationElement CreateNewElement();
    public void CopyTo(SoapExtensionTypeElement[] array, int index);
    protected virtual object GetElementKey(ConfigurationElement element);
    public int IndexOf(SoapExtensionTypeElement element);
    public void Remove(SoapExtensionTypeElement element);
    public void RemoveAt(object key);
    public void RemoveAt(int index);
    public SoapExtensionTypeElement get_Item(object key);
    public void set_Item(object key, SoapExtensionTypeElement value);
    public SoapExtensionTypeElement get_Item(int index);
    public void set_Item(int index, SoapExtensionTypeElement value);
}
internal class System.Web.Services.Configuration.TypeAndNameConverter : TypeConverter {
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
public class System.Web.Services.Configuration.TypeElement : ConfigurationElement {
    [ConfigurationPropertyAttribute("type")]
[TypeConverterAttribute("System.Web.Services.Configuration.TypeAndNameConverter")]
public Type Type { get; public set; }
    protected ConfigurationPropertyCollection Properties { get; }
    public TypeElement(string type);
    public TypeElement(Type type);
    public Type get_Type();
    public void set_Type(Type value);
    protected virtual ConfigurationPropertyCollection get_Properties();
}
[ConfigurationCollectionAttribute("System.Web.Services.Configuration.TypeElement")]
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Configuration.TypeElementCollection : ConfigurationElementCollection {
    public TypeElement Item { get; public set; }
    public TypeElement Item { get; public set; }
    public void Add(TypeElement element);
    public void Clear();
    public bool ContainsKey(object key);
    protected virtual ConfigurationElement CreateNewElement();
    public void CopyTo(TypeElement[] array, int index);
    protected virtual object GetElementKey(ConfigurationElement element);
    public int IndexOf(TypeElement element);
    public void Remove(TypeElement element);
    public void RemoveAt(object key);
    public void RemoveAt(int index);
    public TypeElement get_Item(object key);
    public void set_Item(object key, TypeElement value);
    public TypeElement get_Item(int index);
    public void set_Item(int index, TypeElement value);
}
internal class System.Web.Services.Configuration.TypeTypeConverter : TypeAndNameConverter {
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[FlagsAttribute]
public enum System.Web.Services.Configuration.WebServiceProtocols : Enum {
    public int value__;
    public static WebServiceProtocols Unknown;
    public static WebServiceProtocols HttpSoap;
    public static WebServiceProtocols HttpGet;
    public static WebServiceProtocols HttpPost;
    public static WebServiceProtocols Documentation;
    public static WebServiceProtocols HttpPostLocalhost;
    public static WebServiceProtocols HttpSoap12;
    public static WebServiceProtocols AnyHttpSoap;
}
public class System.Web.Services.Configuration.WebServicesSection : ConfigurationSection {
    [ConfigurationPropertyAttribute("conformanceWarnings")]
public WsiProfilesElementCollection ConformanceWarnings { get; }
    public static WebServicesSection Current { get; }
    public WebServiceProtocols EnabledProtocols { get; }
    protected ConfigurationPropertyCollection Properties { get; }
    [ConfigurationPropertyAttribute("protocols")]
public ProtocolElementCollection Protocols { get; }
    [ConfigurationPropertyAttribute("soapEnvelopeProcessing")]
public SoapEnvelopeProcessingElement SoapEnvelopeProcessing { get; public set; }
    public DiagnosticsElement Diagnostics { get; public set; }
    [ConfigurationPropertyAttribute("serviceDescriptionFormatExtensionTypes")]
public TypeElementCollection ServiceDescriptionFormatExtensionTypes { get; }
    [ConfigurationPropertyAttribute("soapExtensionImporterTypes")]
public TypeElementCollection SoapExtensionImporterTypes { get; }
    [ConfigurationPropertyAttribute("soapExtensionReflectorTypes")]
public TypeElementCollection SoapExtensionReflectorTypes { get; }
    [ConfigurationPropertyAttribute("soapExtensionTypes")]
public SoapExtensionTypeElementCollection SoapExtensionTypes { get; }
    [ConfigurationPropertyAttribute("soapServerProtocolFactory")]
public TypeElement SoapServerProtocolFactoryType { get; }
    [ConfigurationPropertyAttribute("soapTransportImporterTypes")]
public TypeElementCollection SoapTransportImporterTypes { get; }
    [ConfigurationPropertyAttribute("wsdlHelpGenerator")]
public WsdlHelpGeneratorElement WsdlHelpGenerator { get; }
    private static WebServicesSection();
    public WsiProfilesElementCollection get_ConformanceWarnings();
    public static WebServicesSection get_Current();
    public WebServiceProtocols get_EnabledProtocols();
    public static WebServicesSection GetSection(Configuration config);
    protected virtual void InitializeDefault();
    protected virtual ConfigurationPropertyCollection get_Properties();
    public ProtocolElementCollection get_Protocols();
    public SoapEnvelopeProcessingElement get_SoapEnvelopeProcessing();
    public void set_SoapEnvelopeProcessing(SoapEnvelopeProcessingElement value);
    public DiagnosticsElement get_Diagnostics();
    public void set_Diagnostics(DiagnosticsElement value);
    protected virtual void Reset(ConfigurationElement parentElement);
    public TypeElementCollection get_ServiceDescriptionFormatExtensionTypes();
    public TypeElementCollection get_SoapExtensionImporterTypes();
    public TypeElementCollection get_SoapExtensionReflectorTypes();
    public SoapExtensionTypeElementCollection get_SoapExtensionTypes();
    public TypeElement get_SoapServerProtocolFactoryType();
    public TypeElementCollection get_SoapTransportImporterTypes();
    public WsdlHelpGeneratorElement get_WsdlHelpGenerator();
}
public class System.Web.Services.Configuration.WsdlHelpGeneratorElement : ConfigurationElement {
    [ConfigurationPropertyAttribute("href")]
public string Href { get; public set; }
    protected ConfigurationPropertyCollection Properties { get; }
    public string get_Href();
    public void set_Href(string value);
    protected virtual ConfigurationPropertyCollection get_Properties();
    protected virtual void DeserializeElement(XmlReader reader, bool serializeCollectionKey);
    protected virtual void Reset(ConfigurationElement parentElement);
}
public class System.Web.Services.Configuration.WsiProfilesElement : ConfigurationElement {
    [ConfigurationPropertyAttribute("name")]
public WsiProfiles Name { get; public set; }
    protected ConfigurationPropertyCollection Properties { get; }
    public WsiProfilesElement(WsiProfiles name);
    public WsiProfiles get_Name();
    public void set_Name(WsiProfiles value);
    protected virtual ConfigurationPropertyCollection get_Properties();
}
[DefaultMemberAttribute("Item")]
[ConfigurationCollectionAttribute("System.Web.Services.Configuration.WsiProfilesElement")]
public class System.Web.Services.Configuration.WsiProfilesElementCollection : ConfigurationElementCollection {
    public WsiProfilesElement Item { get; public set; }
    public WsiProfilesElement Item { get; public set; }
    public void Add(WsiProfilesElement element);
    public void Clear();
    public bool ContainsKey(object key);
    protected virtual ConfigurationElement CreateNewElement();
    public void CopyTo(WsiProfilesElement[] array, int index);
    protected virtual object GetElementKey(ConfigurationElement element);
    public int IndexOf(WsiProfilesElement element);
    public void Remove(WsiProfilesElement element);
    public void RemoveAt(object key);
    public void RemoveAt(int index);
    public WsiProfilesElement get_Item(object key);
    public void set_Item(object key, WsiProfilesElement value);
    public WsiProfilesElement get_Item(int index);
    public void set_Item(int index, WsiProfilesElement value);
}
[AttributeUsageAttribute("4")]
public class System.Web.Services.Configuration.XmlFormatExtensionAttribute : Attribute {
    public Type[] ExtensionPoints { get; public set; }
    public string Namespace { get; public set; }
    public string ElementName { get; public set; }
    public XmlFormatExtensionAttribute(string elementName, string ns, Type extensionPoint1);
    public XmlFormatExtensionAttribute(string elementName, string ns, Type extensionPoint1, Type extensionPoint2);
    public XmlFormatExtensionAttribute(string elementName, string ns, Type extensionPoint1, Type extensionPoint2, Type extensionPoint3);
    public XmlFormatExtensionAttribute(string elementName, string ns, Type extensionPoint1, Type extensionPoint2, Type extensionPoint3, Type extensionPoint4);
    public XmlFormatExtensionAttribute(string elementName, string ns, Type[] extensionPoints);
    public Type[] get_ExtensionPoints();
    public void set_ExtensionPoints(Type[] value);
    public string get_Namespace();
    public void set_Namespace(string value);
    public string get_ElementName();
    public void set_ElementName(string value);
}
[AttributeUsageAttribute("4")]
public class System.Web.Services.Configuration.XmlFormatExtensionPointAttribute : Attribute {
    public string MemberName { get; public set; }
    public bool AllowElements { get; public set; }
    public XmlFormatExtensionPointAttribute(string memberName);
    public string get_MemberName();
    public void set_MemberName(string value);
    public bool get_AllowElements();
    public void set_AllowElements(bool value);
}
[AttributeUsageAttribute("4")]
public class System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute : Attribute {
    public string Prefix { get; public set; }
    public string Namespace { get; public set; }
    public XmlFormatExtensionPrefixAttribute(string prefix, string ns);
    public string get_Prefix();
    public void set_Prefix(string value);
    public string get_Namespace();
    public void set_Namespace(string value);
}
public class System.Web.Services.Description.BasicProfileViolation : object {
    public WsiProfiles Claims { get; }
    public string Details { get; }
    public StringCollection Elements { get; }
    public string NormativeStatement { get; }
    public string Recommendation { get; }
    public WsiProfiles get_Claims();
    public string get_Details();
    public StringCollection get_Elements();
    public string get_NormativeStatement();
    public string get_Recommendation();
    public virtual string ToString();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.BasicProfileViolationCollection : CollectionBase {
    public BasicProfileViolation Item { get; public set; }
    public BasicProfileViolation get_Item(int index);
    public void set_Item(int index, BasicProfileViolation value);
    private sealed virtual override IEnumerator`1<BasicProfileViolation> System.Collections.Generic.IEnumerable<System.Web.Services.Description.BasicProfileViolation>.GetEnumerator();
    public void Insert(int index, BasicProfileViolation violation);
    public int IndexOf(BasicProfileViolation violation);
    public bool Contains(BasicProfileViolation violation);
    public void Remove(BasicProfileViolation violation);
    public void CopyTo(BasicProfileViolation[] array, int index);
    public virtual string ToString();
}
public class System.Web.Services.Description.BasicProfileViolationEnumerator : object {
    public BasicProfileViolation Current { get; }
    private object System.Collections.IEnumerator.Current { get; }
    public BasicProfileViolationEnumerator(BasicProfileViolationCollection list);
    public sealed virtual void Dispose();
    public sealed virtual bool MoveNext();
    public sealed virtual BasicProfileViolation get_Current();
    private sealed virtual override object System.Collections.IEnumerator.get_Current();
    private sealed virtual override void System.Collections.IEnumerator.Reset();
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Binding : NamedItem {
    public ServiceDescription ServiceDescription { get; }
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    [XmlElementAttribute("operation")]
public OperationBindingCollection Operations { get; }
    [XmlAttributeAttribute("type")]
public XmlQualifiedName Type { get; public set; }
    public ServiceDescription get_ServiceDescription();
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public OperationBindingCollection get_Operations();
    public XmlQualifiedName get_Type();
    public void set_Type(XmlQualifiedName value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.BindingCollection : ServiceDescriptionBaseCollection {
    public Binding Item { get; public set; }
    public Binding Item { get; }
    public Binding get_Item(int index);
    public void set_Item(int index, Binding value);
    public int Add(Binding binding);
    public void Insert(int index, Binding binding);
    public int IndexOf(Binding binding);
    public bool Contains(Binding binding);
    public void Remove(Binding binding);
    public void CopyTo(Binding[] array, int index);
    public Binding get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
public abstract class System.Web.Services.Description.DocumentableItem : object {
    [XmlIgnoreAttribute]
public string Documentation { get; public set; }
    [XmlAnyElementAttribute("documentation")]
[ComVisibleAttribute("False")]
public XmlElement DocumentationElement { get; public set; }
    [XmlAnyAttributeAttribute]
public XmlAttribute[] ExtensibleAttributes { get; public set; }
    [XmlNamespaceDeclarationsAttribute]
public XmlSerializerNamespaces Namespaces { get; public set; }
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public string get_Documentation();
    public void set_Documentation(string value);
    public XmlElement get_DocumentationElement();
    public void set_DocumentationElement(XmlElement value);
    public XmlAttribute[] get_ExtensibleAttributes();
    public void set_ExtensibleAttributes(XmlAttribute[] value);
    public XmlSerializerNamespaces get_Namespaces();
    public void set_Namespaces(XmlSerializerNamespaces value);
    public abstract virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.FaultBinding : MessageBinding {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.FaultBindingCollection : ServiceDescriptionBaseCollection {
    public FaultBinding Item { get; public set; }
    public FaultBinding Item { get; }
    public FaultBinding get_Item(int index);
    public void set_Item(int index, FaultBinding value);
    public int Add(FaultBinding bindingOperationFault);
    public void Insert(int index, FaultBinding bindingOperationFault);
    public int IndexOf(FaultBinding bindingOperationFault);
    public bool Contains(FaultBinding bindingOperationFault);
    public void Remove(FaultBinding bindingOperationFault);
    public void CopyTo(FaultBinding[] array, int index);
    public FaultBinding get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
[XmlFormatExtensionAttribute("address", "http://schemas.xmlsoap.org/wsdl/http/", "System.Web.Services.Description.Port")]
public class System.Web.Services.Description.HttpAddressBinding : ServiceDescriptionFormatExtension {
    [XmlAttributeAttribute("location")]
public string Location { get; public set; }
    public string get_Location();
    public void set_Location(string value);
}
[XmlFormatExtensionAttribute("binding", "http://schemas.xmlsoap.org/wsdl/http/", "System.Web.Services.Description.Binding")]
[XmlFormatExtensionPrefixAttribute("http", "http://schemas.xmlsoap.org/wsdl/http/")]
public class System.Web.Services.Description.HttpBinding : ServiceDescriptionFormatExtension {
    public static string Namespace;
    [XmlAttributeAttribute("verb")]
public string Verb { get; public set; }
    public string get_Verb();
    public void set_Verb(string value);
}
[XmlFormatExtensionAttribute("operation", "http://schemas.xmlsoap.org/wsdl/http/", "System.Web.Services.Description.OperationBinding")]
public class System.Web.Services.Description.HttpOperationBinding : ServiceDescriptionFormatExtension {
    [XmlAttributeAttribute("location")]
public string Location { get; public set; }
    public string get_Location();
    public void set_Location(string value);
}
[XmlFormatExtensionAttribute("urlEncoded", "http://schemas.xmlsoap.org/wsdl/http/", "System.Web.Services.Description.InputBinding")]
public class System.Web.Services.Description.HttpUrlEncodedBinding : ServiceDescriptionFormatExtension {
}
[XmlFormatExtensionAttribute("urlReplacement", "http://schemas.xmlsoap.org/wsdl/http/", "System.Web.Services.Description.InputBinding")]
public class System.Web.Services.Description.HttpUrlReplacementBinding : ServiceDescriptionFormatExtension {
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Import : DocumentableItem {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public ServiceDescription ServiceDescription { get; }
    [XmlAttributeAttribute("namespace")]
public string Namespace { get; public set; }
    [XmlAttributeAttribute("location")]
public string Location { get; public set; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public ServiceDescription get_ServiceDescription();
    public string get_Namespace();
    public void set_Namespace(string value);
    public string get_Location();
    public void set_Location(string value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.ImportCollection : ServiceDescriptionBaseCollection {
    public Import Item { get; public set; }
    public Import get_Item(int index);
    public void set_Item(int index, Import value);
    public int Add(Import import);
    public void Insert(int index, Import import);
    public int IndexOf(Import import);
    public bool Contains(Import import);
    public void Remove(Import import);
    public void CopyTo(Import[] array, int index);
    protected virtual void SetParent(object value, object parent);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.InputBinding : MessageBinding {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Message : NamedItem {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public ServiceDescription ServiceDescription { get; }
    [XmlElementAttribute("part")]
public MessagePartCollection Parts { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public ServiceDescription get_ServiceDescription();
    public MessagePartCollection get_Parts();
    public MessagePart[] FindPartsByName(String[] partNames);
    public MessagePart FindPartByName(string partName);
}
public abstract class System.Web.Services.Description.MessageBinding : NamedItem {
    public OperationBinding OperationBinding { get; }
    public OperationBinding get_OperationBinding();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.MessageCollection : ServiceDescriptionBaseCollection {
    public Message Item { get; public set; }
    public Message Item { get; }
    public Message get_Item(int index);
    public void set_Item(int index, Message value);
    public int Add(Message message);
    public void Insert(int index, Message message);
    public int IndexOf(Message message);
    public bool Contains(Message message);
    public void Remove(Message message);
    public void CopyTo(Message[] array, int index);
    public Message get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.MessagePart : NamedItem {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public Message Message { get; }
    [XmlAttributeAttribute("element")]
public XmlQualifiedName Element { get; public set; }
    [XmlAttributeAttribute("type")]
public XmlQualifiedName Type { get; public set; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public Message get_Message();
    public XmlQualifiedName get_Element();
    public void set_Element(XmlQualifiedName value);
    public XmlQualifiedName get_Type();
    public void set_Type(XmlQualifiedName value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.MessagePartCollection : ServiceDescriptionBaseCollection {
    public MessagePart Item { get; public set; }
    public MessagePart Item { get; }
    public MessagePart get_Item(int index);
    public void set_Item(int index, MessagePart value);
    public int Add(MessagePart messagePart);
    public void Insert(int index, MessagePart messagePart);
    public int IndexOf(MessagePart messagePart);
    public bool Contains(MessagePart messagePart);
    public void Remove(MessagePart messagePart);
    public void CopyTo(MessagePart[] array, int index);
    public MessagePart get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
[XmlFormatExtensionPrefixAttribute("mime", "http://schemas.xmlsoap.org/wsdl/mime/")]
[XmlFormatExtensionAttribute("content", "http://schemas.xmlsoap.org/wsdl/mime/", "System.Web.Services.Description.MimePart", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding")]
public class System.Web.Services.Description.MimeContentBinding : ServiceDescriptionFormatExtension {
    public static string Namespace;
    [XmlAttributeAttribute("part")]
public string Part { get; public set; }
    [XmlAttributeAttribute("type")]
public string Type { get; public set; }
    public string get_Part();
    public void set_Part(string value);
    public string get_Type();
    public void set_Type(string value);
}
[XmlFormatExtensionAttribute("multipartRelated", "http://schemas.xmlsoap.org/wsdl/mime/", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding")]
public class System.Web.Services.Description.MimeMultipartRelatedBinding : ServiceDescriptionFormatExtension {
    [XmlElementAttribute("part")]
public MimePartCollection Parts { get; }
    public MimePartCollection get_Parts();
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.MimePart : ServiceDescriptionFormatExtension {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.MimePartCollection : CollectionBase {
    public MimePart Item { get; public set; }
    public MimePart get_Item(int index);
    public void set_Item(int index, MimePart value);
    public int Add(MimePart mimePart);
    public void Insert(int index, MimePart mimePart);
    public int IndexOf(MimePart mimePart);
    public bool Contains(MimePart mimePart);
    public void Remove(MimePart mimePart);
    public void CopyTo(MimePart[] array, int index);
}
[XmlFormatExtensionAttribute("text", "http://microsoft.com/wsdl/mime/textMatching/", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding", "System.Web.Services.Description.MimePart")]
[XmlFormatExtensionPrefixAttribute("tm", "http://microsoft.com/wsdl/mime/textMatching/")]
public class System.Web.Services.Description.MimeTextBinding : ServiceDescriptionFormatExtension {
    public static string Namespace;
    [XmlElementAttribute("match", "System.Web.Services.Description.MimeTextMatch")]
public MimeTextMatchCollection Matches { get; }
    public MimeTextMatchCollection get_Matches();
}
public class System.Web.Services.Description.MimeTextMatch : object {
    [XmlAttributeAttribute("name")]
public string Name { get; public set; }
    [XmlAttributeAttribute("type")]
public string Type { get; public set; }
    [XmlAttributeAttribute("group")]
[DefaultValueAttribute("1")]
public int Group { get; public set; }
    [DefaultValueAttribute("0")]
[XmlAttributeAttribute("capture")]
public int Capture { get; public set; }
    [XmlIgnoreAttribute]
public int Repeats { get; public set; }
    [XmlAttributeAttribute("repeats")]
[DefaultValueAttribute("1")]
public string RepeatsString { get; public set; }
    [XmlAttributeAttribute("pattern")]
public string Pattern { get; public set; }
    [XmlAttributeAttribute("ignoreCase")]
public bool IgnoreCase { get; public set; }
    [XmlElementAttribute("match")]
public MimeTextMatchCollection Matches { get; }
    public string get_Name();
    public void set_Name(string value);
    public string get_Type();
    public void set_Type(string value);
    public int get_Group();
    public void set_Group(int value);
    public int get_Capture();
    public void set_Capture(int value);
    public int get_Repeats();
    public void set_Repeats(int value);
    public string get_RepeatsString();
    public void set_RepeatsString(string value);
    public string get_Pattern();
    public void set_Pattern(string value);
    public bool get_IgnoreCase();
    public void set_IgnoreCase(bool value);
    public MimeTextMatchCollection get_Matches();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.MimeTextMatchCollection : CollectionBase {
    public MimeTextMatch Item { get; public set; }
    public MimeTextMatch get_Item(int index);
    public void set_Item(int index, MimeTextMatch value);
    public int Add(MimeTextMatch match);
    public void Insert(int index, MimeTextMatch match);
    public int IndexOf(MimeTextMatch match);
    public bool Contains(MimeTextMatch match);
    public void Remove(MimeTextMatch match);
    public void CopyTo(MimeTextMatch[] array, int index);
}
[XmlFormatExtensionAttribute("mimeXml", "http://schemas.xmlsoap.org/wsdl/mime/", "System.Web.Services.Description.MimePart", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding")]
public class System.Web.Services.Description.MimeXmlBinding : ServiceDescriptionFormatExtension {
    [XmlAttributeAttribute("part")]
public string Part { get; public set; }
    public string get_Part();
    public void set_Part(string value);
}
public abstract class System.Web.Services.Description.NamedItem : DocumentableItem {
    [XmlAttributeAttribute("name")]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Operation : NamedItem {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public PortType PortType { get; }
    [XmlAttributeAttribute("parameterOrder")]
[DefaultValueAttribute("")]
public string ParameterOrderString { get; public set; }
    [XmlIgnoreAttribute]
public String[] ParameterOrder { get; public set; }
    [XmlElementAttribute("output", "System.Web.Services.Description.OperationOutput")]
[XmlElementAttribute("input", "System.Web.Services.Description.OperationInput")]
public OperationMessageCollection Messages { get; }
    [XmlElementAttribute("fault")]
public OperationFaultCollection Faults { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public PortType get_PortType();
    public string get_ParameterOrderString();
    public void set_ParameterOrderString(string value);
    public String[] get_ParameterOrder();
    public void set_ParameterOrder(String[] value);
    public OperationMessageCollection get_Messages();
    public OperationFaultCollection get_Faults();
    public bool IsBoundBy(OperationBinding operationBinding);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.OperationBinding : NamedItem {
    public Binding Binding { get; }
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    [XmlElementAttribute("input")]
public InputBinding Input { get; public set; }
    [XmlElementAttribute("output")]
public OutputBinding Output { get; public set; }
    [XmlElementAttribute("fault")]
public FaultBindingCollection Faults { get; }
    public Binding get_Binding();
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public InputBinding get_Input();
    public void set_Input(InputBinding value);
    public OutputBinding get_Output();
    public void set_Output(OutputBinding value);
    public FaultBindingCollection get_Faults();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.OperationBindingCollection : ServiceDescriptionBaseCollection {
    public OperationBinding Item { get; public set; }
    public OperationBinding get_Item(int index);
    public void set_Item(int index, OperationBinding value);
    public int Add(OperationBinding bindingOperation);
    public void Insert(int index, OperationBinding bindingOperation);
    public int IndexOf(OperationBinding bindingOperation);
    public bool Contains(OperationBinding bindingOperation);
    public void Remove(OperationBinding bindingOperation);
    public void CopyTo(OperationBinding[] array, int index);
    protected virtual void SetParent(object value, object parent);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.OperationCollection : ServiceDescriptionBaseCollection {
    public Operation Item { get; public set; }
    public Operation get_Item(int index);
    public void set_Item(int index, Operation value);
    public int Add(Operation operation);
    public void Insert(int index, Operation operation);
    public int IndexOf(Operation operation);
    public bool Contains(Operation operation);
    public void Remove(Operation operation);
    public void CopyTo(Operation[] array, int index);
    protected virtual void SetParent(object value, object parent);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.OperationFault : OperationMessage {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.OperationFaultCollection : ServiceDescriptionBaseCollection {
    public OperationFault Item { get; public set; }
    public OperationFault Item { get; }
    public OperationFault get_Item(int index);
    public void set_Item(int index, OperationFault value);
    public int Add(OperationFault operationFaultMessage);
    public void Insert(int index, OperationFault operationFaultMessage);
    public int IndexOf(OperationFault operationFaultMessage);
    public bool Contains(OperationFault operationFaultMessage);
    public void Remove(OperationFault operationFaultMessage);
    public void CopyTo(OperationFault[] array, int index);
    public OperationFault get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
public enum System.Web.Services.Description.OperationFlow : Enum {
    public int value__;
    public static OperationFlow None;
    public static OperationFlow OneWay;
    public static OperationFlow Notification;
    public static OperationFlow RequestResponse;
    public static OperationFlow SolicitResponse;
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.OperationInput : OperationMessage {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
public abstract class System.Web.Services.Description.OperationMessage : NamedItem {
    public Operation Operation { get; }
    [XmlAttributeAttribute("message")]
public XmlQualifiedName Message { get; public set; }
    public Operation get_Operation();
    public XmlQualifiedName get_Message();
    public void set_Message(XmlQualifiedName value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.OperationMessageCollection : ServiceDescriptionBaseCollection {
    public OperationMessage Item { get; public set; }
    public OperationInput Input { get; }
    public OperationOutput Output { get; }
    public OperationFlow Flow { get; }
    public OperationMessage get_Item(int index);
    public void set_Item(int index, OperationMessage value);
    public int Add(OperationMessage operationMessage);
    public void Insert(int index, OperationMessage operationMessage);
    public int IndexOf(OperationMessage operationMessage);
    public bool Contains(OperationMessage operationMessage);
    public void Remove(OperationMessage operationMessage);
    public void CopyTo(OperationMessage[] array, int index);
    public OperationInput get_Input();
    public OperationOutput get_Output();
    public OperationFlow get_Flow();
    protected virtual void SetParent(object value, object parent);
    protected virtual void OnInsert(int index, object value);
    protected virtual void OnSet(int index, object oldValue, object newValue);
    protected virtual void OnValidate(object value);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.OperationOutput : OperationMessage {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.OutputBinding : MessageBinding {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Port : NamedItem {
    public Service Service { get; }
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    [XmlAttributeAttribute("binding")]
public XmlQualifiedName Binding { get; public set; }
    public Service get_Service();
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public XmlQualifiedName get_Binding();
    public void set_Binding(XmlQualifiedName value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.PortCollection : ServiceDescriptionBaseCollection {
    public Port Item { get; public set; }
    public Port Item { get; }
    public Port get_Item(int index);
    public void set_Item(int index, Port value);
    public int Add(Port port);
    public void Insert(int index, Port port);
    public int IndexOf(Port port);
    public bool Contains(Port port);
    public void Remove(Port port);
    public void CopyTo(Port[] array, int index);
    public Port get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.PortType : NamedItem {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public ServiceDescription ServiceDescription { get; }
    [XmlElementAttribute("operation")]
public OperationCollection Operations { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public ServiceDescription get_ServiceDescription();
    public OperationCollection get_Operations();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.PortTypeCollection : ServiceDescriptionBaseCollection {
    public PortType Item { get; public set; }
    public PortType Item { get; }
    public PortType get_Item(int index);
    public void set_Item(int index, PortType value);
    public int Add(PortType portType);
    public void Insert(int index, PortType portType);
    public int IndexOf(PortType portType);
    public bool Contains(PortType portType);
    public void Remove(PortType portType);
    public void CopyTo(PortType[] array, int index);
    public PortType get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
public abstract class System.Web.Services.Description.ProtocolImporter : object {
    public ServiceDescriptionCollection ServiceDescriptions { get; }
    public XmlSchemas Schemas { get; }
    public XmlSchemas AbstractSchemas { get; }
    public XmlSchemas ConcreteSchemas { get; }
    public CodeNamespace CodeNamespace { get; }
    public CodeTypeDeclaration CodeTypeDeclaration { get; }
    public ServiceDescriptionImportStyle Style { get; }
    public ServiceDescriptionImportWarnings Warnings { get; public set; }
    public CodeIdentifiers ClassNames { get; }
    public string MethodName { get; }
    public string ClassName { get; }
    public Port Port { get; }
    public PortType PortType { get; }
    public Binding Binding { get; }
    public Service Service { get; }
    public Operation Operation { get; }
    public OperationBinding OperationBinding { get; }
    public Message InputMessage { get; }
    public Message OutputMessage { get; }
    public string ProtocolName { get; }
    public ServiceDescriptionCollection get_ServiceDescriptions();
    public XmlSchemas get_Schemas();
    public XmlSchemas get_AbstractSchemas();
    public XmlSchemas get_ConcreteSchemas();
    public CodeNamespace get_CodeNamespace();
    public CodeTypeDeclaration get_CodeTypeDeclaration();
    public ServiceDescriptionImportStyle get_Style();
    public ServiceDescriptionImportWarnings get_Warnings();
    public void set_Warnings(ServiceDescriptionImportWarnings value);
    public CodeIdentifiers get_ClassNames();
    public string get_MethodName();
    public string get_ClassName();
    public Port get_Port();
    public PortType get_PortType();
    public Binding get_Binding();
    public Service get_Service();
    public Operation get_Operation();
    public OperationBinding get_OperationBinding();
    public Message get_InputMessage();
    public Message get_OutputMessage();
    public void AddExtensionWarningComments(CodeCommentStatementCollection comments, ServiceDescriptionFormatExtensionCollection extensions);
    public void UnsupportedBindingWarning(string text);
    public void UnsupportedOperationWarning(string text);
    public void UnsupportedOperationBindingWarning(string text);
    public Exception OperationSyntaxException(string text);
    public Exception OperationBindingSyntaxException(string text);
    public abstract virtual string get_ProtocolName();
    protected virtual void BeginNamespace();
    protected abstract virtual bool IsBindingSupported();
    protected abstract virtual bool IsOperationFlowSupported(OperationFlow flow);
    protected abstract virtual CodeTypeDeclaration BeginClass();
    protected abstract virtual CodeMemberMethod GenerateMethod();
    protected virtual void EndClass();
    protected virtual void EndNamespace();
}
public abstract class System.Web.Services.Description.ProtocolReflector : object {
    public Service Service { get; }
    public ServiceDescription ServiceDescription { get; }
    public ServiceDescriptionCollection ServiceDescriptions { get; }
    public XmlSchemas Schemas { get; }
    public XmlSchemaExporter SchemaExporter { get; }
    public XmlReflectionImporter ReflectionImporter { get; }
    public string DefaultNamespace { get; }
    public string ServiceUrl { get; }
    public Type ServiceType { get; }
    public LogicalMethodInfo Method { get; }
    public Binding Binding { get; }
    public PortType PortType { get; }
    public Port Port { get; }
    public Operation Operation { get; }
    public OperationBinding OperationBinding { get; }
    public WebMethodAttribute MethodAttribute { get; }
    public LogicalMethodInfo[] Methods { get; }
    public Message InputMessage { get; }
    public Message OutputMessage { get; }
    public MessageCollection HeaderMessages { get; }
    public string ProtocolName { get; }
    public Service get_Service();
    public ServiceDescription get_ServiceDescription();
    public ServiceDescriptionCollection get_ServiceDescriptions();
    public XmlSchemas get_Schemas();
    public XmlSchemaExporter get_SchemaExporter();
    public XmlReflectionImporter get_ReflectionImporter();
    public string get_DefaultNamespace();
    public string get_ServiceUrl();
    public Type get_ServiceType();
    public LogicalMethodInfo get_Method();
    public Binding get_Binding();
    public PortType get_PortType();
    public Port get_Port();
    public Operation get_Operation();
    public OperationBinding get_OperationBinding();
    public WebMethodAttribute get_MethodAttribute();
    public LogicalMethodInfo[] get_Methods();
    public Message get_InputMessage();
    public Message get_OutputMessage();
    public MessageCollection get_HeaderMessages();
    public ServiceDescription GetServiceDescription(string ns);
    public abstract virtual string get_ProtocolName();
    protected virtual void BeginClass();
    protected abstract virtual bool ReflectMethod();
    protected virtual string ReflectMethodBinding();
    protected virtual void EndClass();
    protected virtual void ReflectDescription();
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Service : NamedItem {
    public ServiceDescription ServiceDescription { get; }
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    [XmlElementAttribute("port")]
public PortCollection Ports { get; }
    public ServiceDescription get_ServiceDescription();
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public PortCollection get_Ports();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.ServiceCollection : ServiceDescriptionBaseCollection {
    public Service Item { get; public set; }
    public Service Item { get; }
    public Service get_Item(int index);
    public void set_Item(int index, Service value);
    public int Add(Service service);
    public void Insert(int index, Service service);
    public int IndexOf(Service service);
    public bool Contains(Service service);
    public void Remove(Service service);
    public void CopyTo(Service[] array, int index);
    public Service get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
[XmlRootAttribute("definitions")]
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.ServiceDescription : NamedItem {
    public static string Namespace;
    [XmlIgnoreAttribute]
public string RetrievalUrl { get; public set; }
    [XmlIgnoreAttribute]
public ServiceDescriptionCollection ServiceDescriptions { get; }
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    [XmlElementAttribute("import")]
public ImportCollection Imports { get; }
    [XmlElementAttribute("types")]
public Types Types { get; public set; }
    [XmlElementAttribute("message")]
public MessageCollection Messages { get; }
    [XmlElementAttribute("portType")]
public PortTypeCollection PortTypes { get; }
    [XmlElementAttribute("binding")]
public BindingCollection Bindings { get; }
    [XmlElementAttribute("service")]
public ServiceCollection Services { get; }
    [XmlAttributeAttribute("targetNamespace")]
public string TargetNamespace { get; public set; }
    public static XmlSchema Schema { get; }
    [XmlIgnoreAttribute]
public StringCollection ValidationWarnings { get; }
    [XmlIgnoreAttribute]
public static XmlSerializer Serializer { get; }
    private static ServiceDescription();
    public string get_RetrievalUrl();
    public void set_RetrievalUrl(string value);
    public ServiceDescriptionCollection get_ServiceDescriptions();
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public ImportCollection get_Imports();
    public Types get_Types();
    public void set_Types(Types value);
    public MessageCollection get_Messages();
    public PortTypeCollection get_PortTypes();
    public BindingCollection get_Bindings();
    public ServiceCollection get_Services();
    public string get_TargetNamespace();
    public void set_TargetNamespace(string value);
    public static XmlSchema get_Schema();
    public StringCollection get_ValidationWarnings();
    public static XmlSerializer get_Serializer();
    public static ServiceDescription Read(TextReader textReader);
    public static ServiceDescription Read(Stream stream);
    public static ServiceDescription Read(XmlReader reader);
    public static ServiceDescription Read(string fileName);
    public static ServiceDescription Read(TextReader textReader, bool validate);
    public static ServiceDescription Read(Stream stream, bool validate);
    public static ServiceDescription Read(string fileName, bool validate);
    public static ServiceDescription Read(XmlReader reader, bool validate);
    public static bool CanRead(XmlReader reader);
    public void Write(string fileName);
    public void Write(TextWriter writer);
    public void Write(Stream stream);
    public void Write(XmlWriter writer);
}
public abstract class System.Web.Services.Description.ServiceDescriptionBaseCollection : CollectionBase {
    protected IDictionary Table { get; }
    protected virtual IDictionary get_Table();
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
    protected virtual void OnInsertComplete(int index, object value);
    protected virtual void OnRemove(int index, object value);
    protected virtual void OnClear();
    protected virtual void OnSet(int index, object oldValue, object newValue);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.ServiceDescriptionCollection : ServiceDescriptionBaseCollection {
    public ServiceDescription Item { get; public set; }
    public ServiceDescription Item { get; }
    public ServiceDescription get_Item(int index);
    public void set_Item(int index, ServiceDescription value);
    public ServiceDescription get_Item(string ns);
    public int Add(ServiceDescription serviceDescription);
    public void Insert(int index, ServiceDescription serviceDescription);
    public int IndexOf(ServiceDescription serviceDescription);
    public bool Contains(ServiceDescription serviceDescription);
    public void Remove(ServiceDescription serviceDescription);
    public void CopyTo(ServiceDescription[] array, int index);
    protected virtual string GetKey(object value);
    public Message GetMessage(XmlQualifiedName name);
    public PortType GetPortType(XmlQualifiedName name);
    public Service GetService(XmlQualifiedName name);
    public Binding GetBinding(XmlQualifiedName name);
    protected virtual void SetParent(object value, object parent);
    protected virtual void OnInsertComplete(int index, object value);
}
public abstract class System.Web.Services.Description.ServiceDescriptionFormatExtension : object {
    public object Parent { get; }
    [XmlAttributeAttribute("required")]
[DefaultValueAttribute("False")]
public bool Required { get; public set; }
    [XmlIgnoreAttribute]
public bool Handled { get; public set; }
    public object get_Parent();
    public bool get_Required();
    public void set_Required(bool value);
    public bool get_Handled();
    public void set_Handled(bool value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection : ServiceDescriptionBaseCollection {
    public object Item { get; public set; }
    public ServiceDescriptionFormatExtensionCollection(object parent);
    public object get_Item(int index);
    public void set_Item(int index, object value);
    public int Add(object extension);
    public void Insert(int index, object extension);
    public int IndexOf(object extension);
    public bool Contains(object extension);
    public void Remove(object extension);
    public void CopyTo(Object[] array, int index);
    public object Find(Type type);
    public Object[] FindAll(Type type);
    public XmlElement Find(string name, string ns);
    public XmlElement[] FindAll(string name, string ns);
    public bool IsHandled(object item);
    public bool IsRequired(object item);
    protected virtual void SetParent(object value, object parent);
    protected virtual void OnValidate(object value);
}
public class System.Web.Services.Description.ServiceDescriptionImporter : object {
    public ServiceDescriptionCollection ServiceDescriptions { get; }
    public XmlSchemas Schemas { get; }
    public ServiceDescriptionImportStyle Style { get; public set; }
    [ComVisibleAttribute("False")]
public CodeGenerationOptions CodeGenerationOptions { get; public set; }
    [ComVisibleAttribute("False")]
public CodeDomProvider CodeGenerator { get; public set; }
    public string ProtocolName { get; public set; }
    public ServiceDescriptionCollection get_ServiceDescriptions();
    public XmlSchemas get_Schemas();
    public ServiceDescriptionImportStyle get_Style();
    public void set_Style(ServiceDescriptionImportStyle value);
    public CodeGenerationOptions get_CodeGenerationOptions();
    public void set_CodeGenerationOptions(CodeGenerationOptions value);
    public CodeDomProvider get_CodeGenerator();
    public void set_CodeGenerator(CodeDomProvider value);
    public string get_ProtocolName();
    public void set_ProtocolName(string value);
    public void AddServiceDescription(ServiceDescription serviceDescription, string appSettingUrlKey, string appSettingBaseUrl);
    public ServiceDescriptionImportWarnings Import(CodeNamespace codeNamespace, CodeCompileUnit codeCompileUnit);
    public static StringCollection GenerateWebReferences(WebReferenceCollection webReferences, CodeDomProvider codeProvider, CodeCompileUnit codeCompileUnit, WebReferenceOptions options);
}
public enum System.Web.Services.Description.ServiceDescriptionImportStyle : Enum {
    public int value__;
    [XmlEnumAttribute("client")]
public static ServiceDescriptionImportStyle Client;
    [XmlEnumAttribute("server")]
public static ServiceDescriptionImportStyle Server;
    [XmlEnumAttribute("serverInterface")]
public static ServiceDescriptionImportStyle ServerInterface;
}
[FlagsAttribute]
public enum System.Web.Services.Description.ServiceDescriptionImportWarnings : Enum {
    public int value__;
    public static ServiceDescriptionImportWarnings NoCodeGenerated;
    public static ServiceDescriptionImportWarnings OptionalExtensionsIgnored;
    public static ServiceDescriptionImportWarnings RequiredExtensionsIgnored;
    public static ServiceDescriptionImportWarnings UnsupportedOperationsIgnored;
    public static ServiceDescriptionImportWarnings UnsupportedBindingsIgnored;
    public static ServiceDescriptionImportWarnings NoMethodsGenerated;
    public static ServiceDescriptionImportWarnings SchemaValidation;
    public static ServiceDescriptionImportWarnings WsiConformance;
}
public class System.Web.Services.Description.ServiceDescriptionReflector : object {
    public ServiceDescriptionCollection ServiceDescriptions { get; }
    public XmlSchemas Schemas { get; }
    public ServiceDescriptionCollection get_ServiceDescriptions();
    public XmlSchemas get_Schemas();
    public void Reflect(Type type, string url);
}
[XmlFormatExtensionAttribute("address", "http://schemas.xmlsoap.org/wsdl/soap12/", "System.Web.Services.Description.Port")]
public class System.Web.Services.Description.Soap12AddressBinding : SoapAddressBinding {
}
[XmlFormatExtensionAttribute("binding", "http://schemas.xmlsoap.org/wsdl/soap12/", "System.Web.Services.Description.Binding")]
[XmlFormatExtensionPrefixAttribute("soap12", "http://schemas.xmlsoap.org/wsdl/soap12/")]
public class System.Web.Services.Description.Soap12Binding : SoapBinding {
    public static string Namespace;
    public static string HttpTransport;
}
[XmlFormatExtensionAttribute("body", "http://schemas.xmlsoap.org/wsdl/soap12/", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding", "System.Web.Services.Description.MimePart")]
public class System.Web.Services.Description.Soap12BodyBinding : SoapBodyBinding {
}
[XmlFormatExtensionAttribute("fault", "http://schemas.xmlsoap.org/wsdl/soap12/", "System.Web.Services.Description.FaultBinding")]
public class System.Web.Services.Description.Soap12FaultBinding : SoapFaultBinding {
}
[XmlFormatExtensionAttribute("header", "http://schemas.xmlsoap.org/wsdl/soap12/", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding")]
public class System.Web.Services.Description.Soap12HeaderBinding : SoapHeaderBinding {
}
[XmlFormatExtensionAttribute("operation", "http://schemas.xmlsoap.org/wsdl/soap12/", "System.Web.Services.Description.OperationBinding")]
public class System.Web.Services.Description.Soap12OperationBinding : SoapOperationBinding {
    [XmlAttributeAttribute("soapActionRequired")]
[DefaultValueAttribute("False")]
public bool SoapActionRequired { get; public set; }
    public bool get_SoapActionRequired();
    public void set_SoapActionRequired(bool value);
}
[XmlFormatExtensionAttribute("address", "http://schemas.xmlsoap.org/wsdl/soap/", "System.Web.Services.Description.Port")]
public class System.Web.Services.Description.SoapAddressBinding : ServiceDescriptionFormatExtension {
    [XmlAttributeAttribute("location")]
public string Location { get; public set; }
    public string get_Location();
    public void set_Location(string value);
}
[XmlFormatExtensionPrefixAttribute("soap", "http://schemas.xmlsoap.org/wsdl/soap/")]
[XmlFormatExtensionPrefixAttribute("soapenc", "http://schemas.xmlsoap.org/soap/encoding/")]
[XmlFormatExtensionAttribute("binding", "http://schemas.xmlsoap.org/wsdl/soap/", "System.Web.Services.Description.Binding")]
public class System.Web.Services.Description.SoapBinding : ServiceDescriptionFormatExtension {
    public static string Namespace;
    public static string HttpTransport;
    [XmlAttributeAttribute("transport")]
public string Transport { get; public set; }
    [XmlAttributeAttribute("style")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public SoapBindingStyle Style { get; public set; }
    public static XmlSchema Schema { get; }
    private static SoapBinding();
    public string get_Transport();
    public void set_Transport(string value);
    public SoapBindingStyle get_Style();
    public void set_Style(SoapBindingStyle value);
    public static XmlSchema get_Schema();
}
public enum System.Web.Services.Description.SoapBindingStyle : Enum {
    public int value__;
    [XmlIgnoreAttribute]
public static SoapBindingStyle Default;
    [XmlEnumAttribute("document")]
public static SoapBindingStyle Document;
    [XmlEnumAttribute("rpc")]
public static SoapBindingStyle Rpc;
}
public enum System.Web.Services.Description.SoapBindingUse : Enum {
    public int value__;
    [XmlIgnoreAttribute]
public static SoapBindingUse Default;
    [XmlEnumAttribute("encoded")]
public static SoapBindingUse Encoded;
    [XmlEnumAttribute("literal")]
public static SoapBindingUse Literal;
}
[XmlFormatExtensionAttribute("body", "http://schemas.xmlsoap.org/wsdl/soap/", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding", "System.Web.Services.Description.MimePart")]
public class System.Web.Services.Description.SoapBodyBinding : ServiceDescriptionFormatExtension {
    [DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
[XmlAttributeAttribute("use")]
public SoapBindingUse Use { get; public set; }
    [XmlAttributeAttribute("namespace")]
[DefaultValueAttribute("")]
public string Namespace { get; public set; }
    [XmlAttributeAttribute("encodingStyle")]
[DefaultValueAttribute("")]
public string Encoding { get; public set; }
    [XmlAttributeAttribute("parts")]
public string PartsString { get; public set; }
    [XmlIgnoreAttribute]
public String[] Parts { get; public set; }
    public SoapBindingUse get_Use();
    public void set_Use(SoapBindingUse value);
    public string get_Namespace();
    public void set_Namespace(string value);
    public string get_Encoding();
    public void set_Encoding(string value);
    public string get_PartsString();
    public void set_PartsString(string value);
    public String[] get_Parts();
    public void set_Parts(String[] value);
}
public abstract class System.Web.Services.Description.SoapExtensionImporter : object {
    public SoapProtocolImporter ImportContext { get; public set; }
    public abstract virtual void ImportMethod(CodeAttributeDeclarationCollection metadata);
    public SoapProtocolImporter get_ImportContext();
    public void set_ImportContext(SoapProtocolImporter value);
}
public abstract class System.Web.Services.Description.SoapExtensionReflector : object {
    public ProtocolReflector ReflectionContext { get; public set; }
    public abstract virtual void ReflectMethod();
    public virtual void ReflectDescription();
    public ProtocolReflector get_ReflectionContext();
    public void set_ReflectionContext(ProtocolReflector value);
}
[XmlFormatExtensionAttribute("fault", "http://schemas.xmlsoap.org/wsdl/soap/", "System.Web.Services.Description.FaultBinding")]
public class System.Web.Services.Description.SoapFaultBinding : ServiceDescriptionFormatExtension {
    [XmlAttributeAttribute("use")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public SoapBindingUse Use { get; public set; }
    [XmlAttributeAttribute("name")]
public string Name { get; public set; }
    [XmlAttributeAttribute("namespace")]
public string Namespace { get; public set; }
    [XmlAttributeAttribute("encodingStyle")]
[DefaultValueAttribute("")]
public string Encoding { get; public set; }
    public SoapBindingUse get_Use();
    public void set_Use(SoapBindingUse value);
    public string get_Name();
    public void set_Name(string value);
    public string get_Namespace();
    public void set_Namespace(string value);
    public string get_Encoding();
    public void set_Encoding(string value);
}
[XmlFormatExtensionAttribute("header", "http://schemas.xmlsoap.org/wsdl/soap/", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding")]
public class System.Web.Services.Description.SoapHeaderBinding : ServiceDescriptionFormatExtension {
    [XmlIgnoreAttribute]
public bool MapToProperty { get; public set; }
    [XmlAttributeAttribute("message")]
public XmlQualifiedName Message { get; public set; }
    [XmlAttributeAttribute("part")]
public string Part { get; public set; }
    [XmlAttributeAttribute("use")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public SoapBindingUse Use { get; public set; }
    [XmlAttributeAttribute("encodingStyle")]
[DefaultValueAttribute("")]
public string Encoding { get; public set; }
    [XmlAttributeAttribute("namespace")]
[DefaultValueAttribute("")]
public string Namespace { get; public set; }
    [XmlElementAttribute("headerfault")]
public SoapHeaderFaultBinding Fault { get; public set; }
    public bool get_MapToProperty();
    public void set_MapToProperty(bool value);
    public XmlQualifiedName get_Message();
    public void set_Message(XmlQualifiedName value);
    public string get_Part();
    public void set_Part(string value);
    public SoapBindingUse get_Use();
    public void set_Use(SoapBindingUse value);
    public string get_Encoding();
    public void set_Encoding(string value);
    public string get_Namespace();
    public void set_Namespace(string value);
    public SoapHeaderFaultBinding get_Fault();
    public void set_Fault(SoapHeaderFaultBinding value);
}
public class System.Web.Services.Description.SoapHeaderFaultBinding : ServiceDescriptionFormatExtension {
    [XmlAttributeAttribute("message")]
public XmlQualifiedName Message { get; public set; }
    [XmlAttributeAttribute("part")]
public string Part { get; public set; }
    [DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
[XmlAttributeAttribute("use")]
public SoapBindingUse Use { get; public set; }
    [XmlAttributeAttribute("encodingStyle")]
[DefaultValueAttribute("")]
public string Encoding { get; public set; }
    [XmlAttributeAttribute("namespace")]
[DefaultValueAttribute("")]
public string Namespace { get; public set; }
    public XmlQualifiedName get_Message();
    public void set_Message(XmlQualifiedName value);
    public string get_Part();
    public void set_Part(string value);
    public SoapBindingUse get_Use();
    public void set_Use(SoapBindingUse value);
    public string get_Encoding();
    public void set_Encoding(string value);
    public string get_Namespace();
    public void set_Namespace(string value);
}
[XmlFormatExtensionAttribute("operation", "http://schemas.xmlsoap.org/wsdl/soap/", "System.Web.Services.Description.OperationBinding")]
public class System.Web.Services.Description.SoapOperationBinding : ServiceDescriptionFormatExtension {
    [XmlAttributeAttribute("soapAction")]
public string SoapAction { get; public set; }
    [XmlAttributeAttribute("style")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public SoapBindingStyle Style { get; public set; }
    public string get_SoapAction();
    public void set_SoapAction(string value);
    public SoapBindingStyle get_Style();
    public void set_Style(SoapBindingStyle value);
}
public class System.Web.Services.Description.SoapProtocolImporter : ProtocolImporter {
    public string ProtocolName { get; }
    public SoapBinding SoapBinding { get; }
    public SoapSchemaImporter SoapImporter { get; }
    public XmlSchemaImporter XmlImporter { get; }
    public XmlCodeExporter XmlExporter { get; }
    public SoapCodeExporter SoapExporter { get; }
    public virtual string get_ProtocolName();
    public SoapBinding get_SoapBinding();
    public SoapSchemaImporter get_SoapImporter();
    public XmlSchemaImporter get_XmlImporter();
    public XmlCodeExporter get_XmlExporter();
    public SoapCodeExporter get_SoapExporter();
    protected virtual void BeginNamespace();
    protected virtual void EndNamespace();
    protected virtual bool IsBindingSupported();
    protected virtual CodeTypeDeclaration BeginClass();
    protected virtual void EndClass();
    protected virtual bool IsOperationFlowSupported(OperationFlow flow);
    protected virtual CodeMemberMethod GenerateMethod();
    protected virtual bool IsSoapEncodingPresent(string uriList);
}
public abstract class System.Web.Services.Description.SoapTransportImporter : object {
    public SoapProtocolImporter ImportContext { get; public set; }
    public abstract virtual bool IsSupportedTransport(string transport);
    public abstract virtual void ImportClass();
    public SoapProtocolImporter get_ImportContext();
    public void set_ImportContext(SoapProtocolImporter value);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Types : DocumentableItem {
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    [XmlElementAttribute("schema", "System.Xml.Schema.XmlSchema")]
public XmlSchemas Schemas { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public XmlSchemas get_Schemas();
}
public class System.Web.Services.Description.WebReference : object {
    public string AppSettingBaseUrl { get; }
    public string AppSettingUrlKey { get; }
    public DiscoveryClientDocumentCollection Documents { get; }
    public CodeNamespace ProxyCode { get; }
    public StringCollection ValidationWarnings { get; }
    public ServiceDescriptionImportWarnings Warnings { get; public set; }
    public string ProtocolName { get; public set; }
    public WebReference(DiscoveryClientDocumentCollection documents, CodeNamespace proxyCode, string protocolName, string appSettingUrlKey, string appSettingBaseUrl);
    public WebReference(DiscoveryClientDocumentCollection documents, CodeNamespace proxyCode);
    public WebReference(DiscoveryClientDocumentCollection documents, CodeNamespace proxyCode, string appSettingUrlKey, string appSettingBaseUrl);
    public string get_AppSettingBaseUrl();
    public string get_AppSettingUrlKey();
    public DiscoveryClientDocumentCollection get_Documents();
    public CodeNamespace get_ProxyCode();
    public StringCollection get_ValidationWarnings();
    public ServiceDescriptionImportWarnings get_Warnings();
    public void set_Warnings(ServiceDescriptionImportWarnings value);
    public string get_ProtocolName();
    public void set_ProtocolName(string value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.WebReferenceCollection : CollectionBase {
    public WebReference Item { get; public set; }
    public WebReference get_Item(int index);
    public void set_Item(int index, WebReference value);
    public int Add(WebReference webReference);
    public void Insert(int index, WebReference webReference);
    public int IndexOf(WebReference webReference);
    public bool Contains(WebReference webReference);
    public void Remove(WebReference webReference);
    public void CopyTo(WebReference[] array, int index);
}
[XmlTypeAttribute("webReferenceOptions")]
[XmlRootAttribute("webReferenceOptions")]
public class System.Web.Services.Description.WebReferenceOptions : object {
    public static string TargetNamespace;
    [XmlElementAttribute("codeGenerationOptions")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public CodeGenerationOptions CodeGenerationOptions { get; public set; }
    [XmlArrayAttribute("schemaImporterExtensions")]
[XmlArrayItemAttribute("type")]
public StringCollection SchemaImporterExtensions { get; }
    [DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
[XmlElementAttribute("style")]
public ServiceDescriptionImportStyle Style { get; public set; }
    [XmlElementAttribute("verbose")]
public bool Verbose { get; public set; }
    public static XmlSchema Schema { get; }
    private static WebReferenceOptions();
    public CodeGenerationOptions get_CodeGenerationOptions();
    public void set_CodeGenerationOptions(CodeGenerationOptions value);
    public StringCollection get_SchemaImporterExtensions();
    public ServiceDescriptionImportStyle get_Style();
    public void set_Style(ServiceDescriptionImportStyle value);
    public bool get_Verbose();
    public void set_Verbose(bool value);
    public static XmlSchema get_Schema();
    public static WebReferenceOptions Read(TextReader reader, ValidationEventHandler validationEventHandler);
    public static WebReferenceOptions Read(Stream stream, ValidationEventHandler validationEventHandler);
    public static WebReferenceOptions Read(XmlReader xmlReader, ValidationEventHandler validationEventHandler);
}
public class System.Web.Services.Description.WebServicesInteroperability : object {
    public static bool CheckConformance(WsiProfiles claims, ServiceDescription description, BasicProfileViolationCollection violations);
    public static bool CheckConformance(WsiProfiles claims, ServiceDescriptionCollection descriptions, BasicProfileViolationCollection violations);
    public static bool CheckConformance(WsiProfiles claims, WebReference webReference, BasicProfileViolationCollection violations);
}
[XmlRootAttribute("contractRef")]
public class System.Web.Services.Discovery.ContractReference : DiscoveryReference {
    public static string Namespace;
    [XmlAttributeAttribute("ref")]
public string Ref { get; public set; }
    [XmlAttributeAttribute("docRef")]
public string DocRef { get; public set; }
    [XmlIgnoreAttribute]
public string Url { get; public set; }
    [XmlIgnoreAttribute]
public ServiceDescription Contract { get; }
    [XmlIgnoreAttribute]
public string DefaultFilename { get; }
    public ContractReference(string href);
    public ContractReference(string href, string docRef);
    public string get_Ref();
    public void set_Ref(string value);
    public string get_DocRef();
    public void set_DocRef(string value);
    public virtual string get_Url();
    public virtual void set_Url(string value);
    public ServiceDescription get_Contract();
    public virtual string get_DefaultFilename();
    public virtual void WriteDocument(object document, Stream stream);
    public virtual object ReadDocument(Stream stream);
    protected internal virtual void Resolve(string contentType, Stream stream);
}
public class System.Web.Services.Discovery.ContractSearchPattern : DiscoverySearchPattern {
    public string Pattern { get; }
    public virtual string get_Pattern();
    public virtual DiscoveryReference GetDiscoveryReference(string filename);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Discovery.DiscoveryClientDocumentCollection : DictionaryBase {
    public object Item { get; public set; }
    public ICollection Keys { get; }
    public ICollection Values { get; }
    public object get_Item(string url);
    public void set_Item(string url, object value);
    public ICollection get_Keys();
    public ICollection get_Values();
    public void Add(string url, object value);
    public bool Contains(string url);
    public void Remove(string url);
}
public class System.Web.Services.Discovery.DiscoveryClientProtocol : HttpWebClientProtocol {
    public IList AdditionalInformation { get; }
    public DiscoveryClientDocumentCollection Documents { get; }
    public DiscoveryExceptionDictionary Errors { get; }
    public DiscoveryClientReferenceCollection References { get; }
    public IList get_AdditionalInformation();
    public DiscoveryClientDocumentCollection get_Documents();
    public DiscoveryExceptionDictionary get_Errors();
    public DiscoveryClientReferenceCollection get_References();
    public DiscoveryDocument Discover(string url);
    public DiscoveryDocument DiscoverAny(string url);
    public Stream Download(String& url);
    public Stream Download(String& url, String& contentType);
    [ObsoleteAttribute("This method will be removed from a future version. The method call is no longer required for resource discovery", "False")]
[ComVisibleAttribute("False")]
public void LoadExternals();
    public DiscoveryClientResultCollection ReadAll(string topLevelFilename);
    public void ResolveAll();
    public void ResolveOneLevel();
    public DiscoveryClientResultCollection WriteAll(string directory, string topLevelFilename);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Discovery.DiscoveryClientReferenceCollection : DictionaryBase {
    public DiscoveryReference Item { get; public set; }
    public ICollection Keys { get; }
    public ICollection Values { get; }
    public DiscoveryReference get_Item(string url);
    public void set_Item(string url, DiscoveryReference value);
    public ICollection get_Keys();
    public ICollection get_Values();
    public void Add(DiscoveryReference value);
    public void Add(string url, DiscoveryReference value);
    public bool Contains(string url);
    public void Remove(string url);
}
public class System.Web.Services.Discovery.DiscoveryClientResult : object {
    [XmlAttributeAttribute("referenceType")]
public string ReferenceTypeName { get; public set; }
    [XmlAttributeAttribute("url")]
public string Url { get; public set; }
    [XmlAttributeAttribute("filename")]
public string Filename { get; public set; }
    public DiscoveryClientResult(Type referenceType, string url, string filename);
    public string get_ReferenceTypeName();
    public void set_ReferenceTypeName(string value);
    public string get_Url();
    public void set_Url(string value);
    public string get_Filename();
    public void set_Filename(string value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Discovery.DiscoveryClientResultCollection : CollectionBase {
    public DiscoveryClientResult Item { get; public set; }
    public DiscoveryClientResult get_Item(int i);
    public void set_Item(int i, DiscoveryClientResult value);
    public int Add(DiscoveryClientResult value);
    public bool Contains(DiscoveryClientResult value);
    public void Remove(DiscoveryClientResult value);
}
[XmlRootAttribute("discovery")]
public class System.Web.Services.Discovery.DiscoveryDocument : object {
    public static string Namespace;
    [XmlIgnoreAttribute]
public IList References { get; }
    public IList get_References();
    public static DiscoveryDocument Read(Stream stream);
    public static DiscoveryDocument Read(TextReader reader);
    public static DiscoveryDocument Read(XmlReader xmlReader);
    public static bool CanRead(XmlReader xmlReader);
    public void Write(TextWriter writer);
    public void Write(Stream stream);
    public void Write(XmlWriter writer);
}
public class System.Web.Services.Discovery.DiscoveryDocumentLinksPattern : DiscoverySearchPattern {
    public string Pattern { get; }
    public virtual string get_Pattern();
    public virtual DiscoveryReference GetDiscoveryReference(string filename);
}
[XmlRootAttribute("discoveryRef")]
public class System.Web.Services.Discovery.DiscoveryDocumentReference : DiscoveryReference {
    [XmlAttributeAttribute("ref")]
public string Ref { get; public set; }
    [XmlIgnoreAttribute]
public string DefaultFilename { get; }
    [XmlIgnoreAttribute]
public DiscoveryDocument Document { get; }
    [XmlIgnoreAttribute]
public string Url { get; public set; }
    public DiscoveryDocumentReference(string href);
    public string get_Ref();
    public void set_Ref(string value);
    public virtual string get_DefaultFilename();
    public DiscoveryDocument get_Document();
    public virtual void WriteDocument(object document, Stream stream);
    public virtual object ReadDocument(Stream stream);
    public virtual string get_Url();
    public virtual void set_Url(string value);
    protected internal virtual void Resolve(string contentType, Stream stream);
    public void ResolveAll();
}
public class System.Web.Services.Discovery.DiscoveryDocumentSearchPattern : DiscoverySearchPattern {
    public string Pattern { get; }
    public virtual string get_Pattern();
    public virtual DiscoveryReference GetDiscoveryReference(string filename);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Discovery.DiscoveryExceptionDictionary : DictionaryBase {
    public Exception Item { get; public set; }
    public ICollection Keys { get; }
    public ICollection Values { get; }
    public Exception get_Item(string url);
    public void set_Item(string url, Exception value);
    public ICollection get_Keys();
    public ICollection get_Values();
    public void Add(string url, Exception value);
    public bool Contains(string url);
    public void Remove(string url);
}
public abstract class System.Web.Services.Discovery.DiscoveryReference : object {
    [XmlIgnoreAttribute]
public DiscoveryClientProtocol ClientProtocol { get; public set; }
    [XmlIgnoreAttribute]
public string DefaultFilename { get; }
    [XmlIgnoreAttribute]
public string Url { get; public set; }
    public DiscoveryClientProtocol get_ClientProtocol();
    public void set_ClientProtocol(DiscoveryClientProtocol value);
    public virtual string get_DefaultFilename();
    public abstract virtual void WriteDocument(object document, Stream stream);
    public abstract virtual object ReadDocument(Stream stream);
    public abstract virtual string get_Url();
    public abstract virtual void set_Url(string value);
    public static string FilenameFromUrl(string url);
    public void Resolve();
    protected internal abstract virtual void Resolve(string contentType, Stream stream);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Discovery.DiscoveryReferenceCollection : CollectionBase {
    public DiscoveryReference Item { get; public set; }
    public DiscoveryReference get_Item(int i);
    public void set_Item(int i, DiscoveryReference value);
    public int Add(DiscoveryReference value);
    public bool Contains(DiscoveryReference value);
    public void Remove(DiscoveryReference value);
}
public class System.Web.Services.Discovery.DiscoveryRequestHandler : object {
    public bool IsReusable { get; }
    public sealed virtual bool get_IsReusable();
    public sealed virtual void ProcessRequest(HttpContext context);
}
public abstract class System.Web.Services.Discovery.DiscoverySearchPattern : object {
    public string Pattern { get; }
    public abstract virtual string get_Pattern();
    public abstract virtual DiscoveryReference GetDiscoveryReference(string filename);
}
[XmlRootAttribute("dynamicDiscovery")]
public class System.Web.Services.Discovery.DynamicDiscoveryDocument : object {
    public static string Namespace;
    [XmlElementAttribute("exclude", "System.Web.Services.Discovery.ExcludePathInfo")]
public ExcludePathInfo[] ExcludePaths { get; public set; }
    public ExcludePathInfo[] get_ExcludePaths();
    public void set_ExcludePaths(ExcludePathInfo[] value);
    public void Write(Stream stream);
    public static DynamicDiscoveryDocument Load(Stream stream);
}
public class System.Web.Services.Discovery.ExcludePathInfo : object {
    [XmlAttributeAttribute("path")]
public string Path { get; public set; }
    public ExcludePathInfo(string path);
    public string get_Path();
    public void set_Path(string value);
}
[XmlRootAttribute("schemaRef")]
public class System.Web.Services.Discovery.SchemaReference : DiscoveryReference {
    public static string Namespace;
    [XmlAttributeAttribute("ref")]
public string Ref { get; public set; }
    [DefaultValueAttribute("")]
[XmlAttributeAttribute("targetNamespace")]
public string TargetNamespace { get; public set; }
    [XmlIgnoreAttribute]
public string Url { get; public set; }
    [XmlIgnoreAttribute]
public string DefaultFilename { get; }
    [XmlIgnoreAttribute]
public XmlSchema Schema { get; }
    public SchemaReference(string url);
    public string get_Ref();
    public void set_Ref(string value);
    public string get_TargetNamespace();
    public void set_TargetNamespace(string value);
    public virtual string get_Url();
    public virtual void set_Url(string value);
    public virtual void WriteDocument(object document, Stream stream);
    public virtual object ReadDocument(Stream stream);
    public virtual string get_DefaultFilename();
    public XmlSchema get_Schema();
    protected internal virtual void Resolve(string contentType, Stream stream);
}
[XmlRootAttribute("soap")]
public class System.Web.Services.Discovery.SoapBinding : object {
    public static string Namespace;
    [XmlAttributeAttribute("address")]
public string Address { get; public set; }
    [XmlAttributeAttribute("binding")]
public XmlQualifiedName Binding { get; public set; }
    public string get_Address();
    public void set_Address(string value);
    public XmlQualifiedName get_Binding();
    public void set_Binding(XmlQualifiedName value);
}
public class System.Web.Services.Discovery.XmlSchemaSearchPattern : DiscoverySearchPattern {
    public string Pattern { get; }
    public virtual string get_Pattern();
    public virtual DiscoveryReference GetDiscoveryReference(string filename);
}
public class System.Web.Services.Protocols.AnyReturnReader : MimeReturnReader {
    public virtual void Initialize(object o);
    public virtual object GetInitializer(LogicalMethodInfo methodInfo);
    public virtual object Read(WebResponse response, Stream responseStream);
}
public class System.Web.Services.Protocols.HtmlFormParameterReader : ValueCollectionParameterReader {
    public virtual Object[] Read(HttpRequest request);
}
public class System.Web.Services.Protocols.HtmlFormParameterWriter : UrlEncodedParameterWriter {
    public bool UsesWriteRequest { get; }
    public virtual bool get_UsesWriteRequest();
    public virtual void InitializeRequest(WebRequest request, Object[] values);
    public virtual void WriteRequest(Stream requestStream, Object[] values);
}
public class System.Web.Services.Protocols.HttpGetClientProtocol : HttpSimpleClientProtocol {
    protected virtual WebRequest GetWebRequest(Uri uri);
}
[AttributeUsageAttribute("64")]
public class System.Web.Services.Protocols.HttpMethodAttribute : Attribute {
    public Type ReturnFormatter { get; public set; }
    public Type ParameterFormatter { get; public set; }
    public HttpMethodAttribute(Type returnFormatter, Type parameterFormatter);
    public Type get_ReturnFormatter();
    public void set_ReturnFormatter(Type value);
    public Type get_ParameterFormatter();
    public void set_ParameterFormatter(Type value);
}
public class System.Web.Services.Protocols.HttpPostClientProtocol : HttpSimpleClientProtocol {
    protected virtual WebRequest GetWebRequest(Uri uri);
}
[ComVisibleAttribute("True")]
public abstract class System.Web.Services.Protocols.HttpSimpleClientProtocol : HttpWebClientProtocol {
    protected object Invoke(string methodName, string requestUrl, Object[] parameters);
    protected IAsyncResult BeginInvoke(string methodName, string requestUrl, Object[] parameters, AsyncCallback callback, object asyncState);
    protected object EndInvoke(IAsyncResult asyncResult);
    protected void InvokeAsync(string methodName, string requestUrl, Object[] parameters, SendOrPostCallback callback);
    protected void InvokeAsync(string methodName, string requestUrl, Object[] parameters, SendOrPostCallback callback, object userState);
}
[ComVisibleAttribute("True")]
public abstract class System.Web.Services.Protocols.HttpWebClientProtocol : WebClientProtocol {
    [WebServicesDescriptionAttribute("ClientProtocolAllowAutoRedirect")]
[DefaultValueAttribute("False")]
public bool AllowAutoRedirect { get; public set; }
    [WebServicesDescriptionAttribute("ClientProtocolCookieContainer")]
[DefaultValueAttribute("")]
public CookieContainer CookieContainer { get; public set; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
[WebServicesDescriptionAttribute("ClientProtocolClientCertificates")]
public X509CertificateCollection ClientCertificates { get; }
    [WebServicesDescriptionAttribute("ClientProtocolEnableDecompression")]
[DefaultValueAttribute("False")]
public bool EnableDecompression { get; public set; }
    [DesignerSerializationVisibilityAttribute("0")]
[BrowsableAttribute("False")]
[WebServicesDescriptionAttribute("ClientProtocolUserAgent")]
public string UserAgent { get; public set; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
public IWebProxy Proxy { get; public set; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
public bool UnsafeAuthenticatedConnectionSharing { get; public set; }
    private static HttpWebClientProtocol();
    public bool get_AllowAutoRedirect();
    public void set_AllowAutoRedirect(bool value);
    public CookieContainer get_CookieContainer();
    public void set_CookieContainer(CookieContainer value);
    public X509CertificateCollection get_ClientCertificates();
    public bool get_EnableDecompression();
    public void set_EnableDecompression(bool value);
    public string get_UserAgent();
    public void set_UserAgent(string value);
    public IWebProxy get_Proxy();
    public void set_Proxy(IWebProxy value);
    protected virtual WebRequest GetWebRequest(Uri uri);
    protected virtual WebResponse GetWebResponse(WebRequest request);
    protected virtual WebResponse GetWebResponse(WebRequest request, IAsyncResult result);
    public bool get_UnsafeAuthenticatedConnectionSharing();
    public void set_UnsafeAuthenticatedConnectionSharing(bool value);
    protected void CancelAsync(object userState);
    public static bool GenerateXmlMappings(Type type, ArrayList mappings);
    public static Hashtable GenerateXmlMappings(Type[] types, ArrayList mappings);
}
public class System.Web.Services.Protocols.InvokeCompletedEventArgs : AsyncCompletedEventArgs {
    public Object[] Results { get; }
    public Object[] get_Results();
}
public class System.Web.Services.Protocols.InvokeCompletedEventHandler : MulticastDelegate {
    public InvokeCompletedEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, InvokeCompletedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, InvokeCompletedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class System.Web.Services.Protocols.LogicalMethodInfo : object {
    public Type DeclaringType { get; }
    public string Name { get; }
    public ParameterInfo AsyncResultParameter { get; }
    public ParameterInfo AsyncCallbackParameter { get; }
    public ParameterInfo AsyncStateParameter { get; }
    public Type ReturnType { get; }
    public bool IsVoid { get; }
    public bool IsAsync { get; }
    public ParameterInfo[] InParameters { get; }
    public ParameterInfo[] OutParameters { get; }
    public ParameterInfo[] Parameters { get; }
    public ICustomAttributeProvider CustomAttributeProvider { get; }
    public ICustomAttributeProvider ReturnTypeCustomAttributeProvider { get; }
    public MethodInfo MethodInfo { get; }
    public MethodInfo BeginMethodInfo { get; }
    public MethodInfo EndMethodInfo { get; }
    public LogicalMethodInfo(MethodInfo methodInfo);
    private static LogicalMethodInfo();
    public virtual string ToString();
    public Object[] Invoke(object target, Object[] values);
    public IAsyncResult BeginInvoke(object target, Object[] values, AsyncCallback callback, object asyncState);
    public Object[] EndInvoke(object target, IAsyncResult asyncResult);
    public Type get_DeclaringType();
    public string get_Name();
    public ParameterInfo get_AsyncResultParameter();
    public ParameterInfo get_AsyncCallbackParameter();
    public ParameterInfo get_AsyncStateParameter();
    public Type get_ReturnType();
    public bool get_IsVoid();
    public bool get_IsAsync();
    public ParameterInfo[] get_InParameters();
    public ParameterInfo[] get_OutParameters();
    public ParameterInfo[] get_Parameters();
    public Object[] GetCustomAttributes(Type type);
    public object GetCustomAttribute(Type type);
    public ICustomAttributeProvider get_CustomAttributeProvider();
    public ICustomAttributeProvider get_ReturnTypeCustomAttributeProvider();
    public MethodInfo get_MethodInfo();
    public MethodInfo get_BeginMethodInfo();
    public MethodInfo get_EndMethodInfo();
    public static bool IsBeginMethod(MethodInfo methodInfo);
    public static bool IsEndMethod(MethodInfo methodInfo);
    public static LogicalMethodInfo[] Create(MethodInfo[] methodInfos);
    public static LogicalMethodInfo[] Create(MethodInfo[] methodInfos, LogicalMethodTypes types);
}
public enum System.Web.Services.Protocols.LogicalMethodTypes : Enum {
    public int value__;
    public static LogicalMethodTypes Sync;
    public static LogicalMethodTypes Async;
}
[AttributeUsageAttribute("32767")]
public class System.Web.Services.Protocols.MatchAttribute : Attribute {
    public string Pattern { get; public set; }
    public int Group { get; public set; }
    public int Capture { get; public set; }
    public bool IgnoreCase { get; public set; }
    public int MaxRepeats { get; public set; }
    public MatchAttribute(string pattern);
    public string get_Pattern();
    public void set_Pattern(string value);
    public int get_Group();
    public void set_Group(int value);
    public int get_Capture();
    public void set_Capture(int value);
    public bool get_IgnoreCase();
    public void set_IgnoreCase(bool value);
    public int get_MaxRepeats();
    public void set_MaxRepeats(int value);
}
public abstract class System.Web.Services.Protocols.MimeFormatter : object {
    public abstract virtual object GetInitializer(LogicalMethodInfo methodInfo);
    public abstract virtual void Initialize(object initializer);
    public virtual Object[] GetInitializers(LogicalMethodInfo[] methodInfos);
    public static object GetInitializer(Type type, LogicalMethodInfo methodInfo);
    public static Object[] GetInitializers(Type type, LogicalMethodInfo[] methodInfos);
    public static MimeFormatter CreateInstance(Type type, object initializer);
}
public abstract class System.Web.Services.Protocols.MimeParameterReader : MimeFormatter {
    public abstract virtual Object[] Read(HttpRequest request);
}
public abstract class System.Web.Services.Protocols.MimeParameterWriter : MimeFormatter {
    public bool UsesWriteRequest { get; }
    public Encoding RequestEncoding { get; public set; }
    public virtual bool get_UsesWriteRequest();
    public virtual Encoding get_RequestEncoding();
    public virtual void set_RequestEncoding(Encoding value);
    public virtual string GetRequestUrl(string url, Object[] parameters);
    public virtual void InitializeRequest(WebRequest request, Object[] values);
    public virtual void WriteRequest(Stream requestStream, Object[] values);
}
public abstract class System.Web.Services.Protocols.MimeReturnReader : MimeFormatter {
    public abstract virtual object Read(WebResponse response, Stream responseStream);
}
public class System.Web.Services.Protocols.NopReturnReader : MimeReturnReader {
    public virtual object GetInitializer(LogicalMethodInfo methodInfo);
    public virtual void Initialize(object initializer);
    public virtual object Read(WebResponse response, Stream responseStream);
}
public class System.Web.Services.Protocols.PatternMatcher : object {
    public PatternMatcher(Type type);
    public object Match(string text);
}
public abstract class System.Web.Services.Protocols.ServerProtocol : object {
    protected internal HttpContext Context { get; }
    protected internal HttpRequest Request { get; }
    protected internal HttpResponse Response { get; }
    protected internal object Target { get; }
    protected internal HttpContext get_Context();
    protected internal HttpRequest get_Request();
    protected internal HttpResponse get_Response();
    protected internal virtual object get_Target();
    protected void AddToCache(Type protocolType, Type serverType, object value);
    protected object GetFromCache(Type protocolType, Type serverType);
}
public abstract class System.Web.Services.Protocols.ServerProtocolFactory : object {
    protected abstract virtual ServerProtocol CreateIfRequestCompatible(HttpRequest request);
}
public class System.Web.Services.Protocols.ServerType : object {
    public ServerType(Type type);
}
public class System.Web.Services.Protocols.Soap12FaultCodes : object {
    public static XmlQualifiedName ReceiverFaultCode;
    public static XmlQualifiedName SenderFaultCode;
    public static XmlQualifiedName VersionMismatchFaultCode;
    public static XmlQualifiedName MustUnderstandFaultCode;
    public static XmlQualifiedName DataEncodingUnknownFaultCode;
    public static XmlQualifiedName RpcProcedureNotPresentFaultCode;
    public static XmlQualifiedName RpcBadArgumentsFaultCode;
    public static XmlQualifiedName EncodingMissingIdFaultCode;
    public static XmlQualifiedName EncodingUntypedValueFaultCode;
    private static Soap12FaultCodes();
}
public class System.Web.Services.Protocols.SoapClientMessage : SoapMessage {
    public bool OneWay { get; }
    public SoapHttpClientProtocol Client { get; }
    public LogicalMethodInfo MethodInfo { get; }
    public string Url { get; }
    public string Action { get; }
    [ComVisibleAttribute("False")]
public SoapProtocolVersion SoapVersion { get; }
    public virtual bool get_OneWay();
    public SoapHttpClientProtocol get_Client();
    public virtual LogicalMethodInfo get_MethodInfo();
    public virtual string get_Url();
    public virtual string get_Action();
    public virtual SoapProtocolVersion get_SoapVersion();
    protected virtual void EnsureOutStage();
    protected virtual void EnsureInStage();
}
[AttributeUsageAttribute("64")]
public class System.Web.Services.Protocols.SoapDocumentMethodAttribute : Attribute {
    public string Action { get; public set; }
    public bool OneWay { get; public set; }
    public string RequestNamespace { get; public set; }
    public string ResponseNamespace { get; public set; }
    public string RequestElementName { get; public set; }
    public string ResponseElementName { get; public set; }
    public SoapBindingUse Use { get; public set; }
    public SoapParameterStyle ParameterStyle { get; public set; }
    public string Binding { get; public set; }
    public SoapDocumentMethodAttribute(string action);
    public string get_Action();
    public void set_Action(string value);
    public bool get_OneWay();
    public void set_OneWay(bool value);
    public string get_RequestNamespace();
    public void set_RequestNamespace(string value);
    public string get_ResponseNamespace();
    public void set_ResponseNamespace(string value);
    public string get_RequestElementName();
    public void set_RequestElementName(string value);
    public string get_ResponseElementName();
    public void set_ResponseElementName(string value);
    public SoapBindingUse get_Use();
    public void set_Use(SoapBindingUse value);
    public SoapParameterStyle get_ParameterStyle();
    public void set_ParameterStyle(SoapParameterStyle value);
    public string get_Binding();
    public void set_Binding(string value);
}
[AttributeUsageAttribute("4")]
public class System.Web.Services.Protocols.SoapDocumentServiceAttribute : Attribute {
    public SoapBindingUse Use { get; public set; }
    public SoapParameterStyle ParameterStyle { get; public set; }
    public SoapServiceRoutingStyle RoutingStyle { get; public set; }
    public SoapDocumentServiceAttribute(SoapBindingUse use);
    public SoapDocumentServiceAttribute(SoapBindingUse use, SoapParameterStyle paramStyle);
    public SoapBindingUse get_Use();
    public void set_Use(SoapBindingUse value);
    public SoapParameterStyle get_ParameterStyle();
    public void set_ParameterStyle(SoapParameterStyle value);
    public SoapServiceRoutingStyle get_RoutingStyle();
    public void set_RoutingStyle(SoapServiceRoutingStyle value);
}
public class System.Web.Services.Protocols.SoapException : SystemException {
    public static XmlQualifiedName ServerFaultCode;
    public static XmlQualifiedName ClientFaultCode;
    public static XmlQualifiedName VersionMismatchFaultCode;
    public static XmlQualifiedName MustUnderstandFaultCode;
    public static XmlQualifiedName DetailElementName;
    public string Actor { get; }
    public XmlQualifiedName Code { get; }
    public XmlNode Detail { get; }
    [ComVisibleAttribute("False")]
public string Lang { get; }
    [ComVisibleAttribute("False")]
public string Node { get; }
    [ComVisibleAttribute("False")]
public string Role { get; }
    [ComVisibleAttribute("False")]
public SoapFaultSubCode SubCode { get; }
    public SoapException(string message, XmlQualifiedName code, string actor);
    public SoapException(string message, XmlQualifiedName code, string actor, Exception innerException);
    public SoapException(string message, XmlQualifiedName code);
    public SoapException(string message, XmlQualifiedName code, Exception innerException);
    public SoapException(string message, XmlQualifiedName code, string actor, XmlNode detail);
    public SoapException(string message, XmlQualifiedName code, string actor, XmlNode detail, Exception innerException);
    public SoapException(string message, XmlQualifiedName code, SoapFaultSubCode subCode);
    public SoapException(string message, XmlQualifiedName code, string actor, string role, XmlNode detail, SoapFaultSubCode subCode, Exception innerException);
    public SoapException(string message, XmlQualifiedName code, string actor, string role, string lang, XmlNode detail, SoapFaultSubCode subCode, Exception innerException);
    protected SoapException(SerializationInfo info, StreamingContext context);
    private static SoapException();
    public static bool IsServerFaultCode(XmlQualifiedName code);
    public static bool IsClientFaultCode(XmlQualifiedName code);
    public static bool IsVersionMismatchFaultCode(XmlQualifiedName code);
    public static bool IsMustUnderstandFaultCode(XmlQualifiedName code);
    public string get_Actor();
    public XmlQualifiedName get_Code();
    public XmlNode get_Detail();
    public string get_Lang();
    public string get_Node();
    public string get_Role();
    public SoapFaultSubCode get_SubCode();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public abstract class System.Web.Services.Protocols.SoapExtension : object {
    public abstract virtual object GetInitializer(LogicalMethodInfo methodInfo, SoapExtensionAttribute attribute);
    public abstract virtual object GetInitializer(Type serviceType);
    public abstract virtual void Initialize(object initializer);
    public abstract virtual void ProcessMessage(SoapMessage message);
    public virtual Stream ChainStream(Stream stream);
}
public abstract class System.Web.Services.Protocols.SoapExtensionAttribute : Attribute {
    public Type ExtensionType { get; }
    public int Priority { get; public set; }
    public abstract virtual Type get_ExtensionType();
    public abstract virtual int get_Priority();
    public abstract virtual void set_Priority(int value);
}
public class System.Web.Services.Protocols.SoapFaultSubCode : object {
    public XmlQualifiedName Code { get; }
    public SoapFaultSubCode SubCode { get; }
    public SoapFaultSubCode(XmlQualifiedName code);
    public SoapFaultSubCode(XmlQualifiedName code, SoapFaultSubCode subCode);
    public XmlQualifiedName get_Code();
    public SoapFaultSubCode get_SubCode();
}
[SoapTypeAttribute]
[XmlTypeAttribute]
public abstract class System.Web.Services.Protocols.SoapHeader : object {
    [SoapAttributeAttribute("mustUnderstand")]
[DefaultValueAttribute("0")]
[XmlAttributeAttribute("mustUnderstand")]
public string EncodedMustUnderstand { get; public set; }
    [SoapAttributeAttribute("mustUnderstand")]
[XmlAttributeAttribute("mustUnderstand")]
[DefaultValueAttribute("0")]
[ComVisibleAttribute("False")]
public string EncodedMustUnderstand12 { get; public set; }
    [SoapIgnoreAttribute]
[XmlIgnoreAttribute]
public bool MustUnderstand { get; public set; }
    [SoapAttributeAttribute("actor")]
[DefaultValueAttribute("")]
[XmlAttributeAttribute("actor")]
public string Actor { get; public set; }
    [SoapAttributeAttribute("role")]
[ComVisibleAttribute("False")]
[DefaultValueAttribute("")]
[XmlAttributeAttribute("role")]
public string Role { get; public set; }
    [XmlIgnoreAttribute]
[SoapIgnoreAttribute]
public bool DidUnderstand { get; public set; }
    [XmlAttributeAttribute("relay")]
[SoapAttributeAttribute("relay")]
[ComVisibleAttribute("False")]
[DefaultValueAttribute("0")]
public string EncodedRelay { get; public set; }
    [ComVisibleAttribute("False")]
[SoapIgnoreAttribute]
[XmlIgnoreAttribute]
public bool Relay { get; public set; }
    public string get_EncodedMustUnderstand();
    public void set_EncodedMustUnderstand(string value);
    public string get_EncodedMustUnderstand12();
    public void set_EncodedMustUnderstand12(string value);
    public bool get_MustUnderstand();
    public void set_MustUnderstand(bool value);
    public string get_Actor();
    public void set_Actor(string value);
    public string get_Role();
    public void set_Role(string value);
    public bool get_DidUnderstand();
    public void set_DidUnderstand(bool value);
    public string get_EncodedRelay();
    public void set_EncodedRelay(string value);
    public bool get_Relay();
    public void set_Relay(bool value);
}
[AttributeUsageAttribute("64")]
public class System.Web.Services.Protocols.SoapHeaderAttribute : Attribute {
    public string MemberName { get; public set; }
    public SoapHeaderDirection Direction { get; public set; }
    [ObsoleteAttribute("This property will be removed from a future version. The presence of a particular header in a SOAP message is no longer enforced", "False")]
public bool Required { get; public set; }
    public SoapHeaderAttribute(string memberName);
    public string get_MemberName();
    public void set_MemberName(string value);
    public SoapHeaderDirection get_Direction();
    public void set_Direction(SoapHeaderDirection value);
    public bool get_Required();
    public void set_Required(bool value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Protocols.SoapHeaderCollection : CollectionBase {
    public SoapHeader Item { get; public set; }
    public SoapHeader get_Item(int index);
    public void set_Item(int index, SoapHeader value);
    public int Add(SoapHeader header);
    public void Insert(int index, SoapHeader header);
    public int IndexOf(SoapHeader header);
    public bool Contains(SoapHeader header);
    public void Remove(SoapHeader header);
    public void CopyTo(SoapHeader[] array, int index);
}
[FlagsAttribute]
public enum System.Web.Services.Protocols.SoapHeaderDirection : Enum {
    public int value__;
    public static SoapHeaderDirection In;
    public static SoapHeaderDirection Out;
    public static SoapHeaderDirection InOut;
    public static SoapHeaderDirection Fault;
}
public class System.Web.Services.Protocols.SoapHeaderException : SoapException {
    public SoapHeaderException(string message, XmlQualifiedName code, string actor);
    public SoapHeaderException(string message, XmlQualifiedName code, string actor, Exception innerException);
    public SoapHeaderException(string message, XmlQualifiedName code);
    public SoapHeaderException(string message, XmlQualifiedName code, Exception innerException);
    public SoapHeaderException(string message, XmlQualifiedName code, string actor, string role, SoapFaultSubCode subCode, Exception innerException);
    public SoapHeaderException(string message, XmlQualifiedName code, string actor, string role, string lang, SoapFaultSubCode subCode, Exception innerException);
    protected SoapHeaderException(SerializationInfo info, StreamingContext context);
}
public class System.Web.Services.Protocols.SoapHeaderHandling : object {
    public string ReadHeaders(XmlReader reader, XmlSerializer serializer, SoapHeaderCollection headers, SoapHeaderMapping[] mappings, SoapHeaderDirection direction, string envelopeNS, string encodingStyle, bool checkRequiredHeaders);
    public static void WriteHeaders(XmlWriter writer, XmlSerializer serializer, SoapHeaderCollection headers, SoapHeaderMapping[] mappings, SoapHeaderDirection direction, bool isEncoded, string defaultNS, bool serviceDefaultIsEncoded, string envelopeNS);
    public static void WriteUnknownHeaders(XmlWriter writer, SoapHeaderCollection headers, string envelopeNS);
    public static void SetHeaderMembers(SoapHeaderCollection headers, object target, SoapHeaderMapping[] mappings, SoapHeaderDirection direction, bool client);
    public static void GetHeaderMembers(SoapHeaderCollection headers, object target, SoapHeaderMapping[] mappings, SoapHeaderDirection direction, bool client);
    public static void EnsureHeadersUnderstood(SoapHeaderCollection headers);
}
public class System.Web.Services.Protocols.SoapHeaderMapping : object {
    public Type HeaderType { get; }
    public bool Repeats { get; }
    public bool Custom { get; }
    public SoapHeaderDirection Direction { get; }
    public MemberInfo MemberInfo { get; }
    public Type get_HeaderType();
    public bool get_Repeats();
    public bool get_Custom();
    public SoapHeaderDirection get_Direction();
    public MemberInfo get_MemberInfo();
}
[ComVisibleAttribute("True")]
public class System.Web.Services.Protocols.SoapHttpClientProtocol : HttpWebClientProtocol {
    [DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
[WebServicesDescriptionAttribute("ClientProtocolSoapVersion")]
[ComVisibleAttribute("False")]
public SoapProtocolVersion SoapVersion { get; public set; }
    public void Discover();
    protected virtual WebRequest GetWebRequest(Uri uri);
    public SoapProtocolVersion get_SoapVersion();
    public void set_SoapVersion(SoapProtocolVersion value);
    protected virtual XmlWriter GetWriterForMessage(SoapClientMessage message, int bufferSize);
    protected virtual XmlReader GetReaderForMessage(SoapClientMessage message, int bufferSize);
    protected Object[] Invoke(string methodName, Object[] parameters);
    protected IAsyncResult BeginInvoke(string methodName, Object[] parameters, AsyncCallback callback, object asyncState);
    protected Object[] EndInvoke(IAsyncResult asyncResult);
    protected void InvokeAsync(string methodName, Object[] parameters, SendOrPostCallback callback);
    protected void InvokeAsync(string methodName, Object[] parameters, SendOrPostCallback callback, object userState);
}
public abstract class System.Web.Services.Protocols.SoapMessage : object {
    public bool OneWay { get; }
    public SoapException Exception { get; public set; }
    public LogicalMethodInfo MethodInfo { get; }
    public SoapHeaderCollection Headers { get; }
    public Stream Stream { get; }
    public string ContentType { get; public set; }
    public string ContentEncoding { get; public set; }
    public SoapMessageStage Stage { get; }
    public string Url { get; }
    public string Action { get; }
    [ComVisibleAttribute("False")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public SoapProtocolVersion SoapVersion { get; }
    public abstract virtual bool get_OneWay();
    public object GetInParameterValue(int index);
    public object GetOutParameterValue(int index);
    public object GetReturnValue();
    protected abstract virtual void EnsureOutStage();
    protected abstract virtual void EnsureInStage();
    public SoapException get_Exception();
    public void set_Exception(SoapException value);
    public abstract virtual LogicalMethodInfo get_MethodInfo();
    protected void EnsureStage(SoapMessageStage stage);
    public SoapHeaderCollection get_Headers();
    public Stream get_Stream();
    public string get_ContentType();
    public void set_ContentType(string value);
    public string get_ContentEncoding();
    public void set_ContentEncoding(string value);
    public SoapMessageStage get_Stage();
    public abstract virtual string get_Url();
    public abstract virtual string get_Action();
    public virtual SoapProtocolVersion get_SoapVersion();
}
public enum System.Web.Services.Protocols.SoapMessageStage : Enum {
    public int value__;
    public static SoapMessageStage BeforeSerialize;
    public static SoapMessageStage AfterSerialize;
    public static SoapMessageStage BeforeDeserialize;
    public static SoapMessageStage AfterDeserialize;
}
public enum System.Web.Services.Protocols.SoapParameterStyle : Enum {
    public int value__;
    public static SoapParameterStyle Default;
    public static SoapParameterStyle Bare;
    public static SoapParameterStyle Wrapped;
}
public enum System.Web.Services.Protocols.SoapProtocolVersion : Enum {
    public int value__;
    public static SoapProtocolVersion Default;
    public static SoapProtocolVersion Soap11;
    public static SoapProtocolVersion Soap12;
}
[AttributeUsageAttribute("64")]
public class System.Web.Services.Protocols.SoapRpcMethodAttribute : Attribute {
    public string Action { get; public set; }
    public string Binding { get; public set; }
    public bool OneWay { get; public set; }
    public string RequestNamespace { get; public set; }
    public string ResponseNamespace { get; public set; }
    public string RequestElementName { get; public set; }
    public string ResponseElementName { get; public set; }
    [ComVisibleAttribute("False")]
public SoapBindingUse Use { get; public set; }
    public SoapRpcMethodAttribute(string action);
    public string get_Action();
    public void set_Action(string value);
    public string get_Binding();
    public void set_Binding(string value);
    public bool get_OneWay();
    public void set_OneWay(bool value);
    public string get_RequestNamespace();
    public void set_RequestNamespace(string value);
    public string get_ResponseNamespace();
    public void set_ResponseNamespace(string value);
    public string get_RequestElementName();
    public void set_RequestElementName(string value);
    public string get_ResponseElementName();
    public void set_ResponseElementName(string value);
    public SoapBindingUse get_Use();
    public void set_Use(SoapBindingUse value);
}
[AttributeUsageAttribute("4")]
public class System.Web.Services.Protocols.SoapRpcServiceAttribute : Attribute {
    public SoapServiceRoutingStyle RoutingStyle { get; public set; }
    [ComVisibleAttribute("False")]
public SoapBindingUse Use { get; public set; }
    public SoapServiceRoutingStyle get_RoutingStyle();
    public void set_RoutingStyle(SoapServiceRoutingStyle value);
    public SoapBindingUse get_Use();
    public void set_Use(SoapBindingUse value);
}
public class System.Web.Services.Protocols.SoapServerMessage : SoapMessage {
    public bool OneWay { get; }
    public string Url { get; }
    public string Action { get; }
    [ComVisibleAttribute("False")]
public SoapProtocolVersion SoapVersion { get; }
    public object Server { get; }
    public LogicalMethodInfo MethodInfo { get; }
    public virtual bool get_OneWay();
    public virtual string get_Url();
    public virtual string get_Action();
    public virtual SoapProtocolVersion get_SoapVersion();
    public object get_Server();
    public virtual LogicalMethodInfo get_MethodInfo();
    protected virtual void EnsureOutStage();
    protected virtual void EnsureInStage();
}
public class System.Web.Services.Protocols.SoapServerMethod : object {
    public LogicalMethodInfo MethodInfo { get; }
    public XmlSerializer ReturnSerializer { get; }
    public XmlSerializer ParameterSerializer { get; }
    public XmlSerializer InHeaderSerializer { get; }
    public XmlSerializer OutHeaderSerializer { get; }
    public SoapHeaderMapping[] InHeaderMappings { get; }
    public SoapHeaderMapping[] OutHeaderMappings { get; }
    public string Action { get; }
    public bool OneWay { get; }
    public bool Rpc { get; }
    public SoapBindingUse BindingUse { get; }
    public SoapParameterStyle ParameterStyle { get; }
    public WsiProfiles WsiClaims { get; }
    public SoapServerMethod(Type serverType, LogicalMethodInfo methodInfo);
    public LogicalMethodInfo get_MethodInfo();
    public XmlSerializer get_ReturnSerializer();
    public XmlSerializer get_ParameterSerializer();
    public XmlSerializer get_InHeaderSerializer();
    public XmlSerializer get_OutHeaderSerializer();
    public SoapHeaderMapping[] get_InHeaderMappings();
    public SoapHeaderMapping[] get_OutHeaderMappings();
    public string get_Action();
    public bool get_OneWay();
    public bool get_Rpc();
    public SoapBindingUse get_BindingUse();
    public SoapParameterStyle get_ParameterStyle();
    public WsiProfiles get_WsiClaims();
}
public class System.Web.Services.Protocols.SoapServerProtocol : ServerProtocol {
    protected virtual XmlWriter GetWriterForMessage(SoapServerMessage message, int bufferSize);
    protected virtual XmlReader GetReaderForMessage(SoapServerMessage message, int bufferSize);
    protected virtual SoapExtension[] ModifyInitializedExtensions(PriorityGroup group, SoapExtension[] extensions);
    protected virtual SoapServerMethod RouteRequest(SoapServerMessage message);
}
public class System.Web.Services.Protocols.SoapServerProtocolFactory : ServerProtocolFactory {
    protected virtual ServerProtocol CreateIfRequestCompatible(HttpRequest request);
}
public class System.Web.Services.Protocols.SoapServerType : ServerType {
    public string ServiceNamespace { get; }
    public bool ServiceDefaultIsEncoded { get; }
    public bool ServiceRoutingOnSoapAction { get; }
    public SoapServerType(Type type, WebServiceProtocols protocolsSupported);
    public string get_ServiceNamespace();
    public bool get_ServiceDefaultIsEncoded();
    public bool get_ServiceRoutingOnSoapAction();
    public SoapServerMethod GetMethod(object key);
    public SoapServerMethod GetDuplicateMethod(object key);
}
public enum System.Web.Services.Protocols.SoapServiceRoutingStyle : Enum {
    public int value__;
    public static SoapServiceRoutingStyle SoapAction;
    public static SoapServiceRoutingStyle RequestElement;
}
public class System.Web.Services.Protocols.SoapUnknownHeader : SoapHeader {
    [XmlIgnoreAttribute]
public XmlElement Element { get; public set; }
    public XmlElement get_Element();
    public void set_Element(XmlElement value);
}
public class System.Web.Services.Protocols.TextReturnReader : MimeReturnReader {
    public virtual void Initialize(object o);
    public virtual object GetInitializer(LogicalMethodInfo methodInfo);
    public virtual object Read(WebResponse response, Stream responseStream);
}
public abstract class System.Web.Services.Protocols.UrlEncodedParameterWriter : MimeParameterWriter {
    public Encoding RequestEncoding { get; public set; }
    public virtual Encoding get_RequestEncoding();
    public virtual void set_RequestEncoding(Encoding value);
    public virtual object GetInitializer(LogicalMethodInfo methodInfo);
    public virtual void Initialize(object initializer);
    protected void Encode(TextWriter writer, Object[] values);
    protected void Encode(TextWriter writer, string name, object value);
}
public class System.Web.Services.Protocols.UrlParameterReader : ValueCollectionParameterReader {
    public virtual Object[] Read(HttpRequest request);
}
public class System.Web.Services.Protocols.UrlParameterWriter : UrlEncodedParameterWriter {
    public virtual string GetRequestUrl(string url, Object[] parameters);
}
public abstract class System.Web.Services.Protocols.ValueCollectionParameterReader : MimeParameterReader {
    public virtual void Initialize(object o);
    public virtual object GetInitializer(LogicalMethodInfo methodInfo);
    protected Object[] Read(NameValueCollection collection);
    public static bool IsSupported(LogicalMethodInfo methodInfo);
    public static bool IsSupported(ParameterInfo paramInfo);
}
public class System.Web.Services.Protocols.WebClientAsyncResult : object {
    public object AsyncState { get; }
    public WaitHandle AsyncWaitHandle { get; }
    public bool CompletedSynchronously { get; }
    public bool IsCompleted { get; }
    public sealed virtual object get_AsyncState();
    public sealed virtual WaitHandle get_AsyncWaitHandle();
    public sealed virtual bool get_CompletedSynchronously();
    public sealed virtual bool get_IsCompleted();
    public void Abort();
}
[ComVisibleAttribute("True")]
public abstract class System.Web.Services.Protocols.WebClientProtocol : Component {
    public ICredentials Credentials { get; public set; }
    public bool UseDefaultCredentials { get; public set; }
    [DefaultValueAttribute("")]
public string ConnectionGroupName { get; public set; }
    [WebServicesDescriptionAttribute("ClientProtocolPreAuthenticate")]
[DefaultValueAttribute("False")]
public bool PreAuthenticate { get; public set; }
    [WebServicesDescriptionAttribute("ClientProtocolUrl")]
[SettingsBindableAttribute("True")]
[DefaultValueAttribute("")]
public string Url { get; public set; }
    [DefaultValueAttribute("")]
[SettingsBindableAttribute("True")]
[WebServicesDescriptionAttribute("ClientProtocolEncoding")]
public Encoding RequestEncoding { get; public set; }
    [SettingsBindableAttribute("True")]
[DefaultValueAttribute("100000")]
[WebServicesDescriptionAttribute("ClientProtocolTimeout")]
public int Timeout { get; public set; }
    private static WebClientProtocol();
    public ICredentials get_Credentials();
    public void set_Credentials(ICredentials value);
    public bool get_UseDefaultCredentials();
    public void set_UseDefaultCredentials(bool value);
    public string get_ConnectionGroupName();
    public void set_ConnectionGroupName(string value);
    public bool get_PreAuthenticate();
    public void set_PreAuthenticate(bool value);
    public string get_Url();
    public void set_Url(string value);
    public Encoding get_RequestEncoding();
    public void set_RequestEncoding(Encoding value);
    public int get_Timeout();
    public void set_Timeout(int value);
    public virtual void Abort();
    protected virtual WebRequest GetWebRequest(Uri uri);
    protected virtual WebResponse GetWebResponse(WebRequest request);
    protected virtual WebResponse GetWebResponse(WebRequest request, IAsyncResult result);
    protected static object GetFromCache(Type type);
    protected static void AddToCache(Type type, object value);
}
public class System.Web.Services.Protocols.WebServiceHandlerFactory : object {
    public sealed virtual IHttpHandler GetHandler(HttpContext context, string verb, string url, string filePath);
    public sealed virtual void ReleaseHandler(IHttpHandler handler);
}
public class System.Web.Services.Protocols.XmlReturnReader : MimeReturnReader {
    public virtual void Initialize(object o);
    public virtual Object[] GetInitializers(LogicalMethodInfo[] methodInfos);
    public virtual object GetInitializer(LogicalMethodInfo methodInfo);
    public virtual object Read(WebResponse response, Stream responseStream);
}
[AttributeUsageAttribute("64")]
public class System.Web.Services.WebMethodAttribute : Attribute {
    public string Description { get; public set; }
    public bool EnableSession { get; public set; }
    public int CacheDuration { get; public set; }
    public bool BufferResponse { get; public set; }
    public TransactionOption TransactionOption { get; public set; }
    public string MessageName { get; public set; }
    public WebMethodAttribute(bool enableSession);
    public WebMethodAttribute(bool enableSession, TransactionOption transactionOption);
    public WebMethodAttribute(bool enableSession, TransactionOption transactionOption, int cacheDuration);
    public WebMethodAttribute(bool enableSession, TransactionOption transactionOption, int cacheDuration, bool bufferResponse);
    public string get_Description();
    public void set_Description(string value);
    public bool get_EnableSession();
    public void set_EnableSession(bool value);
    public int get_CacheDuration();
    public void set_CacheDuration(int value);
    public bool get_BufferResponse();
    public void set_BufferResponse(bool value);
    public TransactionOption get_TransactionOption();
    public void set_TransactionOption(TransactionOption value);
    public string get_MessageName();
    public void set_MessageName(string value);
}
public class System.Web.Services.WebService : MarshalByValueComponent {
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
[DescriptionAttribute("The ASP.NET application object for the current request.")]
public HttpApplicationState Application { get; }
    [WebServicesDescriptionAttribute("WebServiceContext")]
[DesignerSerializationVisibilityAttribute("0")]
[BrowsableAttribute("False")]
public HttpContext Context { get; }
    [BrowsableAttribute("False")]
[WebServicesDescriptionAttribute("WebServiceSession")]
[DesignerSerializationVisibilityAttribute("0")]
public HttpSessionState Session { get; }
    [DesignerSerializationVisibilityAttribute("0")]
[WebServicesDescriptionAttribute("WebServiceServer")]
[BrowsableAttribute("False")]
public HttpServerUtility Server { get; }
    [WebServicesDescriptionAttribute("WebServiceUser")]
[BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
public IPrincipal User { get; }
    [ComVisibleAttribute("False")]
[BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
[WebServicesDescriptionAttribute("WebServiceSoapVersion")]
public SoapProtocolVersion SoapVersion { get; }
    private static WebService();
    public HttpApplicationState get_Application();
    public HttpContext get_Context();
    public HttpSessionState get_Session();
    public HttpServerUtility get_Server();
    public IPrincipal get_User();
    public SoapProtocolVersion get_SoapVersion();
}
[AttributeUsageAttribute("1028")]
public class System.Web.Services.WebServiceAttribute : Attribute {
    public static string DefaultNamespace;
    public string Description { get; public set; }
    public string Namespace { get; public set; }
    public string Name { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    public string get_Namespace();
    public void set_Namespace(string value);
    public string get_Name();
    public void set_Name(string value);
}
[AttributeUsageAttribute("1028")]
public class System.Web.Services.WebServiceBindingAttribute : Attribute {
    public WsiProfiles ConformsTo { get; public set; }
    public bool EmitConformanceClaims { get; public set; }
    public string Location { get; public set; }
    public string Name { get; public set; }
    public string Namespace { get; public set; }
    public WebServiceBindingAttribute(string name);
    public WebServiceBindingAttribute(string name, string ns);
    public WebServiceBindingAttribute(string name, string ns, string location);
    public WsiProfiles get_ConformsTo();
    public void set_ConformsTo(WsiProfiles value);
    public bool get_EmitConformanceClaims();
    public void set_EmitConformanceClaims(bool value);
    public string get_Location();
    public void set_Location(string value);
    public string get_Name();
    public void set_Name(string value);
    public string get_Namespace();
    public void set_Namespace(string value);
}
[AttributeUsageAttribute("32767")]
internal class System.Web.Services.WebServicesDescriptionAttribute : DescriptionAttribute {
    public string Description { get; }
    internal WebServicesDescriptionAttribute(string description);
    public virtual string get_Description();
}
[FlagsAttribute]
public enum System.Web.Services.WsiProfiles : Enum {
    public int value__;
    public static WsiProfiles None;
    public static WsiProfiles BasicProfile1_1;
}
