internal static class AssemblyRef : object {
    internal static string EcmaPublicKey;
    internal static string EcmaPublicKeyToken;
    internal static string EcmaPublicKeyFull;
    internal static string SilverlightPublicKey;
    internal static string SilverlightPublicKeyToken;
    internal static string SilverlightPublicKeyFull;
    internal static string SilverlightPlatformPublicKey;
    internal static string SilverlightPlatformPublicKeyToken;
    internal static string SilverlightPlatformPublicKeyFull;
    internal static string PlatformPublicKey;
    internal static string PlatformPublicKeyToken;
    internal static string PlatformPublicKeyFull;
    internal static string Mscorlib;
    internal static string SystemData;
    internal static string SystemDataOracleClient;
    internal static string System;
    internal static string SystemCore;
    internal static string SystemNumerics;
    internal static string SystemRuntimeRemoting;
    internal static string SystemThreadingTasksDataflow;
    internal static string SystemWindowsForms;
    internal static string SystemXml;
    internal static string MicrosoftPublicKey;
    internal static string MicrosoftPublicKeyToken;
    internal static string MicrosoftPublicKeyFull;
    internal static string SharedLibPublicKey;
    internal static string SharedLibPublicKeyToken;
    internal static string SharedLibPublicKeyFull;
    internal static string SystemComponentModelDataAnnotations;
    internal static string SystemConfiguration;
    internal static string SystemConfigurationInstall;
    internal static string SystemDeployment;
    internal static string SystemDesign;
    internal static string SystemDirectoryServices;
    internal static string SystemDrawingDesign;
    internal static string SystemDrawing;
    internal static string SystemEnterpriseServices;
    internal static string SystemManagement;
    internal static string SystemMessaging;
    internal static string SystemNetHttp;
    internal static string SystemNetHttpWebRequest;
    internal static string SystemRuntimeSerializationFormattersSoap;
    internal static string SystemRuntimeWindowsRuntime;
    internal static string SystemRuntimeWindowsRuntimeUIXaml;
    internal static string SystemSecurity;
    internal static string SystemServiceModelWeb;
    internal static string SystemServiceProcess;
    internal static string SystemWeb;
    internal static string SystemWebAbstractions;
    internal static string SystemWebDynamicData;
    internal static string SystemWebDynamicDataDesign;
    internal static string SystemWebEntityDesign;
    internal static string SystemWebExtensions;
    internal static string SystemWebExtensionsDesign;
    internal static string SystemWebMobile;
    internal static string SystemWebRegularExpressions;
    internal static string SystemWebRouting;
    internal static string SystemWebServices;
    internal static string WindowsBase;
    internal static string MicrosoftVisualStudio;
    internal static string MicrosoftVisualStudioWindowsForms;
    internal static string VJSharpCodeProvider;
    internal static string ASPBrowserCapsPublicKey;
    internal static string ASPBrowserCapsFactory;
    internal static string MicrosoftVSDesigner;
    internal static string MicrosoftVisualStudioWeb;
    internal static string MicrosoftWebDesign;
    internal static string MicrosoftVSDesignerMobile;
    internal static string MicrosoftJScript;
}
internal static class FXAssembly : object {
    internal static string Version;
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class System.Web.Resources.Design.AtlasWebDesign : object {
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Cancel { get; }
    internal static string CancelCaption { get; }
    internal static string Combo_NoneOption { get; }
    internal static string DataControls_SchemaRefreshedTransaction { get; }
    internal static string DataFieldCollection_MoveDown { get; }
    internal static string DataFieldCollection_MoveDownDesc { get; }
    internal static string DataFieldCollection_MoveLeft { get; }
    internal static string DataFieldCollection_MoveLeftDesc { get; }
    internal static string DataFieldCollection_MoveRight { get; }
    internal static string DataFieldCollection_MoveRightDesc { get; }
    internal static string DataFieldCollection_MoveUp { get; }
    internal static string DataFieldCollection_MoveUpDesc { get; }
    internal static string DataFieldCollectionAvailableFields { get; }
    internal static string DataFieldCollectionEditorTitle { get; }
    internal static string DataFieldCollectionSelectedFields { get; }
    internal static string DataPager_ChoosePagerStyleDesc { get; }
    internal static string DataPager_ChoosePagerStyleVerb { get; }
    internal static string DataPager_EditFieldsDesc { get; }
    internal static string DataPager_EditFieldsTransaction { get; }
    internal static string DataPager_EditFieldsVerb { get; }
    internal static string DataPager_Field { get; }
    internal static string DataPager_NoFieldsDefined { get; }
    internal static string DataPager_RegenerateDataPager { get; }
    internal static string DataPager_ResetCaption { get; }
    internal static string DataPager_SetDataPagerStyleTransaction { get; }
    internal static string DataSource_DebugService_FailedCall { get; }
    internal static string Designer_ArgumentMustBeOfType { get; }
    internal static string DesignerPagerStyle_CustomPager { get; }
    internal static string DesignerPagerStyle_NextPrevPager { get; }
    internal static string DesignerPagerStyle_NullPager { get; }
    internal static string DesignerPagerStyle_NumericPager { get; }
    internal static string DPFEditor_Add { get; }
    internal static string DPFEditor_AvailableFields { get; }
    internal static string DPFEditor_DeleteFieldDesc { get; }
    internal static string DPFEditor_DeleteFieldName { get; }
    internal static string DPFEditor_FieldProps { get; }
    internal static string DPFEditor_FieldPropsFormat { get; }
    internal static string DPFEditor_MoveFieldDownDesc { get; }
    internal static string DPFEditor_MoveFieldDownName { get; }
    internal static string DPFEditor_MoveFieldUpDesc { get; }
    internal static string DPFEditor_MoveFieldUpName { get; }
    internal static string DPFEditor_Node_Custom { get; }
    internal static string DPFEditor_Node_NextPrev { get; }
    internal static string DPFEditor_Node_Numeric { get; }
    internal static string DPFEditor_Node_Template { get; }
    internal static string DPFEditor_SelectedFields { get; }
    internal static string DPFEditor_Text { get; }
    internal static string LinqDataSourceChooseContextTypePanel_Caption { get; }
    internal static string LinqDataSourceChooseContextTypePanel_ContextHelpText { get; }
    internal static string LinqDataSourceChooseContextTypePanel_ContextTypesLabel { get; }
    internal static string LinqDataSourceChooseContextTypePanel_ShowOnlyDataContextsCheckBox { get; }
    internal static string LinqDataSourceConfigurationPanel_AdvancedButton { get; }
    internal static string LinqDataSourceConfigurationPanel_Caption { get; }
    internal static string LinqDataSourceConfigurationPanel_OrderByButton { get; }
    internal static string LinqDataSourceConfigurationPanel_TableLabel { get; }
    internal static string LinqDataSourceConfigurationPanel_WhereButton { get; }
    internal static string LinqDataSourceConfigureAdvancedForm_Caption { get; }
    internal static string LinqDataSourceConfigureAdvancedForm_EnableDeleteCheckBox { get; }
    internal static string LinqDataSourceConfigureAdvancedForm_EnableInsertCheckBox { get; }
    internal static string LinqDataSourceConfigureAdvancedForm_EnableUpdateCheckBox { get; }
    internal static string LinqDataSourceConfigureAdvancedForm_HeaderLabel { get; }
    internal static string LinqDataSourceConfigureGroupBy_GroupByCustomOption { get; }
    internal static string LinqDataSourceConfigureGroupByPanel_GroupByLabel { get; }
    internal static string LinqDataSourceConfigureGroupByPanel_OrderGroupsByLabel { get; }
    internal static string LinqDataSourceConfigureOrderByForm_AscendingLabel { get; }
    internal static string LinqDataSourceConfigureOrderByForm_Caption { get; }
    internal static string LinqDataSourceConfigureOrderByForm_DescendingLabel { get; }
    internal static string LinqDataSourceConfigureOrderByForm_HelpLabel { get; }
    internal static string LinqDataSourceConfigureOrderByForm_PreviewLabel { get; }
    internal static string LinqDataSourceConfigureOrderByForm_SortByLabel { get; }
    internal static string LinqDataSourceConfigureOrderByForm_SortDirection1 { get; }
    internal static string LinqDataSourceConfigureOrderByForm_SortDirection2 { get; }
    internal static string LinqDataSourceConfigureOrderByForm_SortDirection3 { get; }
    internal static string LinqDataSourceConfigureOrderByForm_SortField1 { get; }
    internal static string LinqDataSourceConfigureOrderByForm_SortField2 { get; }
    internal static string LinqDataSourceConfigureOrderByForm_SortField3 { get; }
    internal static string LinqDataSourceConfigureOrderByForm_ThenByLabel { get; }
    internal static string LinqDataSourceConfigureSelectForm_AggregateFunctionHeader { get; }
    internal static string LinqDataSourceConfigureSelectForm_AliasHeader { get; }
    internal static string LinqDataSourceConfigureSelectForm_CustomGroupByLabel { get; }
    internal static string LinqDataSourceConfigureSelectForm_Delete { get; }
    internal static string LinqDataSourceConfigureSelectForm_DeleteDescription { get; }
    internal static string LinqDataSourceConfigureSelectForm_FieldHeader { get; }
    internal static string LinqDataSourceConfigureSelectForm_MoveDown { get; }
    internal static string LinqDataSourceConfigureSelectForm_MoveDownDescription { get; }
    internal static string LinqDataSourceConfigureSelectForm_MoveUp { get; }
    internal static string LinqDataSourceConfigureSelectForm_MoveUpDescription { get; }
    internal static string LinqDataSourceConfigureSelectForm_SelectLabel { get; }
    internal static string LinqDataSourceConfigureWhereForm_AddButton { get; }
    internal static string LinqDataSourceConfigureWhereForm_Caption { get; }
    internal static string LinqDataSourceConfigureWhereForm_ColumnLabel { get; }
    internal static string LinqDataSourceConfigureWhereForm_ExpressionColumnHeader { get; }
    internal static string LinqDataSourceConfigureWhereForm_ExpressionLabel { get; }
    internal static string LinqDataSourceConfigureWhereForm_HelpLabel { get; }
    internal static string LinqDataSourceConfigureWhereForm_OperatorLabel { get; }
    internal static string LinqDataSourceConfigureWhereForm_ParameterPropertiesGroup { get; }
    internal static string LinqDataSourceConfigureWhereForm_RemoveButton { get; }
    internal static string LinqDataSourceConfigureWhereForm_SourceLabel { get; }
    internal static string LinqDataSourceConfigureWhereForm_ValueColumnHeader { get; }
    internal static string LinqDataSourceConfigureWhereForm_ValueLabel { get; }
    internal static string LinqDataSourceConfigureWhereForm_WhereLabel { get; }
    internal static string LinqDataSourceDesigner_CannotGetType { get; }
    internal static string LinqDataSourceDesigner_WizardTransactionDescription { get; }
    internal static string LinqDataSourceDesignerActionList_EnableDelete { get; }
    internal static string LinqDataSourceDesignerActionList_EnableInsert { get; }
    internal static string LinqDataSourceDesignerActionList_EnableUpdate { get; }
    internal static string LinqDataSourceSelectBuilder_CountFieldDisplay { get; }
    internal static string LinqDataSourceStatementEditor_EditQuery { get; }
    internal static string LinqDataSourceStatementEditorForm_AutoGenerateOrderByCheckBox { get; }
    internal static string LinqDataSourceStatementEditorForm_AutoGenerateWhereCheckBox { get; }
    internal static string LinqDataSourceStatementEditorForm_Caption { get; }
    internal static string LinqDataSourceStatementEditorForm_RefreshParametersButton { get; }
    internal static string LinqDataSourceStatementEditorForm_StatementLabel { get; }
    internal static string LinqDataSourceWizardForm_Caption { get; }
    internal static string ListView_ChooseCurrentViewDesc { get; }
    internal static string ListView_ChooseCurrentViewVerb { get; }
    internal static string ListView_ConfigureDesc { get; }
    internal static string ListView_ConfigureTransaction { get; }
    internal static string ListView_ConfigureVerb { get; }
    internal static string ListView_CurrentTemplateUndefined { get; }
    internal static string ListView_EmptyLayoutTemplate { get; }
    internal static string ListView_ErrorRenderingTemplate { get; }
    internal static string ListView_MustEditInSourceView { get; }
    internal static string ListView_NoGroupPlaceholder { get; }
    internal static string ListView_NoGroupPlaceholderContainerID { get; }
    internal static string ListView_NoItemPlaceholder { get; }
    internal static string ListView_NoItemPlaceholderContainer { get; }
    internal static string ListView_NoItemPlaceholderContainerID { get; }
    internal static string ListView_NoTemplatesInstHasSchema { get; }
    internal static string ListView_NoTemplatesInstNoSchema { get; }
    internal static string ListView_NoTemplatesInstNoSchemaHasDS { get; }
    internal static string ListView_ReconfigureCaption { get; }
    internal static string ListView_ReconfigureWarning { get; }
    internal static string ListView_RegenerateListView { get; }
    internal static string ListView_ResetCaption { get; }
    internal static string ListView_RuntimeView { get; }
    internal static string ListView_SchemaRefreshedCaption { get; }
    internal static string ListView_SchemaRefreshedWarning { get; }
    internal static string ListView_SchemaRefreshedWarningNoDataSource { get; }
    internal static string ListView_UnknownView { get; }
    internal static string ListViewConfigForm_Cancel { get; }
    internal static string ListViewConfigForm_Clear { get; }
    internal static string ListViewConfigForm_Delete { get; }
    internal static string ListViewConfigForm_Edit { get; }
    internal static string ListViewConfigForm_EnableDeleting { get; }
    internal static string ListViewConfigForm_EnableDynamicData { get; }
    internal static string ListViewConfigForm_EnableEditing { get; }
    internal static string ListViewConfigForm_EnableInserting { get; }
    internal static string ListViewConfigForm_EnablePaging { get; }
    internal static string ListViewConfigForm_Insert { get; }
    internal static string ListViewConfigForm_Options { get; }
    internal static string ListViewConfigForm_Preview { get; }
    internal static string ListViewConfigForm_SelectLayout { get; }
    internal static string ListViewConfigForm_SelectStyle { get; }
    internal static string ListViewConfigForm_Title { get; }
    internal static string ListViewConfigForm_Update { get; }
    internal static string ListViewLayout_BulletedList { get; }
    internal static string ListViewLayout_Flow { get; }
    internal static string ListViewLayout_Grid { get; }
    internal static string ListViewLayout_NoData { get; }
    internal static string ListViewLayout_SingleRow { get; }
    internal static string ListViewLayout_Tiled { get; }
    internal static string ListViewStyle_Blue { get; }
    internal static string ListViewStyle_Colorful { get; }
    internal static string ListViewStyle_NoFormat { get; }
    internal static string ListViewStyle_Professional { get; }
    internal static string OK { get; }
    internal static string OKCaption { get; }
    internal static string RTL { get; }
    internal static string UIServiceHelper_ErrorCaption { get; }
    internal static string UpdatePanelDesigner_RegionDescription { get; }
    internal static string UpdateProgressDesigner_RegionDescription { get; }
    internal static string Wizard_CancelButton { get; }
    internal static string Wizard_FinishButton { get; }
    internal static string Wizard_NextButton { get; }
    internal static string Wizard_PreviousButton { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Cancel();
    internal static string get_CancelCaption();
    internal static string get_Combo_NoneOption();
    internal static string get_DataControls_SchemaRefreshedTransaction();
    internal static string get_DataFieldCollection_MoveDown();
    internal static string get_DataFieldCollection_MoveDownDesc();
    internal static string get_DataFieldCollection_MoveLeft();
    internal static string get_DataFieldCollection_MoveLeftDesc();
    internal static string get_DataFieldCollection_MoveRight();
    internal static string get_DataFieldCollection_MoveRightDesc();
    internal static string get_DataFieldCollection_MoveUp();
    internal static string get_DataFieldCollection_MoveUpDesc();
    internal static string get_DataFieldCollectionAvailableFields();
    internal static string get_DataFieldCollectionEditorTitle();
    internal static string get_DataFieldCollectionSelectedFields();
    internal static string get_DataPager_ChoosePagerStyleDesc();
    internal static string get_DataPager_ChoosePagerStyleVerb();
    internal static string get_DataPager_EditFieldsDesc();
    internal static string get_DataPager_EditFieldsTransaction();
    internal static string get_DataPager_EditFieldsVerb();
    internal static string get_DataPager_Field();
    internal static string get_DataPager_NoFieldsDefined();
    internal static string get_DataPager_RegenerateDataPager();
    internal static string get_DataPager_ResetCaption();
    internal static string get_DataPager_SetDataPagerStyleTransaction();
    internal static string get_DataSource_DebugService_FailedCall();
    internal static string get_Designer_ArgumentMustBeOfType();
    internal static string get_DesignerPagerStyle_CustomPager();
    internal static string get_DesignerPagerStyle_NextPrevPager();
    internal static string get_DesignerPagerStyle_NullPager();
    internal static string get_DesignerPagerStyle_NumericPager();
    internal static string get_DPFEditor_Add();
    internal static string get_DPFEditor_AvailableFields();
    internal static string get_DPFEditor_DeleteFieldDesc();
    internal static string get_DPFEditor_DeleteFieldName();
    internal static string get_DPFEditor_FieldProps();
    internal static string get_DPFEditor_FieldPropsFormat();
    internal static string get_DPFEditor_MoveFieldDownDesc();
    internal static string get_DPFEditor_MoveFieldDownName();
    internal static string get_DPFEditor_MoveFieldUpDesc();
    internal static string get_DPFEditor_MoveFieldUpName();
    internal static string get_DPFEditor_Node_Custom();
    internal static string get_DPFEditor_Node_NextPrev();
    internal static string get_DPFEditor_Node_Numeric();
    internal static string get_DPFEditor_Node_Template();
    internal static string get_DPFEditor_SelectedFields();
    internal static string get_DPFEditor_Text();
    internal static string get_LinqDataSourceChooseContextTypePanel_Caption();
    internal static string get_LinqDataSourceChooseContextTypePanel_ContextHelpText();
    internal static string get_LinqDataSourceChooseContextTypePanel_ContextTypesLabel();
    internal static string get_LinqDataSourceChooseContextTypePanel_ShowOnlyDataContextsCheckBox();
    internal static string get_LinqDataSourceConfigurationPanel_AdvancedButton();
    internal static string get_LinqDataSourceConfigurationPanel_Caption();
    internal static string get_LinqDataSourceConfigurationPanel_OrderByButton();
    internal static string get_LinqDataSourceConfigurationPanel_TableLabel();
    internal static string get_LinqDataSourceConfigurationPanel_WhereButton();
    internal static string get_LinqDataSourceConfigureAdvancedForm_Caption();
    internal static string get_LinqDataSourceConfigureAdvancedForm_EnableDeleteCheckBox();
    internal static string get_LinqDataSourceConfigureAdvancedForm_EnableInsertCheckBox();
    internal static string get_LinqDataSourceConfigureAdvancedForm_EnableUpdateCheckBox();
    internal static string get_LinqDataSourceConfigureAdvancedForm_HeaderLabel();
    internal static string get_LinqDataSourceConfigureGroupBy_GroupByCustomOption();
    internal static string get_LinqDataSourceConfigureGroupByPanel_GroupByLabel();
    internal static string get_LinqDataSourceConfigureGroupByPanel_OrderGroupsByLabel();
    internal static string get_LinqDataSourceConfigureOrderByForm_AscendingLabel();
    internal static string get_LinqDataSourceConfigureOrderByForm_Caption();
    internal static string get_LinqDataSourceConfigureOrderByForm_DescendingLabel();
    internal static string get_LinqDataSourceConfigureOrderByForm_HelpLabel();
    internal static string get_LinqDataSourceConfigureOrderByForm_PreviewLabel();
    internal static string get_LinqDataSourceConfigureOrderByForm_SortByLabel();
    internal static string get_LinqDataSourceConfigureOrderByForm_SortDirection1();
    internal static string get_LinqDataSourceConfigureOrderByForm_SortDirection2();
    internal static string get_LinqDataSourceConfigureOrderByForm_SortDirection3();
    internal static string get_LinqDataSourceConfigureOrderByForm_SortField1();
    internal static string get_LinqDataSourceConfigureOrderByForm_SortField2();
    internal static string get_LinqDataSourceConfigureOrderByForm_SortField3();
    internal static string get_LinqDataSourceConfigureOrderByForm_ThenByLabel();
    internal static string get_LinqDataSourceConfigureSelectForm_AggregateFunctionHeader();
    internal static string get_LinqDataSourceConfigureSelectForm_AliasHeader();
    internal static string get_LinqDataSourceConfigureSelectForm_CustomGroupByLabel();
    internal static string get_LinqDataSourceConfigureSelectForm_Delete();
    internal static string get_LinqDataSourceConfigureSelectForm_DeleteDescription();
    internal static string get_LinqDataSourceConfigureSelectForm_FieldHeader();
    internal static string get_LinqDataSourceConfigureSelectForm_MoveDown();
    internal static string get_LinqDataSourceConfigureSelectForm_MoveDownDescription();
    internal static string get_LinqDataSourceConfigureSelectForm_MoveUp();
    internal static string get_LinqDataSourceConfigureSelectForm_MoveUpDescription();
    internal static string get_LinqDataSourceConfigureSelectForm_SelectLabel();
    internal static string get_LinqDataSourceConfigureWhereForm_AddButton();
    internal static string get_LinqDataSourceConfigureWhereForm_Caption();
    internal static string get_LinqDataSourceConfigureWhereForm_ColumnLabel();
    internal static string get_LinqDataSourceConfigureWhereForm_ExpressionColumnHeader();
    internal static string get_LinqDataSourceConfigureWhereForm_ExpressionLabel();
    internal static string get_LinqDataSourceConfigureWhereForm_HelpLabel();
    internal static string get_LinqDataSourceConfigureWhereForm_OperatorLabel();
    internal static string get_LinqDataSourceConfigureWhereForm_ParameterPropertiesGroup();
    internal static string get_LinqDataSourceConfigureWhereForm_RemoveButton();
    internal static string get_LinqDataSourceConfigureWhereForm_SourceLabel();
    internal static string get_LinqDataSourceConfigureWhereForm_ValueColumnHeader();
    internal static string get_LinqDataSourceConfigureWhereForm_ValueLabel();
    internal static string get_LinqDataSourceConfigureWhereForm_WhereLabel();
    internal static string get_LinqDataSourceDesigner_CannotGetType();
    internal static string get_LinqDataSourceDesigner_WizardTransactionDescription();
    internal static string get_LinqDataSourceDesignerActionList_EnableDelete();
    internal static string get_LinqDataSourceDesignerActionList_EnableInsert();
    internal static string get_LinqDataSourceDesignerActionList_EnableUpdate();
    internal static string get_LinqDataSourceSelectBuilder_CountFieldDisplay();
    internal static string get_LinqDataSourceStatementEditor_EditQuery();
    internal static string get_LinqDataSourceStatementEditorForm_AutoGenerateOrderByCheckBox();
    internal static string get_LinqDataSourceStatementEditorForm_AutoGenerateWhereCheckBox();
    internal static string get_LinqDataSourceStatementEditorForm_Caption();
    internal static string get_LinqDataSourceStatementEditorForm_RefreshParametersButton();
    internal static string get_LinqDataSourceStatementEditorForm_StatementLabel();
    internal static string get_LinqDataSourceWizardForm_Caption();
    internal static string get_ListView_ChooseCurrentViewDesc();
    internal static string get_ListView_ChooseCurrentViewVerb();
    internal static string get_ListView_ConfigureDesc();
    internal static string get_ListView_ConfigureTransaction();
    internal static string get_ListView_ConfigureVerb();
    internal static string get_ListView_CurrentTemplateUndefined();
    internal static string get_ListView_EmptyLayoutTemplate();
    internal static string get_ListView_ErrorRenderingTemplate();
    internal static string get_ListView_MustEditInSourceView();
    internal static string get_ListView_NoGroupPlaceholder();
    internal static string get_ListView_NoGroupPlaceholderContainerID();
    internal static string get_ListView_NoItemPlaceholder();
    internal static string get_ListView_NoItemPlaceholderContainer();
    internal static string get_ListView_NoItemPlaceholderContainerID();
    internal static string get_ListView_NoTemplatesInstHasSchema();
    internal static string get_ListView_NoTemplatesInstNoSchema();
    internal static string get_ListView_NoTemplatesInstNoSchemaHasDS();
    internal static string get_ListView_ReconfigureCaption();
    internal static string get_ListView_ReconfigureWarning();
    internal static string get_ListView_RegenerateListView();
    internal static string get_ListView_ResetCaption();
    internal static string get_ListView_RuntimeView();
    internal static string get_ListView_SchemaRefreshedCaption();
    internal static string get_ListView_SchemaRefreshedWarning();
    internal static string get_ListView_SchemaRefreshedWarningNoDataSource();
    internal static string get_ListView_UnknownView();
    internal static string get_ListViewConfigForm_Cancel();
    internal static string get_ListViewConfigForm_Clear();
    internal static string get_ListViewConfigForm_Delete();
    internal static string get_ListViewConfigForm_Edit();
    internal static string get_ListViewConfigForm_EnableDeleting();
    internal static string get_ListViewConfigForm_EnableDynamicData();
    internal static string get_ListViewConfigForm_EnableEditing();
    internal static string get_ListViewConfigForm_EnableInserting();
    internal static string get_ListViewConfigForm_EnablePaging();
    internal static string get_ListViewConfigForm_Insert();
    internal static string get_ListViewConfigForm_Options();
    internal static string get_ListViewConfigForm_Preview();
    internal static string get_ListViewConfigForm_SelectLayout();
    internal static string get_ListViewConfigForm_SelectStyle();
    internal static string get_ListViewConfigForm_Title();
    internal static string get_ListViewConfigForm_Update();
    internal static string get_ListViewLayout_BulletedList();
    internal static string get_ListViewLayout_Flow();
    internal static string get_ListViewLayout_Grid();
    internal static string get_ListViewLayout_NoData();
    internal static string get_ListViewLayout_SingleRow();
    internal static string get_ListViewLayout_Tiled();
    internal static string get_ListViewStyle_Blue();
    internal static string get_ListViewStyle_Colorful();
    internal static string get_ListViewStyle_NoFormat();
    internal static string get_ListViewStyle_Professional();
    internal static string get_OK();
    internal static string get_OKCaption();
    internal static string get_RTL();
    internal static string get_UIServiceHelper_ErrorCaption();
    internal static string get_UpdatePanelDesigner_RegionDescription();
    internal static string get_UpdateProgressDesigner_RegionDescription();
    internal static string get_Wizard_CancelButton();
    internal static string get_Wizard_FinishButton();
    internal static string get_Wizard_NextButton();
    internal static string get_Wizard_PreviousButton();
}
public class System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter : StringConverter {
    public virtual StandardValuesCollection GetStandardValues(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesExclusive(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesSupported(ITypeDescriptorContext context);
}
public class System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter : StringConverter {
    public virtual StandardValuesCollection GetStandardValues(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesExclusive(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesSupported(ITypeDescriptorContext context);
}
public class System.Web.UI.Design.CollectionEditorBase : CollectionEditor {
    public CollectionEditorBase(Type type);
    protected virtual CollectionForm CreateCollectionForm();
}
internal static class System.Web.UI.Design.DesignUtil : object {
    internal static string GetContainerDesignTimeHtml(bool renderInline, AttributeCollection attributeCollection);
}
public class System.Web.UI.Design.ExtenderControlDesigner : ControlDesigner {
    protected bool Visible { get; }
    private bool System.Web.UI.Design.IControlDesigner.Visible { get; }
    internal ExtenderControlDesigner(IControlDesigner controlDesigner);
    private static ExtenderControlDesigner();
    protected virtual bool get_Visible();
    protected virtual void Dispose(bool disposing);
    internal static ReadOnlyCollection`1<Type> ExtractTargetControlTypes(Type type);
    public virtual string GetDesignTimeHtml();
    public virtual void Initialize(IComponent component);
    protected virtual void PreFilterProperties(IDictionary properties);
    private sealed virtual override bool System.Web.UI.Design.IControlDesigner.get_Visible();
    private sealed virtual override string System.Web.UI.Design.IControlDesigner.CreatePlaceHolderDesignTimeHtml();
}
public class System.Web.UI.Design.ExtenderControlToolboxItem : WebControlToolboxItem {
    public ExtenderControlToolboxItem(Type type);
    protected ExtenderControlToolboxItem(SerializationInfo info, StreamingContext context);
    public ReadOnlyCollection`1<Type> GetTargetControlTypes(IDesignerHost host);
    public virtual void Initialize(Type type);
}
internal interface System.Web.UI.Design.IControlDesigner {
    public bool Visible { get; }
    public abstract virtual bool get_Visible();
    public abstract virtual string CreatePlaceHolderDesignTimeHtml();
    public abstract virtual void UpdateDesignTimeHtml();
}
public class System.Web.UI.Design.PostBackTriggerControlIDConverter : StringConverter {
    public virtual StandardValuesCollection GetStandardValues(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesExclusive(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesSupported(ITypeDescriptorContext context);
}
public class System.Web.UI.Design.QueryExtenderDesigner : ControlDesigner {
    internal IControlDesigner _controlDesigner;
    internal IControlDesigner ControlDesigner { get; }
    private bool System.Web.UI.Design.IControlDesigner.Visible { get; }
    internal QueryExtenderDesigner(IControlDesigner controlDesigner);
    internal IControlDesigner get_ControlDesigner();
    public virtual string GetDesignTimeHtml();
    private sealed virtual override bool System.Web.UI.Design.IControlDesigner.get_Visible();
    private sealed virtual override string System.Web.UI.Design.IControlDesigner.CreatePlaceHolderDesignTimeHtml();
}
public class System.Web.UI.Design.ScriptManagerDesigner : ControlDesigner {
    public static string GetApplicationServices(ScriptManager scriptManager, IEnumerable`1<ScriptManagerProxy> proxies);
    public static string GetProxyScript(ScriptManager scriptManager, ServiceReference serviceReference);
    public static string GetProxyUrl(ScriptManager scriptManager, ServiceReference serviceReference);
    public static string GetScriptFromWebResource(Assembly assembly, string resourceName, CultureInfo culture);
    public static ReadOnlyCollection`1<ScriptReference> GetScriptReferences(ScriptManager scriptManager, IEnumerable`1<ScriptManagerProxy> proxies);
    public static ReadOnlyCollection`1<ServiceReference> GetServiceReferences(ScriptManager scriptManager, IEnumerable`1<ScriptManagerProxy> proxies);
    public virtual string GetDesignTimeHtml();
    public virtual void Initialize(IComponent component);
}
public class System.Web.UI.Design.ScriptManagerProxyDesigner : ControlDesigner {
    public virtual string GetDesignTimeHtml();
    public virtual void Initialize(IComponent component);
}
public class System.Web.UI.Design.ServiceReferenceCollectionEditor : CollectionEditorBase {
    public ServiceReferenceCollectionEditor(Type type);
    protected virtual bool CanSelectMultipleInstances();
    protected virtual Type[] CreateNewItemTypes();
}
public class System.Web.UI.Design.TimerDesigner : ControlDesigner {
    public virtual string GetDesignTimeHtml();
}
internal static class System.Web.UI.Design.TriggerDesignUtil : object {
    internal static bool IsValidTarget(IComponent component, IComponent rootComponent, bool requireSite);
    internal static void WalkControlTree(Control startControl, Predicate`1<IComponent> visitor, bool requireSite, Control walkLimit);
}
public class System.Web.UI.Design.UpdatePanelDesigner : ControlDesigner {
    protected bool UsePreviewControl { get; }
    protected virtual bool get_UsePreviewControl();
    internal void EnterTriggerEditor();
    internal void ExitTriggerEditor();
    public virtual string GetDesignTimeHtml(DesignerRegionCollection regions);
    public virtual string GetEditableDesignerRegionContent(EditableDesignerRegion region);
    public virtual void Initialize(IComponent component);
    public virtual void OnComponentChanged(object sender, ComponentChangedEventArgs ce);
    public virtual void SetEditableDesignerRegionContent(EditableDesignerRegion region, string content);
}
public class System.Web.UI.Design.UpdatePanelTriggerCollectionEditor : CollectionEditorBase {
    public UpdatePanelTriggerCollectionEditor(Type type);
    private static UpdatePanelTriggerCollectionEditor();
    protected virtual bool CanSelectMultipleInstances();
    protected virtual Type CreateCollectionItemType();
    protected virtual Type[] CreateNewItemTypes();
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
}
public class System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter : StringConverter {
    public virtual StandardValuesCollection GetStandardValues(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesExclusive(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesSupported(ITypeDescriptorContext context);
}
public class System.Web.UI.Design.UpdateProgressDesigner : ControlDesigner {
    protected bool UsePreviewControl { get; }
    protected virtual bool get_UsePreviewControl();
    public virtual string GetDesignTimeHtml(DesignerRegionCollection regions);
    public virtual string GetEditableDesignerRegionContent(EditableDesignerRegion region);
    public virtual void SetEditableDesignerRegionContent(EditableDesignerRegion region, string content);
}
internal class System.Web.UI.Design.WebControls.CustomPagerStyle : DesignerPagerStyle {
    public string Name { get; }
    public CustomPagerStyle(ISite site);
    public virtual string get_Name();
    public virtual void ApplyStyle(DataPager pager);
}
internal class System.Web.UI.Design.WebControls.DataPagerActionList : DesignerActionList {
    public bool AutoShow { get; public set; }
    public bool IsCustomStyle { get; }
    public bool IsNullStyle { get; }
    [TypeConverterAttribute("System.Web.UI.Design.WebControls.DataPagerStylesTypeConverter")]
public DesignerPagerStyle PagerStyle { get; public set; }
    public DataPagerActionList(DataPagerDesigner dataPagerDesigner);
    public virtual bool get_AutoShow();
    public virtual void set_AutoShow(bool value);
    public bool get_IsCustomStyle();
    public bool get_IsNullStyle();
    public DesignerPagerStyle get_PagerStyle();
    public void set_PagerStyle(DesignerPagerStyle value);
    public void EditFields();
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
public class System.Web.UI.Design.WebControls.DataPagerDesigner : ControlDesigner {
    public DesignerActionListCollection ActionLists { get; }
    public string PagedControlID { get; public set; }
    public TemplateGroupCollection TemplateGroups { get; }
    protected bool UsePreviewControl { get; }
    private static DataPagerDesigner();
    public virtual DesignerActionListCollection get_ActionLists();
    public string get_PagedControlID();
    public void set_PagedControlID(string value);
    public virtual TemplateGroupCollection get_TemplateGroups();
    protected virtual bool get_UsePreviewControl();
    internal void EditFields();
    internal DesignerPagerStyle GetDataPagerStyle();
    public virtual string GetDesignTimeHtml();
    protected virtual string GetEmptyDesignTimeHtml();
    public virtual void Initialize(IComponent component);
    protected virtual void PreFilterProperties(IDictionary properties);
    internal void SetDataPagerStyle(DesignerPagerStyle pagerStyle);
}
internal class System.Web.UI.Design.WebControls.DataPagerFieldsEditor : DesignerForm {
    protected string HelpTopic { get; }
    public DataPagerFieldsEditor(DataPagerDesigner controlDesigner);
    protected virtual string get_HelpTopic();
    protected virtual void OnActivated(EventArgs e);
    protected virtual void OnClosed(EventArgs e);
}
[SecurityCriticalAttribute]
public class System.Web.UI.Design.WebControls.DataPagerFieldTypeEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
internal class System.Web.UI.Design.WebControls.DataPagerStylesTypeConverter : TypeConverter {
    public virtual StandardValuesCollection GetStandardValues(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesExclusive(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesSupported(ITypeDescriptorContext context);
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
}
internal abstract class System.Web.UI.Design.WebControls.DesignerPagerStyle : object {
    public ISite Site { get; }
    public string Name { get; }
    protected DesignerPagerStyle(ISite site);
    public ISite get_Site();
    public abstract virtual string get_Name();
    public abstract virtual void ApplyStyle(DataPager pager);
    public virtual DataPager CreatePager();
    public virtual bool IsPagerType(DataPager pager);
    protected static bool IsPagerTypeInternal(DataPager pager, DataPager prototypePager);
    public virtual string ToString();
}
[BindableAttribute("False")]
[ToolboxItemAttribute("False")]
internal class System.Web.UI.Design.WebControls.DesignerPanel : Panel {
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceChooseContextType {
    [CompilerGeneratedAttribute]
public abstract virtual void add_ContextChanged(LinqDataSourceContextChangedEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ContextChanged(LinqDataSourceContextChangedEventHandler value);
    public abstract virtual void LoadState();
    public abstract virtual bool OnNext();
    public abstract virtual void SaveState();
    public abstract virtual void SelectContextType(ILinqDataSourceContextTypeItem selectedContextType);
    public abstract virtual void SelectShowDataContextsOnly(bool showOnlyDataContexts);
    public abstract virtual void UpdateWizardState(ILinqDataSourceWizardForm parentWizard);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceChooseContextTypePanel {
    public abstract virtual void Register(ILinqDataSourceChooseContextType chooseContextType);
    public abstract virtual void SetContextTypes(List`1<ILinqDataSourceContextTypeItem> contextTypes);
    public abstract virtual void SetSelectedContextType(ILinqDataSourceContextTypeItem selected);
    public abstract virtual void SetShowOnlyDataContexts(bool showOnlyDataContexts);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceConfiguration {
    public abstract virtual void ContextChangedHandler(object sender, ILinqDataSourceContextTypeItem newContext);
    public abstract virtual void LoadState();
    public abstract virtual void SaveState();
    public abstract virtual void SelectTable(ILinqDataSourcePropertyItem selectedTable);
    public abstract virtual void ShowAdvanced();
    public abstract virtual void ShowOrderBy();
    public abstract virtual void ShowWhere();
    public abstract virtual void UpdateWizardState(ILinqDataSourceWizardForm wizard);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceConfigurationPanel {
    public abstract virtual void Register(ILinqDataSourceConfiguration _configuration);
    public abstract virtual void SetAdvancedEnabled(bool enabled);
    public abstract virtual void SetConfigureGroupByForm(ILinqDataSourceConfigureGroupByPanel form);
    public abstract virtual void SetConfigureSelectForm(ILinqDataSourceConfigureSelectPanel form);
    public abstract virtual void SetPanelEnabled(bool enabled);
    public abstract virtual void SetSelectedTable(ILinqDataSourcePropertyItem selected);
    public abstract virtual void SetTableComboEnabled(bool enabled);
    public abstract virtual void SetTables(List`1<ILinqDataSourcePropertyItem> tableProperties);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceConfigureAdvanced {
    public abstract virtual void LoadState();
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceConfigureAdvancedForm {
    public abstract virtual void Register(LinqDataSourceConfigureAdvanced configureAdvanced);
    public abstract virtual void SetEnableDelete(bool isChecked);
    public abstract virtual void SetEnableInsert(bool isChecked);
    public abstract virtual void SetEnableUpdate(bool isChecked);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceConfigureGroupBy {
    [CompilerGeneratedAttribute]
public abstract virtual void add_GroupByChanged(LinqDataSourceGroupByChangedEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_GroupByChanged(LinqDataSourceGroupByChangedEventHandler value);
    public abstract virtual void LoadState();
    public abstract virtual void SaveState();
    public abstract virtual void SelectionChangedHandler(LinqDataSourceSelectionChangedEventArgs e);
    public abstract virtual void SelectTable(ILinqDataSourcePropertyItem tableProperty);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceConfigureGroupByPanel {
    public string OrderGroupsBy { get; public set; }
    public abstract virtual string get_OrderGroupsBy();
    public abstract virtual void set_OrderGroupsBy(string value);
    public abstract virtual void Register(LinqDataSourceConfigureGroupBy configureGroupBy);
    public abstract virtual void SetGroupByFields(List`1<ILinqDataSourcePropertyItem> fields);
    public abstract virtual void SetGroupBy(ILinqDataSourcePropertyItem field);
    public abstract virtual void SetSelectedGroupByField(ILinqDataSourcePropertyItem selected);
    public abstract virtual void ShowOrderGroupsBy(bool show);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceConfigureOrderBy {
    public abstract virtual bool LoadState();
    public abstract virtual void SaveState();
    public abstract virtual void SelectTable(ILinqDataSourcePropertyItem tableProperty);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceConfigureOrderByForm {
    public abstract virtual void Register(LinqDataSourceConfigureOrderBy _configureOrderBy);
    public abstract virtual void SetOrderByDirectionEnabled(int clauseNumber, bool enabled);
    public abstract virtual void SetOrderByFieldEnabled(int clauseNumber, bool enabled);
    public abstract virtual void SetOrderByFields(List`1<ILinqDataSourcePropertyItem> fields);
    public abstract virtual void SetPreview(string preview);
    public abstract virtual void SetSelectedOrderByField(int clauseNumber, ILinqDataSourcePropertyItem field, bool isAsc);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceConfigureSelect {
    [CompilerGeneratedAttribute]
public abstract virtual void add_SelectionChanged(SelectionChangedEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_SelectionChanged(SelectionChangedEventHandler value);
    public abstract virtual void GroupByChangedHandler(bool isNone, bool isCustom, ILinqDataSourcePropertyItem groupByField);
    public abstract virtual void LoadState();
    public abstract virtual void SaveState();
    public abstract virtual void SelectTable(ILinqDataSourcePropertyItem selectedTable);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceConfigureSelectPanel {
    public abstract virtual void Register(LinqDataSourceConfigureSelect configureSelect);
    public abstract virtual void SetSelectMode(LinqDataSourceGroupByMode SelectMode);
    public abstract virtual void AddProjection(ILinqDataSourcePropertyItem field, List`1<LinqDataSourceAggregateFunctions> aggregates, LinqDataSourceAggregateFunctions aggregateFunction, string alias, bool isDefaultProjection);
    public abstract virtual void ClearGridProjections();
    public abstract virtual void EnableAlias(int rowIndex);
    public abstract virtual void MoveProjection(int oldIndex, int newIndex);
    public abstract virtual void RemoveProjection(int index);
    public abstract virtual void SetAggregateFunctions(int rowIndex, List`1<LinqDataSourceAggregateFunctions> aggregates);
    public abstract virtual void SetCanMoveDown(bool enabled);
    public abstract virtual void SetCanMoveUp(bool enabled);
    public abstract virtual void SetCanRemove(bool enabled);
    public abstract virtual void SetGridAggregateFunctions(List`1<LinqDataSourceAggregateFunctions> functions);
    public abstract virtual void SetGridFields(List`1<ILinqDataSourcePropertyItem> fields);
    public abstract virtual void SetProjectionAggregateFunction(int rowIndex, LinqDataSourceAggregateFunctions function);
    public abstract virtual void SetProjectionAlias(int rowIndex, string alias);
    public abstract virtual void SetProjectionField(int rowIndex, string field);
    public abstract virtual void AddField(ILinqDataSourcePropertyItem field);
    public abstract virtual void SetCheckBoxFields(List`1<ILinqDataSourcePropertyItem> fields);
    public abstract virtual void UncheckFieldCheckboxes();
    public abstract virtual void UncheckStarCheckbox();
    public abstract virtual void SetCustomGroupBy(string newGroupBy);
    public abstract virtual void SetCustomSelect(string newSelect);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceConfigureWhere {
    public abstract virtual void AddCurrentWhereExpression();
    public abstract virtual LinqDataSourceWhereExpression GetCurrentWhereExpression();
    public abstract virtual void InvalidateSelectedParameter();
    public abstract virtual bool LoadState();
    public abstract virtual void RemoveCurrentWhereExpression();
    public abstract virtual void SaveState();
    public abstract virtual void SelectOperator(LinqDataSourceOperators selected);
    public abstract virtual void SelectParameterEditor(object selected);
    public abstract virtual void SelectTable(ILinqDataSourcePropertyItem table);
    public abstract virtual void SelectWhereExpression(LinqDataSourceWhereExpression selected);
    public abstract virtual void SelectWhereField(ILinqDataSourcePropertyItem selected);
    public abstract virtual void AttachParameterEditorChangedHandler(object parameterEditor, Delegate handler);
    public abstract virtual void InitializeParameterEditor(object parameterEditor);
    public abstract virtual bool GetParameterEditorHasCompleteInformation(object parameterEditor);
    public abstract virtual Parameter GetParameterEditorParameter(object parameterEditor);
    public abstract virtual void SetParameterEditorVisible(object parameterEditor, bool value);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceConfigureWhereForm {
    public abstract virtual void AddNewWhereExpressionItem(LinqDataSourceWhereExpression whereExpression, LinqDataSourceWhereStatement whereStatement, IServiceProvider serviceProvider, Control dataSource);
    public abstract virtual void Register(ILinqDataSourceConfigureWhere configureWhere, Control dataSource);
    public abstract virtual void RemoveWhereExpressionItem(LinqDataSourceWhereExpression whereExpression);
    public abstract virtual void SetCanAddSelectExpression(bool enabled);
    public abstract virtual void SetCanRemoveSelectExpression(bool enabled);
    public abstract virtual void SetExpressionPreviewEnabled(bool enabled);
    public abstract virtual void SetOperators(List`1<LinqDataSourceOperators> operators);
    public abstract virtual void SetOperatorsEnabled(bool enabled);
    public abstract virtual void SetParameterEditorToShow(object editor);
    public abstract virtual void SetParametersEnabled(bool enabled);
    public abstract virtual void SetParameterValuePreview(string preview);
    public abstract virtual void SetSelectedWhereField(ILinqDataSourcePropertyItem selected);
    public abstract virtual void SetWhereExpressionPreview(string preview);
    public abstract virtual void SetWhereFields(List`1<ILinqDataSourcePropertyItem> fields);
    public abstract virtual void SetWhereStatement(LinqDataSourceWhereStatement whereStatement, IServiceProvider serviceProvider, Control dataSource);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceContextTypeItem {
    public string DisplayName { get; public set; }
    public Type Type { get; }
    public abstract virtual string get_DisplayName();
    public abstract virtual void set_DisplayName(string value);
    public abstract virtual Type get_Type();
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceDesignerHelper {
    public bool AutoGenerateWhereClause { get; }
    public bool AutoGenerateOrderByClause { get; }
    public bool CanPage { get; }
    public bool CanSort { get; }
    public string ContextTypeName { get; public set; }
    public bool EnableInsert { get; public set; }
    public bool EnableUpdate { get; public set; }
    public bool EnableDelete { get; public set; }
    public string GroupBy { get; public set; }
    public string OrderBy { get; public set; }
    public string OrderGroupsBy { get; public set; }
    public string Select { get; public set; }
    public IServiceProvider ServiceProvider { get; }
    public string TableName { get; public set; }
    public string Where { get; public set; }
    public abstract virtual bool get_AutoGenerateWhereClause();
    public abstract virtual bool get_AutoGenerateOrderByClause();
    public abstract virtual bool get_CanPage();
    public abstract virtual bool get_CanSort();
    public abstract virtual string get_ContextTypeName();
    public abstract virtual void set_ContextTypeName(string value);
    public abstract virtual bool get_EnableInsert();
    public abstract virtual void set_EnableInsert(bool value);
    public abstract virtual bool get_EnableUpdate();
    public abstract virtual void set_EnableUpdate(bool value);
    public abstract virtual bool get_EnableDelete();
    public abstract virtual void set_EnableDelete(bool value);
    public abstract virtual string get_GroupBy();
    public abstract virtual void set_GroupBy(string value);
    public abstract virtual string get_OrderBy();
    public abstract virtual void set_OrderBy(string value);
    public abstract virtual string get_OrderGroupsBy();
    public abstract virtual void set_OrderGroupsBy(string value);
    public abstract virtual string get_Select();
    public abstract virtual void set_Select(string value);
    public abstract virtual IServiceProvider get_ServiceProvider();
    public abstract virtual string get_TableName();
    public abstract virtual void set_TableName(string value);
    public abstract virtual string get_Where();
    public abstract virtual void set_Where(string value);
    public abstract virtual bool CanConfigure(IServiceProvider serviceProvider);
    public abstract virtual bool CanInsertUpdateDelete(ILinqDataSourceDesignerHelper helperHelper);
    public abstract virtual bool CanRefreshSchema(IServiceProvider serviceProvider);
    public abstract virtual ParameterCollection CloneDeleteParameters();
    public abstract virtual ParameterCollection CloneGroupByParameters();
    public abstract virtual ParameterCollection CloneInsertParameters();
    public abstract virtual ParameterCollection CloneOrderByParameters();
    public abstract virtual ParameterCollection CloneOrderGroupsByParameters();
    public abstract virtual ParameterCollection CloneParameters(ParameterCollection original);
    public abstract virtual ParameterCollection CloneSelectParameters();
    public abstract virtual ParameterCollection CloneUpdateParameters();
    public abstract virtual ParameterCollection CloneWhereParameters();
    public abstract virtual ILinqDataSourceContextTypeItem GetContextType(ILinqDataSourceDesignerHelper helperHelper);
    public abstract virtual List`1<ILinqDataSourceContextTypeItem> GetContextTypes(Type baseType, IServiceProvider serviceProvider);
    public abstract virtual LinqDataSourceState GetLinqDataSourceState();
    public abstract virtual List`1<ILinqDataSourcePropertyItem> GetProperties(Type tableType, bool isSorted, bool includeEnumerables);
    public abstract virtual List`1<ILinqDataSourcePropertyItem> GetProperties(ILinqDataSourcePropertyItem table, bool isSorted, bool includeEnumerables);
    public abstract virtual ILinqDataSourcePropertyItem GetTable(ILinqDataSourceDesignerHelper helperHelper);
    public abstract virtual List`1<ILinqDataSourcePropertyItem> GetTables(Type contextType, bool isSorted);
    public abstract virtual List`1<ILinqDataSourcePropertyItem> GetTables(ILinqDataSourceContextTypeItem context, bool isSorted);
    public abstract virtual Type GetType(string typeName, IServiceProvider serviceProvider);
    public abstract virtual LinqDesignerDataSourceView GetView(string viewName);
    public abstract virtual String[] GetViewNames();
    public abstract virtual bool IsDataContext(ILinqDataSourceDesignerHelper helperHelper);
    public abstract virtual bool IsTableTypeTable(ILinqDataSourceDesignerHelper helperHelper);
    public abstract virtual bool IsTableTypeTable(ILinqDataSourceDesignerHelper helperHelper, string contextTypeName, string tableName, IServiceProvider serviceProvider);
    public abstract virtual DataTable LoadSchema();
    public abstract virtual DataTable MakeDataTable(ILinqDataSourceDesignerHelper helperHelper, ILinqDataSourcePropertyItem table);
    public abstract virtual void PreFilterProperties(IDictionary properties, Type designerType);
    public abstract virtual void RefreshSchema(ILinqDataSourceDesignerHelper helperHelper, bool preferSilent);
    public abstract virtual void RegisterClone(object original, object clone);
    public abstract virtual void SaveSchema(string contextTypeName, string tableName, DataTable schema);
    public abstract virtual void SetDeleteParameterContents(ParameterCollection newParams);
    public abstract virtual void SetGroupByParameterContents(ParameterCollection newParams);
    public abstract virtual void SetInsertParameterContents(ParameterCollection newParams);
    public abstract virtual void SetLinqDataSourceState(LinqDataSourceState state);
    public abstract virtual void SetOrderByParameterContents(ParameterCollection newParams);
    public abstract virtual void SetOrderGroupsByParameterContents(ParameterCollection newParams);
    public abstract virtual void SetSelectParameterContents(ParameterCollection newParams);
    public abstract virtual void SetUpdateParameterContents(ParameterCollection newParams);
    public abstract virtual void SetWhereParameterContents(ParameterCollection newParams);
    public abstract virtual void SetWrapper(ILinqDataSourceWrapper wrapper);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceProjection {
    public LinqDataSourceAggregateFunctions AggregateFunction { get; public set; }
    public string Alias { get; public set; }
    public ILinqDataSourcePropertyItem Column { get; public set; }
    public bool IsAliasMandatory { get; }
    public abstract virtual LinqDataSourceAggregateFunctions get_AggregateFunction();
    public abstract virtual void set_AggregateFunction(LinqDataSourceAggregateFunctions value);
    public abstract virtual string get_Alias();
    public abstract virtual void set_Alias(string value);
    public abstract virtual ILinqDataSourcePropertyItem get_Column();
    public abstract virtual void set_Column(ILinqDataSourcePropertyItem value);
    public abstract virtual bool get_IsAliasMandatory();
    public abstract virtual string ToString();
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem {
    public string DisplayName { get; public set; }
    public bool IsNullable { get; }
    public bool IsIdentity { get; }
    public bool IsPrimaryKey { get; }
    public bool IsProperty { get; }
    public bool IsReadOnly { get; }
    public bool IsUnique { get; }
    public int Length { get; }
    public string Name { get; }
    public Type Type { get; }
    public abstract virtual string get_DisplayName();
    public abstract virtual void set_DisplayName(string value);
    public abstract virtual bool get_IsNullable();
    public abstract virtual bool get_IsIdentity();
    public abstract virtual bool get_IsPrimaryKey();
    public abstract virtual bool get_IsProperty();
    public abstract virtual bool get_IsReadOnly();
    public abstract virtual bool get_IsUnique();
    public abstract virtual int get_Length();
    public abstract virtual string get_Name();
    public abstract virtual Type get_Type();
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceStatementEditorForm {
    public bool AutoGen { get; }
    public ParameterCollection Parameters { get; }
    public string Statement { get; }
    public abstract virtual bool get_AutoGen();
    public abstract virtual ParameterCollection get_Parameters();
    public abstract virtual string get_Statement();
    public abstract virtual DialogResult ShowDialog();
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceWizardForm {
    public abstract virtual void SetCanFinish(bool enabled);
    public abstract virtual void SetCanNext(bool enabled);
}
internal interface System.Web.UI.Design.WebControls.ILinqDataSourceWrapper {
    public bool AutoGenerateOrderByClause { get; }
    public bool AutoGenerateWhereClause { get; }
    public bool CanPage { get; }
    public bool CanSort { get; }
    public string ContextTypeName { get; public set; }
    public bool EnableDelete { get; public set; }
    public bool EnableInsert { get; public set; }
    public bool EnableUpdate { get; public set; }
    public string GroupBy { get; public set; }
    public string OrderBy { get; public set; }
    public string OrderGroupsBy { get; public set; }
    public string Select { get; public set; }
    public IServiceProvider ServiceProvider { get; }
    public string TableName { get; public set; }
    public string Where { get; public set; }
    public abstract virtual bool get_AutoGenerateOrderByClause();
    public abstract virtual bool get_AutoGenerateWhereClause();
    public abstract virtual bool get_CanPage();
    public abstract virtual bool get_CanSort();
    public abstract virtual string get_ContextTypeName();
    public abstract virtual void set_ContextTypeName(string value);
    public abstract virtual bool get_EnableDelete();
    public abstract virtual void set_EnableDelete(bool value);
    public abstract virtual bool get_EnableInsert();
    public abstract virtual void set_EnableInsert(bool value);
    public abstract virtual bool get_EnableUpdate();
    public abstract virtual void set_EnableUpdate(bool value);
    public abstract virtual string get_GroupBy();
    public abstract virtual void set_GroupBy(string value);
    public abstract virtual string get_OrderBy();
    public abstract virtual void set_OrderBy(string value);
    public abstract virtual string get_OrderGroupsBy();
    public abstract virtual void set_OrderGroupsBy(string value);
    public abstract virtual string get_Select();
    public abstract virtual void set_Select(string value);
    public abstract virtual IServiceProvider get_ServiceProvider();
    public abstract virtual string get_TableName();
    public abstract virtual void set_TableName(string value);
    public abstract virtual string get_Where();
    public abstract virtual void set_Where(string value);
    public abstract virtual ParameterCollection CloneDeleteParameters();
    public abstract virtual ParameterCollection CloneGroupByParameters();
    public abstract virtual ParameterCollection CloneInsertParameters();
    public abstract virtual ParameterCollection CloneOrderByParameters();
    public abstract virtual ParameterCollection CloneOrderGroupsByParameters();
    public abstract virtual ParameterCollection CloneParameters(ParameterCollection original);
    public abstract virtual ParameterCollection CloneSelectParameters();
    public abstract virtual ParameterCollection CloneUpdateParameters();
    public abstract virtual ParameterCollection CloneWhereParameters();
    public abstract virtual LinqDataSourceState GetState();
    public abstract virtual void SetState(LinqDataSourceState state);
    public abstract virtual void SetDeleteParameterContents(ParameterCollection newParams);
    public abstract virtual void SetGroupByParameterContents(ParameterCollection newParams);
    public abstract virtual void SetInsertParameterContents(ParameterCollection newParams);
    public abstract virtual void SetOrderByParameterContents(ParameterCollection newParams);
    public abstract virtual void SetOrderGroupsByParameterContents(ParameterCollection newParams);
    public abstract virtual void SetSelectParameterContents(ParameterCollection newParams);
    public abstract virtual void SetUpdateParameterContents(ParameterCollection newParams);
    public abstract virtual void SetWhereParameterContents(ParameterCollection newParams);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceAggregateFunctions : object {
    public static LinqDataSourceAggregateFunctions Average;
    public static LinqDataSourceAggregateFunctions Count;
    public static LinqDataSourceAggregateFunctions Max;
    public static LinqDataSourceAggregateFunctions Min;
    public static LinqDataSourceAggregateFunctions None;
    public static LinqDataSourceAggregateFunctions Sum;
    public static LinqDataSourceAggregateFunctions Unknown;
    private static LinqDataSourceAggregateFunctions();
    public static LinqDataSourceAggregateFunctions FromString(string name);
    public virtual string ToString();
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceChooseContextType : object {
    internal static ILinqDataSourceContextTypeItem PlaceholderContextType { get; }
    public LinqDataSourceChooseContextType(ILinqDataSourceChooseContextTypePanel panel, ILinqDataSourceWizardForm wizardForm, ILinqDataSourceDesignerHelper helper, IServiceProvider serviceProvider, LinqDataSourceState linqDataSourceState);
    public LinqDataSourceChooseContextType(ILinqDataSourceChooseContextTypePanel panel, ILinqDataSourceDesignerHelper helper, IServiceProvider serviceProvider, ChooseContextTypeState chooseContextTypeState);
    internal static ILinqDataSourceContextTypeItem get_PlaceholderContextType();
    public sealed virtual void add_ContextChanged(LinqDataSourceContextChangedEventHandler value);
    public sealed virtual void remove_ContextChanged(LinqDataSourceContextChangedEventHandler value);
    internal void LoadContextTypes(string contextName);
    internal void LoadContextTypes(string contextName, bool showOnlyDataContexts);
    public sealed virtual void LoadState();
    internal bool MatchContextType(string contextName);
    public sealed virtual bool OnNext();
    public sealed virtual void SaveState();
    public sealed virtual void SelectContextType(ILinqDataSourceContextTypeItem selectedContextType);
    public sealed virtual void SelectShowDataContextsOnly(bool showOnlyDataContexts);
    internal void SetNextEnabled();
    public sealed virtual void UpdateWizardState(ILinqDataSourceWizardForm parentWizard);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceChooseContextTypePanel : WizardPanel {
    public virtual bool OnNext();
    protected virtual void OnVisibleChanged(EventArgs e);
    public sealed virtual void Register(ILinqDataSourceChooseContextType chooseContextType);
    public sealed virtual void SetContextTypes(List`1<ILinqDataSourceContextTypeItem> contextTypes);
    public sealed virtual void SetSelectedContextType(ILinqDataSourceContextTypeItem selected);
    public sealed virtual void SetShowOnlyDataContexts(bool showOnlyDataContexts);
    protected virtual void Dispose(bool disposing);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfiguration : object {
    public LinqDataSourceConfiguration(ILinqDataSourceConfigurationPanel panel, ILinqDataSourceWizardForm wizard, ILinqDataSourceDesignerHelper designerHelper, Control linqDataSource, LinqDataSourceState linqDataSourceState, IServiceProvider serviceProvider);
    internal LinqDataSourceConfiguration(ILinqDataSourceConfigurationPanel panel, ILinqDataSourceWizardForm wizard, ILinqDataSourceDesignerHelper designerHelper, Control linqDataSource, LinqDataSourceState linqDataSourceState, IServiceProvider serviceProvider, bool isDebug);
    public LinqDataSourceConfiguration(ILinqDataSourceConfigurationPanel panel, ILinqDataSourceDesignerHelper designerHelper, LinqDataSourceConfigurationHelper helper, ConfigureState configureState);
    public sealed virtual void ContextChangedHandler(object sender, ILinqDataSourceContextTypeItem newContext);
    public sealed virtual void LoadState();
    public sealed virtual void SaveState();
    public sealed virtual void SelectTable(ILinqDataSourcePropertyItem selectedTable);
    public void SelectionChangedHandler(LinqDataSourceSelectionChangedEventArgs e);
    public sealed virtual void ShowAdvanced();
    public sealed virtual void ShowOrderBy();
    public sealed virtual void ShowWhere();
    public sealed virtual void UpdateWizardState(ILinqDataSourceWizardForm wizard);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigurationHelper : object {
    public LinqDataSourceConfigurationHelper(ILinqDataSourceDesignerHelper designerHelper, Control linqDataSource, LinqDataSourceState linqDataSourceState, IServiceProvider serviceProvider);
    public virtual ILinqDataSourceConfigureAdvanced MakeAdvanced(ILinqDataSourceConfigureAdvancedForm advancedForm);
    public virtual ILinqDataSourceConfigureAdvancedForm MakeAdvancedForm();
    public virtual ILinqDataSourceConfigureOrderBy MakeOrderBy(ILinqDataSourceConfigureOrderByForm orderByForm);
    public virtual ILinqDataSourceConfigureOrderByForm MakeOrderByForm();
    public virtual ILinqDataSourceStatementEditorForm MakeStatementEditorForm(bool autoGen, string statement, ParameterCollection originalParameters, string operation);
    public virtual ILinqDataSourceConfigureWhere MakeWhere(ILinqDataSourceConfigureWhereForm whereForm);
    public virtual ILinqDataSourceConfigureWhereForm MakeWhereForm();
    public virtual DialogResult ShowDialog(object form);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigurationPanel : WizardPanel {
    protected virtual void OnVisibleChanged(EventArgs e);
    public sealed virtual void Register(ILinqDataSourceConfiguration configuration);
    public sealed virtual void SetAdvancedEnabled(bool enabled);
    public sealed virtual void SetConfigureGroupByForm(ILinqDataSourceConfigureGroupByPanel form);
    public sealed virtual void SetConfigureSelectForm(ILinqDataSourceConfigureSelectPanel form);
    public sealed virtual void SetPanelEnabled(bool enabled);
    public sealed virtual void SetSelectedTable(ILinqDataSourcePropertyItem selected);
    public sealed virtual void SetTableComboEnabled(bool enabled);
    public sealed virtual void SetTables(List`1<ILinqDataSourcePropertyItem> tableProperties);
    protected virtual void Dispose(bool disposing);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigureAdvanced : object {
    internal LinqDataSourceConfigureAdvanced(ILinqDataSourceConfigureAdvancedForm form, LinqDataSourceState linqDataSourceState);
    internal LinqDataSourceConfigureAdvanced(ILinqDataSourceConfigureAdvancedForm form, ConfigureState state);
    public sealed virtual void LoadState();
    public void SaveState();
    public void SetEnableDelete(bool enable);
    public void SetEnableInsert(bool enable);
    public void SetEnableUpdate(bool enable);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigureAdvancedForm : DesignerForm {
    protected string HelpTopic { get; }
    public LinqDataSourceConfigureAdvancedForm(IServiceProvider serviceProvider);
    protected virtual string get_HelpTopic();
    public sealed virtual void Register(LinqDataSourceConfigureAdvanced configureAdvanced);
    public sealed virtual void SetEnableDelete(bool isChecked);
    public sealed virtual void SetEnableInsert(bool isChecked);
    public sealed virtual void SetEnableUpdate(bool isChecked);
    protected virtual void Dispose(bool disposing);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigureGroupBy : object {
    internal LinqDataSourceConfigureGroupBy(ILinqDataSourceConfigureGroupByPanel form, ILinqDataSourceDesignerHelper helper, LinqDataSourceState linqDataSourceState);
    internal LinqDataSourceConfigureGroupBy(ILinqDataSourceConfigureGroupByPanel form, ILinqDataSourceDesignerHelper helper, ConfigureGroupByState state);
    public sealed virtual void add_GroupByChanged(LinqDataSourceGroupByChangedEventHandler value);
    public sealed virtual void remove_GroupByChanged(LinqDataSourceGroupByChangedEventHandler value);
    public sealed virtual void LoadState();
    public sealed virtual void SaveState();
    public void SelectGroupBy(ILinqDataSourcePropertyItem selected);
    public sealed virtual void SelectionChangedHandler(LinqDataSourceSelectionChangedEventArgs e);
    public sealed virtual void SelectTable(ILinqDataSourcePropertyItem tableProperty);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigureGroupByPanel : Panel {
    public string OrderGroupsBy { get; public set; }
    public sealed virtual string get_OrderGroupsBy();
    public sealed virtual void set_OrderGroupsBy(string value);
    public sealed virtual void Register(LinqDataSourceConfigureGroupBy configureGroupBy);
    public sealed virtual void SetGroupBy(ILinqDataSourcePropertyItem field);
    public sealed virtual void SetGroupByFields(List`1<ILinqDataSourcePropertyItem> fields);
    public sealed virtual void SetSelectedGroupByField(ILinqDataSourcePropertyItem selected);
    public sealed virtual void ShowOrderGroupsBy(bool show);
    protected virtual void Dispose(bool disposing);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigureOrderBy : object {
    internal LinqDataSourceConfigureOrderBy(ILinqDataSourceConfigureOrderByForm form, ILinqDataSourceDesignerHelper helper, LinqDataSourceState linqDataSourceState);
    internal LinqDataSourceConfigureOrderBy(ILinqDataSourceConfigureOrderByForm form, ILinqDataSourceDesignerHelper helper, ConfigureOrderByState state);
    public sealed virtual bool LoadState();
    public sealed virtual void SaveState();
    public void SelectOrderByDirection(int clauseNumber, bool isAsc);
    public void SelectOrderByField(int clauseNumber, ILinqDataSourcePropertyItem field);
    public sealed virtual void SelectTable(ILinqDataSourcePropertyItem tableProperty);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigureOrderByForm : DesignerForm {
    protected string HelpTopic { get; }
    public LinqDataSourceConfigureOrderByForm(IServiceProvider serviceProvider);
    protected virtual string get_HelpTopic();
    public sealed virtual void Register(LinqDataSourceConfigureOrderBy configureOrderBy);
    public sealed virtual void SetOrderByDirectionEnabled(int clauseNumber, bool enabled);
    public sealed virtual void SetOrderByFieldEnabled(int clauseNumber, bool enabled);
    public sealed virtual void SetOrderByFields(List`1<ILinqDataSourcePropertyItem> fields);
    public sealed virtual void SetPreview(string preview);
    public sealed virtual void SetSelectedOrderByField(int clauseNumber, ILinqDataSourcePropertyItem field, bool isAsc);
    protected virtual void Dispose(bool disposing);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigureSelect : object {
    internal LinqDataSourceConfigureSelect(ILinqDataSourceConfigureSelectPanel form, ILinqDataSourceWizardForm wizard, ILinqDataSourceDesignerHelper helper, LinqDataSourceState linqDataSourceState);
    internal LinqDataSourceConfigureSelect(ILinqDataSourceConfigureSelectPanel form, ILinqDataSourceWizardForm wizard, ILinqDataSourceDesignerHelper helper, ConfigureSelectState state);
    public sealed virtual void add_SelectionChanged(SelectionChangedEventHandler value);
    public sealed virtual void remove_SelectionChanged(SelectionChangedEventHandler value);
    public sealed virtual void GroupByChangedHandler(bool isNone, bool isCustom, ILinqDataSourcePropertyItem groupByField);
    public sealed virtual void LoadState();
    public void OnSelectionChanged();
    public sealed virtual void SaveState();
    public sealed virtual void SelectTable(ILinqDataSourcePropertyItem table);
    public void AddField(int fieldIndex);
    public void RemoveField(int fieldIndex);
    public void ChangeProjectionAggregateFunction(int projectionIndex, string newFunction);
    public void ChangeProjectionAlias(int projectionIndex, string newAlias);
    public void ChangeProjectionField(int projectionIndex, string newFieldName);
    public void MoveProjection(int oldIndex, int newIndex);
    public void RemoveProjectionDeleteButton(int projectionIndex);
    public void RemoveProjectionDeleteKey(int projectionIndex);
    public void SelectProjection(int projectionIndex);
    public void SetCustomGroupBy(string newGroupBy);
    public void SetCustomSelect(string newSelect);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigureSelectPanel : Panel {
    public LinqDataSourceConfigureSelectPanel(bool isDebug);
    public sealed virtual void AddField(ILinqDataSourcePropertyItem field);
    public sealed virtual void AddProjection(ILinqDataSourcePropertyItem field, List`1<LinqDataSourceAggregateFunctions> aggregates, LinqDataSourceAggregateFunctions aggregateFunction, string alias, bool isDefaultProjection);
    public sealed virtual void ClearGridProjections();
    public sealed virtual void EnableAlias(int rowIndex);
    internal static Bitmap GetBitmap(string resourceName);
    public sealed virtual void MoveProjection(int oldIndex, int newIndex);
    public sealed virtual void Register(LinqDataSourceConfigureSelect configureSelect);
    public sealed virtual void RemoveProjection(int index);
    public sealed virtual void SetAggregateFunctions(int rowIndex, List`1<LinqDataSourceAggregateFunctions> aggregates);
    public sealed virtual void SetCanMoveDown(bool enabled);
    public sealed virtual void SetCanMoveUp(bool enabled);
    public sealed virtual void SetCanRemove(bool enabled);
    public sealed virtual void SetCheckBoxFields(List`1<ILinqDataSourcePropertyItem> fields);
    public sealed virtual void SetCustomGroupBy(string newGroupBy);
    public sealed virtual void SetCustomSelect(string newSelect);
    public sealed virtual void SetGridAggregateFunctions(List`1<LinqDataSourceAggregateFunctions> aggregates);
    public sealed virtual void SetGridFields(List`1<ILinqDataSourcePropertyItem> fields);
    public sealed virtual void SetProjectionField(int rowIndex, string field);
    public sealed virtual void SetProjectionAggregateFunction(int rowIndex, LinqDataSourceAggregateFunctions function);
    public sealed virtual void SetProjectionAlias(int rowIndex, string alias);
    public sealed virtual void SetSelectMode(LinqDataSourceGroupByMode SelectMode);
    public sealed virtual void UncheckFieldCheckboxes();
    public sealed virtual void UncheckStarCheckbox();
    protected virtual void Dispose(bool disposing);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigureWhere : object {
    internal LinqDataSourceConfigureWhere(ILinqDataSourceConfigureWhereForm form, ILinqDataSourceDesignerHelper helper, Control dataSource, IServiceProvider serviceProvider, LinqDataSourceState linqDataSourceState);
    internal LinqDataSourceConfigureWhere(ILinqDataSourceConfigureWhereForm form, ILinqDataSourceDesignerHelper helper, Control dataSource, IServiceProvider serviceProvider, ConfigureWhereState state, LinqDataSourceConfigureWhereHelper whereHelper, LinqDataSourceWhereBuilder builder);
    public sealed virtual void AddCurrentWhereExpression();
    public sealed virtual LinqDataSourceWhereExpression GetCurrentWhereExpression();
    internal string GetNextParameterName(string proposedName);
    public sealed virtual void InvalidateSelectedParameter();
    public sealed virtual bool LoadState();
    public sealed virtual void RemoveCurrentWhereExpression();
    public sealed virtual void SaveState();
    public sealed virtual void SelectOperator(LinqDataSourceOperators selected);
    public sealed virtual void SelectParameterEditor(object selected);
    public sealed virtual void SelectTable(ILinqDataSourcePropertyItem table);
    public sealed virtual void SelectWhereExpression(LinqDataSourceWhereExpression selected);
    public sealed virtual void SelectWhereField(ILinqDataSourcePropertyItem selected);
    public virtual void AttachParameterEditorChangedHandler(object parameterEditor, Delegate handler);
    public virtual bool GetParameterEditorHasCompleteInformation(object parameterEditor);
    public virtual Parameter GetParameterEditorParameter(object parameterEditor);
    internal virtual Type GetParameterEditorType();
    public virtual void InitializeParameterEditor(object parameterEditor);
    public virtual void SetParameterEditorVisible(object parameterEditor, bool value);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigureWhereForm : DesignerForm {
    protected string HelpTopic { get; }
    public TypeDescriptionProvider TypeDescriptionProvider { get; }
    public LinqDataSourceConfigureWhereForm(IServiceProvider serviceProvider);
    public LinqDataSourceConfigureWhereForm(IServiceProvider serviceProvider, TypeDescriptionProvider provider);
    protected virtual string get_HelpTopic();
    public TypeDescriptionProvider get_TypeDescriptionProvider();
    public sealed virtual void Register(ILinqDataSourceConfigureWhere configureWhere, Control dataSource);
    internal Dictionary`2<Type, object> CreateParameterList();
    public void OnColumnsComboBoxSelectedIndexChanged(object sender, EventArgs e);
    public sealed virtual void SetWhereFields(List`1<ILinqDataSourcePropertyItem> fields);
    public sealed virtual void SetSelectedWhereField(ILinqDataSourcePropertyItem selected);
    public sealed virtual void SetCanAddSelectExpression(bool enabled);
    public sealed virtual void SetCanRemoveSelectExpression(bool enabled);
    public sealed virtual void SetWhereStatement(LinqDataSourceWhereStatement whereStatement, IServiceProvider serviceProvider, Control dataSource);
    public sealed virtual void AddNewWhereExpressionItem(LinqDataSourceWhereExpression whereExpression, LinqDataSourceWhereStatement whereStatement, IServiceProvider serviceProvider, Control dataSource);
    public sealed virtual void RemoveWhereExpressionItem(LinqDataSourceWhereExpression whereExpression);
    public sealed virtual void SetOperatorsEnabled(bool enabled);
    public sealed virtual void SetOperators(List`1<LinqDataSourceOperators> operators);
    public sealed virtual void SetParametersEnabled(bool enabled);
    public sealed virtual void SetParameterEditorToShow(object editor);
    public sealed virtual void SetExpressionPreviewEnabled(bool enabled);
    public sealed virtual void SetWhereExpressionPreview(string preview);
    public sealed virtual void SetParameterValuePreview(string preview);
    protected virtual void Dispose(bool disposing);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceConfigureWhereHelper : object {
    public LinqDataSourceConfigureWhereHelper(ILinqDataSourceConfigureWhere where, ILinqDataSourceConfigureWhereForm form, ConfigureWhereState state);
    public virtual void UpdateCanAdd();
    public virtual void UpdateCanRemove();
    public virtual void UpdateAvailableOperators();
    internal void UpdateAvailableOperatorsOnly();
    public virtual void UpdateParameterConfigArea();
    internal void UpdateParameterConfigAreaOnly();
    public virtual void UpdateExpression(string paramPreview, bool isHelperText);
    internal virtual string GetParameterExpression(IServiceProvider serviceProvider, Parameter parameter, Control control, Boolean& isHelperText);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceContextChangedEventHandler : MulticastDelegate {
    public LinqDataSourceContextChangedEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, ILinqDataSourceContextTypeItem newContext);
    public virtual IAsyncResult BeginInvoke(object sender, ILinqDataSourceContextTypeItem newContext, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceContextTypeConverter : StringConverter {
    internal LinqDataSourceContextTypeConverter(IServiceProvider serviceProvider);
    public virtual StandardValuesCollection GetStandardValues(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesExclusive(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesSupported(ITypeDescriptorContext context);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceContextTypeItem : object {
    private string System.Web.UI.Design.WebControls.ILinqDataSourceContextTypeItem.DisplayName { get; private set; }
    private Type System.Web.UI.Design.WebControls.ILinqDataSourceContextTypeItem.Type { get; }
    public LinqDataSourceContextTypeItem(Type type);
    public virtual string ToString();
    private sealed virtual override string System.Web.UI.Design.WebControls.ILinqDataSourceContextTypeItem.get_DisplayName();
    private sealed virtual override void System.Web.UI.Design.WebControls.ILinqDataSourceContextTypeItem.set_DisplayName(string value);
    private sealed virtual override Type System.Web.UI.Design.WebControls.ILinqDataSourceContextTypeItem.get_Type();
    private sealed virtual override int System.IComparable<System.Web.UI.Design.WebControls.ILinqDataSourceContextTypeItem>.CompareTo(ILinqDataSourceContextTypeItem other);
}
public class System.Web.UI.Design.WebControls.LinqDataSourceDesigner : DataSourceDesigner {
    internal static string DefaultViewName;
    public DesignerActionListCollection ActionLists { get; }
    public bool CanConfigure { get; }
    public bool CanRefreshSchema { get; }
    [CategoryAttribute("Data")]
[ResourceDescriptionAttribute("LinqDataSource_ContextTypeName")]
[DefaultValueAttribute("")]
[MergablePropertyAttribute("False")]
[TypeConverterAttribute("System.Web.UI.Design.WebControls.LinqDataSourceContextTypeConverter")]
public string ContextTypeName { get; public set; }
    [CategoryAttribute("Data")]
[ResourceDescriptionAttribute("LinqDataSource_DeleteParameters")]
[DefaultValueAttribute("")]
[DesignerSerializationVisibilityAttribute("0")]
[EditorAttribute("System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor", "System.Drawing.Design.UITypeEditor")]
[MergablePropertyAttribute("False")]
[TypeConverterAttribute("System.Web.UI.Design.WebControls.LinqDataSourceInsertUpdateDeleteStatementConverter")]
public string Delete { get; public set; }
    public bool EnableDelete { get; public set; }
    public bool EnableInsert { get; public set; }
    public bool EnableUpdate { get; public set; }
    [CategoryAttribute("Data")]
[ResourceDescriptionAttribute("LinqDataSource_GroupBy")]
[DefaultValueAttribute("")]
[EditorAttribute("System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor", "System.Drawing.Design.UITypeEditor")]
[MergablePropertyAttribute("False")]
public string GroupBy { get; public set; }
    internal ILinqDataSourceDesignerHelper Helper { get; }
    [CategoryAttribute("Data")]
[ResourceDescriptionAttribute("LinqDataSource_InsertParameters")]
[DefaultValueAttribute("")]
[EditorAttribute("System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor", "System.Drawing.Design.UITypeEditor")]
[DesignerSerializationVisibilityAttribute("0")]
[TypeConverterAttribute("System.Web.UI.Design.WebControls.LinqDataSourceInsertUpdateDeleteStatementConverter")]
[MergablePropertyAttribute("False")]
public string Insert { get; public set; }
    [CategoryAttribute("Data")]
[ResourceDescriptionAttribute("LinqDataSource_OrderBy")]
[DefaultValueAttribute("")]
[EditorAttribute("System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor", "System.Drawing.Design.UITypeEditor")]
[MergablePropertyAttribute("False")]
public string OrderBy { get; public set; }
    [CategoryAttribute("Data")]
[ResourceDescriptionAttribute("LinqDataSource_OrderGroupsBy")]
[DefaultValueAttribute("")]
[EditorAttribute("System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor", "System.Drawing.Design.UITypeEditor")]
[MergablePropertyAttribute("False")]
public string OrderGroupsBy { get; public set; }
    [CategoryAttribute("Data")]
[ResourceDescriptionAttribute("LinqDataSource_Select")]
[DefaultValueAttribute("")]
[EditorAttribute("System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor", "System.Drawing.Design.UITypeEditor")]
[MergablePropertyAttribute("False")]
public string Select { get; public set; }
    public IServiceProvider ServiceProvider { get; }
    [CategoryAttribute("Data")]
[ResourceDescriptionAttribute("LinqDataSource_TableName")]
[DefaultValueAttribute("")]
[MergablePropertyAttribute("False")]
[TypeConverterAttribute("System.Web.UI.Design.WebControls.LinqDataSourceTableConverter")]
public string TableName { get; public set; }
    [CategoryAttribute("Data")]
[ResourceDescriptionAttribute("LinqDataSource_UpdateParameters")]
[DefaultValueAttribute("")]
[EditorAttribute("System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor", "System.Drawing.Design.UITypeEditor")]
[DesignerSerializationVisibilityAttribute("0")]
[TypeConverterAttribute("System.Web.UI.Design.WebControls.LinqDataSourceInsertUpdateDeleteStatementConverter")]
[MergablePropertyAttribute("False")]
public string Update { get; public set; }
    [CategoryAttribute("Data")]
[ResourceDescriptionAttribute("LinqDataSource_Where")]
[DefaultValueAttribute("")]
[EditorAttribute("System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor", "System.Drawing.Design.UITypeEditor")]
[MergablePropertyAttribute("False")]
public string Where { get; public set; }
    internal LinqDataSourceDesigner(ILinqDataSourceDesignerHelper helper);
    public virtual DesignerActionListCollection get_ActionLists();
    public virtual bool get_CanConfigure();
    public virtual bool get_CanRefreshSchema();
    public string get_ContextTypeName();
    public void set_ContextTypeName(string value);
    public string get_Delete();
    public void set_Delete(string value);
    public bool get_EnableDelete();
    public void set_EnableDelete(bool value);
    public bool get_EnableInsert();
    public void set_EnableInsert(bool value);
    public bool get_EnableUpdate();
    public void set_EnableUpdate(bool value);
    public string get_GroupBy();
    public void set_GroupBy(string value);
    internal ILinqDataSourceDesignerHelper get_Helper();
    public string get_Insert();
    public void set_Insert(string value);
    public string get_OrderBy();
    public void set_OrderBy(string value);
    public string get_OrderGroupsBy();
    public void set_OrderGroupsBy(string value);
    public string get_Select();
    public void set_Select(string value);
    public IServiceProvider get_ServiceProvider();
    public string get_TableName();
    public void set_TableName(string value);
    public string get_Update();
    public void set_Update(string value);
    public string get_Where();
    public void set_Where(string value);
    public virtual void Configure();
    internal void FireOnDataSourceChanged(EventArgs e);
    internal void FireOnSchemaRefreshed(EventArgs e);
    public virtual DesignerDataSourceView GetView(string viewName);
    public virtual String[] GetViewNames();
    public virtual void Initialize(IComponent component);
    internal bool InternalViewSchemasEquivalent(IDataSourceViewSchema viewSchema1, IDataSourceViewSchema viewSchema2);
    internal virtual object LoadFromDesignerState(string key);
    protected virtual void PreFilterProperties(IDictionary properties);
    public virtual void RefreshSchema(bool preferSilent);
    internal virtual void SaveDesignerState(string key, object value);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceDesignerHelper : object {
    public static string DefaultViewName;
    public static string DesignerStateDataSourceSchemaKey;
    public static string DesignerStateDataSourceContextTypeNameKey;
    public static string DesignerStateDataSourceTableNameKey;
    public bool AutoGenerateWhereClause { get; }
    public bool AutoGenerateOrderByClause { get; }
    public bool CanPage { get; }
    public bool CanSort { get; }
    public string ContextTypeName { get; public set; }
    public bool EnableDelete { get; public set; }
    public bool EnableInsert { get; public set; }
    public bool EnableUpdate { get; public set; }
    internal bool ForceSchemaRetrieval { get; internal set; }
    public string GroupBy { get; public set; }
    public string OrderBy { get; public set; }
    public string OrderGroupsBy { get; public set; }
    public string Select { get; public set; }
    public IServiceProvider ServiceProvider { get; }
    public string TableName { get; public set; }
    internal LinqDesignerDataSourceView View { get; internal set; }
    public string Where { get; public set; }
    public LinqDataSourceDesignerHelper(LinqDataSourceDesigner owner);
    public sealed virtual bool get_AutoGenerateWhereClause();
    public sealed virtual bool get_AutoGenerateOrderByClause();
    public sealed virtual bool get_CanPage();
    public sealed virtual bool get_CanSort();
    public sealed virtual string get_ContextTypeName();
    public sealed virtual void set_ContextTypeName(string value);
    public sealed virtual bool get_EnableDelete();
    public sealed virtual void set_EnableDelete(bool value);
    public sealed virtual bool get_EnableInsert();
    public sealed virtual void set_EnableInsert(bool value);
    public sealed virtual bool get_EnableUpdate();
    public sealed virtual void set_EnableUpdate(bool value);
    internal bool get_ForceSchemaRetrieval();
    internal void set_ForceSchemaRetrieval(bool value);
    public sealed virtual string get_GroupBy();
    public sealed virtual void set_GroupBy(string value);
    public sealed virtual string get_OrderBy();
    public sealed virtual void set_OrderBy(string value);
    public sealed virtual string get_OrderGroupsBy();
    public sealed virtual void set_OrderGroupsBy(string value);
    public sealed virtual string get_Select();
    public sealed virtual void set_Select(string value);
    public sealed virtual IServiceProvider get_ServiceProvider();
    public sealed virtual string get_TableName();
    public sealed virtual void set_TableName(string value);
    internal LinqDesignerDataSourceView get_View();
    internal void set_View(LinqDesignerDataSourceView value);
    public sealed virtual string get_Where();
    public sealed virtual void set_Where(string value);
    internal static void AddAllColumnsSelectEmpty(DataTable dataTable, List`1<ILinqDataSourcePropertyItem> columns);
    internal static void AddDataColumn(DataTable table, ILinqDataSourcePropertyItem column, string columnName, bool isSelectNew);
    public sealed virtual bool CanConfigure(IServiceProvider serviceProvider);
    public sealed virtual bool CanInsertUpdateDelete(ILinqDataSourceDesignerHelper helperHelper);
    public sealed virtual bool CanRefreshSchema(IServiceProvider serviceProvider);
    public sealed virtual ParameterCollection CloneDeleteParameters();
    public sealed virtual ParameterCollection CloneGroupByParameters();
    public sealed virtual ParameterCollection CloneInsertParameters();
    public sealed virtual ParameterCollection CloneOrderByParameters();
    public sealed virtual ParameterCollection CloneOrderGroupsByParameters();
    public sealed virtual ParameterCollection CloneParameters(ParameterCollection original);
    public sealed virtual ParameterCollection CloneSelectParameters();
    public sealed virtual ParameterCollection CloneUpdateParameters();
    public sealed virtual ParameterCollection CloneWhereParameters();
    public LinqDesignerDataSourceView CreateView();
    public sealed virtual ILinqDataSourceContextTypeItem GetContextType(ILinqDataSourceDesignerHelper helperHelper);
    public sealed virtual List`1<ILinqDataSourceContextTypeItem> GetContextTypes(Type baseType, IServiceProvider serviceProvider);
    internal Type GetItType(ILinqDataSourcePropertyItem table, bool isGrouped);
    internal ILinqDataSourcePropertyItem GetKeyColumn(List`1<ILinqDataSourcePropertyItem> columns, string groupBy);
    public sealed virtual LinqDataSourceState GetLinqDataSourceState();
    public sealed virtual List`1<ILinqDataSourcePropertyItem> GetProperties(ILinqDataSourcePropertyItem table, bool isSorted, bool includeEnumerables);
    public virtual List`1<ILinqDataSourcePropertyItem> GetProperties(Type tableType, bool isSorted, bool includeEnumerables);
    public sealed virtual ILinqDataSourcePropertyItem GetTable(ILinqDataSourceDesignerHelper helperHelper);
    public sealed virtual List`1<ILinqDataSourcePropertyItem> GetTables(ILinqDataSourceContextTypeItem context, bool isSorted);
    public virtual List`1<ILinqDataSourcePropertyItem> GetTables(Type contextType, bool isSorted);
    public sealed virtual Type GetType(string typeName, IServiceProvider serviceProvider);
    public sealed virtual LinqDesignerDataSourceView GetView(string viewName);
    public sealed virtual String[] GetViewNames();
    public sealed virtual bool IsDataContext(ILinqDataSourceDesignerHelper helperHelper);
    internal static bool IsPrimitiveType(Type t);
    public sealed virtual bool IsTableTypeTable(ILinqDataSourceDesignerHelper helperHelper);
    public sealed virtual bool IsTableTypeTable(ILinqDataSourceDesignerHelper helperHelper, string contextTypeName, string tableName, IServiceProvider serviceProvider);
    protected virtual object LoadFromDesignerState(string key);
    public sealed virtual DataTable LoadSchema();
    internal static DataColumn MakeAggregateColumn(Type dataType, bool isNullable, string columnName);
    public sealed virtual DataTable MakeDataTable(ILinqDataSourceDesignerHelper helperHelper, ILinqDataSourcePropertyItem table);
    public sealed virtual void PreFilterProperties(IDictionary properties, Type designerType);
    public sealed virtual void RefreshSchema(ILinqDataSourceDesignerHelper helperHelper, bool preferSilent);
    public sealed virtual void RegisterClone(object original, object clone);
    protected virtual void SaveToDesignerState(string key, object value);
    public sealed virtual void SaveSchema(string contextTypeName, string tableName, DataTable schema);
    public sealed virtual void SetDeleteParameterContents(ParameterCollection newParams);
    public sealed virtual void SetGroupByParameterContents(ParameterCollection newParams);
    public sealed virtual void SetInsertParameterContents(ParameterCollection newParams);
    public sealed virtual void SetLinqDataSourceState(LinqDataSourceState state);
    public sealed virtual void SetOrderByParameterContents(ParameterCollection newParams);
    public sealed virtual void SetOrderGroupsByParameterContents(ParameterCollection newParams);
    public sealed virtual void SetSelectParameterContents(ParameterCollection newParams);
    public sealed virtual void SetUpdateParameterContents(ParameterCollection newParams);
    public sealed virtual void SetWhereParameterContents(ParameterCollection newParams);
    public sealed virtual void SetWrapper(ILinqDataSourceWrapper wrapper);
    public Type TableType(ILinqDataSourceDesignerHelper helperHelper, string contextTypeName, string tableName, IServiceProvider serviceProvider);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceGroupByChangedEventHandler : MulticastDelegate {
    public LinqDataSourceGroupByChangedEventHandler(object object, IntPtr method);
    public virtual void Invoke(bool isNone, bool isCustom, ILinqDataSourcePropertyItem groupBy);
    public virtual IAsyncResult BeginInvoke(bool isNone, bool isCustom, ILinqDataSourcePropertyItem groupBy, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal enum System.Web.UI.Design.WebControls.LinqDataSourceGroupByMode : Enum {
    public int value__;
    public static LinqDataSourceGroupByMode GroupByNone;
    public static LinqDataSourceGroupByMode GroupByField;
    public static LinqDataSourceGroupByMode GroupByCustom;
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceInsertUpdateDeleteStatementConverter : TypeConverter {
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
    public virtual PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value, Attribute[] attributes);
    public virtual bool GetPropertiesSupported(ITypeDescriptorContext context);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceOperators : object {
    public static LinqDataSourceOperators None;
    public static LinqDataSourceOperators EQ;
    public static LinqDataSourceOperators NE;
    public static LinqDataSourceOperators LT;
    public static LinqDataSourceOperators LE;
    public static LinqDataSourceOperators GT;
    public static LinqDataSourceOperators GE;
    private static LinqDataSourceOperators();
    public static LinqDataSourceOperators GetOperator(string symbol);
    public virtual string ToString();
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceProjection : object {
    public LinqDataSourceAggregateFunctions AggregateFunction { get; public set; }
    public string Alias { get; public set; }
    public ILinqDataSourcePropertyItem Column { get; public set; }
    public bool IsAliasMandatory { get; }
    public LinqDataSourceProjection(ILinqDataSourcePropertyItem column, LinqDataSourceAggregateFunctions aggregateFunction, bool isAliasMandatory);
    public LinqDataSourceProjection(ILinqDataSourcePropertyItem column, LinqDataSourceAggregateFunctions aggregateFunction, bool isAliasMandatory, string alias);
    public sealed virtual LinqDataSourceAggregateFunctions get_AggregateFunction();
    public sealed virtual void set_AggregateFunction(LinqDataSourceAggregateFunctions value);
    public sealed virtual string get_Alias();
    public sealed virtual void set_Alias(string value);
    public sealed virtual ILinqDataSourcePropertyItem get_Column();
    public sealed virtual void set_Column(ILinqDataSourcePropertyItem value);
    public sealed virtual bool get_IsAliasMandatory();
    internal static string GetAlias(string alias);
    public static List`1<LinqDataSourceAggregateFunctions> GetValidAggregates(Type fieldType);
    internal static ILinqDataSourcePropertyItem GetField(string fieldName, List`1<ILinqDataSourcePropertyItem> fields);
    internal static bool IsValidFieldName(string name, bool mustBeBlank);
    public static LinqDataSourceProjection MakeProjection(string projection, List`1<ILinqDataSourcePropertyItem> fields);
    public virtual string ToString();
}
internal class System.Web.UI.Design.WebControls.LinqDataSourcePropertyItem : object {
    protected string _name;
    protected string _displayName;
    protected bool _isIdentity;
    protected bool _isNullable;
    protected bool _isPrimaryKey;
    protected bool _isProperty;
    protected bool _isReadOnly;
    protected Type _type;
    private string System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.DisplayName { get; private set; }
    private bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.IsIdentity { get; }
    private bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.IsNullable { get; }
    private bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.IsProperty { get; }
    private bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.IsReadOnly { get; }
    private bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.IsPrimaryKey { get; }
    private bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.IsUnique { get; }
    private int System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.Length { get; }
    private string System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.Name { get; }
    private Type System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.Type { get; }
    public LinqDataSourcePropertyItem(FieldInfo fieldInfo);
    public LinqDataSourcePropertyItem(PropertyInfo propertyInfo);
    public LinqDataSourcePropertyItem(string name, string displayName);
    protected void CheckAttributes(MemberInfo memberInfo);
    public static bool IsNullable(Type t);
    protected void SetType(Type type);
    public virtual string ToString();
    private sealed virtual override string System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.get_DisplayName();
    private sealed virtual override void System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.set_DisplayName(string value);
    private sealed virtual override bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.get_IsIdentity();
    private sealed virtual override bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.get_IsNullable();
    private sealed virtual override bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.get_IsProperty();
    private sealed virtual override bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.get_IsReadOnly();
    private sealed virtual override bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.get_IsPrimaryKey();
    private sealed virtual override bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.get_IsUnique();
    private sealed virtual override int System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.get_Length();
    private sealed virtual override string System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.get_Name();
    private sealed virtual override Type System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.get_Type();
    private sealed virtual override int System.IComparable<System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem>.CompareTo(ILinqDataSourcePropertyItem other);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceSelectBuilder : object {
    public static ILinqDataSourcePropertyItem CountField { get; }
    public static ILinqDataSourcePropertyItem KeyField { get; }
    public static ILinqDataSourcePropertyItem ItField { get; }
    public static ILinqDataSourcePropertyItem get_CountField();
    public static ILinqDataSourcePropertyItem get_KeyField();
    public static ILinqDataSourcePropertyItem get_ItField();
    public ParseResult CreateProjection(LinqDataSourceState state, List`1<ILinqDataSourcePropertyItem> tableFields);
    internal ParseResult CreateProjectionGroupByNone(String[] selects, List`1<ILinqDataSourcePropertyItem> tableFields);
    internal ParseResult CreateProjectionGroupByField(String[] selects, List`1<ILinqDataSourcePropertyItem> tableFields);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceSelectionChangedEventArgs : EventArgs {
    public LinqDataSourceGroupByMode GroupByMode { get; }
    public bool HasSelect { get; }
    public LinqDataSourceSelectionChangedEventArgs(LinqDataSourceGroupByMode mode, bool hasSelect);
    public LinqDataSourceGroupByMode get_GroupByMode();
    public bool get_HasSelect();
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceState : object {
    public bool AutoGenerateOrderByClause { get; public set; }
    public bool AutoGenerateWhereClause { get; public set; }
    public string ContextTypeName { get; public set; }
    public ParameterCollection DeleteParameters { get; }
    public bool EnableDelete { get; public set; }
    public bool EnableInsert { get; public set; }
    public bool EnableUpdate { get; public set; }
    public string GroupBy { get; public set; }
    public ParameterCollection GroupByParameters { get; }
    public ParameterCollection InsertParameters { get; }
    public string OrderBy { get; public set; }
    public ParameterCollection OrderByParameters { get; }
    public string OrderGroupsBy { get; public set; }
    public ParameterCollection OrderGroupsByParameters { get; }
    public string Select { get; public set; }
    public ParameterCollection SelectParameters { get; }
    public string TableName { get; public set; }
    public ParameterCollection UpdateParameters { get; }
    public string Where { get; public set; }
    public ParameterCollection WhereParameters { get; }
    public LinqDataSourceState(ParameterCollection whereParameters, ParameterCollection orderByParameters, ParameterCollection groupByParameters, ParameterCollection orderGroupsByParameters, ParameterCollection selectParameters, ParameterCollection insertParameters, ParameterCollection updateParameters, ParameterCollection deleteParameters);
    public bool get_AutoGenerateOrderByClause();
    public void set_AutoGenerateOrderByClause(bool value);
    public bool get_AutoGenerateWhereClause();
    public void set_AutoGenerateWhereClause(bool value);
    public string get_ContextTypeName();
    public void set_ContextTypeName(string value);
    public ParameterCollection get_DeleteParameters();
    public bool get_EnableDelete();
    public void set_EnableDelete(bool value);
    public bool get_EnableInsert();
    public void set_EnableInsert(bool value);
    public bool get_EnableUpdate();
    public void set_EnableUpdate(bool value);
    public string get_GroupBy();
    public void set_GroupBy(string value);
    public ParameterCollection get_GroupByParameters();
    public ParameterCollection get_InsertParameters();
    public string get_OrderBy();
    public void set_OrderBy(string value);
    public ParameterCollection get_OrderByParameters();
    public string get_OrderGroupsBy();
    public void set_OrderGroupsBy(string value);
    public ParameterCollection get_OrderGroupsByParameters();
    public string get_Select();
    public void set_Select(string value);
    public ParameterCollection get_SelectParameters();
    public string get_TableName();
    public void set_TableName(string value);
    public ParameterCollection get_UpdateParameters();
    public string get_Where();
    public void set_Where(string value);
    public ParameterCollection get_WhereParameters();
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor : UITypeEditor {
    internal static bool ContainsParameter(List`1<Parameter> list, string name);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    internal static bool GetAutoGen(string operation, ILinqDataSourceDesignerHelper linqDataSourceHelper);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    internal static bool GetIsInsertUpdateDelete(string operation);
    internal static List`1<Parameter> GetNeededParameters(string statement);
    internal static int GetNextParameterNameLength(string statement, int at);
    internal static string GetOperationAutoGenerateProperty(string operation);
    internal static string GetOperationLabel(string operation);
    internal static string GetOperationParameterProperty(string operation);
    internal static string GetOperationProperty(string operation);
    internal static ParameterCollection GetParameters(string operation, ILinqDataSourceDesignerHelper designerHelper);
    internal static void SetParameters(string operation, ILinqDataSourceDesignerHelper designerHelper, ParameterCollection parameters);
    public bool SetUp(ILinqDataSourceDesignerHelper designerHelper, LinqDataSource linqDataSource, string operation, IServiceProvider serviceProvider, string statement);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceStatementEditorForm : DesignerForm {
    public bool AutoGen { get; }
    protected string HelpTopic { get; }
    public ParameterCollection Parameters { get; }
    public string Statement { get; }
    public LinqDataSourceStatementEditorForm(Control linqDataSource, IServiceProvider serviceProvider, bool hasAutoGen, bool isInsertUpdateDelete, bool isAutoGen, string statement, ParameterCollection parameters, string operationText);
    public sealed virtual bool get_AutoGen();
    protected virtual string get_HelpTopic();
    public sealed virtual ParameterCollection get_Parameters();
    public sealed virtual string get_Statement();
    private sealed virtual override DialogResult System.Web.UI.Design.WebControls.ILinqDataSourceStatementEditorForm.ShowDialog();
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceTableConverter : StringConverter {
    internal LinqDataSourceTableConverter(IServiceProvider serviceProvider);
    public virtual StandardValuesCollection GetStandardValues(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesExclusive(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesSupported(ITypeDescriptorContext context);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceTablePropertyItem : LinqDataSourcePropertyItem {
    private bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.IsProperty { get; }
    public LinqDataSourceTablePropertyItem(string name);
    public LinqDataSourceTablePropertyItem(FieldInfo fieldInfo);
    public LinqDataSourceTablePropertyItem(PropertyInfo propertyInfo);
    internal static Type FindDataObjectType(Type propertyType);
    internal static string GetSignature(FieldInfo fi);
    internal static string GetSignature(PropertyInfo pi);
    internal static string GetSignature(string name, Type type);
    public virtual string ToString();
    internal static string GetTypeDisplay(Type type);
    private sealed virtual override bool System.Web.UI.Design.WebControls.ILinqDataSourcePropertyItem.get_IsProperty();
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceWhereBuilder : object {
    public LinqDataSourceWhereStatement MakeWhereStatement(string where, ParameterCollection clonedWhereParameters);
    public LinqDataSourceWhereExpression MakeWhereExpression(string expression, ParameterCollection whereParams);
    internal static bool IsOperatorChar(char c);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceWhereExpression : object {
    public string FieldName { get; }
    public LinqDataSourceOperators Operator { get; }
    public string ParameterName { get; }
    public LinqDataSourceWhereExpression(string fieldName, string operatorText, string parameterName);
    public string get_FieldName();
    public LinqDataSourceOperators get_Operator();
    public string get_ParameterName();
    public virtual string ToString();
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceWhereStatement : List`1<LinqDataSourceWhereExpression> {
    public ParameterCollection Parameters { get; }
    public ParameterCollection get_Parameters();
    public virtual string ToString();
    public void RemoveExpression(LinqDataSourceWhereExpression expr);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceWizardForm : WizardForm {
    protected string HelpTopic { get; }
    public LinqDataSourceState LinqDataSourceState { get; }
    public LinqDataSourceWizardForm(IServiceProvider serviceProvider, LinqDataSourceState linqDataSourceState, LinqDataSourceDesigner linqDataSourceDesigner);
    protected virtual string get_HelpTopic();
    public LinqDataSourceState get_LinqDataSourceState();
    internal static Bitmap GetBitmap(string resourceName);
    protected virtual void OnFinishButtonClick(object sender, EventArgs e);
    public sealed virtual void SetCanFinish(bool enabled);
    public sealed virtual void SetCanNext(bool enabled);
}
internal class System.Web.UI.Design.WebControls.LinqDataSourceWrapper : object {
    public bool AutoGenerateWhereClause { get; }
    public bool AutoGenerateOrderByClause { get; }
    public bool CanPage { get; }
    public bool CanSort { get; }
    public Control Component { get; }
    public string ContextTypeName { get; public set; }
    public bool EnableDelete { get; public set; }
    public bool EnableInsert { get; public set; }
    public bool EnableUpdate { get; public set; }
    public string GroupBy { get; public set; }
    public string OrderBy { get; public set; }
    public string OrderGroupsBy { get; public set; }
    public string Select { get; public set; }
    public IServiceProvider ServiceProvider { get; }
    public string TableName { get; public set; }
    public string Where { get; public set; }
    public LinqDataSourceWrapper(LinqDataSource linqDataSource, ILinqDataSourceDesignerHelper designerHelper);
    public sealed virtual bool get_AutoGenerateWhereClause();
    public sealed virtual bool get_AutoGenerateOrderByClause();
    public sealed virtual bool get_CanPage();
    public sealed virtual bool get_CanSort();
    public Control get_Component();
    public sealed virtual string get_ContextTypeName();
    public sealed virtual void set_ContextTypeName(string value);
    public sealed virtual bool get_EnableDelete();
    public sealed virtual void set_EnableDelete(bool value);
    public sealed virtual bool get_EnableInsert();
    public sealed virtual void set_EnableInsert(bool value);
    public sealed virtual bool get_EnableUpdate();
    public sealed virtual void set_EnableUpdate(bool value);
    public sealed virtual string get_GroupBy();
    public sealed virtual void set_GroupBy(string value);
    public sealed virtual string get_OrderBy();
    public sealed virtual void set_OrderBy(string value);
    public sealed virtual string get_OrderGroupsBy();
    public sealed virtual void set_OrderGroupsBy(string value);
    public sealed virtual string get_Select();
    public sealed virtual void set_Select(string value);
    public sealed virtual IServiceProvider get_ServiceProvider();
    public sealed virtual string get_TableName();
    public sealed virtual void set_TableName(string value);
    public sealed virtual string get_Where();
    public sealed virtual void set_Where(string value);
    public sealed virtual ParameterCollection CloneDeleteParameters();
    public sealed virtual ParameterCollection CloneGroupByParameters();
    public sealed virtual ParameterCollection CloneInsertParameters();
    public sealed virtual ParameterCollection CloneOrderByParameters();
    public sealed virtual ParameterCollection CloneOrderGroupsByParameters();
    public sealed virtual ParameterCollection CloneParameters(ParameterCollection original);
    public sealed virtual ParameterCollection CloneSelectParameters();
    public sealed virtual ParameterCollection CloneUpdateParameters();
    public sealed virtual ParameterCollection CloneWhereParameters();
    public sealed virtual LinqDataSourceState GetState();
    public void RegisterClone(object original, object clone);
    public sealed virtual void SetDeleteParameterContents(ParameterCollection newParams);
    public sealed virtual void SetGroupByParameterContents(ParameterCollection newParams);
    public sealed virtual void SetInsertParameterContents(ParameterCollection newParams);
    public sealed virtual void SetOrderByParameterContents(ParameterCollection newParams);
    public sealed virtual void SetOrderGroupsByParameterContents(ParameterCollection newParams);
    public sealed virtual void SetSelectParameterContents(ParameterCollection newParams);
    public sealed virtual void SetState(LinqDataSourceState state);
    public sealed virtual void SetUpdateParameterContents(ParameterCollection newParams);
    public sealed virtual void SetWhereParameterContents(ParameterCollection newParams);
}
public class System.Web.UI.Design.WebControls.LinqDesignerDataSourceView : DesignerDataSourceView {
    internal static string DesignerStateDataSourceContextTypeNameKey;
    internal static string DesignerStateDataSourceSchemaKey;
    internal static string DesignerStateDataSourceTableNameKey;
    public bool CanDelete { get; }
    public bool CanInsert { get; }
    internal bool CanModify { get; }
    public bool CanPage { get; }
    public bool CanSort { get; }
    public bool CanUpdate { get; }
    public bool IsDataContext { get; }
    public bool IsTableTypeTable { get; }
    public IDataSourceViewSchema Schema { get; }
    public LinqDesignerDataSourceView(LinqDataSourceDesigner owner);
    public virtual bool get_CanDelete();
    public virtual bool get_CanInsert();
    internal bool get_CanModify();
    public virtual bool get_CanPage();
    public virtual bool get_CanSort();
    public virtual bool get_CanUpdate();
    public bool get_IsDataContext();
    public bool get_IsTableTypeTable();
    public virtual IDataSourceViewSchema get_Schema();
    public virtual IEnumerable GetDesignTimeData(int minimumRows, Boolean& isSampleData);
    internal void SetHelper(ILinqDataSourceDesignerHelper helper);
}
internal class System.Web.UI.Design.WebControls.ListViewActionList : DesignerActionList {
    public bool AllowConfiguration { get; }
    public bool AutoShow { get; public set; }
    [TypeConverterAttribute("System.Web.UI.Design.WebControls.ListViewViewsTypeConverter")]
public string CurrentView { get; public set; }
    public ListViewActionList(ListViewDesigner listViewDesigner);
    public bool get_AllowConfiguration();
    public virtual bool get_AutoShow();
    public virtual void set_AutoShow(bool value);
    public string get_CurrentView();
    public void set_CurrentView(string value);
    public String[] GetAllViewNames();
    public void Configure();
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
internal abstract class System.Web.UI.Design.WebControls.ListViewAutoLayout : object {
    protected static string DynamicItemTemplateString;
    protected static string DynamicItemTemplateStringNoLabel;
    protected static string DynamicInsertItemTemplateString;
    protected static string DynamicInsertItemTemplateStringNoLabel;
    protected static string ItemTemplateString;
    protected static string KeyItemTemplateString;
    protected static string BoolItemTemplateString;
    protected static string EditItemTemplateString;
    protected static string BoolEditItemTemplateString;
    protected static string KeyEditItemTemplateString;
    protected static string InsertItemTemplateString;
    protected static string BoolInsertItemTemplateString;
    protected static string ItemTemplateStringNoLabel;
    protected static string KeyItemTemplateStringNoLabel;
    protected static string BoolItemTemplateStringNoLabel;
    protected static string EditItemTemplateStringNoLabel;
    protected static string BoolEditItemTemplateStringNoLabel;
    protected static string KeyEditItemTemplateStringNoLabel;
    protected static string InsertItemTemplateStringNoLabel;
    protected static string BoolInsertItemTemplateStringNoLabel;
    protected static string ButtonString;
    protected static string InsertButtonWithValidationGroupString;
    protected static string BreakString;
    protected static string ItemPlaceholderContainerID;
    protected static string GroupPlaceholderContainerID;
    protected IDesignerHost DesignerHost { get; }
    public string LayoutName { get; }
    public string ID { get; }
    protected IDataSourceFieldSchema[] FieldSchema { get; }
    public Collection`1<ListViewAutoStyle> Styles { get; }
    public ListViewAutoLayout(IDesignerHost designerHost, IDataSourceFieldSchema[] fieldSchema);
    protected IDesignerHost get_DesignerHost();
    public abstract virtual string get_LayoutName();
    public abstract virtual string get_ID();
    protected IDataSourceFieldSchema[] get_FieldSchema();
    public abstract virtual Collection`1<ListViewAutoStyle> get_Styles();
    public virtual void ApplyLayout(ListView listView, string styleID, bool enableDeleting, bool enableEditing, bool enableInserting, DesignerPagerStyle pagerStyle, bool isDynamic);
    protected virtual ITemplate CreateAlternatingItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected abstract virtual ITemplate CreateEditItemTemplate(ListViewAutoStyle style, bool isDynamic);
    protected abstract virtual ITemplate CreateEmptyDataTemplate(ListViewAutoStyle style);
    protected virtual ITemplate CreateEmptyItemTemplate(ListViewAutoStyle style);
    protected virtual ITemplate CreateGroupTemplate(ListViewAutoStyle style, string itemPlaceholderID);
    protected virtual ITemplate CreateGroupSeparatorTemplate(ListViewAutoStyle style);
    protected abstract virtual ITemplate CreateInsertItemTemplate(ListViewAutoStyle style, bool isDynamic);
    protected virtual ITemplate CreateItemSeparatorTemplate(ListViewAutoStyle style);
    protected abstract virtual ITemplate CreateItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected abstract virtual ITemplate CreateLayoutTemplate(ListViewAutoStyle style, DesignerPagerStyle pagerStyle, string itemPlaceholderID, string groupPlaceholderID, bool hasButtons);
    protected virtual ITemplate CreateSelectedItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected string GetButtonString(string command, string text);
    protected string GetInsertButtonWithValidationGroupString(string text);
    protected static string GetFieldDerivedID(string fieldName);
    public virtual string ToString();
}
internal static class System.Web.UI.Design.WebControls.ListViewAutoLayoutDefinitions : object {
    private static ListViewAutoLayoutDefinitions();
    public static object GetValue(string autoLayoutName, string key);
}
internal static class System.Web.UI.Design.WebControls.ListViewAutoLayouts : object {
    public static Collection`1<ListViewAutoLayout> GetLayouts(IDesignerHost designerHost, IDataSourceViewSchema schema);
}
internal abstract class System.Web.UI.Design.WebControls.ListViewAutoStyle : object {
    public string Name { get; }
    public string ID { get; }
    public abstract virtual string get_Name();
    public abstract virtual string get_ID();
    public int GetIntValue(ListViewAutoLayout layout, string key);
    public string GetStringValue(ListViewAutoLayout layout, string key);
    public virtual string ToString();
}
internal class System.Web.UI.Design.WebControls.ListViewBlueStyle : ListViewAutoStyle {
    public string Name { get; }
    public string ID { get; }
    public virtual string get_Name();
    public virtual string get_ID();
}
internal class System.Web.UI.Design.WebControls.ListViewBulletedListLayout : ListViewAutoLayout {
    public string LayoutName { get; }
    public string ID { get; }
    public Collection`1<ListViewAutoStyle> Styles { get; }
    public ListViewBulletedListLayout(IDesignerHost designerHost, IDataSourceFieldSchema[] fieldSchema);
    public virtual string get_LayoutName();
    public virtual string get_ID();
    public virtual Collection`1<ListViewAutoStyle> get_Styles();
    public virtual void ApplyLayout(ListView listView, string styleID, bool enableDeleting, bool enableEditing, bool enableInserting, DesignerPagerStyle pagerStyle, bool isDynamic);
    protected virtual ITemplate CreateAlternatingItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected virtual ITemplate CreateEditItemTemplate(ListViewAutoStyle style, bool isDynamic);
    protected virtual ITemplate CreateEmptyDataTemplate(ListViewAutoStyle style);
    protected virtual ITemplate CreateInsertItemTemplate(ListViewAutoStyle style, bool isDynamic);
    protected virtual ITemplate CreateItemSeparatorTemplate(ListViewAutoStyle style);
    protected virtual ITemplate CreateItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected virtual ITemplate CreateLayoutTemplate(ListViewAutoStyle style, DesignerPagerStyle pagerStyle, string itemPlaceholderID, string groupPlaceholderID, bool hasButtons);
    protected virtual ITemplate CreateSelectedItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
}
internal class System.Web.UI.Design.WebControls.ListViewColorfulStyle : ListViewAutoStyle {
    public string Name { get; }
    public string ID { get; }
    public virtual string get_Name();
    public virtual string get_ID();
}
internal class System.Web.UI.Design.WebControls.ListViewConfigurationForm : DesignerForm {
    protected string HelpTopic { get; }
    public ListViewConfigurationForm(ListViewDesigner controlDesigner);
    protected virtual string get_HelpTopic();
    protected virtual void Dispose(bool disposing);
    protected virtual void OnActivated(EventArgs e);
    protected virtual void OnClosing(CancelEventArgs e);
}
public class System.Web.UI.Design.WebControls.ListViewDesigner : DataBoundControlDesigner {
    public DesignerActionListCollection ActionLists { get; }
    internal Collection`1<ListViewAutoLayout> AutoLayouts { get; }
    internal bool AllowConfiguration { get; }
    internal int CurrentView { get; internal set; }
    internal bool EssentialTemplatesExist { get; }
    internal bool HasDataSourceWithoutSchema { get; }
    protected int SampleRowCount { get; }
    protected bool UsePreviewControl { get; }
    private static ListViewDesigner();
    public virtual DesignerActionListCollection get_ActionLists();
    internal Collection`1<ListViewAutoLayout> get_AutoLayouts();
    internal bool get_AllowConfiguration();
    internal int get_CurrentView();
    internal void set_CurrentView(int value);
    internal bool get_EssentialTemplatesExist();
    internal bool get_HasDataSourceWithoutSchema();
    protected virtual int get_SampleRowCount();
    protected virtual bool get_UsePreviewControl();
    internal void Configure();
    public virtual string GetDesignTimeHtml();
    public virtual string GetDesignTimeHtml(DesignerRegionCollection regions);
    public virtual string GetEditableDesignerRegionContent(EditableDesignerRegion region);
    protected virtual string GetEmptyDesignTimeHtml();
    internal String[] GetTemplateNames();
    internal List`1<int> GetViewIndices();
    public virtual void Initialize(IComponent component);
    public virtual void OnComponentChanged(object sender, ComponentChangedEventArgs ce);
    protected virtual void OnSchemaRefreshed();
    public virtual void SetEditableDesignerRegionContent(EditableDesignerRegion region, string content);
}
internal class System.Web.UI.Design.WebControls.ListViewFlowLayout : ListViewAutoLayout {
    public string LayoutName { get; }
    public string ID { get; }
    public Collection`1<ListViewAutoStyle> Styles { get; }
    public ListViewFlowLayout(IDesignerHost designerHost, IDataSourceFieldSchema[] fieldSchema);
    public virtual string get_LayoutName();
    public virtual string get_ID();
    public virtual Collection`1<ListViewAutoStyle> get_Styles();
    protected virtual ITemplate CreateAlternatingItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected virtual ITemplate CreateEditItemTemplate(ListViewAutoStyle style, bool isDynamic);
    protected virtual ITemplate CreateEmptyDataTemplate(ListViewAutoStyle style);
    protected virtual ITemplate CreateInsertItemTemplate(ListViewAutoStyle style, bool isDynamic);
    protected virtual ITemplate CreateItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected virtual ITemplate CreateLayoutTemplate(ListViewAutoStyle style, DesignerPagerStyle pagerStyle, string itemPlaceholderID, string groupPlaceholderID, bool hasButtons);
    protected virtual ITemplate CreateSelectedItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
}
internal class System.Web.UI.Design.WebControls.ListViewGridLayout : ListViewAutoLayout {
    public string LayoutName { get; }
    public string ID { get; }
    public Collection`1<ListViewAutoStyle> Styles { get; }
    public ListViewGridLayout(IDesignerHost designerHost, IDataSourceFieldSchema[] fieldSchema);
    public virtual string get_LayoutName();
    public virtual string get_ID();
    public virtual Collection`1<ListViewAutoStyle> get_Styles();
    protected virtual ITemplate CreateAlternatingItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected virtual ITemplate CreateEditItemTemplate(ListViewAutoStyle style, bool isDynamic);
    protected virtual ITemplate CreateEmptyDataTemplate(ListViewAutoStyle style);
    protected virtual ITemplate CreateInsertItemTemplate(ListViewAutoStyle style, bool isDynamic);
    protected virtual ITemplate CreateItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected virtual ITemplate CreateLayoutTemplate(ListViewAutoStyle style, DesignerPagerStyle pagerStyle, string itemPlaceholderID, string groupPlaceholderID, bool hasButtons);
    protected virtual ITemplate CreateSelectedItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
}
internal class System.Web.UI.Design.WebControls.ListViewNoFormatStyle : ListViewAutoStyle {
    public string Name { get; }
    public string ID { get; }
    public virtual string get_Name();
    public virtual string get_ID();
}
internal class System.Web.UI.Design.WebControls.ListViewProfessionalStyle : ListViewAutoStyle {
    public string Name { get; }
    public string ID { get; }
    public virtual string get_Name();
    public virtual string get_ID();
}
internal class System.Web.UI.Design.WebControls.ListViewSingleRowLayout : ListViewAutoLayout {
    public string LayoutName { get; }
    public string ID { get; }
    public Collection`1<ListViewAutoStyle> Styles { get; }
    public ListViewSingleRowLayout(IDesignerHost designerHost, IDataSourceFieldSchema[] fieldSchema);
    public virtual string get_LayoutName();
    public virtual string get_ID();
    public virtual Collection`1<ListViewAutoStyle> get_Styles();
    protected virtual ITemplate CreateAlternatingItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected virtual ITemplate CreateEditItemTemplate(ListViewAutoStyle style, bool isDynamic);
    protected virtual ITemplate CreateEmptyDataTemplate(ListViewAutoStyle style);
    protected virtual ITemplate CreateInsertItemTemplate(ListViewAutoStyle style, bool isDynamic);
    protected virtual ITemplate CreateItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected virtual ITemplate CreateLayoutTemplate(ListViewAutoStyle style, DesignerPagerStyle pagerStyle, string itemPlaceholderID, string groupPlaceholderID, bool hasButtons);
    protected virtual ITemplate CreateSelectedItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
}
internal class System.Web.UI.Design.WebControls.ListViewTiledLayout : ListViewAutoLayout {
    public string LayoutName { get; }
    public string ID { get; }
    public Collection`1<ListViewAutoStyle> Styles { get; }
    public ListViewTiledLayout(IDesignerHost designerHost, IDataSourceFieldSchema[] fieldSchema);
    public virtual string get_LayoutName();
    public virtual string get_ID();
    public virtual Collection`1<ListViewAutoStyle> get_Styles();
    public virtual void ApplyLayout(ListView listView, string styleID, bool enableDeleting, bool enableEditing, bool enableInserting, DesignerPagerStyle pagerStyle, bool isDynamic);
    protected virtual ITemplate CreateAlternatingItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected virtual ITemplate CreateEditItemTemplate(ListViewAutoStyle style, bool isDynamic);
    protected virtual ITemplate CreateEmptyDataTemplate(ListViewAutoStyle style);
    protected virtual ITemplate CreateEmptyItemTemplate(ListViewAutoStyle style);
    protected virtual ITemplate CreateInsertItemTemplate(ListViewAutoStyle style, bool isDynamic);
    protected virtual ITemplate CreateGroupTemplate(ListViewAutoStyle style, string itemPlaceholderID);
    protected virtual ITemplate CreateItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
    protected virtual ITemplate CreateLayoutTemplate(ListViewAutoStyle style, DesignerPagerStyle pagerStyle, string itemPlaceholderID, string groupPlaceholderID, bool hasButtons);
    protected virtual ITemplate CreateSelectedItemTemplate(ListViewAutoStyle style, bool enableDeleting, bool enableEditing, bool hasButtons, bool isDynamic);
}
internal class System.Web.UI.Design.WebControls.ListViewViewsTypeConverter : TypeConverter {
    public virtual StandardValuesCollection GetStandardValues(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesExclusive(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesSupported(ITypeDescriptorContext context);
}
internal class System.Web.UI.Design.WebControls.NextPreviousPagerStyle : DesignerPagerStyle {
    public string Name { get; }
    public NextPreviousPagerStyle(ISite site);
    public virtual string get_Name();
    public virtual void ApplyStyle(DataPager pager);
}
internal class System.Web.UI.Design.WebControls.NullPagerStyle : DesignerPagerStyle {
    public string Name { get; }
    public NullPagerStyle(ISite site);
    public virtual string get_Name();
    public virtual void ApplyStyle(DataPager pager);
    public virtual DataPager CreatePager();
    public virtual bool IsPagerType(DataPager pager);
}
internal class System.Web.UI.Design.WebControls.NumericPagerStyle : DesignerPagerStyle {
    public string Name { get; }
    public NumericPagerStyle(ISite site);
    public virtual string get_Name();
    public virtual void ApplyStyle(DataPager pager);
}
internal class System.Web.UI.Design.WebControls.PagedControlIDConverter : StringConverter {
    public virtual StandardValuesCollection GetStandardValues(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesExclusive(ITypeDescriptorContext context);
    public virtual bool GetStandardValuesSupported(ITypeDescriptorContext context);
    protected virtual bool IsValidPagedControl(IComponent component);
}
internal class System.Web.UI.Design.WebControls.SelectionChangedEventHandler : MulticastDelegate {
    public SelectionChangedEventHandler(object object, IntPtr method);
    public virtual void Invoke(LinqDataSourceSelectionChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(LinqDataSourceSelectionChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal static class ThisAssembly : object {
    internal static string Title;
    internal static string Description;
    internal static string DefaultAlias;
    internal static string Copyright;
    internal static string Version;
    internal static string InformationalVersion;
    internal static string DailyBuildNumberStr;
    internal static string BuildRevisionStr;
    internal static int DailyBuildNumber;
}
