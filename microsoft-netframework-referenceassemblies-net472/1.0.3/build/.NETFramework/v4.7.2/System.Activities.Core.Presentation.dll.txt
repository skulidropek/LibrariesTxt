internal class System.Activities.Core.Presentation.ArgumentIdentifierTrimConverter : object {
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
internal class System.Activities.Core.Presentation.AssignDesigner : ActivityDesigner {
    internal ExpressionTextBox assignToExpression;
    internal ExpressionTextBox assignValueExpression;
    protected virtual void OnInitialized(EventArgs e);
    internal static void RegisterMetadata(AttributeTableBuilder builder);
    protected virtual void OnModelItemChanged(object newItem);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.CancellationScopeDesigner : ActivityDesigner {
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.CaseDesigner : WorkflowViewElement {
    internal CaseDesigner controlRoot;
    internal CaseKeyBox caseKey;
    public Action`1<CaseKeyBox> FocusSelf { get; }
    public Action`1<CaseKeyBox> get_FocusSelf();
    public static void RegisterMetadata(AttributeTableBuilder builder);
    protected virtual void OnModelItemChanged(object newItem);
    protected virtual void OnMouseDown(MouseButtonEventArgs e);
    protected virtual void OnMouseUp(MouseButtonEventArgs e);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
internal Delegate _CreateDelegate(Type delegateType, string handler);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.CaseKeyBox : UserControl {
    public static DependencyProperty DisplayHintTextProperty;
    public static DependencyProperty LabelTextProperty;
    public static DependencyProperty ValueProperty;
    public static DependencyProperty ValueTypeProperty;
    public static DependencyProperty EditorAutomationNameProperty;
    public static DependencyProperty ComboBoxAutomationNameProperty;
    public static RoutedEvent ValueCommittedEvent;
    public static RoutedEvent EditCancelledEvent;
    public static DependencyProperty CaseKeyValidationCallbackProperty;
    public static DependencyProperty ErrorCallbackProperty;
    public static DependencyProperty CommitExplicitlyProperty;
    internal CaseKeyBox controlRoot;
    internal ContentPresenter contentPresenter;
    public CaseKeyValidationCallbackDelegate CaseKeyValidationCallback { get; public set; }
    public Action`1<CaseKeyBox> ErrorCallback { get; public set; }
    public bool CommitExplicitly { get; public set; }
    public string LabelText { get; public set; }
    public bool DisplayHintText { get; public set; }
    public object Value { get; public set; }
    public Type ValueType { get; public set; }
    public string ComboBoxAutomationName { get; public set; }
    public string EditorAutomationName { get; public set; }
    public CaseKeyBoxViewModel ViewModel { get; public set; }
    private static CaseKeyBox();
    public void add_ValueCommitted(RoutedEventHandler value);
    public void remove_ValueCommitted(RoutedEventHandler value);
    public virtual void OnValueCommitted();
    public void add_EditCancelled(RoutedEventHandler value);
    public void remove_EditCancelled(RoutedEventHandler value);
    public virtual void OnEditCancelled();
    public sealed virtual CaseKeyValidationCallbackDelegate get_CaseKeyValidationCallback();
    public void set_CaseKeyValidationCallback(CaseKeyValidationCallbackDelegate value);
    public Action`1<CaseKeyBox> get_ErrorCallback();
    public void set_ErrorCallback(Action`1<CaseKeyBox> value);
    public bool get_CommitExplicitly();
    public void set_CommitExplicitly(bool value);
    public string get_LabelText();
    public void set_LabelText(string value);
    public sealed virtual bool get_DisplayHintText();
    public void set_DisplayHintText(bool value);
    public sealed virtual object get_Value();
    public sealed virtual void set_Value(object value);
    public sealed virtual Type get_ValueType();
    public void set_ValueType(Type value);
    public string get_ComboBoxAutomationName();
    public void set_ComboBoxAutomationName(string value);
    public string get_EditorAutomationName();
    public void set_EditorAutomationName(string value);
    public sealed virtual void RegainFocus();
    [CompilerGeneratedAttribute]
public CaseKeyBoxViewModel get_ViewModel();
    [CompilerGeneratedAttribute]
public void set_ViewModel(CaseKeyBoxViewModel value);
    public bool CommitChanges();
    public void CancelChanges();
    public void ResetText();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.CaseKeyBoxIsEnabledConverter : object {
    public sealed virtual object Convert(Object[] values, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual Object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture);
}
internal class System.Activities.Core.Presentation.CaseKeyBoxViewModel : DependencyObject {
    public static DependencyProperty ComboBoxIsEditableProperty;
    public static DependencyProperty ComboBoxVisibilityProperty;
    public static DependencyProperty ComboBoxItemsProperty;
    public static DependencyProperty DataTemplateNameProperty;
    public static DependencyProperty TextProperty;
    public static DependencyProperty TextBoxVisibilityProperty;
    public static string BoxesTemplate;
    public static string LabelTemplate;
    public bool ComboBoxIsEditable { get; public set; }
    public ObservableCollection`1<string> ComboBoxItems { get; public set; }
    public Visibility ComboBoxVisibility { get; public set; }
    public string DataTemplateName { get; public set; }
    public string Text { get; public set; }
    public Visibility TextBoxVisibility { get; public set; }
    public bool IsBoxOnly { get; public set; }
    public CaseKeyBoxViewModel(ICaseKeyBoxView view);
    private static CaseKeyBoxViewModel();
    public bool get_ComboBoxIsEditable();
    public void set_ComboBoxIsEditable(bool value);
    public ObservableCollection`1<string> get_ComboBoxItems();
    public void set_ComboBoxItems(ObservableCollection`1<string> value);
    public Visibility get_ComboBoxVisibility();
    public void set_ComboBoxVisibility(Visibility value);
    public string get_DataTemplateName();
    public void set_DataTemplateName(string value);
    public string get_Text();
    public void set_Text(string value);
    public Visibility get_TextBoxVisibility();
    public void set_TextBoxVisibility(Visibility value);
    [CompilerGeneratedAttribute]
public bool get_IsBoxOnly();
    [CompilerGeneratedAttribute]
public void set_IsBoxOnly(bool value);
    public bool OnEnterPressed();
    public void OnEscapePressed();
    public void OnLabelGotFocus();
    public bool OnLostFocus();
    public void OnValueChanged();
    public void OnValueTypeChanged();
    public void SaveOldText();
    public bool CanResolveInputText(String& reason);
    public bool TextHasBeenChanged();
    public void ResetText();
}
internal class System.Activities.Core.Presentation.CaseKeyValidationCallbackDelegate : MulticastDelegate {
    public CaseKeyValidationCallbackDelegate(object object, IntPtr method);
    public virtual bool Invoke(object obj, String& reason);
    public virtual IAsyncResult BeginInvoke(object obj, String& reason, AsyncCallback callback, object object);
    public virtual bool EndInvoke(String& reason, IAsyncResult result);
}
internal class System.Activities.Core.Presentation.CaseLabelVisibilityConverter : object {
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
internal class System.Activities.Core.Presentation.CatchDesigner : WorkflowViewElement {
    internal CatchDesigner controlRoot;
    internal TextBlock exceptionTypeTextBlock;
    internal TextBox exceptionArgumentNameBox;
    internal WorkflowItemPresenter actionPresenter;
    public string ExceptionTypeShortName { get; }
    public string ExceptionTypeFullName { get; }
    internal static void RegisterMetadata(AttributeTableBuilder builder);
    public string get_ExceptionTypeShortName();
    public string get_ExceptionTypeFullName();
    protected virtual void OnMouseDown(MouseButtonEventArgs e);
    protected virtual void OnMouseUp(MouseButtonEventArgs e);
    protected virtual string GetAutomationIdMemberName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal static class System.Activities.Core.Presentation.ComboBoxHelper : object {
    public static bool ShouldFilterUnnecessaryComboBoxEvent(ComboBox comboBox);
    public static void SynchronizeComboBoxSelection(ComboBox comboBox, string value);
}
internal class System.Activities.Core.Presentation.CompensableActivityDesigner : ActivityDesigner {
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public enum System.Activities.Core.Presentation.ConnectionPointType : Enum {
    public int value__;
    public static ConnectionPointType Default;
    public static ConnectionPointType Incoming;
    public static ConnectionPointType Outgoing;
}
internal class System.Activities.Core.Presentation.DelegateArgumentsValueEditor : DialogPropertyValueEditor {
    public virtual void ShowDialog(PropertyValue propertyValue, IInputElement commandSource);
}
public class System.Activities.Core.Presentation.DesignerMetadata : object {
    public sealed virtual void Register();
}
internal class System.Activities.Core.Presentation.DisplayNameConverter : object {
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
internal class System.Activities.Core.Presentation.DoWhileDesigner : ActivityDesigner {
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.DynamicActivityPropertyChooser : UserControl {
    internal ComboBox comboBox;
    public DynamicActivityPropertyChooserViewModel Model { get; public set; }
    unknown ModelItemCollection Properties {public set; }
    unknown Predicate`1<DynamicActivityProperty> Filter {public set; }
    public string SelectedPropertyName { get; public set; }
    public bool IsUpdatingDropDownItems { get; }
    [CompilerGeneratedAttribute]
public void add_SelectedPropertyNameChanged(SelectedPropertyNameChangedEventHandler value);
    [CompilerGeneratedAttribute]
public void remove_SelectedPropertyNameChanged(SelectedPropertyNameChangedEventHandler value);
    public DynamicActivityPropertyChooserViewModel get_Model();
    public void set_Model(DynamicActivityPropertyChooserViewModel value);
    public void set_Properties(ModelItemCollection value);
    public void set_Filter(Predicate`1<DynamicActivityProperty> value);
    public string get_SelectedPropertyName();
    public void set_SelectedPropertyName(string value);
    public bool get_IsUpdatingDropDownItems();
    protected virtual void OnInitialized(EventArgs e);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.DynamicActivityPropertyChooserViewModel : ViewModel {
    private ModelItemCollection Properties { get; public set; }
    private Predicate`1<DynamicActivityProperty> Filter { get; public set; }
    public ReadOnlyCollection`1<DynamicActivityProperty> DropDownItems { get; private set; }
    public bool IsUpdatingDropDownItems { get; private set; }
    public string SelectedPropertyName { get; public set; }
    private ModelItemCollection get_Properties();
    public void set_Properties(ModelItemCollection value);
    private Predicate`1<DynamicActivityProperty> get_Filter();
    public void set_Filter(Predicate`1<DynamicActivityProperty> value);
    public ReadOnlyCollection`1<DynamicActivityProperty> get_DropDownItems();
    private void set_DropDownItems(ReadOnlyCollection`1<DynamicActivityProperty> value);
    [CompilerGeneratedAttribute]
public bool get_IsUpdatingDropDownItems();
    [CompilerGeneratedAttribute]
private void set_IsUpdatingDropDownItems(bool value);
    public string get_SelectedPropertyName();
    public void set_SelectedPropertyName(string value);
    public void UpdateDropDownItems();
}
internal class System.Activities.Core.Presentation.DynamicActivityPropertyToTooltipConverter : object {
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
internal class System.Activities.Core.Presentation.ExpandableItemShowExpandedMultiValueConverter : object {
    public sealed virtual object Convert(Object[] values, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual Object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture);
}
internal class System.Activities.Core.Presentation.ExpandableItemWrapper : object {
    public bool IsExpanded { get; public set; }
    public bool IsPinned { get; public set; }
    public ModelItem Item { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public bool get_IsExpanded();
    public void set_IsExpanded(bool value);
    public bool get_IsPinned();
    public void set_IsPinned(bool value);
    [CompilerGeneratedAttribute]
public ModelItem get_Item();
    [CompilerGeneratedAttribute]
public void set_Item(ModelItem value);
    internal void SetPinState(bool isPinned);
}
internal class System.Activities.Core.Presentation.ExpressionToExpressionTextConverter : object {
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
public class System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1 : object {
    public sealed virtual Activity Create(DependencyObject target);
}
public class System.Activities.Core.Presentation.Factories.ParallelForEachWithBodyFactory`1 : object {
    public sealed virtual Activity Create(DependencyObject target);
}
public class System.Activities.Core.Presentation.Factories.PickWithTwoBranchesFactory : object {
    public sealed virtual Activity Create(DependencyObject target);
}
public class System.Activities.Core.Presentation.Factories.StateMachineWithInitialStateFactory : object {
    public sealed virtual Activity Create(DependencyObject target);
}
internal class System.Activities.Core.Presentation.FakeRoot : object {
    public StartNode StartNode { get; public set; }
    [CompilerGeneratedAttribute]
public StartNode get_StartNode();
    [CompilerGeneratedAttribute]
public void set_StartNode(StartNode value);
}
public class System.Activities.Core.Presentation.FinalState : object {
}
internal class System.Activities.Core.Presentation.FlowchartConnectionPointsAdorner : ConnectionPointsAdorner {
    public FlowchartConnectionPointsAdorner(UIElement adornedElement, List`1<ConnectionPoint> connectionPointsToShow, bool isParentShapeSelected, bool isTextRightToLeft);
    protected virtual void OnRender(DrawingContext drawingContext);
}
[ActivityDesignerOptionsAttribute]
internal class System.Activities.Core.Presentation.FlowchartDesigner : ActivityDesigner {
    public static DependencyProperty DroppingTypeResolvingOptionsProperty;
    public static DependencyProperty ConnectionPointsProperty;
    public static DependencyProperty LinkModelItemProperty;
    public static DependencyProperty FlowElementModelItemProperty;
    public static DependencyProperty FlowchartWidthProperty;
    public static DependencyProperty FlowchartHeightProperty;
    public static DependencyProperty TrueConnectionPointProperty;
    public static DependencyProperty FalseConnectionPointProperty;
    public static DependencyProperty ShowAllConditionsProperty;
    public static RoutedCommand SetAsStartNodeCommand;
    public static RoutedCommand ShowAllConditionsCommand;
    public static RoutedCommand HideAllConditionsCommand;
    internal Dictionary`2<ModelItem, UIElement> modelElement;
    internal FreeFormPanel panel;
    internal FlowchartDesigner flowchartDesigner;
    internal ContentPresenter flowchartContentPresenter;
    public TypeResolvingOptions DroppingTypeResolvingOptions { get; public set; }
    public bool IsDefaultContainer { get; }
    internal bool IsResizing { get; internal set; }
    public static double FlowNodeCaptionFontSize { get; }
    public static FontFamily FlowNodeCaptionFontFamily { get; }
    public static FontStyle FlowNodeCaptionFontStyle { get; }
    public static Typeface FlowElementCaptionTypeface { get; }
    public UIElement StartSymbol { get; public set; }
    public double FlowchartWidth { get; public set; }
    public double FlowchartHeight { get; public set; }
    public bool ShowAllConditions { get; public set; }
    private bool IsRightToLeft { get; }
    private static FlowchartDesigner();
    public sealed virtual TypeResolvingOptions get_DroppingTypeResolvingOptions();
    public void set_DroppingTypeResolvingOptions(TypeResolvingOptions value);
    public sealed virtual void OnItemMoved(ModelItem modelItem);
    public sealed virtual object OnItemsCopied(List`1<ModelItem> itemsToCopy);
    public sealed virtual List`1<ModelItem> SortSelectedItems(List`1<ModelItem> selectedItems);
    public sealed virtual void OnItemsMoved(List`1<ModelItem> movedItems);
    public sealed virtual object OnItemsCut(List`1<ModelItem> itemsToCut);
    public sealed virtual void OnItemsDelete(List`1<ModelItem> itemsToDelete);
    public void OnItemsDelete(List`1<ModelItem> itemsToDelete, HashSet`1<ModelItem> updatedItems);
    public sealed virtual bool CanPasteItems(List`1<object> itemsToPaste);
    public sealed virtual void OnItemsPasted(List`1<object> itemsToPaste, List`1<object> metaData, Point pastePoint, WorkflowViewElement pastePointReference);
    public sealed virtual bool get_IsDefaultContainer();
    internal void FindBestMatchConnectionPointPair(List`1<ConnectionPoint> srcConnPoints, List`1<ConnectionPoint> destConnPoints, ConnectionPoint& srcConnPoint, ConnectionPoint& destConnPoint);
    internal ConnectionPoint FindClosestConnectionPoint(ConnectionPoint srcConnPoint, List`1<ConnectionPoint> destConnPoints, Double& minDist);
    internal ConnectionPoint FindClosestConnectionPoint(Point srcConnPointLocation, List`1<ConnectionPoint> destConnPoints, Double& minDist);
    internal int NumberOfIncomingLinks(UIElement designer);
    public static bool Pack(T[] toPack, Func`2<T, bool> isPacked);
    protected virtual void OnModelItemChanged(object newItem);
    internal Connector GetLinkOnCanvas(ModelItem srcFlowElementModelItem, ModelItem destflowElementModelItem, string propertyName);
    internal IFlowSwitchLink DeleteLink(Connector link, bool isMoveOrAutoSplit, HashSet`1<ModelItem> referenceUpdatedModelItems);
    internal bool CreateLinkGesture(ConnectionPoint sourceConnectionPoint, ConnectionPoint destConnectionPoint, String& errorMessage, IFlowSwitchLink caseKey);
    internal bool CreateLinkGesture(ConnectionPoint sourceConnectionPoint, ConnectionPoint destConnectionPoint, String& errorMessage, bool isLinkValidDueToLinkMove, IFlowSwitchLink caseKey);
    internal bool CreateLinkGesture(ConnectionPoint sourceConnectionPoint, UIElement dest, Point mouseLocation, String& errorMessage, bool isLinkValidDueToLinkMove, IFlowSwitchLink caseKey);
    internal bool CreateLinkGesture(ConnectionPoint sourceConnectionPoint, UIElement dest, String& errorMessage, bool isLinkValidDueToLinkMove, IFlowSwitchLink caseKey);
    internal bool CreateLinkGesture(UIElement source, ConnectionPoint destConnectionPoint, Point mouseLocation, String& errorMessage, bool isLinkValidDueToLinkMove, IFlowSwitchLink caseKey);
    internal bool CreateLinkGesture(UIElement source, UIElement dest, String& errorMessage, IFlowSwitchLink caseKey);
    [CompilerGeneratedAttribute]
internal bool get_IsResizing();
    [CompilerGeneratedAttribute]
internal void set_IsResizing(bool value);
    public static double get_FlowNodeCaptionFontSize();
    public static FontFamily get_FlowNodeCaptionFontFamily();
    public static FontStyle get_FlowNodeCaptionFontStyle();
    public static Typeface get_FlowElementCaptionTypeface();
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [CompilerGeneratedAttribute]
public UIElement get_StartSymbol();
    [CompilerGeneratedAttribute]
public void set_StartSymbol(UIElement value);
    internal static List`1<ConnectionPoint> GetConnectionPoints(DependencyObject obj);
    internal static ConnectionPoint GetFalseConnectionPoint(DependencyObject obj);
    internal static ModelItem GetLinkModelItem(DependencyObject obj);
    internal static ModelItem GetFlowElementModelItem(DependencyObject obj);
    internal static ConnectionPoint GetTrueConnectionPoint(DependencyObject obj);
    public double get_FlowchartWidth();
    public void set_FlowchartWidth(double value);
    public double get_FlowchartHeight();
    public void set_FlowchartHeight(double value);
    public bool get_ShowAllConditions();
    public void set_ShowAllConditions(bool value);
    protected virtual void OnInitialized(EventArgs e);
    private bool get_IsRightToLeft();
    internal static void DropActivityBelow(ViewStateService viewStateService, ModelItem modelItem, Activity activity, double interval);
    internal static ConnectionPoint GetDestinationConnectionPointForAutoConnect(UIElement dest, ConnectionPoint srcConnPoint);
    public sealed virtual void DoAutoConnect(DragEventArgs e, UIElement targetElement, AutoConnectDirections direction);
    public sealed virtual AutoConnectDirections GetDirectionsAllowed(DragEventArgs e, UIElement targetElement);
    public sealed virtual bool CanAutoSplit(DragEventArgs e);
    internal static int GetConnectionPointIndex(UIElement element, ConnectionPoint pnt);
    internal static ConnectionPoint GetConnectionPointFromIndex(UIElement element, int index);
    internal UIElement GetView(ModelItem item);
    public sealed virtual void DoAutoSplit(DragEventArgs e, Connector connector);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
public static class System.Activities.Core.Presentation.FlowchartDesignerCommands : object {
    public static RoutedCommand ConnectNodesCommand;
    private static FlowchartDesignerCommands();
}
internal class System.Activities.Core.Presentation.FlowchartExpressionAdorner : Adorner {
    public FlowchartExpressionAdorner(UIElement adornedElement);
    protected virtual void OnRender(DrawingContext drawingContext);
    public static string GetExpressionString(UIElement adornedElement);
}
internal class System.Activities.Core.Presentation.FlowchartExpressionAutomationPeer : UIElementAutomationPeer {
    public FlowchartExpressionAutomationPeer(FrameworkElement owner, AutomationPeer wrappedAutomationPeer);
    protected virtual string GetItemStatusCore();
    protected virtual string GetClassNameCore();
    protected virtual string GetNameCore();
    protected virtual string GetAutomationIdCore();
}
internal class System.Activities.Core.Presentation.FlowchartFreeFormPanel : FreeFormPanel {
}
internal class System.Activities.Core.Presentation.FlowchartResizeGrip : Control {
    public static DependencyProperty IconProperty;
    public static DependencyProperty ParentFlowchartDesignerProperty;
    public static DependencyProperty ParentGridProperty;
    public static DependencyProperty DisabledProperty;
    public DrawingBrush Icon { get; public set; }
    public FlowchartDesigner ParentFlowchartDesigner { get; public set; }
    public Grid ParentGrid { get; public set; }
    public bool Disabled { get; public set; }
    private static FlowchartResizeGrip();
    public DrawingBrush get_Icon();
    public void set_Icon(DrawingBrush value);
    public FlowchartDesigner get_ParentFlowchartDesigner();
    public void set_ParentFlowchartDesigner(FlowchartDesigner value);
    public Grid get_ParentGrid();
    public void set_ParentGrid(Grid value);
    public bool get_Disabled();
    public void set_Disabled(bool value);
    protected virtual void OnInitialized(EventArgs e);
    protected virtual void OnPreviewMouseLeftButtonDown(MouseButtonEventArgs e);
    protected virtual void OnMouseMove(MouseEventArgs args);
    protected virtual void OnPreviewMouseLeftButtonUp(MouseButtonEventArgs e);
}
internal class System.Activities.Core.Presentation.FlowchartSizeFeature : ViewStateAttachedPropertyFeature {
    public static string WidthPropertyName;
    public static string HeightPropertyName;
    public static double DefaultWidth;
    public static double DefaultHeight;
    protected IEnumerable`1<AttachedPropertyInfo> AttachedProperties { get; }
    [IteratorStateMachineAttribute("System.Activities.Core.Presentation.FlowchartSizeFeature/<get_AttachedProperties>d__5")]
protected virtual IEnumerable`1<AttachedPropertyInfo> get_AttachedProperties();
}
internal class System.Activities.Core.Presentation.FlowDecisionDesigner : WorkflowViewElement {
    public static DependencyProperty ExpressionButtonVisibilityProperty;
    public static DependencyProperty ExpressionButtonColorProperty;
    internal FlowDecisionDesigner controlRoot;
    internal Grid rootGrid;
    internal TextBox displayNameTextBox;
    internal Button defaultAnnotationIndicator;
    public Visibility ExpressionButtonVisibility { get; public set; }
    public Brush ExpressionButtonColor { get; public set; }
    public bool ExpressionShown { get; }
    private static FlowDecisionDesigner();
    public Visibility get_ExpressionButtonVisibility();
    public void set_ExpressionButtonVisibility(Visibility value);
    public Brush get_ExpressionButtonColor();
    public void set_ExpressionButtonColor(Brush value);
    public bool get_ExpressionShown();
    public static void RegisterMetadata(AttributeTableBuilder builder);
    protected virtual AutomationPeer OnCreateAutomationPeer();
    protected internal virtual void OnEditAnnotation();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.FlowDecisionLabelFeature : ViewStateAttachedPropertyFeature {
    protected IEnumerable`1<AttachedPropertyInfo> AttachedProperties { get; }
    [IteratorStateMachineAttribute("System.Activities.Core.Presentation.FlowDecisionLabelFeature/<get_AttachedProperties>d__1")]
protected virtual IEnumerable`1<AttachedPropertyInfo> get_AttachedProperties();
}
internal class System.Activities.Core.Presentation.FlowSwitchCaseEditorDialog : WorkflowElementDialog {
    public string CaseName { get; }
    public object Case { get; }
    public FlowSwitchCaseEditorDialog(ModelItem activity, EditingContext context, DependencyObject owner, string title, Type genericType);
    private static FlowSwitchCaseEditorDialog();
    protected virtual void OnKeyDown(KeyEventArgs e);
    public string get_CaseName();
    public object get_Case();
}
internal class System.Activities.Core.Presentation.FlowSwitchCaseLink`1 : FlowSwitchLink`1<T> {
    [BrowsableAttribute("True")]
public T Case { get; public set; }
    public FlowSwitchCaseLink`1(ModelItem flowSwitchMI, T caseValue, bool isDefault);
    public T get_Case();
    public void set_Case(T value);
}
internal class System.Activities.Core.Presentation.FlowSwitchDefaultLink`1 : FlowSwitchLink`1<T> {
    public string DefaultCaseDisplayName { get; public set; }
    public FlowSwitchDefaultLink`1(ModelItem flowSwitchMI, T caseValue, bool isDefault);
    private static FlowSwitchDefaultLink`1();
    public sealed virtual string get_DefaultCaseDisplayName();
    public sealed virtual void set_DefaultCaseDisplayName(string value);
    public virtual MultiBinding CreateConnectorLabelTextBinding();
}
internal class System.Activities.Core.Presentation.FlowSwitchDefaultLinkFeature : Feature {
    public virtual void Initialize(EditingContext context, Type modelType);
}
internal class System.Activities.Core.Presentation.FlowSwitchDesigner : WorkflowViewElement {
    public static DependencyProperty ExpressionButtonVisibilityProperty;
    public static DependencyProperty ExpressionButtonColorProperty;
    internal FlowSwitchDesigner controlRoot;
    internal Grid rootGrid;
    internal TextBox displayNameTextBox;
    internal Button defaultAnnotationIndicator;
    public Visibility ExpressionButtonVisibility { get; public set; }
    public Brush ExpressionButtonColor { get; public set; }
    public bool ExpressionShown { get; }
    private static FlowSwitchDesigner();
    public Visibility get_ExpressionButtonVisibility();
    public void set_ExpressionButtonVisibility(Visibility value);
    public Brush get_ExpressionButtonColor();
    public void set_ExpressionButtonColor(Brush value);
    public bool get_ExpressionShown();
    public static void RegisterMetadata(AttributeTableBuilder builder);
    protected virtual AutomationPeer OnCreateAutomationPeer();
    protected internal virtual void OnEditAnnotation();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.FlowSwitchLabelFeature : ViewStateAttachedPropertyFeature {
    public static string DefaultCaseDisplayNamePropertyName;
    public static string DefaultCaseDisplayNameDefaultValue;
    protected IEnumerable`1<AttachedPropertyInfo> AttachedProperties { get; }
    [IteratorStateMachineAttribute("System.Activities.Core.Presentation.FlowSwitchLabelFeature/<get_AttachedProperties>d__3")]
protected virtual IEnumerable`1<AttachedPropertyInfo> get_AttachedProperties();
}
internal abstract class System.Activities.Core.Presentation.FlowSwitchLink`1 : DependencyObject {
    protected bool internalChange;
    protected ModelItem flowSwitchModelItem;
    [BrowsableAttribute("False")]
public ModelItem ModelItem { get; public set; }
    public CaseKeyValidationCallbackDelegate ValidateCaseKey { get; }
    [BrowsableAttribute("False")]
public FlowNode ParentFlowSwitch { get; public set; }
    public bool IsDefaultCase { get; public set; }
    [BrowsableAttribute("False")]
public string CaseName { get; }
    [BrowsableAttribute("False")]
public object CaseObject { get; public set; }
    [BrowsableAttribute("False")]
public T Case { get; public set; }
    [BrowsableAttribute("False")]
public Type GenericType { get; }
    public FlowSwitchLink`1(ModelItem flowSwitchMI, T caseValue, bool isDefault);
    private static FlowSwitchLink`1();
    [CompilerGeneratedAttribute]
public sealed virtual ModelItem get_ModelItem();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ModelItem(ModelItem value);
    public CaseKeyValidationCallbackDelegate get_ValidateCaseKey();
    public sealed virtual FlowNode get_ParentFlowSwitch();
    public sealed virtual void set_ParentFlowSwitch(FlowNode value);
    public sealed virtual bool get_IsDefaultCase();
    public sealed virtual void set_IsDefaultCase(bool value);
    public sealed virtual string get_CaseName();
    public sealed virtual object get_CaseObject();
    public void set_CaseObject(object value);
    public T get_Case();
    public void set_Case(T value);
    public Type get_GenericType();
    protected bool IsUndoRedoInProgress();
    public virtual MultiBinding CreateConnectorLabelTextBinding();
}
internal class System.Activities.Core.Presentation.FlowSwitchLinkMultiValueConverter : object {
    public sealed virtual object Convert(Object[] values, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual Object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture);
}
internal class System.Activities.Core.Presentation.ForEachDesigner : ActivityDesigner {
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal static class System.Activities.Core.Presentation.FreeFormPanelUtilities : object {
    internal static bool IsRightToLeft(Visual visual);
}
internal static class System.Activities.Core.Presentation.FxTrace : object {
    public static bool ShouldTraceCritical { get; }
    public static bool TracingEnabled { get; }
    public static bool ShouldTraceError { get; }
    public static bool ShouldTraceInformation { get; }
    public static bool ShouldTraceVerbose { get; }
    public static bool ShouldTraceWarning { get; }
    public static bool ShouldTraceCriticalToTraceSource { get; }
    public static bool ShouldTraceErrorToTraceSource { get; }
    public static bool ShouldTraceInformationToTraceSource { get; }
    public static bool ShouldTraceVerboseToTraceSource { get; }
    public static bool ShouldTraceWarningToTraceSource { get; }
    public static ExceptionTrace Exception { get; }
    public static EtwDiagnosticTrace Trace { get; }
    public static EventLogger EventLog { get; }
    private static FxTrace();
    public static void UpdateEventDefinitions(EventDescriptor[] eventDescriptors, UInt16[] end2EndEvents);
    public static bool IsEventEnabled(int index);
    public static bool get_ShouldTraceCritical();
    public static bool get_TracingEnabled();
    public static bool get_ShouldTraceError();
    public static bool get_ShouldTraceInformation();
    public static bool get_ShouldTraceVerbose();
    public static bool get_ShouldTraceWarning();
    public static bool get_ShouldTraceCriticalToTraceSource();
    public static bool get_ShouldTraceErrorToTraceSource();
    public static bool get_ShouldTraceInformationToTraceSource();
    public static bool get_ShouldTraceVerboseToTraceSource();
    public static bool get_ShouldTraceWarningToTraceSource();
    public static ExceptionTrace get_Exception();
    public static EtwDiagnosticTrace get_Trace();
    public static EventLogger get_EventLog();
}
internal static class System.Activities.Core.Presentation.GenericFlowSwitchHelper : object {
    public static string FlowSwitchCasesKeyIdentifier { get; }
    public static string FlowSwitchNullCaseKeyIdentifier { get; }
    public static string FlowSwitchEmptyCaseKeyIdentifier { get; }
    private static GenericFlowSwitchHelper();
    public static string get_FlowSwitchCasesKeyIdentifier();
    public static string get_FlowSwitchNullCaseKeyIdentifier();
    public static string get_FlowSwitchEmptyCaseKeyIdentifier();
    public static void Copy(Type genericType, FlowNode currentFlowElement, Dictionary`2<FlowNode, FlowNode> clonedFlowElements);
    public static void GenericCopy(FlowNode currentFlowElement, Dictionary`2<FlowNode, FlowNode> clonedFlowElements);
    public static void ReferenceCopy(Type genericType, FlowNode currentFlowElement, Dictionary`2<FlowNode, ModelItem> modelItems, Dictionary`2<FlowNode, FlowNode> clonedFlowElements);
    public static void GenericRemapFlowSwitch(FlowNode currentFlowElement, ModelItem modelItem, Dictionary`2<FlowNode, FlowNode> oldNewFlowNodeMap);
    public static bool IsGenericFlowSwitch(Type type);
    public static IFlowSwitchLink CreateFlowSwitchLink(Type flowSwitchType, ModelItem currentMI, object caseValue, bool isDefault);
    public static IFlowSwitchLink CreateGenericFlowSwitchLink(ModelItem currentMI, T caseValue, bool isDefault);
    public static string GetCaseName(ModelProperty casesProperties, Type type, String& errorMessage);
    public static string GenericGetCaseName(ModelItemCollection collection, String& errorMessage);
    public static bool IsIntegralType(Type type);
    public static string GetString(object key, Type type);
    public static object GetObject(string caseString, Type genericType);
    public static bool ContainsCaseKey(ModelProperty casesProp, object key);
    public static ModelItem GetCaseModelItem(ModelProperty casesProp, object key);
    public static object GetCase(ModelItemCollection itemsCollection, object key);
    public static ModelItem[] GetCaseKeys(ModelProperty casesProp);
    public static void RemoveCase(ModelProperty casesProp, object key);
    public static void AddCase(ModelProperty casesPropperties, object newKey, object newCase);
    public static bool CanBeGeneratedUniquely(Type typeArgument);
    public static bool CheckEquality(object value, Type targetType);
    public static bool ValidateCaseKey(object obj, ModelProperty casesProp, Type genericType, String& reason);
}
public class System.Activities.Core.Presentation.GenericTypeArgumentConverter : object {
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
internal class System.Activities.Core.Presentation.HintTextConverter : object {
    public sealed virtual object Convert(Object[] values, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual Object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture);
}
internal class System.Activities.Core.Presentation.HintTextMaxWidthConverter : object {
    public sealed virtual object Convert(object o, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object o, Type targetType, object parameter, CultureInfo culture);
}
internal interface System.Activities.Core.Presentation.ICaseKeyBoxView {
    public bool DisplayHintText { get; }
    public object Value { get; public set; }
    public Type ValueType { get; }
    public CaseKeyValidationCallbackDelegate CaseKeyValidationCallback { get; }
    public abstract virtual void RegainFocus();
    public abstract virtual void OnValueCommitted();
    public abstract virtual void OnEditCancelled();
    public abstract virtual bool get_DisplayHintText();
    public abstract virtual object get_Value();
    public abstract virtual void set_Value(object value);
    public abstract virtual Type get_ValueType();
    public abstract virtual CaseKeyValidationCallbackDelegate get_CaseKeyValidationCallback();
}
internal class System.Activities.Core.Presentation.IfElseDesigner : ActivityDesigner {
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal interface System.Activities.Core.Presentation.IFlowSwitchDefaultLink {
    public string DefaultCaseDisplayName { get; public set; }
    public abstract virtual string get_DefaultCaseDisplayName();
    public abstract virtual void set_DefaultCaseDisplayName(string value);
}
internal interface System.Activities.Core.Presentation.IFlowSwitchLink {
    [BrowsableAttribute("False")]
public ModelItem ModelItem { get; public set; }
    [BrowsableAttribute("False")]
public FlowNode ParentFlowSwitch { get; public set; }
    public bool IsDefaultCase { get; public set; }
    public string CaseName { get; }
    public object CaseObject { get; }
    public abstract virtual ModelItem get_ModelItem();
    public abstract virtual void set_ModelItem(ModelItem value);
    public abstract virtual FlowNode get_ParentFlowSwitch();
    public abstract virtual void set_ParentFlowSwitch(FlowNode value);
    public abstract virtual bool get_IsDefaultCase();
    public abstract virtual void set_IsDefaultCase(bool value);
    public abstract virtual string get_CaseName();
    public abstract virtual object get_CaseObject();
    public abstract virtual MultiBinding CreateConnectorLabelTextBinding();
}
internal class System.Activities.Core.Presentation.InteropDesigner : ActivityDesigner {
    public static Func`2<Type, bool> Filter { get; }
    public static string InteropTypeAssemblyQualifiedName { get; }
    private static InteropDesigner();
    public static Func`2<Type, bool> get_Filter();
    public static string get_InteropTypeAssemblyQualifiedName();
    protected virtual void OnModelItemChanged(object newItem);
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.InvokeDelegateDesigner : ActivityDesigner {
    internal DynamicActivityPropertyChooser chooser;
    public static void RegisterMetadata(AttributeTableBuilder builder);
    protected virtual void OnInitialized(EventArgs e);
    protected virtual void OnReadOnlyChanged(bool isReadOnly);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
internal Delegate _CreateDelegate(Type delegateType, string handler);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.InvokeDelegateValidationFeature : DesignTimeValidationFeature {
    protected Type ApplyTo { get; }
    protected IList`1<Constraint> DesignTimeConstraints { get; }
    protected virtual Type get_ApplyTo();
    protected virtual IList`1<Constraint> get_DesignTimeConstraints();
    public virtual void Initialize(EditingContext context, Type modelType);
}
internal class System.Activities.Core.Presentation.InvokeMethodDesigner : ActivityDesigner {
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.IsLastSelectedItemConverter : object {
    public sealed virtual object Convert(Object[] values, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual Object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture);
}
internal class System.Activities.Core.Presentation.IsStateRootDesignerConverter : object {
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
internal static class System.Activities.Core.Presentation.LocalAppContextSwitches : object {
    public static bool UseLegacyAccessibilityFeatures { get; }
    public static bool UseLegacyAccessibilityFeatures2 { get; }
    public static bool get_UseLegacyAccessibilityFeatures();
    public static bool get_UseLegacyAccessibilityFeatures2();
}
public class System.Activities.Core.Presentation.LocationChangedEventArgs : EventArgs {
    public Point NewLocation { get; }
    public LocationChangedEventArgs(Point newLocation);
    public Point get_NewLocation();
}
internal class System.Activities.Core.Presentation.MaxValueConverter : object {
    public sealed virtual object Convert(Object[] values, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual Object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture);
}
internal static class System.Activities.Core.Presentation.MorphHelpers : object {
    public static object ArgumentMorphHelper(ModelItem originalValue, ModelProperty newModelProperty);
    internal static Argument MorphArgument(ModelItem originalValue, Type targetType);
    public static object ActivityActionMorphHelper(ModelItem originalValue, ModelProperty newModelProperty);
    public static object ActivityFuncMorphHelper(ModelItem originalValue, ModelProperty newModelProperty);
}
internal class System.Activities.Core.Presentation.NoPersistScopeDesigner : ActivityDesigner {
    public static string BodyPropertyName;
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.NotConverter : object {
    public sealed virtual object Convert(object o, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object o, Type targetType, object parameter, CultureInfo culture);
}
internal class System.Activities.Core.Presentation.ParallelDesigner : ActivityDesigner {
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.ParallelSeparator : UserControl {
    public static DependencyProperty AllowedItemTypeProperty;
    public static DependencyProperty ContextProperty;
    internal ParallelSeparator ParallelSeparatorControl;
    internal BeginStoryboard Collapse_BeginStoryboardOnDrop;
    internal Grid grid;
    internal Rectangle dropTarget;
    public Type AllowedItemType { get; public set; }
    public EditingContext Context { get; public set; }
    private static ParallelSeparator();
    public Type get_AllowedItemType();
    public void set_AllowedItemType(Type value);
    public EditingContext get_Context();
    public void set_Context(EditingContext value);
    protected virtual void OnDragEnter(DragEventArgs e);
    protected virtual void OnDragLeave(DragEventArgs e);
    protected virtual void OnDrop(DragEventArgs e);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.PickBranchDesigner : ActivityDesigner {
    public static void RegisterMetadata(AttributeTableBuilder builder);
    protected virtual string GetAutomationIdMemberName();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.PickDesigner : ActivityDesigner {
    public static RoutedCommand CreateBranchCommand;
    private static PickDesigner();
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.PickValidationErrorSourceLocator : object {
    public sealed virtual List`1<object> FindSourceDetailFromActivity(Activity errorSource, object errorSourceDetail);
    public sealed virtual void ReplaceParentChainWithSource(Activity parentActivity, List`1<object> parentChain);
}
internal class System.Activities.Core.Presentation.PickValidationErrorSourceLocatorFeature : ValidationErrorSourceLocatorFeature {
    protected IValidationErrorSourceLocator ValidationErrorSourceLocator { get; }
    protected virtual IValidationErrorSourceLocator get_ValidationErrorSourceLocator();
}
internal static class System.Activities.Core.Presentation.PropertyNames : object {
    public static string ObjectInitializationAction;
    public static string Action;
    public static string ActionArgument;
    public static string ActionArgument1;
    public static string ActionArgument2;
    public static string ActionHandler;
    public static string AssignSequence;
    public static string VarDataReader;
    public static string VarRecord;
    public static string NameProperty;
    public static string AssignTo;
    public static string AssignValue;
    public static string DisplayName;
    public static string Parameters;
    public static string ArgumentName;
    public static string Expression;
    public static string VBExpressionText;
    public static string ConnectionContext;
    public static string ResultsCollection;
    public static string RowsAffected;
    public static string ParameterDirection;
    public static string ArgumentType;
    public static string Body;
    public static string ExceptionType;
    public static string ResultProperty;
    private static PropertyNames();
}
internal class System.Activities.Core.Presentation.RegisterMetadataDelayedWorker : object {
    public Dictionary`2<string, List`1<Action`1<AttributeTableBuilder>>> DelayedWorkItems { get; }
    public Dictionary`2<string, List`1<Action`1<AttributeTableBuilder>>> get_DelayedWorkItems();
    public void RegisterMetadataDelayed(string assemblyName, Action`1<AttributeTableBuilder> delayedWork);
    public void WorkNowIfApplicable();
}
internal class System.Activities.Core.Presentation.ReorderableListEditor : UserControl {
    public static DependencyProperty ItemTemplateProperty;
    public static DependencyProperty ListProperty;
    public static DependencyProperty SelectedListItemProperty;
    internal ListBox listBox;
    public DataTemplate ItemTemplate { get; public set; }
    public ObservableCollection`1<ExpandableItemWrapper> List { get; public set; }
    public ExpandableItemWrapper SelectedListItem { get; public set; }
    private static ReorderableListEditor();
    public DataTemplate get_ItemTemplate();
    public void set_ItemTemplate(DataTemplate value);
    public ObservableCollection`1<ExpandableItemWrapper> get_List();
    public void set_List(ObservableCollection`1<ExpandableItemWrapper> value);
    public ExpandableItemWrapper get_SelectedListItem();
    public void set_SelectedListItem(ExpandableItemWrapper value);
    protected virtual void OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs e);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.SelectedPropertyNameChangedEventArgs : EventArgs {
    public string PropertyName { get; private set; }
    public SelectedPropertyNameChangedEventArgs(string propertyName);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
private void set_PropertyName(string value);
}
internal class System.Activities.Core.Presentation.SelectedPropertyNameChangedEventHandler : MulticastDelegate {
    public SelectedPropertyNameChangedEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, SelectedPropertyNameChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, SelectedPropertyNameChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class System.Activities.Core.Presentation.SequenceDesigner : ActivityDesigner {
    protected virtual void OnModelItemChanged(object newItem);
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class System.Activities.Core.Presentation.SR : object {
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string AddActivityHintText { get; }
    internal static string AddNewCase { get; }
    internal static string AutoConnect { get; }
    internal static string AutoSplit { get; }
    internal static string CannotConstructConnectionSegment { get; }
    internal static string CannotCreateLink { get; }
    internal static string CannotCreateTransitionFromAncestorToDescendant { get; }
    internal static string CannotCreateTransitionToCompositeState { get; }
    internal static string CannotPasteSendReplyOrReceiveReply { get; }
    internal static string CannotSetCompositeStateAsInitialState { get; }
    internal static string CannotSetFinalStateAsInitialState { get; }
    internal static string CaseFormat { get; }
    internal static string ChangeCaseValue { get; }
    internal static string ChangeTypeCollectionEditingScopeDesc { get; }
    internal static string ClearInitialState { get; }
    internal static string ConnectionAutomationPropertiesName { get; }
    internal static string ConnectionNotFoundInConfig { get; }
    internal static string CopyTransitionToolTip { get; }
    internal static string CorrelationInitializerNotSupported { get; }
    internal static string CreateParameter { get; }
    internal static string CreateTransition { get; }
    internal static string CustomConnectionStringLabel { get; }
    internal static string DefaultCaseExists { get; }
    internal static string DefineContent { get; }
    internal static string DelegateArgumentMissing { get; }
    internal static string DelegateArgumentsDirectionalityMismatch { get; }
    internal static string DelegateInArgumentTypeMismatch { get; }
    internal static string DelegateOutArgumentTypeMismatch { get; }
    internal static string DuplicateCaseKey { get; }
    internal static string DuplicateKeyName { get; }
    internal static string EditingCommand { get; }
    internal static string EditingConnectionSettings { get; }
    internal static string EditingParameters { get; }
    internal static string EditParametersUndoUnitName { get; }
    internal static string EditStateToolTip { get; }
    internal static string EditTransitionTooltip { get; }
    internal static string EmptyName { get; }
    internal static string EqualityError { get; }
    internal static string ErrorMessageBoxTitle { get; }
    internal static string ExpressionDefaultText { get; }
    internal static string FCCreateLink { get; }
    internal static string FCDeleteLink { get; }
    internal static string FCDeleteShape { get; }
    internal static string FCFalseBranchExists { get; }
    internal static string FCFlowConditionLinkError { get; }
    internal static string FCFlowConditionLinksExist { get; }
    internal static string FCFlowDecisionFalseMarker { get; }
    internal static string FCFlowDecisionTrueMarker { get; }
    internal static string FCInvalidLink { get; }
    internal static string FCLinkMove { get; }
    internal static string FCNextLinkDefined { get; }
    internal static string FCResizeUndoUnitName { get; }
    internal static string FCTrueBranchExists { get; }
    internal static string FillDelegateArguments { get; }
    internal static string FlowSwitchCaseRenameEditingScopeDesc { get; }
    internal static string FlowSwitchDefaultCaseDisplayNameEditingScopeDesc { get; }
    internal static string InitialStateConnectionPointTooltip { get; }
    internal static string InvalidFlowSwitchCaseMessage { get; }
    internal static string ItemMove { get; }
    internal static string MoveLink { get; }
    internal static string NewCaseHint { get; }
    internal static string NotSupportedCaseKeyStringConversion { get; }
    internal static string NotSupportedEncoding { get; }
    internal static string NullName { get; }
    internal static string NullOrEmptyKeyName { get; }
    internal static string ParameterDialogTitle { get; }
    internal static string PasteTransitionOnFinalState { get; }
    internal static string PasteTransitionOnNonStateItem { get; }
    internal static string PasteTransitionToolTip { get; }
    internal static string PasteTransitionWithoutAvailableConnectionPoints { get; }
    internal static string PasteTransitionWithoutDestinationState { get; }
    internal static string PropertyIsNotAConcreteActivityDelegate { get; }
    internal static string PropertyIsNotAnActivityDelegate { get; }
    internal static string PropertyReferenceChange { get; }
    internal static string PropertyReferenceNotResolved { get; }
    internal static string ReorderItems { get; }
    internal static string SetInitialState { get; }
    internal static string SharedTriggerToolTip { get; }
    internal static string StateLinkButtonToolTip { get; }
    internal static string StateMachineResize { get; }
    internal static string StateResize { get; }
    internal static string TransitionConnectionPointTooltip { get; }
    internal static string UnrootedRequestInReceiveReply { get; }
    internal static string UnrootedRequestInSendReply { get; }
    internal static string ViewMessageContent { get; }
    internal static string ViewParameterContent { get; }
    internal static string WrongNumberOfArgumentsForActivityDelegate { get; }
    internal static string ParallelSeparatorAutomationName { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_AddActivityHintText();
    internal static string get_AddNewCase();
    internal static string get_AutoConnect();
    internal static string get_AutoSplit();
    internal static string get_CannotConstructConnectionSegment();
    internal static string get_CannotCreateLink();
    internal static string get_CannotCreateTransitionFromAncestorToDescendant();
    internal static string get_CannotCreateTransitionToCompositeState();
    internal static string get_CannotPasteSendReplyOrReceiveReply();
    internal static string get_CannotSetCompositeStateAsInitialState();
    internal static string get_CannotSetFinalStateAsInitialState();
    internal static string get_CaseFormat();
    internal static string get_ChangeCaseValue();
    internal static string get_ChangeTypeCollectionEditingScopeDesc();
    internal static string get_ClearInitialState();
    internal static string get_ConnectionAutomationPropertiesName();
    internal static string get_ConnectionNotFoundInConfig();
    internal static string get_CopyTransitionToolTip();
    internal static string get_CorrelationInitializerNotSupported();
    internal static string get_CreateParameter();
    internal static string get_CreateTransition();
    internal static string get_CustomConnectionStringLabel();
    internal static string get_DefaultCaseExists();
    internal static string get_DefineContent();
    internal static string get_DelegateArgumentMissing();
    internal static string get_DelegateArgumentsDirectionalityMismatch();
    internal static string get_DelegateInArgumentTypeMismatch();
    internal static string get_DelegateOutArgumentTypeMismatch();
    internal static string get_DuplicateCaseKey();
    internal static string get_DuplicateKeyName();
    internal static string get_EditingCommand();
    internal static string get_EditingConnectionSettings();
    internal static string get_EditingParameters();
    internal static string get_EditParametersUndoUnitName();
    internal static string get_EditStateToolTip();
    internal static string get_EditTransitionTooltip();
    internal static string get_EmptyName();
    internal static string get_EqualityError();
    internal static string get_ErrorMessageBoxTitle();
    internal static string get_ExpressionDefaultText();
    internal static string get_FCCreateLink();
    internal static string get_FCDeleteLink();
    internal static string get_FCDeleteShape();
    internal static string get_FCFalseBranchExists();
    internal static string get_FCFlowConditionLinkError();
    internal static string get_FCFlowConditionLinksExist();
    internal static string get_FCFlowDecisionFalseMarker();
    internal static string get_FCFlowDecisionTrueMarker();
    internal static string get_FCInvalidLink();
    internal static string get_FCLinkMove();
    internal static string get_FCNextLinkDefined();
    internal static string get_FCResizeUndoUnitName();
    internal static string get_FCTrueBranchExists();
    internal static string get_FillDelegateArguments();
    internal static string get_FlowSwitchCaseRenameEditingScopeDesc();
    internal static string get_FlowSwitchDefaultCaseDisplayNameEditingScopeDesc();
    internal static string get_InitialStateConnectionPointTooltip();
    internal static string get_InvalidFlowSwitchCaseMessage();
    internal static string get_ItemMove();
    internal static string get_MoveLink();
    internal static string get_NewCaseHint();
    internal static string get_NotSupportedCaseKeyStringConversion();
    internal static string get_NotSupportedEncoding();
    internal static string get_NullName();
    internal static string get_NullOrEmptyKeyName();
    internal static string get_ParameterDialogTitle();
    internal static string get_PasteTransitionOnFinalState();
    internal static string get_PasteTransitionOnNonStateItem();
    internal static string get_PasteTransitionToolTip();
    internal static string get_PasteTransitionWithoutAvailableConnectionPoints();
    internal static string get_PasteTransitionWithoutDestinationState();
    internal static string get_PropertyIsNotAConcreteActivityDelegate();
    internal static string get_PropertyIsNotAnActivityDelegate();
    internal static string get_PropertyReferenceChange();
    internal static string get_PropertyReferenceNotResolved();
    internal static string get_ReorderItems();
    internal static string get_SetInitialState();
    internal static string get_SharedTriggerToolTip();
    internal static string get_StateLinkButtonToolTip();
    internal static string get_StateMachineResize();
    internal static string get_StateResize();
    internal static string get_TransitionConnectionPointTooltip();
    internal static string get_UnrootedRequestInReceiveReply();
    internal static string get_UnrootedRequestInSendReply();
    internal static string get_ViewMessageContent();
    internal static string get_ViewParameterContent();
    internal static string get_WrongNumberOfArgumentsForActivityDelegate();
    internal static string get_ParallelSeparatorAutomationName();
}
internal class System.Activities.Core.Presentation.StartNode : object {
}
internal class System.Activities.Core.Presentation.StartSymbol : WorkflowViewElement {
    public static DependencyProperty TextProperty;
    internal ContentControl startIcon;
    public string Text { get; public set; }
    private static StartSymbol();
    public string get_Text();
    public void set_Text(string value);
    public static StartSymbol CreateStartSymbol(EditingContext context);
    protected virtual void OnContextMenuOpening(ContextMenuEventArgs e);
    protected virtual void OnPreviewKeyDown(KeyEventArgs e);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.StateConnectionPointToolTip : UserControl {
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.StateContainerEditor : UserControl {
    public static DependencyProperty DroppingTypeResolvingOptionsProperty;
    internal static string ConnectorLocationViewStateKey;
    internal static string SrcConnectionPointIndexStateKey;
    internal static string DestConnectionPointIndexStateKey;
    internal static string StateContainerWidthViewStateKey;
    internal static string StateContainerHeightViewStateKey;
    internal static string DefaultStateDisplayName;
    internal static string DefaultFinalStateDisplayName;
    internal static int ConnectionPointNum;
    public static DependencyProperty StateContainerWidthProperty;
    public static DependencyProperty StateContainerHeightProperty;
    public static DependencyProperty PanelMinWidthProperty;
    public static DependencyProperty PanelMinHeightProperty;
    public static DependencyProperty ConnectorModelItemProperty;
    public static DependencyProperty ConnectionPointsProperty;
    public static DependencyProperty ModelItemProperty;
    public static DependencyProperty IsReadOnlyProperty;
    public static DependencyProperty IsStateMachineContainerProperty;
    internal StateContainerEditor stateContainerEditor;
    internal Grid stateContainerGrid;
    internal StateMachineFreeFormPanel panel;
    public TypeResolvingOptions DroppingTypeResolvingOptions { get; public set; }
    public bool IsDefaultContainer { get; }
    internal static ModelItem CopiedTransitionDestinationState { get; internal set; }
    internal FreeFormPanel Panel { get; }
    public double StateContainerWidth { get; public set; }
    public double StateContainerHeight { get; public set; }
    public double PanelMinWidth { get; public set; }
    public double PanelMinHeight { get; public set; }
    public ModelItem ModelItem { get; public set; }
    protected bool IsReadOnly { get; private set; }
    protected bool IsStateMachineContainer { get; private set; }
    public EditingContext Context { get; public set; }
    private bool IsRightToLeft { get; }
    private static StateContainerEditor();
    public sealed virtual TypeResolvingOptions get_DroppingTypeResolvingOptions();
    public void set_DroppingTypeResolvingOptions(TypeResolvingOptions value);
    public sealed virtual bool get_IsDefaultContainer();
    public sealed virtual void OnItemMoved(ModelItem modelItem);
    public sealed virtual object OnItemsCopied(List`1<ModelItem> itemsToCopy);
    public sealed virtual object OnItemsCut(List`1<ModelItem> itemsToCut);
    public sealed virtual void OnItemsDelete(List`1<ModelItem> itemsToDelete);
    public sealed virtual bool CanPasteItems(List`1<object> itemsToPaste);
    internal bool CanPasteTransition(ModelItem destinationStateItem, String& errorMessage, ModelItem[] sourceStateItems);
    public sealed virtual void OnItemsPasted(List`1<object> itemsToPaste, List`1<object> metaData, Point pastePoint, WorkflowViewElement pastePointReference);
    public sealed virtual List`1<ModelItem> SortSelectedItems(List`1<ModelItem> selectedItems);
    public sealed virtual void OnItemsMoved(List`1<ModelItem> movedItems);
    internal static ModelItem GetConnectorModelItem(DependencyObject obj);
    internal static List`1<ConnectionPoint> GetConnectionPoints(DependencyObject obj);
    internal static List`1<Connector> GetAttachedConnectors(UIElement shape);
    internal static ModelItem GetStateMachineModelItem(ModelItem modelItem);
    internal static ModelItem GetParentStateModelItemForTransition(ModelItem transitionModelItem);
    internal static UIElement GetStateView(ModelItem stateModelItem);
    internal static ConnectionPoint GetClosestConnectionPoint(ConnectionPoint srcConnPoint, List`1<ConnectionPoint> destConnPoints, Double& minDist);
    internal static List`1<ConnectionPoint> GetEmptyConnectionPoints(UIElement designer);
    internal static bool IsFinalState(ModelItem modelItem);
    internal static string GenerateTransitionName(ModelItem stateMachineModelItem);
    internal int DeleteConnectorModelItem(Connector connector, bool rerouting);
    internal ConnectorCreationResult CreateConnectorGesture(ConnectionPoint sourceConnectionPoint, ConnectionPoint destConnectionPoint, Connector referenceConnector, bool isConnectorStartMoved);
    internal ConnectorCreationResult CreateConnectorGesture(ConnectionPoint sourceConnectionPoint, UIElement dest, Connector referenceConnector, bool isConnectorStartMoved);
    internal ConnectorCreationResult CreateConnectorGesture(UIElement source, ConnectionPoint destConnectionPoint, Connector referenceConnector, bool isConnectorStartMoved);
    internal void StoreShapeSizeWithUndoRecursively(ModelItem modelItem);
    [CompilerGeneratedAttribute]
internal static ModelItem get_CopiedTransitionDestinationState();
    [CompilerGeneratedAttribute]
internal static void set_CopiedTransitionDestinationState(ModelItem value);
    internal FreeFormPanel get_Panel();
    public double get_StateContainerWidth();
    public void set_StateContainerWidth(double value);
    public double get_StateContainerHeight();
    public void set_StateContainerHeight(double value);
    public double get_PanelMinWidth();
    public void set_PanelMinWidth(double value);
    public double get_PanelMinHeight();
    public void set_PanelMinHeight(double value);
    public ModelItem get_ModelItem();
    public void set_ModelItem(ModelItem value);
    protected bool get_IsReadOnly();
    private void set_IsReadOnly(bool value);
    protected bool get_IsStateMachineContainer();
    private void set_IsStateMachineContainer(bool value);
    [CompilerGeneratedAttribute]
public EditingContext get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(EditingContext value);
    protected virtual void OnInitialized(EventArgs e);
    private bool get_IsRightToLeft();
    internal StateContainerEditor GetStateMachineContainerEditor();
    public void StoreAttachedConnectorViewStates(UIElement element);
    public sealed virtual void DoAutoConnect(DragEventArgs e, UIElement targetElement, AutoConnectDirections direction);
    public sealed virtual AutoConnectDirections GetDirectionsAllowed(DragEventArgs e, UIElement targetElement);
    public sealed virtual bool CanAutoSplit(DragEventArgs e);
    public sealed virtual void DoAutoSplit(DragEventArgs e, Connector connector);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
internal Delegate _CreateDelegate(Type delegateType, string handler);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.StateContainerResizeGrip : Control {
    public static DependencyProperty IconProperty;
    public static DependencyProperty ParentStateContainerEditorProperty;
    public static DependencyProperty DisabledProperty;
    public DrawingBrush Icon { get; public set; }
    public StateContainerEditor ParentStateContainerEditor { get; public set; }
    public bool Disabled { get; public set; }
    private static StateContainerResizeGrip();
    public DrawingBrush get_Icon();
    public void set_Icon(DrawingBrush value);
    public StateContainerEditor get_ParentStateContainerEditor();
    public void set_ParentStateContainerEditor(StateContainerEditor value);
    public bool get_Disabled();
    public void set_Disabled(bool value);
    protected virtual void OnInitialized(EventArgs e);
    protected virtual void OnGotMouseCapture(MouseEventArgs e);
    protected virtual void OnLostMouseCapture(MouseEventArgs e);
    protected virtual void OnPreviewMouseLeftButtonDown(MouseButtonEventArgs e);
    protected virtual void OnMouseMove(MouseEventArgs args);
    protected virtual void OnPreviewMouseLeftButtonUp(MouseButtonEventArgs e);
}
internal class System.Activities.Core.Presentation.StateDesigner : ActivityDesigner {
    internal static string EntryPropertyName;
    internal static string ExitPropertyName;
    internal static string IsFinalPropertyName;
    internal static string DisplayNamePropertyName;
    internal static string TransitionsPropertyName;
    internal static string ChildStatesPropertyName;
    internal static string VariablesPropertyName;
    public static RoutedCommand SetAsInitialCommand;
    internal StateDesigner stateDesigner;
    internal ContentPresenter stateContentPresenter;
    private static StateDesigner();
    protected virtual void OnInitialized(EventArgs e);
    public static void RegisterMetadata(AttributeTableBuilder builder);
    protected virtual void OnShowExpandedChanged(bool newValue);
    protected virtual void OnModelItemChanged(object newItem);
    protected internal virtual string GetAutomationItemStatus();
    internal bool IsFinalState();
    public FreeFormPanel GetStateMachineFreeFormPanel();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.StateLinkButtonToolTipConverter : object {
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
internal class System.Activities.Core.Presentation.StateMachineConnectionPointsAdorner : ConnectionPointsAdorner {
    public StateMachineConnectionPointsAdorner(UIElement adornedElement, List`1<ConnectionPoint> connectionPointsToShow, bool isParentShapeSelected);
    protected virtual void OnRender(DrawingContext drawingContext);
    protected virtual void OnMouseDown(MouseButtonEventArgs e);
    protected virtual void OnMouseUp(MouseButtonEventArgs e);
    protected virtual void OnContextMenuOpening(ContextMenuEventArgs e);
}
[ActivityDesignerOptionsAttribute]
internal class System.Activities.Core.Presentation.StateMachineDesigner : ActivityDesigner {
    internal static string InitialStatePropertyName;
    internal static string VariablesPropertyName;
    internal static string StatesPropertyName;
    internal bool IsResizing { get; internal set; }
    internal StateContainerEditor StateContainerEditor { get; }
    [CompilerGeneratedAttribute]
internal bool get_IsResizing();
    [CompilerGeneratedAttribute]
internal void set_IsResizing(bool value);
    internal StateContainerEditor get_StateContainerEditor();
    public static void RegisterMetadata(AttributeTableBuilder builder);
    protected virtual void OnModelItemChanged(object newItem);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.StateMachineFreeFormPanel : FreeFormPanel {
}
internal class System.Activities.Core.Presentation.StateMachineValidationErrorSourceLocator : object {
    public sealed virtual List`1<object> FindSourceDetailFromActivity(Activity errorSource, object errorSourceDetail);
    public sealed virtual void ReplaceParentChainWithSource(Activity parentActivity, List`1<object> parentChain);
}
internal class System.Activities.Core.Presentation.StateMachineValidationErrorSourceLocatorFeature : ValidationErrorSourceLocatorFeature {
    protected IValidationErrorSourceLocator ValidationErrorSourceLocator { get; }
    protected virtual IValidationErrorSourceLocator get_ValidationErrorSourceLocator();
}
internal class System.Activities.Core.Presentation.SwitchDesigner : ActivityDesigner {
    public static DependencyProperty CaseTypeProperty;
    public static DependencyProperty SelectedCaseProperty;
    public static DependencyProperty ShowDefaultCaseExpandedProperty;
    public static DependencyProperty NewKeyProperty;
    internal SwitchDesigner controlRoot;
    public bool ShowDefaultCaseExpanded { get; public set; }
    public CaseKeyValidationCallbackDelegate CheckDuplicateCaseKey { get; }
    private static SwitchDesigner();
    public bool get_ShowDefaultCaseExpanded();
    public void set_ShowDefaultCaseExpanded(bool value);
    public CaseKeyValidationCallbackDelegate get_CheckDuplicateCaseKey();
    protected virtual void OnModelItemChanged(object newItem);
    internal static bool IsDescendantOfCase(ModelItem caseObject, ModelItem descendant);
    internal static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal static class System.Activities.Core.Presentation.SwitchTryCatchDesignerHelper : object {
    public static void MakeRootDesigner(WorkflowViewElement wve);
    public static void MakeParentRootDesigner(WorkflowViewElement wve);
}
internal class System.Activities.Core.Presentation.TextBlockWrapper : TextBlock {
    protected virtual AutomationPeer OnCreateAutomationPeer();
}
internal class System.Activities.Core.Presentation.TextBlockWrapperAutomationPeer : TextBlockAutomationPeer {
    public TextBlockWrapperAutomationPeer(TextBlockWrapper owner);
    protected virtual AutomationControlType GetAutomationControlTypeCore();
}
public class System.Activities.Core.Presentation.Themes.DesignerStylesDictionary : ResourceDictionary {
    public static Style SequenceStyle { get; }
    public static Style get_SequenceStyle();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.Themes.EditorCategoryTemplateDictionary : ResourceDictionary {
    public static EditorCategoryTemplateDictionary Instance { get; }
    public static EditorCategoryTemplateDictionary get_Instance();
    public DataTemplate GetCategoryTemplate(string templateName);
    public string GetCategoryTitle(string categoryName);
    public object GetCategoryImage(string imageName);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.Themes.StringResourceDictionary : ResourceDictionary {
    public static StringResourceDictionary Instance { get; }
    public static StringResourceDictionary get_Instance();
    public string GetString(string key);
    public string GetString(string key, string defaultValue);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.TransactionScopeDesigner : ActivityDesigner {
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.TransitionDesigner : ActivityDesigner {
    public static DependencyProperty NewTransitionProperty;
    public static DependencyProperty TransitionsSharingTriggerProperty;
    public static DependencyProperty SelectedTransitionProperty;
    internal static string TriggerPropertyName;
    internal static string ActionPropertyName;
    internal static string ToPropertyName;
    internal static string ConditionPropertyName;
    public object NewTransition { get; public set; }
    public ObservableCollection`1<ExpandableItemWrapper> TransitionsSharingTrigger { get; public set; }
    public ExpandableItemWrapper SelectedTransition { get; public set; }
    private static TransitionDesigner();
    public object get_NewTransition();
    public void set_NewTransition(object value);
    public ObservableCollection`1<ExpandableItemWrapper> get_TransitionsSharingTrigger();
    public void set_TransitionsSharingTrigger(ObservableCollection`1<ExpandableItemWrapper> value);
    public ExpandableItemWrapper get_SelectedTransition();
    public void set_SelectedTransition(ExpandableItemWrapper value);
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
internal Delegate _CreateDelegate(Type delegateType, string handler);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.TransitionReorderChange : Change {
    public string Description { get; }
    public virtual string get_Description();
    public virtual bool Apply();
    public virtual Change GetInverse();
}
internal class System.Activities.Core.Presentation.TryCatchDesigner : ActivityDesigner {
    public static DependencyProperty ShowTryExpandedProperty;
    public static DependencyProperty ShowFinallyExpandedProperty;
    public static DependencyProperty ShowTypePresenterExpandedProperty;
    public static DependencyProperty SelectedCatchProperty;
    internal TryCatchDesigner controlRoot;
    public bool ShowTryExpanded { get; public set; }
    public bool ShowFinallyExpanded { get; public set; }
    public bool ShowTypePresenterExpanded { get; public set; }
    private static TryCatchDesigner();
    public bool get_ShowTryExpanded();
    public void set_ShowTryExpanded(bool value);
    public bool get_ShowFinallyExpanded();
    public void set_ShowFinallyExpanded(bool value);
    public bool get_ShowTypePresenterExpanded();
    public void set_ShowTypePresenterExpanded(bool value);
    internal static void RegisterMetadata(AttributeTableBuilder builder);
    internal static bool IsDescendantOfCatch(ModelItem catchObject, ModelItem descendant);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.VerticalConnector : UserControl {
    public static DependencyProperty AllowedItemTypeProperty;
    public static DependencyProperty ContextProperty;
    internal BeginStoryboard Collapse_BeginStoryboardOnDrop;
    internal Rectangle dropTarget;
    public Type AllowedItemType { get; public set; }
    public EditingContext Context { get; public set; }
    private static VerticalConnector();
    public Type get_AllowedItemType();
    public void set_AllowedItemType(Type value);
    public EditingContext get_Context();
    public void set_Context(EditingContext value);
    protected virtual void OnDragEnter(DragEventArgs e);
    protected virtual void OnDragLeave(DragEventArgs e);
    protected virtual void OnDrop(DragEventArgs e);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.WhileDesigner : ActivityDesigner {
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Core.Presentation.WriteLineDesigner : ActivityDesigner {
    internal ExpressionTextBox writeLineTextExpression;
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
[ExtensionAttribute]
internal static class System.Activities.Presentation.ActivityDesignerHelper : object {
    public static string ChannelBasedCorrelationKey;
    [ExtensionAttribute]
public static bool IsItemInSequence(ModelItem item, ModelItem& sequence);
    [ExtensionAttribute]
public static bool IsItemInFlowchart(ModelItem item, ModelItem& flowchart, ModelItem& flowStep);
    [ExtensionAttribute]
public static bool IsMessagingActivity(ModelItem item);
    public static string GenerateUniqueVariableNameForContext(DependencyObject context, string prefix);
}
internal class System.Activities.Presentation.ActivityXRefPropertyEditor : PropertyValueEditor {
}
internal class System.Activities.Presentation.ArgumentCollectionPropertyEditor : DialogPropertyValueEditor {
    public virtual void ShowDialog(PropertyValue propertyValue, IInputElement commandSource);
}
internal class System.Activities.Presentation.DynamicArgumentDesigner : UserControl {
    public static DependencyProperty ContextProperty;
    public static DependencyProperty OwnerActivityProperty;
    public static DependencyProperty IsDirectionReadOnlyProperty;
    public static DependencyProperty DynamicArgumentsProperty;
    public static DependencyProperty IsDictionaryProperty;
    public static DependencyProperty UnderlyingArgumentTypeProperty;
    public static RoutedCommand CreateDynamicArgumentCommand;
    public static RoutedCommand MoveUpArgumentCommand;
    public static RoutedCommand MoveDownArgumentCommand;
    public static RoutedCommand DeleteArgumentCommand;
    public static string DefaultArgumentPrefix;
    internal Grid Grid_1;
    internal StackPanel StackPane_1;
    internal Button ButtonDelete;
    internal Button ButtonMovUp;
    internal Button ButtonMovDown;
    internal DataGrid WPF_DataGrid;
    public ObservableCollection`1<DynamicArgumentWrapperObject> DynamicArguments { get; public set; }
    public ModelItem OwnerActivity { get; public set; }
    public EditingContext Context { get; public set; }
    public bool IsDirectionReadOnly { get; public set; }
    public bool HideDirection { get; public set; }
    public string ArgumentPrefix { get; public set; }
    public string HintText { get; public set; }
    public WorkflowElementDialog ParentDialog { get; public set; }
    internal Type UnderlyingArgumentType { get; internal set; }
    internal Nullable`1<bool> IsDictionary { get; internal set; }
    private static DynamicArgumentDesigner();
    protected virtual void OnInitialized(EventArgs e);
    public ObservableCollection`1<DynamicArgumentWrapperObject> get_DynamicArguments();
    public void set_DynamicArguments(ObservableCollection`1<DynamicArgumentWrapperObject> value);
    public ModelItem get_OwnerActivity();
    public void set_OwnerActivity(ModelItem value);
    public EditingContext get_Context();
    public void set_Context(EditingContext value);
    public bool get_IsDirectionReadOnly();
    public void set_IsDirectionReadOnly(bool value);
    public bool get_HideDirection();
    public void set_HideDirection(bool value);
    public string get_ArgumentPrefix();
    public void set_ArgumentPrefix(string value);
    public string get_HintText();
    public void set_HintText(string value);
    [CompilerGeneratedAttribute]
public WorkflowElementDialog get_ParentDialog();
    [CompilerGeneratedAttribute]
public void set_ParentDialog(WorkflowElementDialog value);
    internal Type get_UnderlyingArgumentType();
    internal void set_UnderlyingArgumentType(Type value);
    internal Nullable`1<bool> get_IsDictionary();
    internal void set_IsDictionary(Nullable`1<bool> value);
    internal static ObservableCollection`1<DynamicArgumentWrapperObject> ModelItemToWrapperCollection(ModelItem model, Boolean& isDictionary, Type& underlyingArgumentType);
    internal static void WrapperCollectionToModelItem(ObservableCollection`1<DynamicArgumentWrapperObject> wrappers, ModelItem data, bool isDictionary, Type underlyingArgumentType);
    internal void ValidateEntry(DynamicArgumentWrapperObject entry, DependencyPropertyChangedEventArgs e);
    internal string GetDefaultName();
    internal Type GetDefaultType();
    internal ArgumentDirection GetDefaultDirection();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
public class System.Activities.Presentation.DynamicArgumentDesignerOptions : object {
    public string Title { get; public set; }
    public string ArgumentPrefix { get; public set; }
    internal bool HideDirection { get; internal set; }
    internal string HintText { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    public string get_ArgumentPrefix();
    public void set_ArgumentPrefix(string value);
    [CompilerGeneratedAttribute]
internal bool get_HideDirection();
    [CompilerGeneratedAttribute]
internal void set_HideDirection(bool value);
    internal string get_HintText();
    internal void set_HintText(string value);
}
public class System.Activities.Presentation.DynamicArgumentDialog : WorkflowElementDialog {
    public static bool ShowDialog(ModelItem activity, ModelItem data, EditingContext context, DependencyObject owner, DynamicArgumentDesignerOptions options);
    protected virtual void OnWorkflowElementDialogClosed(Nullable`1<bool> dialogResult);
}
internal class System.Activities.Presentation.DynamicArgumentWrapperObject : DependencyObject {
    public static DependencyProperty ModelItemProperty;
    public static DependencyProperty NameProperty;
    public static DependencyProperty ArgumentTypeProperty;
    public static DependencyProperty DirectionProperty;
    public static DependencyProperty ExpressionProperty;
    public static DependencyProperty UseLocationExpressionProperty;
    public string Name { get; public set; }
    public Type Type { get; public set; }
    public ArgumentDirection Direction { get; public set; }
    public ModelItem Expression { get; public set; }
    public bool UseLocationExpression { get; public set; }
    internal bool IsValidating { get; internal set; }
    internal DataGridRow Row { get; internal set; }
    public static DynamicArgumentDesigner Editor { get; public set; }
    public DynamicArgumentWrapperObject(string argumentName, ModelItem argumentItem);
    private static DynamicArgumentWrapperObject();
    [CompilerGeneratedAttribute]
public void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public void remove_PropertyChanged(PropertyChangedEventHandler value);
    public string get_Name();
    public void set_Name(string value);
    public Type get_Type();
    public void set_Type(Type value);
    public ArgumentDirection get_Direction();
    public void set_Direction(ArgumentDirection value);
    public ModelItem get_Expression();
    public void set_Expression(ModelItem value);
    public bool get_UseLocationExpression();
    public void set_UseLocationExpression(bool value);
    [CompilerGeneratedAttribute]
internal bool get_IsValidating();
    [CompilerGeneratedAttribute]
internal void set_IsValidating(bool value);
    [CompilerGeneratedAttribute]
internal DataGridRow get_Row();
    [CompilerGeneratedAttribute]
internal void set_Row(DataGridRow value);
    [CompilerGeneratedAttribute]
public static DynamicArgumentDesigner get_Editor();
    [CompilerGeneratedAttribute]
public static void set_Editor(DynamicArgumentDesigner value);
    public virtual string ToString();
}
internal class System.Activities.Presentation.FlowSwitchLinkCasePropertyEditor : PropertyValueEditor {
}
internal class System.Activities.Presentation.TypeCollectionDesigner : ContentControl {
    public static DependencyProperty ContextProperty;
    public static ICommand AddNewTypeCommand;
    public static ICommand DeleteTypeCommand;
    internal Grid Grid_1;
    internal StackPanel HeadBar;
    internal Button ButtonDelete;
    internal DataGrid typesDataGrid;
    unknown IEnumerable`1<Type> InitialTypeCollection {internal set; }
    public IEnumerable`1<Type> UpdatedTypeCollection { get; }
    public EditingContext Context { get; public set; }
    public bool AllowDuplicate { get; public set; }
    public Func`2<Type, bool> Filter { get; public set; }
    public Type DefaultType { get; public set; }
    internal WorkflowElementDialog ParentDialog { get; internal set; }
    private static TypeCollectionDesigner();
    internal void set_InitialTypeCollection(IEnumerable`1<Type> value);
    public IEnumerable`1<Type> get_UpdatedTypeCollection();
    public EditingContext get_Context();
    public void set_Context(EditingContext value);
    [CompilerGeneratedAttribute]
public bool get_AllowDuplicate();
    [CompilerGeneratedAttribute]
public void set_AllowDuplicate(bool value);
    [CompilerGeneratedAttribute]
public Func`2<Type, bool> get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(Func`2<Type, bool> value);
    [CompilerGeneratedAttribute]
public Type get_DefaultType();
    [CompilerGeneratedAttribute]
public void set_DefaultType(Type value);
    [CompilerGeneratedAttribute]
internal WorkflowElementDialog get_ParentDialog();
    [CompilerGeneratedAttribute]
internal void set_ParentDialog(WorkflowElementDialog value);
    internal bool OnOK();
    protected virtual void OnInitialized(EventArgs e);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.Activities.Presentation.TypeCollectionPropertyEditor : DialogPropertyValueEditor {
    public static string AllowDuplicate;
    public static string Filter;
    public static string DefaultType;
    internal static T GetOptionValueOrUseDefault(IEnumerable attributes, string optionName, T defaultValue);
    public virtual void ShowDialog(PropertyValue propertyValue, IInputElement commandSource);
}
internal class System.ServiceModel.Activities.Presentation.ActivityXRefConverter : object {
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
internal class System.ServiceModel.Activities.Presentation.BindingEditor : ComboBox {
    public static DependencyProperty BindingProperty;
    public object Binding { get; public set; }
    private static BindingEditor();
    public object get_Binding();
    public void set_Binding(object value);
    protected virtual void OnInitialized(EventArgs e);
    protected virtual void OnSelectionChanged(SelectionChangedEventArgs e);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.BindingPropertyValueEditor : PropertyValueEditor {
}
internal class System.ServiceModel.Activities.Presentation.ContentButtonTitleConverter : object {
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
internal class System.ServiceModel.Activities.Presentation.ContentCorrelationTypeExpander : ContentControl {
    public static DependencyProperty IsSelectionValidProperty;
    public static RoutedEvent IsSelectionValidChangedEvent;
    public static RoutedEvent SelectionChangedEvent;
    public static DependencyProperty TypesToExpandProperty;
    public static DependencyProperty SelectedTypeEntryProperty;
    internal TreeView typeExpander;
    internal TextBlock emptyContent;
    public bool IsSelectionValid { get; private set; }
    public IList`1<ExpanderTypeEntry> TypesToExpand { get; public set; }
    public ExpanderTypeEntry SelectedTypeEntry { get; private set; }
    private static ContentCorrelationTypeExpander();
    public void add_IsSelectionValidChanged(RoutedEventHandler value);
    public void remove_IsSelectionValidChanged(RoutedEventHandler value);
    public void add_SelectionChanged(RoutedEventHandler value);
    public void remove_SelectionChanged(RoutedEventHandler value);
    public bool get_IsSelectionValid();
    private void set_IsSelectionValid(bool value);
    public IList`1<ExpanderTypeEntry> get_TypesToExpand();
    public void set_TypesToExpand(IList`1<ExpanderTypeEntry> value);
    public ExpanderTypeEntry get_SelectedTypeEntry();
    private void set_SelectedTypeEntry(ExpanderTypeEntry value);
    public Type GetSelectedType();
    public MemberInfo[] GetMemberPath();
    internal static bool IsPrimitiveTypeInXPath(Type type);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.ContentDialogViewModel`2 : object {
    public bool IsEditingEnabled { get; }
    public bool IsMessageChecked { get; public set; }
    public bool IsParameterChecked { get; public set; }
    public ModelItem ModelItem { get; private set; }
    public EditingContext Context { get; }
    public ModelItem MessageExpression { get; public set; }
    public Type DeclaredMessageType { get; public set; }
    public bool IsDictionary { get; private set; }
    public Type UnderlyingArgumentType { get; private set; }
    public ObservableCollection`1<DynamicArgumentWrapperObject> DynamicArguments { get; public set; }
    public ContentDialogViewModel`2(ModelItem modelItem);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public bool get_IsEditingEnabled();
    public bool get_IsMessageChecked();
    public void set_IsMessageChecked(bool value);
    public bool get_IsParameterChecked();
    public void set_IsParameterChecked(bool value);
    [CompilerGeneratedAttribute]
public ModelItem get_ModelItem();
    [CompilerGeneratedAttribute]
private void set_ModelItem(ModelItem value);
    public EditingContext get_Context();
    public ModelItem get_MessageExpression();
    public void set_MessageExpression(ModelItem value);
    public Type get_DeclaredMessageType();
    public void set_DeclaredMessageType(Type value);
    [CompilerGeneratedAttribute]
public bool get_IsDictionary();
    [CompilerGeneratedAttribute]
private void set_IsDictionary(bool value);
    [CompilerGeneratedAttribute]
public Type get_UnderlyingArgumentType();
    [CompilerGeneratedAttribute]
private void set_UnderlyingArgumentType(Type value);
    [CompilerGeneratedAttribute]
public ObservableCollection`1<DynamicArgumentWrapperObject> get_DynamicArguments();
    [CompilerGeneratedAttribute]
public void set_DynamicArguments(ObservableCollection`1<DynamicArgumentWrapperObject> value);
    internal bool OnOk();
}
internal class System.ServiceModel.Activities.Presentation.Converters.ReceiveMessageContentSearchableStringConverter : SearchableStringConverter {
    public virtual IList`1<string> Convert(object value);
}
internal class System.ServiceModel.Activities.Presentation.Converters.ReceiveParametersContentSearchableStringConverter : SearchableStringConverter {
    public virtual IList`1<string> Convert(object value);
}
internal class System.ServiceModel.Activities.Presentation.Converters.SendMessageContentSearchableStringConverter : SearchableStringConverter {
    public virtual IList`1<string> Convert(object value);
}
internal class System.ServiceModel.Activities.Presentation.Converters.SendParametersContentSearchableStringConverter : SearchableStringConverter {
    public virtual IList`1<string> Convert(object value);
}
internal class System.ServiceModel.Activities.Presentation.Converters.XPathMessageQuerySearchableStringConverter : SearchableStringConverter {
    public virtual IList`1<string> Convert(object value);
}
internal class System.ServiceModel.Activities.Presentation.CorrelatesOnValueEditor : DialogPropertyValueEditor {
    public virtual void ShowDialog(PropertyValue propertyValue, IInputElement commandSource);
    public void ShowDialog(ModelItem activity, EditingContext context);
}
internal class System.ServiceModel.Activities.Presentation.CorrelationDataDesigner : ContentControl {
    public static DependencyProperty ActivityProperty;
    public static DependencyProperty CorrelationInitializeDataProperty;
    public static DependencyProperty CorrelationHandleProperty;
    public static RoutedCommand AddNewDataCommand;
    internal ExpressionTextBox correlationHandleETB;
    internal DataGrid correlationInitializers;
    public ModelItem Activity { get; public set; }
    public ObservableCollection`1<CorrelationDataWrapper> CorrelationInitializeData { get; public set; }
    public ModelItem CorrelationHandle { get; public set; }
    private static CorrelationDataDesigner();
    public ModelItem get_Activity();
    public void set_Activity(ModelItem value);
    public ObservableCollection`1<CorrelationDataWrapper> get_CorrelationInitializeData();
    public void set_CorrelationInitializeData(ObservableCollection`1<CorrelationDataWrapper> value);
    public ModelItem get_CorrelationHandle();
    public void set_CorrelationHandle(ModelItem value);
    protected virtual void OnInitialized(EventArgs e);
    internal void CommitEdit();
    internal void ValidateKey(CorrelationDataWrapper wrapper, string oldKey);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.CorrelationDataWrapper : DependencyObject {
    public static DependencyProperty KeyProperty;
    public static DependencyProperty ValueProperty;
    public ModelItem Value { get; public set; }
    public string Key { get; public set; }
    public static CorrelationDataDesigner Editor { get; public set; }
    internal CorrelationDataWrapper(string key, ModelItem value);
    private static CorrelationDataWrapper();
    public ModelItem get_Value();
    public void set_Value(ModelItem value);
    public string get_Key();
    public void set_Key(string value);
    [CompilerGeneratedAttribute]
public static CorrelationDataDesigner get_Editor();
    [CompilerGeneratedAttribute]
public static void set_Editor(CorrelationDataDesigner value);
}
internal class System.ServiceModel.Activities.Presentation.CorrelationInitializerDesigner : ContentControl {
    public static DependencyProperty ActivityProperty;
    internal DataGrid correlationInitializers;
    internal ComboBox typeCombo;
    public ModelItem Activity { get; public set; }
    private static CorrelationInitializerDesigner();
    public ModelItem get_Activity();
    public void set_Activity(ModelItem value);
    protected virtual void OnInitialized(EventArgs args);
    internal void CleanupObjectMap();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
internal Delegate _CreateDelegate(Type delegateType, string handler);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.CorrelationInitializerValueEditor : DialogPropertyValueEditor {
    public virtual void ShowDialog(PropertyValue propertyValue, IInputElement commandSource);
    public void ShowDialog(ModelItem modelItem, EditingContext context);
}
internal class System.ServiceModel.Activities.Presentation.CorrelationScopeDesigner : ActivityDesigner {
    internal CorrelationScopeDesigner correlationScopeDesigner;
    internal static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.EndpointDesigner : object {
    internal static void RegisterMetadata(AttributeTableBuilder builder);
}
internal class System.ServiceModel.Activities.Presentation.ExpanderTypeEntry : DependencyObject {
    public static DependencyProperty NameProperty;
    public static DependencyProperty TypeToExpandProperty;
    public static DependencyProperty TagProperty;
    public string Name { get; public set; }
    public Type TypeToExpand { get; public set; }
    public Type[] TypeToExpandSource { get; }
    public object Tag { get; public set; }
    private static ExpanderTypeEntry();
    public string get_Name();
    public void set_Name(string value);
    public Type get_TypeToExpand();
    public void set_TypeToExpand(Type value);
    public Type[] get_TypeToExpandSource();
    public object get_Tag();
    public void set_Tag(object value);
    public virtual string ToString();
}
public class System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory : object {
    private static ReceiveAndSendReplyFactory();
    public sealed virtual Activity Create(DependencyObject target);
}
public class System.ServiceModel.Activities.Presentation.Factories.SendAndReceiveReplyFactory : object {
    private static SendAndReceiveReplyFactory();
    public sealed virtual Activity Create(DependencyObject target);
}
internal class System.ServiceModel.Activities.Presentation.InitializeCorrelationDesigner : ActivityDesigner {
    public static string CorrelationPropertyName;
    public static string CorrelationDataPropertyName;
    internal InitializeCorrelationDesigner initializeCorrelationDesigner;
    internal Button btnCorrelationData;
    private static InitializeCorrelationDesigner();
    protected virtual void OnReadOnlyChanged(bool isReadOnly);
    protected virtual void OnModelItemChanged(object newItem);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.MessageQueryEditor : ComboBox {
    public static DependencyProperty TypeCollectionProperty;
    public static DependencyProperty QueryProperty;
    public static RoutedEvent XPathCreatedEvent;
    public IList`1<KeyValuePair`2<string, Type>> TypeCollection { get; public set; }
    public XPathMessageQuery Query { get; private set; }
    internal ModelItem Activity { get; internal set; }
    private static MessageQueryEditor();
    public IList`1<KeyValuePair`2<string, Type>> get_TypeCollection();
    public void set_TypeCollection(IList`1<KeyValuePair`2<string, Type>> value);
    public XPathMessageQuery get_Query();
    private void set_Query(XPathMessageQuery value);
    internal ModelItem get_Activity();
    internal void set_Activity(ModelItem value);
    public void add_XPathCreated(RoutedEventHandler value);
    public void remove_XPathCreated(RoutedEventHandler value);
    protected virtual DependencyObject GetContainerForItemOverride();
    protected virtual void OnKeyDown(KeyEventArgs e);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.MessageQuerySetDesigner : ContentControl {
    public static DependencyProperty ActivityProperty;
    public static DependencyProperty MessageQuerySetContainerProperty;
    public static DependencyProperty IsTypeExpanderEnabledProperty;
    internal DataGrid messageQueries;
    public ModelItem Activity { get; public set; }
    public ModelItem MessageQuerySetContainer { get; public set; }
    public bool IsTypeExpanderEnabled { get; private set; }
    public IList`1<KeyValuePair`2<string, Type>> ActivityParameters { get; }
    private static MessageQuerySetDesigner();
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public ModelItem get_Activity();
    public void set_Activity(ModelItem value);
    public ModelItem get_MessageQuerySetContainer();
    public void set_MessageQuerySetContainer(ModelItem value);
    public bool get_IsTypeExpanderEnabled();
    private void set_IsTypeExpanderEnabled(bool value);
    public IList`1<KeyValuePair`2<string, Type>> get_ActivityParameters();
    protected virtual void OnInitialized(EventArgs e);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.MessagingContentPropertyEditorResources : object {
    internal static ResourceDictionary GetResources();
}
internal class System.ServiceModel.Activities.Presentation.ReceiveContentDialog : WorkflowElementDialog {
    public static DependencyProperty ViewModelProperty;
    public ContentDialogViewModel`2<ReceiveMessageContent, ReceiveParametersContent> ViewModel { get; public set; }
    private static ReceiveContentDialog();
    public ContentDialogViewModel`2<ReceiveMessageContent, ReceiveParametersContent> get_ViewModel();
    public void set_ViewModel(ContentDialogViewModel`2<ReceiveMessageContent, ReceiveParametersContent> value);
    public static bool ShowDialog(ModelItem activity, EditingContext context, DependencyObject owner);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.ReceiveContentPropertyEditor : DialogPropertyValueEditor {
    public virtual void ShowDialog(PropertyValue propertyValue, IInputElement commandSource);
}
internal class System.ServiceModel.Activities.Presentation.ReceiveDesigner : ActivityDesigner {
    public static RoutedCommand CreateSendReplyCommand;
    internal ReceiveDesigner receiveDesigner;
    internal Grid contentGrid;
    internal TextBox txtOperationName;
    private static ReceiveDesigner();
    protected virtual void OnModelItemChanged(object newItem);
    protected virtual void OnReadOnlyChanged(bool isReadOnly);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.ReceiveReplyDesigner : ActivityDesigner {
    internal ReceiveReplyDesigner receiveReplyDesigner;
    internal Grid contentGrid;
    private static ReceiveReplyDesigner();
    protected virtual void OnModelItemChanged(object newItem);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.ReceiveReplyValidationFeature : DesignTimeValidationFeature {
    protected Type ApplyTo { get; }
    protected IList`1<Constraint> DesignTimeConstraints { get; }
    protected virtual Type get_ApplyTo();
    protected virtual IList`1<Constraint> get_DesignTimeConstraints();
}
internal class System.ServiceModel.Activities.Presentation.SendContentDialog : WorkflowElementDialog {
    public static DependencyProperty ViewModelProperty;
    public ContentDialogViewModel`2<SendMessageContent, SendParametersContent> ViewModel { get; public set; }
    private static SendContentDialog();
    public ContentDialogViewModel`2<SendMessageContent, SendParametersContent> get_ViewModel();
    public void set_ViewModel(ContentDialogViewModel`2<SendMessageContent, SendParametersContent> value);
    public static bool ShowDialog(ModelItem activity, EditingContext context, DependencyObject owner);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.SendContentPropertyEditor : DialogPropertyValueEditor {
    public virtual void ShowDialog(PropertyValue propertyValue, IInputElement commandSource);
}
internal class System.ServiceModel.Activities.Presentation.SendDesigner : ActivityDesigner {
    public static RoutedCommand CreateReceiveReplyCommand;
    internal SendDesigner sendDesigner;
    internal Grid contentGrid;
    internal TextBox txtOperationName;
    private static SendDesigner();
    protected virtual void OnModelItemChanged(object newItem);
    protected virtual void OnReadOnlyChanged(bool isReadOnly);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.SendReplyDesigner : ActivityDesigner {
    internal SendReplyDesigner sendReplyDesigner;
    internal Grid contentGrid;
    private static SendReplyDesigner();
    protected virtual void OnModelItemChanged(object newItem);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.SendReplyValidationFeature : DesignTimeValidationFeature {
    protected Type ApplyTo { get; }
    protected IList`1<Constraint> DesignTimeConstraints { get; }
    protected virtual Type get_ApplyTo();
    protected virtual IList`1<Constraint> get_DesignTimeConstraints();
}
public static class System.ServiceModel.Activities.Presentation.ServiceContractImporter : object {
    public static string ContractTypeViewStateKey;
    internal static Func`2<Type, bool> FilterFunction { get; }
    internal static Func`2<Type, bool> get_FilterFunction();
    public static Type SelectContractType(AssemblyName localAssemblyName, IList`1<AssemblyName> referencedAssemblies, EditingContext editingContext);
    [IteratorStateMachineAttribute("System.ServiceModel.Activities.Presentation.ServiceContractImporter/<GenerateActivityTemplates>d__9")]
public static IEnumerable`1<ActivityTemplateFactoryBuilder> GenerateActivityTemplates(Type contractType);
    public static string SaveActivityTemplate(ActivityTemplateFactoryBuilder activityTemplate);
    internal static Activity GenerateActivity(OperationDescription operation);
}
internal class System.ServiceModel.Activities.Presentation.TransactedReceiveScopeDesigner : ActivityDesigner {
    public static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
internal class System.ServiceModel.Activities.Presentation.TypeEntryContainer : object {
    public string DisplayText { get; public set; }
    public IList`1<ExpanderTypeEntry> Items { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayText();
    [CompilerGeneratedAttribute]
public void set_DisplayText(string value);
    [CompilerGeneratedAttribute]
public IList`1<ExpanderTypeEntry> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<ExpanderTypeEntry> value);
    public virtual string ToString();
}
internal class System.ServiceModel.Activities.Presentation.TypeToTreeConverter : object {
    private sealed virtual override object System.Windows.Data.IValueConverter.Convert(object value, Type targetType, object parameter, CultureInfo culture);
    private sealed virtual override object System.Windows.Data.IValueConverter.ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
internal class System.ServiceModel.Presentation.ServiceDesigner : WorkflowViewElement {
    public ModelItem ExpandedChild { get; }
    public sealed virtual ModelItem get_ExpandedChild();
    internal static void RegisterMetadata(AttributeTableBuilder builder);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public sealed virtual void InitializeComponent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
[DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
[EditorBrowsableAttribute("1")]
public class XamlGeneratedNamespace.GeneratedInternalTypeHelper : InternalTypeHelper {
    protected virtual object CreateInstance(Type type, CultureInfo culture);
    protected virtual object GetPropertyValue(PropertyInfo propertyInfo, object target, CultureInfo culture);
    protected virtual void SetPropertyValue(PropertyInfo propertyInfo, object target, object value, CultureInfo culture);
    protected virtual Delegate CreateDelegate(Type delegateType, object target, string handler);
    protected virtual void AddEventHandler(EventInfo eventInfo, object target, Delegate handler);
}
