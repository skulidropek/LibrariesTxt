public class Microsoft.Build.Tasks.Xaml.AttributeData : object {
    public XamlType Type { get; public set; }
    public IList`1<AttributeParameterData> Parameters { get; }
    public IDictionary`2<string, AttributeParameterData> Properties { get; }
    private static AttributeData();
    [CompilerGeneratedAttribute]
public XamlType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(XamlType value);
    public IList`1<AttributeParameterData> get_Parameters();
    public IDictionary`2<string, AttributeParameterData> get_Properties();
}
public class Microsoft.Build.Tasks.Xaml.AttributeParameterData : object {
    public string TextValue { get; internal set; }
    public object Value { get; internal set; }
    public XamlType Type { get; internal set; }
    public ReadOnlyCollection`1<AttributeParameterData> ArrayContents { get; }
    public AttributeParameterData(XamlType type, string textValue);
    public AttributeParameterData(XamlType type, object value);
    public AttributeParameterData(XamlType type, IEnumerable`1<AttributeParameterData> arrayContents);
    [CompilerGeneratedAttribute]
public string get_TextValue();
    [CompilerGeneratedAttribute]
internal void set_TextValue(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
internal void set_Value(object value);
    [CompilerGeneratedAttribute]
public XamlType get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(XamlType value);
    public ReadOnlyCollection`1<AttributeParameterData> get_ArrayContents();
}
public class Microsoft.Build.Tasks.Xaml.BuildExtensionContext : object {
    public string AssemblyName { get; internal set; }
    public bool IsInProcessXamlMarkupCompile { get; internal set; }
    public string Language { get; internal set; }
    public string OutputPath { get; internal set; }
    public ReadOnlyCollection`1<string> References { get; }
    public string RootNamespace { get; internal set; }
    public ReadOnlyCollection`1<string> SourceCodeFiles { get; }
    public string LocalAssembly { get; internal set; }
    public TaskLoggingHelper XamlBuildLogger { get; internal set; }
    public ReadOnlyCollection`1<string> GeneratedFiles { get; }
    public ReadOnlyCollection`1<string> GeneratedResourceFiles { get; }
    private static BuildExtensionContext();
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
internal void set_AssemblyName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsInProcessXamlMarkupCompile();
    [CompilerGeneratedAttribute]
internal void set_IsInProcessXamlMarkupCompile(bool value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
internal void set_Language(string value);
    [CompilerGeneratedAttribute]
public string get_OutputPath();
    [CompilerGeneratedAttribute]
internal void set_OutputPath(string value);
    public ReadOnlyCollection`1<string> get_References();
    [CompilerGeneratedAttribute]
public string get_RootNamespace();
    [CompilerGeneratedAttribute]
internal void set_RootNamespace(string value);
    public ReadOnlyCollection`1<string> get_SourceCodeFiles();
    [CompilerGeneratedAttribute]
public string get_LocalAssembly();
    [CompilerGeneratedAttribute]
internal void set_LocalAssembly(string value);
    [CompilerGeneratedAttribute]
public TaskLoggingHelper get_XamlBuildLogger();
    [CompilerGeneratedAttribute]
internal void set_XamlBuildLogger(TaskLoggingHelper value);
    public ReadOnlyCollection`1<string> get_GeneratedFiles();
    public ReadOnlyCollection`1<string> get_GeneratedResourceFiles();
    public void AddGeneratedFile(string fileName);
    public void AddGeneratedResourceFile(string fileName);
}
public class Microsoft.Build.Tasks.Xaml.ClassData : object {
    public XamlType BaseType { get; public set; }
    public IList`1<string> CodeSnippets { get; }
    public string EmbeddedResourceFileName { get; internal set; }
    public KeyedCollection`2<string, PropertyData> Properties { get; }
    public IList`1<AttributeData> Attributes { get; }
    public string Name { get; internal set; }
    public IList`1<NamedObject> NamedObjects { get; }
    public string Namespace { get; internal set; }
    public XamlNodeList EmbeddedResourceXaml { get; public set; }
    public bool IsPublic { get; public set; }
    public string FileName { get; internal set; }
    public string HelperClassFullName { get; internal set; }
    [CompilerGeneratedAttribute]
public XamlType get_BaseType();
    [CompilerGeneratedAttribute]
public void set_BaseType(XamlType value);
    public IList`1<string> get_CodeSnippets();
    [CompilerGeneratedAttribute]
public string get_EmbeddedResourceFileName();
    [CompilerGeneratedAttribute]
internal void set_EmbeddedResourceFileName(string value);
    public KeyedCollection`2<string, PropertyData> get_Properties();
    public IList`1<AttributeData> get_Attributes();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    public IList`1<NamedObject> get_NamedObjects();
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
internal void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public XamlNodeList get_EmbeddedResourceXaml();
    [CompilerGeneratedAttribute]
public void set_EmbeddedResourceXaml(XamlNodeList value);
    [CompilerGeneratedAttribute]
public bool get_IsPublic();
    [CompilerGeneratedAttribute]
public void set_IsPublic(bool value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
internal void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_HelperClassFullName();
    [CompilerGeneratedAttribute]
internal void set_HelperClassFullName(string value);
}
public class Microsoft.Build.Tasks.Xaml.CompilationPass2Task : Task {
    public ITaskItem[] ApplicationMarkup { get; public set; }
    public string AssemblyName { get; public set; }
    public ITaskItem[] References { get; public set; }
    public string Language { get; public set; }
    public string OutputPath { get; public set; }
    public string MSBuildProjectDirectory { get; public set; }
    public bool IsInProcessXamlMarkupCompile { get; public set; }
    public ITaskItem[] SourceCodeFiles { get; public set; }
    public ITaskItem[] XamlBuildTypeInspectionExtensionNames { get; public set; }
    public ITaskItem[] ApplicationMarkupWithTypeName { get; public set; }
    public string LocalAssemblyReference { get; public set; }
    public string RootNamespace { get; public set; }
    public string BuildTaskPath { get; public set; }
    [OutputAttribute]
public ITaskItem[] ExtensionGeneratedCodeFiles { get; public set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_ApplicationMarkup();
    [CompilerGeneratedAttribute]
public void set_ApplicationMarkup(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public void set_AssemblyName(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_References();
    [CompilerGeneratedAttribute]
public void set_References(ITaskItem[] value);
    public string get_Language();
    public void set_Language(string value);
    public string get_OutputPath();
    public void set_OutputPath(string value);
    public string get_MSBuildProjectDirectory();
    public void set_MSBuildProjectDirectory(string value);
    [CompilerGeneratedAttribute]
public bool get_IsInProcessXamlMarkupCompile();
    [CompilerGeneratedAttribute]
public void set_IsInProcessXamlMarkupCompile(bool value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_SourceCodeFiles();
    [CompilerGeneratedAttribute]
public void set_SourceCodeFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_XamlBuildTypeInspectionExtensionNames();
    [CompilerGeneratedAttribute]
public void set_XamlBuildTypeInspectionExtensionNames(ITaskItem[] value);
    public ITaskItem[] get_ApplicationMarkupWithTypeName();
    public void set_ApplicationMarkupWithTypeName(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_LocalAssemblyReference();
    [CompilerGeneratedAttribute]
public void set_LocalAssemblyReference(string value);
    [CompilerGeneratedAttribute]
public string get_RootNamespace();
    [CompilerGeneratedAttribute]
public void set_RootNamespace(string value);
    [CompilerGeneratedAttribute]
public string get_BuildTaskPath();
    [CompilerGeneratedAttribute]
public void set_BuildTaskPath(string value);
    public ITaskItem[] get_ExtensionGeneratedCodeFiles();
    public void set_ExtensionGeneratedCodeFiles(ITaskItem[] value);
    public virtual bool Execute();
}
public class Microsoft.Build.Tasks.Xaml.GenerateTemporaryAssemblyTask : Task {
    [RequiredAttribute]
public string AssemblyName { get; public set; }
    [RequiredAttribute]
public string OutputPath { get; public set; }
    [RequiredAttribute]
public string CurrentProject { get; public set; }
    [RequiredAttribute]
public ITaskItem[] SourceCodeFiles { get; public set; }
    [RequiredAttribute]
public string CompileTargetName { get; public set; }
    public ITaskItem[] GeneratedResourcesFiles { get; public set; }
    public ITaskItem[] ReferencePaths { get; public set; }
    [RequiredAttribute]
public string ApplicationMarkupTypeName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public void set_AssemblyName(string value);
    [CompilerGeneratedAttribute]
public string get_OutputPath();
    [CompilerGeneratedAttribute]
public void set_OutputPath(string value);
    [CompilerGeneratedAttribute]
public string get_CurrentProject();
    [CompilerGeneratedAttribute]
public void set_CurrentProject(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_SourceCodeFiles();
    [CompilerGeneratedAttribute]
public void set_SourceCodeFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_CompileTargetName();
    [CompilerGeneratedAttribute]
public void set_CompileTargetName(string value);
    public ITaskItem[] get_GeneratedResourcesFiles();
    public void set_GeneratedResourcesFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_ReferencePaths();
    [CompilerGeneratedAttribute]
public void set_ReferencePaths(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_ApplicationMarkupTypeName();
    [CompilerGeneratedAttribute]
public void set_ApplicationMarkupTypeName(string value);
    public virtual bool Execute();
}
public interface Microsoft.Build.Tasks.Xaml.IXamlBuildTypeGenerationExtension {
    public abstract virtual bool Execute(ClassData classData, XamlBuildTypeGenerationExtensionContext buildContext);
}
public interface Microsoft.Build.Tasks.Xaml.IXamlBuildTypeInspectionExtension {
    public abstract virtual bool Execute(XamlBuildTypeInspectionExtensionContext buildContext);
}
public enum Microsoft.Build.Tasks.Xaml.MemberVisibility : Enum {
    public int value__;
    public static MemberVisibility Public;
    public static MemberVisibility Private;
    public static MemberVisibility Family;
    public static MemberVisibility Assembly;
    public static MemberVisibility FamilyOrAssembly;
    public static MemberVisibility FamilyAndAssembly;
}
public class Microsoft.Build.Tasks.Xaml.NamedObject : object {
    public string Name { get; public set; }
    public XamlType Type { get; public set; }
    public MemberVisibility Visibility { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public XamlType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(XamlType value);
    public MemberVisibility get_Visibility();
    public void set_Visibility(MemberVisibility value);
}
public class Microsoft.Build.Tasks.Xaml.PartialClassGenerationTask : Task {
    [OutputAttribute]
public ITaskItem[] ApplicationMarkup { get; public set; }
    public string AssemblyName { get; public set; }
    public String[] KnownReferencePaths { get; public set; }
    [OutputAttribute]
public ITaskItem[] GeneratedResources { get; public set; }
    [OutputAttribute]
public ITaskItem[] GeneratedCodeFiles { get; public set; }
    public string GeneratedSourceExtension { get; public set; }
    [RequiredAttribute]
public string Language { get; public set; }
    [RequiredAttribute]
public string OutputPath { get; public set; }
    public string MSBuildProjectDirectory { get; public set; }
    public ITaskItem[] References { get; public set; }
    public string RootNamespace { get; public set; }
    public ITaskItem[] SourceCodeFiles { get; public set; }
    [OutputAttribute]
public bool RequiresCompilationPass2 { get; public set; }
    public string BuildTaskPath { get; public set; }
    public bool IsInProcessXamlMarkupCompile { get; public set; }
    public ITaskItem[] XamlBuildTypeGenerationExtensionNames { get; public set; }
    public ITaskItem[] XamlBuildTypeInspectionExtensionNames { get; public set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_ApplicationMarkup();
    [CompilerGeneratedAttribute]
public void set_ApplicationMarkup(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public void set_AssemblyName(string value);
    [CompilerGeneratedAttribute]
public String[] get_KnownReferencePaths();
    [CompilerGeneratedAttribute]
public void set_KnownReferencePaths(String[] value);
    public ITaskItem[] get_GeneratedResources();
    public void set_GeneratedResources(ITaskItem[] value);
    public ITaskItem[] get_GeneratedCodeFiles();
    public void set_GeneratedCodeFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_GeneratedSourceExtension();
    [CompilerGeneratedAttribute]
public void set_GeneratedSourceExtension(string value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
public string get_OutputPath();
    [CompilerGeneratedAttribute]
public void set_OutputPath(string value);
    public string get_MSBuildProjectDirectory();
    public void set_MSBuildProjectDirectory(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_References();
    [CompilerGeneratedAttribute]
public void set_References(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_RootNamespace();
    [CompilerGeneratedAttribute]
public void set_RootNamespace(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_SourceCodeFiles();
    [CompilerGeneratedAttribute]
public void set_SourceCodeFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public bool get_RequiresCompilationPass2();
    [CompilerGeneratedAttribute]
public void set_RequiresCompilationPass2(bool value);
    [CompilerGeneratedAttribute]
public string get_BuildTaskPath();
    [CompilerGeneratedAttribute]
public void set_BuildTaskPath(string value);
    [CompilerGeneratedAttribute]
public bool get_IsInProcessXamlMarkupCompile();
    [CompilerGeneratedAttribute]
public void set_IsInProcessXamlMarkupCompile(bool value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_XamlBuildTypeGenerationExtensionNames();
    [CompilerGeneratedAttribute]
public void set_XamlBuildTypeGenerationExtensionNames(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_XamlBuildTypeInspectionExtensionNames();
    [CompilerGeneratedAttribute]
public void set_XamlBuildTypeInspectionExtensionNames(ITaskItem[] value);
    public virtual bool Execute();
}
public class Microsoft.Build.Tasks.Xaml.PropertyData : object {
    public IList`1<AttributeData> Attributes { get; }
    [DefaultValueAttribute("")]
public MemberVisibility Visibility { get; public set; }
    public string Name { get; public set; }
    public XamlType Type { get; public set; }
    public IList`1<AttributeData> get_Attributes();
    public MemberVisibility get_Visibility();
    public void set_Visibility(MemberVisibility value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public XamlType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(XamlType value);
}
public class Microsoft.Build.Tasks.Xaml.XamlBuildTypeGenerationExtensionContext : BuildExtensionContext {
    public ITaskItem InputTaskItem { get; internal set; }
    [CompilerGeneratedAttribute]
public ITaskItem get_InputTaskItem();
    [CompilerGeneratedAttribute]
internal void set_InputTaskItem(ITaskItem value);
}
public class Microsoft.Build.Tasks.Xaml.XamlBuildTypeInspectionExtensionContext : BuildExtensionContext {
    public IDictionary`2<string, ITaskItem> MarkupItemsByTypeName { get; }
    public IDictionary`2<string, ITaskItem> get_MarkupItemsByTypeName();
}
