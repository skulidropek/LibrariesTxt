public class System.Management.Instrumentation.DefaultManagementInstaller : Installer {
}
public static class System.Management.Instrumentation.InstrumentationManager : object {
    private static InstrumentationManager();
    public static void RegisterType(Type managementType);
    public static void UnregisterType(Type managementType);
    public static void RegisterAssembly(Assembly managementAssembly);
    public static void UnregisterAssembly(Assembly managementAssembly);
    public static void Publish(object value);
    public static void Revoke(object value);
}
[ComVisibleAttribute("True")]
[ClassInterfaceAttribute("0")]
[ProgIdAttribute("")]
[GuidAttribute("2A7B042D-578A-4366-9A3D-154C0498458E")]
public class System.Management.Instrumentation.ManagedCommonProvider : object {
}
[AttributeUsageAttribute("32767")]
public class System.Management.Instrumentation.ManagementQualifierAttribute : Attribute {
    public string Name { get; }
    public object Value { get; public set; }
    public ManagementQualifierFlavors Flavor { get; public set; }
    public ManagementQualifierAttribute(string name);
    public string get_Name();
    public object get_Value();
    public void set_Value(object value);
    public ManagementQualifierFlavors get_Flavor();
    public void set_Flavor(ManagementQualifierFlavors value);
}
[FlagsAttribute]
public enum System.Management.Instrumentation.ManagementQualifierFlavors : Enum {
    public int value__;
    public static ManagementQualifierFlavors Amended;
    public static ManagementQualifierFlavors DisableOverride;
    public static ManagementQualifierFlavors ClassOnly;
    public static ManagementQualifierFlavors ThisClassOnly;
}
public class System.Management.Instrumentation.WmiProviderInstallationException : Exception {
    public WmiProviderInstallationException(string message);
    public WmiProviderInstallationException(string message, Exception innerException);
    protected WmiProviderInstallationException(SerializationInfo info, StreamingContext context);
}
