internal static class AssemblyRef : object {
    internal static string ProductPublicKey;
    internal static string TestPublicKey;
    internal static string ProductPublicKeyToken;
}
public class Microsoft.OData.Client.ActionDescriptor : OperationDescriptor {
}
internal class Microsoft.OData.Client.AddNewEndingTokenVisitor : object {
    private PathSegmentToken newTokenToAdd;
    public AddNewEndingTokenVisitor(PathSegmentToken newTokenToAdd);
    public sealed virtual void Visit(SystemToken tokenIn);
    public sealed virtual void Visit(NonSystemToken tokenIn);
}
public class Microsoft.OData.Client.ALinq.UriParser.AggregateExpressionToken : AggregateTokenBase {
    private QueryToken expression;
    private AggregationMethod method;
    private AggregationMethodDefinition methodDefinition;
    private string alias;
    public QueryTokenKind Kind { get; }
    public AggregationMethod Method { get; }
    public QueryToken Expression { get; }
    public AggregationMethodDefinition MethodDefinition { get; }
    public string Alias { get; }
    public AggregateExpressionToken(QueryToken expression, AggregationMethod method, string alias);
    public AggregateExpressionToken(QueryToken expression, AggregationMethodDefinition methodDefinition, string alias);
    public virtual QueryTokenKind get_Kind();
    public AggregationMethod get_Method();
    public QueryToken get_Expression();
    public AggregationMethodDefinition get_MethodDefinition();
    public string get_Alias();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.AggregateToken : ApplyTransformationToken {
    private IEnumerable`1<AggregateTokenBase> expressions;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<AggregateTokenBase> AggregateExpressions { get; }
    public AggregateToken(IEnumerable`1<AggregateTokenBase> expressions);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<AggregateTokenBase> get_AggregateExpressions();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public abstract class Microsoft.OData.Client.ALinq.UriParser.AggregateTokenBase : ApplyTransformationToken {
}
public class Microsoft.OData.Client.ALinq.UriParser.AllToken : LambdaToken {
    public QueryTokenKind Kind { get; }
    public AllToken(QueryToken expression, string parameter, QueryToken parent);
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.AnyToken : LambdaToken {
    public QueryTokenKind Kind { get; }
    public AnyToken(QueryToken expression, string parameter, QueryToken parent);
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public abstract class Microsoft.OData.Client.ALinq.UriParser.ApplyTransformationToken : QueryToken {
}
public class Microsoft.OData.Client.ALinq.UriParser.BinaryOperatorToken : QueryToken {
    private BinaryOperatorKind operatorKind;
    private QueryToken left;
    private QueryToken right;
    public QueryTokenKind Kind { get; }
    public BinaryOperatorKind OperatorKind { get; }
    public QueryToken Left { get; }
    public QueryToken Right { get; }
    public BinaryOperatorToken(BinaryOperatorKind operatorKind, QueryToken left, QueryToken right);
    public virtual QueryTokenKind get_Kind();
    public BinaryOperatorKind get_OperatorKind();
    public QueryToken get_Left();
    public QueryToken get_Right();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.ComputeExpressionToken : QueryToken {
    private QueryToken expression;
    private string alias;
    public QueryTokenKind Kind { get; }
    public QueryToken Expression { get; }
    public string Alias { get; }
    public ComputeExpressionToken(QueryToken expression, string alias);
    public virtual QueryTokenKind get_Kind();
    public QueryToken get_Expression();
    public string get_Alias();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.ComputeToken : ApplyTransformationToken {
    private IEnumerable`1<ComputeExpressionToken> expressions;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<ComputeExpressionToken> Expressions { get; }
    public ComputeToken(IEnumerable`1<ComputeExpressionToken> expressions);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<ComputeExpressionToken> get_Expressions();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.CountSegmentToken : PathToken {
    private QueryToken nextToken;
    private QueryToken filterOption;
    private QueryToken searchOption;
    public QueryTokenKind Kind { get; }
    public string Identifier { get; }
    public QueryToken NextToken { get; public set; }
    public QueryToken FilterOption { get; public set; }
    public QueryToken SearchOption { get; public set; }
    public CountSegmentToken(QueryToken nextToken);
    public CountSegmentToken(QueryToken nextToken, QueryToken filterOption, QueryToken searchOption);
    public virtual QueryTokenKind get_Kind();
    public virtual string get_Identifier();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public QueryToken get_FilterOption();
    public void set_FilterOption(QueryToken value);
    public QueryToken get_SearchOption();
    public void set_SearchOption(QueryToken value);
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.CustomQueryOptionToken : QueryToken {
    private string name;
    private string value;
    public QueryTokenKind Kind { get; }
    public string Name { get; }
    public string Value { get; }
    public CustomQueryOptionToken(string name, string value);
    public virtual QueryTokenKind get_Kind();
    public string get_Name();
    public string get_Value();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.DottedIdentifierToken : PathToken {
    private string identifier;
    private QueryToken nextToken;
    public QueryTokenKind Kind { get; }
    public string Identifier { get; }
    public QueryToken NextToken { get; public set; }
    public DottedIdentifierToken(string identifier, QueryToken nextToken);
    public virtual QueryTokenKind get_Kind();
    public virtual string get_Identifier();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.EndPathToken : PathToken {
    private string identifier;
    private QueryToken nextToken;
    public QueryTokenKind Kind { get; }
    public QueryToken NextToken { get; public set; }
    public string Identifier { get; }
    public EndPathToken(string identifier, QueryToken nextToken);
    public virtual QueryTokenKind get_Kind();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public virtual string get_Identifier();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.EntitySetAggregateToken : AggregateTokenBase {
    private QueryToken entitySet;
    private IEnumerable`1<AggregateTokenBase> expressions;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<AggregateTokenBase> Expressions { get; }
    public QueryToken EntitySet { get; }
    public EntitySetAggregateToken(QueryToken entitySet, IEnumerable`1<AggregateTokenBase> expressions);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<AggregateTokenBase> get_Expressions();
    public QueryToken get_EntitySet();
    public static EntitySetAggregateToken Merge(EntitySetAggregateToken token1, EntitySetAggregateToken token2);
    public string Path();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal static class Microsoft.OData.Client.ALinq.UriParser.ExceptionUtils : object {
    private static Type OutOfMemoryType;
    private static ExceptionUtils();
    [DebuggerStepThroughAttribute]
internal static bool IsCatchableExceptionType(Exception e);
    [DebuggerStepThroughAttribute]
internal static T CheckArgumentNotNull(T value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckArgumentStringNotEmpty(string value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckArgumentStringNotNullOrEmpty(string value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckIntegerNotNegative(int value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckIntegerPositive(int value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckLongPositive(long value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckArgumentCollectionNotNullOrEmpty(ICollection`1<T> value, string parameterName);
}
public class Microsoft.OData.Client.ALinq.UriParser.ExpandTermToken : SelectExpandTermToken {
    [CompilerGeneratedAttribute]
private ExpandToken <ExpandOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <LevelsOption>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<QueryToken> <ApplyOptions>k__BackingField;
    public PathSegmentToken PathToNavigationProp { get; }
    public ExpandToken ExpandOption { get; internal set; }
    public Nullable`1<long> LevelsOption { get; private set; }
    public IEnumerable`1<QueryToken> ApplyOptions { get; private set; }
    public QueryTokenKind Kind { get; }
    public ExpandTermToken(PathSegmentToken pathToNavigationProp);
    public ExpandTermToken(PathSegmentToken pathToNavigationProp, SelectToken selectOption, ExpandToken expandOption);
    public ExpandTermToken(PathSegmentToken pathToNavigationProp, QueryToken filterOption, IEnumerable`1<OrderByToken> orderByOptions, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countQueryOption, Nullable`1<long> levelsOption, QueryToken searchOption, SelectToken selectOption, ExpandToken expandOption);
    public ExpandTermToken(PathSegmentToken pathToNavigationProp, QueryToken filterOption, IEnumerable`1<OrderByToken> orderByOptions, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countQueryOption, Nullable`1<long> levelsOption, QueryToken searchOption, SelectToken selectOption, ExpandToken expandOption, ComputeToken computeOption);
    public ExpandTermToken(PathSegmentToken pathToNavigationProp, QueryToken filterOption, IEnumerable`1<OrderByToken> orderByOptions, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countQueryOption, Nullable`1<long> levelsOption, QueryToken searchOption, SelectToken selectOption, ExpandToken expandOption, ComputeToken computeOption, IEnumerable`1<QueryToken> applyOptions);
    public PathSegmentToken get_PathToNavigationProp();
    [CompilerGeneratedAttribute]
public ExpandToken get_ExpandOption();
    [CompilerGeneratedAttribute]
internal void set_ExpandOption(ExpandToken value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_LevelsOption();
    [CompilerGeneratedAttribute]
private void set_LevelsOption(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<QueryToken> get_ApplyOptions();
    [CompilerGeneratedAttribute]
private void set_ApplyOptions(IEnumerable`1<QueryToken> value);
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.ExpandToken : QueryToken {
    private IEnumerable`1<ExpandTermToken> expandTerms;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<ExpandTermToken> ExpandTerms { get; }
    public ExpandToken(ExpandTermToken[] expandTerms);
    public ExpandToken(IEnumerable`1<ExpandTermToken> expandTerms);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<ExpandTermToken> get_ExpandTerms();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.FunctionCallToken : QueryToken {
    private string name;
    private IEnumerable`1<FunctionParameterToken> arguments;
    private QueryToken source;
    public QueryTokenKind Kind { get; }
    public string Name { get; }
    public IEnumerable`1<FunctionParameterToken> Arguments { get; }
    public QueryToken Source { get; }
    public FunctionCallToken(string name, IEnumerable`1<QueryToken> argumentValues);
    public FunctionCallToken(string name, IEnumerable`1<FunctionParameterToken> arguments, QueryToken source);
    public virtual QueryTokenKind get_Kind();
    public string get_Name();
    public IEnumerable`1<FunctionParameterToken> get_Arguments();
    public QueryToken get_Source();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.OData.Client.ALinq.UriParser.FunctionParameterAliasToken : QueryToken {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmTypeReference <ExpectedParameterType>k__BackingField;
    public string Alias { get; private set; }
    public QueryTokenKind Kind { get; }
    internal IEdmTypeReference ExpectedParameterType { get; internal set; }
    public FunctionParameterAliasToken(string alias);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
private void set_Alias(string value);
    public virtual QueryTokenKind get_Kind();
    [CompilerGeneratedAttribute]
internal IEdmTypeReference get_ExpectedParameterType();
    [CompilerGeneratedAttribute]
internal void set_ExpectedParameterType(IEdmTypeReference value);
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.FunctionParameterToken : QueryToken {
    [SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
public static FunctionParameterToken[] EmptyParameterList;
    private string parameterName;
    private QueryToken valueToken;
    public string ParameterName { get; }
    public QueryToken ValueToken { get; }
    public QueryTokenKind Kind { get; }
    public FunctionParameterToken(string parameterName, QueryToken valueToken);
    private static FunctionParameterToken();
    public string get_ParameterName();
    public QueryToken get_ValueToken();
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.GroupByToken : ApplyTransformationToken {
    private IEnumerable`1<EndPathToken> properties;
    private ApplyTransformationToken child;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<EndPathToken> Properties { get; }
    public ApplyTransformationToken Child { get; }
    public GroupByToken(IEnumerable`1<EndPathToken> properties, ApplyTransformationToken child);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<EndPathToken> get_Properties();
    public ApplyTransformationToken get_Child();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.InnerPathToken : PathToken {
    private string identifier;
    private IEnumerable`1<NamedValue> namedValues;
    private QueryToken nextToken;
    public QueryTokenKind Kind { get; }
    public string Identifier { get; }
    public QueryToken NextToken { get; public set; }
    public IEnumerable`1<NamedValue> NamedValues { get; }
    public InnerPathToken(string identifier, QueryToken nextToken, IEnumerable`1<NamedValue> namedValues);
    public virtual QueryTokenKind get_Kind();
    public virtual string get_Identifier();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public IEnumerable`1<NamedValue> get_NamedValues();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.InToken : QueryToken {
    private QueryToken left;
    private QueryToken right;
    public QueryTokenKind Kind { get; }
    public QueryToken Left { get; }
    public QueryToken Right { get; }
    public InToken(QueryToken left, QueryToken right);
    public virtual QueryTokenKind get_Kind();
    public QueryToken get_Left();
    public QueryToken get_Right();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public interface Microsoft.OData.Client.ALinq.UriParser.IPathSegmentTokenVisitor {
    public abstract virtual void Visit(SystemToken tokenIn);
    public abstract virtual void Visit(NonSystemToken tokenIn);
}
public interface Microsoft.OData.Client.ALinq.UriParser.IPathSegmentTokenVisitor`1 {
    public abstract virtual T Visit(SystemToken tokenIn);
    public abstract virtual T Visit(NonSystemToken tokenIn);
}
public interface Microsoft.OData.Client.ALinq.UriParser.ISyntacticTreeVisitor`1 {
    public abstract virtual T Visit(AllToken tokenIn);
    public abstract virtual T Visit(AnyToken tokenIn);
    public abstract virtual T Visit(BinaryOperatorToken tokenIn);
    public abstract virtual T Visit(CountSegmentToken tokenIn);
    public abstract virtual T Visit(InToken tokenIn);
    public abstract virtual T Visit(DottedIdentifierToken tokenIn);
    public abstract virtual T Visit(ExpandToken tokenIn);
    public abstract virtual T Visit(ExpandTermToken tokenIn);
    public abstract virtual T Visit(FunctionCallToken tokenIn);
    public abstract virtual T Visit(LambdaToken tokenIn);
    public abstract virtual T Visit(LiteralToken tokenIn);
    public abstract virtual T Visit(InnerPathToken tokenIn);
    public abstract virtual T Visit(OrderByToken tokenIn);
    public abstract virtual T Visit(EndPathToken tokenIn);
    public abstract virtual T Visit(CustomQueryOptionToken tokenIn);
    public abstract virtual T Visit(RangeVariableToken tokenIn);
    public abstract virtual T Visit(SelectToken tokenIn);
    public abstract virtual T Visit(SelectTermToken tokenIn);
    public abstract virtual T Visit(StarToken tokenIn);
    public abstract virtual T Visit(UnaryOperatorToken tokenIn);
    public abstract virtual T Visit(FunctionParameterToken tokenIn);
    public abstract virtual T Visit(AggregateToken tokenIn);
    public abstract virtual T Visit(AggregateExpressionToken tokenIn);
    public abstract virtual T Visit(EntitySetAggregateToken tokenIn);
    public abstract virtual T Visit(GroupByToken tokenIn);
}
public abstract class Microsoft.OData.Client.ALinq.UriParser.LambdaToken : QueryToken {
    private QueryToken parent;
    private string parameter;
    private QueryToken expression;
    public QueryToken Parent { get; }
    public QueryToken Expression { get; }
    public string Parameter { get; }
    protected LambdaToken(QueryToken expression, string parameter, QueryToken parent);
    public QueryToken get_Parent();
    public QueryToken get_Expression();
    public string get_Parameter();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.LiteralToken : QueryToken {
    private string originalText;
    private object value;
    private IEdmTypeReference expectedEdmTypeReference;
    public QueryTokenKind Kind { get; }
    public object Value { get; }
    internal string OriginalText { get; }
    internal IEdmTypeReference ExpectedEdmTypeReference { get; }
    public LiteralToken(object value);
    internal LiteralToken(object value, string originalText);
    internal LiteralToken(object value, string originalText, IEdmTypeReference expectedEdmTypeReference);
    public virtual QueryTokenKind get_Kind();
    public object get_Value();
    internal string get_OriginalText();
    internal IEdmTypeReference get_ExpectedEdmTypeReference();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.NamedValue : object {
    private string name;
    private LiteralToken value;
    public string Name { get; }
    public LiteralToken Value { get; }
    public NamedValue(string name, LiteralToken value);
    public string get_Name();
    public LiteralToken get_Value();
}
public class Microsoft.OData.Client.ALinq.UriParser.NonSystemToken : PathSegmentToken {
    private IEnumerable`1<NamedValue> namedValues;
    private string identifier;
    public IEnumerable`1<NamedValue> NamedValues { get; }
    public string Identifier { get; }
    public NonSystemToken(string identifier, IEnumerable`1<NamedValue> namedValues, PathSegmentToken nextToken);
    public IEnumerable`1<NamedValue> get_NamedValues();
    public virtual string get_Identifier();
    public virtual bool IsNamespaceOrContainerQualified();
    public virtual T Accept(IPathSegmentTokenVisitor`1<T> visitor);
    public virtual void Accept(IPathSegmentTokenVisitor visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.OrderByToken : QueryToken {
    private OrderByDirection direction;
    private QueryToken expression;
    public QueryTokenKind Kind { get; }
    public OrderByDirection Direction { get; }
    public QueryToken Expression { get; }
    public OrderByToken(QueryToken expression, OrderByDirection direction);
    public virtual QueryTokenKind get_Kind();
    public OrderByDirection get_Direction();
    public QueryToken get_Expression();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public abstract class Microsoft.OData.Client.ALinq.UriParser.PathSegmentToken : object {
    [CompilerGeneratedAttribute]
private PathSegmentToken <NextToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStructuralProperty>k__BackingField;
    public PathSegmentToken NextToken { get; internal set; }
    public string Identifier { get; }
    public bool IsStructuralProperty { get; public set; }
    protected PathSegmentToken(PathSegmentToken nextToken);
    [CompilerGeneratedAttribute]
public PathSegmentToken get_NextToken();
    [CompilerGeneratedAttribute]
internal void set_NextToken(PathSegmentToken value);
    public abstract virtual string get_Identifier();
    [CompilerGeneratedAttribute]
public bool get_IsStructuralProperty();
    [CompilerGeneratedAttribute]
public void set_IsStructuralProperty(bool value);
    public abstract virtual bool IsNamespaceOrContainerQualified();
    public abstract virtual T Accept(IPathSegmentTokenVisitor`1<T> visitor);
    public abstract virtual void Accept(IPathSegmentTokenVisitor visitor);
}
public abstract class Microsoft.OData.Client.ALinq.UriParser.PathToken : QueryToken {
    public QueryToken NextToken { get; public set; }
    public string Identifier { get; }
    public abstract virtual QueryToken get_NextToken();
    public abstract virtual void set_NextToken(QueryToken value);
    public abstract virtual string get_Identifier();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private static int Combine(int h1, int h2);
}
public abstract class Microsoft.OData.Client.ALinq.UriParser.QueryToken : object {
    [SuppressMessageAttribute("Microsoft.Security", "CA2105:ArrayFieldsShouldNotBeReadOnly")]
[SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
public static QueryToken[] EmptyTokens;
    public QueryTokenKind Kind { get; }
    private static QueryToken();
    public abstract virtual QueryTokenKind get_Kind();
    public abstract virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
[SuppressMessageAttribute("Microsoft.Design", "CA1008:EnumsShouldHaveZeroValue")]
public enum Microsoft.OData.Client.ALinq.UriParser.QueryTokenKind : Enum {
    public int value__;
    public static QueryTokenKind BinaryOperator;
    public static QueryTokenKind UnaryOperator;
    public static QueryTokenKind Literal;
    public static QueryTokenKind FunctionCall;
    public static QueryTokenKind EndPath;
    public static QueryTokenKind OrderBy;
    public static QueryTokenKind CustomQueryOption;
    public static QueryTokenKind Select;
    public static QueryTokenKind Star;
    public static QueryTokenKind Expand;
    public static QueryTokenKind TypeSegment;
    public static QueryTokenKind Any;
    public static QueryTokenKind InnerPath;
    public static QueryTokenKind DottedIdentifier;
    public static QueryTokenKind RangeVariable;
    public static QueryTokenKind All;
    public static QueryTokenKind ExpandTerm;
    public static QueryTokenKind FunctionParameter;
    public static QueryTokenKind FunctionParameterAlias;
    public static QueryTokenKind StringLiteral;
    public static QueryTokenKind Aggregate;
    public static QueryTokenKind AggregateExpression;
    public static QueryTokenKind AggregateGroupBy;
    public static QueryTokenKind Compute;
    public static QueryTokenKind ComputeExpression;
    public static QueryTokenKind EntitySetAggregateExpression;
    public static QueryTokenKind In;
    public static QueryTokenKind SelectTerm;
    public static QueryTokenKind CountSegment;
}
public class Microsoft.OData.Client.ALinq.UriParser.RangeVariableToken : QueryToken {
    private string name;
    public QueryTokenKind Kind { get; }
    public string Name { get; }
    public RangeVariableToken(string name);
    public virtual QueryTokenKind get_Kind();
    public string get_Name();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal class Microsoft.OData.Client.ALinq.UriParser.ReadOnlyEnumerableForUriParser`1 : object {
    private IEnumerable`1<T> sourceEnumerable;
    internal ReadOnlyEnumerableForUriParser`1(IEnumerable`1<T> sourceEnumerable);
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public abstract class Microsoft.OData.Client.ALinq.UriParser.SelectExpandTermToken : QueryToken {
    [CompilerGeneratedAttribute]
private PathSegmentToken <PathToProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryToken <FilterOption>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<OrderByToken> <OrderByOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryToken <SearchOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TopOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SkipOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CountQueryOption>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectToken <SelectOption>k__BackingField;
    [CompilerGeneratedAttribute]
private ComputeToken <ComputeOption>k__BackingField;
    public PathSegmentToken PathToProperty { get; internal set; }
    public QueryToken FilterOption { get; private set; }
    public IEnumerable`1<OrderByToken> OrderByOptions { get; private set; }
    public QueryToken SearchOption { get; private set; }
    public Nullable`1<long> TopOption { get; private set; }
    public Nullable`1<long> SkipOption { get; private set; }
    public Nullable`1<bool> CountQueryOption { get; private set; }
    public SelectToken SelectOption { get; internal set; }
    public ComputeToken ComputeOption { get; private set; }
    protected SelectExpandTermToken(PathSegmentToken pathToProperty, QueryToken filterOption, IEnumerable`1<OrderByToken> orderByOptions, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countQueryOption, QueryToken searchOption, SelectToken selectOption, ComputeToken computeOption);
    [CompilerGeneratedAttribute]
public PathSegmentToken get_PathToProperty();
    [CompilerGeneratedAttribute]
internal void set_PathToProperty(PathSegmentToken value);
    [CompilerGeneratedAttribute]
public QueryToken get_FilterOption();
    [CompilerGeneratedAttribute]
private void set_FilterOption(QueryToken value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<OrderByToken> get_OrderByOptions();
    [CompilerGeneratedAttribute]
private void set_OrderByOptions(IEnumerable`1<OrderByToken> value);
    [CompilerGeneratedAttribute]
public QueryToken get_SearchOption();
    [CompilerGeneratedAttribute]
private void set_SearchOption(QueryToken value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TopOption();
    [CompilerGeneratedAttribute]
private void set_TopOption(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SkipOption();
    [CompilerGeneratedAttribute]
private void set_SkipOption(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CountQueryOption();
    [CompilerGeneratedAttribute]
private void set_CountQueryOption(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public SelectToken get_SelectOption();
    [CompilerGeneratedAttribute]
internal void set_SelectOption(SelectToken value);
    [CompilerGeneratedAttribute]
public ComputeToken get_ComputeOption();
    [CompilerGeneratedAttribute]
private void set_ComputeOption(ComputeToken value);
}
public class Microsoft.OData.Client.ALinq.UriParser.SelectTermToken : SelectExpandTermToken {
    public QueryTokenKind Kind { get; }
    public SelectTermToken(PathSegmentToken pathToProperty);
    public SelectTermToken(PathSegmentToken pathToProperty, SelectToken selectOption);
    public SelectTermToken(PathSegmentToken pathToProperty, QueryToken filterOption, IEnumerable`1<OrderByToken> orderByOptions, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countQueryOption, QueryToken searchOption, SelectToken selectOption, ComputeToken computeOption);
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.SelectToken : QueryToken {
    private IEnumerable`1<SelectTermToken> selectTerms;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<PathSegmentToken> Properties { get; }
    public IEnumerable`1<SelectTermToken> SelectTerms { get; }
    public SelectToken(IEnumerable`1<PathSegmentToken> properties);
    public SelectToken(IEnumerable`1<SelectTermToken> selectTerms);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<PathSegmentToken> get_Properties();
    public IEnumerable`1<SelectTermToken> get_SelectTerms();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.StarToken : PathToken {
    private QueryToken nextToken;
    public QueryTokenKind Kind { get; }
    public QueryToken NextToken { get; public set; }
    public string Identifier { get; }
    public StarToken(QueryToken nextToken);
    public virtual QueryTokenKind get_Kind();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public virtual string get_Identifier();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal abstract class Microsoft.OData.Client.ALinq.UriParser.SyntacticTreeVisitor`1 : object {
    public virtual T Visit(AllToken tokenIn);
    public virtual T Visit(AnyToken tokenIn);
    public virtual T Visit(BinaryOperatorToken tokenIn);
    public virtual T Visit(CountSegmentToken tokenIn);
    public virtual T Visit(InToken tokenIn);
    public virtual T Visit(DottedIdentifierToken tokenIn);
    public virtual T Visit(ExpandToken tokenIn);
    public virtual T Visit(ExpandTermToken tokenIn);
    public virtual T Visit(FunctionCallToken tokenIn);
    public virtual T Visit(LiteralToken tokenIn);
    public virtual T Visit(AggregateToken tokenIn);
    public virtual T Visit(GroupByToken tokenIn);
    public virtual T Visit(AggregateExpressionToken tokenIn);
    public virtual T Visit(EntitySetAggregateToken tokenIn);
    public virtual T Visit(LambdaToken tokenIn);
    public virtual T Visit(InnerPathToken tokenIn);
    public virtual T Visit(OrderByToken tokenIn);
    public virtual T Visit(EndPathToken tokenIn);
    public virtual T Visit(CustomQueryOptionToken tokenIn);
    public virtual T Visit(RangeVariableToken tokenIn);
    public virtual T Visit(SelectToken tokenIn);
    public virtual T Visit(SelectTermToken tokenIn);
    public virtual T Visit(StarToken tokenIn);
    public virtual T Visit(UnaryOperatorToken tokenIn);
    public virtual T Visit(FunctionParameterToken tokenIn);
    public virtual T Visit(ComputeToken tokenIn);
    public virtual T Visit(ComputeExpressionToken tokenIn);
}
public class Microsoft.OData.Client.ALinq.UriParser.SystemToken : PathSegmentToken {
    private string identifier;
    public string Identifier { get; }
    public SystemToken(string identifier, PathSegmentToken nextToken);
    public virtual string get_Identifier();
    public virtual bool IsNamespaceOrContainerQualified();
    public virtual T Accept(IPathSegmentTokenVisitor`1<T> visitor);
    public virtual void Accept(IPathSegmentTokenVisitor visitor);
}
public class Microsoft.OData.Client.ALinq.UriParser.UnaryOperatorToken : QueryToken {
    private UnaryOperatorKind operatorKind;
    private QueryToken operand;
    public QueryTokenKind Kind { get; }
    public UnaryOperatorKind OperatorKind { get; }
    public QueryToken Operand { get; }
    public UnaryOperatorToken(UnaryOperatorKind operatorKind, QueryToken operand);
    public virtual QueryTokenKind get_Kind();
    public UnaryOperatorKind get_OperatorKind();
    public QueryToken get_Operand();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal abstract class Microsoft.OData.Client.ALinqExpressionVisitor : object {
    internal virtual Expression Visit(Expression exp);
    internal virtual MemberBinding VisitBinding(MemberBinding binding);
    internal virtual ElementInit VisitElementInitializer(ElementInit initializer);
    internal virtual Expression VisitUnary(UnaryExpression u);
    internal virtual Expression VisitBinary(BinaryExpression b);
    internal virtual Expression VisitTypeIs(TypeBinaryExpression b);
    internal virtual Expression VisitConstant(ConstantExpression c);
    internal virtual Expression VisitConditional(ConditionalExpression c);
    internal virtual Expression VisitParameter(ParameterExpression p);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitMethodCall(MethodCallExpression m);
    internal virtual ReadOnlyCollection`1<Expression> VisitExpressionList(ReadOnlyCollection`1<Expression> original);
    internal virtual MemberAssignment VisitMemberAssignment(MemberAssignment assignment);
    internal virtual MemberMemberBinding VisitMemberMemberBinding(MemberMemberBinding binding);
    internal virtual MemberListBinding VisitMemberListBinding(MemberListBinding binding);
    internal virtual IEnumerable`1<MemberBinding> VisitBindingList(ReadOnlyCollection`1<MemberBinding> original);
    internal virtual IEnumerable`1<ElementInit> VisitElementInitializerList(ReadOnlyCollection`1<ElementInit> original);
    internal virtual Expression VisitLambda(LambdaExpression lambda);
    internal virtual NewExpression VisitNew(NewExpression nex);
    internal virtual Expression VisitMemberInit(MemberInitExpression init);
    internal virtual Expression VisitListInit(ListInitExpression init);
    internal virtual Expression VisitNewArray(NewArrayExpression na);
    internal virtual Expression VisitInvocation(InvocationExpression iv);
}
internal static class Microsoft.OData.Client.Annotation.AnnotationHelper : object {
    internal static bool TryGetMetadataAnnotation(DataServiceContext context, object source, string term, string qualifier, TResult& annotationValue);
    internal static IEdmOperation GetEdmOperation(DataServiceContext context, MethodInfo methodInfo);
    internal static IEdmOperationImport GetEdmOperationImport(DataServiceContext context, MethodInfo methodInfo);
    private static IEdmVocabularyAnnotation GetOrInsertCachedMetadataAnnotationForType(DataServiceContext context, Type type, string term, string qualifier);
    private static IEdmVocabularyAnnotation GetOrInsertCachedMetadataAnnotationForPropertyInfo(DataServiceContext context, PropertyInfo propertyInfo, string term, string qualifier);
    private static IEdmVocabularyAnnotation GetOrInsertCachedMetadataAnnotationForMethodInfo(DataServiceContext context, MethodInfo methodInfo, string term, string qualifier);
    private static IEdmVocabularyAnnotation GetCachedMetadataAnnotation(DataServiceContext context, object key, string term, string qualifier);
    private static void InsertMetadataAnnotation(DataServiceContext context, object key, IEdmVocabularyAnnotation edmValueAnnotation);
    private static bool TryEvaluateMetadataAnnotation(DataServiceContext context, IEdmVocabularyAnnotation edmValueAnnotation, ClientEdmStructuredValue clientEdmValue, TResult& annotationValue);
    private static EdmToClrEvaluator CreateEdmToClrEvaluator(DataServiceContext context);
    private static Type[] GetNonBindingParameterTypeArray(DataServiceContext context, IEnumerable`1<IEdmOperationParameter> parameters, bool isBound);
    private static bool TryGetClrTypeFromEdmTypeReference(DataServiceContext context, IEdmTypeReference edmTypeReference, bool isBindingParameter, Type& clrType);
    private static Type ResolveTypeFromName(DataServiceContext context, string qualifiedTypeName);
}
internal class Microsoft.OData.Client.Annotation.InstanceAnnotationDictWeakKeyComparer : WeakKeyComparer`1<object> {
    private static InstanceAnnotationDictWeakKeyComparer defaultInstance;
    public static InstanceAnnotationDictWeakKeyComparer Default { get; }
    public static InstanceAnnotationDictWeakKeyComparer get_Default();
    public virtual int GetHashCode(object obj);
    public object CreateKey(object obj);
    public static bool RemoveRule(object key);
    protected virtual object GetTarget(object obj, Boolean& isDead);
}
internal class Microsoft.OData.Client.ApplyQueryOptionExpression : QueryOptionExpression {
    private List`1<Expression> filterExpressions;
    [CompilerGeneratedAttribute]
private List`1<Aggregation> <Aggregations>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Expression> <GroupingExpressions>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Expression> <KeySelectorMap>k__BackingField;
    public ExpressionType NodeType { get; }
    internal List`1<Aggregation> Aggregations { get; private set; }
    internal ReadOnlyCollection`1<Expression> PredicateConjuncts { get; }
    internal List`1<Expression> GroupingExpressions { get; private set; }
    internal Dictionary`2<string, Expression> KeySelectorMap { get; private set; }
    internal ApplyQueryOptionExpression(Type type);
    public virtual ExpressionType get_NodeType();
    [CompilerGeneratedAttribute]
internal List`1<Aggregation> get_Aggregations();
    [CompilerGeneratedAttribute]
private void set_Aggregations(List`1<Aggregation> value);
    internal void AddPredicateConjuncts(IEnumerable`1<Expression> predicates);
    internal ReadOnlyCollection`1<Expression> get_PredicateConjuncts();
    internal Expression GetPredicate();
    [CompilerGeneratedAttribute]
internal List`1<Expression> get_GroupingExpressions();
    [CompilerGeneratedAttribute]
private void set_GroupingExpressions(List`1<Expression> value);
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, Expression> get_KeySelectorMap();
    [CompilerGeneratedAttribute]
private void set_KeySelectorMap(Dictionary`2<string, Expression> value);
}
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("Count = {count}")]
internal class Microsoft.OData.Client.ArraySet`1 : ValueType {
    private T[] items;
    private int count;
    private int version;
    public int Count { get; }
    public T Item { get; }
    public ArraySet`1(int capacity);
    public int get_Count();
    public T get_Item(int index);
    public bool Add(T item, Func`3<T, T, bool> equalityComparer);
    public bool Contains(T item, Func`3<T, T, bool> equalityComparer);
    [IteratorStateMachineAttribute("Microsoft.OData.Client.ArraySet`1/<GetEnumerator>d__10")]
public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public int IndexOf(T item, Func`3<T, T, bool> comparer);
    public int IndexOf(K item, Func`2<T, K> select, Func`3<K, K, bool> comparer);
    public T Remove(T item, Func`3<T, T, bool> equalityComparer);
    public void RemoveAt(int index);
    public void Sort(Func`2<T, K> selector, Func`3<K, K, int> comparer);
    public void TrimToSize();
    private static T IdentitySelect(T arg);
}
internal abstract class Microsoft.OData.Client.BaseAsyncResult : object {
    internal object Source;
    internal string Method;
    protected PerRequest perRequest;
    private static int True;
    private static int False;
    private AsyncCallback userCallback;
    private object userState;
    private ManualResetEvent asyncWait;
    private Exception failure;
    private ODataRequestMessageWrapper abortable;
    private int completedSynchronously;
    private bool userCompleted;
    private int completed;
    private int userNotified;
    private int done;
    private bool asyncWaitDisposed;
    private object asyncWaitDisposeLock;
    [CompilerGeneratedAttribute]
private MaterializerCache <MaterializerCache>k__BackingField;
    protected MaterializerCache MaterializerCache { get; }
    public object AsyncState { get; }
    [DebuggerBrowsableAttribute("0")]
public WaitHandle AsyncWaitHandle { get; }
    public bool CompletedSynchronously { get; }
    public bool IsCompleted { get; }
    internal bool IsCompletedInternally { get; }
    internal bool IsAborted { get; }
    internal ODataRequestMessageWrapper Abortable { get; internal set; }
    internal Exception Failure { get; }
    internal BaseAsyncResult(object source, string method, AsyncCallback callback, object state);
    [CompilerGeneratedAttribute]
protected MaterializerCache get_MaterializerCache();
    public sealed virtual object get_AsyncState();
    public sealed virtual WaitHandle get_AsyncWaitHandle();
    public sealed virtual bool get_CompletedSynchronously();
    public sealed virtual bool get_IsCompleted();
    internal bool get_IsCompletedInternally();
    internal bool get_IsAborted();
    internal ODataRequestMessageWrapper get_Abortable();
    internal void set_Abortable(ODataRequestMessageWrapper value);
    internal Exception get_Failure();
    internal static T EndExecute(object source, string method, IAsyncResult asyncResult);
    internal static IAsyncResult InvokeAsync(Func`3<AsyncCallback, object, IAsyncResult> asyncAction, AsyncCallback callback, object state);
    internal static IAsyncResult InvokeAsync(AsyncAction asyncAction, Byte[] buffer, int offset, int length, AsyncCallback callback, object state);
    internal void SetCompletedSynchronously(bool isCompletedSynchronously);
    internal void HandleCompleted();
    internal bool HandleFailure(Exception e);
    internal void SetAborted();
    internal void SetCompleted();
    protected static void EqualRefCheck(PerRequest actual, PerRequest expected, InternalError errorcode);
    protected abstract virtual void CompletedRequest();
    protected abstract virtual void HandleCompleted(PerRequest pereq);
    protected abstract virtual void AsyncEndGetResponse(IAsyncResult asyncResult);
    protected virtual void CompleteCheck(PerRequest value, InternalError errorcode);
    protected virtual void FinishCurrentChange(PerRequest pereq);
    protected bool HandleFailure(PerRequest pereq, Exception e);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
protected void AsyncEndGetRequestStream(IAsyncResult asyncResult);
    private static IAsyncResult PostInvokeAsync(IAsyncResult asyncResult, AsyncCallback callback);
    private static AsyncCallback GetDataServiceAsyncCallback(AsyncCallback callback);
    private void SetAsyncWaitHandle();
    private void AsyncRequestContentEndRead(IAsyncResult asyncResult);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
private void AsyncEndWrite(IAsyncResult asyncResult);
}
public class Microsoft.OData.Client.BaseEntityType : object {
    [CompilerGeneratedAttribute]
private DataServiceContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private EntityDescriptor <EntityDescriptor>k__BackingField;
    protected internal DataServiceContext Context { get; protected internal set; }
    private DataServiceContext Microsoft.OData.Client.IBaseEntityType.DataServiceContext { get; private set; }
    protected internal EntityDescriptor EntityDescriptor { get; protected internal set; }
    private EntityDescriptor Microsoft.OData.Client.IBaseEntityType.EntityDescriptor { get; private set; }
    [CompilerGeneratedAttribute]
protected internal DataServiceContext get_Context();
    [CompilerGeneratedAttribute]
protected internal void set_Context(DataServiceContext value);
    private sealed virtual override DataServiceContext Microsoft.OData.Client.IBaseEntityType.get_DataServiceContext();
    private sealed virtual override void Microsoft.OData.Client.IBaseEntityType.set_DataServiceContext(DataServiceContext value);
    [CompilerGeneratedAttribute]
protected internal EntityDescriptor get_EntityDescriptor();
    [CompilerGeneratedAttribute]
protected internal void set_EntityDescriptor(EntityDescriptor value);
    private sealed virtual override EntityDescriptor Microsoft.OData.Client.IBaseEntityType.get_EntityDescriptor();
    private sealed virtual override void Microsoft.OData.Client.IBaseEntityType.set_EntityDescriptor(EntityDescriptor value);
}
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")]
internal abstract class Microsoft.OData.Client.BaseSaveResult : BaseAsyncResult {
    protected RequestInfo RequestInfo;
    protected Serializer SerializerInstance;
    protected List`1<Descriptor> ChangedEntries;
    protected SaveChangesOptions Options;
    protected IODataResponseMessage batchResponseMessage;
    protected int entryIndex;
    protected StreamRequestKind streamRequestKind;
    protected Stream mediaResourceRequestStream;
    protected Byte[] buildBatchBuffer;
    private static string JsonContentTypeHeader;
    internal bool IsBatchRequest { get; }
    protected Stream ResponseStream { get; }
    protected bool ProcessResponsePayload { get; }
    [SuppressMessageAttribute("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
internal BaseSaveResult(DataServiceContext context, string method, DataServiceRequest[] queries, SaveChangesOptions options, AsyncCallback callback, object state);
    internal abstract virtual bool get_IsBatchRequest();
    protected abstract virtual Stream get_ResponseStream();
    protected abstract virtual bool get_ProcessResponsePayload();
    internal static BaseSaveResult CreateSaveResult(DataServiceContext context, string method, DataServiceRequest[] queries, SaveChangesOptions options, AsyncCallback callback, object state);
    internal static InvalidOperationException HandleResponse(RequestInfo requestInfo, HttpStatusCode statusCode, string responseVersion, Func`1<Stream> getResponseStream, bool throwOnFailure, Version& parsedResponseVersion);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031")]
internal static DataServiceClientException GetResponseText(Func`1<Stream> getResponseStream, HttpStatusCode statusCode);
    internal DataServiceResponse EndRequest();
    protected static string GetLinkHttpMethod(LinkDescriptor link);
    protected static void ApplyPreferences(HeaderCollection headers, string method, DataServiceResponsePreference responsePreference, Version& requestVersion);
    protected abstract virtual DataServiceResponse HandleResponse();
    protected abstract virtual ODataRequestMessageWrapper CreateRequestMessage(string method, Uri requestUri, HeaderCollection headers, HttpStack httpStack, Descriptor descriptor, string contentId);
    protected string GetHttpMethod(EntityStates state, Version& requestVersion);
    protected bool CreateChangeData(int index, ODataRequestMessageWrapper requestMessage);
    protected virtual void HandleCompleted(PerRequest pereq);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
protected virtual void AsyncEndGetResponse(IAsyncResult asyncResult);
    protected abstract virtual void HandleOperationResponse(IODataResponseMessage responseMessage);
    protected void HandleOperationResponseHeaders(HttpStatusCode statusCode, HeaderCollection headers);
    protected void HandleOperationResponse(Descriptor descriptor, HeaderCollection contentHeaders);
    protected abstract virtual ObjectMaterializer GetMaterializer(EntityDescriptor entityDescriptor, ResponseInfo responseInfo);
    protected virtual void CompletedRequest();
    protected ResponseInfo CreateResponseInfo(EntityDescriptor entityDescriptor);
    [IteratorStateMachineAttribute("Microsoft.OData.Client.BaseSaveResult/<RelatedLinks>d__36")]
protected IEnumerable`1<LinkDescriptor> RelatedLinks(EntityDescriptor entityDescriptor);
    protected int SaveResultProcessed(Descriptor descriptor, bool failedOperationInBulkOps);
    protected ODataRequestMessageWrapper CreateRequest(LinkDescriptor binding);
    protected ODataRequestMessageWrapper CreateRequest(EntityDescriptor entityDescriptor);
    protected ODataRequestMessageWrapper CreateTopLevelRequest(string method, Uri requestUri, HeaderCollection headers, HttpStack httpStack, Descriptor descriptor);
    private static Version DetermineRequestVersion(ClientTypeAnnotation clientType);
    private static bool CanHandleResponseVersion(string responseVersion, Version& parsedResponseVersion);
    private static void HandleResponsePost(LinkDescriptor linkDescriptor);
    private static void ValidateLinkDescriptorSourceAndTargetHaveIdentities(LinkDescriptor binding, EntityDescriptor sourceResource, EntityDescriptor targetResource);
    private static string SerializeSupportedVersions();
    private Uri AppendTargetEntityKeyIfNeeded(Uri linkUri, LinkDescriptor binding, EntityDescriptor targetResource);
    private bool CreateRequestData(EntityDescriptor entityDescriptor, ODataRequestMessageWrapper requestMessage);
    private void CreateRequestData(LinkDescriptor binding, ODataRequestMessageWrapper requestMessage);
    private void HandleResponsePost(Descriptor descriptor, HeaderCollection contentHeaders);
    private void HandleResponsePost(EntityDescriptor entityDescriptor, string etag);
    private void HandleResponsePut(Descriptor descriptor, HeaderCollection responseHeaders);
    private void HandleResponseDelete(Descriptor descriptor);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
private void AsyncEndRead(IAsyncResult asyncResult);
    private void MaterializeResponse(EntityDescriptor entityDescriptor, ResponseInfo responseInfo, string etag);
    private string GetSourcePropertyUri(LinkDescriptor binding, EntityDescriptor sourceEntityDescriptor);
}
[SuppressMessageAttribute("Microsoft.Design", "CA1001:TypesThatOwnDisposableFieldsShouldBeDisposable")]
internal class Microsoft.OData.Client.BatchSaveResult : BaseSaveResult {
    private static int StreamCopyBufferSize;
    private DataServiceRequest[] Queries;
    private Stream responseStream;
    private ODataBatchWriter batchWriter;
    private ODataMessageReader batchMessageReader;
    private CurrentOperationResponse currentOperationResponse;
    private Byte[] streamCopyBuffer;
    private bool useRelativeUri;
    private bool useJsonBatch;
    internal bool IsBatchRequest { get; }
    protected Stream ResponseStream { get; }
    protected bool ProcessResponsePayload { get; }
    internal BatchSaveResult(DataServiceContext context, string method, DataServiceRequest[] queries, SaveChangesOptions options, AsyncCallback callback, object state);
    internal virtual bool get_IsBatchRequest();
    protected virtual Stream get_ResponseStream();
    protected virtual bool get_ProcessResponsePayload();
    internal void BatchBeginRequest();
    internal void BatchRequest();
    protected virtual void FinishCurrentChange(PerRequest pereq);
    protected virtual void HandleOperationResponse(IODataResponseMessage responseMessage);
    protected virtual DataServiceResponse HandleResponse();
    protected virtual ObjectMaterializer GetMaterializer(EntityDescriptor entityDescriptor, ResponseInfo responseInfo);
    protected virtual ODataRequestMessageWrapper CreateRequestMessage(string method, Uri requestUri, HeaderCollection headers, HttpStack httpStack, Descriptor descriptor, string contentId);
    private static string CreateMultiPartMimeContentType();
    private static string CreateApplicationJsonContentType();
    private ODataRequestMessageWrapper CreateBatchRequest();
    private ODataRequestMessageWrapper GenerateBatchRequest();
    private DataServiceResponse HandleBatchResponse();
    private DataServiceResponse HandleBatchResponseInternal(ODataBatchReader batchReader);
    [IteratorStateMachineAttribute("Microsoft.OData.Client.BatchSaveResult/<HandleBatchResponse>d__29")]
private IEnumerable`1<OperationResponse> HandleBatchResponse(ODataBatchReader batchReader);
    private Exception ProcessCurrentOperationResponse(ODataBatchReader batchReader, bool isChangesetOperation);
    private int ValidateContentID(string contentIdStr);
    [CompilerGeneratedAttribute]
private Stream <HandleBatchResponse>b__27_0();
    [CompilerGeneratedAttribute]
private Stream <ProcessCurrentOperationResponse>b__30_0();
}
internal class Microsoft.OData.Client.BinaryTypeConverter : PrimitiveTypeConverter {
    private MethodInfo convertToByteArrayMethodInfo;
    [CompilerGeneratedAttribute]
private static Type <BinaryType>k__BackingField;
    internal static Type BinaryType { get; internal set; }
    [CompilerGeneratedAttribute]
internal static Type get_BinaryType();
    [CompilerGeneratedAttribute]
internal static void set_BinaryType(Type value);
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
    internal Byte[] ToArray(object instance);
}
internal class Microsoft.OData.Client.BindingEntityInfo : object {
    private static object FalseObject;
    private static object TrueObject;
    private static ReaderWriterLockSlim metadataCacheLock;
    private static HashSet`1<Type> knownNonEntityTypes;
    private static Dictionary`2<Type, object> knownObservableCollectionTypes;
    private static Dictionary`2<Type, BindingEntityInfoPerType> bindingEntityInfos;
    private static BindingEntityInfo();
    internal static IList`1<BindingPropertyInfo> GetObservableProperties(Type entityType, ClientEdmModel model);
    internal static ClientTypeAnnotation GetClientType(Type entityType, ClientEdmModel model);
    internal static string GetEntitySet(object target, string targetEntitySet, ClientEdmModel model);
    internal static bool IsDataServiceCollection(Type collectionType, ClientEdmModel model);
    internal static bool IsEntityType(Type type, ClientEdmModel model);
    internal static bool TryGetPropertyValue(object source, string sourceProperty, ClientEdmModel model, BindingPropertyInfo& bindingPropertyInfo, ClientPropertyAnnotation& clientProperty, Object& propertyValue);
    private static BindingEntityInfoPerType GetBindingEntityInfoFor(Type entityType, ClientEdmModel model);
    private static bool CanBeComplexType(Type type);
    private static string GetEntitySetAttribute(Type entityType, ClientEdmModel model);
}
internal class Microsoft.OData.Client.BindingGraph : object {
    private BindingObserver observer;
    private Graph graph;
    public BindingGraph(BindingObserver observer);
    public bool AddDataServiceCollection(object source, string sourceProperty, object collection, string collectionEntitySet);
    public void AddPrimitiveOrComplexCollection(object source, string sourceProperty, object collection, Type collectionItemType);
    public bool AddEntity(object source, string sourceProperty, object target, string targetEntitySet, object edgeSource);
    public void RemoveDataServiceCollectionItem(object item, object parent, string parentProperty);
    public void RemoveComplexTypeCollectionItem(object item, object collection);
    public void RemoveCollection(object source);
    public void RemoveRelation(object source, string relation);
    public void RemoveNonTrackedEntities();
    [IteratorStateMachineAttribute("Microsoft.OData.Client.BindingGraph/<GetDataServiceCollectionItems>d__11")]
public IEnumerable`1<object> GetDataServiceCollectionItems(object collection);
    public void Reset();
    public void RemoveUnreachableVertices();
    public void GetDataServiceCollectionInfo(object collection, Object& source, String& sourceProperty, String& sourceEntitySet, String& targetEntitySet);
    public void GetPrimitiveOrComplexCollectionInfo(object collection, Object& source, String& sourceProperty, Type& collectionItemType);
    public void GetAncestorEntityForComplexProperty(Object& entity, String& propertyName, Object& propertyValue);
    public void AddComplexObject(object source, string sourceProperty, object target);
    public void AddComplexObjectsFromCollection(object collection, IEnumerable collectionItems);
    private void AddFromProperties(object entity);
    private void AttachDataServiceCollectionNotification(object target);
    private bool AttachPrimitiveOrComplexCollectionNotification(object collection);
    private bool AttachEntityOrComplexObjectNotification(object target);
    private void DetachNotifications(object target);
    private void DetachCollectionNotifications(object target);
    private void SetObserver(ICollection collection);
    [CompilerGeneratedAttribute]
private bool <RemoveNonTrackedEntities>b__10_0(object o);
}
internal class Microsoft.OData.Client.BindingObserver : object {
    private BindingGraph bindingGraph;
    [CompilerGeneratedAttribute]
private DataServiceContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AttachBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DetachBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<EntityChangedParams, bool> <EntityChanged>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<EntityCollectionChangedParams, bool> <CollectionChanged>k__BackingField;
    internal DataServiceContext Context { get; private set; }
    internal bool AttachBehavior { get; internal set; }
    internal bool DetachBehavior { get; internal set; }
    internal Func`2<EntityChangedParams, bool> EntityChanged { get; private set; }
    internal Func`2<EntityCollectionChangedParams, bool> CollectionChanged { get; private set; }
    internal BindingObserver(DataServiceContext context, Func`2<EntityChangedParams, bool> entityChanged, Func`2<EntityCollectionChangedParams, bool> collectionChanged);
    [CompilerGeneratedAttribute]
internal DataServiceContext get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(DataServiceContext value);
    [CompilerGeneratedAttribute]
internal bool get_AttachBehavior();
    [CompilerGeneratedAttribute]
internal void set_AttachBehavior(bool value);
    [CompilerGeneratedAttribute]
internal bool get_DetachBehavior();
    [CompilerGeneratedAttribute]
internal void set_DetachBehavior(bool value);
    [CompilerGeneratedAttribute]
internal Func`2<EntityChangedParams, bool> get_EntityChanged();
    [CompilerGeneratedAttribute]
private void set_EntityChanged(Func`2<EntityChangedParams, bool> value);
    [CompilerGeneratedAttribute]
internal Func`2<EntityCollectionChangedParams, bool> get_CollectionChanged();
    [CompilerGeneratedAttribute]
private void set_CollectionChanged(Func`2<EntityCollectionChangedParams, bool> value);
    internal void StartTracking(DataServiceCollection`1<T> collection, string collectionEntitySet);
    internal void StopTracking();
    internal bool LookupParent(DataServiceCollection`1<T> collection, Object& parentEntity, String& parentProperty);
    internal void OnPropertyChanged(object source, PropertyChangedEventArgs eventArgs);
    internal void OnDataServiceCollectionChanged(object collection, NotifyCollectionChangedEventArgs eventArgs);
    internal void OnPrimitiveOrComplexCollectionChanged(object sender, NotifyCollectionChangedEventArgs e);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
internal void HandleAddEntity(object source, string sourceProperty, string sourceEntitySet, ICollection collection, object target, string targetEntitySet);
    internal void HandleDeleteEntity(object source, string sourceProperty, string sourceEntitySet, ICollection collection, object target, string targetEntitySet);
    internal void HandleUpdateEntityReference(object source, string sourceProperty, string sourceEntitySet, object target, string targetEntitySet);
    internal bool IsContextTrackingEntity(object entity);
    private void HandleUpdateEntity(object entity, string propertyName, object propertyValue);
    private void OnAddToDataServiceCollection(NotifyCollectionChangedEventArgs eventArgs, object source, string sourceProperty, string targetEntitySet, object collection);
    private void OnRemoveFromDataServiceCollection(NotifyCollectionChangedEventArgs eventArgs, object source, string sourceProperty, object collection);
    private void RemoveWithDetachDataServiceCollection(object collection);
    private void DeepRemoveDataServiceCollection(IEnumerable collection, object source, string sourceProperty, Action`1<object> itemValidator);
    private void OnAddToComplexTypeCollection(object collection, IList newItems);
    private void OnRemoveFromComplexTypeCollection(object collection, IList items);
    private void OnChangesSaved(object sender, SaveChangesEventArgs eventArgs);
    private void CollectUnTrackingInfo(object currentEntity, object parentEntity, string parentProperty, IList`1<UnTrackingInfo> entitiesToUnTrack);
    private bool IsContextTrackingLink(object source, string sourceProperty, object target);
    private bool IsDetachedOrDeletedFromContext(object entity);
    private void ValidateDataServiceCollectionItem(object target);
}
internal enum Microsoft.OData.Client.BindingPropertyKind : Enum {
    public int value__;
    public static BindingPropertyKind Complex;
    public static BindingPropertyKind Entity;
    public static BindingPropertyKind DataServiceCollection;
    public static BindingPropertyKind PrimitiveOrComplexCollection;
}
internal static class Microsoft.OData.Client.BindingUtils : object {
    internal static void ValidateEntitySetName(string entitySetName, object entity);
    internal static Type GetCollectionEntityType(Type collectionType);
    internal static void VerifyObserverNotPresent(object oec, string sourceProperty, Type sourceType);
}
public class Microsoft.OData.Client.BodyOperationParameter : OperationParameter {
    public BodyOperationParameter(string name, object value);
}
internal class Microsoft.OData.Client.BooleanTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
public class Microsoft.OData.Client.BuildingRequestEventArgs : EventArgs {
    private Uri requestUri;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private Descriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStack <ClientHttpStack>k__BackingField;
    [CompilerGeneratedAttribute]
private HeaderCollection <HeaderCollection>k__BackingField;
    public string Method { get; public set; }
    public Uri RequestUri { get; public set; }
    public IDictionary`2<string, string> Headers { get; }
    public Descriptor Descriptor { get; private set; }
    internal HttpStack ClientHttpStack { get; private set; }
    internal HeaderCollection HeaderCollection { get; private set; }
    internal BuildingRequestEventArgs(string method, Uri requestUri, HeaderCollection headers, Descriptor descriptor, HttpStack httpStack);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(string value);
    public Uri get_RequestUri();
    public void set_RequestUri(Uri value);
    public IDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public Descriptor get_Descriptor();
    [CompilerGeneratedAttribute]
private void set_Descriptor(Descriptor value);
    [CompilerGeneratedAttribute]
internal HttpStack get_ClientHttpStack();
    [CompilerGeneratedAttribute]
private void set_ClientHttpStack(HttpStack value);
    [CompilerGeneratedAttribute]
internal HeaderCollection get_HeaderCollection();
    [CompilerGeneratedAttribute]
private void set_HeaderCollection(HeaderCollection value);
    internal BuildingRequestEventArgs Clone();
}
internal class Microsoft.OData.Client.BulkUpdateGraph : object {
    private Dictionary`2<Descriptor, List`1<Descriptor>> descriptorGraph;
    private List`1<EntityDescriptor> topLevelDescriptors;
    private string entitySetName;
    private RequestInfo requestInfo;
    public IReadOnlyList`1<EntityDescriptor> TopLevelDescriptors { get; }
    public string EntitySetName { get; }
    public BulkUpdateGraph(RequestInfo requestInfo);
    public IReadOnlyList`1<EntityDescriptor> get_TopLevelDescriptors();
    public string get_EntitySetName();
    private void ComputeEntitySetName();
    public void AddRelatedDescriptor(Descriptor parent, Descriptor relatedDescriptor);
    public void AddTopLevelDescriptor(EntityDescriptor descriptor);
    public List`1<Descriptor> GetRelatedDescriptors(Descriptor descriptor);
    public bool Contains(Descriptor descriptor);
}
[SuppressMessageAttribute("Microsoft.Design", "CA1001:TypesThatOwnDisposableFieldsShouldBeDisposable")]
internal class Microsoft.OData.Client.BulkUpdateSaveResult : BaseSaveResult {
    private ODataWriterWrapper writer;
    private BulkUpdateGraph bulkUpdateGraph;
    private Dictionary`2<Descriptor, List`1<LinkDescriptor>> linkDescriptors;
    private CachedResponse cachedResponse;
    private Dictionary`2<Descriptor, IMaterializerState> materializerStateForDescriptor;
    private List`1<OperationResponse> operationResponses;
    private Stream responseStream;
    internal BulkUpdateGraph BulkUpdateGraph { get; }
    internal Dictionary`2<Descriptor, List`1<LinkDescriptor>> LinkDescriptors { get; }
    protected Stream ResponseStream { get; }
    protected bool ProcessResponsePayload { get; }
    internal bool IsBatchRequest { get; }
    internal BulkUpdateSaveResult(DataServiceContext context, string method, SaveChangesOptions options, AsyncCallback callback, object state);
    internal BulkUpdateGraph get_BulkUpdateGraph();
    internal Dictionary`2<Descriptor, List`1<LinkDescriptor>> get_LinkDescriptors();
    protected virtual Stream get_ResponseStream();
    internal void BeginBulkUpdateRequest(T[] objects);
    internal void BulkUpdateRequest(T[] objects);
    protected virtual void FinishCurrentChange(PerRequest pereq);
    internal void BuildDescriptorGraph(IEnumerable`1<Descriptor> descriptors, bool isRootObject, T[] objects);
    public List`1<LinkDescriptor> GetLinkDescriptors(Descriptor descriptor);
    private ODataRequestMessageWrapper CreateBulkUpdateRequest(BulkUpdateGraph bulkUpdateGraph);
    private ODataRequestMessageWrapper GenerateBulkUpdateRequest();
    protected virtual bool get_ProcessResponsePayload();
    internal virtual bool get_IsBatchRequest();
    protected virtual ODataRequestMessageWrapper CreateRequestMessage(string method, Uri requestUri, HeaderCollection headers, HttpStack httpStack, Descriptor descriptor, string contentId);
    protected virtual ObjectMaterializer GetMaterializer(EntityDescriptor entityDescriptor, ResponseInfo responseInfo);
    protected virtual void HandleOperationResponse(IODataResponseMessage responseMessage);
    protected virtual DataServiceResponse HandleResponse();
    private void HandleInnerBulkUpdateResponse(List`1<IMaterializerState> entries, bool isTopLevelResponse, Stack`1<ValueTuple`2<int, IReadOnlyList`1<Descriptor>>> adjacentDescriptors, Stack`1<List`1<OperationResponse>> operationResponseTracker);
    private void HandleBulkUpdateResponse(IODataResponseMessage response, Stream responseStream);
    private static Descriptor GetLastVisitedDescriptor(Stack`1<ValueTuple`2<int, IReadOnlyList`1<Descriptor>>> adjacentDescriptors);
    private static bool HasFailedOperation(IMaterializerState materializerState);
    private void CreateOperationResponse(IMaterializerState materializerState, bool isTopLevelResponse, Stack`1<ValueTuple`2<int, IReadOnlyList`1<Descriptor>>> adjacentDescriptors, Stack`1<List`1<OperationResponse>> operationResponseTracker);
    [CompilerGeneratedAttribute]
private Stream <HandleBulkUpdateResponse>b__30_0();
    [CompilerGeneratedAttribute]
private Stream <HandleBulkUpdateResponse>b__30_1();
}
internal class Microsoft.OData.Client.ByteArrayTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.ByteTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
[SuppressMessageAttribute("Microsoft.Design", "CA1010")]
[SuppressMessageAttribute("Microsoft.Naming", "CA1710")]
public class Microsoft.OData.Client.ChangeOperationResponse : OperationResponse {
    private Descriptor descriptor;
    public Descriptor Descriptor { get; }
    internal ChangeOperationResponse(HeaderCollection headers, Descriptor descriptor);
    public Descriptor get_Descriptor();
}
internal class Microsoft.OData.Client.CharArrayTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.CharTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal static class Microsoft.OData.Client.ClientConvert : object {
    internal static object ChangeType(string propertyValue, Type propertyType);
    [SuppressMessageAttribute("Microsoft.Usage", "CA1801:ReviewUnusedParameters")]
internal static bool TryConvertBinaryToByteArray(object binaryValue, Byte[]& converted);
    internal static bool ToNamedType(string typeName, Type& type);
    internal static string ToString(object propertyValue);
    internal static string GetEdmType(Type propertyType);
}
internal class Microsoft.OData.Client.ClientEdmCollectionValue : object {
    [CompilerGeneratedAttribute]
private IEdmTypeReference <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IEdmDelayedValue> <Elements>k__BackingField;
    public IEdmTypeReference Type { get; private set; }
    public EdmValueKind ValueKind { get; }
    public IEnumerable`1<IEdmDelayedValue> Elements { get; private set; }
    public ClientEdmCollectionValue(IEdmTypeReference type, IEnumerable`1<IEdmValue> elements);
    [CompilerGeneratedAttribute]
public sealed virtual IEdmTypeReference get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(IEdmTypeReference value);
    public sealed virtual EdmValueKind get_ValueKind();
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IEdmDelayedValue> get_Elements();
    [CompilerGeneratedAttribute]
private void set_Elements(IEnumerable`1<IEdmDelayedValue> value);
}
internal class Microsoft.OData.Client.ClientEdmModel : EdmElement {
    private Dictionary`2<Type, EdmTypeCacheValue> clrToEdmTypeCache;
    private Dictionary`2<string, ClientTypeAnnotation> typeNameToClientTypeAnnotationCache;
    private EdmDirectValueAnnotationsManager directValueAnnotationsManager;
    private ODataProtocolVersion maxProtocolVersion;
    private IEnumerable`1<IEdmModel> coreModel;
    [CompilerGeneratedAttribute]
private ConcurrentDictionary`2<string, IEdmSchemaElement> <EdmStructuredSchemaElements>k__BackingField;
    public IEnumerable`1<IEdmVocabularyAnnotation> VocabularyAnnotations { get; }
    public IEnumerable`1<IEdmModel> ReferencedModels { get; }
    public IEnumerable`1<IEdmSchemaElement> SchemaElements { get; }
    public IEnumerable`1<string> DeclaredNamespaces { get; }
    public IEdmDirectValueAnnotationsManager DirectValueAnnotationsManager { get; }
    public IEdmEntityContainer EntityContainer { get; }
    internal ConcurrentDictionary`2<string, IEdmSchemaElement> EdmStructuredSchemaElements { get; private set; }
    internal ODataProtocolVersion MaxProtocolVersion { get; }
    internal ClientEdmModel(ODataProtocolVersion maxProtocolVersion);
    public sealed virtual IEnumerable`1<IEdmVocabularyAnnotation> get_VocabularyAnnotations();
    public sealed virtual IEnumerable`1<IEdmModel> get_ReferencedModels();
    public sealed virtual IEnumerable`1<IEdmSchemaElement> get_SchemaElements();
    public sealed virtual IEnumerable`1<string> get_DeclaredNamespaces();
    public sealed virtual IEdmDirectValueAnnotationsManager get_DirectValueAnnotationsManager();
    public sealed virtual IEdmEntityContainer get_EntityContainer();
    [CompilerGeneratedAttribute]
internal ConcurrentDictionary`2<string, IEdmSchemaElement> get_EdmStructuredSchemaElements();
    [CompilerGeneratedAttribute]
private void set_EdmStructuredSchemaElements(ConcurrentDictionary`2<string, IEdmSchemaElement> value);
    internal ODataProtocolVersion get_MaxProtocolVersion();
    public IEnumerable`1<IEdmOperationImport> FindOperationImportsByNameNonBindingParameterType(string operationImportName, IEnumerable`1<string> parameterNames);
    public sealed virtual IEdmSchemaType FindDeclaredType(string qualifiedName);
    public sealed virtual IEnumerable`1<IEdmOperation> FindDeclaredOperations(string qualifiedName);
    public sealed virtual IEnumerable`1<IEdmOperation> FindDeclaredBoundOperations(IEdmType bindingType);
    public sealed virtual IEnumerable`1<IEdmOperation> FindDeclaredBoundOperations(string qualifiedName, IEdmType bindingType);
    public sealed virtual IEdmTerm FindDeclaredTerm(string qualifiedName);
    public sealed virtual IEnumerable`1<IEdmStructuredType> FindDirectlyDerivedTypes(IEdmStructuredType type);
    public sealed virtual IEnumerable`1<IEdmVocabularyAnnotation> FindDeclaredVocabularyAnnotations(IEdmVocabularyAnnotatable element);
    internal IEdmType GetOrCreateEdmType(Type type);
    internal ClientTypeAnnotation GetClientTypeAnnotation(string edmTypeName);
    private static Type[] GetTypeHierarchy(Type type, PropertyInfo[]& keyProperties, Boolean& hasProperties);
    private void ValidateComplexType(Type type, EdmTypeCacheValue cachedEdmType);
    private void SetMimeTypeForProperties(IEdmStructuredType edmStructuredType);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502")]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:MethodCoupledWithTooManyTypesFromDifferentNamespaces")]
private EdmTypeCacheValue GetOrCreateEdmTypeInternal(IEdmStructuredType edmBaseType, Type type, PropertyInfo[] keyProperties, bool isEntity, Nullable`1<bool> hasProperties);
    private IEdmProperty CreateEdmProperty(IEdmStructuredType declaringType, PropertyInfo propertyInfo);
    private ClientTypeAnnotation GetOrCreateClientTypeAnnotation(IEdmType edmType, Type type);
    private static bool GetHasStreamValue(IEdmEntityType edmBaseType, Type type);
}
internal class Microsoft.OData.Client.ClientEdmStructuredValue : object {
    private object structuredValue;
    private ClientTypeAnnotation typeAnnotation;
    private ClientEdmModel model;
    [CompilerGeneratedAttribute]
private IEdmTypeReference <Type>k__BackingField;
    public IEdmTypeReference Type { get; private set; }
    public EdmValueKind ValueKind { get; }
    public IEnumerable`1<IEdmPropertyValue> PropertyValues { get; }
    public ClientEdmStructuredValue(object structuredValue, ClientEdmModel model, ClientTypeAnnotation clientTypeAnnotation);
    [CompilerGeneratedAttribute]
public sealed virtual IEdmTypeReference get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(IEdmTypeReference value);
    public sealed virtual EdmValueKind get_ValueKind();
    public sealed virtual IEnumerable`1<IEdmPropertyValue> get_PropertyValues();
    public sealed virtual IEdmPropertyValue FindPropertyValue(string propertyName);
    private IEdmPropertyValue BuildEdmPropertyValue(ClientPropertyAnnotation propertyAnnotation);
    private IEdmValue ConvertToEdmValue(object propertyValue, IEdmTypeReference edmPropertyType);
}
internal class Microsoft.OData.Client.ClrTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal static class Microsoft.OData.Client.CommonUtil : object {
    private static Type[] unsupportedTypes;
    private static Type OutOfMemoryType;
    private static Type StackOverflowType;
    private static Type ThreadAbortType;
    private static CommonUtil();
    internal static bool IsUnsupportedType(Type type);
    internal static string GetCollectionItemTypeName(string typeName, bool isNested);
    internal static ODataVersion ConvertToODataVersion(ODataProtocolVersion maxProtocolVersion);
    internal static ODataVersion ConvertToODataVersion(Version version);
    internal static string GetModelTypeName(Type type);
    internal static string GetModelTypeNamespace(Type type);
    internal static bool TryReadVersion(string text, KeyValuePair`2& result);
    internal static void SetDefaultMessageQuotas(ODataMessageQuotas messageQuotas);
    public static object ParseJsonToPrimitiveValue(string rawValue);
    internal static bool IsCatchableExceptionType(Exception e);
}
[AttributeUsageAttribute("128")]
public class Microsoft.OData.Client.ContainerPropertyAttribute : Attribute {
}
internal class Microsoft.OData.Client.ContentStream : object {
    private Stream stream;
    private bool isKnownMemoryStream;
    public Stream Stream { get; }
    public bool IsKnownMemoryStream { get; }
    public ContentStream(Stream stream, bool isKnownMemoryStream);
    public Stream get_Stream();
    public bool get_IsKnownMemoryStream();
}
internal static class Microsoft.OData.Client.ContentTypeUtil : object {
    internal static UTF8Encoding EncodingUtf8NoPreamble;
    internal static Encoding FallbackEncoding { get; }
    private static Encoding MissingEncoding { get; }
    private static ContentTypeUtil();
    internal static Encoding get_FallbackEncoding();
    private static Encoding get_MissingEncoding();
    internal static MediaParameter[] ReadContentType(string contentType, String& mime);
    internal static string WriteContentType(string mimeType, MediaParameter[] parameters);
    internal static MediaParameter[] ReadContentType(string contentType, String& mime, Encoding& encoding);
    private static Encoding EncodingFromName(string name);
    private static void ReadMediaTypeAndSubtype(string text, Int32& textIndex, String& type, String& subType);
    private static MediaType ReadMediaType(string text);
    private static bool ReadToken(string text, Int32& textIndex);
    private static bool SkipWhitespace(string text, Int32& textIndex);
    private static void ReadMediaTypeParameter(string text, Int32& textIndex, MediaParameter[]& parameters);
    private static MediaParameter ReadQuotedParameterValue(string parameterName, string headerText, Int32& textIndex);
    private static bool IsHttpSeparator(char c);
    private static bool IsHttpToken(char c);
}
internal class Microsoft.OData.Client.ConventionalODataEntityMetadataBuilder : ODataResourceMetadataBuilder {
    private IEdmStructuredValue entityInstance;
    private string entitySetName;
    private Uri baseUri;
    private ConventionalODataUriBuilder uriBuilder;
    internal ConventionalODataEntityMetadataBuilder(Uri baseUri, string entitySetName, IEdmStructuredValue entityInstance, DataServiceUrlKeyDelimiter keyDelimiter);
    internal ConventionalODataEntityMetadataBuilder(UriResolver resolver, string entitySetName, IEdmStructuredValue entityInstance, DataServiceUrlKeyDelimiter keyDelimiter);
    internal virtual Uri GetEditLink();
    internal virtual Uri GetId();
    internal virtual string GetETag();
    internal virtual Uri GetReadLink();
    internal virtual bool TryGetIdForSerialization(Uri& id);
}
internal enum Microsoft.OData.Client.CountOption : Enum {
    public int value__;
    public static CountOption None;
    public static CountOption CountSegment;
    public static CountOption CountQueryTrue;
    public static CountOption CountQueryFalse;
}
public class Microsoft.OData.Client.DataServiceActionQuery : object {
    private DataServiceContext Context;
    private BodyOperationParameter[] Parameters;
    [CompilerGeneratedAttribute]
private Uri <RequestUri>k__BackingField;
    public Uri RequestUri { get; private set; }
    public DataServiceActionQuery(DataServiceContext context, string requestUriString, BodyOperationParameter[] parameters);
    [CompilerGeneratedAttribute]
public Uri get_RequestUri();
    [CompilerGeneratedAttribute]
private void set_RequestUri(Uri value);
    public OperationResponse Execute();
    public IAsyncResult BeginExecute(AsyncCallback callback, object state);
    public Task`1<OperationResponse> ExecuteAsync();
    public Task`1<OperationResponse> ExecuteAsync(CancellationToken cancellationToken);
    public OperationResponse EndExecute(IAsyncResult asyncResult);
}
public class Microsoft.OData.Client.DataServiceActionQuery`1 : object {
    private DataServiceContext Context;
    private BodyOperationParameter[] Parameters;
    [CompilerGeneratedAttribute]
private Uri <RequestUri>k__BackingField;
    public Uri RequestUri { get; private set; }
    public DataServiceActionQuery`1(DataServiceContext context, string requestUriString, BodyOperationParameter[] parameters);
    [CompilerGeneratedAttribute]
public Uri get_RequestUri();
    [CompilerGeneratedAttribute]
private void set_RequestUri(Uri value);
    public IEnumerable`1<T> Execute();
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
public IAsyncResult BeginExecute(AsyncCallback callback, object state);
    public Task`1<IEnumerable`1<T>> ExecuteAsync();
    public Task`1<IEnumerable`1<T>> ExecuteAsync(CancellationToken cancellationToken);
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
public IEnumerable`1<T> EndExecute(IAsyncResult asyncResult);
    public IEnumerator`1<T> GetEnumerator();
}
public class Microsoft.OData.Client.DataServiceActionQuerySingle`1 : object {
    private DataServiceContext context;
    private BodyOperationParameter[] parameters;
    [CompilerGeneratedAttribute]
private Uri <RequestUri>k__BackingField;
    public Uri RequestUri { get; private set; }
    public DataServiceActionQuerySingle`1(DataServiceContext context, string requestUriString, BodyOperationParameter[] parameters);
    [CompilerGeneratedAttribute]
public Uri get_RequestUri();
    [CompilerGeneratedAttribute]
private void set_RequestUri(Uri value);
    public T GetValue();
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
public IAsyncResult BeginGetValue(AsyncCallback callback, object state);
    public Task`1<T> GetValueAsync();
    public Task`1<T> GetValueAsync(CancellationToken cancellationToken);
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
public T EndGetValue(IAsyncResult asyncResult);
}
internal abstract class Microsoft.OData.Client.DataServiceALinqExpressionVisitor : ALinqExpressionVisitor {
    internal virtual Expression Visit(Expression exp);
    internal virtual Expression VisitQueryableResourceExpression(QueryableResourceExpression rse);
    internal virtual Expression VisitNavigationPropertySingletonExpression(NavigationPropertySingletonExpression npse);
    internal virtual Expression VisitInputReferenceExpression(InputReferenceExpression ire);
}
public class Microsoft.OData.Client.DataServiceClientConfigurations : object {
    [CompilerGeneratedAttribute]
private DataServiceClientResponsePipelineConfiguration <ResponsePipeline>k__BackingField;
    [CompilerGeneratedAttribute]
private DataServiceClientRequestPipelineConfiguration <RequestPipeline>k__BackingField;
    public DataServiceClientResponsePipelineConfiguration ResponsePipeline { get; private set; }
    public DataServiceClientRequestPipelineConfiguration RequestPipeline { get; private set; }
    internal DataServiceClientConfigurations(object sender);
    [CompilerGeneratedAttribute]
public DataServiceClientResponsePipelineConfiguration get_ResponsePipeline();
    [CompilerGeneratedAttribute]
private void set_ResponsePipeline(DataServiceClientResponsePipelineConfiguration value);
    [CompilerGeneratedAttribute]
public DataServiceClientRequestPipelineConfiguration get_RequestPipeline();
    [CompilerGeneratedAttribute]
private void set_RequestPipeline(DataServiceClientRequestPipelineConfiguration value);
}
[DebuggerDisplayAttribute("{Message}")]
[SuppressMessageAttribute("Microsoft.Design", "CA1032:ImplementStandardExceptionConstructors")]
public class Microsoft.OData.Client.DataServiceClientException : InvalidOperationException {
    private int statusCode;
    public int StatusCode { get; }
    public DataServiceClientException(string message);
    public DataServiceClientException(string message, Exception innerException);
    public DataServiceClientException(string message, int statusCode);
    public DataServiceClientException(string message, Exception innerException, int statusCode);
    private DataServiceClientException(SerializationInfo info, StreamingContext context);
    public int get_StatusCode();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Microsoft.OData.Client.DataServiceClientFormat : object {
    private static string MimeApplicationJsonOData;
    private static string MimeApplicationJson;
    private static string MimeApplicationJsonODataWithAllMetadata;
    private static string MimeMultiPartMixed;
    private static string Utf8Encoding;
    private static string HttpAcceptCharset;
    private DataServiceContext context;
    private IEdmModel serviceModel;
    [CompilerGeneratedAttribute]
private ODataFormat <ODataFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<IEdmModel> <LoadServiceModel>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<DataServiceClientRequestMessage> <InjectMetadataHttpNetworkRequest>k__BackingField;
    public ODataFormat ODataFormat { get; private set; }
    public Func`1<IEdmModel> LoadServiceModel { get; public set; }
    internal IEdmModel ServiceModel { get; }
    internal Func`1<DataServiceClientRequestMessage> InjectMetadataHttpNetworkRequest { get; internal set; }
    internal DataServiceClientFormat(DataServiceContext context);
    [CompilerGeneratedAttribute]
public ODataFormat get_ODataFormat();
    [CompilerGeneratedAttribute]
private void set_ODataFormat(ODataFormat value);
    [CompilerGeneratedAttribute]
public Func`1<IEdmModel> get_LoadServiceModel();
    [CompilerGeneratedAttribute]
public void set_LoadServiceModel(Func`1<IEdmModel> value);
    internal IEdmModel get_ServiceModel();
    [CompilerGeneratedAttribute]
internal Func`1<DataServiceClientRequestMessage> get_InjectMetadataHttpNetworkRequest();
    [CompilerGeneratedAttribute]
internal void set_InjectMetadataHttpNetworkRequest(Func`1<DataServiceClientRequestMessage> value);
    public void UseJson(IEdmModel serviceModel);
    public void UseJson();
    internal void SetRequestAcceptHeader(HeaderCollection headers);
    internal void SetRequestAcceptHeaderForQuery(HeaderCollection headers, QueryComponents components);
    internal void SetRequestAcceptHeaderForStream(HeaderCollection headers);
    internal void SetRequestAcceptHeaderForCount(HeaderCollection headers);
    internal void SetRequestAcceptHeaderForBatch(HeaderCollection headers);
    internal void SetRequestContentTypeForEntry(HeaderCollection headers);
    internal void SetRequestContentTypeForOperationParameters(HeaderCollection headers);
    internal void SetRequestContentTypeForLinks(HeaderCollection headers);
    internal static void ValidateCanWriteRequestFormat(IODataRequestMessage requestMessage);
    internal static void ValidateCanReadResponseFormat(IODataResponseMessage responseMessage);
    internal IEdmModel LoadServiceModelFromNetwork();
    private static void ValidateContentType(string contentType);
    private void SetRequestContentTypeHeader(HeaderCollection headers, string mediaType);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1822")]
private void SetAcceptHeaderAndCharset(HeaderCollection headers, string mediaType);
    private static string ChooseMediaType(bool hasSelectQueryOption);
    private void PopulateEdmStructuredSchemaElements();
}
public abstract class Microsoft.OData.Client.DataServiceClientRequestMessage : object {
    private string actualHttpMethod;
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    public Uri Url { get; public set; }
    public string Method { get; public set; }
    public int Timeout { get; public set; }
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811")]
public bool SendChunked { get; public set; }
    protected string ActualMethod { get; }
    public DataServiceClientRequestMessage(string actualMethod);
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public abstract virtual Uri get_Url();
    public abstract virtual void set_Url(Uri value);
    public abstract virtual string get_Method();
    public abstract virtual void set_Method(string value);
    public abstract virtual int get_Timeout();
    public abstract virtual void set_Timeout(int value);
    public abstract virtual bool get_SendChunked();
    public abstract virtual void set_SendChunked(bool value);
    protected virtual string get_ActualMethod();
    public abstract virtual string GetHeader(string headerName);
    public abstract virtual void SetHeader(string headerName, string headerValue);
    public abstract virtual Stream GetStream();
    public abstract virtual void Abort();
    public abstract virtual IAsyncResult BeginGetRequestStream(AsyncCallback callback, object state);
    public abstract virtual Stream EndGetRequestStream(IAsyncResult asyncResult);
    public abstract virtual IAsyncResult BeginGetResponse(AsyncCallback callback, object state);
    public abstract virtual IODataResponseMessage EndGetResponse(IAsyncResult asyncResult);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
public abstract virtual IODataResponseMessage GetResponse();
}
public class Microsoft.OData.Client.DataServiceClientRequestMessageArgs : object {
    private string actualMethod;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RequestUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsePostTunneling>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private IHttpClientFactory <HttpClientFactory>k__BackingField;
    public string Method { get; private set; }
    public Uri RequestUri { get; private set; }
    public bool UsePostTunneling { get; private set; }
    public IDictionary`2<string, string> Headers { get; private set; }
    public string ActualMethod { get; }
    public IHttpClientFactory HttpClientFactory { get; private set; }
    public DataServiceClientRequestMessageArgs(string method, Uri requestUri, bool usePostTunneling, IDictionary`2<string, string> headers);
    public DataServiceClientRequestMessageArgs(string method, Uri requestUri, bool usePostTunneling, IDictionary`2<string, string> headers, IHttpClientFactory httpClientFactory);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
private void set_Method(string value);
    [CompilerGeneratedAttribute]
public Uri get_RequestUri();
    [CompilerGeneratedAttribute]
private void set_RequestUri(Uri value);
    [CompilerGeneratedAttribute]
public bool get_UsePostTunneling();
    [CompilerGeneratedAttribute]
private void set_UsePostTunneling(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
private void set_Headers(IDictionary`2<string, string> value);
    public string get_ActualMethod();
    [CompilerGeneratedAttribute]
public IHttpClientFactory get_HttpClientFactory();
    [CompilerGeneratedAttribute]
private void set_HttpClientFactory(IHttpClientFactory value);
}
public class Microsoft.OData.Client.DataServiceClientRequestPipelineConfiguration : object {
    private List`1<Action`1<WritingEntryArgs>> writingStartResourceActions;
    private List`1<Action`1<WritingEntryArgs>> writingEndResourceActions;
    private List`1<Action`1<WritingEntityReferenceLinkArgs>> writeEntityReferenceLinkActions;
    private List`1<Action`1<WritingNestedResourceInfoArgs>> writingStartNestedResourceInfoActions;
    private List`1<Action`1<WritingNestedResourceInfoArgs>> writingEndNestedResourceInfoActions;
    private List`1<Action`1<MessageWriterSettingsArgs>> messageWriterSettingsConfigurationActions;
    private Func`2<DataServiceClientRequestMessageArgs, DataServiceClientRequestMessage> onmessageCreating;
    [CompilerGeneratedAttribute]
private bool <ContextUsingSendingRequest>k__BackingField;
    public Func`2<DataServiceClientRequestMessageArgs, DataServiceClientRequestMessage> OnMessageCreating { get; public set; }
    internal bool HasOnMessageCreating { get; }
    internal bool ContextUsingSendingRequest { get; internal set; }
    public Func`2<DataServiceClientRequestMessageArgs, DataServiceClientRequestMessage> get_OnMessageCreating();
    public void set_OnMessageCreating(Func`2<DataServiceClientRequestMessageArgs, DataServiceClientRequestMessage> value);
    internal bool get_HasOnMessageCreating();
    [CompilerGeneratedAttribute]
internal bool get_ContextUsingSendingRequest();
    [CompilerGeneratedAttribute]
internal void set_ContextUsingSendingRequest(bool value);
    public DataServiceClientRequestPipelineConfiguration OnMessageWriterSettingsCreated(Action`1<MessageWriterSettingsArgs> args);
    public DataServiceClientRequestPipelineConfiguration OnEntryStarting(Action`1<WritingEntryArgs> action);
    public DataServiceClientRequestPipelineConfiguration OnEntryEnding(Action`1<WritingEntryArgs> action);
    public DataServiceClientRequestPipelineConfiguration OnEntityReferenceLink(Action`1<WritingEntityReferenceLinkArgs> action);
    public DataServiceClientRequestPipelineConfiguration OnNestedResourceInfoStarting(Action`1<WritingNestedResourceInfoArgs> action);
    public DataServiceClientRequestPipelineConfiguration OnNestedResourceInfoEnding(Action`1<WritingNestedResourceInfoArgs> action);
    internal void ExecuteWriterSettingsConfiguration(ODataMessageWriterSettings writerSettings);
    internal void ExecuteOnEntryEndActions(ODataResource entry, object entity);
    internal void ExecuteOnEntryStartActions(ODataResource entry, object entity);
    internal void ExecuteOnNestedResourceInfoEndActions(ODataNestedResourceInfo link, object source, object target);
    internal void ExecuteOnNestedResourceInfoStartActions(ODataNestedResourceInfo link, object source, object target);
    internal void ExecuteEntityReferenceLinkActions(ODataEntityReferenceLink entityReferenceLink, object source, object target);
}
public class Microsoft.OData.Client.DataServiceClientResponsePipelineConfiguration : object {
    private List`1<Action`1<ReadingEntryArgs>> readingStartResourceActions;
    private List`1<Action`1<ReadingEntryArgs>> readingEndResourceActions;
    private List`1<Action`1<ReadingFeedArgs>> readingStartFeedActions;
    private List`1<Action`1<ReadingFeedArgs>> readingEndFeedActions;
    private List`1<Action`1<ReadingNestedResourceInfoArgs>> readingStartNestedResourceInfoActions;
    private List`1<Action`1<ReadingNestedResourceInfoArgs>> readingEndNestedResourceInfoActions;
    private List`1<Action`1<MaterializedEntityArgs>> materializedEntityActions;
    private List`1<Action`1<MessageReaderSettingsArgs>> messageReaderSettingsConfigurationActions;
    private List`1<Action`1<ReadingDeltaFeedArgs>> readingStartDeltaFeedActions;
    private List`1<Action`1<ReadingDeltaFeedArgs>> readingEndDeltaFeedActions;
    private object sender;
    internal bool HasConfigurations { get; }
    internal bool HasReadingEntityHandlers { get; }
    internal DataServiceClientResponsePipelineConfiguration(object sender);
    internal bool get_HasConfigurations();
    internal bool get_HasReadingEntityHandlers();
    public DataServiceClientResponsePipelineConfiguration OnMessageReaderSettingsCreated(Action`1<MessageReaderSettingsArgs> messageReaderSettingsAction);
    public DataServiceClientResponsePipelineConfiguration OnEntryStarted(Action`1<ReadingEntryArgs> action);
    public DataServiceClientResponsePipelineConfiguration OnEntryEnded(Action`1<ReadingEntryArgs> action);
    public DataServiceClientResponsePipelineConfiguration OnFeedStarted(Action`1<ReadingFeedArgs> action);
    public DataServiceClientResponsePipelineConfiguration OnFeedEnded(Action`1<ReadingFeedArgs> action);
    public DataServiceClientResponsePipelineConfiguration OnDeltaFeedStarted(Action`1<ReadingDeltaFeedArgs> action);
    public DataServiceClientResponsePipelineConfiguration OnDeltaFeedEnded(Action`1<ReadingDeltaFeedArgs> action);
    public DataServiceClientResponsePipelineConfiguration OnNestedResourceInfoStarted(Action`1<ReadingNestedResourceInfoArgs> action);
    public DataServiceClientResponsePipelineConfiguration OnNestedResourceInfoEnded(Action`1<ReadingNestedResourceInfoArgs> action);
    public DataServiceClientResponsePipelineConfiguration OnEntityMaterialized(Action`1<MaterializedEntityArgs> action);
    internal void ExecuteReaderSettingsConfiguration(ODataMessageReaderSettings readerSettings);
    internal void ExecuteOnEntryEndActions(ODataResource entry);
    internal void ExecuteOnEntryStartActions(ODataResource entry);
    internal void ExecuteOnFeedEndActions(ODataResourceSet feed);
    internal void ExecuteOnFeedStartActions(ODataResourceSet feed);
    internal void ExecuteOnNavigationEndActions(ODataNestedResourceInfo link);
    internal void ExecuteOnDeltaFeedStartActions(ODataDeltaResourceSet deltaFeed);
    internal void ExecuteOnDeltaFeedEndActions(ODataDeltaResourceSet deltaFeed);
    internal void ExecuteOnNavigationStartActions(ODataNestedResourceInfo link);
    internal void ExecuteEntityMaterializedActions(ODataResource entry, object entity);
    internal void FireEndEntryEvents(MaterializerEntry entry);
}
public class Microsoft.OData.Client.DataServiceCollection`1 : ObservableCollection`1<T> {
    private BindingObserver observer;
    private bool rootCollection;
    private DataServiceQueryContinuation`1<T> continuation;
    private bool trackingOnLoad;
    private Func`2<EntityChangedParams, bool> entityChangedCallback;
    private Func`2<EntityCollectionChangedParams, bool> collectionChangedCallback;
    private string entitySetName;
    private IAsyncResult ongoingAsyncOperation;
    [CompilerGeneratedAttribute]
private EventHandler`1<LoadCompletedEventArgs> LoadCompleted;
    public DataServiceQueryContinuation`1<T> Continuation { get; public set; }
    internal BindingObserver Observer { get; internal set; }
    internal bool IsTracking { get; }
    public DataServiceCollection`1(DataServiceQuerySingle`1<T> item);
    public DataServiceCollection`1(IEnumerable`1<T> items);
    public DataServiceCollection`1(TrackingMode trackingMode, DataServiceQuerySingle`1<T> item);
    public DataServiceCollection`1(IEnumerable`1<T> items, TrackingMode trackingMode);
    public DataServiceCollection`1(DataServiceContext context);
    public DataServiceCollection`1(DataServiceContext context, string entitySetName, Func`2<EntityChangedParams, bool> entityChangedCallback, Func`2<EntityCollectionChangedParams, bool> collectionChangedCallback);
    public DataServiceCollection`1(IEnumerable`1<T> items, TrackingMode trackingMode, string entitySetName, Func`2<EntityChangedParams, bool> entityChangedCallback, Func`2<EntityCollectionChangedParams, bool> collectionChangedCallback);
    public DataServiceCollection`1(DataServiceContext context, IEnumerable`1<T> items, TrackingMode trackingMode, string entitySetName, Func`2<EntityChangedParams, bool> entityChangedCallback, Func`2<EntityCollectionChangedParams, bool> collectionChangedCallback);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1800")]
internal DataServiceCollection`1(object entityMaterializer, DataServiceContext context, IEnumerable`1<T> items, TrackingMode trackingMode, string entitySetName, Func`2<EntityChangedParams, bool> entityChangedCallback, Func`2<EntityCollectionChangedParams, bool> collectionChangedCallback);
    [CompilerGeneratedAttribute]
public void add_LoadCompleted(EventHandler`1<LoadCompletedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_LoadCompleted(EventHandler`1<LoadCompletedEventArgs> value);
    public DataServiceQueryContinuation`1<T> get_Continuation();
    public void set_Continuation(DataServiceQueryContinuation`1<T> value);
    internal BindingObserver get_Observer();
    internal void set_Observer(BindingObserver value);
    internal bool get_IsTracking();
    public void Load(IEnumerable`1<T> items);
    public void LoadAsync(IQueryable`1<T> query);
    public void LoadAsync(Uri requestUri);
    public void LoadAsync();
    public bool LoadNextPartialSetAsync();
    public void CancelAsyncLoad();
    public void Load(T item);
    public void Clear(bool stopTracking);
    public void Detach();
    protected virtual void InsertItem(int index, T item);
    private static void ValidateIteratorParameter(IEnumerable`1<T> items);
    private static DataServiceContext GetContextFromItems(IEnumerable`1<T> items);
    private void InternalLoadCollection(IEnumerable`1<T> items);
    private void StartLoading();
    private void FinishLoading();
    private void StartTracking(DataServiceContext context, IEnumerable`1<T> items, string entitySet, Func`2<EntityChangedParams, bool> entityChanged, Func`2<EntityCollectionChangedParams, bool> collectionChanged);
    private void BeginLoadAsyncOperation(Func`2<AsyncCallback, IAsyncResult> beginCall, Func`2<IAsyncResult, QueryOperationResponse> endCall);
    private void EndLoadAsyncOperation(Func`2<IAsyncResult, QueryOperationResponse> endCall, IAsyncResult asyncResult);
    [CompilerGeneratedAttribute]
private IAsyncResult <LoadNextPartialSetAsync>b__33_0(AsyncCallback asyncCallback);
    [CompilerGeneratedAttribute]
private QueryOperationResponse <LoadNextPartialSetAsync>b__33_1(IAsyncResult asyncResult);
}
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506")]
public class Microsoft.OData.Client.DataServiceContext : object {
    internal Version MaxProtocolVersionAsVersion;
    private static string ServiceRootParameterName;
    private static string ContentType;
    private static string MimeIeee754CompatibleHeaderTrue;
    private ClientEdmModel model;
    private WeakDictionary`2<object, IDictionary`2<string, object>> instanceAnnotations;
    private WeakDictionary`2<object, IList`1<IEdmVocabularyAnnotation>> metadataAnnotationsDictionary;
    private DataServiceClientFormat formatTracker;
    private ODataProtocolVersion maxProtocolVersion;
    private EntityTracker entityTracker;
    private DataServiceResponsePreference addAndUpdateResponsePreference;
    private UriResolver baseUriResolver;
    private Func`2<Type, string> resolveName;
    private Func`2<string, Type> resolveType;
    private int timeout;
    private int readWriteTimeout;
    private bool postTunneling;
    private EntityParameterSendOption entityParameterSendOption;
    private MergeOption mergeOption;
    private SaveChangesOptions saveChangesDefaultOptions;
    private bool ignoreResourceNotFoundException;
    private UndeclaredPropertyBehavior undeclaredPropertyBehavior;
    private DataServiceUrlKeyDelimiter urlKeyDelimiter;
    private HttpStack httpStack;
    private bool keyComparisonGeneratesFilterQuery;
    private IDataServiceRequestMessageFactory requestMessageFactory;
    private ConcurrentDictionary`2<string, Type> resolveTypesCache;
    private DeleteLinkUriOption deleteLinkUriOption;
    private Action`1<object> sendRequest;
    private Func`2<Stream, Stream> getRequestWrappingStream;
    private Action`1<object> sendResponse;
    private Func`2<Stream, Stream> getResponseWrappingStream;
    private bool applyingChanges;
    [CompilerGeneratedAttribute]
private EventHandler`1<SendingRequest2EventArgs> SendingRequest2;
    [CompilerGeneratedAttribute]
private EventHandler`1<ReceivingResponseEventArgs> ReceivingResponse;
    [CompilerGeneratedAttribute]
private EventHandler`1<SaveChangesEventArgs> ChangesSaved;
    [CompilerGeneratedAttribute]
private EventHandler`1<SendingRequestEventArgs> InnerSendingRequest;
    [CompilerGeneratedAttribute]
private EventHandler`1<BuildingRequestEventArgs> InnerBuildingRequest;
    [CompilerGeneratedAttribute]
private bool <AutoNullPropagation>k__BackingField;
    [CompilerGeneratedAttribute]
private DataServiceClientConfigurations <Configurations>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableInstanceAnnotationMaterialization>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableWritingODataAnnotationWithoutPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private IHttpClientFactory <HttpClientFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIeee754Compatible>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsingDataServiceCollection>k__BackingField;
    public Func`2<string, Uri> ResolveEntitySet { get; public set; }
    public Uri BaseUri { get; public set; }
    public DataServiceResponsePreference AddAndUpdateResponsePreference { get; public set; }
    public ODataProtocolVersion MaxProtocolVersion { get; internal set; }
    public EntityParameterSendOption EntityParameterSendOption { get; public set; }
    public MergeOption MergeOption { get; public set; }
    public bool ApplyingChanges { get; internal set; }
    public bool AutoNullPropagation { get; public set; }
    public Func`2<Type, string> ResolveName { get; public set; }
    public Func`2<string, Type> ResolveType { get; public set; }
    public int Timeout { get; public set; }
    public int ReadWriteTimeout { get; public set; }
    public bool UsePostTunneling { get; public set; }
    public ReadOnlyCollection`1<LinkDescriptor> Links { get; }
    public ReadOnlyCollection`1<EntityDescriptor> Entities { get; }
    public SaveChangesOptions SaveChangesDefaultOptions { get; public set; }
    public bool IgnoreResourceNotFoundException { get; public set; }
    public DataServiceClientConfigurations Configurations { get; private set; }
    public DataServiceClientFormat Format { get; }
    public DataServiceUrlKeyDelimiter UrlKeyDelimiter { get; public set; }
    public EntityTracker EntityTracker { get; public set; }
    public bool DisableInstanceAnnotationMaterialization { get; public set; }
    public bool EnableWritingODataAnnotationWithoutPrefix { get; public set; }
    [ObsoleteAttribute("This property will be removed in a future major release.")]
public bool KeyComparisonGeneratesFilterQuery { get; public set; }
    public DeleteLinkUriOption DeleteLinkUriOption { get; public set; }
    internal UndeclaredPropertyBehavior UndeclaredPropertyBehavior { get; internal set; }
    public IHttpClientFactory HttpClientFactory { get; public set; }
    internal IDataServiceRequestMessageFactory RequestMessageFactory { get; internal set; }
    internal HttpStack HttpStack { get; internal set; }
    internal bool HasSendingRequest2EventHandlers { get; }
    internal bool HasBuildingRequestEventHandlers { get; }
    internal DataServiceClientFormat FormatTracker { get; internal set; }
    internal UriResolver BaseUriResolver { get; }
    internal ClientEdmModel Model { get; }
    internal bool IsIeee754Compatible { get; private set; }
    internal bool UsingDataServiceCollection { get; internal set; }
    internal WeakDictionary`2<object, IDictionary`2<string, object>> InstanceAnnotations { get; }
    internal WeakDictionary`2<object, IList`1<IEdmVocabularyAnnotation>> MetadataAnnotationsDictionary { get; }
    public DataServiceContext(Uri serviceRoot);
    public DataServiceContext(Uri serviceRoot, ODataProtocolVersion maxProtocolVersion);
    internal DataServiceContext(Uri serviceRoot, ODataProtocolVersion maxProtocolVersion, ClientEdmModel model);
    [CompilerGeneratedAttribute]
public virtual void add_SendingRequest2(EventHandler`1<SendingRequest2EventArgs> value);
    [CompilerGeneratedAttribute]
public virtual void remove_SendingRequest2(EventHandler`1<SendingRequest2EventArgs> value);
    public virtual void add_BuildingRequest(EventHandler`1<BuildingRequestEventArgs> value);
    public virtual void remove_BuildingRequest(EventHandler`1<BuildingRequestEventArgs> value);
    [CompilerGeneratedAttribute]
public virtual void add_ReceivingResponse(EventHandler`1<ReceivingResponseEventArgs> value);
    [CompilerGeneratedAttribute]
public virtual void remove_ReceivingResponse(EventHandler`1<ReceivingResponseEventArgs> value);
    [CompilerGeneratedAttribute]
internal void add_ChangesSaved(EventHandler`1<SaveChangesEventArgs> value);
    [CompilerGeneratedAttribute]
internal void remove_ChangesSaved(EventHandler`1<SaveChangesEventArgs> value);
    [CompilerGeneratedAttribute]
private void add_InnerSendingRequest(EventHandler`1<SendingRequestEventArgs> value);
    [CompilerGeneratedAttribute]
private void remove_InnerSendingRequest(EventHandler`1<SendingRequestEventArgs> value);
    [CompilerGeneratedAttribute]
private void add_InnerBuildingRequest(EventHandler`1<BuildingRequestEventArgs> value);
    [CompilerGeneratedAttribute]
private void remove_InnerBuildingRequest(EventHandler`1<BuildingRequestEventArgs> value);
    public virtual Func`2<string, Uri> get_ResolveEntitySet();
    public virtual void set_ResolveEntitySet(Func`2<string, Uri> value);
    public virtual Uri get_BaseUri();
    public virtual void set_BaseUri(Uri value);
    public virtual DataServiceResponsePreference get_AddAndUpdateResponsePreference();
    public virtual void set_AddAndUpdateResponsePreference(DataServiceResponsePreference value);
    public virtual ODataProtocolVersion get_MaxProtocolVersion();
    internal virtual void set_MaxProtocolVersion(ODataProtocolVersion value);
    public virtual EntityParameterSendOption get_EntityParameterSendOption();
    public virtual void set_EntityParameterSendOption(EntityParameterSendOption value);
    public virtual MergeOption get_MergeOption();
    public virtual void set_MergeOption(MergeOption value);
    public virtual bool get_ApplyingChanges();
    internal virtual void set_ApplyingChanges(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_AutoNullPropagation();
    [CompilerGeneratedAttribute]
public virtual void set_AutoNullPropagation(bool value);
    public virtual Func`2<Type, string> get_ResolveName();
    public virtual void set_ResolveName(Func`2<Type, string> value);
    public virtual Func`2<string, Type> get_ResolveType();
    public virtual void set_ResolveType(Func`2<string, Type> value);
    public virtual int get_Timeout();
    public virtual void set_Timeout(int value);
    public virtual int get_ReadWriteTimeout();
    public virtual void set_ReadWriteTimeout(int value);
    public virtual bool get_UsePostTunneling();
    public virtual void set_UsePostTunneling(bool value);
    public virtual ReadOnlyCollection`1<LinkDescriptor> get_Links();
    public virtual ReadOnlyCollection`1<EntityDescriptor> get_Entities();
    public virtual SaveChangesOptions get_SaveChangesDefaultOptions();
    public virtual void set_SaveChangesDefaultOptions(SaveChangesOptions value);
    public virtual bool get_IgnoreResourceNotFoundException();
    public virtual void set_IgnoreResourceNotFoundException(bool value);
    [CompilerGeneratedAttribute]
public virtual DataServiceClientConfigurations get_Configurations();
    [CompilerGeneratedAttribute]
private void set_Configurations(DataServiceClientConfigurations value);
    public virtual DataServiceClientFormat get_Format();
    public virtual DataServiceUrlKeyDelimiter get_UrlKeyDelimiter();
    public virtual void set_UrlKeyDelimiter(DataServiceUrlKeyDelimiter value);
    public virtual EntityTracker get_EntityTracker();
    public virtual void set_EntityTracker(EntityTracker value);
    [CompilerGeneratedAttribute]
public virtual bool get_DisableInstanceAnnotationMaterialization();
    [CompilerGeneratedAttribute]
public virtual void set_DisableInstanceAnnotationMaterialization(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_EnableWritingODataAnnotationWithoutPrefix();
    [CompilerGeneratedAttribute]
public virtual void set_EnableWritingODataAnnotationWithoutPrefix(bool value);
    public virtual bool get_KeyComparisonGeneratesFilterQuery();
    public virtual void set_KeyComparisonGeneratesFilterQuery(bool value);
    public virtual DeleteLinkUriOption get_DeleteLinkUriOption();
    public virtual void set_DeleteLinkUriOption(DeleteLinkUriOption value);
    internal UndeclaredPropertyBehavior get_UndeclaredPropertyBehavior();
    internal void set_UndeclaredPropertyBehavior(UndeclaredPropertyBehavior value);
    [CompilerGeneratedAttribute]
public IHttpClientFactory get_HttpClientFactory();
    [CompilerGeneratedAttribute]
public void set_HttpClientFactory(IHttpClientFactory value);
    internal IDataServiceRequestMessageFactory get_RequestMessageFactory();
    internal void set_RequestMessageFactory(IDataServiceRequestMessageFactory value);
    internal HttpStack get_HttpStack();
    internal void set_HttpStack(HttpStack value);
    [DebuggerStepThroughAttribute]
internal bool get_HasSendingRequest2EventHandlers();
    [DebuggerStepThroughAttribute]
internal bool get_HasBuildingRequestEventHandlers();
    internal DataServiceClientFormat get_FormatTracker();
    internal void set_FormatTracker(DataServiceClientFormat value);
    internal UriResolver get_BaseUriResolver();
    internal ClientEdmModel get_Model();
    [CompilerGeneratedAttribute]
internal bool get_IsIeee754Compatible();
    [CompilerGeneratedAttribute]
private void set_IsIeee754Compatible(bool value);
    [CompilerGeneratedAttribute]
internal bool get_UsingDataServiceCollection();
    [CompilerGeneratedAttribute]
internal void set_UsingDataServiceCollection(bool value);
    internal WeakDictionary`2<object, IDictionary`2<string, object>> get_InstanceAnnotations();
    internal WeakDictionary`2<object, IList`1<IEdmVocabularyAnnotation>> get_MetadataAnnotationsDictionary();
    public virtual bool TryGetAnnotation(object source, string term, string qualifier, TResult& annotation);
    public virtual bool TryGetAnnotation(object source, string term, TResult& annotation);
    [SuppressMessageAttribute("Design", "CA1031:Do not catch general exception types")]
public virtual bool TryGetAnnotation(Expression`1<TFunc> expression, string term, string qualifier, TResult& annotation);
    public virtual bool TryGetAnnotation(Expression`1<TFunc> expression, string term, TResult& annotation);
    public virtual EntityDescriptor GetEntityDescriptor(object entity);
    public virtual LinkDescriptor GetLinkDescriptor(object source, string sourceProperty, object target);
    public virtual void CancelRequest(IAsyncResult asyncResult);
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
[SuppressMessageAttribute("Microsoft.Design", "CA1057:StringUriOverloadsCallSystemUriOverloads")]
public virtual DataServiceQuery`1<T> CreateQuery(string entitySetName);
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
[SuppressMessageAttribute("Microsoft.Design", "CA1057:StringUriOverloadsCallSystemUriOverloads")]
public virtual DataServiceQuery`1<T> CreateQuery(string resourcePath, bool isComposable);
    public virtual DataServiceQuery`1<T> CreateFunctionQuery();
    public virtual DataServiceQuery`1<T> CreateFunctionQuery(string path, string functionName, bool isComposable, UriOperationParameter[] parameters);
    public virtual DataServiceQuerySingle`1<T> CreateFunctionQuerySingle(string path, string functionName, bool isComposable, UriOperationParameter[] parameters);
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
[SuppressMessageAttribute("Microsoft.Design", "CA1057:StringUriOverloadsCallSystemUriOverloads")]
public virtual DataServiceQuery`1<T> CreateSingletonQuery(string singletonName);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
public virtual Uri GetMetadataUri();
    public virtual IAsyncResult BeginLoadProperty(object entity, string propertyName, AsyncCallback callback, object state);
    public virtual Task`1<QueryOperationResponse> LoadPropertyAsync(object entity, string propertyName);
    public virtual Task`1<QueryOperationResponse> LoadPropertyAsync(object entity, string propertyName, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginLoadProperty(object entity, string propertyName, Uri nextLinkUri, AsyncCallback callback, object state);
    public virtual Task`1<QueryOperationResponse> LoadPropertyAsync(object entity, string propertyName, Uri nextLinkUri);
    public virtual Task`1<QueryOperationResponse> LoadPropertyAsync(object entity, string propertyName, Uri nextLinkUri, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginLoadProperty(object entity, string propertyName, DataServiceQueryContinuation continuation, AsyncCallback callback, object state);
    public virtual Task`1<QueryOperationResponse> LoadPropertyAsync(object entity, string propertyName, DataServiceQueryContinuation continuation);
    public virtual Task`1<QueryOperationResponse> LoadPropertyAsync(object entity, string propertyName, DataServiceQueryContinuation continuation, CancellationToken cancellationToken);
    public virtual QueryOperationResponse EndLoadProperty(IAsyncResult asyncResult);
    public virtual QueryOperationResponse LoadProperty(object entity, string propertyName);
    public virtual QueryOperationResponse LoadProperty(object entity, string propertyName, Uri nextLinkUri);
    public virtual QueryOperationResponse LoadProperty(object entity, string propertyName, DataServiceQueryContinuation continuation);
    [SuppressMessageAttribute("Microsoft.Design", "CA1011")]
public virtual QueryOperationResponse`1<T> LoadProperty(object entity, string propertyName, DataServiceQueryContinuation`1<T> continuation);
    public virtual Uri GetReadStreamUri(object entity);
    private EntityDescriptor GetEntityDescriptorForStreamEntity(object entity);
    public virtual Uri GetReadStreamUri(object entity, string name);
    public virtual IAsyncResult BeginGetReadStream(object entity, DataServiceRequestArgs args, AsyncCallback callback, object state);
    public virtual Task`1<DataServiceStreamResponse> GetReadStreamAsync(object entity, DataServiceRequestArgs args);
    public virtual Task`1<DataServiceStreamResponse> GetReadStreamAsync(object entity, DataServiceRequestArgs args, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginGetReadStream(object entity, string name, DataServiceRequestArgs args, AsyncCallback callback, object state);
    public virtual Task`1<DataServiceStreamResponse> GetReadStreamAsync(object entity, string name, DataServiceRequestArgs args);
    public virtual Task`1<DataServiceStreamResponse> GetReadStreamAsync(object entity, string name, DataServiceRequestArgs args, CancellationToken cancellationToken);
    public virtual DataServiceStreamResponse EndGetReadStream(IAsyncResult asyncResult);
    public virtual DataServiceStreamResponse GetReadStream(object entity);
    public virtual DataServiceStreamResponse GetReadStream(object entity, string acceptContentType);
    public virtual DataServiceStreamResponse GetReadStream(object entity, DataServiceRequestArgs args);
    public virtual DataServiceStreamResponse GetReadStream(object entity, string name, DataServiceRequestArgs args);
    public virtual void SetSaveStream(object entity, Stream stream, bool closeStream, string contentType, string slug);
    public virtual void SetSaveStream(object entity, Stream stream, bool closeStream, DataServiceRequestArgs args);
    public virtual void SetSaveStream(object entity, string name, Stream stream, bool closeStream, string contentType);
    public virtual void SetSaveStream(object entity, string name, Stream stream, bool closeStream, DataServiceRequestArgs args);
    public virtual IAsyncResult BeginExecuteBatch(AsyncCallback callback, object state, DataServiceRequest[] queries);
    public virtual IAsyncResult BeginExecuteBatch(AsyncCallback callback, object state, SaveChangesOptions options, DataServiceRequest[] queries);
    public virtual Task`1<DataServiceResponse> ExecuteBatchAsync(DataServiceRequest[] queries);
    public virtual Task`1<DataServiceResponse> ExecuteBatchAsync(CancellationToken cancellationToken, DataServiceRequest[] queries);
    public virtual Task`1<DataServiceResponse> ExecuteBatchAsync(SaveChangesOptions options, DataServiceRequest[] queries);
    public virtual Task`1<DataServiceResponse> ExecuteBatchAsync(SaveChangesOptions options, CancellationToken cancellationToken, DataServiceRequest[] queries);
    public virtual DataServiceResponse EndExecuteBatch(IAsyncResult asyncResult);
    public virtual DataServiceResponse ExecuteBatch(DataServiceRequest[] queries);
    public virtual DataServiceResponse ExecuteBatch(SaveChangesOptions options, DataServiceRequest[] queries);
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
public virtual IAsyncResult BeginExecute(Uri requestUri, AsyncCallback callback, object state);
    public virtual Task`1<IEnumerable`1<TElement>> ExecuteAsync(Uri requestUri);
    public virtual Task`1<IEnumerable`1<TElement>> ExecuteAsync(Uri requestUri, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginExecute(Uri requestUri, AsyncCallback callback, object state, string httpMethod, OperationParameter[] operationParameters);
    public virtual Task`1<OperationResponse> ExecuteAsync(Uri requestUri, string httpMethod, OperationParameter[] operationParameters);
    public virtual Task`1<OperationResponse> ExecuteAsync(Uri requestUri, string httpMethod, CancellationToken cancellationToken, OperationParameter[] operationParameters);
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
public virtual IAsyncResult BeginExecute(Uri requestUri, AsyncCallback callback, object state, string httpMethod, bool singleResult, OperationParameter[] operationParameters);
    public virtual Task`1<IEnumerable`1<TElement>> ExecuteAsync(Uri requestUri, string httpMethod, bool singleResult, OperationParameter[] operationParameters);
    public virtual Task`1<IEnumerable`1<TElement>> ExecuteAsync(Uri requestUri, string httpMethod, bool singleResult, CancellationToken cancellationToken, OperationParameter[] operationParameters);
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
public virtual IAsyncResult BeginExecute(Uri requestUri, AsyncCallback callback, object state, string httpMethod, OperationParameter[] operationParameters);
    public virtual Task`1<IEnumerable`1<TElement>> ExecuteAsync(Uri requestUri, string httpMethod, OperationParameter[] operationParameters);
    public virtual Task`1<IEnumerable`1<TElement>> ExecuteAsync(Uri requestUri, string httpMethod, CancellationToken cancellationToken, OperationParameter[] operationParameters);
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
public virtual IAsyncResult BeginExecute(DataServiceQueryContinuation`1<T> continuation, AsyncCallback callback, object state);
    public virtual Task`1<IEnumerable`1<TElement>> ExecuteAsync(DataServiceQueryContinuation`1<TElement> continuation);
    public virtual Task`1<IEnumerable`1<TElement>> ExecuteAsync(DataServiceQueryContinuation`1<TElement> continuation, CancellationToken cancellationToken);
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
public virtual IEnumerable`1<TElement> EndExecute(IAsyncResult asyncResult);
    public virtual OperationResponse EndExecute(IAsyncResult asyncResult);
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
public virtual IEnumerable`1<TElement> Execute(Uri requestUri);
    public virtual QueryOperationResponse`1<T> Execute(DataServiceQueryContinuation`1<T> continuation);
    public virtual OperationResponse Execute(Uri requestUri, string httpMethod, OperationParameter[] operationParameters);
    [SuppressMessageAttribute("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")]
[SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
public virtual IEnumerable`1<TElement> Execute(Uri requestUri, string httpMethod, bool singleResult, OperationParameter[] operationParameters);
    [SuppressMessageAttribute("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")]
[SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
public virtual IEnumerable`1<TElement> Execute(Uri requestUri, string httpMethod, OperationParameter[] operationParameters);
    public virtual IAsyncResult BeginSaveChanges(AsyncCallback callback, object state);
    public virtual Task`1<DataServiceResponse> SaveChangesAsync();
    public virtual IAsyncResult BeginSaveChanges(SaveChangesOptions options, AsyncCallback callback, object state);
    public virtual Task`1<DataServiceResponse> SaveChangesAsync(SaveChangesOptions options);
    public virtual Task`1<DataServiceResponse> SaveChangesAsync(CancellationToken cancellationToken);
    public virtual Task`1<DataServiceResponse> SaveChangesAsync(SaveChangesOptions options, CancellationToken cancellationToken);
    public virtual DataServiceResponse EndSaveChanges(IAsyncResult asyncResult);
    public virtual DataServiceResponse SaveChanges();
    public virtual DataServiceResponse SaveChanges(SaveChangesOptions options);
    public virtual DataServiceResponse BulkUpdate(T[] objects);
    public virtual Task`1<DataServiceResponse> BulkUpdateAsync(T[] objects);
    public virtual Task`1<DataServiceResponse> BulkUpdateAsync(CancellationToken cancellationToken, T[] objects);
    internal virtual IAsyncResult BeginBulkUpdate(AsyncCallback callback, object state, T[] objects);
    internal virtual DataServiceResponse EndBulkUpdate(IAsyncResult asyncResult);
    public virtual DataServiceResponse DeepInsert(T resource);
    public virtual Task`1<DataServiceResponse> DeepInsertAsync(T resource);
    public virtual Task`1<DataServiceResponse> DeepInsertAsync(T resource, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginDeepInsert(AsyncCallback callback, object state, T resource);
    public virtual DataServiceResponse EndDeepInsert(IAsyncResult asyncResult);
    public virtual void AddLink(object source, string sourceProperty, object target);
    public virtual void AttachLink(object source, string sourceProperty, object target);
    public virtual bool DetachLink(object source, string sourceProperty, object target);
    public virtual void DeleteLink(object source, string sourceProperty, object target);
    public virtual void SetLink(object source, string sourceProperty, object target);
    public virtual void SetRelatedObjectLink(object source, string sourceProperty, object target);
    public virtual void AddObject(string entitySetName, object entity);
    public virtual void AddRelatedObject(object source, string sourceProperty, object target);
    public virtual void SetRelatedObject(object source, string sourceProperty, object target);
    public virtual void AttachTo(string entitySetName, object entity);
    [SuppressMessageAttribute("Microsoft.Naming", "CA1704")]
public virtual void AttachTo(string entitySetName, object entity, string etag);
    public virtual void DeleteObject(object entity, Object[] dependsOnObjects);
    public virtual void DeleteObject(object entity);
    public virtual bool Detach(object entity);
    public virtual void UpdateObject(object entity, Object[] dependsOnObjects);
    public virtual void UpdateObject(object entity);
    private static List`1<string> ConvertDependOnIdsToString(Object[] dependsOnIds);
    public virtual void UpdateRelatedObject(object source, string sourceProperty, object target);
    [SuppressMessageAttribute("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
[SuppressMessageAttribute("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
[SuppressMessageAttribute("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
public virtual void ChangeState(object entity, EntityStates state);
    public virtual bool TryGetEntity(Uri identity, TEntity& entity);
    public virtual bool TryGetUri(object entity, Uri& identity);
    internal Task`1<TResult> FromAsync(Func`3<AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, CancellationToken cancellationToken);
    internal Task`1<TResult> FromAsync(Func`4<TArg, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg arg, CancellationToken cancellationToken);
    internal Task`1<TResult> FromAsync(Func`5<TArg1, TArg2, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, TArg2 arg2, CancellationToken cancellationToken);
    internal Task`1<TResult> FromAsync(Func`6<TArg1, TArg2, TArg3, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, CancellationToken cancellationToken);
    internal virtual IEdmVocabularyAnnotatable GetEdmOperationOrOperationImport(MethodInfo methodInfo);
    internal Task`1<QueryOperationResponse> LoadPropertyAllPagesAsync(object entity, string propertyName);
    [SuppressMessageAttribute("Reliability", "CA2008:Do not create tasks without passing a TaskScheduler")]
internal Task`1<QueryOperationResponse> LoadPropertyAllPagesAsync(object entity, string propertyName, CancellationToken cancellationToken);
    internal QueryOperationResponse LoadPropertyAllPages(object entity, string propertyName);
    [SuppressMessageAttribute("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")]
internal QueryOperationResponse`1<TElement> InnerSynchExecute(Uri requestUri, string httpMethod, Nullable`1<bool> singleResult, OperationParameter[] operationParameters);
    internal IAsyncResult InnerBeginExecute(Uri requestUri, AsyncCallback callback, object state, string httpMethod, string method, Nullable`1<bool> singleResult, OperationParameter[] operationParameters);
    internal void AttachLink(object source, string sourceProperty, object target, MergeOption linkMerge);
    internal ODataRequestMessageWrapper CreateODataRequestMessage(BuildingRequestEventArgs requestMessageArgs, Descriptor descriptor);
    internal Type ResolveTypeFromName(string wireName);
    internal string ResolveNameFromTypeInternal(Type type);
    internal void FireSendingRequest(SendingRequestEventArgs eventArgs);
    internal void FireSendingRequest2(SendingRequest2EventArgs eventArgs);
    internal void FireReceivingResponseEvent(ReceivingResponseEventArgs receivingResponseEventArgs);
    internal IODataResponseMessage GetSynchronousResponse(ODataRequestMessageWrapper request, bool handleWebException);
    internal IODataResponseMessage EndGetResponse(ODataRequestMessageWrapper request, IAsyncResult asyncResult);
    internal void InternalSendRequest(HttpWebRequest request);
    internal Stream InternalGetRequestWrappingStream(Stream requestStream);
    internal void InternalSendResponse(HttpWebResponse response);
    internal Stream InternalGetResponseWrappingStream(Stream responseStream);
    internal virtual ODataResourceMetadataBuilder GetEntityMetadataBuilder(string entitySetName, IEdmStructuredValue entityInstance);
    internal BuildingRequestEventArgs CreateRequestArgsAndFireBuildingRequest(string method, Uri requestUri, HeaderCollection headers, HttpStack stack, Descriptor descriptor);
    protected internal Type DefaultResolveType(string typeName, string fullNamespace, string languageDependentNamespace);
    private Nullable`1<bool> IsSingletonType();
    [SuppressMessageAttribute("Reliability", "CA2008:Do not create tasks without passing a TaskScheduler")]
private QueryOperationResponse ContinuePage(QueryOperationResponse response, object entity, string propertyName);
    [SuppressMessageAttribute("Reliability", "CA2008:Do not create tasks without passing a TaskScheduler")]
private Task`1<QueryOperationResponse> ContinuePageAsync(QueryOperationResponse response, object entity, string propertyName, CancellationToken cancellationToken);
    private static void ValidateEntitySetName(String& entitySetName);
    private static void ValidateEntityType(object entity, ClientEdmModel model);
    private static void ValidateOperationParameters(string httpMethod, OperationParameter[] parameters, List`1& bodyOperationParameters, List`1& uriOperationParameters);
    private BuildingRequestEventArgs FireBuildingRequest(BuildingRequestEventArgs buildingRequestEventArgs);
    private void ValidateSaveChangesOptions(SaveChangesOptions options);
    private void ValidateExecuteParameters(Uri& requestUri, string httpMethod, Nullable`1& singleResult, List`1& bodyOperationParameters, List`1& uriOperationParameters, OperationParameter[] operationParameters);
    private LoadPropertyResult CreateLoadPropertyRequest(object entity, string propertyName, AsyncCallback callback, object state, Uri requestUri, DataServiceQueryContinuation continuation);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
private bool EnsureRelatable(object source, string sourceProperty, object target, EntityStates state);
    private GetReadStreamResult CreateGetReadStreamResult(object entity, DataServiceRequestArgs args, AsyncCallback callback, object state, string name);
    private void EnsureMinimumProtocolVersionV3();
    private ODataResourceMetadataBuilder GetEntityMetadataBuilderInternal(EntityDescriptor descriptor);
    private IODataResponseMessage GetResponseHelper(ODataRequestMessageWrapper request, IAsyncResult asyncResult, bool handleWebException);
    private void UpdateObjectInternal(object entity, bool failIfNotUnchanged, Object[] dependsOnObjects);
    private void UpdateObjectInternal(object entity, bool failIfNotUnchanged);
    private void DeleteObjectInternal(object entity, bool failIfInAddedState, Object[] dependsOnObjects);
    private void DeleteObjectInternal(object entity, bool failIfInAddedState);
    private static void UpdateResourceWithDependsOnChangeOrdersAndChangeSetIds(EntityDescriptor res, Object[] dependsOnObjects, EntityTracker entityTracker, EntityDescriptor& resource);
    private void SetStateToUnchanged(object entity);
    [CompilerGeneratedAttribute]
private IAsyncResult <BulkUpdateAsync>b__255_0(T[] objectsArg, AsyncCallback callback, object state);
    [CompilerGeneratedAttribute]
private IAsyncResult <DeepInsertAsync>b__260_0(T objectsArg, AsyncCallback callback, object state);
}
[ExtensionAttribute]
public static class Microsoft.OData.Client.DataServiceExtensions : object {
    private static SimpleLazy`1<MethodInfo> EnumerableSelectMethod;
    private static SimpleLazy`1<MethodInfo> EnumerableDistinctMethod;
    private static SimpleLazy`1<MethodInfo> EnumerableCountMethod;
    private static DataServiceExtensions();
    [ExtensionAttribute]
public static int CountDistinct(IQueryable`1<TSource> source, Expression`1<Func`2<TSource, TTarget>> selector);
    [ExtensionAttribute]
public static int CountDistinct(IEnumerable`1<TSource> source, Func`2<TSource, TTarget> selector);
    private static MethodInfo GetEnumerableSelectMethod();
    private static MethodInfo GetDistinctMethod(Type declaringType, Type sourceType);
    private static MethodInfo GetCountMethod(Type declaringType, Type sourceType);
}
[SuppressMessageAttribute("Microsoft.Design", "CA1010")]
[SuppressMessageAttribute("Microsoft.Naming", "CA1710")]
public abstract class Microsoft.OData.Client.DataServiceQuery : DataServiceRequest {
    public Expression Expression { get; }
    public IQueryProvider Provider { get; }
    public abstract virtual Expression get_Expression();
    public abstract virtual IQueryProvider get_Provider();
    [SuppressMessageAttribute("Microsoft.Design", "CA1033")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual IEnumerable Execute();
    public virtual IAsyncResult BeginExecute(AsyncCallback callback, object state);
    public virtual Task`1<IEnumerable> ExecuteAsync();
    public virtual IEnumerable EndExecute(IAsyncResult asyncResult);
    internal abstract virtual IEnumerable ExecuteInternal();
    internal abstract virtual IAsyncResult BeginExecuteInternal(AsyncCallback callback, object state);
    internal abstract virtual IEnumerable EndExecuteInternal(IAsyncResult asyncResult);
}
[SuppressMessageAttribute("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
public class Microsoft.OData.Client.DataServiceQuery`1 : DataServiceQuery {
    private static MethodInfo expandMethodInfo;
    private static MethodInfo expandGenericMethodInfo;
    private Expression queryExpression;
    private DataServiceQueryProvider queryProvider;
    private QueryComponents queryComponents;
    [CompilerGeneratedAttribute]
private bool <IsComposable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFunction>k__BackingField;
    public Type ElementType { get; }
    public Expression Expression { get; }
    public IQueryProvider Provider { get; }
    public Uri RequestUri { get; internal set; }
    public DataServiceContext Context { get; }
    public bool IsComposable { get; private set; }
    internal bool IsFunction { get; private set; }
    internal ProjectionPlan Plan { get; }
    [SuppressMessageAttribute("ApiDesign", "RS0022:Constructor make noninheritable base class inheritable")]
public DataServiceQuery`1(Expression expression, DataServiceQueryProvider provider);
    [SuppressMessageAttribute("ApiDesign", "RS0022:Constructor make noninheritable base class inheritable")]
public DataServiceQuery`1(Expression expression, DataServiceQueryProvider provider, bool isComposable);
    private static DataServiceQuery`1();
    public virtual Type get_ElementType();
    public virtual Expression get_Expression();
    public virtual IQueryProvider get_Provider();
    public virtual Uri get_RequestUri();
    internal virtual void set_RequestUri(Uri value);
    public virtual DataServiceContext get_Context();
    [CompilerGeneratedAttribute]
public virtual bool get_IsComposable();
    [CompilerGeneratedAttribute]
private void set_IsComposable(bool value);
    [CompilerGeneratedAttribute]
internal bool get_IsFunction();
    [CompilerGeneratedAttribute]
private void set_IsFunction(bool value);
    internal virtual ProjectionPlan get_Plan();
    public virtual string GetKeyPath(string keyString);
    public virtual DataServiceQuery`1<T> CreateFunctionQuery(string functionName, bool isComposable, UriOperationParameter[] parameters);
    public virtual DataServiceQuerySingle`1<T> CreateFunctionQuerySingle(string functionName, bool isComposable, UriOperationParameter[] parameters);
    public virtual string AppendRequestUri(string nextSegment);
    public virtual string GetPath(string nextSegment);
    public virtual IAsyncResult BeginExecute(AsyncCallback callback, object state);
    public virtual Task`1<IEnumerable`1<TElement>> ExecuteAsync();
    public virtual Task`1<IEnumerable`1<TElement>> ExecuteAsync(CancellationToken cancellationToken);
    public virtual IEnumerable`1<TElement> EndExecute(IAsyncResult asyncResult);
    public virtual Task`1<IEnumerable`1<TElement>> GetAllPagesAsync();
    [SuppressMessageAttribute("Reliability", "CA2008:Do not create tasks without passing a TaskScheduler")]
public virtual Task`1<IEnumerable`1<TElement>> GetAllPagesAsync(CancellationToken cancellationToken);
    public virtual IEnumerable`1<TElement> Execute();
    public virtual IEnumerable`1<TElement> GetAllPages();
    public virtual DataServiceQuery`1<TElement> Expand(string path);
    [SuppressMessageAttribute("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
public virtual DataServiceQuery`1<TElement> Expand(Expression`1<Func`2<TElement, TTarget>> navigationPropertyAccessor);
    public virtual DataServiceQuery`1<TElement> IncludeCount();
    public virtual DataServiceQuery`1<TElement> IncludeCount(bool countQuery);
    public virtual DataServiceQuery`1<TElement> AddQueryOption(string name, object value);
    public virtual IEnumerator`1<TElement> GetEnumerator();
    public virtual string ToString();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    internal virtual QueryComponents QueryComponents(ClientEdmModel model);
    internal virtual IEnumerable ExecuteInternal();
    internal virtual IAsyncResult BeginExecuteInternal(AsyncCallback callback, object state);
    internal virtual IEnumerable EndExecuteInternal(IAsyncResult asyncResult);
    private QueryComponents Translate();
    [IteratorStateMachineAttribute("Microsoft.OData.Client.DataServiceQuery`1/<ContinuePage>d__54")]
[SuppressMessageAttribute("Reliability", "CA2008:Do not create tasks without passing a TaskScheduler")]
private IEnumerable`1<TElement> ContinuePage(IEnumerable`1<TElement> response, CancellationToken cancellationToken);
    [IteratorStateMachineAttribute("Microsoft.OData.Client.DataServiceQuery`1/<GetRestPages>d__55")]
private IEnumerable`1<TElement> GetRestPages(IEnumerable`1<TElement> response);
}
[DebuggerDisplayAttribute("{NextLinkUri}")]
public abstract class Microsoft.OData.Client.DataServiceQueryContinuation : object {
    private Uri nextLinkUri;
    private ProjectionPlan plan;
    public Uri NextLinkUri { get; internal set; }
    internal Type ElementType { get; }
    internal ProjectionPlan Plan { get; internal set; }
    internal DataServiceQueryContinuation(Uri nextLinkUri, ProjectionPlan plan);
    public Uri get_NextLinkUri();
    internal void set_NextLinkUri(Uri value);
    internal abstract virtual Type get_ElementType();
    internal ProjectionPlan get_Plan();
    internal void set_Plan(ProjectionPlan value);
    public virtual string ToString();
    internal static DataServiceQueryContinuation Create(Uri nextLinkUri, ProjectionPlan plan);
    internal QueryComponents CreateQueryComponents();
}
public class Microsoft.OData.Client.DataServiceQueryContinuation`1 : DataServiceQueryContinuation {
    internal Type ElementType { get; }
    internal DataServiceQueryContinuation`1(Uri nextLinkUri, ProjectionPlan plan);
    internal virtual Type get_ElementType();
}
[DebuggerDisplayAttribute("{Message}")]
public class Microsoft.OData.Client.DataServiceQueryException : InvalidOperationException {
    private QueryOperationResponse response;
    public QueryOperationResponse Response { get; }
    public DataServiceQueryException(string message);
    public DataServiceQueryException(string message, Exception innerException);
    public DataServiceQueryException(string message, Exception innerException, QueryOperationResponse response);
    [SuppressMessageAttribute("Microsoft.Design", "CA1047")]
[SuppressMessageAttribute("Microsoft.Design", "CA1032")]
protected DataServiceQueryException(SerializationInfo info, StreamingContext context);
    public QueryOperationResponse get_Response();
}
public class Microsoft.OData.Client.DataServiceQueryProvider : object {
    internal DataServiceContext Context;
    internal DataServiceQueryProvider(DataServiceContext context);
    public sealed virtual IQueryable CreateQuery(Expression expression);
    public sealed virtual IQueryable`1<TElement> CreateQuery(Expression expression);
    public sealed virtual object Execute(Expression expression);
    public sealed virtual TResult Execute(Expression expression);
    internal TElement ReturnSingleton(Expression expression);
    internal QueryComponents Translate(Expression e);
    private TElement GetValueForAny(MethodCallExpression mce);
    private static MethodCallExpression NestPredicateExpression(MethodCallExpression mce);
    private static TElement ParseQuerySetCount(QueryResult queryResult);
    private TElement ParseAggregateSingletonResult(QueryResult queryResult);
}
public class Microsoft.OData.Client.DataServiceQuerySingle`1 : object {
    internal DataServiceQuery`1<TElement> Query;
    private bool isFunction;
    [CompilerGeneratedAttribute]
private DataServiceContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsComposable>k__BackingField;
    public DataServiceContext Context { get; private set; }
    public bool IsComposable { get; private set; }
    public Uri RequestUri { get; }
    public DataServiceQuerySingle`1(DataServiceContext context, string path);
    public DataServiceQuerySingle`1(DataServiceContext context, string path, bool isComposable);
    public DataServiceQuerySingle`1(DataServiceQuerySingle`1<TElement> query);
    internal DataServiceQuerySingle`1(DataServiceQuery`1<TElement> query, bool isComposable);
    [CompilerGeneratedAttribute]
public virtual DataServiceContext get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(DataServiceContext value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsComposable();
    [CompilerGeneratedAttribute]
private void set_IsComposable(bool value);
    public virtual Uri get_RequestUri();
    public virtual DataServiceQuery`1<T> CreateFunctionQuery(string functionName, bool isComposable, UriOperationParameter[] parameters);
    public virtual DataServiceQuerySingle`1<T> CreateFunctionQuerySingle(string functionName, bool isComposable, UriOperationParameter[] parameters);
    public virtual TElement GetValue();
    public virtual IAsyncResult BeginGetValue(AsyncCallback callback, object state);
    public virtual Task`1<TElement> GetValueAsync();
    public virtual Task`1<TElement> GetValueAsync(CancellationToken cancellationToken);
    public virtual TElement EndGetValue(IAsyncResult asyncResult);
    public virtual string GetPath(string nextSegment);
    public virtual string AppendRequestUri(string nextSegment);
    public DataServiceQuerySingle`1<TResult> Select(Expression`1<Func`2<TElement, TResult>> selector);
    public DataServiceQuerySingle`1<TElement> Expand(Expression`1<Func`2<TElement, TTarget>> navigationPropertyAccessor);
    public virtual DataServiceQuerySingle`1<TElement> Expand(string path);
    public virtual DataServiceQuerySingle`1<TResult> CastTo();
}
public abstract class Microsoft.OData.Client.DataServiceRequest : object {
    [CompilerGeneratedAttribute]
private ODataPayloadKind <PayloadKind>k__BackingField;
    public Type ElementType { get; }
    public Uri RequestUri { get; internal set; }
    internal ProjectionPlan Plan { get; }
    internal ODataPayloadKind PayloadKind { get; internal set; }
    public abstract virtual Type get_ElementType();
    public abstract virtual Uri get_RequestUri();
    internal abstract virtual void set_RequestUri(Uri value);
    internal abstract virtual ProjectionPlan get_Plan();
    [CompilerGeneratedAttribute]
internal ODataPayloadKind get_PayloadKind();
    [CompilerGeneratedAttribute]
internal void set_PayloadKind(ODataPayloadKind value);
    internal static ObjectMaterializer Materialize(ResponseInfo responseInfo, QueryComponents queryComponents, ProjectionPlan plan, string contentType, IODataResponseMessage message, ODataPayloadKind expectedPayloadKind, MaterializerCache materializerCache);
    internal static DataServiceRequest GetInstance(Type elementType, Uri requestUri);
    internal static IEnumerable`1<TElement> EndExecute(object source, DataServiceContext context, string method, IAsyncResult asyncResult);
    internal abstract virtual QueryComponents QueryComponents(ClientEdmModel model);
    internal QueryOperationResponse`1<TElement> Execute(DataServiceContext context, QueryComponents queryComponents);
    internal TElement GetValue(DataServiceContext context, Func`2<QueryResult, TElement> parseQueryResultFunc);
    internal IAsyncResult BeginExecute(object source, DataServiceContext context, AsyncCallback callback, object state, string method);
    private QueryResult CreateExecuteResult(object source, DataServiceContext context, AsyncCallback callback, object state, string method);
}
public class Microsoft.OData.Client.DataServiceRequest`1 : DataServiceRequest {
    private ProjectionPlan plan;
    private Uri requestUri;
    private QueryComponents queryComponents;
    public Type ElementType { get; }
    public Uri RequestUri { get; internal set; }
    internal ProjectionPlan Plan { get; }
    public DataServiceRequest`1(Uri requestUri);
    internal DataServiceRequest`1(Uri requestUri, QueryComponents queryComponents, ProjectionPlan plan);
    public virtual Type get_ElementType();
    public virtual Uri get_RequestUri();
    internal virtual void set_RequestUri(Uri value);
    internal virtual ProjectionPlan get_Plan();
    public virtual string ToString();
    internal virtual QueryComponents QueryComponents(ClientEdmModel model);
}
public class Microsoft.OData.Client.DataServiceRequestArgs : object {
    [CompilerGeneratedAttribute]
private HeaderCollection <HeaderCollection>k__BackingField;
    public string AcceptContentType { get; public set; }
    public string ContentType { get; public set; }
    public string Slug { get; public set; }
    public Dictionary`2<string, string> Headers { get; internal set; }
    internal HeaderCollection HeaderCollection { get; private set; }
    public string get_AcceptContentType();
    public void set_AcceptContentType(string value);
    public string get_ContentType();
    public void set_ContentType(string value);
    public string get_Slug();
    public void set_Slug(string value);
    public Dictionary`2<string, string> get_Headers();
    internal void set_Headers(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
internal HeaderCollection get_HeaderCollection();
    [CompilerGeneratedAttribute]
private void set_HeaderCollection(HeaderCollection value);
}
[DebuggerDisplayAttribute("{Message}")]
public class Microsoft.OData.Client.DataServiceRequestException : InvalidOperationException {
    private DataServiceResponse response;
    public DataServiceResponse Response { get; }
    public DataServiceRequestException(string message);
    public DataServiceRequestException(string message, Exception innerException);
    public DataServiceRequestException(string message, Exception innerException, DataServiceResponse response);
    [SuppressMessageAttribute("Microsoft.Design", "CA1047")]
[SuppressMessageAttribute("Microsoft.Design", "CA1032")]
protected DataServiceRequestException(SerializationInfo info, StreamingContext context);
    public DataServiceResponse get_Response();
}
internal class Microsoft.OData.Client.DataServiceRequestMessageFactory : object {
    public sealed virtual DataServiceClientRequestMessage CreateRequestMessage(DataServiceClientRequestMessageArgs args, DataServiceContext dataServiceContext);
}
[SuppressMessageAttribute("Microsoft.Design", "CA1010")]
[SuppressMessageAttribute("Microsoft.Naming", "CA1710")]
public class Microsoft.OData.Client.DataServiceResponse : object {
    private HeaderCollection headers;
    private int statusCode;
    private IEnumerable`1<OperationResponse> response;
    private bool batchResponse;
    public IDictionary`2<string, string> BatchHeaders { get; }
    public int BatchStatusCode { get; }
    public bool IsBatchResponse { get; }
    internal DataServiceResponse(HeaderCollection headers, int statusCode, IEnumerable`1<OperationResponse> response, bool batchResponse);
    public IDictionary`2<string, string> get_BatchHeaders();
    public int get_BatchStatusCode();
    public bool get_IsBatchResponse();
    public sealed virtual IEnumerator`1<OperationResponse> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public enum Microsoft.OData.Client.DataServiceResponsePreference : Enum {
    public int value__;
    public static DataServiceResponsePreference None;
    public static DataServiceResponsePreference IncludeContent;
    public static DataServiceResponsePreference NoContent;
}
internal class Microsoft.OData.Client.DataServiceSaveStream : object {
    private DataServiceRequestArgs args;
    private Stream stream;
    private bool close;
    internal Stream Stream { get; }
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811")]
internal DataServiceRequestArgs Args { get; internal set; }
    internal DataServiceSaveStream(Stream stream, bool close, DataServiceRequestArgs args);
    internal Stream get_Stream();
    internal DataServiceRequestArgs get_Args();
    internal void set_Args(DataServiceRequestArgs value);
    internal void Close();
}
public class Microsoft.OData.Client.DataServiceStreamLink : object {
    private string name;
    private Uri selfLink;
    private Uri editLink;
    private string contentType;
    private string etag;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    public string Name { get; }
    public Uri SelfLink { get; internal set; }
    public Uri EditLink { get; internal set; }
    public string ContentType { get; internal set; }
    public string ETag { get; internal set; }
    internal DataServiceStreamLink(string name);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public string get_Name();
    public Uri get_SelfLink();
    internal void set_SelfLink(Uri value);
    public Uri get_EditLink();
    internal void set_EditLink(Uri value);
    public string get_ContentType();
    internal void set_ContentType(string value);
    public string get_ETag();
    internal void set_ETag(string value);
    private void OnPropertyChanged(string propertyName);
}
public class Microsoft.OData.Client.DataServiceStreamResponse : object {
    private IODataResponseMessage responseMessage;
    private Dictionary`2<string, string> headers;
    private Stream responseStream;
    public string ContentType { get; }
    public string ContentDisposition { get; }
    public Dictionary`2<string, string> Headers { get; }
    public Stream Stream { get; }
    internal DataServiceStreamResponse(IODataResponseMessage response);
    public string get_ContentType();
    public string get_ContentDisposition();
    public Dictionary`2<string, string> get_Headers();
    public Stream get_Stream();
    public sealed virtual void Dispose();
    private void CheckDisposed();
}
[SuppressMessageAttribute("Microsoft.Design", "CA1032:ImplementStandardExceptionConstructors")]
public class Microsoft.OData.Client.DataServiceTransportException : InvalidOperationException {
    private IODataResponseMessage ResponseMessage;
    public IODataResponseMessage Response { get; }
    public DataServiceTransportException(IODataResponseMessage response, Exception innerException);
    protected DataServiceTransportException(SerializationInfo info, StreamingContext context);
    public IODataResponseMessage get_Response();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Microsoft.OData.Client.DataServiceUrlKeyDelimiter : object {
    private static DataServiceUrlKeyDelimiter parenthesesDelimiter;
    private static DataServiceUrlKeyDelimiter slashDelimiter;
    private KeySerializer keySerializer;
    public static DataServiceUrlKeyDelimiter Parentheses { get; }
    public static DataServiceUrlKeyDelimiter Slash { get; }
    private DataServiceUrlKeyDelimiter(bool enableKeyAsSegment);
    private static DataServiceUrlKeyDelimiter();
    public static DataServiceUrlKeyDelimiter get_Parentheses();
    public static DataServiceUrlKeyDelimiter get_Slash();
    internal void AppendKeyExpression(IEdmStructuredValue entity, StringBuilder builder);
    internal void AppendKeyExpression(ICollection`1<T> keyProperties, Func`2<T, string> getPropertyName, Func`2<T, object> getValueForProperty, StringBuilder builder);
    private static object GetPropertyValue(IEdmPropertyValue property, IEdmTypeReference type);
}
internal class Microsoft.OData.Client.DataStringEscapeBuilder : object {
    private static string SensitiveCharacters;
    private string input;
    private StringBuilder output;
    private int index;
    private StringBuilder quotedDataBuilder;
    private DataStringEscapeBuilder(string dataString);
    internal static string EscapeDataString(string input);
    private string Build();
    private void ReadQuotedString(char quoteStart);
}
internal class Microsoft.OData.Client.DateTimeOffsetTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.DateTimeTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
}
internal class Microsoft.OData.Client.DateTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.DecimalTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
[SuppressMessageAttribute("Microsoft.Design", "CA1001:TypesThatOwnDisposableFieldsShouldBeDisposable")]
internal class Microsoft.OData.Client.DeepInsertSaveResult : BaseSaveResult {
    private ODataWriterWrapper writer;
    private BulkUpdateGraph bulkUpdateGraph;
    private List`1<OperationResponse> operationResponses;
    private Dictionary`2<Descriptor, IMaterializerState> materializerStateForDescriptor;
    private Stream responseStream;
    private HeaderCollection headers;
    private MaterializerEntry topLevelEntry;
    internal BulkUpdateGraph BulkUpdateGraph { get; }
    protected Stream ResponseStream { get; }
    protected bool ProcessResponsePayload { get; }
    internal bool IsBatchRequest { get; }
    internal DeepInsertSaveResult(DataServiceContext context, string method, SaveChangesOptions options, AsyncCallback callback, object state);
    internal BulkUpdateGraph get_BulkUpdateGraph();
    protected virtual Stream get_ResponseStream();
    internal void DeepInsertRequest(T resource);
    internal void BeginDeepInsertRequest(T resource);
    internal void BuildDescriptorGraph(IEnumerable`1<Descriptor> descriptors, bool isRootObject, T[] objects);
    private string GetEntitySetAndKey(EntityDescriptor entityDescriptor);
    private ODataRequestMessageWrapper CreateDeepInsertRequest(BulkUpdateGraph bulkUpdateGraph);
    private ODataRequestMessageWrapper GenerateDeepInsertRequest();
    protected virtual bool get_ProcessResponsePayload();
    internal virtual bool get_IsBatchRequest();
    protected virtual ODataRequestMessageWrapper CreateRequestMessage(string method, Uri requestUri, HeaderCollection headers, HttpStack httpStack, Descriptor descriptor, string contentId);
    protected virtual void FinishCurrentChange(PerRequest peReq);
    protected virtual ObjectMaterializer GetMaterializer(EntityDescriptor entityDescriptor, ResponseInfo responseInfo);
    protected virtual void HandleOperationResponse(IODataResponseMessage responseMessage);
    protected virtual DataServiceResponse HandleResponse();
    private DataServiceResponse HandleDeepInsertResponse();
    private void HandleDeepInsertResponseInternal(MaterializerEntry entry, bool isTopLevelDescriptor, Descriptor descriptor, OperationResponse parentOperationResponse);
    private OperationResponse CreateOperationResponse(MaterializerEntry materializerState, bool isTopLevelResponse, Descriptor descriptor, OperationResponse parentOperationResponse);
    private static bool HasFailedOperation(MaterializerEntry entry);
    private void HandleLocationHeaders(Descriptor descriptor, HttpStatusCode statusCode, HeaderCollection headers);
    [CompilerGeneratedAttribute]
private Stream <HandleDeepInsertResponse>b__27_0();
    [CompilerGeneratedAttribute]
private Stream <HandleDeepInsertResponse>b__27_1();
}
public enum Microsoft.OData.Client.DeleteLinkUriOption : Enum {
    public int value__;
    public static DeleteLinkUriOption IdQueryParam;
    public static DeleteLinkUriOption RelatedKeyAsSegment;
}
public abstract class Microsoft.OData.Client.Descriptor : object {
    private UInt32 changeOrder;
    private bool saveContentGenerated;
    private EntityStates saveResultProcessed;
    private Exception saveError;
    private EntityStates state;
    private List`1<string> dependsOnIds;
    private List`1<string> dependsOnChangeSetIds;
    private string changeSetId;
    public EntityStates State { get; internal set; }
    internal DescriptorKind DescriptorKind { get; }
    internal UInt32 ChangeOrder { get; internal set; }
    internal bool ContentGeneratedForSave { get; internal set; }
    internal EntityStates SaveResultWasProcessed { get; internal set; }
    internal Exception SaveError { get; internal set; }
    internal bool IsModified { get; }
    internal List`1<string> DependsOnIds { get; internal set; }
    internal List`1<string> DependsOnChangeSetIds { get; internal set; }
    internal string ChangeSetId { get; internal set; }
    internal Descriptor(EntityStates state);
    public EntityStates get_State();
    internal void set_State(EntityStates value);
    internal abstract virtual DescriptorKind get_DescriptorKind();
    internal UInt32 get_ChangeOrder();
    internal void set_ChangeOrder(UInt32 value);
    internal bool get_ContentGeneratedForSave();
    internal void set_ContentGeneratedForSave(bool value);
    internal EntityStates get_SaveResultWasProcessed();
    internal void set_SaveResultWasProcessed(EntityStates value);
    internal Exception get_SaveError();
    internal void set_SaveError(Exception value);
    internal virtual bool get_IsModified();
    internal List`1<string> get_DependsOnIds();
    internal void set_DependsOnIds(List`1<string> value);
    internal List`1<string> get_DependsOnChangeSetIds();
    internal void set_DependsOnChangeSetIds(List`1<string> value);
    internal string get_ChangeSetId();
    internal void set_ChangeSetId(string value);
    internal abstract virtual void ClearChanges();
}
internal enum Microsoft.OData.Client.DescriptorKind : Enum {
    public int value__;
    public static DescriptorKind Entity;
    public static DescriptorKind Link;
    public static DescriptorKind NamedStream;
    public static DescriptorKind OperationDescriptor;
}
[ExtensionAttribute]
internal static class Microsoft.OData.Client.DictionaryExtensions : object {
    [ExtensionAttribute]
[SuppressMessageAttribute("Globalization", "CA1303:Do not pass literals as localized parameters")]
public static void Add(ConcurrentDictionary`2<TKey, TValue> self, TKey key, TValue value);
    [ExtensionAttribute]
public static bool Remove(ConcurrentDictionary`2<TKey, TValue> self, TKey key);
    [ExtensionAttribute]
internal static TValue FindOrAdd(IDictionary`2<TKey, TValue> dictionary, TKey key, Func`1<TValue> createValue);
    [ExtensionAttribute]
internal static void SetRange(IDictionary`2<TKey, TValue> dictionary, IEnumerable`1<KeyValuePair`2<TKey, TValue>> valuesToCopy);
}
internal class Microsoft.OData.Client.DoubleTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.DynamicProxyMethodGenerator : object {
    [SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
internal Expression GetCallWrapper(MethodBase method, Expression[] arguments);
    private static Expression WrapOriginalMethodWithExpression(MethodBase method, Expression[] arguments);
}
internal static class Microsoft.OData.Client.EdmValueParser : object {
    internal static Regex DayTimeDurationValidator;
    private static EdmValueParser();
    internal static TimeSpan ParseDuration(string value);
    internal static bool TryParseBinary(string value, Byte[]& result);
    internal static bool TryParseBool(string value, Nullable`1& result);
    internal static bool TryParseDuration(string value, Nullable`1& result);
    internal static bool TryParseDateTimeOffset(string value, Nullable`1& result);
    internal static bool TryParseInt(string value, Nullable`1& result);
    internal static bool TryParseLong(string value, Nullable`1& result);
    internal static bool TryParseDecimal(string value, Nullable`1& result);
    internal static bool TryParseFloat(string value, Nullable`1& result);
    internal static bool TryParseGuid(string value, Nullable`1& result);
    internal static bool TryParseDate(string value, Nullable`1& result);
    internal static bool TryParseTimeOfDay(string value, Nullable`1& result);
    private static bool TryParseCharAsBinary(char c, Byte& b);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Client.EdmValueUtils : object {
    internal static IEdmDelayedValue ConvertPrimitiveValue(object primitiveValue, IEdmPrimitiveTypeReference type);
    [ExtensionAttribute]
internal static object ToClrValue(IEdmPrimitiveValue edmValue);
    private static object ConvertFloatingValue(IEdmFloatingValue floatingValue, EdmPrimitiveTypeKind primitiveKind);
    private static object ConvertIntegerValue(IEdmIntegerValue integerValue, EdmPrimitiveTypeKind primitiveKind);
    private static IEdmDelayedValue ConvertPrimitiveValueWithoutTypeCode(object primitiveValue, IEdmPrimitiveTypeReference type);
    private static bool TryConvertClientSpecificPrimitiveValue(object primitiveValue, IEdmPrimitiveTypeReference type, IEdmDelayedValue& convertedValue);
    private static IEdmPrimitiveTypeReference EnsurePrimitiveType(IEdmPrimitiveTypeReference type, EdmPrimitiveTypeKind primitiveKindFromValue);
}
internal static class Microsoft.OData.Client.EdmValueWriter : object {
    private static Char[] Hex;
    private static EdmValueWriter();
    internal static string StringAsXml(string s);
    internal static string BinaryAsXml(Byte[] binary);
    internal static string BooleanAsXml(bool b);
    internal static string BooleanAsXml(Nullable`1<bool> b);
    internal static string IntAsXml(int i);
    internal static string IntAsXml(Nullable`1<int> i);
    internal static string LongAsXml(long l);
    internal static string FloatAsXml(double f);
    internal static string DecimalAsXml(decimal d);
    internal static string DurationAsXml(TimeSpan d);
    internal static string DateTimeOffsetAsXml(DateTimeOffset d);
    internal static string DateAsXml(Date d);
    internal static string TimeOfDayAsXml(TimeOfDay time);
    internal static string GuidAsXml(Guid g);
    internal static string UriAsXml(Uri uri);
}
[SuppressMessageAttribute("Microsoft.Naming", "CA1704")]
public class Microsoft.OData.Client.EntityChangedParams : object {
    private DataServiceContext context;
    private object entity;
    private string propertyName;
    private object propertyValue;
    private string sourceEntitySet;
    private string targetEntitySet;
    public DataServiceContext Context { get; }
    public object Entity { get; }
    public string PropertyName { get; }
    public object PropertyValue { get; }
    public string SourceEntitySet { get; }
    public string TargetEntitySet { get; }
    internal EntityChangedParams(DataServiceContext context, object entity, string propertyName, object propertyValue, string sourceEntitySet, string targetEntitySet);
    public DataServiceContext get_Context();
    public object get_Entity();
    public string get_PropertyName();
    public object get_PropertyValue();
    public string get_SourceEntitySet();
    public string get_TargetEntitySet();
}
[SuppressMessageAttribute("Microsoft.Naming", "CA1704")]
public class Microsoft.OData.Client.EntityCollectionChangedParams : object {
    private DataServiceContext context;
    private object sourceEntity;
    private string propertyName;
    private string sourceEntitySet;
    private ICollection collection;
    private object targetEntity;
    private string targetEntitySet;
    private NotifyCollectionChangedAction action;
    public DataServiceContext Context { get; }
    public object SourceEntity { get; }
    public string PropertyName { get; }
    public string SourceEntitySet { get; }
    public object TargetEntity { get; }
    public string TargetEntitySet { get; }
    public ICollection Collection { get; }
    public NotifyCollectionChangedAction Action { get; }
    internal EntityCollectionChangedParams(DataServiceContext context, object sourceEntity, string propertyName, string sourceEntitySet, ICollection collection, object targetEntity, string targetEntitySet, NotifyCollectionChangedAction action);
    public DataServiceContext get_Context();
    public object get_SourceEntity();
    public string get_PropertyName();
    public string get_SourceEntitySet();
    public object get_TargetEntity();
    public string get_TargetEntitySet();
    public ICollection get_Collection();
    public NotifyCollectionChangedAction get_Action();
}
[DebuggerDisplayAttribute("State = {state}, Uri = {editLink}, Element = {entity.GetType().ToString()}")]
public class Microsoft.OData.Client.EntityDescriptor : Descriptor {
    private Uri identity;
    private object entity;
    private StreamDescriptor defaultStreamDescriptor;
    private Uri addToUri;
    private Uri selfLink;
    private Uri editLink;
    private Dictionary`2<string, LinkInfo> relatedEntityLinks;
    private EntityDescriptor transientEntityDescriptor;
    private Dictionary`2<string, StreamDescriptor> streamDescriptors;
    private List`1<OperationDescriptor> operationDescriptors;
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private EntityDescriptor <ParentForInsert>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentPropertyForInsert>k__BackingField;
    [CompilerGeneratedAttribute]
private EntityDescriptor <ParentForUpdate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentPropertyForUpdate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientEdmModel <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmStructuredValue <EdmValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntitySetName>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <PropertiesToSerialize>k__BackingField;
    public Uri Identity { get; internal set; }
    public Uri SelfLink { get; internal set; }
    public Uri EditLink { get; internal set; }
    public Uri ReadStreamUri { get; internal set; }
    public Uri EditStreamUri { get; internal set; }
    public object Entity { get; internal set; }
    public string ETag { get; public set; }
    public string StreamETag { get; internal set; }
    public EntityDescriptor ParentForInsert { get; internal set; }
    public string ParentPropertyForInsert { get; internal set; }
    public EntityDescriptor ParentForUpdate { get; internal set; }
    public string ParentPropertyForUpdate { get; internal set; }
    public string ServerTypeName { get; internal set; }
    [SuppressMessageAttribute("Microsoft.Naming", "CA1704")]
public ReadOnlyCollection`1<LinkInfo> LinkInfos { get; }
    public ReadOnlyCollection`1<StreamDescriptor> StreamDescriptors { get; }
    public ReadOnlyCollection`1<OperationDescriptor> OperationDescriptors { get; }
    internal ClientEdmModel Model { get; private set; }
    internal object ParentEntity { get; }
    internal EntityDescriptor ParentEntityDescriptor { get; }
    internal string ParentProperty { get; }
    internal DescriptorKind DescriptorKind { get; }
    internal bool IsDeepInsert { get; }
    internal DataServiceSaveStream SaveStream { get; internal set; }
    internal EntityStates StreamState { get; internal set; }
    internal bool IsMediaLinkEntry { get; }
    internal bool IsModified { get; }
    internal EntityDescriptor TransientEntityDescriptor { get; internal set; }
    internal StreamDescriptor DefaultStreamDescriptor { get; }
    internal IEdmStructuredValue EdmValue { get; private set; }
    internal string EntitySetName { get; internal set; }
    internal HashSet`1<string> PropertiesToSerialize { get; internal set; }
    internal EntityDescriptor(ClientEdmModel model);
    public Uri get_Identity();
    internal void set_Identity(Uri value);
    public Uri get_SelfLink();
    internal void set_SelfLink(Uri value);
    public Uri get_EditLink();
    internal void set_EditLink(Uri value);
    public Uri get_ReadStreamUri();
    internal void set_ReadStreamUri(Uri value);
    public Uri get_EditStreamUri();
    internal void set_EditStreamUri(Uri value);
    public object get_Entity();
    internal void set_Entity(object value);
    [CompilerGeneratedAttribute]
public string get_ETag();
    [CompilerGeneratedAttribute]
public void set_ETag(string value);
    public string get_StreamETag();
    internal void set_StreamETag(string value);
    [CompilerGeneratedAttribute]
public EntityDescriptor get_ParentForInsert();
    [CompilerGeneratedAttribute]
internal void set_ParentForInsert(EntityDescriptor value);
    [CompilerGeneratedAttribute]
public string get_ParentPropertyForInsert();
    [CompilerGeneratedAttribute]
internal void set_ParentPropertyForInsert(string value);
    [CompilerGeneratedAttribute]
public EntityDescriptor get_ParentForUpdate();
    [CompilerGeneratedAttribute]
internal void set_ParentForUpdate(EntityDescriptor value);
    [CompilerGeneratedAttribute]
public string get_ParentPropertyForUpdate();
    [CompilerGeneratedAttribute]
internal void set_ParentPropertyForUpdate(string value);
    [CompilerGeneratedAttribute]
public string get_ServerTypeName();
    [CompilerGeneratedAttribute]
internal void set_ServerTypeName(string value);
    public ReadOnlyCollection`1<LinkInfo> get_LinkInfos();
    public ReadOnlyCollection`1<StreamDescriptor> get_StreamDescriptors();
    public ReadOnlyCollection`1<OperationDescriptor> get_OperationDescriptors();
    [CompilerGeneratedAttribute]
internal ClientEdmModel get_Model();
    [CompilerGeneratedAttribute]
private void set_Model(ClientEdmModel value);
    internal object get_ParentEntity();
    internal EntityDescriptor get_ParentEntityDescriptor();
    internal string get_ParentProperty();
    internal virtual DescriptorKind get_DescriptorKind();
    internal bool get_IsDeepInsert();
    internal DataServiceSaveStream get_SaveStream();
    internal void set_SaveStream(DataServiceSaveStream value);
    internal EntityStates get_StreamState();
    internal void set_StreamState(EntityStates value);
    internal bool get_IsMediaLinkEntry();
    internal virtual bool get_IsModified();
    internal EntityDescriptor get_TransientEntityDescriptor();
    internal void set_TransientEntityDescriptor(EntityDescriptor value);
    internal StreamDescriptor get_DefaultStreamDescriptor();
    [CompilerGeneratedAttribute]
internal IEdmStructuredValue get_EdmValue();
    [CompilerGeneratedAttribute]
private void set_EdmValue(IEdmStructuredValue value);
    [CompilerGeneratedAttribute]
internal string get_EntitySetName();
    [CompilerGeneratedAttribute]
internal void set_EntitySetName(string value);
    [CompilerGeneratedAttribute]
internal HashSet`1<string> get_PropertiesToSerialize();
    [CompilerGeneratedAttribute]
internal void set_PropertiesToSerialize(HashSet`1<string> value);
    internal Uri GetLatestIdentity();
    internal Uri GetLatestEditLink();
    internal Uri GetLatestEditStreamUri();
    internal string GetLatestETag();
    internal string GetLatestStreamETag();
    internal string GetLatestServerTypeName();
    internal Uri GetResourceUri(UriResolver baseUriResolver, bool queryLink);
    internal bool IsRelatedEntity(LinkDescriptor related);
    internal LinkDescriptor GetRelatedEnd();
    internal virtual void ClearChanges();
    internal void CloseSaveStream();
    internal void AddNestedResourceInfo(string propertyName, Uri navigationUri);
    internal void AddAssociationLink(string propertyName, Uri associationUri);
    internal void MergeLinkInfo(LinkInfo linkInfo);
    internal Uri GetNestedResourceInfo(UriResolver baseUriResolver, ClientPropertyAnnotation property);
    internal bool TryGetLinkInfo(string propertyName, LinkInfo& linkInfo);
    internal StreamDescriptor AddStreamInfoIfNotPresent(string name);
    internal void AddOperationDescriptor(OperationDescriptor operationDescriptor);
    internal void ClearOperationDescriptors();
    internal void AppendOperationalDescriptors(IEnumerable`1<OperationDescriptor> descriptors);
    internal bool TryGetNamedStreamInfo(string name, StreamDescriptor& namedStreamInfo);
    internal void MergeStreamDescriptor(StreamDescriptor materializedStreamDescriptor);
    internal void SetParentForInsert(EntityDescriptor parentDescriptor, string propertyForInsert);
    internal void SetParentForUpdate(EntityDescriptor parentDescriptor, string propertyForUpdate);
    internal void SetEntitySetUriForInsert(Uri entitySetInsertUri);
    private LinkInfo GetLinkInfo(string propertyName);
    private Uri GetLink(bool queryLink);
    private StreamDescriptor CreateDefaultStreamDescriptor();
}
internal class Microsoft.OData.Client.EntityEqualityComparer`1 : EqualityComparer`1<TObject> {
    public static EntityEqualityComparer`1<TObject> Instance;
    private static EntityEqualityComparer`1();
    public virtual bool Equals(TObject x, TObject y);
    public virtual int GetHashCode(TObject obj);
}
public enum Microsoft.OData.Client.EntityParameterSendOption : Enum {
    public int value__;
    public static EntityParameterSendOption SendFullProperties;
    public static EntityParameterSendOption SendOnlySetProperties;
}
[AttributeUsageAttribute("4")]
public class Microsoft.OData.Client.EntitySetAttribute : Attribute {
    private string entitySet;
    public string EntitySet { get; }
    public EntitySetAttribute(string entitySet);
    public string get_EntitySet();
}
[FlagsAttribute]
public enum Microsoft.OData.Client.EntityStates : Enum {
    public int value__;
    public static EntityStates Detached;
    public static EntityStates Unchanged;
    public static EntityStates Added;
    public static EntityStates Deleted;
    public static EntityStates Modified;
}
public class Microsoft.OData.Client.EntityTracker : EntityTrackerBase {
    private ClientEdmModel model;
    private ConcurrentDictionary`2<object, EntityDescriptor> entityDescriptors;
    private ConcurrentDictionary`2<Uri, EntityDescriptor> identityToDescriptor;
    private ConcurrentDictionary`2<LinkDescriptor, LinkDescriptor> bindings;
    private UInt32 nextChange;
    public IEnumerable`1<LinkDescriptor> Links { get; }
    public IEnumerable`1<EntityDescriptor> Entities { get; }
    internal EntityTracker(ClientEdmModel maxProtocolVersion);
    public IEnumerable`1<LinkDescriptor> get_Links();
    public IEnumerable`1<EntityDescriptor> get_Entities();
    public EntityDescriptor TryGetEntityDescriptor(object entity);
    internal virtual EntityDescriptor GetEntityDescriptor(object resource);
    internal EntityDescriptor TryGetEntityDescriptor(Uri identity);
    internal void AddEntityDescriptor(EntityDescriptor descriptor);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1804:RemoveUnusedLocals")]
internal bool DetachResource(EntityDescriptor resource);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1804:RemoveUnusedLocals")]
internal void DetachResourceIdentity(EntityDescriptor resource);
    internal LinkDescriptor TryGetLinkDescriptor(object source, string sourceProperty, object target);
    internal virtual void AttachLink(object source, string sourceProperty, object target, MergeOption linkMerge);
    internal LinkDescriptor DetachReferenceLink(object source, string sourceProperty, object target, MergeOption linkMerge);
    internal void AddLink(LinkDescriptor linkDescriptor);
    internal bool TryRemoveLinkDescriptor(LinkDescriptor linkDescriptor);
    internal virtual IEnumerable`1<LinkDescriptor> GetLinks(object source, string sourceProperty);
    internal virtual void DetachExistingLink(LinkDescriptor existingLink, bool targetDelete);
    internal virtual void AttachIdentity(EntityDescriptor entityDescriptorFromMaterializer, MergeOption metadataMergeOption);
    internal void AttachLocation(object entity, Uri identity, Uri editLink);
    internal virtual EntityDescriptor InternalAttachEntityDescriptor(EntityDescriptor entityDescriptorFromMaterializer, bool failIfDuplicated);
    internal virtual object TryGetEntity(Uri resourceUri, EntityStates& state);
    internal void IncrementChange(Descriptor descriptor);
    private void EnsureIdentityToResource();
    private void EnsureLinkBindings();
    private void ValidateDuplicateIdentity(Uri identity, EntityDescriptor descriptor);
}
public abstract class Microsoft.OData.Client.EntityTrackerBase : object {
    internal abstract virtual object TryGetEntity(Uri resourceUri, EntityStates& state);
    internal abstract virtual IEnumerable`1<LinkDescriptor> GetLinks(object source, string sourceProperty);
    internal abstract virtual EntityDescriptor InternalAttachEntityDescriptor(EntityDescriptor entityDescriptorFromMaterializer, bool failIfDuplicated);
    internal abstract virtual EntityDescriptor GetEntityDescriptor(object resource);
    internal abstract virtual void DetachExistingLink(LinkDescriptor existingLink, bool targetDelete);
    internal abstract virtual void AttachLink(object source, string sourceProperty, object target, MergeOption linkMerge);
    internal abstract virtual void AttachIdentity(EntityDescriptor entityDescriptorFromMaterializer, MergeOption metadataMergeOption);
}
[AttributeUsageAttribute("4")]
public class Microsoft.OData.Client.EntityTypeAttribute : Attribute {
}
internal static class Microsoft.OData.Client.Error : object {
    internal static ArgumentException Argument(string message, string parameterName);
    internal static InvalidOperationException InvalidOperation(string message);
    internal static InvalidOperationException InvalidOperation(string message, Exception innerException);
    internal static NotSupportedException NotSupported(string message);
    internal static void ThrowObjectDisposed(Type type);
    [SuppressMessageAttribute("Microsoft.Usage", "CA1801")]
internal static InvalidOperationException HttpHeaderFailure(int errorCode, string message);
    internal static NotSupportedException MethodNotSupported(MethodCallExpression m);
    internal static void ThrowBatchUnexpectedContent(InternalError value);
    internal static void ThrowBatchExpectedResponse(InternalError value);
    internal static InvalidOperationException InternalError(InternalError value);
    internal static void ThrowInternalError(InternalError value);
    private static T Trace(T exception);
    internal static Exception ArgumentNull(string paramName);
    internal static Exception ArgumentOutOfRange(string paramName);
    internal static Exception NotImplemented();
    internal static Exception NotSupported();
}
internal static class Microsoft.OData.Client.Evaluator : object {
    internal static Expression PartialEval(Expression expression, Func`2<Expression, bool> canBeEvaluated);
    internal static Expression PartialEval(Expression expression);
    private static bool CanBeEvaluatedLocally(Expression expression);
}
internal class Microsoft.OData.Client.ExpandOnlyPathToStringVisitor : object {
    private string subExpandStartingText;
    public sealed virtual string Visit(SystemToken tokenIn);
    public sealed virtual string Visit(NonSystemToken tokenIn);
}
internal class Microsoft.OData.Client.ExpressionNormalizer : DataServiceALinqExpressionVisitor {
    private static bool LiftToNull;
    private Dictionary`2<Expression, Pattern> _patterns;
    private Dictionary`2<Expression, Expression> normalizerRewrites;
    private static MethodInfo s_relationalOperatorPlaceholderMethod;
    internal Dictionary`2<Expression, Expression> NormalizerRewrites { get; }
    private ExpressionNormalizer(Dictionary`2<Expression, Expression> normalizerRewrites);
    private static ExpressionNormalizer();
    internal Dictionary`2<Expression, Expression> get_NormalizerRewrites();
    internal static Expression Normalize(Expression expression, Dictionary`2<Expression, Expression> rewrites);
    internal virtual Expression VisitBinary(BinaryExpression b);
    internal virtual Expression VisitUnary(UnaryExpression u);
    private static Expression UnwrapObjectConvert(Expression input);
    private static bool IsConstantZero(Expression expression);
    internal virtual Expression VisitMethodCall(MethodCallExpression call);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
internal Expression VisitMethodCallNoRewrite(MethodCallExpression call);
    private static MethodCallExpression NormalizeEnumerableSource(MethodCallExpression callExpression);
    private static MethodCallExpression NormalizePredicateArgument(MethodCallExpression callExpression);
    private static bool HasPredicateArgument(MethodCallExpression callExpression, Int32& argumentOrdinal);
    private static bool TryMatchCoalescePattern(Expression expression, Expression& normalized);
    private static MethodCallExpression NormalizeSelectWithTypeCast(MethodCallExpression callExpression);
    private static bool TryMatchSelectWithConvert(MethodCallExpression callExpression, Type& convertType);
    private static bool TryMatchConvertSingleArgument(Expression expression, Type& convertType);
    private static bool RelationalOperatorPlaceholder(TLeft left, TRight right);
    private static BinaryExpression CreateRelationalOperator(ExpressionType op, Expression left, Expression right);
    private static bool TryCreateRelationalOperator(ExpressionType op, Expression left, Expression right, BinaryExpression& result);
    private Expression CreateCompareExpression(Expression left, Expression right);
    private void RecordRewrite(Expression source, Expression rewritten);
}
internal class Microsoft.OData.Client.ExpressionWriter : DataServiceALinqExpressionVisitor {
    private StringBuilder builder;
    private DataServiceContext context;
    private Stack`1<Expression> expressionStack;
    private bool inPath;
    private bool cantTranslateExpression;
    private Expression parent;
    private Version uriVersion;
    private int scopeCount;
    private bool writingFunctionsInQuery;
    private bool InSubScope { get; }
    private ExpressionWriter(DataServiceContext context, bool inPath);
    private bool get_InSubScope();
    internal static string ExpressionToString(DataServiceContext context, Expression e, bool inPath, Version& uriVersion);
    internal virtual Expression Visit(Expression exp);
    internal virtual Expression VisitConditional(ConditionalExpression c);
    internal virtual Expression VisitLambda(LambdaExpression lambda);
    internal virtual NewExpression VisitNew(NewExpression nex);
    internal virtual Expression VisitMemberInit(MemberInitExpression init);
    internal virtual Expression VisitListInit(ListInitExpression init);
    internal virtual Expression VisitNewArray(NewArrayExpression na);
    internal virtual Expression VisitInvocation(InvocationExpression iv);
    internal virtual Expression VisitInputReferenceExpression(InputReferenceExpression ire);
    internal virtual Expression VisitMethodCall(MethodCallExpression m);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitConstant(ConstantExpression c);
    internal virtual Expression VisitUnary(UnaryExpression u);
    internal virtual Expression VisitBinary(BinaryExpression b);
    internal virtual Expression VisitTypeIs(TypeBinaryExpression b);
    internal virtual Expression VisitParameter(ParameterExpression p);
    private static bool AreExpressionTypesCollapsible(ExpressionType type, ExpressionType parentType, ChildDirection childDirection);
    private static int BinaryPrecedence(ExpressionType type);
    private void VisitOperand(Expression e);
    private void VisitOperand(Expression e, Nullable`1<ExpressionType> parentType, Nullable`1<ChildDirection> childDirection);
    private string Translate(Expression e);
    private bool IsImplicitInputReference(Expression exp);
    private static bool HasEnumInBinaryExpression(BinaryExpression b);
    private static bool IsEnumTypeExpression(Expression e);
    private static Type GetEnumType(Expression e);
    private ConstantExpression ConvertConstantExpressionForEnum(ConstantExpression constant);
}
internal class Microsoft.OData.Client.FilterQueryOptionExpression : QueryOptionExpression {
    private List`1<Expression> individualExpressions;
    public ExpressionType NodeType { get; }
    internal ReadOnlyCollection`1<Expression> PredicateConjuncts { get; }
    internal FilterQueryOptionExpression(Type type);
    public virtual ExpressionType get_NodeType();
    internal ReadOnlyCollection`1<Expression> get_PredicateConjuncts();
    public void AddPredicateConjuncts(IEnumerable`1<Expression> predicates);
    public Expression GetPredicate();
}
public class Microsoft.OData.Client.FunctionDescriptor : OperationDescriptor {
}
internal class Microsoft.OData.Client.GeographyTypeConverter : PrimitiveTypeConverter {
    internal virtual PrimitiveParserToken TokenizeFromXml(XmlReader reader);
}
internal class Microsoft.OData.Client.GeometryTypeConverter : PrimitiveTypeConverter {
    internal virtual PrimitiveParserToken TokenizeFromXml(XmlReader reader);
}
internal class Microsoft.OData.Client.GetReadStreamResult : BaseAsyncResult {
    private ODataRequestMessageWrapper requestMessage;
    private StreamDescriptor streamDescriptor;
    private RequestInfo requestInfo;
    private IODataResponseMessage responseMessage;
    internal GetReadStreamResult(DataServiceContext context, string method, ODataRequestMessageWrapper request, AsyncCallback callback, object state, StreamDescriptor streamDescriptor);
    internal void Begin();
    internal DataServiceStreamResponse End();
    internal DataServiceStreamResponse Execute();
    protected virtual void CompletedRequest();
    protected virtual void HandleCompleted(PerRequest pereq);
    protected virtual void AsyncEndGetResponse(IAsyncResult asyncResult);
}
internal static class Microsoft.OData.Client.GroupByAnalyzer : object {
    internal static bool Analyze(MethodCallExpression methodCallExpr, QueryableResourceExpression source, ResourceExpression resourceExpr);
    private static bool AnalyzeGroupByKeySelector(QueryableResourceExpression input, LambdaExpression keySelector);
    private static void EnsureApplyInitialized(QueryableResourceExpression input);
    private static bool TryBindToInput(ResourceExpression input, LambdaExpression le, Expression& bound);
}
internal class Microsoft.OData.Client.GroupByProjectionPlanCompiler : ALinqExpressionVisitor {
    private static DynamicProxyMethodGenerator dynamicProxyMethodGenerator;
    private Dictionary`2<Expression, ExpressionAnnotation> annotations;
    private ParameterExpression materializerExpression;
    private Dictionary`2<Expression, Expression> normalizerRewrites;
    private int identifierId;
    private GroupByProjectionPathBuilder pathBuilder;
    private bool topLevelProjectionFound;
    private Dictionary`2<Expression, MappingInfo> resultSelectorMap;
    private Dictionary`2<string, Expression> keySelectorMap;
    private GroupByProjectionPlanCompiler(Dictionary`2<Expression, Expression> normalizerRewrites, Dictionary`2<string, Expression> keySelectorMap);
    private static GroupByProjectionPlanCompiler();
    internal static ProjectionPlan CompilePlan(LambdaExpression projection, Dictionary`2<Expression, Expression> normalizerRewrites, Dictionary`2<string, Expression> keySelectorMap);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitParameter(ParameterExpression p);
    internal virtual Expression VisitMethodCall(MethodCallExpression m);
    internal virtual Expression Visit(Expression exp);
    internal virtual Expression VisitLambda(LambdaExpression lambda);
    private static Expression CallMaterializer(string methodName, Expression[] arguments);
    private static Expression CallMaterializerWithType(string methodName, Type[] typeArguments, Expression[] arguments);
    private Expression CallValueForPath(Expression entry, Expression entryType, ProjectionPath path);
    private Expression CallValueForPathWithType(Expression entry, Expression entryType, ProjectionPath path, Type type);
    private Expression GetExpressionBeforeNormalization(Expression expression);
    private Expression RebindParameter(Expression expression, ExpressionAnnotation annotation);
    private Expression RebindMemberAccess(MemberExpression m, ExpressionAnnotation baseAnnotation);
    private void BindProjectedExpression(Expression expr);
    private Expression RebindMethodCallForAggregationMethod(MethodCallExpression methodCallExpr);
}
internal class Microsoft.OData.Client.GuidTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
[AttributeUsageAttribute("4")]
public class Microsoft.OData.Client.HasStreamAttribute : Attribute {
}
internal class Microsoft.OData.Client.HeaderCollection : object {
    private IDictionary`2<string, string> headers;
    private static Version assemblyVersion;
    internal IDictionary`2<string, string> UnderlyingDictionary { get; }
    internal IEnumerable`1<string> HeaderNames { get; }
    internal int Count { get; }
    internal HeaderCollection(IEnumerable`1<KeyValuePair`2<string, string>> headers);
    internal HeaderCollection(IODataResponseMessage responseMessage);
    internal HeaderCollection(WebHeaderCollection headers);
    private static HeaderCollection();
    internal IDictionary`2<string, string> get_UnderlyingDictionary();
    internal IEnumerable`1<string> get_HeaderNames();
    internal int get_Count();
    internal void SetDefaultHeaders();
    internal bool TryGetHeader(string headerName, String& headerValue);
    internal string GetHeader(string headerName);
    internal void SetHeader(string headerName, string headerValue);
    internal bool HasHeader(string headerName);
    internal void SetHeaders(IEnumerable`1<KeyValuePair`2<string, string>> headersToSet);
    internal IEnumerable`1<KeyValuePair`2<string, string>> AsEnumerable();
    internal void SetRequestVersion(Version requestVersion, Version maxProtocolVersion);
    internal void SetHeaderIfUnset(string headerToSet, string headerValue);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
internal void SetUserAgent();
    internal HeaderCollection Copy();
    private Version GetODataVersion();
}
public class Microsoft.OData.Client.HttpClientRequestMessage : DataServiceClientRequestMessage {
    private static HashSet`1<string> _contentHeaderNames;
    private static HttpClient _defaultClient;
    private string _effectiveHttpMethod;
    private HttpRequestMessage _requestMessage;
    private HttpClient _client;
    private MemoryStream _messageStream;
    private CancellationTokenSource _abortRequestCancellationTokenSource;
    private TimeSpan _timeout;
    private bool _isTimeoutProvidedByCaller;
    private Dictionary`2<string, string> _contentHeaderValueCache;
    private HttpResponseMessage _httpResponseMessage;
    private bool inSendingRequest2Event;
    private bool _disposed;
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    public Uri Url { get; public set; }
    public string Method { get; public set; }
    public int Timeout { get; public set; }
    public bool SendChunked { get; public set; }
    internal HttpRequestMessage HttpRequestMessage { get; }
    public HttpClientRequestMessage(DataServiceClientRequestMessageArgs args);
    private static HttpClientRequestMessage();
    public virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public virtual Uri get_Url();
    public virtual void set_Url(Uri value);
    public virtual string get_Method();
    public virtual void set_Method(string value);
    public virtual int get_Timeout();
    public virtual void set_Timeout(int value);
    public virtual bool get_SendChunked();
    public virtual void set_SendChunked(bool value);
    public virtual string GetHeader(string headerName);
    public virtual void SetHeader(string headerName, string headerValue);
    private void SetContentHeader(string headerName, string headerValue);
    private void SetRequestHeader(string headerName, string headerValue);
    public virtual Stream GetStream();
    public virtual void Abort();
    public virtual IAsyncResult BeginGetRequestStream(AsyncCallback callback, object state);
    public virtual Stream EndGetRequestStream(IAsyncResult asyncResult);
    public virtual IAsyncResult BeginGetResponse(AsyncCallback callback, object state);
    public virtual IODataResponseMessage EndGetResponse(IAsyncResult asyncResult);
    public virtual IODataResponseMessage GetResponse();
    private Task`1<HttpResponseMessage> CreateSendTask();
    private static IDictionary`2<string, string> HttpHeadersToStringDictionary(HttpHeaders headers);
    internal HttpRequestMessage get_HttpRequestMessage();
    private static HttpWebResponseMessage ConvertHttpWebResponse(HttpResponseMessage response);
    private static T UnwrapAggregateException(Func`1<T> action);
    private static DataServiceTransportException ConvertToDataServiceTransportException(WebException webException);
    internal void BeforeSendingRequest2Event();
    internal void AfterSendingRequest2Event();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    private sealed virtual override void Microsoft.OData.Client.ISendingRequest2.BeforeSendingRequest2Event();
    private sealed virtual override void Microsoft.OData.Client.ISendingRequest2.AfterSendingRequest2Event();
    [CompilerGeneratedAttribute]
private HttpWebResponseMessage <GetResponse>b__38_0();
}
[SuppressMessageAttribute("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
internal enum Microsoft.OData.Client.HttpStack : Enum {
    public int value__;
    public static HttpStack Auto;
}
public class Microsoft.OData.Client.HttpWebResponseMessage : object {
    private HeaderCollection headers;
    private Func`1<Stream> getResponseStream;
    private int statusCode;
    private HttpWebResponse httpWebResponse;
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    public int StatusCode { get; public set; }
    public HttpWebResponseMessage(IDictionary`2<string, string> headers, int statusCode, Func`1<Stream> getResponseStream);
    internal HttpWebResponseMessage(HeaderCollection headers, int statusCode, Func`1<Stream> getResponseStream);
    public virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public virtual int get_StatusCode();
    public virtual void set_StatusCode(int value);
    public virtual string GetHeader(string headerName);
    public virtual void SetHeader(string headerName, string headerValue);
    public virtual Stream GetStream();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
public interface Microsoft.OData.Client.IBaseEntityType {
    public DataServiceContext DataServiceContext { get; public set; }
    public EntityDescriptor EntityDescriptor { get; public set; }
    public abstract virtual DataServiceContext get_DataServiceContext();
    public abstract virtual void set_DataServiceContext(DataServiceContext value);
    public abstract virtual EntityDescriptor get_EntityDescriptor();
    public abstract virtual void set_EntityDescriptor(EntityDescriptor value);
}
internal interface Microsoft.OData.Client.IDataServiceRequestMessageFactory {
    public abstract virtual DataServiceClientRequestMessage CreateRequestMessage(DataServiceClientRequestMessageArgs args, DataServiceContext dataServiceContext);
}
[AttributeUsageAttribute("128")]
public class Microsoft.OData.Client.IgnoreClientPropertyAttribute : Attribute {
}
internal class Microsoft.OData.Client.InputBinder : DataServiceALinqExpressionVisitor {
    private HashSet`1<ResourceExpression> referencedInputs;
    private ResourceExpression input;
    private QueryableResourceExpression inputResource;
    private ParameterExpression inputParameter;
    private InputBinder(ResourceExpression resource, ParameterExpression setReferenceParam);
    internal static Expression Bind(Expression e, ResourceExpression currentInput, ParameterExpression inputParameter, List`1<ResourceExpression> referencedInputs);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitParameter(ParameterExpression p);
    private Expression CreateReference(ResourceExpression resource);
}
[DebuggerDisplayAttribute("InputReferenceExpression -> {Type}")]
internal class Microsoft.OData.Client.InputReferenceExpression : Expression {
    private ResourceExpression target;
    public Type Type { get; }
    public ExpressionType NodeType { get; }
    internal ResourceExpression Target { get; }
    internal InputReferenceExpression(ResourceExpression target);
    public virtual Type get_Type();
    public virtual ExpressionType get_NodeType();
    internal ResourceExpression get_Target();
    internal void OverrideTarget(QueryableResourceExpression newTarget);
}
internal class Microsoft.OData.Client.InstancePrimitiveParserToken`1 : PrimitiveParserToken {
    [CompilerGeneratedAttribute]
private T <Instance>k__BackingField;
    internal T Instance { get; private set; }
    internal InstancePrimitiveParserToken`1(T instance);
    [CompilerGeneratedAttribute]
internal T get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(T value);
    internal virtual object Materialize(Type clrType);
}
internal class Microsoft.OData.Client.Int16TypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.Int32TypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.Int64TypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal enum Microsoft.OData.Client.InternalError : Enum {
    public int value__;
    public static InternalError UnexpectedReadState;
    public static InternalError UnvalidatedEntityState;
    public static InternalError NullResponseStream;
    public static InternalError EntityNotDeleted;
    public static InternalError EntityNotAddedState;
    public static InternalError LinkNotAddedState;
    public static InternalError EntryNotModified;
    public static InternalError LinkBadState;
    public static InternalError UnexpectedBeginChangeSet;
    public static InternalError UnexpectedBatchState;
    public static InternalError ChangeResponseMissingContentID;
    public static InternalError ChangeResponseUnknownContentID;
    public static InternalError InvalidHandleOperationResponse;
    public static InternalError InvalidEndGetRequestStream;
    public static InternalError InvalidEndGetRequestCompleted;
    public static InternalError InvalidEndGetRequestStreamRequest;
    public static InternalError InvalidEndGetRequestStreamStream;
    public static InternalError InvalidEndGetRequestStreamContent;
    public static InternalError InvalidEndGetRequestStreamContentLength;
    public static InternalError InvalidEndWrite;
    public static InternalError InvalidEndWriteCompleted;
    public static InternalError InvalidEndWriteRequest;
    public static InternalError InvalidEndWriteStream;
    public static InternalError InvalidEndGetResponse;
    public static InternalError InvalidEndGetResponseCompleted;
    public static InternalError InvalidEndGetResponseRequest;
    public static InternalError InvalidEndGetResponseResponse;
    public static InternalError InvalidAsyncResponseStreamCopy;
    public static InternalError InvalidAsyncResponseStreamCopyBuffer;
    public static InternalError InvalidEndRead;
    public static InternalError InvalidEndReadCompleted;
    public static InternalError InvalidEndReadStream;
    public static InternalError InvalidEndReadCopy;
    public static InternalError InvalidEndReadBuffer;
    public static InternalError InvalidSaveNextChange;
    public static InternalError InvalidBeginNextChange;
    public static InternalError SaveNextChangeIncomplete;
    public static InternalError MaterializerReturningMoreThanOneEntity;
    public static InternalError InvalidGetResponse;
    public static InternalError InvalidHandleCompleted;
    public static InternalError InvalidMethodCallWhenNotReadingJson;
}
internal class Microsoft.OData.Client.InternalODataRequestMessage : DataServiceClientRequestMessage {
    private IODataRequestMessage requestMessage;
    private bool allowGetStream;
    private Stream cachedRequestStream;
    private HeaderCollection headers;
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    public Uri Url { get; public set; }
    public string Method { get; public set; }
    public int Timeout { get; public set; }
    public bool SendChunked { get; public set; }
    private HeaderCollection HeaderCollection { get; }
    internal InternalODataRequestMessage(IODataRequestMessage requestMessage, bool allowGetStream);
    public virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public virtual Uri get_Url();
    public virtual void set_Url(Uri value);
    public virtual string get_Method();
    public virtual void set_Method(string value);
    public virtual int get_Timeout();
    public virtual void set_Timeout(int value);
    public virtual bool get_SendChunked();
    public virtual void set_SendChunked(bool value);
    private HeaderCollection get_HeaderCollection();
    public virtual string GetHeader(string headerName);
    public virtual void SetHeader(string headerName, string headerValue);
    public virtual Stream GetStream();
    public virtual void Abort();
    public virtual IAsyncResult BeginGetRequestStream(AsyncCallback callback, object state);
    public virtual Stream EndGetRequestStream(IAsyncResult asyncResult);
    public virtual IAsyncResult BeginGetResponse(AsyncCallback callback, object state);
    public virtual IODataResponseMessage EndGetResponse(IAsyncResult asyncResult);
    public virtual IODataResponseMessage GetResponse();
}
public class Microsoft.OData.Client.InvokeResponse : OperationResponse {
    [SuppressMessageAttribute("ApiDesign", "RS0022:Constructor make noninheritable base class inheritable")]
public InvokeResponse(Dictionary`2<string, string> headers);
}
internal interface Microsoft.OData.Client.ISendingRequest2 {
    public abstract virtual void BeforeSendingRequest2Event();
    public abstract virtual void AfterSendingRequest2Event();
}
[SuppressMessageAttribute("Microsoft.Design", "CA1019:DefineAccessorsForAttributeArguments")]
[AttributeUsageAttribute("4")]
public class Microsoft.OData.Client.KeyAttribute : Attribute {
    private ReadOnlyCollection`1<string> keyNames;
    public ReadOnlyCollection`1<string> KeyNames { get; }
    public KeyAttribute(string keyName);
    public KeyAttribute(String[] keyNames);
    public ReadOnlyCollection`1<string> get_KeyNames();
}
internal abstract class Microsoft.OData.Client.KeySerializer : object {
    private static DefaultKeySerializer DefaultInstance;
    private static SegmentKeySerializer SegmentInstance;
    private static KeySerializer();
    internal static KeySerializer Create(bool enableKeyAsSegment);
    internal abstract virtual void AppendKeyExpression(StringBuilder builder, ICollection`1<TProperty> keyProperties, Func`2<TProperty, string> getPropertyName, Func`2<TProperty, object> getPropertyValue);
    private static string GetKeyValueAsString(Func`2<TProperty, object> getPropertyValue, TProperty property, LiteralFormatter literalFormatter);
    private static void AppendKeyWithParentheses(StringBuilder builder, ICollection`1<TProperty> keyProperties, Func`2<TProperty, string> getPropertyName, Func`2<TProperty, object> getPropertyValue);
}
[DebuggerDisplayAttribute("State = {state}")]
public class Microsoft.OData.Client.LinkDescriptor : Descriptor {
    internal static IEqualityComparer`1<LinkDescriptor> EquivalenceComparer;
    private object source;
    private string sourceProperty;
    private object target;
    [CompilerGeneratedAttribute]
private bool <IsSourcePropertyCollection>k__BackingField;
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811")]
public object Target { get; internal set; }
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811")]
public object Source { get; internal set; }
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811")]
public string SourceProperty { get; internal set; }
    internal DescriptorKind DescriptorKind { get; }
    internal bool IsSourcePropertyCollection { get; internal set; }
    internal LinkDescriptor(object source, string sourceProperty, object target, ClientEdmModel model);
    internal LinkDescriptor(object source, string sourceProperty, object target, EntityStates state);
    private static LinkDescriptor();
    public object get_Target();
    internal void set_Target(object value);
    public object get_Source();
    internal void set_Source(object value);
    public string get_SourceProperty();
    internal void set_SourceProperty(string value);
    internal virtual DescriptorKind get_DescriptorKind();
    [CompilerGeneratedAttribute]
internal bool get_IsSourcePropertyCollection();
    [CompilerGeneratedAttribute]
internal void set_IsSourcePropertyCollection(bool value);
    internal virtual void ClearChanges();
    internal bool IsEquivalent(object src, string srcPropName, object targ);
}
public class Microsoft.OData.Client.LinkInfo : object {
    private Uri navigationLink;
    private Uri associationLink;
    private string name;
    public string Name { get; }
    public Uri NavigationLink { get; internal set; }
    public Uri AssociationLink { get; internal set; }
    internal LinkInfo(string propertyName);
    public string get_Name();
    public Uri get_NavigationLink();
    internal void set_NavigationLink(Uri value);
    public Uri get_AssociationLink();
    internal void set_AssociationLink(Uri value);
}
internal abstract class Microsoft.OData.Client.LiteralFormatter : object {
    private static LiteralFormatter DefaultInstance;
    private static LiteralFormatter KeyAsSegmentInstance;
    internal static LiteralFormatter ForConstants { get; }
    private static LiteralFormatter();
    internal static LiteralFormatter get_ForConstants();
    internal static LiteralFormatter ForKeys(bool keysAsSegment);
    internal abstract virtual string Format(object value);
    protected virtual string EscapeResultForUri(string result);
    private static string ConvertByteArrayToKeyString(Byte[] byteArray);
    private static string FormatRawLiteral(object value);
    private string FormatAndEscapeLiteral(object value);
}
public class Microsoft.OData.Client.LoadCompletedEventArgs : AsyncCompletedEventArgs {
    private QueryOperationResponse queryOperationResponse;
    public QueryOperationResponse QueryOperationResponse { get; }
    internal LoadCompletedEventArgs(QueryOperationResponse queryOperationResponse, Exception error);
    internal LoadCompletedEventArgs(QueryOperationResponse queryOperationResponse, Exception error, bool cancelled);
    public QueryOperationResponse get_QueryOperationResponse();
}
internal class Microsoft.OData.Client.LoadPropertyResponseInfo : ResponseInfo {
    [CompilerGeneratedAttribute]
private EntityDescriptor <EntityDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientPropertyAnnotation <Property>k__BackingField;
    internal EntityDescriptor EntityDescriptor { get; private set; }
    internal ClientPropertyAnnotation Property { get; private set; }
    internal LoadPropertyResponseInfo(RequestInfo requestInfo, MergeOption mergeOption, EntityDescriptor entityDescriptor, ClientPropertyAnnotation property);
    [CompilerGeneratedAttribute]
internal EntityDescriptor get_EntityDescriptor();
    [CompilerGeneratedAttribute]
private void set_EntityDescriptor(EntityDescriptor value);
    [CompilerGeneratedAttribute]
internal ClientPropertyAnnotation get_Property();
    [CompilerGeneratedAttribute]
private void set_Property(ClientPropertyAnnotation value);
}
internal class Microsoft.OData.Client.LoadPropertyResult : QueryResult {
    private object entity;
    private ProjectionPlan plan;
    private string propertyName;
    internal LoadPropertyResult(object entity, string propertyName, DataServiceContext context, ODataRequestMessageWrapper request, AsyncCallback callback, object state, DataServiceRequest dataServiceRequest, ProjectionPlan plan, bool isContinuation);
    internal QueryOperationResponse LoadProperty();
    protected virtual ResponseInfo CreateResponseInfo();
    private static Byte[] ReadByteArrayWithContentLength(Stream responseStream, int totalLength);
    private static Byte[] ReadByteArrayChunked(Stream responseStream);
    private ObjectMaterializer ReadPropertyFromAtom(ClientPropertyAnnotation property);
    private ObjectMaterializer ReadPropertyFromRawData(ClientPropertyAnnotation property);
}
internal class Microsoft.OData.Client.Materialization.CollectionValueMaterializationPolicy : MaterializationPolicy {
    private IODataMaterializerContext materializerContext;
    private PrimitiveValueMaterializationPolicy primitiveValueMaterializationPolicy;
    private InstanceAnnotationMaterializationPolicy instanceAnnotationMaterializationPolicy;
    internal InstanceAnnotationMaterializationPolicy InstanceAnnotationMaterializationPolicy { get; internal set; }
    internal CollectionValueMaterializationPolicy(IODataMaterializerContext materializerContext, PrimitiveValueMaterializationPolicy primitivePolicy);
    internal InstanceAnnotationMaterializationPolicy get_InstanceAnnotationMaterializationPolicy();
    internal void set_InstanceAnnotationMaterializationPolicy(InstanceAnnotationMaterializationPolicy value);
    internal object CreateCollectionPropertyInstance(ODataProperty collectionProperty, Type userCollectionType);
    internal object CreateCollectionInstance(IEdmCollectionTypeReference edmCollectionTypeReference, Type clientCollectionType);
    internal void ApplyCollectionDataValues(ODataProperty collectionProperty, object collectionInstance, Type collectionItemType, Action`2<object, object> addValueToBackingICollectionInstance, bool isElementNullable);
    internal void ApplyCollectionDataValues(IEnumerable items, string wireTypeName, object collectionInstance, Type collectionItemType, Action`2<object, object> addValueToBackingICollectionInstance, bool isElementNullable);
    private object CreateCollectionInstance(IEdmCollectionTypeReference edmCollectionTypeReference, Type clientCollectionType, Func`1<string> error);
    internal bool TryMaterializeODataCollectionValue(Type collectionItemType, ODataProperty collectionProperty, Object& collectionInstance);
}
internal class Microsoft.OData.Client.Materialization.EntityTrackingAdapter : object {
    private object targetInstance;
    [CompilerGeneratedAttribute]
private MergeOption <MergeOption>k__BackingField;
    [CompilerGeneratedAttribute]
private DataServiceContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private ObjectMaterializerLog <MaterializationLog>k__BackingField;
    [CompilerGeneratedAttribute]
private EntityTrackerBase <EntityTracker>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientEdmModel <Model>k__BackingField;
    internal MergeOption MergeOption { get; private set; }
    internal DataServiceContext Context { get; private set; }
    internal ObjectMaterializerLog MaterializationLog { get; private set; }
    internal EntityTrackerBase EntityTracker { get; private set; }
    internal ClientEdmModel Model { get; private set; }
    internal object TargetInstance { get; internal set; }
    internal EntityTrackingAdapter(EntityTrackerBase entityTracker, MergeOption mergeOption, ClientEdmModel model, DataServiceContext context, IODataMaterializerContext materializerContext);
    [CompilerGeneratedAttribute]
internal MergeOption get_MergeOption();
    [CompilerGeneratedAttribute]
private void set_MergeOption(MergeOption value);
    [CompilerGeneratedAttribute]
internal DataServiceContext get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(DataServiceContext value);
    [CompilerGeneratedAttribute]
internal ObjectMaterializerLog get_MaterializationLog();
    [CompilerGeneratedAttribute]
private void set_MaterializationLog(ObjectMaterializerLog value);
    [CompilerGeneratedAttribute]
internal EntityTrackerBase get_EntityTracker();
    [CompilerGeneratedAttribute]
private void set_EntityTracker(EntityTrackerBase value);
    [CompilerGeneratedAttribute]
internal ClientEdmModel get_Model();
    [CompilerGeneratedAttribute]
private void set_Model(ClientEdmModel value);
    internal object get_TargetInstance();
    internal void set_TargetInstance(object value);
    internal virtual bool TryResolveExistingEntity(MaterializerEntry entry, Type expectedEntryType);
    internal bool TryResolveAsExistingEntry(MaterializerEntry entry, Type expectedEntryType);
    private bool TryResolveAsTarget(MaterializerEntry entry);
    private bool TryResolveFromContext(MaterializerEntry entry, Type expectedEntryType);
    private bool TryResolveAsCreated(MaterializerEntry entry);
}
internal class Microsoft.OData.Client.Materialization.EntryValueMaterializationPolicy : StructuralValueMaterializationPolicy {
    private Dictionary`2<IEnumerable, DataServiceQueryContinuation> nextLinkTable;
    [CompilerGeneratedAttribute]
private EntityTrackingAdapter <EntityTrackingAdapter>k__BackingField;
    internal EntityTrackingAdapter EntityTrackingAdapter { get; private set; }
    internal EntryValueMaterializationPolicy(IODataMaterializerContext materializerContext, EntityTrackingAdapter entityTrackingAdapter, SimpleLazy`1<PrimitivePropertyConverter> lazyPrimitivePropertyConverter, Dictionary`2<IEnumerable, DataServiceQueryContinuation> nextLinkTable);
    [CompilerGeneratedAttribute]
internal EntityTrackingAdapter get_EntityTrackingAdapter();
    [CompilerGeneratedAttribute]
private void set_EntityTrackingAdapter(EntityTrackingAdapter value);
    internal static void ValidatePropertyMatch(ClientPropertyAnnotation property, ODataNestedResourceInfo link);
    internal static void ValidatePropertyMatch(ClientPropertyAnnotation property, ODataProperty entryProperty);
    internal static Type ValidatePropertyMatch(ClientPropertyAnnotation property, ODataNestedResourceInfo link, ClientEdmModel model, bool performEntityCheck);
    internal static void ValidatePropertyMatch(ClientPropertyAnnotation property, ODataProperty entryProperty, ClientEdmModel model, bool performEntityCheck);
    internal void Materialize(MaterializerEntry entry, Type expectedEntryType, bool includeLinks);
    internal void ApplyItemsToCollection(MaterializerEntry entry, ClientPropertyAnnotation property, IEnumerable items, Uri nextLink, ProjectionPlan continuationPlan, bool isContinuation);
    internal void FoundNextLinkForCollection(IEnumerable collection, Uri link, ProjectionPlan plan);
    internal void FoundNextLinkForUnmodifiedCollection(IEnumerable collection);
    internal void ResolveByCreatingWithType(MaterializerEntry entry, Type type);
    private static void ValidateCollectionElementTypeIsItemType(Type itemType, Type collectionElementType);
    private static void ApplyLinkProperties(ClientTypeAnnotation actualType, MaterializerEntry entry);
    private object PopulateCollectionProperty(MaterializerEntry entry, ClientPropertyAnnotation property, IEnumerable`1<object> items, Uri nextLink, ProjectionPlan continuationPlan);
    private object GetOrCreateCollectionProperty(object instance, ClientPropertyAnnotation property, bool forLoadProperty);
    private void ApplyFeedToCollection(MaterializerEntry entry, ClientPropertyAnnotation property, ODataResourceSet feed, bool includeLinks);
    private void MaterializeResolvedEntry(MaterializerEntry entry, bool includeLinks);
    private void MaterializeDynamicProperty(MaterializerEntry entry, ODataNestedResourceInfo link);
    [CompilerGeneratedAttribute]
private object <ApplyFeedToCollection>b__19_0(ODataResource e);
}
internal class Microsoft.OData.Client.Materialization.EnumValueMaterializationPolicy : object {
    private IODataMaterializerContext materializerContext;
    internal EnumValueMaterializationPolicy(IODataMaterializerContext materializerContext);
    public object MaterializeEnumTypeProperty(Type valueType, ODataProperty property);
    public object MaterializeEnumDataValueCollectionElement(Type collectionItemType, string wireTypeName, string item);
    internal static object MaterializeODataEnumValue(Type enumType, ODataEnumValue enumValue);
    private void MaterializeODataEnumValue(Type type, string wireTypeName, string enumValueStr, Func`1<string> throwOnNullMessage, Object& materializedValue);
    internal static bool TryMaterializeODataEnumValue(Type type, ODataEnumValue enumValue, Object& materializedEnumValue);
}
internal class Microsoft.OData.Client.Materialization.FeedAndEntryMaterializerAdapter : object {
    private ODataFormat readODataFormat;
    private ODataReaderWrapper reader;
    private ClientEdmModel clientEdmModel;
    private MergeOption mergeOption;
    private IEnumerator`1<ODataResource> feedEntries;
    private ODataResourceSet currentFeed;
    private ODataDeltaResourceSet currentDeltaFeed;
    private ODataResource currentEntry;
    private Stack`1<IMaterializerState> deltaMaterializerStateItems;
    private Stack`1<IMaterializerState> entryMaterializerStateItems;
    private IODataMaterializerContext materializerContext;
    public ODataResourceSet CurrentFeed { get; }
    public ODataDeltaResourceSet CurrentDeltaFeed { get; }
    public ODataResource CurrentEntry { get; }
    public bool IsEndOfStream { get; }
    internal FeedAndEntryMaterializerAdapter(ODataMessageReader messageReader, ODataReaderWrapper reader, ClientEdmModel model, MergeOption mergeOption, IODataMaterializerContext materializerContext, bool isDeltaPayload);
    internal FeedAndEntryMaterializerAdapter(ODataFormat odataFormat, ODataReaderWrapper reader, ClientEdmModel model, MergeOption mergeOption, IODataMaterializerContext materializerContext, bool isDeltaPayload);
    public ODataResourceSet get_CurrentFeed();
    public ODataDeltaResourceSet get_CurrentDeltaFeed();
    public ODataResource get_CurrentEntry();
    public bool get_IsEndOfStream();
    public long GetCountValue(bool readIfNoFeed);
    public bool Read();
    public void Dispose();
    private bool TryReadFeedOrEntry(bool lazy, ODataResourceSet& feed, MaterializerDeltaFeed& deltaFeed, MaterializerEntry& entry);
    private bool TryStartReadFeedOrEntry();
    private bool TryReadFeed(bool lazy, ODataResourceSet& feed);
    private ODataResourceSet ReadFeedCore(bool lazy);
    private MaterializerDeltaFeed ReadDeltaFeedCore();
    private void AddDeltaResourceToParent(IMaterializerState materializerState);
    private void AddResourceToParent(IMaterializerState materializerState);
    [IteratorStateMachineAttribute("Microsoft.OData.Client.Materialization.FeedAndEntryMaterializerAdapter/<LazyReadEntries>d__31")]
private IEnumerable`1<ODataResource> LazyReadEntries();
    private bool TryReadEntry(MaterializerEntry& entry);
    private MaterializerEntry ReadEntryCore();
    private ODataNestedResourceInfo ReadNestedResourceInfo();
    private MaterializerDeletedEntry ReadDeletedResource();
    private bool TryRead();
    private void ReadAndExpectState(ODataReaderState expectedState);
    private void AssertRead();
    private void ExpectState(ODataReaderState expectedState);
}
internal interface Microsoft.OData.Client.Materialization.IMaterializerState {
}
internal class Microsoft.OData.Client.Materialization.InstanceAnnotationMaterializationPolicy : object {
    private CollectionValueMaterializationPolicy collectionValueMaterializationPolicy;
    private EnumValueMaterializationPolicy enumValueMaterializationPolicy;
    [CompilerGeneratedAttribute]
private IODataMaterializerContext <MaterializerContext>k__BackingField;
    internal CollectionValueMaterializationPolicy CollectionValueMaterializationPolicy { get; internal set; }
    internal EnumValueMaterializationPolicy EnumValueMaterializationPolicy { get; internal set; }
    internal IODataMaterializerContext MaterializerContext { get; private set; }
    internal InstanceAnnotationMaterializationPolicy(IODataMaterializerContext materializerContext);
    internal CollectionValueMaterializationPolicy get_CollectionValueMaterializationPolicy();
    internal void set_CollectionValueMaterializationPolicy(CollectionValueMaterializationPolicy value);
    internal EnumValueMaterializationPolicy get_EnumValueMaterializationPolicy();
    internal void set_EnumValueMaterializationPolicy(EnumValueMaterializationPolicy value);
    [CompilerGeneratedAttribute]
internal IODataMaterializerContext get_MaterializerContext();
    [CompilerGeneratedAttribute]
private void set_MaterializerContext(IODataMaterializerContext value);
    internal void SetInstanceAnnotations(ODataResource entry, object entity);
    internal void SetInstanceAnnotations(ODataProperty property, object instance);
    internal void SetInstanceAnnotations(ODataProperty property, Type type, object declaringInstance);
    internal void SetInstanceAnnotations(string navigationPropertyName, ODataResource navigationProperty, Type type, object declaringInstance);
    internal IDictionary`2<string, object> ConvertToClrInstanceAnnotations(ICollection`1<ODataInstanceAnnotation> instanceAnnotations);
    private void SetInstanceAnnotations(object instance, IDictionary`2<string, object> instanceAnnotations);
    private void SetInstanceAnnotations(string propertyName, IDictionary`2<string, object> instanceAnnotations, Type type, object declaringInstance);
    private IDictionary`2<string, object> GetClrInstanceAnnotationsFromODataProperty(ODataProperty property);
    private bool TryConvertToClrInstanceAnnotation(ODataInstanceAnnotation instanceAnnotation, Object& clrInstanceAnnotation);
}
internal interface Microsoft.OData.Client.Materialization.IODataMaterializerContext {
    public DataServiceContext Context { get; }
    public UndeclaredPropertyBehavior UndeclaredPropertyBehavior { get; }
    public ClientEdmModel Model { get; }
    public DataServiceClientResponsePipelineConfiguration ResponsePipeline { get; }
    public MaterializerCache MaterializerCache { get; }
    public bool AutoNullPropagation { get; }
    public bool IncludeLinks { get; }
    public abstract virtual DataServiceContext get_Context();
    public abstract virtual UndeclaredPropertyBehavior get_UndeclaredPropertyBehavior();
    public abstract virtual ClientEdmModel get_Model();
    public abstract virtual DataServiceClientResponsePipelineConfiguration get_ResponsePipeline();
    public abstract virtual ClientTypeAnnotation ResolveTypeForMaterialization(Type expectedType, string readerTypeName);
    public abstract virtual IEdmType ResolveExpectedTypeForReading(Type clientClrType);
    public abstract virtual MaterializerCache get_MaterializerCache();
    public abstract virtual bool get_AutoNullPropagation();
    public abstract virtual bool get_IncludeLinks();
}
internal abstract class Microsoft.OData.Client.Materialization.MaterializationPolicy : object {
    public virtual object CreateNewInstance(IEdmTypeReference edmTypeReference, Type type);
}
internal class Microsoft.OData.Client.Materialization.MaterializerCache : object {
    private Dictionary`2<ODataAnnotatable, object> cache;
    public void SetAnnotation(ODataAnnotatable annotatable, T value);
    public T GetAnnotation(ODataAnnotatable annotatable);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Client.Materialization.MaterializerContextExtensions : object {
    [ExtensionAttribute]
public static void SetAnnotation(IODataMaterializerContext materializerContext, ODataAnnotatable annotatable, T value);
    [ExtensionAttribute]
public static T GetAnnotation(IODataMaterializerContext materializerContext, ODataAnnotatable annotatable);
}
internal class Microsoft.OData.Client.Materialization.MaterializerDeletedEntry : object {
    private ODataDeletedResource deletedEntry;
    public ODataDeletedResource DeletedResource { get; }
    private MaterializerDeletedEntry(ODataDeletedResource deletedEntry);
    public ODataDeletedResource get_DeletedResource();
    public static MaterializerDeletedEntry CreateDeletedEntry(ODataDeletedResource deletedEntry, IODataMaterializerContext materializerContext);
}
internal class Microsoft.OData.Client.Materialization.MaterializerDeltaFeed : object {
    private ODataDeltaResourceSet deltaFeed;
    private List`1<IMaterializerState> entries;
    public ODataDeltaResourceSet DeltaFeed { get; }
    public List`1<IMaterializerState> Entries { get; }
    private MaterializerDeltaFeed(ODataDeltaResourceSet deltaFeed, List`1<IMaterializerState> entries);
    public ODataDeltaResourceSet get_DeltaFeed();
    public List`1<IMaterializerState> get_Entries();
    public void AddEntry(IMaterializerState entry);
    public static MaterializerDeltaFeed CreateDeltaFeed(ODataDeltaResourceSet deltaFeed, List`1<IMaterializerState> entries, IODataMaterializerContext materializerContext);
    public static MaterializerDeltaFeed GetDeltaFeed(ODataDeltaResourceSet deltaFeed, IODataMaterializerContext materializerContext);
}
internal class Microsoft.OData.Client.Materialization.MaterializerEntry : object {
    private ODataResource entry;
    private EntityDescriptor entityDescriptor;
    private bool isTracking;
    private EntryFlags flags;
    private ICollection`1<ODataNestedResourceInfo> navigationLinks;
    private List`1<IMaterializerState> nestedItems;
    [CompilerGeneratedAttribute]
private ClientTypeAnnotation <ActualType>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataFormat <Format>k__BackingField;
    public ODataResource Entry { get; }
    internal List`1<IMaterializerState> NestedItems { get; }
    public bool IsTracking { get; }
    public Uri Id { get; }
    public IEnumerable`1<ODataPropertyInfo> Properties { get; }
    public EntityDescriptor EntityDescriptor { get; }
    public object ResolvedObject { get; public set; }
    public ClientTypeAnnotation ActualType { get; public set; }
    public bool ShouldUpdateFromPayload { get; public set; }
    public bool EntityHasBeenResolved { get; public set; }
    public bool CreatedByMaterializer { get; public set; }
    public bool ForLoadProperty { get; }
    public ICollection`1<ODataNestedResourceInfo> NestedResourceInfos { get; }
    internal ODataFormat Format { get; private set; }
    private bool EntityDescriptorUpdated { get; private set; }
    private MaterializerEntry(ODataResource entry, ODataFormat format, bool isTracking, ClientEdmModel model);
    private MaterializerEntry(EntityDescriptor entityDescriptor, ODataFormat format, bool isTracking);
    public ODataResource get_Entry();
    internal List`1<IMaterializerState> get_NestedItems();
    public bool get_IsTracking();
    public Uri get_Id();
    public IEnumerable`1<ODataPropertyInfo> get_Properties();
    public EntityDescriptor get_EntityDescriptor();
    public object get_ResolvedObject();
    public void set_ResolvedObject(object value);
    [CompilerGeneratedAttribute]
public ClientTypeAnnotation get_ActualType();
    [CompilerGeneratedAttribute]
public void set_ActualType(ClientTypeAnnotation value);
    public bool get_ShouldUpdateFromPayload();
    public void set_ShouldUpdateFromPayload(bool value);
    public bool get_EntityHasBeenResolved();
    public void set_EntityHasBeenResolved(bool value);
    public bool get_CreatedByMaterializer();
    public void set_CreatedByMaterializer(bool value);
    public bool get_ForLoadProperty();
    public ICollection`1<ODataNestedResourceInfo> get_NestedResourceInfos();
    [CompilerGeneratedAttribute]
internal ODataFormat get_Format();
    [CompilerGeneratedAttribute]
private void set_Format(ODataFormat value);
    private bool get_EntityDescriptorUpdated();
    private void set_EntityDescriptorUpdated(bool value);
    public static MaterializerEntry CreateEmpty();
    public static MaterializerEntry CreateEntry(ODataResource entry, ODataFormat format, bool isTracking, ClientEdmModel model, IODataMaterializerContext materializerContext);
    public static MaterializerEntry CreateEntryForLoadProperty(EntityDescriptor descriptor, ODataFormat format, bool isTracking);
    public static MaterializerEntry GetEntry(ODataResource entry, IODataMaterializerContext materializerContext);
    public void AddNestedResourceInfo(ODataNestedResourceInfo link);
    public void UpdateEntityDescriptor();
    internal void AddNestedItem(IMaterializerState nestedItem);
    private bool GetFlagValue(EntryFlags mask);
    private void SetFlagValue(EntryFlags mask, bool value);
}
internal class Microsoft.OData.Client.Materialization.MaterializerFeed : ValueType {
    private ODataResourceSet feed;
    private IEnumerable`1<ODataResource> entries;
    private List`1<IMaterializerState> items;
    public ODataResourceSet Feed { get; }
    public IEnumerable`1<ODataResource> Entries { get; }
    public Uri NextPageLink { get; }
    public List`1<IMaterializerState> Items { get; }
    private MaterializerFeed(ODataResourceSet feed, IEnumerable`1<ODataResource> entries);
    public ODataResourceSet get_Feed();
    public IEnumerable`1<ODataResource> get_Entries();
    public Uri get_NextPageLink();
    public List`1<IMaterializerState> get_Items();
    public void AddItem(IMaterializerState item);
    public static MaterializerFeed CreateFeed(ODataResourceSet feed, IEnumerable`1<ODataResource> entries, IODataMaterializerContext materializerContext);
    public static MaterializerFeed GetFeed(ODataResourceSet feed, IODataMaterializerContext materializerContext);
}
internal class Microsoft.OData.Client.Materialization.MaterializerNestedEntry : object {
    private ODataNestedResourceInfo nestedResourceInfo;
    private List`1<IMaterializerState> nestedItems;
    private MaterializerEntry entry;
    private ODataResourceSet feed;
    public ODataNestedResourceInfo NestedResourceInfo { get; }
    public List`1<IMaterializerState> NestedItems { get; }
    public MaterializerEntry Entry { get; public set; }
    public ODataResourceSet Feed { get; public set; }
    private MaterializerNestedEntry(ODataNestedResourceInfo nestedResourceInfo, List`1<IMaterializerState> nestedItems);
    public ODataNestedResourceInfo get_NestedResourceInfo();
    public List`1<IMaterializerState> get_NestedItems();
    public void set_Entry(MaterializerEntry value);
    public MaterializerEntry get_Entry();
    public void set_Feed(ODataResourceSet value);
    public ODataResourceSet get_Feed();
    public void AddNestedItem(IMaterializerState nestedItem);
    public static MaterializerNestedEntry CreateNestedEntry(ODataNestedResourceInfo nestedResourceInfo, List`1<IMaterializerState> nestedItems, IODataMaterializerContext materializerContext);
    public static MaterializerNestedEntry GetNestedEntry(ODataNestedResourceInfo link, IODataMaterializerContext materializerContext);
}
internal class Microsoft.OData.Client.Materialization.ODataCollectionMaterializer : ODataMessageReaderMaterializer {
    private object currentValue;
    internal object CurrentValue { get; }
    public ODataCollectionMaterializer(ODataMessageReader reader, IODataMaterializerContext materializerContext, Type expectedType, Nullable`1<bool> singleResult);
    internal virtual object get_CurrentValue();
    protected virtual void ReadWithExpectedType(IEdmTypeReference expectedClientType, IEdmTypeReference expectedReaderType);
}
internal abstract class Microsoft.OData.Client.Materialization.ODataEntityMaterializer : ODataMaterializer {
    protected object currentValue;
    private ProjectionPlan materializeEntryPlan;
    private EntryValueMaterializationPolicy entryValueMaterializationPolicy;
    [CompilerGeneratedAttribute]
private EntityTrackingAdapter <EntityTrackingAdapter>k__BackingField;
    internal EntityTrackingAdapter EntityTrackingAdapter { get; private set; }
    internal object TargetInstance { get; internal set; }
    internal object CurrentValue { get; }
    internal ProjectionPlan MaterializeEntryPlan { get; }
    protected EntryValueMaterializationPolicy EntryValueMaterializationPolicy { get; }
    public ODataEntityMaterializer(IODataMaterializerContext materializerContext, EntityTrackingAdapter entityTrackingAdapter, QueryComponents queryComponents, Type expectedType, ProjectionPlan materializeEntryPlan);
    [CompilerGeneratedAttribute]
internal EntityTrackingAdapter get_EntityTrackingAdapter();
    [CompilerGeneratedAttribute]
private void set_EntityTrackingAdapter(EntityTrackingAdapter value);
    internal object get_TargetInstance();
    internal void set_TargetInstance(object value);
    internal sealed virtual object get_CurrentValue();
    internal sealed virtual ProjectionPlan get_MaterializeEntryPlan();
    protected EntryValueMaterializationPolicy get_EntryValueMaterializationPolicy();
    internal static IEnumerable`1<T> EnumerateAsElementType(IEnumerable source);
    [IteratorStateMachineAttribute("Microsoft.OData.Client.Materialization.ODataEntityMaterializer/<EnumerateAsElementTypeInternal>d__18`1")]
internal static IEnumerable`1<T> EnumerateAsElementTypeInternal(IEnumerable source);
    internal static List`1<TTarget> ListAsElementType(ODataEntityMaterializer materializer, IEnumerable`1<T> source);
    internal static ProjectionPlan CreatePlanForDirectMaterialization(Type lastSegmentType);
    internal static ProjectionPlan CreatePlanForShallowMaterialization(Type lastSegmentType);
    internal static bool ProjectionCheckValueForPathIsNull(MaterializerEntry entry, Type expectedType, ProjectionPath path, IODataMaterializerContext materializerContext);
    internal static IEnumerable ProjectionSelect(ODataEntityMaterializer materializer, MaterializerEntry entry, Type expectedType, Type resultType, ProjectionPath path, Func`4<object, object, Type, object> selector);
    internal static ODataResource ProjectionGetEntry(MaterializerEntry entry, string name, IODataMaterializerContext materializerContext);
    [SuppressMessageAttribute("Microsoft.Usage", "CA2201:DoNotRaiseReservedExceptionTypes")]
internal static object ProjectionInitializeEntity(ODataEntityMaterializer materializer, MaterializerEntry entry, Type expectedType, Type resultType, String[] properties, Func`4[] propertyValues);
    internal static void ProjectionEnsureEntryAvailableOfType(ODataEntityMaterializer materializer, MaterializerEntry entry, Type requiredType);
    internal static object DirectMaterializePlan(ODataEntityMaterializer materializer, MaterializerEntry entry, Type expectedEntryType);
    internal static object ShallowMaterializePlan(ODataEntityMaterializer materializer, MaterializerEntry entry, Type expectedEntryType);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502")]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:MethodCoupledWithTooManyTypesFromDifferentNamespaces")]
internal object ProjectionValueForPath(MaterializerEntry entry, Type expectedType, ProjectionPath path);
    internal object ProjectionDynamicValueForPath(MaterializerEntry entry, Type expectedPropertyType, ProjectionPath path);
    internal sealed virtual void ClearLog();
    internal sealed virtual void ApplyLogToContext();
    internal void PropagateContinuation(IEnumerable`1<T> from, DataServiceCollection`1<T> to);
    protected virtual bool ReadImplementation();
    protected abstract virtual bool ReadNextFeedOrEntry();
    [SuppressMessageAttribute("Microsoft.Usage", "CA2201:DoNotRaiseReservedExceptionTypes")]
private static void CheckEntryToAccessNotNull(MaterializerEntry entry, string name);
    private static ProjectionPlan CreatePlan(QueryComponents queryComponents, IODataMaterializerContext materializerContext);
    private static void MaterializeToList(ODataEntityMaterializer materializer, IEnumerable list, Type nestedExpectedType, IEnumerable`1<ODataResource> entries, IODataMaterializerContext materializerContext);
    private static MaterializerNestedEntry GetPropertyOrThrow(IEnumerable`1<ODataNestedResourceInfo> links, string propertyName, IODataMaterializerContext materializerContext);
    private void MergeLists(MaterializerEntry entry, ClientPropertyAnnotation property, IEnumerable list, Uri nextLink, ProjectionPlan plan);
    private static bool NeedToAssignCollectionDirectly(object collection);
}
internal static class Microsoft.OData.Client.Materialization.ODataEntityMaterializerInvoker : object {
    internal static IEnumerable`1<T> EnumerateAsElementType(IEnumerable source);
    internal static List`1<TTarget> ListAsElementType(object materializer, IEnumerable`1<T> source);
    internal static bool ProjectionCheckValueForPathIsNull(object entry, Type expectedType, object path, IODataMaterializerContext materializerContext);
    internal static IEnumerable ProjectionSelect(object materializer, object entry, Type expectedType, Type resultType, object path, Func`4<object, object, Type, object> selector);
    internal static object ProjectionGetEntry(object entry, string name, IODataMaterializerContext materializerContext);
    internal static object ProjectionInitializeEntity(object materializer, object entry, Type expectedType, Type resultType, String[] properties, Func`4[] propertyValues);
    internal static object ProjectionValueForPath(object materializer, object entry, Type expectedType, object path);
    internal static object ProjectionDynamicValueForPath(object materializer, object entry, Type expectedPropertyType, object path);
    internal static object DirectMaterializePlan(object materializer, object entry, Type expectedEntryType);
    internal static object ShallowMaterializePlan(object materializer, object entry, Type expectedEntryType);
}
internal class Microsoft.OData.Client.Materialization.ODataEntriesEntityMaterializer : ODataEntityMaterializer {
    private ODataFormat format;
    private IEnumerator`1<ODataResource> feedEntries;
    private bool isFinished;
    internal ODataResourceSet CurrentFeed { get; }
    internal ODataDeltaResourceSet CurrentDeltaFeed { get; }
    internal ODataResource CurrentEntry { get; }
    internal long CountValue { get; }
    internal bool IsCountable { get; }
    internal bool IsEndOfStream { get; }
    protected bool IsDisposed { get; }
    protected ODataFormat Format { get; }
    public ODataEntriesEntityMaterializer(IEnumerable`1<ODataResource> entries, IODataMaterializerContext materializerContext, EntityTrackingAdapter entityTrackingAdapter, QueryComponents queryComponents, Type expectedType, ProjectionPlan materializeEntryPlan, ODataFormat format);
    internal virtual ODataResourceSet get_CurrentFeed();
    internal virtual ODataDeltaResourceSet get_CurrentDeltaFeed();
    internal virtual ODataResource get_CurrentEntry();
    internal virtual long get_CountValue();
    internal virtual bool get_IsCountable();
    internal virtual bool get_IsEndOfStream();
    protected virtual bool get_IsDisposed();
    protected virtual ODataFormat get_Format();
    protected virtual bool ReadNextFeedOrEntry();
    protected virtual void OnDispose();
}
[ExtensionAttribute]
internal static class Microsoft.OData.Client.Materialization.ODataItemExtensions : object {
    [ExtensionAttribute]
public static object GetMaterializedValue(ODataProperty property, IODataMaterializerContext materializerContext);
    [ExtensionAttribute]
public static bool HasMaterializedValue(ODataProperty property, IODataMaterializerContext materializerContext);
    [ExtensionAttribute]
public static void SetMaterializedValue(ODataProperty property, object materializedValue, IODataMaterializerContext materializerContext);
    private static object GetMaterializedValueCore(ODataAnnotatable annotatableObject, IODataMaterializerContext materializerContext);
    private static bool HasMaterializedValueCore(ODataAnnotatable annotatableObject, IODataMaterializerContext materializerContext);
    private static void SetMaterializedValueCore(ODataAnnotatable annotatableObject, object materializedValue, IODataMaterializerContext materializerContext);
}
internal class Microsoft.OData.Client.Materialization.ODataLinksMaterializer : ODataMessageReaderMaterializer {
    private ODataEntityReferenceLinks links;
    internal long CountValue { get; }
    internal object CurrentValue { get; }
    internal bool IsCountable { get; }
    public ODataLinksMaterializer(ODataMessageReader reader, IODataMaterializerContext materializerContext, Type expectedType, Nullable`1<bool> singleResult);
    internal virtual long get_CountValue();
    internal virtual object get_CurrentValue();
    internal virtual bool get_IsCountable();
    protected virtual void ReadWithExpectedType(IEdmTypeReference expectedClientType, IEdmTypeReference expectedReaderType);
    private void ReadLinks();
}
internal class Microsoft.OData.Client.Materialization.ODataLoadNavigationPropertyMaterializer : ODataReaderEntityMaterializer {
    private LoadPropertyResponseInfo responseInfo;
    private List`1<object> items;
    private int iteration;
    public ODataLoadNavigationPropertyMaterializer(ODataMessageReader odataMessageReader, ODataReaderWrapper reader, IODataMaterializerContext materializerContext, EntityTrackingAdapter entityTrackingAdapter, QueryComponents queryComponents, Type expectedType, ProjectionPlan materializeEntryPlan, LoadPropertyResponseInfo responseInfo);
    protected virtual bool ReadImplementation();
}
internal abstract class Microsoft.OData.Client.Materialization.ODataMaterializer : object {
    internal static IList`1<ODataNestedResourceInfo> EmptyLinks;
    protected static IEnumerable`1<ODataProperty> EmptyProperties;
    protected Dictionary`2<IEnumerable, DataServiceQueryContinuation> nextLinkTable;
    private CollectionValueMaterializationPolicy collectionValueMaterializationPolicy;
    private EnumValueMaterializationPolicy enumValueMaterializationPolicy;
    private InstanceAnnotationMaterializationPolicy instanceAnnotationMaterializationPolicy;
    private PrimitiveValueMaterializationPolicy primitiveValueMaterializationPolicy;
    private SimpleLazy`1<PrimitivePropertyConverter> lazyPrimitivePropertyConverter;
    private bool includeLinks;
    [CompilerGeneratedAttribute]
private Action`1<IDictionary`2<string, object>> <SetInstanceAnnotations>k__BackingField;
    [CompilerGeneratedAttribute]
private IODataMaterializerContext <MaterializerContext>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ExpectedType>k__BackingField;
    internal object CurrentValue { get; }
    internal ODataResourceSet CurrentFeed { get; }
    internal ODataDeltaResourceSet CurrentDeltaFeed { get; }
    internal ODataResource CurrentEntry { get; }
    internal Dictionary`2<IEnumerable, DataServiceQueryContinuation> NextLinkTable { get; }
    internal bool IsEndOfStream { get; }
    internal bool IsCountable { get; }
    internal bool IncludeLinks { get; }
    internal Action`1<IDictionary`2<string, object>> SetInstanceAnnotations { get; internal set; }
    internal long CountValue { get; }
    internal ProjectionPlan MaterializeEntryPlan { get; }
    protected internal IODataMaterializerContext MaterializerContext { get; private set; }
    protected bool IsDisposed { get; }
    protected Type ExpectedType { get; private set; }
    protected CollectionValueMaterializationPolicy CollectionValueMaterializationPolicy { get; }
    protected EnumValueMaterializationPolicy EnumValueMaterializationPolicy { get; }
    protected InstanceAnnotationMaterializationPolicy InstanceAnnotationMaterializationPolicy { get; }
    protected PrimitivePropertyConverter PrimitivePropertyConverter { get; }
    protected PrimitiveValueMaterializationPolicy PrimitiveValueMaterializier { get; }
    protected ODataFormat Format { get; }
    protected ODataMaterializer(IODataMaterializerContext materializerContext, Type expectedType);
    private static ODataMaterializer();
    internal abstract virtual object get_CurrentValue();
    internal abstract virtual ODataResourceSet get_CurrentFeed();
    internal abstract virtual ODataDeltaResourceSet get_CurrentDeltaFeed();
    internal abstract virtual ODataResource get_CurrentEntry();
    internal Dictionary`2<IEnumerable, DataServiceQueryContinuation> get_NextLinkTable();
    internal abstract virtual bool get_IsEndOfStream();
    internal virtual bool get_IsCountable();
    internal bool get_IncludeLinks();
    [CompilerGeneratedAttribute]
internal Action`1<IDictionary`2<string, object>> get_SetInstanceAnnotations();
    [CompilerGeneratedAttribute]
internal void set_SetInstanceAnnotations(Action`1<IDictionary`2<string, object>> value);
    internal abstract virtual long get_CountValue();
    internal abstract virtual ProjectionPlan get_MaterializeEntryPlan();
    [CompilerGeneratedAttribute]
protected internal IODataMaterializerContext get_MaterializerContext();
    [CompilerGeneratedAttribute]
private void set_MaterializerContext(IODataMaterializerContext value);
    protected abstract virtual bool get_IsDisposed();
    [CompilerGeneratedAttribute]
protected Type get_ExpectedType();
    [CompilerGeneratedAttribute]
private void set_ExpectedType(Type value);
    protected CollectionValueMaterializationPolicy get_CollectionValueMaterializationPolicy();
    protected EnumValueMaterializationPolicy get_EnumValueMaterializationPolicy();
    protected InstanceAnnotationMaterializationPolicy get_InstanceAnnotationMaterializationPolicy();
    protected PrimitivePropertyConverter get_PrimitivePropertyConverter();
    protected PrimitiveValueMaterializationPolicy get_PrimitiveValueMaterializier();
    protected abstract virtual ODataFormat get_Format();
    public static ODataMaterializer CreateMaterializerForMessage(IODataResponseMessage responseMessage, ResponseInfo responseInfo, Type materializerType, QueryComponents queryComponents, ProjectionPlan plan, ODataPayloadKind payloadKind, MaterializerCache materializerCache);
    public bool Read();
    public sealed virtual void Dispose();
    internal abstract virtual void ClearLog();
    internal abstract virtual void ApplyLogToContext();
    protected static ODataMessageReader CreateODataMessageReader(IODataResponseMessage responseMessage, ResponseInfo responseInfo, ODataPayloadKind& payloadKind);
    protected void VerifyNotDisposed();
    protected abstract virtual bool ReadImplementation();
    protected abstract virtual void OnDispose();
}
internal class Microsoft.OData.Client.Materialization.ODataMaterializerContext : object {
    private bool includeLinks;
    [CompilerGeneratedAttribute]
private ResponseInfo <ResponseInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private MaterializerCache <MaterializerCache>k__BackingField;
    public bool IncludeLinks { get; }
    public DataServiceContext Context { get; }
    public UndeclaredPropertyBehavior UndeclaredPropertyBehavior { get; }
    public ClientEdmModel Model { get; }
    public DataServiceClientResponsePipelineConfiguration ResponsePipeline { get; }
    protected ResponseInfo ResponseInfo { get; private set; }
    public bool AutoNullPropagation { get; }
    public MaterializerCache MaterializerCache { get; private set; }
    internal ODataMaterializerContext(ResponseInfo responseInfo, MaterializerCache materializerCache, bool includeLinks);
    public sealed virtual bool get_IncludeLinks();
    public sealed virtual DataServiceContext get_Context();
    public sealed virtual UndeclaredPropertyBehavior get_UndeclaredPropertyBehavior();
    public sealed virtual ClientEdmModel get_Model();
    public sealed virtual DataServiceClientResponsePipelineConfiguration get_ResponsePipeline();
    [CompilerGeneratedAttribute]
protected ResponseInfo get_ResponseInfo();
    [CompilerGeneratedAttribute]
private void set_ResponseInfo(ResponseInfo value);
    public sealed virtual bool get_AutoNullPropagation();
    public sealed virtual ClientTypeAnnotation ResolveTypeForMaterialization(Type expectedType, string wireTypeName);
    public sealed virtual IEdmType ResolveExpectedTypeForReading(Type expectedType);
    [CompilerGeneratedAttribute]
public sealed virtual MaterializerCache get_MaterializerCache();
    [CompilerGeneratedAttribute]
private void set_MaterializerCache(MaterializerCache value);
}
internal abstract class Microsoft.OData.Client.Materialization.ODataMessageReaderMaterializer : ODataMaterializer {
    protected Nullable`1<bool> SingleResult;
    protected ODataMessageReader messageReader;
    private bool hasReadValue;
    internal ODataResourceSet CurrentFeed { get; }
    internal ODataDeltaResourceSet CurrentDeltaFeed { get; }
    internal ODataResource CurrentEntry { get; }
    internal bool IsEndOfStream { get; }
    internal long CountValue { get; }
    internal ProjectionPlan MaterializeEntryPlan { get; }
    protected bool IsDisposed { get; }
    protected ODataFormat Format { get; }
    public ODataMessageReaderMaterializer(ODataMessageReader reader, IODataMaterializerContext materializerContext, Type expectedType, Nullable`1<bool> singleResult);
    internal sealed virtual ODataResourceSet get_CurrentFeed();
    internal sealed virtual ODataDeltaResourceSet get_CurrentDeltaFeed();
    internal sealed virtual ODataResource get_CurrentEntry();
    internal sealed virtual bool get_IsEndOfStream();
    internal virtual long get_CountValue();
    internal sealed virtual ProjectionPlan get_MaterializeEntryPlan();
    protected sealed virtual bool get_IsDisposed();
    protected virtual ODataFormat get_Format();
    internal sealed virtual void ClearLog();
    internal sealed virtual void ApplyLogToContext();
    protected sealed virtual bool ReadImplementation();
    protected sealed virtual void OnDispose();
    protected abstract virtual void ReadWithExpectedType(IEdmTypeReference expectedClientType, IEdmTypeReference expectedReaderType);
}
internal class Microsoft.OData.Client.Materialization.ODataPropertyMaterializer : ODataMessageReaderMaterializer {
    private object currentValue;
    internal object CurrentValue { get; }
    public ODataPropertyMaterializer(ODataMessageReader reader, IODataMaterializerContext materializerContext, Type expectedType, Nullable`1<bool> singleResult);
    internal virtual object get_CurrentValue();
    protected virtual void ReadWithExpectedType(IEdmTypeReference expectedClientType, IEdmTypeReference expectedReaderType);
}
internal class Microsoft.OData.Client.Materialization.ODataReaderEntityMaterializer : ODataEntityMaterializer {
    private FeedAndEntryMaterializerAdapter feedEntryAdapter;
    private ODataMessageReader messageReader;
    internal ODataResourceSet CurrentFeed { get; }
    internal ODataDeltaResourceSet CurrentDeltaFeed { get; }
    internal ODataResource CurrentEntry { get; }
    internal bool IsEndOfStream { get; }
    internal long CountValue { get; }
    internal bool IsCountable { get; }
    protected bool IsDisposed { get; }
    protected ODataFormat Format { get; }
    public ODataReaderEntityMaterializer(ODataMessageReader odataMessageReader, ODataReaderWrapper reader, IODataMaterializerContext materializerContext, EntityTrackingAdapter entityTrackingAdapter, QueryComponents queryComponents, Type expectedType, ProjectionPlan materializeEntryPlan);
    internal virtual ODataResourceSet get_CurrentFeed();
    internal virtual ODataDeltaResourceSet get_CurrentDeltaFeed();
    internal virtual ODataResource get_CurrentEntry();
    internal virtual bool get_IsEndOfStream();
    internal virtual long get_CountValue();
    internal virtual bool get_IsCountable();
    protected virtual bool get_IsDisposed();
    protected virtual ODataFormat get_Format();
    internal static MaterializerEntry ParseSingleEntityPayload(IODataResponseMessage message, ResponseInfo responseInfo, Type expectedType, IODataMaterializerContext materializerContext);
    internal static MaterializerDeltaFeed ParseDeltaResourceSetPayload(IODataResponseMessage message, ResponseInfo responseInfo, Type expectedType, IODataMaterializerContext materializerContext);
    protected virtual void OnDispose();
    protected virtual bool ReadNextFeedOrEntry();
}
internal class Microsoft.OData.Client.Materialization.ODataReaderWrapper : object {
    private ODataReader reader;
    private DataServiceClientResponsePipelineConfiguration responsePipeline;
    public ODataReaderState State { get; }
    public ODataItem Item { get; }
    private ODataReaderWrapper(ODataReader reader, DataServiceClientResponsePipelineConfiguration responsePipeline);
    public ODataReaderState get_State();
    public ODataItem get_Item();
    public bool Read();
    internal static ODataReaderWrapper Create(ODataMessageReader messageReader, ODataPayloadKind messageType, IEdmType expectedType, DataServiceClientResponsePipelineConfiguration responsePipeline);
    internal static ODataReaderWrapper CreateForTest(ODataReader reader, DataServiceClientResponsePipelineConfiguration responsePipeline);
}
internal class Microsoft.OData.Client.Materialization.ODataValueMaterializer : ODataMessageReaderMaterializer {
    private object currentValue;
    internal object CurrentValue { get; }
    public ODataValueMaterializer(ODataMessageReader reader, IODataMaterializerContext materializerContext, Type expectedType, Nullable`1<bool> singleResult);
    internal virtual object get_CurrentValue();
    protected virtual void ReadWithExpectedType(IEdmTypeReference expectedClientType, IEdmTypeReference expectedReaderType);
}
internal class Microsoft.OData.Client.Materialization.PrimitivePropertyConverter : object {
    private SimpleLazy`1<GeoJsonObjectFormatter> lazyGeoJsonFormatter;
    internal object ConvertPrimitiveValue(object value, Type propertyType);
    private static bool IsSupportedODataPrimitiveType(Type type);
    private static bool CanMapToODataPrimitiveType(Type type);
    private static object ConvertNonSpatialValue(object value, Type targetType);
    private static bool CanSafelyConvertTo(Type targetType);
    private object ConvertValueIfNeeded(object value, Type targetType);
    private object ConvertSpatialValue(object value, Type targetType);
    private TOut ConvertSpatialValue(TIn valueToConvert);
}
internal class Microsoft.OData.Client.Materialization.PrimitiveValueMaterializationPolicy : object {
    private IODataMaterializerContext materializerContext;
    private SimpleLazy`1<PrimitivePropertyConverter> lazyPrimitivePropertyConverter;
    private PrimitivePropertyConverter PrimitivePropertyConverter { get; }
    internal PrimitiveValueMaterializationPolicy(IODataMaterializerContext materializerContext, SimpleLazy`1<PrimitivePropertyConverter> lazyPrimitivePropertyConverter);
    private PrimitivePropertyConverter get_PrimitivePropertyConverter();
    public object MaterializePrimitiveDataValue(Type collectionItemType, string wireTypeName, object item);
    public object MaterializePrimitiveDataValueCollectionElement(Type collectionItemType, string wireTypeName, object item);
    private void MaterializePrimitiveDataValue(Type type, string wireTypeName, object value, Func`1<string> throwOnNullMessage, Object& materializedValue);
}
internal abstract class Microsoft.OData.Client.Materialization.StructuralValueMaterializationPolicy : MaterializationPolicy {
    private CollectionValueMaterializationPolicy collectionValueMaterializationPolicy;
    private InstanceAnnotationMaterializationPolicy instanceAnnotationMaterializationPolicy;
    private SimpleLazy`1<PrimitivePropertyConverter> lazyPrimitivePropertyConverter;
    [CompilerGeneratedAttribute]
private IODataMaterializerContext <MaterializerContext>k__BackingField;
    protected internal CollectionValueMaterializationPolicy CollectionValueMaterializationPolicy { get; protected internal set; }
    protected internal InstanceAnnotationMaterializationPolicy InstanceAnnotationMaterializationPolicy { get; protected internal set; }
    protected PrimitivePropertyConverter PrimitivePropertyConverter { get; }
    protected IODataMaterializerContext MaterializerContext { get; private set; }
    protected StructuralValueMaterializationPolicy(IODataMaterializerContext materializerContext, SimpleLazy`1<PrimitivePropertyConverter> lazyPrimitivePropertyConverter);
    protected internal CollectionValueMaterializationPolicy get_CollectionValueMaterializationPolicy();
    protected internal void set_CollectionValueMaterializationPolicy(CollectionValueMaterializationPolicy value);
    protected internal InstanceAnnotationMaterializationPolicy get_InstanceAnnotationMaterializationPolicy();
    protected internal void set_InstanceAnnotationMaterializationPolicy(InstanceAnnotationMaterializationPolicy value);
    protected PrimitivePropertyConverter get_PrimitivePropertyConverter();
    [CompilerGeneratedAttribute]
protected IODataMaterializerContext get_MaterializerContext();
    [CompilerGeneratedAttribute]
private void set_MaterializerContext(IODataMaterializerContext value);
    internal void MaterializePrimitiveDataValue(Type type, ODataProperty property);
    internal void ApplyDataValues(ClientTypeAnnotation type, IEnumerable`1<ODataProperty> properties, object instance);
    internal void ApplyDataValue(ClientTypeAnnotation type, ODataProperty property, object instance);
    internal void MaterializeDataValues(ClientTypeAnnotation actualType, IEnumerable`1<ODataPropertyInfo> properties, UndeclaredPropertyBehavior undeclaredPropertyBehavior);
    internal Type ResolveClientTypeForDynamicProperty(string serverTypeName, object instance);
    internal void MaterializeDynamicProperty(ODataProperty property, object instance);
}
public class Microsoft.OData.Client.MaterializedEntityArgs : object {
    [CompilerGeneratedAttribute]
private ODataResource <Entry>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Entity>k__BackingField;
    public ODataResource Entry { get; private set; }
    public object Entity { get; private set; }
    public MaterializedEntityArgs(ODataResource entry, object entity);
    [CompilerGeneratedAttribute]
public ODataResource get_Entry();
    [CompilerGeneratedAttribute]
private void set_Entry(ODataResource value);
    [CompilerGeneratedAttribute]
public object get_Entity();
    [CompilerGeneratedAttribute]
private void set_Entity(object value);
}
[AttributeUsageAttribute("4")]
public class Microsoft.OData.Client.MediaEntryAttribute : Attribute {
    private string mediaMemberName;
    public string MediaMemberName { get; }
    public MediaEntryAttribute(string mediaMemberName);
    public string get_MediaMemberName();
}
internal class Microsoft.OData.Client.MemberAssignmentAnalysis : ALinqExpressionVisitor {
    [SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
internal static Expression[] EmptyExpressionArray;
    private Expression entity;
    private Exception incompatibleAssignmentsException;
    private bool multiplePathsFound;
    private List`1<Expression> pathFromEntity;
    internal Exception IncompatibleAssignmentsException { get; }
    internal bool MultiplePathsFound { get; }
    private MemberAssignmentAnalysis(Expression entity);
    private static MemberAssignmentAnalysis();
    internal Exception get_IncompatibleAssignmentsException();
    internal bool get_MultiplePathsFound();
    internal static MemberAssignmentAnalysis Analyze(Expression entityInScope, Expression assignmentExpression);
    internal Exception CheckCompatibleAssignments(Type targetType, MemberAssignmentAnalysis& previous);
    internal virtual Expression Visit(Expression expression);
    internal virtual Expression VisitConditional(ConditionalExpression c);
    internal virtual Expression VisitParameter(ParameterExpression p);
    internal virtual NewExpression VisitNew(NewExpression nex);
    internal virtual Expression VisitMemberInit(MemberInitExpression init);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitMethodCall(MethodCallExpression call);
    internal Expression[] GetExpressionsBeyondTargetEntity();
    internal Expression[] GetExpressionsToTargetEntity();
    internal Expression[] GetExpressionsToTargetEntity(bool ignoreLastExpression);
    private static Exception CheckCompatibleAssignments(Type targetType, Expression[] previous, Expression[] candidate);
    private static Exception CheckCompatibleAssignmentsFail(Type targetType, Expression[] previous, Expression[] candidate);
    private bool CheckCompatibleAssignmentExpression(Expression expressionToAssign, Type initType, MemberAssignmentAnalysis& previousNested);
}
public enum Microsoft.OData.Client.MergeOption : Enum {
    public int value__;
    public static MergeOption AppendOnly;
    public static MergeOption OverwriteChanges;
    public static MergeOption PreserveChanges;
    public static MergeOption NoTracking;
}
public class Microsoft.OData.Client.MessageReaderSettingsArgs : object {
    [CompilerGeneratedAttribute]
private ODataMessageReaderSettings <Settings>k__BackingField;
    public ODataMessageReaderSettings Settings { get; private set; }
    public MessageReaderSettingsArgs(ODataMessageReaderSettings settings);
    [CompilerGeneratedAttribute]
public ODataMessageReaderSettings get_Settings();
    [CompilerGeneratedAttribute]
private void set_Settings(ODataMessageReaderSettings value);
}
public class Microsoft.OData.Client.MessageWriterSettingsArgs : object {
    [CompilerGeneratedAttribute]
private ODataMessageWriterSettings <Settings>k__BackingField;
    public ODataMessageWriterSettings Settings { get; private set; }
    public MessageWriterSettingsArgs(ODataMessageWriterSettings settings);
    [CompilerGeneratedAttribute]
public ODataMessageWriterSettings get_Settings();
    [CompilerGeneratedAttribute]
private void set_Settings(ODataMessageWriterSettings value);
}
[DebuggerDisplayAttribute("{PropertyName}")]
internal class Microsoft.OData.Client.Metadata.ClientPropertyAnnotation : object {
    internal IEdmProperty EdmProperty;
    internal string PropertyName;
    internal PropertyInfo PropertyInfo;
    internal Type NullablePropertyType;
    internal Type PropertyType;
    internal Type DictionaryValueType;
    internal Type DeclaringClrType;
    internal bool IsKnownType;
    private Func`2<object, object> propertyGetter;
    private Action`2<object, object> propertySetter;
    private Action`3<object, string, object> dictionarySetter;
    private Action`2<object, object> collectionAdd;
    private Func`3<object, object, bool> collectionRemove;
    private Func`3<object, object, bool> collectionContains;
    private Action`1<object> collectionClear;
    private Type collectionGenericType;
    private Nullable`1<bool> isPrimitiveOrEnumOrComplexCollection;
    private Nullable`1<bool> isComplex;
    private Nullable`1<bool> isComplexCollection;
    private Nullable`1<bool> isResourceSet;
    private Nullable`1<bool> isSpatialType;
    private ClientPropertyAnnotation mimeTypeProperty;
    [CompilerGeneratedAttribute]
private ClientEdmModel <Model>k__BackingField;
    internal ClientEdmModel Model { get; private set; }
    internal ClientPropertyAnnotation MimeTypeProperty { get; internal set; }
    internal Type EntityCollectionItemType { get; }
    internal bool IsEntityCollection { get; }
    internal Type ResourceSetItemType { get; }
    internal bool IsResourceSet { get; }
    internal Type PrimitiveOrComplexCollectionItemType { get; }
    internal bool IsEnumType { get; }
    internal bool IsComplex { get; }
    internal bool IsComplexCollection { get; }
    internal bool IsPrimitiveOrEnumOrComplexCollection { get; }
    internal bool IsSpatialType { get; }
    internal bool IsDictionary { get; }
    internal bool IsStreamLinkProperty { get; }
    internal ClientPropertyAnnotation(IEdmProperty edmProperty, PropertyInfo propertyInfo, ClientEdmModel model);
    [CompilerGeneratedAttribute]
internal ClientEdmModel get_Model();
    [CompilerGeneratedAttribute]
private void set_Model(ClientEdmModel value);
    internal ClientPropertyAnnotation get_MimeTypeProperty();
    internal void set_MimeTypeProperty(ClientPropertyAnnotation value);
    internal Type get_EntityCollectionItemType();
    internal bool get_IsEntityCollection();
    internal Type get_ResourceSetItemType();
    internal bool get_IsResourceSet();
    internal Type get_PrimitiveOrComplexCollectionItemType();
    internal bool get_IsEnumType();
    internal bool get_IsComplex();
    internal bool get_IsComplexCollection();
    internal bool get_IsPrimitiveOrEnumOrComplexCollection();
    internal bool get_IsSpatialType();
    internal bool get_IsDictionary();
    internal bool get_IsStreamLinkProperty();
    internal object GetValue(object instance);
    internal void RemoveValue(object instance, object value);
    internal void SetValue(object instance, object value, string propertyName, bool allowAdd);
    internal void ClearBackingICollectionInstance(object collectionInstance);
    internal void AddValueToBackingICollectionInstance(object collectionInstance, object value);
}
[DebuggerDisplayAttribute("{ElementTypeName}")]
internal class Microsoft.OData.Client.Metadata.ClientTypeAnnotation : object {
    internal IEdmType EdmType;
    internal string ElementTypeName;
    internal Type ElementType;
    private ClientEdmModel model;
    private Nullable`1<bool> isMediaLinkEntry;
    private ClientPropertyAnnotation mediaDataMember;
    private Version metadataVersion;
    private Dictionary`2<string, ClientPropertyAnnotation> clientPropertyCache;
    private IEdmProperty[] edmPropertyCache;
    [CompilerGeneratedAttribute]
private IEdmTypeReference <EdmTypeReference>k__BackingField;
    internal bool IsEntityType { get; }
    internal bool IsStructuredType { get; }
    internal ClientPropertyAnnotation MediaDataMember { get; }
    internal bool IsMediaLinkEntry { get; }
    internal IEdmTypeReference EdmTypeReference { get; private set; }
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
internal ClientTypeAnnotation(IEdmType edmType, Type type, string qualifiedName, ClientEdmModel model);
    internal bool get_IsEntityType();
    internal bool get_IsStructuredType();
    internal ClientPropertyAnnotation get_MediaDataMember();
    internal bool get_IsMediaLinkEntry();
    [CompilerGeneratedAttribute]
internal IEdmTypeReference get_EdmTypeReference();
    [CompilerGeneratedAttribute]
private void set_EdmTypeReference(IEdmTypeReference value);
    internal IEnumerable`1<IEdmProperty> EdmProperties();
    internal IEnumerable`1<ClientPropertyAnnotation> Properties();
    internal IEnumerable`1<ClientPropertyAnnotation> PropertiesToSerialize();
    internal ClientPropertyAnnotation GetProperty(string propertyName, UndeclaredPropertyBehavior undeclaredPropertyBehavior);
    internal Version GetMetadataVersion();
    private static bool ShouldSerializeProperty(ClientTypeAnnotation type, ClientPropertyAnnotation property);
    private void BuildPropertyCache();
    private void CheckMediaLinkEntry();
    private Version ComputeVersionForPropertyCollection(IEnumerable`1<IEdmProperty> propertyCollection, HashSet`1<IEdmType> visitedComplexTypes);
    [IteratorStateMachineAttribute("Microsoft.OData.Client.Metadata.ClientTypeAnnotation/<DiscoverEdmProperties>d__31")]
private IEnumerable`1<IEdmProperty> DiscoverEdmProperties();
    [CompilerGeneratedAttribute]
private bool <PropertiesToSerialize>b__24_0(ClientPropertyAnnotation p);
}
[DebuggerDisplayAttribute("{PropertyName}")]
internal static class Microsoft.OData.Client.Metadata.ClientTypeCache : object {
    private static Dictionary`2<TypeName, Type> namedTypes;
    private static ClientTypeCache();
    [SuppressMessageAttribute("Design", "CA1031:Do not catch general exception types")]
internal static Type ResolveFromName(string wireName, Type userType);
    private static void ResolveSubclass(string wireClassName, Type userType, Type type, Type& existing);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Client.Metadata.ClientTypeUtil : object {
    [SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
internal static PropertyInfo[] EmptyPropertyInfoArray;
    [CompilerGeneratedAttribute]
private static ConcurrentDictionary`2<Type, ODataTypeInfo> <ODataTypeInfoCache>k__BackingField;
    internal static ConcurrentDictionary`2<Type, ODataTypeInfo> ODataTypeInfoCache { get; internal set; }
    private static ClientTypeUtil();
    [CompilerGeneratedAttribute]
internal static ConcurrentDictionary`2<Type, ODataTypeInfo> get_ODataTypeInfoCache();
    [CompilerGeneratedAttribute]
internal static void set_ODataTypeInfoCache(ConcurrentDictionary`2<Type, ODataTypeInfo> value);
    [ExtensionAttribute]
internal static void SetClientTypeAnnotation(IEdmModel model, IEdmType edmType, ClientTypeAnnotation annotation);
    [ExtensionAttribute]
internal static ClientTypeAnnotation GetClientTypeAnnotation(ClientEdmModel model, Type type);
    [ExtensionAttribute]
internal static ClientTypeAnnotation GetClientTypeAnnotation(IEdmModel model, IEdmType edmType);
    [ExtensionAttribute]
internal static void SetClientPropertyAnnotation(IEdmProperty edmProperty, ClientPropertyAnnotation annotation);
    [ExtensionAttribute]
internal static ClientPropertyAnnotation GetClientPropertyAnnotation(IEdmModel model, IEdmProperty edmProperty);
    [ExtensionAttribute]
internal static ClientTypeAnnotation GetClientTypeAnnotation(IEdmModel model, IEdmProperty edmProperty);
    [ExtensionAttribute]
internal static IEdmTypeReference ToEdmTypeReference(IEdmType edmType, bool isNullable);
    [ExtensionAttribute]
internal static string FullName(IEdmType edmType);
    internal static MethodInfo GetMethodForGenericType(Type propertyType, Type genericTypeDefinition, string methodName, Type& type);
    internal static Action`2<object, object> GetAddToCollectionDelegate(Type listType);
    internal static MethodInfo GetAddToCollectionMethod(Type collectionType, Type& type);
    internal static Type GetImplementationType(Type type, Type genericTypeDefinition);
    internal static bool TypeIsEntity(Type t, ClientEdmModel model);
    internal static bool TypeIsComplex(Type t, ClientEdmModel model);
    internal static bool TypeIsStructured(Type t, ClientEdmModel model);
    internal static bool TypeOrElementTypeIsEntity(Type type);
    internal static bool TypeOrElementTypeIsStructured(Type type);
    internal static bool IsDataServiceCollection(Type type);
    internal static bool CanAssignNull(Type type);
    [IteratorStateMachineAttribute("Microsoft.OData.Client.Metadata.ClientTypeUtil/<GetPropertiesOnType>d__24")]
internal static IEnumerable`1<PropertyInfo> GetPropertiesOnType(Type type, bool declaredOnly);
    internal static PropertyInfo[] GetKeyPropertiesOnType(Type type);
    internal static PropertyInfo[] GetKeyPropertiesOnType(Type type, Boolean& hasProperties);
    internal static Type GetMemberType(MemberInfo member);
    internal static string GetServerDefinedName(PropertyInfo propertyInfo);
    internal static string GetServerDefinedName(MemberInfo memberInfo);
    internal static string GetServerDefinedTypeName(Type type);
    internal static string GetServerDefinedTypeFullName(Type type);
    internal static string GetClientFieldName(Type t, string serverDefinedName);
    internal static PropertyInfo GetClientPropertyInfo(Type t, string serverDefinedName, UndeclaredPropertyBehavior undeclaredPropertyBehavior);
    internal static string GetClientPropertyName(Type t, string serverDefinedName, UndeclaredPropertyBehavior undeclaredPropertyBehavior);
    internal static MethodInfo GetClientMethod(Type t, string serverDefinedName, Type[] parameters);
    internal static string GetEnumValuesString(string enumString, Type enumType);
    internal static bool IsInstanceOfOpenType(object instance, ClientEdmModel model);
    [SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
internal static bool TryGetContainerProperty(object instance, IDictionary`2& containerProperty);
    private static ODataTypeInfo GetODataTypeInfo(Type type);
    private static bool IsConstructedGeneric(Type type, Type genericTypeDefinition);
    private static bool IsOverride(Type type, PropertyInfo propertyInfo);
    internal static bool TryResolveType(Assembly targetAssembly, string typeName, string fullNamespace, string languageDependentNamespace, Type& matchedType);
    private static Type FindType(Assembly assembly, string qualifiedTypeName, string serverDefinedName, string languageDependentNamespace);
    private static bool SkipAssembly(Assembly assembly);
}
internal enum Microsoft.OData.Client.Metadata.KeyKind : Enum {
    public int value__;
    public static KeyKind NotKey;
    public static KeyKind Id;
    public static KeyKind TypeNameId;
    public static KeyKind AttributedKey;
}
internal class Microsoft.OData.Client.Metadata.ODataTypeInfo : object {
    private Nullable`1<bool> _hasProperties;
    private PropertyInfo[] _keyProperties;
    private Type type;
    private Dictionary`2<string, PropertyInfo> _propertyInfoDict;
    private IEnumerable`1<PropertyInfo> _properties;
    private string _serverDefinedTypeName;
    private string _serverDefinedTypeFullName;
    private OriginalNameAttribute originalNameAttribute;
    [CompilerGeneratedAttribute]
private ConcurrentDictionary`2<string, string> <ServerSideNameDict>k__BackingField;
    private ConcurrentDictionary`2<string, string> ServerSideNameDict { get; private set; }
    public PropertyInfo[] KeyProperties { get; }
    public bool HasProperties { get; }
    public string ServerDefinedTypeName { get; }
    public string ServerDefinedTypeFullName { get; }
    public IEnumerable`1<PropertyInfo> Properties { get; }
    public ODataTypeInfo(Type type);
    [CompilerGeneratedAttribute]
private ConcurrentDictionary`2<string, string> get_ServerSideNameDict();
    [CompilerGeneratedAttribute]
private void set_ServerSideNameDict(ConcurrentDictionary`2<string, string> value);
    public PropertyInfo[] get_KeyProperties();
    public bool get_HasProperties();
    public string get_ServerDefinedTypeName();
    public string get_ServerDefinedTypeFullName();
    public IEnumerable`1<PropertyInfo> get_Properties();
    public string GetClientFieldName(string serverSideName);
    public PropertyInfo GetClientPropertyInfo(string serverDefinedName, UndeclaredPropertyBehavior undeclaredPropertyBehavior);
    private IEnumerable`1<PropertyInfo> GetAllProperties();
    private PropertyInfo[] GetKeyProperties();
    private static void InserKeyBasedOnOrder(List`1<KeyValuePair`2<PropertyInfo, int>> keys, PropertyInfo keyPi, int order);
    private static KeyKind IsKeyProperty(PropertyInfo propertyInfo, KeyAttribute dataServiceKeyAttribute, Int32& order);
    private static bool IsDataAnnotationsKeyProperty(PropertyInfo propertyInfo, KeyKind& kind, Int32& order);
    [CompilerGeneratedAttribute]
private bool <GetKeyProperties>b__26_0(string a);
}
[AttributeUsageAttribute("4")]
public class Microsoft.OData.Client.MimeTypePropertyAttribute : Attribute {
    private string dataPropertyName;
    private string mimeTypePropertyName;
    public string DataPropertyName { get; }
    public string MimeTypePropertyName { get; }
    public MimeTypePropertyAttribute(string dataPropertyName, string mimeTypePropertyName);
    public string get_DataPropertyName();
    public string get_MimeTypePropertyName();
}
[AttributeUsageAttribute("4")]
public class Microsoft.OData.Client.NamedStreamAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; private set; }
    public NamedStreamAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
}
internal class Microsoft.OData.Client.NamedStreamTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.NavigationPropertySingletonExpression : ResourceExpression {
    private Expression memberExpression;
    private Type resourceType;
    public ExpressionType NodeType { get; }
    internal MemberExpression MemberExpression { get; }
    internal Type ResourceType { get; }
    internal bool IsSingleton { get; }
    internal bool HasQueryOptions { get; }
    internal bool IsOperationInvocation { get; }
    internal NavigationPropertySingletonExpression(Type type, Expression source, Expression memberExpression, Type resourceType, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion);
    public virtual ExpressionType get_NodeType();
    internal MemberExpression get_MemberExpression();
    internal virtual Type get_ResourceType();
    internal virtual bool get_IsSingleton();
    internal virtual bool get_HasQueryOptions();
    internal virtual bool get_IsOperationInvocation();
    internal virtual ResourceExpression CreateCloneResourceExpression();
    internal virtual ResourceExpression CreateCloneWithNewType(Type type);
}
internal class Microsoft.OData.Client.NewTreeBuilder : object {
    public sealed virtual PathSegmentToken Visit(SystemToken tokenIn);
    public sealed virtual PathSegmentToken Visit(NonSystemToken tokenIn);
}
internal class Microsoft.OData.Client.ObjectMaterializer : object {
    private ResponseInfo responseInfo;
    private Type elementType;
    private bool expectingPrimitiveValue;
    private ODataMaterializer materializer;
    private object current;
    private bool calledGetEnumerator;
    private bool moved;
    private TextWriter writer;
    public object Current { get; }
    internal static ObjectMaterializer EmptyResults { get; }
    internal bool IsCountable { get; }
    internal DataServiceContext Context { get; }
    internal Action`1<IDictionary`2<string, object>> SetInstanceAnnotations { get; internal set; }
    internal ObjectMaterializer(ResponseInfo responseInfo, QueryComponents queryComponents, ProjectionPlan plan, IODataResponseMessage responseMessage, ODataPayloadKind payloadKind, MaterializerCache materializerCache);
    internal ObjectMaterializer(ResponseInfo responseInfo, IEnumerable`1<ODataResource> entries, Type elementType, ODataFormat format, MaterializerCache materializerCache, bool includeLinks);
    public sealed virtual object get_Current();
    internal static ObjectMaterializer get_EmptyResults();
    internal bool IsNoContentResponse();
    internal bool get_IsCountable();
    internal virtual DataServiceContext get_Context();
    internal Action`1<IDictionary`2<string, object>> get_SetInstanceAnnotations();
    internal void set_SetInstanceAnnotations(Action`1<IDictionary`2<string, object>> value);
    public sealed virtual void Dispose();
    public virtual IEnumerator GetEnumerator();
    private static Type GetTypeForMaterializer(bool expectingPrimitiveValue, Type elementType, ClientEdmModel model, Type& implementationType);
    public sealed virtual bool MoveNext();
    private bool MoveNextInternal();
    private sealed virtual override void System.Collections.IEnumerator.Reset();
    internal static ObjectMaterializer CreateWrapper(DataServiceContext context, IEnumerable results);
    internal static ObjectMaterializer CreateWrapper(DataServiceContext context, IEnumerable results, DataServiceQueryContinuation continuation);
    internal void SetInsertingObject(object addedObject);
    internal long CountValue();
    internal virtual DataServiceQueryContinuation GetContinuation(IEnumerable key);
    private void CheckGetEnumerator();
    internal static string ReadElementString(XmlReader reader, bool checkNullAttribute);
}
internal class Microsoft.OData.Client.ObjectMaterializerLog : object {
    private MergeOption mergeOption;
    private ClientEdmModel clientEdmModel;
    private EntityTrackerBase entityTracker;
    private Dictionary`2<Uri, ODataResource> appendOnlyEntries;
    private Dictionary`2<Uri, ODataResource> identityStack;
    private List`1<LinkDescriptor> links;
    private object insertRefreshObject;
    private IODataMaterializerContext materializerContext;
    internal bool Tracking { get; }
    internal ObjectMaterializerLog(MergeOption mergeOption, ClientEdmModel model, EntityTrackerBase entityTracker, IODataMaterializerContext materializerContext);
    internal bool get_Tracking();
    internal static void MergeEntityDescriptorInfo(EntityDescriptor trackedEntityDescriptor, EntityDescriptor entityDescriptorFromMaterializer, bool mergeInfo, MergeOption mergeOption);
    internal void ApplyToContext();
    internal void Clear();
    internal void FoundExistingInstance(MaterializerEntry entry);
    internal void FoundTargetInstance(MaterializerEntry entry);
    internal bool TryResolve(MaterializerEntry entry, MaterializerEntry& existingEntry);
    internal void AddedLink(MaterializerEntry source, string propertyName, object target);
    internal void CreatedInstance(MaterializerEntry entry);
    internal void RemovedLink(MaterializerEntry source, string propertyName, object target);
    internal void SetLink(MaterializerEntry source, string propertyName, object target);
    private static bool IsEntity(MaterializerEntry entry);
    private static bool IsEntity(object entity, ClientEdmModel model);
}
internal abstract class Microsoft.OData.Client.ODataItemWrapper : object {
    public ODataItem Item { get; }
    public abstract virtual ODataItem get_Item();
}
internal class Microsoft.OData.Client.ODataMessageReadingHelper : object {
    private ResponseInfo responseInfo;
    internal ODataMessageReadingHelper(ResponseInfo responseInfo);
    internal ODataMessageReaderSettings CreateSettings();
    internal ODataMessageReader CreateReader(IODataResponseMessage responseMessage, ODataMessageReaderSettings settings);
}
internal class Microsoft.OData.Client.ODataMessageWritingHelper : object {
    private RequestInfo requestInfo;
    internal ODataMessageWritingHelper(RequestInfo requestInfo);
    internal ODataMessageWriterSettings CreateSettings(bool isBatchPartRequest, bool enableWritingODataAnnotationWithoutPrefix);
    internal ODataMessageWriterSettings CreateDeltaSettings();
    internal ODataMessageWriter CreateWriter(IODataRequestMessage requestMessage, ODataMessageWriterSettings writerSettings, bool isParameterPayload);
    internal ODataRequestMessageWrapper CreateRequestMessage(BuildingRequestEventArgs requestMessageArgs);
}
internal class Microsoft.OData.Client.ODataNestedResourceInfoWrapper : ODataItemWrapper {
    [CompilerGeneratedAttribute]
private ODataNestedResourceInfo <NestedResourceInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataItemWrapper <NestedResourceOrResourceSet>k__BackingField;
    public ODataNestedResourceInfo NestedResourceInfo { get; public set; }
    public ODataItemWrapper NestedResourceOrResourceSet { get; public set; }
    public ODataItem Item { get; }
    [CompilerGeneratedAttribute]
public ODataNestedResourceInfo get_NestedResourceInfo();
    [CompilerGeneratedAttribute]
public void set_NestedResourceInfo(ODataNestedResourceInfo value);
    [CompilerGeneratedAttribute]
public ODataItemWrapper get_NestedResourceOrResourceSet();
    [CompilerGeneratedAttribute]
public void set_NestedResourceOrResourceSet(ODataItemWrapper value);
    public virtual ODataItem get_Item();
}
internal class Microsoft.OData.Client.ODataPropertyConverter : object {
    private RequestInfo requestInfo;
    internal ODataPropertyConverter(RequestInfo requestInfo);
    internal IEnumerable`1<ODataProperty> PopulateProperties(object resource, string serverTypeName, IEnumerable`1<ClientPropertyAnnotation> properties);
    private void PopulateDynamicProperties(object resource, string serverTypeName, List`1<ODataProperty> odataProperties);
    internal ODataResourceWrapper CreateODataResourceWrapperForComplex(Type complexType, object instance, string propertyName, HashSet`1<object> visitedComplexTypeObjects);
    internal IEnumerable`1<ODataNestedResourceInfoWrapper> PopulateNestedComplexProperties(object resource, string serverTypeName, IEnumerable`1<ClientPropertyAnnotation> properties, HashSet`1<object> visitedComplexTypeObjects);
    private void PopulateNestedComplexDynamicProperties(object resource, string serverTypeName, HashSet`1<object> visitedComplexTypeObjects, List`1<ODataNestedResourceInfoWrapper> odataNestedResourceInfoWrappers);
    internal ODataResource CreateODataEntry(Type entityType, object value, ClientPropertyAnnotation[] properties);
    internal ODataResourceWrapper CreateODataResourceWrapper(Type entityType, object value, ClientPropertyAnnotation[] properties);
    internal IEnumerable`1<ODataResource> CreateODataEntries(Type entityType, object value);
    internal ODataEnumValue CreateODataEnumValue(Type enumClrType, object value, bool isCollectionItem);
    internal ODataCollectionValue CreateODataCollection(Type collectionItemType, string propertyName, object value, HashSet`1<object> visitedComplexTypeObjects, bool isDynamicProperty, bool setTypeAnnotation);
    internal ODataResourceSetWrapper CreateODataResourceSetWrapperForComplexCollection(Type collectionItemType, string propertyName, object value, HashSet`1<object> visitedComplexTypeObjects, bool isDynamicProperty, bool setTypeAnnotation);
    internal static object ConvertPrimitiveValueToRecognizedODataType(object propertyValue, Type propertyType);
    private static string GetCollectionName(string itemTypeName);
    private static ODataValue CreateODataPrimitivePropertyValue(ClientPropertyAnnotation property, object propertyValue);
    public static ODataValue CreateODataPrimitiveValue(Type propertyType, object propertyValue);
    private IEnumerable`1<ODataProperty> PopulateProperties(object resource, string serverTypeName, IEnumerable`1<ClientPropertyAnnotation> properties, HashSet`1<object> visitedComplexTypeObjects);
    private bool TryConvertPropertyValue(ClientPropertyAnnotation property, object propertyValue, string serverTypeName, HashSet`1<object> visitedComplexTypeObjects, ODataValue& odataValue);
    private bool TryConvertDynamicPropertyValue(Type clientType, string dynamicPropertyName, object value, string serverTypeName, ODataValue& odataValue);
    private bool TryConvertPropertyToResourceOrResourceSet(ClientPropertyAnnotation property, object propertyValue, string serverTypeName, HashSet`1<object> visitedComplexTypeObjects, ODataItemWrapper& odataItem);
    private ODataItemWrapper ConvertDynamicPropertyToResourceOrResourceSet(string propertyName, object propertyValue, string serverTypeName, HashSet`1<object> visitedComplexTypeObjects);
    private ODataResourceWrapper CreateODataComplexPropertyResource(ClientPropertyAnnotation property, object propertyValue, HashSet`1<object> visitedComplexTypeObjects);
    private ODataResourceWrapper CreateODataComplexDynamicPropertyResouce(string propertyName, object propertyValue, HashSet`1<object> visitedComplexTypeObjects);
    private ODataCollectionValue CreateODataCollectionPropertyValue(ClientPropertyAnnotation property, object propertyValue, string serverTypeName, HashSet`1<object> visitedComplexTypeObjects);
    private ODataResourceSetWrapper CreateODataComplexCollectionPropertyResourceSet(ClientPropertyAnnotation property, object propertyValue, string serverTypeName, HashSet`1<object> visitedComplexTypeObjects);
    private ODataResourceSetWrapper CreateODataComplexCollectionDynamicPropertyResourceSet(string propertyName, object propertyValue, string serverTypeName, HashSet`1<object> visitedComplexTypeObjects);
    private void AddTypeAnnotationNotDeclaredOnServer(string serverTypeName, ClientPropertyAnnotation property, ODataValue odataValue);
}
public enum Microsoft.OData.Client.ODataProtocolVersion : Enum {
    public int value__;
    public static ODataProtocolVersion V4;
    public static ODataProtocolVersion V401;
}
internal abstract class Microsoft.OData.Client.ODataRequestMessageWrapper : object {
    private DataServiceClientRequestMessage requestMessage;
    private RequestInfo requestInfo;
    [CompilerGeneratedAttribute]
private Descriptor <Descriptor>k__BackingField;
    internal Descriptor Descriptor { get; private set; }
    internal ContentStream CachedRequestStream { get; }
    unknown bool SendChunked {internal set; }
    internal bool IsBatchPartRequest { get; }
    protected ODataRequestMessageWrapper(DataServiceClientRequestMessage requestMessage, RequestInfo requestInfo, Descriptor descriptor);
    [CompilerGeneratedAttribute]
internal Descriptor get_Descriptor();
    [CompilerGeneratedAttribute]
private void set_Descriptor(Descriptor value);
    internal abstract virtual ContentStream get_CachedRequestStream();
    internal void set_SendChunked(bool value);
    internal abstract virtual bool get_IsBatchPartRequest();
    internal static ODataRequestMessageWrapper CreateBatchPartRequestMessage(ODataBatchWriter batchWriter, BuildingRequestEventArgs requestMessageArgs, RequestInfo requestInfo, string contentId, bool isRelativeUri);
    internal static ODataRequestMessageWrapper CreateRequestMessageWrapper(BuildingRequestEventArgs requestMessageArgs, RequestInfo requestInfo);
    internal abstract virtual ODataMessageWriter CreateWriter(ODataMessageWriterSettings writerSettings, bool isParameterPayload);
    internal void Abort();
    internal void SetHeader(string headerName, string headerValue);
    internal IAsyncResult BeginGetRequestStream(AsyncCallback callback, object state);
    internal Stream EndGetRequestStream(IAsyncResult asyncResult);
    internal void SetRequestStream(ContentStream requestStreamContent);
    internal IAsyncResult BeginGetResponse(AsyncCallback callback, object state);
    internal IODataResponseMessage EndGetResponse(IAsyncResult asyncResult);
    internal IODataResponseMessage GetResponse();
    internal void SetContentLengthHeader();
    internal void FireSendingEventHandlers(Descriptor descriptor);
    internal void FireSendingRequest2(Descriptor descriptor, bool isBulkUpdate);
}
internal abstract class Microsoft.OData.Client.ODataResourceMetadataBuilder : object {
    [CompilerGeneratedAttribute]
private ODataResourceMetadataBuilder <ParentMetadataBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFromCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NameAsProperty>k__BackingField;
    internal ODataResourceMetadataBuilder ParentMetadataBuilder { get; internal set; }
    internal bool IsFromCollection { get; internal set; }
    internal string NameAsProperty { get; internal set; }
    [CompilerGeneratedAttribute]
internal ODataResourceMetadataBuilder get_ParentMetadataBuilder();
    [CompilerGeneratedAttribute]
internal void set_ParentMetadataBuilder(ODataResourceMetadataBuilder value);
    [CompilerGeneratedAttribute]
internal bool get_IsFromCollection();
    [CompilerGeneratedAttribute]
internal void set_IsFromCollection(bool value);
    [CompilerGeneratedAttribute]
internal string get_NameAsProperty();
    [CompilerGeneratedAttribute]
internal void set_NameAsProperty(string value);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal abstract virtual Uri GetEditLink();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal abstract virtual Uri GetReadLink();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal abstract virtual Uri GetId();
    internal abstract virtual bool TryGetIdForSerialization(Uri& id);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal abstract virtual string GetETag();
    internal virtual Uri GetStreamEditLink(string streamPropertyName);
    internal virtual Uri GetStreamReadLink(string streamPropertyName);
    internal virtual Uri GetNavigationLinkUri(string navigationPropertyName, Uri navigationLinkUrl, bool hasNestedResourceInfoUrl);
    internal virtual Uri GetAssociationLinkUri(string navigationPropertyName, Uri associationLinkUrl, bool hasAssociationLinkUrl);
    internal virtual Uri GetOperationTargetUri(string operationName, string bindingParameterTypeName, string parameterNames);
    internal virtual string GetOperationTitle(string operationName);
}
internal class Microsoft.OData.Client.ODataResourceSetWrapper : ODataItemWrapper {
    [CompilerGeneratedAttribute]
private ODataResourceSet <ResourceSet>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataResourceWrapper> <Resources>k__BackingField;
    public ODataResourceSet ResourceSet { get; public set; }
    public IEnumerable`1<ODataResourceWrapper> Resources { get; public set; }
    public ODataItem Item { get; }
    [CompilerGeneratedAttribute]
public ODataResourceSet get_ResourceSet();
    [CompilerGeneratedAttribute]
public void set_ResourceSet(ODataResourceSet value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ODataResourceWrapper> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IEnumerable`1<ODataResourceWrapper> value);
    public virtual ODataItem get_Item();
}
internal class Microsoft.OData.Client.ODataResourceWrapper : ODataItemWrapper {
    [CompilerGeneratedAttribute]
private ODataResource <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataNestedResourceInfoWrapper> <NestedResourceInfoWrappers>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Instance>k__BackingField;
    public ODataResource Resource { get; public set; }
    public IEnumerable`1<ODataNestedResourceInfoWrapper> NestedResourceInfoWrappers { get; public set; }
    public ODataItem Item { get; }
    public object Instance { get; public set; }
    [CompilerGeneratedAttribute]
public ODataResource get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(ODataResource value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ODataNestedResourceInfoWrapper> get_NestedResourceInfoWrappers();
    [CompilerGeneratedAttribute]
public void set_NestedResourceInfoWrappers(IEnumerable`1<ODataNestedResourceInfoWrapper> value);
    public virtual ODataItem get_Item();
    [CompilerGeneratedAttribute]
public object get_Instance();
    [CompilerGeneratedAttribute]
public void set_Instance(object value);
}
internal abstract class Microsoft.OData.Client.ODataUriBuilder : object {
    internal virtual Uri BuildBaseUri();
    internal virtual Uri BuildEntitySetUri(Uri baseUri, string entitySetName);
    internal virtual Uri BuildEntityInstanceUri(Uri baseUri, IEdmStructuredValue entityInstance);
    internal virtual Uri BuildStreamEditLinkUri(Uri baseUri, string streamPropertyName);
    internal virtual Uri BuildStreamReadLinkUri(Uri baseUri, string streamPropertyName);
    internal virtual Uri BuildNavigationLinkUri(Uri baseUri, string navigationPropertyName);
    internal virtual Uri BuildAssociationLinkUri(Uri baseUri, string navigationPropertyName);
    internal virtual Uri BuildOperationTargetUri(Uri baseUri, string operationName, string bindingParameterTypeName, string parameterNames);
    internal virtual Uri AppendTypeSegment(Uri baseUri, string typeName);
}
internal static class Microsoft.OData.Client.ODataWriterHelper : object {
    public static void WriteResourceSet(ODataWriter writer, ODataResourceSetWrapper resourceSetWrapper);
    public static void WriteResource(ODataWriter writer, ODataResourceWrapper resourceWrapper);
    public static void WriteNestedResourceInfo(ODataWriter writer, ODataNestedResourceInfoWrapper nestedResourceInfo);
    private static void WriteItem(ODataWriter writer, ODataItemWrapper odataItemWrapper);
}
internal class Microsoft.OData.Client.ODataWriterWrapper : object {
    private ODataWriter odataWriter;
    private DataServiceClientRequestPipelineConfiguration requestPipeline;
    private ODataWriterWrapper(ODataWriter odataWriter, DataServiceClientRequestPipelineConfiguration requestPipeline);
    internal static ODataWriterWrapper CreateForEntry(ODataMessageWriter messageWriter, DataServiceClientRequestPipelineConfiguration requestPipeline);
    internal static ODataWriterWrapper CreateForDeltaFeed(ODataMessageWriter messageWriter, string entitySetName, DataServiceClientRequestPipelineConfiguration requestPipeline, ODataRequestMessageWrapper messageWrapper, RequestInfo requestInfo);
    internal static ODataWriterWrapper CreateForEntryTest(ODataWriter writer, DataServiceClientRequestPipelineConfiguration requestPipeline);
    internal void WriteStart(ODataResourceSet resourceSet);
    internal void WriteStart(ODataDeletedResource deletedResource);
    internal void WriteStart(ODataDeltaResourceSet resourceSet);
    internal void WriteEnd();
    internal void WriteStartResource(ODataResource resource);
    internal void WriteStart(ODataResource resource, object entity);
    internal void WriteEnd(ODataResource entry, object entity);
    internal void WriteEnd(ODataNestedResourceInfo navlink, object source, object target);
    internal void WriteNestedResourceInfoEnd(ODataNestedResourceInfo navlink, object source, object target);
    internal void WriteNestedResourceInfoEnd();
    internal void WriteStart(ODataNestedResourceInfo navigationLink, object source, object target);
    internal void WriteNestedResourceInfoStart(ODataNestedResourceInfo navigationLink, object source, object target);
    internal void WriteNestedResourceInfoStart(ODataNestedResourceInfo navigationLink);
    internal void WriteEntityReferenceLink(ODataEntityReferenceLink referenceLink, object source, object target);
}
public abstract class Microsoft.OData.Client.OperationDescriptor : Descriptor {
    private string title;
    private Uri metadata;
    private Uri target;
    public string Title { get; internal set; }
    public Uri Metadata { get; internal set; }
    public Uri Target { get; internal set; }
    internal DescriptorKind DescriptorKind { get; }
    public string get_Title();
    internal void set_Title(string value);
    public Uri get_Metadata();
    internal void set_Metadata(Uri value);
    public Uri get_Target();
    internal void set_Target(Uri value);
    internal virtual DescriptorKind get_DescriptorKind();
    internal virtual void ClearChanges();
}
public abstract class Microsoft.OData.Client.OperationParameter : object {
    private string parameterName;
    private object parameterValue;
    public string Name { get; }
    public object Value { get; }
    protected OperationParameter(string name, object value);
    public string get_Name();
    public object get_Value();
}
[SuppressMessageAttribute("Microsoft.Design", "CA1010")]
[SuppressMessageAttribute("Microsoft.Naming", "CA1710")]
public abstract class Microsoft.OData.Client.OperationResponse : object {
    private HeaderCollection headers;
    private int statusCode;
    private Exception innerException;
    private List`1<OperationResponse> nestedResponses;
    public IDictionary`2<string, string> Headers { get; }
    public int StatusCode { get; internal set; }
    public Exception Error { get; public set; }
    internal HeaderCollection HeaderCollection { get; }
    internal List`1<OperationResponse> NestedResponses { get; internal set; }
    internal OperationResponse(HeaderCollection headers);
    public IDictionary`2<string, string> get_Headers();
    public int get_StatusCode();
    internal void set_StatusCode(int value);
    public Exception get_Error();
    public void set_Error(Exception value);
    internal HeaderCollection get_HeaderCollection();
    internal List`1<OperationResponse> get_NestedResponses();
    internal void set_NestedResponses(List`1<OperationResponse> value);
}
internal class Microsoft.OData.Client.OrderByQueryOptionExpression : QueryOptionExpression {
    private List`1<Selector> selectors;
    public ExpressionType NodeType { get; }
    internal List`1<Selector> Selectors { get; }
    internal OrderByQueryOptionExpression(Type type, List`1<Selector> selectors);
    public virtual ExpressionType get_NodeType();
    internal List`1<Selector> get_Selectors();
}
[AttributeUsageAttribute("32767")]
public class Microsoft.OData.Client.OriginalNameAttribute : Attribute {
    private string originalName;
    public string OriginalName { get; }
    public OriginalNameAttribute(string originalName);
    public string get_OriginalName();
}
internal class Microsoft.OData.Client.ParameterReplacerVisitor : ALinqExpressionVisitor {
    private Expression newExpression;
    private ParameterExpression oldParameter;
    private ParameterReplacerVisitor(ParameterExpression oldParameter, Expression newExpression);
    internal static Expression Replace(Expression expression, ParameterExpression oldParameter, Expression newExpression);
    internal virtual Expression VisitParameter(ParameterExpression p);
}
[ExtensionAttribute]
[SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
internal static class Microsoft.OData.Client.PlatformHelper : object {
    [SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
internal static Type[] EmptyTypes;
    internal static Regex DateValidator;
    internal static Regex TimeOfDayValidator;
    internal static Regex PotentialDateTimeOffsetValidator;
    internal static string UriSchemeHttp;
    internal static string UriSchemeHttps;
    private static PlatformHelper();
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static Assembly GetAssembly(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsValueType(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsAbstract(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsGenericType(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsGenericTypeDefinition(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsVisible(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsInterface(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsClass(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsEnum(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static Type GetBaseType(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool ContainsGenericParameters(Type type);
    internal static bool TryConvertStringToDate(string text, Date& date);
    internal static Date ConvertStringToDate(string text);
    internal static bool TryConvertStringToTimeOfDay(string text, TimeOfDay& timeOfDay);
    internal static TimeOfDay ConvertStringToTimeOfDay(string text);
    internal static DateTimeOffset ConvertStringToDateTimeOffset(string text);
    internal static DateTime ConvertStringToDateTime(string text);
    internal static DateTimeOffset ConvertDateTimeToDateTimeOffset(DateTime dt);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
private static void ValidateTimeZoneInformationInDateTimeOffsetString(string text);
    internal static string AddSecondsPaddingIfMissing(string text);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static Type GetTypeOrThrow(string typeName);
    internal static UnicodeCategory GetUnicodeCategory(char c);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsProperty(MemberInfo member);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsPrimitive(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsSealed(Type type);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsMethod(MemberInfo member);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool AreMembersEqual(MemberInfo member1, MemberInfo member2);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static IEnumerable`1<PropertyInfo> GetPublicProperties(Type type, bool instanceOnly);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static IEnumerable`1<PropertyInfo> GetPublicProperties(Type type, bool instanceOnly, bool declaredOnly);
    [ExtensionAttribute]
internal static IEnumerable`1<PropertyInfo> GetNonPublicProperties(Type type, bool instanceOnly, bool declaredOnly);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static IEnumerable`1<ConstructorInfo> GetInstanceConstructors(Type type, bool isPublic);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static ConstructorInfo GetInstanceConstructor(Type type, bool isPublic, Type[] argTypes);
    [ExtensionAttribute]
[SuppressMessageAttribute("Design", "CA1031:Do not catch general exception types")]
internal static bool TryGetMethod(Type type, string name, Type[] parameterTypes, MethodInfo& foundMethod);
    [ExtensionAttribute]
internal static IEnumerable`1<MethodInfo> GetMethods(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static MethodInfo GetMethod(Type type, string name, bool isPublic, bool isStatic);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static MethodInfo GetMethod(Type type, string name, Type[] types, bool isPublic, bool isStatic);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static IEnumerable`1<MethodInfo> GetPublicStaticMethods(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static IEnumerable`1<Type> GetNonPublicNestedTypes(Type type);
    private static bool CheckTypeArgs(ConstructorInfo constructorInfo, Type[] types);
    [ExtensionAttribute]
internal static bool IsAssignableFrom(Type thisType, Type otherType);
    [ExtensionAttribute]
internal static bool IsSubclassOf(Type thisType, Type otherType);
    [ExtensionAttribute]
internal static MethodInfo GetMethod(Type type, string name);
    [ExtensionAttribute]
internal static MethodInfo GetMethod(Type type, string name, Type[] types);
    [ExtensionAttribute]
internal static MethodInfo GetMethodWithGenericArgs(Type type, string name, bool isPublic, bool isStatic, int genericArgCount);
    [ExtensionAttribute]
internal static PropertyInfo GetProperty(Type type, string name, Type returnType);
    [ExtensionAttribute]
internal static PropertyInfo GetProperty(Type type, string name);
    [ExtensionAttribute]
internal static MethodInfo GetGetMethod(PropertyInfo propertyInfo);
    [ExtensionAttribute]
internal static MethodInfo GetSetMethod(PropertyInfo propertyInfo);
    [ExtensionAttribute]
internal static MethodInfo GetBaseDefinition(MethodInfo methodInfo);
    [ExtensionAttribute]
internal static IEnumerable`1<PropertyInfo> GetProperties(Type type);
    [ExtensionAttribute]
internal static IEnumerable`1<FieldInfo> GetFields(Type type);
    [ExtensionAttribute]
internal static IEnumerable`1<object> GetCustomAttributes(Type type, Type attributeType, bool inherit);
    [ExtensionAttribute]
internal static IEnumerable`1<object> GetCustomAttributes(Type type, bool inherit);
    [ExtensionAttribute]
internal static Type[] GetGenericArguments(Type type);
    [ExtensionAttribute]
internal static IEnumerable`1<Type> GetInterfaces(Type type);
    [ExtensionAttribute]
internal static bool IsInstanceOfType(Type type, object obj);
    [ExtensionAttribute]
internal static Type GetType(Assembly assembly, string typeName, bool throwOnError);
    [ExtensionAttribute]
internal static IEnumerable`1<Type> GetTypes(Assembly assembly);
    [ExtensionAttribute]
internal static FieldInfo GetField(Type type, string name);
    private static bool IsInstance(PropertyInfo propertyInfo);
    private static bool IsPublic(PropertyInfo propertyInfo);
    public static Regex CreateCompiled(string pattern, RegexOptions options);
}
internal abstract class Microsoft.OData.Client.PrimitiveParserToken : object {
    internal abstract virtual object Materialize(Type clrType);
}
internal class Microsoft.OData.Client.PrimitiveType : object {
    private static Dictionary`2<Type, PrimitiveType> clrMapping;
    private static Dictionary`2<Type, PrimitiveType> derivedPrimitiveTypeMapping;
    private static Dictionary`2<string, PrimitiveType> edmMapping;
    private static HashSet`1<Type> knownNonPrimitiveTypes;
    [CompilerGeneratedAttribute]
private Type <ClrType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EdmTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private PrimitiveTypeConverter <TypeConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasReverseMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private EdmPrimitiveTypeKind <PrimitiveKind>k__BackingField;
    internal Type ClrType { get; private set; }
    internal string EdmTypeName { get; private set; }
    internal PrimitiveTypeConverter TypeConverter { get; private set; }
    internal bool HasReverseMapping { get; private set; }
    internal EdmPrimitiveTypeKind PrimitiveKind { get; private set; }
    [SuppressMessageAttribute("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
private static PrimitiveType();
    private PrimitiveType(Type clrType, string edmTypeName, EdmPrimitiveTypeKind primitiveKind, PrimitiveTypeConverter typeConverter, bool hasReverseMapping);
    [CompilerGeneratedAttribute]
internal Type get_ClrType();
    [CompilerGeneratedAttribute]
private void set_ClrType(Type value);
    [CompilerGeneratedAttribute]
internal string get_EdmTypeName();
    [CompilerGeneratedAttribute]
private void set_EdmTypeName(string value);
    [CompilerGeneratedAttribute]
internal PrimitiveTypeConverter get_TypeConverter();
    [CompilerGeneratedAttribute]
private void set_TypeConverter(PrimitiveTypeConverter value);
    [CompilerGeneratedAttribute]
internal bool get_HasReverseMapping();
    [CompilerGeneratedAttribute]
private void set_HasReverseMapping(bool value);
    [CompilerGeneratedAttribute]
internal EdmPrimitiveTypeKind get_PrimitiveKind();
    [CompilerGeneratedAttribute]
private void set_PrimitiveKind(EdmPrimitiveTypeKind value);
    internal static bool TryGetPrimitiveType(Type clrType, PrimitiveType& ptype);
    internal static bool TryGetPrimitiveType(string edmTypeName, PrimitiveType& ptype);
    internal static bool IsKnownType(Type type);
    internal static bool IsKnownNullableType(Type type);
    internal static void DeleteKnownType(Type clrType, string edmTypeName);
    internal static void RegisterKnownType(Type clrType, string edmTypeName, EdmPrimitiveTypeKind primitiveKind, PrimitiveTypeConverter converter, bool twoWay);
    internal IEdmPrimitiveType CreateEdmPrimitiveType();
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")]
private static void InitializeTypes();
    private static bool TryGetWellKnownPrimitiveType(Type clrType, PrimitiveType& ptype);
    private static bool IsBinaryType(Type type);
}
internal class Microsoft.OData.Client.PrimitiveTypeConverter : object {
    internal virtual PrimitiveParserToken TokenizeFromXml(XmlReader reader);
    internal virtual PrimitiveParserToken TokenizeFromText(string text);
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal static class Microsoft.OData.Client.ProjectionAnalyzer : object {
    internal static bool Analyze(LambdaExpression le, ResourceExpression re, bool matchMembers, DataServiceContext context);
    private static void Analyze(LambdaExpression e, SelectExpandPathBuilder pb, DataServiceContext context);
    internal static bool IsMethodCallAllowedEntitySequence(MethodCallExpression call);
    internal static void CheckChainedSequence(MethodCallExpression call, Type type);
    internal static bool IsCollectionProducingExpression(Expression e);
    internal static bool IsDisallowedExpressionForMethodCall(Expression e, ClientEdmModel model);
    private static void Analyze(MemberInitExpression mie, SelectExpandPathBuilder pb, DataServiceContext context);
    private static void AnalyzeResourceExpression(LambdaExpression lambda, ResourceExpression resource, DataServiceContext context);
    private static Expression SkipConverts(Expression expression);
}
[DebuggerDisplayAttribute("{ToString()}")]
internal class Microsoft.OData.Client.ProjectionPath : List`1<ProjectionPathSegment> {
    [CompilerGeneratedAttribute]
private ParameterExpression <Root>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <RootEntry>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <ExpectedRootType>k__BackingField;
    internal ParameterExpression Root { get; private set; }
    internal Expression RootEntry { get; private set; }
    internal Expression ExpectedRootType { get; private set; }
    internal ProjectionPath(ParameterExpression root, Expression expectedRootType, Expression rootEntry);
    internal ProjectionPath(ParameterExpression root, Expression expectedRootType, Expression rootEntry, IEnumerable`1<Expression> members);
    [CompilerGeneratedAttribute]
internal ParameterExpression get_Root();
    [CompilerGeneratedAttribute]
private void set_Root(ParameterExpression value);
    [CompilerGeneratedAttribute]
internal Expression get_RootEntry();
    [CompilerGeneratedAttribute]
private void set_RootEntry(Expression value);
    [CompilerGeneratedAttribute]
internal Expression get_ExpectedRootType();
    [CompilerGeneratedAttribute]
private void set_ExpectedRootType(Expression value);
    public virtual string ToString();
}
internal class Microsoft.OData.Client.ProjectionPathBuilder : object {
    private Stack`1<bool> entityInScope;
    private List`1<MemberInitRewrite> rewrites;
    private Stack`1<ParameterExpression> parameterExpressions;
    private Stack`1<Expression> parameterExpressionTypes;
    private Stack`1<Expression> parameterEntries;
    private Stack`1<Type> parameterProjectionTypes;
    internal bool CurrentIsEntity { get; }
    internal Expression ExpectedParamTypeInScope { get; }
    internal bool HasRewrites { get; }
    internal Expression LambdaParameterInScope { get; }
    internal Expression ParameterEntryInScope { get; }
    internal bool get_CurrentIsEntity();
    internal Expression get_ExpectedParamTypeInScope();
    internal bool get_HasRewrites();
    internal Expression get_LambdaParameterInScope();
    internal Expression get_ParameterEntryInScope();
    public virtual string ToString();
    internal void EnterLambdaScope(LambdaExpression lambda, Expression entry, Expression expectedType);
    internal void EnterMemberInit(MemberInitExpression init);
    internal Expression GetRewrite(Expression expression);
    internal void LeaveLambdaScope();
    internal void LeaveMemberInit();
    internal void RegisterRewrite(Expression root, String[] names, Expression rewriteExpression);
    internal void RevokeRewrite(Expression root, String[] names);
}
[DebuggerDisplayAttribute("Segment {ProjectionType} {Member}")]
internal class Microsoft.OData.Client.ProjectionPathSegment : object {
    [CompilerGeneratedAttribute]
private string <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ProjectionType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <SourceTypeAs>k__BackingField;
    [CompilerGeneratedAttribute]
private ProjectionPath <StartPath>k__BackingField;
    internal string Member { get; private set; }
    internal Type ProjectionType { get; internal set; }
    internal Type SourceTypeAs { get; internal set; }
    internal ProjectionPath StartPath { get; private set; }
    internal ProjectionPathSegment(ProjectionPath startPath, string member, Type projectionType);
    internal ProjectionPathSegment(ProjectionPath startPath, MemberExpression memberExpression);
    [CompilerGeneratedAttribute]
internal string get_Member();
    [CompilerGeneratedAttribute]
private void set_Member(string value);
    [CompilerGeneratedAttribute]
internal Type get_ProjectionType();
    [CompilerGeneratedAttribute]
internal void set_ProjectionType(Type value);
    [CompilerGeneratedAttribute]
internal Type get_SourceTypeAs();
    [CompilerGeneratedAttribute]
internal void set_SourceTypeAs(Type value);
    [CompilerGeneratedAttribute]
internal ProjectionPath get_StartPath();
    [CompilerGeneratedAttribute]
private void set_StartPath(ProjectionPath value);
}
internal class Microsoft.OData.Client.ProjectionPlan : object {
    [CompilerGeneratedAttribute]
private Type <LastSegmentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`4<object, object, Type, object> <Plan>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ProjectedType>k__BackingField;
    internal Type LastSegmentType { get; internal set; }
    internal Func`4<object, object, Type, object> Plan { get; internal set; }
    internal Type ProjectedType { get; internal set; }
    [CompilerGeneratedAttribute]
internal Type get_LastSegmentType();
    [CompilerGeneratedAttribute]
internal void set_LastSegmentType(Type value);
    [CompilerGeneratedAttribute]
internal Func`4<object, object, Type, object> get_Plan();
    [CompilerGeneratedAttribute]
internal void set_Plan(Func`4<object, object, Type, object> value);
    [CompilerGeneratedAttribute]
internal Type get_ProjectedType();
    [CompilerGeneratedAttribute]
internal void set_ProjectedType(Type value);
    internal object Run(ODataEntityMaterializer materializer, ODataResource entry, Type expectedType);
}
internal class Microsoft.OData.Client.ProjectionPlanCompiler : ALinqExpressionVisitor {
    private static DynamicProxyMethodGenerator dynamicProxyMethodGenerator;
    private Dictionary`2<Expression, ExpressionAnnotation> annotations;
    private ParameterExpression materializerExpression;
    private Dictionary`2<Expression, Expression> normalizerRewrites;
    private int identifierId;
    private ProjectionPathBuilder pathBuilder;
    private bool topLevelProjectionFound;
    private IODataMaterializerContext materializerContext;
    private ProjectionPlanCompiler(Dictionary`2<Expression, Expression> normalizerRewrites, IODataMaterializerContext materializerContext);
    private static ProjectionPlanCompiler();
    internal static ProjectionPlan CompilePlan(LambdaExpression projection, Dictionary`2<Expression, Expression> normalizerRewrites, IODataMaterializerContext materializerContext);
    internal virtual Expression VisitBinary(BinaryExpression b);
    internal virtual Expression VisitConditional(ConditionalExpression conditional);
    internal virtual Expression VisitUnary(UnaryExpression u);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitParameter(ParameterExpression p);
    internal virtual Expression VisitMemberInit(MemberInitExpression init);
    internal virtual Expression VisitMethodCall(MethodCallExpression m);
    internal virtual Expression Visit(Expression exp);
    internal virtual Expression VisitLambda(LambdaExpression lambda);
    private static Expression CallMaterializer(string methodName, Expression[] arguments);
    private static Expression CallMaterializerWithType(string methodName, Type[] typeArguments, Expression[] arguments);
    private static Expression RebindConstructor(ConstructorInfo info, Expression[] arguments);
    private Expression CallCheckValueForPathIsNull(Expression entry, Expression entryType, ProjectionPath path);
    private Expression CallValueForPath(Expression entry, Expression entryType, ProjectionPath path);
    private Expression CallValueForPathWithType(Expression entry, Expression entryType, ProjectionPath path, Type type);
    private Expression RebindConditionalNullCheck(ConditionalExpression conditional, MatchNullCheckResult nullCheck);
    private Expression RebindEntityMemberInit(MemberInitExpression init);
    private Expression GetDeepestEntry(Expression[] path);
    private Expression GetExpressionBeforeNormalization(Expression expression);
    private Expression RebindParameter(Expression expression, ExpressionAnnotation annotation);
    private Expression RebindMemberAccess(MemberExpression m, ExpressionAnnotation baseAnnotation);
    private Expression RebindNewExpressionForDataServiceCollectionOfT(NewExpression nex);
    private Expression RebindMethodCallForMemberSelect(MethodCallExpression call);
    private Expression RebindMethodCallForMemberToList(MethodCallExpression call);
    private Expression RebindMethodCallForNewSequence(MethodCallExpression call);
    private Expression TypedEnumerableToList(Expression source, Type targetType);
}
internal class Microsoft.OData.Client.ProjectionQueryOptionExpression : QueryOptionExpression {
    private LambdaExpression lambda;
    private List`1<string> paths;
    public ExpressionType NodeType { get; }
    internal LambdaExpression Selector { get; }
    internal List`1<string> Paths { get; }
    internal ProjectionQueryOptionExpression(Type type, LambdaExpression lambda, List`1<string> paths);
    public virtual ExpressionType get_NodeType();
    internal LambdaExpression get_Selector();
    internal List`1<string> get_Paths();
}
internal class Microsoft.OData.Client.ProjectionRewriter : ALinqExpressionVisitor {
    private ParameterExpression newLambdaParameter;
    private ParameterExpression oldLambdaParameter;
    private ResourceExpression projectionSource;
    private bool successfulRebind;
    private ProjectionRewriter(Type proposedParameterType);
    internal static LambdaExpression TryToRewrite(LambdaExpression le, ResourceExpression source);
    internal LambdaExpression Rebind(LambdaExpression lambda, ResourceExpression source);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
}
internal class Microsoft.OData.Client.Providers.EdmComplexTypeWithDelayLoadedProperties : EdmComplexType {
    private object lockObject;
    private Action`1<EdmComplexTypeWithDelayLoadedProperties> propertyLoadAction;
    public IEnumerable`1<IEdmProperty> DeclaredProperties { get; }
    internal EdmComplexTypeWithDelayLoadedProperties(string namespaceName, string name, IEdmComplexType baseType, bool isAbstract, bool isOpen, Action`1<EdmComplexTypeWithDelayLoadedProperties> propertyLoadAction);
    public virtual IEnumerable`1<IEdmProperty> get_DeclaredProperties();
    private void EnsurePropertyLoaded();
}
internal class Microsoft.OData.Client.Providers.EdmEntityTypeWithDelayLoadedProperties : EdmEntityType {
    private object lockObject;
    private Action`1<EdmEntityTypeWithDelayLoadedProperties> propertyLoadAction;
    public IEnumerable`1<IEdmStructuralProperty> DeclaredKey { get; }
    public IEnumerable`1<IEdmProperty> DeclaredProperties { get; }
    internal EdmEntityTypeWithDelayLoadedProperties(string namespaceName, string name, IEdmEntityType baseType, bool isAbstract, bool isOpen, bool hasStream, Action`1<EdmEntityTypeWithDelayLoadedProperties> propertyLoadAction);
    public virtual IEnumerable`1<IEdmStructuralProperty> get_DeclaredKey();
    public virtual IEnumerable`1<IEdmProperty> get_DeclaredProperties();
    private void EnsurePropertyLoaded();
}
internal class Microsoft.OData.Client.Providers.EdmEnumTypeWithDelayLoadedMembers : EdmEnumType {
    private object lockObject;
    private Action`1<EdmEnumTypeWithDelayLoadedMembers> memberLoadAction;
    public IEnumerable`1<IEdmEnumMember> Members { get; }
    internal EdmEnumTypeWithDelayLoadedMembers(string namespaceName, string name, IEdmPrimitiveType underlyingType, bool isFlags, Action`1<EdmEnumTypeWithDelayLoadedMembers> memberLoadAction);
    public virtual IEnumerable`1<IEdmEnumMember> get_Members();
    private void EnsureMemberLoaded();
}
[DebuggerDisplayAttribute("QueryableResourceExpression {Source}.{MemberExpression}")]
internal abstract class Microsoft.OData.Client.QueryableResourceExpression : ResourceExpression {
    private List`1<Expression> keyPredicateConjuncts;
    private Type resourceType;
    private Expression member;
    private Dictionary`2<PropertyInfo, ConstantExpression> keyFilter;
    private List`1<QueryOptionExpression> sequenceQueryOptions;
    private TransparentAccessors transparentScope;
    [CompilerGeneratedAttribute]
private bool <UseFilterAsPredicate>k__BackingField;
    internal Expression MemberExpression { get; }
    internal Type ResourceType { get; }
    internal bool HasTransparentScope { get; }
    internal TransparentAccessors TransparentScope { get; internal set; }
    internal ReadOnlyCollection`1<Expression> KeyPredicateConjuncts { get; }
    internal bool HasQueryOptions { get; }
    internal bool UseFilterAsPredicate { get; internal set; }
    internal FilterQueryOptionExpression Filter { get; }
    internal OrderByQueryOptionExpression OrderBy { get; }
    internal SkipQueryOptionExpression Skip { get; }
    internal TakeQueryOptionExpression Take { get; }
    internal ApplyQueryOptionExpression Apply { get; }
    internal IEnumerable`1<QueryOptionExpression> SequenceQueryOptions { get; }
    internal bool HasSequenceQueryOptions { get; }
    internal QueryableResourceExpression(Type type, Expression source, Expression memberExpression, Type resourceType, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion);
    internal QueryableResourceExpression(Type type, Expression source, Expression memberExpression, Type resourceType, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion, string operationName, Dictionary`2<string, string> operationParameters, bool isAction);
    internal Expression get_MemberExpression();
    internal virtual Type get_ResourceType();
    internal bool get_HasTransparentScope();
    internal TransparentAccessors get_TransparentScope();
    internal void set_TransparentScope(TransparentAccessors value);
    internal ReadOnlyCollection`1<Expression> get_KeyPredicateConjuncts();
    internal virtual bool get_HasQueryOptions();
    [CompilerGeneratedAttribute]
internal bool get_UseFilterAsPredicate();
    [CompilerGeneratedAttribute]
internal void set_UseFilterAsPredicate(bool value);
    internal FilterQueryOptionExpression get_Filter();
    internal OrderByQueryOptionExpression get_OrderBy();
    internal SkipQueryOptionExpression get_Skip();
    internal TakeQueryOptionExpression get_Take();
    internal ApplyQueryOptionExpression get_Apply();
    internal IEnumerable`1<QueryOptionExpression> get_SequenceQueryOptions();
    internal bool get_HasSequenceQueryOptions();
    internal virtual ResourceExpression CreateCloneWithNewType(Type type);
    internal virtual ResourceExpression CreateCloneResourceExpression();
    internal static QueryableResourceExpression CreateNavigationResourceExpression(ExpressionType expressionType, Type type, Expression source, Expression memberExpression, Type resourceType, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion, string operationName, Dictionary`2<string, string> operationParameters);
    internal QueryableResourceExpression CreateCloneForTransparentScope(Type type);
    internal void ConvertKeyToFilterExpression();
    internal void AddFilter(IEnumerable`1<Expression> predicateConjuncts);
    internal void AddAggregation(Expression aggregationExpr, AggregationMethod aggregationMethod, string aggregationAlias);
    internal void AddSequenceQueryOption(QueryOptionExpression qoe);
    internal void RemoveFilterExpression();
    internal void OverrideInputReference(QueryableResourceExpression newInput);
    internal void SetKeyPredicate(IEnumerable`1<Expression> keyValues);
    internal IList`1<KeyValuePair`2<PropertyInfo, ConstantExpression>> GetKeyProperties();
    internal abstract virtual QueryableResourceExpression CreateClone();
    protected abstract virtual QueryableResourceExpression CreateCloneWithNewTypes(Type newType, Type newResourceType);
}
internal class Microsoft.OData.Client.QueryComponents : object {
    private Type lastSegmentType;
    private Dictionary`2<Expression, Expression> normalizerRewrites;
    private LambdaExpression projection;
    private string httpMethod;
    private List`1<UriOperationParameter> uriOperationParameters;
    private List`1<BodyOperationParameter> bodyOperationParameters;
    private Nullable`1<bool> singleResult;
    private static string SelectQueryOption;
    private static string SelectQueryOptionWithQuestionMark;
    private static string SelectQueryOptionWithAmpersand;
    private static string SelectQueryOptionWithLeftParen;
    private static string SelectQueryOptionWithSemi;
    private Version version;
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Expression> <GroupByKeySelectorMap>k__BackingField;
    internal Dictionary`2<Expression, Expression> NormalizerRewrites { get; }
    internal LambdaExpression Projection { get; }
    internal Type LastSegmentType { get; }
    internal Version Version { get; }
    internal string HttpMethod { get; }
    internal List`1<UriOperationParameter> UriOperationParameters { get; }
    internal List`1<BodyOperationParameter> BodyOperationParameters { get; }
    internal Nullable`1<bool> SingleResult { get; }
    internal bool HasSelectQueryOption { get; }
    internal Uri Uri { get; internal set; }
    internal Dictionary`2<string, Expression> GroupByKeySelectorMap { get; internal set; }
    internal QueryComponents(Uri uri, Version version, Type lastSegmentType, LambdaExpression projection, Dictionary`2<Expression, Expression> normalizerRewrites);
    internal QueryComponents(Uri uri, Version version, Type lastSegmentType, LambdaExpression projection, Dictionary`2<Expression, Expression> normalizerRewrites, string httpMethod, Nullable`1<bool> singleResult, List`1<BodyOperationParameter> bodyOperationParameters, List`1<UriOperationParameter> uriOperationParameters);
    internal Dictionary`2<Expression, Expression> get_NormalizerRewrites();
    internal LambdaExpression get_Projection();
    internal Type get_LastSegmentType();
    internal Version get_Version();
    internal string get_HttpMethod();
    internal List`1<UriOperationParameter> get_UriOperationParameters();
    internal List`1<BodyOperationParameter> get_BodyOperationParameters();
    internal Nullable`1<bool> get_SingleResult();
    internal bool get_HasSelectQueryOption();
    [CompilerGeneratedAttribute]
internal Uri get_Uri();
    [CompilerGeneratedAttribute]
internal void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, Expression> get_GroupByKeySelectorMap();
    [CompilerGeneratedAttribute]
internal void set_GroupByKeySelectorMap(Dictionary`2<string, Expression> value);
    private static bool ContainsSelectQueryOption(string queryString);
}
[SuppressMessageAttribute("Microsoft.Design", "CA1010")]
[SuppressMessageAttribute("Microsoft.Naming", "CA1710")]
public class Microsoft.OData.Client.QueryOperationResponse : OperationResponse {
    private DataServiceRequest query;
    private ObjectMaterializer results;
    public DataServiceRequest Query { get; }
    public long Count { get; }
    internal ObjectMaterializer Results { get; }
    internal QueryOperationResponse(HeaderCollection headers, DataServiceRequest query, ObjectMaterializer results);
    public DataServiceRequest get_Query();
    public virtual long get_Count();
    internal ObjectMaterializer get_Results();
    public sealed virtual IEnumerator GetEnumerator();
    public DataServiceQueryContinuation GetContinuation();
    public DataServiceQueryContinuation GetContinuation(IEnumerable collection);
    public DataServiceQueryContinuation`1<T> GetContinuation(IEnumerable`1<T> collection);
    internal static QueryOperationResponse GetInstance(Type elementType, HeaderCollection headers, DataServiceRequest query, ObjectMaterializer results);
    protected T GetEnumeratorHelper(Func`1<T> getEnumerator);
    [CompilerGeneratedAttribute]
private IEnumerator <GetEnumerator>b__9_0();
}
[SuppressMessageAttribute("Microsoft.Naming", "CA1710")]
public class Microsoft.OData.Client.QueryOperationResponse`1 : QueryOperationResponse {
    public long Count { get; }
    internal QueryOperationResponse`1(HeaderCollection headers, DataServiceRequest query, ObjectMaterializer results);
    public virtual long get_Count();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
public DataServiceQueryContinuation`1<T> GetContinuation();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    [CompilerGeneratedAttribute]
private IEnumerator`1<T> <GetEnumerator>b__4_0();
}
internal abstract class Microsoft.OData.Client.QueryOptionExpression : Expression {
    private Type type;
    public Type Type { get; }
    internal QueryOptionExpression(Type type);
    public virtual Type get_Type();
    internal virtual QueryOptionExpression ComposeMultipleSpecification(QueryOptionExpression previous);
}
internal class Microsoft.OData.Client.QueryResult : BaseAsyncResult {
    internal DataServiceRequest ServiceRequest;
    internal RequestInfo RequestInfo;
    internal ODataRequestMessageWrapper Request;
    private static Byte[] reusableAsyncCopyBuffer;
    private ContentStream requestContentStream;
    private IODataResponseMessage responseMessage;
    private ResponseInfo responseInfo;
    private Byte[] asyncStreamCopyBuffer;
    private Stream outputResponseStream;
    private string contentType;
    private long contentLength;
    private HttpStatusCode statusCode;
    private bool responseStreamOwner;
    private bool usingBuffer;
    internal long ContentLength { get; }
    internal string ContentType { get; }
    internal HttpStatusCode StatusCode { get; }
    internal QueryResult(object source, string method, DataServiceRequest serviceRequest, ODataRequestMessageWrapper request, RequestInfo requestInfo, AsyncCallback callback, object state);
    internal QueryResult(object source, string method, DataServiceRequest serviceRequest, ODataRequestMessageWrapper request, RequestInfo requestInfo, AsyncCallback callback, object state, ContentStream requestContentStream);
    internal long get_ContentLength();
    internal string get_ContentType();
    internal HttpStatusCode get_StatusCode();
    internal static QueryResult EndExecuteQuery(object source, string method, IAsyncResult asyncResult);
    internal Stream GetResponseStream();
    internal void BeginExecuteQuery();
    internal void ExecuteQuery();
    internal QueryOperationResponse`1<TElement> GetResponse(ObjectMaterializer results);
    internal QueryOperationResponse GetResponseWithType(ObjectMaterializer results, Type elementType);
    internal ObjectMaterializer GetMaterializer(ProjectionPlan plan);
    internal QueryOperationResponse`1<TElement> ProcessResult(ProjectionPlan plan);
    protected virtual void CompletedRequest();
    protected virtual ResponseInfo CreateResponseInfo();
    protected virtual Stream GetAsyncResponseStreamCopy();
    protected virtual Byte[] GetAsyncResponseStreamCopyBuffer();
    protected virtual void PutAsyncResponseStreamCopyBuffer(Byte[] buffer);
    protected virtual void SetHttpWebResponse(IODataResponseMessage response);
    protected virtual void HandleCompleted(PerRequest pereq);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
protected virtual void AsyncEndGetResponse(IAsyncResult asyncResult);
    protected virtual void CompleteCheck(PerRequest pereq, InternalError errorcode);
    private void ReadResponseStream(AsyncStateBag asyncStateBag);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
private void AsyncEndRead(IAsyncResult asyncResult);
    private ObjectMaterializer CreateMaterializer(ProjectionPlan plan, ODataPayloadKind payloadKind);
}
public class Microsoft.OData.Client.ReadingDeltaFeedArgs : object {
    [CompilerGeneratedAttribute]
private ODataDeltaResourceSet <DeltaFeed>k__BackingField;
    public ODataDeltaResourceSet DeltaFeed { get; private set; }
    public ReadingDeltaFeedArgs(ODataDeltaResourceSet deltaFeed);
    [CompilerGeneratedAttribute]
public ODataDeltaResourceSet get_DeltaFeed();
    [CompilerGeneratedAttribute]
private void set_DeltaFeed(ODataDeltaResourceSet value);
}
public class Microsoft.OData.Client.ReadingEntryArgs : object {
    [CompilerGeneratedAttribute]
private ODataResource <Entry>k__BackingField;
    public ODataResource Entry { get; private set; }
    public ReadingEntryArgs(ODataResource entry);
    [CompilerGeneratedAttribute]
public ODataResource get_Entry();
    [CompilerGeneratedAttribute]
private void set_Entry(ODataResource value);
}
public class Microsoft.OData.Client.ReadingFeedArgs : object {
    [CompilerGeneratedAttribute]
private ODataResourceSet <Feed>k__BackingField;
    public ODataResourceSet Feed { get; private set; }
    public ReadingFeedArgs(ODataResourceSet feed);
    [CompilerGeneratedAttribute]
public ODataResourceSet get_Feed();
    [CompilerGeneratedAttribute]
private void set_Feed(ODataResourceSet value);
}
public class Microsoft.OData.Client.ReadingNestedResourceInfoArgs : object {
    [CompilerGeneratedAttribute]
private ODataNestedResourceInfo <Link>k__BackingField;
    public ODataNestedResourceInfo Link { get; private set; }
    public ReadingNestedResourceInfoArgs(ODataNestedResourceInfo link);
    [CompilerGeneratedAttribute]
public ODataNestedResourceInfo get_Link();
    [CompilerGeneratedAttribute]
private void set_Link(ODataNestedResourceInfo value);
}
public class Microsoft.OData.Client.ReadingWritingEntityEventArgs : EventArgs {
    private object entity;
    private XElement data;
    private Uri baseUri;
    public object Entity { get; }
    public XElement Data { get; }
    public Uri BaseUri { get; }
    internal ReadingWritingEntityEventArgs(object entity, XElement data, Uri baseUri);
    public object get_Entity();
    [DebuggerStepThroughAttribute]
public XElement get_Data();
    [DebuggerStepThroughAttribute]
public Uri get_BaseUri();
}
public class Microsoft.OData.Client.ReceivingResponseEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private IODataResponseMessage <ResponseMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBatchPart>k__BackingField;
    [CompilerGeneratedAttribute]
private Descriptor <Descriptor>k__BackingField;
    public IODataResponseMessage ResponseMessage { get; private set; }
    public bool IsBatchPart { get; private set; }
    public Descriptor Descriptor { get; private set; }
    public ReceivingResponseEventArgs(IODataResponseMessage responseMessage, Descriptor descriptor);
    public ReceivingResponseEventArgs(IODataResponseMessage responseMessage, Descriptor descriptor, bool isBatchPart);
    [CompilerGeneratedAttribute]
public IODataResponseMessage get_ResponseMessage();
    [CompilerGeneratedAttribute]
private void set_ResponseMessage(IODataResponseMessage value);
    [CompilerGeneratedAttribute]
public bool get_IsBatchPart();
    [CompilerGeneratedAttribute]
private void set_IsBatchPart(bool value);
    [CompilerGeneratedAttribute]
public Descriptor get_Descriptor();
    [CompilerGeneratedAttribute]
private void set_Descriptor(Descriptor value);
}
internal class Microsoft.OData.Client.ReferenceEqualityComparer : object {
    private sealed virtual override bool System.Collections.IEqualityComparer.Equals(object x, object y);
    private sealed virtual override int System.Collections.IEqualityComparer.GetHashCode(object obj);
}
internal class Microsoft.OData.Client.ReferenceEqualityComparer`1 : ReferenceEqualityComparer {
    private static ReferenceEqualityComparer`1<T> instance;
    internal static ReferenceEqualityComparer`1<T> Instance { get; }
    internal static ReferenceEqualityComparer`1<T> get_Instance();
    public sealed virtual bool Equals(T x, T y);
    public sealed virtual int GetHashCode(T obj);
}
internal static class Microsoft.OData.Client.ReflectionUtil : object {
    internal static string COUNTPROPNAME;
    private static Dictionary`2<MethodInfo, SequenceMethod> s_methodMap;
    private static Dictionary`2<SequenceMethod, MethodInfo> s_inverseMap;
    [SuppressMessageAttribute("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
private static ReflectionUtil();
    internal static bool TryIdentifySequenceMethod(MethodInfo method, SequenceMethod& sequenceMethod);
    internal static bool IsSequenceMethod(MethodInfo method, SequenceMethod sequenceMethod);
    internal static bool IsSequenceSelectMethod(MethodInfo method);
    internal static bool IsAnyAllMethod(SequenceMethod sequenceMethod);
    internal static string GetCanonicalMethodDescription(MethodInfo method);
    private static void AppendCanonicalTypeDescription(Type type, Dictionary`2<Type, int> genericArgumentOrdinals, StringBuilder description);
    internal static IEnumerable`1<MethodInfo> GetAllLinqOperators();
}
internal class Microsoft.OData.Client.RemoveWildcardVisitor : object {
    private PathSegmentToken previous;
    public sealed virtual void Visit(SystemToken tokenIn);
    public sealed virtual void Visit(NonSystemToken tokenIn);
}
internal class Microsoft.OData.Client.RequestInfo : object {
    private TypeResolver typeResolver;
    [CompilerGeneratedAttribute]
private ODataMessageWritingHelper <WriteHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private DataServiceContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsContinuation>k__BackingField;
    internal ODataMessageWritingHelper WriteHelper { get; private set; }
    internal DataServiceContext Context { get; private set; }
    internal bool IsContinuation { get; private set; }
    internal DataServiceClientConfigurations Configurations { get; }
    internal EntityTracker EntityTracker { get; }
    internal bool IgnoreResourceNotFoundException { get; }
    internal bool HasResolveName { get; }
    internal bool IsUserSuppliedResolver { get; }
    internal UriResolver BaseUriResolver { get; }
    internal DataServiceResponsePreference AddAndUpdateResponsePreference { get; }
    internal Version MaxProtocolVersionAsVersion { get; }
    internal bool HasSendingRequest2EventHandlers { get; }
    internal bool UserModifiedRequestInBuildingRequest { get; }
    internal int Timeout { get; }
    internal bool UsePostTunneling { get; }
    internal ClientEdmModel Model { get; }
    internal DataServiceClientFormat Format { get; }
    internal TypeResolver TypeResolver { get; }
    internal HttpStack HttpStack { get; }
    internal bool IsIeee754Compatible { get; }
    internal RequestInfo(DataServiceContext context, bool isContinuation);
    internal RequestInfo(DataServiceContext context);
    [CompilerGeneratedAttribute]
internal ODataMessageWritingHelper get_WriteHelper();
    [CompilerGeneratedAttribute]
private void set_WriteHelper(ODataMessageWritingHelper value);
    [CompilerGeneratedAttribute]
internal DataServiceContext get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(DataServiceContext value);
    [CompilerGeneratedAttribute]
internal bool get_IsContinuation();
    [CompilerGeneratedAttribute]
private void set_IsContinuation(bool value);
    internal DataServiceClientConfigurations get_Configurations();
    internal EntityTracker get_EntityTracker();
    internal bool get_IgnoreResourceNotFoundException();
    internal bool get_HasResolveName();
    internal bool get_IsUserSuppliedResolver();
    internal UriResolver get_BaseUriResolver();
    internal DataServiceResponsePreference get_AddAndUpdateResponsePreference();
    internal Version get_MaxProtocolVersionAsVersion();
    internal bool get_HasSendingRequest2EventHandlers();
    internal bool get_UserModifiedRequestInBuildingRequest();
    internal int get_Timeout();
    internal bool get_UsePostTunneling();
    internal ClientEdmModel get_Model();
    internal DataServiceClientFormat get_Format();
    internal TypeResolver get_TypeResolver();
    internal HttpStack get_HttpStack();
    internal bool get_IsIeee754Compatible();
    internal IODataResponseMessage GetSynchronousResponse(ODataRequestMessageWrapper request, bool handleWebException);
    internal IODataResponseMessage EndGetResponse(ODataRequestMessageWrapper request, IAsyncResult asyncResult);
    internal string GetServerTypeName(EntityDescriptor descriptor);
    internal string GetServerTypeName(ClientTypeAnnotation clientTypeAnnotation);
    internal string InferServerTypeNameFromServerModel(EntityDescriptor descriptor);
    internal string ResolveNameFromType(Type type);
    internal ResponseInfo GetDeserializationInfo(Nullable`1<MergeOption> mergeOption);
    internal ResponseInfo GetDeserializationInfoForLoadProperty(Nullable`1<MergeOption> mergeOption, EntityDescriptor entityDescriptor, ClientPropertyAnnotation property);
    internal InvalidOperationException ValidateResponseVersion(Version responseVersion);
    internal void FireSendingRequest(SendingRequestEventArgs eventArgs);
    internal void FireSendingRequest2(SendingRequest2EventArgs eventArgs);
    internal DataServiceClientRequestMessage CreateRequestMessage(BuildingRequestEventArgs requestMessageArgs);
    internal BuildingRequestEventArgs CreateRequestArgsAndFireBuildingRequest(string method, Uri requestUri, HeaderCollection headers, HttpStack httpStack, Descriptor descriptor);
}
internal class Microsoft.OData.Client.ResourceBinder : DataServiceALinqExpressionVisitor {
    private static string AddQueryOptionMethodName;
    private static string ExpandMethodName;
    private static string IncludeCountMethodName;
    private DataServiceContext context;
    private ClientEdmModel Model { get; }
    private ResourceBinder(DataServiceContext context);
    private ClientEdmModel get_Model();
    internal static Expression Bind(Expression e, DataServiceContext context);
    internal static bool IsMissingKeyPredicates(Expression expression);
    internal static void VerifyKeyPredicates(Expression e);
    internal static void VerifyNotSelectManyProjection(Expression expression);
    private static Expression AnalyzePredicate(MethodCallExpression mce, ClientEdmModel model, DataServiceContext context);
    private static void ValidateFilter(Expression exp, string method);
    private static List`1<Expression> ExtractKeyPredicate(QueryableResourceExpression target, List`1<Expression> predicates, ClientEdmModel edmModel, List`1& nonKeyPredicates);
    private static List`1<Expression> AdjustKeyExpressionsBasedOnKeyOrders(IEdmStructuralProperty[] edmKeys, List`1<Expression> keyPredicates, Dictionary`2<Expression, string> expToPropertyNameMap);
    private static void AddConjuncts(Expression e, List`1<Expression> conjuncts);
    internal bool AnalyzeProjection(MethodCallExpression mce, SequenceMethod sequenceMethod, Expression& e);
    internal static Expression AnalyzeNavigation(MethodCallExpression mce, DataServiceContext context);
    private static bool IsValidNavigationSource(Expression input, ResourceExpression& sourceExpression);
    internal static Expression AnalyzeSelectMany(MethodCallExpression mce, DataServiceContext context);
    private static bool TryAnalyzeSelectManyCollector(ResourceExpression input, Expression navPropRef, DataServiceContext context, QueryableResourceExpression& result);
    private static Expression AnalyzeSelectManySelector(MethodCallExpression selectManyCall, QueryableResourceExpression sourceResource, DataServiceContext context);
    internal static Expression ApplyOrdering(MethodCallExpression mce, bool descending, bool thenBy, ClientEdmModel model);
    private static Expression AnalyzeAggregation(MethodCallExpression aggregationExpr, AggregationMethod aggregationMethod);
    private bool AnalyzeGroupBy(MethodCallExpression methodCallExpr, Expression& expr);
    private static Expression LimitCardinality(MethodCallExpression mce, int maxCardinality);
    private static Expression AnalyzeCast(MethodCallExpression mce);
    private static Expression AnalyzeOfType(MethodCallExpression mce);
    private static bool IsTypeOfGenericBaseType(Type baseType, Type derivedType);
    private static Expression StripConvert(Expression e, Type selfDefinedConvertType);
    private static Expression AnalyzeExpand(MethodCallExpression mce, DataServiceContext context);
    private static Expression AnalyzeFunc(MethodCallExpression mce, bool isExtensionMethod);
    private static Expression AnalyzeAddCustomQueryOption(MethodCallExpression mce);
    private static Expression AnalyzeAddCountOption(MethodCallExpression mce);
    private static QueryableResourceExpression CreateResourceSetExpression(Type type, ResourceExpression source, Expression memberExpression, Type resourceType);
    private static NavigationPropertySingletonExpression CreateNavigationPropertySingletonExpression(Type type, ResourceExpression source, Expression memberExpression);
    private static QueryableResourceExpression RemoveTransparentScope(Type expectedResultType, QueryableResourceExpression input);
    internal static Expression StripConvertToAssignable(Expression e);
    internal static T StripTo(Expression expression);
    internal static T StripTo(Expression expression, Type& convertedType);
    internal virtual Expression VisitQueryableResourceExpression(QueryableResourceExpression rse);
    private static bool TryGetResourceSetMethodArguments(MethodCallExpression mce, QueryableResourceExpression& input, LambdaExpression& lambda);
    private static bool TryBindToInput(ResourceExpression input, LambdaExpression le, Expression& bound);
    private static Expression AnalyzeResourceSetConstantMethod(MethodCallExpression mce, Func`4<MethodCallExpression, ResourceExpression, ConstantExpression, Expression> constantMethodAnalyzer);
    private static Expression AnalyzeCountMethod(MethodCallExpression mce);
    internal static void AddSequenceQueryOption(ResourceExpression target, QueryOptionExpression qoe);
    internal virtual Expression VisitBinary(BinaryExpression b);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
internal virtual Expression VisitMethodCall(MethodCallExpression mce);
    private static Expression StripCastMethodCalls(Expression expression);
}
internal abstract class Microsoft.OData.Client.ResourceExpression : Expression {
    protected Expression source;
    protected InputReferenceExpression inputRef;
    private Type type;
    private List`1<string> expandPaths;
    private CountOption countOption;
    private Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions;
    private ProjectionQueryOptionExpression projection;
    private Version uriVersion;
    private string operationName;
    private Dictionary`2<string, string> operationParameters;
    private bool isAction;
    [CompilerGeneratedAttribute]
private Type <ResourceTypeAs>k__BackingField;
    public Type Type { get; }
    internal bool HasQueryOptions { get; }
    internal bool IsOperationInvocation { get; }
    internal Type ResourceType { get; }
    internal Type ResourceTypeAs { get; internal set; }
    internal Version UriVersion { get; }
    internal bool IsSingleton { get; }
    internal List`1<string> ExpandPaths { get; internal set; }
    internal CountOption CountOption { get; internal set; }
    internal Dictionary`2<ConstantExpression, ConstantExpression> CustomQueryOptions { get; internal set; }
    internal ProjectionQueryOptionExpression Projection { get; internal set; }
    internal Expression Source { get; }
    internal string OperationName { get; internal set; }
    internal Dictionary`2<string, string> OperationParameters { get; internal set; }
    internal bool IsAction { get; internal set; }
    internal ResourceExpression(Expression source, Type type, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion);
    internal ResourceExpression(Expression source, Type type, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion, string operationName, Dictionary`2<string, string> operationParameters, bool isAction);
    public virtual Type get_Type();
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1500:VariableNamesShouldNotMatchFieldNames")]
internal abstract virtual ResourceExpression CreateCloneWithNewType(Type type);
    internal abstract virtual ResourceExpression CreateCloneResourceExpression();
    internal abstract virtual bool get_HasQueryOptions();
    internal abstract virtual bool get_IsOperationInvocation();
    internal abstract virtual Type get_ResourceType();
    [CompilerGeneratedAttribute]
internal Type get_ResourceTypeAs();
    [CompilerGeneratedAttribute]
internal void set_ResourceTypeAs(Type value);
    internal Version get_UriVersion();
    internal abstract virtual bool get_IsSingleton();
    internal virtual List`1<string> get_ExpandPaths();
    internal virtual void set_ExpandPaths(List`1<string> value);
    internal virtual CountOption get_CountOption();
    internal virtual void set_CountOption(CountOption value);
    internal virtual Dictionary`2<ConstantExpression, ConstantExpression> get_CustomQueryOptions();
    internal virtual void set_CustomQueryOptions(Dictionary`2<ConstantExpression, ConstantExpression> value);
    internal ProjectionQueryOptionExpression get_Projection();
    internal void set_Projection(ProjectionQueryOptionExpression value);
    internal Expression get_Source();
    internal string get_OperationName();
    internal void set_OperationName(string value);
    internal Dictionary`2<string, string> get_OperationParameters();
    internal void set_OperationParameters(Dictionary`2<string, string> value);
    internal bool get_IsAction();
    internal void set_IsAction(bool value);
    internal InputReferenceExpression CreateReference();
    internal void RaiseUriVersion(Version newVersion);
}
internal enum Microsoft.OData.Client.ResourceExpressionType : Enum {
    public int value__;
    public static ResourceExpressionType RootResourceSet;
    public static ResourceExpressionType RootSingleResource;
    public static ResourceExpressionType ResourceNavigationProperty;
    public static ResourceExpressionType ResourceNavigationPropertySingleton;
    public static ResourceExpressionType TakeQueryOption;
    public static ResourceExpressionType SkipQueryOption;
    public static ResourceExpressionType OrderByQueryOption;
    public static ResourceExpressionType FilterQueryOption;
    public static ResourceExpressionType InputReference;
    public static ResourceExpressionType ProjectionQueryOption;
    public static ResourceExpressionType ExpandQueryOption;
    public static ResourceExpressionType ApplyQueryOption;
}
[DebuggerDisplayAttribute("ResourceSetExpression {Source}.{MemberExpression}")]
internal class Microsoft.OData.Client.ResourceSetExpression : QueryableResourceExpression {
    public ExpressionType NodeType { get; }
    internal bool IsSingleton { get; }
    internal bool HasKeyPredicate { get; }
    internal bool IsOperationInvocation { get; }
    internal ResourceSetExpression(Type type, Expression source, Expression memberExpression, Type resourceType, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion);
    internal ResourceSetExpression(Type type, Expression source, Expression memberExpression, Type resourceType, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion, string operationName, Dictionary`2<string, string> operationParameters, bool isAction);
    public virtual ExpressionType get_NodeType();
    internal virtual bool get_IsSingleton();
    internal bool get_HasKeyPredicate();
    internal virtual bool get_IsOperationInvocation();
    internal virtual QueryableResourceExpression CreateClone();
    protected virtual QueryableResourceExpression CreateCloneWithNewTypes(Type newType, Type newResourceType);
}
internal class Microsoft.OData.Client.ResponseInfo : object {
    private RequestInfo requestInfo;
    private MergeOption mergeOption;
    [CompilerGeneratedAttribute]
private ODataMessageReadingHelper <ReadHelper>k__BackingField;
    public ODataMessageReadingHelper ReadHelper { get; private set; }
    internal bool IsContinuation { get; }
    internal MergeOption MergeOption { get; }
    internal bool AutoNullPropagation { get; }
    internal bool ThrowOnUndeclaredPropertyForNonOpenType { get; }
    internal EntityTracker EntityTracker { get; }
    internal bool ApplyingChanges { get; internal set; }
    internal TypeResolver TypeResolver { get; }
    internal UriResolver BaseUriResolver { get; }
    internal ODataProtocolVersion MaxProtocolVersion { get; }
    internal ClientEdmModel Model { get; }
    internal DataServiceContext Context { get; }
    internal DataServiceClientResponsePipelineConfiguration ResponsePipeline { get; }
    internal ResponseInfo(RequestInfo requestInfo, MergeOption mergeOption);
    [CompilerGeneratedAttribute]
public ODataMessageReadingHelper get_ReadHelper();
    [CompilerGeneratedAttribute]
private void set_ReadHelper(ODataMessageReadingHelper value);
    internal bool get_IsContinuation();
    internal MergeOption get_MergeOption();
    internal bool get_AutoNullPropagation();
    internal bool get_ThrowOnUndeclaredPropertyForNonOpenType();
    internal EntityTracker get_EntityTracker();
    internal bool get_ApplyingChanges();
    internal void set_ApplyingChanges(bool value);
    internal TypeResolver get_TypeResolver();
    internal UriResolver get_BaseUriResolver();
    internal ODataProtocolVersion get_MaxProtocolVersion();
    internal ClientEdmModel get_Model();
    internal DataServiceContext get_Context();
    internal DataServiceClientResponsePipelineConfiguration get_ResponsePipeline();
}
internal class Microsoft.OData.Client.SaveChangesEventArgs : EventArgs {
    [SuppressMessageAttribute("Microsoft.Performance", "CA1823")]
private DataServiceResponse response;
    public SaveChangesEventArgs(DataServiceResponse response);
}
[FlagsAttribute]
public enum Microsoft.OData.Client.SaveChangesOptions : Enum {
    public int value__;
    public static SaveChangesOptions None;
    public static SaveChangesOptions BatchWithSingleChangeset;
    public static SaveChangesOptions ContinueOnError;
    public static SaveChangesOptions ReplaceOnUpdate;
    public static SaveChangesOptions BatchWithIndependentOperations;
    public static SaveChangesOptions PostOnlySetProperties;
    public static SaveChangesOptions UseRelativeUri;
    public static SaveChangesOptions UseJsonBatch;
    public static SaveChangesOptions BulkUpdate;
    public static SaveChangesOptions DeepInsert;
}
[SuppressMessageAttribute("Microsoft.Design", "CA1001:TypesThatOwnDisposableFieldsShouldBeDisposable")]
internal class Microsoft.OData.Client.SaveResult : BaseSaveResult {
    private List`1<CachedResponse> cachedResponses;
    private MemoryStream inMemoryResponseStream;
    private IODataResponseMessage responseMessage;
    private CachedResponse cachedResponse;
    internal bool IsBatchRequest { get; }
    protected bool ProcessResponsePayload { get; }
    protected Stream ResponseStream { get; }
    internal SaveResult(DataServiceContext context, string method, SaveChangesOptions options, AsyncCallback callback, object state);
    internal virtual bool get_IsBatchRequest();
    protected virtual bool get_ProcessResponsePayload();
    protected virtual Stream get_ResponseStream();
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
internal void BeginCreateNextChange();
    internal void CreateNextChange();
    protected virtual void FinishCurrentChange(PerRequest pereq);
    protected virtual void HandleOperationResponse(IODataResponseMessage responseMsg);
    protected virtual DataServiceResponse HandleResponse();
    protected virtual ObjectMaterializer GetMaterializer(EntityDescriptor entityDescriptor, ResponseInfo responseInfo);
    protected virtual ODataRequestMessageWrapper CreateRequestMessage(string method, Uri requestUri, HeaderCollection headers, HttpStack httpStack, Descriptor descriptor, string contentId);
    protected ContentStream CreateNonBatchChangeData(int index, ODataRequestMessageWrapper requestMessage);
    private ODataRequestMessageWrapper CreateNextRequest();
    private ODataRequestMessageWrapper CheckAndProcessMediaEntryPost(EntityDescriptor entityDescriptor);
    private ODataRequestMessageWrapper CheckAndProcessMediaEntryPut(EntityDescriptor entityDescriptor);
    private ODataRequestMessageWrapper CreateMediaResourceRequest(Uri requestUri, string method, Version version, bool sendChunked, bool applyResponsePreference, HeaderCollection headers, Descriptor descriptor);
    private void SetupMediaResourceRequest(HeaderCollection headers, DataServiceSaveStream saveStream, string etag);
    private void HandleOperationException(InvalidOperationException e, IODataResponseMessage response);
    private void CheckContinueOnError();
    private void HandleOperationResponseData(IODataResponseMessage response);
    private void HandleOperationResponseData(IODataResponseMessage responseMsg, Stream responseStream);
    private ODataRequestMessageWrapper CreateNamedStreamRequest(StreamDescriptor namedStreamInfo);
}
internal class Microsoft.OData.Client.SByteTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.SelectExpandPathBuilder : object {
    private static char EntireEntityMarker;
    private List`1<PathSegmentToken> projectionPaths;
    private List`1<PathSegmentToken> expandPaths;
    private Stack`1<ParameterExpression> parameterExpressions;
    private Dictionary`2<ParameterExpression, PathSegmentToken> basePaths;
    private Version uriVersion;
    private bool firstSegmentInNewPath;
    private bool basePathIsEmpty;
    public IEnumerable`1<string> ProjectionPaths { get; }
    public IEnumerable`1<string> ExpandPaths { get; }
    public Version UriVersion { get; }
    public ParameterExpression ParamExpressionInScope { get; }
    public IEnumerable`1<string> get_ProjectionPaths();
    public IEnumerable`1<string> get_ExpandPaths();
    public Version get_UriVersion();
    public ParameterExpression get_ParamExpressionInScope();
    public void PushParamExpression(ParameterExpression pe);
    public void PopParamExpression();
    public void StartNewPath();
    public void AppendPropertyToPath(PropertyInfo pi, Type convertedSourceType, DataServiceContext context);
    private IEnumerable`1<string> WriteExpansionPaths();
    private IEnumerable`1<string> WriteProjectionPaths();
    private void AppendToProjectionPath(string name);
    private void AppendToExpandPath(string name, bool isStructural);
}
internal class Microsoft.OData.Client.SelectExpandPathToStringVisitor : object {
    public static string SelectClause;
    public static string StartingExpandClause;
    public static string NonStartingExpandClause;
    public sealed virtual string Visit(SystemToken tokenIn);
    public sealed virtual string Visit(NonSystemToken tokenIn);
    private static string WriteNextStructuralProperties(PathSegmentToken firstStructuralProperty, PathSegmentToken& firstNonStructuralProperty);
}
public class Microsoft.OData.Client.SendingRequest2EventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private IODataRequestMessage <RequestMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private Descriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBatchPart>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBulkUpdate>k__BackingField;
    public IODataRequestMessage RequestMessage { get; private set; }
    public Descriptor Descriptor { get; private set; }
    public bool IsBatchPart { get; private set; }
    public bool IsBulkUpdate { get; private set; }
    internal SendingRequest2EventArgs(IODataRequestMessage requestMessage, Descriptor descriptor, bool isBatchPart, bool isBulkUpdate);
    [CompilerGeneratedAttribute]
public IODataRequestMessage get_RequestMessage();
    [CompilerGeneratedAttribute]
private void set_RequestMessage(IODataRequestMessage value);
    [CompilerGeneratedAttribute]
public Descriptor get_Descriptor();
    [CompilerGeneratedAttribute]
private void set_Descriptor(Descriptor value);
    [CompilerGeneratedAttribute]
public bool get_IsBatchPart();
    [CompilerGeneratedAttribute]
private void set_IsBatchPart(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsBulkUpdate();
    [CompilerGeneratedAttribute]
private void set_IsBulkUpdate(bool value);
}
public class Microsoft.OData.Client.SendingRequestEventArgs : EventArgs {
    private WebRequest request;
    private WebHeaderCollection requestHeaders;
    public WebRequest Request { get; public set; }
    public WebHeaderCollection RequestHeaders { get; }
    internal SendingRequestEventArgs(WebRequest request, WebHeaderCollection requestHeaders);
    public WebRequest get_Request();
    public void set_Request(WebRequest value);
    public WebHeaderCollection get_RequestHeaders();
}
internal enum Microsoft.OData.Client.SequenceMethod : Enum {
    public int value__;
    public static SequenceMethod Where;
    public static SequenceMethod WhereOrdinal;
    public static SequenceMethod OfType;
    public static SequenceMethod Cast;
    public static SequenceMethod Select;
    public static SequenceMethod SelectOrdinal;
    public static SequenceMethod SelectMany;
    public static SequenceMethod SelectManyOrdinal;
    public static SequenceMethod SelectManyResultSelector;
    public static SequenceMethod SelectManyOrdinalResultSelector;
    public static SequenceMethod Join;
    public static SequenceMethod JoinComparer;
    public static SequenceMethod GroupJoin;
    public static SequenceMethod GroupJoinComparer;
    public static SequenceMethod OrderBy;
    public static SequenceMethod OrderByComparer;
    public static SequenceMethod OrderByDescending;
    public static SequenceMethod OrderByDescendingComparer;
    public static SequenceMethod ThenBy;
    public static SequenceMethod ThenByComparer;
    public static SequenceMethod ThenByDescending;
    public static SequenceMethod ThenByDescendingComparer;
    public static SequenceMethod Take;
    public static SequenceMethod TakeWhile;
    public static SequenceMethod TakeWhileOrdinal;
    public static SequenceMethod Skip;
    public static SequenceMethod SkipWhile;
    public static SequenceMethod SkipWhileOrdinal;
    public static SequenceMethod GroupBy;
    public static SequenceMethod GroupByComparer;
    public static SequenceMethod GroupByElementSelector;
    public static SequenceMethod GroupByElementSelectorComparer;
    public static SequenceMethod GroupByResultSelector;
    public static SequenceMethod GroupByResultSelectorComparer;
    public static SequenceMethod GroupByElementSelectorResultSelector;
    public static SequenceMethod GroupByElementSelectorResultSelectorComparer;
    public static SequenceMethod Distinct;
    public static SequenceMethod DistinctComparer;
    public static SequenceMethod Concat;
    public static SequenceMethod Union;
    public static SequenceMethod UnionComparer;
    public static SequenceMethod Intersect;
    public static SequenceMethod IntersectComparer;
    public static SequenceMethod Except;
    public static SequenceMethod ExceptComparer;
    public static SequenceMethod First;
    public static SequenceMethod FirstPredicate;
    public static SequenceMethod FirstOrDefault;
    public static SequenceMethod FirstOrDefaultPredicate;
    public static SequenceMethod Last;
    public static SequenceMethod LastPredicate;
    public static SequenceMethod LastOrDefault;
    public static SequenceMethod LastOrDefaultPredicate;
    public static SequenceMethod Single;
    public static SequenceMethod SinglePredicate;
    public static SequenceMethod SingleOrDefault;
    public static SequenceMethod SingleOrDefaultPredicate;
    public static SequenceMethod ElementAt;
    public static SequenceMethod ElementAtOrDefault;
    public static SequenceMethod DefaultIfEmpty;
    public static SequenceMethod DefaultIfEmptyValue;
    public static SequenceMethod Contains;
    public static SequenceMethod ContainsComparer;
    public static SequenceMethod Reverse;
    public static SequenceMethod Empty;
    public static SequenceMethod SequenceEqual;
    public static SequenceMethod SequenceEqualComparer;
    public static SequenceMethod Any;
    public static SequenceMethod AnyPredicate;
    public static SequenceMethod All;
    public static SequenceMethod Count;
    public static SequenceMethod CountPredicate;
    public static SequenceMethod LongCount;
    public static SequenceMethod LongCountPredicate;
    public static SequenceMethod Min;
    public static SequenceMethod MinSelector;
    public static SequenceMethod Max;
    public static SequenceMethod MaxSelector;
    public static SequenceMethod MinInt;
    public static SequenceMethod MinNullableInt;
    public static SequenceMethod MinLong;
    public static SequenceMethod MinNullableLong;
    public static SequenceMethod MinDouble;
    public static SequenceMethod MinNullableDouble;
    public static SequenceMethod MinDecimal;
    public static SequenceMethod MinNullableDecimal;
    public static SequenceMethod MinSingle;
    public static SequenceMethod MinNullableSingle;
    public static SequenceMethod MinIntSelector;
    public static SequenceMethod MinNullableIntSelector;
    public static SequenceMethod MinLongSelector;
    public static SequenceMethod MinNullableLongSelector;
    public static SequenceMethod MinDoubleSelector;
    public static SequenceMethod MinNullableDoubleSelector;
    public static SequenceMethod MinDecimalSelector;
    public static SequenceMethod MinNullableDecimalSelector;
    public static SequenceMethod MinSingleSelector;
    public static SequenceMethod MinNullableSingleSelector;
    public static SequenceMethod MaxInt;
    public static SequenceMethod MaxNullableInt;
    public static SequenceMethod MaxLong;
    public static SequenceMethod MaxNullableLong;
    public static SequenceMethod MaxDouble;
    public static SequenceMethod MaxNullableDouble;
    public static SequenceMethod MaxDecimal;
    public static SequenceMethod MaxNullableDecimal;
    public static SequenceMethod MaxSingle;
    public static SequenceMethod MaxNullableSingle;
    public static SequenceMethod MaxIntSelector;
    public static SequenceMethod MaxNullableIntSelector;
    public static SequenceMethod MaxLongSelector;
    public static SequenceMethod MaxNullableLongSelector;
    public static SequenceMethod MaxDoubleSelector;
    public static SequenceMethod MaxNullableDoubleSelector;
    public static SequenceMethod MaxDecimalSelector;
    public static SequenceMethod MaxNullableDecimalSelector;
    public static SequenceMethod MaxSingleSelector;
    public static SequenceMethod MaxNullableSingleSelector;
    public static SequenceMethod SumInt;
    public static SequenceMethod SumNullableInt;
    public static SequenceMethod SumLong;
    public static SequenceMethod SumNullableLong;
    public static SequenceMethod SumDouble;
    public static SequenceMethod SumNullableDouble;
    public static SequenceMethod SumDecimal;
    public static SequenceMethod SumNullableDecimal;
    public static SequenceMethod SumSingle;
    public static SequenceMethod SumNullableSingle;
    public static SequenceMethod SumIntSelector;
    public static SequenceMethod SumNullableIntSelector;
    public static SequenceMethod SumLongSelector;
    public static SequenceMethod SumNullableLongSelector;
    public static SequenceMethod SumDoubleSelector;
    public static SequenceMethod SumNullableDoubleSelector;
    public static SequenceMethod SumDecimalSelector;
    public static SequenceMethod SumNullableDecimalSelector;
    public static SequenceMethod SumSingleSelector;
    public static SequenceMethod SumNullableSingleSelector;
    public static SequenceMethod AverageInt;
    public static SequenceMethod AverageNullableInt;
    public static SequenceMethod AverageLong;
    public static SequenceMethod AverageNullableLong;
    public static SequenceMethod AverageDouble;
    public static SequenceMethod AverageNullableDouble;
    public static SequenceMethod AverageDecimal;
    public static SequenceMethod AverageNullableDecimal;
    public static SequenceMethod AverageSingle;
    public static SequenceMethod AverageNullableSingle;
    public static SequenceMethod AverageIntSelector;
    public static SequenceMethod AverageNullableIntSelector;
    public static SequenceMethod AverageLongSelector;
    public static SequenceMethod AverageNullableLongSelector;
    public static SequenceMethod AverageDoubleSelector;
    public static SequenceMethod AverageNullableDoubleSelector;
    public static SequenceMethod AverageDecimalSelector;
    public static SequenceMethod AverageNullableDecimalSelector;
    public static SequenceMethod AverageSingleSelector;
    public static SequenceMethod AverageNullableSingleSelector;
    public static SequenceMethod Aggregate;
    public static SequenceMethod AggregateSeed;
    public static SequenceMethod AggregateSeedSelector;
    public static SequenceMethod AsQueryable;
    public static SequenceMethod AsQueryableGeneric;
    public static SequenceMethod AsEnumerable;
    public static SequenceMethod ToList;
    public static SequenceMethod CountDistinctSelector;
    public static SequenceMethod NotSupported;
}
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")]
public class Microsoft.OData.Client.Serializer : object {
    private RequestInfo requestInfo;
    private ODataPropertyConverter propertyConverter;
    private SaveChangesOptions options;
    private EntityParameterSendOption sendOption;
    internal Serializer(RequestInfo requestInfo);
    internal Serializer(RequestInfo requestInfo, EntityParameterSendOption sendOption);
    internal Serializer(RequestInfo requestInfo, SaveChangesOptions options);
    public static string GetKeyString(DataServiceContext context, IDictionary`2<string, object> keys);
    public static string GetParameterString(DataServiceContext context, OperationParameter[] parameters);
    internal static string GetParameterValue(DataServiceContext context, OperationParameter parameter);
    internal static ODataMessageWriter CreateMessageWriter(ODataRequestMessageWrapper requestMessage, RequestInfo requestInfo, bool isParameterPayload);
    internal static ODataMessageWriter CreateDeltaMessageWriter(ODataRequestMessageWrapper requestMessage, RequestInfo requestInfo, bool isParameterPayload);
    internal static ODataResource CreateODataEntry(EntityDescriptor entityDescriptor, string serverTypeName, ClientTypeAnnotation entityType, DataServiceClientFormat clientFormat);
    internal static ODataDeletedResource CreateODataDeletedEntry(EntityDescriptor entityDescriptor, string serverTypeName, ClientTypeAnnotation entityType);
    internal void WriteBodyOperationParameters(List`1<BodyOperationParameter> operationParameters, ODataRequestMessageWrapper requestMessage);
    internal void WriteEntry(EntityDescriptor entityDescriptor, IEnumerable`1<LinkDescriptor> relatedLinks, ODataRequestMessageWrapper requestMessage);
    internal void WriteDeepInsertEntry(EntityDescriptor entityDescriptor, BulkUpdateGraph bulkUpdateGraph, ODataWriterWrapper oDataWriter);
    private void WriteNestedResourceInfo(EntityDescriptor entityDescriptor, BulkUpdateGraph bulkUpdateGraph, ODataWriterWrapper odataWriter, ClientTypeAnnotation clientType);
    private void WriteResourceSet(IReadOnlyList`1<Descriptor> descriptors, BulkUpdateGraph bulkUpdateGraph, ODataWriterWrapper oDataWriter);
    internal void WriteDeltaResourceSet(IReadOnlyList`1<Descriptor> descriptors, Dictionary`2<Descriptor, List`1<LinkDescriptor>> linkDescriptors, BulkUpdateGraph bulkUpdateGraph, ODataWriterWrapper oDataWriter);
    private void WriteODataId(LinkDescriptor linkDescriptor, ODataWriterWrapper oDataWriter);
    internal void WriteDeltaEntry(EntityDescriptor entityDescriptor, Dictionary`2<Descriptor, List`1<LinkDescriptor>> linkDescriptors, BulkUpdateGraph bulkUpdateGraph, ODataWriterWrapper oDataWriter);
    internal void WriteDeltaDeletedEntry(EntityDescriptor entityDescriptor, ODataWriterWrapper oDataWriter);
    internal void WriteNestedComplexProperties(object entity, string serverTypeName, IEnumerable`1<ClientPropertyAnnotation> properties, ODataWriterWrapper odataWriter);
    internal void WriteNestedResourceInfo(EntityDescriptor entityDescriptor, IEnumerable`1<LinkDescriptor> relatedLinks, ODataWriterWrapper odataWriter);
    internal void WriteDeltaNestedResourceInfo(EntityDescriptor entityDescriptor, Dictionary`2<Descriptor, List`1<LinkDescriptor>> linkDescriptors, BulkUpdateGraph bulkUpdateGraph, ODataWriterWrapper odataWriter);
    private static Dictionary`2<string, List`1<Descriptor>> GroupRelatedLinksByNavigationProperty(List`1<Descriptor> relatedDescriptors, Dictionary`2<Descriptor, List`1<LinkDescriptor>> descriptorLinks);
    internal void WriteEntityReferenceLink(LinkDescriptor binding, ODataRequestMessageWrapper requestMessage);
    internal Uri WriteUriOperationParametersToUri(Uri requestUri, List`1<UriOperationParameter> operationParameters);
    private void WriteCollectionValueInBodyOperationParameter(ODataParameterWriter parameterWriter, BodyOperationParameter operationParameter, IEdmCollectionType edmCollectionType);
    private static void WriteResourceSet(ODataWriterWrapper writer, ODataResourceSetWrapper resourceSetWrapper);
    private static void WriteResource(ODataWriterWrapper writer, ODataResourceWrapper resourceWrapper);
    private static void WriteNestedResourceInfo(ODataWriterWrapper writer, ODataNestedResourceInfoWrapper nestedResourceInfo);
    private static void WriteItem(ODataWriterWrapper writer, ODataItemWrapper odataItemWrapper);
    private string ConvertToEscapedUriValue(string paramName, object value, bool useEntityReference);
    private object ConvertToODataValue(string paramName, object value, Boolean& needsSpecialEscaping, bool useEntityReference);
    private object ConvertToCollectionValue(string paramName, object value, ClientTypeAnnotation itemTypeAnnotation, bool useEntityReference);
    private object ConvertToEntityValue(object value, Type elementType, bool useEntityReference);
    [SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
private ODataResourceWrapper CreateODataResourceFromEntityOperationParameter(ClientTypeAnnotation clientTypeAnnotation, object parameterValue);
    [CompilerGeneratedAttribute]
private ODataEntityReferenceLink <ConvertToCollectionValue>b__36_0(object o);
}
internal class Microsoft.OData.Client.SimpleLazy`1 : object {
    private object mutex;
    private Func`1<T> factory;
    private T value;
    private bool valueCreated;
    internal T Value { get; }
    internal SimpleLazy`1(Func`1<T> factory);
    internal SimpleLazy`1(Func`1<T> factory, bool isThreadSafe);
    internal T get_Value();
    private void CreateValue();
}
[DebuggerDisplayAttribute("SingletonResourceExpression {Source}.{MemberExpression}")]
internal class Microsoft.OData.Client.SingletonResourceExpression : QueryableResourceExpression {
    public ExpressionType NodeType { get; }
    internal bool IsSingleton { get; }
    internal bool IsOperationInvocation { get; }
    internal SingletonResourceExpression(Type type, Expression source, Expression memberExpression, Type resourceType, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion);
    internal SingletonResourceExpression(Type type, Expression source, Expression memberExpression, Type resourceType, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion, string functionName, Dictionary`2<string, string> functionParameters, bool isAction);
    public virtual ExpressionType get_NodeType();
    internal virtual bool get_IsSingleton();
    internal virtual bool get_IsOperationInvocation();
    internal virtual QueryableResourceExpression CreateClone();
    protected virtual QueryableResourceExpression CreateCloneWithNewTypes(Type newType, Type newResourceType);
}
internal class Microsoft.OData.Client.SingleTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
[DebuggerDisplayAttribute("SkipQueryOptionExpression {SkipAmount}")]
internal class Microsoft.OData.Client.SkipQueryOptionExpression : QueryOptionExpression {
    private ConstantExpression skipAmount;
    public ExpressionType NodeType { get; }
    internal ConstantExpression SkipAmount { get; }
    internal SkipQueryOptionExpression(Type type, ConstantExpression skipAmount);
    public virtual ExpressionType get_NodeType();
    internal ConstantExpression get_SkipAmount();
    internal virtual QueryOptionExpression ComposeMultipleSpecification(QueryOptionExpression previous);
}
public class Microsoft.OData.Client.StreamDescriptor : Descriptor {
    private DataServiceStreamLink streamLink;
    private EntityDescriptor entityDescriptor;
    private StreamDescriptor transientNamedStreamInfo;
    [CompilerGeneratedAttribute]
private DataServiceSaveStream <SaveStream>k__BackingField;
    public DataServiceStreamLink StreamLink { get; }
    public EntityDescriptor EntityDescriptor { get; public set; }
    internal string Name { get; }
    internal Uri SelfLink { get; internal set; }
    internal Uri EditLink { get; internal set; }
    internal string ContentType { get; internal set; }
    internal string ETag { get; internal set; }
    internal DataServiceSaveStream SaveStream { get; internal set; }
    internal DescriptorKind DescriptorKind { get; }
    unknown StreamDescriptor TransientNamedStreamInfo {internal set; }
    internal StreamDescriptor(string name, EntityDescriptor entityDescriptor);
    internal StreamDescriptor(EntityDescriptor entityDescriptor);
    public DataServiceStreamLink get_StreamLink();
    public EntityDescriptor get_EntityDescriptor();
    public void set_EntityDescriptor(EntityDescriptor value);
    internal string get_Name();
    internal Uri get_SelfLink();
    internal void set_SelfLink(Uri value);
    internal Uri get_EditLink();
    internal void set_EditLink(Uri value);
    internal string get_ContentType();
    internal void set_ContentType(string value);
    internal string get_ETag();
    internal void set_ETag(string value);
    [CompilerGeneratedAttribute]
internal DataServiceSaveStream get_SaveStream();
    [CompilerGeneratedAttribute]
internal void set_SaveStream(DataServiceSaveStream value);
    internal virtual DescriptorKind get_DescriptorKind();
    internal void set_TransientNamedStreamInfo(StreamDescriptor value);
    internal static void MergeStreamDescriptor(StreamDescriptor existingStreamDescriptor, StreamDescriptor newStreamDescriptor);
    internal virtual void ClearChanges();
    internal Uri GetLatestEditLink();
    internal string GetLatestETag();
    internal void CloseSaveStream();
}
internal static class Microsoft.OData.Client.Strings : object {
    internal static string Batch_IncompleteResponseCount { get; }
    internal static string Context_BaseUri { get; }
    internal static string Context_BaseUriRequired { get; }
    internal static string Context_ResolveReturnedInvalidUri { get; }
    internal static string Context_RequestUriIsRelativeBaseUriRequired { get; }
    internal static string Context_TrackingExpectsAbsoluteUri { get; }
    internal static string Context_LocationHeaderExpectsAbsoluteUri { get; }
    internal static string Context_LinkResourceInsertFailure { get; }
    internal static string Context_BatchExecuteError { get; }
    internal static string Context_EntitySetName { get; }
    internal static string Context_BatchNotSupportedForNamedStreams { get; }
    internal static string Content_EntityWithoutKey { get; }
    internal static string Content_EntityIsNotEntityType { get; }
    internal static string Context_EntityNotContained { get; }
    internal static string Context_EntityAlreadyContained { get; }
    internal static string Context_DifferentEntityAlreadyContained { get; }
    internal static string Context_DidNotOriginateAsync { get; }
    internal static string Context_AsyncAlreadyDone { get; }
    internal static string Context_OperationCanceled { get; }
    internal static string Context_NoLoadWithInsertEnd { get; }
    internal static string Context_NoRelationWithInsertEnd { get; }
    internal static string Context_NoRelationWithDeleteEnd { get; }
    internal static string Context_RelationAlreadyContained { get; }
    internal static string Context_RelationNotRefOrCollection { get; }
    internal static string Context_AddLinkCollectionOnly { get; }
    internal static string Context_AddRelatedObjectCollectionOnly { get; }
    internal static string Context_AddRelatedObjectSourceDeleted { get; }
    internal static string Context_UpdateRelatedObjectNonCollectionOnly { get; }
    internal static string Context_SetLinkReferenceOnly { get; }
    internal static string Context_SetRelatedObjectNonCollectionOnly { get; }
    internal static string Context_SetRelatedObjectSourceDeleted { get; }
    internal static string Context_SetRelatedObjectLinkNonCollectionOnly { get; }
    internal static string Context_SetRelatedObjectLinkSourceDeleted { get; }
    internal static string Context_BatchNotSupportedForMediaLink { get; }
    internal static string Context_UnexpectedZeroRawRead { get; }
    internal static string Context_ChildResourceExists { get; }
    internal static string Context_ContentTypeRequiredForNamedStream { get; }
    internal static string Context_EntityNotMediaLinkEntry { get; }
    internal static string Context_SetSaveStreamWithoutEditMediaLink { get; }
    internal static string Context_BothLocationAndIdMustBeSpecified { get; }
    internal static string Context_BodyOperationParametersNotAllowedWithGet { get; }
    internal static string Context_MissingOperationParameterName { get; }
    internal static string Context_DuplicateUriOperationParameterName { get; }
    internal static string Context_DuplicateBodyOperationParameterName { get; }
    internal static string Context_ExecuteExpectsGetOrPostOrDelete { get; }
    internal static string Context_EndExecuteExpectedVoidResponse { get; }
    internal static string Context_NullElementInOperationParameterArray { get; }
    internal static string Context_EntityMetadataBuilderIsRequired { get; }
    internal static string Context_CannotChangeStateToAdded { get; }
    internal static string Context_CannotChangeStateToModifiedIfNotUnchanged { get; }
    internal static string Context_OnMessageCreatingReturningNull { get; }
    internal static string Context_SendingRequest_InvalidWhenUsingOnMessageCreating { get; }
    internal static string Context_EntityMediaLinksNotTrackedInEntity { get; }
    internal static string Context_EntityInNonTrackedContextLacksMediaLinks { get; }
    internal static string Context_DeepInsertOneTopLevelEntity { get; }
    internal static string DataServiceClientFormat_LoadServiceModelRequired { get; }
    internal static string DataServiceClientFormat_ValidServiceModelRequiredForJson { get; }
    internal static string ClientType_MultipleImplementationNotSupported { get; }
    internal static string ClientType_CollectionOfCollectionNotSupported { get; }
    internal static string DataServiceException_GeneralError { get; }
    internal static string Deserialize_GetEnumerator { get; }
    internal static string Deserialize_MixedTextWithComment { get; }
    internal static string Deserialize_ExpectingSimpleValue { get; }
    internal static string Deserialize_MismatchEntryLinkLocalSimple { get; }
    internal static string Deserialize_NoLocationHeader { get; }
    internal static string Deserialize_MissingIdElement { get; }
    internal static string Collection_NullCollectionItemsNotSupported { get; }
    internal static string Collection_CollectionTypesInCollectionOfPrimitiveTypesNotAllowed { get; }
    internal static string Collection_PrimitiveTypesInCollectionOfComplexTypesNotAllowed { get; }
    internal static string HttpProcessUtility_ContentTypeMissing { get; }
    internal static string HttpProcessUtility_MediaTypeMissingValue { get; }
    internal static string HttpProcessUtility_MediaTypeRequiresSemicolonBeforeParameter { get; }
    internal static string HttpProcessUtility_MediaTypeRequiresSlash { get; }
    internal static string HttpProcessUtility_MediaTypeRequiresSubType { get; }
    internal static string HttpProcessUtility_MediaTypeUnspecified { get; }
    internal static string MaterializeFromObject_CountNotPresent { get; }
    internal static string MaterializeFromObject_TopLevelLinkNotAvailable { get; }
    internal static string MaterializeFromObject_CollectionKeyNotPresentInLinkTable { get; }
    internal static string MaterializeFromObject_GetNestLinkForFlatCollection { get; }
    internal static string ODataRequestMessage_GetStreamMethodNotSupported { get; }
    internal static string Util_EmptyString { get; }
    internal static string Util_EmptyArray { get; }
    internal static string Util_NullArrayElement { get; }
    internal static string ALinq_TypeBinaryNotSupported { get; }
    internal static string ALinq_ConditionalNotSupported { get; }
    internal static string ALinq_ParameterNotSupported { get; }
    internal static string ALinq_LambdaNotSupported { get; }
    internal static string ALinq_NewNotSupported { get; }
    internal static string ALinq_MemberInitNotSupported { get; }
    internal static string ALinq_ListInitNotSupported { get; }
    internal static string ALinq_NewArrayNotSupported { get; }
    internal static string ALinq_InvocationNotSupported { get; }
    internal static string ALinq_QueryOptionsOnlyAllowedOnLeafNodes { get; }
    internal static string ALinq_CantExpand { get; }
    internal static string ALinq_CantNavigateWithoutKeyPredicate { get; }
    internal static string ALinq_CanOnlyApplyOneKeyPredicate { get; }
    internal static string ALinq_CantAddQueryOption { get; }
    internal static string ALinq_QueryOptionsOnlyAllowedOnSingletons { get; }
    internal static string ALinq_CannotAddCountOption { get; }
    internal static string ALinq_CannotAddCountOptionConflict { get; }
    internal static string ALinq_ProjectionOnlyAllowedOnLeafNodes { get; }
    internal static string ALinq_ProjectionCanOnlyHaveOneProjection { get; }
    internal static string ALinq_CannotConstructKnownEntityTypes { get; }
    internal static string ALinq_CannotCreateConstantEntity { get; }
    internal static string ALinq_CanOnlyProjectTheLeaf { get; }
    internal static string ALinq_CannotProjectWithExplicitExpansion { get; }
    internal static string ALinq_OfTypeArgumentNotAvailable { get; }
    internal static string ALinq_CannotUseTypeFiltersMultipleTimes { get; }
    internal static string ALinq_TypeAsNotSupportedForMaxDataServiceVersionLessThan3 { get; }
    internal static string ALinq_FormatQueryOptionNotSupported { get; }
    internal static string ALinq_ContainsNotValidOnEmptyCollection { get; }
    internal static string DSKAttribute_MustSpecifyAtleastOnePropertyName { get; }
    internal static string DataServiceCollection_LoadRequiresTargetCollectionObserved { get; }
    internal static string DataServiceCollection_CannotStopTrackingChildCollection { get; }
    internal static string DataServiceCollection_OperationForTrackedOnly { get; }
    internal static string DataServiceCollection_CannotDetermineContextFromItems { get; }
    internal static string DataServiceCollection_InsertIntoTrackedButNotLoadedCollection { get; }
    internal static string DataServiceCollection_MultipleLoadAsyncOperationsAtTheSameTime { get; }
    internal static string DataServiceCollection_LoadAsyncNoParamsWithoutParentEntity { get; }
    internal static string DataServiceCollection_LoadAsyncRequiresDataServiceQuery { get; }
    internal static string DataBinding_BindingOperation_DetachedSource { get; }
    internal static string Parser_SingleEntry_NoneFound { get; }
    internal static string Parser_SingleEntry_MultipleFound { get; }
    internal static string Parser_SingleEntry_ExpectedFeedOrEntry { get; }
    internal static string Materializer_DataServiceCollectionNotSupportedForNonEntities { get; }
    internal static string Materializer_ResetAfterEnumeratorCreationError { get; }
    internal static string DataServiceQuery_EnumerationNotSupported { get; }
    internal static string Context_SendingRequestEventArgsNotHttp { get; }
    internal static string DataServiceRequest_FailGetCount { get; }
    internal static string DataServiceRequest_FailGetValue { get; }
    internal static string Context_ExecuteExpectedVoidResponse { get; }
    internal static string Batch_ExpectedContentType(object p0);
    internal static string Batch_ExpectedResponse(object p0);
    internal static string get_Batch_IncompleteResponseCount();
    internal static string Batch_UnexpectedContent(object p0);
    internal static string get_Context_BaseUri();
    internal static string get_Context_BaseUriRequired();
    internal static string get_Context_ResolveReturnedInvalidUri();
    internal static string get_Context_RequestUriIsRelativeBaseUriRequired();
    internal static string Context_ResolveEntitySetOrBaseUriRequired(object p0);
    internal static string Context_CannotConvertKey(object p0);
    internal static string get_Context_TrackingExpectsAbsoluteUri();
    internal static string get_Context_LocationHeaderExpectsAbsoluteUri();
    internal static string get_Context_LinkResourceInsertFailure();
    internal static string Context_InternalError(object p0);
    internal static string get_Context_BatchExecuteError();
    internal static string get_Context_EntitySetName();
    internal static string get_Context_BatchNotSupportedForNamedStreams();
    internal static string Context_SetSaveStreamWithoutNamedStreamEditLink(object p0);
    internal static string get_Content_EntityWithoutKey();
    internal static string get_Content_EntityIsNotEntityType();
    internal static string get_Context_EntityNotContained();
    internal static string get_Context_EntityAlreadyContained();
    internal static string get_Context_DifferentEntityAlreadyContained();
    internal static string get_Context_DidNotOriginateAsync();
    internal static string get_Context_AsyncAlreadyDone();
    internal static string get_Context_OperationCanceled();
    internal static string Context_PropertyNotSupportedForMaxDataServiceVersionGreaterThanX(object p0, object p1);
    internal static string get_Context_NoLoadWithInsertEnd();
    internal static string get_Context_NoRelationWithInsertEnd();
    internal static string get_Context_NoRelationWithDeleteEnd();
    internal static string get_Context_RelationAlreadyContained();
    internal static string get_Context_RelationNotRefOrCollection();
    internal static string get_Context_AddLinkCollectionOnly();
    internal static string get_Context_AddRelatedObjectCollectionOnly();
    internal static string get_Context_AddRelatedObjectSourceDeleted();
    internal static string get_Context_UpdateRelatedObjectNonCollectionOnly();
    internal static string get_Context_SetLinkReferenceOnly();
    internal static string get_Context_SetRelatedObjectNonCollectionOnly();
    internal static string get_Context_SetRelatedObjectSourceDeleted();
    internal static string get_Context_SetRelatedObjectLinkNonCollectionOnly();
    internal static string get_Context_SetRelatedObjectLinkSourceDeleted();
    internal static string Context_NoContentTypeForMediaLink(object p0, object p1);
    internal static string get_Context_BatchNotSupportedForMediaLink();
    internal static string get_Context_UnexpectedZeroRawRead();
    internal static string Context_VersionNotSupported(object p0, object p1);
    internal static string Context_ResponseVersionIsBiggerThanProtocolVersion(object p0, object p1);
    internal static string Context_RequestVersionIsBiggerThanProtocolVersion(object p0, object p1);
    internal static string get_Context_ChildResourceExists();
    internal static string get_Context_ContentTypeRequiredForNamedStream();
    internal static string get_Context_EntityNotMediaLinkEntry();
    internal static string Context_MLEWithoutSaveStream(object p0);
    internal static string Context_SetSaveStreamOnMediaEntryProperty(object p0);
    internal static string get_Context_SetSaveStreamWithoutEditMediaLink();
    internal static string Context_SetSaveStreamOnInvalidEntityState(object p0);
    internal static string Context_EntityDoesNotContainNamedStream(object p0);
    internal static string Context_MissingSelfAndEditLinkForNamedStream(object p0);
    internal static string get_Context_BothLocationAndIdMustBeSpecified();
    internal static string get_Context_BodyOperationParametersNotAllowedWithGet();
    internal static string get_Context_MissingOperationParameterName();
    internal static string get_Context_DuplicateUriOperationParameterName();
    internal static string get_Context_DuplicateBodyOperationParameterName();
    internal static string Context_NullKeysAreNotSupported(object p0);
    internal static string get_Context_ExecuteExpectsGetOrPostOrDelete();
    internal static string get_Context_EndExecuteExpectedVoidResponse();
    internal static string get_Context_NullElementInOperationParameterArray();
    internal static string get_Context_EntityMetadataBuilderIsRequired();
    internal static string get_Context_CannotChangeStateToAdded();
    internal static string get_Context_CannotChangeStateToModifiedIfNotUnchanged();
    internal static string Context_CannotChangeStateIfAdded(object p0);
    internal static string get_Context_OnMessageCreatingReturningNull();
    internal static string get_Context_SendingRequest_InvalidWhenUsingOnMessageCreating();
    internal static string Context_MustBeUsedWith(object p0, object p1);
    internal static string get_Context_EntityMediaLinksNotTrackedInEntity();
    internal static string get_Context_EntityInNonTrackedContextLacksMediaLinks();
    internal static string get_Context_DeepInsertOneTopLevelEntity();
    internal static string Context_DeepInsertDeletedOrModified(object p0);
    internal static string get_DataServiceClientFormat_LoadServiceModelRequired();
    internal static string get_DataServiceClientFormat_ValidServiceModelRequiredForJson();
    internal static string Collection_NullCollectionReference(object p0, object p1);
    internal static string ClientType_MissingOpenProperty(object p0, object p1);
    internal static string Clienttype_MultipleOpenProperty(object p0);
    internal static string ClientType_MissingProperty(object p0, object p1);
    internal static string ClientType_KeysMustBeSimpleTypes(object p0, object p1, object p2);
    internal static string ClientType_KeysOnDifferentDeclaredType(object p0);
    internal static string ClientType_MissingMimeTypeProperty(object p0, object p1);
    internal static string ClientType_MissingMimeTypeDataProperty(object p0, object p1);
    internal static string ClientType_MissingMediaEntryProperty(object p0, object p1);
    internal static string ClientType_NoSettableFields(object p0);
    internal static string get_ClientType_MultipleImplementationNotSupported();
    internal static string ClientType_NullOpenProperties(object p0);
    internal static string ClientType_Ambiguous(object p0, object p1);
    internal static string ClientType_UnsupportedType(object p0);
    internal static string get_ClientType_CollectionOfCollectionNotSupported();
    internal static string ClientType_MultipleTypesWithSameName(object p0);
    internal static string WebUtil_TypeMismatchInCollection(object p0);
    internal static string WebUtil_TypeMismatchInNonPropertyCollection(object p0);
    internal static string ClientTypeCache_NonEntityTypeCannotContainEntityProperties(object p0, object p1);
    internal static string get_DataServiceException_GeneralError();
    internal static string get_Deserialize_GetEnumerator();
    internal static string Deserialize_Current(object p0, object p1);
    internal static string get_Deserialize_MixedTextWithComment();
    internal static string get_Deserialize_ExpectingSimpleValue();
    internal static string get_Deserialize_MismatchEntryLinkLocalSimple();
    internal static string Deserialize_MismatchEntryLinkFeedPropertyNotCollection(object p0);
    internal static string Deserialize_MismatchEntryLinkEntryPropertyIsCollection(object p0);
    internal static string get_Deserialize_NoLocationHeader();
    internal static string Deserialize_ServerException(object p0);
    internal static string get_Deserialize_MissingIdElement();
    internal static string Collection_NullCollectionNotSupported(object p0);
    internal static string Collection_NullNonPropertyCollectionNotSupported(object p0);
    internal static string get_Collection_NullCollectionItemsNotSupported();
    internal static string get_Collection_CollectionTypesInCollectionOfPrimitiveTypesNotAllowed();
    internal static string get_Collection_PrimitiveTypesInCollectionOfComplexTypesNotAllowed();
    internal static string EntityDescriptor_MissingSelfEditLink(object p0);
    internal static string get_HttpProcessUtility_ContentTypeMissing();
    internal static string get_HttpProcessUtility_MediaTypeMissingValue();
    internal static string get_HttpProcessUtility_MediaTypeRequiresSemicolonBeforeParameter();
    internal static string get_HttpProcessUtility_MediaTypeRequiresSlash();
    internal static string get_HttpProcessUtility_MediaTypeRequiresSubType();
    internal static string get_HttpProcessUtility_MediaTypeUnspecified();
    internal static string HttpProcessUtility_EncodingNotSupported(object p0);
    internal static string HttpProcessUtility_EscapeCharWithoutQuotes(object p0);
    internal static string HttpProcessUtility_EscapeCharAtEnd(object p0);
    internal static string HttpProcessUtility_ClosingQuoteNotFound(object p0);
    internal static string get_MaterializeFromObject_CountNotPresent();
    internal static string get_MaterializeFromObject_TopLevelLinkNotAvailable();
    internal static string get_MaterializeFromObject_CollectionKeyNotPresentInLinkTable();
    internal static string get_MaterializeFromObject_GetNestLinkForFlatCollection();
    internal static string get_ODataRequestMessage_GetStreamMethodNotSupported();
    internal static string get_Util_EmptyString();
    internal static string get_Util_EmptyArray();
    internal static string get_Util_NullArrayElement();
    internal static string ALinq_UnsupportedExpression(object p0);
    internal static string ALinq_CouldNotConvert(object p0);
    internal static string ALinq_MethodNotSupported(object p0);
    internal static string ALinq_UnaryNotSupported(object p0);
    internal static string ALinq_BinaryNotSupported(object p0);
    internal static string ALinq_ConstantNotSupported(object p0);
    internal static string get_ALinq_TypeBinaryNotSupported();
    internal static string get_ALinq_ConditionalNotSupported();
    internal static string get_ALinq_ParameterNotSupported();
    internal static string ALinq_MemberAccessNotSupported(object p0);
    internal static string get_ALinq_LambdaNotSupported();
    internal static string get_ALinq_NewNotSupported();
    internal static string get_ALinq_MemberInitNotSupported();
    internal static string get_ALinq_ListInitNotSupported();
    internal static string get_ALinq_NewArrayNotSupported();
    internal static string get_ALinq_InvocationNotSupported();
    internal static string get_ALinq_QueryOptionsOnlyAllowedOnLeafNodes();
    internal static string get_ALinq_CantExpand();
    internal static string ALinq_CantCastToUnsupportedPrimitive(object p0);
    internal static string get_ALinq_CantNavigateWithoutKeyPredicate();
    internal static string get_ALinq_CanOnlyApplyOneKeyPredicate();
    internal static string ALinq_CantTranslateExpression(object p0);
    internal static string ALinq_TranslationError(object p0);
    internal static string get_ALinq_CantAddQueryOption();
    internal static string ALinq_CantAddDuplicateQueryOption(object p0);
    internal static string ALinq_CantAddAstoriaQueryOption(object p0);
    internal static string ALinq_QueryOptionNotSupported(object p0);
    internal static string ALinq_CantReferToPublicField(object p0);
    internal static string get_ALinq_QueryOptionsOnlyAllowedOnSingletons();
    internal static string ALinq_QueryOptionOutOfOrder(object p0, object p1);
    internal static string get_ALinq_CannotAddCountOption();
    internal static string get_ALinq_CannotAddCountOptionConflict();
    internal static string get_ALinq_ProjectionOnlyAllowedOnLeafNodes();
    internal static string get_ALinq_ProjectionCanOnlyHaveOneProjection();
    internal static string ALinq_ProjectionMemberAssignmentMismatch(object p0, object p1, object p2);
    internal static string ALinq_InvalidExpressionInNavigationPath(object p0);
    internal static string ALinq_ExpressionNotSupportedInProjectionToEntity(object p0, object p1);
    internal static string ALinq_ExpressionNotSupportedInProjection(object p0, object p1);
    internal static string get_ALinq_CannotConstructKnownEntityTypes();
    internal static string get_ALinq_CannotCreateConstantEntity();
    internal static string ALinq_PropertyNamesMustMatchInProjections(object p0, object p1);
    internal static string get_ALinq_CanOnlyProjectTheLeaf();
    internal static string get_ALinq_CannotProjectWithExplicitExpansion();
    internal static string ALinq_CollectionPropertyNotSupportedInOrderBy(object p0);
    internal static string ALinq_CollectionPropertyNotSupportedInWhere(object p0);
    internal static string ALinq_CollectionMemberAccessNotSupportedInNavigation(object p0);
    internal static string ALinq_LinkPropertyNotSupportedInExpression(object p0);
    internal static string get_ALinq_OfTypeArgumentNotAvailable();
    internal static string get_ALinq_CannotUseTypeFiltersMultipleTimes();
    internal static string ALinq_ExpressionCannotEndWithTypeAs(object p0, object p1);
    internal static string get_ALinq_TypeAsNotSupportedForMaxDataServiceVersionLessThan3();
    internal static string ALinq_TypeAsArgumentNotEntityType(object p0);
    internal static string ALinq_InvalidSourceForAnyAll(object p0);
    internal static string ALinq_AnyAllNotSupportedInOrderBy(object p0);
    internal static string get_ALinq_FormatQueryOptionNotSupported();
    internal static string ALinq_IllegalSystemQueryOption(object p0);
    internal static string ALinq_IllegalPathStructure(object p0);
    internal static string ALinq_TypeTokenWithNoTrailingNavProp(object p0);
    internal static string get_ALinq_ContainsNotValidOnEmptyCollection();
    internal static string ALinq_AggregationMethodNotSupported(object p0);
    internal static string ALinq_InvalidAggregateExpression(object p0);
    internal static string ALinq_InvalidGroupingExpression(object p0);
    internal static string ALinq_InvalidGroupByKeySelector(object p0);
    internal static string get_DSKAttribute_MustSpecifyAtleastOnePropertyName();
    internal static string get_DataServiceCollection_LoadRequiresTargetCollectionObserved();
    internal static string get_DataServiceCollection_CannotStopTrackingChildCollection();
    internal static string get_DataServiceCollection_OperationForTrackedOnly();
    internal static string get_DataServiceCollection_CannotDetermineContextFromItems();
    internal static string get_DataServiceCollection_InsertIntoTrackedButNotLoadedCollection();
    internal static string get_DataServiceCollection_MultipleLoadAsyncOperationsAtTheSameTime();
    internal static string get_DataServiceCollection_LoadAsyncNoParamsWithoutParentEntity();
    internal static string get_DataServiceCollection_LoadAsyncRequiresDataServiceQuery();
    internal static string DataBinding_DataServiceCollectionArgumentMustHaveEntityType(object p0);
    internal static string DataBinding_CollectionPropertySetterValueHasObserver(object p0, object p1);
    internal static string DataBinding_DataServiceCollectionChangedUnknownActionCollection(object p0);
    internal static string DataBinding_CollectionChangedUnknownActionCollection(object p0, object p1);
    internal static string get_DataBinding_BindingOperation_DetachedSource();
    internal static string DataBinding_BindingOperation_ArrayItemNull(object p0);
    internal static string DataBinding_BindingOperation_ArrayItemNotEntity(object p0);
    internal static string DataBinding_Util_UnknownEntitySetName(object p0);
    internal static string DataBinding_EntityAlreadyInCollection(object p0);
    internal static string DataBinding_NotifyPropertyChangedNotImpl(object p0);
    internal static string DataBinding_NotifyCollectionChangedNotImpl(object p0);
    internal static string DataBinding_ComplexObjectAssociatedWithMultipleEntities(object p0);
    internal static string DataBinding_CollectionAssociatedWithMultipleEntities(object p0);
    internal static string get_Parser_SingleEntry_NoneFound();
    internal static string get_Parser_SingleEntry_MultipleFound();
    internal static string get_Parser_SingleEntry_ExpectedFeedOrEntry();
    internal static string Materializer_CannotAssignNull(object p0, object p1);
    internal static string Materializer_EntryIntoCollectionMismatch(object p0, object p1);
    internal static string Materializer_EntryToAccessIsNull(object p0);
    internal static string Materializer_EntryToInitializeIsNull(object p0);
    internal static string Materializer_ProjectEntityTypeMismatch(object p0, object p1, object p2);
    internal static string Materializer_PropertyMissing(object p0);
    internal static string Materializer_PropertyNotExpectedEntry(object p0);
    internal static string get_Materializer_DataServiceCollectionNotSupportedForNonEntities();
    internal static string Materializer_NoParameterlessCtorForCollectionProperty(object p0, object p1);
    internal static string Materializer_InvalidCollectionItem(object p0);
    internal static string Materializer_InvalidEntityType(object p0);
    internal static string Materializer_InvalidNonEntityType(object p0);
    internal static string Materializer_CollectionExpectedCollection(object p0);
    internal static string Materializer_InvalidResponsePayload(object p0);
    internal static string Materializer_InvalidContentTypeEncountered(object p0);
    internal static string Materializer_MaterializationTypeError(object p0);
    internal static string get_Materializer_ResetAfterEnumeratorCreationError();
    internal static string Materializer_TypeShouldBeCollectionError(object p0);
    internal static string Serializer_LoopsNotAllowedInComplexTypes(object p0);
    internal static string Serializer_LoopsNotAllowedInNonPropertyComplexTypes(object p0);
    internal static string Serializer_InvalidCollectionParameterItemType(object p0, object p1);
    internal static string Serializer_NullCollectionParameterItemValue(object p0);
    internal static string Serializer_InvalidParameterType(object p0, object p1);
    internal static string Serializer_UriDoesNotContainParameterAlias(object p0);
    internal static string Serializer_InvalidEnumMemberValue(object p0, object p1);
    internal static string get_DataServiceQuery_EnumerationNotSupported();
    internal static string get_Context_SendingRequestEventArgsNotHttp();
    internal static string General_InternalError(object p0);
    internal static string ODataMetadataBuilder_MissingEntitySetUri(object p0);
    internal static string ODataMetadataBuilder_MissingSegmentForEntitySetUriSuffix(object p0, object p1);
    internal static string ODataMetadataBuilder_MissingEntityInstanceUri(object p0);
    internal static string EdmValueUtils_UnsupportedPrimitiveType(object p0);
    internal static string EdmValueUtils_IncorrectPrimitiveTypeKind(object p0, object p1, object p2);
    internal static string EdmValueUtils_IncorrectPrimitiveTypeKindNoTypeName(object p0, object p1);
    internal static string EdmValueUtils_CannotConvertTypeToClrValue(object p0);
    internal static string ValueParser_InvalidDuration(object p0);
    internal static string PlatformHelper_DateTimeOffsetMustContainTimeZone(object p0);
    internal static string get_DataServiceRequest_FailGetCount();
    internal static string get_DataServiceRequest_FailGetValue();
    internal static string get_Context_ExecuteExpectedVoidResponse();
}
internal class Microsoft.OData.Client.StringTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
[DebuggerDisplayAttribute("TakeQueryOptionExpression {TakeAmount}")]
internal class Microsoft.OData.Client.TakeQueryOptionExpression : QueryOptionExpression {
    private ConstantExpression takeAmount;
    public ExpressionType NodeType { get; }
    internal ConstantExpression TakeAmount { get; }
    internal TakeQueryOptionExpression(Type type, ConstantExpression takeAmount);
    public virtual ExpressionType get_NodeType();
    internal ConstantExpression get_TakeAmount();
    internal virtual QueryOptionExpression ComposeMultipleSpecification(QueryOptionExpression previous);
}
[ExtensionAttribute]
public static class Microsoft.OData.Client.TaskExtensionMethods : object {
    [ExtensionAttribute]
public static Task`1<TResult> ToApm(Task`1<TResult> task, AsyncCallback callback, object state);
}
internal class Microsoft.OData.Client.TextPrimitiveParserToken : PrimitiveParserToken {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    internal string Text { get; private set; }
    internal TextPrimitiveParserToken(string text);
    [CompilerGeneratedAttribute]
internal string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    internal virtual object Materialize(Type clrType);
}
internal class Microsoft.OData.Client.TextRes : object {
    internal static string Batch_ExpectedContentType;
    internal static string Batch_ExpectedResponse;
    internal static string Batch_IncompleteResponseCount;
    internal static string Batch_UnexpectedContent;
    internal static string Context_BaseUri;
    internal static string Context_BaseUriRequired;
    internal static string Context_ResolveReturnedInvalidUri;
    internal static string Context_RequestUriIsRelativeBaseUriRequired;
    internal static string Context_ResolveEntitySetOrBaseUriRequired;
    internal static string Context_CannotConvertKey;
    internal static string Context_TrackingExpectsAbsoluteUri;
    internal static string Context_LocationHeaderExpectsAbsoluteUri;
    internal static string Context_LinkResourceInsertFailure;
    internal static string Context_InternalError;
    internal static string Context_BatchExecuteError;
    internal static string Context_EntitySetName;
    internal static string Context_BatchNotSupportedForNamedStreams;
    internal static string Context_SetSaveStreamWithoutNamedStreamEditLink;
    internal static string Content_EntityWithoutKey;
    internal static string Content_EntityIsNotEntityType;
    internal static string Context_EntityNotContained;
    internal static string Context_EntityAlreadyContained;
    internal static string Context_DifferentEntityAlreadyContained;
    internal static string Context_DidNotOriginateAsync;
    internal static string Context_AsyncAlreadyDone;
    internal static string Context_OperationCanceled;
    internal static string Context_PropertyNotSupportedForMaxDataServiceVersionGreaterThanX;
    internal static string Context_NoLoadWithInsertEnd;
    internal static string Context_NoRelationWithInsertEnd;
    internal static string Context_NoRelationWithDeleteEnd;
    internal static string Context_RelationAlreadyContained;
    internal static string Context_RelationNotRefOrCollection;
    internal static string Context_AddLinkCollectionOnly;
    internal static string Context_AddRelatedObjectCollectionOnly;
    internal static string Context_AddRelatedObjectSourceDeleted;
    internal static string Context_UpdateRelatedObjectNonCollectionOnly;
    internal static string Context_SetLinkReferenceOnly;
    internal static string Context_SetRelatedObjectNonCollectionOnly;
    internal static string Context_SetRelatedObjectSourceDeleted;
    internal static string Context_SetRelatedObjectLinkNonCollectionOnly;
    internal static string Context_SetRelatedObjectLinkSourceDeleted;
    internal static string Context_NoContentTypeForMediaLink;
    internal static string Context_BatchNotSupportedForMediaLink;
    internal static string Context_UnexpectedZeroRawRead;
    internal static string Context_VersionNotSupported;
    internal static string Context_ResponseVersionIsBiggerThanProtocolVersion;
    internal static string Context_RequestVersionIsBiggerThanProtocolVersion;
    internal static string Context_ChildResourceExists;
    internal static string Context_ContentTypeRequiredForNamedStream;
    internal static string Context_EntityNotMediaLinkEntry;
    internal static string Context_MLEWithoutSaveStream;
    internal static string Context_SetSaveStreamOnMediaEntryProperty;
    internal static string Context_SetSaveStreamWithoutEditMediaLink;
    internal static string Context_SetSaveStreamOnInvalidEntityState;
    internal static string Context_EntityDoesNotContainNamedStream;
    internal static string Context_MissingSelfAndEditLinkForNamedStream;
    internal static string Context_BothLocationAndIdMustBeSpecified;
    internal static string Context_BodyOperationParametersNotAllowedWithGet;
    internal static string Context_MissingOperationParameterName;
    internal static string Context_DuplicateUriOperationParameterName;
    internal static string Context_DuplicateBodyOperationParameterName;
    internal static string Context_NullKeysAreNotSupported;
    internal static string Context_ExecuteExpectsGetOrPostOrDelete;
    internal static string Context_EndExecuteExpectedVoidResponse;
    internal static string Context_NullElementInOperationParameterArray;
    internal static string Context_EntityMetadataBuilderIsRequired;
    internal static string Context_CannotChangeStateToAdded;
    internal static string Context_CannotChangeStateToModifiedIfNotUnchanged;
    internal static string Context_CannotChangeStateIfAdded;
    internal static string Context_OnMessageCreatingReturningNull;
    internal static string Context_SendingRequest_InvalidWhenUsingOnMessageCreating;
    internal static string Context_MustBeUsedWith;
    internal static string Context_EntityMediaLinksNotTrackedInEntity;
    internal static string Context_EntityInNonTrackedContextLacksMediaLinks;
    internal static string Context_DeepInsertOneTopLevelEntity;
    internal static string Context_DeepInsertDeletedOrModified;
    internal static string DataServiceClientFormat_LoadServiceModelRequired;
    internal static string DataServiceClientFormat_ValidServiceModelRequiredForJson;
    internal static string Collection_NullCollectionReference;
    internal static string ClientType_MissingOpenProperty;
    internal static string Clienttype_MultipleOpenProperty;
    internal static string ClientType_MissingProperty;
    internal static string ClientType_KeysMustBeSimpleTypes;
    internal static string ClientType_KeysOnDifferentDeclaredType;
    internal static string ClientType_MissingMimeTypeProperty;
    internal static string ClientType_MissingMimeTypeDataProperty;
    internal static string ClientType_MissingMediaEntryProperty;
    internal static string ClientType_NoSettableFields;
    internal static string ClientType_MultipleImplementationNotSupported;
    internal static string ClientType_NullOpenProperties;
    internal static string ClientType_Ambiguous;
    internal static string ClientType_UnsupportedType;
    internal static string ClientType_CollectionOfCollectionNotSupported;
    internal static string ClientType_MultipleTypesWithSameName;
    internal static string WebUtil_TypeMismatchInCollection;
    internal static string WebUtil_TypeMismatchInNonPropertyCollection;
    internal static string ClientTypeCache_NonEntityTypeCannotContainEntityProperties;
    internal static string DataServiceException_GeneralError;
    internal static string Deserialize_GetEnumerator;
    internal static string Deserialize_Current;
    internal static string Deserialize_MixedTextWithComment;
    internal static string Deserialize_ExpectingSimpleValue;
    internal static string Deserialize_MismatchEntryLinkLocalSimple;
    internal static string Deserialize_MismatchEntryLinkFeedPropertyNotCollection;
    internal static string Deserialize_MismatchEntryLinkEntryPropertyIsCollection;
    internal static string Deserialize_NoLocationHeader;
    internal static string Deserialize_ServerException;
    internal static string Deserialize_MissingIdElement;
    internal static string Collection_NullCollectionNotSupported;
    internal static string Collection_NullNonPropertyCollectionNotSupported;
    internal static string Collection_NullCollectionItemsNotSupported;
    internal static string Collection_CollectionTypesInCollectionOfPrimitiveTypesNotAllowed;
    internal static string Collection_PrimitiveTypesInCollectionOfComplexTypesNotAllowed;
    internal static string EntityDescriptor_MissingSelfEditLink;
    internal static string HttpProcessUtility_ContentTypeMissing;
    internal static string HttpProcessUtility_MediaTypeMissingValue;
    internal static string HttpProcessUtility_MediaTypeRequiresSemicolonBeforeParameter;
    internal static string HttpProcessUtility_MediaTypeRequiresSlash;
    internal static string HttpProcessUtility_MediaTypeRequiresSubType;
    internal static string HttpProcessUtility_MediaTypeUnspecified;
    internal static string HttpProcessUtility_EncodingNotSupported;
    internal static string HttpProcessUtility_EscapeCharWithoutQuotes;
    internal static string HttpProcessUtility_EscapeCharAtEnd;
    internal static string HttpProcessUtility_ClosingQuoteNotFound;
    internal static string MaterializeFromObject_CountNotPresent;
    internal static string MaterializeFromObject_TopLevelLinkNotAvailable;
    internal static string MaterializeFromObject_CollectionKeyNotPresentInLinkTable;
    internal static string MaterializeFromObject_GetNestLinkForFlatCollection;
    internal static string ODataRequestMessage_GetStreamMethodNotSupported;
    internal static string Util_EmptyString;
    internal static string Util_EmptyArray;
    internal static string Util_NullArrayElement;
    internal static string ALinq_UnsupportedExpression;
    internal static string ALinq_CouldNotConvert;
    internal static string ALinq_MethodNotSupported;
    internal static string ALinq_UnaryNotSupported;
    internal static string ALinq_BinaryNotSupported;
    internal static string ALinq_ConstantNotSupported;
    internal static string ALinq_TypeBinaryNotSupported;
    internal static string ALinq_ConditionalNotSupported;
    internal static string ALinq_ParameterNotSupported;
    internal static string ALinq_MemberAccessNotSupported;
    internal static string ALinq_LambdaNotSupported;
    internal static string ALinq_NewNotSupported;
    internal static string ALinq_MemberInitNotSupported;
    internal static string ALinq_ListInitNotSupported;
    internal static string ALinq_NewArrayNotSupported;
    internal static string ALinq_InvocationNotSupported;
    internal static string ALinq_QueryOptionsOnlyAllowedOnLeafNodes;
    internal static string ALinq_CantExpand;
    internal static string ALinq_CantCastToUnsupportedPrimitive;
    internal static string ALinq_CantNavigateWithoutKeyPredicate;
    internal static string ALinq_CanOnlyApplyOneKeyPredicate;
    internal static string ALinq_CantTranslateExpression;
    internal static string ALinq_TranslationError;
    internal static string ALinq_CantAddQueryOption;
    internal static string ALinq_CantAddDuplicateQueryOption;
    internal static string ALinq_CantAddAstoriaQueryOption;
    internal static string ALinq_QueryOptionNotSupported;
    internal static string ALinq_CantReferToPublicField;
    internal static string ALinq_QueryOptionsOnlyAllowedOnSingletons;
    internal static string ALinq_QueryOptionOutOfOrder;
    internal static string ALinq_CannotAddCountOption;
    internal static string ALinq_CannotAddCountOptionConflict;
    internal static string ALinq_ProjectionOnlyAllowedOnLeafNodes;
    internal static string ALinq_ProjectionCanOnlyHaveOneProjection;
    internal static string ALinq_ProjectionMemberAssignmentMismatch;
    internal static string ALinq_InvalidExpressionInNavigationPath;
    internal static string ALinq_ExpressionNotSupportedInProjectionToEntity;
    internal static string ALinq_ExpressionNotSupportedInProjection;
    internal static string ALinq_CannotConstructKnownEntityTypes;
    internal static string ALinq_CannotCreateConstantEntity;
    internal static string ALinq_PropertyNamesMustMatchInProjections;
    internal static string ALinq_CanOnlyProjectTheLeaf;
    internal static string ALinq_CannotProjectWithExplicitExpansion;
    internal static string ALinq_CollectionPropertyNotSupportedInOrderBy;
    internal static string ALinq_CollectionPropertyNotSupportedInWhere;
    internal static string ALinq_CollectionMemberAccessNotSupportedInNavigation;
    internal static string ALinq_LinkPropertyNotSupportedInExpression;
    internal static string ALinq_OfTypeArgumentNotAvailable;
    internal static string ALinq_CannotUseTypeFiltersMultipleTimes;
    internal static string ALinq_ExpressionCannotEndWithTypeAs;
    internal static string ALinq_TypeAsNotSupportedForMaxDataServiceVersionLessThan3;
    internal static string ALinq_TypeAsArgumentNotEntityType;
    internal static string ALinq_InvalidSourceForAnyAll;
    internal static string ALinq_AnyAllNotSupportedInOrderBy;
    internal static string ALinq_FormatQueryOptionNotSupported;
    internal static string ALinq_IllegalSystemQueryOption;
    internal static string ALinq_IllegalPathStructure;
    internal static string ALinq_TypeTokenWithNoTrailingNavProp;
    internal static string ALinq_ContainsNotValidOnEmptyCollection;
    internal static string ALinq_AggregationMethodNotSupported;
    internal static string ALinq_InvalidAggregateExpression;
    internal static string ALinq_InvalidGroupingExpression;
    internal static string ALinq_InvalidGroupByKeySelector;
    internal static string DSKAttribute_MustSpecifyAtleastOnePropertyName;
    internal static string DataServiceCollection_LoadRequiresTargetCollectionObserved;
    internal static string DataServiceCollection_CannotStopTrackingChildCollection;
    internal static string DataServiceCollection_OperationForTrackedOnly;
    internal static string DataServiceCollection_CannotDetermineContextFromItems;
    internal static string DataServiceCollection_InsertIntoTrackedButNotLoadedCollection;
    internal static string DataServiceCollection_MultipleLoadAsyncOperationsAtTheSameTime;
    internal static string DataServiceCollection_LoadAsyncNoParamsWithoutParentEntity;
    internal static string DataServiceCollection_LoadAsyncRequiresDataServiceQuery;
    internal static string DataBinding_DataServiceCollectionArgumentMustHaveEntityType;
    internal static string DataBinding_CollectionPropertySetterValueHasObserver;
    internal static string DataBinding_DataServiceCollectionChangedUnknownActionCollection;
    internal static string DataBinding_CollectionChangedUnknownActionCollection;
    internal static string DataBinding_BindingOperation_DetachedSource;
    internal static string DataBinding_BindingOperation_ArrayItemNull;
    internal static string DataBinding_BindingOperation_ArrayItemNotEntity;
    internal static string DataBinding_Util_UnknownEntitySetName;
    internal static string DataBinding_EntityAlreadyInCollection;
    internal static string DataBinding_NotifyPropertyChangedNotImpl;
    internal static string DataBinding_NotifyCollectionChangedNotImpl;
    internal static string DataBinding_ComplexObjectAssociatedWithMultipleEntities;
    internal static string DataBinding_CollectionAssociatedWithMultipleEntities;
    internal static string Parser_SingleEntry_NoneFound;
    internal static string Parser_SingleEntry_MultipleFound;
    internal static string Parser_SingleEntry_ExpectedFeedOrEntry;
    internal static string Materializer_CannotAssignNull;
    internal static string Materializer_EntryIntoCollectionMismatch;
    internal static string Materializer_EntryToAccessIsNull;
    internal static string Materializer_EntryToInitializeIsNull;
    internal static string Materializer_ProjectEntityTypeMismatch;
    internal static string Materializer_PropertyMissing;
    internal static string Materializer_PropertyNotExpectedEntry;
    internal static string Materializer_DataServiceCollectionNotSupportedForNonEntities;
    internal static string Materializer_NoParameterlessCtorForCollectionProperty;
    internal static string Materializer_InvalidCollectionItem;
    internal static string Materializer_InvalidEntityType;
    internal static string Materializer_InvalidNonEntityType;
    internal static string Materializer_CollectionExpectedCollection;
    internal static string Materializer_InvalidResponsePayload;
    internal static string Materializer_InvalidContentTypeEncountered;
    internal static string Materializer_MaterializationTypeError;
    internal static string Materializer_ResetAfterEnumeratorCreationError;
    internal static string Materializer_TypeShouldBeCollectionError;
    internal static string Serializer_LoopsNotAllowedInComplexTypes;
    internal static string Serializer_LoopsNotAllowedInNonPropertyComplexTypes;
    internal static string Serializer_InvalidCollectionParameterItemType;
    internal static string Serializer_NullCollectionParameterItemValue;
    internal static string Serializer_InvalidParameterType;
    internal static string Serializer_UriDoesNotContainParameterAlias;
    internal static string Serializer_InvalidEnumMemberValue;
    internal static string DataServiceQuery_EnumerationNotSupported;
    internal static string Context_SendingRequestEventArgsNotHttp;
    internal static string General_InternalError;
    internal static string ODataMetadataBuilder_MissingEntitySetUri;
    internal static string ODataMetadataBuilder_MissingSegmentForEntitySetUriSuffix;
    internal static string ODataMetadataBuilder_MissingEntityInstanceUri;
    internal static string EdmValueUtils_UnsupportedPrimitiveType;
    internal static string EdmValueUtils_IncorrectPrimitiveTypeKind;
    internal static string EdmValueUtils_IncorrectPrimitiveTypeKindNoTypeName;
    internal static string EdmValueUtils_CannotConvertTypeToClrValue;
    internal static string ValueParser_InvalidDuration;
    internal static string PlatformHelper_DateTimeOffsetMustContainTimeZone;
    internal static string DataServiceRequest_FailGetCount;
    internal static string DataServiceRequest_FailGetValue;
    internal static string Context_ExecuteExpectedVoidResponse;
    private static TextRes loader;
    private ResourceManager resources;
    private static CultureInfo Culture { get; }
    public static ResourceManager Resources { get; }
    private static TextRes GetLoader();
    private static CultureInfo get_Culture();
    public static ResourceManager get_Resources();
    public static string GetString(string name, Object[] args);
    public static string GetString(string name);
    public static string GetString(string name, Boolean& usedFallback);
}
internal class Microsoft.OData.Client.TimeOfDayConvert : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.TimeSpanTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
public enum Microsoft.OData.Client.TrackingMode : Enum {
    public int value__;
    public static TrackingMode None;
    public static TrackingMode AutoChangeTracking;
}
internal class Microsoft.OData.Client.TypeResolver : object {
    private IDictionary`2<string, ClientTypeAnnotation> edmTypeNameMap;
    private Func`2<string, Type> resolveTypeFromName;
    private Func`2<Type, string> resolveNameFromType;
    private ClientEdmModel clientEdmModel;
    private IEdmModel serviceModel;
    private bool skipTypeAssignabilityCheck;
    internal IEdmModel ReaderModel { get; }
    internal TypeResolver(ClientEdmModel model, Func`2<string, Type> resolveTypeFromName, Func`2<Type, string> resolveNameFromType, IEdmModel serviceModel);
    internal IEdmModel get_ReaderModel();
    internal void IsProjectionRequest();
    internal ClientTypeAnnotation ResolveTypeForMaterialization(Type expectedType, string readerTypeName);
    internal IEdmType ResolveWireTypeName(IEdmType expectedEdmType, string wireName);
    internal string ResolveServiceEntityTypeFullName(Type clientClrType);
    [SuppressMessageAttribute("Microsoft.Naming", "CA2204:LiteralsShouldBeSpelledCorrectly")]
internal IEdmType ResolveExpectedTypeForReading(Type clientClrType);
    internal bool ShouldWriteClientTypeForOpenServerProperty(IEdmProperty clientProperty, string serverTypeName);
    internal bool ShouldWriteClientTypeForOpenServerProperty(string propertyName, string serverTypeName);
    internal bool TryResolveEntitySetBaseTypeName(string entitySetName, String& serverTypeName);
    internal bool TryResolveNavigationTargetTypeName(string serverSourceTypeName, string navigationPropertyName, String& serverTypeName);
    private bool TryToResolveServerType(ClientTypeAnnotation clientTypeAnnotation, IEdmStructuredType& serverType);
    private Type ResolveTypeFromName(string wireName, Type expectedType);
}
internal static class Microsoft.OData.Client.TypeSystem : object {
    private static string OfficialDesktopPublicKeyToken;
    private static Dictionary`2<MethodInfo, string> expressionMethodMap;
    private static Dictionary`2<string, string> expressionVBMethodMap;
    private static Dictionary`2<PropertyInfo, MethodInfo> propertiesAsMethodsMap;
    private static Dictionary`2<Type, Type> ienumerableElementTypeCache;
    private static Dictionary`2<AggregationMethod, string> aggregationMethodMap;
    private static string VisualBasicAssemblyName;
    private static string VisualBasicAssemblyPublicKeyToken;
    [SuppressMessageAttribute("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
private static TypeSystem();
    internal static bool TryGetQueryOptionMethod(MethodInfo mi, String& methodName);
    private static bool TryResolveUriFunction(MethodInfo mi, String& methodName);
    internal static bool TryGetPropertyAsMethod(PropertyInfo pi, MethodInfo& mi);
    internal static Type GetElementType(Type seqType);
    internal static bool IsPrivate(PropertyInfo pi);
    internal static Type FindIEnumerable(Type seqType);
    internal static bool TryGetUriEquivalent(AggregationMethod aggregationMethod, String& uriEquivalent);
    private static Type FindIEnumerableForNonPrimitiveType(Type seqType);
    private static bool IsVisualBasicAssembly(Assembly assembly);
}
internal class Microsoft.OData.Client.UInt16TypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.UInt32TypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.UInt64TypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal enum Microsoft.OData.Client.UndeclaredPropertyBehavior : Enum {
    public int value__;
    public static UndeclaredPropertyBehavior Support;
    public static UndeclaredPropertyBehavior ThrowException;
}
public class Microsoft.OData.Client.UriEntityOperationParameter : UriOperationParameter {
    private bool useEntityReference;
    internal bool UseEntityReference { get; }
    public UriEntityOperationParameter(string name, object value);
    public UriEntityOperationParameter(string name, object value, bool useEntityReference);
    internal bool get_UseEntityReference();
}
[AttributeUsageAttribute("64")]
public class Microsoft.OData.Client.UriFunctionAttribute : Attribute {
    private bool allowClientSideEvaluation;
    public bool AllowClientSideEvaluation { get; }
    public UriFunctionAttribute(bool allowClientSideEvaluation);
    public bool get_AllowClientSideEvaluation();
}
internal static class Microsoft.OData.Client.UriHelper : object {
    internal static char FORWARDSLASH;
    internal static char LEFTPAREN;
    internal static char RIGHTPAREN;
    internal static char QUESTIONMARK;
    internal static char AMPERSAND;
    internal static char EQUALSSIGN;
    internal static char ATSIGN;
    internal static char DOLLARSIGN;
    internal static char SPACE;
    internal static char COMMA;
    internal static char COLON;
    internal static char SEMICOLON;
    internal static char QUOTE;
    internal static char ASTERISK;
    internal static string OPTIONTOP;
    internal static string OPTIONSKIP;
    internal static string OPTIONORDERBY;
    internal static string OPTIONFILTER;
    internal static string OPTIONDESC;
    internal static string OPTIONEXPAND;
    internal static string OPTIONCOUNT;
    internal static string OPTIONSELECT;
    internal static string OPTIONFORMAT;
    internal static string OPTIONAPPLY;
    internal static string GROUPBY;
    internal static string AGGREGATE;
    internal static string WITH;
    internal static string AS;
    internal static string COUNTTRUE;
    internal static string COUNTFALSE;
    internal static string COUNT;
    internal static string AND;
    internal static string OR;
    internal static string EQ;
    internal static string NE;
    internal static string LT;
    internal static string LE;
    internal static string GT;
    internal static string GE;
    internal static string IN;
    internal static string ADD;
    internal static string SUB;
    internal static string MUL;
    internal static string DIV;
    internal static string MOD;
    internal static string NEGATE;
    internal static string NOT;
    internal static string NULL;
    internal static string ISOF;
    internal static string CAST;
    internal static string HAS;
    internal static string ENCODEDATSIGN;
    internal static string ENCODEDSQUAREBRACKETSIGN;
    internal static string ENCODEDBRACESIGN;
    internal static string AVERAGE;
    internal static string SUM;
    internal static string MIN;
    internal static string MAX;
    internal static string COUNTDISTINCT;
    internal static string VIRTUALPROPERTYCOUNT;
    internal static string GetTypeNameForUri(Type type, DataServiceContext context);
    internal static string GetEntityTypeNameForUriAndValidateMaxProtocolVersion(Type type, DataServiceContext context, Version& uriVersion);
    internal static void AppendTypeSegment(StringBuilder stringBuilder, Type type, DataServiceContext dataServiceContext, bool inPath, Version& version);
    internal static bool IsPrimitiveValue(string value);
}
public class Microsoft.OData.Client.UriOperationParameter : OperationParameter {
    public UriOperationParameter(string name, object value);
}
internal class Microsoft.OData.Client.UriResolver : object {
    private Uri baseUri;
    private Func`2<string, Uri> resolveEntitySet;
    private Uri baseUriWithSlash;
    internal Func`2<string, Uri> ResolveEntitySet { get; }
    internal Uri RawBaseUriValue { get; }
    internal Uri BaseUriOrNull { get; }
    private UriResolver(Uri baseUri, Func`2<string, Uri> resolveEntitySet);
    internal Func`2<string, Uri> get_ResolveEntitySet();
    internal Uri get_RawBaseUriValue();
    internal Uri get_BaseUriOrNull();
    internal static UriResolver CreateFromBaseUri(Uri baseUri, string parameterName);
    internal UriResolver CloneWithOverrideValue(Uri overrideBaseUriValue, string parameterName);
    internal UriResolver CloneWithOverrideValue(Func`2<string, Uri> overrideResolveEntitySetValue);
    internal Uri GetEntitySetUri(string entitySetName);
    internal Uri GetBaseUriWithSlash();
    internal Uri GetOrCreateAbsoluteUri(Uri requestUri);
    private static void ConvertToAbsoluteAndValidateBaseUri(Uri& baseUri, string parameterName);
    private static bool IsValidBaseUri(Uri baseUri);
    private static Uri ConvertToAbsoluteUri(Uri baseUri);
    private static Uri ForceNonSlashTerminatedUri(Uri uri);
    private static Uri ForceSlashTerminatedUri(Uri uri);
    private Uri GetBaseUriWithSlash(Func`1<string> getErrorMessage);
    private Uri GetEntitySetUriFromResolver(string entitySetName);
}
internal class Microsoft.OData.Client.UriTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal static class Microsoft.OData.Client.UriUtil : object {
    internal static Char[] ForwardSlash;
    private static UriUtil();
    internal static string UriToString(Uri uri);
    internal static Uri CreateUri(string value, UriKind kind);
    internal static Uri CreateUri(Uri baseUri, Uri requestUri);
    private static Uri AppendBaseUriAndRelativeUri(Uri baseUri, Uri relativeUri);
}
internal class Microsoft.OData.Client.UriWriter : DataServiceALinqExpressionVisitor {
    private DataServiceContext context;
    private StringBuilder uriBuilder;
    private Dictionary`2<string, string> alias;
    private Version uriVersion;
    private Dictionary`2<string, List`1<string>> cachedQueryOptions;
    private UriWriter(DataServiceContext context);
    internal static void Translate(DataServiceContext context, bool addTrailingParens, Expression e, Uri& uri, Version& version);
    internal virtual Expression VisitMethodCall(MethodCallExpression m);
    internal virtual Expression VisitUnary(UnaryExpression u);
    internal virtual Expression VisitBinary(BinaryExpression b);
    internal virtual Expression VisitConstant(ConstantExpression c);
    internal virtual Expression VisitTypeIs(TypeBinaryExpression b);
    internal virtual Expression VisitConditional(ConditionalExpression c);
    internal virtual Expression VisitParameter(ParameterExpression p);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitLambda(LambdaExpression lambda);
    internal virtual NewExpression VisitNew(NewExpression nex);
    internal virtual Expression VisitMemberInit(MemberInitExpression init);
    internal virtual Expression VisitListInit(ListInitExpression init);
    internal virtual Expression VisitNewArray(NewArrayExpression na);
    internal virtual Expression VisitInvocation(InvocationExpression iv);
    internal virtual Expression VisitNavigationPropertySingletonExpression(NavigationPropertySingletonExpression npse);
    internal virtual Expression VisitQueryableResourceExpression(QueryableResourceExpression rse);
    [SuppressMessageAttribute("Globalization", "CA1305:Specify IFormatProvider")]
internal void VisitOperationInvocation(QueryableResourceExpression rse);
    internal void VisitQueryOptions(ResourceExpression re);
    internal void VisitQueryOptionExpression(SkipQueryOptionExpression sqoe);
    internal void VisitQueryOptionExpression(TakeQueryOptionExpression tqoe);
    internal void VisitQueryOptionExpression(FilterQueryOptionExpression fqoe);
    internal void VisitQueryOptionExpression(OrderByQueryOptionExpression oboe);
    internal void VisitExpandOptions(List`1<string> paths);
    internal void VisitProjectionPaths(List`1<string> paths);
    internal void VisitCountQueryOptions(bool countQueryOption);
    internal void VisitCustomQueryOptions(Dictionary`2<ConstantExpression, ConstantExpression> options);
    internal void VisitQueryOptionExpression(ApplyQueryOptionExpression applyQueryOptionExpr);
    private string ConstructFilterTransformation(ApplyQueryOptionExpression applyQueryOptionExpr);
    private string ConstructAggregateTransformation(IList`1<Aggregation> aggregations);
    private string ConstructGroupingExpression(IList`1<Expression> groupingExpressions);
    private void AddAsCachedQueryOption(string optionKey, string optionValue);
    private void AppendCachedQueryOptionsToUriBuilder();
    private string ExpressionToString(Expression expression, bool inPath);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Client.Util : object {
    internal static string CodeGeneratorToolName;
    internal static string LoadPropertyMethodName;
    internal static string ExecuteMethodName;
    internal static string ExecuteMethodNameForVoidResults;
    internal static string SaveChangesMethodName;
    internal static string BulkUpdateMethodName;
    internal static string DeepInsertMethodName;
    internal static int ODataVersionFieldCount;
    internal static Version ODataVersionEmpty;
    internal static Version ODataVersion4;
    internal static Version ODataVersion401;
    internal static Version[] SupportedResponseVersions;
    private static Char[] whitespaceForTracing;
    private static Util();
    internal static Version GetVersionFromMaxProtocolVersion(ODataProtocolVersion maxProtocolVersion);
    [ConditionalAttribute("DEBUG")]
internal static void DebugInjectFault(string state);
    [DebuggerStepThroughAttribute]
internal static T CheckArgumentNull(T value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckArgumentNullAndEmpty(string value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckArgumentNotEmpty(string value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckArgumentNotEmpty(T[] value, string parameterName);
    internal static EntityParameterSendOption CheckEnumerationValue(EntityParameterSendOption value, string parameterName);
    internal static MergeOption CheckEnumerationValue(MergeOption value, string parameterName);
    internal static ODataProtocolVersion CheckEnumerationValue(ODataProtocolVersion value, string parameterName);
    internal static HttpStack CheckEnumerationValue(HttpStack value, string parameterName);
    internal static Char[] GetWhitespaceForTracing(int depth);
    internal static void Dispose(T& disposable);
    internal static void Dispose(T disposable);
    internal static bool IsKnownClientException(Exception ex);
    internal static T NullCheck(T value, InternalError errorcode);
    internal static bool DoesNullAttributeSayTrue(XmlReader reader);
    internal static void SetNextLinkForCollection(object collection, DataServiceQueryContinuation continuation);
    internal static bool IsNullableType(Type t);
    internal static object ActivatorCreateInstance(Type type, Object[] arguments);
    internal static object ConstructorInvoke(ConstructorInfo constructor, Object[] arguments);
    internal static bool IsFlagSet(SaveChangesOptions options, SaveChangesOptions flag);
    internal static bool IsBatch(SaveChangesOptions options);
    internal static bool IsBulkUpdate(SaveChangesOptions options);
    internal static bool IsDeepInsert(SaveChangesOptions options);
    internal static bool IsBatchWithSingleChangeset(SaveChangesOptions options);
    internal static bool IsBatchWithIndependentOperations(SaveChangesOptions options);
    internal static bool UseRelativeUri(SaveChangesOptions options);
    internal static bool UseJsonBatch(SaveChangesOptions options);
    internal static bool IncludeLinkState(EntityStates x);
    [ConditionalAttribute("TRACE")]
internal static void TraceElement(XmlReader reader, TextWriter writer);
    [ConditionalAttribute("TRACE")]
internal static void TraceEndElement(XmlReader reader, TextWriter writer, bool indent);
    [ConditionalAttribute("TRACE")]
internal static void TraceText(TextWriter writer, string value);
    internal static IEnumerable`1<T> GetEnumerable(IEnumerable enumerable, Func`2<object, T> valueConverter);
    [ExtensionAttribute]
internal static Version ToVersion(ODataProtocolVersion protocolVersion);
    [ExtensionAttribute]
internal static Dictionary`2<string, string> SerializeOperationParameters(DataServiceContext context, UriOperationParameter[] parameters);
    internal static bool MayBeJson(string input);
}
public static class Microsoft.OData.Client.Utility : object {
    public static IEnumerable`1<object> GetCustomAttributes(Type type, Type attributeType, bool inherit);
}
internal enum Microsoft.OData.Client.VertexColor : Enum {
    public int value__;
    public static VertexColor White;
    public static VertexColor Gray;
    public static VertexColor Black;
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.OData.Client.WeakDictionary`2 : object {
    private Dictionary`2<object, TValue> dictionary;
    private WeakKeyComparer`1<TKey> comparer;
    private int intervalForRefresh;
    private int countLimitForRefresh;
    private int countForRefresh;
    [CompilerGeneratedAttribute]
private Func`2<object, object> <CreateWeakKey>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Func`2<object, bool>> <RemoveCollectedEntriesRules>k__BackingField;
    public Func`2<object, object> CreateWeakKey { get; public set; }
    public List`1<Func`2<object, bool>> RemoveCollectedEntriesRules { get; public set; }
    public int Count { get; }
    public TValue Item { get; public set; }
    public WeakDictionary`2(IEqualityComparer`1<TKey> comparer);
    public WeakDictionary`2(IEqualityComparer`1<TKey> comparer, int refreshInterval);
    [CompilerGeneratedAttribute]
public Func`2<object, object> get_CreateWeakKey();
    [CompilerGeneratedAttribute]
public void set_CreateWeakKey(Func`2<object, object> value);
    [CompilerGeneratedAttribute]
public List`1<Func`2<object, bool>> get_RemoveCollectedEntriesRules();
    [CompilerGeneratedAttribute]
public void set_RemoveCollectedEntriesRules(List`1<Func`2<object, bool>> value);
    public int get_Count();
    public TValue get_Item(TKey key);
    public void set_Item(TKey key, TValue value);
    public void Add(TKey key, TValue value);
    public bool ContainsKey(TKey key);
    public bool Remove(TKey key);
    public bool TryGetValue(TKey key, TValue& value);
    public void RemoveCollectedEntries();
}
internal class Microsoft.OData.Client.WeakKeyComparer`1 : object {
    protected IEqualityComparer`1<T> comparer;
    private static WeakKeyComparer`1<T> defaultInstance;
    public static WeakKeyComparer`1<T> Default { get; }
    public WeakKeyComparer`1(IEqualityComparer`1<T> comparer);
    public static WeakKeyComparer`1<T> get_Default();
    public virtual int GetHashCode(object obj);
    public virtual bool Equals(object obj1, object obj2);
    protected virtual T GetTarget(object obj, Boolean& isDead);
}
internal class Microsoft.OData.Client.WeakKeyReference`1 : WeakReference {
    [CompilerGeneratedAttribute]
private int <HashCode>k__BackingField;
    public int HashCode { get; private set; }
    public T Target { get; }
    public WeakKeyReference`1(T target, WeakKeyComparer`1<T> comparer);
    [CompilerGeneratedAttribute]
public int get_HashCode();
    [CompilerGeneratedAttribute]
private void set_HashCode(int value);
    public T get_Target();
}
internal static class Microsoft.OData.Client.WebUtil : object {
    internal static int DefaultBufferSizeForStreamCopy;
    private static Nullable`1<bool> dataServiceCollectionAvailable;
    private static MethodInfo getDefaultValueMethodInfo;
    [SuppressMessageAttribute("Design", "CA1031:Do not catch general exception types")]
private static bool DataServiceCollectionAvailable { get; }
    private static WebUtil();
    private static bool get_DataServiceCollectionAvailable();
    internal static long CopyStream(Stream input, Stream output, Byte[]& refBuffer);
    internal static InvalidOperationException GetHttpWebResponse(InvalidOperationException exception, IODataResponseMessage& response);
    internal static bool SuccessStatusCode(HttpStatusCode status);
    internal static bool IsCLRTypeCollection(Type type, ClientEdmModel model);
    internal static bool IsWireTypeCollection(string wireTypeName);
    internal static string GetCollectionItemWireTypeName(string wireTypeName);
    internal static Type GetBackingTypeForCollectionProperty(Type collectionPropertyType);
    [DebuggerStepThroughAttribute]
internal static T CheckArgumentNull(T value, string parameterName);
    internal static void ValidateCollection(Type collectionItemType, object propertyValue, string propertyName, bool isDynamicProperty);
    internal static void ValidatePrimitiveCollectionItem(object itemValue, string propertyName, Type collectionItemType);
    internal static void ValidateComplexCollectionItem(object itemValue, string propertyName, Type collectionItemType);
    internal static Uri ValidateIdentityValue(string identityValue);
    internal static Uri ValidateLocationHeader(string location);
    internal static string GetPreferHeaderAndRequestVersion(DataServiceResponsePreference responsePreference, Version& requestVersion);
    internal static void RaiseVersion(Version& version, Version minimalVersion);
    internal static bool IsDataServiceCollectionType(Type t);
    internal static Type GetDataServiceCollectionOfT(Type[] typeArguments);
    internal static object GetDefaultValue(Type type);
    internal static T GetDefaultValue();
    internal static void DisposeMessage(IODataResponseMessage responseMessage);
    private static Type GetDataServiceCollectionOfTType();
}
public class Microsoft.OData.Client.WritingEntityReferenceLinkArgs : object {
    [CompilerGeneratedAttribute]
private ODataEntityReferenceLink <EntityReferenceLink>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Target>k__BackingField;
    public ODataEntityReferenceLink EntityReferenceLink { get; private set; }
    public object Source { get; private set; }
    public object Target { get; private set; }
    public WritingEntityReferenceLinkArgs(ODataEntityReferenceLink entityReferenceLink, object source, object target);
    [CompilerGeneratedAttribute]
public ODataEntityReferenceLink get_EntityReferenceLink();
    [CompilerGeneratedAttribute]
private void set_EntityReferenceLink(ODataEntityReferenceLink value);
    [CompilerGeneratedAttribute]
public object get_Source();
    [CompilerGeneratedAttribute]
private void set_Source(object value);
    [CompilerGeneratedAttribute]
public object get_Target();
    [CompilerGeneratedAttribute]
private void set_Target(object value);
}
public class Microsoft.OData.Client.WritingEntryArgs : object {
    [CompilerGeneratedAttribute]
private ODataResource <Entry>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Entity>k__BackingField;
    public ODataResource Entry { get; private set; }
    public object Entity { get; private set; }
    public WritingEntryArgs(ODataResource entry, object entity);
    [CompilerGeneratedAttribute]
public ODataResource get_Entry();
    [CompilerGeneratedAttribute]
private void set_Entry(ODataResource value);
    [CompilerGeneratedAttribute]
public object get_Entity();
    [CompilerGeneratedAttribute]
private void set_Entity(object value);
}
public class Microsoft.OData.Client.WritingNestedResourceInfoArgs : object {
    [CompilerGeneratedAttribute]
private ODataNestedResourceInfo <Link>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Target>k__BackingField;
    public ODataNestedResourceInfo Link { get; private set; }
    public object Source { get; private set; }
    public object Target { get; private set; }
    public WritingNestedResourceInfoArgs(ODataNestedResourceInfo link, object source, object target);
    [CompilerGeneratedAttribute]
public ODataNestedResourceInfo get_Link();
    [CompilerGeneratedAttribute]
private void set_Link(ODataNestedResourceInfo value);
    [CompilerGeneratedAttribute]
public object get_Source();
    [CompilerGeneratedAttribute]
private void set_Source(object value);
    [CompilerGeneratedAttribute]
public object get_Target();
    [CompilerGeneratedAttribute]
private void set_Target(object value);
}
internal class Microsoft.OData.Client.XDocumentTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class Microsoft.OData.Client.XElementTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal static class Microsoft.OData.Client.XmlConstants : object {
    internal static string ClrServiceInitializationMethodName;
    internal static string HttpContentID;
    internal static string HttpContentLength;
    internal static string HttpContentType;
    internal static string HttpContentDisposition;
    internal static string HttpODataVersion;
    internal static string ODataVersion401;
    internal static string HttpODataMaxVersion;
    internal static string HttpPrefer;
    internal static string HttpPreferReturnNoContent;
    internal static string HttpPreferReturnContent;
    internal static string HttpCacheControlNoCache;
    internal static string HttpCharsetParameter;
    internal static string HttpMethodGet;
    internal static string HttpMethodPost;
    internal static string HttpMethodPut;
    internal static string HttpMethodDelete;
    internal static string HttpMethodPatch;
    internal static string HttpQueryStringExpand;
    internal static string HttpQueryStringFilter;
    internal static string HttpQueryStringOrderBy;
    internal static string HttpQueryStringSkip;
    internal static string HttpQueryStringTop;
    internal static string HttpQueryStringQueryCount;
    internal static string HttpQueryStringSkipToken;
    internal static string SkipTokenPropertyPrefix;
    internal static string HttpQueryStringSegmentCount;
    internal static string HttpQueryStringSelect;
    internal static string HttpQueryStringFormat;
    internal static string HttpQueryStringCallback;
    internal static string HttpQueryStringId;
    internal static string HttpQValueParameter;
    internal static string HttpXMethod;
    internal static string HttpRequestAccept;
    internal static string HttpRequestAcceptCharset;
    internal static string HttpRequestIfMatch;
    internal static string HttpRequestIfNoneMatch;
    internal static string HttpUserAgent;
    internal static string HttpMultipartBoundary;
    internal static string XContentTypeOptions;
    internal static string XContentTypeOptionNoSniff;
    internal static string HttpMultipartBoundaryBatch;
    internal static string HttpMultipartBoundaryChangeSet;
    internal static string HttpResponseAllow;
    internal static string HttpResponseCacheControl;
    internal static string HttpResponseETag;
    internal static string HttpResponseLocation;
    internal static string HttpODataEntityId;
    internal static string HttpResponseStatusCode;
    internal static string HttpMultipartBoundaryBatchResponse;
    internal static string HttpMultipartBoundaryChangesetResponse;
    internal static string HttpContentTransferEncoding;
    internal static string HttpVersionInBatching;
    internal static string HttpAnyETag;
    internal static string HttpWeakETagPrefix;
    internal static string HttpAccept;
    internal static string HttpAcceptCharset;
    internal static string HttpCookie;
    internal static string HttpSlug;
    internal static string MimeAny;
    internal static string MimeApplicationOctetStream;
    internal static string MimeApplicationType;
    internal static string MimeJsonSubType;
    internal static string MimeXmlSubType;
    internal static string MimeODataParameterName;
    internal static string MimeMultiPartMixed;
    internal static string MimeTextPlain;
    internal static string MimeTextType;
    internal static string MimeTextXml;
    internal static string BatchRequestContentTransferEncoding;
    internal static string MimeTypeUtf8Encoding;
    internal static string UriHttpAbsolutePrefix;
    internal static string UriMetadataSegment;
    internal static string UriValueSegment;
    internal static string UriBatchSegment;
    internal static string UriLinkSegment;
    internal static string UriCountSegment;
    internal static string UriCountTrueOption;
    internal static string UriCountFalseOption;
    internal static string UriFilterSegment;
    internal static string AnyMethodName;
    internal static string AllMethodName;
    internal static string ImplicitFilterParameter;
    internal static string ODataContext;
    internal static string ODataID;
    internal static string ODataCount;
    internal static string ODataType;
    internal static string DataModificationException;
    internal static string WcfBinaryElementName;
    internal static string AtomNamespacePrefix;
    internal static string AtomContentElementName;
    internal static string AtomEntryElementName;
    internal static string AtomFeedElementName;
    internal static string AtomAuthorElementName;
    internal static string AtomContributorElementName;
    internal static string AtomCategoryElementName;
    internal static string AtomLinkElementName;
    internal static string AtomCategorySchemeAttributeName;
    internal static string AtomCategoryTermAttributeName;
    internal static string AtomIdElementName;
    internal static string AtomLinkRelationAttributeName;
    internal static string AtomContentSrcAttributeName;
    internal static string AtomLinkNextAttributeString;
    internal static string SyndAuthorEmail;
    internal static string SyndAuthorName;
    internal static string SyndAuthorUri;
    internal static string SyndPublished;
    internal static string SyndRights;
    internal static string SyndSummary;
    internal static string SyndTitle;
    internal static string AtomUpdatedElementName;
    internal static string SyndContributorEmail;
    internal static string SyndContributorName;
    internal static string SyndContributorUri;
    internal static string SyndUpdated;
    internal static string SyndContentKindPlaintext;
    internal static string SyndContentKindHtml;
    internal static string SyndContentKindXHtml;
    internal static string AtomHRefAttributeName;
    internal static string AtomHRefLangAttributeName;
    internal static string AtomSummaryElementName;
    internal static string AtomNameElementName;
    internal static string AtomEmailElementName;
    internal static string AtomPublishedElementName;
    internal static string AtomRightsElementName;
    internal static string AtomPublishingCollectionElementName;
    internal static string AtomPublishingServiceElementName;
    internal static string AtomPublishingWorkspaceDefaultValue;
    internal static string AtomPublishingWorkspaceElementName;
    internal static string AtomTitleElementName;
    internal static string AtomTypeAttributeName;
    internal static string AtomSelfRelationAttributeValue;
    internal static string AtomEditRelationAttributeValue;
    internal static string AtomEditMediaRelationAttributeValue;
    internal static string AtomAlternateRelationAttributeValue;
    internal static string AtomRelatedRelationAttributeValue;
    internal static string AtomEnclosureRelationAttributeValue;
    internal static string AtomViaRelationAttributeValue;
    internal static string AtomDescribedByRelationAttributeValue;
    internal static string AtomServiceRelationAttributeValue;
    internal static string AtomNullAttributeName;
    internal static string AtomETagAttributeName;
    internal static string AtomInlineElementName;
    internal static string AtomPropertiesElementName;
    internal static string RowCountElement;
    internal static string XmlCollectionItemElementName;
    internal static string XmlErrorElementName;
    internal static string XmlErrorCodeElementName;
    internal static string XmlErrorInnerElementName;
    internal static string XmlErrorInternalExceptionElementName;
    internal static string XmlErrorTypeElementName;
    internal static string XmlErrorStackTraceElementName;
    internal static string XmlErrorMessageElementName;
    internal static string XmlFalseLiteral;
    internal static string XmlTrueLiteral;
    internal static string XmlBaseAttributeName;
    internal static string XmlSpaceAttributeName;
    internal static string XmlSpacePreserveValue;
    internal static string XmlBaseAttributeNameWithPrefix;
    internal static string EdmOasisNamespace;
    internal static string DataWebNamespace;
    internal static string DataWebMetadataNamespace;
    internal static string DataWebRelatedNamespace;
    internal static string DataWebRelatedLinkNamespace;
    internal static string DataWebMediaResourceNamespace;
    internal static string DataWebMediaResourceEditNamespace;
    internal static string DataWebSchemeNamespace;
    internal static string AppNamespace;
    internal static string AtomNamespace;
    internal static string XmlnsNamespacePrefix;
    internal static string XmlNamespacePrefix;
    internal static string DataWebNamespacePrefix;
    internal static string DataWebMetadataNamespacePrefix;
    internal static string XmlNamespacesNamespace;
    internal static string EdmxNamespace;
    internal static string EdmxNamespacePrefix;
    internal static string IanaLinkRelationsNamespace;
    internal static string EmptyNamespace;
    internal static string Association;
    internal static string AssociationSet;
    internal static string ComplexType;
    internal static string Dependent;
    internal static string EdmCollectionTypeName;
    internal static string ActualEdmType;
    internal static string EdmTypeRefElementName;
    internal static string EdmEntitySetAttributeName;
    internal static string EdmEntitySetPathAttributeName;
    internal static string EdmBindableAttributeName;
    internal static string EdmComposableAttributeName;
    internal static string EdmSideEffectingAttributeName;
    internal static string EdmFunctionImportElementName;
    internal static string EdmModeAttributeName;
    internal static string EdmModeInValue;
    internal static string EdmParameterElementName;
    internal static string EdmReturnTypeAttributeName;
    internal static string ActualReturnTypeAttributeName;
    internal static string End;
    internal static string EntityType;
    internal static string EntityContainer;
    internal static string Key;
    internal static string NavigationProperty;
    internal static string OnDelete;
    internal static string Principal;
    internal static string Property;
    internal static string PropertyRef;
    internal static string ReferentialConstraint;
    internal static string Role;
    internal static string Schema;
    internal static string EdmxElement;
    internal static string EdmxDataServicesElement;
    internal static string EdmxVersion;
    internal static string EdmxVersionValue;
    internal static string ActionElementName;
    internal static string FunctionElementName;
    internal static string ActionMetadataAttributeName;
    internal static string ActionTargetAttributeName;
    internal static string ActionTitleAttributeName;
    internal static string BaseType;
    internal static string EntitySet;
    internal static string EntitySetPath;
    internal static string FromRole;
    internal static string Abstract;
    internal static string Multiplicity;
    internal static string Name;
    internal static string Namespace;
    internal static string ToRole;
    internal static string Type;
    internal static string Relationship;
    internal static string Many;
    internal static string One;
    internal static string ZeroOrOne;
    internal static string CsdlNullableAttributeName;
    internal static string CsdlPrecisionAttributeName;
    internal static string CsdlScaleAttributeName;
    internal static string CsdlMaxLengthAttributeName;
    internal static string CsdlFixedLengthAttributeName;
    internal static string CsdlUnicodeAttributeName;
    internal static string CsdlCollationAttributeName;
    internal static string CsdlSridAttributeName;
    internal static string CsdlDefaultValueAttributeName;
    internal static string CsdlMaxLengthAttributeMaxValue;
    internal static string DataWebMimeTypeAttributeName;
    internal static string DataWebOpenTypeAttributeName;
    internal static string DataWebAccessHasStreamAttribute;
    internal static string DataWebAccessDefaultStreamPropertyValue;
    internal static string ServiceOperationHttpMethodName;
    internal static string NextElementName;
    internal static string JsonError;
    internal static string JsonErrorCode;
    internal static string JsonErrorInner;
    internal static string JsonErrorInternalException;
    internal static string JsonErrorMessage;
    internal static string JsonErrorStackTrace;
    internal static string JsonErrorType;
    internal static string JsonErrorValue;
    internal static string EdmNamespace;
    internal static string EdmBinaryTypeName;
    internal static string EdmBooleanTypeName;
    internal static string EdmByteTypeName;
    internal static string EdmDecimalTypeName;
    internal static string EdmDateTypeName;
    internal static string EdmDoubleTypeName;
    internal static string EdmGuidTypeName;
    internal static string EdmSingleTypeName;
    internal static string EdmSByteTypeName;
    internal static string EdmInt16TypeName;
    internal static string EdmInt32TypeName;
    internal static string EdmInt64TypeName;
    internal static string EdmStringTypeName;
    internal static string EdmStreamTypeName;
    internal static string EdmTimeOfDayTypeName;
    internal static string CollectionTypeQualifier;
    internal static string EdmGeographyTypeName;
    internal static string EdmPointTypeName;
    internal static string EdmLineStringTypeName;
    internal static string EdmPolygonTypeName;
    internal static string EdmGeographyCollectionTypeName;
    internal static string EdmMultiPolygonTypeName;
    internal static string EdmMultiLineStringTypeName;
    internal static string EdmMultiPointTypeName;
    internal static string EdmGeometryTypeName;
    internal static string EdmGeometryPointTypeName;
    internal static string EdmGeometryLineStringTypeName;
    internal static string EdmGeometryPolygonTypeName;
    internal static string EdmGeometryCollectionTypeName;
    internal static string EdmGeometryMultiPolygonTypeName;
    internal static string EdmGeometryMultiLineStringTypeName;
    internal static string EdmGeometryMultiPointTypeName;
    internal static string EdmDurationTypeName;
    internal static string EdmDateTimeOffsetTypeName;
    internal static string ODataVersion4Dot0;
    internal static string LiteralPrefixBinary;
    internal static string LiteralPrefixGeography;
    internal static string LiteralPrefixGeometry;
    internal static string LiteralPrefixDuration;
    internal static string LiteralSuffixDecimal;
    internal static string LiteralSuffixInt64;
    internal static string LiteralSuffixSingle;
    internal static string LiteralSuffixDouble;
    internal static string NullLiteralInETag;
    internal static string MicrosoftDataServicesRequestUri;
    internal static string MicrosoftDataServicesRootUri;
    internal static string GeoRssNamespace;
    internal static string GeoRssPrefix;
    internal static string GmlNamespace;
    internal static string GmlPrefix;
    internal static string GeoRssWhere;
    internal static string GeoRssPoint;
    internal static string GeoRssLine;
    internal static string GmlPosition;
    internal static string GmlPositionList;
    internal static string GmlLineString;
}
internal enum Microsoft.OData.InternalErrorCodesCommon : Enum {
    public int value__;
    public static InternalErrorCodesCommon EdmLibraryExtensions_ToTypeReference;
    public static InternalErrorCodesCommon EdmLibraryExtensions_ToClrType;
    public static InternalErrorCodesCommon EdmLibraryExtensions_PrimitiveTypeReference;
    public static InternalErrorCodesCommon EdmLibraryExtensions_IsAssignableFrom_Primitive;
    public static InternalErrorCodesCommon EdmLibraryExtensions_IsAssignableFrom_Type;
    public static InternalErrorCodesCommon EdmLibraryExtensions_BaseType;
    public static InternalErrorCodesCommon EdmLibraryExtensions_Clone_TypeKind;
    public static InternalErrorCodesCommon EdmLibraryExtensions_Clone_PrimitiveTypeKind;
}
internal static class Microsoft.OData.Json.JsonSharedUtils : object {
    internal static bool IsDoubleValueSerializedAsString(double value);
    internal static bool IsFloatValueSerializedAsString(float value);
    internal static bool ValueTypeMatchesJsonType(ODataPrimitiveValue primitiveValue, IEdmPrimitiveTypeReference valueTypeReference);
    internal static bool ValueTypeMatchesJsonType(ODataPrimitiveValue primitiveValue, EdmPrimitiveTypeKind primitiveTypeKind);
}
[ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")]
[SuppressMessageAttribute("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
internal static class Microsoft.OData.Metadata.EdmLibraryExtensions : object {
    private static Dictionary`2<Type, IEdmPrimitiveTypeReference> PrimitiveTypeReferenceMap;
    private static int PrimitiveTypeCodeBitMap;
    private static EdmPrimitiveTypeReference BooleanTypeReference;
    private static EdmPrimitiveTypeReference ByteTypeReference;
    private static EdmPrimitiveTypeReference DecimalTypeReference;
    private static EdmPrimitiveTypeReference DoubleTypeReference;
    private static EdmPrimitiveTypeReference Int16TypeReference;
    private static EdmPrimitiveTypeReference Int32TypeReference;
    private static EdmPrimitiveTypeReference Int64TypeReference;
    private static EdmPrimitiveTypeReference SByteTypeReference;
    private static EdmPrimitiveTypeReference StringTypeReference;
    private static EdmPrimitiveTypeReference SingleTypeReference;
    private static string CollectionTypeQualifier;
    private static string CollectionTypeFormat;
    [SuppressMessageAttribute("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
private static EdmLibraryExtensions();
    [ExtensionAttribute]
internal static string FullName(IEdmEntityContainerElement containerElement);
    [ExtensionAttribute]
internal static IEdmTypeReference ToTypeReference(IEdmType type, bool nullable);
    internal static string GetCollectionTypeName(string itemTypeName);
    private static EdmPrimitiveTypeReference ToTypeReference(IEdmPrimitiveType primitiveType, bool nullable);
}
