internal static class AssemblyRef : object {
    internal static string ProductPublicKey;
    internal static string TestPublicKey;
    internal static string ProductPublicKeyToken;
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.ODataServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddDefaultODataServices(IServiceCollection services, ODataVersion odataVersion, Action`1<ODataMessageReaderSettings> configureReaderAction, Action`1<ODataMessageWriterSettings> configureWriterAction, Action`1<ODataUriParserSettings> configureUriParserAction);
}
internal class Microsoft.OData.AnnotationFilter : object {
    private static AnnotationFilter IncludeAll;
    private static AnnotationFilter ExcludeAll;
    private static Char[] AnnotationFilterPatternSeparator;
    private AnnotationFilterPattern[] prioritizedPatternsToMatch;
    private AnnotationFilter(AnnotationFilterPattern[] prioritizedPatternsToMatch);
    private static AnnotationFilter();
    internal static AnnotationFilter Create(string filter);
    internal static AnnotationFilter CreateIncludeAllFilter();
    internal virtual bool Matches(string annotationName);
}
internal abstract class Microsoft.OData.AnnotationFilterPattern : object {
    internal static AnnotationFilterPattern IncludeAllPattern;
    internal static AnnotationFilterPattern ExcludeAllPattern;
    protected string Pattern;
    private static char NamespaceSeparator;
    private static char ExcludeOperator;
    private static string WildCard;
    private static string DotStar;
    private bool isExclude;
    internal bool IsExclude { get; }
    private AnnotationFilterPattern(string pattern, bool isExclude);
    private static AnnotationFilterPattern();
    internal virtual bool get_IsExclude();
    public sealed virtual int CompareTo(AnnotationFilterPattern other);
    internal static AnnotationFilterPattern Create(string pattern);
    internal static void Sort(AnnotationFilterPattern[] pattersToSort);
    internal abstract virtual bool Matches(string annotationName);
    private static int ComparePatternPriority(string pattern1, string pattern2);
    private static bool RemoveExcludeOperator(String& pattern);
    private static void ValidatePattern(string pattern);
}
internal class Microsoft.OData.ApplyClauseToStringBuilder : object {
    private NodeToStringBuilder nodeToStringBuilder;
    private StringBuilder query;
    public string TranslateApplyClause(ApplyClause applyClause);
    private bool AppendComma(bool appendComma);
    private void AppendExpression(SingleValueNode expression);
    private void AppendExpression(ODataExpandPath path);
    private bool AppendSlash(bool appendSlash);
    private void AppendWord(string word);
    private static string GetAggregationMethodName(AggregateExpression aggExpression);
    private void Translate(AggregateTransformationNode transformation);
    private void Translate(IEnumerable`1<AggregateExpressionBase> expressions);
    private void Translate(ComputeTransformationNode transformation);
    private void Translate(ExpandTransformationNode transformation);
    private void AppendExpandExpression(ExpandedNavigationSelectItem expandedNavigation);
    private void Translate(FilterTransformationNode transformation);
    private void Translate(GroupByTransformationNode transformation);
    private void Translate(GroupByPropertyNode node);
    private void Translate(TransformationNode transformation);
}
internal class Microsoft.OData.AsyncStreamReaderDelegate : MulticastDelegate {
    public AsyncStreamReaderDelegate(object object, IntPtr method);
    public virtual Task`1<int> Invoke(Char[] chars, int offset, int maxLength);
    public virtual IAsyncResult BeginInvoke(Char[] chars, int offset, int maxLength, AsyncCallback callback, object object);
    public virtual Task`1<int> EndInvoke(IAsyncResult result);
}
public enum Microsoft.OData.BatchPayloadUriOption : Enum {
    public int value__;
    public static BatchPayloadUriOption AbsoluteUri;
    public static BatchPayloadUriOption AbsoluteUriUsingHostHeader;
    public static BatchPayloadUriOption RelativeUri;
}
internal static class Microsoft.OData.BindingPathHelper : object {
    public static bool MatchBindingPath(IEdmPathExpression bindingPath, IReadOnlyList`1<ODataPathSegment> parsedSegments);
}
internal class Microsoft.OData.BufferedReadStream : Stream {
    private List`1<DataBuffer> buffers;
    private Stream inputStream;
    private int currentBufferIndex;
    private int currentBufferReadCount;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    private BufferedReadStream(Stream inputStream);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    internal static Task`1<BufferedReadStream> BufferStreamAsync(Stream inputStream);
    internal void ResetForReading();
    [IteratorStateMachineAttribute("Microsoft.OData.BufferedReadStream/<BufferInputStream>d__23")]
[SuppressMessageAttribute("Reliability", "CA2008:Do not create tasks without passing a TaskScheduler")]
private IEnumerable`1<Task> BufferInputStream();
    private DataBuffer AddNewBuffer();
}
internal class Microsoft.OData.BufferingReadStream : Stream {
    private LinkedList`1<Byte[]> buffers;
    private Stream innerStream;
    private int positionInCurrentBuffer;
    private bool bufferingModeDisabled;
    private LinkedListNode`1<Byte[]> currentReadNode;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal bool IsBuffering { get; }
    internal BufferingReadStream(Stream stream);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    internal bool get_IsBuffering();
    public virtual void Flush();
    public virtual int Read(Byte[] userBuffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    internal void ResetStream();
    internal void StopBuffering();
    protected virtual void Dispose(bool disposing);
    private void MoveToNextBuffer();
}
internal static class Microsoft.OData.Buffers.BufferUtils : object {
    private static int BufferLength;
    public static Char[] InitializeBufferIfRequired(Char[] buffer);
    public static Char[] InitializeBufferIfRequired(ICharArrayPool bufferPool, Char[] buffer);
    public static Char[] RentFromBuffer(ICharArrayPool bufferPool, int minSize);
    public static void ReturnToBuffer(ICharArrayPool bufferPool, Char[] buffer);
}
public interface Microsoft.OData.Buffers.ICharArrayPool {
    public abstract virtual Char[] Rent(int minSize);
    [SuppressMessageAttribute("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
public abstract virtual void Return(Char[] array);
}
internal class Microsoft.OData.CollectionWithoutExpectedTypeValidator : object {
    private bool itemTypeDerivedFromCollectionValue;
    private string itemTypeName;
    private IEdmPrimitiveType primitiveItemType;
    private EdmTypeKind itemTypeKind;
    internal string ItemTypeNameFromCollection { get; }
    internal EdmTypeKind ItemTypeKindFromCollection { get; }
    internal CollectionWithoutExpectedTypeValidator(string itemTypeNameFromCollection);
    internal string get_ItemTypeNameFromCollection();
    internal EdmTypeKind get_ItemTypeKindFromCollection();
    internal void ValidateCollectionItem(string collectionItemTypeName, EdmTypeKind collectionItemTypeKind);
    private static EdmTypeKind ComputeExpectedTypeKind(string typeName, IEdmPrimitiveType& primitiveItemType);
    private static string GetItemTypeFullName(string typeName);
    private void ValidateCollectionItemTypeNameAndKind(string collectionItemTypeName, EdmTypeKind collectionItemTypeKind);
}
public enum Microsoft.OData.DeltaDeletedEntryReason : Enum {
    public int value__;
    public static DeltaDeletedEntryReason Deleted;
    public static DeltaDeletedEntryReason Changed;
}
internal class Microsoft.OData.DerivedTypeValidator : object {
    private IEnumerable`1<string> derivedTypeConstraints;
    private IEdmType expectedType;
    private string resourceKind;
    private string resourceName;
    public DerivedTypeValidator(IEdmType expectedType, IEnumerable`1<string> derivedTypeConstraints, string resourceKind, string resourceName);
    internal void ValidateResourceType(IEdmType resourceType);
    internal void ValidateResourceType(string resourceTypeName);
}
internal class Microsoft.OData.DuplicatePropertyNameChecker : object {
    private IDictionary`2<string, State> propertyState;
    public sealed virtual void ValidatePropertyUniqueness(ODataPropertyInfo property);
    public sealed virtual void ValidatePropertyUniqueness(ODataNestedResourceInfo property);
    public sealed virtual void ValidatePropertyOpenForAssociationLink(string propertyName);
    public sealed virtual void Reset();
}
internal class Microsoft.OData.Edm.NormalizedModelElementsCache : object {
    private Dictionary`2<string, List`1<IEdmSchemaType>> schemaTypesCache;
    private Dictionary`2<string, List`1<IEdmOperation>> operationsCache;
    private Dictionary`2<string, List`1<IEdmTerm>> termsCache;
    private Dictionary`2<string, List`1<IEdmNavigationSource>> navigationSourcesCache;
    private Dictionary`2<string, List`1<IEdmOperationImport>> operationImportsCache;
    public NormalizedModelElementsCache(IEdmModel model);
    public List`1<IEdmSchemaType> FindSchemaTypes(string qualifiedName);
    public List`1<IEdmOperation> FindOperations(string qualifiedName);
    public List`1<IEdmTerm> FindTerms(string qualifiedName);
    public List`1<IEdmNavigationSource> FindNavigationSources(string name);
    public List`1<IEdmOperationImport> FindOperationImports(string name);
    private void PopulateSchemaElements(IEdmModel model);
    private void PopulateContainerElements(IEdmModel model);
    private static void AddSchemaElementToCache(T element, Dictionary`2<string, List`1<T>> cache);
    private static void AddContainerElementToCache(T element, Dictionary`2<string, List`1<T>> cache);
}
[ExtensionAttribute]
internal static class Microsoft.OData.EdmExtensionMethods : object {
    [ExtensionAttribute]
public static IEdmNavigationSource FindNavigationTarget(IEdmNavigationSource navigationSource, IEdmNavigationProperty navigationProperty, Func`2<IEdmPathExpression, bool> matchBindingPath);
    [ExtensionAttribute]
public static IEdmNavigationSource FindNavigationTarget(IEdmNavigationSource navigationSource, IEdmNavigationProperty navigationProperty, Func`3<IEdmPathExpression, IReadOnlyList`1<ODataPathSegment>, bool> matchBindingPath, IReadOnlyList`1<ODataPathSegment> parsedSegments, IEdmPathExpression& bindingPath);
    public static bool HasKey(IEdmNavigationSource currentNavigationSource, IEdmStructuredType currentResourceType);
    [ExtensionAttribute]
public static bool TryParse(IEdmEnumType enumType, long value, IEdmEnumMember& enumMember);
    [ExtensionAttribute]
public static bool ContainsMember(IEdmEnumType enumType, string memberName, StringComparison comparison);
}
internal static class Microsoft.OData.EdmValueParser : object {
    internal static Regex DayTimeDurationValidator;
    private static EdmValueParser();
    internal static TimeSpan ParseDuration(string value);
    internal static bool TryParseBinary(string value, Byte[]& result);
    internal static bool TryParseBool(string value, Nullable`1& result);
    internal static bool TryParseDuration(string value, Nullable`1& result);
    internal static bool TryParseDateTimeOffset(string value, Nullable`1& result);
    internal static bool TryParseInt(string value, Nullable`1& result);
    internal static bool TryParseLong(string value, Nullable`1& result);
    internal static bool TryParseDecimal(string value, Nullable`1& result);
    internal static bool TryParseFloat(string value, Nullable`1& result);
    internal static bool TryParseGuid(string value, Nullable`1& result);
    internal static bool TryParseDate(string value, Nullable`1& result);
    internal static bool TryParseTimeOfDay(string value, Nullable`1& result);
    private static bool TryParseCharAsBinary(char c, Byte& b);
}
internal static class Microsoft.OData.EdmValueWriter : object {
    private static Char[] Hex;
    private static EdmValueWriter();
    internal static string StringAsXml(string s);
    internal static string BinaryAsXml(Byte[] binary);
    internal static string BooleanAsXml(bool b);
    internal static string BooleanAsXml(Nullable`1<bool> b);
    internal static string IntAsXml(int i);
    internal static string IntAsXml(Nullable`1<int> i);
    internal static string LongAsXml(long l);
    internal static string FloatAsXml(double f);
    internal static string DecimalAsXml(decimal d);
    internal static string DurationAsXml(TimeSpan d);
    internal static string DateTimeOffsetAsXml(DateTimeOffset d);
    internal static string DateAsXml(Date d);
    internal static string TimeOfDayAsXml(TimeOfDay time);
    internal static string GuidAsXml(Guid g);
    internal static string UriAsXml(Uri uri);
}
internal static class Microsoft.OData.Error : object {
    internal static Exception ArgumentNull(string paramName);
    internal static Exception ArgumentOutOfRange(string paramName);
    internal static Exception NotImplemented();
    internal static Exception NotSupported();
}
internal static class Microsoft.OData.ErrorUtils : object {
    internal static string ODataErrorMessageDefaultLanguage;
    internal static void GetErrorDetails(ODataError error, String& code, String& message);
    internal static void WriteXmlError(XmlWriter writer, ODataError error, bool includeDebugInformation, ODataMessageWriterSettings messageWriterSettings);
    private static void WriteXmlError(XmlWriter writer, string code, string message, ODataInnerError innerError, ODataMessageWriterSettings messageWriterSettings);
    private static void WriteXmlInnerError(XmlWriter writer, ODataInnerError innerError, string innerErrorElementName, int recursionDepth, ODataMessageWriterSettings messageWriterSettings);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Evaluation.EdmValueUtils : object {
    internal static IEdmDelayedValue ConvertPrimitiveValue(object primitiveValue, IEdmPrimitiveTypeReference type);
    [ExtensionAttribute]
internal static object ToClrValue(IEdmPrimitiveValue edmValue);
    internal static bool TryGetStreamProperty(IEdmStructuredValue entityInstance, string streamPropertyName, IEdmProperty& streamProperty);
    [ExtensionAttribute]
internal static object GetPrimitivePropertyClrValue(IEdmStructuredValue structuredValue, string propertyName);
    private static object ConvertFloatingValue(IEdmFloatingValue floatingValue, EdmPrimitiveTypeKind primitiveKind);
    private static object ConvertIntegerValue(IEdmIntegerValue integerValue, EdmPrimitiveTypeKind primitiveKind);
    private static IEdmDelayedValue ConvertPrimitiveValueWithoutTypeCode(object primitiveValue, IEdmPrimitiveTypeReference type);
    private static IEdmPrimitiveTypeReference EnsurePrimitiveType(IEdmPrimitiveTypeReference type, EdmPrimitiveTypeKind primitiveKindFromValue);
}
internal interface Microsoft.OData.Evaluation.IODataMetadataContext {
    public IEdmModel Model { get; }
    public Uri ServiceBaseUri { get; }
    public Uri MetadataDocumentUri { get; }
    public Nullable`1<ODataUriSlim> ODataUri { get; }
    public abstract virtual IEdmModel get_Model();
    public abstract virtual Uri get_ServiceBaseUri();
    public abstract virtual Uri get_MetadataDocumentUri();
    public abstract virtual Nullable`1<ODataUriSlim> get_ODataUri();
    public abstract virtual ODataResourceMetadataBuilder GetResourceMetadataBuilderForReader(IODataJsonReaderResourceState resourceState, bool useKeyAsSegment, bool isDelta);
    public abstract virtual IEnumerable`1<IEdmOperation> GetBindableOperationsForType(IEdmType bindingType);
    public abstract virtual bool OperationsBoundToStructuredTypeMustBeContainerQualified(IEdmStructuredType structuredType);
}
internal interface Microsoft.OData.Evaluation.IODataResourceMetadataContext {
    public ODataResourceBase Resource { get; }
    public IODataResourceTypeContext TypeContext { get; }
    public IEdmStructuredType ActualResourceType { get; }
    public string ActualResourceTypeName { get; }
    public ICollection`1<KeyValuePair`2<string, object>> KeyProperties { get; }
    public IEnumerable`1<KeyValuePair`2<string, object>> ETagProperties { get; }
    public IEnumerable`1<IEdmNavigationProperty> SelectedNavigationProperties { get; }
    public IDictionary`2<string, IEdmStructuralProperty> SelectedStreamProperties { get; }
    public IEnumerable`1<IEdmOperation> SelectedBindableOperations { get; }
    public abstract virtual ODataResourceBase get_Resource();
    public abstract virtual IODataResourceTypeContext get_TypeContext();
    public abstract virtual IEdmStructuredType get_ActualResourceType();
    public abstract virtual string get_ActualResourceTypeName();
    public abstract virtual ICollection`1<KeyValuePair`2<string, object>> get_KeyProperties();
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, object>> get_ETagProperties();
    public abstract virtual IEnumerable`1<IEdmNavigationProperty> get_SelectedNavigationProperties();
    public abstract virtual IDictionary`2<string, IEdmStructuralProperty> get_SelectedStreamProperties();
    public abstract virtual IEnumerable`1<IEdmOperation> get_SelectedBindableOperations();
}
internal abstract class Microsoft.OData.Evaluation.KeySerializer : object {
    private static DefaultKeySerializer DefaultInstance;
    private static SegmentKeySerializer SegmentInstance;
    private static KeySerializer();
    internal static KeySerializer Create(bool enableKeyAsSegment);
    internal abstract virtual void AppendKeyExpression(StringBuilder builder, ICollection`1<TProperty> keyProperties, Func`2<TProperty, string> getPropertyName, Func`2<TProperty, object> getPropertyValue);
    private static string GetKeyValueAsString(Func`2<TProperty, object> getPropertyValue, TProperty property, LiteralFormatter literalFormatter);
    private static void AppendKeyWithParentheses(StringBuilder builder, ICollection`1<TProperty> keyProperties, Func`2<TProperty, string> getPropertyName, Func`2<TProperty, object> getPropertyValue);
}
internal abstract class Microsoft.OData.Evaluation.LiteralFormatter : object {
    private static LiteralFormatter DefaultInstance;
    private static LiteralFormatter DefaultInstanceWithoutEncoding;
    private static LiteralFormatter KeyAsSegmentInstance;
    internal static LiteralFormatter ForConstants { get; }
    internal static LiteralFormatter ForConstantsWithoutEncoding { get; }
    private static LiteralFormatter();
    internal static LiteralFormatter get_ForConstants();
    internal static LiteralFormatter get_ForConstantsWithoutEncoding();
    internal static LiteralFormatter ForKeys(bool keysAsSegment);
    internal abstract virtual string Format(object value);
    protected virtual string EscapeResultForUri(string result);
    private static string ConvertByteArrayToKeyString(Byte[] byteArray);
    private static string FormatRawLiteral(object value);
    private string FormatAndEscapeLiteral(object value);
}
internal class Microsoft.OData.Evaluation.NoOpResourceMetadataBuilder : ODataResourceMetadataBuilder {
    private ODataResourceBase resource;
    internal NoOpResourceMetadataBuilder(ODataResourceBase resource);
    internal virtual Uri GetEditLink();
    internal virtual Uri GetReadLink();
    internal virtual Uri GetId();
    internal virtual string GetETag();
    internal virtual ODataStreamReferenceValue GetMediaResource();
    internal virtual IEnumerable`1<ODataPropertyInfo> GetProperties(IEnumerable`1<ODataPropertyInfo> nonComputedProperties);
    internal virtual IEnumerable`1<ODataAction> GetActions();
    internal virtual IEnumerable`1<ODataFunction> GetFunctions();
    internal virtual Uri GetNavigationLinkUri(string navigationPropertyName, Uri navigationLinkUrl, bool hasNestedResourceInfoUrl);
    internal virtual Uri GetAssociationLinkUri(string navigationPropertyName, Uri associationLinkUrl, bool hasAssociationLinkUrl);
    internal virtual bool TryGetIdForSerialization(Uri& id);
}
internal class Microsoft.OData.Evaluation.ODataConventionalEntityMetadataBuilder : ODataConventionalIdMetadataBuilder {
    private Uri computedEditLink;
    private Uri computedReadLink;
    private string computedETag;
    private bool etagComputed;
    private ODataStreamReferenceValue computedMediaResource;
    private List`1<ODataProperty> computedStreamProperties;
    private bool isResourceEnd;
    private ODataMissingOperationGenerator missingOperationGenerator;
    private ODataMissingOperationGenerator MissingOperationGenerator { get; }
    internal ODataConventionalEntityMetadataBuilder(IODataResourceMetadataContext resourceMetadataContext, IODataMetadataContext metadataContext, ODataUriBuilder uriBuilder);
    private ODataMissingOperationGenerator get_MissingOperationGenerator();
    public virtual Uri GetCanonicalUrl();
    public virtual Uri GetEditUrl();
    public virtual Uri GetReadUrl();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual Uri GetEditLink();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual Uri GetReadLink();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual string GetETag();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual ODataStreamReferenceValue GetMediaResource();
    internal virtual IEnumerable`1<ODataPropertyInfo> GetProperties(IEnumerable`1<ODataPropertyInfo> nonComputedProperties);
    internal virtual void StartResource();
    internal virtual void EndResource();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual IEnumerable`1<ODataAction> GetActions();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual IEnumerable`1<ODataFunction> GetFunctions();
    internal virtual Uri GetNavigationLinkUri(string navigationPropertyName, Uri navigationLinkUrl, bool hasNestedResourceInfoUrl);
    internal virtual Uri GetAssociationLinkUri(string navigationPropertyName, Uri associationLinkUrl, bool hasAssociationLinkUrl);
    internal virtual Uri GetOperationTargetUri(string operationName, string bindingParameterTypeName, string parameterNames);
    internal virtual string GetOperationTitle(string operationName);
    internal virtual bool TryGetIdForSerialization(Uri& id);
    private Uri ComputeEditLink();
    private IEnumerable`1<ODataPropertyInfo> GetComputedStreamProperties(IEnumerable`1<ODataPropertyInfo> nonComputedProperties);
}
internal class Microsoft.OData.Evaluation.ODataConventionalIdMetadataBuilder : ODataConventionalResourceMetadataBuilder {
    private Uri computedId;
    private ICollection`1<KeyValuePair`2<string, object>> computedKeyProperties;
    protected Uri ComputedId { get; }
    private ICollection`1<KeyValuePair`2<string, object>> ComputedKeyProperties { get; }
    internal ODataConventionalIdMetadataBuilder(IODataResourceMetadataContext resourceMetadataContext, IODataMetadataContext metadataContext, ODataUriBuilder uriBuilder);
    public virtual Uri GetCanonicalUrl();
    protected Uri get_ComputedId();
    private ICollection`1<KeyValuePair`2<string, object>> get_ComputedKeyProperties();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual Uri GetId();
    internal virtual bool TryGetIdForSerialization(Uri& id);
    private void ComputeAndCacheId();
    private Uri ComputeId();
    private Uri ComputeIdForContainment();
    private bool TryComputeIdFromParent(Uri& uri);
    private Uri ComputeIdForSingleton();
    private Uri GetContainingEntitySetUri(Uri baseUri, ODataPath path);
}
internal class Microsoft.OData.Evaluation.ODataConventionalResourceMetadataBuilder : ODataResourceMetadataBuilder {
    public IODataResourceMetadataContext ResourceMetadataContext;
    protected ODataUriBuilder UriBuilder;
    protected IODataMetadataContext MetadataContext;
    protected HashSet`1<string> ProcessedNestedResourceInfos;
    protected HashSet`1<string> ProcessedStreamProperties;
    private IEnumerator`1<ODataJsonReaderNestedResourceInfo> unprocessedNavigationLinks;
    private IEnumerator`1<string> unprocessedStreamProperties;
    private Uri readUrl;
    private Uri editUrl;
    private Uri canonicalUrl;
    private ODataResourceBase resource;
    [CompilerGeneratedAttribute]
private ODataUri <ODataUri>k__BackingField;
    internal ODataUri ODataUri { get; internal set; }
    internal ODataConventionalResourceMetadataBuilder(IODataResourceMetadataContext resourceMetadataContext, IODataMetadataContext metadataContext, ODataUriBuilder uriBuilder);
    [CompilerGeneratedAttribute]
internal ODataUri get_ODataUri();
    [CompilerGeneratedAttribute]
internal void set_ODataUri(ODataUri value);
    public virtual Uri GetEditUrl();
    public virtual Uri GetReadUrl();
    public virtual Uri GetCanonicalUrl();
    internal virtual void StartResource();
    internal virtual void EndResource();
    internal virtual Uri GetEditLink();
    internal virtual Uri GetReadLink();
    internal virtual Uri GetId();
    internal virtual bool TryGetIdForSerialization(Uri& id);
    internal virtual string GetETag();
    internal virtual IEnumerable`1<ODataPropertyInfo> GetProperties(IEnumerable`1<ODataPropertyInfo> nonComputedProperties);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual IEnumerable`1<ODataAction> GetActions();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual IEnumerable`1<ODataFunction> GetFunctions();
    internal virtual void MarkNestedResourceInfoProcessed(string navigationPropertyName);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual ODataJsonReaderNestedResourceInfo GetNextUnprocessedNavigationLink();
    internal virtual void MarkStreamPropertyProcessed(string streamPropertyName);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual ODataProperty GetNextUnprocessedStreamProperty();
    internal virtual Uri GetNavigationLinkUri(string navigationPropertyName, Uri navigationLinkUrl, bool hasNestedResourceInfoUrl);
    internal virtual Uri GetAssociationLinkUri(string navigationPropertyName, Uri associationLinkUrl, bool hasAssociationLinkUrl);
    internal virtual Uri GetStreamEditLink(string streamPropertyName);
    internal virtual Uri GetStreamReadLink(string streamPropertyName);
    internal virtual Uri GetOperationTargetUri(string operationName, string bindingParameterTypeName, string parameterNames);
    internal virtual string GetOperationTitle(string operationName);
    [CompilerGeneratedAttribute]
private bool <GetNextUnprocessedNavigationLink>b__30_0(IEdmNavigationProperty p);
    [CompilerGeneratedAttribute]
private bool <GetNextUnprocessedStreamProperty>b__32_0(KeyValuePair`2<string, IEdmStructuralProperty> p);
}
internal class Microsoft.OData.Evaluation.ODataConventionalUriBuilder : ODataUriBuilder {
    private Uri serviceBaseUri;
    private KeySerializer keySerializer;
    internal ODataConventionalUriBuilder(Uri serviceBaseUri, ODataUrlKeyDelimiter urlKeyDelimiter);
    internal virtual Uri BuildBaseUri();
    internal virtual Uri BuildEntitySetUri(Uri baseUri, string entitySetName);
    internal virtual Uri BuildEntityInstanceUri(Uri baseUri, ICollection`1<KeyValuePair`2<string, object>> keyProperties, string entityTypeName);
    internal virtual Uri BuildStreamEditLinkUri(Uri baseUri, string streamPropertyName);
    internal virtual Uri BuildStreamReadLinkUri(Uri baseUri, string streamPropertyName);
    internal virtual Uri BuildNavigationLinkUri(Uri baseUri, string navigationPropertyName);
    internal virtual Uri BuildAssociationLinkUri(Uri baseUri, string navigationPropertyName);
    internal virtual Uri BuildOperationTargetUri(Uri baseUri, string operationName, string bindingParameterTypeName, string parameterNames);
    internal virtual Uri AppendTypeSegment(Uri baseUri, string typeName);
    [ConditionalAttribute("DEBUG")]
private static void ValidateBaseUri(Uri baseUri);
    private static Uri AppendSegment(Uri baseUri, string segment, bool escapeSegment);
    private static object ValidateKeyValue(string keyPropertyName, object keyPropertyValue, string entityTypeName);
    private void AppendKeyExpression(StringBuilder builder, ICollection`1<KeyValuePair`2<string, object>> keyProperties, string entityTypeName);
}
internal class Microsoft.OData.Evaluation.ODataMetadataContext : object {
    private IEdmModel model;
    private EdmTypeResolver edmTypeResolver;
    private bool isResponse;
    private Func`2<IEdmStructuredType, bool> operationsBoundToStructuredTypeMustBeContainerQualified;
    private Uri metadataDocumentUri;
    private Nullable`1<ODataUriSlim> odataUri;
    private Uri serviceBaseUri;
    private JsonMetadataLevel metadataLevel;
    public IEdmModel Model { get; }
    public Uri ServiceBaseUri { get; }
    public Uri MetadataDocumentUri { get; }
    public Nullable`1<ODataUriSlim> ODataUri { get; }
    public ODataMetadataContext(bool isResponse, IEdmModel model, Uri metadataDocumentUri, Nullable`1& odataUri);
    public ODataMetadataContext(bool isResponse, Func`2<IEdmStructuredType, bool> operationsBoundToStructuredTypeMustBeContainerQualified, EdmTypeResolver edmTypeResolver, IEdmModel model, Uri metadataDocumentUri, Nullable`1& odataUri);
    public ODataMetadataContext(bool isResponse, Func`2<IEdmStructuredType, bool> operationsBoundToEntityTypeMustBeContainerQualified, EdmTypeResolver edmTypeResolver, IEdmModel model, Uri metadataDocumentUri, Nullable`1& odataUri, JsonMetadataLevel metadataLevel);
    public sealed virtual IEdmModel get_Model();
    public sealed virtual Uri get_ServiceBaseUri();
    public sealed virtual Uri get_MetadataDocumentUri();
    public sealed virtual Nullable`1<ODataUriSlim> get_ODataUri();
    public sealed virtual ODataResourceMetadataBuilder GetResourceMetadataBuilderForReader(IODataJsonReaderResourceState resourceState, bool useKeyAsSegment, bool isDelta);
    public sealed virtual IEnumerable`1<IEdmOperation> GetBindableOperationsForType(IEdmType bindingType);
    public sealed virtual bool OperationsBoundToStructuredTypeMustBeContainerQualified(IEdmStructuredType structuredType);
}
public abstract class Microsoft.OData.Evaluation.ODataMetadataSelector : object {
    public virtual IEnumerable`1<IEdmNavigationProperty> SelectNavigationProperties(IEdmStructuredType type, IEnumerable`1<IEdmNavigationProperty> navigationProperties);
    public virtual IEnumerable`1<IEdmOperation> SelectBindableOperations(IEdmStructuredType type, IEnumerable`1<IEdmOperation> bindableOperations);
    public virtual IEnumerable`1<IEdmStructuralProperty> SelectStreamProperties(IEdmStructuredType type, IEnumerable`1<IEdmStructuralProperty> selectedStreamProperties);
}
internal class Microsoft.OData.Evaluation.ODataMissingOperationGenerator : object {
    private IODataMetadataContext metadataContext;
    private IODataResourceMetadataContext resourceMetadataContext;
    private List`1<ODataAction> computedActions;
    private List`1<ODataFunction> computedFunctions;
    internal ODataMissingOperationGenerator(IODataResourceMetadataContext resourceMetadataContext, IODataMetadataContext metadataContext);
    internal IEnumerable`1<ODataAction> GetComputedActions();
    internal IEnumerable`1<ODataFunction> GetComputedFunctions();
    private static HashSet`1<IEdmOperation> GetOperationsInEntry(ODataResourceBase resource, IEdmModel model, Uri metadataDocumentUri);
    private void ComputeMissingOperationsToResource();
}
internal abstract class Microsoft.OData.Evaluation.ODataResourceMetadataBuilder : object {
    [CompilerGeneratedAttribute]
private ODataResourceMetadataBuilder <ParentMetadataBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFromCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NameAsProperty>k__BackingField;
    internal static ODataResourceMetadataBuilder Null { get; }
    internal ODataResourceMetadataBuilder ParentMetadataBuilder { get; internal set; }
    internal bool IsFromCollection { get; internal set; }
    internal string NameAsProperty { get; internal set; }
    internal static ODataResourceMetadataBuilder get_Null();
    [CompilerGeneratedAttribute]
internal ODataResourceMetadataBuilder get_ParentMetadataBuilder();
    [CompilerGeneratedAttribute]
internal void set_ParentMetadataBuilder(ODataResourceMetadataBuilder value);
    [CompilerGeneratedAttribute]
internal bool get_IsFromCollection();
    [CompilerGeneratedAttribute]
internal void set_IsFromCollection(bool value);
    [CompilerGeneratedAttribute]
internal string get_NameAsProperty();
    [CompilerGeneratedAttribute]
internal void set_NameAsProperty(string value);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal abstract virtual Uri GetEditLink();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal abstract virtual Uri GetReadLink();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal abstract virtual Uri GetId();
    internal abstract virtual bool TryGetIdForSerialization(Uri& id);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal abstract virtual string GetETag();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual ODataStreamReferenceValue GetMediaResource();
    internal virtual IEnumerable`1<ODataPropertyInfo> GetProperties(IEnumerable`1<ODataPropertyInfo> nonComputedProperties);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual IEnumerable`1<ODataAction> GetActions();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual IEnumerable`1<ODataFunction> GetFunctions();
    internal virtual void MarkNestedResourceInfoProcessed(string navigationPropertyName);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual ODataProperty GetNextUnprocessedStreamProperty();
    internal virtual void MarkStreamPropertyProcessed(string streamPropertyName);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
internal virtual ODataJsonReaderNestedResourceInfo GetNextUnprocessedNavigationLink();
    internal virtual Uri GetStreamEditLink(string streamPropertyName);
    internal virtual Uri GetStreamReadLink(string streamPropertyName);
    internal virtual Uri GetNavigationLinkUri(string navigationPropertyName, Uri navigationLinkUrl, bool hasNestedResourceInfoUrl);
    internal virtual Uri GetAssociationLinkUri(string navigationPropertyName, Uri associationLinkUrl, bool hasAssociationLinkUrl);
    internal virtual Uri GetOperationTargetUri(string operationName, string bindingParameterTypeName, string parameterNames);
    internal virtual string GetOperationTitle(string operationName);
}
internal abstract class Microsoft.OData.Evaluation.ODataResourceMetadataContext : object {
    private static IEnumerable`1<KeyValuePair`2<string, object>> EmptyProperties;
    private ODataResourceBase resource;
    private IODataResourceTypeContext typeContext;
    private IList`1<KeyValuePair`2<string, object>> keyProperties;
    private IEnumerable`1<KeyValuePair`2<string, object>> etagProperties;
    private IEnumerable`1<IEdmNavigationProperty> selectedNavigationProperties;
    private IDictionary`2<string, IEdmStructuralProperty> selectedStreamProperties;
    private IEnumerable`1<IEdmOperation> selectedBindableOperations;
    [CompilerGeneratedAttribute]
private IEdmStructuredType <ActualResourceType>k__BackingField;
    public ODataResourceBase Resource { get; }
    public IODataResourceTypeContext TypeContext { get; }
    public IEdmStructuredType ActualResourceType { get; public set; }
    public string ActualResourceTypeName { get; }
    public ICollection`1<KeyValuePair`2<string, object>> KeyProperties { get; }
    public IEnumerable`1<KeyValuePair`2<string, object>> ETagProperties { get; }
    public IEnumerable`1<IEdmNavigationProperty> SelectedNavigationProperties { get; }
    public IDictionary`2<string, IEdmStructuralProperty> SelectedStreamProperties { get; }
    public IEnumerable`1<IEdmOperation> SelectedBindableOperations { get; }
    protected ODataResourceMetadataContext(ODataResourceBase resource, IODataResourceTypeContext typeContext);
    private static ODataResourceMetadataContext();
    public sealed virtual ODataResourceBase get_Resource();
    public sealed virtual IODataResourceTypeContext get_TypeContext();
    [CompilerGeneratedAttribute]
public sealed virtual IEdmStructuredType get_ActualResourceType();
    [CompilerGeneratedAttribute]
public void set_ActualResourceType(IEdmStructuredType value);
    public abstract virtual string get_ActualResourceTypeName();
    public abstract virtual ICollection`1<KeyValuePair`2<string, object>> get_KeyProperties();
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, object>> get_ETagProperties();
    public abstract virtual IEnumerable`1<IEdmNavigationProperty> get_SelectedNavigationProperties();
    public abstract virtual IDictionary`2<string, IEdmStructuralProperty> get_SelectedStreamProperties();
    public abstract virtual IEnumerable`1<IEdmOperation> get_SelectedBindableOperations();
    internal static ODataResourceMetadataContext Create(ODataResourceBase resource, IODataResourceTypeContext typeContext, ODataResourceSerializationInfo serializationInfo, IEdmStructuredType actualResourceType, IODataMetadataContext metadataContext, SelectedPropertiesNode selectedProperties, ODataMetadataSelector metadataSelector, bool requiresId);
    internal static IList`1<KeyValuePair`2<string, object>> GetKeyProperties(ODataResourceBase resource, ODataResourceSerializationInfo serializationInfo, IEdmEntityType actualEntityType, bool requiresId);
    private static List`1<KeyValuePair`2<string, object>> GetPropertyValues(IEnumerable`1<IEdmStructuralProperty> properties, ODataResourceBase resource, IEdmStructuredType actualResourceType, bool isRequired);
    private static bool TryGetPrimitiveOrEnumPropertyValue(ODataResourceBase resource, string propertyName, IEdmStructuredType entityType, bool isRequired, Object& value);
    private static object GetPrimitiveOrEnumPropertyValue(ODataResourceBase resource, IEdmStructuredType entityType, ODataPropertyInfo propertyInfo, bool validateNotNull);
    private static bool ValidateEntityTypeHasKeyProperties(IList`1<KeyValuePair`2<string, object>> keyProperties, ODataResourceBase resource, IEdmStructuredType actualEntityType, bool throwOnError);
    private static KeyValuePair`2[] GetPropertiesBySerializationInfoPropertyKind(ODataResourceBase resource, ODataPropertyKind propertyKind, IEdmStructuredType actualEntityType);
    private static string GetResourceTypeName(ODataResourceBase resource, IEdmStructuredType resourceType);
}
internal abstract class Microsoft.OData.Evaluation.ODataUriBuilder : object {
    internal virtual Uri BuildBaseUri();
    internal virtual Uri BuildEntitySetUri(Uri baseUri, string entitySetName);
    internal virtual Uri BuildEntityInstanceUri(Uri baseUri, ICollection`1<KeyValuePair`2<string, object>> keyProperties, string entityTypeName);
    internal virtual Uri BuildStreamEditLinkUri(Uri baseUri, string streamPropertyName);
    internal virtual Uri BuildStreamReadLinkUri(Uri baseUri, string streamPropertyName);
    internal virtual Uri BuildNavigationLinkUri(Uri baseUri, string navigationPropertyName);
    internal virtual Uri BuildAssociationLinkUri(Uri baseUri, string navigationPropertyName);
    internal virtual Uri BuildOperationTargetUri(Uri baseUri, string operationName, string bindingParameterTypeName, string parameterNames);
    internal virtual Uri AppendTypeSegment(Uri baseUri, string typeName);
}
internal static class Microsoft.OData.ExceptionUtils : object {
    private static Type OutOfMemoryType;
    private static ExceptionUtils();
    [DebuggerStepThroughAttribute]
internal static bool IsCatchableExceptionType(Exception e);
    [DebuggerStepThroughAttribute]
internal static T CheckArgumentNotNull(T value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckArgumentStringNotEmpty(string value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckArgumentStringNotNullOrEmpty(string value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckIntegerNotNegative(int value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckIntegerPositive(int value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckLongPositive(long value, string parameterName);
    [DebuggerStepThroughAttribute]
internal static void CheckArgumentCollectionNotNullOrEmpty(ICollection`1<T> value, string parameterName);
}
internal static class Microsoft.OData.ExpressionConstants : object {
    internal static string It;
    internal static string This;
    internal static string KeywordAdd;
    internal static string KeywordAnd;
    internal static string KeywordAscending;
    internal static string KeywordDescending;
    internal static string KeywordDivide;
    internal static string KeywordModulo;
    internal static string KeywordMultiply;
    internal static string KeywordNot;
    internal static string KeywordOr;
    internal static string KeywordSub;
    internal static string SymbolNegate;
    internal static string SymbolEqual;
    internal static string SymbolComma;
    internal static string SymbolDot;
    internal static string SymbolForwardSlash;
    internal static string SymbolOpenParen;
    internal static string SymbolClosedParen;
    internal static string SymbolQueryStart;
    internal static string SymbolQueryConcatenate;
    internal static string SymbolSingleQuote;
    internal static string SymbolSingleQuoteEscaped;
    internal static string SymbolEscapedSpace;
    internal static string KeywordEqual;
    internal static string KeywordFalse;
    internal static string KeywordGreaterThan;
    internal static string KeywordGreaterThanOrEqual;
    internal static string KeywordLessThan;
    internal static string KeywordLessThanOrEqual;
    internal static string KeywordNotEqual;
    internal static string KeywordHas;
    internal static string KeywordNull;
    internal static string KeywordTrue;
    internal static string KeywordMax;
    internal static string KeywordIn;
    internal static string UnboundFunctionCast;
    internal static string UnboundFunctionIsOf;
    internal static string UnboundFunctionLength;
    internal static string UnboundFunctionIntersects;
    internal static string InfinityLiteral;
    internal static string NaNLiteral;
    internal static string LiteralPrefixDuration;
    internal static string LiteralPrefixGeometry;
    internal static string LiteralPrefixGeography;
    internal static string LiteralPrefixBinary;
    internal static string LiteralSuffixInt64;
    internal static string LiteralSuffixSingle;
    internal static string LiteralSuffixDouble;
    internal static string LiteralSuffixDecimal;
    internal static string LiteralSingleQuote;
    internal static string QueryOptionFilter;
    internal static string QueryOptionOrderby;
    internal static string QueryOptionTop;
    internal static string QueryOptionSkip;
    internal static string QueryOptionCount;
    internal static string QueryOptionLevels;
    internal static string QueryOptionSearch;
    internal static string QueryOptionSelect;
    internal static string QueryOptionExpand;
    internal static string SearchKeywordAnd;
    internal static string SearchKeywordNot;
    internal static string SearchKeywordOr;
    internal static string KeywordAny;
    internal static string KeywordAll;
    internal static string QueryOptionApply;
    internal static string KeywordAggregate;
    internal static string KeywordFilter;
    internal static string KeywordGroupBy;
    internal static string KeywordCompute;
    internal static string KeywordSum;
    internal static string KeywordMin;
    internal static string KeywordAverage;
    internal static string KeywordCountDistinct;
    internal static string KeywordAs;
    internal static string KeywordWith;
    internal static string QueryOptionCompute;
    internal static string KeywordExpand;
}
internal class Microsoft.OData.GeographyTypeConverter : object {
    public sealed virtual void WriteJson(object instance, IJsonWriter jsonWriter);
}
internal class Microsoft.OData.GeometryTypeConverter : object {
    public sealed virtual void WriteJson(object instance, IJsonWriter jsonWriter);
}
internal class Microsoft.OData.HttpHeaderValue : Dictionary`2<string, HttpHeaderValueElement> {
    public virtual string ToString();
}
public class Microsoft.OData.HttpHeaderValueElement : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<KeyValuePair`2<string, string>> <Parameters>k__BackingField;
    public string Name { get; private set; }
    public string Value { get; private set; }
    public IEnumerable`1<KeyValuePair`2<string, string>> Parameters { get; private set; }
    public HttpHeaderValueElement(string name, string value, IEnumerable`1<KeyValuePair`2<string, string>> parameters);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<KeyValuePair`2<string, string>> get_Parameters();
    [CompilerGeneratedAttribute]
private void set_Parameters(IEnumerable`1<KeyValuePair`2<string, string>> value);
    public virtual string ToString();
    private static void AppendNameValuePair(StringBuilder stringBuilder, string name, string value);
}
internal abstract class Microsoft.OData.HttpHeaderValueLexer : object {
    internal static string ElementSeparator;
    internal static string ParameterSeparator;
    internal static string ValueSeparator;
    private string httpHeaderName;
    private string httpHeaderValue;
    private int startIndexOfNextItem;
    private string value;
    private string originalText;
    internal string Value { get; }
    internal string OriginalText { get; }
    internal HttpHeaderValueItemType Type { get; }
    private HttpHeaderValueLexer(string httpHeaderName, string httpHeaderValue, string value, string originalText, int startIndexOfNextItem);
    internal string get_Value();
    internal string get_OriginalText();
    internal abstract virtual HttpHeaderValueItemType get_Type();
    internal static HttpHeaderValueLexer Create(string httpHeaderName, string httpHeaderValue);
    internal HttpHeaderValue ToHttpHeaderValue();
    internal abstract virtual HttpHeaderValueLexer ReadNext();
    private static HttpHeaderValueElement ReadHttpHeaderValueElement(HttpHeaderValueLexer& lexer);
    private static KeyValuePair`2<string, string> ReadKeyValuePair(HttpHeaderValueLexer& lexer);
    private bool EndOfHeaderValue();
    private HttpHeaderValueLexer ReadNextTokenOrQuotedString();
    private HttpHeaderToken ReadNextToken();
    private HttpHeaderSeparator ReadNextSeparator();
}
internal static class Microsoft.OData.HttpUtils : object {
    internal static IList`1<KeyValuePair`2<string, string>> ReadMimeType(string contentType, String& mediaTypeName, String& mediaTypeCharset);
    internal static string BuildContentType(ODataMediaType mediaType, Encoding encoding);
    internal static IList`1<KeyValuePair`2<ODataMediaType, string>> MediaTypesFromString(string text);
    internal static bool CompareMediaTypeNames(string mediaTypeName1, string mediaTypeName2);
    internal static bool CompareMediaTypeParameterNames(string parameterName1, string parameterName2);
    internal static bool IsMetadataParameter(string parameterName);
    internal static bool IsStreamingParameter(string parameterName);
    internal static Encoding EncodingFromAcceptableCharsets(string acceptableCharsets, ODataMediaType mediaType, Encoding utf8Encoding, Encoding defaultEncoding);
    internal static void ReadQualityValue(string text, Int32& textIndex, Int32& qualityValue);
    internal static void ValidateHttpMethod(string httpMethodString);
    internal static bool IsQueryMethod(string httpMethod);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
internal static string GetStatusMessage(int statusCode);
    internal static Encoding GetEncodingFromCharsetName(string charsetName);
    internal static string ReadTokenOrQuotedStringValue(string headerName, string headerText, Int32& textIndex, Boolean& isQuotedString, Func`2<string, Exception> createException);
    internal static bool SkipWhitespace(string text, Int32& textIndex);
    [IteratorStateMachineAttribute("Microsoft.OData.HttpUtils/<AcceptCharsetParts>d__15")]
private static IEnumerable`1<CharsetPart> AcceptCharsetParts(string headerValue);
    private static IList`1<KeyValuePair`2<ODataMediaType, string>> ReadMediaTypes(string text);
    private static void ReadMediaTypeParameter(string text, Int32& textIndex, List`1& parameters, String& charset);
    private static void ReadMediaTypeAndSubtype(string mediaTypeName, Int32& textIndex, String& type, String& subType);
    private static bool IsHttpToken(char c);
    private static bool IsValidInQuotedHeaderValue(char c);
    private static bool IsHttpSeparator(char c);
    private static bool ReadToken(string text, Int32& textIndex);
    private static int DigitToInt32(char c);
    private static bool IsHttpElementSeparator(char c);
    private static bool ReadLiteral(string text, int textIndex, string literal);
}
internal interface Microsoft.OData.IDuplicatePropertyNameChecker {
    public abstract virtual void ValidatePropertyUniqueness(ODataPropertyInfo property);
    public abstract virtual void ValidatePropertyUniqueness(ODataNestedResourceInfo property);
    public abstract virtual void ValidatePropertyOpenForAssociationLink(string propertyName);
    public abstract virtual void Reset();
}
internal class Microsoft.OData.InstanceAnnotationWriteTracker : object {
    private HashSet`1<string> writeStatus;
    public bool IsAnnotationWritten(string key);
    public bool MarkAnnotationWritten(string key);
}
internal enum Microsoft.OData.InternalErrorCodes : Enum {
    public int value__;
    public static InternalErrorCodes ODataWriterCore_WriteEnd_UnreachableCodePath;
    public static InternalErrorCodes ODataWriterCore_ValidateTransition_UnreachableCodePath;
    public static InternalErrorCodes ODataWriterCore_Scope_Create_UnreachableCodePath;
    public static InternalErrorCodes ODataWriterCore_PropertyAndAnnotationCollector;
    public static InternalErrorCodes ODataWriterCore_ParentNestedResourceInfoScope;
    public static InternalErrorCodes ODataUtils_VersionString_UnreachableCodePath;
    public static InternalErrorCodes ODataUtilsInternal_IsPayloadKindSupported_UnreachableCodePath;
    public static InternalErrorCodes ODataUtils_GetDefaultEncoding_UnreachableCodePath;
    public static InternalErrorCodes ODataMessageWriter_WriteProperty;
    public static InternalErrorCodes ODataMessageWriter_WriteEntityReferenceLink;
    public static InternalErrorCodes ODataMessageWriter_WriteEntityReferenceLinks;
    public static InternalErrorCodes ODataMessageWriter_WriteError;
    public static InternalErrorCodes ODataMessageWriter_WriteServiceDocument;
    public static InternalErrorCodes ODataMessageWriter_WriteMetadataDocument;
    public static InternalErrorCodes ODataCollectionWriter_CreateCollectionWriter_UnreachableCodePath;
    public static InternalErrorCodes ODataCollectionWriterCore_ValidateTransition_UnreachableCodePath;
    public static InternalErrorCodes ODataCollectionWriterCore_WriteEnd_UnreachableCodePath;
    public static InternalErrorCodes ODataParameterWriter_CannotCreateParameterWriterForFormat;
    public static InternalErrorCodes ODataParameterWriterCore_ValidateTransition_InvalidTransitionFromStart;
    public static InternalErrorCodes ODataParameterWriterCore_ValidateTransition_InvalidTransitionFromCanWriteParameter;
    public static InternalErrorCodes ODataParameterWriterCore_ValidateTransition_InvalidTransitionFromActiveSubWriter;
    public static InternalErrorCodes ODataParameterWriterCore_ValidateTransition_InvalidTransitionFromCompleted;
    public static InternalErrorCodes ODataParameterWriterCore_ValidateTransition_InvalidTransitionFromError;
    public static InternalErrorCodes ODataParameterWriterCore_ValidateTransition_UnreachableCodePath;
    public static InternalErrorCodes ODataParameterWriterCore_WriteEndImplementation_UnreachableCodePath;
    public static InternalErrorCodes QueryPathValidator_ValidateSegment_Root;
    public static InternalErrorCodes QueryPathValidator_ValidateSegment_NonRoot;
    public static InternalErrorCodes ODataBatchWriter_ValidateTransition_UnreachableCodePath;
    public static InternalErrorCodes ODataBatchWriterUtils_HttpMethod_ToText_UnreachableCodePath;
    public static InternalErrorCodes ODataBatchReader_ReadImplementation;
    public static InternalErrorCodes ODataBatchReader_GetEndBoundary_Completed;
    public static InternalErrorCodes ODataBatchReader_GetEndBoundary_Exception;
    public static InternalErrorCodes ODataBatchReader_GetEndBoundary_UnknownValue;
    public static InternalErrorCodes ODataBatchReaderStream_SkipToBoundary;
    public static InternalErrorCodes ODataBatchReaderStream_ReadLine;
    public static InternalErrorCodes ODataBatchReaderStream_ReadWithDelimiter;
    public static InternalErrorCodes ODataBatchReaderStreamBuffer_ScanForBoundary;
    public static InternalErrorCodes ODataBatchReaderStreamBuffer_ReadWithLength;
    public static InternalErrorCodes JsonReader_Read;
    public static InternalErrorCodes ODataReader_CreateReader_UnreachableCodePath;
    public static InternalErrorCodes ODataReaderCore_ReadImplementation;
    public static InternalErrorCodes ODataReaderCoreAsync_ReadAsynchronously;
    public static InternalErrorCodes ODataCollectionReader_CreateReader_UnreachableCodePath;
    public static InternalErrorCodes ODataCollectionReaderCore_ReadImplementation;
    public static InternalErrorCodes ODataCollectionReaderCoreAsync_ReadAsynchronously;
    public static InternalErrorCodes ODataParameterReaderCore_ReadImplementation;
    public static InternalErrorCodes ODataParameterReaderCoreAsync_ReadAsynchronously;
    public static InternalErrorCodes ODataParameterReaderCore_ValueMustBePrimitiveOrNull;
    public static InternalErrorCodes ODataRawValueUtils_ConvertStringToPrimitive;
    public static InternalErrorCodes EdmCoreModel_PrimitiveType;
    public static InternalErrorCodes ReaderValidationUtils_ResolveAndValidateTypeName_Strict_TypeKind;
    public static InternalErrorCodes ReaderValidationUtils_ResolveAndValidateTypeName_Lax_TypeKind;
    public static InternalErrorCodes ODataMetadataFormat_CreateOutputContextAsync;
    public static InternalErrorCodes ODataMetadataFormat_CreateInputContextAsync;
    public static InternalErrorCodes ODataModelFunctions_UnsupportedMethodOrProperty;
    public static InternalErrorCodes ODataJsonPropertyAndValueDeserializer_ReadPropertyValue;
    public static InternalErrorCodes ODataJsonPropertyAndValueDeserializer_GetNonEntityValueKind;
    public static InternalErrorCodes ODataJsonReader_ReadResourceStart;
    public static InternalErrorCodes ODataJsonResourceDeserializer_ReadTopLevelResourceSetAnnotations;
    public static InternalErrorCodes ODataJsonCollectionDeserializer_ReadCollectionStart;
    public static InternalErrorCodes ODataJsonCollectionDeserializer_ReadCollectionStart_TypeKindFromPayloadFunc;
    public static InternalErrorCodes ODataJsonCollectionDeserializer_ReadCollectionEnd;
    public static InternalErrorCodes ODataJsonEntityReferenceLinkDeserializer_ReadSingleEntityReferenceLink;
    public static InternalErrorCodes ODataJsonEntityReferenceLinkDeserializer_ReadEntityReferenceLinksAnnotations;
    public static InternalErrorCodes ODataJsonParameterDeserializer_ReadNextParameter;
    public static InternalErrorCodes EdmTypeWriterResolver_GetReturnTypeForOperationImportGroup;
    public static InternalErrorCodes ODataVersionCache_UnknownVersion;
}
internal enum Microsoft.OData.InternalErrorCodesCommon : Enum {
    public int value__;
    public static InternalErrorCodesCommon EdmLibraryExtensions_ToTypeReference;
    public static InternalErrorCodesCommon EdmLibraryExtensions_ToClrType;
    public static InternalErrorCodesCommon EdmLibraryExtensions_PrimitiveTypeReference;
    public static InternalErrorCodesCommon EdmLibraryExtensions_IsAssignableFrom_Primitive;
    public static InternalErrorCodesCommon EdmLibraryExtensions_IsAssignableFrom_Type;
    public static InternalErrorCodesCommon EdmLibraryExtensions_BaseType;
    public static InternalErrorCodesCommon EdmLibraryExtensions_Clone_TypeKind;
    public static InternalErrorCodesCommon EdmLibraryExtensions_Clone_PrimitiveTypeKind;
}
internal interface Microsoft.OData.IODataOutputInStreamErrorListener {
    public abstract virtual void OnInStreamError();
    public abstract virtual Task OnInStreamErrorAsync();
}
public interface Microsoft.OData.IODataPayloadUriConverter {
    public abstract virtual Uri ConvertPayloadUri(Uri baseUri, Uri payloadUri);
}
internal interface Microsoft.OData.IODataReaderWriterListener {
    public abstract virtual void OnException();
    public abstract virtual void OnCompleted();
}
public interface Microsoft.OData.IODataRequestMessage {
    [SuppressMessageAttribute("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    public Uri Url { get; public set; }
    public string Method { get; public set; }
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public abstract virtual Uri get_Url();
    public abstract virtual void set_Url(Uri value);
    public abstract virtual string get_Method();
    public abstract virtual void set_Method(string value);
    public abstract virtual string GetHeader(string headerName);
    public abstract virtual void SetHeader(string headerName, string headerValue);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
public abstract virtual Stream GetStream();
}
public interface Microsoft.OData.IODataRequestMessageAsync {
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
public abstract virtual Task`1<Stream> GetStreamAsync();
}
internal interface Microsoft.OData.IODataResourceTypeContext {
    public string NavigationSourceName { get; }
    public string NavigationSourceEntityTypeName { get; }
    public string NavigationSourceFullTypeName { get; }
    public EdmNavigationSourceKind NavigationSourceKind { get; }
    public string ExpectedResourceTypeName { get; }
    public bool IsMediaLinkEntry { get; }
    public bool IsFromCollection { get; }
    public abstract virtual string get_NavigationSourceName();
    public abstract virtual string get_NavigationSourceEntityTypeName();
    public abstract virtual string get_NavigationSourceFullTypeName();
    public abstract virtual EdmNavigationSourceKind get_NavigationSourceKind();
    public abstract virtual string get_ExpectedResourceTypeName();
    public abstract virtual bool get_IsMediaLinkEntry();
    public abstract virtual bool get_IsFromCollection();
}
public interface Microsoft.OData.IODataResponseMessage {
    [SuppressMessageAttribute("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    public int StatusCode { get; public set; }
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public abstract virtual int get_StatusCode();
    public abstract virtual void set_StatusCode(int value);
    public abstract virtual string GetHeader(string headerName);
    public abstract virtual void SetHeader(string headerName, string headerValue);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
public abstract virtual Stream GetStream();
}
public interface Microsoft.OData.IODataResponseMessageAsync {
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
public abstract virtual Task`1<Stream> GetStreamAsync();
}
internal interface Microsoft.OData.IODataStreamListener {
    public abstract virtual void StreamRequested();
    public abstract virtual Task StreamRequestedAsync();
    public abstract virtual void StreamDisposed();
    public abstract virtual Task StreamDisposedAsync();
}
internal interface Microsoft.OData.IODataStreamReferenceInfo {
    public Uri EditLink { get; public set; }
    public Uri ReadLink { get; public set; }
    public string ContentType { get; public set; }
    public string ETag { get; public set; }
    public abstract virtual Uri get_EditLink();
    public abstract virtual void set_EditLink(Uri value);
    public abstract virtual Uri get_ReadLink();
    public abstract virtual void set_ReadLink(Uri value);
    public abstract virtual string get_ContentType();
    public abstract virtual void set_ContentType(string value);
    public abstract virtual string get_ETag();
    public abstract virtual void set_ETag(string value);
}
internal interface Microsoft.OData.IPrimitiveTypeConverter {
    public abstract virtual void WriteJson(object instance, IJsonWriter jsonWriter);
}
internal interface Microsoft.OData.IReaderValidator {
    public abstract virtual void ValidateMediaResource(ODataResourceBase resource, IEdmEntityType resourceType);
    public abstract virtual PropertyAndAnnotationCollector CreatePropertyAndAnnotationCollector();
    public abstract virtual void ValidateNullValue(IEdmTypeReference expectedTypeReference, bool validateNullValue, string propertyName, Nullable`1<bool> isDynamicProperty);
    public abstract virtual IEdmTypeReference ResolvePayloadTypeNameAndComputeTargetType(EdmTypeKind expectedTypeKind, Nullable`1<bool> expectStructuredType, IEdmType defaultPrimitivePayloadType, IEdmTypeReference expectedTypeReference, string payloadTypeName, IEdmModel model, Func`1<EdmTypeKind> typeKindFromPayloadFunc, EdmTypeKind& targetTypeKind, ODataTypeAnnotation& typeAnnotation);
    public abstract virtual IEdmProperty ValidatePropertyDefined(string propertyName, IEdmStructuredType owningStructuredType);
    public abstract virtual void ValidateStreamReferenceProperty(IODataStreamReferenceInfo streamInfo, string propertyName, IEdmStructuredType structuredType, IEdmProperty streamEdmProperty);
}
public interface Microsoft.OData.IServiceCollectionProvider {
    public IServiceProvider ServiceProvider { get; }
    public abstract virtual IServiceProvider get_ServiceProvider();
}
internal interface Microsoft.OData.IWriterValidator {
    public abstract virtual IDuplicatePropertyNameChecker GetDuplicatePropertyNameChecker();
    public abstract virtual void ReturnDuplicatePropertyNameChecker(IDuplicatePropertyNameChecker duplicatePropertyNameChecker);
    public abstract virtual void ValidateResourceInNestedResourceInfo(IEdmStructuredType resourceType, IEdmStructuredType parentNavigationPropertyType);
    public abstract virtual void ValidateNestedResourceInfoHasCardinality(ODataNestedResourceInfo nestedResourceInfo);
    public abstract virtual void ValidateIsExpectedPrimitiveType(object value, IEdmPrimitiveTypeReference valuePrimitiveTypeReference, IEdmTypeReference expectedTypeReference);
    public abstract virtual void ValidateTypeReference(IEdmTypeReference typeReferenceFromMetadata, IEdmTypeReference typeReferenceFromValue);
    public abstract virtual void ValidateTypeKind(EdmTypeKind actualTypeKind, EdmTypeKind expectedTypeKind, Nullable`1<bool> expectStructuredType, IEdmType edmType);
    public abstract virtual void ValidateMetadataResource(ODataResourceBase resource, IEdmEntityType resourceType);
    public abstract virtual void ValidateNullPropertyValue(IEdmTypeReference expectedPropertyTypeReference, string propertyName, bool isTopLevel, IEdmModel model);
    public abstract virtual void ValidateNullCollectionItem(IEdmTypeReference expectedItemType);
    public abstract virtual IEdmProperty ValidatePropertyDefined(string propertyName, IEdmStructuredType owningStructuredType);
    public abstract virtual IEdmNavigationProperty ValidateNestedResourceInfo(ODataNestedResourceInfo nestedResourceInfo, IEdmStructuredType declaringStructuredType, Nullable`1<ODataPayloadKind> expandedPayloadKind);
    public abstract virtual void ValidateDerivedTypeConstraint(IEdmStructuredType resourceType, IEdmStructuredType metadataType, IEnumerable`1<string> derivedTypeConstraints, string itemKind, string itemName);
}
internal class Microsoft.OData.Json.BitStack : ValueType {
    private static int AllocationFreeMaxDepth;
    private static int DefaultInitialArraySize;
    private Int32[] _array;
    private ulong _allocationFreeContainer;
    private int _currentDepth;
    public int CurrentDepth { get; }
    public int get_CurrentDepth();
    public void PushTrue();
    public void PushFalse();
    private void PushToArray(bool value);
    public bool Pop();
    private bool PopFromArray();
    private void DoubleArray(int minSize);
    private static int Div32Rem(int number, Int32& remainder);
}
internal class Microsoft.OData.Json.BufferingJsonReader : object {
    protected BufferedNode bufferedNodesHead;
    protected BufferedNode currentBufferedNode;
    private IJsonReader innerReader;
    private int maxInnerErrorDepth;
    private string inStreamErrorPropertyName;
    private bool isBuffering;
    private bool removeOnNextRead;
    private bool parsingInStreamError;
    private bool disableInStreamErrorDetection;
    public JsonNodeType NodeType { get; }
    public bool IsIeee754Compatible { get; }
    internal bool DisableInStreamErrorDetection { get; internal set; }
    internal bool IsBuffering { get; }
    internal BufferingJsonReader(IJsonReader innerReader, string inStreamErrorPropertyName, int maxInnerErrorDepth);
    public sealed virtual JsonNodeType get_NodeType();
    public sealed virtual object GetValue();
    public sealed virtual bool get_IsIeee754Compatible();
    internal bool get_DisableInStreamErrorDetection();
    internal void set_DisableInStreamErrorDetection(bool value);
    internal bool get_IsBuffering();
    [SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
public virtual Stream CreateReadStream();
    public virtual TextReader CreateTextReader();
    public virtual bool CanStream();
    public sealed virtual bool Read();
    public sealed virtual Task`1<object> GetValueAsync();
    public sealed virtual Task`1<bool> ReadAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<CanStreamAsync>d__26")]
public virtual Task`1<bool> CanStreamAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<CreateReadStreamAsync>d__27")]
[SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
public virtual Task`1<Stream> CreateReadStreamAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<CreateTextReaderAsync>d__28")]
public virtual Task`1<TextReader> CreateTextReaderAsync();
    internal void StartBuffering();
    internal object BookmarkCurrentPosition();
    internal void MoveToBookmark(object bookmark);
    internal void StopBuffering();
    internal bool StartBufferingAndTryToReadInStreamErrorPropertyValue(ODataError& error);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<StartBufferingAsync>d__34")]
internal Task StartBufferingAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<StartBufferingAndTryToReadInStreamErrorPropertyValueAsync>d__35")]
internal Task`1<ValueTuple`2<bool, ODataError>> StartBufferingAndTryToReadInStreamErrorPropertyValueAsync();
    protected bool ReadInternal();
    protected virtual void ProcessObjectValue();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<ReadInternalAsync>d__38")]
protected Task`1<bool> ReadInternalAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<ProcessObjectValueAsync>d__39")]
protected virtual Task ProcessObjectValueAsync();
    private bool ReadNextAndCheckForInStreamError();
    private bool TryReadInStreamErrorPropertyValue(ODataError& error);
    private bool TryReadErrorDetailsPropertyValue(ICollection`1& details);
    private bool TryReadErrorDetail(ODataErrorDetail& detail);
    private bool TryReadInnerErrorPropertyValue(ODataInnerError& innerError, int recursionDepth);
    private bool TryReadErrorStringPropertyValue(String& stringValue);
    private void SkipValueInternal();
    private void RemoveFirstNodeInBuffer();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<ReadNextAndCheckForInStreamErrorAsync>d__48")]
private Task`1<bool> ReadNextAndCheckForInStreamErrorAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<TryReadInStreamErrorPropertyValueAsync>d__49")]
private Task`1<ValueTuple`2<bool, ODataError>> TryReadInStreamErrorPropertyValueAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<TryReadErrorDetailsPropertyValueAsync>d__50")]
private Task`1<ValueTuple`2<bool, List`1<ODataErrorDetail>>> TryReadErrorDetailsPropertyValueAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<TryReadErrorDetailAsync>d__51")]
private Task`1<ValueTuple`2<bool, ODataErrorDetail>> TryReadErrorDetailAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<TryReadInnerErrorPropertyValueAsync>d__52")]
private Task`1<Tuple`2<bool, ODataInnerError>> TryReadInnerErrorPropertyValueAsync(int recursionDepth);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<TryReadErrorStringPropertyValueAsync>d__53")]
private Task`1<ValueTuple`2<bool, string>> TryReadErrorStringPropertyValueAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.BufferingJsonReader/<SkipValueInternalAsync>d__54")]
private Task SkipValueInternalAsync();
    private void AddNewNodeToTheEndOfBufferedNodesList(JsonNodeType nodeType, object value);
    [DebuggerStepThroughAttribute]
[ConditionalAttribute("DEBUG")]
private void AssertAsynchronous();
}
internal class Microsoft.OData.Json.DefaultJsonReaderFactory : object {
    public sealed virtual IJsonReader CreateJsonReader(TextReader textReader, bool isIeee754Compatible);
}
internal class Microsoft.OData.Json.GeoJsonWriterAdapter : object {
    private IJsonWriter writer;
    internal GeoJsonWriterAdapter(IJsonWriter writer);
    private sealed virtual override void Microsoft.Spatial.IGeoJsonWriter.StartObjectScope();
    private sealed virtual override void Microsoft.Spatial.IGeoJsonWriter.EndObjectScope();
    private sealed virtual override void Microsoft.Spatial.IGeoJsonWriter.StartArrayScope();
    private sealed virtual override void Microsoft.Spatial.IGeoJsonWriter.EndArrayScope();
    private sealed virtual override void Microsoft.Spatial.IGeoJsonWriter.AddPropertyName(string name);
    private sealed virtual override void Microsoft.Spatial.IGeoJsonWriter.AddValue(double value);
    private sealed virtual override void Microsoft.Spatial.IGeoJsonWriter.AddValue(string value);
}
public interface Microsoft.OData.Json.IJsonReader {
    public JsonNodeType NodeType { get; }
    public bool IsIeee754Compatible { get; }
    public abstract virtual object GetValue();
    public abstract virtual JsonNodeType get_NodeType();
    public abstract virtual bool get_IsIeee754Compatible();
    public abstract virtual bool Read();
    public abstract virtual Stream CreateReadStream();
    public abstract virtual TextReader CreateTextReader();
    public abstract virtual bool CanStream();
    public abstract virtual Task`1<bool> ReadAsync();
    public abstract virtual Task`1<object> GetValueAsync();
    public abstract virtual Task`1<Stream> CreateReadStreamAsync();
    public abstract virtual Task`1<TextReader> CreateTextReaderAsync();
    public abstract virtual Task`1<bool> CanStreamAsync();
}
public interface Microsoft.OData.Json.IJsonReaderFactory {
    public abstract virtual IJsonReader CreateJsonReader(TextReader textReader, bool isIeee754Compatible);
}
[CLSCompliantAttribute("False")]
public interface Microsoft.OData.Json.IJsonWriter {
    [ObsoleteAttribute("This will be dropped in the 9.x release.")]
public abstract virtual void StartPaddingFunctionScope();
    [ObsoleteAttribute("This will be dropped in the 9.x release.")]
public abstract virtual void EndPaddingFunctionScope();
    public abstract virtual void StartObjectScope();
    public abstract virtual void EndObjectScope();
    public abstract virtual void StartArrayScope();
    public abstract virtual void EndArrayScope();
    public abstract virtual void WriteName(string name);
    [ObsoleteAttribute("This will be dropped in the 9.x release.")]
public abstract virtual void WritePaddingFunctionName(string functionName);
    public abstract virtual void WriteValue(bool value);
    public abstract virtual void WriteValue(int value);
    public abstract virtual void WriteValue(float value);
    public abstract virtual void WriteValue(short value);
    public abstract virtual void WriteValue(long value);
    public abstract virtual void WriteValue(double value);
    public abstract virtual void WriteValue(Guid value);
    public abstract virtual void WriteValue(decimal value);
    public abstract virtual void WriteValue(DateTimeOffset value);
    public abstract virtual void WriteValue(TimeSpan value);
    public abstract virtual void WriteValue(byte value);
    public abstract virtual void WriteValue(sbyte value);
    public abstract virtual void WriteValue(string value);
    public abstract virtual void WriteValue(Byte[] value);
    public abstract virtual void WriteValue(Date value);
    public abstract virtual void WriteValue(TimeOfDay value);
    public abstract virtual void WriteValue(JsonElement value);
    public abstract virtual void WriteRawValue(string rawValue);
    public abstract virtual void Flush();
    public abstract virtual Stream StartStreamValueScope();
    public abstract virtual TextWriter StartTextWriterValueScope(string contentType);
    public abstract virtual void EndStreamValueScope();
    public abstract virtual void EndTextWriterValueScope();
    [ObsoleteAttribute("This will be dropped in the 9.x release.")]
public abstract virtual Task StartPaddingFunctionScopeAsync();
    [ObsoleteAttribute("This will be dropped in the 9.x release.")]
public abstract virtual Task EndPaddingFunctionScopeAsync();
    public abstract virtual Task StartObjectScopeAsync();
    public abstract virtual Task EndObjectScopeAsync();
    public abstract virtual Task StartArrayScopeAsync();
    public abstract virtual Task EndArrayScopeAsync();
    public abstract virtual Task WriteNameAsync(string name);
    [ObsoleteAttribute("This will be dropped in the 9.x release.")]
public abstract virtual Task WritePaddingFunctionNameAsync(string functionName);
    public abstract virtual Task WriteValueAsync(bool value);
    public abstract virtual Task WriteValueAsync(int value);
    public abstract virtual Task WriteValueAsync(float value);
    public abstract virtual Task WriteValueAsync(short value);
    public abstract virtual Task WriteValueAsync(long value);
    public abstract virtual Task WriteValueAsync(double value);
    public abstract virtual Task WriteValueAsync(Guid value);
    public abstract virtual Task WriteValueAsync(decimal value);
    public abstract virtual Task WriteValueAsync(DateTimeOffset value);
    public abstract virtual Task WriteValueAsync(TimeSpan value);
    public abstract virtual Task WriteValueAsync(byte value);
    public abstract virtual Task WriteValueAsync(sbyte value);
    public abstract virtual Task WriteValueAsync(string value);
    public abstract virtual Task WriteValueAsync(Byte[] value);
    public abstract virtual Task WriteValueAsync(Date value);
    public abstract virtual Task WriteValueAsync(TimeOfDay value);
    public abstract virtual Task WriteValueAsync(JsonElement value);
    public abstract virtual Task WriteRawValueAsync(string rawValue);
    public abstract virtual Task FlushAsync();
    public abstract virtual Task`1<Stream> StartStreamValueScopeAsync();
    public abstract virtual Task`1<TextWriter> StartTextWriterValueScopeAsync(string contentType);
    public abstract virtual Task EndStreamValueScopeAsync();
    public abstract virtual Task EndTextWriterValueScopeAsync();
}
[CLSCompliantAttribute("False")]
public interface Microsoft.OData.Json.IJsonWriterFactory {
    public abstract virtual IJsonWriter CreateJsonWriter(Stream stream, bool isIeee754Compatible, Encoding encoding);
}
internal interface Microsoft.OData.Json.IODataJsonOperationsDeserializerContext {
    public IJsonReader JsonReader { get; }
    public abstract virtual IJsonReader get_JsonReader();
    public abstract virtual Uri ProcessUriFromPayload(string uriFromPayload);
    public abstract virtual void AddActionToResource(ODataAction action);
    public abstract virtual void AddFunctionToResource(ODataFunction function);
}
internal interface Microsoft.OData.Json.IODataJsonReaderResourceState {
    public ODataResourceBase Resource { get; }
    public IEdmStructuredType ResourceType { get; }
    public IEdmStructuredType ResourceTypeFromMetadata { get; public set; }
    public IEdmNavigationSource NavigationSource { get; }
    public ODataResourceMetadataBuilder MetadataBuilder { get; public set; }
    public bool AnyPropertyFound { get; public set; }
    public ODataJsonReaderNestedInfo FirstNestedInfo { get; public set; }
    public PropertyAndAnnotationCollector PropertyAndAnnotationCollector { get; }
    public SelectedPropertiesNode SelectedProperties { get; }
    public List`1<string> NavigationPropertiesRead { get; }
    public bool ProcessingMissingProjectedNestedResourceInfos { get; public set; }
    public abstract virtual ODataResourceBase get_Resource();
    public abstract virtual IEdmStructuredType get_ResourceType();
    public abstract virtual IEdmStructuredType get_ResourceTypeFromMetadata();
    public abstract virtual void set_ResourceTypeFromMetadata(IEdmStructuredType value);
    public abstract virtual IEdmNavigationSource get_NavigationSource();
    public abstract virtual ODataResourceMetadataBuilder get_MetadataBuilder();
    public abstract virtual void set_MetadataBuilder(ODataResourceMetadataBuilder value);
    public abstract virtual bool get_AnyPropertyFound();
    public abstract virtual void set_AnyPropertyFound(bool value);
    public abstract virtual ODataJsonReaderNestedInfo get_FirstNestedInfo();
    public abstract virtual void set_FirstNestedInfo(ODataJsonReaderNestedInfo value);
    public abstract virtual PropertyAndAnnotationCollector get_PropertyAndAnnotationCollector();
    public abstract virtual SelectedPropertiesNode get_SelectedProperties();
    public abstract virtual List`1<string> get_NavigationPropertiesRead();
    public abstract virtual bool get_ProcessingMissingProjectedNestedResourceInfos();
    public abstract virtual void set_ProcessingMissingProjectedNestedResourceInfos(bool value);
}
internal interface Microsoft.OData.Json.IODataJsonWriterResourceState {
    public ODataResourceBase Resource { get; }
    public IEdmStructuredType ResourceType { get; }
    public IEdmStructuredType ResourceTypeFromMetadata { get; }
    public ODataResourceSerializationInfo SerializationInfo { get; }
    public bool IsUndeclared { get; }
    public bool EditLinkWritten { get; public set; }
    public bool ReadLinkWritten { get; public set; }
    public bool MediaEditLinkWritten { get; public set; }
    public bool MediaReadLinkWritten { get; public set; }
    public bool MediaContentTypeWritten { get; public set; }
    public bool MediaETagWritten { get; public set; }
    public abstract virtual ODataResourceBase get_Resource();
    public abstract virtual IEdmStructuredType get_ResourceType();
    public abstract virtual IEdmStructuredType get_ResourceTypeFromMetadata();
    public abstract virtual ODataResourceSerializationInfo get_SerializationInfo();
    public abstract virtual bool get_IsUndeclared();
    public abstract virtual bool get_EditLinkWritten();
    public abstract virtual void set_EditLinkWritten(bool value);
    public abstract virtual bool get_ReadLinkWritten();
    public abstract virtual void set_ReadLinkWritten(bool value);
    public abstract virtual bool get_MediaEditLinkWritten();
    public abstract virtual void set_MediaEditLinkWritten(bool value);
    public abstract virtual bool get_MediaReadLinkWritten();
    public abstract virtual void set_MediaReadLinkWritten(bool value);
    public abstract virtual bool get_MediaContentTypeWritten();
    public abstract virtual void set_MediaContentTypeWritten(bool value);
    public abstract virtual bool get_MediaETagWritten();
    public abstract virtual void set_MediaETagWritten(bool value);
    public abstract virtual ODataResourceTypeContext GetOrCreateTypeContext(bool writingResponse);
}
internal static class Microsoft.OData.Json.JsonConstants : object {
    internal static string ODataActionsMetadataName;
    internal static string ODataFunctionsMetadataName;
    internal static string ODataOperationTitleName;
    internal static string ODataOperationMetadataName;
    internal static string ODataOperationTargetName;
    internal static string ODataErrorName;
    internal static string ODataErrorCodeName;
    internal static string ODataErrorMessageName;
    internal static string ODataErrorTargetName;
    internal static string ODataErrorDetailsName;
    internal static string ODataErrorInnerErrorName;
    internal static string ODataErrorInnerErrorMessageName;
    internal static string ODataErrorInnerErrorTypeNameName;
    internal static string ODataErrorInnerErrorStackTraceName;
    internal static string ODataErrorInnerErrorInnerErrorName;
    internal static string ODataDateTimeFormat;
    internal static string ODataDateTimeOffsetFormat;
    internal static string ODataDateTimeOffsetPlusSign;
    internal static string ODataServiceDocumentEntitySetsName;
    internal static string JsonTrueLiteral;
    internal static string JsonFalseLiteral;
    internal static string JsonNullLiteral;
    internal static string StartObjectScope;
    internal static string EndObjectScope;
    internal static string StartArrayScope;
    internal static string EndArrayScope;
    internal static string StartPaddingFunctionScope;
    internal static string EndPaddingFunctionScope;
    internal static string ObjectMemberSeparator;
    internal static string ArrayElementSeparator;
    internal static string NameValueSeparator;
    internal static char QuoteCharacter;
}
internal class Microsoft.OData.Json.JsonFullMetadataLevel : JsonMetadataLevel {
    private IEdmModel model;
    private Uri metadataDocumentUri;
    private Uri NonNullMetadataDocumentUri { get; }
    internal JsonFullMetadataLevel(Uri metadataDocumentUri, IEdmModel model);
    private Uri get_NonNullMetadataDocumentUri();
    internal virtual JsonTypeNameOracle GetTypeNameOracle();
    internal virtual ODataResourceMetadataBuilder CreateResourceMetadataBuilder(ODataResourceBase resource, IODataResourceTypeContext typeContext, ODataResourceSerializationInfo serializationInfo, IEdmStructuredType actualResourceType, SelectedPropertiesNode selectedProperties, bool isResponse, bool keyAsSegment, Nullable`1& modreq(System.Runtime.InteropServices.InAttribute) odataUri, ODataMessageWriterSettings settings);
    internal virtual void InjectMetadataBuilder(ODataResourceBase resource, ODataResourceMetadataBuilder builder);
}
internal class Microsoft.OData.Json.JsonFullMetadataTypeNameOracle : JsonTypeNameOracle {
    internal virtual string GetResourceSetTypeNameForWriting(string expectedResourceTypeName, ODataResourceSet resourceSet, bool isUndeclared);
    internal virtual string GetResourceTypeNameForWriting(string expectedTypeName, ODataResourceBase resource, bool isUndeclared);
    internal virtual string GetValueTypeNameForWriting(ODataValue value, IEdmTypeReference typeReferenceFromMetadata, IEdmTypeReference typeReferenceFromValue, bool isOpenProperty);
    internal virtual string GetValueTypeNameForWriting(ODataValue value, PropertySerializationInfo propertyInfo, bool isOpenProperty);
}
internal abstract class Microsoft.OData.Json.JsonMetadataLevel : object {
    internal static JsonMetadataLevel Create(ODataMediaType mediaType, Uri metadataDocumentUri, IEdmModel model, bool writingResponse);
    internal static JsonMetadataLevel Create(ODataMediaType mediaType, Uri metadataDocumentUri, bool alwaysAddTypeAnnotationsForDerivedTypes, IEdmModel model, bool writingResponse);
    internal abstract virtual JsonTypeNameOracle GetTypeNameOracle();
    internal abstract virtual ODataResourceMetadataBuilder CreateResourceMetadataBuilder(ODataResourceBase resource, IODataResourceTypeContext typeContext, ODataResourceSerializationInfo serializationInfo, IEdmStructuredType actualResourceType, SelectedPropertiesNode selectedProperties, bool isResponse, bool keyAsSegment, Nullable`1& modreq(System.Runtime.InteropServices.InAttribute) odataUri, ODataMessageWriterSettings settings);
    internal virtual void InjectMetadataBuilder(ODataResourceBase resource, ODataResourceMetadataBuilder builder);
}
internal class Microsoft.OData.Json.JsonMinimalMetadataLevel : JsonMetadataLevel {
    internal virtual JsonTypeNameOracle GetTypeNameOracle();
    internal virtual ODataResourceMetadataBuilder CreateResourceMetadataBuilder(ODataResourceBase resource, IODataResourceTypeContext typeContext, ODataResourceSerializationInfo serializationInfo, IEdmStructuredType actualResourceType, SelectedPropertiesNode selectedProperties, bool isResponse, bool keyAsSegment, Nullable`1& modreq(System.Runtime.InteropServices.InAttribute) odataUri, ODataMessageWriterSettings settings);
    internal virtual void InjectMetadataBuilder(ODataResourceBase resource, ODataResourceMetadataBuilder builder);
}
internal class Microsoft.OData.Json.JsonMinimalMetadataTypeNameOracle : JsonTypeNameOracle {
    internal virtual string GetResourceSetTypeNameForWriting(string expectedResourceTypeName, ODataResourceSet resourceSet, bool isUndeclared);
    internal virtual string GetResourceTypeNameForWriting(string expectedTypeName, ODataResourceBase resource, bool isUndeclared);
    internal virtual string GetValueTypeNameForWriting(ODataValue value, IEdmTypeReference typeReferenceFromMetadata, IEdmTypeReference typeReferenceFromValue, bool isOpenProperty);
    internal virtual string GetValueTypeNameForWriting(ODataValue value, PropertySerializationInfo propertyInfo, bool isOpenProperty);
}
public enum Microsoft.OData.Json.JsonNodeType : Enum {
    public int value__;
    public static JsonNodeType None;
    public static JsonNodeType StartObject;
    public static JsonNodeType EndObject;
    public static JsonNodeType StartArray;
    public static JsonNodeType EndArray;
    public static JsonNodeType Property;
    public static JsonNodeType PrimitiveValue;
    public static JsonNodeType EndOfInput;
}
internal class Microsoft.OData.Json.JsonNoMetadataLevel : JsonMetadataLevel {
    private bool alwaysAddTypeAnnotationsForDerivedTypes;
    public JsonNoMetadataLevel(bool alwaysAddTypeAnnotationsForDerivedTypes);
    internal virtual JsonTypeNameOracle GetTypeNameOracle();
    internal virtual ODataResourceMetadataBuilder CreateResourceMetadataBuilder(ODataResourceBase resource, IODataResourceTypeContext typeContext, ODataResourceSerializationInfo serializationInfo, IEdmStructuredType actualResourceType, SelectedPropertiesNode selectedProperties, bool isResponse, bool keyAsSegment, Nullable`1& modreq(System.Runtime.InteropServices.InAttribute) odataUri, ODataMessageWriterSettings settings);
}
internal class Microsoft.OData.Json.JsonNoMetadataTypeNameOracle : JsonTypeNameOracle {
    internal virtual string GetResourceSetTypeNameForWriting(string expectedResourceTypeName, ODataResourceSet resourceSet, bool isUndeclared);
    internal virtual string GetResourceTypeNameForWriting(string expectedTypeName, ODataResourceBase resource, bool isUndeclared);
    internal virtual string GetValueTypeNameForWriting(ODataValue value, IEdmTypeReference typeReferenceFromMetadata, IEdmTypeReference typeReferenceFromValue, bool isOpenProperty);
    internal virtual string GetValueTypeNameForWriting(ODataValue value, PropertySerializationInfo propertyInfo, bool isOpenProperty);
}
internal class Microsoft.OData.Json.JsonODataAnnotationWriter : object {
    private static int ODataAnnotationPrefixLength;
    private IJsonWriter jsonWriter;
    private bool enableWritingODataAnnotationWithoutPrefix;
    private ODataVersion odataVersion;
    public JsonODataAnnotationWriter(IJsonWriter jsonWriter, bool enableWritingODataAnnotationWithoutPrefix, Nullable`1<ODataVersion> odataVersion);
    private static JsonODataAnnotationWriter();
    public void WriteODataTypeInstanceAnnotation(string typeName, bool writeRawValue);
    public void WriteODataTypePropertyAnnotation(string propertyName, string typeName);
    public void WritePropertyAnnotationName(string propertyName, string annotationName);
    public void WriteInstanceAnnotationName(string annotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonODataAnnotationWriter/<WriteODataTypeInstanceAnnotationAsync>d__9")]
public Task WriteODataTypeInstanceAnnotationAsync(string typeName, bool writeRawValue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonODataAnnotationWriter/<WriteODataTypePropertyAnnotationAsync>d__10")]
public Task WriteODataTypePropertyAnnotationAsync(string propertyName, string typeName);
    public Task WritePropertyAnnotationNameAsync(string propertyName, string annotationName);
    public Task WriteInstanceAnnotationNameAsync(string annotationName);
    private string SimplifyODataAnnotationName(string annotationName);
}
[DebuggerDisplayAttribute("{NodeType}: {GetValue()}")]
internal class Microsoft.OData.Json.JsonReader : object {
    private static int InitialCharacterBufferSize;
    private TextReader reader;
    private bool isIeee754Compatible;
    private Stack`1<Scope> scopes;
    private bool allowAnnotations;
    private bool endOfInputReached;
    private bool readingStream;
    private bool canStream;
    private char streamOpeningQuoteCharacter;
    private Char[] characterBuffer;
    private int storedCharacterCount;
    private int tokenStartIndex;
    private int balancedQuoteCount;
    private JsonNodeType nodeType;
    private object nodeValue;
    private StringBuilder stringValueBuilder;
    [CompilerGeneratedAttribute]
private ICharArrayPool <ArrayPool>k__BackingField;
    public ICharArrayPool ArrayPool { get; public set; }
    public JsonNodeType NodeType { get; }
    public bool IsIeee754Compatible { get; }
    public JsonReader(TextReader reader, bool isIeee754Compatible);
    [CompilerGeneratedAttribute]
public ICharArrayPool get_ArrayPool();
    [CompilerGeneratedAttribute]
public void set_ArrayPool(ICharArrayPool value);
    public virtual object GetValue();
    public virtual JsonNodeType get_NodeType();
    public virtual bool get_IsIeee754Compatible();
    public sealed virtual bool CanStream();
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
public virtual bool Read();
    public sealed virtual Stream CreateReadStream();
    public sealed virtual TextReader CreateTextReader();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<GetValueAsync>d__31")]
public virtual Task`1<object> GetValueAsync();
    public sealed virtual Task`1<bool> CanStreamAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<ReadAsync>d__33")]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
public virtual Task`1<bool> ReadAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<CreateReadStreamAsync>d__34")]
public sealed virtual Task`1<Stream> CreateReadStreamAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<CreateTextReaderAsync>d__35")]
public sealed virtual Task`1<TextReader> CreateTextReaderAsync();
    public sealed virtual void Dispose();
    public sealed virtual ValueTask DisposeAsync();
    [DebuggerStepThroughAttribute]
private static bool IsWhitespaceCharacter(char character);
    private JsonNodeType ParseValue();
    private JsonNodeType ParseProperty();
    private string ParseStringPrimitiveValue();
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
private string ParseStringPrimitiveValue(Boolean& hasLeadingBackslash);
    private object ParseNullPrimitiveValue();
    private object ParseBooleanPrimitiveValue();
    private object ParseNumberPrimitiveValue();
    private string ParseName();
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
private int ReadChars(Char[] chars, int offset, int maxLength);
    private static char GetClosingQuoteCharacter(char openingCharacter);
    private bool EndOfInput();
    private void PushScope(ScopeType newScopeType);
    private void PopScope();
    private void TryPopPropertyScope();
    private bool SkipWhitespaces();
    private bool EnsureAvailableCharacters(int characterCountAfterTokenStart);
    private string ConsumeTokenToString(int characterCount);
    private void ConsumeTokenAppendToBuilder(StringBuilder builder, int characterCount);
    private bool ReadInput();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<ParseValueAsync>d__58")]
private Task`1<JsonNodeType> ParseValueAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<ParsePropertyAsync>d__59")]
private Task`1<JsonNodeType> ParsePropertyAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<ParseStringPrimitiveValueAsync>d__60")]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
private Task`1<Tuple`2<string, bool>> ParseStringPrimitiveValueAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<ParseNullPrimitiveValueAsync>d__61")]
private Task`1<object> ParseNullPrimitiveValueAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<ParseBooleanPrimitiveValueAsync>d__62")]
private Task`1<object> ParseBooleanPrimitiveValueAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<ParseNumberPrimitiveValueAsync>d__63")]
private Task`1<object> ParseNumberPrimitiveValueAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<ParseNameAsync>d__64")]
private Task`1<string> ParseNameAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<ReadCharsAsync>d__65")]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
private Task`1<int> ReadCharsAsync(Char[] chars, int offset, int maxLength);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<SkipWhitespacesAsync>d__66")]
private ValueTask`1<bool> SkipWhitespacesAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<EnsureAvailableCharactersAsync>d__67")]
private ValueTask`1<bool> EnsureAvailableCharactersAsync(int characterCountAfterTokenStart);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReader/<ReadInputAsync>d__68")]
private ValueTask`1<bool> ReadInputAsync();
    private void CopyInputToBuffer();
    private int ParseUnicodeHexValue();
    private bool IsCharacterAllowedInPropertyName(char character);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Json.JsonReaderExtensions : object {
    [ExtensionAttribute]
internal static void ReadStartObject(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static void ReadEndObject(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static void ReadStartArray(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static void ReadEndArray(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static string GetPropertyName(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static string ReadPropertyName(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static object ReadPrimitiveValue(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static string ReadStringValue(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static Uri ReadUriValue(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static string ReadStringValue(IJsonReader jsonReader, string propertyName);
    [ExtensionAttribute]
internal static Nullable`1<double> ReadDoubleValue(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static void SkipValue(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static void SkipValue(IJsonReader jsonReader, StringBuilder jsonRawValueStringBuilder);
    [ExtensionAttribute]
internal static IEnumerable`1<ODataUntypedValue> ReadUntypedCollectionValues(IJsonReader jsonReader);
    [IteratorStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<ReadUntypedCollectionValuesIterator>d__14")]
[ExtensionAttribute]
private static IEnumerable`1<ODataUntypedValue> ReadUntypedCollectionValuesIterator(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static ODataValue ReadAsUntypedOrNullValue(IJsonReader jsonReader);
    [ExtensionAttribute]
private static ODataUntypedValue ReadAsUntypedOrNullValueImplementation(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static ODataValue ReadODataValue(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static JsonNodeType ReadNext(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static bool IsOnValueNode(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static Task ReadStartObjectAsync(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static Task ReadEndObjectAsync(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static Task ReadStartArrayAsync(IJsonReader jsonReader);
    [ExtensionAttribute]
internal static Task ReadEndArrayAsync(IJsonReader jsonReader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<GetPropertyNameAsync>d__24")]
[ExtensionAttribute]
internal static Task`1<string> GetPropertyNameAsync(IJsonReader jsonReader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<ReadPropertyNameAsync>d__25")]
[ExtensionAttribute]
internal static Task`1<string> ReadPropertyNameAsync(IJsonReader jsonReader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<ReadPrimitiveValueAsync>d__26")]
[ExtensionAttribute]
internal static Task`1<object> ReadPrimitiveValueAsync(IJsonReader jsonReader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<ReadStringValueAsync>d__27")]
[ExtensionAttribute]
internal static Task`1<string> ReadStringValueAsync(IJsonReader jsonReader, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<ReadUriValueAsync>d__28")]
[ExtensionAttribute]
internal static Task`1<Uri> ReadUriValueAsync(IJsonReader jsonReader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<ReadDoubleValueAsync>d__29")]
[ExtensionAttribute]
internal static Task`1<Nullable`1<double>> ReadDoubleValueAsync(IJsonReader jsonReader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<SkipValueAsync>d__30")]
[ExtensionAttribute]
internal static Task SkipValueAsync(IJsonReader jsonReader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<SkipValueAsync>d__31")]
[ExtensionAttribute]
internal static Task SkipValueAsync(IJsonReader jsonReader, StringBuilder jsonRawValueStringBuilder);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<ReadAsUntypedOrNullValueAsync>d__32")]
[ExtensionAttribute]
internal static Task`1<ODataValue> ReadAsUntypedOrNullValueAsync(IJsonReader jsonReader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<ReadODataValueAsync>d__33")]
[ExtensionAttribute]
internal static Task`1<ODataValue> ReadODataValueAsync(IJsonReader jsonReader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<ReadNextAsync>d__34")]
[ExtensionAttribute]
internal static Task`1<JsonNodeType> ReadNextAsync(IJsonReader jsonReader);
    [ExtensionAttribute]
[ConditionalAttribute("DEBUG")]
internal static void AssertNotBuffering(BufferingJsonReader bufferedJsonReader);
    [ExtensionAttribute]
[ConditionalAttribute("DEBUG")]
internal static void AssertBuffering(BufferingJsonReader bufferedJsonReader);
    internal static ODataException CreateException(string exceptionMessage);
    [ExtensionAttribute]
private static void ReadNext(IJsonReader jsonReader, JsonNodeType expectedNodeType);
    [ExtensionAttribute]
private static void ValidateNodeType(IJsonReader jsonReader, JsonNodeType expectedNodeType);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonReaderExtensions/<ReadNextAsync>d__40")]
[ExtensionAttribute]
private static Task ReadNextAsync(IJsonReader jsonReader, JsonNodeType expectedNodeType);
    private static bool IsValueNodeType(JsonNodeType nodeType);
}
internal static class Microsoft.OData.Json.JsonSharedUtils : object {
    internal static bool IsDoubleValueSerializedAsString(double value);
    internal static bool IsFloatValueSerializedAsString(float value);
    internal static bool ValueTypeMatchesJsonType(ODataPrimitiveValue primitiveValue, IEdmPrimitiveTypeReference valueTypeReference);
    internal static bool ValueTypeMatchesJsonType(ODataPrimitiveValue primitiveValue, EdmPrimitiveTypeKind primitiveTypeKind);
}
internal abstract class Microsoft.OData.Json.JsonTypeNameOracle : TypeNameOracle {
    internal abstract virtual string GetResourceSetTypeNameForWriting(string expectedResourceTypeName, ODataResourceSet resourceSet, bool isUndeclared);
    internal abstract virtual string GetResourceTypeNameForWriting(string expectedTypeName, ODataResourceBase resource, bool isUndeclared);
    internal abstract virtual string GetValueTypeNameForWriting(ODataValue value, IEdmTypeReference typeReferenceFromMetadata, IEdmTypeReference typeReferenceFromValue, bool isOpenProperty);
    internal abstract virtual string GetValueTypeNameForWriting(ODataValue value, PropertySerializationInfo propertyInfo, bool isOpenProperty);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Json.JsonValueUtils : object {
    internal static string ODataJsonPositiveInfinitySymbol;
    internal static string ODataJsonNegativeInfinitySymbol;
    internal static NumberFormatInfo ODataNumberFormatInfo;
    private static long JsonDateTimeMinTimeTicks;
    internal static Char[] DoubleIndicatingCharacters;
    private static String[] SpecialCharToEscapedStringMap;
    private static JsonValueUtils();
    internal static void WriteValue(TextWriter writer, char value, ODataStringEscapeOption stringEscapeOption);
    internal static void WriteValue(TextWriter writer, bool value);
    internal static void WriteValue(TextWriter writer, int value);
    internal static void WriteValue(TextWriter writer, float value);
    internal static void WriteValue(TextWriter writer, short value);
    internal static void WriteValue(TextWriter writer, long value);
    internal static void WriteValue(TextWriter writer, double value);
    internal static void WriteValue(TextWriter writer, Guid value);
    internal static void WriteValue(TextWriter writer, decimal value);
    [SuppressMessageAttribute("Microsoft.Globalization", "CA1303:Do not pass literals as localized parameters")]
internal static void WriteValue(TextWriter writer, DateTimeOffset value, ODataJsonDateTimeFormat dateTimeFormat);
    internal static string FormatDateTimeOffset(DateTimeOffset value, ODataJsonDateTimeFormat dateTimeFormat);
    internal static void WriteValue(TextWriter writer, TimeSpan value);
    internal static void WriteValue(TextWriter writer, TimeOfDay value);
    internal static void WriteValue(TextWriter writer, Date value);
    internal static void WriteValue(TextWriter writer, byte value);
    internal static void WriteValue(TextWriter writer, sbyte value);
    internal static void WriteValue(TextWriter writer, string value, ODataStringEscapeOption stringEscapeOption, Ref`1<Char[]> buffer, ICharArrayPool arrayPool);
    internal static void WriteValue(TextWriter writer, Byte[] value, Ref`1<Char[]> buffer, ICharArrayPool arrayPool);
    internal static void WriteBinaryString(TextWriter writer, Byte[] value, Ref`1<Char[]> buffer, ICharArrayPool arrayPool);
    internal static void WriteEscapedJsonString(TextWriter writer, string inputString, ODataStringEscapeOption stringEscapeOption, Ref`1<Char[]> buffer, ICharArrayPool bufferPool);
    internal static void WriteEscapedJsonStringValue(TextWriter writer, string inputString, ODataStringEscapeOption stringEscapeOption, Ref`1<Char[]> buffer, ICharArrayPool bufferPool);
    internal static void WriteEscapedCharArray(TextWriter writer, Char[] inputArray, int inputArrayOffset, int inputArrayCount, ODataStringEscapeOption stringEscapeOption, Ref`1<Char[]> buffer, ICharArrayPool bufferPool);
    internal static long JsonTicksToDateTimeTicks(long ticks);
    internal static string GetEscapedJsonString(string inputString);
    private static int EscapeAndWriteCharToBuffer(TextWriter writer, char character, Char[] buffer, int bufferIndex, ODataStringEscapeOption stringEscapeOption);
    private static bool CheckIfStringHasSpecialChars(string inputString, ODataStringEscapeOption stringEscapeOption, Int32& firstIndex);
    private static NumberFormatInfo InitializeODataNumberFormatInfo();
    private static void WriteQuoted(TextWriter writer, string text);
    private static long DateTimeTicksToJsonTicks(long ticks);
    private static String[] CreateSpecialCharToEscapedStringMap();
    private static string FormatDateTimeAsJsonTicksString(DateTimeOffset value);
    private static string FormatAsBooleanLiteral(bool value);
    private static int WriteByteArrayToBuffer(Byte[] value, int offsetIn, Char[] buffer, int bufferByteSize);
    private static void WriteSubstringToBuffer(string inputString, Int32& currentIndex, Char[] buffer, Int32& bufferIndex, int substrLength);
    private static void WriteSubstringToBuffer(string inputString, Ref`1<int> currentIndex, Char[] buffer, Ref`1<int> bufferIndex, int substrLength);
    private static void WriteEscapedStringToBuffer(TextWriter writer, string inputString, Int32& currentIndex, Char[] buffer, Int32& bufferIndex, ODataStringEscapeOption stringEscapeOption);
    private static void WriteEscapedCharArrayToBuffer(TextWriter writer, Char[] inputArray, Int32& inputArrayOffset, int inputArrayCount, Char[] buffer, Int32& bufferIndex, ODataStringEscapeOption stringEscapeOption);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, char value, ODataStringEscapeOption stringEscapeOption);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, bool value);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, int value);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, float value);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, short value);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, long value);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, double value);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, Guid value);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, decimal value);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Globalization", "CA1303:Do not pass literals as localized parameters")]
internal static Task WriteValueAsync(TextWriter writer, DateTimeOffset value, ODataJsonDateTimeFormat dateTimeFormat);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, TimeSpan value);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, TimeOfDay value);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, Date value);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, byte value);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, sbyte value);
    [ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, string value, ODataStringEscapeOption stringEscapeOption, Ref`1<Char[]> buffer, ICharArrayPool arrayPool);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonValueUtils/<WriteValueAsync>d__59")]
[ExtensionAttribute]
internal static Task WriteValueAsync(TextWriter writer, Byte[] value, Ref`1<Char[]> buffer, ICharArrayPool arrayPool);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonValueUtils/<WriteBinaryStringAsync>d__60")]
[ExtensionAttribute]
internal static Task WriteBinaryStringAsync(TextWriter writer, Byte[] value, Ref`1<Char[]> buffer, ICharArrayPool arrayPool);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonValueUtils/<WriteEscapedJsonStringAsync>d__61")]
[ExtensionAttribute]
internal static Task WriteEscapedJsonStringAsync(TextWriter writer, string inputString, ODataStringEscapeOption stringEscapeOption, Ref`1<Char[]> buffer, ICharArrayPool bufferPool);
    [ExtensionAttribute]
internal static Task WriteEscapedJsonStringValueAsync(TextWriter writer, string inputString, ODataStringEscapeOption stringEscapeOption, Ref`1<Char[]> buffer, ICharArrayPool bufferPool);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonValueUtils/<WriteEscapedCharArrayAsync>d__63")]
[ExtensionAttribute]
internal static Task WriteEscapedCharArrayAsync(TextWriter writer, Char[] inputArray, int inputArrayOffset, int inputArrayCount, ODataStringEscapeOption stringEscapeOption, Ref`1<Char[]> buffer, ICharArrayPool bufferPool);
    [ExtensionAttribute]
private static Task WriteQuotedAsync(TextWriter writer, string text);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonValueUtils/<WriteEscapedStringToBufferAsync>d__65")]
private static Task WriteEscapedStringToBufferAsync(TextWriter writer, string inputString, Ref`1<int> currentIndex, Char[] buffer, Ref`1<int> bufferIndex, ODataStringEscapeOption stringEscapeOption);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonValueUtils/<EscapeAndWriteCharToBufferAsync>d__66")]
private static Task`1<int> EscapeAndWriteCharToBufferAsync(TextWriter writer, char character, Char[] buffer, int bufferIndex, ODataStringEscapeOption stringEscapeOption);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonValueUtils/<WriteEscapedCharArrayToBufferAsync>d__67")]
private static Task WriteEscapedCharArrayToBufferAsync(TextWriter writer, Char[] inputArray, Ref`1<int> inputArrayOffset, int inputArrayCount, Char[] buffer, Ref`1<int> bufferIndex, ODataStringEscapeOption stringEscapeOption);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonValueUtils/<<WriteEscapedJsonStringValueAsync>g__WriteEscapedJsonStringValueInnerAsync|62_0>d")]
[CompilerGeneratedAttribute]
internal static Task <WriteEscapedJsonStringValueAsync>g__WriteEscapedJsonStringValueInnerAsync|62_0(TextWriter innerWriter, string innerInputString, ODataStringEscapeOption innerStringEscapeOption, Ref`1<Char[]> innerBuffer, ICharArrayPool innerBufferPool, int innerFirstIndex);
}
[SuppressMessageAttribute("Microsoft.Design", "CA1001:TypesThatOwnDisposableFieldsShouldBeDisposable")]
internal class Microsoft.OData.Json.JsonWriter : object {
    private TextWriterWrapper writer;
    private Stack`1<Scope> scopes;
    private bool isIeee754Compatible;
    private ODataStringEscapeOption stringEscapeOption;
    private Ref`1<Char[]> wrappedBuffer;
    private Stream binaryValueStream;
    private string currentContentType;
    [CompilerGeneratedAttribute]
private ICharArrayPool <ArrayPool>k__BackingField;
    public ICharArrayPool ArrayPool { get; public set; }
    private bool IsWritingJson { get; }
    internal JsonWriter(TextWriter writer, bool isIeee754Compatible);
    internal JsonWriter(TextWriter writer, bool isIeee754Compatible, ODataStringEscapeOption stringEscapeOption);
    public sealed virtual Task StartPaddingFunctionScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<EndPaddingFunctionScopeAsync>d__1")]
public sealed virtual Task EndPaddingFunctionScopeAsync();
    public sealed virtual Task StartObjectScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<EndObjectScopeAsync>d__3")]
public sealed virtual Task EndObjectScopeAsync();
    public sealed virtual Task StartArrayScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<EndArrayScopeAsync>d__5")]
public sealed virtual Task EndArrayScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteNameAsync>d__6")]
public sealed virtual Task WriteNameAsync(string name);
    public sealed virtual Task WritePaddingFunctionNameAsync(string functionName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__8")]
public sealed virtual Task WriteValueAsync(bool value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__9")]
public sealed virtual Task WriteValueAsync(int value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__10")]
public sealed virtual Task WriteValueAsync(float value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__11")]
public sealed virtual Task WriteValueAsync(short value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__12")]
public sealed virtual Task WriteValueAsync(long value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__13")]
public sealed virtual Task WriteValueAsync(double value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__14")]
public sealed virtual Task WriteValueAsync(Guid value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__15")]
public sealed virtual Task WriteValueAsync(decimal value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__16")]
public sealed virtual Task WriteValueAsync(DateTimeOffset value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__17")]
public sealed virtual Task WriteValueAsync(TimeSpan value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__18")]
public sealed virtual Task WriteValueAsync(TimeOfDay value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__19")]
public sealed virtual Task WriteValueAsync(Date value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__20")]
public sealed virtual Task WriteValueAsync(byte value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__21")]
public sealed virtual Task WriteValueAsync(sbyte value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__22")]
public sealed virtual Task WriteValueAsync(string value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteValueAsync>d__23")]
public sealed virtual Task WriteValueAsync(Byte[] value);
    public sealed virtual Task WriteValueAsync(JsonElement value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteJsonElementArrayAsync>d__25")]
private Task WriteJsonElementArrayAsync(JsonElement value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteJsonElementObjectAsync>d__26")]
private Task WriteJsonElementObjectAsync(JsonElement value);
    private Task WriteJsonElementNumberAsync(JsonElement value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<WriteRawValueAsync>d__28")]
public sealed virtual Task WriteRawValueAsync(string rawValue);
    public sealed virtual Task FlushAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<DisposeAsync>d__30")]
public sealed virtual ValueTask DisposeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<StartStreamValueScopeAsync>d__31")]
public sealed virtual Task`1<Stream> StartStreamValueScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<EndStreamValueScopeAsync>d__32")]
public sealed virtual Task EndStreamValueScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<StartTextWriterValueScopeAsync>d__33")]
public sealed virtual Task`1<TextWriter> StartTextWriterValueScopeAsync(string contentType);
    public sealed virtual Task EndTextWriterValueScopeAsync();
    private Task WriteValueSeparatorAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriter/<StartScopeAsync>d__36")]
private Task StartScopeAsync(ScopeType type);
    [CompilerGeneratedAttribute]
public ICharArrayPool get_ArrayPool();
    [CompilerGeneratedAttribute]
public void set_ArrayPool(ICharArrayPool value);
    private bool get_IsWritingJson();
    public sealed virtual void StartPaddingFunctionScope();
    public sealed virtual void EndPaddingFunctionScope();
    public sealed virtual void StartObjectScope();
    public sealed virtual void EndObjectScope();
    public sealed virtual void StartArrayScope();
    public sealed virtual void EndArrayScope();
    public sealed virtual void WriteName(string name);
    public sealed virtual void WritePaddingFunctionName(string functionName);
    public sealed virtual void WriteValue(bool value);
    public sealed virtual void WriteValue(int value);
    public sealed virtual void WriteValue(float value);
    public sealed virtual void WriteValue(short value);
    public sealed virtual void WriteValue(long value);
    public sealed virtual void WriteValue(double value);
    public sealed virtual void WriteValue(Guid value);
    public sealed virtual void WriteValue(decimal value);
    public sealed virtual void WriteValue(DateTimeOffset value);
    public sealed virtual void WriteValue(TimeSpan value);
    public sealed virtual void WriteValue(TimeOfDay value);
    public sealed virtual void WriteValue(Date value);
    public sealed virtual void WriteValue(byte value);
    public sealed virtual void WriteValue(sbyte value);
    public sealed virtual void WriteValue(string value);
    public sealed virtual void WriteValue(Byte[] value);
    public sealed virtual void WriteValue(JsonElement value);
    private void WriteJsonElementArray(JsonElement value);
    private void WriteJsonElementObject(JsonElement value);
    private void WriteJsonElementNumber(JsonElement value);
    public sealed virtual void WriteRawValue(string rawValue);
    public sealed virtual void Flush();
    public sealed virtual Stream StartStreamValueScope();
    public sealed virtual void EndStreamValueScope();
    public sealed virtual TextWriter StartTextWriterValueScope(string contentType);
    public sealed virtual void EndTextWriterValueScope();
    public sealed virtual void Dispose();
    private void WriteValueSeparator();
    private void StartScope(ScopeType type);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Json.JsonWriterExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriterExtensions/<WriteJsonObjectValueAsync>d__0")]
[ExtensionAttribute]
internal static Task WriteJsonObjectValueAsync(IJsonWriter jsonWriter, IDictionary`2<string, object> jsonObjectValue, Func`2<IJsonWriter, Task> injectPropertyDelegate);
    [ExtensionAttribute]
internal static Task WritePrimitiveValueAsync(IJsonWriter jsonWriter, object value);
    [ExtensionAttribute]
internal static Task WriteODataValueAsync(IJsonWriter jsonWriter, ODataValue odataValue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriterExtensions/<WriteJsonArrayValueAsync>d__3")]
[ExtensionAttribute]
private static Task WriteJsonArrayValueAsync(IJsonWriter jsonWriter, IEnumerable arrayValue);
    [ExtensionAttribute]
private static Task WriteJsonValueAsync(IJsonWriter jsonWriter, object propertyValue);
    [ExtensionAttribute]
internal static void WriteJsonObjectValue(IJsonWriter jsonWriter, IDictionary`2<string, object> jsonObjectValue, Action`1<IJsonWriter> injectPropertyAction);
    [ExtensionAttribute]
internal static void WritePrimitiveValue(IJsonWriter jsonWriter, object value);
    [ExtensionAttribute]
internal static void WriteODataValue(IJsonWriter jsonWriter, ODataValue odataValue);
    [ExtensionAttribute]
private static void WriteJsonArrayValue(IJsonWriter jsonWriter, IEnumerable arrayValue);
    [ExtensionAttribute]
private static void WriteJsonValue(IJsonWriter jsonWriter, object propertyValue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriterExtensions/<<WriteODataValueAsync>g__WriteODataResourceValueAsync|2_0>d")]
[CompilerGeneratedAttribute]
internal static Task <WriteODataValueAsync>g__WriteODataResourceValueAsync|2_0(IJsonWriter innerJsonWriter, ODataResourceValue innerResourceValue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.JsonWriterExtensions/<<WriteODataValueAsync>g__WriteODataCollectionValueAsync|2_1>d")]
[CompilerGeneratedAttribute]
internal static Task <WriteODataValueAsync>g__WriteODataCollectionValueAsync|2_1(IJsonWriter innerJsonWriter, ODataCollectionValue innerCollectionValue);
}
internal class Microsoft.OData.Json.NonIndentedTextWriter : TextWriterWrapper {
    public NonIndentedTextWriter(TextWriter writer);
    public virtual void Write(string s);
    public virtual Task WriteAsync(string s);
    public virtual void Write(char value);
    public virtual Task WriteAsync(char value);
    public virtual void Write(Char[] buffer, int index, int count);
    public virtual Task WriteAsync(Char[] buffer, int index, int count);
    public virtual void WriteLine();
    public virtual Task WriteLineAsync();
}
internal static class Microsoft.OData.Json.ODataAnnotationNames : object {
    internal static HashSet`1<string> KnownODataAnnotationNames;
    internal static string ODataContext;
    internal static string ODataType;
    internal static string ODataId;
    internal static string ODataETag;
    internal static string ODataEditLink;
    internal static string ODataReadLink;
    internal static string ODataMediaEditLink;
    internal static string ODataMediaReadLink;
    internal static string ODataMediaContentType;
    internal static string ODataMediaETag;
    internal static string ODataCount;
    internal static string ODataNextLink;
    internal static string ODataNavigationLinkUrl;
    internal static string ODataBind;
    internal static string ODataAssociationLinkUrl;
    internal static string ODataDeltaLink;
    internal static string ODataRemoved;
    internal static string ODataDelta;
    internal static string ODataNull;
    private static ODataAnnotationNames();
    internal static bool IsODataAnnotationName(string annotationName);
    internal static bool IsUnknownODataAnnotationName(string annotationName);
    internal static void ValidateIsCustomAnnotationName(string annotationName);
    internal static string RemoveAnnotationPrefix(string annotationName);
}
internal class Microsoft.OData.Json.ODataJsonBatchAtomicGroupCache : object {
    private Dictionary`2<string, IList`1<string>> groupToMessageIds;
    private string precedingMessageGroupId;
    private bool isWithinAtomicGroup;
    internal bool IsWithinAtomicGroup { get; internal set; }
    internal bool get_IsWithinAtomicGroup();
    internal void set_IsWithinAtomicGroup(bool value);
    internal bool IsChangesetEnd(string groupId);
    internal bool AddMessageIdAndGroupId(string messageId, string groupId);
    internal string GetGroupId(string targetMessageId);
    internal bool IsGroupId(string id);
    internal IList`1<string> GetFlattenedMessageIds(IList`1<string> ids);
}
internal class Microsoft.OData.Json.ODataJsonBatchBodyContentReaderStream : MemoryStream {
    private IODataStreamListener listener;
    private string cachedBodyContent;
    internal ODataJsonBatchBodyContentReaderStream(IODataStreamListener listener);
    internal bool PopulateBodyContent(IJsonReader jsonReader, string contentTypeHeader);
    internal void PopulateCachedBodyContent(string contentTypeHeader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchBodyContentReaderStream/<PopulateBodyContentAsync>d__6")]
internal Task`1<bool> PopulateBodyContentAsync(IJsonReader jsonReader, string contentTypeHeader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchBodyContentReaderStream/<PopulateCachedBodyContentAsync>d__7")]
internal Task PopulateCachedBodyContentAsync(string contentTypeHeader);
    protected virtual void Dispose(bool disposing);
    private static Nullable`1<BatchPayloadBodyContentType> DetectBatchPayloadBodyContentType(IJsonReader jsonReader, string contentTypeHeader);
    private static ODataMediaType GetMediaType(string contentTypeHeader);
    private void WriteJsonContent(IJsonReader reader);
    private void WriteBinaryContent(string encodedContent);
    private void WriteBytes(Byte[] bytes);
    private static void WriteCurrentJsonObject(IJsonReader reader, IJsonWriter jsonWriter);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchBodyContentReaderStream/<WriteJsonContentAsync>d__15")]
private Task WriteJsonContentAsync(IJsonReader reader);
    private Task WriteBinaryContentAsync(string encodedContent);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchBodyContentReaderStream/<WriteBytesAsync>d__17")]
private Task WriteBytesAsync(Byte[] bytes);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchBodyContentReaderStream/<WriteCurrentJsonObjectAsync>d__18")]
private static Task WriteCurrentJsonObjectAsync(IJsonReader reader, IJsonWriter jsonWriter);
}
internal class Microsoft.OData.Json.ODataJsonBatchPayloadItemPropertiesCache : object {
    internal static string PropertyNameId;
    internal static string PropertyNameAtomicityGroup;
    internal static string PropertyNameHeaders;
    internal static string PropertyNameBody;
    internal static string PropertyNameDependsOn;
    internal static string PropertyNameMethod;
    internal static string PropertyNameUrl;
    internal static string PropertyNameStatus;
    private IJsonReader jsonReader;
    private IODataStreamListener listener;
    private Dictionary`2<string, object> jsonProperties;
    private bool isStreamPopulated;
    private ODataJsonBatchPayloadItemPropertiesCache(ODataJsonBatchReader jsonBatchReader);
    internal static ODataJsonBatchPayloadItemPropertiesCache Create(ODataJsonBatchReader jsonBatchReader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchPayloadItemPropertiesCache/<CreateAsync>d__14")]
internal static Task`1<ODataJsonBatchPayloadItemPropertiesCache> CreateAsync(ODataJsonBatchReader jsonBatchReader);
    internal object GetPropertyValue(string propertyName);
    private ODataJsonBatchBodyContentReaderStream CreateJsonPayloadBodyContentStream(string contentTypeHeader);
    private static string Normalize(string propertyName);
    private void ScanJsonProperties();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchPayloadItemPropertiesCache/<CreateJsonPayloadBodyContentStreamAsync>d__19")]
private Task`1<ODataJsonBatchBodyContentReaderStream> CreateJsonPayloadBodyContentStreamAsync(string contentTypeHeader);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchPayloadItemPropertiesCache/<ScanJsonPropertiesAsync>d__20")]
private Task ScanJsonPropertiesAsync();
}
internal class Microsoft.OData.Json.ODataJsonBatchReader : ODataBatchReader {
    private ODataJsonBatchReaderStream batchStream;
    private ODataJsonBatchAtomicGroupCache atomicGroups;
    private static string PropertyNameRequests;
    private static string PropertyNameResponses;
    private ReaderMode mode;
    private ODataJsonBatchPayloadItemPropertiesCache messagePropertiesCache;
    private HashSet`1<string> requestIds;
    internal ODataJsonInputContext JsonInputContext { get; }
    internal ODataJsonBatchReader(ODataJsonInputContext inputContext, bool synchronous);
    private static ODataJsonBatchReader();
    internal ODataJsonInputContext get_JsonInputContext();
    protected virtual string GetCurrentGroupIdImplementation();
    protected virtual ODataBatchOperationRequestMessage CreateOperationRequestMessageImplementation();
    protected virtual ODataBatchReaderState ReadAtStartImplementation();
    protected virtual ODataBatchReaderState ReadAtChangesetStartImplementation();
    protected virtual ODataBatchReaderState ReadAtChangesetEndImplementation();
    protected virtual ODataBatchReaderState ReadAtOperationImplementation();
    protected virtual ODataBatchOperationResponseMessage CreateOperationResponseMessageImplementation();
    protected virtual void ValidateDependsOnIds(string contentId, IEnumerable`1<string> dependsOnIds);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchReader/<ReadAtStartImplementationAsync>d__19")]
protected virtual Task`1<ODataBatchReaderState> ReadAtStartImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchReader/<ReadAtOperationImplementationAsync>d__20")]
protected virtual Task`1<ODataBatchReaderState> ReadAtOperationImplementationAsync();
    private static void ValidateRequiredProperty(string propertyValue, string propertyName);
    private void ValidateDependsOnId(IEnumerable`1<string> dependsOnIds, string atomicityGroupId, string requestId);
    private void DetectReaderMode();
    private ODataBatchReaderState StartReadingBatchArray();
    private void HandleNewAtomicGroupStart(string messageId, string groupId);
    private ODataBatchReaderState HandleMessagesEnd();
    private ODataBatchReaderState DetectChangesetStates(ODataJsonBatchPayloadItemPropertiesCache messagePropertiesCache);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchReader/<DetectReaderModeAsync>d__28")]
private Task DetectReaderModeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchReader/<StartReadingBatchArrayAsync>d__29")]
private Task`1<ODataBatchReaderState> StartReadingBatchArrayAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchReader/<HandleMessagesEndAsync>d__30")]
private Task`1<ODataBatchReaderState> HandleMessagesEndAsync();
}
internal class Microsoft.OData.Json.ODataJsonBatchReaderStream : ODataBatchReaderStream {
    private ODataJsonInputContext inputContext;
    internal BufferingJsonReader JsonReader { get; }
    internal ODataJsonBatchReaderStream(ODataJsonInputContext inputContext);
    internal BufferingJsonReader get_JsonReader();
    internal virtual int ReadWithDelimiter(Byte[] userBuffer, int userBufferOffset, int count);
    internal virtual int ReadWithLength(Byte[] userBuffer, int userBufferOffset, int count);
}
internal class Microsoft.OData.Json.ODataJsonBatchWriter : ODataBatchWriter {
    private static string PropertyId;
    private static string PropertyAtomicityGroup;
    private static string PropertyHeaders;
    private static string PropertyBody;
    private static string PropertyRequests;
    private static string PropertyDependsOn;
    private static string PropertyMethod;
    private static string PropertyUrl;
    private static string PropertyResponses;
    private static string PropertyStatus;
    private IJsonWriter jsonWriter;
    private string atomicityGroupId;
    private Dictionary`2<string, string> requestIdToAtomicGroupId;
    private Dictionary`2<string, IList`1<string>> atomicityGroupIdToRequestId;
    private ODataJsonOutputContext JsonOutputContext { get; }
    private ODataBatchOperationMessage CurrentOperationMessage { get; }
    internal ODataJsonBatchWriter(ODataJsonOutputContext jsonOutputContext);
    private ODataJsonOutputContext get_JsonOutputContext();
    private ODataBatchOperationMessage get_CurrentOperationMessage();
    public virtual void StreamRequested();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<StreamRequestedAsync>d__20")]
public virtual Task StreamRequestedAsync();
    public virtual void StreamDisposed();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<StreamDisposedAsync>d__22")]
public virtual Task StreamDisposedAsync();
    public virtual void OnInStreamError();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<OnInStreamErrorAsync>d__24")]
public virtual Task OnInStreamErrorAsync();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void WriteStartBatchImplementation();
    protected virtual IEnumerable`1<string> GetDependsOnRequestIds(IEnumerable`1<string> dependsOnIds);
    protected virtual void ValidateDependsOnIds(string contentId, IEnumerable`1<string> dependsOnIds);
    protected virtual void WriteEndBatchImplementation();
    protected virtual void WriteStartChangesetImplementation(string groupId);
    protected virtual void WriteEndChangesetImplementation();
    protected virtual ODataBatchOperationRequestMessage CreateOperationRequestMessageImplementation(string method, Uri uri, string contentId, BatchPayloadUriOption payloadUriOption, IEnumerable`1<string> dependsOnIds);
    protected virtual ODataBatchOperationResponseMessage CreateOperationResponseMessageImplementation(string contentId);
    protected virtual void VerifyNotDisposed();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<WriteStartBatchImplementationAsync>d__36")]
protected virtual Task WriteStartBatchImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<WriteEndBatchImplementationAsync>d__37")]
protected virtual Task WriteEndBatchImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<WriteStartChangesetImplementationAsync>d__38")]
protected virtual Task WriteStartChangesetImplementationAsync(string groupId);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<WriteEndChangesetImplementationAsync>d__39")]
protected virtual Task WriteEndChangesetImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<CreateOperationRequestMessageImplementationAsync>d__40")]
protected virtual Task`1<ODataBatchOperationRequestMessage> CreateOperationRequestMessageImplementationAsync(string method, Uri uri, string contentId, BatchPayloadUriOption payloadUriOption, IEnumerable`1<string> dependsOnIds);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<CreateOperationResponseMessageImplementationAsync>d__41")]
protected virtual Task`1<ODataBatchOperationResponseMessage> CreateOperationResponseMessageImplementationAsync(string contentId);
    private void ValidateDependsOnId(string requestId, string dependsOnId);
    private void AddGroupIdLookup(string contentId);
    private void WriteStartBoundaryForOperation();
    private void StartBatchOperationContent();
    private void WritePendingMessageData(bool reportMessageCompleted);
    private void EnsurePrecedingMessageIsClosed();
    private void WriteBatchEnvelope();
    private void WritePendingRequestMessageData();
    private void WritePendingResponseMessageData();
    private void WriteRequestUri(Uri uri, BatchPayloadUriOption payloadUriOption);
    private Task WriteStartBoundaryForOperationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<StartBatchOperationContentAsync>d__53")]
private Task StartBatchOperationContentAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<WritePendingMessageDataAsync>d__54")]
private Task WritePendingMessageDataAsync(bool reportMessageCompleted);
    private Task EnsurePrecedingMessageIsClosedAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<WriteBatchEnvelopeAsync>d__56")]
private Task WriteBatchEnvelopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<WritePendingRequestMessageDataAsync>d__57")]
private Task WritePendingRequestMessageDataAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<WritePendingResponseMessageDataAsync>d__58")]
private Task WritePendingResponseMessageDataAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonBatchWriter/<WriteRequestUriAsync>d__59")]
private Task WriteRequestUriAsync(Uri uri, BatchPayloadUriOption payloadUriOption);
    private static string ExtractAbsoluteResourcePath(string absoluteUriString);
}
internal class Microsoft.OData.Json.ODataJsonCollectionDeserializer : ODataJsonPropertyAndValueDeserializer {
    private PropertyAndAnnotationCollector propertyAndAnnotationCollector;
    internal ODataJsonCollectionDeserializer(ODataJsonInputContext jsonInputContext);
    internal ODataCollectionStart ReadCollectionStart(PropertyAndAnnotationCollector collectionStartPropertyAndAnnotationCollector, bool isReadingNestedPayload, IEdmTypeReference expectedItemTypeReference, IEdmTypeReference& actualItemTypeReference);
    internal object ReadCollectionItem(IEdmTypeReference expectedItemTypeReference, CollectionWithoutExpectedTypeValidator collectionValidator);
    internal void ReadCollectionEnd(bool isReadingNestedPayload);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonCollectionDeserializer/<ReadCollectionStartAsync>d__5")]
internal Task`1<Tuple`2<ODataCollectionStart, IEdmTypeReference>> ReadCollectionStartAsync(PropertyAndAnnotationCollector collectionStartPropertyAndAnnotationCollector, bool isReadingNestedPayload, IEdmTypeReference expectedItemTypeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonCollectionDeserializer/<ReadCollectionItemAsync>d__6")]
internal Task`1<object> ReadCollectionItemAsync(IEdmTypeReference expectedItemTypeReference, CollectionWithoutExpectedTypeValidator collectionValidator);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonCollectionDeserializer/<ReadCollectionEndAsync>d__7")]
internal Task ReadCollectionEndAsync(bool isReadingNestedPayload);
    private static bool IsValidODataAnnotationOfCollection(string propertyName);
    [CompilerGeneratedAttribute]
private void <ReadCollectionEnd>b__4_0(PropertyParsingResult propertyParsingResult, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonCollectionDeserializer/<<ReadCollectionEndAsync>b__7_0>d")]
[CompilerGeneratedAttribute]
private Task <ReadCollectionEndAsync>b__7_0(PropertyParsingResult propertyParsingResult, string propertyName);
}
internal class Microsoft.OData.Json.ODataJsonCollectionReader : ODataCollectionReaderCoreAsync {
    private ODataJsonInputContext jsonInputContext;
    private ODataJsonCollectionDeserializer jsonCollectionDeserializer;
    internal ODataJsonCollectionReader(ODataJsonInputContext jsonInputContext, IEdmTypeReference expectedItemTypeReference, IODataReaderWriterListener listener);
    protected virtual bool ReadAtStartImplementation();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonCollectionReader/<ReadAtStartImplementationAsync>d__4")]
protected virtual Task`1<bool> ReadAtStartImplementationAsync();
    protected virtual bool ReadAtCollectionStartImplementation();
    protected virtual Task`1<bool> ReadAtCollectionStartImplementationAsync();
    protected virtual bool ReadAtValueImplementation();
    protected virtual Task`1<bool> ReadAtValueImplementationAsync();
    protected virtual bool ReadAtCollectionEndImplementation();
    protected virtual Task`1<bool> ReadAtCollectionEndImplementationAsync();
    private bool ReadAtStartImplementationSynchronously(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    private bool ReadAtCollectionStartImplementationSynchronously();
    private bool ReadAtValueImplementationSynchronously();
    private bool ReadAtCollectionEndImplementationSynchronously();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonCollectionReader/<ReadAtStartImplementationAsynchronously>d__15")]
private Task`1<bool> ReadAtStartImplementationAsynchronously(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonCollectionReader/<ReadAtCollectionStartImplementationAsynchronously>d__16")]
private Task`1<bool> ReadAtCollectionStartImplementationAsynchronously();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonCollectionReader/<ReadAtValueImplementationAsynchronously>d__17")]
private Task`1<bool> ReadAtValueImplementationAsynchronously();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonCollectionReader/<ReadAtCollectionEndImplementationAsynchronously>d__18")]
private Task`1<bool> ReadAtCollectionEndImplementationAsynchronously();
}
internal class Microsoft.OData.Json.ODataJsonCollectionSerializer : ODataJsonValueSerializer {
    private bool writingTopLevelCollection;
    internal ODataJsonCollectionSerializer(ODataJsonOutputContext jsonOutputContext, bool writingTopLevelCollection);
    internal void WriteCollectionStart(ODataCollectionStart collectionStart, IEdmTypeReference itemTypeReference);
    internal void WriteCollectionEnd();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonCollectionSerializer/<WriteCollectionStartAsync>d__4")]
internal Task WriteCollectionStartAsync(ODataCollectionStart collectionStart, IEdmTypeReference itemTypeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonCollectionSerializer/<WriteCollectionEndAsync>d__5")]
internal Task WriteCollectionEndAsync();
}
internal class Microsoft.OData.Json.ODataJsonCollectionWriter : ODataCollectionWriterCore {
    private ODataJsonOutputContext jsonOutputContext;
    private ODataJsonCollectionSerializer jsonCollectionSerializer;
    internal ODataJsonCollectionWriter(ODataJsonOutputContext jsonOutputContext, IEdmTypeReference itemTypeReference);
    internal ODataJsonCollectionWriter(ODataJsonOutputContext jsonOutputContext, IEdmTypeReference expectedItemType, IODataReaderWriterListener listener);
    protected virtual void VerifyNotDisposed();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void StartPayload();
    protected virtual void EndPayload();
    protected virtual void StartCollection(ODataCollectionStart collectionStart);
    protected virtual void EndCollection();
    protected virtual void WriteCollectionItem(object item, IEdmTypeReference expectedItemType);
    protected virtual Task StartPayloadAsync();
    protected virtual Task EndPayloadAsync();
    protected virtual Task StartCollectionAsync(ODataCollectionStart collectionStart);
    protected virtual Task EndCollectionAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonCollectionWriter/<WriteCollectionItemAsync>d__16")]
protected virtual Task WriteCollectionItemAsync(object item, IEdmTypeReference expectedItemType);
}
internal static class Microsoft.OData.Json.ODataJsonConstants : object {
    internal static string ODataAnnotationNamespacePrefix;
    internal static char ODataPropertyAnnotationSeparatorChar;
    internal static string ODataNullPropertyName;
    internal static string ODataNullAnnotationTrueValue;
    internal static string ODataValuePropertyName;
    internal static string ODataErrorPropertyName;
    internal static string ODataSourcePropertyName;
    internal static string ODataTargetPropertyName;
    internal static string ODataRelationshipPropertyName;
    internal static string ODataIdPropertyName;
    internal static string ODataDeltaPropertyName;
    internal static string ODataReasonPropertyName;
    internal static string ODataReasonChangedValue;
    internal static string ODataReasonDeletedValue;
    internal static string ODataServiceDocumentElementUrlName;
    internal static string ODataServiceDocumentElementTitle;
    internal static string ODataServiceDocumentElementKind;
    internal static string ODataServiceDocumentElementName;
    internal static string ContextUriSelectQueryOptionName;
    internal static char ContextUriQueryOptionValueSeparator;
    internal static char ContextUriQueryOptionSeparator;
    internal static char FunctionParameterStart;
    internal static char FunctionParameterEnd;
    internal static string FunctionParameterSeparator;
    internal static char FunctionParameterSeparatorChar;
    internal static string FunctionParameterAssignment;
    internal static string ServiceDocumentSingletonKindName;
    internal static string ServiceDocumentFunctionImportKindName;
    internal static string ServiceDocumentEntitySetKindName;
    internal static string SimplifiedODataContextPropertyName;
    internal static string SimplifiedODataIdPropertyName;
    internal static string SimplifiedODataTypePropertyName;
    internal static string SimplifiedODataRemovedPropertyName;
    internal static string PrefixedODataContextPropertyName;
    internal static string PrefixedODataTypePropertyName;
    internal static string PrefixedODataIdPropertyName;
    internal static string PrefixedODataNullPropertyName;
    internal static string PrefixedODataRemovedPropertyName;
}
internal class Microsoft.OData.Json.ODataJsonContextUriParser : object {
    private static Regex KeyPattern;
    private IEdmModel model;
    private ODataJsonContextUriParseResult parseResult;
    private ODataJsonContextUriParser(IEdmModel model, Uri contextUriFromPayload);
    private static ODataJsonContextUriParser();
    internal static ODataJsonContextUriParseResult Parse(IEdmModel model, string contextUriFromPayload, ODataPayloadKind payloadKind, Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver, bool needParseFragment, bool throwIfMetadataConflict, Uri baseUri, IEdmNavigationSource navigationSource);
    private static string ExtractSelectQueryOption(string fragment);
    private void TokenizeContextUri();
    private void ParseContextUri(ODataPayloadKind expectedPayloadKind, Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver, bool throwIfMetadataConflict);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502")]
private ODataPayloadKind ParseContextUriFragment(string fragment, Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver, bool throwIfMetadataConflict, Boolean& isUndeclared);
    private ODataPayloadKind ResolveType(string typeName, Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver, bool throwIfMetadataConflict);
}
internal class Microsoft.OData.Json.ODataJsonContextUriParseResult : object {
    private Uri contextUriFromPayload;
    [CompilerGeneratedAttribute]
private Uri <MetadataDocumentUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Fragment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SelectQueryOption>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmNavigationSource <NavigationSource>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmType <EdmType>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataPayloadKind> <DetectedPayloadKinds>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataPath <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataDeltaKind <DeltaKind>k__BackingField;
    internal Uri ContextUri { get; }
    internal Uri MetadataDocumentUri { get; internal set; }
    internal string Fragment { get; internal set; }
    internal string SelectQueryOption { get; internal set; }
    internal IEdmNavigationSource NavigationSource { get; internal set; }
    internal IEdmType EdmType { get; internal set; }
    internal IEnumerable`1<ODataPayloadKind> DetectedPayloadKinds { get; internal set; }
    internal ODataPath Path { get; internal set; }
    internal ODataDeltaKind DeltaKind { get; internal set; }
    internal ODataJsonContextUriParseResult(Uri contextUriFromPayload);
    internal Uri get_ContextUri();
    [CompilerGeneratedAttribute]
internal Uri get_MetadataDocumentUri();
    [CompilerGeneratedAttribute]
internal void set_MetadataDocumentUri(Uri value);
    [CompilerGeneratedAttribute]
internal string get_Fragment();
    [CompilerGeneratedAttribute]
internal void set_Fragment(string value);
    [CompilerGeneratedAttribute]
internal string get_SelectQueryOption();
    [CompilerGeneratedAttribute]
internal void set_SelectQueryOption(string value);
    [CompilerGeneratedAttribute]
internal IEdmNavigationSource get_NavigationSource();
    [CompilerGeneratedAttribute]
internal void set_NavigationSource(IEdmNavigationSource value);
    [CompilerGeneratedAttribute]
internal IEdmType get_EdmType();
    [CompilerGeneratedAttribute]
internal void set_EdmType(IEdmType value);
    [CompilerGeneratedAttribute]
internal IEnumerable`1<ODataPayloadKind> get_DetectedPayloadKinds();
    [CompilerGeneratedAttribute]
internal void set_DetectedPayloadKinds(IEnumerable`1<ODataPayloadKind> value);
    [CompilerGeneratedAttribute]
internal ODataPath get_Path();
    [CompilerGeneratedAttribute]
internal void set_Path(ODataPath value);
    [CompilerGeneratedAttribute]
internal ODataDeltaKind get_DeltaKind();
    [CompilerGeneratedAttribute]
internal void set_DeltaKind(ODataDeltaKind value);
}
internal class Microsoft.OData.Json.ODataJsonDeltaReader : ODataDeltaReader {
    private ODataJsonReader underlyingReader;
    private int nestedLevel;
    public ODataDeltaReaderState State { get; }
    public ODataReaderState SubState { get; }
    public ODataItem Item { get; }
    public ODataJsonDeltaReader(ODataJsonInputContext jsonInputContext, IEdmNavigationSource navigationSource, IEdmEntityType expectedEntityType);
    public virtual ODataDeltaReaderState get_State();
    public virtual ODataReaderState get_SubState();
    public virtual ODataItem get_Item();
    public virtual bool Read();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeltaReader/<ReadAsync>d__10")]
public virtual Task`1<bool> ReadAsync();
    private void SetNestedLevel();
}
internal class Microsoft.OData.Json.ODataJsonDeltaWriter : ODataDeltaWriter {
    private ODataJsonOutputContext jsonOutputContext;
    private ODataJsonWriter resourceWriter;
    private IEdmNavigationSource navigationSource;
    private IEdmEntityType entityType;
    private IODataOutputInStreamErrorListener inStreamErrorListener;
    public IEdmNavigationSource NavigationSource { get; public set; }
    public IEdmEntityType EntityType { get; public set; }
    public ODataJsonDeltaWriter(ODataJsonOutputContext jsonOutputContext, IEdmNavigationSource navigationSource, IEdmEntityType entityType);
    public IEdmNavigationSource get_NavigationSource();
    public void set_NavigationSource(IEdmNavigationSource value);
    public IEdmEntityType get_EntityType();
    public void set_EntityType(IEdmEntityType value);
    public virtual void WriteStart(ODataDeltaResourceSet deltaResourceSet);
    public virtual Task WriteStartAsync(ODataDeltaResourceSet deltaResourceSet);
    public virtual void WriteEnd();
    public virtual Task WriteEndAsync();
    public virtual void WriteStart(ODataNestedResourceInfo nestedResourceInfo);
    public virtual Task WriteStartAsync(ODataNestedResourceInfo nestedResourceInfo);
    public virtual void WriteStart(ODataResourceSet expandedResourceSet);
    public virtual Task WriteStartAsync(ODataResourceSet expandedResourceSet);
    public virtual void WriteStart(ODataResource deltaResource);
    public virtual Task WriteStartAsync(ODataResource deltaResource);
    public virtual void WriteDeltaDeletedEntry(ODataDeltaDeletedEntry deltaDeletedEntry);
    public virtual Task WriteDeltaDeletedEntryAsync(ODataDeltaDeletedEntry deltaDeletedEntry);
    public virtual void WriteDeltaLink(ODataDeltaLink deltaLink);
    public virtual Task WriteDeltaLinkAsync(ODataDeltaLink deltaLink);
    public virtual void WriteDeltaDeletedLink(ODataDeltaDeletedLink deltaDeletedLink);
    public virtual Task WriteDeltaDeletedLinkAsync(ODataDeltaDeletedLink deltaDeletedLink);
    public virtual void Flush();
    public virtual Task FlushAsync();
    private sealed virtual override void Microsoft.OData.IODataOutputInStreamErrorListener.OnInStreamError();
    private sealed virtual override Task Microsoft.OData.IODataOutputInStreamErrorListener.OnInStreamErrorAsync();
}
internal abstract class Microsoft.OData.Json.ODataJsonDeserializer : ODataDeserializer {
    private ODataJsonInputContext jsonInputContext;
    private IODataMetadataContext metadataContext;
    private ODataJsonContextUriParseResult contextUriParseResult;
    private ODataUri odataUri;
    private bool isODataUriRead;
    [CompilerGeneratedAttribute]
private Func`3<PropertyAndAnnotationCollector, string, object> <ReadPropertyCustomAnnotationValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<PropertyAndAnnotationCollector, string, Task`1<object>> <ReadPropertyCustomAnnotationValueAsync>k__BackingField;
    internal ODataUri ODataUri { get; }
    internal IODataMetadataContext MetadataContext { get; }
    internal BufferingJsonReader JsonReader { get; }
    internal ODataJsonContextUriParseResult ContextUriParseResult { get; }
    internal ODataJsonInputContext JsonInputContext { get; }
    protected Func`3<PropertyAndAnnotationCollector, string, object> ReadPropertyCustomAnnotationValue { get; protected set; }
    protected Func`3<PropertyAndAnnotationCollector, string, Task`1<object>> ReadPropertyCustomAnnotationValueAsync { get; protected set; }
    private Uri MetadataDocumentUri { get; }
    protected ODataJsonDeserializer(ODataJsonInputContext jsonInputContext);
    internal ODataUri get_ODataUri();
    internal IODataMetadataContext get_MetadataContext();
    internal BufferingJsonReader get_JsonReader();
    internal ODataJsonContextUriParseResult get_ContextUriParseResult();
    internal ODataJsonInputContext get_JsonInputContext();
    [CompilerGeneratedAttribute]
protected Func`3<PropertyAndAnnotationCollector, string, object> get_ReadPropertyCustomAnnotationValue();
    [CompilerGeneratedAttribute]
protected void set_ReadPropertyCustomAnnotationValue(Func`3<PropertyAndAnnotationCollector, string, object> value);
    [CompilerGeneratedAttribute]
protected Func`3<PropertyAndAnnotationCollector, string, Task`1<object>> get_ReadPropertyCustomAnnotationValueAsync();
    [CompilerGeneratedAttribute]
protected void set_ReadPropertyCustomAnnotationValueAsync(Func`3<PropertyAndAnnotationCollector, string, Task`1<object>> value);
    private Uri get_MetadataDocumentUri();
    internal static bool TryParsePropertyAnnotation(string propertyAnnotationName, String& propertyName, String& annotationName);
    internal void ReadPayloadStart(ODataPayloadKind payloadKind, PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool isReadingNestedPayload, bool allowEmptyPayload, IEdmNavigationSource navigationSource);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeserializer/<ReadPayloadStartAsync>d__29")]
internal Task ReadPayloadStartAsync(ODataPayloadKind payloadKind, PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool isReadingNestedPayload, bool allowEmptyPayload, IEdmNavigationSource navigationSource);
    [SuppressMessageAttribute("Microsoft.Usage", "CA1801:ReviewUnusedParameters")]
[SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
internal void ReadPayloadEnd(bool isReadingNestedPayload);
    internal string ReadAndValidateAnnotationStringValue(string annotationName);
    internal string ReadAnnotationStringValue(string annotationName);
    internal Uri ReadAnnotationStringValueAsUri(string annotationName);
    internal Uri ReadAndValidateAnnotationStringValueAsUri(string annotationName);
    internal long ReadAndValidateAnnotationAsLongForIeee754Compatible(string annotationName);
    internal Uri ProcessUriFromPayload(string uriFromPayload);
    internal void ProcessProperty(PropertyAndAnnotationCollector propertyAndAnnotationCollector, Func`2<string, object> readPropertyAnnotationValue, Action`2<PropertyParsingResult, string> handleProperty);
    [ConditionalAttribute("DEBUG")]
[SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
internal void AssertJsonCondition(JsonNodeType[] allowedNodeTypes);
    internal string ReadContextUriAnnotation(ODataPayloadKind payloadKind, PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool failOnMissingContextUriAnnotation);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeserializer/<ReadAndValidateAnnotationStringValueAsync>d__40")]
internal Task`1<string> ReadAndValidateAnnotationStringValueAsync(string annotationName);
    internal Task`1<string> ReadAnnotationStringValueAsync(string annotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeserializer/<ReadAnnotationStringValueAsUriAsync>d__42")]
internal Task`1<Uri> ReadAnnotationStringValueAsUriAsync(string annotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeserializer/<ReadAndValidateAnnotationStringValueAsUriAsync>d__43")]
internal Task`1<Uri> ReadAndValidateAnnotationStringValueAsUriAsync(string annotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeserializer/<ReadAndValidateAnnotationAsLongForIeee754CompatibleAsync>d__44")]
internal Task`1<long> ReadAndValidateAnnotationAsLongForIeee754CompatibleAsync(string annotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeserializer/<ProcessPropertyAsync>d__45")]
internal Task ProcessPropertyAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector, Func`2<string, Task`1<object>> readPropertyAnnotationValueDelegate, Func`3<PropertyParsingResult, string, Task> handlePropertyDelegate);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeserializer/<ReadContextUriAnnotationAsync>d__46")]
internal Task`1<string> ReadContextUriAnnotationAsync(ODataPayloadKind payloadKind, PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool failOnMissingContextUriAnnotation);
    protected bool CompareSimplifiedODataAnnotation(string simplifiedPropertyName, string propertyName);
    protected string CompleteSimplifiedODataAnnotation(string annotationName);
    private bool ShouldSkipCustomInstanceAnnotation(string annotationName);
    private static bool IsInstanceAnnotation(string annotationName);
    private bool SkipOverUnknownODataAnnotation(string annotationName, Object& annotationValue);
    private object ReadODataOrCustomInstanceAnnotationValue(string annotationName);
    private PropertyParsingResult ParseProperty(PropertyAndAnnotationCollector propertyAndAnnotationCollector, Func`2<string, object> readPropertyAnnotationValue, String& parsedPropertyName);
    private void ProcessPropertyAnnotation(string annotatedPropertyName, string annotationName, PropertyAndAnnotationCollector propertyAndAnnotationCollector, Func`2<string, object> readPropertyAnnotationValue);
    private void ReadODataOrCustomInstanceAnnotationValue(string annotatedPropertyName, string annotationName, PropertyAndAnnotationCollector propertyAndAnnotationCollector, Func`2<string, object> readPropertyAnnotationValue);
    private string ReadPayloadStartImplementation(ODataPayloadKind payloadKind, PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool isReadingNestedPayload, bool allowEmptyPayload);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeserializer/<SkipOverUnknownODataAnnotationAsync>d__57")]
private ValueTask`1<Tuple`2<bool, object>> SkipOverUnknownODataAnnotationAsync(string annotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeserializer/<ReadODataOrCustomInstanceAnnotationValueAsync>d__58")]
private Task`1<object> ReadODataOrCustomInstanceAnnotationValueAsync(string annotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeserializer/<ParsePropertyAsync>d__59")]
private Task`1<Tuple`2<PropertyParsingResult, string>> ParsePropertyAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector, Func`2<string, Task`1<object>> readPropertyAnnotationValueDelegate);
    private Task ProcessPropertyAnnotationAsync(string annotatedPropertyName, string annotationName, PropertyAndAnnotationCollector propertyAndAnnotationCollector, Func`2<string, Task`1<object>> readPropertyAnnotationValueDelegate);
    [SuppressMessageAttribute("Microsoft.Usage", "CA1801:ReviewUnusedParameters")]
[SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
internal Task ReadPayloadEndAsync(bool isReadingNestedPayload);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeserializer/<ReadODataOrCustomInstanceAnnotationValueAsync>d__62")]
private Task ReadODataOrCustomInstanceAnnotationValueAsync(string annotatedPropertyName, string annotationName, PropertyAndAnnotationCollector propertyAndAnnotationCollector, Func`2<string, Task`1<object>> readPropertyAnnotationValueDelegate);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonDeserializer/<ReadPayloadStartImplementationAsync>d__63")]
private Task`1<string> ReadPayloadStartImplementationAsync(ODataPayloadKind payloadKind, PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool isReadingNestedPayload, bool allowEmptyPayload);
}
internal class Microsoft.OData.Json.ODataJsonEntityReferenceLinkDeserializer : ODataJsonPropertyAndValueDeserializer {
    internal ODataJsonEntityReferenceLinkDeserializer(ODataJsonInputContext jsonInputContext);
    internal ODataEntityReferenceLinks ReadEntityReferenceLinks();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonEntityReferenceLinkDeserializer/<ReadEntityReferenceLinksAsync>d__2")]
internal Task`1<ODataEntityReferenceLinks> ReadEntityReferenceLinksAsync();
    internal ODataEntityReferenceLink ReadEntityReferenceLink();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonEntityReferenceLinkDeserializer/<ReadEntityReferenceLinkAsync>d__4")]
internal Task`1<ODataEntityReferenceLink> ReadEntityReferenceLinkAsync();
    private ODataEntityReferenceLinks ReadEntityReferenceLinksImplementation(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    private ODataEntityReferenceLink ReadEntityReferenceLinkImplementation(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    private void ReadEntityReferenceLinksAnnotations(ODataEntityReferenceLinks links, PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool forLinksStart);
    private void ReadEntityReferenceLinksNextLinkAnnotationValue(ODataEntityReferenceLinks links);
    private void ReadEntityReferenceCountAnnotationValue(ODataEntityReferenceLinks links);
    private ODataEntityReferenceLink ReadSingleEntityReferenceLink(PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool topLevel);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonEntityReferenceLinkDeserializer/<ReadEntityReferenceLinksImplementationAsync>d__11")]
private Task`1<ODataEntityReferenceLinks> ReadEntityReferenceLinksImplementationAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    private Task`1<ODataEntityReferenceLink> ReadEntityReferenceLinkImplementationAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonEntityReferenceLinkDeserializer/<ReadEntityReferenceLinksAnnotationsAsync>d__13")]
private Task ReadEntityReferenceLinksAnnotationsAsync(ODataEntityReferenceLinks links, PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool forLinksStart);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonEntityReferenceLinkDeserializer/<ReadSingleEntityReferenceLinkAsync>d__14")]
private Task`1<ODataEntityReferenceLink> ReadSingleEntityReferenceLinkAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool topLevel);
}
internal class Microsoft.OData.Json.ODataJsonEntityReferenceLinkSerializer : ODataJsonSerializer {
    internal ODataJsonEntityReferenceLinkSerializer(ODataJsonOutputContext jsonOutputContext);
    internal void WriteEntityReferenceLink(ODataEntityReferenceLink link);
    internal void WriteEntityReferenceLinks(ODataEntityReferenceLinks entityReferenceLinks);
    internal Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink link);
    internal Task WriteEntityReferenceLinksAsync(ODataEntityReferenceLinks entityReferenceLinks);
    private void WriteEntityReferenceLinkImplementation(ODataEntityReferenceLink entityReferenceLink, bool isTopLevel);
    private void WriteEntityReferenceLinksImplementation(ODataEntityReferenceLinks entityReferenceLinks);
    private void WriteNextLinkAnnotation(Uri nextPageLink);
    private void WriteCountAnnotation(long countValue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonEntityReferenceLinkSerializer/<WriteEntityReferenceLinkImplementationAsync>d__9")]
private Task WriteEntityReferenceLinkImplementationAsync(ODataEntityReferenceLink entityReferenceLink, bool isTopLevel);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonEntityReferenceLinkSerializer/<WriteEntityReferenceLinksImplementationAsync>d__10")]
private Task WriteEntityReferenceLinksImplementationAsync(ODataEntityReferenceLinks entityReferenceLinks);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonEntityReferenceLinkSerializer/<WriteNextLinkAnnotationAsync>d__11")]
private Task WriteNextLinkAnnotationAsync(Uri nextPageLink);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonEntityReferenceLinkSerializer/<WriteCountAnnotationAsync>d__12")]
private Task WriteCountAnnotationAsync(long countValue);
}
internal class Microsoft.OData.Json.ODataJsonErrorDeserializer : ODataJsonDeserializer {
    internal ODataJsonErrorDeserializer(ODataJsonInputContext jsonInputContext);
    internal ODataError ReadTopLevelError();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonErrorDeserializer/<ReadTopLevelErrorAsync>d__2")]
internal Task`1<ODataError> ReadTopLevelErrorAsync();
    private ODataError ReadTopLevelErrorImplementation();
    private void ReadJsonObjectInErrorPayload(Action`2<string, PropertyAndAnnotationCollector> readPropertyWithValue);
    private object ReadErrorPropertyAnnotationValue(string propertyAnnotationName);
    private void ReadODataErrorObject(ODataError error);
    private ODataInnerError ReadInnerError(int recursionDepth);
    private void ReadPropertyValueInInnerError(int recursionDepth, ODataInnerError innerError, string propertyName);
    private void ReadPropertyValueInODataErrorObject(ODataError error, string propertyName, PropertyAndAnnotationCollector duplicationPropertyNameChecker);
    private ICollection`1<ODataErrorDetail> ReadDetails();
    private ODataErrorDetail ReadDetail();
    private void ReadPropertyValueInODataErrorDetailObject(ODataErrorDetail detail, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonErrorDeserializer/<ReadTopLevelErrorImplementationAsync>d__13")]
private Task`1<ODataError> ReadTopLevelErrorImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonErrorDeserializer/<ReadJsonObjectInErrorPayloadAsync>d__14")]
private Task ReadJsonObjectInErrorPayloadAsync(Func`3<string, PropertyAndAnnotationCollector, Task> readPropertyWithValueDelegate);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonErrorDeserializer/<ReadErrorPropertyAnnotationValueAsync>d__15")]
private Task`1<object> ReadErrorPropertyAnnotationValueAsync(string propertyAnnotationName);
    private Task ReadODataErrorObjectAsync(ODataError error);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonErrorDeserializer/<ReadInnerErrorAsync>d__17")]
private Task`1<ODataInnerError> ReadInnerErrorAsync(int recursionDepth);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonErrorDeserializer/<ReadPropertyValueInInnerErrorAsync>d__18")]
private Task ReadPropertyValueInInnerErrorAsync(int recursionDepth, ODataInnerError innerError, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonErrorDeserializer/<ReadPropertyValueInODataErrorObjectAsync>d__19")]
private Task ReadPropertyValueInODataErrorObjectAsync(ODataError error, string propertyName, PropertyAndAnnotationCollector duplicationPropertyNameChecker);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonErrorDeserializer/<ReadErrorDetailsAsync>d__20")]
private Task`1<ICollection`1<ODataErrorDetail>> ReadErrorDetailsAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonErrorDeserializer/<ReadPropertyValueInODataErrorDetailObjectAsync>d__21")]
private Task ReadPropertyValueInODataErrorDetailObjectAsync(ODataErrorDetail errorDetail, string propertyName);
}
internal class Microsoft.OData.Json.ODataJsonFormat : ODataFormat {
    public virtual string ToString();
    public virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
    public virtual ODataInputContext CreateInputContext(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public virtual ODataOutputContext CreateOutputContext(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    public virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
    public virtual Task`1<ODataInputContext> CreateInputContextAsync(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public virtual Task`1<ODataOutputContext> CreateOutputContextAsync(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    private static IEnumerable`1<ODataPayloadKind> DetectPayloadKindImplementation(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
    private static Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindImplementationAsync(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
}
internal class Microsoft.OData.Json.ODataJsonInputContext : ODataInputContext {
    private JsonMetadataLevel metadataLevel;
    private TextReader textReader;
    private BufferingJsonReader jsonReader;
    private Stream stream;
    public JsonMetadataLevel MetadataLevel { get; }
    public BufferingJsonReader JsonReader { get; }
    internal Stream Stream { get; }
    internal bool OptionalODataPrefix { get; }
    public ODataJsonInputContext(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    internal ODataJsonInputContext(TextReader textReader, ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public JsonMetadataLevel get_MetadataLevel();
    public BufferingJsonReader get_JsonReader();
    internal Stream get_Stream();
    internal bool get_OptionalODataPrefix();
    public virtual ODataReader CreateResourceSetReader(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public virtual Task`1<ODataReader> CreateResourceSetReaderAsync(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public virtual ODataReader CreateDeltaResourceSetReader(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public virtual Task`1<ODataReader> CreateDeltaResourceSetReaderAsync(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public virtual ODataReader CreateResourceReader(IEdmNavigationSource navigationSource, IEdmStructuredType expectedResourceType);
    public virtual Task`1<ODataReader> CreateResourceReaderAsync(IEdmNavigationSource navigationSource, IEdmStructuredType expectedResourceType);
    public virtual ODataCollectionReader CreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    public virtual Task`1<ODataCollectionReader> CreateCollectionReaderAsync(IEdmTypeReference expectedItemTypeReference);
    public virtual ODataProperty ReadProperty(IEdmStructuralProperty property, IEdmTypeReference expectedPropertyTypeReference);
    public virtual Task`1<ODataProperty> ReadPropertyAsync(IEdmStructuralProperty property, IEdmTypeReference expectedPropertyTypeReference);
    public virtual ODataError ReadError();
    public virtual Task`1<ODataError> ReadErrorAsync();
    public virtual ODataReader CreateUriParameterResourceSetReader(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public virtual Task`1<ODataReader> CreateUriParameterResourceSetReaderAsync(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public virtual ODataReader CreateUriParameterResourceReader(IEdmNavigationSource navigationSource, IEdmStructuredType expectedResourceType);
    public virtual Task`1<ODataReader> CreateUriParameterResourceReaderAsync(IEdmNavigationSource navigationSource, IEdmStructuredType expectedResourceType);
    public virtual ODataParameterReader CreateParameterReader(IEdmOperation operation);
    public virtual Task`1<ODataParameterReader> CreateParameterReaderAsync(IEdmOperation operation);
    public IEnumerable`1<ODataPayloadKind> DetectPayloadKind(ODataPayloadKindDetectionInfo detectionInfo);
    public Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(ODataPayloadKindDetectionInfo detectionInfo);
    internal virtual ODataDeltaReader CreateDeltaReader(IEdmEntitySetBase entitySet, IEdmEntityType expectedBaseEntityType);
    internal virtual Task`1<ODataDeltaReader> CreateDeltaReaderAsync(IEdmEntitySetBase entitySet, IEdmEntityType expectedBaseEntityType);
    internal virtual ODataBatchReader CreateBatchReader();
    internal virtual Task`1<ODataBatchReader> CreateBatchReaderAsync();
    internal virtual ODataServiceDocument ReadServiceDocument();
    internal virtual Task`1<ODataServiceDocument> ReadServiceDocumentAsync();
    internal virtual ODataEntityReferenceLinks ReadEntityReferenceLinks();
    internal virtual Task`1<ODataEntityReferenceLinks> ReadEntityReferenceLinksAsync();
    internal virtual ODataEntityReferenceLink ReadEntityReferenceLink();
    internal virtual Task`1<ODataEntityReferenceLink> ReadEntityReferenceLinkAsync();
    protected virtual void Dispose(bool disposing);
    private static TextReader CreateTextReader(Stream messageStream, Encoding encoding);
    private static IJsonReader CreateJsonReader(IServiceProvider container, TextReader textReader, bool isIeee754Compatible);
    private void VerifyCanCreateParameterReader(IEdmOperation operation);
    private void VerifyCanCreateODataReader(IEdmNavigationSource navigationSource, IEdmStructuredType structuredType);
    private void VerifyCanCreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    private void VerifyCanReadEntityReferenceLink();
    private void VerifyCanReadProperty();
    private void VerifyCanDetectPayloadKind();
    private void VerifyUserModel();
    private ODataReader CreateResourceSetReaderImplementation(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType, bool readingParameter, bool readingDelta);
    private ODataDeltaReader CreateDeltaReaderImplementation(IEdmEntitySetBase entitySet, IEdmEntityType expectedBaseEntityType);
    private ODataReader CreateResourceReaderImplementation(IEdmNavigationSource navigationSource, IEdmStructuredType expectedBaseResourceType);
    private ODataCollectionReader CreateCollectionReaderImplementation(IEdmTypeReference expectedItemTypeReference);
    private ODataParameterReader CreateParameterReaderImplementation(IEdmOperation operation);
    private ODataBatchReader CreateBatchReaderImplementation(bool synchronous);
    [CompilerGeneratedAttribute]
private ODataBatchReader <CreateBatchReaderAsync>b__37_0();
}
internal class Microsoft.OData.Json.ODataJsonOutputContext : ODataOutputContext {
    internal MemoryStream BinaryValueStream;
    private JsonMetadataLevel metadataLevel;
    private IODataOutputInStreamErrorListener outputInStreamErrorListener;
    private Stream messageOutputStream;
    private Stream asynchronousOutputStream;
    private IJsonWriter jsonWriter;
    private JsonTypeNameOracle typeNameOracle;
    private PropertyCacheHandler propertyCacheHandler;
    public IJsonWriter JsonWriter { get; }
    public JsonTypeNameOracle TypeNameOracle { get; }
    public JsonMetadataLevel MetadataLevel { get; }
    public PropertyCacheHandler PropertyCacheHandler { get; }
    internal bool OmitODataPrefix { get; }
    public ODataJsonOutputContext(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    internal ODataJsonOutputContext(Stream stream, ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    public IJsonWriter get_JsonWriter();
    public JsonTypeNameOracle get_TypeNameOracle();
    public JsonMetadataLevel get_MetadataLevel();
    public PropertyCacheHandler get_PropertyCacheHandler();
    internal bool get_OmitODataPrefix();
    public virtual ODataWriter CreateODataResourceSetWriter(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType);
    public virtual Task`1<ODataWriter> CreateODataResourceSetWriterAsync(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType);
    public virtual ODataWriter CreateODataDeltaResourceSetWriter(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType);
    public virtual Task`1<ODataWriter> CreateODataDeltaResourceSetWriterAsync(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType);
    public virtual ODataWriter CreateODataResourceWriter(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public virtual Task`1<ODataWriter> CreateODataResourceWriterAsync(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public virtual ODataCollectionWriter CreateODataCollectionWriter(IEdmTypeReference itemTypeReference);
    public virtual Task`1<ODataCollectionWriter> CreateODataCollectionWriterAsync(IEdmTypeReference itemTypeReference);
    public virtual ODataWriter CreateODataUriParameterResourceWriter(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public virtual Task`1<ODataWriter> CreateODataUriParameterResourceWriterAsync(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public virtual ODataWriter CreateODataUriParameterResourceSetWriter(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType);
    public virtual Task`1<ODataWriter> CreateODataUriParameterResourceSetWriterAsync(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType);
    public virtual ODataParameterWriter CreateODataParameterWriter(IEdmOperation operation);
    public virtual Task`1<ODataParameterWriter> CreateODataParameterWriterAsync(IEdmOperation operation);
    public virtual void WriteProperty(ODataProperty property);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<WritePropertyAsync>d__35")]
public virtual Task WritePropertyAsync(ODataProperty property);
    public virtual void WriteError(ODataError error, bool includeDebugInformation);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<WriteErrorAsync>d__37")]
public virtual Task WriteErrorAsync(ODataError error, bool includeDebugInformation);
    public void VerifyNotDisposed();
    public void Flush();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<FlushAsync>d__40")]
public Task FlushAsync();
    internal void FlushBuffers();
    internal Task FlushBuffersAsync();
    internal Stream GetOutputStream();
    internal virtual ODataBatchWriter CreateODataBatchWriter();
    internal virtual Task`1<ODataBatchWriter> CreateODataBatchWriterAsync();
    internal virtual void WriteInStreamError(ODataError error, bool includeDebugInformation);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<WriteInStreamErrorAsync>d__47")]
internal virtual Task WriteInStreamErrorAsync(ODataError error, bool includeDebugInformation);
    internal virtual ODataDeltaWriter CreateODataDeltaWriter(IEdmEntitySetBase entitySet, IEdmEntityType entityType);
    internal virtual Task`1<ODataDeltaWriter> CreateODataDeltaWriterAsync(IEdmEntitySetBase entitySet, IEdmEntityType entityType);
    internal virtual void WriteServiceDocument(ODataServiceDocument serviceDocument);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<WriteServiceDocumentAsync>d__51")]
internal virtual Task WriteServiceDocumentAsync(ODataServiceDocument serviceDocument);
    internal virtual void WriteEntityReferenceLinks(ODataEntityReferenceLinks links);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<WriteEntityReferenceLinksAsync>d__53")]
internal virtual Task WriteEntityReferenceLinksAsync(ODataEntityReferenceLinks links);
    internal virtual void WriteEntityReferenceLink(ODataEntityReferenceLink link);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<WriteEntityReferenceLinkAsync>d__55")]
internal virtual Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink link);
    [SuppressMessageAttribute("Microsoft.Usage", "CA2213:DisposableFieldsShouldBeDisposed")]
protected virtual void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<DisposeAsyncCore>d__57")]
protected virtual ValueTask DisposeAsyncCore();
    private static IJsonWriter CreateJsonWriter(IServiceProvider container, Stream stream, bool isIeee754Compatible, ODataMessageWriterSettings writerSettings, Encoding encoding);
    private Stream InitializeOutputStream();
    private ODataWriter CreateODataResourceSetWriterImplementation(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType, bool writingParameter, bool writingDelta);
    private ODataDeltaWriter CreateODataDeltaWriterImplementation(IEdmEntitySetBase entitySet, IEdmEntityType entityType);
    private ODataWriter CreateODataResourceWriterImplementation(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    private ODataCollectionWriter CreateODataCollectionWriterImplementation(IEdmTypeReference itemTypeReference);
    private ODataParameterWriter CreateODataParameterWriterImplementation(IEdmOperation operation);
    private ODataBatchWriter CreateODataBatchWriterImplementation();
    private void WriteInStreamErrorImplementation(ODataError error, bool includeDebugInformation);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<WriteInStreamErrorImplementationAsync>d__67")]
private Task WriteInStreamErrorImplementationAsync(ODataError error, bool includeDebugInformation);
    private void WritePropertyImplementation(ODataProperty property);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<WritePropertyImplementationAsync>d__69")]
private Task WritePropertyImplementationAsync(ODataProperty property);
    private void WriteServiceDocumentImplementation(ODataServiceDocument serviceDocument);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<WriteServiceDocumentImplementationAsync>d__71")]
private Task WriteServiceDocumentImplementationAsync(ODataServiceDocument serviceDocument);
    private void WriteErrorImplementation(ODataError error, bool includeDebugInformation);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<WriteErrorImplementationAsync>d__73")]
private Task WriteErrorImplementationAsync(ODataError error, bool includeDebugInformation);
    private void WriteEntityReferenceLinksImplementation(ODataEntityReferenceLinks links);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<WriteEntityReferenceLinksImplementationAsync>d__75")]
private Task WriteEntityReferenceLinksImplementationAsync(ODataEntityReferenceLinks links);
    private void WriteEntityReferenceLinkImplementation(ODataEntityReferenceLink link);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonOutputContext/<WriteEntityReferenceLinkImplementationAsync>d__77")]
private Task WriteEntityReferenceLinkImplementationAsync(ODataEntityReferenceLink link);
}
internal class Microsoft.OData.Json.ODataJsonParameterDeserializer : ODataJsonPropertyAndValueDeserializer {
    private static Func`2<string, object> propertyAnnotationValueReader;
    private static Func`2<string, Task`1<object>> propertyAnnotationValueReaderAsync;
    private ODataJsonParameterReader parameterReader;
    internal ODataJsonParameterDeserializer(ODataJsonParameterReader parameterReader, ODataJsonInputContext jsonInputContext);
    private static ODataJsonParameterDeserializer();
    internal bool ReadNextParameter(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonParameterDeserializer/<ReadNextParameterAsync>d__5")]
internal Task`1<bool> ReadNextParameterAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
}
internal class Microsoft.OData.Json.ODataJsonParameterReader : ODataParameterReaderCoreAsync {
    private ODataJsonInputContext jsonInputContext;
    private ODataJsonParameterDeserializer jsonParameterDeserializer;
    private PropertyAndAnnotationCollector propertyAndAnnotationCollector;
    internal ODataJsonParameterReader(ODataJsonInputContext jsonInputContext, IEdmOperation operation);
    protected virtual bool ReadAtStartImplementation();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonParameterReader/<ReadAtStartImplementationAsync>d__5")]
protected virtual Task`1<bool> ReadAtStartImplementationAsync();
    protected virtual bool ReadNextParameterImplementation();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonParameterReader/<ReadNextParameterImplementationAsync>d__7")]
protected virtual Task`1<bool> ReadNextParameterImplementationAsync();
    protected virtual ODataReader CreateResourceReader(IEdmStructuredType expectedResourceType);
    protected virtual Task`1<ODataReader> CreateResourceReaderAsync(IEdmStructuredType expectedResourceType);
    protected virtual ODataReader CreateResourceSetReader(IEdmStructuredType expectedResourceType);
    protected virtual Task`1<ODataReader> CreateResourceSetReaderAsync(IEdmStructuredType expectedResourceType);
    protected virtual ODataCollectionReader CreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    protected virtual Task`1<ODataCollectionReader> CreateCollectionReaderAsync(IEdmTypeReference expectedItemTypeReference);
    private bool ReadAtStartImplementationSynchronously();
    private bool ReadNextParameterImplementationSynchronously();
    private ODataReader CreateResourceReaderSynchronously(IEdmStructuredType expectedResourceType);
    private ODataReader CreateResourceSetReaderSynchronously(IEdmStructuredType expectedResourceType);
    private ODataCollectionReader CreateCollectionReaderSynchronously(IEdmTypeReference expectedItemTypeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonParameterReader/<ReadAtStartInternalImplementationAsync>d__19")]
private Task`1<bool> ReadAtStartInternalImplementationAsync();
}
internal class Microsoft.OData.Json.ODataJsonParameterWriter : ODataParameterWriterCore {
    private ODataJsonOutputContext jsonOutputContext;
    private ODataJsonValueSerializer jsonValueSerializer;
    internal ODataJsonParameterWriter(ODataJsonOutputContext jsonOutputContext, IEdmOperation operation);
    protected virtual void VerifyNotDisposed();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void StartPayload();
    protected virtual void EndPayload();
    protected virtual void WriteValueParameter(string parameterName, object parameterValue, IEdmTypeReference expectedTypeReference);
    protected virtual ODataCollectionWriter CreateFormatCollectionWriter(string parameterName, IEdmTypeReference expectedItemType);
    protected virtual ODataWriter CreateFormatResourceWriter(string parameterName, IEdmTypeReference expectedItemType);
    protected virtual ODataWriter CreateFormatResourceSetWriter(string parameterName, IEdmTypeReference expectedItemType);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonParameterWriter/<StartPayloadAsync>d__12")]
protected virtual Task StartPayloadAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonParameterWriter/<EndPayloadAsync>d__13")]
protected virtual Task EndPayloadAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonParameterWriter/<WriteValueParameterAsync>d__14")]
protected virtual Task WriteValueParameterAsync(string parameterName, object parameterValue, IEdmTypeReference expectedTypeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonParameterWriter/<CreateFormatCollectionWriterAsync>d__15")]
protected virtual Task`1<ODataCollectionWriter> CreateFormatCollectionWriterAsync(string parameterName, IEdmTypeReference expectedItemType);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonParameterWriter/<CreateFormatResourceWriterAsync>d__16")]
protected virtual Task`1<ODataWriter> CreateFormatResourceWriterAsync(string parameterName, IEdmTypeReference expectedItemType);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonParameterWriter/<CreateFormatResourceSetWriterAsync>d__17")]
protected virtual Task`1<ODataWriter> CreateFormatResourceSetWriterAsync(string parameterName, IEdmTypeReference expectedItemType);
}
internal class Microsoft.OData.Json.ODataJsonPayloadKindDetectionDeserializer : ODataJsonPropertyAndValueDeserializer {
    internal ODataJsonPayloadKindDetectionDeserializer(ODataJsonInputContext jsonInputContext);
    internal IEnumerable`1<ODataPayloadKind> DetectPayloadKind(ODataPayloadKindDetectionInfo detectionInfo);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPayloadKindDetectionDeserializer/<DetectPayloadKindAsync>d__2")]
internal Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(ODataPayloadKindDetectionInfo detectionInfo);
    private IEnumerable`1<ODataPayloadKind> DetectPayloadKindImplementation(ODataPayloadKindDetectionInfo detectionInfo);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPayloadKindDetectionDeserializer/<DetectPayloadKindImplementationAsync>d__4")]
private Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindImplementationAsync(ODataPayloadKindDetectionInfo detectionInfo);
}
internal class Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer : ODataJsonDeserializer {
    private static object missingPropertyValue;
    private int recursionDepth;
    internal ODataJsonPropertyAndValueDeserializer(ODataJsonInputContext jsonInputContext);
    private static ODataJsonPropertyAndValueDeserializer();
    internal ODataProperty ReadTopLevelProperty(IEdmTypeReference expectedPropertyTypeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadTopLevelPropertyAsync>d__4")]
internal Task`1<ODataProperty> ReadTopLevelPropertyAsync(IEdmTypeReference expectedPropertyTypeReference);
    internal object ReadNonEntityValue(string payloadTypeName, IEdmTypeReference expectedValueTypeReference, PropertyAndAnnotationCollector propertyAndAnnotationCollector, CollectionWithoutExpectedTypeValidator collectionValidator, bool validateNullValue, bool isTopLevelPropertyValue, bool insideResourceValue, string propertyName, Nullable`1<bool> isDynamicProperty);
    internal object ReadCustomInstanceAnnotationValue(PropertyAndAnnotationCollector propertyAndAnnotationCollector, string name);
    internal object ReadODataOrCustomInstanceAnnotationValue(string annotationName, string odataType);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
internal static IEdmTypeReference ResolveUntypedType(JsonNodeType jsonReaderNodeType, object jsonReaderValue, string payloadTypeName, IEdmTypeReference payloadTypeReference, Func`3<object, string, IEdmTypeReference> primitiveTypeResolver, bool readUntypedAsString, bool generateTypeIfMissing);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadNonEntityValueAsync>d__9")]
internal Task`1<object> ReadNonEntityValueAsync(string payloadTypeName, IEdmTypeReference expectedValueTypeReference, PropertyAndAnnotationCollector propertyAndAnnotationCollector, CollectionWithoutExpectedTypeValidator collectionValidator, bool validateNullValue, bool isTopLevelPropertyValue, bool insideResourceValue, string propertyName, Nullable`1<bool> isDynamicProperty);
    internal Task`1<object> ReadCustomInstanceAnnotationValueAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector, string name);
    internal Task`1<object> ReadODataOrCustomInstanceAnnotationValueAsync(string annotationName, string odataType);
    protected string TryReadOrPeekPayloadType(PropertyAndAnnotationCollector propertyAndAnnotationCollector, string propertyName, bool insideResourceValue);
    protected ODataJsonReaderNestedResourceInfo InnerReadUndeclaredProperty(IODataJsonReaderResourceState resourceState, string propertyName, bool isTopLevelPropertyValue);
    protected static void ValidateExpandedNestedResourceInfoPropertyValue(IJsonReader jsonReader, Nullable`1<bool> isCollection, string propertyName, IEdmTypeReference typeReference);
    protected static ODataJsonReaderNestedResourceInfo ReadNonExpandedResourceSetNestedResourceInfo(IODataJsonReaderResourceState resourceState, IEdmStructuralProperty collectionProperty, IEdmStructuredType nestedResourceType, string propertyName);
    protected static ODataJsonReaderNestedResourceInfo ReadNonExpandedResourceNestedResourceInfo(IODataJsonReaderResourceState resourceState, IEdmStructuralProperty complexProperty, IEdmStructuredType nestedResourceType, string propertyName);
    protected static ODataJsonReaderNestedResourceInfo ReadExpandedResourceNestedResourceInfo(IODataJsonReaderResourceState resourceState, IEdmNavigationProperty navigationProperty, string propertyName, IEdmStructuredType propertyType, ODataMessageReaderSettings messageReaderSettings);
    protected static ODataJsonReaderNestedResourceInfo ReadExpandedResourceSetNestedResourceInfo(IODataJsonReaderResourceState resourceState, IEdmNavigationProperty navigationProperty, IEdmStructuredType propertyType, string propertyName, bool isDeltaResourceSet);
    protected static ODataJsonReaderNestedResourceInfo ReadStreamCollectionNestedResourceInfo(IODataJsonReaderResourceState resourceState, IEdmStructuralProperty collectionProperty, string propertyName, IEdmType elementType);
    protected static ODataJsonReaderNestedResourceInfo ReadEntityReferenceLinkForSingletonNavigationLinkInRequest(IODataJsonReaderResourceState resourceState, IEdmNavigationProperty navigationProperty, string propertyName, bool isExpanded);
    protected static ODataJsonReaderNestedResourceInfo ReadEntityReferenceLinksForCollectionNavigationLinkInRequest(IODataJsonReaderResourceState resourceState, IEdmNavigationProperty navigationProperty, string propertyName, bool isExpanded);
    protected static string ValidateDataPropertyTypeNameAnnotation(PropertyAndAnnotationCollector propertyAndAnnotationCollector, string propertyName);
    protected static ODataProperty AddResourceProperty(IODataJsonReaderResourceState resourceState, string propertyName, object propertyValue);
    protected static void AddResourceProperty(IODataJsonReaderResourceState resourceState, string propertyName, ODataPropertyInfo property);
    protected static void AttachODataAnnotations(PropertyAndAnnotationCollector propertyAndAnnotationCollector, string propertyName, ODataPropertyInfo property);
    protected static void AttachCustomAnnotations(PropertyAndAnnotationCollector propertyAndAnnotationCollector, string propertyName, ODataPropertyInfo property);
    protected bool TryReadODataTypeAnnotationValue(string annotationName, String& value);
    protected string ReadODataTypeAnnotationValue();
    protected object ReadTypePropertyAnnotationValue(string propertyAnnotationName);
    protected EdmTypeKind GetNonEntityValueKind();
    private static ODataResourceSet CreateCollectionResourceSet(IODataJsonReaderResourceState resourceState, string propertyName);
    private bool TryReadODataTypeAnnotation(String& payloadTypeName);
    private ODataProperty ReadTopLevelPropertyImplementation(IEdmTypeReference expectedPropertyTypeReference, PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    private IEdmTypeReference UpdateExpectedTypeBasedOnContextUri(IEdmTypeReference expectedPropertyTypeReference);
    private ODataCollectionValue ReadCollectionValue(IEdmCollectionTypeReference collectionValueTypeReference, string payloadTypeName, ODataTypeAnnotation typeAnnotation);
    private object ReadTypeDefinitionValue(bool insideJsonObjectValue, IEdmTypeDefinitionReference expectedValueTypeReference, bool validateNullValue, string propertyName);
    private object ReadPrimitiveValue(bool insideJsonObjectValue, IEdmPrimitiveTypeReference expectedValueTypeReference, bool validateNullValue, string propertyName);
    private object ReadEnumValue(bool insideJsonObjectValue, IEdmEnumTypeReference expectedValueTypeReference, bool validateNullValue, string propertyName);
    private ODataResourceValue ReadResourceValue(bool insideJsonObjectValue, bool insideResourceValue, string propertyName, IEdmStructuredTypeReference structuredTypeReference, string payloadTypeName, PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    private ODataResourceValue ReadResourceValue(IEdmStructuredTypeReference structuredTypeReference, string payloadTypeName, PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
private object ReadNonEntityValueImplementation(string payloadTypeName, IEdmTypeReference expectedTypeReference, PropertyAndAnnotationCollector propertyAndAnnotationCollector, CollectionWithoutExpectedTypeValidator collectionValidator, bool validateNullValue, bool isTopLevelPropertyValue, bool insideResourceValue, string propertyName, Nullable`1<bool> isDynamicProperty);
    private bool TryReadPayloadTypeFromObject(PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool insideResourceValue, String& payloadTypeName);
    private bool ReadingResourceProperty(PropertyAndAnnotationCollector propertyAndAnnotationCollector, IEdmTypeReference expectedPropertyTypeReference, String& payloadTypeName);
    private bool IsTopLevel6xNullValue();
    private void ValidateNoPropertyInNullPayload(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<TryReadOrPeekPayloadTypeAsync>d__46")]
protected Task`1<string> TryReadOrPeekPayloadTypeAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector, string propertyName, bool insideResourceValue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<InnerReadUndeclaredPropertyAsync>d__47")]
protected Task`1<ODataJsonReaderNestedResourceInfo> InnerReadUndeclaredPropertyAsync(IODataJsonReaderResourceState resourceState, string propertyName, bool isTopLevelPropertyValue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ValidateExpandedNestedResourceInfoPropertyValueAsync>d__48")]
protected static Task ValidateExpandedNestedResourceInfoPropertyValueAsync(IJsonReader asyncJsonReader, Nullable`1<bool> isCollection, string propertyName, IEdmTypeReference typeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadODataTypeAnnotationValueAsync>d__49")]
protected Task`1<string> ReadODataTypeAnnotationValueAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<TryReadODataTypeAnnotationValueAsync>d__50")]
protected Task`1<Tuple`2<bool, string>> TryReadODataTypeAnnotationValueAsync(string annotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadTypePropertyAnnotationValueAsync>d__51")]
protected Task`1<object> ReadTypePropertyAnnotationValueAsync(string propertyAnnotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<TryReadODataTypeAnnotationAsync>d__52")]
private Task`1<Tuple`2<bool, string>> TryReadODataTypeAnnotationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadTopLevelPropertyImplementationAsync>d__53")]
private Task`1<ODataProperty> ReadTopLevelPropertyImplementationAsync(IEdmTypeReference expectedPropertyTypeReference, PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadCollectionValueAsync>d__54")]
private Task`1<ODataCollectionValue> ReadCollectionValueAsync(IEdmCollectionTypeReference collectionValueTypeReference, string payloadTypeName, ODataTypeAnnotation typeAnnotation);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadTypeDefinitionValueAsync>d__55")]
private Task`1<object> ReadTypeDefinitionValueAsync(bool insideJsonObjectValue, IEdmTypeDefinitionReference expectedValueTypeReference, bool validateNullValue, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadPrimitiveValueAsync>d__56")]
private Task`1<object> ReadPrimitiveValueAsync(bool insideJsonObjectValue, IEdmPrimitiveTypeReference expectedValueTypeReference, bool validateNullValue, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadEnumValueAsync>d__57")]
private Task`1<object> ReadEnumValueAsync(bool insideJsonObjectValue, IEdmEnumTypeReference expectedValueTypeReference, bool validateNullValue, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadResourceValueAsync>d__58")]
private Task`1<ODataResourceValue> ReadResourceValueAsync(bool insideJsonObjectValue, bool insideResourceValue, string propertyName, IEdmStructuredTypeReference structuredTypeReference, string payloadTypeName, PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadResourceValueAsync>d__59")]
private Task`1<ODataResourceValue> ReadResourceValueAsync(IEdmStructuredTypeReference structuredTypeReference, string payloadTypeName, PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadNonEntityValueImplementationAsync>d__60")]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
private Task`1<object> ReadNonEntityValueImplementationAsync(string payloadTypeName, IEdmTypeReference expectedTypeReference, PropertyAndAnnotationCollector propertyAndAnnotationCollector, CollectionWithoutExpectedTypeValidator collectionValidator, bool validateNullValue, bool isTopLevelPropertyValue, bool insideResourceValue, string propertyName, Nullable`1<bool> isDynamicProperty);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<TryReadPayloadTypeFromObjectAsync>d__61")]
private Task`1<Tuple`2<bool, string>> TryReadPayloadTypeFromObjectAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool insideResourceValue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ReadingResourcePropertyAsync>d__62")]
private Task`1<Tuple`2<bool, string>> ReadingResourcePropertyAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector, IEdmTypeReference expectedPropertyTypeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<IsTopLevel6xNullValueAsync>d__63")]
private Task`1<bool> IsTopLevel6xNullValueAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<ValidateNoPropertyInNullPayloadAsync>d__64")]
private Task ValidateNoPropertyInNullPayloadAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    private void IncreaseRecursionDepth();
    private void DecreaseRecursionDepth();
    [ConditionalAttribute("DEBUG")]
[SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
private void AssertRecursionDepthIsZero();
    [CompilerGeneratedAttribute]
private void <ValidateNoPropertyInNullPayload>b__45_1(PropertyParsingResult propertyParsingResult, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertyAndValueDeserializer/<<ValidateNoPropertyInNullPayloadAsync>b__64_1>d")]
[CompilerGeneratedAttribute]
private Task <ValidateNoPropertyInNullPayloadAsync>b__64_1(PropertyParsingResult propertyParsingResult, string propertyName);
}
internal class Microsoft.OData.Json.ODataJsonPropertySerializer : ODataJsonSerializer {
    private ODataJsonValueSerializer jsonValueSerializer;
    private PropertySerializationInfo currentPropertyInfo;
    internal ODataJsonValueSerializer JsonValueSerializer { get; }
    internal ODataJsonPropertySerializer(ODataJsonOutputContext jsonOutputContext, bool initContextUriBuilder);
    internal ODataJsonValueSerializer get_JsonValueSerializer();
    internal void WriteTopLevelProperty(ODataProperty property);
    internal void WriteProperties(IEdmStructuredType owningType, IEnumerable`1<ODataPropertyInfo> properties, bool isComplexValue, IDuplicatePropertyNameChecker duplicatePropertyNameChecker, ODataResourceMetadataBuilder metadataBuilder);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")]
internal void WriteProperty(ODataPropertyInfo propertyInfo, IEdmStructuredType owningType, bool isTopLevel, IDuplicatePropertyNameChecker duplicatePropertyNameChecker, ODataResourceMetadataBuilder metadataBuilder);
    internal void WritePropertyInfo(ODataPropertyInfo propertyInfo, IEdmStructuredType owningType, bool isTopLevel, IDuplicatePropertyNameChecker duplicatePropertyNameChecker, ODataResourceMetadataBuilder metadataBuilder);
    internal Task WriteTopLevelPropertyAsync(ODataProperty property);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WritePropertiesAsync>d__10")]
internal Task WritePropertiesAsync(IEdmStructuredType owningType, IEnumerable`1<ODataPropertyInfo> properties, bool isComplexValue, IDuplicatePropertyNameChecker duplicatePropertyNameChecker, ODataResourceMetadataBuilder metadataBuilder);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WritePropertyAsync>d__11")]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")]
internal Task WritePropertyAsync(ODataPropertyInfo propertyInfo, IEdmStructuredType owningType, bool isTopLevel, IDuplicatePropertyNameChecker duplicatePropertyNameChecker, ODataResourceMetadataBuilder metadataBuilder);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WritePropertyInfoAsync>d__12")]
internal Task WritePropertyInfoAsync(ODataPropertyInfo propertyInfo, IEdmStructuredType owningType, bool isTopLevel, IDuplicatePropertyNameChecker duplicatePropertyNameChecker, ODataResourceMetadataBuilder metadataBuilder);
    private bool IsOpenProperty(ODataPropertyInfo property);
    private void WriteUntypedValue(ODataUntypedValue untypedValue);
    private void WriteJsonElementProperty(ODataJsonElementValue jsonElementvalue);
    private void WriteStreamValue(IODataStreamReferenceInfo streamInfo, string propertyName, ODataResourceMetadataBuilder metadataBuilder);
    private void WriteInstanceAnnotation(ODataPropertyInfo property, bool isTopLevel, bool isUndeclaredProperty);
    private void WriteODataTypeAnnotation(ODataPropertyInfo property, bool isTopLevel);
    private void WriteStreamInfo(string propertyName, IODataStreamReferenceInfo streamInfo);
    private void WriteNullProperty(ODataPropertyInfo property);
    private void WriteResourceProperty(ODataProperty property, ODataResourceValue resourceValue, bool isOpenPropertyType);
    private void WriteEnumProperty(ODataEnumValue enumValue, bool isOpenPropertyType);
    private void ResolveEnumValueTypeName(ODataEnumValue enumValue, bool isOpenPropertyType);
    private void WriteCollectionProperty(ODataCollectionValue collectionValue, bool isOpenPropertyType);
    private void ResolveCollectionValueTypeName(ODataCollectionValue collectionValue, bool isOpenPropertyType);
    private void WriteStreamProperty(ODataBinaryStreamValue streamValue, bool isOpenPropertyType);
    private void WritePrimitiveProperty(ODataPrimitiveValue primitiveValue, bool isOpenPropertyType);
    private void ResolvePrimitiveValueTypeName(ODataPrimitiveValue primitiveValue, bool isOpenPropertyType);
    private void WritePropertyTypeName();
    private ODataPayloadKind GetPayloadKind();
    private ODataContextUrlInfo GetContextUrlInfo(ODataProperty property);
    private void ValidatePropertyInfo(ODataPropertyInfo propertyInfo, IEdmStructuredType owningType, bool isTopLevel, IDuplicatePropertyNameChecker duplicatePropertyNameChecker);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WriteUntypedValueAsync>d__33")]
private Task WriteUntypedValueAsync(ODataUntypedValue untypedValue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WriteJsonElementPropertyAsync>d__34")]
private Task WriteJsonElementPropertyAsync(ODataJsonElementValue jsonElementvalue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WriteStreamValueAsync>d__35")]
private Task WriteStreamValueAsync(IODataStreamReferenceInfo streamInfo, string propertyName, ODataResourceMetadataBuilder metadataBuilder);
    private Task WriteInstanceAnnotationAsync(ODataPropertyInfo property, bool isTopLevel, bool isUndeclaredProperty);
    private Task WriteODataTypeAnnotationAsync(ODataPropertyInfo property, bool isTopLevel);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WriteStreamInfoAsync>d__38")]
private Task WriteStreamInfoAsync(string propertyName, IODataStreamReferenceInfo streamInfo);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WriteNullPropertyAsync>d__39")]
private Task WriteNullPropertyAsync(ODataPropertyInfo property);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WriteResourcePropertyAsync>d__40")]
private Task WriteResourcePropertyAsync(ODataProperty property, ODataResourceValue resourceValue, bool isOpenPropertyType);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WriteEnumPropertyAsync>d__41")]
private Task WriteEnumPropertyAsync(ODataEnumValue enumValue, bool isOpenPropertyType);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WriteCollectionPropertyAsync>d__42")]
private Task WriteCollectionPropertyAsync(ODataCollectionValue collectionValue, bool isOpenPropertyType);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WriteStreamPropertyAsync>d__43")]
private Task WriteStreamPropertyAsync(ODataBinaryStreamValue streamValue, bool isOpenPropertyType);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonPropertySerializer/<WritePrimitivePropertyAsync>d__44")]
private Task WritePrimitivePropertyAsync(ODataPrimitiveValue primitiveValue, bool isOpenPropertyType);
    private Task WritePropertyTypeNameAsync();
}
internal class Microsoft.OData.Json.ODataJsonReader : ODataReaderCoreAsync {
    private ODataJsonInputContext jsonInputContext;
    private ODataJsonResourceDeserializer jsonResourceDeserializer;
    private JsonTopLevelScope topLevelScope;
    private bool readingParameter;
    private IODataJsonReaderResourceState CurrentResourceState { get; }
    private JsonResourceSetScope CurrentJsonResourceSetScope { get; }
    private JsonNestedResourceInfoScope CurrentJsonNestedResourceInfoScope { get; }
    private ODataNestedResourceInfo ParentNestedInfo { get; }
    internal ODataJsonReader(ODataJsonInputContext jsonInputContext, IEdmNavigationSource navigationSource, IEdmStructuredType expectedResourceType, bool readingResourceSet, bool readingParameter, bool readingDelta, IODataReaderWriterListener listener);
    private IODataJsonReaderResourceState get_CurrentResourceState();
    private JsonResourceSetScope get_CurrentJsonResourceSetScope();
    private JsonNestedResourceInfoScope get_CurrentJsonNestedResourceInfoScope();
    private ODataNestedResourceInfo get_ParentNestedInfo();
    protected virtual bool ReadAtStartImplementation();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadAtStartImplementationAsync>d__14")]
protected virtual Task`1<bool> ReadAtStartImplementationAsync();
    protected virtual bool ReadAtResourceSetStartImplementation();
    protected virtual Task`1<bool> ReadAtResourceSetStartImplementationAsync();
    protected virtual bool ReadAtResourceSetEndImplementation();
    protected virtual Task`1<bool> ReadAtResourceSetEndImplementationAsync();
    protected virtual bool ReadAtResourceStartImplementation();
    protected virtual Task`1<bool> ReadAtResourceStartImplementationAsync();
    protected virtual bool ReadAtResourceEndImplementation();
    protected virtual Task`1<bool> ReadAtResourceEndImplementationAsync();
    protected virtual bool ReadAtPrimitiveImplementation();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadAtPrimitiveImplementationAsync>d__24")]
protected virtual Task`1<bool> ReadAtPrimitiveImplementationAsync();
    protected virtual bool ReadAtNestedPropertyInfoImplementation();
    protected virtual Task`1<bool> ReadAtNestedPropertyInfoImplementationAsync();
    protected virtual bool ReadAtStreamImplementation();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadAtStreamImplementationAsync>d__28")]
protected virtual Task`1<bool> ReadAtStreamImplementationAsync();
    protected virtual Stream CreateReadStreamImplementation();
    protected virtual TextReader CreateTextReaderImplementation();
    protected virtual Task`1<Stream> CreateReadStreamImplementationAsync();
    protected virtual Task`1<TextReader> CreateTextReaderImplementationAsync();
    protected virtual bool ReadAtNestedResourceInfoStartImplementation();
    protected virtual Task`1<bool> ReadAtNestedResourceInfoStartImplementationAsync();
    protected virtual bool ReadAtNestedResourceInfoEndImplementation();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadAtNestedResourceInfoEndImplementationAsync>d__36")]
protected virtual Task`1<bool> ReadAtNestedResourceInfoEndImplementationAsync();
    protected virtual bool ReadAtEntityReferenceLink();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadAtEntityReferenceLinkAsync>d__38")]
protected virtual Task`1<bool> ReadAtEntityReferenceLinkAsync();
    protected virtual bool ReadAtDeltaResourceSetStartImplementation();
    protected virtual Task`1<bool> ReadAtDeltaResourceSetStartImplementationAsync();
    protected virtual bool ReadAtDeltaResourceSetEndImplementation();
    protected virtual Task`1<bool> ReadAtDeltaResourceSetEndImplementationAsync();
    protected virtual bool ReadAtDeletedResourceStartImplementation();
    protected virtual bool ReadAtDeletedResourceEndImplementation();
    protected virtual Task`1<bool> ReadAtDeletedResourceEndImplementationAsync();
    protected virtual bool ReadAtDeltaLinkImplementation();
    protected virtual Task`1<bool> ReadAtDeltaLinkImplementationAsync();
    protected virtual bool ReadAtDeltaDeletedLinkImplementation();
    protected virtual Task`1<bool> ReadAtDeltaDeletedLinkImplementationAsync();
    private bool ReadAtStartImplementationSynchronously(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    private bool ReadAtResourceSetStartImplementationSynchronously();
    private bool ReadAtResourceSetEndImplementationSynchronously();
    private bool ReadAtResourceStartImplementationSynchronously();
    private ODataUri ResolveODataUriFromContextUrl(ODataNestedResourceInfo nestedInfo);
    private bool ReadAtResourceEndImplementationSynchronously();
    private bool ReadAtPrimitiveSynchronously();
    private bool ReadAtDeletedResourceStartImplementationSynchronously();
    private bool ReadAtDeltaLinkImplementationSynchronously();
    private bool ReadAtDeltaDeletedLinkImplementationSynchronously();
    private bool EndDeltaLink(ODataReaderState readerState);
    private bool ReadAtNestedResourceInfoStartImplementationSynchronously();
    private bool ReadAtNestedResourceInfoEndImplementationSynchronously();
    private bool ReadAtNestedPropertyInfoSynchronously();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadAtNestedPropertyInfoAsynchronously>d__64")]
private Task`1<bool> ReadAtNestedPropertyInfoAsynchronously();
    private bool ReadAtStreamSynchronously();
    private bool ReadNextNestedInfo();
    private void ReadNestedInfo(ODataJsonReaderNestedInfo nestedInfo);
    private bool ReadAtEntityReferenceLinkSynchronously();
    private void ReadResourceSetStart(ODataResourceSet resourceSet, SelectedPropertiesNode selectedProperties);
    private void ReadResourceSetEnd();
    private void ReadExpandedNestedResourceInfoStart(ODataNestedResourceInfo nestedResourceInfo);
    private void ReadExpandedNestedResourceInfoEnd(bool isCollection);
    private void ReadResourceSetItemStart(PropertyAndAnnotationCollector propertyAndAnnotationCollector, SelectedPropertiesNode selectedProperties);
    private void ReadDeltaResourceSetStart(ODataDeltaResourceSet deltaResourceSet, SelectedPropertiesNode selectedProperties);
    private void StartReadingResource();
    private void ReadNextResourceSetItem();
    private bool TryReadPrimitiveAsStream(IEdmType resourceType);
    private void ReadNextNestedResourceInfoContentItemInRequest();
    private void StartResource(IEdmNavigationSource source, IEdmTypeReference resourceType, PropertyAndAnnotationCollector propertyAndAnnotationCollector, SelectedPropertiesNode selectedProperties);
    private void StartDeletedResource(ODataDeletedResource deletedResource, IEdmNavigationSource source, IEdmTypeReference resourceType, PropertyAndAnnotationCollector propertyAndAnnotationCollector, SelectedPropertiesNode selectedProperties, bool is40DeletedResource);
    private void StartDeltaLink(ODataReaderState state);
    private void StartNestedResourceInfo(ODataJsonReaderNestedResourceInfo readerNestedResourceInfo);
    private void StartNestedPropertyInfo(ODataJsonReaderNestedPropertyInfo readerNestedPropertyInfo);
    private void StartNestedStreamInfo(ODataJsonReaderStreamInfo readerStreamInfo);
    private bool TryAppendEntitySetKeySegment(ODataPath& odataPath);
    private void ReplaceScope(ODataReaderState state);
    private void EndEntry();
    private void ResolveScopeInfoFromContextUrl();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadAtStartInternalImplementationAsync>d__89")]
private Task`1<bool> ReadAtStartInternalImplementationAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadAtResourceSetStartInternalImplementationAsync>d__90")]
private Task`1<bool> ReadAtResourceSetStartInternalImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadAtResourceSetEndInternalImplementationAsync>d__91")]
private Task`1<bool> ReadAtResourceSetEndInternalImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadAtResourceEndInternalImplementationAsync>d__92")]
private Task`1<bool> ReadAtResourceEndInternalImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadAtNestedResourceInfoStartInternalImplementationAsync>d__93")]
private Task`1<bool> ReadAtNestedResourceInfoStartInternalImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadNextNestedInfoAsync>d__94")]
private Task`1<bool> ReadNextNestedInfoAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadNextNestedResourceInfoContentItemInRequestAsync>d__95")]
private Task ReadNextNestedResourceInfoContentItemInRequestAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<StartDeltaLinkAsync>d__96")]
private Task StartDeltaLinkAsync(ODataReaderState state);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadResourceSetStartAsync>d__97")]
private Task ReadResourceSetStartAsync(ODataResourceSet resourceSet, SelectedPropertiesNode selectedProperties);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadResourceSetEndAsync>d__98")]
private Task ReadResourceSetEndAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadExpandedNestedResourceInfoStartAsync>d__99")]
private Task ReadExpandedNestedResourceInfoStartAsync(ODataNestedResourceInfo nestedResourceInfo);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadResourceSetItemStartAsync>d__100")]
private Task ReadResourceSetItemStartAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector, SelectedPropertiesNode selectedProperties);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadNextResourceSetItemAsync>d__101")]
private Task ReadNextResourceSetItemAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<ReadDeltaResourceSetStartAsync>d__102")]
private Task ReadDeltaResourceSetStartAsync(ODataDeltaResourceSet deltaResourceSet, SelectedPropertiesNode selectedProperties);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<StartReadingResourceAsync>d__103")]
private Task StartReadingResourceAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReader/<EndDeltaLinkAsync>d__104")]
private Task`1<bool> EndDeltaLinkAsync(ODataReaderState readerState);
}
internal static class Microsoft.OData.Json.ODataJsonReaderCoreUtils : object {
    internal static ISpatial ReadSpatialValue(IJsonReader jsonReader, bool insideJsonObjectValue, ODataInputContext inputContext, IEdmPrimitiveTypeReference expectedValueTypeReference, bool validateNullValue, int recursionDepth, string propertyName);
    internal static bool TryReadNullValue(IJsonReader jsonReader, ODataInputContext inputContext, IEdmTypeReference expectedTypeReference, bool validateNullValue, string propertyName, Nullable`1<bool> isDynamicProperty);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReaderCoreUtils/<ReadSpatialValueAsync>d__2")]
internal static Task`1<ISpatial> ReadSpatialValueAsync(IJsonReader jsonReader, bool insideJsonObjectValue, ODataInputContext inputContext, IEdmPrimitiveTypeReference expectedValueTypeReference, bool validateNullValue, int recursionDepth, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReaderCoreUtils/<TryReadNullValueAsync>d__3")]
internal static ValueTask`1<bool> TryReadNullValueAsync(IJsonReader jsonReader, ODataInputContext inputContext, IEdmTypeReference expectedTypeReference, bool validateNullValue, string propertyName, Nullable`1<bool> isDynamicProperty);
    private static IDictionary`2<string, object> ReadObjectValue(IJsonReader jsonReader, bool insideJsonObjectValue, ODataInputContext inputContext, int recursionDepth);
    private static IEnumerable`1<object> ReadArrayValue(IJsonReader jsonReader, ODataInputContext inputContext, int recursionDepth);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReaderCoreUtils/<ReadObjectValueAsync>d__6")]
private static Task`1<Dictionary`2<string, object>> ReadObjectValueAsync(IJsonReader jsonReader, bool insideJsonObjectValue, ODataInputContext inputContext, int recursionDepth);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonReaderCoreUtils/<ReadArrayValueAsync>d__7")]
private static Task`1<List`1<object>> ReadArrayValueAsync(IJsonReader jsonReader, ODataInputContext inputContext, int recursionDepth);
}
internal abstract class Microsoft.OData.Json.ODataJsonReaderNestedInfo : object {
    [CompilerGeneratedAttribute]
private IEdmProperty <NestedProperty>k__BackingField;
    internal IEdmProperty NestedProperty { get; private set; }
    internal ODataJsonReaderNestedInfo(IEdmProperty nestedProperty);
    [CompilerGeneratedAttribute]
internal IEdmProperty get_NestedProperty();
    [CompilerGeneratedAttribute]
private void set_NestedProperty(IEdmProperty value);
}
internal class Microsoft.OData.Json.ODataJsonReaderNestedPropertyInfo : ODataJsonReaderNestedInfo {
    [CompilerGeneratedAttribute]
private ODataPropertyInfo <NestedPropertyInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WithValue>k__BackingField;
    internal ODataPropertyInfo NestedPropertyInfo { get; }
    public bool WithValue { get; }
    internal ODataJsonReaderNestedPropertyInfo(ODataPropertyInfo nestedPropertyInfo, IEdmProperty nestedProperty, bool withValue);
    [CompilerGeneratedAttribute]
internal ODataPropertyInfo get_NestedPropertyInfo();
    [CompilerGeneratedAttribute]
public bool get_WithValue();
}
internal class Microsoft.OData.Json.ODataJsonReaderNestedResourceInfo : ODataJsonReaderNestedInfo {
    private ODataNestedResourceInfo nestedResourceInfo;
    private bool hasValue;
    private ODataResourceSetBase resourceSet;
    private LinkedList`1<ODataEntityReferenceLink> entityReferenceLinks;
    [CompilerGeneratedAttribute]
private IEdmTypeReference <NestedResourceTypeReference>k__BackingField;
    internal ODataNestedResourceInfo NestedResourceInfo { get; }
    internal IEdmNavigationProperty NavigationProperty { get; }
    internal IEdmStructuralProperty StructuralProperty { get; }
    internal bool HasValue { get; }
    internal ODataResourceSetBase NestedResourceSet { get; }
    internal IEdmTypeReference NestedResourceTypeReference { get; private set; }
    internal bool HasEntityReferenceLink { get; }
    private ODataJsonReaderNestedResourceInfo(ODataNestedResourceInfo nestedResourceInfo, IEdmProperty nestedProperty, bool isExpanded);
    private ODataJsonReaderNestedResourceInfo(ODataNestedResourceInfo nestedResourceInfo, IEdmProperty nestedProperty, IEdmType nestedResourceType, bool isExpanded);
    internal ODataNestedResourceInfo get_NestedResourceInfo();
    internal IEdmNavigationProperty get_NavigationProperty();
    internal IEdmStructuralProperty get_StructuralProperty();
    internal bool get_HasValue();
    internal ODataResourceSetBase get_NestedResourceSet();
    [CompilerGeneratedAttribute]
internal IEdmTypeReference get_NestedResourceTypeReference();
    [CompilerGeneratedAttribute]
private void set_NestedResourceTypeReference(IEdmTypeReference value);
    internal bool get_HasEntityReferenceLink();
    internal static ODataJsonReaderNestedResourceInfo CreateDeferredLinkInfo(ODataNestedResourceInfo nestedResourceInfo, IEdmNavigationProperty navigationProperty);
    internal static ODataJsonReaderNestedResourceInfo CreateResourceReaderNestedResourceInfo(ODataNestedResourceInfo nestedResourceInfo, IEdmProperty nestedProperty, IEdmStructuredType nestedResourceType);
    internal static ODataJsonReaderNestedResourceInfo CreateResourceSetReaderNestedResourceInfo(ODataNestedResourceInfo nestedResourceInfo, IEdmProperty nestedProperty, IEdmType nestedResourceType, ODataResourceSetBase resourceSet);
    internal static ODataJsonReaderNestedResourceInfo CreateSingletonEntityReferenceLinkInfo(ODataNestedResourceInfo nestedResourceInfo, IEdmNavigationProperty navigationProperty, ODataEntityReferenceLink entityReferenceLink, bool isExpanded);
    internal static ODataJsonReaderNestedResourceInfo CreateCollectionEntityReferenceLinksInfo(ODataNestedResourceInfo nestedResourceInfo, IEdmNavigationProperty navigationProperty, LinkedList`1<ODataEntityReferenceLink> entityReferenceLinks, bool isExpanded);
    internal static ODataJsonReaderNestedResourceInfo CreateProjectedNestedResourceInfo(IEdmNavigationProperty navigationProperty);
    internal ODataEntityReferenceLink ReportEntityReferenceLink();
}
internal class Microsoft.OData.Json.ODataJsonReaderStreamInfo : object {
    private EdmPrimitiveTypeKind primitiveTypeKind;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    internal EdmPrimitiveTypeKind PrimitiveTypeKind { get; internal set; }
    internal string ContentType { get; private set; }
    internal ODataJsonReaderStreamInfo(EdmPrimitiveTypeKind primitiveTypeKind);
    internal ODataJsonReaderStreamInfo(EdmPrimitiveTypeKind primitiveTypeKind, string contentType);
    internal EdmPrimitiveTypeKind get_PrimitiveTypeKind();
    internal void set_PrimitiveTypeKind(EdmPrimitiveTypeKind value);
    [CompilerGeneratedAttribute]
internal string get_ContentType();
    [CompilerGeneratedAttribute]
private void set_ContentType(string value);
}
internal static class Microsoft.OData.Json.ODataJsonReaderUtils : object {
    internal static bool ErrorPropertyNotFound(ErrorPropertyBitMask& propertiesFoundBitField, ErrorPropertyBitMask propertyFoundBitMask);
    internal static object ConvertValue(object value, IEdmPrimitiveTypeReference primitiveTypeReference, ODataMessageReaderSettings messageReaderSettings, bool validateNullValue, string propertyName, ODataPayloadValueConverter converter);
    internal static void EnsureInstance(T& instance);
    internal static bool IsODataAnnotationName(string propertyName);
    internal static bool IsAnnotationProperty(string propertyName);
    internal static void ValidateAnnotationValue(object propertyValue, string annotationName);
    internal static string GetPayloadTypeName(object payloadItem);
}
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")]
internal class Microsoft.OData.Json.ODataJsonResourceDeserializer : ODataJsonPropertyAndValueDeserializer {
    internal ODataJsonResourceDeserializer(ODataJsonInputContext jsonInputContext);
    internal void ReadResourceSetContentStart();
    internal void ReadResourceSetContentEnd();
    internal void ReadResourceTypeName(IODataJsonReaderResourceState resourceState);
    internal ODataDeletedResource ReadDeletedResource();
    internal ODataDeletedResource ReadDeletedEntry();
    internal void ReadDeltaLinkSource(ODataDeltaLinkBase link);
    internal void ReadDeltaLinkRelationship(ODataDeltaLinkBase link);
    internal void ReadDeltaLinkTarget(ODataDeltaLinkBase link);
    internal ODataJsonReaderNestedInfo ReadResourceContent(IODataJsonReaderResourceState resourceState);
    internal object ReadODataOrCustomInstanceAnnotationValue(IODataJsonReaderResourceState resourceState, PropertyParsingResult propertyParsingResult, string annotationName);
    internal void ValidateMediaEntity(IODataJsonReaderResourceState resourceState);
    internal void ReadTopLevelResourceSetAnnotations(ODataResourceSetBase resourceSet, PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool forResourceSetStart, bool readAllResourceSetProperties);
    internal void ReadODataOrCustomInstanceAnnotationValue(ODataResourceSetBase resourceSet, PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool forResourceSetStart, bool readAllResourceSetProperties, PropertyParsingResult propertyParseResult, string annotationName);
    internal object ReadEntryPropertyAnnotationValue(string propertyAnnotationName);
    internal object ReadEntryInstanceAnnotation(string annotationName, bool anyPropertyFound, bool typeAnnotationFound, PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
internal void ApplyEntryInstanceAnnotation(IODataJsonReaderResourceState resourceState, string annotationName, object annotationValue);
    internal void ReadAndApplyResourceSetInstanceAnnotationValue(string annotationName, ODataResourceSetBase resourceSet, PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    internal ODataJsonReaderNestedInfo ReadPropertyWithoutValue(IODataJsonReaderResourceState resourceState, string propertyName);
    internal void ReadNextLinkAnnotationAtResourceSetEnd(ODataResourceSetBase resourceSet, ODataJsonReaderNestedResourceInfo expandedNestedResourceInfo, PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    private static ODataJsonReaderNestedResourceInfo ReadDeferredNestedResourceInfo(IODataJsonReaderResourceState resourceState, string navigationPropertyName, IEdmNavigationProperty navigationProperty);
    private void ReadExpandedResourceSetAnnotationsAtResourceSetEnd(ODataResourceSetBase resourceSet, ODataJsonReaderNestedResourceInfo expandedNestedResourceInfo);
    private void SetEntryMediaResource(IODataJsonReaderResourceState resourceState, ODataStreamReferenceValue mediaResource);
    private ODataJsonReaderNestedInfo ReadPropertyWithValue(IODataJsonReaderResourceState resourceState, string propertyName, bool isDeltaResourceSet);
    private ODataJsonReaderNestedInfo TryReadAsStream(IODataJsonReaderResourceState resourceState, IEdmStructuralProperty property, IEdmTypeReference propertyType, string propertyName);
    private void ReadOverPropertyName();
    private static ODataJsonReaderNestedPropertyInfo ReadNestedPropertyInfoWithoutValue(IODataJsonReaderResourceState resourceState, string propertyName, IEdmProperty property);
    private static bool IsJsonStream(ODataStreamPropertyInfo streamPropertyInfo);
    private void ReadEntryDataProperty(IODataJsonReaderResourceState resourceState, IEdmProperty edmProperty, string propertyTypeName);
    private ODataJsonReaderNestedInfo InnerReadUndeclaredProperty(IODataJsonReaderResourceState resourceState, IEdmStructuredType owningStructuredType, string propertyName, bool propertyWithValue);
    private ODataJsonReaderNestedInfo ReadUndeclaredProperty(IODataJsonReaderResourceState resourceState, string propertyName, bool propertyWithValue);
    private ODataStreamReferenceValue ReadStreamPropertyValue(IODataJsonReaderResourceState resourceState, string streamPropertyName);
    private ODataStreamPropertyInfo ReadStreamPropertyInfo(IODataJsonReaderResourceState resourceState, string streamPropertyName);
    private void ReadStreamInfo(IODataStreamReferenceInfo streamInfo, IODataJsonReaderResourceState resourceState, string streamPropertyName);
    private void ReadSingleOperationValue(IODataJsonOperationsDeserializerContext readerContext, IODataJsonReaderResourceState resourceState, string metadataReferencePropertyName, bool insideArray);
    private void ReadSingleOperationValue(ODataResourceSet resourceSet, string metadataReferencePropertyName, bool insideArray);
    private void SetMetadataBuilder(IODataJsonReaderResourceState resourceState, ODataOperation operation);
    private ODataOperation CreateODataOperationAndAddToEntry(IODataJsonOperationsDeserializerContext readerContext, string metadataReferencePropertyName);
    private ODataOperation CreateODataOperationAndAddToResourceSet(ODataResourceSet resourceSet, string metadataReferencePropertyName);
    private void ReadMetadataReferencePropertyValue(IODataJsonReaderResourceState resourceState, string metadataReferencePropertyName);
    private void ReadMetadataReferencePropertyValue(ODataResourceSet resourceSet, string metadataReferencePropertyName);
    private void ValidateCanReadMetadataReferenceProperty();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadResourceSetContentStartAsync>d__43")]
internal Task ReadResourceSetContentStartAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadResourceSetContentEndAsync>d__44")]
internal Task ReadResourceSetContentEndAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadResourceTypeNameAsync>d__45")]
internal Task ReadResourceTypeNameAsync(IODataJsonReaderResourceState resourceState);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadDeletedResourceAsync>d__46")]
internal Task`1<ODataDeletedResource> ReadDeletedResourceAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadDeletedEntryAsync>d__47")]
internal Task`1<ODataDeletedResource> ReadDeletedEntryAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadDeltaLinkSourceAsync>d__48")]
internal Task ReadDeltaLinkSourceAsync(ODataDeltaLinkBase link);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadDeltaLinkRelationshipAsync>d__49")]
internal Task ReadDeltaLinkRelationshipAsync(ODataDeltaLinkBase link);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadDeltaLinkTargetAsync>d__50")]
internal Task ReadDeltaLinkTargetAsync(ODataDeltaLinkBase link);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadResourceContentAsync>d__51")]
internal Task`1<ODataJsonReaderNestedInfo> ReadResourceContentAsync(IODataJsonReaderResourceState resourceState);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadODataOrCustomInstanceAnnotationValueAsync>d__52")]
internal Task`1<object> ReadODataOrCustomInstanceAnnotationValueAsync(IODataJsonReaderResourceState resourceState, PropertyParsingResult propertyParsingResult, string annotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadTopLevelResourceSetAnnotationsAsync>d__53")]
internal Task ReadTopLevelResourceSetAnnotationsAsync(ODataResourceSetBase resourceSet, PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool forResourceSetStart, bool readAllResourceSetProperties);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadODataOrCustomInstanceAnnotationValueAsync>d__54")]
internal Task ReadODataOrCustomInstanceAnnotationValueAsync(ODataResourceSetBase resourceSet, PropertyAndAnnotationCollector propertyAndAnnotationCollector, bool forResourceSetStart, bool readAllResourceSetProperties, PropertyParsingResult propertyParseResult, string annotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadEntryPropertyAnnotationValueAsync>d__55")]
internal Task`1<object> ReadEntryPropertyAnnotationValueAsync(string propertyAnnotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadEntryInstanceAnnotationAsync>d__56")]
internal Task`1<object> ReadEntryInstanceAnnotationAsync(string annotationName, bool anyPropertyFound, bool typeAnnotationFound, PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadAndApplyResourceSetInstanceAnnotationValueAsync>d__57")]
internal Task ReadAndApplyResourceSetInstanceAnnotationValueAsync(string annotationName, ODataResourceSetBase resourceSet, PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadPropertyWithoutValueAsync>d__58")]
internal Task`1<ODataJsonReaderNestedInfo> ReadPropertyWithoutValueAsync(IODataJsonReaderResourceState resourceState, string propertyName);
    internal Task ReadNextLinkAnnotationAtResourceSetEndAsync(ODataResourceSetBase resourceSet, ODataJsonReaderNestedResourceInfo expandedNestedResourceInfo, PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadExpandedResourceSetAnnotationsAtResourceSetEndAsync>d__60")]
private Task ReadExpandedResourceSetAnnotationsAtResourceSetEndAsync(ODataResourceSetBase resourceSet, ODataJsonReaderNestedResourceInfo expandedNestedResourceInfo);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadPropertyWithValueAsync>d__61")]
private Task`1<ODataJsonReaderNestedInfo> ReadPropertyWithValueAsync(IODataJsonReaderResourceState resourceState, string propertyName, bool isDeltaResourceSet);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<TryReadAsStreamAsync>d__62")]
private Task`1<ODataJsonReaderNestedInfo> TryReadAsStreamAsync(IODataJsonReaderResourceState resourceState, IEdmStructuralProperty property, IEdmTypeReference propertyType, string propertyName);
    private Task ReadOverPropertyNameAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadEntryDataPropertyAsync>d__64")]
private Task ReadEntryDataPropertyAsync(IODataJsonReaderResourceState resourceState, IEdmProperty edmProperty, string propertyTypeName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<InnerReadUndeclaredPropertyAsync>d__65")]
private Task`1<ODataJsonReaderNestedInfo> InnerReadUndeclaredPropertyAsync(IODataJsonReaderResourceState resourceState, IEdmStructuredType owningStructuredType, string propertyName, bool propertyWithValue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadUndeclaredPropertyAsync>d__66")]
private Task`1<ODataJsonReaderNestedInfo> ReadUndeclaredPropertyAsync(IODataJsonReaderResourceState resourceState, string propertyName, bool propertyWithValue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadSingleOperationValueAsync>d__67")]
private Task ReadSingleOperationValueAsync(IODataJsonOperationsDeserializerContext readerContext, IODataJsonReaderResourceState resourceState, string metadataReferencePropertyName, bool insideArray);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadSingleOperationValueAsync>d__68")]
private Task ReadSingleOperationValueAsync(ODataResourceSet resourceSet, string metadataReferencePropertyName, bool insideArray);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadMetadataReferencePropertyValueAsync>d__69")]
private Task ReadMetadataReferencePropertyValueAsync(IODataJsonReaderResourceState resourceState, string metadataReferencePropertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceDeserializer/<ReadMetadataReferencePropertyValueAsync>d__70")]
private Task ReadMetadataReferencePropertyValueAsync(ODataResourceSet resourceSet, string metadataReferencePropertyName);
}
internal class Microsoft.OData.Json.ODataJsonResourceSerializer : ODataJsonPropertySerializer {
    private Uri MetadataDocumentBaseUri { get; }
    internal ODataJsonResourceSerializer(ODataJsonOutputContext jsonOutputContext);
    private Uri get_MetadataDocumentBaseUri();
    internal void WriteResourceSetStartMetadataProperties(ODataResourceSet resourceSet, string propertyName, string expectedResourceTypeName, bool isUndeclared);
    internal void WriteResourceStartMetadataProperties(IODataJsonWriterResourceState resourceState);
    internal void WriteResourceMetadataProperties(IODataJsonWriterResourceState resourceState);
    internal void WriteResourceEndMetadataProperties(IODataJsonWriterResourceState resourceState, IDuplicatePropertyNameChecker duplicatePropertyNameChecker);
    internal void WriteNavigationLinkMetadata(ODataNestedResourceInfo nestedResourceInfo, IDuplicatePropertyNameChecker duplicatePropertyNameChecker);
    internal void WriteNestedResourceInfoContextUrl(ODataNestedResourceInfo nestedResourceInfo, ODataContextUrlInfo contextUrlInfo);
    internal void WriteOperations(IEnumerable`1<ODataOperation> operations, bool isAction);
    internal ODataContextUrlInfo WriteDeltaContextUri(ODataResourceTypeContext typeContext, ODataDeltaKind kind, ODataContextUrlInfo parentContextUrlInfo);
    internal ODataContextUrlInfo WriteResourceContextUri(ODataResourceTypeContext typeContext, ODataContextUrlInfo parentContextUrlInfo);
    internal ODataContextUrlInfo WriteResourceSetContextUri(ODataResourceTypeContext typeContext);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceSerializer/<WriteResourceSetStartMetadataPropertiesAsync>d__13")]
internal Task WriteResourceSetStartMetadataPropertiesAsync(ODataResourceSet resourceSet, string propertyName, string expectedResourceTypeName, bool isUndeclared);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceSerializer/<WriteResourceStartMetadataPropertiesAsync>d__14")]
internal Task WriteResourceStartMetadataPropertiesAsync(IODataJsonWriterResourceState resourceState);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceSerializer/<WriteResourceMetadataPropertiesAsync>d__15")]
internal Task WriteResourceMetadataPropertiesAsync(IODataJsonWriterResourceState resourceState);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceSerializer/<WriteResourceEndMetadataPropertiesAsync>d__16")]
internal Task WriteResourceEndMetadataPropertiesAsync(IODataJsonWriterResourceState resourceState, IDuplicatePropertyNameChecker duplicatePropertyNameChecker);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceSerializer/<WriteNavigationLinkMetadataAsync>d__17")]
internal Task WriteNavigationLinkMetadataAsync(ODataNestedResourceInfo nestedResourceInfo, IDuplicatePropertyNameChecker duplicatePropertyNameChecker);
    internal Task WriteNestedResourceInfoContextUrlAsync(ODataNestedResourceInfo nestedResourceInfo, ODataContextUrlInfo contextUrlInfo);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceSerializer/<WriteOperationsAsync>d__19")]
internal Task WriteOperationsAsync(IEnumerable`1<ODataOperation> operations, bool isAction);
    internal Task`1<ODataContextUrlInfo> WriteDeltaContextUriAsync(ODataResourceTypeContext typeContext, ODataDeltaKind kind, ODataContextUrlInfo parentContextUrlInfo);
    internal Task`1<ODataContextUrlInfo> WriteResourceContextUriAsync(ODataResourceTypeContext typeContext, ODataContextUrlInfo parentContextUrlInfo);
    internal Task`1<ODataContextUrlInfo> WriteResourceSetContextUriAsync(ODataResourceTypeContext typeContext);
    private void WriteAssociationLink(string propertyName, Uri associationLinkUrl);
    private string GetOperationMetadataString(ODataOperation operation);
    private string GetOperationTargetUriString(ODataOperation operation);
    private void ValidateOperationMetadataGroup(IGrouping`2<string, ODataOperation> operations);
    private void WriteOperationMetadataGroup(IGrouping`2<string, ODataOperation> operations);
    private void WriteOperation(ODataOperation operation);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceSerializer/<WriteAssociationLinkAsync>d__29")]
private Task WriteAssociationLinkAsync(string propertyName, Uri associationLinkUrl);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceSerializer/<WriteOperationMetadataGroupAsync>d__30")]
private Task WriteOperationMetadataGroupAsync(IGrouping`2<string, ODataOperation> operations);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonResourceSerializer/<WriteOperationAsync>d__31")]
private Task WriteOperationAsync(ODataOperation operation);
    private string GetExpectedResourceTypeName(IODataJsonWriterResourceState resourceState);
    private string GetEditLinkForWriting(ODataResourceBase resource);
    private string GetReadLinkForWriting(ODataResourceBase resource);
    private string GetEditLinkForWriting(ODataStreamReferenceValue mediaResource);
    private string GetReadLinkForWriting(ODataStreamReferenceValue mediaResource);
}
internal class Microsoft.OData.Json.ODataJsonSerializer : ODataSerializer {
    protected ODataContextUriBuilder ContextUriBuilder;
    private ODataJsonOutputContext jsonOutputContext;
    private SimpleLazy`1<JsonInstanceAnnotationWriter> instanceAnnotationWriter;
    private SimpleLazy`1<JsonODataAnnotationWriter> odataAnnotationWriter;
    private bool allowRelativeUri;
    internal ODataJsonOutputContext JsonOutputContext { get; }
    internal IJsonWriter JsonWriter { get; }
    internal JsonInstanceAnnotationWriter InstanceAnnotationWriter { get; }
    internal JsonODataAnnotationWriter ODataAnnotationWriter { get; }
    internal ODataJsonSerializer(ODataJsonOutputContext jsonOutputContext, bool initContextUriBuilder);
    internal ODataJsonOutputContext get_JsonOutputContext();
    internal IJsonWriter get_JsonWriter();
    internal JsonInstanceAnnotationWriter get_InstanceAnnotationWriter();
    internal JsonODataAnnotationWriter get_ODataAnnotationWriter();
    internal void WritePayloadStart();
    internal void WritePayloadEnd();
    internal ODataContextUrlInfo WriteContextUriProperty(ODataPayloadKind payloadKind, Func`1<ODataContextUrlInfo> contextUrlInfoGen, ODataContextUrlInfo parentContextUrlInfo, string propertyName);
    internal void WriteTopLevelPayload(Action payloadWriterAction);
    internal void WriteTopLevelError(ODataError error, bool includeDebugInformation);
    internal Task WritePayloadStartAsync();
    internal Task WritePayloadEndAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonSerializer/<WriteContextUriPropertyAsync>d__21")]
internal Task`1<ODataContextUrlInfo> WriteContextUriPropertyAsync(ODataPayloadKind payloadKind, Func`1<ODataContextUrlInfo> contextUrlInfoGen, ODataContextUrlInfo parentContextUrlInfo, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonSerializer/<WriteTopLevelPayloadAsync>d__22")]
internal Task WriteTopLevelPayloadAsync(Func`1<Task> payloadWriterFunc);
    internal Task WriteTopLevelErrorAsync(ODataError error, bool includeDebugInformation);
    internal string UriToString(Uri uri);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonSerializer/<WriteContextUriPropertyAsync>d__25`1")]
protected Task`1<ODataContextUrlInfo> WriteContextUriPropertyAsync(ODataPayloadKind payloadKind, Func`2<TArg, ODataContextUrlInfo> contextUrlInfoGen, TArg arg, ODataContextUrlInfo parentContextUrlInfo, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonSerializer/<WriteContextUriPropertyAsync>d__26`2")]
protected Task`1<ODataContextUrlInfo> WriteContextUriPropertyAsync(ODataPayloadKind payloadKind, Func`3<TArg1, TArg2, ODataContextUrlInfo> contextUrlInfoGen, TArg1 arg1, TArg2 arg2, ODataContextUrlInfo parentContextUrlInfo, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonSerializer/<WriteContextUriPropertyAsync>d__27`3")]
protected Task`1<ODataContextUrlInfo> WriteContextUriPropertyAsync(ODataPayloadKind payloadKind, Func`4<TArg1, TArg2, TArg3, ODataContextUrlInfo> contextUrlInfoGen, TArg1 arg1, TArg2 arg2, TArg3 arg3, ODataContextUrlInfo parentContextUrlInfo, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonSerializer/<WriteContextUriPropertyAsync>d__28`4")]
protected Task`1<ODataContextUrlInfo> WriteContextUriPropertyAsync(ODataPayloadKind payloadKind, Func`5<TArg1, TArg2, TArg3, TArg4, ODataContextUrlInfo> contextUrlInfoGen, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4, ODataContextUrlInfo parentContextUrlInfo, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonSerializer/<WriteTopLevelPayloadAsync>d__29`1")]
protected Task WriteTopLevelPayloadAsync(Func`2<TArg, Task> payloadWriterFunc, TArg arg);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonSerializer/<WriteTopLevelPayloadAsync>d__30`2")]
protected Task WriteTopLevelPayloadAsync(Func`3<TArg1, TArg2, Task> payloadWriterFunc, TArg1 arg1, TArg2 arg2);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonSerializer/<WriteTopLevelPayloadAsync>d__31`3")]
protected Task WriteTopLevelPayloadAsync(Func`4<TArg1, TArg2, TArg3, Task> payloadWriterFunc, TArg1 arg1, TArg2 arg2, TArg3 arg3);
    private bool IsJsonNoMetadataLevel();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonSerializer/<WriteContextUriPropertyImplementationAsync>d__33")]
private Task`1<ODataContextUrlInfo> WriteContextUriPropertyImplementationAsync(ODataPayloadKind payloadKind, ODataContextUrlInfo parentContextUrlInfo, ODataContextUrlInfo contextUrlInfo, string propertyName);
    [CompilerGeneratedAttribute]
private JsonInstanceAnnotationWriter <.ctor>b__5_0();
    [CompilerGeneratedAttribute]
private JsonODataAnnotationWriter <.ctor>b__5_1();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonSerializer/<<WritePayloadStartAsync>g__WritePayloadStartInnerAsync|19_0>d")]
[CompilerGeneratedAttribute]
internal static Task <WritePayloadStartAsync>g__WritePayloadStartInnerAsync|19_0(IJsonWriter localJsonWriter, string jsonPCallback);
}
internal class Microsoft.OData.Json.ODataJsonServiceDocumentDeserializer : ODataJsonDeserializer {
    internal ODataJsonServiceDocumentDeserializer(ODataJsonInputContext jsonInputContext);
    internal ODataServiceDocument ReadServiceDocument();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonServiceDocumentDeserializer/<ReadServiceDocumentAsync>d__2")]
internal Task`1<ODataServiceDocument> ReadServiceDocumentAsync();
    private ODataServiceDocument ReadServiceDocumentImplementation(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    private ODataServiceDocumentElement ReadServiceDocumentElement(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonServiceDocumentDeserializer/<ReadServiceDocumentImplementationAsync>d__5")]
private Task`1<ODataServiceDocument> ReadServiceDocumentImplementationAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonServiceDocumentDeserializer/<ReadServiceDocumentElementAsync>d__6")]
private Task`1<ODataServiceDocumentElement> ReadServiceDocumentElementAsync(PropertyAndAnnotationCollector propertyAndAnnotationCollector);
    private static ODataServiceDocumentElement CreateServiceDocumentElement(String[] kind);
    private static void ValidateServiceDocumentElementHasNoRepeatedProperty(string property, String[] propertyValues);
    private static void ValidateServiceDocumentElementHasRequiredProperty(string property, String[] propertyValues);
}
internal class Microsoft.OData.Json.ODataJsonServiceDocumentSerializer : ODataJsonSerializer {
    internal ODataJsonServiceDocumentSerializer(ODataJsonOutputContext jsonOutputContext);
    internal void WriteServiceDocument(ODataServiceDocument serviceDocument);
    private void WriteServiceDocumentElement(ODataServiceDocumentElement serviceDocumentElement, string kind);
    internal Task WriteServiceDocumentAsync(ODataServiceDocument serviceDocument);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonServiceDocumentSerializer/<WriteServiceDocumentElementAsync>d__4")]
private Task WriteServiceDocumentElementAsync(ODataServiceDocumentElement serviceDocumentElement, string kind);
}
internal static class Microsoft.OData.Json.ODataJsonUtils : object {
    private static Char[] CharactersToTrimFromParameters;
    private static ODataJsonUtils();
    internal static bool IsMetadataReferenceProperty(string propertyName);
    internal static string GetFullyQualifiedOperationName(Uri metadataDocumentUri, string metadataReferencePropertyName, String& parameterNames);
    internal static string GetUriFragmentFromMetadataReferencePropertyName(Uri metadataDocumentUri, string propertyName);
    internal static Uri GetAbsoluteUriFromMetadataReferencePropertyName(Uri metadataDocumentUri, string propertyName);
    internal static string GetMetadataReferenceName(IEdmModel model, IEdmOperation operation);
    internal static ODataOperation CreateODataOperation(Uri metadataDocumentUri, string metadataReferencePropertyName, IEdmOperation edmOperation, Boolean& isAction);
}
internal static class Microsoft.OData.Json.ODataJsonValidationUtils : object {
    internal static void ValidateMetadataReferencePropertyName(Uri metadataDocumentUri, string propertyName);
    internal static void ValidateOperation(Uri metadataDocumentUri, ODataOperation operation);
    internal static bool IsOpenMetadataReferencePropertyName(Uri metadataDocumentUri, string propertyName);
    internal static void ValidateOperationPropertyValueIsNotNull(object propertyValue, string propertyName, string metadata);
}
internal class Microsoft.OData.Json.ODataJsonValueSerializer : ODataJsonSerializer {
    private int recursionDepth;
    private ODataJsonPropertySerializer propertySerializer;
    private ODataJsonPropertySerializer PropertySerializer { get; }
    internal ODataJsonValueSerializer(ODataJsonPropertySerializer propertySerializer, bool initContextUriBuilder);
    internal ODataJsonValueSerializer(ODataJsonOutputContext outputContext, bool initContextUriBuilder);
    private ODataJsonPropertySerializer get_PropertySerializer();
    public virtual void WriteNullValue();
    public virtual void WriteEnumValue(ODataEnumValue value, IEdmTypeReference expectedTypeReference);
    public virtual void WriteResourceValue(ODataResourceValue resourceValue, IEdmTypeReference metadataTypeReference, bool isOpenPropertyType, IDuplicatePropertyNameChecker duplicatePropertyNamesChecker);
    public virtual void WriteCollectionValue(ODataCollectionValue collectionValue, IEdmTypeReference metadataTypeReference, IEdmTypeReference valueTypeReference, bool isTopLevelProperty, bool isInUri, bool isOpenPropertyType);
    public virtual void WritePrimitiveValue(object value, IEdmTypeReference expectedTypeReference);
    public virtual void WritePrimitiveValue(object value, IEdmTypeReference actualTypeReference, IEdmTypeReference expectedTypeReference);
    public virtual void WriteUntypedValue(ODataUntypedValue value);
    public virtual void WriteStreamValue(ODataBinaryStreamValue streamValue);
    public virtual Task WriteNullValueAsync();
    public virtual Task WriteEnumValueAsync(ODataEnumValue value, IEdmTypeReference expectedTypeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonValueSerializer/<WriteResourceValueAsync>d__16")]
public virtual Task WriteResourceValueAsync(ODataResourceValue resourceValue, IEdmTypeReference metadataTypeReference, bool isOpenPropertyType, IDuplicatePropertyNameChecker duplicatePropertyNamesChecker);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonValueSerializer/<WriteCollectionValueAsync>d__17")]
public virtual Task WriteCollectionValueAsync(ODataCollectionValue collectionValue, IEdmTypeReference metadataTypeReference, IEdmTypeReference valueTypeReference, bool isTopLevelProperty, bool isInUri, bool isOpenPropertyType);
    public virtual Task WritePrimitiveValueAsync(object value, IEdmTypeReference expectedTypeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonValueSerializer/<WritePrimitiveValueAsync>d__19")]
public virtual Task WritePrimitiveValueAsync(object value, IEdmTypeReference actualTypeReference, IEdmTypeReference expectedTypeReference);
    public virtual Task WriteUntypedValueAsync(ODataUntypedValue value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonValueSerializer/<WriteStreamValueAsync>d__21")]
public virtual Task WriteStreamValueAsync(ODataBinaryStreamValue streamValue);
    [ConditionalAttribute("DEBUG")]
internal void AssertRecursionDepthIsZero();
    private void IncreaseRecursionDepth();
    private void DecreaseRecursionDepth();
}
internal class Microsoft.OData.Json.ODataJsonWriter : ODataWriterCore {
    private ODataJsonOutputContext jsonOutputContext;
    private ODataJsonResourceSerializer jsonResourceSerializer;
    private ODataJsonValueSerializer jsonValueSerializer;
    private ODataJsonPropertySerializer jsonPropertySerializer;
    private bool writingParameter;
    private IJsonWriter jsonWriter;
    private JsonODataAnnotationWriter odataAnnotationWriter;
    private JsonInstanceAnnotationWriter instanceAnnotationWriter;
    private bool writingResponse;
    private ODataMessageWriterSettings messageWriterSettings;
    private JsonResourceScope CurrentResourceScope { get; }
    private JsonDeletedResourceScope CurrentDeletedResourceScope { get; }
    private JsonDeltaLinkScope CurrentDeltaLinkScope { get; }
    private JsonResourceSetScope CurrentResourceSetScope { get; }
    private JsonDeltaResourceSetScope CurrentDeltaResourceSetScope { get; }
    internal ODataJsonWriter(ODataJsonOutputContext jsonOutputContext, IEdmNavigationSource navigationSource, IEdmStructuredType resourceType, bool writingResourceSet, bool writingParameter, bool writingDelta, IODataReaderWriterListener listener);
    private JsonResourceScope get_CurrentResourceScope();
    private JsonDeletedResourceScope get_CurrentDeletedResourceScope();
    private JsonDeltaLinkScope get_CurrentDeltaLinkScope();
    private JsonResourceSetScope get_CurrentResourceSetScope();
    private JsonDeltaResourceSetScope get_CurrentDeltaResourceSetScope();
    protected virtual void VerifyNotDisposed();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void StartPayload();
    protected virtual void EndPayload();
    protected virtual void PrepareResourceForWriteStart(ResourceScope resourceScope, ODataResource resource, bool writingResponse, SelectedPropertiesNode selectedProperties);
    protected virtual void PrepareDeletedResourceForWriteStart(DeletedResourceScope resourceScope, ODataDeletedResource deletedResource, bool writingResponse, SelectedPropertiesNode selectedProperties);
    internal static ICollection`1<KeyValuePair`2<string, object>> ComputeKeyProperties(ODataDeletedResource resource, IEdmEntityType entityType, IEdmModel model);
    protected virtual void StartProperty(ODataPropertyInfo property);
    protected virtual void EndProperty(ODataPropertyInfo property);
    protected virtual void StartResource(ODataResource resource);
    protected virtual void EndResource(ODataResource resource);
    protected virtual void EndDeletedResource(ODataDeletedResource deletedResource);
    protected virtual void StartResourceSet(ODataResourceSet resourceSet);
    protected virtual void EndResourceSet(ODataResourceSet resourceSet);
    protected virtual void StartDeltaResourceSet(ODataDeltaResourceSet deltaResourceSet);
    protected virtual void EndDeltaResourceSet(ODataDeltaResourceSet deltaResourceSet);
    protected virtual void StartDeletedResource(ODataDeletedResource resource);
    protected virtual void StartDeltaLink(ODataDeltaLinkBase link);
    protected virtual void WritePrimitiveValue(ODataPrimitiveValue primitiveValue);
    protected virtual Stream StartBinaryStream();
    protected sealed virtual void EndBinaryStream();
    protected virtual TextWriter StartTextWriter();
    protected sealed virtual void EndTextWriter();
    protected virtual void WriteDeferredNestedResourceInfo(ODataNestedResourceInfo nestedResourceInfo);
    protected virtual void StartNestedResourceInfoWithContent(ODataNestedResourceInfo nestedResourceInfo);
    protected virtual void EndNestedResourceInfoWithContent(ODataNestedResourceInfo nestedResourceInfo);
    protected virtual void WriteEntityReferenceInNavigationLinkContent(ODataNestedResourceInfo parentNestedResourceInfo, ODataEntityReferenceLink entityReferenceLink);
    protected virtual ResourceSetScope CreateResourceSetScope(ODataResourceSet resourceSet, IEdmNavigationSource navigationSource, IEdmType itemType, bool skipWriting, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri, bool isUndeclared);
    protected virtual DeltaResourceSetScope CreateDeltaResourceSetScope(ODataDeltaResourceSet deltaResourceSet, IEdmNavigationSource navigationSource, IEdmStructuredType resourceType, bool skipWriting, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri, bool isUndeclared);
    protected virtual DeletedResourceScope CreateDeletedResourceScope(ODataDeletedResource deltaResource, IEdmNavigationSource navigationSource, IEdmEntityType resourceType, bool skipWriting, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri, bool isUndeclared);
    protected virtual PropertyInfoScope CreatePropertyInfoScope(ODataPropertyInfo property, IEdmNavigationSource navigationSource, IEdmStructuredType resourceType, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri);
    protected virtual DeltaLinkScope CreateDeltaLinkScope(ODataDeltaLinkBase link, IEdmNavigationSource navigationSource, IEdmEntityType entityType, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri);
    protected virtual ResourceScope CreateResourceScope(ODataResource resource, IEdmNavigationSource navigationSource, IEdmStructuredType resourceType, bool skipWriting, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri, bool isUndeclared);
    protected virtual NestedResourceInfoScope CreateNestedResourceInfoScope(WriterState writerState, ODataNestedResourceInfo navLink, IEdmNavigationSource navigationSource, IEdmType itemType, bool skipWriting, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri);
    protected virtual Task StartPayloadAsync();
    protected virtual Task EndPayloadAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<StartResourceAsync>d__58")]
protected virtual Task StartResourceAsync(ODataResource resource);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<EndResourceAsync>d__59")]
protected virtual Task EndResourceAsync(ODataResource resource);
    protected virtual Task StartPropertyAsync(ODataPropertyInfo property);
    protected virtual Task EndPropertyAsync(ODataPropertyInfo property);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<StartResourceSetAsync>d__62")]
protected virtual Task StartResourceSetAsync(ODataResourceSet resourceSet);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<EndResourceSetAsync>d__63")]
protected virtual Task EndResourceSetAsync(ODataResourceSet resourceSet);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<StartDeltaResourceSetAsync>d__64")]
protected virtual Task StartDeltaResourceSetAsync(ODataDeltaResourceSet deltaResourceSet);
    protected virtual Task EndDeltaResourceSetAsync(ODataDeltaResourceSet deltaResourceSet);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<StartDeletedResourceAsync>d__66")]
protected virtual Task StartDeletedResourceAsync(ODataDeletedResource resource);
    protected virtual Task EndDeletedResourceAsync(ODataDeletedResource deletedResource);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<StartDeltaLinkAsync>d__68")]
protected virtual Task StartDeltaLinkAsync(ODataDeltaLinkBase link);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<StartBinaryStreamAsync>d__69")]
protected virtual Task`1<Stream> StartBinaryStreamAsync();
    protected sealed virtual Task EndBinaryStreamAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<StartTextWriterAsync>d__71")]
protected virtual Task`1<TextWriter> StartTextWriterAsync();
    protected sealed virtual Task EndTextWriterAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<WritePrimitiveValueAsync>d__73")]
protected virtual Task WritePrimitiveValueAsync(ODataPrimitiveValue primitiveValue);
    protected virtual Task WriteDeferredNestedResourceInfoAsync(ODataNestedResourceInfo nestedResourceInfo);
    protected virtual Task StartNestedResourceInfoWithContentAsync(ODataNestedResourceInfo nestedResourceInfo);
    protected virtual Task EndNestedResourceInfoWithContentAsync(ODataNestedResourceInfo nestedResourceInfo);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<WriteEntityReferenceInNavigationLinkContentAsync>d__77")]
protected virtual Task WriteEntityReferenceInNavigationLinkContentAsync(ODataNestedResourceInfo parentNestedResourceInfo, ODataEntityReferenceLink entityReferenceLink);
    protected virtual Task PrepareResourceForWriteStartAsync(ResourceScope resourceScope, ODataResource resource, bool writingResponse, SelectedPropertiesNode selectedProperties);
    protected virtual Task PrepareDeletedResourceForWriteStartAsync(DeletedResourceScope resourceScope, ODataDeletedResource deletedResource, bool writingResponse, SelectedPropertiesNode selectedProperties);
    private void WriteEntityReferenceLinkImplementation(ODataEntityReferenceLink entityReferenceLink);
    private void InnerPrepareResourceForWriteStart(ODataResourceBase resource, ODataResourceTypeContext typeContext, SelectedPropertiesNode selectedProperties);
    private ODataResourceMetadataBuilder FindParentResourceMetadataBuilder();
    private void WriteResourceSetCount(Nullable`1<long> count, string propertyName);
    private void WriteResourceSetNextLink(Uri nextPageLink, string propertyName);
    private void WriteResourceSetDeltaLink(Uri deltaLink);
    private void WriteV4DeletedEntryContents(ODataDeletedResource resource);
    private void WriteDeletedEntryContents(ODataDeletedResource resource);
    private void WriteDeletedResourceId(ODataDeletedResource resource);
    private void WriteDeltaResourceProperties(ODataResourceBase resource);
    private void WriteDeltaResourceReason(ODataDeletedResource resource);
    private void WriteDeltaLinkContextUri(ODataDeltaKind kind);
    private void WriteDeltaLinkSource(ODataDeltaLinkBase link);
    private void WriteDeltaLinkRelationship(ODataDeltaLinkBase link);
    private void WriteDeltaLinkTarget(ODataDeltaLinkBase link);
    private void ValidateNoCustomInstanceAnnotationsForExpandedResourceSet(ODataResourceSet resourceSet);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<WriteEntityReferenceLinkImplementationAsync>d__96")]
private Task WriteEntityReferenceLinkImplementationAsync(ODataEntityReferenceLink entityReferenceLink);
    private Task WriteResourceSetCountAsync(Nullable`1<long> count, string propertyName);
    private Task WriteResourceSetNextLinkAsync(Uri nextPageLink, string propertyName);
    private Task WriteResourceSetDeltaLinkAsync(Uri deltaLink);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<WriteV4DeletedEntryContentsAsync>d__100")]
private Task WriteV4DeletedEntryContentsAsync(ODataDeletedResource resource);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<WriteDeletedEntryContentsAsync>d__101")]
private Task WriteDeletedEntryContentsAsync(ODataDeletedResource resource);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<WriteDeletedResourceIdAsync>d__102")]
private Task WriteDeletedResourceIdAsync(ODataDeletedResource resource);
    private Task WriteDeltaResourcePropertiesAsync(ODataResourceBase resource);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<WriteDeltaResourceReasonAsync>d__104")]
private Task WriteDeltaResourceReasonAsync(ODataDeletedResource resource);
    private Task WriteDeltaLinkContextUriAsync(ODataDeltaKind kind);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<WriteDeltaLinkSourceAsync>d__106")]
private Task WriteDeltaLinkSourceAsync(ODataDeltaLinkBase link);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<WriteDeltaLinkRelationshipAsync>d__107")]
private Task WriteDeltaLinkRelationshipAsync(ODataDeltaLinkBase link);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<WriteDeltaLinkTargetAsync>d__108")]
private Task WriteDeltaLinkTargetAsync(ODataDeltaLinkBase link);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<<EndDeltaResourceSetAsync>g__EndDeltaResourceSetInnerAsync|65_0>d")]
[CompilerGeneratedAttribute]
private Task <EndDeltaResourceSetAsync>g__EndDeltaResourceSetInnerAsync|65_0(ODataDeltaResourceSet innerDeltaResourceSet);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<<EndBinaryStreamAsync>g__EndBinaryStreamInnerAsync|70_0>d")]
[CompilerGeneratedAttribute]
private Task <EndBinaryStreamAsync>g__EndBinaryStreamInnerAsync|70_0();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<<StartNestedResourceInfoWithContentAsync>g__StartNestedResourceInfoWithContentInnerAsync|75_0>d")]
[CompilerGeneratedAttribute]
private Task <StartNestedResourceInfoWithContentAsync>g__StartNestedResourceInfoWithContentInnerAsync|75_0(ODataNestedResourceInfo innerNestedResourceInfo);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<<EndNestedResourceInfoWithContentAsync>g__EndNestedResourceInfoWithContentInnerAsync|76_0>d")]
[CompilerGeneratedAttribute]
private Task <EndNestedResourceInfoWithContentAsync>g__EndNestedResourceInfoWithContentInnerAsync|76_0(ODataNestedResourceInfo innerNestedResourceInfo);
    [CompilerGeneratedAttribute]
private void <PrepareDeletedResourceForWriteStartAsync>b__79_0(ODataJsonWriter thisParam, DeletedResourceScope resourceScopeParam, ODataDeletedResource deletedResourceParam, bool writingResponseParam, SelectedPropertiesNode selectedPropertiesParam);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<<WriteResourceSetCountAsync>g__WriteResourceSetCountInnerAsync|97_0>d")]
[CompilerGeneratedAttribute]
private Task <WriteResourceSetCountAsync>g__WriteResourceSetCountInnerAsync|97_0(long innerCount, string innerPropertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<<WriteResourceSetNextLinkAsync>g__WriteResourceSetNextLinkInnerAsync|98_0>d")]
[CompilerGeneratedAttribute]
private Task <WriteResourceSetNextLinkAsync>g__WriteResourceSetNextLinkInnerAsync|98_0(Uri innerNextPageLink, string innerPropertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriter/<<WriteResourceSetDeltaLinkAsync>g__WriteResourceSetDeltaLinkInnerAsync|99_0>d")]
[CompilerGeneratedAttribute]
private Task <WriteResourceSetDeltaLinkAsync>g__WriteResourceSetDeltaLinkInnerAsync|99_0(Uri innerDeltaLink);
}
[CLSCompliantAttribute("False")]
public class Microsoft.OData.Json.ODataJsonWriterFactory : object {
    private ODataStringEscapeOption stringEscapeOption;
    public ODataJsonWriterFactory(ODataStringEscapeOption stringEscapeOption);
    public sealed virtual IJsonWriter CreateJsonWriter(Stream stream, bool isIeee754Compatible, Encoding encoding);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Json.ODataJsonWriterUtils : object {
    internal static void WriteError(IJsonWriter jsonWriter, Action`1<ICollection`1<ODataInstanceAnnotation>> writeInstanceAnnotationsDelegate, ODataError error, bool includeDebugInformation, ODataMessageWriterSettings messageWriterSettings);
    internal static void StartJsonPaddingIfRequired(IJsonWriter jsonWriter, ODataMessageWriterSettings settings);
    internal static void EndJsonPaddingIfRequired(IJsonWriter jsonWriter, ODataMessageWriterSettings settings);
    internal static void ODataValueToString(StringBuilder sb, ODataValue value);
    internal static Task WriteErrorAsync(IJsonWriter jsonWriter, Func`2<ICollection`1<ODataInstanceAnnotation>, Task> writeInstanceAnnotationsDelegate, ODataError error, bool includeDebugInformation, ODataMessageWriterSettings messageWriterSettings);
    private static void WriteError(IJsonWriter jsonWriter, string code, string message, string target, IEnumerable`1<ODataErrorDetail> details, ODataInnerError innerError, ICollection`1<ODataInstanceAnnotation> instanceAnnotations, Action`1<ICollection`1<ODataInstanceAnnotation>> writeInstanceAnnotationsDelegate, ODataMessageWriterSettings messageWriterSettings);
    private static void WriteErrorDetails(IJsonWriter jsonWriter, IEnumerable`1<ODataErrorDetail> details, string odataErrorDetailsName);
    private static void WriteInnerError(IJsonWriter jsonWriter, ODataInnerError innerError, string innerErrorPropertyName, int recursionDepth, ODataMessageWriterSettings messageWriterSettings);
    private static void ODataCollectionValueToString(StringBuilder sb, ODataCollectionValue value);
    private static void ODataResourceValueToString(StringBuilder sb, ODataResourceValue value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriterUtils/<WriteErrorAsync>d__10")]
private static Task WriteErrorAsync(IJsonWriter jsonWriter, string code, string message, string target, IEnumerable`1<ODataErrorDetail> details, ODataInnerError innerError, ICollection`1<ODataInstanceAnnotation> instanceAnnotations, Func`2<ICollection`1<ODataInstanceAnnotation>, Task> writeInstanceAnnotationsDelegate, ODataMessageWriterSettings messageWriterSettings);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriterUtils/<WriteErrorDetailsAsync>d__11")]
private static Task WriteErrorDetailsAsync(IJsonWriter jsonWriter, IEnumerable`1<ODataErrorDetail> details, string odataErrorDetailsName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataJsonWriterUtils/<WriteInnerErrorAsync>d__12")]
private static Task WriteInnerErrorAsync(IJsonWriter jsonWriter, ODataInnerError innerError, string innerErrorPropertyName, int recursionDepth, ODataMessageWriterSettings messageWriterSettings);
    [ExtensionAttribute]
internal static void WriteValuePropertyName(IJsonWriter jsonWriter);
    [ExtensionAttribute]
internal static void WritePropertyAnnotationName(IJsonWriter jsonWriter, string propertyName, string annotationName);
    [ExtensionAttribute]
internal static void WriteInstanceAnnotationName(IJsonWriter jsonWriter, string annotationName);
    [ExtensionAttribute]
internal static Task WriteValuePropertyNameAsync(IJsonWriter jsonWriter);
    [ExtensionAttribute]
internal static Task WritePropertyAnnotationNameAsync(IJsonWriter jsonWriter, string propertyName, string annotationName);
    [ExtensionAttribute]
internal static Task WriteInstanceAnnotationNameAsync(IJsonWriter jsonWriter, string annotationName);
}
public enum Microsoft.OData.Json.ODataStringEscapeOption : Enum {
    public int value__;
    [SuppressMessageAttribute("Microsoft.Naming", "CA1704")]
public static ODataStringEscapeOption EscapeNonAscii;
    public static ODataStringEscapeOption EscapeOnlyControls;
}
internal class Microsoft.OData.Json.ODataUtf8JsonWriter : object {
    private static int DefaultBufferSize;
    private float bufferFlushThreshold;
    private static ReadOnlyMemory`1<byte> parentheses;
    private static ReadOnlyMemory`1<byte> itemSeparator;
    private static ReadOnlyMemory`1<byte> nanValue;
    private static ReadOnlyMemory`1<byte> positiveInfinityValue;
    private static ReadOnlyMemory`1<byte> negativeInfinityValue;
    private Stream outputStream;
    private Stream writeStream;
    private Utf8JsonWriter utf8JsonWriter;
    private PooledByteBufferWriter bufferWriter;
    private JavaScriptEncoder encoder;
    private int bufferSize;
    private bool isIeee754Compatible;
    private bool leaveStreamOpen;
    private Encoding outputEncoding;
    private bool disposed;
    private static int chunkSize;
    private static int StackallocCharThreshold;
    private static int MaxExpansionFactorWhileEscaping;
    private bool shouldWriteSeparator;
    private BitStack bitStack;
    private bool isWritingAtStartOfArray;
    private bool isWritingConsecutiveRawValuesAtStartOfArray;
    private ReadOnlyMemory`1<byte> DoubleQuote;
    private Stream binaryValueStream;
    private TextWriter textWriter;
    private bool isWritingJson;
    private string currentTextWriterContentType;
    public ODataUtf8JsonWriter(Stream outputStream, bool isIeee754Compatible, Encoding encoding, JavaScriptEncoder encoder, int bufferSize, bool leaveStreamOpen);
    private static ODataUtf8JsonWriter();
    public sealed virtual void Flush();
    private void FlushIfBufferThresholdReached();
    private void CommitUtf8JsonWriterContentsToBuffer();
    public sealed virtual void StartPaddingFunctionScope();
    public sealed virtual void WritePaddingFunctionName(string functionName);
    public sealed virtual void EndPaddingFunctionScope();
    public sealed virtual void StartObjectScope();
    public sealed virtual void EndObjectScope();
    public sealed virtual void StartArrayScope();
    public sealed virtual void EndArrayScope();
    public sealed virtual void WriteName(string name);
    public sealed virtual void WriteValue(bool value);
    public sealed virtual void WriteValue(int value);
    public sealed virtual void WriteValue(float value);
    public sealed virtual void WriteValue(short value);
    public sealed virtual void WriteValue(long value);
    public sealed virtual void WriteValue(double value);
    public sealed virtual void WriteValue(Guid value);
    public sealed virtual void WriteValue(decimal value);
    public sealed virtual void WriteValue(DateTimeOffset value);
    public sealed virtual void WriteValue(TimeSpan value);
    public sealed virtual void WriteValue(Date value);
    public sealed virtual void WriteValue(TimeOfDay value);
    public sealed virtual void WriteValue(byte value);
    public sealed virtual void WriteValue(sbyte value);
    public sealed virtual void WriteValue(string value);
    private void WriteStringValueInChunks(ReadOnlySpan`1<char> value);
    private int NeedsEscaping(ReadOnlySpan`1<char> value);
    private void WriteEscapedStringChunk(ReadOnlySpan`1<char> sourceChunk, int firstIndexToEscape, bool isFinalBlock, Int32& preChunkNotProcessed);
    private void WriteStringChunk(ReadOnlySpan`1<char> chunk, bool isFinalBlock);
    private void CheckIfSeparatorNeeded();
    public sealed virtual void WriteValue(Byte[] value);
    private void WriteByteValueInChunks(ReadOnlySpan`1<byte> value);
    private void Base64EncodeAndWriteChunk(ReadOnlySpan`1<byte> chunk, bool isFinalBlock, Int32& bytesNotConsumed);
    public sealed virtual void WriteValue(JsonElement value);
    public sealed virtual void WriteRawValue(string rawValue);
    private void WriteRawValueCore(string rawValue);
    private void WriteItemWithSeparatorIfNeeded();
    private void CheckIfManualValueAtArrayStart();
    private void WriteSeparatorIfNecessary();
    private void WriteItemSeparator();
    private void EnterObjectScope();
    private void EnterArrayScope();
    private void ExitScope();
    private bool IsInArray();
    private bool TryPeekScope(Boolean& isInObject);
    private void Dispose(bool disposing);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<StartPaddingFunctionScopeAsync>d__74")]
public sealed virtual Task StartPaddingFunctionScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WritePaddingFunctionNameAsync>d__75")]
public sealed virtual Task WritePaddingFunctionNameAsync(string functionName);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<EndPaddingFunctionScopeAsync>d__76")]
public sealed virtual Task EndPaddingFunctionScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<StartObjectScopeAsync>d__77")]
public sealed virtual Task StartObjectScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<EndObjectScopeAsync>d__78")]
public sealed virtual Task EndObjectScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<StartArrayScopeAsync>d__79")]
public sealed virtual Task StartArrayScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<EndArrayScopeAsync>d__80")]
public sealed virtual Task EndArrayScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteNameAsync>d__81")]
public sealed virtual Task WriteNameAsync(string name);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__82")]
public sealed virtual Task WriteValueAsync(bool value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__83")]
public sealed virtual Task WriteValueAsync(int value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__84")]
public sealed virtual Task WriteValueAsync(float value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__85")]
public sealed virtual Task WriteValueAsync(short value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__86")]
public sealed virtual Task WriteValueAsync(long value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__87")]
public sealed virtual Task WriteValueAsync(double value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__88")]
public sealed virtual Task WriteValueAsync(Guid value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__89")]
public sealed virtual Task WriteValueAsync(decimal value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__90")]
public sealed virtual Task WriteValueAsync(DateTimeOffset value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__91")]
public sealed virtual Task WriteValueAsync(TimeSpan value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__92")]
public sealed virtual Task WriteValueAsync(Date value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__93")]
public sealed virtual Task WriteValueAsync(TimeOfDay value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__94")]
public sealed virtual Task WriteValueAsync(byte value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__95")]
public sealed virtual Task WriteValueAsync(sbyte value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__96")]
public sealed virtual Task WriteValueAsync(string value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteStringValueInChunksAsync>d__97")]
private ValueTask WriteStringValueInChunksAsync(ReadOnlyMemory`1<char> value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__98")]
public sealed virtual Task WriteValueAsync(Byte[] value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteByteValueInChunksAsync>d__99")]
private ValueTask WriteByteValueInChunksAsync(ReadOnlyMemory`1<byte> value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteValueAsync>d__100")]
public sealed virtual Task WriteValueAsync(JsonElement value);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<WriteRawValueAsync>d__101")]
public sealed virtual Task WriteRawValueAsync(string rawValue);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<FlushAsync>d__102")]
public sealed virtual Task FlushAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<DisposeAsync>d__103")]
public sealed virtual ValueTask DisposeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<FlushIfBufferThresholdReachedAsync>d__104")]
private ValueTask FlushIfBufferThresholdReachedAsync();
    public sealed virtual Stream StartStreamValueScope();
    public sealed virtual void EndStreamValueScope();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<StartStreamValueScopeAsync>d__108")]
public sealed virtual Task`1<Stream> StartStreamValueScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<EndStreamValueScopeAsync>d__109")]
public sealed virtual Task EndStreamValueScopeAsync();
    public sealed virtual TextWriter StartTextWriterValueScope(string contentType);
    public sealed virtual void EndTextWriterValueScope();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<StartTextWriterValueScopeAsync>d__116")]
public sealed virtual Task`1<TextWriter> StartTextWriterValueScopeAsync(string contentType);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ODataUtf8JsonWriter/<EndTextWriterValueScopeAsync>d__117")]
public sealed virtual Task EndTextWriterValueScopeAsync();
    private bool CheckIfWritingJson(string currentContentType);
}
[CLSCompliantAttribute("False")]
public class Microsoft.OData.Json.ODataUtf8JsonWriterFactory : object {
    private JavaScriptEncoder encoder;
    [CompilerGeneratedAttribute]
private static ODataUtf8JsonWriterFactory <Default>k__BackingField;
    public static ODataUtf8JsonWriterFactory Default { get; }
    public ODataUtf8JsonWriterFactory(JavaScriptEncoder encoder);
    private static ODataUtf8JsonWriterFactory();
    [CompilerGeneratedAttribute]
public static ODataUtf8JsonWriterFactory get_Default();
    public sealed virtual IJsonWriter CreateJsonWriter(Stream stream, bool isIeee754Compatible, Encoding encoding);
}
internal class Microsoft.OData.Json.PooledByteBufferWriter : object {
    private Byte[] rentedBuffer;
    private int index;
    private static int MinimumBufferSize;
    public static int MaximumBufferSize;
    public ReadOnlyMemory`1<byte> WrittenMemory { get; }
    public int WrittenCount { get; }
    public int Capacity { get; }
    public int FreeCapacity { get; }
    public PooledByteBufferWriter(int initialCapacity);
    public ReadOnlyMemory`1<byte> get_WrittenMemory();
    public int get_WrittenCount();
    public int get_Capacity();
    public int get_FreeCapacity();
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<byte> GetMemory(int sizeHint);
    public sealed virtual Span`1<byte> GetSpan(int sizeHint);
    public void Clear();
    public sealed virtual void Dispose();
    private void ClearInternal();
    private void CheckAndResizeBuffer(int sizeHint);
}
internal class Microsoft.OData.Json.ReorderingJsonReader : BufferingJsonReader {
    internal ReorderingJsonReader(IJsonReader innerReader, int maxInnerErrorDepth);
    [SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
public virtual Stream CreateReadStream();
    public virtual TextReader CreateTextReader();
    public virtual bool CanStream();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ReorderingJsonReader/<CreateReadStreamAsync>d__4")]
[SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
public virtual Task`1<Stream> CreateReadStreamAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ReorderingJsonReader/<CreateTextReaderAsync>d__5")]
public virtual Task`1<TextReader> CreateTextReaderAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ReorderingJsonReader/<CanStreamAsync>d__6")]
public virtual Task`1<bool> CanStreamAsync();
    protected virtual void ProcessObjectValue();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ReorderingJsonReader/<ProcessObjectValueAsync>d__8")]
protected virtual Task ProcessObjectValueAsync();
    private void ReadPropertyName(String& propertyName, String& annotationName);
    private void BufferValue();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ReorderingJsonReader/<ReadPropertyNameAsync>d__11")]
private Task`1<Tuple`2<string, string>> ReadPropertyNameAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.ReorderingJsonReader/<BufferValueAsync>d__12")]
private Task BufferValueAsync();
    private static void ProcessProperty(string jsonPropertyName, String& propertyName, String& annotationName);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0();
}
internal abstract class Microsoft.OData.Json.TextWriterWrapper : TextWriter {
    protected TextWriter writer;
    public Encoding Encoding { get; }
    public string NewLine { get; }
    protected TextWriterWrapper(IFormatProvider formatProvider);
    public virtual Encoding get_Encoding();
    public virtual string get_NewLine();
    public virtual void IncreaseIndentation();
    public virtual void DecreaseIndentation();
    public virtual void Flush();
    public virtual Task IncreaseIndentationAsync();
    public virtual Task DecreaseIndentationAsync();
    public virtual Task FlushAsync();
    protected static void InternalCloseOrDispose();
}
internal class Microsoft.OData.Json.TranscodingWriteStream : Stream {
    private static int MinWriteRentedArraySize;
    private static int MaxWriteRentedArraySize;
    private Encoding _innerEncoding;
    private Encoding _thisEncoding;
    private Stream _innerStream;
    private bool _leaveOpen;
    private Encoder _innerEncoder;
    private Decoder _thisDecoder;
    private static ValueTask CompletedValueTask { get; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal TranscodingWriteStream(Stream targetStream, Encoding targetEncoding, Encoding inputEncoding, bool leaveOpen);
    private static ValueTask get_CompletedValueTask();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    protected virtual void Dispose(bool disposing);
    public virtual ValueTask DisposeAsync();
    private void EnsurePreWriteConditions();
    private ArraySegment`1<byte> FinalFlushWriteBuffers();
    public virtual void Flush();
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual int Read(Span`1<byte> buffer);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    private void ThrowIfDisposed();
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void Write(ReadOnlySpan`1<byte> buffer);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken);
    public virtual void WriteByte(byte value);
    private static void ValidateBufferArguments(Byte[] buffer, int offset, int size);
    [AsyncStateMachineAttribute("Microsoft.OData.Json.TranscodingWriteStream/<<DisposeAsync>g__DisposeAsyncCore|23_0>d")]
[CompilerGeneratedAttribute]
private ValueTask <DisposeAsync>g__DisposeAsyncCore|23_0(ArraySegment`1<byte> pendingData);
    [CompilerGeneratedAttribute]
private void <EnsurePreWriteConditions>g__InitializeWriteDataStructures|24_0();
    [AsyncStateMachineAttribute("Microsoft.OData.Json.TranscodingWriteStream/<<WriteAsync>g__WriteAsyncCore|36_0>d")]
[CompilerGeneratedAttribute]
private ValueTask <WriteAsync>g__WriteAsyncCore|36_0(ReadOnlyMemory`1<byte> remainingOuterEncodedBytes, CancellationToken cancellationToken);
}
internal class Microsoft.OData.JsonInstanceAnnotationWriter : object {
    private ODataJsonValueSerializer valueSerializer;
    private JsonTypeNameOracle typeNameOracle;
    private IJsonWriter jsonWriter;
    private JsonODataAnnotationWriter odataAnnotationWriter;
    private IWriterValidator writerValidator;
    internal JsonInstanceAnnotationWriter(ODataJsonValueSerializer valueSerializer, JsonTypeNameOracle typeNameOracle);
    internal void WriteInstanceAnnotations(ICollection`1<ODataInstanceAnnotation> instanceAnnotations, InstanceAnnotationWriteTracker tracker, bool ignoreFilter, string propertyName);
    internal void WriteInstanceAnnotations(ICollection`1<ODataInstanceAnnotation> instanceAnnotations, string propertyName, bool isUndeclaredProperty);
    internal void WriteInstanceAnnotationsForError(ICollection`1<ODataInstanceAnnotation> instanceAnnotations);
    internal void WriteInstanceAnnotation(ODataInstanceAnnotation instanceAnnotation, bool ignoreFilter, string propertyName);
    internal Task WriteInstanceAnnotationsAsync(ICollection`1<ODataInstanceAnnotation> instanceAnnotations, InstanceAnnotationWriteTracker tracker, bool ignoreFilter, string propertyName);
    internal Task WriteInstanceAnnotationsAsync(ICollection`1<ODataInstanceAnnotation> instanceAnnotations, string propertyName, bool isUndeclaredProperty);
    internal Task WriteInstanceAnnotationsForErrorAsync(ICollection`1<ODataInstanceAnnotation> instanceAnnotations);
    [AsyncStateMachineAttribute("Microsoft.OData.JsonInstanceAnnotationWriter/<WriteInstanceAnnotationAsync>d__13")]
internal Task WriteInstanceAnnotationAsync(ODataInstanceAnnotation instanceAnnotation, bool ignoreFilter, string propertyName);
    private void WriteAndTrackInstanceAnnotation(ODataInstanceAnnotation annotation, InstanceAnnotationWriteTracker tracker, HashSet`1<string> instanceAnnotationNames, bool ignoreFilter, string propertyName);
    private void WriteInstanceAnnotationsForUndeclaredProperty(ICollection`1<ODataInstanceAnnotation> instanceAnnotations, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.JsonInstanceAnnotationWriter/<WriteAndTrackInstanceAnnotationAsync>d__16")]
private Task WriteAndTrackInstanceAnnotationAsync(ODataInstanceAnnotation annotation, InstanceAnnotationWriteTracker tracker, HashSet`1<string> instanceAnnotationNames, bool ignoreFilter, string propertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.JsonInstanceAnnotationWriter/<WriteInstanceAnnotationsForUndeclaredPropertyAsync>d__17")]
private Task WriteInstanceAnnotationsForUndeclaredPropertyAsync(ICollection`1<ODataInstanceAnnotation> instanceAnnotations, string propertyName);
    private void WriteInstanceAnnotationName(string propertyName, string annotationName);
    private Task WriteInstanceAnnotationNameAsync(string propertyName, string annotationName);
    [AsyncStateMachineAttribute("Microsoft.OData.JsonInstanceAnnotationWriter/<<WriteInstanceAnnotationsAsync>g__WriteInstanceAnnotationsListAsync|10_0>d")]
[CompilerGeneratedAttribute]
private Task <WriteInstanceAnnotationsAsync>g__WriteInstanceAnnotationsListAsync|10_0(List`1<ODataInstanceAnnotation> innerInstanceAnnotationsList, InstanceAnnotationWriteTracker innerInstanceAnnotationWriteTracker, HashSet`1<string> innerInstanceAnnotationNames, bool innerIgnoreFilter, string innerPropertyName);
    [AsyncStateMachineAttribute("Microsoft.OData.JsonInstanceAnnotationWriter/<<WriteInstanceAnnotationsAsync>g__WriteInstanceAnnotationsInnerAsync|10_1>d")]
[CompilerGeneratedAttribute]
private Task <WriteInstanceAnnotationsAsync>g__WriteInstanceAnnotationsInnerAsync|10_1(ICollection`1<ODataInstanceAnnotation> innerInstanceAnnotations, InstanceAnnotationWriteTracker innerInstanceAnnotationWriteTracker, HashSet`1<string> innerInstanceAnnotationNames, bool innerIgnoreFilter, string innerPropertyName);
}
[ExtensionAttribute]
internal static class Microsoft.OData.MediaTypeUtils : object {
    private static ODataPayloadKind[] allSupportedPayloadKinds;
    private static UTF8Encoding encodingUtf8NoPreamble;
    private static int MatchInfoCacheInitialSize;
    private static MatchInfoConcurrentCache MatchInfoCache;
    internal static UTF8Encoding EncodingUtf8NoPreamble { get; }
    internal static Encoding FallbackEncoding { get; }
    internal static Encoding MissingEncoding { get; }
    private static MediaTypeUtils();
    internal static UTF8Encoding get_EncodingUtf8NoPreamble();
    internal static Encoding get_FallbackEncoding();
    internal static Encoding get_MissingEncoding();
    internal static ODataFormat GetContentTypeFromSettings(ODataMessageWriterSettings settings, ODataPayloadKind payloadKind, ODataMediaTypeResolver mediaTypeResolver, ODataMediaType& mediaType, Encoding& encoding);
    internal static IList`1<ODataPayloadKindDetectionResult> GetPayloadKindsForContentType(string contentTypeHeader, ODataMediaTypeResolver mediaTypeResolver, ODataMediaType& contentType, Encoding& encoding);
    internal static bool MediaTypeAndSubtypeAreEqual(string firstTypeAndSubtype, string secondTypeAndSubtype);
    internal static bool MediaTypeStartsWithTypeAndSubtype(string mediaType, string typeAndSubtype);
    [ExtensionAttribute]
internal static bool MediaTypeHasParameterWithValue(ODataMediaType mediaType, string parameterName, string parameterValue);
    [ExtensionAttribute]
internal static bool HasStreamingSetToTrue(ODataMediaType mediaType);
    [ExtensionAttribute]
internal static bool HasIeee754CompatibleSetToTrue(ODataMediaType mediaType);
    internal static void CheckMediaTypeForWildCards(ODataMediaType mediaType);
    internal static string AlterContentTypeForJsonPadding(string contentType);
    internal static ODataFormat GetFormatFromContentType(string contentTypeName, ODataPayloadKind[] supportedPayloadKinds, ODataMediaTypeResolver mediaTypeResolver, ODataMediaType& mediaType, Encoding& encoding, ODataPayloadKind& selectedPayloadKind);
    internal static IEnumerable`1<string> GetCacheKeys();
    private static ODataMediaType ParseContentType(string contentTypeHeader, String& charset);
    private static ODataMediaType GetDefaultMediaType(IList`1<ODataMediaTypeFormat> supportedMediaTypes, ODataFormat specifiedFormat, ODataFormat& actualFormat);
    private static Encoding GetEncoding(string acceptCharsetHeader, ODataPayloadKind payloadKind, ODataMediaType mediaType, bool useDefaultEncoding);
    private static MediaTypeMatchInfo MatchMediaTypes(IEnumerable`1<ODataMediaType> sourceTypes, ODataMediaType[] targetTypes);
    private static void ConvertApplicationJsonInAcceptableMediaTypes(IList`1<KeyValuePair`2<ODataMediaType, string>> specifiedTypes, ODataVersion version);
}
internal static class Microsoft.OData.MessageStreamWrapper : object {
    internal static Stream CreateNonDisposingStream(Stream innerStream);
    internal static Stream CreateStreamWithMaxSize(Stream innerStream, long maxBytesToBeRead);
    internal static Stream CreateNonDisposingStreamWithMaxSize(Stream innerStream, long maxBytesToBeRead);
    internal static bool IsNonDisposingStream(Stream stream);
}
internal class Microsoft.OData.Metadata.BufferingXmlReader : XmlReader {
    internal string XmlNamespace;
    internal string XmlBaseAttributeName;
    internal string ODataMetadataNamespace;
    internal string ODataNamespace;
    internal string ODataErrorElementName;
    private IXmlLineInfo lineInfo;
    private XmlReader reader;
    private LinkedList`1<BufferedNode> bufferedNodes;
    private BufferedNode endOfInputBufferedNode;
    private bool disableXmlBase;
    private int maxInnerErrorDepth;
    private Uri documentBaseUri;
    private LinkedListNode`1<BufferedNode> currentBufferedNode;
    private LinkedListNode`1<BufferedNode> currentAttributeNode;
    private LinkedListNode`1<BufferedNode> currentBufferedNodeToReport;
    private bool isBuffering;
    private bool removeOnNextRead;
    private bool disableInStreamErrorDetection;
    private Stack`1<XmlBaseDefinition> xmlBaseStack;
    private Stack`1<XmlBaseDefinition> bufferStartXmlBaseStack;
    public XmlNodeType NodeType { get; }
    public bool IsEmptyElement { get; }
    public string LocalName { get; }
    public string Prefix { get; }
    public string NamespaceURI { get; }
    public string Value { get; }
    public int Depth { get; }
    public bool EOF { get; }
    public ReadState ReadState { get; }
    public XmlNameTable NameTable { get; }
    public int AttributeCount { get; }
    public string BaseURI { get; }
    public bool HasValue { get; }
    private int System.Xml.IXmlLineInfo.LineNumber { get; }
    private int System.Xml.IXmlLineInfo.LinePosition { get; }
    internal Uri XmlBaseUri { get; }
    internal Uri ParentXmlBaseUri { get; }
    internal bool DisableInStreamErrorDetection { get; internal set; }
    internal BufferingXmlReader(XmlReader reader, Uri parentXmlBaseUri, Uri documentBaseUri, bool disableXmlBase, int maxInnerErrorDepth);
    public virtual XmlNodeType get_NodeType();
    public virtual bool get_IsEmptyElement();
    public virtual string get_LocalName();
    public virtual string get_Prefix();
    public virtual string get_NamespaceURI();
    public virtual string get_Value();
    public virtual int get_Depth();
    public virtual bool get_EOF();
    public virtual ReadState get_ReadState();
    public virtual XmlNameTable get_NameTable();
    public virtual int get_AttributeCount();
    public virtual string get_BaseURI();
    public virtual bool get_HasValue();
    private sealed virtual override int System.Xml.IXmlLineInfo.get_LineNumber();
    private sealed virtual override int System.Xml.IXmlLineInfo.get_LinePosition();
    internal Uri get_XmlBaseUri();
    internal Uri get_ParentXmlBaseUri();
    internal bool get_DisableInStreamErrorDetection();
    internal void set_DisableInStreamErrorDetection(bool value);
    public virtual bool Read();
    public virtual bool MoveToElement();
    public virtual bool MoveToFirstAttribute();
    public virtual bool MoveToNextAttribute();
    public virtual bool ReadAttributeValue();
    public virtual string GetAttribute(int i);
    public virtual string GetAttribute(string name, string namespaceURI);
    public virtual string GetAttribute(string name);
    public virtual string LookupNamespace(string prefix);
    public virtual bool MoveToAttribute(string name, string ns);
    public virtual bool MoveToAttribute(string name);
    public virtual void ResolveEntity();
    private sealed virtual override bool System.Xml.IXmlLineInfo.HasLineInfo();
    internal void StartBuffering();
    internal void StopBuffering();
    private bool ReadInternal(bool ignoreInStreamErrors);
    private bool ReadNextAndCheckForInStreamError();
    private bool IsEndOfInputNode(BufferedNode node);
    private BufferedNode BufferCurrentReaderNode();
    private BufferedNode GetCurrentElementNode();
    private LinkedListNode`1<BufferedNode> FindAttributeBufferedNode(int index);
    private LinkedListNode`1<BufferedNode> FindAttributeBufferedNode(string localName, string namespaceUri);
    private LinkedListNode`1<BufferedNode> FindAttributeBufferedNode(string qualifiedName);
    private void MoveFromAttributeValueNode();
    private string GetAttributeWithAtomizedName(string name, string namespaceURI);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
[ConditionalAttribute("DEBUG")]
private void ValidateInternalState();
    private bool HasLineInfo();
}
internal class Microsoft.OData.Metadata.CachedPrimitiveKeepInContentAnnotation : object {
    private HashSet`1<string> keptInContentPropertyNames;
    internal CachedPrimitiveKeepInContentAnnotation(IEnumerable`1<string> keptInContentPropertyNames);
    internal bool IsKeptInContent(string propertyName);
}
internal static class Microsoft.OData.Metadata.EdmConstants : object {
    internal static string EdmNamespace;
    internal static string EdmBinaryTypeName;
    internal static string EdmBooleanTypeName;
    internal static string EdmByteTypeName;
    internal static string EdmDateTypeName;
    internal static string EdmDateTimeOffsetTypeName;
    internal static string EdmDecimalTypeName;
    internal static string EdmDoubleTypeName;
    internal static string EdmGuidTypeName;
    internal static string EdmSingleTypeName;
    internal static string EdmSByteTypeName;
    internal static string EdmInt16TypeName;
    internal static string EdmInt32TypeName;
    internal static string EdmInt64TypeName;
    internal static string EdmStringTypeName;
    internal static string EdmDurationTypeName;
    internal static string EdmStreamTypeName;
    internal static string EdmTimeOfDayTypeName;
    internal static string EdmGeographyTypeName;
    internal static string EdmPointTypeName;
    internal static string EdmLineStringTypeName;
    internal static string EdmPolygonTypeName;
    internal static string EdmGeographyCollectionTypeName;
    internal static string EdmMultiPolygonTypeName;
    internal static string EdmMultiLineStringTypeName;
    internal static string EdmMultiPointTypeName;
    internal static string EdmGeometryTypeName;
    internal static string EdmGeometryPointTypeName;
    internal static string EdmGeometryLineStringTypeName;
    internal static string EdmGeometryPolygonTypeName;
    internal static string EdmGeometryCollectionTypeName;
    internal static string EdmGeometryMultiPolygonTypeName;
    internal static string EdmGeometryMultiLineStringTypeName;
    internal static string EdmGeometryMultiPointTypeName;
    internal static string EdmxOasisNamespace;
    internal static string EdmxName;
    internal static string InternalUri;
}
[ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")]
[SuppressMessageAttribute("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
internal static class Microsoft.OData.Metadata.EdmLibraryExtensions : object {
    private static Dictionary`2<Type, IEdmPrimitiveTypeReference> PrimitiveTypeReferenceMap;
    private static int PrimitiveTypeCodeBitMap;
    private static EdmPrimitiveTypeReference BooleanTypeReference;
    private static EdmPrimitiveTypeReference ByteTypeReference;
    private static EdmPrimitiveTypeReference DecimalTypeReference;
    private static EdmPrimitiveTypeReference DoubleTypeReference;
    private static EdmPrimitiveTypeReference Int16TypeReference;
    private static EdmPrimitiveTypeReference Int32TypeReference;
    private static EdmPrimitiveTypeReference Int64TypeReference;
    private static EdmPrimitiveTypeReference SByteTypeReference;
    private static EdmPrimitiveTypeReference StringTypeReference;
    private static EdmPrimitiveTypeReference SingleTypeReference;
    private static string CollectionTypeQualifier;
    private static string CollectionTypeFormat;
    [SuppressMessageAttribute("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
private static EdmLibraryExtensions();
    [IteratorStateMachineAttribute("Microsoft.OData.Metadata.EdmLibraryExtensions/<FilterOperationsByParameterNames>d__15")]
[ExtensionAttribute]
internal static IEnumerable`1<IEdmOperationImport> FilterOperationsByParameterNames(IEnumerable`1<IEdmOperationImport> operationImports, IEnumerable`1<string> parameterNames, bool caseInsensitive);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmOperationImport> FindBestOverloadBasedOnParameters(IEnumerable`1<IEdmOperationImport> functions, IEnumerable`1<string> parameters, bool caseInsensitive);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmOperation> FilterBoundOperationsWithSameTypeHierarchyToTypeClosestToBindingType(IEnumerable`1<IEdmOperation> operations, IEdmType bindingType);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmOperation> FilterOverloadsBasedOnParameterCount(IEnumerable`1<IEdmOperation> operations, int parameterCount);
    [ExtensionAttribute]
internal static IList`1<IEdmOperation> FilterOverloadsBasedOnParameterCount(IList`1<IEdmOperation> operations, int parameterCount);
    [ExtensionAttribute]
internal static IList`1<IEdmOperation> FilterOperationCandidatesBasedOnParameterList(IEnumerable`1<IEdmOperation> operations, IEdmType bindingType, IList`1<string> parameterNameList, bool caseInsensitive, Boolean& actionItemsExists);
    [IteratorStateMachineAttribute("Microsoft.OData.Metadata.EdmLibraryExtensions/<FilterOperationsByParameterNames>d__21")]
[ExtensionAttribute]
internal static IEnumerable`1<IEdmOperation> FilterOperationsByParameterNames(IEnumerable`1<IEdmOperation> operations, IEnumerable`1<string> parameters, bool caseInsensitive);
    [IteratorStateMachineAttribute("Microsoft.OData.Metadata.EdmLibraryExtensions/<FilterOperationsByParameterNames>d__22")]
[ExtensionAttribute]
internal static IEnumerable`1<IEdmOperation> FilterOperationsByParameterNames(IList`1<IEdmOperation> operations, IList`1<string> parameterNameList, bool caseInsensitive);
    [ExtensionAttribute]
internal static void EnsureOperationsBoundWithBindingParameter(IEnumerable`1<IEdmOperation> operations);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmOperation> ResolveOperations(IEdmModel model, string namespaceQualifiedOperationName);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmOperation> ResolveOperations(IEdmModel model, string operationName, bool allowParameterTypeNames);
    [ExtensionAttribute]
internal static string NameWithParameters(IEdmOperation operation);
    [ExtensionAttribute]
internal static string FullNameWithParameters(IEdmOperation operation);
    [ExtensionAttribute]
internal static string FullNameWithNonBindingParameters(IEdmOperation operation);
    [ExtensionAttribute]
internal static string NameWithParameters(IEdmOperationImport operationImport);
    [ExtensionAttribute]
internal static string FullNameWithParameters(IEdmOperationImport operationImport);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmOperationImport> RemoveActionImports(IEnumerable`1<IEdmOperationImport> source, IList`1& actionImportItems);
    [ExtensionAttribute]
internal static bool IsUserModel(IEdmModel model);
    internal static bool IsPrimitiveType(Type clrType);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")]
internal static IEdmCollectionTypeReference ToCollectionTypeReference(IEdmPrimitiveTypeReference itemTypeReference);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")]
internal static IEdmCollectionTypeReference ToCollectionTypeReference(IEdmComplexTypeReference itemTypeReference);
    [ExtensionAttribute]
internal static bool IsAssignableFrom(IEdmTypeReference baseType, IEdmTypeReference subtype);
    [ExtensionAttribute]
internal static bool IsAssignableFrom(IEdmType baseType, IEdmType subtype);
    [ExtensionAttribute]
internal static IEdmStructuredType GetCommonBaseType(IEdmStructuredType firstType, IEdmStructuredType secondType);
    [ExtensionAttribute]
internal static IEdmPrimitiveType GetCommonBaseType(IEdmPrimitiveType firstType, IEdmPrimitiveType secondType);
    [ExtensionAttribute]
internal static IEdmPrimitiveType BaseType(IEdmPrimitiveType type);
    [ExtensionAttribute]
internal static IEdmCollectionTypeReference AsCollectionOrNull(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsElementTypeEquivalentTo(IEdmType type, IEdmType other);
    [ExtensionAttribute]
internal static object ConvertToUnderlyingTypeIfUIntValue(IEdmModel model, object value, IEdmTypeReference expectedTypeReference);
    [ExtensionAttribute]
internal static IEdmTypeDefinitionReference ResolveUIntTypeDefinition(IEdmModel model, object value);
    internal static IEdmSchemaType ResolvePrimitiveTypeName(string typeName);
    [ExtensionAttribute]
internal static IEdmTypeReference GetCollectionItemType(IEdmTypeReference typeReference);
    internal static IEdmCollectionType GetCollectionType(IEdmType itemType);
    internal static IEdmCollectionType GetCollectionType(IEdmTypeReference itemTypeReference);
    internal static string GetCollectionItemTypeName(string typeName);
    internal static string GetCollectionTypeFullName(string typeName);
    [ExtensionAttribute]
internal static bool OperationsBoundToStructuredTypeMustBeContainerQualified(IEdmStructuredType structuredType);
    [ExtensionAttribute]
internal static string ODataShortQualifiedName(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static string ODataShortQualifiedName(IEdmType type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")]
internal static IEdmTypeReference Clone(IEdmTypeReference typeReference, bool nullable);
    [ExtensionAttribute]
internal static string OperationGroupFullName(IEnumerable`1<IEdmOperation> operationGroup);
    [ExtensionAttribute]
internal static string OperationImportGroupFullName(IEnumerable`1<IEdmOperationImport> operationImportGroup);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")]
internal static bool IsAssignableFrom(IEdmStructuredType baseType, IEdmStructuredType subtype);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
internal static bool IsAssignableFrom(IEdmPrimitiveType baseType, IEdmPrimitiveType subtype);
    internal static Type GetPrimitiveClrType(IEdmPrimitiveTypeReference primitiveTypeReference);
    [ExtensionAttribute]
internal static IEdmTypeReference ToTypeReference(IEdmType type);
    [ExtensionAttribute]
internal static string FullName(IEdmEntityContainerElement containerElement);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502")]
internal static IEdmPrimitiveTypeReference GetPrimitiveTypeReference(Type clrType);
    [ExtensionAttribute]
internal static IEdmTypeReference ToTypeReference(IEdmType type, bool nullable);
    internal static string GetCollectionTypeName(string itemTypeName);
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmOperationImport> ResolveOperationImports(IEdmEntityContainer container, string operationImportName);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Usage", "CA1801:ReviewUnusedParameters")]
internal static IEnumerable`1<IEdmOperationImport> ResolveOperationImports(IEdmEntityContainer container, string operationImportName, bool allowParameterTypeNames);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")]
internal static Type GetPrimitiveClrType(IEdmPrimitiveType primitiveType, bool isNullable);
    [IteratorStateMachineAttribute("Microsoft.OData.Metadata.EdmLibraryExtensions/<ValidateOperationGroupReturnsOnlyOnKind>d__68")]
private static IEnumerable`1<IEdmOperation> ValidateOperationGroupReturnsOnlyOnKind(IEnumerable`1<IEdmOperation> operations, string operationNameWithoutParameterTypes);
    [ExtensionAttribute]
private static string ParameterTypesToString(IEdmOperation operation);
    [ExtensionAttribute]
private static string NonBindingParameterNamesToString(IEdmOperation operation);
    private static string GetCollectionItemTypeName(string typeName, bool isNested);
    [ExtensionAttribute]
private static string ParameterTypesToString(IEdmOperationImport operationImport);
    [IteratorStateMachineAttribute("Microsoft.OData.Metadata.EdmLibraryExtensions/<FilterByOperationParameterTypes>d__73")]
[ExtensionAttribute]
private static IEnumerable`1<IEdmOperationImport> FilterByOperationParameterTypes(IEnumerable`1<IEdmOperationImport> operationImports, string operationNameWithoutParameterTypes, string originalFullOperationImportName);
    private static bool ParametersSatisfyFunction(IEdmOperation operation, IList`1<string> parameterNameList, bool caseInsensitive);
    [ExtensionAttribute]
private static int InheritanceLevelFromSpecifiedInheritedType(IEdmStructuredType structuredType, IEdmStructuredType rootType);
    [ExtensionAttribute]
private static void EnsureOperationBoundWithBindingParameter(IEdmOperation operation);
    private static EdmPrimitiveTypeReference ToTypeReference(IEdmPrimitiveType primitiveType, bool nullable);
}
internal class Microsoft.OData.Metadata.EdmTypeReaderResolver : EdmTypeResolver {
    private IEdmModel model;
    private Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver;
    public EdmTypeReaderResolver(IEdmModel model, Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver);
    internal virtual IEdmEntityType GetElementType(IEdmNavigationSource navigationSource);
    internal virtual IEdmTypeReference GetReturnType(IEdmOperationImport operationImport);
    internal virtual IEdmTypeReference GetReturnType(IEnumerable`1<IEdmOperationImport> functionImportGroup);
    internal virtual IEdmTypeReference GetParameterType(IEdmOperationParameter operationParameter);
    private IEdmTypeReference ResolveTypeReference(IEdmTypeReference typeReferenceToResolve);
    private IEdmType ResolveType(IEdmType typeToResolve);
}
internal abstract class Microsoft.OData.Metadata.EdmTypeResolver : object {
    internal abstract virtual IEdmEntityType GetElementType(IEdmNavigationSource navigationSource);
    internal abstract virtual IEdmTypeReference GetReturnType(IEdmOperationImport operationImport);
    internal abstract virtual IEdmTypeReference GetReturnType(IEnumerable`1<IEdmOperationImport> functionImportGroup);
    internal abstract virtual IEdmTypeReference GetParameterType(IEdmOperationParameter operationParameter);
}
internal class Microsoft.OData.Metadata.EdmTypeWriterResolver : EdmTypeResolver {
    internal static EdmTypeWriterResolver Instance;
    private static EdmTypeWriterResolver();
    internal virtual IEdmEntityType GetElementType(IEdmNavigationSource navigationSource);
    internal virtual IEdmTypeReference GetReturnType(IEdmOperationImport operationImport);
    internal virtual IEdmTypeReference GetReturnType(IEnumerable`1<IEdmOperationImport> functionImportGroup);
    internal virtual IEdmTypeReference GetParameterType(IEdmOperationParameter operationParameter);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Metadata.MetadataUtils : object {
    [ExtensionAttribute]
internal static IEnumerable`1<IEdmDirectValueAnnotation> GetODataAnnotations(IEdmModel model, IEdmElement annotatable);
    internal static IEdmType ResolveTypeNameForWrite(IEdmModel model, string typeName);
    internal static IEdmType ResolveTypeNameForRead(IEdmModel model, IEdmType expectedType, string typeName, Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver, EdmTypeKind& typeKind);
    internal static IEdmType ResolveTypeName(IEdmModel model, IEdmType expectedType, string typeName, Func`3<IEdmType, string, IEdmType> customTypeResolver, EdmTypeKind& typeKind);
    internal static IList`1<IEdmOperation> CalculateBindableOperationsForType(IEdmType bindingType, IEdmModel model, EdmTypeResolver edmTypeResolver);
    internal static IEdmTypeReference LookupTypeOfTerm(string qualifiedTermName, IEdmModel model);
    internal static IEdmTypeReference GetNullablePayloadTypeReference(IEdmType payloadType);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Metadata.MetadataUtilsCommon : object {
    [ExtensionAttribute]
internal static bool IsODataPrimitiveTypeKind(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsODataPrimitiveTypeKind(IEdmType type);
    [ExtensionAttribute]
internal static bool IsODataComplexTypeKind(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsODataComplexTypeKind(IEdmType type);
    [ExtensionAttribute]
internal static bool IsODataEnumTypeKind(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsODataEnumTypeKind(IEdmType type);
    [ExtensionAttribute]
internal static bool IsODataTypeDefinitionTypeKind(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsODataTypeDefinitionTypeKind(IEdmType type);
    [ExtensionAttribute]
internal static bool IsODataEntityTypeKind(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsODataEntityTypeKind(IEdmType type);
    [ExtensionAttribute]
internal static bool IsODataValueType(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsNonEntityCollectionType(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsEntityCollectionType(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsStructuredCollectionType(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static bool IsNonEntityCollectionType(IEdmType type);
    [ExtensionAttribute]
internal static bool IsEntityCollectionType(IEdmType type);
    [ExtensionAttribute]
internal static bool IsStructuredCollectionType(IEdmType type);
    [ExtensionAttribute]
internal static bool IsEntityOrEntityCollectionType(IEdmType edmType);
    [ExtensionAttribute]
internal static bool IsEntityOrEntityCollectionType(IEdmType edmType, IEdmEntityType& entityType);
    [ExtensionAttribute]
internal static bool IsStructuredOrStructuredCollectionType(IEdmType edmType);
    [ExtensionAttribute]
internal static bool IsStructuredOrStructuredCollectionType(IEdmType edmType, IEdmStructuredType& structuredType);
    [ExtensionAttribute]
internal static IEdmPrimitiveTypeReference AsPrimitiveOrNull(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static IEdmEntityTypeReference AsEntityOrNull(IEdmTypeReference typeReference);
    [ExtensionAttribute]
internal static IEdmStructuredTypeReference AsStructuredOrNull(IEdmTypeReference typeReference);
    internal static bool CanConvertPrimitiveTypeTo(SingleValueNode sourceNodeOrNull, IEdmPrimitiveType sourcePrimitiveType, IEdmPrimitiveType targetPrimitiveType);
    internal static bool TryGetConstantNodePrimitiveLDMF(SingleValueNode sourceNodeOrNull, Object& primitiveValue);
}
internal static class Microsoft.OData.Metadata.ODataMetadataConstants : object {
    public static string XmlNamespace;
    public static string XmlBaseAttributeName;
    public static string ODataMetadataNamespace;
    public static string ODataMetadataNamespacePrefix;
    public static string ODataNamespace;
    public static string ODataValueElementName;
    public static string ODataErrorElementName;
    public static string ODataErrorCodeElementName;
    public static string ODataErrorMessageElementName;
    public static string ODataInnerErrorElementName;
    public static string ODataInnerErrorMessageElementName;
    public static string ODataInnerErrorTypeElementName;
    public static string ODataInnerErrorStackTraceElementName;
    public static string ODataInnerErrorInnerErrorElementName;
}
internal static class Microsoft.OData.Metadata.ODataMetadataReaderUtils : object {
    internal static XmlReader CreateXmlReader(Stream stream, Encoding encoding, ODataMessageReaderSettings messageReaderSettings);
    private static XmlReaderSettings CreateXmlReaderSettings(ODataMessageReaderSettings messageReaderSettings);
}
internal static class Microsoft.OData.Metadata.ODataMetadataWriterUtils : object {
    internal static XmlWriter CreateXmlWriter(Stream stream, ODataMessageWriterSettings messageWriterSettings, Encoding encoding);
    internal static void WriteError(XmlWriter writer, ODataError error, bool includeDebugInformation, ODataMessageWriterSettings messageWriterSettings);
    private static XmlWriterSettings CreateXmlWriterSettings(ODataMessageWriterSettings messageWriterSettings, Encoding encoding);
}
internal class Microsoft.OData.Metadata.ODataXmlErrorDeserializer : object {
    internal static ODataError ReadErrorElement(BufferingXmlReader xmlReader, int maxInnerErrorDepth);
    private static void VerifyErrorElementNotFound(DuplicateErrorElementPropertyBitMask& elementsFoundBitField, DuplicateErrorElementPropertyBitMask elementFoundBitMask, string elementName);
    private static void VerifyInnerErrorElementNotFound(DuplicateInnerErrorElementPropertyBitMask& elementsFoundBitField, DuplicateInnerErrorElementPropertyBitMask elementFoundBitMask, string elementName);
    private static ODataInnerError ReadInnerErrorElement(BufferingXmlReader xmlReader, int recursionDepth, int maxInnerErrorDepth);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Metadata.XmlReaderExtensions : object {
    [ExtensionAttribute]
internal static string ReadElementValue(XmlReader reader);
    [ExtensionAttribute]
internal static string ReadElementContentValue(XmlReader reader);
    [ExtensionAttribute]
internal static bool NamespaceEquals(XmlReader reader, string namespaceUri);
    [ExtensionAttribute]
internal static bool LocalNameEquals(XmlReader reader, string localName);
    [ExtensionAttribute]
internal static bool TryReadToNextElement(XmlReader reader);
}
internal static class Microsoft.OData.MimeConstants : object {
    internal static string MimeAny;
    internal static string MimeApplicationType;
    internal static string MimeTextType;
    internal static string MimeMultipartType;
    internal static string MimeXmlSubType;
    internal static string MimeJsonSubType;
    internal static string MimePlainSubType;
    internal static string MimeJavaScriptType;
    internal static string MimeOctetStreamSubType;
    internal static string MimeMixedSubType;
    internal static string MimeHttpSubType;
    internal static string MimeTypeParameterName;
    internal static string MimeTypeParameterValueEntry;
    internal static string MimeTypeParameterValueFeed;
    internal static string MimeShortMetadataParameterName;
    internal static string MimeMetadataParameterName;
    internal static string MimeMetadataParameterValueVerbose;
    internal static string MimeMetadataParameterValueFull;
    internal static string MimeMetadataParameterValueMinimal;
    internal static string MimeMetadataParameterValueNone;
    internal static string MimeShortStreamingParameterName;
    internal static string MimeStreamingParameterName;
    internal static string MimeIeee754CompatibleParameterName;
    internal static string MimeParameterValueTrue;
    internal static string MimeParameterValueFalse;
    internal static string MimeApplicationXml;
    internal static string MimeApplicationJson;
    internal static string MimeApplicationOctetStream;
    internal static string MimeApplicationHttp;
    internal static string MimeTextXml;
    internal static string MimeTextPlain;
    internal static string TextJavaScript;
    internal static string MimeMultipartMixed;
    internal static string MimeStar;
    private static string Separator;
}
internal class Microsoft.OData.MultipartMixed.DependsOnIdsTracker : object {
    private IList`1<string> topLevelDependsOnIds;
    private IList`1<string> changeSetDependsOnIds;
    private bool isInChangeSet;
    internal void ChangeSetStarted();
    internal void ChangeSetEnded();
    internal void AddDependsOnId(string id);
    internal IEnumerable`1<string> GetDependsOnIds();
}
internal class Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchFormat : ODataFormat {
    public virtual string ToString();
    public virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
    public virtual ODataInputContext CreateInputContext(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public virtual ODataOutputContext CreateOutputContext(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    public virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
    public virtual Task`1<ODataInputContext> CreateInputContextAsync(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public virtual Task`1<ODataOutputContext> CreateOutputContextAsync(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    internal virtual string GetContentType(ODataMediaType mediaType, Encoding encoding, bool writingResponse, IEnumerable`1& mediaTypeParameters);
    private static IEnumerable`1<ODataPayloadKind> DetectPayloadKindImplementation(ODataMediaType contentType);
}
internal class Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchInputContext : ODataRawInputContext {
    private string batchBoundary;
    public ODataMultipartMixedBatchInputContext(ODataFormat format, ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    internal virtual ODataBatchReader CreateBatchReader();
    internal virtual Task`1<ODataBatchReader> CreateBatchReaderAsync();
    private ODataBatchReader CreateBatchReaderImplementation(bool synchronous);
    [CompilerGeneratedAttribute]
private ODataBatchReader <CreateBatchReaderAsync>b__3_0();
}
internal class Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchOutputContext : ODataRawOutputContext {
    private string batchBoundary;
    internal ODataMultipartMixedBatchOutputContext(ODataFormat format, ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    internal virtual ODataBatchWriter CreateODataBatchWriter();
    internal virtual Task`1<ODataBatchWriter> CreateODataBatchWriterAsync();
    private ODataBatchWriter CreateODataBatchWriterImplementation();
}
internal class Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchReader : ODataBatchReader {
    private ODataMultipartMixedBatchReaderStream batchStream;
    private DependsOnIdsTracker dependsOnIdsTracker;
    private string currentContentId;
    private ODataMultipartMixedBatchInputContext MultipartMixedBatchInputContext { get; }
    internal ODataMultipartMixedBatchReader(ODataMultipartMixedBatchInputContext inputContext, string batchBoundary, Encoding batchEncoding, bool synchronous);
    private ODataMultipartMixedBatchInputContext get_MultipartMixedBatchInputContext();
    protected virtual ODataBatchOperationRequestMessage CreateOperationRequestMessageImplementation();
    protected virtual ODataBatchOperationResponseMessage CreateOperationResponseMessageImplementation();
    protected virtual ODataBatchReaderState ReadAtStartImplementation();
    protected virtual ODataBatchReaderState ReadAtOperationImplementation();
    protected virtual ODataBatchReaderState ReadAtChangesetStartImplementation();
    protected virtual ODataBatchReaderState ReadAtChangesetEndImplementation();
    protected virtual void ValidateDependsOnIds(string contentId, IEnumerable`1<string> dependsOnIds);
    private ODataBatchReaderState GetEndBoundaryState();
    private void ParseRequestLine(string requestLine, String& httpMethod, Uri& requestUri);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
private int ParseResponseLine(string responseLine);
    private ODataBatchReaderState SkipToNextPartAndReadHeaders();
}
internal class Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchReaderStream : ODataBatchReaderStream {
    private static int LineBufferLength;
    private Byte[] lineBuffer;
    private string batchBoundary;
    private ODataMediaTypeResolver mediaTypeResolver;
    private Encoding batchEncoding;
    private Encoding changesetEncoding;
    private string changesetBoundary;
    private ODataMultipartMixedBatchInputContext multipartMixedBatchInputContext;
    internal string BatchBoundary { get; }
    internal string ChangeSetBoundary { get; }
    private Encoding CurrentEncoding { get; }
    private IEnumerable`1<string> CurrentBoundaries { get; }
    internal ODataMultipartMixedBatchReaderStream(ODataMultipartMixedBatchInputContext inputContext, string batchBoundary, Encoding batchEncoding);
    internal string get_BatchBoundary();
    internal string get_ChangeSetBoundary();
    private Encoding get_CurrentEncoding();
    [IteratorStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchReaderStream/<get_CurrentBoundaries>d__16")]
private IEnumerable`1<string> get_CurrentBoundaries();
    internal void ResetChangeSetBoundary();
    internal bool SkipToBoundary(Boolean& isEndBoundary, Boolean& isParentBoundary);
    internal virtual int ReadWithDelimiter(Byte[] userBuffer, int userBufferOffset, int count);
    internal virtual int ReadWithLength(Byte[] userBuffer, int userBufferOffset, int count);
    internal bool ProcessPartHeader(String& contentId);
    internal ODataBatchOperationHeaders ReadHeaders();
    internal string ReadFirstNonEmptyLine();
    private static void ValidateHeaderLine(string headerLine, String& headerName, String& headerValue);
    private string ReadLine();
    private ODataBatchOperationHeaders ReadPartHeaders(Boolean& isChangeSetPart);
    private ODataBatchOperationHeaders ValidatePartHeaders(ODataBatchOperationHeaders headers, Boolean& isChangeSetPart);
    private void DetermineChangesetBoundaryAndEncoding(string contentType);
    private void EnsureBatchEncoding(Stream stream);
    private Encoding DetectEncoding(Stream stream);
}
internal class Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriter : ODataBatchWriter {
    private string batchBoundary;
    private DependsOnIdsTracker dependsOnIdsTracker;
    private string changeSetBoundary;
    private bool batchStartBoundaryWritten;
    private bool changesetStartBoundaryWritten;
    private ODataMultipartMixedBatchOutputContext RawOutputContext { get; }
    private ODataBatchOperationMessage CurrentOperationMessage { get; }
    internal ODataMultipartMixedBatchWriter(ODataMultipartMixedBatchOutputContext rawOutputContext, string batchBoundary);
    private ODataMultipartMixedBatchOutputContext get_RawOutputContext();
    private ODataBatchOperationMessage get_CurrentOperationMessage();
    public virtual void StreamRequested();
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriter/<StreamRequestedAsync>d__11")]
public virtual Task StreamRequestedAsync();
    public virtual void StreamDisposed();
    public virtual Task StreamDisposedAsync();
    public virtual void OnInStreamError();
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriter/<OnInStreamErrorAsync>d__15")]
public virtual Task OnInStreamErrorAsync();
    protected virtual void FlushSynchronously();
    protected virtual Task FlushAsynchronously();
    protected virtual void WriteStartChangesetImplementation(string changeSetId);
    protected virtual IEnumerable`1<string> GetDependsOnRequestIds(IEnumerable`1<string> dependsOnIds);
    protected virtual void ValidateDependsOnIds(string contentId, IEnumerable`1<string> dependsOnIds);
    protected virtual ODataBatchOperationRequestMessage CreateOperationRequestMessageImplementation(string method, Uri uri, string contentId, BatchPayloadUriOption payloadUriOption, IEnumerable`1<string> dependsOnIds);
    protected virtual void WriteEndBatchImplementation();
    protected virtual void WriteEndChangesetImplementation();
    protected virtual ODataBatchOperationResponseMessage CreateOperationResponseMessageImplementation(string contentId);
    protected virtual void VerifyNotDisposed();
    protected virtual void WriteStartBatchImplementation();
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriter/<WriteEndBatchImplementationAsync>d__27")]
protected virtual Task WriteEndBatchImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriter/<WriteStartChangesetImplementationAsync>d__28")]
protected virtual Task WriteStartChangesetImplementationAsync(string changesetId);
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriter/<WriteEndChangesetImplementationAsync>d__29")]
protected virtual Task WriteEndChangesetImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriter/<CreateOperationRequestMessageImplementationAsync>d__30")]
protected virtual Task`1<ODataBatchOperationRequestMessage> CreateOperationRequestMessageImplementationAsync(string method, Uri uri, string contentId, BatchPayloadUriOption payloadUriOption, IEnumerable`1<string> dependsOnIds);
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriter/<CreateOperationResponseMessageImplementationAsync>d__31")]
protected virtual Task`1<ODataBatchOperationResponseMessage> CreateOperationResponseMessageImplementationAsync(string contentId);
    private void StartBatchOperationContent();
    private void DisposeBatchWriterAndSetContentStreamRequestedState();
    private void WriteStartBoundaryForOperation();
    private void WritePendingMessageData(bool reportMessageCompleted);
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriter/<StartBatchOperationContentAsync>d__36")]
private Task StartBatchOperationContentAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriter/<WriteStartBoundaryForOperationAsync>d__37")]
private Task WriteStartBoundaryForOperationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriter/<WritePendingMessageDataAsync>d__38")]
private Task WritePendingMessageDataAsync(bool reportMessageCompleted);
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriter/<DisposeBatchWriterAndSetContentStreamRequestedStateAsync>d__39")]
private Task DisposeBatchWriterAndSetContentStreamRequestedStateAsync();
}
internal static class Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriterUtils : object {
    internal static string CreateBatchBoundary(bool isResponse);
    internal static string CreateChangeSetBoundary(bool isResponse, string changesetId);
    internal static string CreateMultipartMixedContentType(string boundary);
    internal static string GetBatchBoundaryFromMediaType(ODataMediaType mediaType);
    internal static void WriteStartBoundary(TextWriter writer, string boundary, bool firstBoundary);
    internal static void WriteEndBoundary(TextWriter writer, string boundary, bool missingStartBoundary);
    internal static void WriteRequestPreamble(TextWriter writer, string httpMethod, Uri uri, Uri baseUri, bool inChangeSetBound, string contentId, BatchPayloadUriOption payloadUriOption);
    internal static void WriteResponsePreamble(TextWriter writer, bool inChangeSetBound, string contentId);
    internal static void WriteChangeSetPreamble(TextWriter writer, string changeSetBoundary);
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriterUtils/<WriteStartBoundaryAsync>d__9")]
internal static Task WriteStartBoundaryAsync(TextWriter writer, string boundary, bool firstBoundary);
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriterUtils/<WriteEndBoundaryAsync>d__10")]
internal static Task WriteEndBoundaryAsync(TextWriter writer, string boundary, bool missingStartBoundary);
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriterUtils/<WriteRequestPreambleAsync>d__11")]
internal static Task WriteRequestPreambleAsync(TextWriter writer, string httpMethod, Uri uri, Uri baseUri, bool inChangesetBound, string contentId, BatchPayloadUriOption payloadUriOption);
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriterUtils/<WriteResponsePreambleAsync>d__12")]
internal static Task WriteResponsePreambleAsync(TextWriter writer, bool inChangesetBound, string contentId);
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriterUtils/<WriteChangesetPreambleAsync>d__13")]
internal static Task WriteChangesetPreambleAsync(TextWriter writer, string changesetBoundary);
    private static void WriteHeaders(TextWriter writer, bool inChangeSetBound, string contentId);
    private static void WriteRequestUri(TextWriter writer, string httpMethod, Uri uri, Uri baseUri, BatchPayloadUriOption payloadUriOption);
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriterUtils/<WriteHeadersAsync>d__16")]
private static Task WriteHeadersAsync(TextWriter writer, bool inChangesetBound, string contentId);
    [AsyncStateMachineAttribute("Microsoft.OData.MultipartMixed.ODataMultipartMixedBatchWriterUtils/<WriteRequestUriAsync>d__17")]
private static Task WriteRequestUriAsync(TextWriter writer, string httpMethod, Uri uri, Uri baseUri, BatchPayloadUriOption payloadUriOption);
    private static string ExtractAbsoluteResourcePath(string absoluteUriString);
}
internal class Microsoft.OData.NodeToStringBuilder : QueryNodeVisitor`1<string> {
    private bool searchFlag;
    private Stack`1<RangeVariable> rangeVariables;
    public virtual string Visit(AllNode node);
    public virtual string Visit(AnyNode node);
    public virtual string Visit(BinaryOperatorNode node);
    public virtual string Visit(InNode node);
    public virtual string Visit(CountNode node);
    public virtual string Visit(CollectionNavigationNode node);
    public virtual string Visit(CollectionPropertyAccessNode node);
    public virtual string Visit(CollectionComplexNode node);
    public virtual string Visit(ConstantNode node);
    public virtual string Visit(CollectionConstantNode node);
    public virtual string Visit(ConvertNode node);
    public virtual string Visit(CollectionResourceCastNode node);
    public virtual string Visit(ResourceRangeVariableReferenceNode node);
    public virtual string Visit(NonResourceRangeVariableReferenceNode node);
    public virtual string Visit(SingleResourceCastNode node);
    public virtual string Visit(SingleNavigationNode node);
    public virtual string Visit(SingleResourceFunctionCallNode node);
    public virtual string Visit(SingleValueFunctionCallNode node);
    public virtual string Visit(CollectionFunctionCallNode node);
    public virtual string Visit(CollectionResourceFunctionCallNode node);
    public virtual string Visit(SingleValueOpenPropertyAccessNode node);
    public virtual string Visit(CollectionOpenPropertyAccessNode node);
    public virtual string Visit(SingleValuePropertyAccessNode node);
    public virtual string Visit(SingleComplexNode node);
    public virtual string Visit(ParameterAliasNode node);
    public virtual string Visit(NamedFunctionParameterNode node);
    public virtual string Visit(SearchTermNode node);
    public virtual string Visit(UnaryOperatorNode node);
    internal static string TranslateLevelsClause(LevelsClause levelsClause);
    internal string TranslateNode(QueryNode node);
    internal string TranslateFilterClause(FilterClause filterClause);
    internal string TranslateOrderByClause(OrderByClause orderByClause);
    internal string TranslateSearchClause(SearchClause searchClause);
    internal string TranslateComputeClause(ComputeClause computeClause);
    internal string TranslateParameterAliasNodes(IDictionary`2<string, SingleValueNode> dictionary);
    private string TranslatePropertyAccess(QueryNode sourceNode, string edmPropertyName, IEdmNavigationSource navigationSource);
    private string TranslateFunctionCall(string functionName, IEnumerable`1<QueryNode> argumentNodes);
    private string BinaryOperatorNodeToString(BinaryOperatorKind operatorKind);
    private static int TranslateBinaryOperatorPriority(BinaryOperatorKind operatorKind);
    private static bool IsValidSearchWord(string text);
    private bool IsDifferentSource(QueryNode node);
    private static ResourceRangeVariableReferenceNode GetResourceRangeVariableReferenceNode(QueryNode node);
}
internal class Microsoft.OData.NonDisposingStream : Stream {
    private Stream innerStream;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal NonDisposingStream(Stream innerStream);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    public virtual int Read(Byte[] buffer, int offset, int count);
    [AsyncStateMachineAttribute("Microsoft.OData.NonDisposingStream/<ReadAsync>d__16")]
public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
}
internal class Microsoft.OData.NullDuplicatePropertyNameChecker : object {
    public static NullDuplicatePropertyNameChecker Instance;
    private static NullDuplicatePropertyNameChecker();
    public sealed virtual void ValidatePropertyUniqueness(ODataPropertyInfo property);
    public sealed virtual void ValidatePropertyUniqueness(ODataNestedResourceInfo property);
    public sealed virtual void ValidatePropertyOpenForAssociationLink(string propertyName);
    public sealed virtual void Reset();
}
[DebuggerDisplayAttribute("{Metadata}")]
public class Microsoft.OData.ODataAction : ODataOperation {
}
public abstract class Microsoft.OData.ODataAnnotatable : object {
    private ICollection`1<ODataInstanceAnnotation> instanceAnnotations;
    [CompilerGeneratedAttribute]
private ODataTypeAnnotation <TypeAnnotation>k__BackingField;
    public ODataTypeAnnotation TypeAnnotation { get; public set; }
    [CompilerGeneratedAttribute]
public ODataTypeAnnotation get_TypeAnnotation();
    [CompilerGeneratedAttribute]
public void set_TypeAnnotation(ODataTypeAnnotation value);
    internal ICollection`1<ODataInstanceAnnotation> GetInstanceAnnotations();
    internal void SetInstanceAnnotations(ICollection`1<ODataInstanceAnnotation> value);
}
public class Microsoft.OData.ODataAsynchronousReader : object {
    private ODataRawInputContext rawInputContext;
    private IServiceProvider container;
    private Byte[] byteBuffer;
    internal ODataAsynchronousReader(ODataRawInputContext rawInputContext, Encoding encoding);
    public ODataAsynchronousResponseMessage CreateResponseMessage();
    public Task`1<ODataAsynchronousResponseMessage> CreateResponseMessageAsync();
    private void ValidateReaderNotDisposed();
    private void VerifyCallAllowed(bool synchronousCall);
    private void VerifyCanCreateResponseMessage(bool synchronousCall);
    private ODataAsynchronousResponseMessage CreateResponseMessageImplementation();
    private void ReadInnerEnvelope(Int32& statusCode, IDictionary`2& headers);
    private string ReadFirstNonEmptyLine();
    private static int ParseResponseLine(string responseLine);
    private IDictionary`2<string, string> ReadHeaders();
    private static void ValidateHeaderLine(string headerLine, String& headerName, String& headerValue);
    private string ReadLine();
    private int ReadByte();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataAsynchronousReader/<CreateResponseMessageImplementationAsync>d__17")]
private Task`1<ODataAsynchronousResponseMessage> CreateResponseMessageImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataAsynchronousReader/<ReadInnerEnvelopeAsync>d__18")]
private Task`1<Tuple`2<int, Dictionary`2<string, string>>> ReadInnerEnvelopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataAsynchronousReader/<ReadFirstNonEmptyLineAsync>d__19")]
private Task`1<string> ReadFirstNonEmptyLineAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataAsynchronousReader/<ReadHeadersAsync>d__20")]
private Task`1<Dictionary`2<string, string>> ReadHeadersAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataAsynchronousReader/<ReadLineAsync>d__21")]
private Task`1<string> ReadLineAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataAsynchronousReader/<ReadByteAsync>d__22")]
private Task`1<int> ReadByteAsync();
}
public class Microsoft.OData.ODataAsynchronousResponseMessage : object {
    private bool writing;
    private Stream stream;
    private Action`1<ODataAsynchronousResponseMessage> writeEnvelope;
    private Func`2<ODataAsynchronousResponseMessage, Task> writeEnvelopeAsync;
    private IServiceProvider container;
    private bool envelopeWritten;
    private int statusCode;
    private IDictionary`2<string, string> headers;
    public int StatusCode { get; public set; }
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    public IServiceProvider ServiceProvider { get; }
    private ODataAsynchronousResponseMessage(Stream stream, int statusCode, IDictionary`2<string, string> headers, bool writing, IServiceProvider container);
    private ODataAsynchronousResponseMessage(Stream stream, int statusCode, IDictionary`2<string, string> headers, Action`1<ODataAsynchronousResponseMessage> writeEnvelope, bool writing, IServiceProvider container);
    private ODataAsynchronousResponseMessage(Stream stream, int statusCode, IDictionary`2<string, string> headers, Func`2<ODataAsynchronousResponseMessage, Task> writeEnvelopeAsync, bool writing, IServiceProvider container);
    public sealed virtual int get_StatusCode();
    public sealed virtual void set_StatusCode(int value);
    public sealed virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public sealed virtual IServiceProvider get_ServiceProvider();
    public sealed virtual string GetHeader(string headerName);
    public sealed virtual void SetHeader(string headerName, string headerValue);
    public sealed virtual Stream GetStream();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataAsynchronousResponseMessage/<GetStreamAsync>d__21")]
public sealed virtual Task`1<Stream> GetStreamAsync();
    internal static ODataAsynchronousResponseMessage CreateMessageForWriting(Stream outputStream, Action`1<ODataAsynchronousResponseMessage> writeEnvelope, IServiceProvider container);
    internal static Task`1<ODataAsynchronousResponseMessage> CreateMessageForWritingAsync(Stream outputStream, Func`2<ODataAsynchronousResponseMessage, Task> writeEnvelopeAsync, IServiceProvider container);
    internal static ODataAsynchronousResponseMessage CreateMessageForReading(Stream stream, int statusCode, IDictionary`2<string, string> headers, IServiceProvider container);
    private void VerifyCanSetHeaderAndStatusCode();
}
public class Microsoft.OData.ODataAsynchronousWriter : object {
    private ODataRawOutputContext rawOutputContext;
    private IServiceProvider container;
    private bool responseMessageCreated;
    internal ODataAsynchronousWriter(ODataRawOutputContext rawOutputContext);
    public ODataAsynchronousResponseMessage CreateResponseMessage();
    public Task`1<ODataAsynchronousResponseMessage> CreateResponseMessageAsync();
    public void Flush();
    public Task FlushAsync();
    private sealed virtual override void Microsoft.OData.IODataOutputInStreamErrorListener.OnInStreamError();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataAsynchronousWriter/<Microsoft-OData-IODataOutputInStreamErrorListener-OnInStreamErrorAsync>d__9")]
private sealed virtual override Task Microsoft.OData.IODataOutputInStreamErrorListener.OnInStreamErrorAsync();
    private void ValidateWriterNotDisposed();
    private void VerifyCallAllowed(bool synchronousCall);
    private void VerifyCanFlush(bool synchronousCall);
    private void VerifyCanCreateResponseMessage(bool synchronousCall);
    private ODataAsynchronousResponseMessage CreateResponseMessageImplementation();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataAsynchronousWriter/<CreateResponseMessageImplementationAsync>d__15")]
private Task`1<ODataAsynchronousResponseMessage> CreateResponseMessageImplementationAsync();
    private void WriteInnerEnvelope(ODataAsynchronousResponseMessage responseMessage);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataAsynchronousWriter/<WriteInnerEnvelopeAsync>d__17")]
private Task WriteInnerEnvelopeAsync(ODataAsynchronousResponseMessage responseMessage);
}
[DefaultMemberAttribute("Item")]
[SuppressMessageAttribute("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
public class Microsoft.OData.ODataBatchOperationHeaders : object {
    private Dictionary`2<string, string> headersDictionary;
    public string Item { get; public set; }
    public string get_Item(string key);
    public void set_Item(string key, string value);
    public void Add(string key, string value);
    public bool ContainsKeyOrdinal(string key);
    public bool Remove(string key);
    public bool TryGetValue(string key, String& value);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, string>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class Microsoft.OData.ODataBatchOperationMessage : ODataMessage {
    private IODataStreamListener operationListener;
    private IODataPayloadUriConverter payloadUriConverter;
    private Func`1<Stream> contentStreamCreatorFunc;
    private ODataBatchOperationHeaders headers;
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    internal ODataBatchOperationMessage(Func`1<Stream> contentStreamCreatorFunc, ODataBatchOperationHeaders headers, IODataStreamListener operationListener, IODataPayloadUriConverter payloadUriConverter, bool writing);
    public virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public virtual string GetHeader(string headerName);
    public virtual void SetHeader(string headerName, string headerValue);
    public virtual Stream GetStream();
    public virtual Task`1<Stream> GetStreamAsync();
    internal virtual TInterface QueryInterface();
    internal Uri ResolveUrl(Uri baseUri, Uri payloadUri);
    internal void PartHeaderProcessingCompleted();
    internal void VerifyNotCompleted();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBatchOperationMessage/<<GetStreamAsync>g__GetStreamInnerAsync|10_0>d")]
[CompilerGeneratedAttribute]
private Task`1<Stream> <GetStreamAsync>g__GetStreamInnerAsync|10_0();
}
public class Microsoft.OData.ODataBatchOperationRequestMessage : object {
    public string ContentId;
    private string groupId;
    private ODataBatchOperationMessage message;
    private List`1<string> dependsOnIds;
    [CompilerGeneratedAttribute]
private Uri <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    public Uri Url { get; public set; }
    public string Method { get; public set; }
    public IServiceProvider ServiceProvider { get; private set; }
    public string GroupId { get; }
    public IEnumerable`1<string> DependsOnIds { get; }
    internal ODataBatchOperationMessage OperationMessage { get; }
    internal ODataBatchOperationRequestMessage(Func`1<Stream> contentStreamCreatorFunc, string method, Uri requestUrl, ODataBatchOperationHeaders headers, IODataStreamListener operationListener, string contentId, IODataPayloadUriConverter payloadUriConverter, bool writing, IServiceProvider serviceProvider, IEnumerable`1<string> dependsOnIds, string groupId);
    public sealed virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Url(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Method();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Method(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
private void set_ServiceProvider(IServiceProvider value);
    public string get_GroupId();
    public IEnumerable`1<string> get_DependsOnIds();
    internal ODataBatchOperationMessage get_OperationMessage();
    public sealed virtual string GetHeader(string headerName);
    public sealed virtual void SetHeader(string headerName, string headerValue);
    public sealed virtual Stream GetStream();
    public sealed virtual Task`1<Stream> GetStreamAsync();
    private sealed virtual override Uri Microsoft.OData.IODataPayloadUriConverter.ConvertPayloadUri(Uri baseUri, Uri payloadUri);
}
public class Microsoft.OData.ODataBatchOperationResponseMessage : object {
    public string ContentId;
    private ODataBatchOperationMessage message;
    private int statusCode;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupId>k__BackingField;
    public int StatusCode { get; public set; }
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    public IServiceProvider ServiceProvider { get; private set; }
    public string GroupId { get; }
    internal ODataBatchOperationMessage OperationMessage { get; }
    internal ODataBatchOperationResponseMessage(Func`1<Stream> contentStreamCreatorFunc, ODataBatchOperationHeaders headers, IODataStreamListener operationListener, string contentId, IODataPayloadUriConverter payloadUriConverter, bool writing, IServiceProvider serviceProvider, string groupId);
    public sealed virtual int get_StatusCode();
    public sealed virtual void set_StatusCode(int value);
    public sealed virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    [CompilerGeneratedAttribute]
public sealed virtual IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
private void set_ServiceProvider(IServiceProvider value);
    [CompilerGeneratedAttribute]
public string get_GroupId();
    internal ODataBatchOperationMessage get_OperationMessage();
    public sealed virtual string GetHeader(string headerName);
    public sealed virtual void SetHeader(string headerName, string headerValue);
    public sealed virtual Stream GetStream();
    public sealed virtual Task`1<Stream> GetStreamAsync();
    private sealed virtual override Uri Microsoft.OData.IODataPayloadUriConverter.ConvertPayloadUri(Uri baseUri, Uri payloadUri);
}
internal class Microsoft.OData.ODataBatchPayloadUriConverter : object {
    private IODataPayloadUriConverter batchMessagePayloadUriConverter;
    private HashSet`1<string> contentIdCache;
    internal IODataPayloadUriConverter BatchMessagePayloadUriConverter { get; }
    internal IEnumerable`1<string> ContentIdCache { get; }
    internal ODataBatchPayloadUriConverter(IODataPayloadUriConverter batchMessagePayloadUriConverter);
    internal IODataPayloadUriConverter get_BatchMessagePayloadUriConverter();
    internal IEnumerable`1<string> get_ContentIdCache();
    private sealed virtual override Uri Microsoft.OData.IODataPayloadUriConverter.ConvertPayloadUri(Uri baseUri, Uri payloadUri);
    internal void AddContentId(string contentId);
    internal bool ContainsContentId(string contentId);
    internal void Reset();
}
public abstract class Microsoft.OData.ODataBatchReader : object {
    internal ODataBatchPayloadUriConverter PayloadUriConverter;
    private ODataInputContext inputContext;
    private bool synchronous;
    private IServiceProvider container;
    private ODataBatchReaderState batchReaderState;
    private UInt32 currentBatchSize;
    private UInt32 currentChangeSetSize;
    private OperationState operationState;
    private bool isInChangeset;
    private string contentIdToAddOnNextRead;
    public ODataBatchReaderState State { get; private set; }
    public string CurrentGroupId { get; }
    protected ODataInputContext InputContext { get; }
    private OperationState ReaderOperationState { get; private set; }
    protected ODataBatchReader(ODataInputContext inputContext, bool synchronous);
    public ODataBatchReaderState get_State();
    private void set_State(ODataBatchReaderState value);
    public string get_CurrentGroupId();
    protected ODataInputContext get_InputContext();
    private OperationState get_ReaderOperationState();
    private void set_ReaderOperationState(OperationState value);
    public bool Read();
    public Task`1<bool> ReadAsync();
    public ODataBatchOperationRequestMessage CreateOperationRequestMessage();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBatchReader/<CreateOperationRequestMessageAsync>d__25")]
public Task`1<ODataBatchOperationRequestMessage> CreateOperationRequestMessageAsync();
    public ODataBatchOperationResponseMessage CreateOperationResponseMessage();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBatchReader/<CreateOperationResponseMessageAsync>d__27")]
public Task`1<ODataBatchOperationResponseMessage> CreateOperationResponseMessageAsync();
    private sealed virtual override void Microsoft.OData.IODataStreamListener.StreamRequested();
    private sealed virtual override Task Microsoft.OData.IODataStreamListener.StreamRequestedAsync();
    private sealed virtual override void Microsoft.OData.IODataStreamListener.StreamDisposed();
    private sealed virtual override Task Microsoft.OData.IODataStreamListener.StreamDisposedAsync();
    protected void ThrowODataException(string errorMessage);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
protected virtual string GetCurrentGroupIdImplementation();
    protected abstract virtual ODataBatchOperationRequestMessage CreateOperationRequestMessageImplementation();
    protected abstract virtual ODataBatchOperationResponseMessage CreateOperationResponseMessageImplementation();
    protected abstract virtual ODataBatchReaderState ReadAtStartImplementation();
    protected abstract virtual ODataBatchReaderState ReadAtOperationImplementation();
    protected abstract virtual ODataBatchReaderState ReadAtChangesetStartImplementation();
    protected abstract virtual ODataBatchReaderState ReadAtChangesetEndImplementation();
    protected abstract virtual void ValidateDependsOnIds(string contentId, IEnumerable`1<string> dependsOnIds);
    protected ODataBatchOperationRequestMessage BuildOperationRequestMessage(Func`1<Stream> streamCreatorFunc, string method, Uri requestUri, ODataBatchOperationHeaders headers, string contentId, string groupId, IEnumerable`1<string> dependsOnRequestIds, bool dependsOnIdsValidationRequired);
    protected ODataBatchOperationResponseMessage BuildOperationResponseMessage(Func`1<Stream> streamCreatorFunc, int statusCode, ODataBatchOperationHeaders headers, string contentId, string groupId);
    protected virtual Task`1<ODataBatchOperationRequestMessage> CreateOperationRequestMessageImplementationAsync();
    protected virtual Task`1<ODataBatchOperationResponseMessage> CreateOperationResponseMessageImplementationAsync();
    protected virtual Task`1<ODataBatchReaderState> ReadAtStartImplementationAsync();
    protected virtual Task`1<ODataBatchReaderState> ReadAtOperationImplementationAsync();
    protected virtual Task`1<ODataBatchReaderState> ReadAtChangesetStartImplementationAsync();
    protected virtual Task`1<ODataBatchReaderState> ReadAtChangesetEndImplementationAsync();
    private void IncreaseBatchSize();
    private void IncreaseChangesetSize();
    private void ResetChangesetSize();
    private bool ReadSynchronously();
    [SuppressMessageAttribute("Microsoft.MSInternal", "CA908:AvoidTypesThatRequireJitCompilationInPrecompiledAssemblies")]
private Task`1<bool> ReadAsynchronously();
    private bool ReadImplementation();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBatchReader/<ReadImplementationAsync>d__55")]
private Task`1<bool> ReadImplementationAsync();
    private void VerifyCanCreateOperationRequestMessage(bool synchronousCall);
    private void VerifyCanCreateOperationResponseMessage(bool synchronousCall);
    private void VerifyCanRead(bool synchronousCall);
    private void VerifyReaderReady();
    private void VerifyCallAllowed(bool synchronousCall);
    private T InterceptException(Func`2<ODataBatchReader, T> action);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBatchReader/<InterceptExceptionAsync>d__62`1")]
private Task`1<TResult> InterceptExceptionAsync(Func`2<ODataBatchReader, Task`1<TResult>> action);
}
public enum Microsoft.OData.ODataBatchReaderState : Enum {
    public int value__;
    public static ODataBatchReaderState Initial;
    public static ODataBatchReaderState Operation;
    public static ODataBatchReaderState ChangesetStart;
    public static ODataBatchReaderState ChangesetEnd;
    public static ODataBatchReaderState Completed;
    public static ODataBatchReaderState Exception;
}
internal abstract class Microsoft.OData.ODataBatchReaderStream : object {
    protected ODataBatchReaderStreamBuffer BatchBuffer;
    protected bool underlyingStreamExhausted;
    internal abstract virtual int ReadWithDelimiter(Byte[] userBuffer, int userBufferOffset, int count);
    internal abstract virtual int ReadWithLength(Byte[] userBuffer, int userBufferOffset, int count);
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.OData.ODataBatchReaderStreamBuffer : object {
    internal static int BufferLength;
    private static int MaxLineFeedLength;
    private static int TwoDashesLength;
    private Byte[] bytes;
    private int currentReadPosition;
    private int numberOfBytesInBuffer;
    internal Byte[] Bytes { get; }
    internal int CurrentReadPosition { get; }
    internal int NumberOfBytesInBuffer { get; }
    internal byte Item { get; }
    internal Byte[] get_Bytes();
    internal int get_CurrentReadPosition();
    internal int get_NumberOfBytesInBuffer();
    internal byte get_Item(int index);
    internal void SkipTo(int newPosition);
    internal bool RefillFrom(Stream stream, int preserveFrom);
    internal ODataBatchReaderStreamScanResult ScanForLineEnd(Int32& lineEndStartPosition, Int32& lineEndEndPosition);
    internal ODataBatchReaderStreamScanResult ScanForBoundary(IEnumerable`1<string> boundaries, int maxDataBytesToScan, Int32& boundaryStartPosition, Int32& boundaryEndPosition, Boolean& isEndBoundary, Boolean& isParentBoundary);
    private ODataBatchReaderStreamScanResult ScanForBoundaryStart(int scanStartIx, int maxDataBytesToScan, Int32& lineEndStartPosition, Int32& boundaryDelimiterStartPosition);
    private ODataBatchReaderStreamScanResult ScanForLineEnd(int scanStartIx, int maxDataBytesToScan, bool allowLeadingWhitespaceOnly, Int32& lineEndStartPosition, Int32& lineEndEndPosition, Boolean& endOfBufferReached);
    private ODataBatchReaderStreamScanResult MatchBoundary(int lineEndStartPosition, int boundaryDelimiterStartPosition, string boundary, Int32& boundaryStartPosition, Int32& boundaryEndPosition, Boolean& isEndBoundary);
    private bool MatchBoundary(string boundary, int startIx, int matchLength, Boolean& isEndBoundary);
    private void ShiftToBeginning(int startIndex);
}
internal enum Microsoft.OData.ODataBatchReaderStreamScanResult : Enum {
    public int value__;
    public static ODataBatchReaderStreamScanResult NoMatch;
    public static ODataBatchReaderStreamScanResult PartialMatch;
    public static ODataBatchReaderStreamScanResult Match;
}
internal static class Microsoft.OData.ODataBatchUtils : object {
    internal static Uri CreateOperationRequestUri(Uri uri, Uri baseUri, IODataPayloadUriConverter payloadUriConverter);
    internal static ODataReadStream CreateBatchOperationReadStream(ODataBatchReaderStream batchReaderStream, ODataBatchOperationHeaders headers, IODataStreamListener operationListener, bool synchronous);
    internal static ODataWriteStream CreateBatchOperationWriteStream(Stream outputStream, IODataStreamListener operationListener, bool synchronous);
    internal static void EnsureArraySize(Byte[]& buffer, int numberOfBytesInBuffer, int requiredByteCount);
    internal static void ValidateReferenceUri(Uri uri, IEnumerable`1<string> dependsOnRequestIds, Uri baseUri);
}
public abstract class Microsoft.OData.ODataBatchWriter : object {
    private ODataOutputContext outputContext;
    private IServiceProvider container;
    private BatchWriterState state;
    private ODataBatchOperationRequestMessage currentOperationRequestMessage;
    private ODataBatchOperationResponseMessage currentOperationResponseMessage;
    private string currentOperationContentId;
    private UInt32 currentBatchSize;
    private UInt32 currentChangeSetSize;
    private bool isInChangeset;
    internal ODataBatchPayloadUriConverter payloadUriConverter;
    protected ODataBatchOperationRequestMessage CurrentOperationRequestMessage { get; protected set; }
    protected ODataBatchOperationResponseMessage CurrentOperationResponseMessage { get; protected set; }
    protected ODataOutputContext OutputContext { get; }
    internal ODataBatchWriter(ODataOutputContext outputContext);
    protected ODataBatchOperationRequestMessage get_CurrentOperationRequestMessage();
    protected void set_CurrentOperationRequestMessage(ODataBatchOperationRequestMessage value);
    protected ODataBatchOperationResponseMessage get_CurrentOperationResponseMessage();
    protected void set_CurrentOperationResponseMessage(ODataBatchOperationResponseMessage value);
    protected ODataOutputContext get_OutputContext();
    public void WriteStartBatch();
    public Task WriteStartBatchAsync();
    public void WriteEndBatch();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBatchWriter/<WriteEndBatchAsync>d__23")]
public Task WriteEndBatchAsync();
    public void WriteStartChangeset();
    public void WriteStartChangeset(string changesetId);
    public Task WriteStartChangesetAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBatchWriter/<WriteStartChangesetAsync>d__27")]
public Task WriteStartChangesetAsync(string changesetId);
    public void WriteEndChangeset();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBatchWriter/<WriteEndChangesetAsync>d__29")]
public Task WriteEndChangesetAsync();
    public ODataBatchOperationRequestMessage CreateOperationRequestMessage(string method, Uri uri, string contentId);
    public ODataBatchOperationRequestMessage CreateOperationRequestMessage(string method, Uri uri, string contentId, BatchPayloadUriOption payloadUriOption);
    public ODataBatchOperationRequestMessage CreateOperationRequestMessage(string method, Uri uri, string contentId, BatchPayloadUriOption payloadUriOption, IEnumerable`1<string> dependsOnIds);
    public Task`1<ODataBatchOperationRequestMessage> CreateOperationRequestMessageAsync(string method, Uri uri, string contentId);
    public Task`1<ODataBatchOperationRequestMessage> CreateOperationRequestMessageAsync(string method, Uri uri, string contentId, BatchPayloadUriOption payloadUriOption);
    public Task`1<ODataBatchOperationRequestMessage> CreateOperationRequestMessageAsync(string method, Uri uri, string contentId, BatchPayloadUriOption payloadUriOption, IList`1<string> dependsOnIds);
    public ODataBatchOperationResponseMessage CreateOperationResponseMessage(string contentId);
    public Task`1<ODataBatchOperationResponseMessage> CreateOperationResponseMessageAsync(string contentId);
    public void Flush();
    public Task FlushAsync();
    public abstract virtual void StreamRequested();
    public abstract virtual Task StreamRequestedAsync();
    public abstract virtual void StreamDisposed();
    public virtual Task StreamDisposedAsync();
    public abstract virtual void OnInStreamError();
    public virtual Task OnInStreamErrorAsync();
    protected abstract virtual void FlushSynchronously();
    protected abstract virtual Task FlushAsynchronously();
    protected abstract virtual void WriteEndBatchImplementation();
    protected abstract virtual void WriteStartChangesetImplementation(string groupOrChangesetId);
    protected abstract virtual void WriteEndChangesetImplementation();
    protected abstract virtual ODataBatchOperationResponseMessage CreateOperationResponseMessageImplementation(string contentId);
    protected abstract virtual ODataBatchOperationRequestMessage CreateOperationRequestMessageImplementation(string method, Uri uri, string contentId, BatchPayloadUriOption payloadUriOption, IEnumerable`1<string> dependsOnIds);
    protected void SetState(BatchWriterState newState);
    protected abstract virtual void VerifyNotDisposed();
    protected abstract virtual void WriteStartBatchImplementation();
    protected abstract virtual IEnumerable`1<string> GetDependsOnRequestIds(IEnumerable`1<string> dependsOnIds);
    protected abstract virtual void ValidateDependsOnIds(string contentId, IEnumerable`1<string> dependsOnIds);
    protected ODataBatchOperationRequestMessage BuildOperationRequestMessage(Stream outputStream, string method, Uri uri, string contentId, string groupId, IEnumerable`1<string> dependsOnIds);
    protected ODataBatchOperationResponseMessage BuildOperationResponseMessage(Stream outputStream, string contentId, string groupId);
    protected virtual Task WriteStartBatchImplementationAsync();
    protected virtual Task WriteEndBatchImplementationAsync();
    protected virtual Task WriteStartChangesetImplementationAsync(string groupOrChangesetId);
    protected virtual Task WriteEndChangesetImplementationAsync();
    protected virtual Task`1<ODataBatchOperationRequestMessage> CreateOperationRequestMessageImplementationAsync(string method, Uri uri, string contentId, BatchPayloadUriOption payloadUriOption, IEnumerable`1<string> dependsOnIds);
    protected virtual Task`1<ODataBatchOperationResponseMessage> CreateOperationResponseMessageImplementationAsync(string contentId);
    private void InterceptException(Action`1<ODataBatchWriter> action);
    private void InterceptException(Action`2<ODataBatchWriter, TArg0> action, TArg0 arg0);
    private TResult InterceptException(Func`3<ODataBatchWriter, TArg, TResult> operation, TArg arg);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBatchWriter/<InterceptExceptionAsync>d__69")]
private Task InterceptExceptionAsync(Func`2<ODataBatchWriter, Task> action);
    private void ThrowODataException(string errorMessage);
    private ODataBatchOperationRequestMessage CreateOperationRequestMessageInternal(string method, Uri uri, string contentId, BatchPayloadUriOption payloadUriOption, IEnumerable`1<string> dependsOnIds);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBatchWriter/<CreateOperationRequestMessageInternalAsync>d__72")]
private Task`1<ODataBatchOperationRequestMessage> CreateOperationRequestMessageInternalAsync(string method, Uri uri, string contentId, BatchPayloadUriOption payloadUriOption, IEnumerable`1<string> dependsOnIds);
    private void FinishWriteStartChangeset();
    private void FinishWriteEndChangeset();
    private void RememberContentIdHeader(string contentId);
    private void IncreaseBatchSize();
    private void IncreaseChangeSetSize();
    private void ResetChangeSetSize();
    private void VerifyCallAllowed(bool synchronousCall);
    private void VerifyCanCreateOperationRequestMessage(bool synchronousCall, string method, Uri uri, string contentId);
    private void VerifyCanFlush(bool synchronousCall);
    private void ValidateWriterReady();
    private static bool IsErrorState(BatchWriterState state);
    private void VerifyCanWriteStartBatch(bool synchronousCall);
    private void VerifyCanWriteEndBatch(bool synchronousCall);
    private void VerifyCanWriteStartChangeset(bool synchronousCall);
    private void VerifyCanWriteEndChangeset(bool synchronousCall);
    private void VerifyCanCreateOperationResponseMessage(bool synchronousCall);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
private void ValidateTransition(BatchWriterState newState);
}
internal class Microsoft.OData.ODataBinaryStreamReader : Stream {
    private StreamReaderDelegate reader;
    private AsyncStreamReaderDelegate asyncReader;
    private int charLength;
    private Char[] chars;
    private int bytesOffset;
    private Byte[] bytes;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal ODataBinaryStreamReader(StreamReaderDelegate reader);
    internal ODataBinaryStreamReader(AsyncStreamReaderDelegate asyncReader);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual int Read(Byte[] buffer, int offset, int count);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBinaryStreamReader/<ReadAsync>d__21")]
public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual void Flush();
    public virtual void SetLength(long value);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void Write(Byte[] buffer, int offset, int count);
    [DebuggerStepThroughAttribute]
[ConditionalAttribute("DEBUG")]
private void AssertSynchronous();
    [DebuggerStepThroughAttribute]
[ConditionalAttribute("DEBUG")]
private void AssertAsynchronous();
}
public class Microsoft.OData.ODataBinaryStreamValue : ODataValue {
    [CompilerGeneratedAttribute]
private Stream <Stream>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LeaveOpen>k__BackingField;
    public Stream Stream { get; private set; }
    internal bool LeaveOpen { get; }
    public ODataBinaryStreamValue(Stream stream);
    public ODataBinaryStreamValue(Stream stream, bool leaveOpen);
    [CompilerGeneratedAttribute]
public Stream get_Stream();
    [CompilerGeneratedAttribute]
private void set_Stream(Stream value);
    [CompilerGeneratedAttribute]
internal bool get_LeaveOpen();
}
internal class Microsoft.OData.ODataBinaryStreamWriter : Stream {
    private static int MinBytesPerWriteEvent;
    private TextWriter Writer;
    private Byte[] trailingBytes;
    private Ref`1<Char[]> wrappedBuffer;
    private ICharArrayPool bufferPool;
    private Byte[] emptyByteArray;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public ODataBinaryStreamWriter(TextWriter writer);
    public ODataBinaryStreamWriter(TextWriter writer, Ref`1<Char[]> wrappedBuffer, ICharArrayPool bufferPool);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Write(Byte[] bytes, int offset, int count);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBinaryStreamWriter/<WriteAsync>d__20")]
public virtual Task WriteAsync(Byte[] bytes, int offset, int count, CancellationToken cancellationToken);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Flush();
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataBinaryStreamWriter/<DisposeAsync>d__27")]
public virtual ValueTask DisposeAsync();
    private void PrepareByteArray(Byte[] bytes, int offset, int count, Byte[]& byteArray);
}
public abstract class Microsoft.OData.ODataCollectionReader : object {
    public ODataCollectionReaderState State { get; }
    public object Item { get; }
    public abstract virtual ODataCollectionReaderState get_State();
    public abstract virtual object get_Item();
    public abstract virtual bool Read();
    public abstract virtual Task`1<bool> ReadAsync();
}
internal abstract class Microsoft.OData.ODataCollectionReaderCore : ODataCollectionReader {
    private ODataInputContext inputContext;
    private Stack`1<Scope> scopes;
    private IODataReaderWriterListener listener;
    private CollectionWithoutExpectedTypeValidator collectionValidator;
    private IEdmTypeReference expectedItemTypeReference;
    public ODataCollectionReaderState State { get; }
    public object Item { get; }
    protected IEdmTypeReference ExpectedItemTypeReference { get; protected set; }
    protected CollectionWithoutExpectedTypeValidator CollectionValidator { get; }
    protected bool IsReadingNestedPayload { get; }
    protected ODataCollectionReaderCore(ODataInputContext inputContext, IEdmTypeReference expectedItemTypeReference, IODataReaderWriterListener listener);
    public sealed virtual ODataCollectionReaderState get_State();
    public sealed virtual object get_Item();
    protected IEdmTypeReference get_ExpectedItemTypeReference();
    protected void set_ExpectedItemTypeReference(IEdmTypeReference value);
    protected CollectionWithoutExpectedTypeValidator get_CollectionValidator();
    protected bool get_IsReadingNestedPayload();
    public sealed virtual bool Read();
    public sealed virtual Task`1<bool> ReadAsync();
    protected bool ReadImplementation();
    protected abstract virtual bool ReadAtStartImplementation();
    protected abstract virtual bool ReadAtCollectionStartImplementation();
    protected abstract virtual bool ReadAtValueImplementation();
    protected abstract virtual bool ReadAtCollectionEndImplementation();
    protected bool ReadSynchronously();
    protected virtual Task`1<bool> ReadAsynchronously();
    protected void EnterScope(ODataCollectionReaderState state, object item);
    protected void EnterScope(ODataCollectionReaderState state, object item, bool isCollectionElementEmpty);
    protected void ReplaceScope(ODataCollectionReaderState state, object item);
    [SuppressMessageAttribute("Microsoft.Usage", "CA1801:ReviewUnusedParameters")]
[SuppressMessageAttribute("Microsoft.Performance", "CA1804:RemoveUnusedLocals")]
protected void PopScope(ODataCollectionReaderState state);
    private T InterceptException(Func`2<ODataCollectionReaderCore, T> action);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataCollectionReaderCore/<InterceptExceptionAsync>d__31`1")]
private Task`1<TResult> InterceptExceptionAsync(Func`2<ODataCollectionReaderCore, Task`1<TResult>> action);
    private void VerifyCanRead(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
    private void VerifySynchronousCallAllowed();
    private void VerifyAsynchronousCallAllowed();
}
internal abstract class Microsoft.OData.ODataCollectionReaderCoreAsync : ODataCollectionReaderCore {
    protected ODataCollectionReaderCoreAsync(ODataInputContext inputContext, IEdmTypeReference expectedItemTypeReference, IODataReaderWriterListener listener);
    protected abstract virtual Task`1<bool> ReadAtStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtCollectionStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtValueImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtCollectionEndImplementationAsync();
    protected virtual Task`1<bool> ReadAsynchronously();
}
public enum Microsoft.OData.ODataCollectionReaderState : Enum {
    public int value__;
    public static ODataCollectionReaderState Start;
    public static ODataCollectionReaderState CollectionStart;
    public static ODataCollectionReaderState Value;
    public static ODataCollectionReaderState CollectionEnd;
    public static ODataCollectionReaderState Exception;
    public static ODataCollectionReaderState Completed;
}
public class Microsoft.OData.ODataCollectionStart : ODataAnnotatable {
    private ODataCollectionStartSerializationInfo serializationInfo;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <NextPageLink>k__BackingField;
    public string Name { get; public set; }
    public Nullable`1<long> Count { get; public set; }
    public Uri NextPageLink { get; public set; }
    internal ODataCollectionStartSerializationInfo SerializationInfo { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Uri get_NextPageLink();
    [CompilerGeneratedAttribute]
public void set_NextPageLink(Uri value);
    internal ODataCollectionStartSerializationInfo get_SerializationInfo();
    internal void set_SerializationInfo(ODataCollectionStartSerializationInfo value);
}
public class Microsoft.OData.ODataCollectionStartSerializationInfo : object {
    private string collectionTypeName;
    public string CollectionTypeName { get; public set; }
    public string get_CollectionTypeName();
    public void set_CollectionTypeName(string value);
    internal static ODataCollectionStartSerializationInfo Validate(ODataCollectionStartSerializationInfo serializationInfo);
}
public class Microsoft.OData.ODataCollectionValue : ODataValue {
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> <Items>k__BackingField;
    public string TypeName { get; public set; }
    public IEnumerable`1<object> Items { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<object> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IEnumerable`1<object> value);
}
public abstract class Microsoft.OData.ODataCollectionWriter : object {
    public abstract virtual void WriteStart(ODataCollectionStart collectionStart);
    public abstract virtual Task WriteStartAsync(ODataCollectionStart collectionStart);
    public abstract virtual void WriteItem(object item);
    public abstract virtual Task WriteItemAsync(object item);
    public abstract virtual void WriteEnd();
    public abstract virtual Task WriteEndAsync();
    public abstract virtual void Flush();
    public abstract virtual Task FlushAsync();
}
internal abstract class Microsoft.OData.ODataCollectionWriterCore : ODataCollectionWriter {
    private ODataOutputContext outputContext;
    private IODataReaderWriterListener listener;
    private Stack`1<Scope> scopes;
    private IEdmTypeReference expectedItemType;
    private IDuplicatePropertyNameChecker duplicatePropertyNameChecker;
    private CollectionWithoutExpectedTypeValidator collectionValidator;
    protected CollectionWriterState State { get; }
    protected IDuplicatePropertyNameChecker DuplicatePropertyNameChecker { get; }
    protected CollectionWithoutExpectedTypeValidator CollectionValidator { get; }
    protected IEdmTypeReference ItemTypeReference { get; }
    protected ODataCollectionWriterCore(ODataOutputContext outputContext, IEdmTypeReference itemTypeReference);
    protected ODataCollectionWriterCore(ODataOutputContext outputContext, IEdmTypeReference expectedItemType, IODataReaderWriterListener listener);
    protected CollectionWriterState get_State();
    protected IDuplicatePropertyNameChecker get_DuplicatePropertyNameChecker();
    protected CollectionWithoutExpectedTypeValidator get_CollectionValidator();
    protected IEdmTypeReference get_ItemTypeReference();
    public sealed virtual void Flush();
    public sealed virtual Task FlushAsync();
    public sealed virtual void WriteStart(ODataCollectionStart collectionStart);
    public sealed virtual Task WriteStartAsync(ODataCollectionStart collection);
    public sealed virtual void WriteItem(object item);
    public sealed virtual Task WriteItemAsync(object item);
    public sealed virtual void WriteEnd();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataCollectionWriterCore/<WriteEndAsync>d__24")]
public sealed virtual Task WriteEndAsync();
    private sealed virtual override void Microsoft.OData.IODataOutputInStreamErrorListener.OnInStreamError();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataCollectionWriterCore/<Microsoft-OData-IODataOutputInStreamErrorListener-OnInStreamErrorAsync>d__26")]
private sealed virtual override Task Microsoft.OData.IODataOutputInStreamErrorListener.OnInStreamErrorAsync();
    protected static bool IsErrorState(CollectionWriterState state);
    protected abstract virtual void VerifyNotDisposed();
    protected abstract virtual void FlushSynchronously();
    protected abstract virtual Task FlushAsynchronously();
    protected abstract virtual void StartPayload();
    protected abstract virtual void EndPayload();
    protected abstract virtual void StartCollection(ODataCollectionStart collectionStart);
    protected abstract virtual void EndCollection();
    protected abstract virtual void WriteCollectionItem(object item, IEdmTypeReference expectedItemTypeReference);
    protected abstract virtual Task StartPayloadAsync();
    protected abstract virtual Task EndPayloadAsync();
    protected abstract virtual Task StartCollectionAsync(ODataCollectionStart collectionStart);
    protected abstract virtual Task EndCollectionAsync();
    protected abstract virtual Task WriteCollectionItemAsync(object item, IEdmTypeReference expectedItemTypeReference);
    private void VerifyCanWriteStart(bool synchronousCall, ODataCollectionStart collectionStart);
    private void WriteStartImplementation(ODataCollectionStart collectionStart);
    private void VerifyCanWriteItem(bool synchronousCall);
    private void WriteItemImplementation(object item);
    private void VerifyCanWriteEnd(bool synchronousCall);
    private void WriteEndImplementation();
    private void VerifyCanFlush(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
    private void StartPayloadInStartState();
    private void InterceptException(Action`1<ODataCollectionWriterCore> action);
    private void InterceptException(Action`2<ODataCollectionWriterCore, TArg0> action, TArg0 arg0);
    private void NotifyListener(CollectionWriterState newState);
    private void EnterScope(CollectionWriterState newState, object item);
    private void LeaveScope();
    private void ReplaceScope(CollectionWriterState newState, ODataItem item);
    private void ValidateTransition(CollectionWriterState newState);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataCollectionWriterCore/<InterceptExceptionAsync>d__57")]
private Task InterceptExceptionAsync(Func`2<ODataCollectionWriterCore, Task> action);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataCollectionWriterCore/<InterceptExceptionAsync>d__58`1")]
private Task InterceptExceptionAsync(Func`3<ODataCollectionWriterCore, TArg0, Task> action, TArg0 arg0);
    private Task StartPayloadInStartStateAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataCollectionWriterCore/<WriteStartImplementationAsync>d__60")]
private Task WriteStartImplementationAsync(ODataCollectionStart collectionStart);
    private Task WriteEndImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataCollectionWriterCore/<WriteItemImplementationAsync>d__62")]
private Task WriteItemImplementationAsync(object item);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataCollectionWriterCore/<LeaveScopeAsync>d__63")]
private Task LeaveScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataCollectionWriterCore/<FlushImplementationAsync>d__64")]
private Task FlushImplementationAsync();
}
public static class Microsoft.OData.ODataConstants : object {
    public static string MethodGet;
    public static string MethodPost;
    public static string MethodPut;
    public static string MethodDelete;
    public static string MethodPatch;
    public static string ContentTypeHeader;
    public static string ODataVersionHeader;
    public static string ContentIdHeader;
    internal static string ContentLengthHeader;
    internal static string HttpQValueParameter;
    internal static string HttpVersionInBatching;
    internal static string HttpVersionInAsync;
    [SuppressMessageAttribute("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
internal static string Charset;
    internal static string HttpMultipartBoundary;
    internal static string ContentTransferEncoding;
    internal static string BatchContentTransferEncoding;
    internal static ODataVersion ODataDefaultProtocolVersion;
    internal static string BatchRequestBoundaryTemplate;
    internal static string BatchResponseBoundaryTemplate;
    internal static string RequestChangeSetBoundaryTemplate;
    internal static string ResponseChangeSetBoundaryTemplate;
    internal static string HttpWeakETagPrefix;
    internal static string HttpWeakETagSuffix;
    internal static int DefaultMaxRecursionDepth;
    internal static long DefaultMaxReadMessageSize;
    internal static int DefaultMaxPartsPerBatch;
    internal static int DefaultMaxOperationsPerChangeset;
    internal static string UriSegmentSeparator;
    internal static char UriSegmentSeparatorChar;
    internal static string EntityReferenceSegmentName;
    internal static string CollectionPrefix;
    internal static string CollectionPrefixwithEntityReference;
    internal static string DefaultStreamSegmentName;
    internal static string TypeNamePrefix;
    internal static string UriMetadataSegment;
    internal static string UriMetadataSegmentHash;
    internal static string ODataPrefix;
    internal static string CollectionOfEntityReferencesContextUrlSegment;
    internal static string SingleEntityReferencesContextUrlSegment;
    internal static char ContextUriFragmentIndicator;
    internal static string ContextUriFragmentItemSelector;
    internal static char ContextUriProjectionStart;
    internal static char ContextUriProjectionEnd;
    internal static string ContextUriProjectionPropertySeparator;
    internal static string ContextUriFragmentNull;
    internal static string ContextUriFragmentUntyped;
    internal static string DeltaResourceSet;
    internal static string ContextUriDeltaResourceSet;
    internal static string HashDeltaResourceSet;
    internal static string DeletedEntry;
    internal static string ContextUriDeletedEntry;
    internal static string DeltaLink;
    internal static string ContextUriDeltaLink;
    internal static string DeletedLink;
    internal static string ContextUriDeletedLink;
    internal static int DefaultOutputBufferSize;
}
[DebuggerDisplayAttribute("{Message}")]
public class Microsoft.OData.ODataContentTypeException : ODataException {
    public ODataContentTypeException(string message);
    public ODataContentTypeException(string message, Exception innerException);
}
internal class Microsoft.OData.ODataContextUriBuilder : object {
    private Uri baseContextUrl;
    private bool throwIfMissingInfo;
    private static Dictionary`2<ODataPayloadKind, Action`1<ODataContextUrlInfo>> ValidationDictionary;
    private ODataContextUriBuilder(Uri baseContextUrl, bool throwIfMissingInfo);
    private static ODataContextUriBuilder();
    internal static ODataContextUriBuilder Create(Uri baseContextUrl, bool throwIfMissingInfo);
    internal Uri BuildContextUri(ODataPayloadKind payloadKind, ODataContextUrlInfo contextInfo);
    private Uri CreateFromContextUrlInfo(ODataContextUrlInfo info);
    private static void AppendTypeCastAndQueryClause(StringBuilder builder, ODataContextUrlInfo info);
    private static void ValidateType(ODataContextUrlInfo contextUrlInfo);
    private static void ValidateCollectionType(ODataContextUrlInfo contextUrlInfo);
    private static void ValidateNavigationSource(ODataContextUrlInfo contextUrlInfo);
    private static void ValidateResourcePath(ODataContextUrlInfo contextUrlInfo);
    private static void ValidateDelta(ODataContextUrlInfo contextUrlInfo);
}
internal class Microsoft.OData.ODataContextUrlInfo : object {
    [CompilerGeneratedAttribute]
private ODataDeltaKind <DeltaKind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnknownEntitySet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasNavigationSourceInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NavigationPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NavigationSource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourcePath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsUndeclared>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryClause>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeCast>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeFragmentItemSelector>k__BackingField;
    internal ODataDeltaKind DeltaKind { get; private set; }
    internal bool IsUnknownEntitySet { get; private set; }
    internal bool HasNavigationSourceInfo { get; private set; }
    internal string NavigationPath { get; private set; }
    internal string NavigationSource { get; private set; }
    internal string ResourcePath { get; private set; }
    internal Nullable`1<bool> IsUndeclared { get; private set; }
    internal string QueryClause { get; private set; }
    internal string TypeName { get; private set; }
    internal string TypeCast { get; private set; }
    internal bool IncludeFragmentItemSelector { get; private set; }
    [CompilerGeneratedAttribute]
internal ODataDeltaKind get_DeltaKind();
    [CompilerGeneratedAttribute]
private void set_DeltaKind(ODataDeltaKind value);
    [CompilerGeneratedAttribute]
internal bool get_IsUnknownEntitySet();
    [CompilerGeneratedAttribute]
private void set_IsUnknownEntitySet(bool value);
    [CompilerGeneratedAttribute]
internal bool get_HasNavigationSourceInfo();
    [CompilerGeneratedAttribute]
private void set_HasNavigationSourceInfo(bool value);
    [CompilerGeneratedAttribute]
internal string get_NavigationPath();
    [CompilerGeneratedAttribute]
private void set_NavigationPath(string value);
    [CompilerGeneratedAttribute]
internal string get_NavigationSource();
    [CompilerGeneratedAttribute]
private void set_NavigationSource(string value);
    [CompilerGeneratedAttribute]
internal string get_ResourcePath();
    [CompilerGeneratedAttribute]
private void set_ResourcePath(string value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_IsUndeclared();
    [CompilerGeneratedAttribute]
private void set_IsUndeclared(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal string get_QueryClause();
    [CompilerGeneratedAttribute]
private void set_QueryClause(string value);
    [CompilerGeneratedAttribute]
internal string get_TypeName();
    [CompilerGeneratedAttribute]
private void set_TypeName(string value);
    [CompilerGeneratedAttribute]
internal string get_TypeCast();
    [CompilerGeneratedAttribute]
private void set_TypeCast(string value);
    [CompilerGeneratedAttribute]
internal bool get_IncludeFragmentItemSelector();
    [CompilerGeneratedAttribute]
private void set_IncludeFragmentItemSelector(bool value);
    internal static ODataContextUrlInfo Create(ODataValue value, ODataVersion version, ODataUri odataUri, IEdmModel model);
    internal static ODataContextUrlInfo Create(ODataValue value, ODataVersion version, ODataUriSlim& odataUri, IEdmModel model);
    internal static ODataContextUrlInfo Create(ODataCollectionStartSerializationInfo info, IEdmTypeReference itemTypeReference);
    internal static ODataContextUrlInfo Create(IEdmNavigationSource navigationSource, string expectedEntityTypeName, bool isSingle, ODataUri odataUri, ODataVersion version);
    internal static ODataContextUrlInfo Create(IEdmNavigationSource navigationSource, string expectedEntityTypeName, bool isSingle, ODataUriSlim& odataUri, ODataVersion version);
    internal static ODataContextUrlInfo Create(ODataResourceTypeContext typeContext, ODataVersion version, bool isSingle, ODataUri odataUri);
    internal static ODataContextUrlInfo Create(ODataResourceTypeContext typeContext, ODataVersion version, ODataDeltaKind kind, ODataUri odataUri);
    internal bool IsHiddenBy(ODataContextUrlInfo parentContextUrlInfo);
    private static string ComputeNavigationPath(EdmNavigationSourceKind kind, ODataUri odataUri, string navigationSource);
    private static string ComputeNavigationPath(EdmNavigationSourceKind kind, ODataUriSlim& odataUri, string navigationSource);
    private static string ComputeResourcePath(ODataUri odataUri);
    private static string ComputeResourcePath(ODataUriSlim& odataUri);
    private static string ComputeQueryClause(ODataUri odataUri, ODataVersion version);
    private static string ComputeQueryClause(ODataUriSlim& odataUri, ODataVersion version);
    private static Nullable`1<bool> ComputeIfIsUndeclared(ODataUri odataUri);
    private static Nullable`1<bool> ComputeIfIsUndeclared(ODataUriSlim& odataUri);
    private static string GetTypeNameForValue(ODataValue value, IEdmModel model);
    private static string CreateApplyUriSegment(ApplyClause applyClause);
    private static string CreateSelectExpandContextUriSegment(SelectExpandClause selectExpandClause);
    private static string ProcessApply(ApplyClause applyClause);
    private static string ProcessSubExpand(string expandNode, string subExpand);
    private static string CombineSelectAndExpandResult(IList`1<string> selectList, IList`1<string> expandList);
}
internal enum Microsoft.OData.ODataContextUrlLevel : Enum {
    public int value__;
    public static ODataContextUrlLevel None;
    public static ODataContextUrlLevel OnDemand;
    public static ODataContextUrlLevel Full;
}
public class Microsoft.OData.ODataDeletedResource : ODataResourceBase {
    [CompilerGeneratedAttribute]
private Nullable`1<DeltaDeletedEntryReason> <Reason>k__BackingField;
    public Nullable`1<DeltaDeletedEntryReason> Reason { get; public set; }
    public ODataDeletedResource(Uri id, DeltaDeletedEntryReason reason);
    [CompilerGeneratedAttribute]
public Nullable`1<DeltaDeletedEntryReason> get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(Nullable`1<DeltaDeletedEntryReason> value);
}
public class Microsoft.OData.ODataDeltaDeletedEntry : ODataItem {
    private ODataDeltaSerializationInfo serializationInfo;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DeltaDeletedEntryReason> <Reason>k__BackingField;
    public string Id { get; public set; }
    public Nullable`1<DeltaDeletedEntryReason> Reason { get; public set; }
    internal ODataDeltaSerializationInfo SerializationInfo { get; internal set; }
    public ODataDeltaDeletedEntry(string id, DeltaDeletedEntryReason reason);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DeltaDeletedEntryReason> get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(Nullable`1<DeltaDeletedEntryReason> value);
    internal ODataDeltaSerializationInfo get_SerializationInfo();
    internal void set_SerializationInfo(ODataDeltaSerializationInfo value);
    internal static ODataDeltaDeletedEntry GetDeltaDeletedEntry(ODataDeletedResource entry);
    internal static ODataDeletedResource GetDeletedResource(ODataDeltaDeletedEntry entry);
}
public class Microsoft.OData.ODataDeltaDeletedLink : ODataDeltaLinkBase {
    public ODataDeltaDeletedLink(Uri source, Uri target, string relationship);
}
internal enum Microsoft.OData.ODataDeltaKind : Enum {
    public int value__;
    public static ODataDeltaKind None;
    public static ODataDeltaKind ResourceSet;
    public static ODataDeltaKind Resource;
    public static ODataDeltaKind DeletedEntry;
    public static ODataDeltaKind Link;
    public static ODataDeltaKind DeletedLink;
}
public class Microsoft.OData.ODataDeltaLink : ODataDeltaLinkBase {
    public ODataDeltaLink(Uri source, Uri target, string relationship);
}
public abstract class Microsoft.OData.ODataDeltaLinkBase : ODataItem {
    private ODataDeltaSerializationInfo serializationInfo;
    [CompilerGeneratedAttribute]
private Uri <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Relationship>k__BackingField;
    public Uri Source { get; public set; }
    public Uri Target { get; public set; }
    public string Relationship { get; public set; }
    internal ODataDeltaSerializationInfo SerializationInfo { get; internal set; }
    protected ODataDeltaLinkBase(Uri source, Uri target, string relationship);
    [CompilerGeneratedAttribute]
public Uri get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(Uri value);
    [CompilerGeneratedAttribute]
public string get_Relationship();
    [CompilerGeneratedAttribute]
public void set_Relationship(string value);
    internal ODataDeltaSerializationInfo get_SerializationInfo();
    internal void set_SerializationInfo(ODataDeltaSerializationInfo value);
}
public abstract class Microsoft.OData.ODataDeltaReader : object {
    public ODataDeltaReaderState State { get; }
    public ODataReaderState SubState { get; }
    public ODataItem Item { get; }
    public abstract virtual ODataDeltaReaderState get_State();
    public abstract virtual ODataReaderState get_SubState();
    public abstract virtual ODataItem get_Item();
    public abstract virtual bool Read();
    public abstract virtual Task`1<bool> ReadAsync();
}
public enum Microsoft.OData.ODataDeltaReaderState : Enum {
    public int value__;
    public static ODataDeltaReaderState Start;
    public static ODataDeltaReaderState DeltaResourceSetStart;
    public static ODataDeltaReaderState DeltaResourceSetEnd;
    public static ODataDeltaReaderState DeltaResourceStart;
    public static ODataDeltaReaderState DeltaResourceEnd;
    public static ODataDeltaReaderState DeltaDeletedEntry;
    public static ODataDeltaReaderState DeltaLink;
    public static ODataDeltaReaderState DeltaDeletedLink;
    public static ODataDeltaReaderState Exception;
    public static ODataDeltaReaderState Completed;
    public static ODataDeltaReaderState NestedResource;
}
public class Microsoft.OData.ODataDeltaResourceSet : ODataResourceSetBase {
}
public class Microsoft.OData.ODataDeltaResourceSetSerializationInfo : object {
    private string entitySetName;
    private string entityTypeName;
    private string expectedEntityTypeName;
    public string EntitySetName { get; public set; }
    public string EntityTypeName { get; public set; }
    public string ExpectedTypeName { get; public set; }
    public string get_EntitySetName();
    public void set_EntitySetName(string value);
    public string get_EntityTypeName();
    public void set_EntityTypeName(string value);
    public string get_ExpectedTypeName();
    public void set_ExpectedTypeName(string value);
    internal static ODataDeltaResourceSetSerializationInfo Validate(ODataDeltaResourceSetSerializationInfo serializationInfo);
}
public class Microsoft.OData.ODataDeltaSerializationInfo : object {
    private string navigationSourceName;
    public string NavigationSourceName { get; public set; }
    public string get_NavigationSourceName();
    public void set_NavigationSourceName(string value);
    internal static ODataDeltaSerializationInfo Validate(ODataDeltaSerializationInfo serializationInfo);
}
public abstract class Microsoft.OData.ODataDeltaWriter : object {
    public abstract virtual void WriteStart(ODataDeltaResourceSet deltaResourceSet);
    public abstract virtual Task WriteStartAsync(ODataDeltaResourceSet deltaResourceSet);
    public abstract virtual void WriteEnd();
    public abstract virtual Task WriteEndAsync();
    public abstract virtual void WriteStart(ODataNestedResourceInfo nestedResourceInfo);
    public abstract virtual Task WriteStartAsync(ODataNestedResourceInfo nestedResourceInfo);
    public abstract virtual void WriteStart(ODataResourceSet expandedResourceSet);
    public abstract virtual Task WriteStartAsync(ODataResourceSet expandedResourceSet);
    public abstract virtual void WriteStart(ODataResource deltaResource);
    public abstract virtual Task WriteStartAsync(ODataResource deltaResource);
    public abstract virtual void WriteDeltaDeletedEntry(ODataDeltaDeletedEntry deltaDeletedEntry);
    public abstract virtual Task WriteDeltaDeletedEntryAsync(ODataDeltaDeletedEntry deltaDeletedEntry);
    public abstract virtual void WriteDeltaLink(ODataDeltaLink deltaLink);
    public abstract virtual Task WriteDeltaLinkAsync(ODataDeltaLink deltaLink);
    public abstract virtual void WriteDeltaDeletedLink(ODataDeltaDeletedLink deltaDeletedLink);
    public abstract virtual Task WriteDeltaDeletedLinkAsync(ODataDeltaDeletedLink deltaDeletedLink);
    public abstract virtual void Flush();
    public abstract virtual Task FlushAsync();
}
internal abstract class Microsoft.OData.ODataDeserializer : object {
    protected IReaderValidator ReaderValidator;
    private ODataInputContext inputContext;
    internal ODataMessageReaderSettings MessageReaderSettings { get; }
    internal bool ReadingResponse { get; }
    internal IEdmModel Model { get; }
    internal Uri BaseUri { get; }
    protected ODataDeserializer(ODataInputContext inputContext);
    internal ODataMessageReaderSettings get_MessageReaderSettings();
    internal bool get_ReadingResponse();
    internal IEdmModel get_Model();
    internal Uri get_BaseUri();
    internal PropertyAndAnnotationCollector CreatePropertyAndAnnotationCollector();
}
[SuppressMessageAttribute("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
public class Microsoft.OData.ODataEdmPropertyAnnotation : object {
    [CompilerGeneratedAttribute]
private ODataNullValueBehaviorKind <NullValueReadBehaviorKind>k__BackingField;
    public ODataNullValueBehaviorKind NullValueReadBehaviorKind { get; public set; }
    [CompilerGeneratedAttribute]
public ODataNullValueBehaviorKind get_NullValueReadBehaviorKind();
    [CompilerGeneratedAttribute]
public void set_NullValueReadBehaviorKind(ODataNullValueBehaviorKind value);
}
[DebuggerDisplayAttribute("{Url.OriginalString}")]
public class Microsoft.OData.ODataEntityReferenceLink : ODataItem {
    [CompilerGeneratedAttribute]
private Uri <Url>k__BackingField;
    public Uri Url { get; public set; }
    public ICollection`1<ODataInstanceAnnotation> InstanceAnnotations { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(Uri value);
    public ICollection`1<ODataInstanceAnnotation> get_InstanceAnnotations();
    public void set_InstanceAnnotations(ICollection`1<ODataInstanceAnnotation> value);
}
public class Microsoft.OData.ODataEntityReferenceLinks : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <NextPageLink>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataEntityReferenceLink> <Links>k__BackingField;
    public Nullable`1<long> Count { get; public set; }
    public Uri NextPageLink { get; public set; }
    public IEnumerable`1<ODataEntityReferenceLink> Links { get; public set; }
    public ICollection`1<ODataInstanceAnnotation> InstanceAnnotations { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Uri get_NextPageLink();
    [CompilerGeneratedAttribute]
public void set_NextPageLink(Uri value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ODataEntityReferenceLink> get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(IEnumerable`1<ODataEntityReferenceLink> value);
    public ICollection`1<ODataInstanceAnnotation> get_InstanceAnnotations();
    public void set_InstanceAnnotations(ICollection`1<ODataInstanceAnnotation> value);
}
public class Microsoft.OData.ODataEntitySetInfo : ODataServiceDocumentElement {
}
public class Microsoft.OData.ODataEnumValue : ODataValue {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    public string Value { get; private set; }
    public string TypeName { get; private set; }
    public ODataEnumValue(string value);
    public ODataEnumValue(string value, string typeName);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
private void set_TypeName(string value);
    public virtual string ToString();
}
[DebuggerDisplayAttribute("{Code}: {Message}")]
public class Microsoft.OData.ODataError : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ODataErrorDetail> <Details>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataInnerError <InnerError>k__BackingField;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string Target { get; public set; }
    public ICollection`1<ODataErrorDetail> Details { get; public set; }
    public ODataInnerError InnerError { get; public set; }
    [SuppressMessageAttribute("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
public ICollection`1<ODataInstanceAnnotation> InstanceAnnotations { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<ODataErrorDetail> get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(ICollection`1<ODataErrorDetail> value);
    [CompilerGeneratedAttribute]
public ODataInnerError get_InnerError();
    [CompilerGeneratedAttribute]
public void set_InnerError(ODataInnerError value);
    public ICollection`1<ODataInstanceAnnotation> get_InstanceAnnotations();
    public void set_InstanceAnnotations(ICollection`1<ODataInstanceAnnotation> value);
    public virtual string ToString();
    private string GetJsonStringForDetails();
}
public class Microsoft.OData.ODataErrorDetail : object {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string Target { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    internal string ToJsonString();
}
[DebuggerDisplayAttribute("{Message}")]
public class Microsoft.OData.ODataErrorException : ODataException {
    private ODataErrorExceptionSafeSerializationState state;
    public ODataError Error { get; }
    public ODataErrorException(string message);
    public ODataErrorException(string message, Exception innerException);
    public ODataErrorException(ODataError error);
    public ODataErrorException(string message, ODataError error);
    public ODataErrorException(string message, Exception innerException, ODataError error);
    public ODataError get_Error();
}
[DebuggerDisplayAttribute("{Message}")]
public class Microsoft.OData.ODataException : InvalidOperationException {
    public ODataException(string message);
    public ODataException(string message, Exception innerException);
}
public abstract class Microsoft.OData.ODataFormat : object {
    private static ODataJsonFormat JsonFormat;
    private static ODataRawValueFormat rawValueFormat;
    private static ODataMultipartMixedBatchFormat batchFormat;
    private static ODataMetadataFormat metadataFormat;
    public static ODataFormat Json { get; }
    public static ODataFormat RawValue { get; }
    public static ODataFormat Batch { get; }
    public static ODataFormat Metadata { get; }
    private static ODataFormat();
    public static ODataFormat get_Json();
    public static ODataFormat get_RawValue();
    public static ODataFormat get_Batch();
    public static ODataFormat get_Metadata();
    public abstract virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
    public abstract virtual ODataInputContext CreateInputContext(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public abstract virtual ODataOutputContext CreateOutputContext(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    public abstract virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
    public abstract virtual Task`1<ODataInputContext> CreateInputContextAsync(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public abstract virtual Task`1<ODataOutputContext> CreateOutputContextAsync(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    internal virtual string GetContentType(ODataMediaType mediaType, Encoding encoding, bool writingResponse, IEnumerable`1& mediaTypeParameters);
}
[DebuggerDisplayAttribute("{Metadata}")]
public class Microsoft.OData.ODataFunction : ODataOperation {
}
public class Microsoft.OData.ODataFunctionImportInfo : ODataServiceDocumentElement {
}
public class Microsoft.OData.ODataInnerError : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ODataValue> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataInnerError <InnerError>k__BackingField;
    public IDictionary`2<string, ODataValue> Properties { get; private set; }
    public ODataInnerError InnerError { get; public set; }
    public ODataInnerError(IDictionary`2<string, ODataValue> properties);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ODataValue> get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(IDictionary`2<string, ODataValue> value);
    [CompilerGeneratedAttribute]
public ODataInnerError get_InnerError();
    [CompilerGeneratedAttribute]
public void set_InnerError(ODataInnerError value);
    internal string ToJsonString();
}
public abstract class Microsoft.OData.ODataInputContext : object {
    private ODataFormat format;
    private ODataMessageReaderSettings messageReaderSettings;
    private bool readingResponse;
    private bool synchronous;
    private IODataPayloadUriConverter payloadUriConverter;
    private IServiceProvider container;
    private IEdmModel model;
    private EdmTypeResolver edmTypeResolver;
    private ODataPayloadValueConverter payloadValueConverter;
    private bool disposed;
    public ODataMessageReaderSettings MessageReaderSettings { get; }
    public bool ReadingResponse { get; }
    public bool Synchronous { get; }
    public IEdmModel Model { get; }
    public IODataPayloadUriConverter PayloadUriConverter { get; }
    internal IServiceProvider Container { get; }
    internal EdmTypeResolver EdmTypeResolver { get; }
    internal ODataPayloadValueConverter PayloadValueConverter { get; }
    protected ODataInputContext(ODataFormat format, ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public ODataMessageReaderSettings get_MessageReaderSettings();
    public bool get_ReadingResponse();
    public bool get_Synchronous();
    public IEdmModel get_Model();
    public IODataPayloadUriConverter get_PayloadUriConverter();
    internal IServiceProvider get_Container();
    internal EdmTypeResolver get_EdmTypeResolver();
    internal ODataPayloadValueConverter get_PayloadValueConverter();
    public sealed virtual void Dispose();
    public virtual ODataReader CreateResourceSetReader(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public virtual Task`1<ODataReader> CreateResourceSetReaderAsync(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public virtual ODataReader CreateDeltaResourceSetReader(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public virtual Task`1<ODataReader> CreateDeltaResourceSetReaderAsync(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public virtual ODataReader CreateResourceReader(IEdmNavigationSource navigationSource, IEdmStructuredType expectedResourceType);
    public virtual Task`1<ODataReader> CreateResourceReaderAsync(IEdmNavigationSource navigationSource, IEdmStructuredType expectedResourceType);
    public virtual ODataCollectionReader CreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    public virtual Task`1<ODataCollectionReader> CreateCollectionReaderAsync(IEdmTypeReference expectedItemTypeReference);
    public virtual ODataProperty ReadProperty(IEdmStructuralProperty edmStructuralProperty, IEdmTypeReference expectedPropertyTypeReference);
    public virtual Task`1<ODataProperty> ReadPropertyAsync(IEdmStructuralProperty edmStructuralProperty, IEdmTypeReference expectedPropertyTypeReference);
    public virtual ODataError ReadError();
    public virtual Task`1<ODataError> ReadErrorAsync();
    public virtual ODataReader CreateUriParameterResourceReader(IEdmNavigationSource navigationSource, IEdmStructuredType expectedResourceType);
    public virtual Task`1<ODataReader> CreateUriParameterResourceReaderAsync(IEdmNavigationSource navigationSource, IEdmStructuredType expectedResourceType);
    public virtual ODataReader CreateUriParameterResourceSetReader(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public virtual Task`1<ODataReader> CreateUriParameterResourceSetReaderAsync(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public virtual ODataParameterReader CreateParameterReader(IEdmOperation operation);
    public virtual Task`1<ODataParameterReader> CreateParameterReaderAsync(IEdmOperation operation);
    internal virtual ODataAsynchronousReader CreateAsynchronousReader();
    internal virtual Task`1<ODataAsynchronousReader> CreateAsynchronousReaderAsync();
    internal virtual ODataDeltaReader CreateDeltaReader(IEdmEntitySetBase entitySet, IEdmEntityType expectedBaseEntityType);
    internal virtual Task`1<ODataDeltaReader> CreateDeltaReaderAsync(IEdmEntitySetBase entitySet, IEdmEntityType expectedBaseEntityType);
    internal virtual ODataBatchReader CreateBatchReader();
    internal virtual Task`1<ODataBatchReader> CreateBatchReaderAsync();
    internal virtual ODataServiceDocument ReadServiceDocument();
    internal virtual Task`1<ODataServiceDocument> ReadServiceDocumentAsync();
    internal virtual IEdmModel ReadMetadataDocument();
    internal virtual IEdmModel ReadMetadataDocument(CsdlReaderSettingsBase csdlReaderSettings);
    internal virtual IEdmModel ReadMetadataDocument(Func`2<Uri, XmlReader> getReferencedModelReaderFunc);
    internal virtual ODataEntityReferenceLinks ReadEntityReferenceLinks();
    internal virtual Task`1<ODataEntityReferenceLinks> ReadEntityReferenceLinksAsync();
    internal virtual ODataEntityReferenceLink ReadEntityReferenceLink();
    internal virtual Task`1<ODataEntityReferenceLink> ReadEntityReferenceLinkAsync();
    internal virtual object ReadValue(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    internal virtual Task`1<object> ReadValueAsync(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    internal void VerifyNotDisposed();
    [ConditionalAttribute("DEBUG")]
[SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
internal void AssertSynchronous();
    [ConditionalAttribute("DEBUG")]
[SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
internal void AssertAsynchronous();
    internal PropertyAndAnnotationCollector CreatePropertyAndAnnotationCollector();
    internal Uri ResolveUri(Uri baseUri, Uri payloadUri);
    protected virtual void Dispose(bool disposing);
    private ODataException CreatePayloadKindNotSupportedException(ODataPayloadKind payloadKind);
}
public class Microsoft.OData.ODataInstanceAnnotation : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataValue <Value>k__BackingField;
    public string Name { get; private set; }
    public ODataValue Value { get; private set; }
    public ODataInstanceAnnotation(string name, ODataValue value);
    internal ODataInstanceAnnotation(string annotationName, ODataValue annotationValue, bool isCustomAnnotation);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public ODataValue get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(ODataValue value);
    internal static void ValidateName(string name);
    internal static void ValidateValue(ODataValue value);
}
public abstract class Microsoft.OData.ODataItem : ODataAnnotatable {
}
internal enum Microsoft.OData.ODataJsonDateTimeFormat : Enum {
    public int value__;
    public static ODataJsonDateTimeFormat ODataDateTime;
    [SuppressMessageAttribute("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
public static ODataJsonDateTimeFormat ISO8601DateTime;
}
public class Microsoft.OData.ODataJsonElementValue : ODataValue {
    [CompilerGeneratedAttribute]
private JsonElement <Value>k__BackingField;
    public JsonElement Value { get; private set; }
    public ODataJsonElementValue(JsonElement value);
    [CompilerGeneratedAttribute]
public JsonElement get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(JsonElement value);
}
internal class Microsoft.OData.ODataJsonTextWriter : TextWriter {
    private TextWriter textWriter;
    private ODataStringEscapeOption escapeOption;
    private Ref`1<Char[]> wrappedBuffer;
    private ICharArrayPool bufferPool;
    public Encoding Encoding { get; }
    public string NewLine { get; public set; }
    public IFormatProvider FormatProvider { get; }
    internal ODataJsonTextWriter(TextWriter textWriter, Ref`1<Char[]> wrappedBuffer, ICharArrayPool bufferPool);
    public virtual Encoding get_Encoding();
    public virtual string get_NewLine();
    public virtual void set_NewLine(string value);
    public virtual IFormatProvider get_FormatProvider();
    public virtual void Flush();
    public virtual int GetHashCode();
    public virtual string ToString();
    public virtual void Write(char value);
    public virtual void Write(bool value);
    public virtual void Write(string value);
    public virtual void Write(Char[] buffer);
    public virtual void Write(Char[] buffer, int index, int count);
    public virtual void Write(string format, Object[] arg);
    public virtual void Write(decimal value);
    public virtual void Write(object value);
    public virtual void Write(double value);
    public virtual void Write(float value);
    public virtual void Write(int value);
    public virtual void Write(long value);
    public virtual void Write(UInt32 value);
    public virtual void Write(ulong value);
    public virtual void WriteLine();
    public virtual void WriteLine(bool value);
    public virtual void WriteLine(char value);
    public virtual void WriteLine(Char[] buffer);
    public virtual void WriteLine(Char[] buffer, int index, int count);
    public virtual void WriteLine(decimal value);
    public virtual void WriteLine(double value);
    public virtual void WriteLine(float value);
    public virtual void WriteLine(int value);
    public virtual void WriteLine(long value);
    public virtual void WriteLine(object value);
    public virtual void WriteLine(string format, Object[] arg);
    public virtual void WriteLine(string value);
    public virtual void WriteLine(UInt32 value);
    public virtual void WriteLine(ulong value);
    public virtual Task FlushAsync();
    public virtual Task WriteAsync(char value);
    public virtual Task WriteAsync(Char[] buffer, int index, int count);
    public virtual Task WriteAsync(string value);
    public virtual Task WriteLineAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataJsonTextWriter/<WriteLineAsync>d__49")]
public virtual Task WriteLineAsync(char value);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataJsonTextWriter/<WriteLineAsync>d__50")]
public virtual Task WriteLineAsync(Char[] buffer, int index, int count);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataJsonTextWriter/<WriteLineAsync>d__51")]
public virtual Task WriteLineAsync(string value);
    protected virtual void Dispose(bool disposing);
    private void WriteEscapedCharValue(char value);
    private void WriteEscapedStringValue(string value);
    private void WriteEscapedCharArray(Char[] value, int offset, int count);
    private Task WriteEscapedCharValueAsync(char value);
    private Task WriteEscapedStringValueAsync(string value);
    private Task WriteEscapedCharArrayAsync(Char[] value, int offset, int count);
}
[FlagsAttribute]
public enum Microsoft.OData.ODataLibraryCompatibility : Enum {
    public int value__;
    public static ODataLibraryCompatibility None;
    public static ODataLibraryCompatibility UseLegacyVariableCasing;
    public static ODataLibraryCompatibility WriteTopLevelODataNullAnnotation;
    public static ODataLibraryCompatibility WriteODataContextAnnotationForNavProperty;
    public static ODataLibraryCompatibility DoNotThrowExceptionForTopLevelNullProperty;
    public static ODataLibraryCompatibility UseLegacyODataInnerErrorSerialization;
    public static ODataLibraryCompatibility Version6;
    public static ODataLibraryCompatibility Version7;
}
[DebuggerDisplayAttribute("MediaType [{ToText()}]")]
public class Microsoft.OData.ODataMediaType : object {
    private IEnumerable`1<KeyValuePair`2<string, string>> parameters;
    private string subType;
    private string type;
    public string SubType { get; }
    public string Type { get; }
    public IEnumerable`1<KeyValuePair`2<string, string>> Parameters { get; }
    internal string FullTypeName { get; }
    public ODataMediaType(string type, string subType);
    public ODataMediaType(string type, string subType, IEnumerable`1<KeyValuePair`2<string, string>> parameters);
    internal ODataMediaType(string type, string subType, KeyValuePair`2<string, string> parameter);
    public string get_SubType();
    public string get_Type();
    public IEnumerable`1<KeyValuePair`2<string, string>> get_Parameters();
    internal string get_FullTypeName();
    internal Encoding SelectEncoding();
    internal string ToText();
    internal string ToText(Encoding encoding);
    private static Encoding EncodingFromName(string name);
}
public class Microsoft.OData.ODataMediaTypeFormat : object {
    [CompilerGeneratedAttribute]
private ODataMediaType <MediaType>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataFormat <Format>k__BackingField;
    public ODataMediaType MediaType { get; internal set; }
    public ODataFormat Format { get; internal set; }
    public ODataMediaTypeFormat(ODataMediaType mediaType, ODataFormat format);
    [CompilerGeneratedAttribute]
public ODataMediaType get_MediaType();
    [CompilerGeneratedAttribute]
internal void set_MediaType(ODataMediaType value);
    [CompilerGeneratedAttribute]
public ODataFormat get_Format();
    [CompilerGeneratedAttribute]
internal void set_Format(ODataFormat value);
}
public class Microsoft.OData.ODataMediaTypeResolver : object {
    private static HashSet`1<ODataPayloadKind> JsonPayloadKindSet;
    private static ODataMediaTypeResolver MediaTypeResolver;
    private static IDictionary`2<ODataPayloadKind, IEnumerable`1<ODataMediaTypeFormat>> SpecialMediaTypeFormat;
    private static IEnumerable`1<ODataMediaTypeFormat> JsonMediaTypeFormats;
    private static ODataMediaTypeResolver();
    public virtual IEnumerable`1<ODataMediaTypeFormat> GetMediaTypeFormats(ODataPayloadKind payloadKind);
    internal static ODataMediaTypeResolver GetMediaTypeResolver(IServiceProvider container);
    private static IEnumerable`1<ODataMediaTypeFormat> SetJsonMediaTypes();
}
[SuppressMessageAttribute("Microsoft.Design", "CA1001:TypesThatOwnDisposableFieldsShouldBeDisposable")]
internal abstract class Microsoft.OData.ODataMessage : object {
    private bool writing;
    private bool enableMessageStreamDisposal;
    private long maxMessageSize;
    private Nullable`1<bool> useBufferingReadStream;
    private BufferingReadStream bufferingReadStream;
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    protected internal BufferingReadStream BufferingReadStream { get; }
    protected internal Nullable`1<bool> UseBufferingReadStream { get; protected internal set; }
    protected ODataMessage(bool writing, bool enableMessageStreamDisposal, long maxMessageSize);
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    protected internal BufferingReadStream get_BufferingReadStream();
    protected internal Nullable`1<bool> get_UseBufferingReadStream();
    protected internal void set_UseBufferingReadStream(Nullable`1<bool> value);
    public abstract virtual string GetHeader(string headerName);
    public abstract virtual void SetHeader(string headerName, string headerValue);
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
public abstract virtual Stream GetStream();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
public abstract virtual Task`1<Stream> GetStreamAsync();
    internal abstract virtual TInterface QueryInterface();
    protected internal Stream GetStream(Func`1<Stream> messageStreamFunc, bool isRequest);
    protected internal Task`1<Stream> GetStreamAsync(Func`1<Task`1<Stream>> streamFuncAsync, bool isRequest);
    protected void VerifyCanSetHeader();
    private static void ValidateMessageStream(Stream stream, bool isRequest);
    private static void ValidateMessageStreamTask(Task`1<Stream> streamTask, bool isRequest);
    private BufferingReadStream TryGetBufferingReadStream();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataMessage/<<GetStreamAsync>g__GetMessageStreamAsync|19_0>d")]
[CompilerGeneratedAttribute]
private Task`1<Stream> <GetStreamAsync>g__GetMessageStreamAsync|19_0(Func`1<Task`1<Stream>> innerStreamFuncAsync, bool innerIsRequest);
}
[ExtensionAttribute]
public static class Microsoft.OData.ODataMessageExtensions : object {
    [ExtensionAttribute]
public static ODataVersion GetODataVersion(IODataResponseMessage message, ODataVersion defaultVersion);
    [ExtensionAttribute]
public static ODataVersion GetODataVersion(IODataRequestMessage message, ODataVersion defaultVersion);
    [ExtensionAttribute]
public static ODataPreferenceHeader PreferHeader(IODataRequestMessage requestMessage);
    [ExtensionAttribute]
public static ODataPreferenceHeader PreferenceAppliedHeader(IODataResponseMessage responseMessage);
}
public class Microsoft.OData.ODataMessageInfo : object {
    [CompilerGeneratedAttribute]
private ODataMediaType <MediaType>k__BackingField;
    [CompilerGeneratedAttribute]
private Encoding <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmModel <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private IODataPayloadUriConverter <PayloadUriConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAsync>k__BackingField;
    [CompilerGeneratedAttribute]
private Stream <MessageStream>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataPayloadKind <PayloadKind>k__BackingField;
    public ODataMediaType MediaType { get; public set; }
    public Encoding Encoding { get; public set; }
    public IEdmModel Model { get; public set; }
    public bool IsResponse { get; public set; }
    public IODataPayloadUriConverter PayloadUriConverter { get; public set; }
    public IServiceProvider ServiceProvider { get; public set; }
    public bool IsAsync { get; public set; }
    public Stream MessageStream { get; public set; }
    internal ODataPayloadKind PayloadKind { get; internal set; }
    [CompilerGeneratedAttribute]
public ODataMediaType get_MediaType();
    [CompilerGeneratedAttribute]
public void set_MediaType(ODataMediaType value);
    [CompilerGeneratedAttribute]
public Encoding get_Encoding();
    [CompilerGeneratedAttribute]
public void set_Encoding(Encoding value);
    [CompilerGeneratedAttribute]
public IEdmModel get_Model();
    [CompilerGeneratedAttribute]
public void set_Model(IEdmModel value);
    [CompilerGeneratedAttribute]
public bool get_IsResponse();
    [CompilerGeneratedAttribute]
public void set_IsResponse(bool value);
    [CompilerGeneratedAttribute]
public IODataPayloadUriConverter get_PayloadUriConverter();
    [CompilerGeneratedAttribute]
public void set_PayloadUriConverter(IODataPayloadUriConverter value);
    [CompilerGeneratedAttribute]
public IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
public void set_ServiceProvider(IServiceProvider value);
    [CompilerGeneratedAttribute]
public bool get_IsAsync();
    [CompilerGeneratedAttribute]
public void set_IsAsync(bool value);
    [CompilerGeneratedAttribute]
public Stream get_MessageStream();
    [CompilerGeneratedAttribute]
public void set_MessageStream(Stream value);
    [CompilerGeneratedAttribute]
internal ODataPayloadKind get_PayloadKind();
    [CompilerGeneratedAttribute]
internal void set_PayloadKind(ODataPayloadKind value);
}
public class Microsoft.OData.ODataMessageQuotas : object {
    private int maxPartsPerBatch;
    private int maxOperationsPerChangeset;
    private int maxNestingDepth;
    private long maxReceivedMessageSize;
    public int MaxPartsPerBatch { get; public set; }
    public int MaxOperationsPerChangeset { get; public set; }
    public int MaxNestingDepth { get; public set; }
    public long MaxReceivedMessageSize { get; public set; }
    public ODataMessageQuotas(ODataMessageQuotas other);
    public int get_MaxPartsPerBatch();
    public void set_MaxPartsPerBatch(int value);
    public int get_MaxOperationsPerChangeset();
    public void set_MaxOperationsPerChangeset(int value);
    public int get_MaxNestingDepth();
    public void set_MaxNestingDepth(int value);
    public long get_MaxReceivedMessageSize();
    public void set_MaxReceivedMessageSize(long value);
}
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")]
public class Microsoft.OData.ODataMessageReader : object {
    private ODataMessage message;
    private bool readingResponse;
    private ODataMessageReaderSettings settings;
    private IEdmModel model;
    private IODataPayloadUriConverter payloadUriConverter;
    private IServiceProvider serviceProvider;
    private EdmTypeResolver edmTypeResolver;
    private ODataMediaTypeResolver mediaTypeResolver;
    private bool readMethodCalled;
    private bool isDisposed;
    private ODataInputContext inputContext;
    private ODataPayloadKind readerPayloadKind;
    private ODataFormat format;
    private ODataMediaType contentType;
    private Encoding encoding;
    private ODataMessageInfo messageInfo;
    internal ODataMessageReaderSettings Settings { get; }
    public ODataMessageReader(IODataRequestMessage requestMessage);
    public ODataMessageReader(IODataRequestMessage requestMessage, ODataMessageReaderSettings settings);
    public ODataMessageReader(IODataRequestMessage requestMessage, ODataMessageReaderSettings settings, IEdmModel model);
    public ODataMessageReader(IODataResponseMessage responseMessage);
    public ODataMessageReader(IODataResponseMessage responseMessage, ODataMessageReaderSettings settings);
    public ODataMessageReader(IODataResponseMessage responseMessage, ODataMessageReaderSettings settings, IEdmModel model);
    internal ODataMessageReaderSettings get_Settings();
    public IEnumerable`1<ODataPayloadKindDetectionResult> DetectPayloadKind();
    [SuppressMessageAttribute("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
public Task`1<IEnumerable`1<ODataPayloadKindDetectionResult>> DetectPayloadKindAsync();
    public ODataAsynchronousReader CreateODataAsynchronousReader();
    public Task`1<ODataAsynchronousReader> CreateODataAsynchronousReaderAsync();
    public ODataReader CreateODataResourceSetReader();
    public ODataReader CreateODataResourceSetReader(IEdmStructuredType expectedResourceType);
    public ODataReader CreateODataResourceSetReader(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public Task`1<ODataReader> CreateODataResourceSetReaderAsync();
    public Task`1<ODataReader> CreateODataResourceSetReaderAsync(IEdmStructuredType expectedResourceType);
    public Task`1<ODataReader> CreateODataResourceSetReaderAsync(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public ODataReader CreateODataDeltaResourceSetReader();
    public ODataReader CreateODataDeltaResourceSetReader(IEdmStructuredType expectedResourceType);
    public ODataReader CreateODataDeltaResourceSetReader(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public Task`1<ODataReader> CreateODataDeltaResourceSetReaderAsync();
    public Task`1<ODataReader> CreateODataDeltaResourceSetReaderAsync(IEdmStructuredType expectedResourceType);
    public Task`1<ODataReader> CreateODataDeltaResourceSetReaderAsync(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public ODataReader CreateODataResourceReader();
    public ODataReader CreateODataResourceReader(IEdmStructuredType resourceType);
    public ODataReader CreateODataResourceReader(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public Task`1<ODataReader> CreateODataResourceReaderAsync();
    public Task`1<ODataReader> CreateODataResourceReaderAsync(IEdmStructuredType resourceType);
    public Task`1<ODataReader> CreateODataResourceReaderAsync(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public ODataCollectionReader CreateODataCollectionReader();
    public ODataCollectionReader CreateODataCollectionReader(IEdmTypeReference expectedItemTypeReference);
    public Task`1<ODataCollectionReader> CreateODataCollectionReaderAsync();
    public Task`1<ODataCollectionReader> CreateODataCollectionReaderAsync(IEdmTypeReference expectedItemTypeReference);
    public ODataBatchReader CreateODataBatchReader();
    public Task`1<ODataBatchReader> CreateODataBatchReaderAsync();
    public ODataReader CreateODataUriParameterResourceReader(IEdmNavigationSource navigationSource, IEdmStructuredType expectedResourceType);
    public Task`1<ODataReader> CreateODataUriParameterResourceReaderAsync(IEdmNavigationSource navigationSource, IEdmStructuredType expectedResourceType);
    public ODataReader CreateODataUriParameterResourceSetReader(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public Task`1<ODataReader> CreateODataUriParameterResourceSetReaderAsync(IEdmEntitySetBase entitySet, IEdmStructuredType expectedResourceType);
    public ODataParameterReader CreateODataParameterReader(IEdmOperation operation);
    public Task`1<ODataParameterReader> CreateODataParameterReaderAsync(IEdmOperation operation);
    public ODataServiceDocument ReadServiceDocument();
    public Task`1<ODataServiceDocument> ReadServiceDocumentAsync();
    public ODataProperty ReadProperty();
    public ODataProperty ReadProperty(IEdmTypeReference expectedPropertyTypeReference);
    public ODataProperty ReadProperty(IEdmStructuralProperty property);
    public Task`1<ODataProperty> ReadPropertyAsync();
    public Task`1<ODataProperty> ReadPropertyAsync(IEdmTypeReference expectedPropertyTypeReference);
    public Task`1<ODataProperty> ReadPropertyAsync(IEdmStructuralProperty property);
    public ODataError ReadError();
    public Task`1<ODataError> ReadErrorAsync();
    public ODataEntityReferenceLinks ReadEntityReferenceLinks();
    public Task`1<ODataEntityReferenceLinks> ReadEntityReferenceLinksAsync();
    public ODataEntityReferenceLink ReadEntityReferenceLink();
    public Task`1<ODataEntityReferenceLink> ReadEntityReferenceLinkAsync();
    public object ReadValue(IEdmTypeReference expectedTypeReference);
    public Task`1<object> ReadValueAsync(IEdmTypeReference expectedTypeReference);
    public IEdmModel ReadMetadataDocument();
    public IEdmModel ReadMetadataDocument(CsdlReaderSettingsBase csdlReaderSettings);
    public IEdmModel ReadMetadataDocument(Func`2<Uri, XmlReader> getReferencedModelReaderFunc);
    public sealed virtual void Dispose();
    internal ODataFormat GetFormat();
    private static IServiceProvider GetServiceProvider(T message);
    private static IEdmModel GetModel(IServiceProvider serviceProvider);
    private ODataMessageInfo GetOrCreateMessageInfo(Stream messageStream, bool isAsync);
    private void ProcessContentType(ODataPayloadKind[] payloadKinds);
    private string GetContentTypeHeader(ODataPayloadKind[] payloadKinds);
    private int GetContentLengthHeader();
    private void VerifyCanCreateODataResourceSetReader(IEdmEntitySetBase entitySet, IEdmStructuredType expectedBaseResourceType);
    private void VerifyCanCreateODataDeltaReader(IEdmEntitySetBase entitySet, IEdmEntityType expectedBaseEntityType);
    private void VerifyCanCreateODataResourceReader(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    private void VerifyCanCreateODataCollectionReader(IEdmTypeReference expectedItemTypeReference);
    private void VerifyCanCreateODataAsynchronousReader();
    private void VerifyCanCreateODataBatchReader();
    private void VerifyCanCreateODataParameterReader(IEdmOperation operation);
    private void VerifyCanReadServiceDocument();
    private void VerifyCanReadMetadataDocument();
    private void VerifyCanReadProperty(IEdmStructuralProperty property);
    private void VerifyCanReadProperty(IEdmTypeReference expectedPropertyTypeReference);
    private void VerifyCanReadError();
    private void VerifyCanReadEntityReferenceLinks();
    private void VerifyCanReadEntityReferenceLink();
    private ODataPayloadKind[] VerifyCanReadValue(IEdmTypeReference expectedTypeReference);
    private void VerifyReaderNotDisposedAndNotUsed();
    private void VerifyNotDisposed();
    private void Dispose(bool disposing);
    private T ReadFromInput(Func`2<ODataInputContext, T> readFunc, ODataPayloadKind[] payloadKinds);
    private bool TryGetSinglePayloadKindResultFromContentType(IEnumerable`1& payloadKindResults);
    private int ComparePayloadKindDetectionResult(ODataPayloadKindDetectionResult first, ODataPayloadKindDetectionResult second);
    [IteratorStateMachineAttribute("Microsoft.OData.ODataMessageReader/<GetPayloadKindDetectionTasks>d__106")]
private IEnumerable`1<Task> GetPayloadKindDetectionTasks(IEnumerable`1<ODataPayloadKindDetectionResult> payloadKindsFromContentType, List`1<ODataPayloadKindDetectionResult> detectionResults);
    private Task`1<T> ReadFromInputAsync(Func`2<ODataInputContext, Task`1<T>> readFunc, ODataPayloadKind[] payloadKinds);
    [CompilerGeneratedAttribute]
private bool <TryGetSinglePayloadKindResultFromContentType>b__104_0(ODataPayloadKindDetectionResult r);
}
public class Microsoft.OData.ODataMessageReaderSettings : object {
    private Uri baseUri;
    private ODataMessageQuotas messageQuotas;
    private ValidationKinds validations;
    [CompilerGeneratedAttribute]
private ODataLibraryCompatibility <LibraryCompatibility>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ODataVersion> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private ICharArrayPool <ArrayPool>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnablePropertyNameCaseInsensitive>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<IEdmType, string, IEdmType> <ClientCustomTypeResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<object, string, IEdmTypeReference> <PrimitiveTypeResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnablePrimitiveTypeConversion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableMessageStreamDisposal>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableCharactersCheck>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableUntypedCollections>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataVersion <MaxProtocolVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReadUntypedAsString>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`5<IEdmPrimitiveType, bool, string, IEdmProperty, bool> <ReadAsStreamFunc>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, bool> <ShouldIncludeAnnotation>k__BackingField;
    [CompilerGeneratedAttribute]
private IReaderValidator <Validator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowOnDuplicatePropertyNames>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowIfTypeConflictsWithMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowOnUndeclaredPropertyForNonOpenType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableReadingKeyAsSegment>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableReadingODataAnnotationWithoutPrefix>k__BackingField;
    public ODataLibraryCompatibility LibraryCompatibility { get; public set; }
    public Nullable`1<ODataVersion> Version { get; public set; }
    public ICharArrayPool ArrayPool { get; public set; }
    public ValidationKinds Validations { get; public set; }
    public Uri BaseUri { get; public set; }
    public bool EnablePropertyNameCaseInsensitive { get; public set; }
    public Func`3<IEdmType, string, IEdmType> ClientCustomTypeResolver { get; public set; }
    public Func`3<object, string, IEdmTypeReference> PrimitiveTypeResolver { get; public set; }
    public bool EnablePrimitiveTypeConversion { get; public set; }
    public bool EnableMessageStreamDisposal { get; public set; }
    public bool EnableCharactersCheck { get; public set; }
    public bool EnableUntypedCollections { get; public set; }
    public ODataVersion MaxProtocolVersion { get; public set; }
    public ODataMessageQuotas MessageQuotas { get; public set; }
    [ObsoleteAttribute("ReadUntypedAsString is deprecated and will be dropped in a future release. Please use 'PrimitiveTypeResolver' for primitive unknown types.")]
public bool ReadUntypedAsString { get; public set; }
    public Func`5<IEdmPrimitiveType, bool, string, IEdmProperty, bool> ReadAsStreamFunc { get; public set; }
    public Func`2<string, bool> ShouldIncludeAnnotation { get; public set; }
    internal IReaderValidator Validator { get; private set; }
    internal bool ThrowOnDuplicatePropertyNames { get; private set; }
    internal bool ThrowIfTypeConflictsWithMetadata { get; private set; }
    internal bool ThrowOnUndeclaredPropertyForNonOpenType { get; private set; }
    public bool EnableReadingKeyAsSegment { get; public set; }
    public bool EnableReadingODataAnnotationWithoutPrefix { get; public set; }
    public ODataMessageReaderSettings(ODataVersion odataVersion);
    [CompilerGeneratedAttribute]
public ODataLibraryCompatibility get_LibraryCompatibility();
    [CompilerGeneratedAttribute]
public void set_LibraryCompatibility(ODataLibraryCompatibility value);
    [CompilerGeneratedAttribute]
public Nullable`1<ODataVersion> get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Nullable`1<ODataVersion> value);
    [CompilerGeneratedAttribute]
public ICharArrayPool get_ArrayPool();
    [CompilerGeneratedAttribute]
public void set_ArrayPool(ICharArrayPool value);
    public ValidationKinds get_Validations();
    public void set_Validations(ValidationKinds value);
    public Uri get_BaseUri();
    public void set_BaseUri(Uri value);
    [CompilerGeneratedAttribute]
public bool get_EnablePropertyNameCaseInsensitive();
    [CompilerGeneratedAttribute]
public void set_EnablePropertyNameCaseInsensitive(bool value);
    [CompilerGeneratedAttribute]
public Func`3<IEdmType, string, IEdmType> get_ClientCustomTypeResolver();
    [CompilerGeneratedAttribute]
public void set_ClientCustomTypeResolver(Func`3<IEdmType, string, IEdmType> value);
    [CompilerGeneratedAttribute]
public Func`3<object, string, IEdmTypeReference> get_PrimitiveTypeResolver();
    [CompilerGeneratedAttribute]
public void set_PrimitiveTypeResolver(Func`3<object, string, IEdmTypeReference> value);
    [CompilerGeneratedAttribute]
public bool get_EnablePrimitiveTypeConversion();
    [CompilerGeneratedAttribute]
public void set_EnablePrimitiveTypeConversion(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableMessageStreamDisposal();
    [CompilerGeneratedAttribute]
public void set_EnableMessageStreamDisposal(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableCharactersCheck();
    [CompilerGeneratedAttribute]
public void set_EnableCharactersCheck(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableUntypedCollections();
    [CompilerGeneratedAttribute]
public void set_EnableUntypedCollections(bool value);
    [CompilerGeneratedAttribute]
public ODataVersion get_MaxProtocolVersion();
    [CompilerGeneratedAttribute]
public void set_MaxProtocolVersion(ODataVersion value);
    public ODataMessageQuotas get_MessageQuotas();
    public void set_MessageQuotas(ODataMessageQuotas value);
    [CompilerGeneratedAttribute]
public bool get_ReadUntypedAsString();
    [CompilerGeneratedAttribute]
public void set_ReadUntypedAsString(bool value);
    [CompilerGeneratedAttribute]
public Func`5<IEdmPrimitiveType, bool, string, IEdmProperty, bool> get_ReadAsStreamFunc();
    [CompilerGeneratedAttribute]
public void set_ReadAsStreamFunc(Func`5<IEdmPrimitiveType, bool, string, IEdmProperty, bool> value);
    [CompilerGeneratedAttribute]
public Func`2<string, bool> get_ShouldIncludeAnnotation();
    [CompilerGeneratedAttribute]
public void set_ShouldIncludeAnnotation(Func`2<string, bool> value);
    [CompilerGeneratedAttribute]
internal IReaderValidator get_Validator();
    [CompilerGeneratedAttribute]
private void set_Validator(IReaderValidator value);
    [CompilerGeneratedAttribute]
internal bool get_ThrowOnDuplicatePropertyNames();
    [CompilerGeneratedAttribute]
private void set_ThrowOnDuplicatePropertyNames(bool value);
    [CompilerGeneratedAttribute]
internal bool get_ThrowIfTypeConflictsWithMetadata();
    [CompilerGeneratedAttribute]
private void set_ThrowIfTypeConflictsWithMetadata(bool value);
    [CompilerGeneratedAttribute]
internal bool get_ThrowOnUndeclaredPropertyForNonOpenType();
    [CompilerGeneratedAttribute]
private void set_ThrowOnUndeclaredPropertyForNonOpenType(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableReadingKeyAsSegment();
    [CompilerGeneratedAttribute]
public void set_EnableReadingKeyAsSegment(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableReadingODataAnnotationWithoutPrefix();
    [CompilerGeneratedAttribute]
public void set_EnableReadingODataAnnotationWithoutPrefix(bool value);
    public ODataMessageReaderSettings Clone();
    internal static ODataMessageReaderSettings CreateReaderSettings(IServiceProvider container, ODataMessageReaderSettings other);
    internal bool ShouldSkipAnnotation(string annotationName);
    private void CopyFrom(ODataMessageReaderSettings other);
}
public class Microsoft.OData.ODataMessageWriter : object {
    private ODataMessage message;
    private bool writingResponse;
    private ODataMessageWriterSettings settings;
    private IEdmModel model;
    private IODataPayloadUriConverter payloadUriConverter;
    private IServiceProvider serviceProvider;
    private ODataMediaTypeResolver mediaTypeResolver;
    private bool writeMethodCalled;
    private bool isDisposed;
    private ODataOutputContext outputContext;
    private ODataPayloadKind writerPayloadKind;
    private ODataFormat format;
    private Encoding encoding;
    private bool writeErrorCalled;
    private ODataMediaType mediaType;
    private ODataMessageInfo messageInfo;
    internal ODataMessageWriterSettings Settings { get; }
    public ODataMessageWriter(IODataRequestMessage requestMessage);
    public ODataMessageWriter(IODataRequestMessage requestMessage, ODataMessageWriterSettings settings);
    public ODataMessageWriter(IODataRequestMessage requestMessage, ODataMessageWriterSettings settings, IEdmModel model);
    public ODataMessageWriter(IODataResponseMessage responseMessage);
    public ODataMessageWriter(IODataResponseMessage responseMessage, ODataMessageWriterSettings settings);
    public ODataMessageWriter(IODataResponseMessage responseMessage, ODataMessageWriterSettings settings, IEdmModel model);
    internal ODataMessageWriterSettings get_Settings();
    public ODataAsynchronousWriter CreateODataAsynchronousWriter();
    public ODataWriter CreateODataResourceSetWriter();
    public ODataWriter CreateODataResourceSetWriter(IEdmEntitySetBase entitySet);
    public ODataWriter CreateODataResourceSetWriter(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType);
    public Task`1<ODataAsynchronousWriter> CreateODataAsynchronousWriterAsync();
    public Task`1<ODataWriter> CreateODataResourceSetWriterAsync();
    public Task`1<ODataWriter> CreateODataResourceSetWriterAsync(IEdmEntitySetBase entitySet);
    public Task`1<ODataWriter> CreateODataResourceSetWriterAsync(IEdmEntitySetBase entitySet, IEdmStructuredType structuredType);
    public ODataWriter CreateODataDeltaResourceSetWriter();
    public ODataWriter CreateODataDeltaResourceSetWriter(IEdmEntitySetBase entitySet);
    public ODataWriter CreateODataDeltaResourceSetWriter(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType);
    public Task`1<ODataWriter> CreateODataDeltaResourceSetWriterAsync();
    public Task`1<ODataWriter> CreateODataDeltaResourceSetWriterAsync(IEdmEntitySetBase entitySet);
    public Task`1<ODataWriter> CreateODataDeltaResourceSetWriterAsync(IEdmEntitySetBase entitySet, IEdmEntityType entityType);
    public ODataWriter CreateODataResourceWriter();
    public ODataWriter CreateODataResourceWriter(IEdmNavigationSource navigationSource);
    public ODataWriter CreateODataResourceWriter(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public Task`1<ODataWriter> CreateODataResourceWriterAsync();
    public Task`1<ODataWriter> CreateODataResourceWriterAsync(IEdmNavigationSource navigationSource);
    public Task`1<ODataWriter> CreateODataResourceWriterAsync(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public ODataWriter CreateODataUriParameterResourceWriter(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public Task`1<ODataWriter> CreateODataUriParameterResourceWriterAsync(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public ODataWriter CreateODataUriParameterResourceSetWriter(IEdmEntitySetBase entitySetBase, IEdmStructuredType resourceType);
    public Task`1<ODataWriter> CreateODataUriParameterResourceSetWriterAsync(IEdmEntitySetBase entitySetBase, IEdmStructuredType resourceType);
    public ODataCollectionWriter CreateODataCollectionWriter();
    public ODataCollectionWriter CreateODataCollectionWriter(IEdmTypeReference itemTypeReference);
    public Task`1<ODataCollectionWriter> CreateODataCollectionWriterAsync();
    public Task`1<ODataCollectionWriter> CreateODataCollectionWriterAsync(IEdmTypeReference itemTypeReference);
    public ODataBatchWriter CreateODataBatchWriter();
    public Task`1<ODataBatchWriter> CreateODataBatchWriterAsync();
    public ODataParameterWriter CreateODataParameterWriter(IEdmOperation operation);
    public Task`1<ODataParameterWriter> CreateODataParameterWriterAsync(IEdmOperation operation);
    public void WriteServiceDocument(ODataServiceDocument serviceDocument);
    public Task WriteServiceDocumentAsync(ODataServiceDocument serviceDocument);
    public void WriteProperty(ODataProperty property);
    public Task WritePropertyAsync(ODataProperty property);
    public void WriteError(ODataError error, bool includeDebugInformation);
    public Task WriteErrorAsync(ODataError error, bool includeDebugInformation);
    public void WriteEntityReferenceLinks(ODataEntityReferenceLinks links);
    public Task WriteEntityReferenceLinksAsync(ODataEntityReferenceLinks links);
    public void WriteEntityReferenceLink(ODataEntityReferenceLink link);
    public Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink link);
    public void WriteValue(object value);
    public Task WriteValueAsync(object value);
    public void WriteMetadataDocument();
    public Task WriteMetadataDocumentAsync();
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataMessageWriter/<DisposeAsync>d__71")]
public sealed virtual ValueTask DisposeAsync();
    internal ODataFormat SetHeaders(ODataPayloadKind payloadKind);
    private static IServiceProvider GetServiceProvider(T message);
    private static IEdmModel GetModel(IServiceProvider container);
    private void SetOrVerifyHeaders(ODataPayloadKind payloadKind);
    private void EnsureODataVersion();
    private void EnsureODataFormatAndContentType();
    private void VerifyCanCreateODataAsyncWriter();
    private void VerifyCanCreateODataResourceSetWriter();
    private void VerifyCanCreateODataDeltaWriter();
    private void VerifyCanCreateODataResourceWriter();
    [SuppressMessageAttribute("Microsoft.Naming", "CA2204:LiteralsShouldBeSpelledCorrectly")]
private void VerifyCanCreateODataCollectionWriter(IEdmTypeReference itemTypeReference);
    private void VerifyCanCreateODataBatchWriter();
    private void VerifyCanCreateODataParameterWriter(IEdmOperation operation);
    private void VerifyCanWriteServiceDocument(ODataServiceDocument serviceDocument);
    private void VerifyCanWriteProperty(ODataProperty property);
    private void VerifyCanWriteTopLevelError(ODataError error);
    private void VerifyCanWriteInStreamError(ODataError error);
    private void VerifyCanWriteEntityReferenceLinks(ODataEntityReferenceLinks links);
    private void VerifyCanWriteEntityReferenceLink(ODataEntityReferenceLink link);
    private ODataPayloadKind VerifyCanWriteValue(object value);
    private void VerifyCanWriteMetadataDocument();
    private void VerifyWriterNotDisposedAndNotUsed();
    private void VerifyNotDisposed();
    private void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataMessageWriter/<DisposeAsyncCore>d__96")]
private ValueTask DisposeAsyncCore();
    private void VerifyPayloadKind(ODataPayloadKind payloadKindToWrite);
    private ODataMessageInfo GetOrCreateMessageInfo(Stream messageStream, bool isAsync);
    private void WriteToOutput(ODataPayloadKind payloadKind, Action`1<ODataOutputContext> writeAction);
    private TResult WriteToOutput(ODataPayloadKind payloadKind, Func`2<ODataOutputContext, TResult> writeFunc);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataMessageWriter/<WriteToOutputAsync>d__101")]
private Task WriteToOutputAsync(ODataPayloadKind payloadKind, Func`2<ODataOutputContext, Task> writeAsyncAction);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataMessageWriter/<WriteToOutputAsync>d__102`1")]
private Task`1<TResult> WriteToOutputAsync(ODataPayloadKind payloadKind, Func`2<ODataOutputContext, Task`1<TResult>> writeFunc);
}
public class Microsoft.OData.ODataMessageWriterSettings : object {
    private string acceptCharSets;
    private string acceptMediaTypes;
    private Uri baseUri;
    private ODataFormat format;
    private ODataMessageQuotas messageQuotas;
    private ODataUri odataUri;
    private Nullable`1<bool> useFormat;
    private ValidationKinds validations;
    private bool enableWritingODataAnnotationWithoutPrefix;
    private bool omitODataPrefix40;
    private bool omitODataPrefix;
    [CompilerGeneratedAttribute]
private ODataLibraryCompatibility <LibraryCompatibility>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableMessageStreamDisposal>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableCharactersCheck>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JsonPCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private ICharArrayPool <ArrayPool>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BufferSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ODataVersion> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataMetadataSelector <MetadataSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MultipartNewLine>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AlwaysAddTypeAnnotationsForDerivedTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, bool> <ShouldIncludeAnnotation>k__BackingField;
    [CompilerGeneratedAttribute]
private IWriterValidator <Validator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowIfTypeConflictsWithMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowOnDuplicatePropertyNames>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowOnUndeclaredPropertyForNonOpenType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIeee754Compatible>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, bool> <ShouldIncludeAnnotationInternal>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableWritingKeyAsSegment>k__BackingField;
    public ODataLibraryCompatibility LibraryCompatibility { get; public set; }
    public ValidationKinds Validations { get; public set; }
    public Uri BaseUri { get; public set; }
    public bool EnableMessageStreamDisposal { get; public set; }
    public bool EnableCharactersCheck { get; public set; }
    [ObsoleteAttribute("This will be dropped in the 9.x release.")]
public string JsonPCallback { get; public set; }
    public ICharArrayPool ArrayPool { get; public set; }
    public int BufferSize { get; public set; }
    public ODataMessageQuotas MessageQuotas { get; public set; }
    public ODataUri ODataUri { get; public set; }
    public Nullable`1<ODataVersion> Version { get; public set; }
    public ODataMetadataSelector MetadataSelector { get; public set; }
    public string MultipartNewLine { get; public set; }
    public bool AlwaysAddTypeAnnotationsForDerivedTypes { get; public set; }
    public Func`2<string, bool> ShouldIncludeAnnotation { get; public set; }
    internal IWriterValidator Validator { get; private set; }
    internal bool ThrowIfTypeConflictsWithMetadata { get; private set; }
    internal bool ThrowOnDuplicatePropertyNames { get; private set; }
    internal bool ThrowOnUndeclaredPropertyForNonOpenType { get; private set; }
    internal string AcceptableMediaTypes { get; }
    internal bool IsIeee754Compatible { get; internal set; }
    internal string AcceptableCharsets { get; }
    internal ODataFormat Format { get; }
    internal bool IsIndividualProperty { get; }
    internal Uri MetadataDocumentUri { get; }
    internal Nullable`1<bool> UseFormat { get; }
    internal SelectExpandClause SelectExpandClause { get; }
    internal SelectedPropertiesNode SelectedProperties { get; }
    internal Func`2<string, bool> ShouldIncludeAnnotationInternal { get; internal set; }
    public bool EnableWritingKeyAsSegment { get; public set; }
    public ODataMessageWriterSettings(Nullable`1<ODataVersion> version);
    [CompilerGeneratedAttribute]
public ODataLibraryCompatibility get_LibraryCompatibility();
    [CompilerGeneratedAttribute]
public void set_LibraryCompatibility(ODataLibraryCompatibility value);
    public ValidationKinds get_Validations();
    public void set_Validations(ValidationKinds value);
    public Uri get_BaseUri();
    public void set_BaseUri(Uri value);
    [CompilerGeneratedAttribute]
public bool get_EnableMessageStreamDisposal();
    [CompilerGeneratedAttribute]
public void set_EnableMessageStreamDisposal(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableCharactersCheck();
    [CompilerGeneratedAttribute]
public void set_EnableCharactersCheck(bool value);
    [CompilerGeneratedAttribute]
public string get_JsonPCallback();
    [CompilerGeneratedAttribute]
public void set_JsonPCallback(string value);
    [CompilerGeneratedAttribute]
public ICharArrayPool get_ArrayPool();
    [CompilerGeneratedAttribute]
public void set_ArrayPool(ICharArrayPool value);
    [CompilerGeneratedAttribute]
public int get_BufferSize();
    [CompilerGeneratedAttribute]
public void set_BufferSize(int value);
    public ODataMessageQuotas get_MessageQuotas();
    public void set_MessageQuotas(ODataMessageQuotas value);
    public ODataUri get_ODataUri();
    public void set_ODataUri(ODataUri value);
    [CompilerGeneratedAttribute]
public Nullable`1<ODataVersion> get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Nullable`1<ODataVersion> value);
    [CompilerGeneratedAttribute]
public ODataMetadataSelector get_MetadataSelector();
    [CompilerGeneratedAttribute]
public void set_MetadataSelector(ODataMetadataSelector value);
    [CompilerGeneratedAttribute]
public string get_MultipartNewLine();
    [CompilerGeneratedAttribute]
public void set_MultipartNewLine(string value);
    [CompilerGeneratedAttribute]
public bool get_AlwaysAddTypeAnnotationsForDerivedTypes();
    [CompilerGeneratedAttribute]
public void set_AlwaysAddTypeAnnotationsForDerivedTypes(bool value);
    [CompilerGeneratedAttribute]
public Func`2<string, bool> get_ShouldIncludeAnnotation();
    [CompilerGeneratedAttribute]
public void set_ShouldIncludeAnnotation(Func`2<string, bool> value);
    [CompilerGeneratedAttribute]
internal IWriterValidator get_Validator();
    [CompilerGeneratedAttribute]
private void set_Validator(IWriterValidator value);
    [CompilerGeneratedAttribute]
internal bool get_ThrowIfTypeConflictsWithMetadata();
    [CompilerGeneratedAttribute]
private void set_ThrowIfTypeConflictsWithMetadata(bool value);
    [CompilerGeneratedAttribute]
internal bool get_ThrowOnDuplicatePropertyNames();
    [CompilerGeneratedAttribute]
private void set_ThrowOnDuplicatePropertyNames(bool value);
    [CompilerGeneratedAttribute]
internal bool get_ThrowOnUndeclaredPropertyForNonOpenType();
    [CompilerGeneratedAttribute]
private void set_ThrowOnUndeclaredPropertyForNonOpenType(bool value);
    internal string get_AcceptableMediaTypes();
    [CompilerGeneratedAttribute]
internal bool get_IsIeee754Compatible();
    [CompilerGeneratedAttribute]
internal void set_IsIeee754Compatible(bool value);
    internal string get_AcceptableCharsets();
    internal ODataFormat get_Format();
    internal bool get_IsIndividualProperty();
    internal Uri get_MetadataDocumentUri();
    internal Nullable`1<bool> get_UseFormat();
    internal SelectExpandClause get_SelectExpandClause();
    internal SelectedPropertiesNode get_SelectedProperties();
    [CompilerGeneratedAttribute]
internal Func`2<string, bool> get_ShouldIncludeAnnotationInternal();
    [CompilerGeneratedAttribute]
internal void set_ShouldIncludeAnnotationInternal(Func`2<string, bool> value);
    [CompilerGeneratedAttribute]
public bool get_EnableWritingKeyAsSegment();
    [CompilerGeneratedAttribute]
public void set_EnableWritingKeyAsSegment(bool value);
    public bool GetOmitODataPrefix();
    public bool GetOmitODataPrefix(ODataVersion version);
    public void SetOmitODataPrefix(bool value);
    public void SetOmitODataPrefix(bool value, ODataVersion version);
    public ODataMessageWriterSettings Clone();
    public void SetContentType(string acceptableMediaTypes, string acceptableCharSets);
    public void SetContentType(ODataFormat payloadFormat);
    internal static ODataMessageWriterSettings CreateWriterSettings(IServiceProvider container, ODataMessageWriterSettings other);
    internal void SetServiceDocumentUri(Uri serviceDocumentUri);
    internal bool HasJsonPaddingFunction();
    internal bool ShouldSkipAnnotation(string annotationName);
    private void CopyFrom(ODataMessageWriterSettings other);
}
internal class Microsoft.OData.ODataMetadataFormat : ODataFormat {
    public virtual string ToString();
    public virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
    public virtual ODataInputContext CreateInputContext(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public virtual ODataOutputContext CreateOutputContext(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    public virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
    public virtual Task`1<ODataInputContext> CreateInputContextAsync(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public virtual Task`1<ODataOutputContext> CreateOutputContextAsync(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    private static bool IsJsonMetadata(ODataMediaType contentType);
    private static IEnumerable`1<ODataPayloadKind> DetectPayloadKindImplementation(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
}
internal class Microsoft.OData.ODataMetadataInputContext : ODataInputContext {
    private XmlReader baseXmlReader;
    private BufferingXmlReader xmlReader;
    public ODataMetadataInputContext(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    internal virtual IEdmModel ReadMetadataDocument(CsdlReaderSettingsBase csdlReaderSettings);
    internal virtual IEdmModel ReadMetadataDocument();
    internal virtual IEdmModel ReadMetadataDocument(Func`2<Uri, XmlReader> getReferencedModelReaderFunc);
    protected virtual void Dispose(bool disposing);
    private IEdmModel ReadMetadataDocumentImplementation(Func`2<Uri, XmlReader> getReferencedModelReaderFunc);
}
internal class Microsoft.OData.ODataMetadataJsonInputContext : ODataInputContext {
    private Stream messageStream;
    public ODataMetadataJsonInputContext(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    internal virtual IEdmModel ReadMetadataDocument();
    internal virtual IEdmModel ReadMetadataDocument(CsdlReaderSettingsBase csdlReaderSettings);
    protected virtual void Dispose(bool disposing);
}
internal class Microsoft.OData.ODataMetadataJsonOutputContext : ODataOutputContext {
    private Stream messageOutputStream;
    private Utf8JsonWriter jsonWriter;
    private BufferedStream asynchronousOutputStream;
    internal ODataMetadataJsonOutputContext(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    internal Task FlushAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataMetadataJsonOutputContext/<WriteMetadataDocumentAsync>d__5")]
internal virtual Task WriteMetadataDocumentAsync();
    internal void Flush();
    internal virtual void WriteInStreamError(ODataError error, bool includeDebugInformation);
    internal virtual void WriteMetadataDocument();
    internal static Utf8JsonWriter CreateJsonWriter(Stream stream, ODataMessageWriterSettings messageWriterSettings);
    protected virtual void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataMetadataJsonOutputContext/<DisposeAsyncCore>d__11")]
protected virtual ValueTask DisposeAsyncCore();
    private void WriteMetadataDocumentImplementation();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataMetadataJsonOutputContext/<WriteMetadataDocumentImplementationAsync>d__13")]
private Task WriteMetadataDocumentImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataMetadataJsonOutputContext/<DisposeOutputStreamAsync>d__14")]
private Task DisposeOutputStreamAsync();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private ValueTask <>n__0();
}
internal class Microsoft.OData.ODataMetadataOutputContext : ODataOutputContext {
    private Stream messageOutputStream;
    private XmlWriter xmlWriter;
    private Stream asynchronousOutputStream;
    internal ODataMetadataOutputContext(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    internal Task FlushAsync();
    internal virtual Task WriteInStreamErrorAsync(ODataError error, bool includeDebugInformation);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataMetadataOutputContext/<WriteMetadataDocumentAsync>d__6")]
internal virtual Task WriteMetadataDocumentAsync();
    internal void Flush();
    internal virtual void WriteInStreamError(ODataError error, bool includeDebugInformation);
    internal virtual void WriteMetadataDocument();
    protected virtual void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataMetadataOutputContext/<DisposeAsyncCore>d__11")]
protected virtual ValueTask DisposeAsyncCore();
    private void WriteMetadataDocumentImplementation();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataMetadataOutputContext/<WriteMetadataDocumentImplementationAsync>d__13")]
private Task WriteMetadataDocumentImplementationAsync();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private ValueTask <>n__0();
}
[DebuggerDisplayAttribute("{Name}")]
public class Microsoft.OData.ODataNestedResourceInfo : ODataItem {
    private ODataResourceMetadataBuilder metadataBuilder;
    private Uri url;
    private bool hasNavigationLink;
    private Uri associationLinkUrl;
    private bool hasAssociationUrl;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ContextUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataNestedResourceInfoSerializationInfo <SerializationInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsComplex>k__BackingField;
    public Nullable`1<bool> IsCollection { get; public set; }
    public string Name { get; public set; }
    public Uri Url { get; public set; }
    public Uri AssociationLinkUrl { get; public set; }
    internal Uri ContextUrl { get; internal set; }
    internal ODataResourceMetadataBuilder MetadataBuilder { get; internal set; }
    internal ODataNestedResourceInfoSerializationInfo SerializationInfo { get; internal set; }
    internal bool IsComplex { get; internal set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsCollection();
    [CompilerGeneratedAttribute]
public void set_IsCollection(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public Uri get_Url();
    public void set_Url(Uri value);
    public Uri get_AssociationLinkUrl();
    public void set_AssociationLinkUrl(Uri value);
    [CompilerGeneratedAttribute]
internal Uri get_ContextUrl();
    [CompilerGeneratedAttribute]
internal void set_ContextUrl(Uri value);
    internal ODataResourceMetadataBuilder get_MetadataBuilder();
    internal void set_MetadataBuilder(ODataResourceMetadataBuilder value);
    [CompilerGeneratedAttribute]
internal ODataNestedResourceInfoSerializationInfo get_SerializationInfo();
    [CompilerGeneratedAttribute]
internal void set_SerializationInfo(ODataNestedResourceInfoSerializationInfo value);
    [CompilerGeneratedAttribute]
internal bool get_IsComplex();
    [CompilerGeneratedAttribute]
internal void set_IsComplex(bool value);
}
public class Microsoft.OData.ODataNestedResourceInfoSerializationInfo : object {
    [CompilerGeneratedAttribute]
private bool <IsComplex>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUndeclared>k__BackingField;
    public bool IsComplex { get; public set; }
    public bool IsUndeclared { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsComplex();
    [CompilerGeneratedAttribute]
public void set_IsComplex(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsUndeclared();
    [CompilerGeneratedAttribute]
public void set_IsUndeclared(bool value);
}
internal class Microsoft.OData.ODataNotificationReader : TextReader {
    private TextReader textReader;
    private IODataStreamListener listener;
    private bool synchronous;
    private bool disposed;
    internal ODataNotificationReader(TextReader textReader, IODataStreamListener listener, bool synchronous);
    public virtual int GetHashCode();
    public virtual string ToString();
    public virtual int Peek();
    public virtual int Read();
    public virtual int Read(Char[] buffer, int index, int count);
    public virtual int ReadBlock(Char[] buffer, int index, int count);
    public virtual string ReadLine();
    public virtual string ReadToEnd();
    public virtual Task`1<int> ReadAsync(Char[] buffer, int index, int count);
    public virtual Task`1<int> ReadBlockAsync(Char[] buffer, int index, int count);
    public virtual Task`1<string> ReadLineAsync();
    public virtual Task`1<string> ReadToEndAsync();
    protected virtual void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataNotificationReader/<DisposeAsync>d__18")]
public sealed virtual ValueTask DisposeAsync();
}
internal class Microsoft.OData.ODataNotificationStream : Stream {
    private Stream stream;
    private IODataStreamListener listener;
    private bool disposed;
    private bool synchronous;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public bool CanTimeout { get; }
    public int ReadTimeout { get; public set; }
    public int WriteTimeout { get; public set; }
    internal ODataNotificationStream(Stream underlyingStream, IODataStreamListener listener, bool synchronous);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual bool get_CanTimeout();
    public virtual int get_ReadTimeout();
    public virtual void set_ReadTimeout(int value);
    public virtual int get_WriteTimeout();
    public virtual void set_WriteTimeout(int value);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual int ReadByte();
    public virtual void WriteByte(byte value);
    public virtual string ToString();
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    public virtual Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken);
    public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
    public virtual ValueTask DisposeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataNotificationStream/<DisposeAsyncCore>d__38")]
private ValueTask DisposeAsyncCore();
}
internal class Microsoft.OData.ODataNotificationWriter : TextWriter {
    private TextWriter textWriter;
    private IODataStreamListener listener;
    private bool disposed;
    private bool synchronous;
    public Encoding Encoding { get; }
    public string NewLine { get; public set; }
    public IFormatProvider FormatProvider { get; }
    internal ODataNotificationWriter(TextWriter textWriter, IODataStreamListener listener, bool synchronous);
    public virtual Encoding get_Encoding();
    public virtual string get_NewLine();
    public virtual void set_NewLine(string value);
    public virtual IFormatProvider get_FormatProvider();
    public virtual void Flush();
    public virtual int GetHashCode();
    public virtual string ToString();
    public virtual void Write(char value);
    public virtual void Write(bool value);
    public virtual void Write(string value);
    public virtual void Write(Char[] buffer);
    public virtual void Write(Char[] buffer, int index, int count);
    public virtual void Write(string format, Object[] arg);
    public virtual void Write(decimal value);
    public virtual void Write(object value);
    public virtual void Write(double value);
    public virtual void Write(float value);
    public virtual void Write(int value);
    public virtual void Write(long value);
    public virtual void Write(UInt32 value);
    public virtual void Write(ulong value);
    public virtual void WriteLine();
    public virtual void WriteLine(bool value);
    public virtual void WriteLine(char value);
    public virtual void WriteLine(Char[] buffer);
    public virtual void WriteLine(Char[] buffer, int index, int count);
    public virtual void WriteLine(decimal value);
    public virtual void WriteLine(double value);
    public virtual void WriteLine(float value);
    public virtual void WriteLine(int value);
    public virtual void WriteLine(long value);
    public virtual void WriteLine(object value);
    public virtual void WriteLine(string format, Object[] arg);
    public virtual void WriteLine(string value);
    public virtual void WriteLine(UInt32 value);
    public virtual void WriteLine(ulong value);
    public virtual Task FlushAsync();
    public virtual Task WriteAsync(char value);
    public virtual Task WriteAsync(Char[] buffer, int index, int count);
    public virtual Task WriteAsync(string value);
    public virtual Task WriteLineAsync();
    public virtual Task WriteLineAsync(char value);
    public virtual Task WriteLineAsync(Char[] buffer, int index, int count);
    public virtual Task WriteLineAsync(string value);
    protected virtual void Dispose(bool disposing);
    public virtual ValueTask DisposeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataNotificationWriter/<DisposeAsyncCore>d__54")]
private ValueTask DisposeAsyncCore();
}
public class Microsoft.OData.ODataNullValue : ODataValue {
    internal bool IsNullValue { get; }
    internal virtual bool get_IsNullValue();
}
public enum Microsoft.OData.ODataNullValueBehaviorKind : Enum {
    public int value__;
    public static ODataNullValueBehaviorKind Default;
    public static ODataNullValueBehaviorKind IgnoreValue;
    public static ODataNullValueBehaviorKind DisableValidation;
}
[ExtensionAttribute]
public static class Microsoft.OData.ODataObjectModelExtensions : object {
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataResourceSet resourceSet, ODataResourceSerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataResourceBase resource, ODataResourceSerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataResource resource, ODataResourceSerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataNestedResourceInfo nestedResourceInfo, ODataNestedResourceInfoSerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataProperty property, ODataPropertySerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataCollectionStart collectionStart, ODataCollectionStartSerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataDeltaResourceSet deltaResourceSet, ODataDeltaResourceSetSerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataDeltaResourceSet deltaResourceSet, ODataResourceSerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataDeltaDeletedEntry deltaDeletedEntry, ODataResourceSerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataDeltaDeletedEntry deltaDeletedEntry, ODataDeltaSerializationInfo serializationInfo);
    [ExtensionAttribute]
public static void SetSerializationInfo(ODataDeltaLinkBase deltalink, ODataDeltaSerializationInfo serializationInfo);
}
public abstract class Microsoft.OData.ODataOperation : ODataAnnotatable {
    private ODataResourceMetadataBuilder metadataBuilder;
    private string title;
    private bool hasNonComputedTitle;
    private string computedTitle;
    private Uri target;
    private bool hasNonComputedTarget;
    private Uri computedTarget;
    private string operationFullName;
    private string parameterNames;
    [CompilerGeneratedAttribute]
private Uri <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BindingParameterTypeName>k__BackingField;
    public Uri Metadata { get; public set; }
    public string Title { get; public set; }
    public Uri Target { get; public set; }
    internal string BindingParameterTypeName { get; internal set; }
    [CompilerGeneratedAttribute]
public Uri get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(Uri value);
    public string get_Title();
    public void set_Title(string value);
    public Uri get_Target();
    public void set_Target(Uri value);
    [CompilerGeneratedAttribute]
internal string get_BindingParameterTypeName();
    [CompilerGeneratedAttribute]
internal void set_BindingParameterTypeName(string value);
    internal void SetMetadataBuilder(ODataResourceMetadataBuilder builder, Uri metadataDocumentUri);
    internal ODataResourceMetadataBuilder GetMetadataBuilder();
}
public abstract class Microsoft.OData.ODataOutputContext : object {
    private ODataFormat format;
    private ODataMessageWriterSettings messageWriterSettings;
    private bool writingResponse;
    private bool synchronous;
    private IEdmModel model;
    private IODataPayloadUriConverter payloadUriConverter;
    private IServiceProvider container;
    private EdmTypeResolver edmTypeResolver;
    private ODataPayloadValueConverter payloadValueConverter;
    private IWriterValidator writerValidator;
    public ODataMessageWriterSettings MessageWriterSettings { get; }
    public bool WritingResponse { get; }
    public bool Synchronous { get; }
    public IEdmModel Model { get; }
    public IODataPayloadUriConverter PayloadUriConverter { get; }
    internal IServiceProvider Container { get; }
    internal EdmTypeResolver EdmTypeResolver { get; }
    internal ODataPayloadValueConverter PayloadValueConverter { get; }
    internal IWriterValidator WriterValidator { get; }
    protected ODataOutputContext(ODataFormat format, ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    public ODataMessageWriterSettings get_MessageWriterSettings();
    public bool get_WritingResponse();
    public bool get_Synchronous();
    public IEdmModel get_Model();
    public IODataPayloadUriConverter get_PayloadUriConverter();
    internal IServiceProvider get_Container();
    internal EdmTypeResolver get_EdmTypeResolver();
    internal ODataPayloadValueConverter get_PayloadValueConverter();
    internal IWriterValidator get_WriterValidator();
    public sealed virtual void Dispose();
    public virtual ODataWriter CreateODataResourceSetWriter(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType);
    public virtual Task`1<ODataWriter> CreateODataResourceSetWriterAsync(IEdmEntitySetBase entitySet, IEdmStructuredType entityType);
    public virtual ODataWriter CreateODataDeltaResourceSetWriter(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType);
    public virtual Task`1<ODataWriter> CreateODataDeltaResourceSetWriterAsync(IEdmEntitySetBase entitySet, IEdmStructuredType entityType);
    public virtual ODataWriter CreateODataResourceWriter(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public virtual Task`1<ODataWriter> CreateODataResourceWriterAsync(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public virtual ODataCollectionWriter CreateODataCollectionWriter(IEdmTypeReference itemTypeReference);
    public virtual Task`1<ODataCollectionWriter> CreateODataCollectionWriterAsync(IEdmTypeReference itemTypeReference);
    public virtual ODataWriter CreateODataUriParameterResourceWriter(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public virtual Task`1<ODataWriter> CreateODataUriParameterResourceWriterAsync(IEdmNavigationSource navigationSource, IEdmStructuredType resourceType);
    public virtual ODataWriter CreateODataUriParameterResourceSetWriter(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType);
    public virtual Task`1<ODataWriter> CreateODataUriParameterResourceSetWriterAsync(IEdmEntitySetBase entitySet, IEdmStructuredType resourceType);
    public virtual ODataParameterWriter CreateODataParameterWriter(IEdmOperation operation);
    public virtual Task`1<ODataParameterWriter> CreateODataParameterWriterAsync(IEdmOperation operation);
    public virtual void WriteProperty(ODataProperty odataProperty);
    public virtual Task WritePropertyAsync(ODataProperty odataProperty);
    public virtual void WriteError(ODataError odataError, bool includeDebugInformation);
    public virtual Task WriteErrorAsync(ODataError odataError, bool includeDebugInformation);
    internal virtual void WriteInStreamError(ODataError error, bool includeDebugInformation);
    internal virtual Task WriteInStreamErrorAsync(ODataError error, bool includeDebugInformation);
    internal virtual ODataAsynchronousWriter CreateODataAsynchronousWriter();
    internal virtual Task`1<ODataAsynchronousWriter> CreateODataAsynchronousWriterAsync();
    internal virtual ODataDeltaWriter CreateODataDeltaWriter(IEdmEntitySetBase entitySet, IEdmEntityType entityType);
    internal virtual Task`1<ODataDeltaWriter> CreateODataDeltaWriterAsync(IEdmEntitySetBase entitySet, IEdmEntityType entityType);
    internal virtual ODataBatchWriter CreateODataBatchWriter();
    internal virtual Task`1<ODataBatchWriter> CreateODataBatchWriterAsync();
    internal virtual void WriteServiceDocument(ODataServiceDocument serviceDocument);
    internal virtual Task WriteServiceDocumentAsync(ODataServiceDocument serviceDocument);
    internal virtual void WriteEntityReferenceLinks(ODataEntityReferenceLinks links);
    internal virtual Task WriteEntityReferenceLinksAsync(ODataEntityReferenceLinks links);
    internal virtual void WriteEntityReferenceLink(ODataEntityReferenceLink link);
    internal virtual Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink link);
    internal virtual void WriteValue(object value);
    internal virtual Task WriteValueAsync(object value);
    internal virtual void WriteMetadataDocument();
    internal virtual Task WriteMetadataDocumentAsync();
    [ConditionalAttribute("DEBUG")]
[SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
internal void AssertSynchronous();
    [ConditionalAttribute("DEBUG")]
[SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
internal void AssertAsynchronous();
    protected virtual void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataOutputContext/<DisposeAsync>d__69")]
public sealed virtual ValueTask DisposeAsync();
    protected virtual ValueTask DisposeAsyncCore();
    private ODataException CreatePayloadKindNotSupportedException(ODataPayloadKind payloadKind);
}
public abstract class Microsoft.OData.ODataParameterReader : object {
    public ODataParameterReaderState State { get; }
    public string Name { get; }
    public object Value { get; }
    public abstract virtual ODataParameterReaderState get_State();
    public abstract virtual string get_Name();
    public abstract virtual object get_Value();
    public abstract virtual ODataReader CreateResourceReader();
    public abstract virtual ODataReader CreateResourceSetReader();
    public abstract virtual ODataCollectionReader CreateCollectionReader();
    public abstract virtual bool Read();
    public abstract virtual Task`1<bool> ReadAsync();
    public virtual Task`1<ODataReader> CreateResourceReaderAsync();
    public virtual Task`1<ODataReader> CreateResourceSetReaderAsync();
    public virtual Task`1<ODataCollectionReader> CreateCollectionReaderAsync();
}
internal abstract class Microsoft.OData.ODataParameterReaderCore : ODataParameterReader {
    private ODataInputContext inputContext;
    private IEdmOperation operation;
    private Stack`1<Scope> scopes;
    private HashSet`1<string> parametersRead;
    protected SubReaderState subReaderState;
    public ODataParameterReaderState State { get; }
    public string Name { get; }
    public object Value { get; }
    protected IEdmOperation Operation { get; }
    protected ODataParameterReaderCore(ODataInputContext inputContext, IEdmOperation operation);
    public sealed virtual ODataParameterReaderState get_State();
    public virtual string get_Name();
    public virtual object get_Value();
    protected IEdmOperation get_Operation();
    public virtual ODataReader CreateResourceReader();
    public virtual ODataReader CreateResourceSetReader();
    public virtual ODataCollectionReader CreateCollectionReader();
    public sealed virtual bool Read();
    public sealed virtual Task`1<bool> ReadAsync();
    private sealed virtual override void Microsoft.OData.IODataReaderWriterListener.OnException();
    private sealed virtual override void Microsoft.OData.IODataReaderWriterListener.OnCompleted();
    protected internal IEdmTypeReference GetParameterTypeReference(string parameterName);
    protected internal void EnterScope(ODataParameterReaderState state, string name, object value);
    [SuppressMessageAttribute("Microsoft.Usage", "CA1801:ReviewUnusedParameters")]
[SuppressMessageAttribute("Microsoft.Performance", "CA1804:RemoveUnusedLocals")]
protected internal void PopScope(ODataParameterReaderState state);
    protected void OnParameterCompleted();
    protected bool ReadImplementation();
    protected abstract virtual bool ReadAtStartImplementation();
    protected abstract virtual bool ReadNextParameterImplementation();
    protected abstract virtual ODataReader CreateResourceReader(IEdmStructuredType expectedResourceType);
    protected abstract virtual ODataReader CreateResourceSetReader(IEdmStructuredType expectedResourceType);
    protected abstract virtual ODataCollectionReader CreateCollectionReader(IEdmTypeReference expectedItemTypeReference);
    protected bool ReadSynchronously();
    protected virtual Task`1<bool> ReadAsynchronously();
    protected void VerifyCanCreateSubReader(ODataParameterReaderState expectedState);
    private static string GetCreateReaderMethodName(ODataParameterReaderState state);
    private T InterceptException(Func`2<ODataParameterReaderCore, T> action);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataParameterReaderCore/<InterceptExceptionAsync>d__37`1")]
private Task`1<TResult> InterceptExceptionAsync(Func`2<ODataParameterReaderCore, Task`1<TResult>> action);
    private void VerifyCanRead(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
    private void VerifySynchronousCallAllowed();
    private void VerifyAsynchronousCallAllowed();
}
internal abstract class Microsoft.OData.ODataParameterReaderCoreAsync : ODataParameterReaderCore {
    protected ODataParameterReaderCoreAsync(ODataInputContext inputContext, IEdmOperation operation);
    public virtual Task`1<ODataReader> CreateResourceReaderAsync();
    public virtual Task`1<ODataReader> CreateResourceSetReaderAsync();
    public virtual Task`1<ODataCollectionReader> CreateCollectionReaderAsync();
    protected abstract virtual Task`1<bool> ReadAtStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadNextParameterImplementationAsync();
    protected abstract virtual Task`1<ODataReader> CreateResourceReaderAsync(IEdmStructuredType expectedResourceType);
    protected abstract virtual Task`1<ODataReader> CreateResourceSetReaderAsync(IEdmStructuredType expectedResourceType);
    protected abstract virtual Task`1<ODataCollectionReader> CreateCollectionReaderAsync(IEdmTypeReference expectedItemTypeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataParameterReaderCoreAsync/<ReadAsynchronously>d__9")]
protected virtual Task`1<bool> ReadAsynchronously();
}
public enum Microsoft.OData.ODataParameterReaderState : Enum {
    public int value__;
    public static ODataParameterReaderState Start;
    public static ODataParameterReaderState Value;
    public static ODataParameterReaderState Collection;
    public static ODataParameterReaderState Exception;
    public static ODataParameterReaderState Completed;
    public static ODataParameterReaderState Resource;
    public static ODataParameterReaderState ResourceSet;
}
public abstract class Microsoft.OData.ODataParameterWriter : object {
    public abstract virtual void WriteStart();
    public abstract virtual Task WriteStartAsync();
    public abstract virtual void WriteValue(string parameterName, object parameterValue);
    public abstract virtual Task WriteValueAsync(string parameterName, object parameterValue);
    public abstract virtual ODataCollectionWriter CreateCollectionWriter(string parameterName);
    public abstract virtual Task`1<ODataCollectionWriter> CreateCollectionWriterAsync(string parameterName);
    public abstract virtual ODataWriter CreateResourceWriter(string parameterName);
    public abstract virtual Task`1<ODataWriter> CreateResourceWriterAsync(string parameterName);
    public abstract virtual ODataWriter CreateResourceSetWriter(string parameterName);
    public abstract virtual Task`1<ODataWriter> CreateResourceSetWriterAsync(string parameterName);
    public abstract virtual void WriteEnd();
    public abstract virtual Task WriteEndAsync();
    public abstract virtual void Flush();
    public abstract virtual Task FlushAsync();
}
internal abstract class Microsoft.OData.ODataParameterWriterCore : ODataParameterWriter {
    private ODataOutputContext outputContext;
    private IEdmOperation operation;
    private Stack`1<ParameterWriterState> scopes;
    private HashSet`1<string> parameterNamesWritten;
    private IDuplicatePropertyNameChecker duplicatePropertyNameChecker;
    protected IDuplicatePropertyNameChecker DuplicatePropertyNameChecker { get; }
    private ParameterWriterState State { get; }
    protected ODataParameterWriterCore(ODataOutputContext outputContext, IEdmOperation operation);
    protected IDuplicatePropertyNameChecker get_DuplicatePropertyNameChecker();
    private ParameterWriterState get_State();
    public sealed virtual void Flush();
    public sealed virtual Task FlushAsync();
    public sealed virtual void WriteStart();
    public sealed virtual Task WriteStartAsync();
    public sealed virtual void WriteValue(string parameterName, object parameterValue);
    public sealed virtual Task WriteValueAsync(string parameterName, object parameterValue);
    public sealed virtual ODataCollectionWriter CreateCollectionWriter(string parameterName);
    public sealed virtual Task`1<ODataCollectionWriter> CreateCollectionWriterAsync(string parameterName);
    public sealed virtual ODataWriter CreateResourceWriter(string parameterName);
    public sealed virtual Task`1<ODataWriter> CreateResourceWriterAsync(string parameterName);
    public sealed virtual ODataWriter CreateResourceSetWriter(string parameterName);
    public sealed virtual Task`1<ODataWriter> CreateResourceSetWriterAsync(string parameterName);
    public sealed virtual void WriteEnd();
    public sealed virtual Task WriteEndAsync();
    private sealed virtual override void Microsoft.OData.IODataReaderWriterListener.OnException();
    private sealed virtual override void Microsoft.OData.IODataReaderWriterListener.OnCompleted();
    private sealed virtual override void Microsoft.OData.IODataOutputInStreamErrorListener.OnInStreamError();
    private sealed virtual override Task Microsoft.OData.IODataOutputInStreamErrorListener.OnInStreamErrorAsync();
    protected abstract virtual void VerifyNotDisposed();
    protected abstract virtual void FlushSynchronously();
    protected abstract virtual Task FlushAsynchronously();
    protected abstract virtual void StartPayload();
    protected abstract virtual void WriteValueParameter(string parameterName, object parameterValue, IEdmTypeReference expectedTypeReference);
    protected abstract virtual ODataCollectionWriter CreateFormatCollectionWriter(string parameterName, IEdmTypeReference expectedItemType);
    protected abstract virtual ODataWriter CreateFormatResourceWriter(string parameterName, IEdmTypeReference expectedItemType);
    protected abstract virtual ODataWriter CreateFormatResourceSetWriter(string parameterName, IEdmTypeReference expectedItemType);
    protected abstract virtual void EndPayload();
    protected abstract virtual Task StartPayloadAsync();
    protected abstract virtual Task EndPayloadAsync();
    protected abstract virtual Task WriteValueParameterAsync(string parameterName, object parameterValue, IEdmTypeReference expectedTypeReference);
    protected abstract virtual Task`1<ODataCollectionWriter> CreateFormatCollectionWriterAsync(string parameterName, IEdmTypeReference expectedItemType);
    protected abstract virtual Task`1<ODataWriter> CreateFormatResourceWriterAsync(string parameterName, IEdmTypeReference expectedItemType);
    protected abstract virtual Task`1<ODataWriter> CreateFormatResourceSetWriterAsync(string parameterName, IEdmTypeReference expectedItemType);
    private void VerifyCanWriteStart(bool synchronousCall);
    private void WriteStartImplementation();
    private IEdmTypeReference VerifyCanWriteParameterAndGetTypeReference(bool synchronousCall, string parameterName);
    private IEdmTypeReference VerifyCanWriteValueParameter(bool synchronousCall, string parameterName, object parameterValue);
    private IEdmTypeReference VerifyCanCreateCollectionWriter(bool synchronousCall, string parameterName);
    private IEdmTypeReference VerifyCanCreateResourceWriter(bool synchronousCall, string parameterName);
    private IEdmTypeReference VerifyCanCreateResourceSetWriter(bool synchronousCall, string parameterName);
    private IEdmTypeReference GetParameterTypeReference(string parameterName);
    private void WriteValueImplementation(string parameterName, object parameterValue, IEdmTypeReference expectedTypeReference);
    private ODataCollectionWriter CreateCollectionWriterImplementation(string parameterName, IEdmTypeReference expectedItemType);
    private ODataWriter CreateResourceWriterImplementation(string parameterName, IEdmTypeReference expectedItemType);
    private ODataWriter CreateResourceSetWriterImplementation(string parameterName, IEdmTypeReference expectedItemType);
    private void VerifyCanWriteEnd(bool synchronousCall);
    private void VerifyAllParametersWritten();
    private void WriteEndImplementation();
    private void VerifyNotInErrorOrCompletedState();
    private void VerifyCanFlush(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
    private void InterceptException(Action`1<ODataParameterWriterCore> action);
    private void InterceptException(Action`4<ODataParameterWriterCore, TArg0, TArg1, TArg2> action, TArg0 arg0, TArg1 arg1, TArg2 arg2);
    private T InterceptException(Func`4<ODataParameterWriterCore, TArg0, TArg1, T> function, TArg0 arg0, TArg1 arg1);
    private void EnterErrorScope();
    private void EnterScope(ParameterWriterState newState);
    private void LeaveScope();
    private void ReplaceScope(ParameterWriterState newState);
    private void ValidateTransition(ParameterWriterState newState);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataParameterWriterCore/<InterceptExceptionAsync>d__70")]
private Task InterceptExceptionAsync(Func`2<ODataParameterWriterCore, Task> func);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataParameterWriterCore/<InterceptExceptionAsync>d__71`3")]
private Task InterceptExceptionAsync(Func`5<ODataParameterWriterCore, TArg1, TArg2, TArg3, Task> func, TArg1 arg1, TArg2 arg2, TArg3 arg3);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataParameterWriterCore/<InterceptExceptionAsync>d__72`3")]
private Task`1<T> InterceptExceptionAsync(Func`4<ODataParameterWriterCore, TArg1, TArg2, Task`1<T>> func, TArg1 arg1, TArg2 arg2);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataParameterWriterCore/<InterceptExceptionAsync>d__73`1")]
private Task`1<TResult> InterceptExceptionAsync(Func`2<ODataParameterWriterCore, Task`1<TResult>> action);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataParameterWriterCore/<WriteStartImplementationAsync>d__74")]
private Task WriteStartImplementationAsync();
    private Task WriteValueImplementationAsync(string parameterName, object parameterValue, IEdmTypeReference expectedTypeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataParameterWriterCore/<CreateCollectionWriterImplementationAsync>d__76")]
private Task`1<ODataCollectionWriter> CreateCollectionWriterImplementationAsync(string parameterName, IEdmTypeReference expectedItemType);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataParameterWriterCore/<CreateResourceWriterImplementationAsync>d__77")]
private Task`1<ODataWriter> CreateResourceWriterImplementationAsync(string parameterName, IEdmTypeReference expectedItemType);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataParameterWriterCore/<CreateResourceSetWriterImplementationAsync>d__78")]
private Task`1<ODataWriter> CreateResourceSetWriterImplementationAsync(string parameterName, IEdmTypeReference expectedItemType);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataParameterWriterCore/<WriteEndImplementationAsync>d__79")]
private Task WriteEndImplementationAsync();
    [CompilerGeneratedAttribute]
private bool <VerifyAllParametersWritten>b__57_0(IEdmOperationParameter p);
}
public enum Microsoft.OData.ODataPayloadKind : Enum {
    public int value__;
    public static ODataPayloadKind ResourceSet;
    public static ODataPayloadKind Resource;
    public static ODataPayloadKind Property;
    public static ODataPayloadKind EntityReferenceLink;
    public static ODataPayloadKind EntityReferenceLinks;
    public static ODataPayloadKind Value;
    public static ODataPayloadKind BinaryValue;
    public static ODataPayloadKind Collection;
    public static ODataPayloadKind ServiceDocument;
    public static ODataPayloadKind MetadataDocument;
    public static ODataPayloadKind Error;
    public static ODataPayloadKind Batch;
    public static ODataPayloadKind Parameter;
    public static ODataPayloadKind IndividualProperty;
    public static ODataPayloadKind Delta;
    public static ODataPayloadKind Asynchronous;
    public static ODataPayloadKind Unsupported;
}
internal class Microsoft.OData.ODataPayloadKindDetectionInfo : object {
    private ODataMediaType contentType;
    private Encoding encoding;
    private ODataMessageReaderSettings messageReaderSettings;
    private IEdmModel model;
    public ODataMessageReaderSettings MessageReaderSettings { get; }
    public IEdmModel Model { get; }
    internal ODataMediaType ContentType { get; }
    internal ODataPayloadKindDetectionInfo(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public ODataMessageReaderSettings get_MessageReaderSettings();
    public IEdmModel get_Model();
    internal ODataMediaType get_ContentType();
    [SuppressMessageAttribute("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
public Encoding GetEncoding();
}
public class Microsoft.OData.ODataPayloadKindDetectionResult : object {
    private ODataPayloadKind payloadKind;
    private ODataFormat format;
    public ODataPayloadKind PayloadKind { get; }
    public ODataFormat Format { get; }
    internal ODataPayloadKindDetectionResult(ODataPayloadKind payloadKind, ODataFormat format);
    public ODataPayloadKind get_PayloadKind();
    public ODataFormat get_Format();
}
public class Microsoft.OData.ODataPayloadValueConverter : object {
    private static ODataPayloadValueConverter Default;
    private static ODataPayloadValueConverter();
    public virtual object ConvertToPayloadValue(object value, IEdmTypeReference edmTypeReference);
    public virtual object ConvertFromPayloadValue(object value, IEdmTypeReference edmTypeReference);
    internal static ODataPayloadValueConverter GetPayloadValueConverter(IServiceProvider container);
    private static object ConvertStringValue(string stringValue, Type targetType);
    private static object ConvertInt32Value(int intValue, Type targetType, IEdmPrimitiveTypeReference primitiveTypeReference);
    private static object ConvertDoubleValue(double doubleValue, Type targetType, IEdmPrimitiveTypeReference primitiveTypeReference);
}
public class Microsoft.OData.ODataPreferenceHeader : object {
    private static string ReturnPreferenceTokenName;
    private static string ReturnRepresentationPreferenceTokenValue;
    private static string ReturnMinimalPreferenceTokenValue;
    private static string ODataAnnotationPreferenceToken;
    private static string RespondAsyncPreferenceToken;
    private static string WaitPreferenceTokenName;
    private static string ODataContinueOnErrorPreferenceToken;
    private static string ODataMaxPageSizePreferenceToken;
    private static string ODataTrackChangesPreferenceToken;
    private static string PreferHeaderName;
    private static string PreferenceAppliedHeaderName;
    private static IEnumerable`1<KeyValuePair`2<string, string>> EmptyParameters;
    private static HttpHeaderValueElement ContinueOnErrorPreference;
    private static HttpHeaderValueElement ReturnMinimalPreference;
    private static HttpHeaderValueElement ReturnRepresentationPreference;
    private static HttpHeaderValueElement RespondAsyncPreference;
    private static HttpHeaderValueElement TrackChangesPreference;
    private ODataMessage message;
    private string preferenceHeaderName;
    private HttpHeaderValue preferences;
    public Nullable`1<bool> ReturnContent { get; public set; }
    public string AnnotationFilter { get; public set; }
    public bool RespondAsync { get; public set; }
    public Nullable`1<int> Wait { get; public set; }
    public bool ContinueOnError { get; public set; }
    public Nullable`1<int> MaxPageSize { get; public set; }
    public bool TrackChanges { get; public set; }
    private HttpHeaderValue Preferences { get; }
    internal ODataPreferenceHeader(IODataRequestMessage requestMessage);
    internal ODataPreferenceHeader(IODataResponseMessage responseMessage);
    private static ODataPreferenceHeader();
    public Nullable`1<bool> get_ReturnContent();
    public void set_ReturnContent(Nullable`1<bool> value);
    public string get_AnnotationFilter();
    public void set_AnnotationFilter(string value);
    public bool get_RespondAsync();
    public void set_RespondAsync(bool value);
    public Nullable`1<int> get_Wait();
    public void set_Wait(Nullable`1<int> value);
    public bool get_ContinueOnError();
    public void set_ContinueOnError(bool value);
    public Nullable`1<int> get_MaxPageSize();
    public void set_MaxPageSize(Nullable`1<int> value);
    public bool get_TrackChanges();
    public void set_TrackChanges(bool value);
    private HttpHeaderValue get_Preferences();
    protected void Clear(string preference);
    protected void Set(HttpHeaderValueElement preference);
    protected HttpHeaderValueElement Get(string preferenceName);
    private static string AddQuotes(string text);
    private HttpHeaderValue ParsePreferences();
    private void SetPreferencesToMessageHeader();
}
public class Microsoft.OData.ODataPrimitiveValue : ODataValue {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public object Value { get; private set; }
    public ODataPrimitiveValue(object value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(object value);
    public virtual string ToString();
}
public class Microsoft.OData.ODataProperty : ODataPropertyInfo {
    [CompilerGeneratedAttribute]
private ODataValue <ODataValue>k__BackingField;
    public object Value { get; public set; }
    internal ODataValue ODataValue { get; private set; }
    public object get_Value();
    public void set_Value(object value);
    [CompilerGeneratedAttribute]
internal ODataValue get_ODataValue();
    [CompilerGeneratedAttribute]
private void set_ODataValue(ODataValue value);
}
public class Microsoft.OData.ODataPropertyInfo : ODataItem {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private EdmPrimitiveTypeKind <PrimitiveTypeKind>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataPropertySerializationInfo <SerializationInfo>k__BackingField;
    public string Name { get; public set; }
    public EdmPrimitiveTypeKind PrimitiveTypeKind { get; public set; }
    [SuppressMessageAttribute("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
public ICollection`1<ODataInstanceAnnotation> InstanceAnnotations { get; public set; }
    internal ODataPropertySerializationInfo SerializationInfo { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual EdmPrimitiveTypeKind get_PrimitiveTypeKind();
    [CompilerGeneratedAttribute]
public virtual void set_PrimitiveTypeKind(EdmPrimitiveTypeKind value);
    public ICollection`1<ODataInstanceAnnotation> get_InstanceAnnotations();
    public void set_InstanceAnnotations(ICollection`1<ODataInstanceAnnotation> value);
    [CompilerGeneratedAttribute]
internal ODataPropertySerializationInfo get_SerializationInfo();
    [CompilerGeneratedAttribute]
internal void set_SerializationInfo(ODataPropertySerializationInfo value);
}
public enum Microsoft.OData.ODataPropertyKind : Enum {
    public int value__;
    public static ODataPropertyKind Unspecified;
    public static ODataPropertyKind Key;
    public static ODataPropertyKind ETag;
    public static ODataPropertyKind Open;
}
public class Microsoft.OData.ODataPropertySerializationInfo : object {
    [CompilerGeneratedAttribute]
private ODataPropertyKind <PropertyKind>k__BackingField;
    public ODataPropertyKind PropertyKind { get; public set; }
    [CompilerGeneratedAttribute]
public ODataPropertyKind get_PropertyKind();
    [CompilerGeneratedAttribute]
public void set_PropertyKind(ODataPropertyKind value);
}
internal class Microsoft.OData.ODataRawInputContext : ODataInputContext {
    protected Encoding Encoding;
    private static int BufferSize;
    private ODataPayloadKind readerPayloadKind;
    private Stream stream;
    private TextReader textReader;
    public Stream Stream { get; }
    public ODataRawInputContext(ODataFormat format, ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public Stream get_Stream();
    internal virtual ODataAsynchronousReader CreateAsynchronousReader();
    internal virtual Task`1<ODataAsynchronousReader> CreateAsynchronousReaderAsync();
    internal virtual object ReadValue(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    internal virtual Task`1<object> ReadValueAsync(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    protected virtual void Dispose(bool disposing);
    private ODataAsynchronousReader CreateAsynchronousReaderImplementation();
    private object ReadValueImplementation(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    private Byte[] ReadBinaryValue();
    private object ReadRawValue(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataRawInputContext/<ReadValueImplementationAsync>d__17")]
private Task`1<object> ReadValueImplementationAsync(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataRawInputContext/<ReadBinaryValueAsync>d__18")]
private Task`1<Byte[]> ReadBinaryValueAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataRawInputContext/<ReadRawValueAsync>d__19")]
private Task`1<object> ReadRawValueAsync(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    private void InitializeTextReader();
    private bool ReadAsBinary(IEdmPrimitiveTypeReference expectedPrimitiveTypeReference);
    private static Byte[] ConcatByteArrays(List`1<Byte[]> byteData, long totalBytesRead, int finalBytesRead, ArrayPool`1<byte> arrayPool);
    [CompilerGeneratedAttribute]
private ODataAsynchronousReader <CreateAsynchronousReaderAsync>b__9_0();
}
internal class Microsoft.OData.ODataRawOutputContext : ODataOutputContext {
    protected Encoding encoding;
    protected IODataOutputInStreamErrorListener outputInStreamErrorListener;
    private Stream messageOutputStream;
    private Stream asynchronousOutputStream;
    private Stream outputStream;
    private RawValueWriter rawValueWriter;
    internal Stream OutputStream { get; }
    internal TextWriter TextWriter { get; }
    internal ODataRawOutputContext(ODataFormat format, ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    internal Stream get_OutputStream();
    internal TextWriter get_TextWriter();
    internal void Flush();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataRawOutputContext/<FlushAsync>d__12")]
internal Task FlushAsync();
    internal virtual void WriteInStreamError(ODataError error, bool includeDebugInformation);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataRawOutputContext/<WriteInStreamErrorAsync>d__14")]
internal virtual Task WriteInStreamErrorAsync(ODataError error, bool includeDebugInformation);
    internal virtual ODataAsynchronousWriter CreateODataAsynchronousWriter();
    internal virtual Task`1<ODataAsynchronousWriter> CreateODataAsynchronousWriterAsync();
    internal virtual void WriteValue(object value);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataRawOutputContext/<WriteValueAsync>d__18")]
internal virtual Task WriteValueAsync(object value);
    internal void InitializeRawValueWriter();
    internal void CloseWriter();
    internal void VerifyNotDisposed();
    internal void FlushBuffers();
    internal Task FlushBuffersAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataRawOutputContext/<CloseWriterAsync>d__24")]
internal Task CloseWriterAsync();
    [SuppressMessageAttribute("Microsoft.Usage", "CA2213:DisposableFieldsShouldBeDisposed")]
protected virtual void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataRawOutputContext/<DisposeAsyncCore>d__26")]
protected virtual ValueTask DisposeAsyncCore();
    private void WriteValueImplementation(object value);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataRawOutputContext/<WriteValueImplementationAsync>d__28")]
private Task WriteValueImplementationAsync(object value);
    private ODataAsynchronousWriter CreateODataAsynchronousWriterImplementation();
    [CompilerGeneratedAttribute]
private ODataAsynchronousWriter <CreateODataAsynchronousWriterAsync>b__16_0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private ValueTask <>n__0();
}
[ExtensionAttribute]
internal static class Microsoft.OData.ODataRawValueConverter : object {
    private static string RawValueTrueLiteral;
    private static string RawValueFalseLiteral;
    internal static string ToString(bool b);
    internal static string ToString(byte b);
    internal static string ToString(decimal d);
    internal static string ToString(DateTimeOffset dateTime);
    [ExtensionAttribute]
internal static string ToString(TimeSpan ts);
    [ExtensionAttribute]
internal static string ToString(double d);
    [ExtensionAttribute]
internal static string ToString(short i);
    [ExtensionAttribute]
internal static string ToString(int i);
    [ExtensionAttribute]
internal static string ToString(long i);
    [ExtensionAttribute]
internal static string ToString(sbyte sb);
    [ExtensionAttribute]
internal static string ToString(Byte[] bytes);
    [ExtensionAttribute]
internal static string ToString(float s);
    [ExtensionAttribute]
internal static string ToString(Guid guid);
    internal static string ToString(Date date);
    internal static string ToString(TimeOfDay time);
}
internal class Microsoft.OData.ODataRawValueFormat : ODataFormat {
    public virtual string ToString();
    public virtual IEnumerable`1<ODataPayloadKind> DetectPayloadKind(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
    public virtual ODataInputContext CreateInputContext(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public virtual ODataOutputContext CreateOutputContext(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    public virtual Task`1<IEnumerable`1<ODataPayloadKind>> DetectPayloadKindAsync(ODataMessageInfo messageInfo, ODataMessageReaderSettings settings);
    public virtual Task`1<ODataInputContext> CreateInputContextAsync(ODataMessageInfo messageInfo, ODataMessageReaderSettings messageReaderSettings);
    public virtual Task`1<ODataOutputContext> CreateOutputContextAsync(ODataMessageInfo messageInfo, ODataMessageWriterSettings messageWriterSettings);
    private static IEnumerable`1<ODataPayloadKind> DetectPayloadKindImplementation(ODataMediaType contentType);
}
internal static class Microsoft.OData.ODataRawValueUtils : object {
    private static Char[] XmlWhitespaceChars;
    private static ODataRawValueUtils();
    internal static bool TryConvertPrimitiveToString(object value, String& result);
    internal static object ConvertStringToPrimitive(string text, IEdmPrimitiveTypeReference targetTypeReference);
    private static bool ConvertXmlBooleanValue(string text);
}
public abstract class Microsoft.OData.ODataReader : object {
    public ODataReaderState State { get; }
    public ODataItem Item { get; }
    public abstract virtual ODataReaderState get_State();
    public abstract virtual ODataItem get_Item();
    public abstract virtual bool Read();
    public virtual Stream CreateReadStream();
    public virtual TextReader CreateTextReader();
    public abstract virtual Task`1<bool> ReadAsync();
    public virtual Task`1<Stream> CreateReadStreamAsync();
    public virtual Task`1<TextReader> CreateTextReaderAsync();
    [CompilerGeneratedAttribute]
private Stream <CreateReadStreamAsync>b__8_0();
    [CompilerGeneratedAttribute]
private TextReader <CreateTextReaderAsync>b__9_0();
}
internal abstract class Microsoft.OData.ODataReaderCore : ODataReader {
    private ODataInputContext inputContext;
    private bool readingResourceSet;
    private bool readingDelta;
    private Stack`1<Scope> scopes;
    private IODataReaderWriterListener listener;
    private int currentResourceDepth;
    [CompilerGeneratedAttribute]
private Nullable`1<ODataVersion> <Version>k__BackingField;
    public ODataReaderState State { get; }
    public ODataItem Item { get; }
    internal Nullable`1<ODataVersion> Version { get; }
    protected ODataResourceSet CurrentResourceSet { get; }
    protected ODataDeltaResourceSet CurrentDeltaResourceSet { get; }
    protected ODataDeltaLink CurrentDeltaLink { get; }
    protected ODataDeltaDeletedLink CurrentDeltaDeletedLink { get; }
    protected int CurrentResourceDepth { get; }
    protected ODataNestedResourceInfo CurrentNestedResourceInfo { get; }
    protected ODataEntityReferenceLink CurrentEntityReferenceLink { get; }
    protected IEdmType CurrentResourceType { get; }
    protected IEdmTypeReference CurrentResourceTypeReference { get; protected set; }
    protected IEdmNavigationSource CurrentNavigationSource { get; }
    protected Scope CurrentScope { get; }
    protected Stack`1<Scope> Scopes { get; }
    protected Scope ParentScope { get; }
    protected bool IsTopLevel { get; }
    protected Scope ExpandedLinkContentParentScope { get; }
    protected bool IsExpandedLinkContent { get; }
    protected bool ReadingResourceSet { get; }
    protected bool ReadingDelta { get; }
    protected bool IsReadingNestedPayload { get; }
    protected ResourceSetWithoutExpectedTypeValidator CurrentResourceSetValidator { get; }
    protected DerivedTypeValidator CurrentDerivedTypeValidator { get; }
    protected ODataReaderCore(ODataInputContext inputContext, bool readingResourceSet, bool readingDelta, IODataReaderWriterListener listener);
    public sealed virtual ODataReaderState get_State();
    public sealed virtual ODataItem get_Item();
    [CompilerGeneratedAttribute]
internal Nullable`1<ODataVersion> get_Version();
    protected ODataResourceSet get_CurrentResourceSet();
    protected ODataDeltaResourceSet get_CurrentDeltaResourceSet();
    protected ODataDeltaLink get_CurrentDeltaLink();
    protected ODataDeltaDeletedLink get_CurrentDeltaDeletedLink();
    protected int get_CurrentResourceDepth();
    protected ODataNestedResourceInfo get_CurrentNestedResourceInfo();
    protected ODataEntityReferenceLink get_CurrentEntityReferenceLink();
    protected IEdmType get_CurrentResourceType();
    protected IEdmTypeReference get_CurrentResourceTypeReference();
    protected void set_CurrentResourceTypeReference(IEdmTypeReference value);
    protected IEdmNavigationSource get_CurrentNavigationSource();
    protected Scope get_CurrentScope();
    protected Stack`1<Scope> get_Scopes();
    protected Scope get_ParentScope();
    protected bool get_IsTopLevel();
    protected Scope get_ExpandedLinkContentParentScope();
    protected bool get_IsExpandedLinkContent();
    protected bool get_ReadingResourceSet();
    protected bool get_ReadingDelta();
    protected bool get_IsReadingNestedPayload();
    protected ResourceSetWithoutExpectedTypeValidator get_CurrentResourceSetValidator();
    protected DerivedTypeValidator get_CurrentDerivedTypeValidator();
    public sealed virtual bool Read();
    public sealed virtual Task`1<bool> ReadAsync();
    public sealed virtual Stream CreateReadStream();
    public sealed virtual TextReader CreateTextReader();
    private sealed virtual override void Microsoft.OData.IODataStreamListener.StreamRequested();
    private sealed virtual override Task Microsoft.OData.IODataStreamListener.StreamRequestedAsync();
    private sealed virtual override void Microsoft.OData.IODataStreamListener.StreamDisposed();
    private sealed virtual override Task Microsoft.OData.IODataStreamListener.StreamDisposedAsync();
    internal Scope SeekScope(int maxDepth);
    protected abstract virtual bool ReadAtStartImplementation();
    protected abstract virtual bool ReadAtResourceSetStartImplementation();
    protected abstract virtual bool ReadAtResourceSetEndImplementation();
    protected abstract virtual bool ReadAtResourceStartImplementation();
    protected abstract virtual bool ReadAtResourceEndImplementation();
    protected virtual bool ReadAtPrimitiveImplementation();
    protected virtual bool ReadAtNestedPropertyInfoImplementation();
    protected virtual bool ReadAtStreamImplementation();
    protected virtual Stream CreateReadStreamImplementation();
    protected virtual TextReader CreateTextReaderImplementation();
    protected abstract virtual bool ReadAtNestedResourceInfoStartImplementation();
    protected abstract virtual bool ReadAtNestedResourceInfoEndImplementation();
    protected abstract virtual bool ReadAtEntityReferenceLink();
    protected virtual bool ReadAtDeltaResourceSetStartImplementation();
    protected virtual bool ReadAtDeltaResourceSetEndImplementation();
    protected virtual bool ReadAtDeletedResourceStartImplementation();
    protected virtual bool ReadAtDeletedResourceEndImplementation();
    protected virtual bool ReadAtDeltaLinkImplementation();
    protected virtual bool ReadAtDeltaDeletedLinkImplementation();
    protected void EnterScope(Scope scope);
    protected void ReplaceScope(Scope scope);
    [SuppressMessageAttribute("Microsoft.Usage", "CA1801:ReviewUnusedParameters")]
[SuppressMessageAttribute("Microsoft.Performance", "CA1804:RemoveUnusedLocals")]
protected void PopScope(ODataReaderState state);
    protected void EndEntry(Scope scope);
    protected void ApplyResourceTypeNameFromPayload(string resourceTypeNameFromPayload);
    protected bool ReadSynchronously();
    protected virtual Task`1<bool> ReadAsynchronously();
    protected void IncreaseResourceDepth();
    protected void DecreaseResourceDepth();
    private bool ReadImplementation();
    private T InterceptException(Func`1<T> action);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataReaderCore/<InterceptExceptionAsync>d__97`1")]
private Task`1<T> InterceptExceptionAsync(Func`2<ODataReaderCore, Task`1<T>> action);
    private void VerifyCanRead(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
}
internal abstract class Microsoft.OData.ODataReaderCoreAsync : ODataReaderCore {
    protected ODataReaderCoreAsync(ODataInputContext inputContext, bool readingResourceSet, bool readingDelta, IODataReaderWriterListener listener);
    protected abstract virtual Task`1<bool> ReadAtStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtResourceSetStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtResourceSetEndImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtResourceStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtResourceEndImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtDeletedResourceEndImplementationAsync();
    protected virtual Task`1<bool> ReadAtPrimitiveImplementationAsync();
    protected virtual Task`1<bool> ReadAtNestedPropertyInfoImplementationAsync();
    protected virtual Task`1<bool> ReadAtStreamImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtNestedResourceInfoStartImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtNestedResourceInfoEndImplementationAsync();
    protected abstract virtual Task`1<bool> ReadAtEntityReferenceLinkAsync();
    protected virtual Task`1<bool> ReadAtDeltaResourceSetStartImplementationAsync();
    protected virtual Task`1<bool> ReadAtDeltaResourceSetEndImplementationAsync();
    protected virtual Task`1<bool> ReadAtDeletedResourceStartImplementationAsync();
    protected virtual Task`1<bool> ReadDeletedResourceEndImplementationAsync();
    protected virtual Task`1<bool> ReadAtDeltaLinkImplementationAsync();
    protected virtual Task`1<bool> ReadAtDeltaDeletedLinkImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataReaderCoreAsync/<ReadAsynchronously>d__19")]
protected virtual Task`1<bool> ReadAsynchronously();
    protected virtual Task`1<Stream> CreateReadStreamImplementationAsync();
    protected virtual Task`1<TextReader> CreateTextReaderImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataReaderCoreAsync/<CreateReadStreamAsync>d__22")]
public virtual Task`1<Stream> CreateReadStreamAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataReaderCoreAsync/<CreateTextReaderAsync>d__23")]
public virtual Task`1<TextReader> CreateTextReaderAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataReaderCoreAsync/<InterceptExceptionAsync>d__24`1")]
private Task`1<TResult> InterceptExceptionAsync(Func`2<ODataReaderCoreAsync, Task`1<TResult>> action);
}
public enum Microsoft.OData.ODataReaderState : Enum {
    public int value__;
    public static ODataReaderState Start;
    public static ODataReaderState ResourceSetStart;
    public static ODataReaderState ResourceSetEnd;
    public static ODataReaderState ResourceStart;
    public static ODataReaderState ResourceEnd;
    public static ODataReaderState NestedResourceInfoStart;
    public static ODataReaderState NestedResourceInfoEnd;
    public static ODataReaderState EntityReferenceLink;
    public static ODataReaderState Exception;
    public static ODataReaderState Completed;
    public static ODataReaderState Primitive;
    public static ODataReaderState DeltaResourceSetStart;
    public static ODataReaderState DeltaResourceSetEnd;
    public static ODataReaderState DeletedResourceStart;
    public static ODataReaderState DeletedResourceEnd;
    public static ODataReaderState DeltaLink;
    public static ODataReaderState DeltaDeletedLink;
    public static ODataReaderState NestedProperty;
    public static ODataReaderState Stream;
}
internal abstract class Microsoft.OData.ODataReadStream : ODataStream {
    protected ODataBatchReaderStream batchReaderStream;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    private ODataReadStream(ODataBatchReaderStream batchReaderStream, IODataStreamListener listener, bool synchronous);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    internal static ODataReadStream Create(ODataBatchReaderStream batchReaderStream, IODataStreamListener listener, int length, bool synchronous);
    internal static ODataReadStream Create(ODataBatchReaderStream batchReaderStream, IODataStreamListener listener, bool synchronous);
}
internal class Microsoft.OData.ODataRequestMessage : ODataMessage {
    private IODataRequestMessage requestMessage;
    public Uri Url { get; public set; }
    public string Method { get; public set; }
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    internal ODataRequestMessage(IODataRequestMessage requestMessage, bool writing, bool enableMessageStreamDisposal, long maxMessageSize);
    public sealed virtual Uri get_Url();
    public sealed virtual void set_Url(Uri value);
    public sealed virtual string get_Method();
    public sealed virtual void set_Method(string value);
    public virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public virtual string GetHeader(string headerName);
    public virtual void SetHeader(string headerName, string headerValue);
    public virtual Stream GetStream();
    public virtual Task`1<Stream> GetStreamAsync();
    internal virtual TInterface QueryInterface();
}
public class Microsoft.OData.ODataResource : ODataResourceBase {
    unknown ODataResourceSerializationInfo SerializationInfo {internal set; }
    internal virtual void set_SerializationInfo(ODataResourceSerializationInfo value);
}
[DebuggerDisplayAttribute("Id: {Id} TypeName: {TypeName}")]
public abstract class Microsoft.OData.ODataResourceBase : ODataItem {
    private ODataResourceMetadataBuilder metadataBuilder;
    private string etag;
    private bool hasNonComputedETag;
    private Uri id;
    private bool hasNonComputedId;
    private Uri editLink;
    private bool hasNonComputedEditLink;
    private Uri readLink;
    private bool hasNonComputedReadLink;
    private ODataStreamReferenceValue mediaResource;
    private IEnumerable`1<ODataPropertyInfo> properties;
    private List`1<ODataAction> actions;
    private List`1<ODataFunction> functions;
    private ODataResourceSerializationInfo serializationInfo;
    [CompilerGeneratedAttribute]
private bool <IsTransient>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SkipPropertyVerification>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    public string ETag { get; public set; }
    public Uri Id { get; public set; }
    public Uri EditLink { get; public set; }
    public bool IsTransient { get; public set; }
    public Uri ReadLink { get; public set; }
    public ODataStreamReferenceValue MediaResource { get; public set; }
    public IEnumerable`1<ODataAction> Actions { get; }
    public IEnumerable`1<ODataFunction> Functions { get; }
    public bool SkipPropertyVerification { get; public set; }
    public IEnumerable`1<ODataPropertyInfo> Properties { get; public set; }
    public string TypeName { get; public set; }
    [SuppressMessageAttribute("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
public ICollection`1<ODataInstanceAnnotation> InstanceAnnotations { get; public set; }
    internal ODataResourceMetadataBuilder MetadataBuilder { get; internal set; }
    internal Uri NonComputedId { get; }
    internal bool HasNonComputedId { get; }
    internal Uri NonComputedEditLink { get; }
    internal bool HasNonComputedEditLink { get; }
    internal Uri NonComputedReadLink { get; }
    internal bool HasNonComputedReadLink { get; }
    internal string NonComputedETag { get; }
    internal bool HasNonComputedETag { get; }
    internal ODataStreamReferenceValue NonComputedMediaResource { get; }
    internal IEnumerable`1<ODataPropertyInfo> NonComputedProperties { get; }
    internal IEnumerable`1<ODataAction> NonComputedActions { get; }
    internal IEnumerable`1<ODataFunction> NonComputedFunctions { get; }
    internal ODataResourceSerializationInfo SerializationInfo { get; internal set; }
    public string get_ETag();
    public void set_ETag(string value);
    public Uri get_Id();
    public void set_Id(Uri value);
    public Uri get_EditLink();
    public void set_EditLink(Uri value);
    [CompilerGeneratedAttribute]
public bool get_IsTransient();
    [CompilerGeneratedAttribute]
public void set_IsTransient(bool value);
    public Uri get_ReadLink();
    public void set_ReadLink(Uri value);
    public ODataStreamReferenceValue get_MediaResource();
    public void set_MediaResource(ODataStreamReferenceValue value);
    public IEnumerable`1<ODataAction> get_Actions();
    public IEnumerable`1<ODataFunction> get_Functions();
    [CompilerGeneratedAttribute]
public bool get_SkipPropertyVerification();
    [CompilerGeneratedAttribute]
public void set_SkipPropertyVerification(bool value);
    public IEnumerable`1<ODataPropertyInfo> get_Properties();
    public void set_Properties(IEnumerable`1<ODataPropertyInfo> value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
    public ICollection`1<ODataInstanceAnnotation> get_InstanceAnnotations();
    public void set_InstanceAnnotations(ICollection`1<ODataInstanceAnnotation> value);
    internal ODataResourceMetadataBuilder get_MetadataBuilder();
    internal void set_MetadataBuilder(ODataResourceMetadataBuilder value);
    internal Uri get_NonComputedId();
    internal bool get_HasNonComputedId();
    internal Uri get_NonComputedEditLink();
    internal bool get_HasNonComputedEditLink();
    internal Uri get_NonComputedReadLink();
    internal bool get_HasNonComputedReadLink();
    internal string get_NonComputedETag();
    internal bool get_HasNonComputedETag();
    internal ODataStreamReferenceValue get_NonComputedMediaResource();
    internal IEnumerable`1<ODataPropertyInfo> get_NonComputedProperties();
    internal IEnumerable`1<ODataAction> get_NonComputedActions();
    internal IEnumerable`1<ODataFunction> get_NonComputedFunctions();
    internal virtual ODataResourceSerializationInfo get_SerializationInfo();
    internal virtual void set_SerializationInfo(ODataResourceSerializationInfo value);
    public void AddAction(ODataAction action);
    public void AddFunction(ODataFunction function);
    private static void VerifyProperties(IEnumerable`1<ODataPropertyInfo> properties);
}
public class Microsoft.OData.ODataResourceSerializationInfo : object {
    private string navigationSourceName;
    private string navigationSourceEntityTypeName;
    private string expectedTypeName;
    [CompilerGeneratedAttribute]
private EdmNavigationSourceKind <NavigationSourceKind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFromCollection>k__BackingField;
    public string NavigationSourceName { get; public set; }
    public string NavigationSourceEntityTypeName { get; public set; }
    public EdmNavigationSourceKind NavigationSourceKind { get; public set; }
    public bool IsFromCollection { get; public set; }
    public string ExpectedTypeName { get; public set; }
    public string get_NavigationSourceName();
    public void set_NavigationSourceName(string value);
    public string get_NavigationSourceEntityTypeName();
    public void set_NavigationSourceEntityTypeName(string value);
    [CompilerGeneratedAttribute]
public EdmNavigationSourceKind get_NavigationSourceKind();
    [CompilerGeneratedAttribute]
public void set_NavigationSourceKind(EdmNavigationSourceKind value);
    [CompilerGeneratedAttribute]
public bool get_IsFromCollection();
    [CompilerGeneratedAttribute]
public void set_IsFromCollection(bool value);
    public string get_ExpectedTypeName();
    public void set_ExpectedTypeName(string value);
    internal static ODataResourceSerializationInfo Validate(ODataResourceSerializationInfo serializationInfo);
}
public class Microsoft.OData.ODataResourceSet : ODataResourceSetBase {
    private List`1<ODataAction> actions;
    private List`1<ODataFunction> functions;
    public IEnumerable`1<ODataAction> Actions { get; }
    public IEnumerable`1<ODataFunction> Functions { get; }
    public IEnumerable`1<ODataAction> get_Actions();
    public IEnumerable`1<ODataFunction> get_Functions();
    public void AddAction(ODataAction action);
    public void AddFunction(ODataFunction function);
}
public abstract class Microsoft.OData.ODataResourceSetBase : ODataItem {
    private Uri nextPageLink;
    private Uri deltaLink;
    private ODataResourceSerializationInfo serializationInfo;
    private string typeName;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Id>k__BackingField;
    public string TypeName { get; public set; }
    public Nullable`1<long> Count { get; public set; }
    public Uri Id { get; public set; }
    public Uri NextPageLink { get; public set; }
    public Uri DeltaLink { get; public set; }
    [SuppressMessageAttribute("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
public ICollection`1<ODataInstanceAnnotation> InstanceAnnotations { get; public set; }
    internal ODataResourceSerializationInfo SerializationInfo { get; internal set; }
    public string get_TypeName();
    public void set_TypeName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Uri get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Uri value);
    public Uri get_NextPageLink();
    public void set_NextPageLink(Uri value);
    public Uri get_DeltaLink();
    public void set_DeltaLink(Uri value);
    public ICollection`1<ODataInstanceAnnotation> get_InstanceAnnotations();
    public void set_InstanceAnnotations(ICollection`1<ODataInstanceAnnotation> value);
    internal ODataResourceSerializationInfo get_SerializationInfo();
    internal void set_SerializationInfo(ODataResourceSerializationInfo value);
}
internal class Microsoft.OData.ODataResourceTypeContext : object {
    protected IEdmStructuredType expectedResourceType;
    protected string expectedResourceTypeName;
    private bool throwIfMissingTypeInfo;
    public string NavigationSourceName { get; }
    public string NavigationSourceEntityTypeName { get; }
    public string NavigationSourceFullTypeName { get; }
    public EdmNavigationSourceKind NavigationSourceKind { get; }
    public string ExpectedResourceTypeName { get; }
    public IEdmStructuredType ExpectedResourceType { get; }
    public bool IsFromCollection { get; }
    public bool IsMediaLinkEntry { get; }
    private ODataResourceTypeContext(bool throwIfMissingTypeInfo);
    private ODataResourceTypeContext(IEdmStructuredType expectedResourceType, bool throwIfMissingTypeInfo);
    public virtual string get_NavigationSourceName();
    public virtual string get_NavigationSourceEntityTypeName();
    public virtual string get_NavigationSourceFullTypeName();
    public virtual EdmNavigationSourceKind get_NavigationSourceKind();
    public virtual string get_ExpectedResourceTypeName();
    public virtual IEdmStructuredType get_ExpectedResourceType();
    public virtual bool get_IsFromCollection();
    public virtual bool get_IsMediaLinkEntry();
    internal static ODataResourceTypeContext Create(ODataResourceSerializationInfo serializationInfo, IEdmNavigationSource navigationSource, IEdmEntityType navigationSourceEntityType, IEdmStructuredType expectedResourceType, bool throwIfMissingTypeInfo);
    private T ValidateAndReturn(T value);
}
public class Microsoft.OData.ODataResourceValue : ODataValue {
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataProperty> <Properties>k__BackingField;
    public string TypeName { get; public set; }
    public IEnumerable`1<ODataProperty> Properties { get; public set; }
    [SuppressMessageAttribute("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
public ICollection`1<ODataInstanceAnnotation> InstanceAnnotations { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ODataProperty> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IEnumerable`1<ODataProperty> value);
    public ICollection`1<ODataInstanceAnnotation> get_InstanceAnnotations();
    public void set_InstanceAnnotations(ICollection`1<ODataInstanceAnnotation> value);
}
internal class Microsoft.OData.ODataResponseMessage : ODataMessage {
    private IODataResponseMessage responseMessage;
    public int StatusCode { get; public set; }
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; }
    internal ODataResponseMessage(IODataResponseMessage responseMessage, bool writing, bool enableMessageStreamDisposal, long maxMessageSize);
    public sealed virtual int get_StatusCode();
    public sealed virtual void set_StatusCode(int value);
    public virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public virtual string GetHeader(string headerName);
    public virtual void SetHeader(string headerName, string headerValue);
    public virtual Stream GetStream();
    public virtual Task`1<Stream> GetStreamAsync();
    internal virtual TInterface QueryInterface();
}
internal abstract class Microsoft.OData.ODataSerializer : object {
    protected IWriterValidator WriterValidator;
    private ODataOutputContext outputContext;
    internal ODataMessageWriterSettings MessageWriterSettings { get; }
    internal IODataPayloadUriConverter PayloadUriConverter { get; }
    internal bool WritingResponse { get; }
    internal IEdmModel Model { get; }
    protected ODataSerializer(ODataOutputContext outputContext);
    internal ODataMessageWriterSettings get_MessageWriterSettings();
    internal IODataPayloadUriConverter get_PayloadUriConverter();
    internal bool get_WritingResponse();
    internal IEdmModel get_Model();
    internal IDuplicatePropertyNameChecker GetDuplicatePropertyNameChecker();
    internal void ReturnDuplicatePropertyNameChecker(IDuplicatePropertyNameChecker duplicatePropertyNameChecker);
}
public class Microsoft.OData.ODataServiceDocument : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataEntitySetInfo> <EntitySets>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataSingletonInfo> <Singletons>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataFunctionImportInfo> <FunctionImports>k__BackingField;
    public IEnumerable`1<ODataEntitySetInfo> EntitySets { get; public set; }
    public IEnumerable`1<ODataSingletonInfo> Singletons { get; public set; }
    public IEnumerable`1<ODataFunctionImportInfo> FunctionImports { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<ODataEntitySetInfo> get_EntitySets();
    [CompilerGeneratedAttribute]
public void set_EntitySets(IEnumerable`1<ODataEntitySetInfo> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ODataSingletonInfo> get_Singletons();
    [CompilerGeneratedAttribute]
public void set_Singletons(IEnumerable`1<ODataSingletonInfo> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ODataFunctionImportInfo> get_FunctionImports();
    [CompilerGeneratedAttribute]
public void set_FunctionImports(IEnumerable`1<ODataFunctionImportInfo> value);
}
public abstract class Microsoft.OData.ODataServiceDocumentElement : ODataAnnotatable {
    [CompilerGeneratedAttribute]
private Uri <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    public Uri Url { get; public set; }
    public string Name { get; public set; }
    public string Title { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(Uri value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
}
public class Microsoft.OData.ODataSingletonInfo : ODataServiceDocumentElement {
}
internal abstract class Microsoft.OData.ODataStream : Stream {
    private IODataStreamListener listener;
    private bool disposed;
    private bool synchronous;
    internal ODataStream(IODataStreamListener listener, bool synchronous);
    public virtual long Seek(long offset, SeekOrigin origin);
    protected virtual void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataStream/<DisposeAsync>d__6")]
public virtual ValueTask DisposeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataStream/<DisposeAsyncCore>d__7")]
protected virtual ValueTask DisposeAsyncCore();
    protected void ValidateNotDisposed();
}
public class Microsoft.OData.ODataStreamItem : ODataItem {
    private EdmPrimitiveTypeKind typeKind;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    public EdmPrimitiveTypeKind PrimitiveTypeKind { get; private set; }
    public string ContentType { get; private set; }
    public ODataStreamItem(EdmPrimitiveTypeKind primitiveTypeKind);
    public ODataStreamItem(EdmPrimitiveTypeKind primitiveTypeKind, string contentType);
    public EdmPrimitiveTypeKind get_PrimitiveTypeKind();
    private void set_PrimitiveTypeKind(EdmPrimitiveTypeKind value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
private void set_ContentType(string value);
}
public class Microsoft.OData.ODataStreamPropertyInfo : ODataPropertyInfo {
    private string edmPropertyName;
    private ODataResourceMetadataBuilder metadataBuilder;
    private Uri editLink;
    private Uri computedEditLink;
    private Uri readLink;
    private Uri computedReadLink;
    private EdmPrimitiveTypeKind primitiveTypeKind;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasNonComputedEditLink>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasNonComputedReadLink>k__BackingField;
    public Uri EditLink { get; public set; }
    public Uri ReadLink { get; public set; }
    public string ContentType { get; public set; }
    public string ETag { get; public set; }
    public EdmPrimitiveTypeKind PrimitiveTypeKind { get; public set; }
    internal bool HasNonComputedEditLink { get; private set; }
    internal bool HasNonComputedReadLink { get; private set; }
    public sealed virtual Uri get_EditLink();
    public sealed virtual void set_EditLink(Uri value);
    public sealed virtual Uri get_ReadLink();
    public sealed virtual void set_ReadLink(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ETag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ETag(string value);
    public virtual EdmPrimitiveTypeKind get_PrimitiveTypeKind();
    public virtual void set_PrimitiveTypeKind(EdmPrimitiveTypeKind value);
    [CompilerGeneratedAttribute]
internal bool get_HasNonComputedEditLink();
    [CompilerGeneratedAttribute]
private void set_HasNonComputedEditLink(bool value);
    [CompilerGeneratedAttribute]
internal bool get_HasNonComputedReadLink();
    [CompilerGeneratedAttribute]
private void set_HasNonComputedReadLink(bool value);
    internal void SetMetadataBuilder(ODataResourceMetadataBuilder builder, string propertyName);
    internal ODataResourceMetadataBuilder GetMetadataBuilder();
}
public class Microsoft.OData.ODataStreamReferenceValue : ODataValue {
    private string edmPropertyName;
    private ODataResourceMetadataBuilder metadataBuilder;
    private Uri editLink;
    private Uri computedEditLink;
    private Uri readLink;
    private Uri computedReadLink;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasNonComputedEditLink>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasNonComputedReadLink>k__BackingField;
    public Uri EditLink { get; public set; }
    public Uri ReadLink { get; public set; }
    public string ContentType { get; public set; }
    public string ETag { get; public set; }
    internal bool HasNonComputedEditLink { get; private set; }
    internal bool HasNonComputedReadLink { get; private set; }
    public sealed virtual Uri get_EditLink();
    public sealed virtual void set_EditLink(Uri value);
    public sealed virtual Uri get_ReadLink();
    public sealed virtual void set_ReadLink(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ETag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ETag(string value);
    [CompilerGeneratedAttribute]
internal bool get_HasNonComputedEditLink();
    [CompilerGeneratedAttribute]
private void set_HasNonComputedEditLink(bool value);
    [CompilerGeneratedAttribute]
internal bool get_HasNonComputedReadLink();
    [CompilerGeneratedAttribute]
private void set_HasNonComputedReadLink(bool value);
    internal void SetMetadataBuilder(ODataResourceMetadataBuilder builder, string propertyName);
    internal ODataResourceMetadataBuilder GetMetadataBuilder();
}
internal class Microsoft.OData.ODataTextStreamReader : TextReader {
    private StreamReaderDelegate reader;
    private AsyncStreamReaderDelegate asyncReader;
    internal ODataTextStreamReader(StreamReaderDelegate reader);
    internal ODataTextStreamReader(AsyncStreamReaderDelegate asyncReader);
    public virtual int Read(Char[] buffer, int offset, int count);
    public virtual Task`1<int> ReadAsync(Char[] buffer, int index, int count);
    [DebuggerStepThroughAttribute]
[ConditionalAttribute("DEBUG")]
private void AssertSynchronous();
    [DebuggerStepThroughAttribute]
[ConditionalAttribute("DEBUG")]
private void AssertAsynchronous();
}
public class Microsoft.OData.ODataTypeAnnotation : object {
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmType <Type>k__BackingField;
    public string TypeName { get; private set; }
    internal IEdmType Type { get; private set; }
    public ODataTypeAnnotation(string typeName);
    internal ODataTypeAnnotation(string typeName, IEdmType type);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
private void set_TypeName(string value);
    [CompilerGeneratedAttribute]
internal IEdmType get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(IEdmType value);
}
public class Microsoft.OData.ODataUntypedValue : ODataValue {
    [CompilerGeneratedAttribute]
private string <RawValue>k__BackingField;
    public string RawValue { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RawValue();
    [CompilerGeneratedAttribute]
public void set_RawValue(string value);
}
public class Microsoft.OData.ODataUri : object {
    private static Uri MetadataSegment;
    private Uri serviceRoot;
    private ParameterAliasValueAccessor parameterAliasValueAccessor;
    [CompilerGeneratedAttribute]
private Uri <RequestUri>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataPath <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<QueryNode> <CustomQueryOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectExpandClause <SelectAndExpand>k__BackingField;
    [CompilerGeneratedAttribute]
private FilterClause <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private OrderByClause <OrderBy>k__BackingField;
    [CompilerGeneratedAttribute]
private SearchClause <Search>k__BackingField;
    [CompilerGeneratedAttribute]
private ApplyClause <Apply>k__BackingField;
    [CompilerGeneratedAttribute]
private ComputeClause <Compute>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Skip>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Top>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <QueryCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SkipToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeltaToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <MetadataDocumentUri>k__BackingField;
    public Uri RequestUri { get; public set; }
    public Uri ServiceRoot { get; public set; }
    public IDictionary`2<string, SingleValueNode> ParameterAliasNodes { get; }
    public ODataPath Path { get; public set; }
    public IEnumerable`1<QueryNode> CustomQueryOptions { get; public set; }
    public SelectExpandClause SelectAndExpand { get; public set; }
    public FilterClause Filter { get; public set; }
    public OrderByClause OrderBy { get; public set; }
    public SearchClause Search { get; public set; }
    public ApplyClause Apply { get; public set; }
    public ComputeClause Compute { get; public set; }
    public Nullable`1<long> Skip { get; public set; }
    public Nullable`1<long> Top { get; public set; }
    public Nullable`1<long> Index { get; public set; }
    public Nullable`1<bool> QueryCount { get; public set; }
    public string SkipToken { get; public set; }
    public string DeltaToken { get; public set; }
    internal Uri MetadataDocumentUri { get; private set; }
    internal ParameterAliasValueAccessor ParameterAliasValueAccessor { get; internal set; }
    internal ODataUri(ParameterAliasValueAccessor parameterAliasValueAccessor, ODataPath path, IEnumerable`1<QueryNode> customQueryOptions, SelectExpandClause selectAndExpand, FilterClause filter, OrderByClause orderby, SearchClause search, ApplyClause apply, Nullable`1<long> skip, Nullable`1<long> top, Nullable`1<long> index, Nullable`1<bool> queryCount, ComputeClause compute);
    private static ODataUri();
    [CompilerGeneratedAttribute]
public Uri get_RequestUri();
    [CompilerGeneratedAttribute]
public void set_RequestUri(Uri value);
    public Uri get_ServiceRoot();
    public void set_ServiceRoot(Uri value);
    public IDictionary`2<string, SingleValueNode> get_ParameterAliasNodes();
    [CompilerGeneratedAttribute]
public ODataPath get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(ODataPath value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<QueryNode> get_CustomQueryOptions();
    [CompilerGeneratedAttribute]
public void set_CustomQueryOptions(IEnumerable`1<QueryNode> value);
    [CompilerGeneratedAttribute]
public SelectExpandClause get_SelectAndExpand();
    [CompilerGeneratedAttribute]
public void set_SelectAndExpand(SelectExpandClause value);
    [CompilerGeneratedAttribute]
public FilterClause get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(FilterClause value);
    [CompilerGeneratedAttribute]
public OrderByClause get_OrderBy();
    [CompilerGeneratedAttribute]
public void set_OrderBy(OrderByClause value);
    [CompilerGeneratedAttribute]
public SearchClause get_Search();
    [CompilerGeneratedAttribute]
public void set_Search(SearchClause value);
    [CompilerGeneratedAttribute]
public ApplyClause get_Apply();
    [CompilerGeneratedAttribute]
public void set_Apply(ApplyClause value);
    [CompilerGeneratedAttribute]
public ComputeClause get_Compute();
    [CompilerGeneratedAttribute]
public void set_Compute(ComputeClause value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Skip();
    [CompilerGeneratedAttribute]
public void set_Skip(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Top();
    [CompilerGeneratedAttribute]
public void set_Top(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_QueryCount();
    [CompilerGeneratedAttribute]
public void set_QueryCount(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_SkipToken();
    [CompilerGeneratedAttribute]
public void set_SkipToken(string value);
    [CompilerGeneratedAttribute]
public string get_DeltaToken();
    [CompilerGeneratedAttribute]
public void set_DeltaToken(string value);
    [CompilerGeneratedAttribute]
internal Uri get_MetadataDocumentUri();
    [CompilerGeneratedAttribute]
private void set_MetadataDocumentUri(Uri value);
    internal ParameterAliasValueAccessor get_ParameterAliasValueAccessor();
    internal void set_ParameterAliasValueAccessor(ParameterAliasValueAccessor value);
    public ODataUri Clone();
}
internal static class Microsoft.OData.ODataUriConversionUtils : object {
    internal static string ConvertToUriPrimitiveLiteral(object value, ODataVersion version);
    internal static string ConvertToUriEnumLiteral(ODataEnumValue value, ODataVersion version);
    internal static object ConvertFromResourceValue(string value, IEdmModel model, IEdmTypeReference typeReference);
    internal static object ConvertFromCollectionValue(string value, IEdmModel model, IEdmTypeReference typeReference);
    internal static object VerifyAndCoerceUriPrimitiveLiteral(object primitiveValue, string literalValue, IEdmModel model, IEdmTypeReference expectedTypeReference);
    internal static string ConvertToUriEntityLiteral(ODataResourceBase resource, IEdmModel model);
    internal static string ConvertToUriEntitiesLiteral(IEnumerable`1<ODataResourceBase> entries, IEdmModel model);
    internal static string ConvertToUriEntityReferenceLiteral(ODataEntityReferenceLink link, IEdmModel model);
    internal static string ConvertToUriEntityReferencesLiteral(ODataEntityReferenceLinks links, IEdmModel model);
    internal static string ConvertToResourceLiteral(ODataResourceValue resourceValue, IEdmModel model, ODataVersion version);
    internal static string ConvertToUriCollectionLiteral(ODataCollectionValue collectionValue, IEdmModel model, ODataVersion version);
    internal static string ConvertToUriCollectionLiteral(ODataCollectionValue collectionValue, IEdmModel model, ODataVersion version, bool isIeee754Compatible);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
internal static object CoerceNumericType(object primitiveValue, IEdmPrimitiveType targetEdmType);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
internal static object CoerceTemporalType(object primitiveValue, IEdmPrimitiveType targetEdmType);
    private static void WriteStartResource(ODataWriter writer, ODataResourceBase resource);
    private static void WriteJsonLiteral(IEdmModel model, ODataMessageWriterSettings messageWriterSettings, Stream stream, Action`2<ODataJsonValueSerializer, IDuplicatePropertyNameChecker> writeValue, bool isResourceValue);
    private static string ConvertToJsonLiteral(IEdmModel model, Action`1<ODataOutputContext> writeAction);
    private static object ConvertFromResourceOrCollectionValue(string value, IEdmModel model, IEdmTypeReference typeReference);
    private static object ConvertToTargetType(IEdmPrimitiveType targetEdmType, Func`1<object> converter);
}
[ExtensionAttribute]
public static class Microsoft.OData.ODataUriExtensions : object {
    [ExtensionAttribute]
public static Uri BuildUri(ODataUri odataUri, ODataUrlKeyDelimiter urlKeyDelimiter);
    private static string WriteQueryPrefixOrSeparator(bool writeQueryPrefix, string queryOptions);
}
internal class Microsoft.OData.ODataUriSlim : ValueType {
    private ODataUri odataUri;
    [CompilerGeneratedAttribute]
private ODataPath <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectExpandClause <SelectAndExpand>k__BackingField;
    public ODataPath Path { get; public set; }
    public SelectExpandClause SelectAndExpand { get; public set; }
    public Uri RequestUri { get; }
    public Uri ServiceRoot { get; }
    public IDictionary`2<string, SingleValueNode> ParameterAliasNodes { get; }
    public IEnumerable`1<QueryNode> CustomQueryOptions { get; }
    public FilterClause Filter { get; }
    public OrderByClause OrderBy { get; }
    public SearchClause Search { get; }
    public ApplyClause Apply { get; }
    public ComputeClause Compute { get; }
    public Nullable`1<long> Skip { get; }
    public Nullable`1<long> Top { get; }
    public Nullable`1<long> Index { get; }
    public Nullable`1<bool> QueryCount { get; }
    public string SkipToken { get; }
    public string DeltaToken { get; }
    internal Uri MetadataDocumentUri { get; }
    public ODataUriSlim(ODataUri odataUri);
    public ODataUriSlim(ODataUriSlim odataUriSlim);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public ODataPath get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(ODataPath value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public SelectExpandClause get_SelectAndExpand();
    [CompilerGeneratedAttribute]
public void set_SelectAndExpand(SelectExpandClause value);
    public Uri get_RequestUri();
    public Uri get_ServiceRoot();
    public IDictionary`2<string, SingleValueNode> get_ParameterAliasNodes();
    public IEnumerable`1<QueryNode> get_CustomQueryOptions();
    public FilterClause get_Filter();
    public OrderByClause get_OrderBy();
    public SearchClause get_Search();
    public ApplyClause get_Apply();
    public ComputeClause get_Compute();
    public Nullable`1<long> get_Skip();
    public Nullable`1<long> get_Top();
    public Nullable`1<long> get_Index();
    public Nullable`1<bool> get_QueryCount();
    public string get_SkipToken();
    public string get_DeltaToken();
    internal Uri get_MetadataDocumentUri();
}
public static class Microsoft.OData.ODataUriUtils : object {
    public static object ConvertFromUriLiteral(string value, ODataVersion version);
    public static object ConvertFromUriLiteral(string value, ODataVersion version, IEdmModel model, IEdmTypeReference typeReference);
    [SuppressMessageAttribute("Microsoft.Design", "CA1055:UriReturnValuesShouldNotBeStrings")]
public static string ConvertToUriLiteral(object value, ODataVersion version, bool isIeee754Compatible);
    [SuppressMessageAttribute("Microsoft.Design", "CA1055:UriReturnValuesShouldNotBeStrings")]
public static string ConvertToUriLiteral(object value, ODataVersion version);
    [SuppressMessageAttribute("Microsoft.Design", "CA1055:UriReturnValuesShouldNotBeStrings")]
public static string ConvertToUriLiteral(object value, ODataVersion version, IEdmModel model);
    [SuppressMessageAttribute("Microsoft.Design", "CA1055:UriReturnValuesShouldNotBeStrings")]
public static string ConvertToUriLiteral(object value, ODataVersion version, IEdmModel model, bool isIeee754Compatible);
}
public class Microsoft.OData.ODataUrlKeyDelimiter : object {
    private static ODataUrlKeyDelimiter slashDelimiter;
    private static ODataUrlKeyDelimiter parenthesesDelimiter;
    private bool enableKeyAsSegment;
    public static ODataUrlKeyDelimiter Parentheses { get; }
    public static ODataUrlKeyDelimiter Slash { get; }
    internal bool EnableKeyAsSegment { get; }
    private ODataUrlKeyDelimiter(bool enablekeyAsSegment);
    private static ODataUrlKeyDelimiter();
    public static ODataUrlKeyDelimiter get_Parentheses();
    public static ODataUrlKeyDelimiter get_Slash();
    internal bool get_EnableKeyAsSegment();
    internal static ODataUrlKeyDelimiter GetODataUrlKeyDelimiter(ODataUriParserSettings settings);
}
[ExtensionAttribute]
public static class Microsoft.OData.ODataUtils : object {
    private static string Version4NumberString;
    private static string Version401NumberString;
    public static ODataFormat SetHeadersForPayload(ODataMessageWriter messageWriter, ODataPayloadKind payloadKind);
    public static ODataFormat GetReadFormat(ODataMessageReader messageReader);
    [ExtensionAttribute]
public static ODataNullValueBehaviorKind NullValueReadBehaviorKind(IEdmModel model, IEdmProperty property);
    [ExtensionAttribute]
public static void SetNullValueReaderBehavior(IEdmModel model, IEdmProperty property, ODataNullValueBehaviorKind nullValueReadBehaviorKind);
    public static string ODataVersionToString(ODataVersion version);
    public static ODataVersion StringToODataVersion(string version);
    public static Func`2<string, bool> CreateAnnotationFilter(string annotationFilter);
    public static T[] GetEmptyArray();
    [ExtensionAttribute]
public static ODataServiceDocument GenerateServiceDocument(IEdmModel model);
    public static string AppendDefaultHeaderValue(string headerName, string headerValue);
    public static string AppendDefaultHeaderValue(string headerName, string headerValue, ODataVersion version);
}
[ExtensionAttribute]
internal static class Microsoft.OData.ODataUtilsInternal : object {
    internal static void SetODataVersion(ODataMessage message, ODataMessageWriterSettings settings);
    internal static ODataVersion GetODataVersion(ODataMessage message, ODataVersion defaultVersion);
    internal static bool IsPayloadKindSupported(ODataPayloadKind payloadKind, bool inRequest);
    internal static IEnumerable`1<T> ConcatEnumerables(IEnumerable`1<T> enumerable1, IEnumerable`1<T> enumerable2);
    [ExtensionAttribute]
internal static bool IsNullable(IEdmTypeReference type);
}
public abstract class Microsoft.OData.ODataValue : ODataItem {
    internal bool IsNullValue { get; }
    internal virtual bool get_IsNullValue();
}
[ExtensionAttribute]
internal static class Microsoft.OData.ODataValueUtils : object {
    [ExtensionAttribute]
internal static ODataValue ToODataValue(object objectToConvert);
    [ExtensionAttribute]
internal static object FromODataValue(ODataValue odataValue);
}
public enum Microsoft.OData.ODataVersion : Enum {
    public int value__;
    public static ODataVersion V4;
    public static ODataVersion V401;
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.OData.ODataVersionCache`1 : object {
    private SimpleLazy`1<T> v4;
    private SimpleLazy`1<T> v401;
    internal T Item { get; }
    internal ODataVersionCache`1(Func`2<ODataVersion, T> factory);
    internal T get_Item(ODataVersion version);
}
public abstract class Microsoft.OData.ODataWriter : object {
    public abstract virtual void WriteStart(ODataResourceSet resourceSet);
    public ODataWriter Write(ODataResourceSet resourceSet);
    public ODataWriter Write(ODataResourceSet resourceSet, Action nestedAction);
    public virtual Task WriteStartAsync(ODataResourceSet resourceSet);
    public virtual void WriteStart(ODataDeltaResourceSet deltaResourceSet);
    public ODataWriter Write(ODataDeltaResourceSet deltaResourceSet);
    public ODataWriter Write(ODataDeltaResourceSet deltaResourceSet, Action nestedAction);
    public virtual Task WriteStartAsync(ODataDeltaResourceSet deltaResourceSet);
    public abstract virtual void WriteStart(ODataResource resource);
    public ODataWriter Write(ODataResource resource);
    public ODataWriter Write(ODataResource resource, Action nestedAction);
    public ODataWriter Write(ODataDeletedResource deletedResource);
    public ODataWriter Write(ODataDeletedResource deletedResource, Action nestedAction);
    public ODataWriter Write(ODataDeltaLink deltaLink);
    public ODataWriter Write(ODataDeltaDeletedLink deltaDeletedLink);
    public virtual Task WriteStartAsync(ODataResource resource);
    public virtual void WriteStart(ODataDeletedResource deletedResource);
    public virtual Task WriteStartAsync(ODataDeletedResource deletedResource);
    public virtual void WriteDeltaLink(ODataDeltaLink deltaLink);
    public virtual Task WriteDeltaLinkAsync(ODataDeltaLink deltaLink);
    public virtual void WriteDeltaDeletedLink(ODataDeltaDeletedLink deltaDeletedLink);
    public virtual Task WriteDeltaDeletedLinkAsync(ODataDeltaDeletedLink deltaDeletedLink);
    public abstract virtual void WriteStart(ODataNestedResourceInfo nestedResourceInfo);
    public ODataWriter Write(ODataNestedResourceInfo nestedResourceInfo);
    public ODataWriter Write(ODataNestedResourceInfo nestedResourceInfo, Action nestedAction);
    public virtual Task WriteStartAsync(ODataNestedResourceInfo nestedResourceInfo);
    public virtual void WritePrimitive(ODataPrimitiveValue primitiveValue);
    public ODataWriter Write(ODataPrimitiveValue primitiveValue);
    public virtual Task WritePrimitiveAsync(ODataPrimitiveValue primitiveValue);
    public virtual void WriteStart(ODataPropertyInfo primitiveProperty);
    [SuppressMessageAttribute("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")]
public ODataWriter Write(ODataProperty primitiveProperty);
    [SuppressMessageAttribute("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")]
public ODataWriter Write(ODataProperty primitiveProperty, Action nestedAction);
    public virtual Task WriteStartAsync(ODataPropertyInfo primitiveProperty);
    public virtual Stream CreateBinaryWriteStream();
    public ODataWriter WriteStream(ODataBinaryStreamValue stream);
    public virtual Task`1<Stream> CreateBinaryWriteStreamAsync();
    public virtual TextWriter CreateTextWriter();
    public virtual Task`1<TextWriter> CreateTextWriterAsync();
    public abstract virtual void WriteEnd();
    public virtual Task WriteEndAsync();
    public abstract virtual void WriteEntityReferenceLink(ODataEntityReferenceLink entityReferenceLink);
    public virtual Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink entityReferenceLink);
    public abstract virtual void Flush();
    public virtual Task FlushAsync();
}
internal abstract class Microsoft.OData.ODataWriterCore : ODataWriter {
    protected IWriterValidator WriterValidator;
    private ODataOutputContext outputContext;
    private bool writingResourceSet;
    private IODataReaderWriterListener listener;
    private ScopeStack scopeStack;
    private int currentResourceDepth;
    [CompilerGeneratedAttribute]
private Nullable`1<ODataVersion> <Version>k__BackingField;
    internal Nullable`1<ODataVersion> Version { get; }
    protected Scope CurrentScope { get; }
    protected WriterState State { get; }
    protected bool SkipWriting { get; }
    protected bool IsTopLevel { get; }
    protected int ScopeLevel { get; }
    protected ODataNestedResourceInfo ParentNestedResourceInfo { get; }
    protected ODataNestedResourceInfo BelongingNestedResourceInfo { get; }
    protected IEdmStructuredType ParentResourceType { get; }
    protected IEdmNavigationSource ParentResourceNavigationSource { get; }
    protected Scope ParentScope { get; }
    protected int ResourceSetScopeResourceCount { get; }
    protected IDuplicatePropertyNameChecker DuplicatePropertyNameChecker { get; }
    protected IEdmStructuredType ResourceType { get; }
    protected NestedResourceInfoScope ParentNestedResourceInfoScope { get; }
    private ResourceSetWithoutExpectedTypeValidator CurrentResourceSetValidator { get; }
    protected ODataWriterCore(ODataOutputContext outputContext, IEdmNavigationSource navigationSource, IEdmStructuredType resourceType, bool writingResourceSet, bool writingDelta, IODataReaderWriterListener listener);
    [CompilerGeneratedAttribute]
internal Nullable`1<ODataVersion> get_Version();
    protected Scope get_CurrentScope();
    protected WriterState get_State();
    protected bool get_SkipWriting();
    protected bool get_IsTopLevel();
    protected int get_ScopeLevel();
    protected ODataNestedResourceInfo get_ParentNestedResourceInfo();
    protected ODataNestedResourceInfo get_BelongingNestedResourceInfo();
    protected IEdmStructuredType get_ParentResourceType();
    protected IEdmNavigationSource get_ParentResourceNavigationSource();
    protected Scope get_ParentScope();
    protected int get_ResourceSetScopeResourceCount();
    protected IDuplicatePropertyNameChecker get_DuplicatePropertyNameChecker();
    protected IEdmStructuredType get_ResourceType();
    protected NestedResourceInfoScope get_ParentNestedResourceInfoScope();
    private ResourceSetWithoutExpectedTypeValidator get_CurrentResourceSetValidator();
    public sealed virtual void Flush();
    public sealed virtual Task FlushAsync();
    public sealed virtual void WriteStart(ODataResourceSet resourceSet);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<WriteStartAsync>d__44")]
public sealed virtual Task WriteStartAsync(ODataResourceSet resourceSet);
    public sealed virtual void WriteStart(ODataDeltaResourceSet deltaResourceSet);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<WriteStartAsync>d__46")]
public sealed virtual Task WriteStartAsync(ODataDeltaResourceSet deltaResourceSet);
    public sealed virtual void WriteStart(ODataResource resource);
    public sealed virtual Task WriteStartAsync(ODataResource resource);
    public sealed virtual void WriteStart(ODataDeletedResource deletedResource);
    public sealed virtual Task WriteStartAsync(ODataDeletedResource deletedResource);
    public virtual void WriteDeltaLink(ODataDeltaLink deltaLink);
    public virtual Task WriteDeltaLinkAsync(ODataDeltaLink deltaLink);
    public virtual void WriteDeltaDeletedLink(ODataDeltaDeletedLink deltaLink);
    public virtual Task WriteDeltaDeletedLinkAsync(ODataDeltaDeletedLink deltaLink);
    public sealed virtual void WritePrimitive(ODataPrimitiveValue primitiveValue);
    public sealed virtual Task WritePrimitiveAsync(ODataPrimitiveValue primitiveValue);
    public sealed virtual void WriteStart(ODataPropertyInfo primitiveProperty);
    public sealed virtual Task WriteStartAsync(ODataPropertyInfo primitiveProperty);
    public sealed virtual Stream CreateBinaryWriteStream();
    public sealed virtual Task`1<Stream> CreateBinaryWriteStreamAsync();
    public sealed virtual TextWriter CreateTextWriter();
    public sealed virtual Task`1<TextWriter> CreateTextWriterAsync();
    public sealed virtual void WriteStart(ODataNestedResourceInfo nestedResourceInfo);
    public sealed virtual Task WriteStartAsync(ODataNestedResourceInfo nestedResourceInfo);
    public sealed virtual void WriteEnd();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<WriteEndAsync>d__66")]
public sealed virtual Task WriteEndAsync();
    public sealed virtual void WriteEntityReferenceLink(ODataEntityReferenceLink entityReferenceLink);
    public sealed virtual Task WriteEntityReferenceLinkAsync(ODataEntityReferenceLink entityReferenceLink);
    private sealed virtual override void Microsoft.OData.IODataOutputInStreamErrorListener.OnInStreamError();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<Microsoft-OData-IODataOutputInStreamErrorListener-OnInStreamErrorAsync>d__70")]
private sealed virtual override Task Microsoft.OData.IODataOutputInStreamErrorListener.OnInStreamErrorAsync();
    private sealed virtual override void Microsoft.OData.IODataStreamListener.StreamRequested();
    private sealed virtual override Task Microsoft.OData.IODataStreamListener.StreamRequestedAsync();
    private sealed virtual override void Microsoft.OData.IODataStreamListener.StreamDisposed();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<Microsoft-OData-IODataStreamListener-StreamDisposedAsync>d__74")]
private sealed virtual override Task Microsoft.OData.IODataStreamListener.StreamDisposedAsync();
    protected ResourceScope GetParentResourceScope();
    protected static bool IsErrorState(WriterState state);
    protected abstract virtual void VerifyNotDisposed();
    protected abstract virtual void FlushSynchronously();
    protected abstract virtual Task FlushAsynchronously();
    protected abstract virtual void StartPayload();
    protected abstract virtual void StartResource(ODataResource resource);
    protected abstract virtual void EndResource(ODataResource resource);
    protected virtual void StartProperty(ODataPropertyInfo property);
    protected virtual void EndProperty(ODataPropertyInfo property);
    protected abstract virtual void StartResourceSet(ODataResourceSet resourceSet);
    protected virtual void StartDeltaResourceSet(ODataDeltaResourceSet deltaResourceSet);
    protected virtual void StartDeletedResource(ODataDeletedResource deletedEntry);
    protected virtual void StartDeltaLink(ODataDeltaLinkBase deltaLink);
    protected virtual Stream StartBinaryStream();
    protected virtual void EndBinaryStream();
    protected virtual TextWriter StartTextWriter();
    protected virtual void EndTextWriter();
    protected abstract virtual void EndPayload();
    protected abstract virtual void EndResourceSet(ODataResourceSet resourceSet);
    protected virtual void EndDeltaResourceSet(ODataDeltaResourceSet deltaResourceSet);
    protected virtual void EndDeletedResource(ODataDeletedResource deletedResource);
    protected virtual void WritePrimitiveValue(ODataPrimitiveValue primitiveValue);
    protected abstract virtual void WriteDeferredNestedResourceInfo(ODataNestedResourceInfo nestedResourceInfo);
    protected abstract virtual void StartNestedResourceInfoWithContent(ODataNestedResourceInfo nestedResourceInfo);
    protected abstract virtual void EndNestedResourceInfoWithContent(ODataNestedResourceInfo nestedResourceInfo);
    protected abstract virtual void WriteEntityReferenceInNavigationLinkContent(ODataNestedResourceInfo parentNestedResourceInfo, ODataEntityReferenceLink entityReferenceLink);
    protected abstract virtual ResourceSetScope CreateResourceSetScope(ODataResourceSet resourceSet, IEdmNavigationSource navigationSource, IEdmType itemType, bool skipWriting, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri, bool isUndeclared);
    protected virtual DeltaResourceSetScope CreateDeltaResourceSetScope(ODataDeltaResourceSet deltaResourceSet, IEdmNavigationSource navigationSource, IEdmStructuredType resourceType, bool skipWriting, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri, bool isUndeclared);
    protected abstract virtual ResourceScope CreateResourceScope(ODataResource resource, IEdmNavigationSource navigationSource, IEdmStructuredType resourceType, bool skipWriting, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri, bool isUndeclared);
    protected virtual DeletedResourceScope CreateDeletedResourceScope(ODataDeletedResource resource, IEdmNavigationSource navigationSource, IEdmEntityType resourceType, bool skipWriting, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri, bool isUndeclared);
    protected virtual PropertyInfoScope CreatePropertyInfoScope(ODataPropertyInfo property, IEdmNavigationSource navigationSource, IEdmStructuredType resourceType, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri);
    protected virtual DeltaLinkScope CreateDeltaLinkScope(ODataDeltaLinkBase link, IEdmNavigationSource navigationSource, IEdmEntityType entityType, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri);
    protected ODataResourceSerializationInfo GetResourceSerializationInfo(ODataResourceBase resource);
    protected ODataResourceSerializationInfo GetLinkSerializationInfo(ODataItem item);
    protected virtual NestedResourceInfoScope CreateNestedResourceInfoScope(WriterState writerState, ODataNestedResourceInfo navLink, IEdmNavigationSource navigationSource, IEdmType itemType, bool skipWriting, SelectedPropertiesNode selectedProperties, ODataUriSlim& modreq(System.Runtime.InteropServices.InAttribute) odataUri);
    protected virtual void PrepareResourceForWriteStart(ResourceScope resourceScope, ODataResource resource, bool writingResponse, SelectedPropertiesNode selectedProperties);
    protected virtual void PrepareDeletedResourceForWriteStart(DeletedResourceScope resourceScope, ODataDeletedResource deletedResource, bool writingResponse, SelectedPropertiesNode selectedProperties);
    protected IEdmStructuredType GetResourceType(ODataResourceBase resource);
    protected IEdmStructuredType GetResourceSetType(ODataResourceSetBase resourceSet);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
protected void ValidateNoDeltaLinkForExpandedResourceSet(ODataResourceSet resourceSet);
    protected abstract virtual Task StartPayloadAsync();
    protected abstract virtual Task EndPayloadAsync();
    protected abstract virtual Task StartResourceAsync(ODataResource resource);
    protected abstract virtual Task EndResourceAsync(ODataResource resource);
    protected virtual Task StartPropertyAsync(ODataPropertyInfo property);
    protected virtual Task EndPropertyAsync(ODataPropertyInfo property);
    protected abstract virtual Task StartResourceSetAsync(ODataResourceSet resourceSet);
    protected abstract virtual Task EndResourceSetAsync(ODataResourceSet resourceSet);
    protected virtual Task StartDeltaResourceSetAsync(ODataDeltaResourceSet deltaResourceSet);
    protected virtual Task EndDeltaResourceSetAsync(ODataDeltaResourceSet deltaResourceSet);
    protected virtual Task StartDeletedResourceAsync(ODataDeletedResource deletedEntry);
    protected virtual Task EndDeletedResourceAsync(ODataDeletedResource deletedResource);
    protected virtual Task StartDeltaLinkAsync(ODataDeltaLinkBase deltaLink);
    protected virtual Task`1<Stream> StartBinaryStreamAsync();
    protected virtual Task EndBinaryStreamAsync();
    protected virtual Task`1<TextWriter> StartTextWriterAsync();
    protected virtual Task EndTextWriterAsync();
    protected virtual Task WritePrimitiveValueAsync(ODataPrimitiveValue primitiveValue);
    protected abstract virtual Task WriteDeferredNestedResourceInfoAsync(ODataNestedResourceInfo nestedResourceInfo);
    protected abstract virtual Task StartNestedResourceInfoWithContentAsync(ODataNestedResourceInfo nestedResourceInfo);
    protected abstract virtual Task EndNestedResourceInfoWithContentAsync(ODataNestedResourceInfo nestedResourceInfo);
    protected abstract virtual Task WriteEntityReferenceInNavigationLinkContentAsync(ODataNestedResourceInfo parentNestedResourceInfo, ODataEntityReferenceLink entityReferenceLink);
    protected virtual Task PrepareResourceForWriteStartAsync(ResourceScope resourceScope, ODataResource resource, bool writingResponse, SelectedPropertiesNode selectedProperties);
    protected virtual Task PrepareDeletedResourceForWriteStartAsync(DeletedResourceScope resourceScope, ODataDeletedResource deletedResource, bool writingResponse, SelectedPropertiesNode selectedProperties);
    private void VerifyCanWriteStartResourceSet(bool synchronousCall, ODataResourceSet resourceSet);
    private void WriteStartResourceSetImplementation(ODataResourceSet resourceSet);
    private void VerifyCanWriteStartDeltaResourceSet(bool synchronousCall, ODataDeltaResourceSet deltaResourceSet);
    private void WriteStartDeltaResourceSetImplementation(ODataDeltaResourceSet deltaResourceSet);
    private void VerifyCanWriteStartResource(bool synchronousCall, ODataResource resource);
    private void VerifyCanWriteStartDeletedResource(bool synchronousCall, ODataDeletedResource resource);
    private void WriteStartResourceImplementation(ODataResource resource);
    private void WriteStartDeletedResourceImplementation(ODataDeletedResource resource);
    private void VerifyCanWriteProperty(bool synchronousCall, ODataPropertyInfo property);
    private void WriteStartPropertyImplementation(ODataPropertyInfo property);
    private void WriteDeltaLinkImplementation(ODataDeltaLinkBase deltaLink);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<WriteDeltaLinkImplementationAsync>d__151")]
private Task WriteDeltaLinkImplementationAsync(ODataDeltaLinkBase deltaLink);
    private void VerifyCanWriteStartNestedResourceInfo(bool synchronousCall, ODataNestedResourceInfo nestedResourceInfo);
    private void WriteStartNestedResourceInfoImplementation(ODataNestedResourceInfo nestedResourceInfo);
    private void VerifyCanWritePrimitive(bool synchronousCall, ODataPrimitiveValue primitiveValue);
    private void WritePrimitiveValueImplementation(ODataPrimitiveValue primitiveValue);
    private Task WritePrimitiveValueImplementationAsync(ODataPrimitiveValue primitiveValue);
    private void VerifyCanCreateWriteStream(bool synchronousCall);
    private Stream CreateWriteStreamImplementation();
    private void VerifyCanCreateTextWriter(bool synchronousCall);
    private TextWriter CreateTextWriterImplementation();
    private void VerifyCanWriteEnd(bool synchronousCall);
    private void WriteEndImplementation();
    private void MarkNestedResourceInfoAsProcessed(ODataNestedResourceInfo link);
    private void VerifyCanWriteEntityReferenceLink(ODataEntityReferenceLink entityReferenceLink, bool synchronousCall);
    private void VerifyCanWriteLink(bool synchronousCall, ODataDeltaLinkBase deltaLink);
    private void WriteEntityReferenceLinkImplementation(ODataEntityReferenceLink entityReferenceLink);
    private void VerifyCanFlush(bool synchronousCall);
    private void VerifyCallAllowed(bool synchronousCall);
    private void VerifyWritingDelta();
    private void ThrowODataException(string errorMessage, ODataItem item);
    private void StartPayloadInStartState();
    private void CheckForNestedResourceInfoWithContent(ODataPayloadKind contentPayloadKind, ODataItem contentPayload);
    private void ValidateResourceForResourceSet(ODataResourceBase resource, ResourceBaseScope resourceScope);
    private static bool HasKeyProperties(IEdmEntityType entityType, IEnumerable`1<ODataPropertyInfo> properties);
    private void InterceptException(Action`1<ODataWriterCore> action);
    private void InterceptException(Action`2<ODataWriterCore, TArg0> action, TArg0 arg0);
    private void InterceptException(Action`3<ODataWriterCore, TArg0, TArg1> action, TArg0 arg0, TArg1 arg1);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<InterceptExceptionAsync>d__178")]
private Task InterceptExceptionAsync(Func`2<ODataWriterCore, Task> action, ODataItem currentScopeItem);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<InterceptExceptionAsync>d__179`1")]
private Task InterceptExceptionAsync(Func`3<ODataWriterCore, TArg0, Task> action, TArg0 arg0);
    private void IncreaseResourceDepth();
    private void DecreaseResourceDepth();
    private void NotifyListener(WriterState newState);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
private void EnterScope(WriterState newState, ODataItem item);
    private ODataPath AppendEntitySetKeySegment(ODataPath odataPath, bool throwIfFail);
    private bool TryBuildKeySegment(KeySegment& keySegment);
    private IList`1<KeyValuePair`2<string, object>> GetKeyProperties(IEdmEntityType currentEntityType, bool throwIfFail);
    private void LeaveScope();
    [SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
private void PromoteNestedResourceInfoScope(ODataItem content);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
private void ValidateTransition(WriterState newState);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
private void PushScope(WriterState state, ODataItem item, IEdmNavigationSource navigationSource, IEdmType itemType, bool skipWriting, SelectedPropertiesNode selectedProperties, ODataUriSlim& odataUri, IEnumerable`1<string> derivedTypeConstraints);
    private bool IsUndeclared(ODataNestedResourceInfo nestedResourceInfo);
    private Task VerifyCanWriteStartResourceSetAsync(bool synchronousCall, ODataResourceSet resourceSet);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<WriteStartResourceSetImplementationAsync>d__193")]
private Task WriteStartResourceSetImplementationAsync(ODataResourceSet resourceSet);
    private Task VerifyCanWriteStartDeltaResourceSetAsync(bool synchronousCall, ODataDeltaResourceSet deltaResourceSet);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<WriteStartDeltaResourceSetImplementationAsync>d__195")]
private Task WriteStartDeltaResourceSetImplementationAsync(ODataDeltaResourceSet deltaResourceSet);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<WriteStartResourceImplementationAsync>d__196")]
private Task WriteStartResourceImplementationAsync(ODataResource resource);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<WriteStartDeletedResourceImplementationAsync>d__197")]
private Task WriteStartDeletedResourceImplementationAsync(ODataDeletedResource resource);
    private Task WriteStartPropertyImplementationAsync(ODataPropertyInfo property);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<CreateWriteStreamImplementationAsync>d__199")]
private Task`1<Stream> CreateWriteStreamImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<CreateTextWriterImplementationAsync>d__200")]
private Task`1<TextWriter> CreateTextWriterImplementationAsync();
    private Task WriteEndImplementationAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<WriteEntityReferenceLinkImplementationAsync>d__202")]
private Task WriteEntityReferenceLinkImplementationAsync(ODataEntityReferenceLink entityReferenceLink);
    private Task StartPayloadInStartStateAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<CheckForNestedResourceInfoWithContentAsync>d__204")]
private Task CheckForNestedResourceInfoWithContentAsync(ODataPayloadKind contentPayloadKind, ODataItem contentPayload);
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<LeaveScopeAsync>d__205")]
private Task LeaveScopeAsync();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriterCore/<<WritePrimitiveValueImplementationAsync>b__156_0>d")]
[CompilerGeneratedAttribute]
private Task <WritePrimitiveValueImplementationAsync>b__156_0(ODataWriterCore thisParam, ODataPrimitiveValue primiteValueParam);
}
internal class Microsoft.OData.ODataWriteStream : ODataStream {
    private Stream stream;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal ODataWriteStream(Stream stream, IODataStreamListener listener, bool synchronous);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual void Flush();
    [AsyncStateMachineAttribute("Microsoft.OData.ODataWriteStream/<FlushAsync>d__18")]
public virtual Task FlushAsync(CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
    protected virtual ValueTask DisposeAsyncCore();
}
[ExtensionAttribute]
[SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
internal static class Microsoft.OData.PlatformHelper : object {
    [SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
internal static Type[] EmptyTypes;
    internal static Regex DateValidator;
    internal static Regex TimeOfDayValidator;
    internal static Regex PotentialDateTimeOffsetValidator;
    internal static string UriSchemeHttp;
    internal static string UriSchemeHttps;
    private static PlatformHelper();
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static Assembly GetAssembly(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsValueType(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsAbstract(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsGenericType(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsGenericTypeDefinition(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsVisible(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsInterface(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsClass(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsEnum(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static Type GetBaseType(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool ContainsGenericParameters(Type type);
    internal static bool TryConvertStringToDate(string text, Date& date);
    internal static Date ConvertStringToDate(string text);
    internal static bool TryConvertStringToTimeOfDay(string text, TimeOfDay& timeOfDay);
    internal static TimeOfDay ConvertStringToTimeOfDay(string text);
    internal static DateTimeOffset ConvertStringToDateTimeOffset(string text);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
private static void ValidateTimeZoneInformationInDateTimeOffsetString(string text);
    internal static string AddSecondsPaddingIfMissing(string text);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static Type GetTypeOrThrow(string typeName);
    internal static UnicodeCategory GetUnicodeCategory(char c);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsProperty(MemberInfo member);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsPrimitive(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsSealed(Type type);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool IsMethod(MemberInfo member);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static bool AreMembersEqual(MemberInfo member1, MemberInfo member2);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static IEnumerable`1<PropertyInfo> GetPublicProperties(Type type, bool instanceOnly);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static IEnumerable`1<PropertyInfo> GetPublicProperties(Type type, bool instanceOnly, bool declaredOnly);
    [ExtensionAttribute]
internal static IEnumerable`1<PropertyInfo> GetNonPublicProperties(Type type, bool instanceOnly, bool declaredOnly);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static IEnumerable`1<ConstructorInfo> GetInstanceConstructors(Type type, bool isPublic);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static ConstructorInfo GetInstanceConstructor(Type type, bool isPublic, Type[] argTypes);
    [ExtensionAttribute]
[SuppressMessageAttribute("Design", "CA1031:Do not catch general exception types")]
internal static bool TryGetMethod(Type type, string name, Type[] parameterTypes, MethodInfo& foundMethod);
    [ExtensionAttribute]
internal static IEnumerable`1<MethodInfo> GetMethods(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static MethodInfo GetMethod(Type type, string name, bool isPublic, bool isStatic);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static MethodInfo GetMethod(Type type, string name, Type[] types, bool isPublic, bool isStatic);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static IEnumerable`1<MethodInfo> GetPublicStaticMethods(Type type);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static IEnumerable`1<Type> GetNonPublicNestedTypes(Type type);
    private static bool CheckTypeArgs(ConstructorInfo constructorInfo, Type[] types);
    [ExtensionAttribute]
internal static bool IsAssignableFrom(Type thisType, Type otherType);
    [ExtensionAttribute]
internal static bool IsSubclassOf(Type thisType, Type otherType);
    [ExtensionAttribute]
internal static MethodInfo GetMethod(Type type, string name);
    [ExtensionAttribute]
internal static MethodInfo GetMethod(Type type, string name, Type[] types);
    [ExtensionAttribute]
internal static MethodInfo GetMethodWithGenericArgs(Type type, string name, bool isPublic, bool isStatic, int genericArgCount);
    [ExtensionAttribute]
internal static PropertyInfo GetProperty(Type type, string name, Type returnType);
    [ExtensionAttribute]
internal static PropertyInfo GetProperty(Type type, string name);
    [ExtensionAttribute]
internal static MethodInfo GetGetMethod(PropertyInfo propertyInfo);
    [ExtensionAttribute]
internal static MethodInfo GetSetMethod(PropertyInfo propertyInfo);
    [ExtensionAttribute]
internal static MethodInfo GetBaseDefinition(MethodInfo methodInfo);
    [ExtensionAttribute]
internal static IEnumerable`1<PropertyInfo> GetProperties(Type type);
    [ExtensionAttribute]
internal static IEnumerable`1<FieldInfo> GetFields(Type type);
    [ExtensionAttribute]
internal static IEnumerable`1<object> GetCustomAttributes(Type type, Type attributeType, bool inherit);
    [ExtensionAttribute]
internal static IEnumerable`1<object> GetCustomAttributes(Type type, bool inherit);
    [ExtensionAttribute]
internal static Type[] GetGenericArguments(Type type);
    [ExtensionAttribute]
internal static IEnumerable`1<Type> GetInterfaces(Type type);
    [ExtensionAttribute]
internal static bool IsInstanceOfType(Type type, object obj);
    [ExtensionAttribute]
internal static Type GetType(Assembly assembly, string typeName, bool throwOnError);
    [ExtensionAttribute]
internal static IEnumerable`1<Type> GetTypes(Assembly assembly);
    [ExtensionAttribute]
internal static FieldInfo GetField(Type type, string name);
    private static bool IsInstance(PropertyInfo propertyInfo);
    private static bool IsPublic(PropertyInfo propertyInfo);
    public static Regex CreateCompiled(string pattern, RegexOptions options);
}
internal class Microsoft.OData.PrimitiveConverter : object {
    private static IPrimitiveTypeConverter geographyTypeConverter;
    private static IPrimitiveTypeConverter geometryTypeConverter;
    private static PrimitiveConverter primitiveConverter;
    private Dictionary`2<Type, IPrimitiveTypeConverter> spatialPrimitiveTypeConverters;
    internal static PrimitiveConverter Instance { get; }
    internal PrimitiveConverter(KeyValuePair`2[] spatialPrimitiveTypeConverters);
    private static PrimitiveConverter();
    internal static PrimitiveConverter get_Instance();
    internal void WriteJson(object instance, IJsonWriter jsonWriter);
    private bool TryGetConverter(Type type, IPrimitiveTypeConverter& primitiveTypeConverter);
}
internal class Microsoft.OData.PropertyAndAnnotationCollector : object {
    private static IDictionary`2<string, object> emptyDictionary;
    private bool throwOnDuplicateProperty;
    private IDictionary`2<string, object> odataScopeAnnotations;
    private IList`1<KeyValuePair`2<string, object>> customScopeAnnotations;
    private IDictionary`2<string, PropertyData> propertyData;
    internal PropertyAndAnnotationCollector(bool throwOnDuplicateProperty);
    private static PropertyAndAnnotationCollector();
    internal void CheckForDuplicatePropertyNames(ODataPropertyInfo property);
    internal void ValidatePropertyUniquenessOnNestedResourceInfoStart(ODataNestedResourceInfo nestedResourceInfo);
    internal Uri ValidatePropertyUniquenessAndGetAssociationLink(ODataNestedResourceInfo nestedResourceInfo);
    internal ODataNestedResourceInfo ValidatePropertyOpenForAssociationLinkAndGetNestedResourceInfo(string propertyName, Uri associationLinkUrl);
    internal void Reset();
    internal void AddODataScopeAnnotation(string annotationName, object annotationValue);
    internal void AddCustomScopeAnnotation(string annotationName, object annotationValue);
    internal IDictionary`2<string, object> GetODataScopeAnnotation();
    internal IEnumerable`1<KeyValuePair`2<string, object>> GetCustomScopeAnnotation();
    internal void AddODataPropertyAnnotation(string propertyName, string annotationName, object annotationValue);
    internal void AddCustomPropertyAnnotation(string propertyName, string annotationName, object annotationValue);
    internal void SetDerivedTypeValidator(string propertyName, DerivedTypeValidator validator);
    internal DerivedTypeValidator GetDerivedTypeValidator(string propertyName);
    internal IDictionary`2<string, object> GetODataPropertyAnnotations(string propertyName);
    internal IEnumerable`1<KeyValuePair`2<string, object>> GetCustomPropertyAnnotations(string propertyName);
    internal void MarkPropertyAsProcessed(string propertyName);
    internal void CheckIfPropertyOpenForAnnotations(string propertyName, string annotationName);
    private static void CheckNestedResourceInfoDuplicateNameForExistingDuplicationRecord(string propertyName, PropertyData propertyData);
}
internal class Microsoft.OData.PropertyCache : object {
    private Dictionary`2<PropertyKey, PropertySerializationInfo> propertyInfoDictionary;
    public PropertySerializationInfo GetProperty(IEdmModel model, int depth, string name, IEdmStructuredType owningType);
}
internal class Microsoft.OData.PropertyCacheHandler : object {
    private Stack`1<PropertyCache> cacheStack;
    private Stack`1<int> scopeLevelStack;
    private Dictionary`2<IEdmStructuredType, PropertyCache> cacheDictionary;
    private PropertyCache currentPropertyCache;
    private int resourceSetScopeLevel;
    private int currentResourceScopeLevel;
    public PropertySerializationInfo GetProperty(IEdmModel model, string name, IEdmStructuredType owningType);
    public void SetCurrentResourceScopeLevel(int level);
    public void EnterResourceSetScope(IEdmStructuredType resourceType, int scopeLevel);
    public void LeaveResourceSetScope();
    public bool InResourceSetScope();
}
internal class Microsoft.OData.PropertyMetadataTypeInfo : object {
    private bool derivedTypeConstraintsLoaded;
    private IEnumerable`1<string> derivedTypeConstraints;
    private IEdmModel model;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmProperty <EdmProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOpenProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUndeclaredProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmStructuredType <OwningType>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmTypeReference <TypeReference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    public string PropertyName { get; private set; }
    public IEdmProperty EdmProperty { get; private set; }
    public bool IsOpenProperty { get; private set; }
    public bool IsUndeclaredProperty { get; private set; }
    public IEdmStructuredType OwningType { get; private set; }
    public IEdmTypeReference TypeReference { get; private set; }
    public string FullName { get; private set; }
    public IEnumerable`1<string> DerivedTypeConstraints { get; }
    public PropertyMetadataTypeInfo(IEdmModel model, string name, IEdmStructuredType owningType);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
private void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public IEdmProperty get_EdmProperty();
    [CompilerGeneratedAttribute]
private void set_EdmProperty(IEdmProperty value);
    [CompilerGeneratedAttribute]
public bool get_IsOpenProperty();
    [CompilerGeneratedAttribute]
private void set_IsOpenProperty(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsUndeclaredProperty();
    [CompilerGeneratedAttribute]
private void set_IsUndeclaredProperty(bool value);
    [CompilerGeneratedAttribute]
public IEdmStructuredType get_OwningType();
    [CompilerGeneratedAttribute]
private void set_OwningType(IEdmStructuredType value);
    [CompilerGeneratedAttribute]
public IEdmTypeReference get_TypeReference();
    [CompilerGeneratedAttribute]
private void set_TypeReference(IEdmTypeReference value);
    [CompilerGeneratedAttribute]
public string get_FullName();
    [CompilerGeneratedAttribute]
private void set_FullName(string value);
    public IEnumerable`1<string> get_DerivedTypeConstraints();
}
internal class Microsoft.OData.PropertySerializationInfo : object {
    private bool isTopLevel;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyValueTypeInfo <ValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyMetadataTypeInfo <MetadataType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeNameToWrite>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WireName>k__BackingField;
    public string PropertyName { get; private set; }
    public PropertyValueTypeInfo ValueType { get; public set; }
    public PropertyMetadataTypeInfo MetadataType { get; private set; }
    public string TypeNameToWrite { get; public set; }
    public string WireName { get; private set; }
    public bool IsTopLevel { get; public set; }
    public PropertySerializationInfo(IEdmModel model, string name, IEdmStructuredType owningType);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
private void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public PropertyValueTypeInfo get_ValueType();
    [CompilerGeneratedAttribute]
public void set_ValueType(PropertyValueTypeInfo value);
    [CompilerGeneratedAttribute]
public PropertyMetadataTypeInfo get_MetadataType();
    [CompilerGeneratedAttribute]
private void set_MetadataType(PropertyMetadataTypeInfo value);
    [CompilerGeneratedAttribute]
public string get_TypeNameToWrite();
    [CompilerGeneratedAttribute]
public void set_TypeNameToWrite(string value);
    [CompilerGeneratedAttribute]
public string get_WireName();
    [CompilerGeneratedAttribute]
private void set_WireName(string value);
    public bool get_IsTopLevel();
    public void set_IsTopLevel(bool value);
}
internal class Microsoft.OData.PropertyValueTypeInfo : object {
    [CompilerGeneratedAttribute]
private IEdmTypeReference <TypeReference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrimitive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsComplex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private EdmPrimitiveTypeKind <PrimitiveTypeKind>k__BackingField;
    public IEdmTypeReference TypeReference { get; private set; }
    public string FullName { get; private set; }
    public bool IsPrimitive { get; private set; }
    public bool IsComplex { get; private set; }
    public string TypeName { get; private set; }
    public EdmPrimitiveTypeKind PrimitiveTypeKind { get; private set; }
    public PropertyValueTypeInfo(string typeName, IEdmTypeReference typeReference);
    [CompilerGeneratedAttribute]
public IEdmTypeReference get_TypeReference();
    [CompilerGeneratedAttribute]
private void set_TypeReference(IEdmTypeReference value);
    [CompilerGeneratedAttribute]
public string get_FullName();
    [CompilerGeneratedAttribute]
private void set_FullName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsPrimitive();
    [CompilerGeneratedAttribute]
private void set_IsPrimitive(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsComplex();
    [CompilerGeneratedAttribute]
private void set_IsComplex(bool value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
private void set_TypeName(string value);
    [CompilerGeneratedAttribute]
public EdmPrimitiveTypeKind get_PrimitiveTypeKind();
    [CompilerGeneratedAttribute]
private void set_PrimitiveTypeKind(EdmPrimitiveTypeKind value);
}
internal class Microsoft.OData.RawValueWriter : object {
    private ODataMessageWriterSettings settings;
    private Stream stream;
    private Encoding encoding;
    private TextWriter textWriter;
    private JsonWriter jsonWriter;
    internal TextWriter TextWriter { get; }
    internal JsonWriter JsonWriter { get; }
    internal RawValueWriter(ODataMessageWriterSettings settings, Stream stream, Encoding encoding);
    internal TextWriter get_TextWriter();
    internal JsonWriter get_JsonWriter();
    public sealed virtual void Dispose();
    public sealed virtual ValueTask DisposeAsync();
    internal void Start();
    internal void End();
    internal void WriteRawValue(object value);
    internal void Flush();
    internal Task StartAsync();
    internal Task EndAsync();
    internal Task WriteRawValueAsync(object value);
    internal Task FlushAsync();
    private void InitializeTextWriter();
    [AsyncStateMachineAttribute("Microsoft.OData.RawValueWriter/<<DisposeAsync>g__DisposeInnerAsync|11_0>d")]
[CompilerGeneratedAttribute]
private ValueTask <DisposeAsync>g__DisposeInnerAsync|11_0();
    [AsyncStateMachineAttribute("Microsoft.OData.RawValueWriter/<<StartAsync>g__StartInnerAsync|16_0>d")]
[CompilerGeneratedAttribute]
private Task <StartAsync>g__StartInnerAsync|16_0();
}
internal static class Microsoft.OData.ReaderUtils : object {
    internal static EdmTypeKind GetExpectedTypeKind(IEdmTypeReference expectedTypeReference, bool enablePrimitiveTypeConversion);
    internal static ODataResource CreateNewResource();
    internal static ODataDeletedResource CreateDeletedResource(Uri id, DeltaDeletedEntryReason reason);
    internal static void CheckForDuplicateNestedResourceInfoNameAndSetAssociationLink(PropertyAndAnnotationCollector propertyAndAnnotationCollector, ODataNestedResourceInfo nestedResourceInfo);
    internal static void CheckForDuplicateAssociationLinkAndUpdateNestedResourceInfo(PropertyAndAnnotationCollector propertyAndAnnotationCollector, string associationLinkName, Uri associationLinkUrl);
    [SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
internal static string GetExpectedPropertyName(IEdmStructuralProperty expectedProperty);
    internal static string RemovePrefixOfTypeName(string typeName);
    internal static string AddEdmPrefixOfTypeName(string typeName);
}
internal static class Microsoft.OData.ReaderValidationUtils : object {
    internal static void ValidateMessageReaderSettings(ODataMessageReaderSettings messageReaderSettings, bool readingResponse);
    internal static void ValidateEntityReferenceLink(ODataEntityReferenceLink link);
    internal static void ValidateStreamReferenceProperty(IODataStreamReferenceInfo streamInfo, string propertyName, IEdmStructuredType structuredType, IEdmProperty streamEdmProperty, bool throwOnUndeclaredLinkProperty);
    internal static void ValidateNullValue(IEdmTypeReference expectedTypeReference, bool enablePrimitiveTypeConversion, bool validateNullValue, string propertyName, Nullable`1<bool> isDynamicProperty);
    internal static IEdmProperty ValidatePropertyDefined(string propertyName, IEdmStructuredType owningStructuredType, bool throwOnUndeclaredPropertyForNonOpenType, bool enablePropertyNameCaseInsensitive);
    internal static ODataException GetPrimitiveTypeConversionException(IEdmPrimitiveTypeReference targetTypeReference, Exception innerException, string stringValue);
    internal static IEdmType ResolvePayloadTypeName(IEdmModel model, IEdmTypeReference expectedTypeReference, string payloadTypeName, EdmTypeKind expectedTypeKind, Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver, EdmTypeKind& payloadTypeKind);
    internal static IEdmTypeReference ResolvePayloadTypeNameAndComputeTargetType(EdmTypeKind expectedTypeKind, Nullable`1<bool> expectStructuredType, IEdmType defaultPrimitivePayloadType, IEdmTypeReference expectedTypeReference, string payloadTypeName, IEdmModel model, Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver, bool throwIfTypeConflictsWithMetadata, bool enablePrimitiveTypeConversion, Func`1<EdmTypeKind> typeKindFromPayloadFunc, EdmTypeKind& targetTypeKind, ODataTypeAnnotation& typeAnnotation);
    internal static IEdmTypeReference ResolveAndValidatePrimitiveTargetType(IEdmTypeReference expectedTypeReference, EdmTypeKind payloadTypeKind, IEdmType payloadType, string payloadTypeName, IEdmType defaultPayloadType, IEdmModel model, Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver, bool enablePrimitiveTypeConversion, bool throwIfTypeConflictsWithMetadata);
    internal static IEdmTypeReference ResolveAndValidateNonPrimitiveTargetType(EdmTypeKind expectedTypeKind, IEdmTypeReference expectedTypeReference, EdmTypeKind payloadTypeKind, IEdmType payloadType, string payloadTypeName, IEdmModel model, Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver, bool throwIfTypeConflictsWithMetadata);
    internal static void ValidateEncodingSupportedInBatch(Encoding encoding);
    internal static void ValidateEncodingSupportedInAsync(Encoding encoding);
    internal static void ValidateResourceSetOrResourceContextUri(ODataJsonContextUriParseResult contextUriParseResult, Scope scope, bool updateScope);
    internal static IEdmTypeReference ValidateCollectionContextUriAndGetPayloadItemTypeReference(ODataJsonContextUriParseResult contextUriParseResult, IEdmTypeReference expectedItemTypeReference);
    internal static void ValidateOperationProperty(object propertyValue, string propertyName, string metadata, string operationsHeader);
    private static IEdmTypeReference ResolveAndValidateTargetTypeWithNoExpectedType(EdmTypeKind expectedTypeKind, IEdmType payloadType);
    private static IEdmTypeReference ResolveAndValidateTargetTypeStrictValidationDisabled(EdmTypeKind expectedTypeKind, IEdmTypeReference expectedTypeReference, IEdmType payloadType);
    private static IEdmTypeReference ResolveAndValidateTargetTypeStrictValidationEnabled(EdmTypeKind expectedTypeKind, IEdmTypeReference expectedTypeReference, IEdmType payloadType);
    private static void VerifyPayloadTypeDefined(string payloadTypeName, IEdmType payloadType);
    private static void VerifyComplexType(IEdmTypeReference expectedTypeReference, IEdmType payloadType, bool failIfNotRelated);
    private static void VerifyCollectionComplexItemType(IEdmTypeReference expectedTypeReference, IEdmType payloadType);
    private static ODataTypeAnnotation CreateODataTypeAnnotation(string payloadTypeName, IEdmType payloadType, IEdmTypeReference targetTypeReference);
    private static EdmTypeKind ComputeTargetTypeKind(IEdmTypeReference expectedTypeReference, bool forResource, string payloadTypeName, EdmTypeKind payloadTypeKind, Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver, bool throwIfTypeConflictsWithMetadata, bool enablePrimitiveTypeConversion, Func`1<EdmTypeKind> typeKindFromPayloadFunc);
    private static bool ShouldValidatePayloadTypeKind(Func`3<IEdmType, string, IEdmType> clientCustomTypeResolver, bool throwIfTypeConflictsWithMetadata, bool enablePrimitiveTypeConversion, IEdmTypeReference expectedValueTypeReference, EdmTypeKind payloadTypeKind);
    private static void ValidateNullValueAllowed(IEdmTypeReference expectedValueTypeReference, bool validateNullValue, string propertyName, Nullable`1<bool> isDynamicProperty);
    private static void ThrowNullValueForNonNullableTypeException(IEdmTypeReference expectedValueTypeReference, string propertyName);
    private static void ThrowNullValueForNullableTypeException(IEdmTypeReference expectedValueTypeReference, string propertyName);
    private static void ValidateResourceSetContextUri(ODataJsonContextUriParseResult contextUriParseResult, Scope scope, bool updateScope);
}
internal class Microsoft.OData.ReaderValidator : object {
    private ODataMessageReaderSettings settings;
    internal ReaderValidator(ODataMessageReaderSettings settings);
    public virtual void ValidateMediaResource(ODataResourceBase resource, IEdmEntityType resourceType);
    public sealed virtual PropertyAndAnnotationCollector CreatePropertyAndAnnotationCollector();
    public sealed virtual void ValidateNullValue(IEdmTypeReference expectedTypeReference, bool validateNullValue, string propertyName, Nullable`1<bool> isDynamicProperty);
    public sealed virtual IEdmTypeReference ResolvePayloadTypeNameAndComputeTargetType(EdmTypeKind expectedTypeKind, Nullable`1<bool> expectStructuredType, IEdmType defaultPrimitivePayloadType, IEdmTypeReference expectedTypeReference, string payloadTypeName, IEdmModel model, Func`1<EdmTypeKind> typeKindFromPayloadFunc, EdmTypeKind& targetTypeKind, ODataTypeAnnotation& typeAnnotation);
    public sealed virtual IEdmProperty ValidatePropertyDefined(string propertyName, IEdmStructuredType owningStructuredType);
    public sealed virtual void ValidateStreamReferenceProperty(IODataStreamReferenceInfo streamInfo, string propertyName, IEdmStructuredType structuredType, IEdmProperty streamEdmProperty);
}
internal class Microsoft.OData.ReadOnlyEnumerable : object {
    private IEnumerable sourceEnumerable;
    internal ReadOnlyEnumerable(IEnumerable sourceEnumerable);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class Microsoft.OData.ReadOnlyEnumerable`1 : ReadOnlyEnumerable {
    private IList`1<T> sourceList;
    private static SimpleLazy`1<ReadOnlyEnumerable`1<T>> EmptyInstance;
    internal ReadOnlyEnumerable`1(IList`1<T> sourceList);
    private static ReadOnlyEnumerable`1();
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
    internal static ReadOnlyEnumerable`1<T> Empty();
    internal void AddToSourceList(T itemToAdd);
}
[ExtensionAttribute]
internal static class Microsoft.OData.ReadOnlyEnumerableExtensions : object {
    [ExtensionAttribute]
internal static bool IsEmptyReadOnlyEnumerable(IEnumerable`1<T> source);
    [ExtensionAttribute]
internal static ReadOnlyEnumerable`1<T> ToReadOnlyEnumerable(IEnumerable`1<T> source, string collectionName);
    [ExtensionAttribute]
internal static ReadOnlyEnumerable`1<T> GetOrCreateReadOnlyEnumerable(IEnumerable`1<T> source, string collectionName);
    [ExtensionAttribute]
internal static ReadOnlyEnumerable`1<T> ConcatToReadOnlyEnumerable(IEnumerable`1<T> source, string collectionName, T item);
}
internal class Microsoft.OData.Ref`1 : object {
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public T Value { get; public set; }
    public Ref`1(T value);
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(T value);
}
internal class Microsoft.OData.ReferenceEqualityComparer`1 : object {
    private static ReferenceEqualityComparer`1<T> instance;
    internal static ReferenceEqualityComparer`1<T> Instance { get; }
    internal static ReferenceEqualityComparer`1<T> get_Instance();
    public sealed virtual bool Equals(T x, T y);
    public sealed virtual int GetHashCode(T obj);
}
internal class Microsoft.OData.ResourceSetWithoutExpectedTypeValidator : object {
    private IEdmType itemType;
    public ResourceSetWithoutExpectedTypeValidator(IEdmType memberType);
    internal void ValidateResource(IEdmType itemType);
}
internal class Microsoft.OData.SelectedPropertiesNode : object {
    internal static SelectedPropertiesNode Empty;
    internal static SelectedPropertiesNode EntireSubtree;
    private bool isExpandedNavigationProperty;
    private static Dictionary`2<string, IEdmStructuralProperty> EmptyStreamProperties;
    private static IEnumerable`1<IEdmNavigationProperty> EmptyNavigationProperties;
    private SelectionType selectionType;
    private IEdmStructuredType structuredType;
    private IEdmModel edmModel;
    private static char PathSeparator;
    private static char ItemSeparator;
    private static string StarSegment;
    private HashSet`1<string> selectedProperties;
    private Dictionary`2<string, SelectedPropertiesNode> children;
    private bool hasWildcard;
    private string nodeName;
    internal SelectedPropertiesNode(string selectClause, IEdmStructuredType structuredType, IEdmModel edmModel);
    internal SelectedPropertiesNode(SelectionType selectionType);
    private SelectedPropertiesNode(SelectionType selectionType, bool isExpandedNavigationProperty);
    private static SelectedPropertiesNode();
    internal static SelectedPropertiesNode Create(string selectQueryOption, IEdmStructuredType structuredType, IEdmModel edmModel);
    internal static SelectedPropertiesNode Create(string selectQueryOption);
    internal static SelectedPropertiesNode Create(SelectExpandClause selectExpandClause);
    internal static SelectedPropertiesNode CombineNodes(SelectedPropertiesNode left, SelectedPropertiesNode right);
    internal SelectedPropertiesNode GetSelectedPropertiesForNavigationProperty(IEdmStructuredType structuredType, string navigationPropertyName);
    internal IEnumerable`1<IEdmNavigationProperty> GetSelectedNavigationProperties(IEdmStructuredType structuredType);
    internal IDictionary`2<string, IEdmStructuralProperty> GetSelectedStreamProperties(IEdmEntityType entityType);
    internal bool IsOperationSelected(IEdmStructuredType structuredType, IEdmOperation operation, bool mustBeNamespaceQualified);
    internal bool IsEntireSubtree();
    private void Parse(string selectClause);
    private void DetermineSelectionType();
    private static String[] GetTopLevelItems(string selectClause);
    [IteratorStateMachineAttribute("Microsoft.OData.SelectedPropertiesNode/<GetBaseTypesAndSelf>d__31")]
private static IEnumerable`1<IEdmStructuredType> GetBaseTypesAndSelf(IEdmStructuredType structuredType);
    private static HashSet`1<string> CreateSelectedPropertiesHashSet(IEnumerable`1<string> properties);
    private static HashSet`1<string> CreateSelectedPropertiesHashSet();
    [IteratorStateMachineAttribute("Microsoft.OData.SelectedPropertiesNode/<GetPossibleMatchesForSelectedOperation>d__34")]
private static IEnumerable`1<string> GetPossibleMatchesForSelectedOperation(IEdmOperation operation, bool mustBeNamespaceQualified);
    private bool IsValidExpandToken(string item);
    private bool IsNavigationPropertyToken(string token);
    [IteratorStateMachineAttribute("Microsoft.OData.SelectedPropertiesNode/<GetMatchingTypeSegments>d__37")]
private IEnumerable`1<SelectedPropertiesNode> GetMatchingTypeSegments(IEdmStructuredType structuredType);
    [IteratorStateMachineAttribute("Microsoft.OData.SelectedPropertiesNode/<GetSelectePropertiesForTypeSegmentsNavigationProperties>d__38")]
private static IEnumerable`1<SelectedPropertiesNode> GetSelectePropertiesForTypeSegmentsNavigationProperties(IEnumerable`1<SelectedPropertiesNode> typeSegments, IEdmStructuredType structuredType, string navigationPropertyName);
    private void ParsePathSegment(String[] segments, int index);
    private SelectedPropertiesNode EnsureChildNode(string segmentName, bool isExpandedNavigationProperty);
    private bool IsOperationSelectedAtThisLevel(IEdmOperation operation, bool mustBeNamespaceQualified);
    private static SelectedPropertiesNode CreateFromSelectExpandClause(SelectExpandClause selectExpandClause);
    private static SelectedPropertiesNode ProcessSubExpand(string nodeName, SelectedPropertiesNode subExpandNode);
    private static SelectedPropertiesNode CombineSelectAndExpandResult(IEnumerable`1<string> selectList, IEnumerable`1<SelectedPropertiesNode> expandList);
    [CompilerGeneratedAttribute]
private bool <IsOperationSelectedAtThisLevel>b__41_0(string possibleMatch);
}
internal class Microsoft.OData.SelectExpandClauseToStringBuilder : SelectItemTranslator`1<string> {
    public string TranslateSelectExpandClause(SelectExpandClause selectExpandClause, bool firstFlag);
    public virtual string Translate(WildcardSelectItem item);
    public virtual string Translate(PathSelectItem item);
    public virtual string Translate(NamespaceQualifiedWildcardSelectItem item);
    public virtual string Translate(ExpandedNavigationSelectItem item);
    public virtual string Translate(ExpandedReferenceSelectItem item);
    public virtual string Translate(ExpandedCountSelectItem item);
}
public enum Microsoft.OData.ServiceLifetime : Enum {
    public int value__;
    public static ServiceLifetime Singleton;
    public static ServiceLifetime Scoped;
    public static ServiceLifetime Transient;
}
internal class Microsoft.OData.SimpleLazy`1 : object {
    private object mutex;
    private Func`1<T> factory;
    private T value;
    private bool valueCreated;
    internal T Value { get; }
    internal SimpleLazy`1(Func`1<T> factory);
    internal SimpleLazy`1(Func`1<T> factory, bool isThreadSafe);
    internal T get_Value();
    private void CreateValue();
}
[ExtensionAttribute]
internal static class Microsoft.OData.StreamExtensions : object {
    [ExtensionAttribute]
public static Byte[] ReadAllBytes(Stream inStream);
    [AsyncStateMachineAttribute("Microsoft.OData.StreamExtensions/<ReadAllBytesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<Byte[]> ReadAllBytesAsync(Stream inStream);
}
internal class Microsoft.OData.StreamReaderDelegate : MulticastDelegate {
    public StreamReaderDelegate(object object, IntPtr method);
    public virtual int Invoke(Char[] chars, int offset, int maxLength);
    public virtual IAsyncResult BeginInvoke(Char[] chars, int offset, int maxLength, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal static class Microsoft.OData.Strings : object {
    internal static string ExceptionUtils_ArgumentStringEmpty { get; }
    internal static string ODataRequestMessage_AsyncNotAvailable { get; }
    internal static string ODataRequestMessage_StreamTaskIsNull { get; }
    internal static string ODataRequestMessage_MessageStreamIsNull { get; }
    internal static string ODataResponseMessage_AsyncNotAvailable { get; }
    internal static string ODataResponseMessage_StreamTaskIsNull { get; }
    internal static string ODataResponseMessage_MessageStreamIsNull { get; }
    internal static string AsyncBufferedStream_WriterDisposedWithoutFlush { get; }
    internal static string ODataOutputContext_MetadataDocumentUriMissing { get; }
    internal static string ODataWriterCore_StreamNotDisposed { get; }
    internal static string ODataWriterCore_DeltaResourceWithoutIdOrKeyProperties { get; }
    internal static string ODataWriterCore_QueryCountInRequest { get; }
    internal static string ODataWriterCore_QueryNextLinkInRequest { get; }
    internal static string ODataWriterCore_QueryDeltaLinkInRequest { get; }
    internal static string ODataWriterCore_CannotWriteDeltaWithResourceSetWriter { get; }
    internal static string ODataWriterCore_NestedContentNotAllowedIn40DeletedEntry { get; }
    internal static string ODataWriterCore_CannotWriteTopLevelResourceSetWithResourceWriter { get; }
    internal static string ODataWriterCore_CannotWriteTopLevelResourceWithResourceSetWriter { get; }
    internal static string ODataWriterCore_SyncCallOnAsyncWriter { get; }
    internal static string ODataWriterCore_AsyncCallOnSyncWriter { get; }
    internal static string ODataWriterCore_EntityReferenceLinkWithoutNavigationLink { get; }
    internal static string ODataWriterCore_DeferredLinkInRequest { get; }
    internal static string ODataWriterCore_MultipleItemsInNestedResourceInfoWithContent { get; }
    internal static string ODataWriterCore_DeltaLinkNotSupportedOnExpandedResourceSet { get; }
    internal static string ODataWriterCore_PathInODataUriMustBeSetWhenWritingContainedElement { get; }
    internal static string ODataJsonWriter_UnsupportedValueInCollection { get; }
    internal static string ODataJsonWriter_UnsupportedDateTimeFormat { get; }
    internal static string ODataException_GeneralError { get; }
    internal static string ODataErrorException_GeneralError { get; }
    internal static string ODataUriParserException_GeneralError { get; }
    internal static string ODataMessageWriter_WriterAlreadyUsed { get; }
    internal static string ODataMessageWriter_EntityReferenceLinksInRequestNotAllowed { get; }
    internal static string ODataMessageWriter_ErrorPayloadInRequest { get; }
    internal static string ODataMessageWriter_ServiceDocumentInRequest { get; }
    internal static string ODataMessageWriter_MetadataDocumentInRequest { get; }
    internal static string ODataMessageWriter_DeltaInRequest { get; }
    internal static string ODataMessageWriter_AsyncInRequest { get; }
    internal static string ODataMessageWriter_CannotWriteTopLevelNull { get; }
    internal static string ODataMessageWriter_CannotWriteNullInRawFormat { get; }
    internal static string ODataMessageWriter_WriteErrorAlreadyCalled { get; }
    internal static string ODataMessageWriter_CannotWriteInStreamErrorForRawValues { get; }
    internal static string ODataMessageWriter_CannotWriteMetadataWithoutModel { get; }
    internal static string ODataMessageWriter_CannotSpecifyOperationWithoutModel { get; }
    internal static string ODataMessageWriterSettings_MessageWriterSettingsXmlCustomizationCallbacksMustBeSpecifiedBoth { get; }
    internal static string ODataCollectionWriterCore_SyncCallOnAsyncWriter { get; }
    internal static string ODataCollectionWriterCore_AsyncCallOnSyncWriter { get; }
    internal static string ODataParameterWriter_InStreamErrorNotSupported { get; }
    internal static string ODataParameterWriter_CannotCreateParameterWriterOnResponseMessage { get; }
    internal static string ODataParameterWriterCore_SyncCallOnAsyncWriter { get; }
    internal static string ODataParameterWriterCore_AsyncCallOnSyncWriter { get; }
    internal static string ODataParameterWriterCore_CannotWriteStart { get; }
    internal static string ODataParameterWriterCore_CannotWriteParameter { get; }
    internal static string ODataParameterWriterCore_CannotWriteEnd { get; }
    internal static string ODataParameterWriterCore_CannotWriteInErrorOrCompletedState { get; }
    internal static string ODataBatchWriter_FlushOrFlushAsyncCalledInStreamRequestedState { get; }
    internal static string ODataBatchWriter_CannotCompleteBatchWithActiveChangeSet { get; }
    internal static string ODataBatchWriter_CannotStartChangeSetWithActiveChangeSet { get; }
    internal static string ODataBatchWriter_CannotCompleteChangeSetWithoutActiveChangeSet { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromStart { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromBatchStarted { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromChangeSetStarted { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromOperationCreated { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromOperationContentStreamRequested { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromOperationContentStreamDisposed { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromChangeSetCompleted { get; }
    internal static string ODataBatchWriter_InvalidTransitionFromBatchCompleted { get; }
    internal static string ODataBatchWriter_CannotCreateRequestOperationWhenWritingResponse { get; }
    internal static string ODataBatchWriter_CannotCreateResponseOperationWhenWritingRequest { get; }
    internal static string ODataBatchWriter_SyncCallOnAsyncWriter { get; }
    internal static string ODataBatchWriter_AsyncCallOnSyncWriter { get; }
    internal static string ODataBatchWriter_CannotWriteInStreamErrorForBatch { get; }
    internal static string ODataBatchOperationMessage_VerifyNotCompleted { get; }
    internal static string ODataBatchOperationStream_Disposed { get; }
    internal static string ODataBatchReader_CannotCreateRequestOperationWhenReadingResponse { get; }
    internal static string ODataBatchReader_CannotCreateResponseOperationWhenReadingRequest { get; }
    internal static string ODataBatchReader_OperationRequestMessageAlreadyCreated { get; }
    internal static string ODataBatchReader_OperationResponseMessageAlreadyCreated { get; }
    internal static string ODataBatchReader_CannotUseReaderWhileOperationStreamActive { get; }
    internal static string ODataBatchReader_SyncCallOnAsyncReader { get; }
    internal static string ODataBatchReader_AsyncCallOnSyncReader { get; }
    internal static string ODataBatchReader_NoMessageWasCreatedForOperation { get; }
    internal static string ODataBatchReader_ReaderModeNotInitilized { get; }
    internal static string ODataBatchReader_JsonBatchTopLevelPropertyMissing { get; }
    internal static string ODataBatch_GroupIdOrChangeSetIdCannotBeNull { get; }
    internal static string ODataBatchReader_ReaderStreamChangesetBoundaryCannotBeNull { get; }
    internal static string ODataBatchReaderStream_MissingContentTypeHeader { get; }
    internal static string ODataBatchReaderStream_NestedChangesetsAreNotSupported { get; }
    internal static string ODataBatchReaderStream_UnexpectedEndOfInput { get; }
    internal static string ODataAsyncWriter_CannotCreateResponseWhenNotWritingResponse { get; }
    internal static string ODataAsyncWriter_CannotCreateResponseMoreThanOnce { get; }
    internal static string ODataAsyncWriter_SyncCallOnAsyncWriter { get; }
    internal static string ODataAsyncWriter_AsyncCallOnSyncWriter { get; }
    internal static string ODataAsyncWriter_CannotWriteInStreamErrorForAsync { get; }
    internal static string ODataAsyncReader_CannotCreateResponseWhenNotReadingResponse { get; }
    internal static string ODataAsyncReader_UnexpectedEndOfInput { get; }
    internal static string ODataAsyncReader_SyncCallOnAsyncReader { get; }
    internal static string ODataAsyncReader_AsyncCallOnSyncReader { get; }
    internal static string HttpUtils_MediaTypeMissingParameterName { get; }
    internal static string HttpUtils_ContentTypeMissing { get; }
    internal static string ODataUriUtils_ConvertFromUriLiteralTypeRefWithoutModel { get; }
    internal static string ODataUtils_UnsupportedVersionNumber { get; }
    internal static string ODataUtils_ModelDoesNotHaveContainer { get; }
    internal static string ReaderValidationUtils_EntityReferenceLinkMissingUri { get; }
    internal static string ReaderValidationUtils_ValueWithoutType { get; }
    internal static string ReaderValidationUtils_ResourceWithoutType { get; }
    internal static string ReaderValidationUtils_UndeclaredPropertyBehaviorKindSpecifiedOnRequest { get; }
    internal static string ODataMessageReader_ReaderAlreadyUsed { get; }
    internal static string ODataMessageReader_ErrorPayloadInRequest { get; }
    internal static string ODataMessageReader_ServiceDocumentInRequest { get; }
    internal static string ODataMessageReader_MetadataDocumentInRequest { get; }
    internal static string ODataMessageReader_DeltaInRequest { get; }
    internal static string ODataMessageReader_ExpectedPropertyTypeEntityCollectionKind { get; }
    internal static string ODataMessageReader_ExpectedPropertyTypeEntityKind { get; }
    internal static string ODataMessageReader_ExpectedPropertyTypeStream { get; }
    internal static string ODataMessageReader_NoneOrEmptyContentTypeHeader { get; }
    internal static string ODataMessageReader_GetFormatCalledBeforeReadingStarted { get; }
    internal static string ODataMessageReader_DetectPayloadKindMultipleTimes { get; }
    internal static string ODataMessageReader_PayloadKindDetectionRunning { get; }
    internal static string ODataMessageReader_PayloadKindDetectionInServerMode { get; }
    internal static string ODataMessageReader_ParameterPayloadInResponse { get; }
    internal static string ODataAsyncResponseMessage_MustNotModifyMessage { get; }
    internal static string ODataMessage_MustNotModifyMessage { get; }
    internal static string ODataReaderCore_SyncCallOnAsyncReader { get; }
    internal static string ODataReaderCore_AsyncCallOnSyncReader { get; }
    internal static string ODataReaderCore_CreateReadStreamCalledInInvalidState { get; }
    internal static string ODataReaderCore_CreateTextReaderCalledInInvalidState { get; }
    internal static string ODataReaderCore_ReadCalledWithOpenStream { get; }
    internal static string ODataCollectionReaderCore_SyncCallOnAsyncReader { get; }
    internal static string ODataCollectionReaderCore_AsyncCallOnSyncReader { get; }
    internal static string ODataParameterReaderCore_SyncCallOnAsyncReader { get; }
    internal static string ODataParameterReaderCore_AsyncCallOnSyncReader { get; }
    internal static string ValidationUtils_AssociationLinkMustSpecifyName { get; }
    internal static string ValidationUtils_AssociationLinkMustSpecifyUrl { get; }
    internal static string ValidationUtils_TypeNameMustNotBeEmpty { get; }
    internal static string ValidationUtils_ResourceMustSpecifyUrl { get; }
    internal static string ValidationUtils_ServiceDocumentElementUrlMustNotBeNull { get; }
    internal static string ValidationUtils_NonNullableCollectionElementsMustNotBeNull { get; }
    internal static string ValidationUtils_LinkMustSpecifyName { get; }
    internal static string ValidationUtils_NestedCollectionsAreNotSupported { get; }
    internal static string ValidationUtils_StreamReferenceValuesNotSupportedInCollections { get; }
    internal static string ValidationUtils_WorkspaceResourceMustNotContainNullItem { get; }
    internal static string WriterValidationUtils_PropertyMustNotBeNull { get; }
    internal static string WriterValidationUtils_PropertiesMustHaveNonEmptyName { get; }
    internal static string WriterValidationUtils_MissingTypeNameWithMetadata { get; }
    internal static string WriterValidationUtils_NextPageLinkInRequest { get; }
    internal static string WriterValidationUtils_DefaultStreamWithContentTypeWithoutReadLink { get; }
    internal static string WriterValidationUtils_DefaultStreamWithReadLinkWithoutContentType { get; }
    internal static string WriterValidationUtils_StreamReferenceValueMustHaveEditLinkOrReadLink { get; }
    internal static string WriterValidationUtils_StreamReferenceValueMustHaveEditLinkToHaveETag { get; }
    internal static string WriterValidationUtils_StreamReferenceValueEmptyContentType { get; }
    internal static string WriterValidationUtils_EntriesMustHaveNonEmptyId { get; }
    internal static string WriterValidationUtils_EntityReferenceLinkUrlMustNotBeNull { get; }
    internal static string WriterValidationUtils_EntityReferenceLinksLinkMustNotBeNull { get; }
    internal static string WriterValidationUtils_MessageWriterSettingsJsonPaddingOnRequestMessage { get; }
    internal static string ODataMetadataOutputContext_NotSupportJsonMetadata { get; }
    internal static string ODataMetadataBuilder_MissingParentIdOrContextUrl { get; }
    internal static string ODataJsonInputContext_PayloadKindDetectionForRequest { get; }
    internal static string ODataJsonInputContext_NoEntitySetForRequest { get; }
    internal static string ODataJsonInputContext_ModelRequiredForReading { get; }
    internal static string ODataJsonInputContext_ItemTypeRequiredForCollectionReaderInRequests { get; }
    internal static string ODataJsonDeserializer_ContextLinkNotFoundAsFirstProperty { get; }
    internal static string ODataJsonWriter_EntityReferenceLinkAfterResourceSetInRequest { get; }
    internal static string ODataJsonWriter_InstanceAnnotationNotSupportedOnExpandedResourceSet { get; }
    internal static string ODataJsonPropertyAndValueSerializer_NoExpectedTypeOrTypeNameSpecifiedForResourceValueRequest { get; }
    internal static string ODataJsonPropertyAndValueSerializer_NoExpectedTypeOrTypeNameSpecifiedForCollectionValueInRequest { get; }
    internal static string ODataResourceTypeContext_MetadataOrSerializationInfoMissing { get; }
    internal static string ODataResourceTypeContext_ODataResourceTypeNameMissing { get; }
    internal static string ODataContextUriBuilder_TypeNameMissingForTopLevelCollection { get; }
    internal static string ODataContextUriBuilder_StreamValueMustBePropertiesOfODataResource { get; }
    internal static string ODataContextUriBuilder_NavigationSourceOrTypeNameMissingForResourceOrResourceSet { get; }
    internal static string ODataContextUriBuilder_ODataUriMissingForIndividualProperty { get; }
    internal static string ODataContextUriBuilder_TypeNameMissingForProperty { get; }
    internal static string ODataJsonPropertyAndValueDeserializer_InvalidTopLevelPropertyPayload { get; }
    internal static string ODataJsonPropertyAndValueDeserializer_ResourceTypeAnnotationNotFirst { get; }
    internal static string ODataJsonReaderCoreUtils_CannotReadSpatialPropertyValue { get; }
    internal static string ODataJsonReader_UnexpectedPrimitiveValueForODataResource { get; }
    internal static string ODataJsonContextUriParser_NullMetadataDocumentUri { get; }
    internal static string ODataJsonContextUriParser_NoModel { get; }
    internal static string ODataJsonResourceDeserializer_ResourceTypeAnnotationNotFirst { get; }
    internal static string ODataJsonResourceDeserializer_UnexpectedDeletedEntryInResponsePayload { get; }
    internal static string ODataJsonResourceDeserializer_MetadataReferencePropertyInRequest { get; }
    internal static string ODataJsonEntityReferenceLinkDeserializer_PropertyAnnotationForEntityReferenceLinks { get; }
    internal static string ODataJsonParameterDeserializer_PropertyAnnotationForParameters { get; }
    internal static string SelectedPropertiesNode_StarSegmentNotLastSegment { get; }
    internal static string SelectedPropertiesNode_StarSegmentAfterTypeSegment { get; }
    internal static string ODataPrimitiveValue_CannotCreateODataPrimitiveValueFromNull { get; }
    internal static string ODataInstanceAnnotation_ValueCannotBeODataStreamReferenceValue { get; }
    internal static string ODataJsonValueSerializer_MissingTypeNameOnCollection { get; }
    internal static string ODataJsonValueSerializer_MissingRawValueOnUntyped { get; }
    internal static string InstanceAnnotation_MissingTermAttributeOnAnnotationElement { get; }
    internal static string InstanceAnnotation_MultipleAttributeValueNotationAttributes { get; }
    internal static string SyntacticTree_MaxDepthInvalid { get; }
    internal static string UriQueryExpressionParser_TooDeep { get; }
    internal static string UriQueryExpressionParser_IllegalQueryOptioninDollarCount { get; }
    internal static string UriQueryPathParser_SyntaxError { get; }
    internal static string UriQueryPathParser_TooManySegments { get; }
    internal static string SelectionItemBinder_NonNavigationPathToken { get; }
    internal static string MetadataBinder_ParameterAliasValueExpressionNotSingleValue { get; }
    internal static string MetadataBinder_FilterExpressionNotSingleValue { get; }
    internal static string MetadataBinder_OrderByExpressionNotSingleValue { get; }
    internal static string MetadataBinder_PropertyAccessWithoutParentParameter { get; }
    internal static string MetadataBinder_LeftOperandNotSingleValue { get; }
    internal static string MetadataBinder_RightOperandNotCollectionValue { get; }
    internal static string MetadataBinder_CountSegmentNextTokenNotCollectionValue { get; }
    internal static string MetadataBinder_QueryOptionsBindStateCannotBeNull { get; }
    internal static string MetadataBinder_QueryOptionsBindMethodCannotBeNull { get; }
    internal static string MetadataBinder_LambdaParentMustBeCollection { get; }
    internal static string MetadataBinder_NavigationPropertyNotFollowingSingleEntityType { get; }
    internal static string MetadataBinder_AnyAllExpressionNotSingleValue { get; }
    internal static string MetadataBinder_CastOrIsOfFunctionWithoutATypeArgument { get; }
    internal static string MetadataBinder_CastOrIsOfCollectionsNotSupported { get; }
    internal static string MetadataBinder_CollectionOpenPropertiesNotSupportedInThisRelease { get; }
    internal static string AggregateTransformationNode_UnsupportedAggregateExpressions { get; }
    internal static string FunctionCallParser_DuplicateParameterOrEntityKeyName { get; }
    internal static string CastBinder_EnumOnlyCastToOrFromString { get; }
    internal static string SelectBinder_MultiLevelPathInSelect { get; }
    internal static string ExpandItemBinder_TraversingANonNormalizedTree { get; }
    internal static string ExpandItemBinder_TypeSegmentNotFollowedByPath { get; }
    internal static string ExpandItemBinder_PathTooDeep { get; }
    internal static string ExpandItemBinder_TraversingMultipleNavPropsInTheSamePath { get; }
    internal static string Nodes_CollectionNavigationNode_MustHaveSingleMultiplicity { get; }
    internal static string Nodes_CollectionNavigationNode_MustHaveManyMultiplicity { get; }
    internal static string Nodes_NonStaticEntitySetExpressionsAreNotSupportedInThisRelease { get; }
    internal static string Nodes_CollectionFunctionCallNode_ItemTypeMustBePrimitiveOrComplexOrEnum { get; }
    internal static string Nodes_EntityCollectionFunctionCallNode_ItemTypeMustBeAnEntity { get; }
    internal static string Nodes_SingleValueFunctionCallNode_ItemTypeMustBePrimitiveOrComplexOrEnum { get; }
    internal static string ExpandTreeNormalizer_NonPathInPropertyChain { get; }
    internal static string UriParser_EmptyParenthesis { get; }
    internal static string UriParser_RelativeUriMustBeRelative { get; }
    internal static string UriParser_NeedServiceRootForThisOverload { get; }
    internal static string UriParser_NegativeLimit { get; }
    internal static string UriValidator_ValidatorMustUseSameModelAsParser { get; }
    internal static string PathParser_CannotUseValueOnCollection { get; }
    internal static string ODataResourceSet_MustNotContainBothNextPageLinkAndDeltaLink { get; }
    internal static string ODataExpandPath_OnlyLastSegmentCanBeNavigationProperty { get; }
    internal static string ODataExpandPath_LastSegmentMustBeNavigationPropertyOrTypeSegment { get; }
    internal static string ODataSelectPath_CannotOnlyHaveTypeSegment { get; }
    internal static string ODataSelectPath_OperationSegmentCanOnlyBeLastSegment { get; }
    internal static string ODataSelectPath_NavPropSegmentCanOnlyBeLastSegment { get; }
    internal static string OperationSegment_ReturnTypeForMultipleOverloads { get; }
    internal static string OperationSegment_CannotReturnNull { get; }
    internal static string RequestUriProcessor_FilterPathSegmentSyntaxError { get; }
    internal static string RequestUriProcessor_OnlySingleOperationCanFollowEachPathSegment { get; }
    internal static string RequestUriProcessor_EmptySegmentInRequestUrl { get; }
    internal static string RequestUriProcessor_SyntaxError { get; }
    internal static string RequestUriProcessor_CountOnRoot { get; }
    internal static string RequestUriProcessor_FilterOnRoot { get; }
    internal static string RequestUriProcessor_EachOnRoot { get; }
    internal static string RequestUriProcessor_RefOnRoot { get; }
    internal static string BadRequest_ResourceCanBeCrossReferencedOnlyForBindOperation { get; }
    internal static string RequestUriProcessor_KeysMustBeNamed { get; }
    internal static string RequestUriProcessor_Forbidden { get; }
    internal static string RequestUriProcessor_OperationSegmentBoundToANonEntityType { get; }
    internal static string RequestUriProcessor_ComposableEscapeFunctionShouldHaveValidParameter { get; }
    internal static string ExceptionUtils_ArgumentStringNullOrEmpty { get; }
    internal static string ExpressionToken_OnlyRefAllowWithStarInExpand { get; }
    internal static string ExpressionToken_DollarCountNotAllowedInSelect { get; }
    internal static string ExpressionToken_NoPropAllowedAfterDollarCount { get; }
    internal static string ExpressionToken_NoPropAllowedAfterRef { get; }
    internal static string ExpressionToken_NoSegmentAllowedBeforeStarInExpand { get; }
    internal static string ExpressionLexer_UnbalancedBracketExpression { get; }
    internal static string UriPrimitiveTypeParsers_FailedToParseStringToGeography { get; }
    internal static string UriCustomTypeParsers_AddCustomUriTypeParserAlreadyExists { get; }
    internal static string JsonReader_MultipleTopLevelValues { get; }
    internal static string JsonReader_EndOfInputWithOpenScope { get; }
    internal static string JsonReader_UnrecognizedToken { get; }
    internal static string JsonReader_UnexpectedEndOfString { get; }
    internal static string JsonReader_MaxBufferReached { get; }
    internal static string JsonReader_CannotAccessValueInStreamState { get; }
    internal static string JsonReader_CannotCallReadInStreamState { get; }
    internal static string JsonReader_CannotCreateReadStream { get; }
    internal static string JsonReader_CannotCreateTextReader { get; }
    internal static string get_ExceptionUtils_ArgumentStringEmpty();
    internal static string get_ODataRequestMessage_AsyncNotAvailable();
    internal static string get_ODataRequestMessage_StreamTaskIsNull();
    internal static string get_ODataRequestMessage_MessageStreamIsNull();
    internal static string get_ODataResponseMessage_AsyncNotAvailable();
    internal static string get_ODataResponseMessage_StreamTaskIsNull();
    internal static string get_ODataResponseMessage_MessageStreamIsNull();
    internal static string get_AsyncBufferedStream_WriterDisposedWithoutFlush();
    internal static string ODataOutputContext_UnsupportedPayloadKindForFormat(object p0, object p1);
    internal static string ODataInputContext_UnsupportedPayloadKindForFormat(object p0, object p1);
    internal static string get_ODataOutputContext_MetadataDocumentUriMissing();
    internal static string ODataJsonSerializer_RelativeUriUsedWithoutMetadataDocumentUriOrMetadata(object p0);
    internal static string ODataWriter_RelativeUriUsedWithoutBaseUriSpecified(object p0);
    internal static string ODataWriter_StreamPropertiesMustBePropertiesOfODataResource(object p0);
    internal static string ODataWriterCore_InvalidStateTransition(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromStart(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromResource(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFrom40DeletedResource(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromNullResource(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromResourceSet(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromExpandedLink(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromCompleted(object p0, object p1);
    internal static string ODataWriterCore_InvalidTransitionFromError(object p0, object p1);
    internal static string ODataJsonDeltaWriter_InvalidTransitionFromNestedResource(object p0, object p1);
    internal static string ODataJsonDeltaWriter_InvalidTransitionToNestedResource(object p0, object p1);
    internal static string ODataJsonDeltaWriter_WriteStartExpandedResourceSetCalledInInvalidState(object p0);
    internal static string ODataWriterCore_WriteEndCalledInInvalidState(object p0);
    internal static string get_ODataWriterCore_StreamNotDisposed();
    internal static string get_ODataWriterCore_DeltaResourceWithoutIdOrKeyProperties();
    internal static string get_ODataWriterCore_QueryCountInRequest();
    internal static string get_ODataWriterCore_QueryNextLinkInRequest();
    internal static string get_ODataWriterCore_QueryDeltaLinkInRequest();
    internal static string get_ODataWriterCore_CannotWriteDeltaWithResourceSetWriter();
    internal static string get_ODataWriterCore_NestedContentNotAllowedIn40DeletedEntry();
    internal static string get_ODataWriterCore_CannotWriteTopLevelResourceSetWithResourceWriter();
    internal static string get_ODataWriterCore_CannotWriteTopLevelResourceWithResourceSetWriter();
    internal static string get_ODataWriterCore_SyncCallOnAsyncWriter();
    internal static string get_ODataWriterCore_AsyncCallOnSyncWriter();
    internal static string get_ODataWriterCore_EntityReferenceLinkWithoutNavigationLink();
    internal static string get_ODataWriterCore_DeferredLinkInRequest();
    internal static string get_ODataWriterCore_MultipleItemsInNestedResourceInfoWithContent();
    internal static string get_ODataWriterCore_DeltaLinkNotSupportedOnExpandedResourceSet();
    internal static string get_ODataWriterCore_PathInODataUriMustBeSetWhenWritingContainedElement();
    internal static string DuplicatePropertyNamesNotAllowed(object p0);
    internal static string DuplicateAnnotationNotAllowed(object p0);
    internal static string DuplicateAnnotationForPropertyNotAllowed(object p0, object p1);
    internal static string DuplicateAnnotationForInstanceAnnotationNotAllowed(object p0, object p1);
    internal static string PropertyAnnotationAfterTheProperty(object p0, object p1);
    internal static string ValueUtils_CannotConvertValueToPrimitive(object p0);
    internal static string ODataJsonWriter_UnsupportedValueType(object p0);
    internal static string get_ODataJsonWriter_UnsupportedValueInCollection();
    internal static string get_ODataJsonWriter_UnsupportedDateTimeFormat();
    internal static string get_ODataException_GeneralError();
    internal static string get_ODataErrorException_GeneralError();
    internal static string get_ODataUriParserException_GeneralError();
    internal static string ODataUrlValidationError_SelectRequired(object p0);
    internal static string ODataUrlValidationError_InvalidRule(object p0, object p1);
    internal static string get_ODataMessageWriter_WriterAlreadyUsed();
    internal static string get_ODataMessageWriter_EntityReferenceLinksInRequestNotAllowed();
    internal static string get_ODataMessageWriter_ErrorPayloadInRequest();
    internal static string get_ODataMessageWriter_ServiceDocumentInRequest();
    internal static string get_ODataMessageWriter_MetadataDocumentInRequest();
    internal static string get_ODataMessageWriter_DeltaInRequest();
    internal static string get_ODataMessageWriter_AsyncInRequest();
    internal static string get_ODataMessageWriter_CannotWriteTopLevelNull();
    internal static string get_ODataMessageWriter_CannotWriteNullInRawFormat();
    internal static string ODataMessageWriter_CannotSetHeadersWithInvalidPayloadKind(object p0);
    internal static string ODataMessageWriter_IncompatiblePayloadKinds(object p0, object p1);
    internal static string ODataMessageWriter_CannotWriteStreamPropertyAsTopLevelProperty(object p0);
    internal static string get_ODataMessageWriter_WriteErrorAlreadyCalled();
    internal static string get_ODataMessageWriter_CannotWriteInStreamErrorForRawValues();
    internal static string get_ODataMessageWriter_CannotWriteMetadataWithoutModel();
    internal static string get_ODataMessageWriter_CannotSpecifyOperationWithoutModel();
    internal static string ODataMessageWriter_JsonPaddingOnInvalidContentType(object p0);
    internal static string ODataMessageWriter_NonCollectionType(object p0);
    internal static string ODataMessageWriter_NotAllowedWriteTopLevelPropertyWithResourceValue(object p0);
    internal static string ODataMessageWriter_JsonWriterFactory_ReturnedNull(object p0, object p1);
    internal static string ODataMessageWriter_Buffer_Maximum_Size_Exceeded(object p0);
    internal static string get_ODataMessageWriterSettings_MessageWriterSettingsXmlCustomizationCallbacksMustBeSpecifiedBoth();
    internal static string ODataCollectionWriterCore_InvalidTransitionFromStart(object p0, object p1);
    internal static string ODataCollectionWriterCore_InvalidTransitionFromCollection(object p0, object p1);
    internal static string ODataCollectionWriterCore_InvalidTransitionFromItem(object p0, object p1);
    internal static string ODataCollectionWriterCore_WriteEndCalledInInvalidState(object p0);
    internal static string get_ODataCollectionWriterCore_SyncCallOnAsyncWriter();
    internal static string get_ODataCollectionWriterCore_AsyncCallOnSyncWriter();
    internal static string ODataBatch_InvalidHttpMethodForChangeSetRequest(object p0);
    internal static string ODataBatchOperationHeaderDictionary_KeyNotFound(object p0);
    internal static string ODataBatchOperationHeaderDictionary_DuplicateCaseInsensitiveKeys(object p0);
    internal static string get_ODataParameterWriter_InStreamErrorNotSupported();
    internal static string get_ODataParameterWriter_CannotCreateParameterWriterOnResponseMessage();
    internal static string get_ODataParameterWriterCore_SyncCallOnAsyncWriter();
    internal static string get_ODataParameterWriterCore_AsyncCallOnSyncWriter();
    internal static string get_ODataParameterWriterCore_CannotWriteStart();
    internal static string get_ODataParameterWriterCore_CannotWriteParameter();
    internal static string get_ODataParameterWriterCore_CannotWriteEnd();
    internal static string get_ODataParameterWriterCore_CannotWriteInErrorOrCompletedState();
    internal static string ODataParameterWriterCore_DuplicatedParameterNameNotAllowed(object p0);
    internal static string ODataParameterWriterCore_CannotWriteValueOnNonValueTypeKind(object p0, object p1);
    internal static string ODataParameterWriterCore_CannotWriteValueOnNonSupportedValueType(object p0, object p1);
    internal static string ODataParameterWriterCore_CannotCreateCollectionWriterOnNonCollectionTypeKind(object p0, object p1);
    internal static string ODataParameterWriterCore_CannotCreateResourceWriterOnNonEntityOrComplexTypeKind(object p0, object p1);
    internal static string ODataParameterWriterCore_CannotCreateResourceSetWriterOnNonStructuredCollectionTypeKind(object p0, object p1);
    internal static string ODataParameterWriterCore_ParameterNameNotFoundInOperation(object p0, object p1);
    internal static string ODataParameterWriterCore_MissingParameterInParameterPayload(object p0, object p1);
    internal static string get_ODataBatchWriter_FlushOrFlushAsyncCalledInStreamRequestedState();
    internal static string get_ODataBatchWriter_CannotCompleteBatchWithActiveChangeSet();
    internal static string get_ODataBatchWriter_CannotStartChangeSetWithActiveChangeSet();
    internal static string get_ODataBatchWriter_CannotCompleteChangeSetWithoutActiveChangeSet();
    internal static string get_ODataBatchWriter_InvalidTransitionFromStart();
    internal static string get_ODataBatchWriter_InvalidTransitionFromBatchStarted();
    internal static string get_ODataBatchWriter_InvalidTransitionFromChangeSetStarted();
    internal static string get_ODataBatchWriter_InvalidTransitionFromOperationCreated();
    internal static string get_ODataBatchWriter_InvalidTransitionFromOperationContentStreamRequested();
    internal static string get_ODataBatchWriter_InvalidTransitionFromOperationContentStreamDisposed();
    internal static string get_ODataBatchWriter_InvalidTransitionFromChangeSetCompleted();
    internal static string get_ODataBatchWriter_InvalidTransitionFromBatchCompleted();
    internal static string get_ODataBatchWriter_CannotCreateRequestOperationWhenWritingResponse();
    internal static string get_ODataBatchWriter_CannotCreateResponseOperationWhenWritingRequest();
    internal static string ODataBatchWriter_MaxBatchSizeExceeded(object p0);
    internal static string ODataBatchWriter_MaxChangeSetSizeExceeded(object p0);
    internal static string get_ODataBatchWriter_SyncCallOnAsyncWriter();
    internal static string get_ODataBatchWriter_AsyncCallOnSyncWriter();
    internal static string ODataBatchWriter_DuplicateContentIDsNotAllowed(object p0);
    internal static string get_ODataBatchWriter_CannotWriteInStreamErrorForBatch();
    internal static string ODataBatchUtils_RelativeUriUsedWithoutBaseUriSpecified(object p0);
    internal static string ODataBatchUtils_RelativeUriStartingWithDollarUsedWithoutBaseUriSpecified(object p0);
    internal static string get_ODataBatchOperationMessage_VerifyNotCompleted();
    internal static string get_ODataBatchOperationStream_Disposed();
    internal static string get_ODataBatchReader_CannotCreateRequestOperationWhenReadingResponse();
    internal static string get_ODataBatchReader_CannotCreateResponseOperationWhenReadingRequest();
    internal static string ODataBatchReader_InvalidStateForCreateOperationRequestMessage(object p0);
    internal static string get_ODataBatchReader_OperationRequestMessageAlreadyCreated();
    internal static string get_ODataBatchReader_OperationResponseMessageAlreadyCreated();
    internal static string ODataBatchReader_InvalidStateForCreateOperationResponseMessage(object p0);
    internal static string get_ODataBatchReader_CannotUseReaderWhileOperationStreamActive();
    internal static string get_ODataBatchReader_SyncCallOnAsyncReader();
    internal static string get_ODataBatchReader_AsyncCallOnSyncReader();
    internal static string ODataBatchReader_ReadOrReadAsyncCalledInInvalidState(object p0);
    internal static string ODataBatchReader_MaxBatchSizeExceeded(object p0);
    internal static string ODataBatchReader_MaxChangeSetSizeExceeded(object p0);
    internal static string get_ODataBatchReader_NoMessageWasCreatedForOperation();
    internal static string get_ODataBatchReader_ReaderModeNotInitilized();
    internal static string get_ODataBatchReader_JsonBatchTopLevelPropertyMissing();
    internal static string ODataBatchReader_DuplicateContentIDsNotAllowed(object p0);
    internal static string ODataBatchReader_DuplicateAtomicityGroupIDsNotAllowed(object p0);
    internal static string ODataBatchReader_RequestPropertyMissing(object p0);
    internal static string ODataBatchReader_SameRequestIdAsAtomicityGroupIdNotAllowed(object p0, object p1);
    internal static string ODataBatchReader_SelfReferenceDependsOnRequestIdNotAllowed(object p0, object p1);
    internal static string ODataBatchReader_DependsOnRequestIdIsPartOfAtomicityGroupNotAllowed(object p0, object p1);
    internal static string ODataBatchReader_DependsOnIdNotFound(object p0, object p1);
    internal static string ODataBatchReader_AbsoluteURINotMatchingBaseUri(object p0, object p1);
    internal static string ODataBatchReader_ReferenceIdNotIncludedInDependsOn(object p0, object p1, object p2);
    internal static string get_ODataBatch_GroupIdOrChangeSetIdCannotBeNull();
    internal static string ODataBatchReader_MessageIdPositionedIncorrectly(object p0, object p1);
    internal static string get_ODataBatchReader_ReaderStreamChangesetBoundaryCannotBeNull();
    internal static string ODataBatchReaderStream_InvalidHeaderSpecified(object p0);
    internal static string ODataBatchReaderStream_InvalidRequestLine(object p0);
    internal static string ODataBatchReaderStream_InvalidResponseLine(object p0);
    internal static string ODataBatchReaderStream_InvalidHttpVersionSpecified(object p0, object p1);
    internal static string ODataBatchReaderStream_NonIntegerHttpStatusCode(object p0);
    internal static string get_ODataBatchReaderStream_MissingContentTypeHeader();
    internal static string ODataBatchReaderStream_MissingOrInvalidContentEncodingHeader(object p0, object p1);
    internal static string ODataBatchReaderStream_InvalidContentTypeSpecified(object p0, object p1, object p2, object p3);
    internal static string ODataBatchReaderStream_InvalidContentLengthSpecified(object p0);
    internal static string ODataBatchReaderStream_DuplicateHeaderFound(object p0);
    internal static string get_ODataBatchReaderStream_NestedChangesetsAreNotSupported();
    internal static string ODataBatchReaderStream_MultiByteEncodingsNotSupported(object p0);
    internal static string get_ODataBatchReaderStream_UnexpectedEndOfInput();
    internal static string ODataBatchReaderStreamBuffer_BoundaryLineSecurityLimitReached(object p0);
    internal static string ODataJsonBatchPayloadItemPropertiesCache_UnknownPropertyForMessageInBatch(object p0);
    internal static string ODataJsonBatchPayloadItemPropertiesCache_DuplicatePropertyForRequestInBatch(object p0);
    internal static string ODataJsonBatchPayloadItemPropertiesCache_DuplicateHeaderForRequestInBatch(object p0);
    internal static string ODataJsonBatchBodyContentReaderStream_UnexpectedNodeType(object p0);
    internal static string ODataJsonBatchBodyContentReaderStream_UnsupportedContentTypeInHeader(object p0);
    internal static string get_ODataAsyncWriter_CannotCreateResponseWhenNotWritingResponse();
    internal static string get_ODataAsyncWriter_CannotCreateResponseMoreThanOnce();
    internal static string get_ODataAsyncWriter_SyncCallOnAsyncWriter();
    internal static string get_ODataAsyncWriter_AsyncCallOnSyncWriter();
    internal static string get_ODataAsyncWriter_CannotWriteInStreamErrorForAsync();
    internal static string ODataAsyncReader_InvalidHeaderSpecified(object p0);
    internal static string get_ODataAsyncReader_CannotCreateResponseWhenNotReadingResponse();
    internal static string ODataAsyncReader_InvalidResponseLine(object p0);
    internal static string ODataAsyncReader_InvalidHttpVersionSpecified(object p0, object p1);
    internal static string ODataAsyncReader_NonIntegerHttpStatusCode(object p0);
    internal static string ODataAsyncReader_DuplicateHeaderFound(object p0);
    internal static string ODataAsyncReader_MultiByteEncodingsNotSupported(object p0);
    internal static string ODataAsyncReader_InvalidNewLineEncountered(object p0);
    internal static string get_ODataAsyncReader_UnexpectedEndOfInput();
    internal static string get_ODataAsyncReader_SyncCallOnAsyncReader();
    internal static string get_ODataAsyncReader_AsyncCallOnSyncReader();
    internal static string HttpUtils_MediaTypeUnspecified(object p0);
    internal static string HttpUtils_MediaTypeRequiresSlash(object p0);
    internal static string HttpUtils_MediaTypeRequiresSubType(object p0);
    internal static string HttpUtils_MediaTypeMissingParameterValue(object p0);
    internal static string get_HttpUtils_MediaTypeMissingParameterName();
    internal static string HttpUtils_EscapeCharWithoutQuotes(object p0, object p1, object p2, object p3);
    internal static string HttpUtils_EscapeCharAtEnd(object p0, object p1, object p2, object p3);
    internal static string HttpUtils_ClosingQuoteNotFound(object p0, object p1, object p2);
    internal static string HttpUtils_InvalidCharacterInQuotedParameterValue(object p0, object p1, object p2, object p3);
    internal static string get_HttpUtils_ContentTypeMissing();
    internal static string HttpUtils_MediaTypeRequiresSemicolonBeforeParameter(object p0);
    internal static string HttpUtils_InvalidQualityValueStartChar(object p0, object p1);
    internal static string HttpUtils_InvalidQualityValue(object p0, object p1);
    internal static string HttpUtils_CannotConvertCharToInt(object p0);
    internal static string HttpUtils_MissingSeparatorBetweenCharsets(object p0);
    internal static string HttpUtils_InvalidSeparatorBetweenCharsets(object p0);
    internal static string HttpUtils_InvalidCharsetName(object p0);
    internal static string HttpUtils_UnexpectedEndOfQValue(object p0);
    internal static string HttpUtils_ExpectedLiteralNotFoundInString(object p0, object p1, object p2);
    internal static string HttpUtils_InvalidHttpMethodString(object p0);
    internal static string HttpUtils_NoOrMoreThanOneContentTypeSpecified(object p0);
    internal static string HttpHeaderValueLexer_UnrecognizedSeparator(object p0, object p1, object p2, object p3);
    internal static string HttpHeaderValueLexer_TokenExpectedButFoundQuotedString(object p0, object p1, object p2);
    internal static string HttpHeaderValueLexer_FailedToReadTokenOrQuotedString(object p0, object p1, object p2);
    internal static string HttpHeaderValueLexer_InvalidSeparatorAfterQuotedString(object p0, object p1, object p2, object p3);
    internal static string HttpHeaderValueLexer_EndOfFileAfterSeparator(object p0, object p1, object p2, object p3);
    internal static string MediaType_EncodingNotSupported(object p0);
    internal static string MediaTypeUtils_DidNotFindMatchingMediaType(object p0, object p1);
    internal static string MediaTypeUtils_CannotDetermineFormatFromContentType(object p0, object p1);
    internal static string MediaTypeUtils_NoOrMoreThanOneContentTypeSpecified(object p0);
    internal static string MediaTypeUtils_BoundaryMustBeSpecifiedForBatchPayloads(object p0, object p1);
    internal static string ExpressionLexer_ExpectedLiteralToken(object p0);
    internal static string ODataUriUtils_ConvertToUriLiteralUnsupportedType(object p0);
    internal static string get_ODataUriUtils_ConvertFromUriLiteralTypeRefWithoutModel();
    internal static string ODataUriUtils_ConvertFromUriLiteralOverflowNumber(object p0, object p1);
    internal static string ODataUriUtils_ConvertFromUriLiteralTypeVerificationFailure(object p0, object p1);
    internal static string ODataUriUtils_ConvertFromUriLiteralNullTypeVerificationFailure(object p0, object p1);
    internal static string ODataUriUtils_ConvertFromUriLiteralNullOnNonNullableType(object p0);
    internal static string ODataUtils_CannotConvertValueToRawString(object p0);
    internal static string ODataUtils_DidNotFindDefaultMediaType(object p0);
    internal static string ODataUtils_UnsupportedVersionHeader(object p0);
    internal static string ODataUtils_MaxProtocolVersionExceeded(object p0, object p1);
    internal static string get_ODataUtils_UnsupportedVersionNumber();
    internal static string get_ODataUtils_ModelDoesNotHaveContainer();
    internal static string ReaderUtils_EnumerableModified(object p0);
    internal static string ReaderValidationUtils_NullValueForNonNullableType(object p0);
    internal static string ReaderValidationUtils_NullValueForNullableType(object p0);
    internal static string ReaderValidationUtils_NullNamedValueForNonNullableType(object p0, object p1);
    internal static string ReaderValidationUtils_NullNamedValueForNullableType(object p0, object p1);
    internal static string get_ReaderValidationUtils_EntityReferenceLinkMissingUri();
    internal static string get_ReaderValidationUtils_ValueWithoutType();
    internal static string get_ReaderValidationUtils_ResourceWithoutType();
    internal static string ReaderValidationUtils_CannotConvertPrimitiveValue(object p0, object p1);
    internal static string ReaderValidationUtils_MessageReaderSettingsBaseUriMustBeNullOrAbsolute(object p0);
    internal static string get_ReaderValidationUtils_UndeclaredPropertyBehaviorKindSpecifiedOnRequest();
    internal static string ReaderValidationUtils_ContextUriValidationInvalidExpectedEntitySet(object p0, object p1, object p2);
    internal static string ReaderValidationUtils_ContextUriValidationInvalidExpectedEntityType(object p0, object p1, object p2);
    internal static string ReaderValidationUtils_ContextUriValidationNonMatchingPropertyNames(object p0, object p1, object p2, object p3);
    internal static string ReaderValidationUtils_ContextUriValidationNonMatchingDeclaringTypes(object p0, object p1, object p2, object p3);
    internal static string ReaderValidationUtils_NonMatchingPropertyNames(object p0, object p1);
    internal static string ReaderValidationUtils_TypeInContextUriDoesNotMatchExpectedType(object p0, object p1, object p2);
    internal static string ReaderValidationUtils_ContextUriDoesNotReferTypeAssignableToExpectedType(object p0, object p1, object p2);
    internal static string ReaderValidationUtils_ValueTypeNotAllowedInDerivedTypeConstraint(object p0, object p1, object p2);
    internal static string get_ODataMessageReader_ReaderAlreadyUsed();
    internal static string get_ODataMessageReader_ErrorPayloadInRequest();
    internal static string get_ODataMessageReader_ServiceDocumentInRequest();
    internal static string get_ODataMessageReader_MetadataDocumentInRequest();
    internal static string get_ODataMessageReader_DeltaInRequest();
    internal static string ODataMessageReader_ExpectedTypeSpecifiedWithoutMetadata(object p0);
    internal static string ODataMessageReader_EntitySetSpecifiedWithoutMetadata(object p0);
    internal static string ODataMessageReader_OperationImportSpecifiedWithoutMetadata(object p0);
    internal static string ODataMessageReader_OperationSpecifiedWithoutMetadata(object p0);
    internal static string ODataMessageReader_ExpectedCollectionTypeWrongKind(object p0);
    internal static string get_ODataMessageReader_ExpectedPropertyTypeEntityCollectionKind();
    internal static string get_ODataMessageReader_ExpectedPropertyTypeEntityKind();
    internal static string get_ODataMessageReader_ExpectedPropertyTypeStream();
    internal static string ODataMessageReader_ExpectedValueTypeWrongKind(object p0);
    internal static string get_ODataMessageReader_NoneOrEmptyContentTypeHeader();
    internal static string ODataMessageReader_WildcardInContentType(object p0);
    internal static string get_ODataMessageReader_GetFormatCalledBeforeReadingStarted();
    internal static string get_ODataMessageReader_DetectPayloadKindMultipleTimes();
    internal static string get_ODataMessageReader_PayloadKindDetectionRunning();
    internal static string get_ODataMessageReader_PayloadKindDetectionInServerMode();
    internal static string get_ODataMessageReader_ParameterPayloadInResponse();
    internal static string ODataMessageReader_SingletonNavigationPropertyForEntityReferenceLinks(object p0, object p1);
    internal static string get_ODataAsyncResponseMessage_MustNotModifyMessage();
    internal static string get_ODataMessage_MustNotModifyMessage();
    internal static string get_ODataReaderCore_SyncCallOnAsyncReader();
    internal static string get_ODataReaderCore_AsyncCallOnSyncReader();
    internal static string ODataReaderCore_ReadOrReadAsyncCalledInInvalidState(object p0);
    internal static string get_ODataReaderCore_CreateReadStreamCalledInInvalidState();
    internal static string get_ODataReaderCore_CreateTextReaderCalledInInvalidState();
    internal static string get_ODataReaderCore_ReadCalledWithOpenStream();
    internal static string ODataReaderCore_NoReadCallsAllowed(object p0);
    internal static string ODataWriterCore_PropertyValueAlreadyWritten(object p0);
    internal static string ODataJsonReader_CannotReadResourcesOfResourceSet(object p0);
    internal static string ODataJsonReaderUtils_CannotConvertInt32(object p0);
    internal static string ODataJsonReaderUtils_CannotConvertDouble(object p0);
    internal static string ODataJsonReaderUtils_CannotConvertBoolean(object p0);
    internal static string ODataJsonReaderUtils_CannotConvertDecimal(object p0);
    internal static string ODataJsonReaderUtils_CannotConvertDateTime(object p0);
    internal static string ODataJsonReaderUtils_CannotConvertDateTimeOffset(object p0);
    internal static string ODataJsonReaderUtils_ConflictBetweenInputFormatAndParameter(object p0);
    internal static string ODataJsonReaderUtils_MultipleErrorPropertiesWithSameName(object p0);
    internal static string ODataJsonResourceSerializer_ActionsAndFunctionsGroupMustSpecifyTarget(object p0);
    internal static string ODataJsonResourceSerializer_ActionsAndFunctionsGroupMustNotHaveDuplicateTarget(object p0, object p1);
    internal static string ODataJsonErrorDeserializer_TopLevelErrorWithInvalidProperty(object p0);
    internal static string ODataJsonErrorDeserializer_TopLevelErrorMessageValueWithInvalidProperty(object p0);
    internal static string ODataCollectionReaderCore_ReadOrReadAsyncCalledInInvalidState(object p0);
    internal static string get_ODataCollectionReaderCore_SyncCallOnAsyncReader();
    internal static string get_ODataCollectionReaderCore_AsyncCallOnSyncReader();
    internal static string ODataCollectionReaderCore_ExpectedItemTypeSetInInvalidState(object p0, object p1);
    internal static string ODataParameterReaderCore_ReadOrReadAsyncCalledInInvalidState(object p0);
    internal static string get_ODataParameterReaderCore_SyncCallOnAsyncReader();
    internal static string get_ODataParameterReaderCore_AsyncCallOnSyncReader();
    internal static string ODataParameterReaderCore_SubReaderMustBeCreatedAndReadToCompletionBeforeTheNextReadOrReadAsyncCall(object p0, object p1);
    internal static string ODataParameterReaderCore_SubReaderMustBeInCompletedStateBeforeTheNextReadOrReadAsyncCall(object p0, object p1);
    internal static string ODataParameterReaderCore_InvalidCreateReaderMethodCalledForState(object p0, object p1);
    internal static string ODataParameterReaderCore_CreateReaderAlreadyCalled(object p0, object p1);
    internal static string ODataParameterReaderCore_ParameterNameNotInMetadata(object p0, object p1);
    internal static string ODataParameterReaderCore_DuplicateParametersInPayload(object p0);
    internal static string ODataParameterReaderCore_ParametersMissingInPayload(object p0, object p1);
    internal static string ValidationUtils_ActionsAndFunctionsMustSpecifyMetadata(object p0);
    internal static string ValidationUtils_ActionsAndFunctionsMustSpecifyTarget(object p0);
    internal static string ValidationUtils_EnumerableContainsANullItem(object p0);
    internal static string get_ValidationUtils_AssociationLinkMustSpecifyName();
    internal static string get_ValidationUtils_AssociationLinkMustSpecifyUrl();
    internal static string get_ValidationUtils_TypeNameMustNotBeEmpty();
    internal static string ValidationUtils_PropertyDoesNotExistOnType(object p0, object p1);
    internal static string get_ValidationUtils_ResourceMustSpecifyUrl();
    internal static string ValidationUtils_ResourceMustSpecifyName(object p0);
    internal static string get_ValidationUtils_ServiceDocumentElementUrlMustNotBeNull();
    internal static string ValidationUtils_NonPrimitiveTypeForPrimitiveValue(object p0);
    internal static string ValidationUtils_UnsupportedPrimitiveType(object p0);
    internal static string ValidationUtils_IncompatiblePrimitiveItemType(object p0, object p1, object p2, object p3);
    internal static string get_ValidationUtils_NonNullableCollectionElementsMustNotBeNull();
    internal static string ValidationUtils_InvalidCollectionTypeName(object p0);
    internal static string ValidationUtils_UnrecognizedTypeName(object p0);
    internal static string ValidationUtils_IncorrectTypeKind(object p0, object p1, object p2);
    internal static string ValidationUtils_IncorrectTypeKindNoTypeName(object p0, object p1);
    internal static string ValidationUtils_IncorrectValueTypeKind(object p0, object p1);
    internal static string get_ValidationUtils_LinkMustSpecifyName();
    internal static string ValidationUtils_MismatchPropertyKindForStreamProperty(object p0);
    internal static string get_ValidationUtils_NestedCollectionsAreNotSupported();
    internal static string get_ValidationUtils_StreamReferenceValuesNotSupportedInCollections();
    internal static string ValidationUtils_IncompatibleType(object p0, object p1);
    internal static string ValidationUtils_OpenCollectionProperty(object p0);
    internal static string ValidationUtils_OpenStreamProperty(object p0);
    internal static string ValidationUtils_InvalidCollectionTypeReference(object p0);
    internal static string ValidationUtils_ResourceWithMediaResourceAndNonMLEType(object p0);
    internal static string ValidationUtils_ResourceWithoutMediaResourceAndMLEType(object p0);
    internal static string ValidationUtils_ResourceTypeNotAssignableToExpectedType(object p0, object p1);
    internal static string ValidationUtils_NavigationPropertyExpected(object p0, object p1, object p2);
    internal static string ValidationUtils_InvalidBatchBoundaryDelimiterLength(object p0, object p1);
    internal static string ValidationUtils_RecursionDepthLimitReached(object p0);
    internal static string ValidationUtils_MaxDepthOfNestedEntriesExceeded(object p0);
    internal static string ValidationUtils_NullCollectionItemForNonNullableType(object p0);
    internal static string ValidationUtils_PropertiesMustNotContainReservedChars(object p0, object p1);
    internal static string get_ValidationUtils_WorkspaceResourceMustNotContainNullItem();
    internal static string ValidationUtils_InvalidMetadataReferenceProperty(object p0);
    internal static string get_WriterValidationUtils_PropertyMustNotBeNull();
    internal static string get_WriterValidationUtils_PropertiesMustHaveNonEmptyName();
    internal static string get_WriterValidationUtils_MissingTypeNameWithMetadata();
    internal static string get_WriterValidationUtils_NextPageLinkInRequest();
    internal static string get_WriterValidationUtils_DefaultStreamWithContentTypeWithoutReadLink();
    internal static string get_WriterValidationUtils_DefaultStreamWithReadLinkWithoutContentType();
    internal static string get_WriterValidationUtils_StreamReferenceValueMustHaveEditLinkOrReadLink();
    internal static string get_WriterValidationUtils_StreamReferenceValueMustHaveEditLinkToHaveETag();
    internal static string get_WriterValidationUtils_StreamReferenceValueEmptyContentType();
    internal static string get_WriterValidationUtils_EntriesMustHaveNonEmptyId();
    internal static string WriterValidationUtils_MessageWriterSettingsBaseUriMustBeNullOrAbsolute(object p0);
    internal static string get_WriterValidationUtils_EntityReferenceLinkUrlMustNotBeNull();
    internal static string get_WriterValidationUtils_EntityReferenceLinksLinkMustNotBeNull();
    internal static string WriterValidationUtils_NestedResourceTypeNotCompatibleWithParentPropertyType(object p0, object p1);
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionTrueWithResourceContent(object p0);
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionFalseWithResourceSetContent(object p0);
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionTrueWithResourceMetadata(object p0);
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionFalseWithResourceSetMetadata(object p0);
    internal static string WriterValidationUtils_ExpandedLinkWithResourceSetPayloadAndResourceMetadata(object p0);
    internal static string WriterValidationUtils_ExpandedLinkWithResourcePayloadAndResourceSetMetadata(object p0);
    internal static string WriterValidationUtils_CollectionPropertiesMustNotHaveNullValue(object p0);
    internal static string WriterValidationUtils_NonNullablePropertiesMustNotHaveNullValue(object p0, object p1);
    internal static string WriterValidationUtils_StreamPropertiesMustNotHaveNullValue(object p0);
    internal static string WriterValidationUtils_OperationInRequest(object p0);
    internal static string WriterValidationUtils_AssociationLinkInRequest(object p0);
    internal static string WriterValidationUtils_StreamPropertyInRequest(object p0);
    internal static string WriterValidationUtils_MessageWriterSettingsServiceDocumentUriMustBeNullOrAbsolute(object p0);
    internal static string WriterValidationUtils_NavigationLinkMustSpecifyUrl(object p0);
    internal static string WriterValidationUtils_NestedResourceInfoMustSpecifyIsCollection(object p0);
    internal static string get_WriterValidationUtils_MessageWriterSettingsJsonPaddingOnRequestMessage();
    internal static string WriterValidationUtils_ValueTypeNotAllowedInDerivedTypeConstraint(object p0, object p1, object p2);
    internal static string XmlReaderExtension_InvalidNodeInStringValue(object p0);
    internal static string XmlReaderExtension_InvalidRootNode(object p0);
    internal static string ODataMetadataInputContext_ErrorReadingMetadata(object p0);
    internal static string ODataMetadataOutputContext_ErrorWritingMetadata(object p0);
    internal static string get_ODataMetadataOutputContext_NotSupportJsonMetadata();
    internal static string ODataXmlDeserializer_RelativeUriUsedWithoutBaseUriSpecified(object p0);
    internal static string ODataPropertyAndValueDeserializer_InvalidCollectionElement(object p0, object p1);
    internal static string ODataPropertyAndValueDeserializer_NavigationPropertyInProperties(object p0, object p1);
    internal static string JsonInstanceAnnotationWriter_NullValueNotAllowedForInstanceAnnotation(object p0, object p1);
    internal static string EdmLibraryExtensions_OperationGroupReturningActionsAndFunctionsModelInvalid(object p0);
    internal static string EdmLibraryExtensions_UnBoundOperationsFoundFromIEdmModelFindMethodIsInvalid(object p0);
    internal static string EdmLibraryExtensions_NoParameterBoundOperationsFoundFromIEdmModelFindMethodIsInvalid(object p0);
    internal static string EdmLibraryExtensions_ValueOverflowForUnderlyingType(object p0, object p1);
    internal static string ODataXmlResourceDeserializer_ContentWithWrongType(object p0);
    internal static string ODataXmlErrorDeserializer_MultipleErrorElementsWithSameName(object p0);
    internal static string ODataXmlErrorDeserializer_MultipleInnerErrorElementsWithSameName(object p0);
    internal static string CollectionWithoutExpectedTypeValidator_InvalidItemTypeKind(object p0);
    internal static string CollectionWithoutExpectedTypeValidator_IncompatibleItemTypeKind(object p0, object p1);
    internal static string CollectionWithoutExpectedTypeValidator_IncompatibleItemTypeName(object p0, object p1);
    internal static string ResourceSetWithoutExpectedTypeValidator_IncompatibleTypes(object p0, object p1);
    internal static string MessageStreamWrappingStream_ByteLimitExceeded(object p0, object p1);
    internal static string MetadataUtils_ResolveTypeName(object p0);
    internal static string MetadataUtils_CalculateBindableOperationsForType(object p0);
    internal static string EdmValueUtils_UnsupportedPrimitiveType(object p0);
    internal static string EdmValueUtils_IncorrectPrimitiveTypeKind(object p0, object p1, object p2);
    internal static string EdmValueUtils_IncorrectPrimitiveTypeKindNoTypeName(object p0, object p1);
    internal static string EdmValueUtils_CannotConvertTypeToClrValue(object p0);
    internal static string ODataEdmStructuredValue_UndeclaredProperty(object p0, object p1);
    internal static string ODataMetadataBuilder_MissingEntitySetUri(object p0);
    internal static string ODataMetadataBuilder_MissingSegmentForEntitySetUriSuffix(object p0, object p1);
    internal static string ODataMetadataBuilder_MissingEntityInstanceUri(object p0);
    internal static string get_ODataMetadataBuilder_MissingParentIdOrContextUrl();
    internal static string ODataMetadataBuilder_UnknownEntitySet(object p0);
    internal static string ODataJsonInputContext_EntityTypeMustBeCompatibleWithEntitySetBaseType(object p0, object p1, object p2);
    internal static string get_ODataJsonInputContext_PayloadKindDetectionForRequest();
    internal static string ODataJsonInputContext_OperationCannotBeNullForCreateParameterReader(object p0);
    internal static string get_ODataJsonInputContext_NoEntitySetForRequest();
    internal static string get_ODataJsonInputContext_ModelRequiredForReading();
    internal static string get_ODataJsonInputContext_ItemTypeRequiredForCollectionReaderInRequests();
    internal static string get_ODataJsonDeserializer_ContextLinkNotFoundAsFirstProperty();
    internal static string ODataJsonDeserializer_OnlyODataTypeAnnotationCanTargetInstanceAnnotation(object p0, object p1, object p2);
    internal static string ODataJsonDeserializer_AnnotationTargetingInstanceAnnotationWithoutValue(object p0, object p1);
    internal static string get_ODataJsonWriter_EntityReferenceLinkAfterResourceSetInRequest();
    internal static string get_ODataJsonWriter_InstanceAnnotationNotSupportedOnExpandedResourceSet();
    internal static string get_ODataJsonPropertyAndValueSerializer_NoExpectedTypeOrTypeNameSpecifiedForResourceValueRequest();
    internal static string get_ODataJsonPropertyAndValueSerializer_NoExpectedTypeOrTypeNameSpecifiedForCollectionValueInRequest();
    internal static string get_ODataResourceTypeContext_MetadataOrSerializationInfoMissing();
    internal static string get_ODataResourceTypeContext_ODataResourceTypeNameMissing();
    internal static string ODataContextUriBuilder_ValidateDerivedType(object p0, object p1);
    internal static string get_ODataContextUriBuilder_TypeNameMissingForTopLevelCollection();
    internal static string ODataContextUriBuilder_UnsupportedPayloadKind(object p0);
    internal static string get_ODataContextUriBuilder_StreamValueMustBePropertiesOfODataResource();
    internal static string get_ODataContextUriBuilder_NavigationSourceOrTypeNameMissingForResourceOrResourceSet();
    internal static string get_ODataContextUriBuilder_ODataUriMissingForIndividualProperty();
    internal static string get_ODataContextUriBuilder_TypeNameMissingForProperty();
    internal static string ODataContextUriBuilder_ODataPathInvalidForContainedElement(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_UnexpectedAnnotationProperties(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_UnexpectedPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonPropertyAndValueDeserializer_UnexpectedODataPropertyAnnotation(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_UnexpectedProperty(object p0);
    internal static string get_ODataJsonPropertyAndValueDeserializer_InvalidTopLevelPropertyPayload();
    internal static string ODataJsonPropertyAndValueDeserializer_InvalidTopLevelPropertyName(object p0, object p1);
    internal static string ODataJsonPropertyAndValueDeserializer_InvalidTypeName(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_TopLevelPropertyAnnotationWithoutProperty(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_ResourceValuePropertyAnnotationWithoutProperty(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_ComplexValueWithPropertyTypeAnnotation(object p0);
    internal static string get_ODataJsonPropertyAndValueDeserializer_ResourceTypeAnnotationNotFirst();
    internal static string ODataJsonPropertyAndValueDeserializer_UnexpectedDataPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonPropertyAndValueDeserializer_TypePropertyAfterValueProperty(object p0, object p1);
    internal static string ODataJsonPropertyAndValueDeserializer_ODataTypeAnnotationInPrimitiveValue(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_TopLevelPropertyWithPrimitiveNullValue(object p0, object p1);
    internal static string ODataJsonPropertyAndValueDeserializer_UnexpectedMetadataReferenceProperty(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_NoPropertyAndAnnotationAllowedInNullPayload(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_CollectionTypeNotExpected(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_CollectionTypeExpected(object p0);
    internal static string ODataJsonPropertyAndValueDeserializer_ODataResourceExpectedForProperty(object p0, object p1, object p2);
    internal static string get_ODataJsonReaderCoreUtils_CannotReadSpatialPropertyValue();
    internal static string get_ODataJsonReader_UnexpectedPrimitiveValueForODataResource();
    internal static string ODataJsonReaderUtils_AnnotationWithNullValue(object p0);
    internal static string ODataJsonReaderUtils_InvalidValueForODataNullAnnotation(object p0, object p1);
    internal static string JsonInstanceAnnotationWriter_DuplicateAnnotationNameInCollection(object p0);
    internal static string get_ODataJsonContextUriParser_NullMetadataDocumentUri();
    internal static string ODataJsonContextUriParser_ContextUriDoesNotMatchExpectedPayloadKind(object p0, object p1);
    internal static string ODataJsonContextUriParser_InvalidEntitySetNameOrTypeName(object p0, object p1);
    internal static string ODataJsonContextUriParser_InvalidPayloadKindWithSelectQueryOption(object p0);
    internal static string get_ODataJsonContextUriParser_NoModel();
    internal static string ODataJsonContextUriParser_InvalidContextUrl(object p0);
    internal static string ODataJsonContextUriParser_LastSegmentIsKeySegment(object p0);
    internal static string ODataJsonContextUriParser_TopLevelContextUrlShouldBeAbsolute(object p0);
    internal static string ODataJsonResourceDeserializer_DeltaRemovedAnnotationMustBeObject(object p0);
    internal static string get_ODataJsonResourceDeserializer_ResourceTypeAnnotationNotFirst();
    internal static string ODataJsonResourceDeserializer_ResourceInstanceAnnotationPrecededByProperty(object p0);
    internal static string get_ODataJsonResourceDeserializer_UnexpectedDeletedEntryInResponsePayload();
    internal static string ODataJsonResourceDeserializer_CannotReadResourceSetContentStart(object p0);
    internal static string ODataJsonResourceDeserializer_ExpectedResourceSetPropertyNotFound(object p0);
    internal static string ODataJsonResourceDeserializer_InvalidNodeTypeForItemsInResourceSet(object p0);
    internal static string ODataJsonResourceDeserializer_InvalidPropertyAnnotationInTopLevelResourceSet(object p0);
    internal static string ODataJsonResourceDeserializer_InvalidPropertyInTopLevelResourceSet(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_PropertyWithoutValueWithWrongType(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_StreamPropertyInRequest(object p0);
    internal static string ODataJsonResourceDeserializer_UnexpectedStreamPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_StreamPropertyWithValue(object p0);
    internal static string ODataJsonResourceDeserializer_UnexpectedDeferredLinkPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_CannotReadSingletonNestedResource(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_CannotReadCollectionNestedResource(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_CannotReadNestedResource(object p0);
    internal static string ODataJsonResourceDeserializer_UnexpectedExpandedSingletonNavigationLinkPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_UnexpectedExpandedCollectionNavigationLinkPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_UnexpectedComplexCollectionPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_DuplicateNestedResourceSetAnnotation(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_UnexpectedPropertyAnnotationAfterExpandedResourceSet(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_UnexpectedNavigationLinkInRequestPropertyAnnotation(object p0, object p1, object p2);
    internal static string ODataJsonResourceDeserializer_ArrayValueForSingletonBindPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_StringValueForCollectionBindPropertyAnnotation(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_EmptyBindArray(object p0);
    internal static string ODataJsonResourceDeserializer_NavigationPropertyWithoutValueAndEntityReferenceLink(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_SingletonNavigationPropertyWithBindingAndValue(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_PropertyWithoutValueWithUnknownType(object p0);
    internal static string ODataJsonResourceDeserializer_OperationIsNotActionOrFunction(object p0);
    internal static string ODataJsonResourceDeserializer_MultipleOptionalPropertiesInOperation(object p0, object p1);
    internal static string ODataJsonResourceDeserializer_OperationMissingTargetProperty(object p0);
    internal static string get_ODataJsonResourceDeserializer_MetadataReferencePropertyInRequest();
    internal static string ODataJsonValidationUtils_OperationPropertyCannotBeNull(object p0, object p1);
    internal static string ODataJsonValidationUtils_OpenMetadataReferencePropertyNotSupported(object p0, object p1);
    internal static string ODataJsonDeserializer_RelativeUriUsedWithouODataMetadataAnnotation(object p0, object p1);
    internal static string ODataJsonResourceMetadataContext_MetadataAnnotationMustBeInPayload(object p0);
    internal static string ODataJsonCollectionDeserializer_ExpectedCollectionPropertyNotFound(object p0);
    internal static string ODataJsonCollectionDeserializer_CannotReadCollectionContentStart(object p0);
    internal static string ODataJsonCollectionDeserializer_CannotReadCollectionEnd(object p0);
    internal static string ODataJsonCollectionDeserializer_InvalidCollectionTypeName(object p0);
    internal static string ODataJsonEntityReferenceLinkDeserializer_EntityReferenceLinkMustBeObjectValue(object p0);
    internal static string ODataJsonEntityReferenceLinkDeserializer_PropertyAnnotationForEntityReferenceLink(object p0);
    internal static string ODataJsonEntityReferenceLinkDeserializer_InvalidAnnotationInEntityReferenceLink(object p0);
    internal static string ODataJsonEntityReferenceLinkDeserializer_InvalidPropertyInEntityReferenceLink(object p0, object p1);
    internal static string ODataJsonEntityReferenceLinkDeserializer_MissingEntityReferenceLinkProperty(object p0);
    internal static string ODataJsonEntityReferenceLinkDeserializer_MultipleUriPropertiesInEntityReferenceLink(object p0);
    internal static string ODataJsonEntityReferenceLinkDeserializer_EntityReferenceLinkUrlCannotBeNull(object p0);
    internal static string get_ODataJsonEntityReferenceLinkDeserializer_PropertyAnnotationForEntityReferenceLinks();
    internal static string ODataJsonEntityReferenceLinkDeserializer_InvalidEntityReferenceLinksPropertyFound(object p0, object p1);
    internal static string ODataJsonEntityReferenceLinkDeserializer_InvalidPropertyAnnotationInEntityReferenceLinks(object p0);
    internal static string ODataJsonEntityReferenceLinkDeserializer_ExpectedEntityReferenceLinksPropertyNotFound(object p0);
    internal static string ODataJsonOperationsDeserializerUtils_OperationPropertyCannotBeNull(object p0, object p1, object p2);
    internal static string ODataJsonOperationsDeserializerUtils_OperationsPropertyMustHaveObjectValue(object p0, object p1);
    internal static string ODataJsonServiceDocumentDeserializer_DuplicatePropertiesInServiceDocument(object p0);
    internal static string ODataJsonServiceDocumentDeserializer_DuplicatePropertiesInServiceDocumentElement(object p0);
    internal static string ODataJsonServiceDocumentDeserializer_MissingValuePropertyInServiceDocument(object p0);
    internal static string ODataJsonServiceDocumentDeserializer_MissingRequiredPropertyInServiceDocumentElement(object p0);
    internal static string ODataJsonServiceDocumentDeserializer_PropertyAnnotationInServiceDocument(object p0, object p1);
    internal static string ODataJsonServiceDocumentDeserializer_InstanceAnnotationInServiceDocument(object p0, object p1);
    internal static string ODataJsonServiceDocumentDeserializer_PropertyAnnotationInServiceDocumentElement(object p0);
    internal static string ODataJsonServiceDocumentDeserializer_InstanceAnnotationInServiceDocumentElement(object p0);
    internal static string ODataJsonServiceDocumentDeserializer_UnexpectedPropertyInServiceDocumentElement(object p0, object p1, object p2);
    internal static string ODataJsonServiceDocumentDeserializer_UnexpectedPropertyInServiceDocument(object p0, object p1);
    internal static string ODataJsonServiceDocumentDeserializer_PropertyAnnotationWithoutProperty(object p0);
    internal static string get_ODataJsonParameterDeserializer_PropertyAnnotationForParameters();
    internal static string ODataJsonParameterDeserializer_PropertyAnnotationWithoutPropertyForParameters(object p0);
    internal static string ODataJsonParameterDeserializer_UnsupportedPrimitiveParameterType(object p0, object p1);
    internal static string ODataJsonParameterDeserializer_NullCollectionExpected(object p0, object p1);
    internal static string ODataJsonParameterDeserializer_UnsupportedParameterTypeKind(object p0, object p1);
    internal static string get_SelectedPropertiesNode_StarSegmentNotLastSegment();
    internal static string get_SelectedPropertiesNode_StarSegmentAfterTypeSegment();
    internal static string ODataJsonErrorDeserializer_PropertyAnnotationNotAllowedInErrorPayload(object p0);
    internal static string ODataJsonErrorDeserializer_InstanceAnnotationNotAllowedInErrorPayload(object p0);
    internal static string ODataJsonErrorDeserializer_PropertyAnnotationWithoutPropertyForError(object p0);
    internal static string ODataJsonErrorDeserializer_TopLevelErrorValueWithInvalidProperty(object p0);
    internal static string ODataConventionalUriBuilder_EntityTypeWithNoKeyProperties(object p0);
    internal static string ODataConventionalUriBuilder_NullKeyValue(object p0, object p1);
    internal static string ODataResourceMetadataContext_EntityTypeWithNoKeyProperties(object p0);
    internal static string ODataResourceMetadataContext_NullKeyValue(object p0, object p1);
    internal static string ODataResourceMetadataContext_KeyOrETagValuesMustBePrimitiveValues(object p0, object p1);
    internal static string ODataResource_PropertyValueCannotBeODataResourceValue(object p0);
    internal static string EdmValueUtils_NonPrimitiveValue(object p0, object p1);
    internal static string EdmValueUtils_PropertyDoesntExist(object p0, object p1);
    internal static string get_ODataPrimitiveValue_CannotCreateODataPrimitiveValueFromNull();
    internal static string ODataPrimitiveValue_CannotCreateODataPrimitiveValueFromUnsupportedValueType(object p0);
    internal static string ODataInstanceAnnotation_NeedPeriodInName(object p0);
    internal static string ODataInstanceAnnotation_ReservedNamesNotAllowed(object p0, object p1);
    internal static string ODataInstanceAnnotation_BadTermName(object p0);
    internal static string get_ODataInstanceAnnotation_ValueCannotBeODataStreamReferenceValue();
    internal static string get_ODataJsonValueSerializer_MissingTypeNameOnCollection();
    internal static string get_ODataJsonValueSerializer_MissingRawValueOnUntyped();
    internal static string get_InstanceAnnotation_MissingTermAttributeOnAnnotationElement();
    internal static string InstanceAnnotation_AttributeValueNotationUsedWithIncompatibleType(object p0, object p1);
    internal static string InstanceAnnotation_AttributeValueNotationUsedOnNonEmptyElement(object p0);
    internal static string get_InstanceAnnotation_MultipleAttributeValueNotationAttributes();
    internal static string AnnotationFilterPattern_InvalidPatternMissingDot(object p0);
    internal static string AnnotationFilterPattern_InvalidPatternEmptySegment(object p0);
    internal static string AnnotationFilterPattern_InvalidPatternWildCardInSegment(object p0);
    internal static string AnnotationFilterPattern_InvalidPatternWildCardMustBeInLastSegment(object p0);
    internal static string SyntacticTree_UriMustBeAbsolute(object p0);
    internal static string get_SyntacticTree_MaxDepthInvalid();
    internal static string SyntacticTree_InvalidSkipQueryOptionValue(object p0);
    internal static string SyntacticTree_InvalidTopQueryOptionValue(object p0);
    internal static string SyntacticTree_InvalidCountQueryOptionValue(object p0, object p1);
    internal static string SyntacticTree_InvalidIndexQueryOptionValue(object p0);
    internal static string QueryOptionUtils_QueryParameterMustBeSpecifiedOnce(object p0);
    internal static string UriBuilder_NotSupportedClrLiteral(object p0);
    internal static string UriBuilder_NotSupportedQueryToken(object p0);
    internal static string get_UriQueryExpressionParser_TooDeep();
    internal static string UriQueryExpressionParser_ExpressionExpected(object p0, object p1);
    internal static string UriQueryExpressionParser_OpenParenExpected(object p0, object p1);
    internal static string UriQueryExpressionParser_CloseParenOrCommaExpected(object p0, object p1);
    internal static string UriQueryExpressionParser_CloseParenOrOperatorExpected(object p0, object p1);
    internal static string get_UriQueryExpressionParser_IllegalQueryOptioninDollarCount();
    internal static string UriQueryExpressionParser_CannotCreateStarTokenFromNonStar(object p0);
    internal static string UriQueryExpressionParser_RangeVariableAlreadyDeclared(object p0);
    internal static string UriQueryExpressionParser_AsExpected(object p0, object p1);
    internal static string UriQueryExpressionParser_WithExpected(object p0, object p1);
    internal static string UriQueryExpressionParser_UnrecognizedWithMethod(object p0, object p1, object p2);
    internal static string UriQueryExpressionParser_PropertyPathExpected(object p0, object p1);
    internal static string UriQueryExpressionParser_KeywordOrIdentifierExpected(object p0, object p1, object p2);
    internal static string UriQueryExpressionParser_InnerMostExpandRequireFilter(object p0, object p1);
    internal static string UriQueryPathParser_RequestUriDoesNotHaveTheCorrectBaseUri(object p0, object p1);
    internal static string get_UriQueryPathParser_SyntaxError();
    internal static string get_UriQueryPathParser_TooManySegments();
    internal static string UriQueryPathParser_InvalidEscapeUri(object p0);
    internal static string UriUtils_DateTimeOffsetInvalidFormat(object p0);
    internal static string get_SelectionItemBinder_NonNavigationPathToken();
    internal static string get_MetadataBinder_ParameterAliasValueExpressionNotSingleValue();
    internal static string MetadataBinder_UnsupportedQueryTokenKind(object p0);
    internal static string MetadataBinder_PropertyNotDeclared(object p0, object p1);
    internal static string MetadataBinder_InvalidIdentifierInQueryOption(object p0);
    internal static string MetadataBinder_PropertyNotDeclaredOrNotKeyInKeyValue(object p0, object p1);
    internal static string MetadataBinder_QualifiedFunctionNameWithParametersNotDeclared(object p0, object p1);
    internal static string MetadataBinder_UnnamedKeyValueOnTypeWithMultipleKeyProperties(object p0);
    internal static string MetadataBinder_DuplicitKeyPropertyInKeyValues(object p0);
    internal static string MetadataBinder_NotAllKeyPropertiesSpecifiedInKeyValues(object p0);
    internal static string MetadataBinder_CannotConvertToType(object p0, object p1);
    internal static string get_MetadataBinder_FilterExpressionNotSingleValue();
    internal static string get_MetadataBinder_OrderByExpressionNotSingleValue();
    internal static string get_MetadataBinder_PropertyAccessWithoutParentParameter();
    internal static string MetadataBinder_BinaryOperatorOperandNotSingleValue(object p0);
    internal static string MetadataBinder_UnaryOperatorOperandNotSingleValue(object p0);
    internal static string get_MetadataBinder_LeftOperandNotSingleValue();
    internal static string get_MetadataBinder_RightOperandNotCollectionValue();
    internal static string MetadataBinder_PropertyAccessSourceNotSingleValue(object p0);
    internal static string get_MetadataBinder_CountSegmentNextTokenNotCollectionValue();
    internal static string MetadataBinder_IncompatibleOperandsError(object p0, object p1, object p2);
    internal static string MetadataBinder_IncompatibleOperandError(object p0, object p1);
    internal static string MetadataBinder_UnknownFunction(object p0);
    internal static string MetadataBinder_FunctionArgumentNotSingleValue(object p0);
    internal static string MetadataBinder_NoApplicableFunctionFound(object p0, object p1);
    internal static string MetadataBinder_BoundNodeCannotBeNull(object p0);
    internal static string MetadataBinder_TopRequiresNonNegativeInteger(object p0);
    internal static string MetadataBinder_SkipRequiresNonNegativeInteger(object p0);
    internal static string get_MetadataBinder_QueryOptionsBindStateCannotBeNull();
    internal static string get_MetadataBinder_QueryOptionsBindMethodCannotBeNull();
    internal static string MetadataBinder_HierarchyNotFollowed(object p0, object p1);
    internal static string get_MetadataBinder_LambdaParentMustBeCollection();
    internal static string MetadataBinder_ParameterNotInScope(object p0);
    internal static string get_MetadataBinder_NavigationPropertyNotFollowingSingleEntityType();
    internal static string get_MetadataBinder_AnyAllExpressionNotSingleValue();
    internal static string MetadataBinder_CastOrIsOfExpressionWithWrongNumberOfOperands(object p0);
    internal static string get_MetadataBinder_CastOrIsOfFunctionWithoutATypeArgument();
    internal static string get_MetadataBinder_CastOrIsOfCollectionsNotSupported();
    internal static string get_MetadataBinder_CollectionOpenPropertiesNotSupportedInThisRelease();
    internal static string MetadataBinder_IllegalSegmentType(object p0);
    internal static string MetadataBinder_QueryOptionNotApplicable(object p0);
    internal static string StringItemShouldBeQuoted(object p0);
    internal static string StreamItemInvalidPrimitiveKind(object p0);
    internal static string ApplyBinder_AggregateExpressionIncompatibleTypeForMethod(object p0, object p1);
    internal static string ApplyBinder_UnsupportedAggregateMethod(object p0);
    internal static string ApplyBinder_UnsupportedAggregateKind(object p0);
    internal static string ApplyBinder_AggregateExpressionNotSingleValue(object p0);
    internal static string ApplyBinder_GroupByPropertyNotPropertyAccessValue(object p0);
    internal static string ApplyBinder_UnsupportedType(object p0);
    internal static string ApplyBinder_UnsupportedGroupByChild(object p0);
    internal static string get_AggregateTransformationNode_UnsupportedAggregateExpressions();
    internal static string FunctionCallBinder_CannotFindASuitableOverload(object p0, object p1);
    internal static string FunctionCallBinder_UriFunctionMustHaveHaveNullParent(object p0);
    internal static string FunctionCallBinder_CallingFunctionOnOpenProperty(object p0);
    internal static string get_FunctionCallParser_DuplicateParameterOrEntityKeyName();
    internal static string ODataUriParser_InvalidCount(object p0);
    internal static string CastBinder_ChildTypeIsNotEntity(object p0);
    internal static string get_CastBinder_EnumOnlyCastToOrFromString();
    internal static string Binder_IsNotValidEnumConstant(object p0);
    internal static string BatchReferenceSegment_InvalidContentID(object p0);
    internal static string SelectExpandBinder_UnknownPropertyType(object p0);
    internal static string SelectExpandBinder_InvalidIdentifierAfterWildcard(object p0);
    internal static string SelectExpandBinder_InvalidQueryOptionNestedSelection(object p0);
    internal static string SelectExpandBinder_SystemTokenInSelect(object p0);
    internal static string SelectionItemBinder_NoExpandForSelectedProperty(object p0);
    internal static string SelectExpandPathBinder_FollowNonTypeSegment(object p0);
    internal static string get_SelectBinder_MultiLevelPathInSelect();
    internal static string get_ExpandItemBinder_TraversingANonNormalizedTree();
    internal static string ExpandItemBinder_CannotFindType(object p0);
    internal static string ExpandItemBinder_PropertyIsNotANavigationPropertyOrComplexProperty(object p0, object p1);
    internal static string get_ExpandItemBinder_TypeSegmentNotFollowedByPath();
    internal static string get_ExpandItemBinder_PathTooDeep();
    internal static string get_ExpandItemBinder_TraversingMultipleNavPropsInTheSamePath();
    internal static string ExpandItemBinder_LevelsNotAllowedOnIncompatibleRelatedType(object p0, object p1, object p2);
    internal static string ExpandItemBinder_InvaidSegmentInExpand(object p0);
    internal static string get_Nodes_CollectionNavigationNode_MustHaveSingleMultiplicity();
    internal static string Nodes_NonentityParameterQueryNodeWithEntityType(object p0);
    internal static string get_Nodes_CollectionNavigationNode_MustHaveManyMultiplicity();
    internal static string Nodes_PropertyAccessShouldBeNonEntityProperty(object p0);
    internal static string Nodes_PropertyAccessTypeShouldNotBeCollection(object p0);
    internal static string Nodes_PropertyAccessTypeMustBeCollection(object p0);
    internal static string get_Nodes_NonStaticEntitySetExpressionsAreNotSupportedInThisRelease();
    internal static string get_Nodes_CollectionFunctionCallNode_ItemTypeMustBePrimitiveOrComplexOrEnum();
    internal static string get_Nodes_EntityCollectionFunctionCallNode_ItemTypeMustBeAnEntity();
    internal static string get_Nodes_SingleValueFunctionCallNode_ItemTypeMustBePrimitiveOrComplexOrEnum();
    internal static string Nodes_InNode_CollectionItemTypeMustBeSameAsSingleItemType(object p0, object p1);
    internal static string get_ExpandTreeNormalizer_NonPathInPropertyChain();
    internal static string SelectTreeNormalizer_MultipleSelecTermWithSamePathFound(object p0);
    internal static string UriExpandParser_TermIsNotValidForStar(object p0);
    internal static string UriExpandParser_TermIsNotValidForStarRef(object p0);
    internal static string UriExpandParser_ParentStructuredTypeIsNull(object p0);
    internal static string UriExpandParser_TermWithMultipleStarNotAllowed(object p0);
    internal static string UriSelectParser_TermIsNotValid(object p0);
    internal static string UriSelectParser_InvalidTopOption(object p0);
    internal static string UriSelectParser_InvalidSkipOption(object p0);
    internal static string UriSelectParser_InvalidCountOption(object p0);
    internal static string UriSelectParser_InvalidLevelsOption(object p0);
    internal static string UriSelectParser_SystemTokenInSelectExpand(object p0, object p1);
    internal static string UriParser_MissingExpandOption(object p0);
    internal static string get_UriParser_EmptyParenthesis();
    internal static string UriParser_MissingSelectOption(object p0);
    internal static string get_UriParser_RelativeUriMustBeRelative();
    internal static string get_UriParser_NeedServiceRootForThisOverload();
    internal static string UriParser_UriMustBeAbsolute(object p0);
    internal static string get_UriParser_NegativeLimit();
    internal static string UriParser_ExpandCountExceeded(object p0, object p1);
    internal static string UriParser_ExpandDepthExceeded(object p0, object p1);
    internal static string UriParser_TypeInvalidForSelectExpand(object p0);
    internal static string UriParser_ContextHandlerCanNotBeNull(object p0);
    internal static string UriParserMetadata_MultipleMatchingPropertiesFound(object p0, object p1);
    internal static string UriParserMetadata_MultipleMatchingNavigationSourcesFound(object p0);
    internal static string UriParserMetadata_MultipleMatchingTypesFound(object p0);
    internal static string UriParserMetadata_MultipleMatchingKeysFound(object p0);
    internal static string UriParserMetadata_MultipleMatchingParametersFound(object p0);
    internal static string get_UriValidator_ValidatorMustUseSameModelAsParser();
    internal static string PathParser_EntityReferenceNotSupported(object p0);
    internal static string get_PathParser_CannotUseValueOnCollection();
    internal static string PathParser_TypeMustBeRelatedToSet(object p0, object p1, object p2);
    internal static string PathParser_TypeCastOnlyAllowedAfterStructuralCollection(object p0);
    internal static string PathParser_TypeCastOnlyAllowedInDerivedTypeConstraint(object p0, object p1, object p2);
    internal static string get_ODataResourceSet_MustNotContainBothNextPageLinkAndDeltaLink();
    internal static string get_ODataExpandPath_OnlyLastSegmentCanBeNavigationProperty();
    internal static string get_ODataExpandPath_LastSegmentMustBeNavigationPropertyOrTypeSegment();
    internal static string ODataExpandPath_InvalidExpandPathSegment(object p0);
    internal static string get_ODataSelectPath_CannotOnlyHaveTypeSegment();
    internal static string ODataSelectPath_InvalidSelectPathSegmentType(object p0);
    internal static string get_ODataSelectPath_OperationSegmentCanOnlyBeLastSegment();
    internal static string get_ODataSelectPath_NavPropSegmentCanOnlyBeLastSegment();
    internal static string RequestUriProcessor_TargetEntitySetNotFound(object p0);
    internal static string RequestUriProcessor_FoundInvalidFunctionImport(object p0);
    internal static string get_OperationSegment_ReturnTypeForMultipleOverloads();
    internal static string get_OperationSegment_CannotReturnNull();
    internal static string FunctionOverloadResolver_NoSingleMatchFound(object p0, object p1);
    internal static string FunctionOverloadResolver_MultipleActionOverloads(object p0);
    internal static string FunctionOverloadResolver_MultipleActionImportOverloads(object p0);
    internal static string FunctionOverloadResolver_MultipleOperationImportOverloads(object p0);
    internal static string FunctionOverloadResolver_MultipleOperationOverloads(object p0);
    internal static string FunctionOverloadResolver_FoundInvalidOperation(object p0);
    internal static string FunctionOverloadResolver_FoundInvalidOperationImport(object p0);
    internal static string CustomUriFunctions_AddCustomUriFunction_BuiltInExistsNotAddingAsOverload(object p0);
    internal static string CustomUriFunctions_AddCustomUriFunction_BuiltInExistsFullSignature(object p0);
    internal static string CustomUriFunctions_AddCustomUriFunction_CustomFunctionOverloadExists(object p0);
    internal static string RequestUriProcessor_InvalidValueForEntitySegment(object p0);
    internal static string RequestUriProcessor_InvalidValueForKeySegment(object p0);
    internal static string RequestUriProcessor_CannotApplyFilterOnSingleEntities(object p0);
    internal static string RequestUriProcessor_CannotApplyEachOnSingleEntities(object p0);
    internal static string get_RequestUriProcessor_FilterPathSegmentSyntaxError();
    internal static string RequestUriProcessor_NoNavigationSourceFound(object p0);
    internal static string get_RequestUriProcessor_OnlySingleOperationCanFollowEachPathSegment();
    internal static string get_RequestUriProcessor_EmptySegmentInRequestUrl();
    internal static string get_RequestUriProcessor_SyntaxError();
    internal static string get_RequestUriProcessor_CountOnRoot();
    internal static string get_RequestUriProcessor_FilterOnRoot();
    internal static string get_RequestUriProcessor_EachOnRoot();
    internal static string get_RequestUriProcessor_RefOnRoot();
    internal static string RequestUriProcessor_MustBeLeafSegment(object p0);
    internal static string RequestUriProcessor_LinkSegmentMustBeFollowedByEntitySegment(object p0, object p1);
    internal static string RequestUriProcessor_MissingSegmentAfterLink(object p0);
    internal static string RequestUriProcessor_CountNotSupported(object p0);
    internal static string RequestUriProcessor_CannotQueryCollections(object p0);
    internal static string RequestUriProcessor_SegmentDoesNotSupportKeyPredicates(object p0);
    internal static string RequestUriProcessor_ValueSegmentAfterScalarPropertySegment(object p0, object p1);
    internal static string RequestUriProcessor_InvalidTypeIdentifier_UnrelatedType(object p0, object p1);
    internal static string OpenNavigationPropertiesNotSupportedOnOpenTypes(object p0);
    internal static string get_BadRequest_ResourceCanBeCrossReferencedOnlyForBindOperation();
    internal static string DataServiceConfiguration_ResponseVersionIsBiggerThanProtocolVersion(object p0, object p1);
    internal static string BadRequest_KeyCountMismatch(object p0);
    internal static string BadRequest_KeyMismatch(object p0);
    internal static string BadRequest_KeyOrAlternateKeyMismatch(object p0);
    internal static string get_RequestUriProcessor_KeysMustBeNamed();
    internal static string RequestUriProcessor_ResourceNotFound(object p0);
    internal static string RequestUriProcessor_BatchedActionOnEntityCreatedInSameChangeset(object p0);
    internal static string get_RequestUriProcessor_Forbidden();
    internal static string get_RequestUriProcessor_OperationSegmentBoundToANonEntityType();
    internal static string RequestUriProcessor_NoBoundEscapeFunctionSupported(object p0);
    internal static string RequestUriProcessor_EscapeFunctionMustHaveOneStringParameter(object p0);
    internal static string get_RequestUriProcessor_ComposableEscapeFunctionShouldHaveValidParameter();
    internal static string General_InternalError(object p0);
    internal static string ExceptionUtils_CheckIntegerNotNegative(object p0);
    internal static string ExceptionUtils_CheckIntegerPositive(object p0);
    internal static string ExceptionUtils_CheckLongPositive(object p0);
    internal static string get_ExceptionUtils_ArgumentStringNullOrEmpty();
    internal static string get_ExpressionToken_OnlyRefAllowWithStarInExpand();
    internal static string get_ExpressionToken_DollarCountNotAllowedInSelect();
    internal static string get_ExpressionToken_NoPropAllowedAfterDollarCount();
    internal static string get_ExpressionToken_NoPropAllowedAfterRef();
    internal static string get_ExpressionToken_NoSegmentAllowedBeforeStarInExpand();
    internal static string ExpressionToken_IdentifierExpected(object p0);
    internal static string ExpressionLexer_UnterminatedStringLiteral(object p0, object p1);
    internal static string ExpressionLexer_InvalidCharacter(object p0, object p1, object p2);
    internal static string ExpressionLexer_SyntaxError(object p0, object p1);
    internal static string ExpressionLexer_UnterminatedLiteral(object p0, object p1);
    internal static string ExpressionLexer_DigitExpected(object p0, object p1);
    internal static string get_ExpressionLexer_UnbalancedBracketExpression();
    internal static string ExpressionLexer_InvalidNumericString(object p0);
    internal static string ExpressionLexer_InvalidEscapeSequence(object p0, object p1, object p2);
    internal static string UriQueryExpressionParser_UnrecognizedLiteral(object p0, object p1, object p2, object p3);
    internal static string UriQueryExpressionParser_UnrecognizedLiteralWithReason(object p0, object p1, object p2, object p3, object p4);
    internal static string UriPrimitiveTypeParsers_FailedToParseTextToPrimitiveValue(object p0, object p1);
    internal static string get_UriPrimitiveTypeParsers_FailedToParseStringToGeography();
    internal static string get_UriCustomTypeParsers_AddCustomUriTypeParserAlreadyExists();
    internal static string UriCustomTypeParsers_AddCustomUriTypeParserEdmTypeExists(object p0);
    internal static string UriParserHelper_InvalidPrefixLiteral(object p0);
    internal static string CustomUriTypePrefixLiterals_AddCustomUriTypePrefixLiteralAlreadyExists(object p0);
    internal static string ValueParser_InvalidDuration(object p0);
    internal static string PlatformHelper_DateTimeOffsetMustContainTimeZone(object p0);
    internal static string JsonReader_UnexpectedComma(object p0);
    internal static string JsonReader_ArrayClosureMismatch(object p0, object p1, object p2);
    internal static string get_JsonReader_MultipleTopLevelValues();
    internal static string get_JsonReader_EndOfInputWithOpenScope();
    internal static string JsonReader_UnexpectedToken(object p0);
    internal static string get_JsonReader_UnrecognizedToken();
    internal static string JsonReader_MissingColon(object p0);
    internal static string JsonReader_UnrecognizedEscapeSequence(object p0);
    internal static string get_JsonReader_UnexpectedEndOfString();
    internal static string JsonReader_InvalidNumberFormat(object p0);
    internal static string JsonReader_InvalidBinaryFormat(object p0);
    internal static string JsonReader_MissingComma(object p0);
    internal static string JsonReader_InvalidPropertyNameOrUnexpectedComma(object p0);
    internal static string get_JsonReader_MaxBufferReached();
    internal static string get_JsonReader_CannotAccessValueInStreamState();
    internal static string get_JsonReader_CannotCallReadInStreamState();
    internal static string get_JsonReader_CannotCreateReadStream();
    internal static string get_JsonReader_CannotCreateTextReader();
    internal static string JsonReaderExtensions_UnexpectedNodeDetected(object p0, object p1);
    internal static string JsonReaderExtensions_UnexpectedNodeDetectedWithPropertyName(object p0, object p1, object p2);
    internal static string JsonReaderExtensions_CannotReadPropertyValueAsString(object p0, object p1);
    internal static string JsonReaderExtensions_CannotReadValueAsString(object p0);
    internal static string JsonReaderExtensions_CannotReadValueAsDouble(object p0);
    internal static string JsonReaderExtensions_UnexpectedInstanceAnnotationName(object p0);
    internal static string BufferUtils_InvalidBufferOrSize(object p0);
    internal static string ServiceProviderExtensions_NoServiceRegistered(object p0);
    internal static string TypeUtils_TypeNameIsNotQualified(object p0);
}
[ExtensionAttribute]
[SuppressMessageAttribute("Reliability", "CA2008:Do not create tasks without passing a TaskScheduler")]
internal static class Microsoft.OData.TaskUtils : object {
    private static Task completedTask;
    internal static Task CompletedTask { get; }
    internal static Task get_CompletedTask();
    internal static Task`1<T> GetCompletedTask(T value);
    internal static Task GetFaultedTask(Exception exception);
    internal static Task`1<T> GetFaultedTask(Exception exception);
    internal static Task GetTaskForSynchronousOperation(Action synchronousOperation);
    internal static Task GetTaskForSynchronousOperation(Action`1<TArg> synchronousOperation, TArg arg);
    internal static Task GetTaskForSynchronousOperation(Action`2<TArg1, TArg2> synchronousOperation, TArg1 arg1, TArg2 arg2);
    internal static Task GetTaskForSynchronousOperation(Action`3<TArg1, TArg2, TArg3> synchronousOperation, TArg1 arg1, TArg2 arg2, TArg3 arg3);
    internal static Task GetTaskForSynchronousOperation(Action`4<TArg1, TArg2, TArg3, TArg4> synchronousOperation, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4);
    internal static Task GetTaskForSynchronousOperation(Action`5<TArg1, TArg2, TArg3, TArg4, TArg5> synchronousOperation, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4, TArg5 arg5);
    internal static Task`1<T> GetTaskForSynchronousOperation(Func`1<T> synchronousOperation);
    internal static Task`1<TResult> GetTaskForSynchronousOperation(Func`2<TArg, TResult> synchronousOperation, TArg arg);
    internal static Task`1<TResult> GetTaskForSynchronousOperation(Func`3<TArg1, TArg2, TResult> synchronousOperation, TArg1 arg1, TArg2 arg2);
    internal static Task`1<TResult> GetTaskForSynchronousOperation(Func`4<TArg1, TArg2, TArg3, TResult> synchronousOperation, TArg1 arg1, TArg2 arg2, TArg3 arg3);
    internal static Task`1<TResult> GetTaskForSynchronousOperation(Func`5<TArg1, TArg2, TArg3, TArg4, TResult> synchronousOperation, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4);
    internal static Task`1<TResult> GetTaskForSynchronousOperation(Func`6<TArg1, TArg2, TArg3, TArg4, TArg5, TResult> synchronousOperation, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4, TArg5 arg5);
    internal static Task GetTaskForSynchronousOperationReturningTask(Func`1<Task> synchronousOperation);
    internal static Task`1<TResult> GetTaskForSynchronousOperationReturningTask(Func`1<Task`1<TResult>> synchronousOperation);
    [ExtensionAttribute]
internal static Task FollowOnSuccessWith(Task antecedentTask, Action`1<Task> operation);
    [ExtensionAttribute]
internal static Task`1<TFollowupTaskResult> FollowOnSuccessWith(Task antecedentTask, Func`2<Task, TFollowupTaskResult> operation);
    [ExtensionAttribute]
internal static Task FollowOnSuccessWith(Task`1<TAntecedentTaskResult> antecedentTask, Action`1<Task`1<TAntecedentTaskResult>> operation);
    [ExtensionAttribute]
internal static Task`1<TFollowupTaskResult> FollowOnSuccessWith(Task`1<TAntecedentTaskResult> antecedentTask, Func`2<Task`1<TAntecedentTaskResult>, TFollowupTaskResult> operation);
    [ExtensionAttribute]
internal static Task FollowOnSuccessWithTask(Task antecedentTask, Func`2<Task, Task> operation);
    [ExtensionAttribute]
internal static Task`1<TFollowupTaskResult> FollowOnSuccessWithTask(Task antecedentTask, Func`2<Task, Task`1<TFollowupTaskResult>> operation);
    [ExtensionAttribute]
internal static Task FollowOnSuccessWithTask(Task`1<TAntecedentTaskResult> antecedentTask, Func`2<Task`1<TAntecedentTaskResult>, Task> operation);
    [ExtensionAttribute]
internal static Task`1<TFollowupTaskResult> FollowOnSuccessWithTask(Task`1<TAntecedentTaskResult> antecedentTask, Func`2<Task`1<TAntecedentTaskResult>, Task`1<TFollowupTaskResult>> operation);
    [ExtensionAttribute]
internal static Task FollowOnFaultWith(Task antecedentTask, Action`1<Task> operation);
    [ExtensionAttribute]
internal static Task`1<TResult> FollowOnFaultWith(Task`1<TResult> antecedentTask, Action`1<Task`1<TResult>> operation);
    [ExtensionAttribute]
internal static Task`1<TResult> FollowOnFaultAndCatchExceptionWith(Task`1<TResult> antecedentTask, Func`2<TExceptionType, TResult> catchBlock);
    [ExtensionAttribute]
internal static Task FollowAlwaysWith(Task antecedentTask, Action`1<Task> operation);
    [ExtensionAttribute]
internal static Task`1<TResult> FollowAlwaysWith(Task`1<TResult> antecedentTask, Action`1<Task`1<TResult>> operation);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Performance", "CA1804:RemoveUnusedLocals")]
internal static Task IgnoreExceptions(Task task);
    [ExtensionAttribute]
internal static TaskScheduler GetTargetScheduler(TaskFactory factory);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
internal static Task Iterate(TaskFactory factory, IEnumerable`1<Task> source);
    private static void FollowOnSuccessWithContinuation(Task antecedentTask, TaskCompletionSource`1<TResult> taskCompletionSource, Func`2<Task, TResult> operation);
    private static Task`1<TResult> FollowOnSuccessWithImplementation(Task antecedentTask, Func`2<Task, TResult> operation);
    private static Task`1<TResult> FollowOnFaultWithImplementation(Task antecedentTask, Func`2<Task, TResult> getTaskResult, Action`1<Task> operation);
    private static Task`1<TResult> FollowOnFaultAndCatchExceptionWithImplementation(Task antecedentTask, Func`2<Task, TResult> getTaskResult, Func`2<TExceptionType, TResult> catchBlock);
    [ExtensionAttribute]
private static Task`1<TResult> FollowAlwaysWithImplementation(Task antecedentTask, Func`2<Task, TResult> getTaskResult, Action`1<Task> operation);
}
internal class Microsoft.OData.TextRes : object {
    internal static string ExceptionUtils_ArgumentStringEmpty;
    internal static string ODataRequestMessage_AsyncNotAvailable;
    internal static string ODataRequestMessage_StreamTaskIsNull;
    internal static string ODataRequestMessage_MessageStreamIsNull;
    internal static string ODataResponseMessage_AsyncNotAvailable;
    internal static string ODataResponseMessage_StreamTaskIsNull;
    internal static string ODataResponseMessage_MessageStreamIsNull;
    internal static string AsyncBufferedStream_WriterDisposedWithoutFlush;
    internal static string ODataOutputContext_UnsupportedPayloadKindForFormat;
    internal static string ODataInputContext_UnsupportedPayloadKindForFormat;
    internal static string ODataOutputContext_MetadataDocumentUriMissing;
    internal static string ODataJsonSerializer_RelativeUriUsedWithoutMetadataDocumentUriOrMetadata;
    internal static string ODataWriter_RelativeUriUsedWithoutBaseUriSpecified;
    internal static string ODataWriter_StreamPropertiesMustBePropertiesOfODataResource;
    internal static string ODataWriterCore_InvalidStateTransition;
    internal static string ODataWriterCore_InvalidTransitionFromStart;
    internal static string ODataWriterCore_InvalidTransitionFromResource;
    internal static string ODataWriterCore_InvalidTransitionFrom40DeletedResource;
    internal static string ODataWriterCore_InvalidTransitionFromNullResource;
    internal static string ODataWriterCore_InvalidTransitionFromResourceSet;
    internal static string ODataWriterCore_InvalidTransitionFromExpandedLink;
    internal static string ODataWriterCore_InvalidTransitionFromCompleted;
    internal static string ODataWriterCore_InvalidTransitionFromError;
    internal static string ODataJsonDeltaWriter_InvalidTransitionFromNestedResource;
    internal static string ODataJsonDeltaWriter_InvalidTransitionToNestedResource;
    internal static string ODataJsonDeltaWriter_WriteStartExpandedResourceSetCalledInInvalidState;
    internal static string ODataWriterCore_WriteEndCalledInInvalidState;
    internal static string ODataWriterCore_StreamNotDisposed;
    internal static string ODataWriterCore_DeltaResourceWithoutIdOrKeyProperties;
    internal static string ODataWriterCore_QueryCountInRequest;
    internal static string ODataWriterCore_QueryNextLinkInRequest;
    internal static string ODataWriterCore_QueryDeltaLinkInRequest;
    internal static string ODataWriterCore_CannotWriteDeltaWithResourceSetWriter;
    internal static string ODataWriterCore_NestedContentNotAllowedIn40DeletedEntry;
    internal static string ODataWriterCore_CannotWriteTopLevelResourceSetWithResourceWriter;
    internal static string ODataWriterCore_CannotWriteTopLevelResourceWithResourceSetWriter;
    internal static string ODataWriterCore_SyncCallOnAsyncWriter;
    internal static string ODataWriterCore_AsyncCallOnSyncWriter;
    internal static string ODataWriterCore_EntityReferenceLinkWithoutNavigationLink;
    internal static string ODataWriterCore_DeferredLinkInRequest;
    internal static string ODataWriterCore_MultipleItemsInNestedResourceInfoWithContent;
    internal static string ODataWriterCore_DeltaLinkNotSupportedOnExpandedResourceSet;
    internal static string ODataWriterCore_PathInODataUriMustBeSetWhenWritingContainedElement;
    internal static string DuplicatePropertyNamesNotAllowed;
    internal static string DuplicateAnnotationNotAllowed;
    internal static string DuplicateAnnotationForPropertyNotAllowed;
    internal static string DuplicateAnnotationForInstanceAnnotationNotAllowed;
    internal static string PropertyAnnotationAfterTheProperty;
    internal static string ValueUtils_CannotConvertValueToPrimitive;
    internal static string ODataJsonWriter_UnsupportedValueType;
    internal static string ODataJsonWriter_UnsupportedValueInCollection;
    internal static string ODataJsonWriter_UnsupportedDateTimeFormat;
    internal static string ODataException_GeneralError;
    internal static string ODataErrorException_GeneralError;
    internal static string ODataUriParserException_GeneralError;
    internal static string ODataUrlValidationError_SelectRequired;
    internal static string ODataUrlValidationError_InvalidRule;
    internal static string ODataMessageWriter_WriterAlreadyUsed;
    internal static string ODataMessageWriter_EntityReferenceLinksInRequestNotAllowed;
    internal static string ODataMessageWriter_ErrorPayloadInRequest;
    internal static string ODataMessageWriter_ServiceDocumentInRequest;
    internal static string ODataMessageWriter_MetadataDocumentInRequest;
    internal static string ODataMessageWriter_DeltaInRequest;
    internal static string ODataMessageWriter_AsyncInRequest;
    internal static string ODataMessageWriter_CannotWriteTopLevelNull;
    internal static string ODataMessageWriter_CannotWriteNullInRawFormat;
    internal static string ODataMessageWriter_CannotSetHeadersWithInvalidPayloadKind;
    internal static string ODataMessageWriter_IncompatiblePayloadKinds;
    internal static string ODataMessageWriter_CannotWriteStreamPropertyAsTopLevelProperty;
    internal static string ODataMessageWriter_WriteErrorAlreadyCalled;
    internal static string ODataMessageWriter_CannotWriteInStreamErrorForRawValues;
    internal static string ODataMessageWriter_CannotWriteMetadataWithoutModel;
    internal static string ODataMessageWriter_CannotSpecifyOperationWithoutModel;
    internal static string ODataMessageWriter_JsonPaddingOnInvalidContentType;
    internal static string ODataMessageWriter_NonCollectionType;
    internal static string ODataMessageWriter_NotAllowedWriteTopLevelPropertyWithResourceValue;
    internal static string ODataMessageWriter_JsonWriterFactory_ReturnedNull;
    internal static string ODataMessageWriter_Buffer_Maximum_Size_Exceeded;
    internal static string ODataMessageWriterSettings_MessageWriterSettingsXmlCustomizationCallbacksMustBeSpecifiedBoth;
    internal static string ODataCollectionWriterCore_InvalidTransitionFromStart;
    internal static string ODataCollectionWriterCore_InvalidTransitionFromCollection;
    internal static string ODataCollectionWriterCore_InvalidTransitionFromItem;
    internal static string ODataCollectionWriterCore_WriteEndCalledInInvalidState;
    internal static string ODataCollectionWriterCore_SyncCallOnAsyncWriter;
    internal static string ODataCollectionWriterCore_AsyncCallOnSyncWriter;
    internal static string ODataBatch_InvalidHttpMethodForChangeSetRequest;
    internal static string ODataBatchOperationHeaderDictionary_KeyNotFound;
    internal static string ODataBatchOperationHeaderDictionary_DuplicateCaseInsensitiveKeys;
    internal static string ODataParameterWriter_InStreamErrorNotSupported;
    internal static string ODataParameterWriter_CannotCreateParameterWriterOnResponseMessage;
    internal static string ODataParameterWriterCore_SyncCallOnAsyncWriter;
    internal static string ODataParameterWriterCore_AsyncCallOnSyncWriter;
    internal static string ODataParameterWriterCore_CannotWriteStart;
    internal static string ODataParameterWriterCore_CannotWriteParameter;
    internal static string ODataParameterWriterCore_CannotWriteEnd;
    internal static string ODataParameterWriterCore_CannotWriteInErrorOrCompletedState;
    internal static string ODataParameterWriterCore_DuplicatedParameterNameNotAllowed;
    internal static string ODataParameterWriterCore_CannotWriteValueOnNonValueTypeKind;
    internal static string ODataParameterWriterCore_CannotWriteValueOnNonSupportedValueType;
    internal static string ODataParameterWriterCore_CannotCreateCollectionWriterOnNonCollectionTypeKind;
    internal static string ODataParameterWriterCore_CannotCreateResourceWriterOnNonEntityOrComplexTypeKind;
    internal static string ODataParameterWriterCore_CannotCreateResourceSetWriterOnNonStructuredCollectionTypeKind;
    internal static string ODataParameterWriterCore_ParameterNameNotFoundInOperation;
    internal static string ODataParameterWriterCore_MissingParameterInParameterPayload;
    internal static string ODataBatchWriter_FlushOrFlushAsyncCalledInStreamRequestedState;
    internal static string ODataBatchWriter_CannotCompleteBatchWithActiveChangeSet;
    internal static string ODataBatchWriter_CannotStartChangeSetWithActiveChangeSet;
    internal static string ODataBatchWriter_CannotCompleteChangeSetWithoutActiveChangeSet;
    internal static string ODataBatchWriter_InvalidTransitionFromStart;
    internal static string ODataBatchWriter_InvalidTransitionFromBatchStarted;
    internal static string ODataBatchWriter_InvalidTransitionFromChangeSetStarted;
    internal static string ODataBatchWriter_InvalidTransitionFromOperationCreated;
    internal static string ODataBatchWriter_InvalidTransitionFromOperationContentStreamRequested;
    internal static string ODataBatchWriter_InvalidTransitionFromOperationContentStreamDisposed;
    internal static string ODataBatchWriter_InvalidTransitionFromChangeSetCompleted;
    internal static string ODataBatchWriter_InvalidTransitionFromBatchCompleted;
    internal static string ODataBatchWriter_CannotCreateRequestOperationWhenWritingResponse;
    internal static string ODataBatchWriter_CannotCreateResponseOperationWhenWritingRequest;
    internal static string ODataBatchWriter_MaxBatchSizeExceeded;
    internal static string ODataBatchWriter_MaxChangeSetSizeExceeded;
    internal static string ODataBatchWriter_SyncCallOnAsyncWriter;
    internal static string ODataBatchWriter_AsyncCallOnSyncWriter;
    internal static string ODataBatchWriter_DuplicateContentIDsNotAllowed;
    internal static string ODataBatchWriter_CannotWriteInStreamErrorForBatch;
    internal static string ODataBatchUtils_RelativeUriUsedWithoutBaseUriSpecified;
    internal static string ODataBatchUtils_RelativeUriStartingWithDollarUsedWithoutBaseUriSpecified;
    internal static string ODataBatchOperationMessage_VerifyNotCompleted;
    internal static string ODataBatchOperationStream_Disposed;
    internal static string ODataBatchReader_CannotCreateRequestOperationWhenReadingResponse;
    internal static string ODataBatchReader_CannotCreateResponseOperationWhenReadingRequest;
    internal static string ODataBatchReader_InvalidStateForCreateOperationRequestMessage;
    internal static string ODataBatchReader_OperationRequestMessageAlreadyCreated;
    internal static string ODataBatchReader_OperationResponseMessageAlreadyCreated;
    internal static string ODataBatchReader_InvalidStateForCreateOperationResponseMessage;
    internal static string ODataBatchReader_CannotUseReaderWhileOperationStreamActive;
    internal static string ODataBatchReader_SyncCallOnAsyncReader;
    internal static string ODataBatchReader_AsyncCallOnSyncReader;
    internal static string ODataBatchReader_ReadOrReadAsyncCalledInInvalidState;
    internal static string ODataBatchReader_MaxBatchSizeExceeded;
    internal static string ODataBatchReader_MaxChangeSetSizeExceeded;
    internal static string ODataBatchReader_NoMessageWasCreatedForOperation;
    internal static string ODataBatchReader_ReaderModeNotInitilized;
    internal static string ODataBatchReader_JsonBatchTopLevelPropertyMissing;
    internal static string ODataBatchReader_DuplicateContentIDsNotAllowed;
    internal static string ODataBatchReader_DuplicateAtomicityGroupIDsNotAllowed;
    internal static string ODataBatchReader_RequestPropertyMissing;
    internal static string ODataBatchReader_SameRequestIdAsAtomicityGroupIdNotAllowed;
    internal static string ODataBatchReader_SelfReferenceDependsOnRequestIdNotAllowed;
    internal static string ODataBatchReader_DependsOnRequestIdIsPartOfAtomicityGroupNotAllowed;
    internal static string ODataBatchReader_DependsOnIdNotFound;
    internal static string ODataBatchReader_AbsoluteURINotMatchingBaseUri;
    internal static string ODataBatchReader_ReferenceIdNotIncludedInDependsOn;
    internal static string ODataBatch_GroupIdOrChangeSetIdCannotBeNull;
    internal static string ODataBatchReader_MessageIdPositionedIncorrectly;
    internal static string ODataBatchReader_ReaderStreamChangesetBoundaryCannotBeNull;
    internal static string ODataBatchReaderStream_InvalidHeaderSpecified;
    internal static string ODataBatchReaderStream_InvalidRequestLine;
    internal static string ODataBatchReaderStream_InvalidResponseLine;
    internal static string ODataBatchReaderStream_InvalidHttpVersionSpecified;
    internal static string ODataBatchReaderStream_NonIntegerHttpStatusCode;
    internal static string ODataBatchReaderStream_MissingContentTypeHeader;
    internal static string ODataBatchReaderStream_MissingOrInvalidContentEncodingHeader;
    internal static string ODataBatchReaderStream_InvalidContentTypeSpecified;
    internal static string ODataBatchReaderStream_InvalidContentLengthSpecified;
    internal static string ODataBatchReaderStream_DuplicateHeaderFound;
    internal static string ODataBatchReaderStream_NestedChangesetsAreNotSupported;
    internal static string ODataBatchReaderStream_MultiByteEncodingsNotSupported;
    internal static string ODataBatchReaderStream_UnexpectedEndOfInput;
    internal static string ODataBatchReaderStreamBuffer_BoundaryLineSecurityLimitReached;
    internal static string ODataJsonBatchPayloadItemPropertiesCache_UnknownPropertyForMessageInBatch;
    internal static string ODataJsonBatchPayloadItemPropertiesCache_DuplicatePropertyForRequestInBatch;
    internal static string ODataJsonBatchPayloadItemPropertiesCache_DuplicateHeaderForRequestInBatch;
    internal static string ODataJsonBatchBodyContentReaderStream_UnexpectedNodeType;
    internal static string ODataJsonBatchBodyContentReaderStream_UnsupportedContentTypeInHeader;
    internal static string ODataAsyncWriter_CannotCreateResponseWhenNotWritingResponse;
    internal static string ODataAsyncWriter_CannotCreateResponseMoreThanOnce;
    internal static string ODataAsyncWriter_SyncCallOnAsyncWriter;
    internal static string ODataAsyncWriter_AsyncCallOnSyncWriter;
    internal static string ODataAsyncWriter_CannotWriteInStreamErrorForAsync;
    internal static string ODataAsyncReader_InvalidHeaderSpecified;
    internal static string ODataAsyncReader_CannotCreateResponseWhenNotReadingResponse;
    internal static string ODataAsyncReader_InvalidResponseLine;
    internal static string ODataAsyncReader_InvalidHttpVersionSpecified;
    internal static string ODataAsyncReader_NonIntegerHttpStatusCode;
    internal static string ODataAsyncReader_DuplicateHeaderFound;
    internal static string ODataAsyncReader_MultiByteEncodingsNotSupported;
    internal static string ODataAsyncReader_InvalidNewLineEncountered;
    internal static string ODataAsyncReader_UnexpectedEndOfInput;
    internal static string ODataAsyncReader_SyncCallOnAsyncReader;
    internal static string ODataAsyncReader_AsyncCallOnSyncReader;
    internal static string HttpUtils_MediaTypeUnspecified;
    internal static string HttpUtils_MediaTypeRequiresSlash;
    internal static string HttpUtils_MediaTypeRequiresSubType;
    internal static string HttpUtils_MediaTypeMissingParameterValue;
    internal static string HttpUtils_MediaTypeMissingParameterName;
    internal static string HttpUtils_EscapeCharWithoutQuotes;
    internal static string HttpUtils_EscapeCharAtEnd;
    internal static string HttpUtils_ClosingQuoteNotFound;
    internal static string HttpUtils_InvalidCharacterInQuotedParameterValue;
    internal static string HttpUtils_ContentTypeMissing;
    internal static string HttpUtils_MediaTypeRequiresSemicolonBeforeParameter;
    internal static string HttpUtils_InvalidQualityValueStartChar;
    internal static string HttpUtils_InvalidQualityValue;
    internal static string HttpUtils_CannotConvertCharToInt;
    internal static string HttpUtils_MissingSeparatorBetweenCharsets;
    internal static string HttpUtils_InvalidSeparatorBetweenCharsets;
    internal static string HttpUtils_InvalidCharsetName;
    internal static string HttpUtils_UnexpectedEndOfQValue;
    internal static string HttpUtils_ExpectedLiteralNotFoundInString;
    internal static string HttpUtils_InvalidHttpMethodString;
    internal static string HttpUtils_NoOrMoreThanOneContentTypeSpecified;
    internal static string HttpHeaderValueLexer_UnrecognizedSeparator;
    internal static string HttpHeaderValueLexer_TokenExpectedButFoundQuotedString;
    internal static string HttpHeaderValueLexer_FailedToReadTokenOrQuotedString;
    internal static string HttpHeaderValueLexer_InvalidSeparatorAfterQuotedString;
    internal static string HttpHeaderValueLexer_EndOfFileAfterSeparator;
    internal static string MediaType_EncodingNotSupported;
    internal static string MediaTypeUtils_DidNotFindMatchingMediaType;
    internal static string MediaTypeUtils_CannotDetermineFormatFromContentType;
    internal static string MediaTypeUtils_NoOrMoreThanOneContentTypeSpecified;
    internal static string MediaTypeUtils_BoundaryMustBeSpecifiedForBatchPayloads;
    internal static string ExpressionLexer_ExpectedLiteralToken;
    internal static string ODataUriUtils_ConvertToUriLiteralUnsupportedType;
    internal static string ODataUriUtils_ConvertFromUriLiteralTypeRefWithoutModel;
    internal static string ODataUriUtils_ConvertFromUriLiteralOverflowNumber;
    internal static string ODataUriUtils_ConvertFromUriLiteralTypeVerificationFailure;
    internal static string ODataUriUtils_ConvertFromUriLiteralNullTypeVerificationFailure;
    internal static string ODataUriUtils_ConvertFromUriLiteralNullOnNonNullableType;
    internal static string ODataUtils_CannotConvertValueToRawString;
    internal static string ODataUtils_DidNotFindDefaultMediaType;
    internal static string ODataUtils_UnsupportedVersionHeader;
    internal static string ODataUtils_MaxProtocolVersionExceeded;
    internal static string ODataUtils_UnsupportedVersionNumber;
    internal static string ODataUtils_ModelDoesNotHaveContainer;
    internal static string ReaderUtils_EnumerableModified;
    internal static string ReaderValidationUtils_NullValueForNonNullableType;
    internal static string ReaderValidationUtils_NullValueForNullableType;
    internal static string ReaderValidationUtils_NullNamedValueForNonNullableType;
    internal static string ReaderValidationUtils_NullNamedValueForNullableType;
    internal static string ReaderValidationUtils_EntityReferenceLinkMissingUri;
    internal static string ReaderValidationUtils_ValueWithoutType;
    internal static string ReaderValidationUtils_ResourceWithoutType;
    internal static string ReaderValidationUtils_CannotConvertPrimitiveValue;
    internal static string ReaderValidationUtils_MessageReaderSettingsBaseUriMustBeNullOrAbsolute;
    internal static string ReaderValidationUtils_UndeclaredPropertyBehaviorKindSpecifiedOnRequest;
    internal static string ReaderValidationUtils_ContextUriValidationInvalidExpectedEntitySet;
    internal static string ReaderValidationUtils_ContextUriValidationInvalidExpectedEntityType;
    internal static string ReaderValidationUtils_ContextUriValidationNonMatchingPropertyNames;
    internal static string ReaderValidationUtils_ContextUriValidationNonMatchingDeclaringTypes;
    internal static string ReaderValidationUtils_NonMatchingPropertyNames;
    internal static string ReaderValidationUtils_TypeInContextUriDoesNotMatchExpectedType;
    internal static string ReaderValidationUtils_ContextUriDoesNotReferTypeAssignableToExpectedType;
    internal static string ReaderValidationUtils_ValueTypeNotAllowedInDerivedTypeConstraint;
    internal static string ODataMessageReader_ReaderAlreadyUsed;
    internal static string ODataMessageReader_ErrorPayloadInRequest;
    internal static string ODataMessageReader_ServiceDocumentInRequest;
    internal static string ODataMessageReader_MetadataDocumentInRequest;
    internal static string ODataMessageReader_DeltaInRequest;
    internal static string ODataMessageReader_ExpectedTypeSpecifiedWithoutMetadata;
    internal static string ODataMessageReader_EntitySetSpecifiedWithoutMetadata;
    internal static string ODataMessageReader_OperationImportSpecifiedWithoutMetadata;
    internal static string ODataMessageReader_OperationSpecifiedWithoutMetadata;
    internal static string ODataMessageReader_ExpectedCollectionTypeWrongKind;
    internal static string ODataMessageReader_ExpectedPropertyTypeEntityCollectionKind;
    internal static string ODataMessageReader_ExpectedPropertyTypeEntityKind;
    internal static string ODataMessageReader_ExpectedPropertyTypeStream;
    internal static string ODataMessageReader_ExpectedValueTypeWrongKind;
    internal static string ODataMessageReader_NoneOrEmptyContentTypeHeader;
    internal static string ODataMessageReader_WildcardInContentType;
    internal static string ODataMessageReader_GetFormatCalledBeforeReadingStarted;
    internal static string ODataMessageReader_DetectPayloadKindMultipleTimes;
    internal static string ODataMessageReader_PayloadKindDetectionRunning;
    internal static string ODataMessageReader_PayloadKindDetectionInServerMode;
    internal static string ODataMessageReader_ParameterPayloadInResponse;
    internal static string ODataMessageReader_SingletonNavigationPropertyForEntityReferenceLinks;
    internal static string ODataAsyncResponseMessage_MustNotModifyMessage;
    internal static string ODataMessage_MustNotModifyMessage;
    internal static string ODataReaderCore_SyncCallOnAsyncReader;
    internal static string ODataReaderCore_AsyncCallOnSyncReader;
    internal static string ODataReaderCore_ReadOrReadAsyncCalledInInvalidState;
    internal static string ODataReaderCore_CreateReadStreamCalledInInvalidState;
    internal static string ODataReaderCore_CreateTextReaderCalledInInvalidState;
    internal static string ODataReaderCore_ReadCalledWithOpenStream;
    internal static string ODataReaderCore_NoReadCallsAllowed;
    internal static string ODataWriterCore_PropertyValueAlreadyWritten;
    internal static string ODataJsonReader_CannotReadResourcesOfResourceSet;
    internal static string ODataJsonReaderUtils_CannotConvertInt32;
    internal static string ODataJsonReaderUtils_CannotConvertDouble;
    internal static string ODataJsonReaderUtils_CannotConvertBoolean;
    internal static string ODataJsonReaderUtils_CannotConvertDecimal;
    internal static string ODataJsonReaderUtils_CannotConvertDateTime;
    internal static string ODataJsonReaderUtils_CannotConvertDateTimeOffset;
    internal static string ODataJsonReaderUtils_ConflictBetweenInputFormatAndParameter;
    internal static string ODataJsonReaderUtils_MultipleErrorPropertiesWithSameName;
    internal static string ODataJsonResourceSerializer_ActionsAndFunctionsGroupMustSpecifyTarget;
    internal static string ODataJsonResourceSerializer_ActionsAndFunctionsGroupMustNotHaveDuplicateTarget;
    internal static string ODataJsonErrorDeserializer_TopLevelErrorWithInvalidProperty;
    internal static string ODataJsonErrorDeserializer_TopLevelErrorMessageValueWithInvalidProperty;
    internal static string ODataCollectionReaderCore_ReadOrReadAsyncCalledInInvalidState;
    internal static string ODataCollectionReaderCore_SyncCallOnAsyncReader;
    internal static string ODataCollectionReaderCore_AsyncCallOnSyncReader;
    internal static string ODataCollectionReaderCore_ExpectedItemTypeSetInInvalidState;
    internal static string ODataParameterReaderCore_ReadOrReadAsyncCalledInInvalidState;
    internal static string ODataParameterReaderCore_SyncCallOnAsyncReader;
    internal static string ODataParameterReaderCore_AsyncCallOnSyncReader;
    internal static string ODataParameterReaderCore_SubReaderMustBeCreatedAndReadToCompletionBeforeTheNextReadOrReadAsyncCall;
    internal static string ODataParameterReaderCore_SubReaderMustBeInCompletedStateBeforeTheNextReadOrReadAsyncCall;
    internal static string ODataParameterReaderCore_InvalidCreateReaderMethodCalledForState;
    internal static string ODataParameterReaderCore_CreateReaderAlreadyCalled;
    internal static string ODataParameterReaderCore_ParameterNameNotInMetadata;
    internal static string ODataParameterReaderCore_DuplicateParametersInPayload;
    internal static string ODataParameterReaderCore_ParametersMissingInPayload;
    internal static string ValidationUtils_ActionsAndFunctionsMustSpecifyMetadata;
    internal static string ValidationUtils_ActionsAndFunctionsMustSpecifyTarget;
    internal static string ValidationUtils_EnumerableContainsANullItem;
    internal static string ValidationUtils_AssociationLinkMustSpecifyName;
    internal static string ValidationUtils_AssociationLinkMustSpecifyUrl;
    internal static string ValidationUtils_TypeNameMustNotBeEmpty;
    internal static string ValidationUtils_PropertyDoesNotExistOnType;
    internal static string ValidationUtils_ResourceMustSpecifyUrl;
    internal static string ValidationUtils_ResourceMustSpecifyName;
    internal static string ValidationUtils_ServiceDocumentElementUrlMustNotBeNull;
    internal static string ValidationUtils_NonPrimitiveTypeForPrimitiveValue;
    internal static string ValidationUtils_UnsupportedPrimitiveType;
    internal static string ValidationUtils_IncompatiblePrimitiveItemType;
    internal static string ValidationUtils_NonNullableCollectionElementsMustNotBeNull;
    internal static string ValidationUtils_InvalidCollectionTypeName;
    internal static string ValidationUtils_UnrecognizedTypeName;
    internal static string ValidationUtils_IncorrectTypeKind;
    internal static string ValidationUtils_IncorrectTypeKindNoTypeName;
    internal static string ValidationUtils_IncorrectValueTypeKind;
    internal static string ValidationUtils_LinkMustSpecifyName;
    internal static string ValidationUtils_MismatchPropertyKindForStreamProperty;
    internal static string ValidationUtils_NestedCollectionsAreNotSupported;
    internal static string ValidationUtils_StreamReferenceValuesNotSupportedInCollections;
    internal static string ValidationUtils_IncompatibleType;
    internal static string ValidationUtils_OpenCollectionProperty;
    internal static string ValidationUtils_OpenStreamProperty;
    internal static string ValidationUtils_InvalidCollectionTypeReference;
    internal static string ValidationUtils_ResourceWithMediaResourceAndNonMLEType;
    internal static string ValidationUtils_ResourceWithoutMediaResourceAndMLEType;
    internal static string ValidationUtils_ResourceTypeNotAssignableToExpectedType;
    internal static string ValidationUtils_NavigationPropertyExpected;
    internal static string ValidationUtils_InvalidBatchBoundaryDelimiterLength;
    internal static string ValidationUtils_RecursionDepthLimitReached;
    internal static string ValidationUtils_MaxDepthOfNestedEntriesExceeded;
    internal static string ValidationUtils_NullCollectionItemForNonNullableType;
    internal static string ValidationUtils_PropertiesMustNotContainReservedChars;
    internal static string ValidationUtils_WorkspaceResourceMustNotContainNullItem;
    internal static string ValidationUtils_InvalidMetadataReferenceProperty;
    internal static string WriterValidationUtils_PropertyMustNotBeNull;
    internal static string WriterValidationUtils_PropertiesMustHaveNonEmptyName;
    internal static string WriterValidationUtils_MissingTypeNameWithMetadata;
    internal static string WriterValidationUtils_NextPageLinkInRequest;
    internal static string WriterValidationUtils_DefaultStreamWithContentTypeWithoutReadLink;
    internal static string WriterValidationUtils_DefaultStreamWithReadLinkWithoutContentType;
    internal static string WriterValidationUtils_StreamReferenceValueMustHaveEditLinkOrReadLink;
    internal static string WriterValidationUtils_StreamReferenceValueMustHaveEditLinkToHaveETag;
    internal static string WriterValidationUtils_StreamReferenceValueEmptyContentType;
    internal static string WriterValidationUtils_EntriesMustHaveNonEmptyId;
    internal static string WriterValidationUtils_MessageWriterSettingsBaseUriMustBeNullOrAbsolute;
    internal static string WriterValidationUtils_EntityReferenceLinkUrlMustNotBeNull;
    internal static string WriterValidationUtils_EntityReferenceLinksLinkMustNotBeNull;
    internal static string WriterValidationUtils_NestedResourceTypeNotCompatibleWithParentPropertyType;
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionTrueWithResourceContent;
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionFalseWithResourceSetContent;
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionTrueWithResourceMetadata;
    internal static string WriterValidationUtils_ExpandedLinkIsCollectionFalseWithResourceSetMetadata;
    internal static string WriterValidationUtils_ExpandedLinkWithResourceSetPayloadAndResourceMetadata;
    internal static string WriterValidationUtils_ExpandedLinkWithResourcePayloadAndResourceSetMetadata;
    internal static string WriterValidationUtils_CollectionPropertiesMustNotHaveNullValue;
    internal static string WriterValidationUtils_NonNullablePropertiesMustNotHaveNullValue;
    internal static string WriterValidationUtils_StreamPropertiesMustNotHaveNullValue;
    internal static string WriterValidationUtils_OperationInRequest;
    internal static string WriterValidationUtils_AssociationLinkInRequest;
    internal static string WriterValidationUtils_StreamPropertyInRequest;
    internal static string WriterValidationUtils_MessageWriterSettingsServiceDocumentUriMustBeNullOrAbsolute;
    internal static string WriterValidationUtils_NavigationLinkMustSpecifyUrl;
    internal static string WriterValidationUtils_NestedResourceInfoMustSpecifyIsCollection;
    internal static string WriterValidationUtils_MessageWriterSettingsJsonPaddingOnRequestMessage;
    internal static string WriterValidationUtils_ValueTypeNotAllowedInDerivedTypeConstraint;
    internal static string XmlReaderExtension_InvalidNodeInStringValue;
    internal static string XmlReaderExtension_InvalidRootNode;
    internal static string ODataMetadataInputContext_ErrorReadingMetadata;
    internal static string ODataMetadataOutputContext_ErrorWritingMetadata;
    internal static string ODataMetadataOutputContext_NotSupportJsonMetadata;
    internal static string ODataXmlDeserializer_RelativeUriUsedWithoutBaseUriSpecified;
    internal static string ODataPropertyAndValueDeserializer_InvalidCollectionElement;
    internal static string ODataPropertyAndValueDeserializer_NavigationPropertyInProperties;
    internal static string JsonInstanceAnnotationWriter_NullValueNotAllowedForInstanceAnnotation;
    internal static string EdmLibraryExtensions_OperationGroupReturningActionsAndFunctionsModelInvalid;
    internal static string EdmLibraryExtensions_UnBoundOperationsFoundFromIEdmModelFindMethodIsInvalid;
    internal static string EdmLibraryExtensions_NoParameterBoundOperationsFoundFromIEdmModelFindMethodIsInvalid;
    internal static string EdmLibraryExtensions_ValueOverflowForUnderlyingType;
    internal static string ODataXmlResourceDeserializer_ContentWithWrongType;
    internal static string ODataXmlErrorDeserializer_MultipleErrorElementsWithSameName;
    internal static string ODataXmlErrorDeserializer_MultipleInnerErrorElementsWithSameName;
    internal static string CollectionWithoutExpectedTypeValidator_InvalidItemTypeKind;
    internal static string CollectionWithoutExpectedTypeValidator_IncompatibleItemTypeKind;
    internal static string CollectionWithoutExpectedTypeValidator_IncompatibleItemTypeName;
    internal static string ResourceSetWithoutExpectedTypeValidator_IncompatibleTypes;
    internal static string MessageStreamWrappingStream_ByteLimitExceeded;
    internal static string MetadataUtils_ResolveTypeName;
    internal static string MetadataUtils_CalculateBindableOperationsForType;
    internal static string EdmValueUtils_UnsupportedPrimitiveType;
    internal static string EdmValueUtils_IncorrectPrimitiveTypeKind;
    internal static string EdmValueUtils_IncorrectPrimitiveTypeKindNoTypeName;
    internal static string EdmValueUtils_CannotConvertTypeToClrValue;
    internal static string ODataEdmStructuredValue_UndeclaredProperty;
    internal static string ODataMetadataBuilder_MissingEntitySetUri;
    internal static string ODataMetadataBuilder_MissingSegmentForEntitySetUriSuffix;
    internal static string ODataMetadataBuilder_MissingEntityInstanceUri;
    internal static string ODataMetadataBuilder_MissingParentIdOrContextUrl;
    internal static string ODataMetadataBuilder_UnknownEntitySet;
    internal static string ODataJsonInputContext_EntityTypeMustBeCompatibleWithEntitySetBaseType;
    internal static string ODataJsonInputContext_PayloadKindDetectionForRequest;
    internal static string ODataJsonInputContext_OperationCannotBeNullForCreateParameterReader;
    internal static string ODataJsonInputContext_NoEntitySetForRequest;
    internal static string ODataJsonInputContext_ModelRequiredForReading;
    internal static string ODataJsonInputContext_ItemTypeRequiredForCollectionReaderInRequests;
    internal static string ODataJsonDeserializer_ContextLinkNotFoundAsFirstProperty;
    internal static string ODataJsonDeserializer_OnlyODataTypeAnnotationCanTargetInstanceAnnotation;
    internal static string ODataJsonDeserializer_AnnotationTargetingInstanceAnnotationWithoutValue;
    internal static string ODataJsonWriter_EntityReferenceLinkAfterResourceSetInRequest;
    internal static string ODataJsonWriter_InstanceAnnotationNotSupportedOnExpandedResourceSet;
    internal static string ODataJsonPropertyAndValueSerializer_NoExpectedTypeOrTypeNameSpecifiedForResourceValueRequest;
    internal static string ODataJsonPropertyAndValueSerializer_NoExpectedTypeOrTypeNameSpecifiedForCollectionValueInRequest;
    internal static string ODataResourceTypeContext_MetadataOrSerializationInfoMissing;
    internal static string ODataResourceTypeContext_ODataResourceTypeNameMissing;
    internal static string ODataContextUriBuilder_ValidateDerivedType;
    internal static string ODataContextUriBuilder_TypeNameMissingForTopLevelCollection;
    internal static string ODataContextUriBuilder_UnsupportedPayloadKind;
    internal static string ODataContextUriBuilder_StreamValueMustBePropertiesOfODataResource;
    internal static string ODataContextUriBuilder_NavigationSourceOrTypeNameMissingForResourceOrResourceSet;
    internal static string ODataContextUriBuilder_ODataUriMissingForIndividualProperty;
    internal static string ODataContextUriBuilder_TypeNameMissingForProperty;
    internal static string ODataContextUriBuilder_ODataPathInvalidForContainedElement;
    internal static string ODataJsonPropertyAndValueDeserializer_UnexpectedAnnotationProperties;
    internal static string ODataJsonPropertyAndValueDeserializer_UnexpectedPropertyAnnotation;
    internal static string ODataJsonPropertyAndValueDeserializer_UnexpectedODataPropertyAnnotation;
    internal static string ODataJsonPropertyAndValueDeserializer_UnexpectedProperty;
    internal static string ODataJsonPropertyAndValueDeserializer_InvalidTopLevelPropertyPayload;
    internal static string ODataJsonPropertyAndValueDeserializer_InvalidTopLevelPropertyName;
    internal static string ODataJsonPropertyAndValueDeserializer_InvalidTypeName;
    internal static string ODataJsonPropertyAndValueDeserializer_TopLevelPropertyAnnotationWithoutProperty;
    internal static string ODataJsonPropertyAndValueDeserializer_ResourceValuePropertyAnnotationWithoutProperty;
    internal static string ODataJsonPropertyAndValueDeserializer_ComplexValueWithPropertyTypeAnnotation;
    internal static string ODataJsonPropertyAndValueDeserializer_ResourceTypeAnnotationNotFirst;
    internal static string ODataJsonPropertyAndValueDeserializer_UnexpectedDataPropertyAnnotation;
    internal static string ODataJsonPropertyAndValueDeserializer_TypePropertyAfterValueProperty;
    internal static string ODataJsonPropertyAndValueDeserializer_ODataTypeAnnotationInPrimitiveValue;
    internal static string ODataJsonPropertyAndValueDeserializer_TopLevelPropertyWithPrimitiveNullValue;
    internal static string ODataJsonPropertyAndValueDeserializer_UnexpectedMetadataReferenceProperty;
    internal static string ODataJsonPropertyAndValueDeserializer_NoPropertyAndAnnotationAllowedInNullPayload;
    internal static string ODataJsonPropertyAndValueDeserializer_CollectionTypeNotExpected;
    internal static string ODataJsonPropertyAndValueDeserializer_CollectionTypeExpected;
    internal static string ODataJsonPropertyAndValueDeserializer_ODataResourceExpectedForProperty;
    internal static string ODataJsonReaderCoreUtils_CannotReadSpatialPropertyValue;
    internal static string ODataJsonReader_UnexpectedPrimitiveValueForODataResource;
    internal static string ODataJsonReaderUtils_AnnotationWithNullValue;
    internal static string ODataJsonReaderUtils_InvalidValueForODataNullAnnotation;
    internal static string JsonInstanceAnnotationWriter_DuplicateAnnotationNameInCollection;
    internal static string ODataJsonContextUriParser_NullMetadataDocumentUri;
    internal static string ODataJsonContextUriParser_ContextUriDoesNotMatchExpectedPayloadKind;
    internal static string ODataJsonContextUriParser_InvalidEntitySetNameOrTypeName;
    internal static string ODataJsonContextUriParser_InvalidPayloadKindWithSelectQueryOption;
    internal static string ODataJsonContextUriParser_NoModel;
    internal static string ODataJsonContextUriParser_InvalidContextUrl;
    internal static string ODataJsonContextUriParser_LastSegmentIsKeySegment;
    internal static string ODataJsonContextUriParser_TopLevelContextUrlShouldBeAbsolute;
    internal static string ODataJsonResourceDeserializer_DeltaRemovedAnnotationMustBeObject;
    internal static string ODataJsonResourceDeserializer_ResourceTypeAnnotationNotFirst;
    internal static string ODataJsonResourceDeserializer_ResourceInstanceAnnotationPrecededByProperty;
    internal static string ODataJsonResourceDeserializer_UnexpectedDeletedEntryInResponsePayload;
    internal static string ODataJsonResourceDeserializer_CannotReadResourceSetContentStart;
    internal static string ODataJsonResourceDeserializer_ExpectedResourceSetPropertyNotFound;
    internal static string ODataJsonResourceDeserializer_InvalidNodeTypeForItemsInResourceSet;
    internal static string ODataJsonResourceDeserializer_InvalidPropertyAnnotationInTopLevelResourceSet;
    internal static string ODataJsonResourceDeserializer_InvalidPropertyInTopLevelResourceSet;
    internal static string ODataJsonResourceDeserializer_PropertyWithoutValueWithWrongType;
    internal static string ODataJsonResourceDeserializer_StreamPropertyInRequest;
    internal static string ODataJsonResourceDeserializer_UnexpectedStreamPropertyAnnotation;
    internal static string ODataJsonResourceDeserializer_StreamPropertyWithValue;
    internal static string ODataJsonResourceDeserializer_UnexpectedDeferredLinkPropertyAnnotation;
    internal static string ODataJsonResourceDeserializer_CannotReadSingletonNestedResource;
    internal static string ODataJsonResourceDeserializer_CannotReadCollectionNestedResource;
    internal static string ODataJsonResourceDeserializer_CannotReadNestedResource;
    internal static string ODataJsonResourceDeserializer_UnexpectedExpandedSingletonNavigationLinkPropertyAnnotation;
    internal static string ODataJsonResourceDeserializer_UnexpectedExpandedCollectionNavigationLinkPropertyAnnotation;
    internal static string ODataJsonResourceDeserializer_UnexpectedComplexCollectionPropertyAnnotation;
    internal static string ODataJsonResourceDeserializer_DuplicateNestedResourceSetAnnotation;
    internal static string ODataJsonResourceDeserializer_UnexpectedPropertyAnnotationAfterExpandedResourceSet;
    internal static string ODataJsonResourceDeserializer_UnexpectedNavigationLinkInRequestPropertyAnnotation;
    internal static string ODataJsonResourceDeserializer_ArrayValueForSingletonBindPropertyAnnotation;
    internal static string ODataJsonResourceDeserializer_StringValueForCollectionBindPropertyAnnotation;
    internal static string ODataJsonResourceDeserializer_EmptyBindArray;
    internal static string ODataJsonResourceDeserializer_NavigationPropertyWithoutValueAndEntityReferenceLink;
    internal static string ODataJsonResourceDeserializer_SingletonNavigationPropertyWithBindingAndValue;
    internal static string ODataJsonResourceDeserializer_PropertyWithoutValueWithUnknownType;
    internal static string ODataJsonResourceDeserializer_OperationIsNotActionOrFunction;
    internal static string ODataJsonResourceDeserializer_MultipleOptionalPropertiesInOperation;
    internal static string ODataJsonResourceDeserializer_OperationMissingTargetProperty;
    internal static string ODataJsonResourceDeserializer_MetadataReferencePropertyInRequest;
    internal static string ODataJsonValidationUtils_OperationPropertyCannotBeNull;
    internal static string ODataJsonValidationUtils_OpenMetadataReferencePropertyNotSupported;
    internal static string ODataJsonDeserializer_RelativeUriUsedWithouODataMetadataAnnotation;
    internal static string ODataJsonResourceMetadataContext_MetadataAnnotationMustBeInPayload;
    internal static string ODataJsonCollectionDeserializer_ExpectedCollectionPropertyNotFound;
    internal static string ODataJsonCollectionDeserializer_CannotReadCollectionContentStart;
    internal static string ODataJsonCollectionDeserializer_CannotReadCollectionEnd;
    internal static string ODataJsonCollectionDeserializer_InvalidCollectionTypeName;
    internal static string ODataJsonEntityReferenceLinkDeserializer_EntityReferenceLinkMustBeObjectValue;
    internal static string ODataJsonEntityReferenceLinkDeserializer_PropertyAnnotationForEntityReferenceLink;
    internal static string ODataJsonEntityReferenceLinkDeserializer_InvalidAnnotationInEntityReferenceLink;
    internal static string ODataJsonEntityReferenceLinkDeserializer_InvalidPropertyInEntityReferenceLink;
    internal static string ODataJsonEntityReferenceLinkDeserializer_MissingEntityReferenceLinkProperty;
    internal static string ODataJsonEntityReferenceLinkDeserializer_MultipleUriPropertiesInEntityReferenceLink;
    internal static string ODataJsonEntityReferenceLinkDeserializer_EntityReferenceLinkUrlCannotBeNull;
    internal static string ODataJsonEntityReferenceLinkDeserializer_PropertyAnnotationForEntityReferenceLinks;
    internal static string ODataJsonEntityReferenceLinkDeserializer_InvalidEntityReferenceLinksPropertyFound;
    internal static string ODataJsonEntityReferenceLinkDeserializer_InvalidPropertyAnnotationInEntityReferenceLinks;
    internal static string ODataJsonEntityReferenceLinkDeserializer_ExpectedEntityReferenceLinksPropertyNotFound;
    internal static string ODataJsonOperationsDeserializerUtils_OperationPropertyCannotBeNull;
    internal static string ODataJsonOperationsDeserializerUtils_OperationsPropertyMustHaveObjectValue;
    internal static string ODataJsonServiceDocumentDeserializer_DuplicatePropertiesInServiceDocument;
    internal static string ODataJsonServiceDocumentDeserializer_DuplicatePropertiesInServiceDocumentElement;
    internal static string ODataJsonServiceDocumentDeserializer_MissingValuePropertyInServiceDocument;
    internal static string ODataJsonServiceDocumentDeserializer_MissingRequiredPropertyInServiceDocumentElement;
    internal static string ODataJsonServiceDocumentDeserializer_PropertyAnnotationInServiceDocument;
    internal static string ODataJsonServiceDocumentDeserializer_InstanceAnnotationInServiceDocument;
    internal static string ODataJsonServiceDocumentDeserializer_PropertyAnnotationInServiceDocumentElement;
    internal static string ODataJsonServiceDocumentDeserializer_InstanceAnnotationInServiceDocumentElement;
    internal static string ODataJsonServiceDocumentDeserializer_UnexpectedPropertyInServiceDocumentElement;
    internal static string ODataJsonServiceDocumentDeserializer_UnexpectedPropertyInServiceDocument;
    internal static string ODataJsonServiceDocumentDeserializer_PropertyAnnotationWithoutProperty;
    internal static string ODataJsonParameterDeserializer_PropertyAnnotationForParameters;
    internal static string ODataJsonParameterDeserializer_PropertyAnnotationWithoutPropertyForParameters;
    internal static string ODataJsonParameterDeserializer_UnsupportedPrimitiveParameterType;
    internal static string ODataJsonParameterDeserializer_NullCollectionExpected;
    internal static string ODataJsonParameterDeserializer_UnsupportedParameterTypeKind;
    internal static string SelectedPropertiesNode_StarSegmentNotLastSegment;
    internal static string SelectedPropertiesNode_StarSegmentAfterTypeSegment;
    internal static string ODataJsonErrorDeserializer_PropertyAnnotationNotAllowedInErrorPayload;
    internal static string ODataJsonErrorDeserializer_InstanceAnnotationNotAllowedInErrorPayload;
    internal static string ODataJsonErrorDeserializer_PropertyAnnotationWithoutPropertyForError;
    internal static string ODataJsonErrorDeserializer_TopLevelErrorValueWithInvalidProperty;
    internal static string ODataConventionalUriBuilder_EntityTypeWithNoKeyProperties;
    internal static string ODataConventionalUriBuilder_NullKeyValue;
    internal static string ODataResourceMetadataContext_EntityTypeWithNoKeyProperties;
    internal static string ODataResourceMetadataContext_NullKeyValue;
    internal static string ODataResourceMetadataContext_KeyOrETagValuesMustBePrimitiveValues;
    internal static string ODataResource_PropertyValueCannotBeODataResourceValue;
    internal static string EdmValueUtils_NonPrimitiveValue;
    internal static string EdmValueUtils_PropertyDoesntExist;
    internal static string ODataPrimitiveValue_CannotCreateODataPrimitiveValueFromNull;
    internal static string ODataPrimitiveValue_CannotCreateODataPrimitiveValueFromUnsupportedValueType;
    internal static string ODataInstanceAnnotation_NeedPeriodInName;
    internal static string ODataInstanceAnnotation_ReservedNamesNotAllowed;
    internal static string ODataInstanceAnnotation_BadTermName;
    internal static string ODataInstanceAnnotation_ValueCannotBeODataStreamReferenceValue;
    internal static string ODataJsonValueSerializer_MissingTypeNameOnCollection;
    internal static string ODataJsonValueSerializer_MissingRawValueOnUntyped;
    internal static string InstanceAnnotation_MissingTermAttributeOnAnnotationElement;
    internal static string InstanceAnnotation_AttributeValueNotationUsedWithIncompatibleType;
    internal static string InstanceAnnotation_AttributeValueNotationUsedOnNonEmptyElement;
    internal static string InstanceAnnotation_MultipleAttributeValueNotationAttributes;
    internal static string AnnotationFilterPattern_InvalidPatternMissingDot;
    internal static string AnnotationFilterPattern_InvalidPatternEmptySegment;
    internal static string AnnotationFilterPattern_InvalidPatternWildCardInSegment;
    internal static string AnnotationFilterPattern_InvalidPatternWildCardMustBeInLastSegment;
    internal static string SyntacticTree_UriMustBeAbsolute;
    internal static string SyntacticTree_MaxDepthInvalid;
    internal static string SyntacticTree_InvalidSkipQueryOptionValue;
    internal static string SyntacticTree_InvalidTopQueryOptionValue;
    internal static string SyntacticTree_InvalidCountQueryOptionValue;
    internal static string SyntacticTree_InvalidIndexQueryOptionValue;
    internal static string QueryOptionUtils_QueryParameterMustBeSpecifiedOnce;
    internal static string UriBuilder_NotSupportedClrLiteral;
    internal static string UriBuilder_NotSupportedQueryToken;
    internal static string UriQueryExpressionParser_TooDeep;
    internal static string UriQueryExpressionParser_ExpressionExpected;
    internal static string UriQueryExpressionParser_OpenParenExpected;
    internal static string UriQueryExpressionParser_CloseParenOrCommaExpected;
    internal static string UriQueryExpressionParser_CloseParenOrOperatorExpected;
    internal static string UriQueryExpressionParser_IllegalQueryOptioninDollarCount;
    internal static string UriQueryExpressionParser_CannotCreateStarTokenFromNonStar;
    internal static string UriQueryExpressionParser_RangeVariableAlreadyDeclared;
    internal static string UriQueryExpressionParser_AsExpected;
    internal static string UriQueryExpressionParser_WithExpected;
    internal static string UriQueryExpressionParser_UnrecognizedWithMethod;
    internal static string UriQueryExpressionParser_PropertyPathExpected;
    internal static string UriQueryExpressionParser_KeywordOrIdentifierExpected;
    internal static string UriQueryExpressionParser_InnerMostExpandRequireFilter;
    internal static string UriQueryPathParser_RequestUriDoesNotHaveTheCorrectBaseUri;
    internal static string UriQueryPathParser_SyntaxError;
    internal static string UriQueryPathParser_TooManySegments;
    internal static string UriQueryPathParser_InvalidEscapeUri;
    internal static string UriUtils_DateTimeOffsetInvalidFormat;
    internal static string SelectionItemBinder_NonNavigationPathToken;
    internal static string MetadataBinder_ParameterAliasValueExpressionNotSingleValue;
    internal static string MetadataBinder_UnsupportedQueryTokenKind;
    internal static string MetadataBinder_PropertyNotDeclared;
    internal static string MetadataBinder_InvalidIdentifierInQueryOption;
    internal static string MetadataBinder_PropertyNotDeclaredOrNotKeyInKeyValue;
    internal static string MetadataBinder_QualifiedFunctionNameWithParametersNotDeclared;
    internal static string MetadataBinder_UnnamedKeyValueOnTypeWithMultipleKeyProperties;
    internal static string MetadataBinder_DuplicitKeyPropertyInKeyValues;
    internal static string MetadataBinder_NotAllKeyPropertiesSpecifiedInKeyValues;
    internal static string MetadataBinder_CannotConvertToType;
    internal static string MetadataBinder_FilterExpressionNotSingleValue;
    internal static string MetadataBinder_OrderByExpressionNotSingleValue;
    internal static string MetadataBinder_PropertyAccessWithoutParentParameter;
    internal static string MetadataBinder_BinaryOperatorOperandNotSingleValue;
    internal static string MetadataBinder_UnaryOperatorOperandNotSingleValue;
    internal static string MetadataBinder_LeftOperandNotSingleValue;
    internal static string MetadataBinder_RightOperandNotCollectionValue;
    internal static string MetadataBinder_PropertyAccessSourceNotSingleValue;
    internal static string MetadataBinder_CountSegmentNextTokenNotCollectionValue;
    internal static string MetadataBinder_IncompatibleOperandsError;
    internal static string MetadataBinder_IncompatibleOperandError;
    internal static string MetadataBinder_UnknownFunction;
    internal static string MetadataBinder_FunctionArgumentNotSingleValue;
    internal static string MetadataBinder_NoApplicableFunctionFound;
    internal static string MetadataBinder_BoundNodeCannotBeNull;
    internal static string MetadataBinder_TopRequiresNonNegativeInteger;
    internal static string MetadataBinder_SkipRequiresNonNegativeInteger;
    internal static string MetadataBinder_QueryOptionsBindStateCannotBeNull;
    internal static string MetadataBinder_QueryOptionsBindMethodCannotBeNull;
    internal static string MetadataBinder_HierarchyNotFollowed;
    internal static string MetadataBinder_LambdaParentMustBeCollection;
    internal static string MetadataBinder_ParameterNotInScope;
    internal static string MetadataBinder_NavigationPropertyNotFollowingSingleEntityType;
    internal static string MetadataBinder_AnyAllExpressionNotSingleValue;
    internal static string MetadataBinder_CastOrIsOfExpressionWithWrongNumberOfOperands;
    internal static string MetadataBinder_CastOrIsOfFunctionWithoutATypeArgument;
    internal static string MetadataBinder_CastOrIsOfCollectionsNotSupported;
    internal static string MetadataBinder_CollectionOpenPropertiesNotSupportedInThisRelease;
    internal static string MetadataBinder_IllegalSegmentType;
    internal static string MetadataBinder_QueryOptionNotApplicable;
    internal static string StringItemShouldBeQuoted;
    internal static string StreamItemInvalidPrimitiveKind;
    internal static string ApplyBinder_AggregateExpressionIncompatibleTypeForMethod;
    internal static string ApplyBinder_UnsupportedAggregateMethod;
    internal static string ApplyBinder_UnsupportedAggregateKind;
    internal static string ApplyBinder_AggregateExpressionNotSingleValue;
    internal static string ApplyBinder_GroupByPropertyNotPropertyAccessValue;
    internal static string ApplyBinder_UnsupportedType;
    internal static string ApplyBinder_UnsupportedGroupByChild;
    internal static string AggregateTransformationNode_UnsupportedAggregateExpressions;
    internal static string FunctionCallBinder_CannotFindASuitableOverload;
    internal static string FunctionCallBinder_UriFunctionMustHaveHaveNullParent;
    internal static string FunctionCallBinder_CallingFunctionOnOpenProperty;
    internal static string FunctionCallParser_DuplicateParameterOrEntityKeyName;
    internal static string ODataUriParser_InvalidCount;
    internal static string CastBinder_ChildTypeIsNotEntity;
    internal static string CastBinder_EnumOnlyCastToOrFromString;
    internal static string Binder_IsNotValidEnumConstant;
    internal static string BatchReferenceSegment_InvalidContentID;
    internal static string SelectExpandBinder_UnknownPropertyType;
    internal static string SelectExpandBinder_InvalidIdentifierAfterWildcard;
    internal static string SelectExpandBinder_InvalidQueryOptionNestedSelection;
    internal static string SelectExpandBinder_SystemTokenInSelect;
    internal static string SelectionItemBinder_NoExpandForSelectedProperty;
    internal static string SelectExpandPathBinder_FollowNonTypeSegment;
    internal static string SelectBinder_MultiLevelPathInSelect;
    internal static string ExpandItemBinder_TraversingANonNormalizedTree;
    internal static string ExpandItemBinder_CannotFindType;
    internal static string ExpandItemBinder_PropertyIsNotANavigationPropertyOrComplexProperty;
    internal static string ExpandItemBinder_TypeSegmentNotFollowedByPath;
    internal static string ExpandItemBinder_PathTooDeep;
    internal static string ExpandItemBinder_TraversingMultipleNavPropsInTheSamePath;
    internal static string ExpandItemBinder_LevelsNotAllowedOnIncompatibleRelatedType;
    internal static string ExpandItemBinder_InvaidSegmentInExpand;
    internal static string Nodes_CollectionNavigationNode_MustHaveSingleMultiplicity;
    internal static string Nodes_NonentityParameterQueryNodeWithEntityType;
    internal static string Nodes_CollectionNavigationNode_MustHaveManyMultiplicity;
    internal static string Nodes_PropertyAccessShouldBeNonEntityProperty;
    internal static string Nodes_PropertyAccessTypeShouldNotBeCollection;
    internal static string Nodes_PropertyAccessTypeMustBeCollection;
    internal static string Nodes_NonStaticEntitySetExpressionsAreNotSupportedInThisRelease;
    internal static string Nodes_CollectionFunctionCallNode_ItemTypeMustBePrimitiveOrComplexOrEnum;
    internal static string Nodes_EntityCollectionFunctionCallNode_ItemTypeMustBeAnEntity;
    internal static string Nodes_SingleValueFunctionCallNode_ItemTypeMustBePrimitiveOrComplexOrEnum;
    internal static string Nodes_InNode_CollectionItemTypeMustBeSameAsSingleItemType;
    internal static string ExpandTreeNormalizer_NonPathInPropertyChain;
    internal static string SelectTreeNormalizer_MultipleSelecTermWithSamePathFound;
    internal static string UriExpandParser_TermIsNotValidForStar;
    internal static string UriExpandParser_TermIsNotValidForStarRef;
    internal static string UriExpandParser_ParentStructuredTypeIsNull;
    internal static string UriExpandParser_TermWithMultipleStarNotAllowed;
    internal static string UriSelectParser_TermIsNotValid;
    internal static string UriSelectParser_InvalidTopOption;
    internal static string UriSelectParser_InvalidSkipOption;
    internal static string UriSelectParser_InvalidCountOption;
    internal static string UriSelectParser_InvalidLevelsOption;
    internal static string UriSelectParser_SystemTokenInSelectExpand;
    internal static string UriParser_MissingExpandOption;
    internal static string UriParser_EmptyParenthesis;
    internal static string UriParser_MissingSelectOption;
    internal static string UriParser_RelativeUriMustBeRelative;
    internal static string UriParser_NeedServiceRootForThisOverload;
    internal static string UriParser_UriMustBeAbsolute;
    internal static string UriParser_NegativeLimit;
    internal static string UriParser_ExpandCountExceeded;
    internal static string UriParser_ExpandDepthExceeded;
    internal static string UriParser_TypeInvalidForSelectExpand;
    internal static string UriParser_ContextHandlerCanNotBeNull;
    internal static string UriParserMetadata_MultipleMatchingPropertiesFound;
    internal static string UriParserMetadata_MultipleMatchingNavigationSourcesFound;
    internal static string UriParserMetadata_MultipleMatchingTypesFound;
    internal static string UriParserMetadata_MultipleMatchingKeysFound;
    internal static string UriParserMetadata_MultipleMatchingParametersFound;
    internal static string UriValidator_ValidatorMustUseSameModelAsParser;
    internal static string PathParser_EntityReferenceNotSupported;
    internal static string PathParser_CannotUseValueOnCollection;
    internal static string PathParser_TypeMustBeRelatedToSet;
    internal static string PathParser_TypeCastOnlyAllowedAfterStructuralCollection;
    internal static string PathParser_TypeCastOnlyAllowedInDerivedTypeConstraint;
    internal static string ODataResourceSet_MustNotContainBothNextPageLinkAndDeltaLink;
    internal static string ODataExpandPath_OnlyLastSegmentCanBeNavigationProperty;
    internal static string ODataExpandPath_LastSegmentMustBeNavigationPropertyOrTypeSegment;
    internal static string ODataExpandPath_InvalidExpandPathSegment;
    internal static string ODataSelectPath_CannotOnlyHaveTypeSegment;
    internal static string ODataSelectPath_InvalidSelectPathSegmentType;
    internal static string ODataSelectPath_OperationSegmentCanOnlyBeLastSegment;
    internal static string ODataSelectPath_NavPropSegmentCanOnlyBeLastSegment;
    internal static string RequestUriProcessor_TargetEntitySetNotFound;
    internal static string RequestUriProcessor_FoundInvalidFunctionImport;
    internal static string OperationSegment_ReturnTypeForMultipleOverloads;
    internal static string OperationSegment_CannotReturnNull;
    internal static string FunctionOverloadResolver_NoSingleMatchFound;
    internal static string FunctionOverloadResolver_MultipleActionOverloads;
    internal static string FunctionOverloadResolver_MultipleActionImportOverloads;
    internal static string FunctionOverloadResolver_MultipleOperationImportOverloads;
    internal static string FunctionOverloadResolver_MultipleOperationOverloads;
    internal static string FunctionOverloadResolver_FoundInvalidOperation;
    internal static string FunctionOverloadResolver_FoundInvalidOperationImport;
    internal static string CustomUriFunctions_AddCustomUriFunction_BuiltInExistsNotAddingAsOverload;
    internal static string CustomUriFunctions_AddCustomUriFunction_BuiltInExistsFullSignature;
    internal static string CustomUriFunctions_AddCustomUriFunction_CustomFunctionOverloadExists;
    internal static string RequestUriProcessor_InvalidValueForEntitySegment;
    internal static string RequestUriProcessor_InvalidValueForKeySegment;
    internal static string RequestUriProcessor_CannotApplyFilterOnSingleEntities;
    internal static string RequestUriProcessor_CannotApplyEachOnSingleEntities;
    internal static string RequestUriProcessor_FilterPathSegmentSyntaxError;
    internal static string RequestUriProcessor_NoNavigationSourceFound;
    internal static string RequestUriProcessor_OnlySingleOperationCanFollowEachPathSegment;
    internal static string RequestUriProcessor_EmptySegmentInRequestUrl;
    internal static string RequestUriProcessor_SyntaxError;
    internal static string RequestUriProcessor_CountOnRoot;
    internal static string RequestUriProcessor_FilterOnRoot;
    internal static string RequestUriProcessor_EachOnRoot;
    internal static string RequestUriProcessor_RefOnRoot;
    internal static string RequestUriProcessor_MustBeLeafSegment;
    internal static string RequestUriProcessor_LinkSegmentMustBeFollowedByEntitySegment;
    internal static string RequestUriProcessor_MissingSegmentAfterLink;
    internal static string RequestUriProcessor_CountNotSupported;
    internal static string RequestUriProcessor_CannotQueryCollections;
    internal static string RequestUriProcessor_SegmentDoesNotSupportKeyPredicates;
    internal static string RequestUriProcessor_ValueSegmentAfterScalarPropertySegment;
    internal static string RequestUriProcessor_InvalidTypeIdentifier_UnrelatedType;
    internal static string OpenNavigationPropertiesNotSupportedOnOpenTypes;
    internal static string BadRequest_ResourceCanBeCrossReferencedOnlyForBindOperation;
    internal static string DataServiceConfiguration_ResponseVersionIsBiggerThanProtocolVersion;
    internal static string BadRequest_KeyCountMismatch;
    internal static string BadRequest_KeyMismatch;
    internal static string BadRequest_KeyOrAlternateKeyMismatch;
    internal static string RequestUriProcessor_KeysMustBeNamed;
    internal static string RequestUriProcessor_ResourceNotFound;
    internal static string RequestUriProcessor_BatchedActionOnEntityCreatedInSameChangeset;
    internal static string RequestUriProcessor_Forbidden;
    internal static string RequestUriProcessor_OperationSegmentBoundToANonEntityType;
    internal static string RequestUriProcessor_NoBoundEscapeFunctionSupported;
    internal static string RequestUriProcessor_EscapeFunctionMustHaveOneStringParameter;
    internal static string RequestUriProcessor_ComposableEscapeFunctionShouldHaveValidParameter;
    internal static string General_InternalError;
    internal static string ExceptionUtils_CheckIntegerNotNegative;
    internal static string ExceptionUtils_CheckIntegerPositive;
    internal static string ExceptionUtils_CheckLongPositive;
    internal static string ExceptionUtils_ArgumentStringNullOrEmpty;
    internal static string ExpressionToken_OnlyRefAllowWithStarInExpand;
    internal static string ExpressionToken_DollarCountNotAllowedInSelect;
    internal static string ExpressionToken_NoPropAllowedAfterDollarCount;
    internal static string ExpressionToken_NoPropAllowedAfterRef;
    internal static string ExpressionToken_NoSegmentAllowedBeforeStarInExpand;
    internal static string ExpressionToken_IdentifierExpected;
    internal static string ExpressionLexer_UnterminatedStringLiteral;
    internal static string ExpressionLexer_InvalidCharacter;
    internal static string ExpressionLexer_SyntaxError;
    internal static string ExpressionLexer_UnterminatedLiteral;
    internal static string ExpressionLexer_DigitExpected;
    internal static string ExpressionLexer_UnbalancedBracketExpression;
    internal static string ExpressionLexer_InvalidNumericString;
    internal static string ExpressionLexer_InvalidEscapeSequence;
    internal static string UriQueryExpressionParser_UnrecognizedLiteral;
    internal static string UriQueryExpressionParser_UnrecognizedLiteralWithReason;
    internal static string UriPrimitiveTypeParsers_FailedToParseTextToPrimitiveValue;
    internal static string UriPrimitiveTypeParsers_FailedToParseStringToGeography;
    internal static string UriCustomTypeParsers_AddCustomUriTypeParserAlreadyExists;
    internal static string UriCustomTypeParsers_AddCustomUriTypeParserEdmTypeExists;
    internal static string UriParserHelper_InvalidPrefixLiteral;
    internal static string CustomUriTypePrefixLiterals_AddCustomUriTypePrefixLiteralAlreadyExists;
    internal static string ValueParser_InvalidDuration;
    internal static string PlatformHelper_DateTimeOffsetMustContainTimeZone;
    internal static string JsonReader_UnexpectedComma;
    internal static string JsonReader_ArrayClosureMismatch;
    internal static string JsonReader_MultipleTopLevelValues;
    internal static string JsonReader_EndOfInputWithOpenScope;
    internal static string JsonReader_UnexpectedToken;
    internal static string JsonReader_UnrecognizedToken;
    internal static string JsonReader_MissingColon;
    internal static string JsonReader_UnrecognizedEscapeSequence;
    internal static string JsonReader_UnexpectedEndOfString;
    internal static string JsonReader_InvalidNumberFormat;
    internal static string JsonReader_InvalidBinaryFormat;
    internal static string JsonReader_MissingComma;
    internal static string JsonReader_InvalidPropertyNameOrUnexpectedComma;
    internal static string JsonReader_MaxBufferReached;
    internal static string JsonReader_CannotAccessValueInStreamState;
    internal static string JsonReader_CannotCallReadInStreamState;
    internal static string JsonReader_CannotCreateReadStream;
    internal static string JsonReader_CannotCreateTextReader;
    internal static string JsonReaderExtensions_UnexpectedNodeDetected;
    internal static string JsonReaderExtensions_UnexpectedNodeDetectedWithPropertyName;
    internal static string JsonReaderExtensions_CannotReadPropertyValueAsString;
    internal static string JsonReaderExtensions_CannotReadValueAsString;
    internal static string JsonReaderExtensions_CannotReadValueAsDouble;
    internal static string JsonReaderExtensions_UnexpectedInstanceAnnotationName;
    internal static string BufferUtils_InvalidBufferOrSize;
    internal static string ServiceProviderExtensions_NoServiceRegistered;
    internal static string TypeUtils_TypeNameIsNotQualified;
    private static TextRes loader;
    private ResourceManager resources;
    private static CultureInfo Culture { get; }
    public static ResourceManager Resources { get; }
    private static TextRes GetLoader();
    private static CultureInfo get_Culture();
    public static ResourceManager get_Resources();
    public static string GetString(string name, Object[] args);
    public static string GetString(string name);
    public static string GetString(string name, Boolean& usedFallback);
}
internal class Microsoft.OData.TypeNameOracle : object {
    internal static IEdmType ResolveAndValidateTypeName(IEdmModel model, string typeName, EdmTypeKind expectedTypeKind, Nullable`1<bool> expectStructuredType, IWriterValidator writerValidator);
    internal static IEdmStructuredType ResolveAndValidateTypeFromTypeName(IEdmModel model, IEdmStructuredType expectedType, string typeName, IWriterValidator writerValidator);
    internal static IEdmTypeReference ResolveAndValidateTypeForPrimitiveValue(ODataPrimitiveValue primitiveValue);
    internal static IEdmTypeReference ResolveAndValidateTypeForEnumValue(IEdmModel model, ODataEnumValue enumValue, bool isOpenPropertyType);
    internal static IEdmTypeReference ResolveAndValidateTypeForResourceValue(IEdmModel model, IEdmTypeReference typeReferenceFromMetadata, ODataResourceValue resourceValue, bool isOpenPropertyType, IWriterValidator writerValidator);
    internal static IEdmTypeReference ResolveAndValidateTypeForCollectionValue(IEdmModel model, IEdmTypeReference typeReferenceFromMetadata, ODataCollectionValue collectionValue, bool isOpenPropertyType, IWriterValidator writerValidator);
    internal static bool TryGetTypeNameFromAnnotation(ODataValue value, String& propertyName);
    protected static string GetTypeNameFromValue(object value);
    private static void ValidateIfTypeNameMissing(string typeName, IEdmModel model, bool isOpenPropertyType);
    private static IEdmTypeReference ResolveTypeFromMetadataAndValue(IEdmTypeReference typeReferenceFromMetadata, IEdmTypeReference typeReferenceFromValue, IWriterValidator writerValidator);
}
internal static class Microsoft.OData.TypeUtils : object {
    internal static bool IsNullableType(Type type);
    internal static Type GetNonNullableType(Type type);
    internal static Type GetNullableType(Type type);
    internal static bool TypeAllowsNull(Type type);
    internal static bool AreTypesEquivalent(Type typeA, Type typeB);
    internal static void ParseQualifiedTypeName(string qualifiedTypeName, String& namespaceName, String& typeName, Boolean& isCollection);
}
internal class Microsoft.OData.UnknownEntitySet : object {
    private IEdmNavigationProperty navigationProperty;
    private IEdmNavigationSource parentNavigationSource;
    private IEdmPathExpression path;
    private IEdmEntityType entityType;
    public string Name { get; }
    public IEnumerable`1<IEdmNavigationPropertyBinding> NavigationPropertyBindings { get; }
    public IEdmPathExpression Path { get; }
    public IEdmType Type { get; }
    public IEdmEntityType EntityType { get; }
    public UnknownEntitySet(IEdmNavigationSource parentNavigationSource, IEdmNavigationProperty navigationProperty);
    public sealed virtual string get_Name();
    public sealed virtual IEnumerable`1<IEdmNavigationPropertyBinding> get_NavigationPropertyBindings();
    public sealed virtual IEdmPathExpression get_Path();
    public sealed virtual IEdmType get_Type();
    public sealed virtual IEdmEntityType get_EntityType();
    public sealed virtual IEdmNavigationSource FindNavigationTarget(IEdmNavigationProperty navigationProperty);
    public sealed virtual IEdmNavigationSource FindNavigationTarget(IEdmNavigationProperty navigationProperty, IEdmPathExpression bindingPath);
    public sealed virtual IEnumerable`1<IEdmNavigationPropertyBinding> FindNavigationPropertyBindings(IEdmNavigationProperty navigationProperty);
    private IEdmPathExpression ComputePath();
}
public class Microsoft.OData.UriParser.AggregatedCollectionPropertyNode : SingleResourceNode {
    private CollectionNavigationNode source;
    private IEdmProperty property;
    private IEdmComplexTypeReference typeReference;
    private IEdmNavigationSource navigationSource;
    public CollectionNavigationNode Source { get; }
    public IEdmProperty Property { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmStructuredTypeReference StructuredTypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public AggregatedCollectionPropertyNode(CollectionNavigationNode source, IEdmProperty property);
    public CollectionNavigationNode get_Source();
    public IEdmProperty get_Property();
    public virtual IEdmTypeReference get_TypeReference();
    public virtual IEdmNavigationSource get_NavigationSource();
    public virtual IEdmStructuredTypeReference get_StructuredTypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.Aggregation.AggregateExpression : AggregateExpressionBase {
    private AggregationMethod method;
    private AggregationMethodDefinition methodDefinition;
    private SingleValueNode expression;
    private IEdmTypeReference typeReference;
    public SingleValueNode Expression { get; }
    public AggregationMethod Method { get; }
    public AggregationMethodDefinition MethodDefinition { get; }
    public IEdmTypeReference TypeReference { get; }
    public AggregateExpression(SingleValueNode expression, AggregationMethod method, string alias, IEdmTypeReference typeReference);
    public AggregateExpression(SingleValueNode expression, AggregationMethodDefinition methodDefinition, string alias, IEdmTypeReference typeReference);
    public SingleValueNode get_Expression();
    public AggregationMethod get_Method();
    public AggregationMethodDefinition get_MethodDefinition();
    public IEdmTypeReference get_TypeReference();
}
public abstract class Microsoft.OData.UriParser.Aggregation.AggregateExpressionBase : object {
    [CompilerGeneratedAttribute]
private AggregateExpressionKind <AggregateKind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    public AggregateExpressionKind AggregateKind { get; private set; }
    public string Alias { get; private set; }
    protected AggregateExpressionBase(AggregateExpressionKind kind, string alias);
    [CompilerGeneratedAttribute]
public AggregateExpressionKind get_AggregateKind();
    [CompilerGeneratedAttribute]
private void set_AggregateKind(AggregateExpressionKind value);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
private void set_Alias(string value);
}
public enum Microsoft.OData.UriParser.Aggregation.AggregateExpressionKind : Enum {
    public int value__;
    public static AggregateExpressionKind None;
    public static AggregateExpressionKind PropertyAggregate;
    public static AggregateExpressionKind EntitySetAggregate;
}
public class Microsoft.OData.UriParser.Aggregation.AggregateExpressionToken : AggregateTokenBase {
    private QueryToken expression;
    private AggregationMethod method;
    private AggregationMethodDefinition methodDefinition;
    private string alias;
    public QueryTokenKind Kind { get; }
    public AggregationMethod Method { get; }
    public QueryToken Expression { get; }
    public AggregationMethodDefinition MethodDefinition { get; }
    public string Alias { get; }
    public AggregateExpressionToken(QueryToken expression, AggregationMethod method, string alias);
    public AggregateExpressionToken(QueryToken expression, AggregationMethodDefinition methodDefinition, string alias);
    public virtual QueryTokenKind get_Kind();
    public AggregationMethod get_Method();
    public QueryToken get_Expression();
    public AggregationMethodDefinition get_MethodDefinition();
    public string get_Alias();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.Aggregation.AggregateToken : ApplyTransformationToken {
    private IEnumerable`1<AggregateTokenBase> expressions;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<AggregateTokenBase> AggregateExpressions { get; }
    public AggregateToken(IEnumerable`1<AggregateTokenBase> expressions);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<AggregateTokenBase> get_AggregateExpressions();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public abstract class Microsoft.OData.UriParser.Aggregation.AggregateTokenBase : ApplyTransformationToken {
}
public class Microsoft.OData.UriParser.Aggregation.AggregateTransformationNode : TransformationNode {
    private IEnumerable`1<AggregateExpressionBase> expressions;
    public IEnumerable`1<AggregateExpressionBase> AggregateExpressions { get; }
    public TransformationNodeKind Kind { get; }
    public AggregateTransformationNode(IEnumerable`1<AggregateExpressionBase> expressions);
    public IEnumerable`1<AggregateExpressionBase> get_AggregateExpressions();
    public virtual TransformationNodeKind get_Kind();
}
public enum Microsoft.OData.UriParser.Aggregation.AggregationMethod : Enum {
    public int value__;
    public static AggregationMethod Sum;
    public static AggregationMethod Min;
    public static AggregationMethod Max;
    public static AggregationMethod Average;
    public static AggregationMethod CountDistinct;
    public static AggregationMethod VirtualPropertyCount;
    public static AggregationMethod Custom;
}
public class Microsoft.OData.UriParser.Aggregation.AggregationMethodDefinition : object {
    public static AggregationMethodDefinition Sum;
    public static AggregationMethodDefinition Min;
    public static AggregationMethodDefinition Max;
    public static AggregationMethodDefinition Average;
    public static AggregationMethodDefinition CountDistinct;
    public static AggregationMethodDefinition VirtualPropertyCount;
    [CompilerGeneratedAttribute]
private AggregationMethod <MethodKind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodLabel>k__BackingField;
    public AggregationMethod MethodKind { get; private set; }
    public string MethodLabel { get; private set; }
    private AggregationMethodDefinition(AggregationMethod aggregationMethodType);
    private static AggregationMethodDefinition();
    [CompilerGeneratedAttribute]
public AggregationMethod get_MethodKind();
    [CompilerGeneratedAttribute]
private void set_MethodKind(AggregationMethod value);
    [CompilerGeneratedAttribute]
public string get_MethodLabel();
    [CompilerGeneratedAttribute]
private void set_MethodLabel(string value);
    public static AggregationMethodDefinition Custom(string customMethodLabel);
}
internal class Microsoft.OData.UriParser.Aggregation.ApplyBinder : object {
    private QueryTokenVisitor bindMethod;
    private BindingState state;
    private FilterBinder filterBinder;
    private ODataUriParserConfiguration configuration;
    private ODataPathInfo odataPathInfo;
    private IEnumerable`1<AggregateExpressionBase> aggregateExpressionsCache;
    public ApplyBinder(QueryTokenVisitor bindMethod, BindingState state);
    public ApplyBinder(QueryTokenVisitor bindMethod, BindingState state, ODataUriParserConfiguration configuration, ODataPathInfo odataPathInfo);
    public ApplyClause BindApply(IEnumerable`1<QueryToken> tokens);
    private AggregateTransformationNode BindAggregateToken(AggregateToken token);
    private static IEnumerable`1<AggregateTokenBase> MergeEntitySetAggregates(IEnumerable`1<AggregateTokenBase> tokens);
    private AggregateExpressionBase BindAggregateExpressionToken(AggregateTokenBase aggregateToken);
    private IEdmTypeReference CreateAggregateExpressionTypeReference(SingleValueNode expression, AggregationMethodDefinition method);
    private IEdmTypeReference GetTypeReferenceByPropertyName(string name);
    private GroupByTransformationNode BindGroupByToken(GroupByToken token);
    private static bool IsPropertyNode(SingleValueNode node);
    private static Stack`1<SingleValueNode> ReversePropertyPath(SingleValueNode node);
    private static void RegisterProperty(IList`1<GroupByPropertyNode> properties, Stack`1<SingleValueNode> propertyStack);
    private static string GetNodePropertyName(SingleValueNode property);
    private ComputeTransformationNode BindComputeToken(ComputeToken token);
    [CompilerGeneratedAttribute]
private AggregateExpressionBase <BindAggregateExpressionToken>b__11_0(AggregateTokenBase x);
}
public class Microsoft.OData.UriParser.Aggregation.ApplyClause : object {
    private IEnumerable`1<TransformationNode> transformations;
    private IEnumerable`1<AggregateExpressionBase> lastAggregateExpressions;
    private IEnumerable`1<GroupByPropertyNode> lastGroupByPropertyNodes;
    private List`1<ComputeExpression> lastComputeExpressions;
    public IEnumerable`1<TransformationNode> Transformations { get; }
    public ApplyClause(IList`1<TransformationNode> transformations);
    public IEnumerable`1<TransformationNode> get_Transformations();
    internal string GetContextUri();
    internal HashSet`1<EndPathToken> GetLastAggregatedPropertyNames();
    [IteratorStateMachineAttribute("Microsoft.OData.UriParser.Aggregation.ApplyClause/<GetGroupByPaths>d__9")]
private static IEnumerable`1<EndPathToken> GetGroupByPaths(IEnumerable`1<GroupByPropertyNode> nodes, EndPathToken token);
    private static string CreatePropertiesUriSegment(IEnumerable`1<GroupByPropertyNode> groupByPropertyNodes, IEnumerable`1<AggregateExpressionBase> aggregateExpressions, IEnumerable`1<ComputeExpression> computeExpressions);
    private static string CreateAggregatePropertiesUriSegment(IEnumerable`1<AggregateExpressionBase> aggregateExpressions);
}
public abstract class Microsoft.OData.UriParser.Aggregation.ApplyTransformationToken : QueryToken {
}
public class Microsoft.OData.UriParser.Aggregation.ComputeTransformationNode : TransformationNode {
    private IEnumerable`1<ComputeExpression> expressions;
    public IEnumerable`1<ComputeExpression> Expressions { get; }
    public TransformationNodeKind Kind { get; }
    public ComputeTransformationNode(IEnumerable`1<ComputeExpression> expressions);
    public IEnumerable`1<ComputeExpression> get_Expressions();
    public virtual TransformationNodeKind get_Kind();
}
public class Microsoft.OData.UriParser.Aggregation.EntitySetAggregateExpression : AggregateExpressionBase {
    private CollectionNavigationNode expression;
    private IEnumerable`1<AggregateExpressionBase> children;
    public CollectionNavigationNode Expression { get; }
    public IEnumerable`1<AggregateExpressionBase> Children { get; }
    public EntitySetAggregateExpression(CollectionNavigationNode expression, IEnumerable`1<AggregateExpressionBase> children);
    public CollectionNavigationNode get_Expression();
    public IEnumerable`1<AggregateExpressionBase> get_Children();
}
public class Microsoft.OData.UriParser.Aggregation.EntitySetAggregateToken : AggregateTokenBase {
    private QueryToken entitySet;
    private IEnumerable`1<AggregateTokenBase> expressions;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<AggregateTokenBase> Expressions { get; }
    public QueryToken EntitySet { get; }
    public EntitySetAggregateToken(QueryToken entitySet, IEnumerable`1<AggregateTokenBase> expressions);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<AggregateTokenBase> get_Expressions();
    public QueryToken get_EntitySet();
    public static EntitySetAggregateToken Merge(EntitySetAggregateToken token1, EntitySetAggregateToken token2);
    public string Path();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.Aggregation.ExpandTransformationNode : TransformationNode {
    private SelectExpandClause expandClause;
    public SelectExpandClause ExpandClause { get; }
    public TransformationNodeKind Kind { get; }
    public ExpandTransformationNode(SelectExpandClause expandClause);
    public SelectExpandClause get_ExpandClause();
    public virtual TransformationNodeKind get_Kind();
}
public class Microsoft.OData.UriParser.Aggregation.FilterTransformationNode : TransformationNode {
    private FilterClause filterClause;
    public FilterClause FilterClause { get; }
    public TransformationNodeKind Kind { get; }
    public FilterTransformationNode(FilterClause filterClause);
    public FilterClause get_FilterClause();
    public virtual TransformationNodeKind get_Kind();
}
public class Microsoft.OData.UriParser.Aggregation.GroupByPropertyNode : object {
    private IList`1<GroupByPropertyNode> childTransformations;
    private IEdmTypeReference typeReference;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private SingleValueNode <Expression>k__BackingField;
    public string Name { get; private set; }
    public SingleValueNode Expression { get; private set; }
    public IEdmTypeReference TypeReference { get; }
    public IList`1<GroupByPropertyNode> ChildTransformations { get; public set; }
    public GroupByPropertyNode(string name, SingleValueNode expression);
    public GroupByPropertyNode(string name, SingleValueNode expression, IEdmTypeReference type);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public SingleValueNode get_Expression();
    [CompilerGeneratedAttribute]
private void set_Expression(SingleValueNode value);
    public IEdmTypeReference get_TypeReference();
    public IList`1<GroupByPropertyNode> get_ChildTransformations();
    public void set_ChildTransformations(IList`1<GroupByPropertyNode> value);
}
public class Microsoft.OData.UriParser.Aggregation.GroupByToken : ApplyTransformationToken {
    private IEnumerable`1<EndPathToken> properties;
    private ApplyTransformationToken child;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<EndPathToken> Properties { get; }
    public ApplyTransformationToken Child { get; }
    public GroupByToken(IEnumerable`1<EndPathToken> properties, ApplyTransformationToken child);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<EndPathToken> get_Properties();
    public ApplyTransformationToken get_Child();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.Aggregation.GroupByTransformationNode : TransformationNode {
    private CollectionNode source;
    private TransformationNode childTransformations;
    private IEnumerable`1<GroupByPropertyNode> groupingProperties;
    public IEnumerable`1<GroupByPropertyNode> GroupingProperties { get; }
    public TransformationNode ChildTransformations { get; }
    public CollectionNode Source { get; }
    public TransformationNodeKind Kind { get; }
    public GroupByTransformationNode(IList`1<GroupByPropertyNode> groupingProperties, TransformationNode childTransformations, CollectionNode source);
    public IEnumerable`1<GroupByPropertyNode> get_GroupingProperties();
    public TransformationNode get_ChildTransformations();
    public CollectionNode get_Source();
    public virtual TransformationNodeKind get_Kind();
}
public abstract class Microsoft.OData.UriParser.Aggregation.TransformationNode : object {
    public TransformationNodeKind Kind { get; }
    public abstract virtual TransformationNodeKind get_Kind();
}
public enum Microsoft.OData.UriParser.Aggregation.TransformationNodeKind : Enum {
    public int value__;
    public static TransformationNodeKind Aggregate;
    public static TransformationNodeKind GroupBy;
    public static TransformationNodeKind Filter;
    public static TransformationNodeKind Compute;
    public static TransformationNodeKind Expand;
}
public class Microsoft.OData.UriParser.AllNode : LambdaNode {
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public AllNode(Collection`1<RangeVariable> rangeVariables);
    public AllNode(Collection`1<RangeVariable> rangeVariables, RangeVariable currentRangeVariable);
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.AllToken : LambdaToken {
    public QueryTokenKind Kind { get; }
    public AllToken(QueryToken expression, string parameter, QueryToken parent);
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.AlternateKeysODataUriResolver : ODataUriResolver {
    private IEdmModel model;
    public AlternateKeysODataUriResolver(IEdmModel model);
    public virtual IEnumerable`1<KeyValuePair`2<string, object>> ResolveKeys(IEdmEntityType type, IDictionary`2<string, string> namedValues, Func`3<IEdmTypeReference, string, object> convertFunc);
    private bool TryResolveAlternateKeys(IEdmEntityType type, IDictionary`2<string, string> namedValues, Func`3<IEdmTypeReference, string, object> convertFunc, IEnumerable`1& convertedPairs);
    private bool TryResolveKeys(IEdmEntityType type, IDictionary`2<string, string> namedValues, IDictionary`2<string, IEdmProperty> keyProperties, Func`3<IEdmTypeReference, string, object> convertFunc, IEnumerable`1& convertedPairs);
}
public class Microsoft.OData.UriParser.AnnotationSegment : ODataPathSegment {
    private IEdmTerm term;
    public IEdmTerm Term { get; }
    public IEdmType EdmType { get; }
    public AnnotationSegment(IEdmTerm term);
    public IEdmTerm get_Term();
    public virtual IEdmType get_EdmType();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.OData.UriParser.AnyNode : LambdaNode {
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public AnyNode(Collection`1<RangeVariable> parameters);
    public AnyNode(Collection`1<RangeVariable> parameters, RangeVariable currentRangeVariable);
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.AnyToken : LambdaToken {
    public QueryTokenKind Kind { get; }
    public AnyToken(QueryToken expression, string parameter, QueryToken parent);
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.BatchReferenceSegment : ODataPathSegment {
    private IEdmType edmType;
    private IEdmEntitySetBase entitySet;
    private string contentId;
    public IEdmType EdmType { get; }
    public IEdmEntitySetBase EntitySet { get; }
    public string ContentId { get; }
    public BatchReferenceSegment(string contentId, IEdmType edmType, IEdmEntitySetBase entitySet);
    public virtual IEdmType get_EdmType();
    public IEdmEntitySetBase get_EntitySet();
    public string get_ContentId();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.OData.UriParser.BatchSegment : ODataPathSegment {
    [SuppressMessageAttribute("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
public static BatchSegment Instance;
    public IEdmType EdmType { get; }
    private static BatchSegment();
    public virtual IEdmType get_EdmType();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
internal class Microsoft.OData.UriParser.BinaryOperatorBinder : object {
    private Func`2<QueryToken, QueryNode> bindMethod;
    private ODataUriResolver resolver;
    internal BinaryOperatorBinder(Func`2<QueryToken, QueryNode> bindMethod, ODataUriResolver resolver);
    internal QueryNode BindBinaryOperator(BinaryOperatorToken binaryOperatorToken);
    internal static void PromoteOperandTypes(BinaryOperatorKind binaryOperatorKind, SingleValueNode& left, SingleValueNode& right, TypeFacetsPromotionRules facetsPromotionRules);
    private SingleValueNode GetOperandFromToken(BinaryOperatorKind operatorKind, QueryToken queryToken);
}
public enum Microsoft.OData.UriParser.BinaryOperatorKind : Enum {
    public int value__;
    public static BinaryOperatorKind Or;
    public static BinaryOperatorKind And;
    public static BinaryOperatorKind Equal;
    public static BinaryOperatorKind NotEqual;
    public static BinaryOperatorKind GreaterThan;
    public static BinaryOperatorKind GreaterThanOrEqual;
    public static BinaryOperatorKind LessThan;
    public static BinaryOperatorKind LessThanOrEqual;
    public static BinaryOperatorKind Add;
    public static BinaryOperatorKind Subtract;
    public static BinaryOperatorKind Multiply;
    public static BinaryOperatorKind Divide;
    public static BinaryOperatorKind Modulo;
    public static BinaryOperatorKind Has;
}
public class Microsoft.OData.UriParser.BinaryOperatorNode : SingleValueNode {
    private BinaryOperatorKind operatorKind;
    private SingleValueNode left;
    private SingleValueNode right;
    private IEdmTypeReference typeReference;
    public BinaryOperatorKind OperatorKind { get; }
    public SingleValueNode Left { get; }
    public SingleValueNode Right { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public BinaryOperatorNode(BinaryOperatorKind operatorKind, SingleValueNode left, SingleValueNode right);
    internal BinaryOperatorNode(BinaryOperatorKind operatorKind, SingleValueNode left, SingleValueNode right, IEdmTypeReference typeReference);
    public BinaryOperatorKind get_OperatorKind();
    public SingleValueNode get_Left();
    public SingleValueNode get_Right();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.BinaryOperatorToken : QueryToken {
    private BinaryOperatorKind operatorKind;
    private QueryToken left;
    private QueryToken right;
    public QueryTokenKind Kind { get; }
    public BinaryOperatorKind OperatorKind { get; }
    public QueryToken Left { get; }
    public QueryToken Right { get; }
    public BinaryOperatorToken(BinaryOperatorKind operatorKind, QueryToken left, QueryToken right);
    public virtual QueryTokenKind get_Kind();
    public BinaryOperatorKind get_OperatorKind();
    public QueryToken get_Left();
    public QueryToken get_Right();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal abstract class Microsoft.OData.UriParser.BinderBase : object {
    protected QueryTokenVisitor bindMethod;
    protected BindingState state;
    protected ODataUriResolver Resolver { get; }
    protected BinderBase(QueryTokenVisitor bindMethod, BindingState state);
    protected ODataUriResolver get_Resolver();
}
internal class Microsoft.OData.UriParser.BindingState : object {
    private ODataUriParserConfiguration configuration;
    private Stack`1<RangeVariable> rangeVariables;
    private RangeVariable implicitRangeVariable;
    private int BindingRecursionDepth;
    private List`1<CustomQueryOptionToken> queryOptions;
    private List`1<ODataPathSegment> parsedSegments;
    [CompilerGeneratedAttribute]
private HashSet`1<EndPathToken> <AggregatedPropertyNames>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCollapsed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InEntitySetAggregation>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmNavigationSource <ResourcePathNavigationSource>k__BackingField;
    internal IEdmModel Model { get; }
    internal ODataUriParserConfiguration Configuration { get; }
    internal RangeVariable ImplicitRangeVariable { get; internal set; }
    internal Stack`1<RangeVariable> RangeVariables { get; }
    internal List`1<CustomQueryOptionToken> QueryOptions { get; internal set; }
    internal HashSet`1<EndPathToken> AggregatedPropertyNames { get; internal set; }
    internal bool IsCollapsed { get; internal set; }
    internal bool InEntitySetAggregation { get; internal set; }
    internal IEdmNavigationSource ResourcePathNavigationSource { get; internal set; }
    internal List`1<ODataPathSegment> ParsedSegments { get; }
    internal BindingState(ODataUriParserConfiguration configuration);
    internal BindingState(ODataUriParserConfiguration configuration, List`1<ODataPathSegment> parsedSegments);
    internal IEdmModel get_Model();
    internal ODataUriParserConfiguration get_Configuration();
    internal RangeVariable get_ImplicitRangeVariable();
    internal void set_ImplicitRangeVariable(RangeVariable value);
    internal Stack`1<RangeVariable> get_RangeVariables();
    internal List`1<CustomQueryOptionToken> get_QueryOptions();
    internal void set_QueryOptions(List`1<CustomQueryOptionToken> value);
    [CompilerGeneratedAttribute]
internal HashSet`1<EndPathToken> get_AggregatedPropertyNames();
    [CompilerGeneratedAttribute]
internal void set_AggregatedPropertyNames(HashSet`1<EndPathToken> value);
    [CompilerGeneratedAttribute]
internal bool get_IsCollapsed();
    [CompilerGeneratedAttribute]
internal void set_IsCollapsed(bool value);
    [CompilerGeneratedAttribute]
internal bool get_InEntitySetAggregation();
    [CompilerGeneratedAttribute]
internal void set_InEntitySetAggregation(bool value);
    [CompilerGeneratedAttribute]
internal IEdmNavigationSource get_ResourcePathNavigationSource();
    [CompilerGeneratedAttribute]
internal void set_ResourcePathNavigationSource(IEdmNavigationSource value);
    internal List`1<ODataPathSegment> get_ParsedSegments();
    internal void RecurseEnter();
    internal void RecurseLeave();
}
internal static class Microsoft.OData.UriParser.BuiltInUriFunctions : object {
    private static Dictionary`2<string, FunctionSignatureWithReturnType[]> builtInFunctions;
    private static Dictionary`2<string, string> caseInsensitiveKeys;
    private static BuiltInUriFunctions();
    internal static bool TryGetBuiltInFunction(string name, FunctionSignatureWithReturnType[]& signatures);
    internal static bool TryGetBuiltInFunction(string name, bool enableCaseInsensitive, String& caseSensitiveName, FunctionSignatureWithReturnType[]& signatures);
    internal static void CreateSpatialFunctions(IDictionary`2<string, FunctionSignatureWithReturnType[]> functions);
    private static Dictionary`2<string, FunctionSignatureWithReturnType[]> InitializeBuiltInFunctions();
    private static void CreateStringFunctions(IDictionary`2<string, FunctionSignatureWithReturnType[]> functions);
    private static void CreateDateTimeFunctions(IDictionary`2<string, FunctionSignatureWithReturnType[]> functions);
    private static FunctionSignatureWithReturnType[] CreateDateTimeFunctionSignatureArray();
    [IteratorStateMachineAttribute("Microsoft.OData.UriParser.BuiltInUriFunctions/<CreateDurationFunctionSignatures>d__9")]
private static IEnumerable`1<FunctionSignatureWithReturnType> CreateDurationFunctionSignatures();
    private static FunctionSignatureWithReturnType[] CreateVoidReturnDateTimeOffset();
    private static FunctionSignatureWithReturnType[] CreateDateTimeOffsetReturnDate();
    private static FunctionSignatureWithReturnType[] CreateDateTimeOffsetReturnDecimal();
    private static FunctionSignatureWithReturnType[] CreateDateTimeOffsetReturnTimeOfDay();
    private static FunctionSignatureWithReturnType[] CreateDurationReturnDecimal();
    private static FunctionSignatureWithReturnType[] CreateDateReturnInt();
    private static FunctionSignatureWithReturnType[] CreateTimeOfDayReturnInt();
    private static FunctionSignatureWithReturnType[] CreateTimeOfDayReturnDecimal();
    private static void CreateMathFunctions(IDictionary`2<string, FunctionSignatureWithReturnType[]> functions);
    private static FunctionSignatureWithReturnType[] CreateMathFunctionSignatureArray();
}
public class Microsoft.OData.UriParser.CollectionComplexNode : CollectionResourceNode {
    private SingleResourceNode source;
    private IEdmProperty property;
    private IEdmComplexTypeReference itemType;
    private IEdmCollectionTypeReference collectionTypeReference;
    private IEdmNavigationSource navigationSource;
    public SingleResourceNode Source { get; }
    public IEdmProperty Property { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    public IEdmStructuredTypeReference ItemStructuredType { get; }
    public IEdmNavigationSource NavigationSource { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public CollectionComplexNode(SingleResourceNode source, IEdmProperty property);
    private CollectionComplexNode(IEdmNavigationSource navigationSource, IEdmProperty property);
    public SingleResourceNode get_Source();
    public IEdmProperty get_Property();
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    public virtual IEdmStructuredTypeReference get_ItemStructuredType();
    public virtual IEdmNavigationSource get_NavigationSource();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.CollectionConstantNode : CollectionNode {
    private IList`1<ConstantNode> collection;
    private IEdmTypeReference itemType;
    private IEdmCollectionTypeReference collectionTypeReference;
    [CompilerGeneratedAttribute]
private string <LiteralText>k__BackingField;
    public IList`1<ConstantNode> Collection { get; }
    public string LiteralText { get; private set; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public CollectionConstantNode(IEnumerable`1<object> objectCollection, string literalText, IEdmCollectionTypeReference collectionType);
    public IList`1<ConstantNode> get_Collection();
    [CompilerGeneratedAttribute]
public string get_LiteralText();
    [CompilerGeneratedAttribute]
private void set_LiteralText(string value);
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.CollectionFunctionCallNode : CollectionNode {
    private string name;
    private ReadOnlyCollection`1<IEdmFunction> functions;
    private ReadOnlyCollection`1<QueryNode> parameters;
    private IEdmTypeReference itemType;
    private IEdmCollectionTypeReference returnedCollectionType;
    private QueryNode source;
    public string Name { get; }
    public IEnumerable`1<IEdmFunction> Functions { get; }
    public IEnumerable`1<QueryNode> Parameters { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    public QueryNode Source { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public CollectionFunctionCallNode(string name, IEnumerable`1<IEdmFunction> functions, IEnumerable`1<QueryNode> parameters, IEdmCollectionTypeReference returnedCollectionType, QueryNode source);
    public string get_Name();
    public IEnumerable`1<IEdmFunction> get_Functions();
    public IEnumerable`1<QueryNode> get_Parameters();
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    public QueryNode get_Source();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.CollectionNavigationNode : CollectionResourceNode {
    private IEdmNavigationProperty navigationProperty;
    private IEdmEntityTypeReference edmEntityTypeReference;
    private IEdmCollectionTypeReference collectionTypeReference;
    private SingleResourceNode source;
    private IEdmNavigationSource navigationSource;
    private List`1<ODataPathSegment> parsedSegments;
    private IEdmPathExpression bindingPath;
    public SingleResourceNode Source { get; }
    public EdmMultiplicity TargetMultiplicity { get; }
    public IEdmNavigationProperty NavigationProperty { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    public IEdmEntityTypeReference EntityItemType { get; }
    public IEdmStructuredTypeReference ItemStructuredType { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmPathExpression BindingPath { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public CollectionNavigationNode(SingleResourceNode source, IEdmNavigationProperty navigationProperty, IEdmPathExpression bindingPath);
    internal CollectionNavigationNode(IEdmNavigationSource navigationSource, IEdmNavigationProperty navigationProperty, IEdmPathExpression bindingPath);
    internal CollectionNavigationNode(SingleResourceNode source, IEdmNavigationProperty navigationProperty, List`1<ODataPathSegment> parsedSegments);
    private CollectionNavigationNode(IEdmNavigationSource navigationSource, IEdmNavigationProperty navigationProperty, List`1<ODataPathSegment> parsedSegments);
    private CollectionNavigationNode(IEdmNavigationProperty navigationProperty);
    public SingleResourceNode get_Source();
    public EdmMultiplicity get_TargetMultiplicity();
    public IEdmNavigationProperty get_NavigationProperty();
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    public IEdmEntityTypeReference get_EntityItemType();
    public virtual IEdmStructuredTypeReference get_ItemStructuredType();
    public virtual IEdmNavigationSource get_NavigationSource();
    public IEdmPathExpression get_BindingPath();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public abstract class Microsoft.OData.UriParser.CollectionNode : QueryNode {
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    public QueryNodeKind Kind { get; }
    public abstract virtual IEdmTypeReference get_ItemType();
    public abstract virtual IEdmCollectionTypeReference get_CollectionType();
    public virtual QueryNodeKind get_Kind();
}
public class Microsoft.OData.UriParser.CollectionOpenPropertyAccessNode : CollectionNode {
    private SingleValueNode source;
    private string name;
    public SingleValueNode Source { get; }
    public string Name { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public CollectionOpenPropertyAccessNode(SingleValueNode source, string openPropertyName);
    public SingleValueNode get_Source();
    public string get_Name();
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.CollectionPropertyAccessNode : CollectionNode {
    private SingleValueNode source;
    private IEdmProperty property;
    private IEdmTypeReference itemType;
    private IEdmCollectionTypeReference collectionTypeReference;
    public SingleValueNode Source { get; }
    public IEdmProperty Property { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public CollectionPropertyAccessNode(SingleValueNode source, IEdmProperty property);
    public SingleValueNode get_Source();
    public IEdmProperty get_Property();
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.CollectionResourceCastNode : CollectionResourceNode {
    private CollectionResourceNode source;
    private IEdmStructuredTypeReference edmTypeReference;
    private IEdmCollectionTypeReference collectionTypeReference;
    private IEdmNavigationSource navigationSource;
    public CollectionResourceNode Source { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    public IEdmStructuredTypeReference ItemStructuredType { get; }
    public IEdmNavigationSource NavigationSource { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public CollectionResourceCastNode(CollectionResourceNode source, IEdmStructuredType structuredType);
    public CollectionResourceNode get_Source();
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    public virtual IEdmStructuredTypeReference get_ItemStructuredType();
    public virtual IEdmNavigationSource get_NavigationSource();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.CollectionResourceFunctionCallNode : CollectionResourceNode {
    private string name;
    private ReadOnlyCollection`1<IEdmFunction> functions;
    private ReadOnlyCollection`1<QueryNode> parameters;
    private IEdmStructuredTypeReference structuredTypeReference;
    private IEdmCollectionTypeReference returnedCollectionTypeReference;
    private IEdmEntitySetBase navigationSource;
    private QueryNode source;
    public string Name { get; }
    public IEnumerable`1<IEdmFunction> Functions { get; }
    public IEnumerable`1<QueryNode> Parameters { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmCollectionTypeReference CollectionType { get; }
    public IEdmStructuredTypeReference ItemStructuredType { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public QueryNode Source { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public CollectionResourceFunctionCallNode(string name, IEnumerable`1<IEdmFunction> functions, IEnumerable`1<QueryNode> parameters, IEdmCollectionTypeReference returnedCollectionTypeReference, IEdmEntitySetBase navigationSource, QueryNode source);
    public string get_Name();
    public IEnumerable`1<IEdmFunction> get_Functions();
    public IEnumerable`1<QueryNode> get_Parameters();
    public virtual IEdmTypeReference get_ItemType();
    public virtual IEdmCollectionTypeReference get_CollectionType();
    public virtual IEdmStructuredTypeReference get_ItemStructuredType();
    public virtual IEdmNavigationSource get_NavigationSource();
    public QueryNode get_Source();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public abstract class Microsoft.OData.UriParser.CollectionResourceNode : CollectionNode {
    public IEdmStructuredTypeReference ItemStructuredType { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public abstract virtual IEdmStructuredTypeReference get_ItemStructuredType();
    public abstract virtual IEdmNavigationSource get_NavigationSource();
}
internal class Microsoft.OData.UriParser.ComputeBinder : object {
    private QueryTokenVisitor bindMethod;
    public ComputeBinder(QueryTokenVisitor bindMethod);
    public ComputeClause BindCompute(ComputeToken token);
    private ComputeExpression BindComputeExpressionToken(ComputeExpressionToken token);
}
public class Microsoft.OData.UriParser.ComputeClause : object {
    private ReadOnlyCollection`1<ComputeExpression> computedItems;
    public IEnumerable`1<ComputeExpression> ComputedItems { get; }
    public ComputeClause(IEnumerable`1<ComputeExpression> computedItems);
    public IEnumerable`1<ComputeExpression> get_ComputedItems();
}
public class Microsoft.OData.UriParser.ComputeExpression : object {
    private SingleValueNode expression;
    private string alias;
    private IEdmTypeReference typeReference;
    public SingleValueNode Expression { get; }
    public string Alias { get; }
    public IEdmTypeReference TypeReference { get; }
    public ComputeExpression(SingleValueNode expression, string alias, IEdmTypeReference typeReference);
    public SingleValueNode get_Expression();
    public string get_Alias();
    public IEdmTypeReference get_TypeReference();
}
public class Microsoft.OData.UriParser.ComputeExpressionToken : QueryToken {
    private QueryToken expression;
    private string alias;
    public QueryTokenKind Kind { get; }
    public QueryToken Expression { get; }
    public string Alias { get; }
    public ComputeExpressionToken(QueryToken expression, string alias);
    public virtual QueryTokenKind get_Kind();
    public QueryToken get_Expression();
    public string get_Alias();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.ComputeToken : ApplyTransformationToken {
    private IEnumerable`1<ComputeExpressionToken> expressions;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<ComputeExpressionToken> Expressions { get; }
    public ComputeToken(IEnumerable`1<ComputeExpressionToken> expressions);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<ComputeExpressionToken> get_Expressions();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.ConstantNode : SingleValueNode {
    private object constantValue;
    private IEdmTypeReference typeReference;
    [CompilerGeneratedAttribute]
private string <LiteralText>k__BackingField;
    public object Value { get; }
    public string LiteralText { get; private set; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public ConstantNode(object constantValue, string literalText);
    public ConstantNode(object constantValue, string literalText, IEdmTypeReference typeReference);
    public ConstantNode(object constantValue);
    public object get_Value();
    [CompilerGeneratedAttribute]
public string get_LiteralText();
    [CompilerGeneratedAttribute]
private void set_LiteralText(string value);
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.ConvertNode : SingleValueNode {
    private SingleValueNode source;
    private IEdmTypeReference typeReference;
    public SingleValueNode Source { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public ConvertNode(SingleValueNode source, IEdmTypeReference typeReference);
    public SingleValueNode get_Source();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.CountNode : SingleValueNode {
    private CollectionNode source;
    private FilterClause filterClause;
    private SearchClause searchClause;
    public CollectionNode Source { get; }
    public FilterClause FilterClause { get; }
    public SearchClause SearchClause { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public CountNode(CollectionNode source);
    public CountNode(CollectionNode source, FilterClause filterClause, SearchClause searchClause);
    public CollectionNode get_Source();
    public FilterClause get_FilterClause();
    public SearchClause get_SearchClause();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.CountSegment : ODataPathSegment {
    [SuppressMessageAttribute("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
public static CountSegment Instance;
    public IEdmType EdmType { get; }
    private static CountSegment();
    public virtual IEdmType get_EdmType();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
internal class Microsoft.OData.UriParser.CountSegmentBinder : object {
    private QueryTokenVisitor bindMethod;
    private BindingState state;
    internal CountSegmentBinder(QueryTokenVisitor bindMethod, BindingState state);
    internal QueryNode BindCountSegment(CountSegmentToken countSegmentToken);
}
internal class Microsoft.OData.UriParser.CountSegmentParser : object {
    private ExpressionLexer lexer;
    private UriQueryExpressionParser parser;
    public UriQueryExpressionParser UriQueryExpressionParser { get; }
    public ExpressionLexer Lexer { get; }
    public CountSegmentParser(ExpressionLexer lexer, UriQueryExpressionParser parser);
    public UriQueryExpressionParser get_UriQueryExpressionParser();
    public ExpressionLexer get_Lexer();
    public CountSegmentToken CreateCountSegmentToken(QueryToken countedInstance);
    private QueryToken ParseInnerFilter();
    private QueryToken ParseInnerSearch();
}
public class Microsoft.OData.UriParser.CountSegmentToken : PathToken {
    private QueryToken nextToken;
    private QueryToken filterOption;
    private QueryToken searchOption;
    public QueryTokenKind Kind { get; }
    public string Identifier { get; }
    public QueryToken NextToken { get; public set; }
    public QueryToken FilterOption { get; public set; }
    public QueryToken SearchOption { get; public set; }
    public CountSegmentToken(QueryToken nextToken);
    public CountSegmentToken(QueryToken nextToken, QueryToken filterOption, QueryToken searchOption);
    public virtual QueryTokenKind get_Kind();
    public virtual string get_Identifier();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public QueryToken get_FilterOption();
    public void set_FilterOption(QueryToken value);
    public QueryToken get_SearchOption();
    public void set_SearchOption(QueryToken value);
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.CountVirtualPropertyNode : SingleValueNode {
    public QueryNodeKind Kind { get; }
    public IEdmTypeReference TypeReference { get; }
    public virtual QueryNodeKind get_Kind();
    public virtual IEdmTypeReference get_TypeReference();
}
public class Microsoft.OData.UriParser.CustomQueryOptionToken : QueryToken {
    private string name;
    private string value;
    public QueryTokenKind Kind { get; }
    public string Name { get; }
    public string Value { get; }
    public CustomQueryOptionToken(string name, string value);
    public virtual QueryTokenKind get_Kind();
    public string get_Name();
    public string get_Value();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public static class Microsoft.OData.UriParser.CustomUriFunctions : object {
    private static Dictionary`2<string, FunctionSignatureWithReturnType[]> CustomFunctions;
    private static object Locker;
    private static CustomUriFunctions();
    public static void AddCustomUriFunction(string functionName, FunctionSignatureWithReturnType functionSignature);
    public static bool RemoveCustomUriFunction(string functionName, FunctionSignatureWithReturnType functionSignature);
    public static bool RemoveCustomUriFunction(string functionName);
    internal static bool TryGetCustomFunction(string functionCallToken, IList`1& nameSignatures, bool enableCaseInsensitive);
    private static void AddCustomFunction(string customFunctionName, FunctionSignatureWithReturnType newCustomFunctionSignature);
    private static bool AreFunctionsSignatureEqual(FunctionSignatureWithReturnType functionOne, FunctionSignatureWithReturnType functionTwo);
    private static void ValidateFunctionWithReturnType(FunctionSignatureWithReturnType functionSignature);
}
public class Microsoft.OData.UriParser.CustomUriLiteralParsers : object {
    private static object Locker;
    [SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
private static IUriLiteralParser[] customUriLiteralParsers;
    [SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
private static UriLiteralParserPerEdmType[] customUriLiteralParserPerEdmType;
    private static CustomUriLiteralParsers singleInstance;
    internal static CustomUriLiteralParsers Instance { get; }
    private static CustomUriLiteralParsers();
    internal static CustomUriLiteralParsers get_Instance();
    public sealed virtual object ParseUriStringToType(string text, IEdmTypeReference targetType, UriLiteralParsingException& parsingException);
    public static void AddCustomUriLiteralParser(IUriLiteralParser customUriLiteralParser);
    public static void AddCustomUriLiteralParser(IEdmTypeReference edmTypeReference, IUriLiteralParser customUriLiteralParser);
    public static bool RemoveCustomUriLiteralParser(IUriLiteralParser customUriLiteralParser);
    private static bool IsEdmTypeAlreadyRegistered(IEdmTypeReference edmTypeReference);
    private static IUriLiteralParser GetUriLiteralParserByEdmType(IEdmTypeReference edmTypeReference);
}
public static class Microsoft.OData.UriParser.CustomUriLiteralPrefixes : object {
    private static object Locker;
    private static Dictionary`2<string, IEdmTypeReference> CustomLiteralPrefixesOfEdmTypes;
    private static CustomUriLiteralPrefixes();
    public static void AddCustomLiteralPrefix(string literalPrefix, IEdmTypeReference literalEdmTypeReference);
    public static bool RemoveCustomLiteralPrefix(string literalPrefix);
    internal static IEdmTypeReference GetEdmTypeByCustomLiteralPrefix(string literalPrefix);
}
internal class Microsoft.OData.UriParser.DefaultUriLiteralParser : object {
    private List`1<IUriLiteralParser> uriTypeParsers;
    private static DefaultUriLiteralParser singleInstance;
    internal static DefaultUriLiteralParser Instance { get; }
    private static DefaultUriLiteralParser();
    internal static DefaultUriLiteralParser get_Instance();
    public sealed virtual object ParseUriStringToType(string text, IEdmTypeReference targetType, UriLiteralParsingException& parsingException);
}
internal class Microsoft.OData.UriParser.DetermineNavigationSourceTranslator : PathSegmentTranslator`1<IEdmNavigationSource> {
    [CompilerGeneratedAttribute]
private static DetermineNavigationSourceTranslator <Instance>k__BackingField;
    public static DetermineNavigationSourceTranslator Instance { get; }
    private static DetermineNavigationSourceTranslator();
    [CompilerGeneratedAttribute]
public static DetermineNavigationSourceTranslator get_Instance();
    public virtual IEdmNavigationSource Translate(NavigationPropertyLinkSegment segment);
    public virtual IEdmNavigationSource Translate(TypeSegment segment);
    public virtual IEdmNavigationSource Translate(NavigationPropertySegment segment);
    public virtual IEdmNavigationSource Translate(EntitySetSegment segment);
    public virtual IEdmNavigationSource Translate(SingletonSegment segment);
    public virtual IEdmNavigationSource Translate(KeySegment segment);
    public virtual IEdmNavigationSource Translate(PropertySegment segment);
    public virtual IEdmNavigationSource Translate(OperationImportSegment segment);
    public virtual IEdmNavigationSource Translate(OperationSegment segment);
    public virtual IEdmNavigationSource Translate(CountSegment segment);
    public virtual IEdmNavigationSource Translate(FilterSegment segment);
    public virtual IEdmNavigationSource Translate(ReferenceSegment segment);
    public virtual IEdmNavigationSource Translate(EachSegment segment);
    public virtual IEdmNavigationSource Translate(DynamicPathSegment segment);
    public virtual IEdmNavigationSource Translate(ValueSegment segment);
    public virtual IEdmNavigationSource Translate(BatchSegment segment);
    public virtual IEdmNavigationSource Translate(BatchReferenceSegment segment);
    public virtual IEdmNavigationSource Translate(MetadataSegment segment);
    public virtual IEdmNavigationSource Translate(PathTemplateSegment segment);
}
internal class Microsoft.OData.UriParser.DottedIdentifierBinder : BinderBase {
    internal DottedIdentifierBinder(QueryTokenVisitor bindMethod, BindingState state);
    internal QueryNode BindDottedIdentifier(DottedIdentifierToken dottedIdentifierToken);
}
public class Microsoft.OData.UriParser.DottedIdentifierToken : PathToken {
    private string identifier;
    private QueryToken nextToken;
    public QueryTokenKind Kind { get; }
    public string Identifier { get; }
    public QueryToken NextToken { get; public set; }
    public DottedIdentifierToken(string identifier, QueryToken nextToken);
    public virtual QueryTokenKind get_Kind();
    public virtual string get_Identifier();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.DynamicPathSegment : ODataPathSegment {
    public IEdmType EdmType { get; }
    public DynamicPathSegment(string identifier);
    public DynamicPathSegment(string identifier, IEdmType edmType, IEdmNavigationSource navigationSource, bool singleResult);
    public virtual IEdmType get_EdmType();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.OData.UriParser.EachSegment : ODataPathSegment {
    private IEdmType edmType;
    public IEdmType EdmType { get; }
    public EachSegment(IEdmNavigationSource navigationSource, IEdmType targetEdmType);
    public virtual IEdmType get_EdmType();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
internal class Microsoft.OData.UriParser.EndPathBinder : BinderBase {
    private FunctionCallBinder functionCallBinder;
    internal EndPathBinder(QueryTokenVisitor bindMethod, BindingState state);
    internal static QueryNode GeneratePropertyAccessQueryNode(SingleResourceNode parentNode, IEdmProperty property, BindingState state);
    internal static SingleValueNode CreateParentFromImplicitRangeVariable(BindingState state);
    internal SingleValueOpenPropertyAccessNode GeneratePropertyAccessQueryForOpenType(EndPathToken endPathToken, SingleValueNode parentNode);
    internal QueryNode BindEndPath(EndPathToken endPathToken);
    private QueryNode DetermineParentNode(EndPathToken segmentToken);
    private bool IsAggregatedProperty(EndPathToken endPath);
}
public class Microsoft.OData.UriParser.EndPathToken : PathToken {
    private string identifier;
    private QueryToken nextToken;
    public QueryTokenKind Kind { get; }
    public QueryToken NextToken { get; public set; }
    public string Identifier { get; }
    public EndPathToken(string identifier, QueryToken nextToken);
    public virtual QueryTokenKind get_Kind();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public virtual string get_Identifier();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.EntityIdSegment : object {
    [CompilerGeneratedAttribute]
private Uri <Id>k__BackingField;
    public Uri Id { get; private set; }
    internal EntityIdSegment(Uri id);
    [CompilerGeneratedAttribute]
public Uri get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(Uri value);
}
public class Microsoft.OData.UriParser.EntitySetSegment : ODataPathSegment {
    private IEdmEntitySet entitySet;
    private IEdmType type;
    public IEdmEntitySet EntitySet { get; }
    public IEdmType EdmType { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public EntitySetSegment(IEdmEntitySet entitySet);
    public IEdmEntitySet get_EntitySet();
    public virtual IEdmType get_EdmType();
    public sealed virtual IEdmNavigationSource get_NavigationSource();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
internal class Microsoft.OData.UriParser.EnumBinder : object {
    internal static bool TryBindDottedIdentifierAsEnum(DottedIdentifierToken dottedIdentifierToken, SingleValueNode parent, BindingState state, ODataUriResolver resolver, QueryNode& boundEnum);
    internal static bool TryBindIdentifier(string identifier, IEdmEnumTypeReference typeReference, IEdmModel modelWhenNoTypeReference, QueryNode& boundEnum);
    internal static bool TryBindIdentifier(string identifier, IEdmEnumTypeReference typeReference, IEdmModel modelWhenNoTypeReference, ODataUriResolver resolver, QueryNode& boundEnum);
    internal static bool TryParseEnum(IEdmEnumType enumType, string value, ODataEnumValue& enumValue);
}
internal static class Microsoft.OData.UriParser.ExceptionUtil : object {
    internal static ODataException CreateResourceNotFoundError(string identifier);
    internal static ODataException ResourceNotFoundError(string errorMessage);
    internal static ODataException CreateSyntaxError();
    internal static ODataException CreateBadRequestError(string message);
    internal static void ThrowIfTypesUnrelated(IEdmType type, IEdmType secondType, string segmentName);
}
internal class Microsoft.OData.UriParser.ExpandDepthAndCountValidator : object {
    private int maxDepth;
    private int maxCount;
    private int currentCount;
    internal ExpandDepthAndCountValidator(int maxDepth, int maxCount);
    internal void Validate(SelectExpandClause expandTree);
    private void EnsureMaximumCountAndDepthAreNotExceeded(SelectExpandClause expandTree, int currentDepth);
}
public class Microsoft.OData.UriParser.ExpandedCountSelectItem : ExpandedReferenceSelectItem {
    public ExpandedCountSelectItem(ODataExpandPath pathToNavigationProperty, IEdmNavigationSource navigationSource, FilterClause filterOption, SearchClause searchOption);
    public virtual T TranslateWith(SelectItemTranslator`1<T> translator);
    public virtual void HandleWith(SelectItemHandler handler);
}
public class Microsoft.OData.UriParser.ExpandedNavigationSelectItem : ExpandedReferenceSelectItem {
    [CompilerGeneratedAttribute]
private SelectExpandClause <SelectAndExpand>k__BackingField;
    [CompilerGeneratedAttribute]
private LevelsClause <LevelsOption>k__BackingField;
    public SelectExpandClause SelectAndExpand { get; private set; }
    public LevelsClause LevelsOption { get; private set; }
    public ExpandedNavigationSelectItem(ODataExpandPath pathToNavigationProperty, IEdmNavigationSource navigationSource, SelectExpandClause selectExpandOption);
    public ExpandedNavigationSelectItem(ODataExpandPath pathToNavigationProperty, IEdmNavigationSource navigationSource, SelectExpandClause selectAndExpand, FilterClause filterOption, OrderByClause orderByOption, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countOption, SearchClause searchOption, LevelsClause levelsOption);
    public ExpandedNavigationSelectItem(ODataExpandPath pathToNavigationProperty, IEdmNavigationSource navigationSource, SelectExpandClause selectAndExpand, FilterClause filterOption, OrderByClause orderByOption, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countOption, SearchClause searchOption, LevelsClause levelsOption, ComputeClause computeOption);
    public ExpandedNavigationSelectItem(ODataExpandPath pathToNavigationProperty, IEdmNavigationSource navigationSource, SelectExpandClause selectAndExpand, FilterClause filterOption, OrderByClause orderByOption, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countOption, SearchClause searchOption, LevelsClause levelsOption, ComputeClause computeOption, ApplyClause applyOption);
    [CompilerGeneratedAttribute]
public SelectExpandClause get_SelectAndExpand();
    [CompilerGeneratedAttribute]
private void set_SelectAndExpand(SelectExpandClause value);
    [CompilerGeneratedAttribute]
public LevelsClause get_LevelsOption();
    [CompilerGeneratedAttribute]
private void set_LevelsOption(LevelsClause value);
    public virtual T TranslateWith(SelectItemTranslator`1<T> translator);
    public virtual void HandleWith(SelectItemHandler handler);
}
public class Microsoft.OData.UriParser.ExpandedReferenceSelectItem : SelectItem {
    [CompilerGeneratedAttribute]
private ODataExpandPath <PathToNavigationProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmNavigationSource <NavigationSource>k__BackingField;
    [CompilerGeneratedAttribute]
private FilterClause <FilterOption>k__BackingField;
    [CompilerGeneratedAttribute]
private SearchClause <SearchOption>k__BackingField;
    [CompilerGeneratedAttribute]
private OrderByClause <OrderByOption>k__BackingField;
    [CompilerGeneratedAttribute]
private ComputeClause <ComputeOption>k__BackingField;
    [CompilerGeneratedAttribute]
private ApplyClause <ApplyOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TopOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SkipOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CountOption>k__BackingField;
    public ODataExpandPath PathToNavigationProperty { get; private set; }
    public IEdmNavigationSource NavigationSource { get; private set; }
    public FilterClause FilterOption { get; private set; }
    public SearchClause SearchOption { get; private set; }
    public OrderByClause OrderByOption { get; private set; }
    public ComputeClause ComputeOption { get; private set; }
    public ApplyClause ApplyOption { get; private set; }
    public Nullable`1<long> TopOption { get; private set; }
    public Nullable`1<long> SkipOption { get; private set; }
    public Nullable`1<bool> CountOption { get; private set; }
    public ExpandedReferenceSelectItem(ODataExpandPath pathToNavigationProperty, IEdmNavigationSource navigationSource);
    public ExpandedReferenceSelectItem(ODataExpandPath pathToNavigationProperty, IEdmNavigationSource navigationSource, FilterClause filterOption, OrderByClause orderByOption, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countOption, SearchClause searchOption);
    public ExpandedReferenceSelectItem(ODataExpandPath pathToNavigationProperty, IEdmNavigationSource navigationSource, FilterClause filterOption, OrderByClause orderByOption, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countOption, SearchClause searchOption, ComputeClause computeOption);
    public ExpandedReferenceSelectItem(ODataExpandPath pathToNavigationProperty, IEdmNavigationSource navigationSource, FilterClause filterOption, OrderByClause orderByOption, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countOption, SearchClause searchOption, ComputeClause computeOption, ApplyClause applyOption);
    [CompilerGeneratedAttribute]
public ODataExpandPath get_PathToNavigationProperty();
    [CompilerGeneratedAttribute]
private void set_PathToNavigationProperty(ODataExpandPath value);
    [CompilerGeneratedAttribute]
public IEdmNavigationSource get_NavigationSource();
    [CompilerGeneratedAttribute]
private void set_NavigationSource(IEdmNavigationSource value);
    [CompilerGeneratedAttribute]
public FilterClause get_FilterOption();
    [CompilerGeneratedAttribute]
private void set_FilterOption(FilterClause value);
    [CompilerGeneratedAttribute]
public SearchClause get_SearchOption();
    [CompilerGeneratedAttribute]
private void set_SearchOption(SearchClause value);
    [CompilerGeneratedAttribute]
public OrderByClause get_OrderByOption();
    [CompilerGeneratedAttribute]
private void set_OrderByOption(OrderByClause value);
    [CompilerGeneratedAttribute]
public ComputeClause get_ComputeOption();
    [CompilerGeneratedAttribute]
private void set_ComputeOption(ComputeClause value);
    [CompilerGeneratedAttribute]
public ApplyClause get_ApplyOption();
    [CompilerGeneratedAttribute]
private void set_ApplyOption(ApplyClause value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TopOption();
    [CompilerGeneratedAttribute]
private void set_TopOption(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SkipOption();
    [CompilerGeneratedAttribute]
private void set_SkipOption(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CountOption();
    [CompilerGeneratedAttribute]
private void set_CountOption(Nullable`1<bool> value);
    public virtual T TranslateWith(SelectItemTranslator`1<T> translator);
    public virtual void HandleWith(SelectItemHandler handler);
}
public class Microsoft.OData.UriParser.ExpandTermToken : SelectExpandTermToken {
    [CompilerGeneratedAttribute]
private ExpandToken <ExpandOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <LevelsOption>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<QueryToken> <ApplyOptions>k__BackingField;
    public PathSegmentToken PathToNavigationProp { get; }
    public ExpandToken ExpandOption { get; internal set; }
    public Nullable`1<long> LevelsOption { get; private set; }
    public IEnumerable`1<QueryToken> ApplyOptions { get; private set; }
    public QueryTokenKind Kind { get; }
    public ExpandTermToken(PathSegmentToken pathToNavigationProp);
    public ExpandTermToken(PathSegmentToken pathToNavigationProp, SelectToken selectOption, ExpandToken expandOption);
    public ExpandTermToken(PathSegmentToken pathToNavigationProp, QueryToken filterOption, IEnumerable`1<OrderByToken> orderByOptions, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countQueryOption, Nullable`1<long> levelsOption, QueryToken searchOption, SelectToken selectOption, ExpandToken expandOption);
    public ExpandTermToken(PathSegmentToken pathToNavigationProp, QueryToken filterOption, IEnumerable`1<OrderByToken> orderByOptions, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countQueryOption, Nullable`1<long> levelsOption, QueryToken searchOption, SelectToken selectOption, ExpandToken expandOption, ComputeToken computeOption);
    public ExpandTermToken(PathSegmentToken pathToNavigationProp, QueryToken filterOption, IEnumerable`1<OrderByToken> orderByOptions, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countQueryOption, Nullable`1<long> levelsOption, QueryToken searchOption, SelectToken selectOption, ExpandToken expandOption, ComputeToken computeOption, IEnumerable`1<QueryToken> applyOptions);
    public PathSegmentToken get_PathToNavigationProp();
    [CompilerGeneratedAttribute]
public ExpandToken get_ExpandOption();
    [CompilerGeneratedAttribute]
internal void set_ExpandOption(ExpandToken value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_LevelsOption();
    [CompilerGeneratedAttribute]
private void set_LevelsOption(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<QueryToken> get_ApplyOptions();
    [CompilerGeneratedAttribute]
private void set_ApplyOptions(IEnumerable`1<QueryToken> value);
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.ExpandToken : QueryToken {
    private IEnumerable`1<ExpandTermToken> expandTerms;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<ExpandTermToken> ExpandTerms { get; }
    public ExpandToken(ExpandTermToken[] expandTerms);
    public ExpandToken(IEnumerable`1<ExpandTermToken> expandTerms);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<ExpandTermToken> get_ExpandTerms();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal static class Microsoft.OData.UriParser.ExpandTreeNormalizer : object {
    public static ExpandToken NormalizeExpandTree(ExpandToken treeToNormalize);
    public static ExpandToken NormalizePaths(ExpandToken treeToInvert);
    public static ExpandToken CombineTerms(ExpandToken treeToCollapse);
    public static ExpandTermToken CombineTerms(ExpandTermToken existingToken, ExpandTermToken newToken);
    public static IEnumerable`1<ExpandTermToken> CombineChildNodes(ExpandTermToken existingToken, ExpandTermToken newToken);
    private static void AddChildOptionsToDictionary(ExpandTermToken newToken, Dictionary`2<PathSegmentToken, ExpandTermToken> combinedTerms);
    private static void AddOrCombine(IDictionary`2<PathSegmentToken, ExpandTermToken> combinedTerms, ExpandTermToken expandedTerm);
    private static SelectToken CombineSelects(ExpandTermToken existingToken, ExpandTermToken newToken);
    private static SelectToken RemoveDuplicateSelect(SelectToken selectToken);
}
[DebuggerDisplayAttribute("ExpressionLexer ({text} @ {textPos} [{token}])")]
internal class Microsoft.OData.UriParser.ExpressionLexer : object {
    protected string Text;
    protected int TextLen;
    protected int textPos;
    protected Nullable`1<char> ch;
    protected ExpressionToken token;
    private static HashSet`1<UnicodeCategory> AdditionalUnicodeCategoriesForIdentifier;
    private bool useSemicolonDelimiter;
    private bool parsingFunctionParameters;
    private bool ignoreWhitespace;
    private bool parsingDoubleQuotedString;
    internal ExpressionToken CurrentToken { get; internal set; }
    internal string ExpressionText { get; }
    internal int Position { get; }
    protected bool IsValidWhiteSpace { get; }
    private bool IsValidDigit { get; }
    private bool IsValidStartingCharForIdentifier { get; }
    private bool IsValidNonStartingCharForIdentifier { get; }
    internal ExpressionLexer(string expression, bool moveToFirstToken, bool useSemicolonDelimiter);
    internal ExpressionLexer(string expression, bool moveToFirstToken, bool useSemicolonDelimiter, bool parsingFunctionParameters);
    private static ExpressionLexer();
    internal ExpressionToken get_CurrentToken();
    internal void set_CurrentToken(ExpressionToken value);
    internal string get_ExpressionText();
    internal int get_Position();
    protected bool get_IsValidWhiteSpace();
    private bool get_IsValidDigit();
    private bool get_IsValidStartingCharForIdentifier();
    private bool get_IsValidNonStartingCharForIdentifier();
    internal bool TryPeekNextToken(ExpressionToken& resultToken, Exception& error);
    internal ExpressionToken NextToken();
    internal string ReadDottedIdentifier(bool acceptStar);
    internal ExpressionToken PeekNextToken();
    internal bool ExpandIdentifierAsFunction();
    internal void ValidateToken(ExpressionTokenKind t);
    internal string AdvanceThroughExpandOption();
    internal string AdvanceThroughBalancedParentheticalExpression();
    internal ExpressionLexerPosition SnapshotPosition();
    internal void RestorePosition(ExpressionLexerPosition position);
    protected static Exception ParseError(string message);
    protected void NextChar();
    protected void ParseWhitespace();
    protected void AdvanceToNextOccurenceOf(char endingValue);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
protected virtual ExpressionToken NextTokenImplementation(Exception& error);
    private bool MoveNextWhenMatch(ExpressionTokenKind id);
    private void HandleTypePrefixedLiterals();
    private void HandleQuotedValues();
    private static Nullable`1<ExpressionTokenKind> GetBuiltInTypesLiteralPrefix(string tokenText);
    private ExpressionTokenKind GetBuiltInTypesLiteralPrefixWithQuotedValue(string tokenText);
    private ExpressionTokenKind ParseFromDigit();
    private bool TryParseGuid(int tokenPos);
    private bool TryParseDateTimeoffset(int tokenPos);
    private bool TryParseDate(int tokenPos);
    private bool TryParseTimeOfDay(int tokenPos);
    private string ParseLiteral(int tokenPos);
    private static ExpressionTokenKind MakeBestGuessOnNoSuffixStr(string numericStr, ExpressionTokenKind guessedKind);
    private void AdvanceThroughBalancedExpression(char startingCharacter, char endingCharacter);
    private void ParseIdentifier(bool includingDots);
    private void SetTextPos(int pos);
    private void ValidateDigit();
    private void DoubleQuotedStringCheckpoint();
}
[ExtensionAttribute]
internal static class Microsoft.OData.UriParser.ExpressionLexerLiteralExtensions : object {
    [ExtensionAttribute]
internal static bool IsLiteralType(ExpressionTokenKind tokenKind);
    [ExtensionAttribute]
internal static object ReadLiteralToken(ExpressionLexer expressionLexer);
    [ExtensionAttribute]
private static object ParseNullLiteral(ExpressionLexer expressionLexer);
    [ExtensionAttribute]
private static object ParseTypedLiteral(ExpressionLexer expressionLexer, IEdmTypeReference targetTypeReference);
    [ExtensionAttribute]
private static object TryParseLiteral(ExpressionLexer expressionLexer);
}
internal class Microsoft.OData.UriParser.ExpressionLexerUtils : object {
    private static char SingleSuffixLower;
    private static char SingleSuffixUpper;
    internal static bool IsNumeric(ExpressionTokenKind id);
    internal static bool IsInfinityOrNaNDouble(string tokenText);
    internal static bool IsInfinityLiteralDouble(string text);
    internal static bool IsInfinityOrNanSingle(string tokenText);
    internal static bool IsInfinityLiteralSingle(string text);
}
[DebuggerDisplayAttribute("{InternalKind} @ {Position}: [{Text}]")]
internal class Microsoft.OData.UriParser.ExpressionToken : ValueType {
    internal static ExpressionToken GreaterThan;
    internal static ExpressionToken EqualsTo;
    internal static ExpressionToken LessThan;
    internal ExpressionTokenKind Kind;
    internal string Text;
    internal int Position;
    private IEdmTypeReference LiteralEdmType;
    internal bool IsKeyValueToken { get; }
    internal bool IsFunctionParameterToken { get; }
    private static ExpressionToken();
    internal bool get_IsKeyValueToken();
    internal bool get_IsFunctionParameterToken();
    public virtual string ToString();
    internal string GetIdentifier();
    internal bool IdentifierIs(string id, bool enableCaseInsensitive);
    internal void SetCustomEdmTypeLiteral(IEdmTypeReference edmType);
    internal IEdmTypeReference GetLiteralEdmTypeReference();
}
internal enum Microsoft.OData.UriParser.ExpressionTokenKind : Enum {
    public int value__;
    public static ExpressionTokenKind Unknown;
    public static ExpressionTokenKind End;
    public static ExpressionTokenKind Equal;
    public static ExpressionTokenKind Identifier;
    public static ExpressionTokenKind NullLiteral;
    public static ExpressionTokenKind BooleanLiteral;
    public static ExpressionTokenKind StringLiteral;
    public static ExpressionTokenKind IntegerLiteral;
    public static ExpressionTokenKind Int64Literal;
    public static ExpressionTokenKind SingleLiteral;
    public static ExpressionTokenKind DateTimeLiteral;
    public static ExpressionTokenKind DateTimeOffsetLiteral;
    public static ExpressionTokenKind DurationLiteral;
    public static ExpressionTokenKind DecimalLiteral;
    public static ExpressionTokenKind DoubleLiteral;
    public static ExpressionTokenKind GuidLiteral;
    public static ExpressionTokenKind BinaryLiteral;
    public static ExpressionTokenKind GeographyLiteral;
    public static ExpressionTokenKind GeometryLiteral;
    public static ExpressionTokenKind Exclamation;
    public static ExpressionTokenKind OpenParen;
    public static ExpressionTokenKind CloseParen;
    public static ExpressionTokenKind Comma;
    public static ExpressionTokenKind Colon;
    public static ExpressionTokenKind Minus;
    public static ExpressionTokenKind Slash;
    public static ExpressionTokenKind Question;
    public static ExpressionTokenKind Dot;
    public static ExpressionTokenKind Star;
    public static ExpressionTokenKind SemiColon;
    public static ExpressionTokenKind ParameterAlias;
    public static ExpressionTokenKind BracedExpression;
    public static ExpressionTokenKind BracketedExpression;
    public static ExpressionTokenKind QuotedLiteral;
    public static ExpressionTokenKind DateLiteral;
    public static ExpressionTokenKind TimeOfDayLiteral;
    public static ExpressionTokenKind CustomTypeLiteral;
    public static ExpressionTokenKind ParenthesesExpression;
}
internal class Microsoft.OData.UriParser.FilterBinder : object {
    private QueryTokenVisitor bindMethod;
    private BindingState state;
    internal FilterBinder(QueryTokenVisitor bindMethod, BindingState state);
    internal FilterClause BindFilter(QueryToken filter);
}
public class Microsoft.OData.UriParser.FilterClause : object {
    private SingleValueNode expression;
    private RangeVariable rangeVariable;
    public SingleValueNode Expression { get; }
    public RangeVariable RangeVariable { get; }
    public IEdmTypeReference ItemType { get; }
    public FilterClause(SingleValueNode expression, RangeVariable rangeVariable);
    public SingleValueNode get_Expression();
    public RangeVariable get_RangeVariable();
    public IEdmTypeReference get_ItemType();
}
public class Microsoft.OData.UriParser.FilterSegment : ODataPathSegment {
    private SingleValueNode expression;
    private RangeVariable rangeVariable;
    private IEdmType bindingType;
    private string literalText;
    public SingleValueNode Expression { get; }
    public RangeVariable RangeVariable { get; }
    public IEdmTypeReference ItemType { get; }
    public IEdmType EdmType { get; }
    public string LiteralText { get; }
    public FilterSegment(SingleValueNode expression, RangeVariable rangeVariable, IEdmNavigationSource navigationSource);
    public SingleValueNode get_Expression();
    public RangeVariable get_RangeVariable();
    public IEdmTypeReference get_ItemType();
    public virtual IEdmType get_EdmType();
    public string get_LiteralText();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
internal class Microsoft.OData.UriParser.FunctionCallBinder : BinderBase {
    private static String[] UnboundFunctionNames;
    internal FunctionCallBinder(QueryTokenVisitor bindMethod, BindingState state);
    private static FunctionCallBinder();
    internal static void TypePromoteArguments(FunctionSignatureWithReturnType signature, List`1<QueryNode> argumentNodes);
    internal static SingleValueNode[] ValidateArgumentsAreSingleValue(string functionName, List`1<QueryNode> argumentNodes);
    internal static KeyValuePair`2<string, FunctionSignatureWithReturnType> MatchSignatureToUriFunction(string functionCallToken, SingleValueNode[] argumentNodes, IList`1<KeyValuePair`2<string, FunctionSignatureWithReturnType>> nameSignatures);
    [SuppressMessageAttribute("Microsoft.Globalization", "CA1308:NormalizeStringsToUppercase")]
internal static IList`1<KeyValuePair`2<string, FunctionSignatureWithReturnType>> GetUriFunctionSignatures(string functionCallToken, bool enableCaseInsensitive);
    internal static FunctionSignatureWithReturnType[] ExtractSignatures(IList`1<KeyValuePair`2<string, FunctionSignatureWithReturnType>> nameSignatures);
    internal QueryNode BindFunctionCall(FunctionCallToken functionCallToken);
    internal bool TryBindEndPathAsFunctionCall(EndPathToken endPathToken, QueryNode parent, BindingState state, QueryNode& boundFunction);
    internal bool TryBindInnerPathAsFunctionCall(InnerPathToken innerPathToken, QueryNode parent, QueryNode& boundFunction);
    internal bool TryBindDottedIdentifierAsFunctionCall(DottedIdentifierToken dottedIdentifierToken, SingleValueNode parent, QueryNode& boundFunction);
    private QueryNode BindAsUriFunction(FunctionCallToken functionCallToken, List`1<QueryNode> argumentNodes);
    private bool TryBindIdentifier(string identifier, IEnumerable`1<FunctionParameterToken> arguments, QueryNode parent, BindingState state, QueryNode& boundFunction);
    internal static List`1<OperationSegmentParameter> BindSegmentParameters(ODataUriParserConfiguration configuration, IEdmOperation functionOrOpertion, ICollection`1<FunctionParameterToken> segmentParameterTokens);
    private static bool TryRewriteIntegralConstantNode(SingleValueNode& boundNode, IEdmTypeReference targetType);
    private static ICollection`1<FunctionParameterToken> HandleComplexOrCollectionParameterValueIfExists(IEdmModel model, IEdmOperation operation, ICollection`1<FunctionParameterToken> parameterTokens, bool enableCaseInsensitive, bool enableUriTemplateParsing);
    [SuppressMessageAttribute("Microsoft.Globalization", "CA1308:NormalizeStringsToUppercase")]
private string IsUnboundFunction(string functionName);
    private SingleValueNode CreateUnboundFunctionNode(string functionCallTokenName, List`1<QueryNode> args);
    private static IEdmTypeReference ValidateAndBuildCastArgs(BindingState state, List`1& args);
    private static IEdmTypeReference ValidateAndBuildIsOfArgs(BindingState state, List`1& args);
    private static IEdmTypeReference ValidateIsOfOrCast(BindingState state, bool isCast, List`1& args);
    private static IEdmTypeReference TryGetTypeReference(IEdmModel model, string fullTypeName, ODataUriResolver resolver);
    [CompilerGeneratedAttribute]
private QueryNode <BindFunctionCall>b__7_0(FunctionParameterToken ar);
    [CompilerGeneratedAttribute]
private QueryNode <TryBindIdentifier>b__12_1(FunctionParameterToken p);
}
internal class Microsoft.OData.UriParser.FunctionCallParser : object {
    private ExpressionLexer lexer;
    private UriQueryExpressionParser parser;
    private bool restoreStateIfFail;
    public UriQueryExpressionParser UriQueryExpressionParser { get; }
    public ExpressionLexer Lexer { get; }
    public FunctionCallParser(ExpressionLexer lexer, UriQueryExpressionParser parser);
    public FunctionCallParser(ExpressionLexer lexer, UriQueryExpressionParser parser, bool restoreStateIfFail);
    public UriQueryExpressionParser get_UriQueryExpressionParser();
    public sealed virtual ExpressionLexer get_Lexer();
    public sealed virtual bool TryParseIdentifierAsFunction(QueryToken parent, QueryToken& result);
    public FunctionParameterToken[] ParseArgumentListOrEntityKeyList(Action restoreAction);
    public FunctionParameterToken[] ParseArguments();
    private List`1<FunctionParameterToken> ReadArgumentsAsPositionalValues();
    private bool TryReadArgumentsAsNamedValues(ICollection`1& argList);
}
public class Microsoft.OData.UriParser.FunctionCallToken : QueryToken {
    private string name;
    private IEnumerable`1<FunctionParameterToken> arguments;
    private QueryToken source;
    public QueryTokenKind Kind { get; }
    public string Name { get; }
    public IEnumerable`1<FunctionParameterToken> Arguments { get; }
    public QueryToken Source { get; }
    public FunctionCallToken(string name, IEnumerable`1<QueryToken> argumentValues);
    public FunctionCallToken(string name, IEnumerable`1<FunctionParameterToken> arguments, QueryToken source);
    public virtual QueryTokenKind get_Kind();
    public string get_Name();
    public IEnumerable`1<FunctionParameterToken> get_Arguments();
    public QueryToken get_Source();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
[ExtensionAttribute]
internal static class Microsoft.OData.UriParser.FunctionOverloadResolver : object {
    internal static bool ResolveOperationImportFromList(string identifier, IList`1<string> parameterNames, IEdmModel model, IEdmOperationImport& matchingOperationImport, ODataUriResolver resolver);
    internal static bool ResolveOperationFromList(string identifier, IList`1<string> parameterNames, IEdmType bindingType, IEdmModel model, IEdmOperation& matchingOperation, ODataUriResolver resolver);
    [ExtensionAttribute]
internal static bool HasAny(IEnumerable`1<T> enumerable);
    private static bool ResolveActionFromCandidates(IList`1<IEdmOperation> candidatesMatchingOperations, string identifier, bool hasParameters, IEdmOperation& matchingOperation);
}
internal class Microsoft.OData.UriParser.FunctionParameterAliasToken : QueryToken {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmTypeReference <ExpectedParameterType>k__BackingField;
    public string Alias { get; private set; }
    public QueryTokenKind Kind { get; }
    internal IEdmTypeReference ExpectedParameterType { get; internal set; }
    public FunctionParameterAliasToken(string alias);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
private void set_Alias(string value);
    public virtual QueryTokenKind get_Kind();
    [CompilerGeneratedAttribute]
internal IEdmTypeReference get_ExpectedParameterType();
    [CompilerGeneratedAttribute]
internal void set_ExpectedParameterType(IEdmTypeReference value);
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
[ExtensionAttribute]
internal static class Microsoft.OData.UriParser.FunctionParameterParser : object {
    [ExtensionAttribute]
internal static bool TrySplitFunctionParameters(UriQueryExpressionParser parser, ICollection`1& splitParameters);
    internal static bool TrySplitOperationParameters(string parenthesisExpression, ODataUriParserConfiguration configuration, ICollection`1& splitParameters);
    [ExtensionAttribute]
private static bool TrySplitOperationParameters(UriQueryExpressionParser parser, ExpressionTokenKind endTokenKind, ICollection`1& splitParameters);
}
public class Microsoft.OData.UriParser.FunctionParameterToken : QueryToken {
    [SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
public static FunctionParameterToken[] EmptyParameterList;
    private string parameterName;
    private QueryToken valueToken;
    public string ParameterName { get; }
    public QueryToken ValueToken { get; }
    public QueryTokenKind Kind { get; }
    public FunctionParameterToken(string parameterName, QueryToken valueToken);
    private static FunctionParameterToken();
    public string get_ParameterName();
    public QueryToken get_ValueToken();
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.OData.UriParser.FunctionSignature : object {
    private IEdmTypeReference[] argumentTypes;
    private CreateArgumentTypeWithFacets[] createArgumentTypesWithFacets;
    internal IEdmTypeReference[] ArgumentTypes { get; }
    internal FunctionSignature(IEdmTypeReference[] argumentTypes, CreateArgumentTypeWithFacets[] createArgumentTypesWithFacets);
    internal IEdmTypeReference[] get_ArgumentTypes();
    internal IEdmTypeReference GetArgumentTypeWithFacets(int index, Nullable`1<int> precision, Nullable`1<int> scale);
}
public class Microsoft.OData.UriParser.FunctionSignatureWithReturnType : object {
    private IEdmTypeReference[] argumentTypes;
    private IEdmTypeReference returnType;
    public IEdmTypeReference ReturnType { get; }
    public IEdmTypeReference[] ArgumentTypes { get; }
    public FunctionSignatureWithReturnType(IEdmTypeReference returnType, IEdmTypeReference[] argumentTypes);
    public IEdmTypeReference get_ReturnType();
    public IEdmTypeReference[] get_ArgumentTypes();
}
internal class Microsoft.OData.UriParser.IdentifierTokenizer : object {
    private ExpressionLexer lexer;
    private HashSet`1<string> parameters;
    private IFunctionCallParser functionCallParser;
    public IdentifierTokenizer(HashSet`1<string> parameters, IFunctionCallParser functionCallParser);
    public QueryToken ParseIdentifier(QueryToken parent);
    public QueryToken ParseMemberAccess(QueryToken instance);
    public QueryToken ParseStarMemberAccess(QueryToken instance);
    private static Exception ParseError(string message);
}
internal interface Microsoft.OData.UriParser.IFunctionCallParser {
    public ExpressionLexer Lexer { get; }
    public abstract virtual ExpressionLexer get_Lexer();
    public abstract virtual bool TryParseIdentifierAsFunction(QueryToken parent, QueryToken& result);
}
public interface Microsoft.OData.UriParser.INavigationSourceSegment {
    public IEdmNavigationSource NavigationSource { get; }
    public abstract virtual IEdmNavigationSource get_NavigationSource();
}
internal class Microsoft.OData.UriParser.InBinder : object {
    private static string NullLiteral;
    private Func`2<QueryToken, QueryNode> bindMethod;
    internal InBinder(Func`2<QueryToken, QueryNode> bindMethod);
    internal QueryNode BindInOperator(InToken inToken, BindingState state);
    private SingleValueNode GetSingleValueOperandFromToken(QueryToken queryToken);
    private CollectionNode GetCollectionOperandFromToken(QueryToken queryToken, IEdmTypeReference expectedType, IEdmModel model);
    private static string NormalizeStringCollectionItems(string literalText);
    private static int ProcessDoubleQuotedStringItem(int start, string input, StringBuilder sb);
    private static int ProcessSingleQuotedStringItem(int start, string input, StringBuilder sb);
    private static string NormalizeGuidCollectionItems(string bracketLiteralText);
    private static string NormalizeDateTimeCollectionItems(string bracketLiteralText);
}
public class Microsoft.OData.UriParser.InnerPathToken : PathToken {
    private string identifier;
    private IEnumerable`1<NamedValue> namedValues;
    private QueryToken nextToken;
    public QueryTokenKind Kind { get; }
    public string Identifier { get; }
    public QueryToken NextToken { get; public set; }
    public IEnumerable`1<NamedValue> NamedValues { get; }
    public InnerPathToken(string identifier, QueryToken nextToken, IEnumerable`1<NamedValue> namedValues);
    public virtual QueryTokenKind get_Kind();
    public virtual string get_Identifier();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public IEnumerable`1<NamedValue> get_NamedValues();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.OData.UriParser.InnerPathTokenBinder : BinderBase {
    internal InnerPathTokenBinder(QueryTokenVisitor bindMethod, BindingState state);
    internal static SingleResourceNode EnsureParentIsResourceForNavProp(SingleValueNode parent);
    internal static IEdmProperty BindProperty(IEdmTypeReference parentReference, string propertyName, ODataUriResolver resolver);
    internal static QueryNode GetNavigationNode(IEdmNavigationProperty property, SingleResourceNode parent, IEnumerable`1<NamedValue> namedValues, BindingState state, KeyBinder keyBinder, IEdmNavigationSource& navigationSource);
    internal QueryNode BindInnerPathSegment(InnerPathToken segmentToken);
    private QueryNode DetermineParentNode(InnerPathToken segmentToken, BindingState state);
}
public class Microsoft.OData.UriParser.InNode : SingleValueNode {
    private IEdmTypeReference boolTypeReference;
    private SingleValueNode left;
    private CollectionNode right;
    public SingleValueNode Left { get; }
    public CollectionNode Right { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public InNode(SingleValueNode left, CollectionNode right);
    public SingleValueNode get_Left();
    public CollectionNode get_Right();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
internal enum Microsoft.OData.UriParser.InternalErrorCodes : Enum {
    public int value__;
    public static InternalErrorCodes TypePromotionUtils_GetFunctionSignatures_Binary_UnreachableCodepath;
    public static InternalErrorCodes TypePromotionUtils_GetFunctionSignatures_Unary_UnreachableCodepath;
    public static InternalErrorCodes UriQueryExpressionParser_ParseComparison;
    public static InternalErrorCodes UriPrimitiveTypeParser_TryUriStringToPrimitive;
    public static InternalErrorCodes QueryNodeUtils_BinaryOperatorResultType_UnreachableCodepath;
}
internal enum Microsoft.OData.UriParser.InternalQueryNodeKind : Enum {
    public int value__;
    public static InternalQueryNodeKind None;
    public static InternalQueryNodeKind Constant;
    public static InternalQueryNodeKind Convert;
    public static InternalQueryNodeKind NonResourceRangeVariableReference;
    public static InternalQueryNodeKind BinaryOperator;
    public static InternalQueryNodeKind UnaryOperator;
    public static InternalQueryNodeKind SingleValuePropertyAccess;
    public static InternalQueryNodeKind CollectionPropertyAccess;
    public static InternalQueryNodeKind SingleValueFunctionCall;
    public static InternalQueryNodeKind Any;
    public static InternalQueryNodeKind CollectionNavigationNode;
    public static InternalQueryNodeKind SingleNavigationNode;
    public static InternalQueryNodeKind SingleValueOpenPropertyAccess;
    public static InternalQueryNodeKind SingleResourceCast;
    public static InternalQueryNodeKind All;
    public static InternalQueryNodeKind CollectionResourceCast;
    public static InternalQueryNodeKind ResourceRangeVariableReference;
    public static InternalQueryNodeKind SingleResourceFunctionCall;
    public static InternalQueryNodeKind CollectionFunctionCall;
    public static InternalQueryNodeKind CollectionResourceFunctionCall;
    public static InternalQueryNodeKind NamedFunctionParameter;
    public static InternalQueryNodeKind ParameterAlias;
    public static InternalQueryNodeKind EntitySet;
    public static InternalQueryNodeKind KeyLookup;
    public static InternalQueryNodeKind SearchTerm;
    public static InternalQueryNodeKind CollectionOpenPropertyAccess;
    public static InternalQueryNodeKind CollectionComplexNode;
    public static InternalQueryNodeKind SingleComplexNode;
    public static InternalQueryNodeKind Count;
    public static InternalQueryNodeKind SingleValueCast;
    public static InternalQueryNodeKind CollectionPropertyNode;
    public static InternalQueryNodeKind AggregatedCollectionPropertyNode;
    public static InternalQueryNodeKind In;
    public static InternalQueryNodeKind CollectionConstant;
}
public class Microsoft.OData.UriParser.InToken : QueryToken {
    private QueryToken left;
    private QueryToken right;
    public QueryTokenKind Kind { get; }
    public QueryToken Left { get; }
    public QueryToken Right { get; }
    public InToken(QueryToken left, QueryToken right);
    public virtual QueryTokenKind get_Kind();
    public QueryToken get_Left();
    public QueryToken get_Right();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public interface Microsoft.OData.UriParser.IPathSegmentTokenVisitor {
    public abstract virtual void Visit(SystemToken tokenIn);
    public abstract virtual void Visit(NonSystemToken tokenIn);
}
public interface Microsoft.OData.UriParser.IPathSegmentTokenVisitor`1 {
    public abstract virtual T Visit(SystemToken tokenIn);
    public abstract virtual T Visit(NonSystemToken tokenIn);
}
internal class Microsoft.OData.UriParser.IsCollectionTranslator : PathSegmentTranslator`1<bool> {
    [CompilerGeneratedAttribute]
private static IsCollectionTranslator <Instance>k__BackingField;
    public static IsCollectionTranslator Instance { get; }
    private static IsCollectionTranslator();
    [CompilerGeneratedAttribute]
public static IsCollectionTranslator get_Instance();
    public virtual bool Translate(NavigationPropertySegment segment);
    public virtual bool Translate(EntitySetSegment segment);
    public virtual bool Translate(KeySegment segment);
    public virtual bool Translate(PropertySegment segment);
    public virtual bool Translate(AnnotationSegment segment);
    public virtual bool Translate(DynamicPathSegment segment);
    public virtual bool Translate(CountSegment segment);
    public virtual bool Translate(FilterSegment segment);
    public virtual bool Translate(ReferenceSegment segment);
    public virtual bool Translate(EachSegment segment);
    public virtual bool Translate(NavigationPropertyLinkSegment segment);
    public virtual bool Translate(BatchSegment segment);
    public virtual bool Translate(BatchReferenceSegment segment);
    public virtual bool Translate(ValueSegment segment);
    public virtual bool Translate(MetadataSegment segment);
    public virtual bool Translate(PathTemplateSegment segment);
}
public interface Microsoft.OData.UriParser.ISyntacticTreeVisitor`1 {
    public abstract virtual T Visit(AllToken tokenIn);
    public abstract virtual T Visit(AnyToken tokenIn);
    public abstract virtual T Visit(BinaryOperatorToken tokenIn);
    public abstract virtual T Visit(CountSegmentToken tokenIn);
    public abstract virtual T Visit(InToken tokenIn);
    public abstract virtual T Visit(DottedIdentifierToken tokenIn);
    public abstract virtual T Visit(ExpandToken tokenIn);
    public abstract virtual T Visit(ExpandTermToken tokenIn);
    public abstract virtual T Visit(FunctionCallToken tokenIn);
    public abstract virtual T Visit(LambdaToken tokenIn);
    public abstract virtual T Visit(LiteralToken tokenIn);
    public abstract virtual T Visit(InnerPathToken tokenIn);
    public abstract virtual T Visit(OrderByToken tokenIn);
    public abstract virtual T Visit(EndPathToken tokenIn);
    public abstract virtual T Visit(CustomQueryOptionToken tokenIn);
    public abstract virtual T Visit(RangeVariableToken tokenIn);
    public abstract virtual T Visit(SelectToken tokenIn);
    public abstract virtual T Visit(SelectTermToken tokenIn);
    public abstract virtual T Visit(StarToken tokenIn);
    public abstract virtual T Visit(UnaryOperatorToken tokenIn);
    public abstract virtual T Visit(FunctionParameterToken tokenIn);
    public abstract virtual T Visit(AggregateToken tokenIn);
    public abstract virtual T Visit(AggregateExpressionToken tokenIn);
    public abstract virtual T Visit(EntitySetAggregateToken tokenIn);
    public abstract virtual T Visit(GroupByToken tokenIn);
}
public interface Microsoft.OData.UriParser.IUriLiteralParser {
    public abstract virtual object ParseUriStringToType(string text, IEdmTypeReference targetType, UriLiteralParsingException& parsingException);
}
internal class Microsoft.OData.UriParser.KeyBinder : object {
    private QueryTokenVisitor keyValueBindMethod;
    internal KeyBinder(QueryTokenVisitor keyValueBindMethod);
    internal QueryNode BindKeyValues(CollectionResourceNode collectionNode, IEnumerable`1<NamedValue> namedValues, IEdmModel model);
    private bool TryBindToDeclaredAlternateKey(CollectionResourceNode collectionNode, IEnumerable`1<NamedValue> namedValues, IEdmModel model, IEdmEntityType collectionItemEntityType, QueryNode& keyLookupNode);
    private bool TryBindToDeclaredKey(CollectionResourceNode collectionNode, IEnumerable`1<NamedValue> namedValues, IEdmModel model, IEdmEntityType collectionItemEntityType, QueryNode& keyLookupNode);
    private bool TryBindToKeys(CollectionResourceNode collectionNode, IEnumerable`1<NamedValue> namedValues, IEdmModel model, IEdmEntityType collectionItemEntityType, IDictionary`2<string, IEdmProperty> keys, QueryNode& keyLookupNode);
    private bool TryBindKeyPropertyValue(NamedValue namedValue, IEdmEntityType collectionItemEntityType, IDictionary`2<string, IEdmProperty> keys, KeyPropertyValue& keyPropertyValue);
}
internal static class Microsoft.OData.UriParser.KeyFinder : object {
    public static SegmentArgumentParser FindAndUseKeysFromRelatedSegment(SegmentArgumentParser rawKeyValuesFromUri, IEnumerable`1<IEdmStructuralProperty> targetEntityKeyProperties, IEdmNavigationProperty currentNavigationProperty, KeySegment keySegmentOfParentEntity);
    private static IEnumerable`1<EdmReferentialConstraintPropertyPair> ExtractMatchingPropertyPairsFromNavProp(IEdmNavigationProperty currentNavigationProperty, IEnumerable`1<IEdmStructuralProperty> targetKeyPropertyList);
    private static IEnumerable`1<EdmReferentialConstraintPropertyPair> ExtractMatchingPropertyPairsFromReversedNavProp(IEdmNavigationProperty currentNavigationProperty, IEnumerable`1<IEdmStructuralProperty> targetKeyPropertyList);
    private static string ConvertKeyValueToUriLiteral(object value, bool keyAsSegment);
}
internal class Microsoft.OData.UriParser.KeyLookupNode : SingleEntityNode {
    private CollectionResourceNode source;
    private IEdmNavigationSource navigationSource;
    private IEdmEntityTypeReference entityTypeReference;
    private IEnumerable`1<KeyPropertyValue> keyPropertyValues;
    public CollectionResourceNode Source { get; }
    public IEnumerable`1<KeyPropertyValue> KeyPropertyValues { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmEntityTypeReference EntityTypeReference { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmStructuredTypeReference StructuredTypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public KeyLookupNode(CollectionResourceNode source, IEnumerable`1<KeyPropertyValue> keyPropertyValues);
    public CollectionResourceNode get_Source();
    public IEnumerable`1<KeyPropertyValue> get_KeyPropertyValues();
    public virtual IEdmTypeReference get_TypeReference();
    public virtual IEdmEntityTypeReference get_EntityTypeReference();
    public virtual IEdmNavigationSource get_NavigationSource();
    public virtual IEdmStructuredTypeReference get_StructuredTypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
}
internal class Microsoft.OData.UriParser.KeyPropertyValue : object {
    [CompilerGeneratedAttribute]
private IEdmProperty <KeyProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private SingleValueNode <KeyValue>k__BackingField;
    public IEdmProperty KeyProperty { get; public set; }
    public SingleValueNode KeyValue { get; public set; }
    [CompilerGeneratedAttribute]
public IEdmProperty get_KeyProperty();
    [CompilerGeneratedAttribute]
public void set_KeyProperty(IEdmProperty value);
    [CompilerGeneratedAttribute]
public SingleValueNode get_KeyValue();
    [CompilerGeneratedAttribute]
public void set_KeyValue(SingleValueNode value);
}
public class Microsoft.OData.UriParser.KeySegment : ODataPathSegment {
    private ReadOnlyCollection`1<KeyValuePair`2<string, object>> keys;
    private IEdmEntityType edmType;
    private IEdmNavigationSource navigationSource;
    [SuppressMessageAttribute("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
public IEnumerable`1<KeyValuePair`2<string, object>> Keys { get; }
    public IEdmType EdmType { get; }
    public IEdmNavigationSource NavigationSource { get; }
    [SuppressMessageAttribute("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
public KeySegment(IEnumerable`1<KeyValuePair`2<string, object>> keys, IEdmEntityType edmType, IEdmNavigationSource navigationSource);
    internal KeySegment(IList`1<KeyValuePair`2<string, object>> keys, IEdmEntityType edmType, IEdmNavigationSource navigationSource, bool verifyNavigationSourceType);
    public KeySegment(ODataPathSegment previous, IEnumerable`1<KeyValuePair`2<string, object>> keys, IEdmEntityType edmType, IEdmNavigationSource navigationSource);
    public IEnumerable`1<KeyValuePair`2<string, object>> get_Keys();
    public virtual IEdmType get_EdmType();
    public IEdmNavigationSource get_NavigationSource();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
internal class Microsoft.OData.UriParser.LambdaBinder : object {
    private QueryTokenVisitor bindMethod;
    internal LambdaBinder(QueryTokenVisitor bindMethod);
    internal LambdaNode BindLambdaToken(LambdaToken lambdaToken, BindingState state);
    private CollectionNode BindParentToken(QueryToken queryToken);
    private SingleValueNode BindExpressionToken(QueryToken queryToken);
}
public abstract class Microsoft.OData.UriParser.LambdaNode : SingleValueNode {
    private Collection`1<RangeVariable> rangeVariables;
    private RangeVariable currentRangeVariable;
    [CompilerGeneratedAttribute]
private SingleValueNode <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private CollectionNode <Source>k__BackingField;
    public Collection`1<RangeVariable> RangeVariables { get; }
    public RangeVariable CurrentRangeVariable { get; }
    public SingleValueNode Body { get; public set; }
    public CollectionNode Source { get; public set; }
    protected LambdaNode(Collection`1<RangeVariable> rangeVariables);
    protected LambdaNode(Collection`1<RangeVariable> rangeVariables, RangeVariable currentRangeVariable);
    public Collection`1<RangeVariable> get_RangeVariables();
    public RangeVariable get_CurrentRangeVariable();
    [CompilerGeneratedAttribute]
public SingleValueNode get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(SingleValueNode value);
    [CompilerGeneratedAttribute]
public CollectionNode get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(CollectionNode value);
}
public abstract class Microsoft.OData.UriParser.LambdaToken : QueryToken {
    private QueryToken parent;
    private string parameter;
    private QueryToken expression;
    public QueryToken Parent { get; }
    public QueryToken Expression { get; }
    public string Parameter { get; }
    protected LambdaToken(QueryToken expression, string parameter, QueryToken parent);
    public QueryToken get_Parent();
    public QueryToken get_Expression();
    public string get_Parameter();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.LevelsClause : object {
    private bool isMaxLevel;
    private long level;
    public bool IsMaxLevel { get; }
    public long Level { get; }
    public LevelsClause(bool isMaxLevel, long level);
    public bool get_IsMaxLevel();
    public long get_Level();
}
internal class Microsoft.OData.UriParser.LiteralBinder : object {
    internal static QueryNode BindLiteral(LiteralToken literalToken);
    internal static QueryNode BindInLiteral(LiteralToken literalToken);
}
internal abstract class Microsoft.OData.UriParser.LiteralParser : object {
    private static LiteralParser DefaultInstance;
    private static LiteralParser KeysAsSegmentsInstance;
    private static IDictionary`2<Type, PrimitiveParser> Parsers;
    internal static LiteralParser ForETags { get; }
    private static LiteralParser();
    internal static LiteralParser get_ForETags();
    internal static LiteralParser ForKeys(bool keyAsSegment);
    internal abstract virtual bool TryParseLiteral(Type targetType, string text, Object& result);
}
public class Microsoft.OData.UriParser.LiteralToken : QueryToken {
    private string originalText;
    private object value;
    private IEdmTypeReference expectedEdmTypeReference;
    public QueryTokenKind Kind { get; }
    public object Value { get; }
    internal string OriginalText { get; }
    internal IEdmTypeReference ExpectedEdmTypeReference { get; }
    public LiteralToken(object value);
    internal LiteralToken(object value, string originalText);
    internal LiteralToken(object value, string originalText, IEdmTypeReference expectedEdmTypeReference);
    public virtual QueryTokenKind get_Kind();
    public object get_Value();
    internal string get_OriginalText();
    internal IEdmTypeReference get_ExpectedEdmTypeReference();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal static class Microsoft.OData.UriParser.LiteralUtils : object {
    private static WellKnownTextSqlFormatter Formatter { get; }
    private static WellKnownTextSqlFormatter get_Formatter();
    internal static Geography ParseGeography(string text);
    internal static Geometry ParseGeometry(string text);
    internal static string ToWellKnownText(Geography instance);
    internal static string ToWellKnownText(Geometry instance);
}
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")]
internal class Microsoft.OData.UriParser.MetadataBinder : object {
    private BindingState bindingState;
    internal BindingState BindingState { get; private set; }
    internal MetadataBinder(BindingState initialState);
    internal BindingState get_BindingState();
    private void set_BindingState(BindingState value);
    public static Nullable`1<long> ProcessSkip(Nullable`1<long> skip);
    public static Nullable`1<long> ProcessTop(Nullable`1<long> top);
    public static List`1<QueryNode> ProcessQueryOptions(BindingState bindingState, QueryTokenVisitor bindMethod);
    protected internal QueryNode Bind(QueryToken token);
    protected virtual SingleValueNode BindParameterAlias(FunctionParameterAliasToken functionParameterAliasToken);
    protected virtual QueryNode BindFunctionParameter(FunctionParameterToken token);
    protected virtual QueryNode BindInnerPathSegment(InnerPathToken token);
    protected virtual SingleValueNode BindRangeVariable(RangeVariableToken rangeVariableToken);
    protected virtual QueryNode BindLiteral(LiteralToken literalToken);
    protected virtual QueryNode BindBinaryOperator(BinaryOperatorToken binaryOperatorToken);
    protected virtual QueryNode BindUnaryOperator(UnaryOperatorToken unaryOperatorToken);
    protected virtual QueryNode BindCast(DottedIdentifierToken dottedIdentifierToken);
    protected virtual QueryNode BindAnyAll(LambdaToken lambdaToken);
    protected virtual QueryNode BindEndPath(EndPathToken endPathToken);
    protected virtual QueryNode BindFunctionCall(FunctionCallToken functionCallToken);
    protected virtual QueryNode BindStringLiteral(StringLiteralToken stringLiteralToken);
    protected virtual QueryNode BindIn(InToken inToken);
    protected virtual QueryNode BindCountSegment(CountSegmentToken countSegmentToken);
    [CompilerGeneratedAttribute]
private QueryNode <BindIn>b__22_0(QueryToken queryToken);
}
[ExtensionAttribute]
internal static class Microsoft.OData.UriParser.MetadataBindingUtils : object {
    internal static SingleValueNode ConvertToTypeIfNeeded(SingleValueNode source, IEdmTypeReference targetTypeReference);
    [ExtensionAttribute]
internal static IEdmType GetEdmType(QueryNode segment);
    [ExtensionAttribute]
internal static IEdmTypeReference GetEdmTypeReference(QueryNode segment);
}
public class Microsoft.OData.UriParser.MetadataSegment : ODataPathSegment {
    [SuppressMessageAttribute("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")]
public static MetadataSegment Instance;
    public IEdmType EdmType { get; }
    private static MetadataSegment();
    public virtual IEdmType get_EdmType();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.OData.UriParser.NamedFunctionParameterNode : QueryNode {
    private string name;
    private QueryNode value;
    public string Name { get; }
    public QueryNode Value { get; }
    public QueryNodeKind Kind { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public NamedFunctionParameterNode(string name, QueryNode value);
    public string get_Name();
    public QueryNode get_Value();
    public virtual QueryNodeKind get_Kind();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.NamedValue : object {
    private string name;
    private LiteralToken value;
    public string Name { get; }
    public LiteralToken Value { get; }
    public NamedValue(string name, LiteralToken value);
    public string get_Name();
    public LiteralToken get_Value();
}
public class Microsoft.OData.UriParser.NamespaceQualifiedWildcardSelectItem : SelectItem {
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    public string Namespace { get; private set; }
    public NamespaceQualifiedWildcardSelectItem(string namespaceName);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
private void set_Namespace(string value);
    public virtual T TranslateWith(SelectItemTranslator`1<T> translator);
    public virtual void HandleWith(SelectItemHandler handler);
}
public class Microsoft.OData.UriParser.NavigationPropertyLinkSegment : ODataPathSegment {
    private IEdmNavigationProperty navigationProperty;
    public IEdmNavigationProperty NavigationProperty { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmType EdmType { get; }
    public NavigationPropertyLinkSegment(IEdmNavigationProperty navigationProperty, IEdmNavigationSource navigationSource);
    public IEdmNavigationProperty get_NavigationProperty();
    public IEdmNavigationSource get_NavigationSource();
    public virtual IEdmType get_EdmType();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.OData.UriParser.NavigationPropertySegment : ODataPathSegment {
    private IEdmNavigationProperty navigationProperty;
    public IEdmNavigationProperty NavigationProperty { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmType EdmType { get; }
    public NavigationPropertySegment(IEdmNavigationProperty navigationProperty, IEdmNavigationSource navigationSource);
    public IEdmNavigationProperty get_NavigationProperty();
    public sealed virtual IEdmNavigationSource get_NavigationSource();
    public virtual IEdmType get_EdmType();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
internal static class Microsoft.OData.UriParser.NodeFactory : object {
    internal static RangeVariable CreateImplicitRangeVariable(ODataPath path);
    internal static RangeVariable CreateImplicitRangeVariable(IEdmTypeReference elementType, IEdmNavigationSource navigationSource);
    internal static RangeVariable CreateDollarThisRangeVariable(IEdmTypeReference elementType, IEdmNavigationSource navigationSource);
    internal static SingleValueNode CreateRangeVariableReferenceNode(RangeVariable rangeVariable);
    internal static RangeVariable CreateParameterNode(string parameter, CollectionNode nodeToIterateOver);
    internal static LambdaNode CreateLambdaNode(BindingState state, CollectionNode parent, SingleValueNode lambdaExpression, RangeVariable newRangeVariable, QueryTokenKind queryTokenKind);
}
public class Microsoft.OData.UriParser.NonResourceRangeVariable : RangeVariable {
    private string name;
    private CollectionNode collectionNode;
    private IEdmTypeReference typeReference;
    public string Name { get; }
    public IEdmTypeReference TypeReference { get; }
    public CollectionNode CollectionNode { get; }
    public int Kind { get; }
    public NonResourceRangeVariable(string name, IEdmTypeReference typeReference, CollectionNode collectionNode);
    public virtual string get_Name();
    public virtual IEdmTypeReference get_TypeReference();
    public CollectionNode get_CollectionNode();
    public virtual int get_Kind();
}
public class Microsoft.OData.UriParser.NonResourceRangeVariableReferenceNode : SingleValueNode {
    private string name;
    private IEdmTypeReference typeReference;
    private NonResourceRangeVariable rangeVariable;
    public string Name { get; }
    public IEdmTypeReference TypeReference { get; }
    public NonResourceRangeVariable RangeVariable { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public NonResourceRangeVariableReferenceNode(string name, NonResourceRangeVariable rangeVariable);
    public string get_Name();
    public virtual IEdmTypeReference get_TypeReference();
    public NonResourceRangeVariable get_RangeVariable();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.NonSystemToken : PathSegmentToken {
    private IEnumerable`1<NamedValue> namedValues;
    private string identifier;
    public IEnumerable`1<NamedValue> NamedValues { get; }
    public string Identifier { get; }
    public NonSystemToken(string identifier, IEnumerable`1<NamedValue> namedValues, PathSegmentToken nextToken);
    public IEnumerable`1<NamedValue> get_NamedValues();
    public virtual string get_Identifier();
    public virtual bool IsNamespaceOrContainerQualified();
    public virtual T Accept(IPathSegmentTokenVisitor`1<T> visitor);
    public virtual void Accept(IPathSegmentTokenVisitor visitor);
}
[SuppressMessageAttribute("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
public class Microsoft.OData.UriParser.ODataExpandPath : ODataPath {
    public ODataExpandPath(IEnumerable`1<ODataPathSegment> segments);
    public ODataExpandPath(ODataPathSegment[] segments);
    internal IEdmNavigationProperty GetNavigationProperty();
    private void ValidatePath();
}
[DefaultMemberAttribute("Item")]
[SuppressMessageAttribute("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
public class Microsoft.OData.UriParser.ODataPath : object {
    private List`1<ODataPathSegment> segments;
    public ODataPathSegment FirstSegment { get; }
    public ODataPathSegment LastSegment { get; }
    public ODataPathSegment Item { get; }
    public int Count { get; }
    internal IReadOnlyList`1<ODataPathSegment> Segments { get; }
    public ODataPath(IEnumerable`1<ODataPathSegment> segments);
    public ODataPath(ODataPathSegment[] segments);
    internal ODataPath(ODataPath odataPath);
    private ODataPath(List`1<ODataPathSegment> segments, bool checkNullSegments);
    internal static ODataPath CreateFromListWithoutCopying(List`1<ODataPathSegment> segments, bool verifySegmentsNotNull);
    public ODataPathSegment get_FirstSegment();
    public ODataPathSegment get_LastSegment();
    public ODataPathSegment get_Item(int index);
    public int get_Count();
    internal IReadOnlyList`1<ODataPathSegment> get_Segments();
    public sealed virtual IEnumerator`1<ODataPathSegment> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [SuppressMessageAttribute("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")]
public IEnumerable`1<T> WalkWith(PathSegmentTranslator`1<T> translator);
    [SuppressMessageAttribute("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")]
public void WalkWith(PathSegmentHandler handler);
    internal bool Equals(ODataPath other);
}
[ExtensionAttribute]
public static class Microsoft.OData.UriParser.ODataPathExtensions : object {
    [ExtensionAttribute]
public static IEdmTypeReference EdmType(ODataPath path);
    [ExtensionAttribute]
public static IEdmNavigationSource NavigationSource(ODataPath path);
    [ExtensionAttribute]
public static bool IsCollection(ODataPath path);
    [ExtensionAttribute]
public static string ToResourcePathString(ODataPath path, ODataUrlKeyDelimiter urlKeyDelimiter);
    [ExtensionAttribute]
public static ODataPath TrimEndingKeySegment(ODataPath path);
    [ExtensionAttribute]
public static ODataPath TrimEndingTypeSegment(ODataPath path);
    [ExtensionAttribute]
public static ODataPath TrimEndingTypeAndKeySegments(ODataPath path);
    [ExtensionAttribute]
internal static ODataPath AddSegment(ODataPath path, ODataPathSegment segment);
    [ExtensionAttribute]
internal static ODataPath AddNavigationPropertySegment(ODataPath path, IEdmNavigationProperty navigationProperty, IEdmNavigationSource navigationSource);
    [ExtensionAttribute]
internal static ODataPath AddPropertySegment(ODataPath path, IEdmStructuralProperty property);
    [ExtensionAttribute]
internal static ODataPath AddKeySegment(ODataPath path, IEnumerable`1<KeyValuePair`2<string, object>> keys, IEdmEntityType edmType, IEdmNavigationSource navigationSource);
    [ExtensionAttribute]
internal static ODataPath AddKeySegment(ODataPath path, KeySegment keySegment);
    [ExtensionAttribute]
internal static bool IsIndividualProperty(ODataPath path);
    [ExtensionAttribute]
internal static bool IsUndeclared(ODataPath path);
    [ExtensionAttribute]
[SuppressMessageAttribute("Microsoft.Maintainability", "CA1055:UriReturnValuesShouldNotBeStrings")]
internal static string ToContextUrlPathString(ODataPath path);
    [ExtensionAttribute]
internal static ODataSelectPath ToSelectPath(ODataExpandPath path);
    [ExtensionAttribute]
internal static ODataExpandPath ToExpandPath(ODataSelectPath path);
    [ExtensionAttribute]
internal static IEdmNavigationSource TargetNavigationSource(ODataPath path);
}
internal static class Microsoft.OData.UriParser.ODataPathFactory : object {
    internal static ODataPath BindPath(ICollection`1<string> segments, ODataUriParserConfiguration configuration);
}
internal class Microsoft.OData.UriParser.ODataPathInfo : object {
    private IEdmType targetEdmType;
    private IEdmNavigationSource targetNavigationSource;
    private IEnumerable`1<ODataPathSegment> segments;
    public IEdmType TargetEdmType { get; }
    public IEdmNavigationSource TargetNavigationSource { get; }
    public IEnumerable`1<ODataPathSegment> Segments { get; }
    public IEdmStructuredType TargetStructuredType { get; }
    public ODataPathInfo(ODataPath odataPath);
    public ODataPathInfo(IEdmType targetEdmType, IEdmNavigationSource targetNavigationSource);
    public IEdmType get_TargetEdmType();
    public IEdmNavigationSource get_TargetNavigationSource();
    public IEnumerable`1<ODataPathSegment> get_Segments();
    public IEdmStructuredType get_TargetStructuredType();
}
internal class Microsoft.OData.UriParser.ODataPathParser : object {
    internal static Regex ContentIdRegex;
    private static IList`1<string> EmptyList;
    private Queue`1<string> segmentQueue;
    private List`1<ODataPathSegment> parsedSegments;
    private ODataUriParserConfiguration configuration;
    private bool nextSegmentMustReferToMetadata;
    private IEdmNavigationSource lastNavigationSource;
    internal ODataPathParser(ODataUriParserConfiguration configuration);
    private static ODataPathParser();
    internal static void ExtractSegmentIdentifierAndParenthesisExpression(string segmentText, String& identifier, String& parenthesisExpression);
    internal IList`1<ODataPathSegment> ParsePath(ICollection`1<string> segments);
    private static bool TryBindingParametersAndMatchingOperationImport(string identifier, string parenthesisExpression, ODataUriParserConfiguration configuration, ICollection`1& boundParameters, IEdmOperationImport& matchingFunctionImport);
    private static bool TryBindingParametersAndMatchingOperation(string identifier, string parenthesisExpression, IEdmType bindingType, ODataUriParserConfiguration configuration, ICollection`1& boundParameters, IEdmOperation& matchingOperation);
    private static void CheckSingleResult(bool isSingleResult, string identifier);
    private bool TryGetNextSegmentText(String& segmentText);
    private bool TryGetNextSegmentText(bool previousSegmentWasEscapeMarker, String& segmentText);
    private bool TryHandleAsKeySegment(string segmentText);
    private KeySegment FindPreviousKeySegment();
    private static void ThrowIfMustBeLeafSegment(ODataPathSegment previous);
    private bool TryCreateCountSegment(string identifier, string parenthesisExpression);
    private FilterClause GenerateFilterClause(IEdmNavigationSource navigationSource, IEdmType targetEdmType, string filter);
    private bool TryCreateFilterSegment(string segmentText);
    private bool TryCreateEachSegment(string identifier, string parenthesisExpression);
    private bool TryCreateEntityReferenceSegment(string identifier, string parenthesisExpression);
    private bool TryBindKeyFromParentheses(string parenthesesSection);
    private bool TryCreateValueSegment(string identifier, string parenthesisExpression);
    private void CreateDynamicPathSegment(ODataPathSegment previous, string identifier, string parenthesisExpression);
    private void CreateNamedStreamSegment(ODataPathSegment previous, IEdmProperty streamProperty);
    private void CreateFirstSegment(string segmentText);
    private bool BindSegmentBeforeEscapeFunction(string segmentText);
    private bool TryCreatePropertySegment(ODataPathSegment previous, string identifier, string parenthesisExpression);
    private bool TryCreateSegmentForNavigationSource(string identifier, string parenthesisExpression);
    [SuppressMessageAttribute("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
private bool TryCreateSegmentForOperationImport(string identifier, string parenthesisExpression);
    private void TryBindKeySegmentIfNoResolvedParametersAndParenthesisValueExists(string parenthesisExpression, IEdmTypeReference returnType, ICollection`1<OperationSegmentParameter> resolvedParameters, ODataPathSegment segment);
    [SuppressMessageAttribute("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
private bool TryCreateSegmentForOperation(ODataPathSegment previousSegment, string identifier, string parenthesisExpression);
    private void CreateOperationSegment(ODataPathSegment previousSegment, IEdmOperation singleOperation, ICollection`1<OperationSegmentParameter> resolvedParameters, string identifier, string parenthesisExpression);
    private void CreateNextSegment(string text);
    private bool TryCreateEscapeFunctionSegment(string segmentText);
    private bool TryBindProperty(string identifier, IEdmProperty& projectedProperty);
    private bool TryBindEscapeFunction();
    private bool TryCreateTypeNameSegment(ODataPathSegment previous, string identifier, string parenthesisExpression);
    [SuppressMessageAttribute("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
private void CreatePropertySegment(ODataPathSegment previous, IEdmProperty property, string queryPortion);
    private bool IdentifierIs(string expected, string identifier);
    private List`1<ODataPathSegment> CreateValidatedPathSegments();
    private void CheckDollarEachSegmentRestrictions(int index);
    private void CheckTypeCastSegmentRestriction(ODataPathSegment previous, IEdmType targetEdmType);
    private void CheckOperationTypeCastSegmentRestriction(IEdmOperation operation);
    private static void VerifyDerivedTypeConstraints(IEdmModel model, IEdmVocabularyAnnotatable target, string fullTypeName, string kind, string name);
    private bool TryResolveEscapeFunction(ODataPathSegment previous, String& qualifiedName, String& parenthesisExpression, Boolean& anotherEscapeFunctionStarts, IEdmFunction& function);
    private static IEdmFunction FindBestMatchForEscapeFunction(IEnumerable`1<IEdmFunction> candidates, bool isComposable, IEdmType bindingType);
    private static bool ParametersMatchEscapeFunction(IEnumerable`1<IEdmOperationParameter> parameters, IEdmOperationParameter& firstParameter);
    internal static bool IsUrlEscapeFunction(IEdmModel model, IEdmFunction function);
}
public abstract class Microsoft.OData.UriParser.ODataPathSegment : object {
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SingleResult>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmNavigationSource <TargetEdmNavigationSource>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmType <TargetEdmType>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestTargetKind <TargetKind>k__BackingField;
    public IEdmType EdmType { get; }
    public string Identifier { get; public set; }
    internal bool SingleResult { get; internal set; }
    internal IEdmNavigationSource TargetEdmNavigationSource { get; internal set; }
    internal IEdmType TargetEdmType { get; internal set; }
    internal RequestTargetKind TargetKind { get; internal set; }
    internal ODataPathSegment(ODataPathSegment other);
    public abstract virtual IEdmType get_EdmType();
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
internal bool get_SingleResult();
    [CompilerGeneratedAttribute]
internal void set_SingleResult(bool value);
    [CompilerGeneratedAttribute]
internal IEdmNavigationSource get_TargetEdmNavigationSource();
    [CompilerGeneratedAttribute]
internal void set_TargetEdmNavigationSource(IEdmNavigationSource value);
    [CompilerGeneratedAttribute]
internal IEdmType get_TargetEdmType();
    [CompilerGeneratedAttribute]
internal void set_TargetEdmType(IEdmType value);
    [CompilerGeneratedAttribute]
internal RequestTargetKind get_TargetKind();
    [CompilerGeneratedAttribute]
internal void set_TargetKind(RequestTargetKind value);
    public abstract virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public abstract virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
    internal void CopyValuesFrom(ODataPathSegment other);
}
public class Microsoft.OData.UriParser.ODataQueryOptionParser : object {
    private IEdmType targetEdmType;
    private IDictionary`2<string, string> queryOptions;
    private FilterClause filterClause;
    private SelectExpandClause selectExpandClause;
    private OrderByClause orderByClause;
    private SearchClause searchClause;
    private ApplyClause applyClause;
    private ComputeClause computeClause;
    private ODataPathInfo odataPathInfo;
    [CompilerGeneratedAttribute]
private ODataUriParserConfiguration <Configuration>k__BackingField;
    public ODataUriParserSettings Settings { get; }
    public IDictionary`2<string, SingleValueNode> ParameterAliasNodes { get; }
    public ODataUriResolver Resolver { get; public set; }
    internal ODataUriParserConfiguration Configuration { get; internal set; }
    public ODataQueryOptionParser(IEdmModel model, IEdmType targetEdmType, IEdmNavigationSource targetNavigationSource, IDictionary`2<string, string> queryOptions);
    public ODataQueryOptionParser(IEdmModel model, IEdmType targetEdmType, IEdmNavigationSource targetNavigationSource, IDictionary`2<string, string> queryOptions, IServiceProvider container);
    public ODataQueryOptionParser(IEdmModel model, ODataPath odataPath, IDictionary`2<string, string> queryOptions);
    public ODataQueryOptionParser(IEdmModel model, ODataPath odataPath, IDictionary`2<string, string> queryOptions, IServiceProvider container);
    public ODataUriParserSettings get_Settings();
    public IDictionary`2<string, SingleValueNode> get_ParameterAliasNodes();
    public ODataUriResolver get_Resolver();
    public void set_Resolver(ODataUriResolver value);
    [CompilerGeneratedAttribute]
internal ODataUriParserConfiguration get_Configuration();
    [CompilerGeneratedAttribute]
internal void set_Configuration(ODataUriParserConfiguration value);
    public FilterClause ParseFilter();
    public ApplyClause ParseApply();
    public SelectExpandClause ParseSelectAndExpand();
    public OrderByClause ParseOrderBy();
    public Nullable`1<long> ParseTop();
    public Nullable`1<long> ParseSkip();
    public Nullable`1<long> ParseIndex();
    public Nullable`1<bool> ParseCount();
    public SearchClause ParseSearch();
    public string ParseSkipToken();
    public string ParseDeltaToken();
    public ComputeClause ParseCompute();
    private FilterClause ParseFilterImplementation(string filter, ODataUriParserConfiguration configuration, ODataPathInfo odataPathInfo);
    private static ApplyClause ParseApplyImplementation(string apply, ODataUriParserConfiguration configuration, ODataPathInfo odataPathInfo);
    private SelectExpandClause ParseSelectAndExpandImplementation(string select, string expand, ODataUriParserConfiguration configuration, ODataPathInfo odataPathInfo);
    private OrderByClause ParseOrderByImplementation(string orderBy, ODataUriParserConfiguration configuration, ODataPathInfo odataPathInfo);
    private BindingState CreateBindingState(ODataUriParserConfiguration configuration, ODataPathInfo odataPathInfo);
    private static Nullable`1<long> ParseTop(string topQuery);
    private static Nullable`1<long> ParseSkip(string skipQuery);
    private static Nullable`1<long> ParseIndex(string indexQuery);
    private static Nullable`1<bool> ParseCount(string count);
    private static SearchClause ParseSearchImplementation(string search, ODataUriParserConfiguration configuration);
    private ComputeClause ParseComputeImplementation(string compute, ODataUriParserConfiguration configuration, ODataPathInfo odataPathInfo);
    private bool TryGetQueryOption(string name, String& value);
}
[SuppressMessageAttribute("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
public class Microsoft.OData.UriParser.ODataSelectPath : ODataPath {
    public ODataSelectPath(IEnumerable`1<ODataPathSegment> segments);
    public ODataSelectPath(ODataPathSegment[] segments);
    private void ValidatePath();
}
[DebuggerDisplayAttribute("{Message}")]
public class Microsoft.OData.UriParser.ODataUnrecognizedPathException : ODataException {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ODataPathSegment> <ParsedSegments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentSegment>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <UnparsedSegments>k__BackingField;
    public IEnumerable`1<ODataPathSegment> ParsedSegments { get; public set; }
    public string CurrentSegment { get; public set; }
    public IEnumerable`1<string> UnparsedSegments { get; public set; }
    public ODataUnrecognizedPathException(string message);
    public ODataUnrecognizedPathException(string message, Exception innerException);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ODataPathSegment> get_ParsedSegments();
    [CompilerGeneratedAttribute]
public void set_ParsedSegments(IEnumerable`1<ODataPathSegment> value);
    [CompilerGeneratedAttribute]
public string get_CurrentSegment();
    [CompilerGeneratedAttribute]
public void set_CurrentSegment(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_UnparsedSegments();
    [CompilerGeneratedAttribute]
public void set_UnparsedSegments(IEnumerable`1<string> value);
}
public class Microsoft.OData.UriParser.ODataUnresolvedFunctionParameterAlias : object {
    [CompilerGeneratedAttribute]
private IEdmTypeReference <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    public IEdmTypeReference Type { get; private set; }
    public string Alias { get; private set; }
    public ODataUnresolvedFunctionParameterAlias(string alias, IEdmTypeReference type);
    [CompilerGeneratedAttribute]
public IEdmTypeReference get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(IEdmTypeReference value);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
private void set_Alias(string value);
}
public class Microsoft.OData.UriParser.ODataUriParser : object {
    private ODataUriParserConfiguration configuration;
    private Uri serviceRoot;
    private Uri uri;
    private List`1<CustomQueryOptionToken> queryOptions;
    private IDictionary`2<string, string> queryOptionDic;
    private IList`1<KeyValuePair`2<string, string>> customQueryOptions;
    private ODataQueryOptionParser queryOptionParser;
    private ODataPath odataPath;
    private EntityIdSegment entityIdSegment;
    public ODataUriParserSettings Settings { get; }
    public IEdmModel Model { get; }
    public IServiceProvider Container { get; }
    public Uri ServiceRoot { get; }
    public ODataUrlKeyDelimiter UrlKeyDelimiter { get; public set; }
    public Func`2<string, BatchReferenceSegment> BatchReferenceCallback { get; public set; }
    public bool EnableNoDollarQueryOptions { get; public set; }
    public bool EnableUriTemplateParsing { get; public set; }
    public ODataUriResolver Resolver { get; public set; }
    public ParseDynamicPathSegment ParseDynamicPathSegmentFunc { get; public set; }
    public IDictionary`2<string, SingleValueNode> ParameterAliasNodes { get; }
    public IList`1<KeyValuePair`2<string, string>> CustomQueryOptions { get; }
    internal ParameterAliasValueAccessor ParameterAliasValueAccessor { get; internal set; }
    public ODataUriParser(IEdmModel model, Uri serviceRoot, Uri uri);
    public ODataUriParser(IEdmModel model, Uri serviceRoot, Uri uri, IServiceProvider container);
    public ODataUriParser(IEdmModel model, Uri relativeUri);
    public ODataUriParser(IEdmModel model, Uri relativeUri, IServiceProvider container);
    public ODataUriParserSettings get_Settings();
    public IEdmModel get_Model();
    public IServiceProvider get_Container();
    public Uri get_ServiceRoot();
    public ODataUrlKeyDelimiter get_UrlKeyDelimiter();
    public void set_UrlKeyDelimiter(ODataUrlKeyDelimiter value);
    public Func`2<string, BatchReferenceSegment> get_BatchReferenceCallback();
    public void set_BatchReferenceCallback(Func`2<string, BatchReferenceSegment> value);
    public bool get_EnableNoDollarQueryOptions();
    public void set_EnableNoDollarQueryOptions(bool value);
    public bool get_EnableUriTemplateParsing();
    public void set_EnableUriTemplateParsing(bool value);
    public ODataUriResolver get_Resolver();
    public void set_Resolver(ODataUriResolver value);
    public ParseDynamicPathSegment get_ParseDynamicPathSegmentFunc();
    public void set_ParseDynamicPathSegmentFunc(ParseDynamicPathSegment value);
    public IDictionary`2<string, SingleValueNode> get_ParameterAliasNodes();
    public IList`1<KeyValuePair`2<string, string>> get_CustomQueryOptions();
    internal ParameterAliasValueAccessor get_ParameterAliasValueAccessor();
    internal void set_ParameterAliasValueAccessor(ParameterAliasValueAccessor value);
    public bool Validate(ODataUrlValidationRuleSet rules, IEnumerable`1& validationMessages);
    public bool Validate(ODataUrlValidator validator, IEnumerable`1& validationMessages);
    public ODataPath ParsePath();
    public FilterClause ParseFilter();
    public OrderByClause ParseOrderBy();
    public SelectExpandClause ParseSelectAndExpand();
    public EntityIdSegment ParseEntityId();
    public Nullable`1<long> ParseTop();
    public Nullable`1<long> ParseSkip();
    public Nullable`1<long> ParseIndex();
    public Nullable`1<bool> ParseCount();
    public SearchClause ParseSearch();
    public ApplyClause ParseApply();
    public string ParseSkipToken();
    public string ParseDeltaToken();
    public ComputeClause ParseCompute();
    public ODataUri ParseUri();
    private ODataPath ParsePathImplementation();
    private void Initialize();
    private void InitQueryOptionDic();
    private bool IsODataQueryOption(string optionName);
}
internal class Microsoft.OData.UriParser.ODataUriParserConfiguration : object {
    private ODataUrlKeyDelimiter urlKeyDelimiter;
    private ODataUriResolver uriResolver;
    [CompilerGeneratedAttribute]
private ODataUriParserSettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmModel <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <Container>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, BatchReferenceSegment> <BatchReferenceCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private ParseDynamicPathSegment <ParseDynamicPathSegmentFunc>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableUriTemplateParsing>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterAliasValueAccessor <ParameterAliasValueAccessor>k__BackingField;
    public ODataUriParserSettings Settings { get; private set; }
    public IEdmModel Model { get; private set; }
    public IServiceProvider Container { get; private set; }
    public ODataUrlKeyDelimiter UrlKeyDelimiter { get; public set; }
    public Func`2<string, BatchReferenceSegment> BatchReferenceCallback { get; public set; }
    public ParseDynamicPathSegment ParseDynamicPathSegmentFunc { get; public set; }
    internal bool EnableCaseInsensitiveUriFunctionIdentifier { get; internal set; }
    internal bool EnableNoDollarQueryOptions { get; internal set; }
    internal bool EnableUriTemplateParsing { get; internal set; }
    internal ParameterAliasValueAccessor ParameterAliasValueAccessor { get; internal set; }
    internal ODataUriResolver Resolver { get; internal set; }
    public ODataUriParserConfiguration(IEdmModel model, IServiceProvider container);
    internal ODataUriParserConfiguration(IEdmModel model);
    [CompilerGeneratedAttribute]
public ODataUriParserSettings get_Settings();
    [CompilerGeneratedAttribute]
private void set_Settings(ODataUriParserSettings value);
    [CompilerGeneratedAttribute]
public IEdmModel get_Model();
    [CompilerGeneratedAttribute]
private void set_Model(IEdmModel value);
    [CompilerGeneratedAttribute]
public IServiceProvider get_Container();
    [CompilerGeneratedAttribute]
private void set_Container(IServiceProvider value);
    public ODataUrlKeyDelimiter get_UrlKeyDelimiter();
    public void set_UrlKeyDelimiter(ODataUrlKeyDelimiter value);
    [CompilerGeneratedAttribute]
public Func`2<string, BatchReferenceSegment> get_BatchReferenceCallback();
    [CompilerGeneratedAttribute]
public void set_BatchReferenceCallback(Func`2<string, BatchReferenceSegment> value);
    [CompilerGeneratedAttribute]
public ParseDynamicPathSegment get_ParseDynamicPathSegmentFunc();
    [CompilerGeneratedAttribute]
public void set_ParseDynamicPathSegmentFunc(ParseDynamicPathSegment value);
    internal bool get_EnableCaseInsensitiveUriFunctionIdentifier();
    internal void set_EnableCaseInsensitiveUriFunctionIdentifier(bool value);
    internal bool get_EnableNoDollarQueryOptions();
    internal void set_EnableNoDollarQueryOptions(bool value);
    [CompilerGeneratedAttribute]
internal bool get_EnableUriTemplateParsing();
    [CompilerGeneratedAttribute]
internal void set_EnableUriTemplateParsing(bool value);
    [CompilerGeneratedAttribute]
internal ParameterAliasValueAccessor get_ParameterAliasValueAccessor();
    [CompilerGeneratedAttribute]
internal void set_ParameterAliasValueAccessor(ParameterAliasValueAccessor value);
    internal ODataUriResolver get_Resolver();
    internal void set_Resolver(ODataUriResolver value);
}
public class Microsoft.OData.UriParser.ODataUriParserSettings : object {
    internal static int DefaultFilterLimit;
    internal static int DefaultOrderByLimit;
    internal static int DefaultSelectExpandLimit;
    internal static int DefaultPathLimit;
    internal static int DefaultSearchLimit;
    private int filterLimit;
    private int orderByLimit;
    private int pathLimit;
    private int selectExpandLimit;
    private int maxExpandDepth;
    private int maxExpandCount;
    private int searchLimit;
    [CompilerGeneratedAttribute]
private bool <EnableParsingKeyAsSegment>k__BackingField;
    public int MaximumExpansionDepth { get; public set; }
    public int MaximumExpansionCount { get; public set; }
    public bool EnableParsingKeyAsSegment { get; public set; }
    internal int SelectExpandLimit { get; internal set; }
    internal int FilterLimit { get; internal set; }
    internal int OrderByLimit { get; internal set; }
    internal int PathLimit { get; internal set; }
    internal int SearchLimit { get; internal set; }
    internal ODataUriParserSettings Clone();
    public int get_MaximumExpansionDepth();
    public void set_MaximumExpansionDepth(int value);
    public int get_MaximumExpansionCount();
    public void set_MaximumExpansionCount(int value);
    [CompilerGeneratedAttribute]
public bool get_EnableParsingKeyAsSegment();
    [CompilerGeneratedAttribute]
public void set_EnableParsingKeyAsSegment(bool value);
    internal int get_SelectExpandLimit();
    internal void set_SelectExpandLimit(int value);
    internal int get_FilterLimit();
    internal void set_FilterLimit(int value);
    internal int get_OrderByLimit();
    internal void set_OrderByLimit(int value);
    internal int get_PathLimit();
    internal void set_PathLimit(int value);
    internal int get_SearchLimit();
    internal void set_SearchLimit(int value);
}
public class Microsoft.OData.UriParser.ODataUriResolver : object {
    private static ODataUriResolver Default;
    private TypeFacetsPromotionRules typeFacetsPromotionRules;
    [CompilerGeneratedAttribute]
private bool <EnableCaseInsensitive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableNoDollarQueryOptions>k__BackingField;
    public bool EnableCaseInsensitive { get; public set; }
    public bool EnableNoDollarQueryOptions { get; public set; }
    public TypeFacetsPromotionRules TypeFacetsPromotionRules { get; public set; }
    private static ODataUriResolver();
    [CompilerGeneratedAttribute]
public virtual bool get_EnableCaseInsensitive();
    [CompilerGeneratedAttribute]
public virtual void set_EnableCaseInsensitive(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_EnableNoDollarQueryOptions();
    [CompilerGeneratedAttribute]
public virtual void set_EnableNoDollarQueryOptions(bool value);
    public TypeFacetsPromotionRules get_TypeFacetsPromotionRules();
    public void set_TypeFacetsPromotionRules(TypeFacetsPromotionRules value);
    public virtual void PromoteBinaryOperandTypes(BinaryOperatorKind binaryOperatorKind, SingleValueNode& leftNode, SingleValueNode& rightNode, IEdmTypeReference& typeReference);
    public virtual IEdmNavigationSource ResolveNavigationSource(IEdmModel model, string identifier);
    public virtual IEdmProperty ResolveProperty(IEdmStructuredType type, string propertyName);
    public virtual IEdmTerm ResolveTerm(IEdmModel model, string termName);
    public virtual IEdmSchemaType ResolveType(IEdmModel model, string typeName);
    public virtual IEnumerable`1<IEdmOperation> ResolveBoundOperations(IEdmModel model, string identifier, IEdmType bindingType);
    public virtual IEnumerable`1<IEdmOperation> ResolveUnboundOperations(IEdmModel model, string identifier);
    public virtual IEnumerable`1<IEdmOperationImport> ResolveOperationImports(IEdmModel model, string identifier);
    public virtual IDictionary`2<IEdmOperationParameter, SingleValueNode> ResolveOperationParameters(IEdmOperation operation, IDictionary`2<string, SingleValueNode> input);
    public virtual IEnumerable`1<KeyValuePair`2<string, object>> ResolveKeys(IEdmEntityType type, IList`1<string> positionalValues, Func`3<IEdmTypeReference, string, object> convertFunc);
    public virtual IEnumerable`1<KeyValuePair`2<string, object>> ResolveKeys(IEdmEntityType type, IDictionary`2<string, string> namedValues, Func`3<IEdmTypeReference, string, object> convertFunc);
    internal bool TryResolveKeys(IEdmEntityType type, IDictionary`2<string, string> namedValues, Func`3<IEdmTypeReference, string, object> convertFunc, IEnumerable`1& resolvedKeys);
    internal static IEdmOperationParameter ResolveOperationParameterNameCaseInsensitive(IEdmOperation operation, string identifier);
    internal static ODataUriResolver GetUriResolver(IServiceProvider container);
    private static IReadOnlyList`1<T> FindSchemaElements(IEdmModel model, string identifier, Func`3<NormalizedModelElementsCache, string, List`1<T>> cacheLookupFunc);
    private static IReadOnlyList`1<T> FindAcrossModels(IEdmModel model, string qualifiedName, bool caseInsensitive);
    private static void FindSchemaElementsInModel(IEdmModel model, string qualifiedName, bool caseInsensitive, IList`1& results);
    private static NormalizedModelElementsCache GetNormalizedModelElementsCache(IEdmModel model);
}
public class Microsoft.OData.UriParser.OperationImportSegment : ODataPathSegment {
    private static IEdmType UnknownSentinel;
    private ReadOnlyCollection`1<IEdmOperationImport> operationImports;
    private ReadOnlyCollection`1<OperationSegmentParameter> parameters;
    private IEdmEntitySetBase entitySet;
    private IEdmType computedReturnEdmType;
    public IEnumerable`1<IEdmOperationImport> OperationImports { get; }
    public IEnumerable`1<OperationSegmentParameter> Parameters { get; }
    public IEdmType EdmType { get; }
    public IEdmEntitySetBase EntitySet { get; }
    public OperationImportSegment(IEdmOperationImport operationImport, IEdmEntitySetBase entitySet);
    public OperationImportSegment(IEdmOperationImport operationImport, IEdmEntitySetBase entitySet, IEnumerable`1<OperationSegmentParameter> parameters);
    public OperationImportSegment(IEnumerable`1<IEdmOperationImport> operationImports, IEdmEntitySetBase entitySet);
    public OperationImportSegment(IEnumerable`1<IEdmOperationImport> operationImports, IEdmEntitySetBase entitySet, IEnumerable`1<OperationSegmentParameter> parameters);
    private static OperationImportSegment();
    public IEnumerable`1<IEdmOperationImport> get_OperationImports();
    public IEnumerable`1<OperationSegmentParameter> get_Parameters();
    public virtual IEdmType get_EdmType();
    public IEdmEntitySetBase get_EntitySet();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
    private void EnsureTypeAndSetAreCompatable();
}
public class Microsoft.OData.UriParser.OperationSegment : ODataPathSegment {
    private static IEdmType UnknownSentinel;
    private ReadOnlyCollection`1<IEdmOperation> operations;
    private ReadOnlyCollection`1<OperationSegmentParameter> parameters;
    private IEdmEntitySetBase entitySet;
    private IEdmType computedReturnEdmType;
    public IEnumerable`1<IEdmOperation> Operations { get; }
    public IEnumerable`1<OperationSegmentParameter> Parameters { get; }
    public IEdmType EdmType { get; }
    public IEdmEntitySetBase EntitySet { get; }
    public OperationSegment(IEdmOperation operation, IEdmEntitySetBase entitySet);
    public OperationSegment(IEdmOperation operation, IEnumerable`1<OperationSegmentParameter> parameters, IEdmEntitySetBase entitySet);
    public OperationSegment(IEnumerable`1<IEdmOperation> operations, IEdmEntitySetBase entitySet);
    public OperationSegment(IEnumerable`1<IEdmOperation> operations, IEnumerable`1<OperationSegmentParameter> parameters, IEdmEntitySetBase entitySet);
    private static OperationSegment();
    public IEnumerable`1<IEdmOperation> get_Operations();
    public IEnumerable`1<OperationSegmentParameter> get_Parameters();
    public virtual IEdmType get_EdmType();
    public IEdmEntitySetBase get_EntitySet();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
    private void EnsureTypeAndSetAreCompatable();
}
public class Microsoft.OData.UriParser.OperationSegmentParameter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public string Name { get; private set; }
    public object Value { get; private set; }
    public OperationSegmentParameter(string name, object value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(object value);
}
internal class Microsoft.OData.UriParser.OrderByBinder : object {
    private QueryTokenVisitor bindMethod;
    internal OrderByBinder(QueryTokenVisitor bindMethod);
    internal OrderByClause BindOrderBy(BindingState state, IEnumerable`1<OrderByToken> orderByTokens);
    private OrderByClause ProcessSingleOrderBy(BindingState state, OrderByClause thenBy, OrderByToken orderByToken);
}
public class Microsoft.OData.UriParser.OrderByClause : object {
    private SingleValueNode expression;
    private OrderByDirection direction;
    private RangeVariable rangeVariable;
    private OrderByClause thenBy;
    public OrderByClause ThenBy { get; }
    public SingleValueNode Expression { get; }
    public OrderByDirection Direction { get; }
    public RangeVariable RangeVariable { get; }
    public IEdmTypeReference ItemType { get; }
    public OrderByClause(OrderByClause thenBy, SingleValueNode expression, OrderByDirection direction, RangeVariable rangeVariable);
    public OrderByClause get_ThenBy();
    public SingleValueNode get_Expression();
    public OrderByDirection get_Direction();
    public RangeVariable get_RangeVariable();
    public IEdmTypeReference get_ItemType();
}
public enum Microsoft.OData.UriParser.OrderByDirection : Enum {
    public int value__;
    public static OrderByDirection Ascending;
    public static OrderByDirection Descending;
}
public class Microsoft.OData.UriParser.OrderByToken : QueryToken {
    private OrderByDirection direction;
    private QueryToken expression;
    public QueryTokenKind Kind { get; }
    public OrderByDirection Direction { get; }
    public QueryToken Expression { get; }
    public OrderByToken(QueryToken expression, OrderByDirection direction);
    public virtual QueryTokenKind get_Kind();
    public OrderByDirection get_Direction();
    public QueryToken get_Expression();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal class Microsoft.OData.UriParser.ParameterAliasBinder : object {
    private QueryTokenVisitor bindMethod;
    internal ParameterAliasBinder(QueryTokenVisitor bindMethod);
    internal ParameterAliasNode BindParameterAlias(BindingState bindingState, FunctionParameterAliasToken aliasToken);
    private SingleValueNode ParseAndBindParameterAliasValueExpression(BindingState bindingState, string aliasValueExpression, IEdmTypeReference parameterType);
    private static QueryToken ParseComplexOrCollectionAlias(QueryToken queryToken, IEdmTypeReference parameterType, IEdmModel model);
}
public class Microsoft.OData.UriParser.ParameterAliasNode : SingleValueNode {
    private IEdmTypeReference typeReference;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    public string Alias { get; private set; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public ParameterAliasNode(string alias, IEdmTypeReference typeReference);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
private void set_Alias(string value);
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
internal class Microsoft.OData.UriParser.ParameterAliasValueAccessor : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, SingleValueNode> <ParameterAliasValueNodesCached>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ParameterAliasValueExpressions>k__BackingField;
    public IDictionary`2<string, SingleValueNode> ParameterAliasValueNodesCached { get; private set; }
    internal IDictionary`2<string, string> ParameterAliasValueExpressions { get; private set; }
    public ParameterAliasValueAccessor(IDictionary`2<string, string> parameterAliasValueExpressions);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, SingleValueNode> get_ParameterAliasValueNodesCached();
    [CompilerGeneratedAttribute]
private void set_ParameterAliasValueNodesCached(IDictionary`2<string, SingleValueNode> value);
    [CompilerGeneratedAttribute]
internal IDictionary`2<string, string> get_ParameterAliasValueExpressions();
    [CompilerGeneratedAttribute]
private void set_ParameterAliasValueExpressions(IDictionary`2<string, string> value);
    public string GetAliasValueExpression(string alias);
}
public class Microsoft.OData.UriParser.ParseDynamicPathSegment : MulticastDelegate {
    public ParseDynamicPathSegment(object object, IntPtr method);
    public virtual ICollection`1<ODataPathSegment> Invoke(ODataPathSegment previous, string identifier, string parenthesisExpression);
    public virtual IAsyncResult BeginInvoke(ODataPathSegment previous, string identifier, string parenthesisExpression, AsyncCallback callback, object object);
    public virtual ICollection`1<ODataPathSegment> EndInvoke(IAsyncResult result);
}
[ExtensionAttribute]
internal static class Microsoft.OData.UriParser.PathParserModelUtils : object {
    [ExtensionAttribute]
internal static IEdmEntitySetBase GetTargetEntitySet(IEdmOperationImport operationImport, IEdmEntitySetBase sourceEntitySet, IEdmModel model);
    [ExtensionAttribute]
internal static IEdmEntitySetBase GetTargetEntitySet(IEdmOperation operation, IEdmNavigationSource source, IEdmModel model);
    [ExtensionAttribute]
internal static RequestTargetKind GetTargetKindFromType(IEdmType type);
}
[ExtensionAttribute]
internal static class Microsoft.OData.UriParser.PathReverser : object {
    [ExtensionAttribute]
public static PathSegmentToken Reverse(PathSegmentToken head);
}
public abstract class Microsoft.OData.UriParser.PathSegmentHandler : object {
    public virtual void Handle(ODataPathSegment segment);
    public virtual void Handle(TypeSegment segment);
    public virtual void Handle(NavigationPropertySegment segment);
    public virtual void Handle(EntitySetSegment segment);
    public virtual void Handle(SingletonSegment segment);
    public virtual void Handle(KeySegment segment);
    public virtual void Handle(PropertySegment segment);
    public virtual void Handle(AnnotationSegment segment);
    public virtual void Handle(OperationImportSegment segment);
    public virtual void Handle(OperationSegment segment);
    public virtual void Handle(DynamicPathSegment segment);
    public virtual void Handle(CountSegment segment);
    public virtual void Handle(FilterSegment segment);
    public virtual void Handle(ReferenceSegment segment);
    public virtual void Handle(EachSegment segment);
    public virtual void Handle(NavigationPropertyLinkSegment segment);
    public virtual void Handle(ValueSegment segment);
    public virtual void Handle(BatchSegment segment);
    public virtual void Handle(BatchReferenceSegment segment);
    public virtual void Handle(MetadataSegment segment);
    public virtual void Handle(PathTemplateSegment segment);
}
internal class Microsoft.OData.UriParser.PathSegmentToContextUrlPathTranslator : PathSegmentTranslator`1<string> {
    internal static PathSegmentToContextUrlPathTranslator DefaultInstance;
    internal static PathSegmentToContextUrlPathTranslator KeyAsSegmentInstance;
    private KeySerializer KeySerializer;
    private PathSegmentToContextUrlPathTranslator(bool keyAsSegment);
    private static PathSegmentToContextUrlPathTranslator();
    public virtual string Translate(TypeSegment segment);
    public virtual string Translate(NavigationPropertySegment segment);
    public virtual string Translate(EntitySetSegment segment);
    public virtual string Translate(SingletonSegment segment);
    public virtual string Translate(KeySegment segment);
    public virtual string Translate(PropertySegment segment);
    public virtual string Translate(AnnotationSegment segment);
    public virtual string Translate(OperationSegment segment);
    public virtual string Translate(OperationImportSegment segment);
    public virtual string Translate(DynamicPathSegment segment);
    public virtual string Translate(CountSegment segment);
    public virtual string Translate(FilterSegment segment);
    public virtual string Translate(ReferenceSegment segment);
    public virtual string Translate(EachSegment segment);
    public virtual string Translate(NavigationPropertyLinkSegment segment);
    public virtual string Translate(ValueSegment segment);
    public virtual string Translate(BatchSegment segment);
    public virtual string Translate(BatchReferenceSegment segment);
    public virtual string Translate(MetadataSegment segment);
    public virtual string Translate(PathTemplateSegment segment);
}
public abstract class Microsoft.OData.UriParser.PathSegmentToken : object {
    [CompilerGeneratedAttribute]
private PathSegmentToken <NextToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStructuralProperty>k__BackingField;
    public PathSegmentToken NextToken { get; internal set; }
    public string Identifier { get; }
    public bool IsStructuralProperty { get; public set; }
    protected PathSegmentToken(PathSegmentToken nextToken);
    [CompilerGeneratedAttribute]
public PathSegmentToken get_NextToken();
    [CompilerGeneratedAttribute]
internal void set_NextToken(PathSegmentToken value);
    public abstract virtual string get_Identifier();
    [CompilerGeneratedAttribute]
public bool get_IsStructuralProperty();
    [CompilerGeneratedAttribute]
public void set_IsStructuralProperty(bool value);
    public abstract virtual bool IsNamespaceOrContainerQualified();
    public abstract virtual T Accept(IPathSegmentTokenVisitor`1<T> visitor);
    public abstract virtual void Accept(IPathSegmentTokenVisitor visitor);
}
internal class Microsoft.OData.UriParser.PathSegmentTokenEqualityComparer : EqualityComparer`1<PathSegmentToken> {
    public virtual bool Equals(PathSegmentToken first, PathSegmentToken second);
    public virtual int GetHashCode(PathSegmentToken path);
    private string ToHashableString(PathSegmentToken token);
}
internal abstract class Microsoft.OData.UriParser.PathSegmentTokenVisitor : object {
    public virtual void Visit(SystemToken tokenIn);
    public virtual void Visit(NonSystemToken tokenIn);
}
internal abstract class Microsoft.OData.UriParser.PathSegmentTokenVisitor`1 : object {
    public virtual T Visit(SystemToken tokenIn);
    public virtual T Visit(NonSystemToken tokenIn);
}
internal class Microsoft.OData.UriParser.PathSegmentToResourcePathTranslator : PathSegmentTranslator`1<string> {
    private KeySerializer KeySerializer;
    public PathSegmentToResourcePathTranslator(ODataUrlKeyDelimiter odataUrlKeyDelimiter);
    public virtual string Translate(TypeSegment segment);
    public virtual string Translate(NavigationPropertySegment segment);
    public virtual string Translate(EntitySetSegment segment);
    public virtual string Translate(SingletonSegment segment);
    public virtual string Translate(KeySegment segment);
    public virtual string Translate(PropertySegment segment);
    public virtual string Translate(AnnotationSegment segment);
    public virtual string Translate(OperationSegment segment);
    public virtual string Translate(OperationImportSegment segment);
    public virtual string Translate(DynamicPathSegment segment);
    public virtual string Translate(CountSegment segment);
    public virtual string Translate(FilterSegment segment);
    public virtual string Translate(ReferenceSegment segment);
    public virtual string Translate(EachSegment segment);
    public virtual string Translate(NavigationPropertyLinkSegment segment);
    public virtual string Translate(ValueSegment segment);
    public virtual string Translate(BatchSegment segment);
    public virtual string Translate(BatchReferenceSegment segment);
    public virtual string Translate(MetadataSegment segment);
    public virtual string Translate(PathTemplateSegment segment);
}
internal class Microsoft.OData.UriParser.PathSegmentToStringTranslator : PathSegmentTranslator`1<string> {
    internal static PathSegmentToStringTranslator Instance;
    private static PathSegmentToStringTranslator();
    public virtual string Translate(TypeSegment segment);
    public virtual string Translate(NavigationPropertySegment segment);
    public virtual string Translate(PropertySegment segment);
    public virtual string Translate(AnnotationSegment segment);
    public virtual string Translate(OperationSegment segment);
    public virtual string Translate(OperationImportSegment segment);
    public virtual string Translate(DynamicPathSegment segment);
    public virtual string Translate(FilterSegment segment);
    public virtual string Translate(ReferenceSegment segment);
    public virtual string Translate(EachSegment segment);
    public virtual string Translate(PathTemplateSegment segment);
}
public abstract class Microsoft.OData.UriParser.PathSegmentTranslator`1 : object {
    public virtual T Translate(TypeSegment segment);
    public virtual T Translate(NavigationPropertySegment segment);
    public virtual T Translate(EntitySetSegment segment);
    public virtual T Translate(SingletonSegment segment);
    public virtual T Translate(KeySegment segment);
    public virtual T Translate(PropertySegment segment);
    public virtual T Translate(AnnotationSegment segment);
    public virtual T Translate(OperationImportSegment segment);
    public virtual T Translate(OperationSegment segment);
    public virtual T Translate(DynamicPathSegment segment);
    public virtual T Translate(CountSegment segment);
    public virtual T Translate(FilterSegment segment);
    public virtual T Translate(ReferenceSegment segment);
    public virtual T Translate(EachSegment segment);
    public virtual T Translate(NavigationPropertyLinkSegment segment);
    public virtual T Translate(ValueSegment segment);
    public virtual T Translate(BatchSegment segment);
    public virtual T Translate(BatchReferenceSegment segment);
    public virtual T Translate(MetadataSegment segment);
    public virtual T Translate(PathTemplateSegment segment);
}
public class Microsoft.OData.UriParser.PathSelectItem : SelectItem {
    [CompilerGeneratedAttribute]
private ODataSelectPath <SelectedPath>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmNavigationSource <NavigationSource>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectExpandClause <SelectAndExpand>k__BackingField;
    [CompilerGeneratedAttribute]
private FilterClause <FilterOption>k__BackingField;
    [CompilerGeneratedAttribute]
private OrderByClause <OrderByOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TopOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SkipOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CountOption>k__BackingField;
    [CompilerGeneratedAttribute]
private SearchClause <SearchOption>k__BackingField;
    [CompilerGeneratedAttribute]
private ComputeClause <ComputeOption>k__BackingField;
    public ODataSelectPath SelectedPath { get; private set; }
    public IEdmNavigationSource NavigationSource { get; internal set; }
    public SelectExpandClause SelectAndExpand { get; internal set; }
    public FilterClause FilterOption { get; internal set; }
    public OrderByClause OrderByOption { get; internal set; }
    public Nullable`1<long> TopOption { get; internal set; }
    public Nullable`1<long> SkipOption { get; internal set; }
    public Nullable`1<bool> CountOption { get; internal set; }
    public SearchClause SearchOption { get; internal set; }
    public ComputeClause ComputeOption { get; internal set; }
    public bool HasOptions { get; }
    public PathSelectItem(ODataSelectPath selectedPath);
    public PathSelectItem(ODataSelectPath selectedPath, IEdmNavigationSource navigationSource, SelectExpandClause selectAndExpand, FilterClause filterOption, OrderByClause orderByOption, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countOption, SearchClause searchOption, ComputeClause computeOption);
    [CompilerGeneratedAttribute]
public ODataSelectPath get_SelectedPath();
    [CompilerGeneratedAttribute]
private void set_SelectedPath(ODataSelectPath value);
    [CompilerGeneratedAttribute]
public IEdmNavigationSource get_NavigationSource();
    [CompilerGeneratedAttribute]
internal void set_NavigationSource(IEdmNavigationSource value);
    [CompilerGeneratedAttribute]
public SelectExpandClause get_SelectAndExpand();
    [CompilerGeneratedAttribute]
internal void set_SelectAndExpand(SelectExpandClause value);
    [CompilerGeneratedAttribute]
public FilterClause get_FilterOption();
    [CompilerGeneratedAttribute]
internal void set_FilterOption(FilterClause value);
    [CompilerGeneratedAttribute]
public OrderByClause get_OrderByOption();
    [CompilerGeneratedAttribute]
internal void set_OrderByOption(OrderByClause value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TopOption();
    [CompilerGeneratedAttribute]
internal void set_TopOption(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SkipOption();
    [CompilerGeneratedAttribute]
internal void set_SkipOption(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CountOption();
    [CompilerGeneratedAttribute]
internal void set_CountOption(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public SearchClause get_SearchOption();
    [CompilerGeneratedAttribute]
internal void set_SearchOption(SearchClause value);
    [CompilerGeneratedAttribute]
public ComputeClause get_ComputeOption();
    [CompilerGeneratedAttribute]
internal void set_ComputeOption(ComputeClause value);
    public bool get_HasOptions();
    public virtual T TranslateWith(SelectItemTranslator`1<T> translator);
    public virtual void HandleWith(SelectItemHandler handler);
}
public class Microsoft.OData.UriParser.PathTemplateSegment : ODataPathSegment {
    [CompilerGeneratedAttribute]
private string <LiteralText>k__BackingField;
    public string LiteralText { get; private set; }
    public IEdmType EdmType { get; }
    public PathTemplateSegment(string literalText);
    [CompilerGeneratedAttribute]
public string get_LiteralText();
    [CompilerGeneratedAttribute]
private void set_LiteralText(string value);
    public virtual IEdmType get_EdmType();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
}
public abstract class Microsoft.OData.UriParser.PathToken : QueryToken {
    public QueryToken NextToken { get; public set; }
    public string Identifier { get; }
    public abstract virtual QueryToken get_NextToken();
    public abstract virtual void set_NextToken(QueryToken value);
    public abstract virtual string get_Identifier();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private static int Combine(int h1, int h2);
}
public class Microsoft.OData.UriParser.PropertySegment : ODataPathSegment {
    private IEdmStructuralProperty property;
    public IEdmStructuralProperty Property { get; }
    public IEdmType EdmType { get; }
    public PropertySegment(IEdmStructuralProperty property);
    public IEdmStructuralProperty get_Property();
    public virtual IEdmType get_EdmType();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public abstract class Microsoft.OData.UriParser.QueryNode : object {
    public QueryNodeKind Kind { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public abstract virtual QueryNodeKind get_Kind();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
[SuppressMessageAttribute("Microsoft.Design", "CA1027:MarkEnumsWithFlags")]
public enum Microsoft.OData.UriParser.QueryNodeKind : Enum {
    public int value__;
    public static QueryNodeKind None;
    public static QueryNodeKind Constant;
    public static QueryNodeKind Convert;
    public static QueryNodeKind NonResourceRangeVariableReference;
    public static QueryNodeKind BinaryOperator;
    public static QueryNodeKind UnaryOperator;
    public static QueryNodeKind SingleValuePropertyAccess;
    public static QueryNodeKind CollectionPropertyAccess;
    public static QueryNodeKind SingleValueFunctionCall;
    public static QueryNodeKind Any;
    public static QueryNodeKind CollectionNavigationNode;
    public static QueryNodeKind SingleNavigationNode;
    public static QueryNodeKind SingleValueOpenPropertyAccess;
    public static QueryNodeKind SingleResourceCast;
    public static QueryNodeKind All;
    public static QueryNodeKind CollectionResourceCast;
    public static QueryNodeKind ResourceRangeVariableReference;
    public static QueryNodeKind SingleResourceFunctionCall;
    public static QueryNodeKind CollectionFunctionCall;
    public static QueryNodeKind CollectionResourceFunctionCall;
    public static QueryNodeKind NamedFunctionParameter;
    public static QueryNodeKind ParameterAlias;
    public static QueryNodeKind EntitySet;
    public static QueryNodeKind KeyLookup;
    public static QueryNodeKind SearchTerm;
    public static QueryNodeKind CollectionOpenPropertyAccess;
    public static QueryNodeKind CollectionComplexNode;
    public static QueryNodeKind SingleComplexNode;
    public static QueryNodeKind Count;
    public static QueryNodeKind SingleValueCast;
    public static QueryNodeKind CollectionPropertyNode;
    public static QueryNodeKind AggregatedCollectionPropertyNode;
    public static QueryNodeKind In;
    public static QueryNodeKind CollectionConstant;
}
internal static class Microsoft.OData.UriParser.QueryNodeUtils : object {
    private static Dictionary`2<Tuple`3<BinaryOperatorKind, EdmPrimitiveTypeKind, EdmPrimitiveTypeKind>, EdmPrimitiveTypeKind> additionalMap;
    private static QueryNodeUtils();
    internal static IEdmPrimitiveTypeReference GetBinaryOperatorResultType(IEdmPrimitiveTypeReference left, IEdmPrimitiveTypeReference right, BinaryOperatorKind operatorKind);
}
public abstract class Microsoft.OData.UriParser.QueryNodeVisitor`1 : object {
    public virtual T Visit(AllNode nodeIn);
    public virtual T Visit(AnyNode nodeIn);
    public virtual T Visit(BinaryOperatorNode nodeIn);
    public virtual T Visit(CountNode nodeIn);
    public virtual T Visit(CollectionNavigationNode nodeIn);
    public virtual T Visit(CollectionPropertyAccessNode nodeIn);
    public virtual T Visit(CollectionOpenPropertyAccessNode nodeIn);
    public virtual T Visit(ConstantNode nodeIn);
    public virtual T Visit(CollectionConstantNode nodeIn);
    public virtual T Visit(ConvertNode nodeIn);
    public virtual T Visit(CollectionResourceCastNode nodeIn);
    public virtual T Visit(ResourceRangeVariableReferenceNode nodeIn);
    public virtual T Visit(NonResourceRangeVariableReferenceNode nodeIn);
    public virtual T Visit(SingleResourceCastNode nodeIn);
    public virtual T Visit(SingleNavigationNode nodeIn);
    public virtual T Visit(SingleResourceFunctionCallNode nodeIn);
    public virtual T Visit(SingleValueFunctionCallNode nodeIn);
    public virtual T Visit(CollectionResourceFunctionCallNode nodeIn);
    public virtual T Visit(CollectionFunctionCallNode nodeIn);
    public virtual T Visit(SingleValueOpenPropertyAccessNode nodeIn);
    public virtual T Visit(SingleValuePropertyAccessNode nodeIn);
    public virtual T Visit(UnaryOperatorNode nodeIn);
    public virtual T Visit(NamedFunctionParameterNode nodeIn);
    public virtual T Visit(ParameterAliasNode nodeIn);
    public virtual T Visit(SearchTermNode nodeIn);
    public virtual T Visit(SingleComplexNode nodeIn);
    public virtual T Visit(CollectionComplexNode nodeIn);
    public virtual T Visit(SingleValueCastNode nodeIn);
    public virtual T Visit(AggregatedCollectionPropertyNode nodeIn);
    public virtual T Visit(InNode nodeIn);
}
[ExtensionAttribute]
internal static class Microsoft.OData.UriParser.QueryOptionUtils : object {
    [ExtensionAttribute]
internal static Dictionary`2<string, string> GetParameterAliases(List`1<CustomQueryOptionToken> queryOptions);
    [ExtensionAttribute]
internal static string GetQueryOptionValue(List`1<CustomQueryOptionToken> queryOptions, string queryOptionName);
    [ExtensionAttribute]
internal static string GetQueryOptionValueAndRemove(List`1<CustomQueryOptionToken> queryOptions, string queryOptionName);
    internal static List`1<CustomQueryOptionToken> ParseQueryOptions(Uri uri);
}
public abstract class Microsoft.OData.UriParser.QueryToken : object {
    [SuppressMessageAttribute("Microsoft.Security", "CA2105:ArrayFieldsShouldNotBeReadOnly")]
[SuppressMessageAttribute("Performance", "CA1825:Avoid zero-length array allocations.")]
public static QueryToken[] EmptyTokens;
    public QueryTokenKind Kind { get; }
    private static QueryToken();
    public abstract virtual QueryTokenKind get_Kind();
    public abstract virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
[SuppressMessageAttribute("Microsoft.Design", "CA1008:EnumsShouldHaveZeroValue")]
public enum Microsoft.OData.UriParser.QueryTokenKind : Enum {
    public int value__;
    public static QueryTokenKind BinaryOperator;
    public static QueryTokenKind UnaryOperator;
    public static QueryTokenKind Literal;
    public static QueryTokenKind FunctionCall;
    public static QueryTokenKind EndPath;
    public static QueryTokenKind OrderBy;
    public static QueryTokenKind CustomQueryOption;
    public static QueryTokenKind Select;
    public static QueryTokenKind Star;
    public static QueryTokenKind Expand;
    public static QueryTokenKind TypeSegment;
    public static QueryTokenKind Any;
    public static QueryTokenKind InnerPath;
    public static QueryTokenKind DottedIdentifier;
    public static QueryTokenKind RangeVariable;
    public static QueryTokenKind All;
    public static QueryTokenKind ExpandTerm;
    public static QueryTokenKind FunctionParameter;
    public static QueryTokenKind FunctionParameterAlias;
    public static QueryTokenKind StringLiteral;
    public static QueryTokenKind Aggregate;
    public static QueryTokenKind AggregateExpression;
    public static QueryTokenKind AggregateGroupBy;
    public static QueryTokenKind Compute;
    public static QueryTokenKind ComputeExpression;
    public static QueryTokenKind EntitySetAggregateExpression;
    public static QueryTokenKind In;
    public static QueryTokenKind SelectTerm;
    public static QueryTokenKind CountSegment;
}
public abstract class Microsoft.OData.UriParser.RangeVariable : object {
    public string Name { get; }
    public IEdmTypeReference TypeReference { get; }
    public int Kind { get; }
    public abstract virtual string get_Name();
    public abstract virtual IEdmTypeReference get_TypeReference();
    public abstract virtual int get_Kind();
}
internal class Microsoft.OData.UriParser.RangeVariableBinder : object {
    internal static SingleValueNode BindRangeVariableToken(RangeVariableToken rangeVariableToken, BindingState state);
}
public static class Microsoft.OData.UriParser.RangeVariableKind : object {
    public static int Resource;
    public static int NonResource;
}
public class Microsoft.OData.UriParser.RangeVariableToken : QueryToken {
    private string name;
    public QueryTokenKind Kind { get; }
    public string Name { get; }
    public RangeVariableToken(string name);
    public virtual QueryTokenKind get_Kind();
    public string get_Name();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal class Microsoft.OData.UriParser.ReadOnlyEnumerableForUriParser`1 : object {
    private IEnumerable`1<T> sourceEnumerable;
    internal ReadOnlyEnumerableForUriParser`1(IEnumerable`1<T> sourceEnumerable);
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Microsoft.OData.UriParser.ReferenceSegment : ODataPathSegment {
    public IEdmType EdmType { get; }
    public ReferenceSegment(IEdmNavigationSource navigationSource);
    public virtual IEdmType get_EdmType();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
internal enum Microsoft.OData.UriParser.RequestTargetKind : Enum {
    public int value__;
    public static RequestTargetKind Nothing;
    public static RequestTargetKind ServiceDirectory;
    public static RequestTargetKind Resource;
    public static RequestTargetKind Primitive;
    public static RequestTargetKind PrimitiveValue;
    public static RequestTargetKind Enum;
    public static RequestTargetKind EnumValue;
    public static RequestTargetKind Metadata;
    public static RequestTargetKind VoidOperation;
    public static RequestTargetKind Batch;
    public static RequestTargetKind Dynamic;
    public static RequestTargetKind DynamicValue;
    public static RequestTargetKind MediaResource;
    public static RequestTargetKind Collection;
}
public class Microsoft.OData.UriParser.ResourceRangeVariable : RangeVariable {
    private string name;
    private CollectionResourceNode collectionResourceNode;
    private IEdmNavigationSource navigationSource;
    private IEdmStructuredTypeReference structuredTypeReference;
    public string Name { get; }
    public CollectionResourceNode CollectionResourceNode { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmStructuredTypeReference StructuredTypeReference { get; }
    public int Kind { get; }
    public ResourceRangeVariable(string name, IEdmStructuredTypeReference structuredType, CollectionResourceNode collectionResourceNode);
    public ResourceRangeVariable(string name, IEdmStructuredTypeReference structuredType, IEdmNavigationSource navigationSource);
    public virtual string get_Name();
    public CollectionResourceNode get_CollectionResourceNode();
    public IEdmNavigationSource get_NavigationSource();
    public virtual IEdmTypeReference get_TypeReference();
    public IEdmStructuredTypeReference get_StructuredTypeReference();
    public virtual int get_Kind();
}
public class Microsoft.OData.UriParser.ResourceRangeVariableReferenceNode : SingleResourceNode {
    private string name;
    private IEdmStructuredTypeReference structuredTypeReference;
    private ResourceRangeVariable rangeVariable;
    private IEdmNavigationSource navigationSource;
    public string Name { get; }
    public IEdmTypeReference TypeReference { get; }
    public ResourceRangeVariable RangeVariable { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmStructuredTypeReference StructuredTypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public ResourceRangeVariableReferenceNode(string name, ResourceRangeVariable rangeVariable);
    public string get_Name();
    public virtual IEdmTypeReference get_TypeReference();
    public ResourceRangeVariable get_RangeVariable();
    public virtual IEdmNavigationSource get_NavigationSource();
    public virtual IEdmStructuredTypeReference get_StructuredTypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
internal class Microsoft.OData.UriParser.SearchBinder : object {
    private QueryTokenVisitor bindMethod;
    internal SearchBinder(QueryTokenVisitor bindMethod);
    internal SearchClause BindSearch(QueryToken search);
}
public class Microsoft.OData.UriParser.SearchClause : object {
    private SingleValueNode expression;
    public SingleValueNode Expression { get; }
    public SearchClause(SingleValueNode expression);
    public SingleValueNode get_Expression();
}
[DebuggerDisplayAttribute("SearchLexer ({text} @ {textPos} [{token}])")]
internal class Microsoft.OData.UriParser.SearchLexer : ExpressionLexer {
    internal static Regex InvalidWordPattern;
    private static char EscapeChar;
    private static string EscapeSequenceSet;
    private static HashSet`1<string> KeyWords;
    private bool isEscape;
    internal SearchLexer(string expression);
    private static SearchLexer();
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
protected virtual ExpressionToken NextTokenImplementation(Exception& error);
    private static bool IsValidSearchTermChar(char val);
    private void NextCharWithEscape();
    private void AdvanceToNextOccurenceOfWithEscape(char endingValue);
}
internal class Microsoft.OData.UriParser.SearchParser : object {
    private int maxDepth;
    private int recursionDepth;
    private ExpressionLexer lexer;
    internal SearchParser(int maxDepth);
    internal QueryToken ParseSearch(string expressionText);
    private static Exception ParseError(string message);
    private QueryToken ParseExpression();
    private QueryToken ParseLogicalOr();
    private QueryToken ParseLogicalAnd();
    private QueryToken ParseUnary();
    private QueryToken ParsePrimary();
    private QueryToken ParseParenExpression();
    private bool TokenIdentifierIs(string id);
    private void RecurseEnter();
    private void RecurseLeave();
}
public class Microsoft.OData.UriParser.SearchTermNode : SingleValueNode {
    private static IEdmTypeReference BoolTypeReference;
    private string text;
    public string Text { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SearchTermNode(string text);
    private static SearchTermNode();
    public string get_Text();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
internal class Microsoft.OData.UriParser.SegmentArgumentParser : object {
    private static SegmentArgumentParser Empty;
    private bool keysAsSegment;
    private bool enableUriTemplateParsing;
    private Dictionary`2<string, string> namedValues;
    private List`1<string> positionalValues;
    public bool AreValuesNamed { get; }
    public bool IsEmpty { get; }
    public IDictionary`2<string, string> NamedValues { get; }
    public IList`1<string> PositionalValues { get; }
    public bool KeyAsSegment { get; }
    public int ValueCount { get; }
    private SegmentArgumentParser(Dictionary`2<string, string> namedValues, List`1<string> positionalValues, bool keysAsSegment, bool enableUriTemplateParsing);
    private static SegmentArgumentParser();
    public bool get_AreValuesNamed();
    public bool get_IsEmpty();
    public IDictionary`2<string, string> get_NamedValues();
    public IList`1<string> get_PositionalValues();
    public bool get_KeyAsSegment();
    public int get_ValueCount();
    public void AddNamedValue(string key, string value);
    public static bool TryParseKeysFromUri(string text, SegmentArgumentParser& instance, bool enableUriTemplateParsing);
    public static SegmentArgumentParser FromSegment(string segmentText, bool enableUriTemplateParsing);
    public static bool TryParseNullableTokens(string text, SegmentArgumentParser& instance);
    public bool TryConvertValues(IEdmEntityType targetEntityType, IEnumerable`1& keyPairs, ODataUriResolver resolver);
    private object ConvertValueWrapper(IEdmTypeReference typeReference, string valueText);
    private bool TryConvertValue(IEdmTypeReference typeReference, string valueText, Object& convertedValue);
    private static bool TryParseFromUri(string text, SegmentArgumentParser& instance, bool enableUriTemplateParsing);
    private static void CreateIfNull(T& value);
}
internal static class Microsoft.OData.UriParser.SegmentKeyHandler : object {
    internal static bool TryCreateKeySegmentFromParentheses(ODataPathSegment previous, KeySegment previousKeySegment, string parenthesisExpression, ODataUriResolver resolver, ODataPathSegment& keySegment, bool enableUriTemplateParsing);
    internal static bool TryHandleSegmentAsKey(string segmentText, ODataPathSegment previous, KeySegment previousKeySegment, ODataUrlKeyDelimiter odataUrlKeyDelimiter, ODataUriResolver resolver, KeySegment& keySegment, bool enableUriTemplateParsing);
    private static bool IsSystemSegment(string segmentText);
    private static KeySegment CreateKeySegment(ODataPathSegment segment, KeySegment previousKeySegment, SegmentArgumentParser key, ODataUriResolver resolver);
}
internal class Microsoft.OData.UriParser.SelectExpandBinder : object {
    private ODataUriParserConfiguration configuration;
    private IEdmNavigationSource navigationSource;
    private IEdmNavigationSource resourcePathNavigationSource;
    private IEdmStructuredType edmType;
    private List`1<ODataPathSegment> parsedSegments;
    private BindingState state;
    public IEdmModel Model { get; }
    public IEdmStructuredType EdmType { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmNavigationSource ResourcePathNavigationSource { get; }
    private ODataUriParserSettings Settings { get; }
    private ODataUriParserConfiguration Configuration { get; }
    public SelectExpandBinder(ODataUriParserConfiguration configuration, ODataPathInfo odataPathInfo, BindingState state);
    public IEdmModel get_Model();
    public IEdmStructuredType get_EdmType();
    public IEdmNavigationSource get_NavigationSource();
    public IEdmNavigationSource get_ResourcePathNavigationSource();
    private ODataUriParserSettings get_Settings();
    private ODataUriParserConfiguration get_Configuration();
    public SelectExpandClause Bind(ExpandToken expandToken, SelectToken selectToken);
    internal static string ToPathString(PathSegmentToken head);
    private static bool OverLaps(PathSelectItem firstPath, PathSelectItem secondPath);
    private SelectItem GenerateSelectItem(SelectTermToken tokenIn);
    private SelectItem GenerateExpandItem(ExpandTermToken tokenIn);
    private ApplyClause BindApply(IEnumerable`1<QueryToken> applyToken, IEdmNavigationSource resourcePathNavigationSource, IEdmNavigationSource targetNavigationSource, IEdmTypeReference elementType);
    private ComputeClause BindCompute(ComputeToken computeToken, IEdmNavigationSource resourcePathNavigationSource, IEdmNavigationSource targetNavigationSource, IEdmTypeReference elementType);
    private FilterClause BindFilter(QueryToken filterToken, IEdmNavigationSource resourcePathNavigationSource, IEdmNavigationSource targetNavigationSource, IEdmTypeReference elementType, HashSet`1<EndPathToken> generatedProperties, bool collapsed);
    private OrderByClause BindOrderby(IEnumerable`1<OrderByToken> orderByToken, IEdmNavigationSource resourcePathNavigationSource, IEdmNavigationSource targetNavigationSource, IEdmTypeReference elementType, HashSet`1<EndPathToken> generatedProperties, bool collapsed);
    private SearchClause BindSearch(QueryToken searchToken, IEdmNavigationSource resourcePathNavigationSource, IEdmNavigationSource targetNavigationSource, IEdmTypeReference elementType);
    private SelectExpandClause BindSelectExpand(ExpandToken expandToken, SelectToken selectToken, IList`1<ODataPathSegment> segments, IEdmNavigationSource resourcePathNavigationSource, IEdmNavigationSource targetNavigationSource, IEdmTypeReference elementType, HashSet`1<EndPathToken> generatedProperties, bool collapsed);
    private bool ProcessWildcardTokenPath(SelectTermToken selectToken, SelectItem& newSelectItem);
    private List`1<ODataPathSegment> ProcessSelectTokenPath(PathSegmentToken tokenIn);
    private static HashSet`1<EndPathToken> GetGeneratedProperties(ComputeClause computeOption, ApplyClause applyOption);
    private IEdmNavigationProperty ParseComplexTypesBeforeNavigation(IEdmStructuralProperty edmProperty, PathSegmentToken& currentToken, List`1<ODataPathSegment> pathSoFar);
    private static LevelsClause ParseLevels(Nullable`1<long> levelsOption, IEdmType sourceType, IEdmNavigationProperty property);
    private static MetadataBinder BuildNewMetadataBinder(ODataUriParserConfiguration config, IEdmNavigationSource resourcePathNavigationSource, IEdmNavigationSource targetNavigationSource, IEdmTypeReference elementType, HashSet`1<EndPathToken> generatedProperties, bool collapsed);
    private static BindingState CreateBindingState(ODataUriParserConfiguration config, IEdmNavigationSource resourcePathNavigationSource, IEdmNavigationSource targetNavigationSource, IEdmTypeReference elementType, HashSet`1<EndPathToken> generatedProperties, bool collapsed);
    private static void VerifySelectedPath(SelectTermToken selectedToken);
    private static bool VerifySelectedNavigationProperty(IList`1<ODataPathSegment> selectedPath, SelectTermToken tokenIn);
    private static void VerifyNoQueryOptionsNested(SelectTermToken selectToken, string identifier);
    private static void AddToSelectedItems(SelectItem itemToAdd, List`1<SelectItem> selectItems);
    private static bool IsStructuralOrNavigationPropertySelectionItem(SelectItem selectItem);
    private static bool IsStructuralSelectionItem(SelectItem selectItem);
}
public class Microsoft.OData.UriParser.SelectExpandClause : object {
    private IList`1<SelectItem> selectedItems;
    private Nullable`1<bool> allSelected;
    public IEnumerable`1<SelectItem> SelectedItems { get; }
    public bool AllSelected { get; }
    public SelectExpandClause(IEnumerable`1<SelectItem> selectedItems, bool allSelected);
    public IEnumerable`1<SelectItem> get_SelectedItems();
    public bool get_AllSelected();
    internal void AddToSelectedItems(SelectItem itemToAdd, bool getOnlySubset);
    internal void SetAllSelected(bool newValue);
    private static bool IsStructuralOrNavigationPropertySelectionItem(SelectItem selectItem);
    private static bool IsStructuralSelectionItem(SelectItem selectItem);
}
[ExtensionAttribute]
internal static class Microsoft.OData.UriParser.SelectExpandClauseExtensions : object {
    [ExtensionAttribute]
internal static void GetSubSelectExpandClause(SelectExpandClause clause, string propertyName, SelectExpandClause& subSelectExpand, TypeSegment& typeSegment);
    [ExtensionAttribute]
internal static void GetSelectExpandPaths(SelectExpandClause selectExpandClause, ODataVersion version, String& selectClause, String& expandClause);
    [ExtensionAttribute]
internal static void GetSelectExpandPaths(SelectExpandClause selectExpandClause, ODataVersion version, StringBuilder& selectClause, StringBuilder& expandClause);
    [ExtensionAttribute]
internal static List`1<string> GetCurrentLevelSelectList(SelectExpandClause selectExpandClause);
    [ExtensionAttribute]
internal static void Traverse(SelectExpandClause selectExpandClause, Func`3<string, T, T> processSubResult, Func`3<IList`1<string>, IList`1<T>, T> combineSelectAndExpand, Func`2<ApplyClause, T> processApply, T& result);
    private static string GetPreviousSegments(string item);
    private static string BuildTopLevelSelect(SelectExpandClause selectExpandClause);
    private static IList`1<string> GetSelectStringFromPathSelectItem(PathSelectItem pathSelectItem);
    private static string BuildExpandsForNode(SelectExpandClause selectExpandClause);
    private static string ProcessSubExpand(string expandNode, string subExpand);
    private static string CombineSelectAndExpandResult(IList`1<string> selectList, IList`1<string> expandList);
}
internal class Microsoft.OData.UriParser.SelectExpandClauseFinisher : object {
    public static void AddExplicitNavPropLinksWhereNecessary(SelectExpandClause clause);
}
internal class Microsoft.OData.UriParser.SelectExpandOptionParser : object {
    private ODataUriResolver resolver;
    private IEdmStructuredType parentStructuredType;
    private int maxRecursionDepth;
    private bool enableNoDollarQueryOptions;
    private bool enableCaseInsensitiveBuiltinIdentifier;
    private ExpressionLexer lexer;
    [CompilerGeneratedAttribute]
private int <MaxFilterDepth>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxOrderByDepth>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxSearchDepth>k__BackingField;
    internal int MaxFilterDepth { get; internal set; }
    internal int MaxOrderByDepth { get; internal set; }
    internal int MaxSearchDepth { get; internal set; }
    internal SelectExpandOptionParser(int maxRecursionDepth, bool enableCaseInsensitiveBuiltinIdentifier, bool enableNoDollarQueryOptions);
    internal SelectExpandOptionParser(ODataUriResolver resolver, IEdmStructuredType parentStructuredType, int maxRecursionDepth, bool enableCaseInsensitiveBuiltinIdentifier, bool enableNoDollarQueryOptions);
    [CompilerGeneratedAttribute]
internal int get_MaxFilterDepth();
    [CompilerGeneratedAttribute]
internal void set_MaxFilterDepth(int value);
    [CompilerGeneratedAttribute]
internal int get_MaxOrderByDepth();
    [CompilerGeneratedAttribute]
internal void set_MaxOrderByDepth(int value);
    [CompilerGeneratedAttribute]
internal int get_MaxSearchDepth();
    [CompilerGeneratedAttribute]
internal void set_MaxSearchDepth(int value);
    internal SelectTermToken BuildSelectTermToken(PathSegmentToken pathToken, string optionsText);
    internal List`1<ExpandTermToken> BuildExpandTermToken(PathSegmentToken pathToken, string optionsText);
    private List`1<ExpandTermToken> BuildStarExpandTermToken(PathSegmentToken pathToken);
    private QueryToken ParseInnerFilter();
    private IEnumerable`1<OrderByToken> ParseInnerOrderBy();
    private Nullable`1<long> ParseInnerTop();
    private Nullable`1<long> ParseInnerSkip();
    private Nullable`1<bool> ParseInnerCount();
    private QueryToken ParseInnerSearch();
    private SelectToken ParseInnerSelect(PathSegmentToken pathToken);
    private ExpandToken ParseInnerExpand(PathSegmentToken pathToken);
    private Nullable`1<long> ParseInnerLevel();
    private ComputeToken ParseInnerCompute();
    private IEnumerable`1<QueryToken> ParseInnerApply();
}
internal class Microsoft.OData.UriParser.SelectExpandParser : object {
    private ODataUriResolver resolver;
    private IEdmStructuredType parentStructuredType;
    private int maxRecursiveDepth;
    private bool enableNoDollarQueryOptions;
    private bool enableCaseInsensitiveBuiltinIdentifier;
    private SelectExpandOptionParser selectExpandOptionParser;
    private ExpressionLexer lexer;
    private bool isSelect;
    [CompilerGeneratedAttribute]
private int <MaxPathDepth>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxFilterDepth>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxOrderByDepth>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxSearchDepth>k__BackingField;
    internal SelectExpandOptionParser SelectExpandOptionParser { get; }
    internal int MaxPathDepth { get; internal set; }
    internal int MaxFilterDepth { get; internal set; }
    internal int MaxOrderByDepth { get; internal set; }
    internal int MaxSearchDepth { get; internal set; }
    public SelectExpandParser(string clauseToParse, int maxRecursiveDepth, bool enableCaseInsensitiveBuiltinIdentifier, bool enableNoDollarQueryOptions);
    public SelectExpandParser(ODataUriResolver resolver, string clauseToParse, IEdmStructuredType parentStructuredType, int maxRecursiveDepth, bool enableCaseInsensitiveBuiltinIdentifier, bool enableNoDollarQueryOptions);
    internal SelectExpandOptionParser get_SelectExpandOptionParser();
    [CompilerGeneratedAttribute]
internal int get_MaxPathDepth();
    [CompilerGeneratedAttribute]
internal void set_MaxPathDepth(int value);
    [CompilerGeneratedAttribute]
internal int get_MaxFilterDepth();
    [CompilerGeneratedAttribute]
internal void set_MaxFilterDepth(int value);
    [CompilerGeneratedAttribute]
internal int get_MaxOrderByDepth();
    [CompilerGeneratedAttribute]
internal void set_MaxOrderByDepth(int value);
    [CompilerGeneratedAttribute]
internal int get_MaxSearchDepth();
    [CompilerGeneratedAttribute]
internal void set_MaxSearchDepth(int value);
    public SelectToken ParseSelect();
    public ExpandToken ParseExpand();
    private SelectTermToken ParseSingleSelectTerm();
    private List`1<ExpandTermToken> ParseSingleExpandTerm();
    private ExpandToken ParseCommaSeparatedExpandList(Func`2<IEnumerable`1<ExpandTermToken>, ExpandToken> ctor, Func`1<List`1<ExpandTermToken>> termParsingFunc);
    private SelectToken ParseCommaSeparatedSelectList(Func`2<IEnumerable`1<SelectTermToken>, SelectToken> ctor, Func`1<SelectTermToken> termParsingFunc);
}
internal static class Microsoft.OData.UriParser.SelectExpandPathBinder : object {
    public static IEnumerable`1<ODataPathSegment> FollowTypeSegments(PathSegmentToken firstTypeToken, IEdmModel model, int maxDepth, ODataUriResolver resolver, IEdmStructuredType& currentLevelType, PathSegmentToken& firstNonTypeToken);
}
internal class Microsoft.OData.UriParser.SelectExpandSemanticBinder : object {
    public static SelectExpandClause Bind(ODataPathInfo odataPathInfo, ExpandToken expandToken, SelectToken selectToken, ODataUriParserConfiguration configuration, BindingState state);
}
internal static class Microsoft.OData.UriParser.SelectExpandSyntacticParser : object {
    public static void Parse(string selectClause, string expandClause, IEdmStructuredType parentStructuredType, ODataUriParserConfiguration configuration, ExpandToken& expandTree, SelectToken& selectTree);
}
internal class Microsoft.OData.UriParser.SelectExpandTermParser : object {
    private ExpressionLexer lexer;
    private int maxPathLength;
    private bool isSelect;
    internal SelectExpandTermParser(ExpressionLexer lexer, int maxPathLength, bool isSelect);
    internal PathSegmentToken ParseTerm(bool allowRef);
    private void CheckPathLength(int pathLength);
    private PathSegmentToken ParseSegment(PathSegmentToken previousSegment, bool allowRef);
}
public abstract class Microsoft.OData.UriParser.SelectExpandTermToken : QueryToken {
    [CompilerGeneratedAttribute]
private PathSegmentToken <PathToProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryToken <FilterOption>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<OrderByToken> <OrderByOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryToken <SearchOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TopOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SkipOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CountQueryOption>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectToken <SelectOption>k__BackingField;
    [CompilerGeneratedAttribute]
private ComputeToken <ComputeOption>k__BackingField;
    public PathSegmentToken PathToProperty { get; internal set; }
    public QueryToken FilterOption { get; private set; }
    public IEnumerable`1<OrderByToken> OrderByOptions { get; private set; }
    public QueryToken SearchOption { get; private set; }
    public Nullable`1<long> TopOption { get; private set; }
    public Nullable`1<long> SkipOption { get; private set; }
    public Nullable`1<bool> CountQueryOption { get; private set; }
    public SelectToken SelectOption { get; internal set; }
    public ComputeToken ComputeOption { get; private set; }
    protected SelectExpandTermToken(PathSegmentToken pathToProperty, QueryToken filterOption, IEnumerable`1<OrderByToken> orderByOptions, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countQueryOption, QueryToken searchOption, SelectToken selectOption, ComputeToken computeOption);
    [CompilerGeneratedAttribute]
public PathSegmentToken get_PathToProperty();
    [CompilerGeneratedAttribute]
internal void set_PathToProperty(PathSegmentToken value);
    [CompilerGeneratedAttribute]
public QueryToken get_FilterOption();
    [CompilerGeneratedAttribute]
private void set_FilterOption(QueryToken value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<OrderByToken> get_OrderByOptions();
    [CompilerGeneratedAttribute]
private void set_OrderByOptions(IEnumerable`1<OrderByToken> value);
    [CompilerGeneratedAttribute]
public QueryToken get_SearchOption();
    [CompilerGeneratedAttribute]
private void set_SearchOption(QueryToken value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TopOption();
    [CompilerGeneratedAttribute]
private void set_TopOption(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SkipOption();
    [CompilerGeneratedAttribute]
private void set_SkipOption(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CountQueryOption();
    [CompilerGeneratedAttribute]
private void set_CountQueryOption(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public SelectToken get_SelectOption();
    [CompilerGeneratedAttribute]
internal void set_SelectOption(SelectToken value);
    [CompilerGeneratedAttribute]
public ComputeToken get_ComputeOption();
    [CompilerGeneratedAttribute]
private void set_ComputeOption(ComputeToken value);
}
public abstract class Microsoft.OData.UriParser.SelectItem : object {
    public abstract virtual T TranslateWith(SelectItemTranslator`1<T> translator);
    public abstract virtual void HandleWith(SelectItemHandler handler);
}
public abstract class Microsoft.OData.UriParser.SelectItemHandler : object {
    public virtual void Handle(WildcardSelectItem item);
    public virtual void Handle(PathSelectItem item);
    public virtual void Handle(NamespaceQualifiedWildcardSelectItem item);
    public virtual void Handle(ExpandedNavigationSelectItem item);
    public virtual void Handle(ExpandedReferenceSelectItem item);
}
public abstract class Microsoft.OData.UriParser.SelectItemTranslator`1 : object {
    public virtual T Translate(WildcardSelectItem item);
    public virtual T Translate(PathSelectItem item);
    public virtual T Translate(NamespaceQualifiedWildcardSelectItem item);
    public virtual T Translate(ExpandedNavigationSelectItem item);
    public virtual T Translate(ExpandedReferenceSelectItem item);
    public virtual T Translate(ExpandedCountSelectItem item);
}
internal static class Microsoft.OData.UriParser.SelectPathSegmentTokenBinder : object {
    public static ODataPathSegment ConvertNonTypeTokenToSegment(PathSegmentToken tokenIn, IEdmModel model, IEdmStructuredType edmType, ODataUriResolver resolver, BindingState state);
    public static bool TryBindAsWildcard(PathSegmentToken tokenIn, IEdmModel model, SelectItem& item);
    internal static bool TryBindAsOperation(PathSegmentToken pathToken, IEdmModel model, IEdmStructuredType entityType, ODataPathSegment& segment);
    private static bool TryBindAsDeclaredProperty(PathSegmentToken tokenIn, IEdmStructuredType edmType, ODataUriResolver resolver, ODataPathSegment& segment);
    private static bool TryBindAsDeclaredTerm(PathSegmentToken tokenIn, IEdmModel model, ODataUriResolver resolver, ODataPathSegment& segment);
}
public class Microsoft.OData.UriParser.SelectTermToken : SelectExpandTermToken {
    public QueryTokenKind Kind { get; }
    public SelectTermToken(PathSegmentToken pathToProperty);
    public SelectTermToken(PathSegmentToken pathToProperty, SelectToken selectOption);
    public SelectTermToken(PathSegmentToken pathToProperty, QueryToken filterOption, IEnumerable`1<OrderByToken> orderByOptions, Nullable`1<long> topOption, Nullable`1<long> skipOption, Nullable`1<bool> countQueryOption, QueryToken searchOption, SelectToken selectOption, ComputeToken computeOption);
    public virtual QueryTokenKind get_Kind();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.SelectToken : QueryToken {
    private IEnumerable`1<SelectTermToken> selectTerms;
    public QueryTokenKind Kind { get; }
    public IEnumerable`1<PathSegmentToken> Properties { get; }
    public IEnumerable`1<SelectTermToken> SelectTerms { get; }
    public SelectToken(IEnumerable`1<PathSegmentToken> properties);
    public SelectToken(IEnumerable`1<SelectTermToken> selectTerms);
    public virtual QueryTokenKind get_Kind();
    public IEnumerable`1<PathSegmentToken> get_Properties();
    public IEnumerable`1<SelectTermToken> get_SelectTerms();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal static class Microsoft.OData.UriParser.SelectTreeNormalizer : object {
    public static SelectToken NormalizeSelectTree(SelectToken selectToken);
    private static SelectToken NormalizeSelectPaths(SelectToken selectToken);
}
public class Microsoft.OData.UriParser.SingleComplexNode : SingleResourceNode {
    private SingleResourceNode source;
    private IEdmProperty property;
    private IEdmComplexTypeReference typeReference;
    private IEdmNavigationSource navigationSource;
    public SingleResourceNode Source { get; }
    public IEdmProperty Property { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmStructuredTypeReference StructuredTypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleComplexNode(SingleResourceNode source, IEdmProperty property);
    private SingleComplexNode(IEdmNavigationSource navigationSource, IEdmProperty property);
    public SingleResourceNode get_Source();
    public IEdmProperty get_Property();
    public virtual IEdmTypeReference get_TypeReference();
    public virtual IEdmNavigationSource get_NavigationSource();
    public virtual IEdmStructuredTypeReference get_StructuredTypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public abstract class Microsoft.OData.UriParser.SingleEntityNode : SingleResourceNode {
    public IEdmEntityTypeReference EntityTypeReference { get; }
    public abstract virtual IEdmEntityTypeReference get_EntityTypeReference();
}
public class Microsoft.OData.UriParser.SingleNavigationNode : SingleEntityNode {
    private IEdmNavigationSource navigationSource;
    private SingleResourceNode source;
    private IEdmNavigationProperty navigationProperty;
    private IEdmEntityTypeReference entityTypeReference;
    private List`1<ODataPathSegment> parsedSegments;
    private IEdmPathExpression bindingPath;
    public SingleResourceNode Source { get; }
    public IEdmNavigationProperty NavigationProperty { get; }
    public EdmMultiplicity TargetMultiplicity { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmEntityTypeReference EntityTypeReference { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmStructuredTypeReference StructuredTypeReference { get; }
    public IEdmPathExpression BindingPath { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleNavigationNode(SingleResourceNode source, IEdmNavigationProperty navigationProperty, IEdmPathExpression bindingPath);
    internal SingleNavigationNode(IEdmNavigationSource navigationSource, IEdmNavigationProperty navigationProperty, IEdmPathExpression bindingPath);
    internal SingleNavigationNode(SingleResourceNode source, IEdmNavigationProperty navigationProperty, List`1<ODataPathSegment> segments);
    private SingleNavigationNode(IEdmNavigationSource navigationSource, IEdmNavigationProperty navigationProperty, List`1<ODataPathSegment> segments);
    public SingleResourceNode get_Source();
    public IEdmNavigationProperty get_NavigationProperty();
    public EdmMultiplicity get_TargetMultiplicity();
    public virtual IEdmTypeReference get_TypeReference();
    public virtual IEdmEntityTypeReference get_EntityTypeReference();
    public virtual IEdmNavigationSource get_NavigationSource();
    public virtual IEdmStructuredTypeReference get_StructuredTypeReference();
    public IEdmPathExpression get_BindingPath();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.SingleResourceCastNode : SingleResourceNode {
    private SingleResourceNode source;
    private IEdmStructuredTypeReference structuredTypeReference;
    private IEdmNavigationSource navigationSource;
    public SingleResourceNode Source { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmStructuredTypeReference StructuredTypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleResourceCastNode(SingleResourceNode source, IEdmStructuredType structuredType);
    public SingleResourceNode get_Source();
    public virtual IEdmTypeReference get_TypeReference();
    public virtual IEdmNavigationSource get_NavigationSource();
    public virtual IEdmStructuredTypeReference get_StructuredTypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.SingleResourceFunctionCallNode : SingleResourceNode {
    private string name;
    private ReadOnlyCollection`1<IEdmFunction> functions;
    private IEnumerable`1<QueryNode> parameters;
    private IEdmStructuredTypeReference returnedStructuredTypeReference;
    private IEdmNavigationSource navigationSource;
    private QueryNode source;
    public string Name { get; }
    public IEnumerable`1<IEdmFunction> Functions { get; }
    public IEnumerable`1<QueryNode> Parameters { get; }
    public IEdmTypeReference TypeReference { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmStructuredTypeReference StructuredTypeReference { get; }
    public QueryNode Source { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleResourceFunctionCallNode(string name, IEnumerable`1<QueryNode> parameters, IEdmStructuredTypeReference returnedStructuredTypeReference, IEdmNavigationSource navigationSource);
    public SingleResourceFunctionCallNode(string name, IEnumerable`1<IEdmFunction> functions, IEnumerable`1<QueryNode> parameters, IEdmStructuredTypeReference returnedStructuredTypeReference, IEdmNavigationSource navigationSource, QueryNode source);
    public string get_Name();
    public IEnumerable`1<IEdmFunction> get_Functions();
    public IEnumerable`1<QueryNode> get_Parameters();
    public virtual IEdmTypeReference get_TypeReference();
    public virtual IEdmNavigationSource get_NavigationSource();
    public virtual IEdmStructuredTypeReference get_StructuredTypeReference();
    public QueryNode get_Source();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public abstract class Microsoft.OData.UriParser.SingleResourceNode : SingleValueNode {
    public IEdmNavigationSource NavigationSource { get; }
    public IEdmStructuredTypeReference StructuredTypeReference { get; }
    public abstract virtual IEdmNavigationSource get_NavigationSource();
    public abstract virtual IEdmStructuredTypeReference get_StructuredTypeReference();
}
public class Microsoft.OData.UriParser.SingletonSegment : ODataPathSegment {
    private IEdmSingleton singleton;
    public IEdmSingleton Singleton { get; }
    public IEdmType EdmType { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public SingletonSegment(IEdmSingleton singleton);
    public IEdmSingleton get_Singleton();
    public virtual IEdmType get_EdmType();
    public sealed virtual IEdmNavigationSource get_NavigationSource();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.OData.UriParser.SingleValueCastNode : SingleValueNode {
    private SingleValueNode source;
    private IEdmPrimitiveTypeReference primitiveTypeReference;
    public SingleValueNode Source { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleValueCastNode(SingleValueNode source, IEdmPrimitiveType primitiveType);
    public SingleValueNode get_Source();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.SingleValueFunctionCallNode : SingleValueNode {
    private string name;
    private ReadOnlyCollection`1<IEdmFunction> functions;
    private IEnumerable`1<QueryNode> parameters;
    private IEdmTypeReference returnedTypeReference;
    private QueryNode source;
    public string Name { get; }
    public IEnumerable`1<IEdmFunction> Functions { get; }
    public IEnumerable`1<QueryNode> Parameters { get; }
    public IEdmTypeReference TypeReference { get; }
    public QueryNode Source { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleValueFunctionCallNode(string name, IEnumerable`1<QueryNode> parameters, IEdmTypeReference returnedTypeReference);
    public SingleValueFunctionCallNode(string name, IEnumerable`1<IEdmFunction> functions, IEnumerable`1<QueryNode> parameters, IEdmTypeReference returnedTypeReference, QueryNode source);
    public string get_Name();
    public IEnumerable`1<IEdmFunction> get_Functions();
    public IEnumerable`1<QueryNode> get_Parameters();
    public virtual IEdmTypeReference get_TypeReference();
    public QueryNode get_Source();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public abstract class Microsoft.OData.UriParser.SingleValueNode : QueryNode {
    public IEdmTypeReference TypeReference { get; }
    public QueryNodeKind Kind { get; }
    public abstract virtual IEdmTypeReference get_TypeReference();
    public virtual QueryNodeKind get_Kind();
}
public class Microsoft.OData.UriParser.SingleValueOpenPropertyAccessNode : SingleValueNode {
    private SingleValueNode source;
    private string name;
    public SingleValueNode Source { get; }
    public string Name { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleValueOpenPropertyAccessNode(SingleValueNode source, string openPropertyName);
    public SingleValueNode get_Source();
    public string get_Name();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.SingleValuePropertyAccessNode : SingleValueNode {
    private SingleValueNode source;
    private IEdmProperty property;
    public SingleValueNode Source { get; }
    public IEdmProperty Property { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public SingleValuePropertyAccessNode(SingleValueNode source, IEdmProperty property);
    public SingleValueNode get_Source();
    public IEdmProperty get_Property();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.StarToken : PathToken {
    private QueryToken nextToken;
    public QueryTokenKind Kind { get; }
    public QueryToken NextToken { get; public set; }
    public string Identifier { get; }
    public StarToken(QueryToken nextToken);
    public virtual QueryTokenKind get_Kind();
    public virtual QueryToken get_NextToken();
    public virtual void set_NextToken(QueryToken value);
    public virtual string get_Identifier();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.StringAsEnumResolver : ODataUriResolver {
    public virtual void PromoteBinaryOperandTypes(BinaryOperatorKind binaryOperatorKind, SingleValueNode& leftNode, SingleValueNode& rightNode, IEdmTypeReference& typeReference);
    public virtual IDictionary`2<IEdmOperationParameter, SingleValueNode> ResolveOperationParameters(IEdmOperation operation, IDictionary`2<string, SingleValueNode> input);
    public virtual IEnumerable`1<KeyValuePair`2<string, object>> ResolveKeys(IEdmEntityType type, IList`1<string> positionalValues, Func`3<IEdmTypeReference, string, object> convertFunc);
    public virtual IEnumerable`1<KeyValuePair`2<string, object>> ResolveKeys(IEdmEntityType type, IDictionary`2<string, string> namedValues, Func`3<IEdmTypeReference, string, object> convertFunc);
    private static bool TryParseEnum(IEdmEnumType enumType, string value, ODataEnumValue& enumValue);
}
[DebuggerDisplayAttribute("StringLiteralToken ({text})")]
internal class Microsoft.OData.UriParser.StringLiteralToken : QueryToken {
    private string text;
    public QueryTokenKind Kind { get; }
    internal string Text { get; }
    internal StringLiteralToken(string text);
    public virtual QueryTokenKind get_Kind();
    internal string get_Text();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
internal abstract class Microsoft.OData.UriParser.SyntacticTreeVisitor`1 : object {
    public virtual T Visit(AllToken tokenIn);
    public virtual T Visit(AnyToken tokenIn);
    public virtual T Visit(BinaryOperatorToken tokenIn);
    public virtual T Visit(CountSegmentToken tokenIn);
    public virtual T Visit(InToken tokenIn);
    public virtual T Visit(DottedIdentifierToken tokenIn);
    public virtual T Visit(ExpandToken tokenIn);
    public virtual T Visit(ExpandTermToken tokenIn);
    public virtual T Visit(FunctionCallToken tokenIn);
    public virtual T Visit(LiteralToken tokenIn);
    public virtual T Visit(AggregateToken tokenIn);
    public virtual T Visit(GroupByToken tokenIn);
    public virtual T Visit(AggregateExpressionToken tokenIn);
    public virtual T Visit(EntitySetAggregateToken tokenIn);
    public virtual T Visit(LambdaToken tokenIn);
    public virtual T Visit(InnerPathToken tokenIn);
    public virtual T Visit(OrderByToken tokenIn);
    public virtual T Visit(EndPathToken tokenIn);
    public virtual T Visit(CustomQueryOptionToken tokenIn);
    public virtual T Visit(RangeVariableToken tokenIn);
    public virtual T Visit(SelectToken tokenIn);
    public virtual T Visit(SelectTermToken tokenIn);
    public virtual T Visit(StarToken tokenIn);
    public virtual T Visit(UnaryOperatorToken tokenIn);
    public virtual T Visit(FunctionParameterToken tokenIn);
    public virtual T Visit(ComputeToken tokenIn);
    public virtual T Visit(ComputeExpressionToken tokenIn);
}
public class Microsoft.OData.UriParser.SystemToken : PathSegmentToken {
    private string identifier;
    public string Identifier { get; }
    public SystemToken(string identifier, PathSegmentToken nextToken);
    public virtual string get_Identifier();
    public virtual bool IsNamespaceOrContainerQualified();
    public virtual T Accept(IPathSegmentTokenVisitor`1<T> visitor);
    public virtual void Accept(IPathSegmentTokenVisitor visitor);
}
public class Microsoft.OData.UriParser.TypeFacetsPromotionRules : object {
    public virtual Nullable`1<int> GetPromotedPrecision(Nullable`1<int> left, Nullable`1<int> right);
    public virtual Nullable`1<int> GetPromotedScale(Nullable`1<int> left, Nullable`1<int> right);
}
internal static class Microsoft.OData.UriParser.TypePromotionUtils : object {
    internal static KeyValuePair`2<string, FunctionSignatureWithReturnType> NotFoundKeyValuePair;
    private static FunctionSignature[] logicalSignatures;
    private static FunctionSignature[] notSignatures;
    private static FunctionSignature[] arithmeticSignatures;
    private static FunctionSignature[] AdditionSignatures;
    private static FunctionSignature[] SubtractionSignatures;
    private static FunctionSignature[] relationalSignatures;
    private static FunctionSignature[] negationSignatures;
    private static TypePromotionUtils();
    internal static void GetTypeFacets(IEdmTypeReference type, Nullable`1& precision, Nullable`1& scale);
    internal static bool PromoteOperandTypes(BinaryOperatorKind operatorKind, SingleValueNode leftNode, SingleValueNode rightNode, IEdmTypeReference& left, IEdmTypeReference& right, TypeFacetsPromotionRules facetsPromotionRules);
    internal static bool PromoteOperandType(UnaryOperatorKind operatorKind, IEdmTypeReference& typeReference);
    internal static KeyValuePair`2<string, FunctionSignatureWithReturnType> FindBestFunctionSignature(IList`1<KeyValuePair`2<string, FunctionSignatureWithReturnType>> nameFunctions, SingleValueNode[] argumentNodes, string functionCallToken);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
internal static bool CanConvertTo(SingleValueNode sourceNodeOrNull, IEdmTypeReference sourceReference, IEdmTypeReference targetReference);
    [IteratorStateMachineAttribute("Microsoft.OData.UriParser.TypePromotionUtils/<GetAdditionTermporalSignatures>d__14")]
private static IEnumerable`1<FunctionSignature> GetAdditionTermporalSignatures();
    [IteratorStateMachineAttribute("Microsoft.OData.UriParser.TypePromotionUtils/<GetSubtractionTermporalSignatures>d__15")]
private static IEnumerable`1<FunctionSignature> GetSubtractionTermporalSignatures();
    private static FunctionSignature[] GetFunctionSignatures(BinaryOperatorKind operatorKind);
    private static FunctionSignature[] GetFunctionSignatures(UnaryOperatorKind operatorKind);
    private static int FindBestSignature(FunctionSignature[] signatures, SingleValueNode[] argumentNodes, IEdmTypeReference[] argumentTypes, FunctionSignature& bestMatch);
    private static bool IsApplicable(FunctionSignature signature, SingleValueNode[] argumentNodes, IEdmTypeReference[] argumentTypes);
    private static bool CanPromoteNodeTo(SingleValueNode sourceNodeOrNull, IEdmTypeReference sourceType, IEdmTypeReference targetType);
    private static List`1<FunctionSignature> FindBestApplicableSignatures(List`1<FunctionSignature> signatures, IEdmTypeReference[] argumentTypes);
    private static bool MatchesArgumentTypesBetterThan(IEdmTypeReference[] argumentTypes, IEdmTypeReference[] firstCandidate, IEdmTypeReference[] secondCandidate);
    private static int CompareConversions(IEdmTypeReference source, IEdmTypeReference targetA, IEdmTypeReference targetB);
    private static bool TryHandleEqualityOperatorForEntityOrComplexTypes(IEdmTypeReference& left, IEdmTypeReference& right);
    private static bool IsSignedIntegralType(IEdmTypeReference typeReference);
    private static bool IsUnsignedIntegralType(IEdmTypeReference typeReference);
    private static bool IsDate(IEdmTypeReference typeReference);
    private static bool IsDateTimeOffset(IEdmTypeReference typeReference);
    private static bool IsDecimalType(IEdmTypeReference typeReference);
    private static bool IsDoubleOrSingle(IEdmTypeReference typeReference);
    private static NumericTypeKind GetNumericTypeKind(IEdmTypeReference typeReference);
}
public class Microsoft.OData.UriParser.TypeSegment : ODataPathSegment {
    private IEdmType edmType;
    private IEdmType expectedType;
    private IEdmNavigationSource navigationSource;
    public IEdmType EdmType { get; }
    public IEdmType ExpectedType { get; }
    public IEdmNavigationSource NavigationSource { get; }
    public TypeSegment(IEdmType actualType, IEdmNavigationSource navigationSource);
    public TypeSegment(IEdmType actualType, IEdmType expectedType, IEdmNavigationSource navigationSource);
    public virtual IEdmType get_EdmType();
    public IEdmType get_ExpectedType();
    public IEdmNavigationSource get_NavigationSource();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
internal class Microsoft.OData.UriParser.UnaryOperatorBinder : object {
    private Func`2<QueryToken, QueryNode> bindMethod;
    internal UnaryOperatorBinder(Func`2<QueryToken, QueryNode> bindMethod);
    internal QueryNode BindUnaryOperator(UnaryOperatorToken unaryOperatorToken);
    private static IEdmTypeReference PromoteOperandType(SingleValueNode operand, UnaryOperatorKind unaryOperatorKind);
    private SingleValueNode GetOperandFromToken(UnaryOperatorToken unaryOperatorToken);
}
public enum Microsoft.OData.UriParser.UnaryOperatorKind : Enum {
    public int value__;
    public static UnaryOperatorKind Negate;
    public static UnaryOperatorKind Not;
}
public class Microsoft.OData.UriParser.UnaryOperatorNode : SingleValueNode {
    private SingleValueNode operand;
    private UnaryOperatorKind operatorKind;
    private IEdmTypeReference typeReference;
    public UnaryOperatorKind OperatorKind { get; }
    public SingleValueNode Operand { get; }
    public IEdmTypeReference TypeReference { get; }
    internal InternalQueryNodeKind InternalKind { get; }
    public UnaryOperatorNode(UnaryOperatorKind operatorKind, SingleValueNode operand);
    public UnaryOperatorKind get_OperatorKind();
    public SingleValueNode get_Operand();
    public virtual IEdmTypeReference get_TypeReference();
    internal virtual InternalQueryNodeKind get_InternalKind();
    public virtual T Accept(QueryNodeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.UnaryOperatorToken : QueryToken {
    private UnaryOperatorKind operatorKind;
    private QueryToken operand;
    public QueryTokenKind Kind { get; }
    public UnaryOperatorKind OperatorKind { get; }
    public QueryToken Operand { get; }
    public UnaryOperatorToken(UnaryOperatorKind operatorKind, QueryToken operand);
    public virtual QueryTokenKind get_Kind();
    public UnaryOperatorKind get_OperatorKind();
    public QueryToken get_Operand();
    public virtual T Accept(ISyntacticTreeVisitor`1<T> visitor);
}
public class Microsoft.OData.UriParser.UnqualifiedODataUriResolver : ODataUriResolver {
    public virtual IEnumerable`1<IEdmOperation> ResolveUnboundOperations(IEdmModel model, string identifier);
    public virtual IEnumerable`1<IEdmOperation> ResolveBoundOperations(IEdmModel model, string identifier, IEdmType bindingType);
    [IteratorStateMachineAttribute("Microsoft.OData.UriParser.UnqualifiedODataUriResolver/<GetUnBoundOperationsForModel>d__2")]
private static IEnumerable`1<IEdmOperation> GetUnBoundOperationsForModel(IEdmModel model, string operationName, StringComparison strComparison);
    [IteratorStateMachineAttribute("Microsoft.OData.UriParser.UnqualifiedODataUriResolver/<GetBoundOperationsForModel>d__3")]
private static IEnumerable`1<IEdmOperation> GetBoundOperationsForModel(IEdmModel model, string operationName, IEdmType bindingType, StringComparison strComparison);
}
[ExtensionAttribute]
internal static class Microsoft.OData.UriParser.UriEdmHelpers : object {
    public static IEdmSchemaType FindTypeFromModel(IEdmModel model, string qualifiedName, ODataUriResolver resolver);
    public static IEdmEnumType FindEnumTypeFromModel(IEdmModel model, string qualifiedName);
    public static void CheckRelatedTo(IEdmType parentType, IEdmType childType);
    public static bool IsRelatedTo(IEdmType first, IEdmType second);
    public static IEdmNavigationProperty GetNavigationPropertyFromExpandPath(ODataPath path);
    public static IEdmType GetMostDerivedTypeFromPath(ODataPath path, IEdmType startingType);
    [ExtensionAttribute]
public static bool IsStructuredCollection(IEdmTypeReference type);
    [ExtensionAttribute]
public static IEdmStructuredTypeReference GetTypeReference(IEdmStructuredType structuredType);
    public static bool IsBindingTypeValid(IEdmType bindingType);
    internal static IEdmEnumType FindEnumTypeFromModel(IEdmModel model, string qualifiedName, ODataUriResolver resolver);
}
internal static class Microsoft.OData.UriParser.UriFunctionsHelper : object {
    public static string BuildFunctionSignatureListDescription(string name, IEnumerable`1<FunctionSignatureWithReturnType> signatures);
}
[DebuggerDisplayAttribute("{Message}")]
public class Microsoft.OData.UriParser.UriLiteralParsingException : ODataException {
    public UriLiteralParsingException(string message);
    public UriLiteralParsingException(string message, Exception innerException);
}
internal static class Microsoft.OData.UriParser.UriParserHelper : object {
    internal static bool IsCharHexDigit(char c);
    internal static bool TryRemovePrefix(string prefix, String& text);
    internal static bool TryRemoveQuotes(String& text);
    internal static string RemoveQuotes(string text);
    internal static bool TryRemoveLiteralSuffix(string suffix, String& text);
    internal static bool TryRemoveLiteralPrefix(string prefix, String& text);
    internal static void ValidatePrefixLiteral(string typePrefixLiteralName);
    internal static bool IsUriValueQuoted(string text);
    internal static IEdmTypeReference GetLiteralEdmTypeReference(ExpressionTokenKind tokenKind);
    internal static bool IsAnnotation(string identifier);
    internal static string ReadQueryOption(ExpressionLexer lexer);
    private static bool IsValidNumericConstant(string text);
}
public class Microsoft.OData.UriParser.UriPathParser : object {
    private int maxSegments;
    public UriPathParser(ODataUriParserSettings settings);
    public virtual ICollection`1<string> ParsePathIntoSegments(Uri fullUri, Uri serviceBaseUri);
}
[GuidAttribute("A77303D9-3A04-4829-BDDE-3B4D43E21CFC")]
internal class Microsoft.OData.UriParser.UriPrimitiveTypeParser : object {
    private static UriPrimitiveTypeParser singleInstance;
    public static UriPrimitiveTypeParser Instance { get; }
    private static UriPrimitiveTypeParser();
    public static UriPrimitiveTypeParser get_Instance();
    public sealed virtual object ParseUriStringToType(string text, IEdmTypeReference targetType, UriLiteralParsingException& parsingException);
    internal bool TryParseUriStringToType(string text, IEdmTypeReference targetType, Object& targetValue, UriLiteralParsingException& parsingException);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
private bool TryUriStringToPrimitive(string text, IEdmTypeReference targetType, Object& targetValue, UriLiteralParsingException& exception);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
private bool TryUriStringToPrimitive(string text, IEdmTypeReference targetType, Object& targetValue);
    private static bool TryUriStringToByteArray(string text, Byte[]& targetValue);
    private static bool TryUriStringToDuration(string text, TimeSpan& targetValue);
    private static bool TryUriStringToGeography(string text, Geography& targetValue, UriLiteralParsingException& parsingException);
    private static bool TryUriStringToGeometry(string text, Geometry& targetValue, UriLiteralParsingException& parsingFailureReasonException);
}
internal static class Microsoft.OData.UriParser.UriQueryConstants : object {
    internal static string MetadataSegment;
    internal static string ValueSegment;
    internal static string BatchSegment;
    internal static string RefSegment;
    internal static string CountSegment;
    internal static string FilterSegment;
    internal static string EachSegment;
    internal static string FilterQueryOption;
    internal static string ApplyQueryOption;
    internal static string AggregateTransformation;
    internal static string GroupbyTransformation;
    internal static string FilterTransformation;
    internal static string OrderByQueryOption;
    internal static string SelectQueryOption;
    internal static string ExpandQueryOption;
    internal static string SkipQueryOption;
    internal static string SkipTokenQueryOption;
    internal static string DeltaTokenQueryOption;
    internal static string IdQueryOption;
    internal static string Star;
    internal static string TopQueryOption;
    internal static string CountQueryOption;
    internal static string IndexQueryOption;
    internal static string FormatQueryOption;
    internal static string SearchQueryOption;
    internal static string DollarSign;
    internal static string ComputeQueryOption;
    internal static char AnnotationPrefix;
}
public class Microsoft.OData.UriParser.UriQueryExpressionParser : object {
    private int maxDepth;
    private static string supportedKeywords;
    private HashSet`1<string> parameters;
    private int recursionDepth;
    private ExpressionLexer lexer;
    private bool enableCaseInsensitiveBuiltinIdentifier;
    private bool enableNoDollarQueryOptions;
    private int parseAggregateExpressionDepth;
    private Stack`1<QueryToken> aggregateExpressionParents;
    internal ExpressionLexer Lexer { get; }
    internal bool EnableCaseInsensitiveBuiltinIdentifier { get; }
    internal bool EnableNoDollarQueryOptions { get; }
    private bool IsInAggregateExpression { get; }
    public UriQueryExpressionParser(int maxDepth);
    internal UriQueryExpressionParser(int maxDepth, bool enableCaseInsensitiveBuiltinIdentifier);
    internal UriQueryExpressionParser(int maxDepth, bool enableCaseInsensitiveBuiltinIdentifier, bool enableNoDollarQueryOptions);
    internal UriQueryExpressionParser(int maxDepth, ExpressionLexer lexer);
    private static UriQueryExpressionParser();
    internal ExpressionLexer get_Lexer();
    internal bool get_EnableCaseInsensitiveBuiltinIdentifier();
    internal bool get_EnableNoDollarQueryOptions();
    private bool get_IsInAggregateExpression();
    public QueryToken ParseFilter(string filter);
    internal static LiteralToken TryParseLiteral(ExpressionLexer lexer);
    internal static string GetEdmConstantNames(IEdmTypeReference edmTypeReference);
    internal ComputeToken ParseCompute();
    internal ComputeToken ParseCompute(string compute);
    internal ExpandToken ParseExpand();
    internal IEnumerable`1<QueryToken> ParseApply(string apply);
    internal AggregateToken ParseAggregate();
    internal List`1<AggregateTokenBase> ParseAggregateExpressions();
    internal AggregateTokenBase ParseAggregateExpression();
    internal GroupByToken ParseGroupBy();
    internal QueryToken ParseApplyFilter();
    internal ComputeExpressionToken ParseComputeExpression();
    internal QueryToken ParseExpressionText(string expressionText);
    internal IEnumerable`1<OrderByToken> ParseOrderBy(string orderBy);
    internal QueryToken ParseExpression();
    private static ExpressionLexer CreateLexerForFilterOrOrderByOrApplyExpression(string expression);
    private static Exception ParseError(string message);
    private static Exception ParseError(string message, UriLiteralParsingException parsingException);
    private static FunctionParameterAliasToken ParseParameterAlias(ExpressionLexer lexer);
    private static LiteralToken ParseTypedLiteral(ExpressionLexer lexer, IEdmTypeReference targetTypeReference, string targetTypeName);
    private static LiteralToken ParseNullLiteral(ExpressionLexer lexer);
    private QueryToken ParseLogicalOr();
    private QueryToken ParseLogicalAnd();
    private QueryToken ParseComparison();
    private QueryToken ParseAdditive();
    private QueryToken ParseMultiplicative();
    private QueryToken ParseUnary();
    private QueryToken ParseInHas();
    private QueryToken ParsePrimary();
    private QueryToken ParsePrimaryStart();
    private QueryToken ParseParenExpression();
    private QueryToken ParseAny(QueryToken parent);
    private QueryToken ParseAll(QueryToken parent);
    private QueryToken ParseAnyAll(QueryToken parent, bool isAny);
    private QueryToken ParseSegment(QueryToken parent);
    private QueryToken ParseCountSegment(QueryToken parent);
    private AggregationMethodDefinition ParseAggregateWith();
    private StringLiteralToken ParseAggregateAs();
    private bool TokenIdentifierIs(string id);
    private void RecurseEnter();
    private void RecurseLeave();
}
public class Microsoft.OData.UriParser.UriTemplateExpression : object {
    [CompilerGeneratedAttribute]
private string <LiteralText>k__BackingField;
    [CompilerGeneratedAttribute]
private IEdmTypeReference <ExpectedType>k__BackingField;
    public string LiteralText { get; internal set; }
    public IEdmTypeReference ExpectedType { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_LiteralText();
    [CompilerGeneratedAttribute]
internal void set_LiteralText(string value);
    [CompilerGeneratedAttribute]
public IEdmTypeReference get_ExpectedType();
    [CompilerGeneratedAttribute]
internal void set_ExpectedType(IEdmTypeReference value);
}
internal class Microsoft.OData.UriParser.UriTemplateParser : object {
    internal static bool IsValidTemplateLiteral(string literalText);
    internal static bool TryParseLiteral(string literalText, IEdmTypeReference expectedType, UriTemplateExpression& expression);
}
public class Microsoft.OData.UriParser.Validation.ODataUrlValidationContext : object {
    private List`1<ODataUrlValidationMessage> messages;
    [CompilerGeneratedAttribute]
private IEdmModel <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<IEdmType> <ValidatedTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private ODataUrlValidator <UrlValidator>k__BackingField;
    [CompilerGeneratedAttribute]
private ExpressionValidator <ExpressionValidator>k__BackingField;
    [CompilerGeneratedAttribute]
private PathSegmentValidator <PathValidator>k__BackingField;
    public IReadOnlyList`1<ODataUrlValidationMessage> Messages { get; }
    public IEdmModel Model { get; private set; }
    internal ISet`1<IEdmType> ValidatedTypes { get; }
    internal ODataUrlValidator UrlValidator { get; private set; }
    internal ExpressionValidator ExpressionValidator { get; private set; }
    internal PathSegmentValidator PathValidator { get; private set; }
    internal ODataUrlValidationContext(IEdmModel model, ODataUrlValidator urlValidator);
    public IReadOnlyList`1<ODataUrlValidationMessage> get_Messages();
    [CompilerGeneratedAttribute]
public IEdmModel get_Model();
    [CompilerGeneratedAttribute]
private void set_Model(IEdmModel value);
    [CompilerGeneratedAttribute]
internal ISet`1<IEdmType> get_ValidatedTypes();
    [CompilerGeneratedAttribute]
internal ODataUrlValidator get_UrlValidator();
    [CompilerGeneratedAttribute]
private void set_UrlValidator(ODataUrlValidator value);
    [CompilerGeneratedAttribute]
internal ExpressionValidator get_ExpressionValidator();
    [CompilerGeneratedAttribute]
private void set_ExpressionValidator(ExpressionValidator value);
    [CompilerGeneratedAttribute]
internal PathSegmentValidator get_PathValidator();
    [CompilerGeneratedAttribute]
private void set_PathValidator(PathSegmentValidator value);
    public void AddMessage(string code, string message, Severity severity);
    public void AddMessage(ODataUrlValidationMessage odataUrlValidationMessage);
}
[ExtensionAttribute]
public static class Microsoft.OData.UriParser.Validation.ODataUrlValidationExtensions : object {
    [ExtensionAttribute]
public static bool ValidateODataUrl(Uri uri, IEdmModel model, ODataUrlValidationRuleSet rules, IEnumerable`1& validationMessages);
}
public class Microsoft.OData.UriParser.Validation.ODataUrlValidationMessage : object {
    private Dictionary`2<string, object> additionalInfo;
    [CompilerGeneratedAttribute]
private string <MessageCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Severity <Severity>k__BackingField;
    public string MessageCode { get; }
    public string Message { get; }
    public Severity Severity { get; }
    public Dictionary`2<string, object> ExtendedProperties { get; }
    public ODataUrlValidationMessage(string code, string message, Severity severity);
    [CompilerGeneratedAttribute]
public string get_MessageCode();
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public Severity get_Severity();
    public Dictionary`2<string, object> get_ExtendedProperties();
}
public static class Microsoft.OData.UriParser.Validation.ODataUrlValidationMessageCodes : object {
    public static string InvalidRule;
    public static string UnableToParseUri;
    public static string DeprecatedElement;
    public static string MissingSelect;
}
public abstract class Microsoft.OData.UriParser.Validation.ODataUrlValidationRule : object {
    [CompilerGeneratedAttribute]
private bool <IncludeImpliedProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RuleName>k__BackingField;
    public bool IncludeImpliedProperties { get; public set; }
    public string RuleName { get; protected set; }
    [CompilerGeneratedAttribute]
public bool get_IncludeImpliedProperties();
    [CompilerGeneratedAttribute]
public void set_IncludeImpliedProperties(bool value);
    [CompilerGeneratedAttribute]
public string get_RuleName();
    [CompilerGeneratedAttribute]
protected void set_RuleName(string value);
    internal abstract virtual void Validate(ODataUrlValidationContext context, object component);
    internal abstract virtual Type GetRuleType();
}
public class Microsoft.OData.UriParser.Validation.ODataUrlValidationRule`1 : ODataUrlValidationRule {
    private Action`2<ODataUrlValidationContext, T> validateMethod;
    private Type ruleType;
    public ODataUrlValidationRule`1(string ruleName, Action`2<ODataUrlValidationContext, T> validateMethod);
    public ODataUrlValidationRule`1(string ruleName, Action`2<ODataUrlValidationContext, T> validateMethod, bool includeImpliedProperties);
    internal virtual void Validate(ODataUrlValidationContext context, object component);
    internal virtual Type GetRuleType();
}
public static class Microsoft.OData.UriParser.Validation.ODataUrlValidationRules : object {
    public static ODataUrlValidationRule DeprecatedPropertyRule;
    public static ODataUrlValidationRule DeprecatedTypeRule;
    public static ODataUrlValidationRule DeprecatedNavigationSourceRule;
    public static ODataUrlValidationRule RequireSelectRule;
    private static ODataUrlValidationRules();
}
[SuppressMessageAttribute("Naming", "CA1710:Identifiers should have correct suffix")]
public class Microsoft.OData.UriParser.Validation.ODataUrlValidationRuleSet : List`1<ODataUrlValidationRule> {
    public static ODataUrlValidationRuleSet AllRules;
    public ODataUrlValidationRuleSet(IEnumerable`1<ODataUrlValidationRule> rules);
    private static ODataUrlValidationRuleSet();
}
public class Microsoft.OData.UriParser.Validation.ODataUrlValidator : object {
    private Dictionary`2<Type, List`1<ODataUrlValidationRule>> ruleDictionary;
    private ConcurrentDictionary`2<Type, byte> unusedTypes;
    private ConcurrentDictionary`2<Type, Type[]> implementedInterfaces;
    [CompilerGeneratedAttribute]
private IEdmModel <Model>k__BackingField;
    internal IEdmModel Model { get; }
    public ODataUrlValidator(IEdmModel model, ODataUrlValidationRuleSet rules);
    [CompilerGeneratedAttribute]
internal IEdmModel get_Model();
    public bool ValidateUrl(ODataUri odataUri, IEnumerable`1& validationMessages);
    internal void ValidateItem(object item, ODataUrlValidationContext validationContext, bool impliedProperty);
    private bool ValidateTypeHierarchy(object item, Type itemType, ODataUrlValidationContext validationContext, HashSet`1<Type> validatedTypes, bool impliedProperty, bool includeInterfaces);
    private Type[] GetInterfaces(Type type);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031")]
private bool ValidateByType(object item, Type itemType, ODataUrlValidationContext validationContext, bool impliedProperty);
    private static void ValidatePathSegment(ODataPathSegment segment, ODataUrlValidationContext validationContext);
    private void ValidateSelectExpandClause(IEdmType segmentType, SelectExpandClause selectExpand, ODataUrlValidationContext validationContext);
    private void ValidateFilterClause(FilterClause filter, ODataUrlValidationContext validationContext);
    private void ValidateOrderByClause(OrderByClause orderBy, ODataUrlValidationContext validationContext);
    private void ValidateApplyClause(ApplyClause apply, ODataUrlValidationContext validationContext);
    private void ValidateComputeClause(ComputeClause compute, ODataUrlValidationContext validationContext);
    private void ValidateCustomQueryOptions(IEnumerable`1<QueryNode> queryOptions, ODataUrlValidationContext validationContext);
    private void ValidateSearchClause(SearchClause search, ODataUrlValidationContext validationContext);
    private void ValidateSelectItem(SelectItem selectExpandItem, ODataUrlValidationContext validationContext);
    private void ValidatePathItem(PathSelectItem pathItem, ODataUrlValidationContext validationContext);
    private void ValidateExpandItem(ExpandedNavigationSelectItem expandItem, ODataUrlValidationContext validationContext);
    private void ValidateExpandReferenceItem(ExpandedReferenceSelectItem expandItem, ODataUrlValidationContext validationContext);
    private void ValidateImpliedProperties(IEdmType segmentType, SelectExpandClause selectExpand, ODataUrlValidationContext validationContext);
    private void ValidateProperties(IEdmType edmType, ODataUrlValidationContext context);
    private void ValidateTransformation(TransformationNode transformation, ODataUrlValidationContext validationContext);
    private void ValidateGroupByPropertyNode(GroupByPropertyNode groupByProperty, ODataUrlValidationContext validationContext);
}
internal class Microsoft.OData.UriParser.Validation.Rules.DeprecationRules : object {
    private static string DefaultCoreAliasWithRevisionTerm;
    private static string RevisionVersionProperty;
    private static string RevisionKindProperty;
    private static string RevisionDateProperty;
    private static string RevisionRemovalDateProperty;
    private static string RevisionElementNameProperty;
    private static string RevisionDescriptionProperty;
    private static string RevisionKindDeprecated;
    public static ODataUrlValidationRule`1<IEdmProperty> DeprecatedPropertyRule;
    public static ODataUrlValidationRule`1<IEdmNavigationSource> DeprecatedNavigationSourceRule;
    public static ODataUrlValidationRule`1<IEdmType> DeprecatedTypeRule;
    private static DeprecationRules();
    private static ODataUrlValidationMessage CreateUrlValidationMessage(string elementName, string message, string version, Nullable`1<Date> date, Nullable`1<Date> removalDate);
    private static void Validate(IEdmNamedElement element, IEdmType elementType, ODataUrlValidationContext context);
    private static bool IsDeprecated(IEdmModel model, IEdmElement element, String& message, String& version, Nullable`1& date, Nullable`1& removalDate);
    [IteratorStateMachineAttribute("Microsoft.OData.UriParser.Validation.Rules.DeprecationRules/<GetRevisionAnnotations>d__14")]
private static IEnumerable`1<IEdmVocabularyAnnotation> GetRevisionAnnotations(IEdmModel model, IEdmVocabularyAnnotatable annotatedElement);
    private static bool isRevisionsAnnotation(IEdmVocabularyAnnotation annotation);
}
internal class Microsoft.OData.UriParser.Validation.Rules.RequireSelectRules : object {
    public static ODataUrlValidationRule`1<ODataUri> RequireSelectRule;
    private static RequireSelectRules();
    private static void CheckAllSelected(string identifier, SelectExpandClause selectExpand, ODataUrlValidationContext validationContext);
    private static void AddError(string identifier, ODataUrlValidationContext validationContext);
}
public enum Microsoft.OData.UriParser.Validation.Severity : Enum {
    public int value__;
    public static Severity Undefined;
    public static Severity Info;
    public static Severity Warning;
    public static Severity Error;
}
internal class Microsoft.OData.UriParser.Validation.ValidationEngine.ExpressionValidator : QueryNodeVisitor`1<bool> {
    private Action`1<object> validate;
    public ExpressionValidator(Action`1<object> validate);
    public bool ValidateNode(QueryNode node);
    public virtual bool Visit(AllNode nodeIn);
    public virtual bool Visit(AnyNode nodeIn);
    public virtual bool Visit(BinaryOperatorNode nodeIn);
    public virtual bool Visit(CountNode nodeIn);
    public virtual bool Visit(CollectionNavigationNode nodeIn);
    public virtual bool Visit(CollectionPropertyAccessNode nodeIn);
    public virtual bool Visit(CollectionOpenPropertyAccessNode nodeIn);
    public virtual bool Visit(ConstantNode nodeIn);
    public virtual bool Visit(CollectionConstantNode nodeIn);
    public virtual bool Visit(ConvertNode nodeIn);
    public virtual bool Visit(CollectionResourceCastNode nodeIn);
    public virtual bool Visit(ResourceRangeVariableReferenceNode nodeIn);
    public virtual bool Visit(NonResourceRangeVariableReferenceNode nodeIn);
    public virtual bool Visit(SingleResourceCastNode nodeIn);
    public virtual bool Visit(SingleNavigationNode nodeIn);
    public virtual bool Visit(SingleResourceFunctionCallNode nodeIn);
    public virtual bool Visit(SingleValueFunctionCallNode nodeIn);
    public virtual bool Visit(CollectionResourceFunctionCallNode nodeIn);
    public virtual bool Visit(CollectionFunctionCallNode nodeIn);
    public virtual bool Visit(SingleValueOpenPropertyAccessNode nodeIn);
    public virtual bool Visit(SingleValuePropertyAccessNode nodeIn);
    public virtual bool Visit(UnaryOperatorNode nodeIn);
    public virtual bool Visit(NamedFunctionParameterNode nodeIn);
    public virtual bool Visit(ParameterAliasNode nodeIn);
    public virtual bool Visit(SearchTermNode nodeIn);
    public virtual bool Visit(SingleComplexNode nodeIn);
    public virtual bool Visit(CollectionComplexNode nodeIn);
    public virtual bool Visit(SingleValueCastNode nodeIn);
    public virtual bool Visit(AggregatedCollectionPropertyNode nodeIn);
    public virtual bool Visit(InNode nodeIn);
}
internal class Microsoft.OData.UriParser.Validation.ValidationEngine.PathSegmentValidator : PathSegmentHandler {
    private Action`1<object> ValidateItem;
    private Action`1<QueryNode> ValidateExpression;
    public PathSegmentValidator(ODataUrlValidationContext context);
    public void ValidatePath(ODataPathSegment segment);
    public virtual void Handle(MetadataSegment segment);
    public virtual void Handle(BatchReferenceSegment segment);
    public virtual void Handle(BatchSegment segment);
    public virtual void Handle(ValueSegment segment);
    public virtual void Handle(NavigationPropertyLinkSegment segment);
    public virtual void Handle(EachSegment segment);
    public virtual void Handle(ReferenceSegment segment);
    public virtual void Handle(FilterSegment segment);
    public virtual void Handle(CountSegment segment);
    public virtual void Handle(DynamicPathSegment segment);
    public virtual void Handle(OperationSegment segment);
    public virtual void Handle(OperationImportSegment segment);
    public virtual void Handle(AnnotationSegment segment);
    public virtual void Handle(PropertySegment segment);
    public virtual void Handle(KeySegment segment);
    public virtual void Handle(SingletonSegment segment);
    public virtual void Handle(EntitySetSegment segment);
    public virtual void Handle(NavigationPropertySegment segment);
    public virtual void Handle(TypeSegment segment);
    public virtual void Handle(PathTemplateSegment segment);
    public virtual void Handle(ODataPathSegment segment);
    private void ValidateItemAndType(ODataPathSegment segment);
}
public class Microsoft.OData.UriParser.ValueSegment : ODataPathSegment {
    private IEdmType edmType;
    public IEdmType EdmType { get; }
    public ValueSegment(IEdmType previousType);
    public virtual IEdmType get_EdmType();
    public virtual T TranslateWith(PathSegmentTranslator`1<T> translator);
    public virtual void HandleWith(PathSegmentHandler handler);
    internal virtual bool Equals(ODataPathSegment other);
}
public class Microsoft.OData.UriParser.WildcardSelectItem : SelectItem {
    private List`1<SelectItem> subsumedSelectItems;
    public IEnumerable`1<SelectItem> SubsumedSelectItems { get; }
    public IEnumerable`1<SelectItem> get_SubsumedSelectItems();
    public virtual T TranslateWith(SelectItemTranslator`1<T> translator);
    public virtual void HandleWith(SelectItemHandler handler);
    internal void AddSubsumed(SelectItem selectItem);
    internal void AddSubsumed(IEnumerable`1<SelectItem> selectItems);
}
internal static class Microsoft.OData.UriUtils : object {
    internal static Uri UriToAbsoluteUri(Uri baseUri, Uri relativeUri);
    internal static Uri EnsureEscapedRelativeUri(Uri uri);
    internal static string EnsureEscapedFragment(string fragmentString);
    internal static string UriToString(Uri uri);
    internal static Uri StringToUri(string uriString);
    internal static Uri EnsureTaillingSlash(Uri uri);
    internal static bool UriInvariantInsensitiveIsBaseOf(Uri baseUri, Uri uri);
    internal static bool TryUriStringToGuid(string text, Guid& targetValue);
    internal static bool ConvertUriStringToDateTimeOffset(string text, DateTimeOffset& targetValue);
    internal static bool TryUriStringToDate(string text, Date& targetValue);
    internal static bool TryUriStringToTimeOfDay(string text, TimeOfDay& targetValue);
    internal static Uri CreateMockAbsoluteUri(Uri uri);
    private static Uri CreateBaseComparableUri(Uri uri);
}
[ExtensionAttribute]
internal static class Microsoft.OData.Utils : object {
    internal static bool TryDispose(object o);
    [ExtensionAttribute]
[SuppressMessageAttribute("Reliability", "CA2008:Do not create tasks without passing a TaskScheduler")]
internal static Task FlushAsync(Stream stream);
    [ExtensionAttribute]
internal static KeyValuePair`2[] StableSort(T[] array, Comparison`1<T> comparison);
}
[FlagsAttribute]
public enum Microsoft.OData.ValidationKinds : Enum {
    public int value__;
    public static ValidationKinds None;
    public static ValidationKinds ThrowOnDuplicatePropertyNames;
    public static ValidationKinds ThrowOnUndeclaredPropertyForNonOpenType;
    public static ValidationKinds ThrowIfTypeConflictsWithMetadata;
    public static ValidationKinds All;
}
internal static class Microsoft.OData.ValidationUtils : object {
    internal static Char[] InvalidCharactersInPropertyNames;
    private static int MaxBoundaryLength;
    private static ValidationUtils();
    internal static void ValidateOpenPropertyValue(string propertyName, object value);
    internal static void ValidateValueTypeKind(EdmTypeKind typeKind, string typeName);
    internal static string ValidateCollectionTypeName(string collectionTypeName);
    internal static void ValidateEntityTypeIsAssignable(IEdmEntityTypeReference expectedEntityTypeReference, IEdmEntityTypeReference payloadEntityTypeReference);
    internal static void ValidateComplexTypeIsAssignable(IEdmComplexType expectedComplexType, IEdmComplexType payloadComplexType);
    internal static IEdmCollectionTypeReference ValidateCollectionType(IEdmTypeReference typeReference);
    internal static void ValidateCollectionItem(object item, bool isNullable);
    internal static void ValidateNullCollectionItem(IEdmTypeReference expectedItemType);
    internal static void ValidateStreamPropertyInfo(IODataStreamReferenceInfo streamInfo, IEdmProperty edmProperty, string propertyName);
    internal static void IncreaseAndValidateRecursionDepth(Int32& recursionDepth, int maxDepth);
    internal static void ValidateOperationNotNull(ODataOperation operation, bool isAction);
    internal static void ValidateOperationMetadataNotNull(ODataOperation operation);
    internal static void ValidateOperationTargetNotNull(ODataOperation operation);
    internal static void ValidateMediaResource(ODataResourceBase resource, IEdmEntityType resourceType);
    internal static void ValidateIsExpectedPrimitiveType(object value, IEdmTypeReference expectedTypeReference);
    internal static void ValidateIsExpectedPrimitiveType(object value, IEdmPrimitiveTypeReference valuePrimitiveTypeReference, IEdmTypeReference expectedTypeReference);
    internal static void ValidateMetadataPrimitiveType(IEdmTypeReference expectedTypeReference, IEdmTypeReference typeReferenceFromValue);
    internal static void ValidateServiceDocumentElement(ODataServiceDocumentElement serviceDocumentElement, ODataFormat format);
    internal static void ValidateServiceDocumentElementUrl(string serviceDocumentUrl);
    internal static void ValidateTypeKind(EdmTypeKind actualTypeKind, EdmTypeKind expectedTypeKind, Nullable`1<bool> expectStructuredType, string typeName);
    internal static void ValidateBoundaryString(string boundary);
    internal static bool IsValidPropertyName(string propertyName);
    internal static void ValidatePropertyName(string propertyName);
}
internal static class Microsoft.OData.WriterUtils : object {
    internal static string PrefixTypeNameForWriting(string typeName, ODataVersion version);
    private static string PrefixTypeName(string typeName);
}
internal static class Microsoft.OData.WriterValidationUtils : object {
    internal static void ValidateMessageWriterSettings(ODataMessageWriterSettings messageWriterSettings, bool writingResponse);
    internal static void ValidatePropertyNotNull(ODataPropertyInfo property);
    internal static void ValidatePropertyName(string propertyName);
    internal static IEdmProperty ValidatePropertyDefined(string propertyName, IEdmStructuredType owningStructuredType, bool throwOnUndeclaredProperty);
    internal static void ValidatePropertyDefined(PropertySerializationInfo propertyInfo, bool throwOnUndeclaredProperty);
    internal static IEdmNavigationProperty ValidateNavigationPropertyDefined(string propertyName, IEdmStructuredType owningType, bool throwOnUndeclaredProperty);
    internal static void ValidateNestedResource(IEdmStructuredType resourceType, IEdmStructuredType parentNavigationPropertyType);
    internal static void ValidateCanWriteOperation(ODataOperation operation, bool writingResponse);
    internal static void ValidateResourceSetAtEnd(ODataResourceSet resourceSet, bool writingRequest);
    internal static void ValidateDeltaResourceSetAtEnd(ODataDeltaResourceSet resourceSet, bool writingRequest);
    internal static void ValidateResourceAtStart(ODataResourceBase resource);
    internal static void ValidateResourceAtEnd(ODataResourceBase resource);
    internal static void ValidateStreamReferenceValue(ODataStreamReferenceValue streamReference, bool isDefaultStream);
    internal static void ValidateStreamPropertyInfo(IODataStreamReferenceInfo streamPropertyInfo, IEdmProperty edmProperty, string propertyName, bool writingResponse);
    internal static void ValidatePropertyDerivedTypeConstraint(PropertySerializationInfo propertySerializationInfo);
    internal static void ValidateEntityReferenceLinkNotNull(ODataEntityReferenceLink entityReferenceLink);
    internal static void ValidateEntityReferenceLink(ODataEntityReferenceLink entityReferenceLink);
    [SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
internal static IEdmNavigationProperty ValidateNestedResourceInfo(ODataNestedResourceInfo nestedResourceInfo, IEdmStructuredType declaringStructuredType, Nullable`1<ODataPayloadKind> expandedPayloadKind, bool throwOnUndeclaredProperty);
    internal static void ValidateDerivedTypeConstraint(IEdmStructuredType resourceType, IEdmStructuredType metadataType, IEnumerable`1<string> derivedTypeConstraints, string itemKind, string itemName);
    internal static void ValidateNestedResourceInfoHasCardinality(ODataNestedResourceInfo nestedResourceInfo);
    internal static void ValidateNullPropertyValue(IEdmTypeReference expectedPropertyTypeReference, string propertyName, IEdmModel model);
    private static void ValidateResourceId(Uri id);
}
internal class Microsoft.OData.WriterValidator : object {
    private ODataMessageWriterSettings settings;
    private ObjectPool`1<DuplicatePropertyNameChecker> duplicatePropertyNameCheckerObjectPool;
    internal WriterValidator(ODataMessageWriterSettings settings);
    public sealed virtual IDuplicatePropertyNameChecker GetDuplicatePropertyNameChecker();
    public sealed virtual void ReturnDuplicatePropertyNameChecker(IDuplicatePropertyNameChecker duplicatePropertyNameChecker);
    public virtual void ValidateResourceInNestedResourceInfo(IEdmStructuredType resourceType, IEdmStructuredType parentNavigationPropertyType);
    public virtual void ValidateNestedResourceInfoHasCardinality(ODataNestedResourceInfo nestedResourceInfo);
    public virtual void ValidateIsExpectedPrimitiveType(object value, IEdmPrimitiveTypeReference valuePrimitiveTypeReference, IEdmTypeReference expectedTypeReference);
    public virtual void ValidateTypeReference(IEdmTypeReference typeReferenceFromMetadata, IEdmTypeReference typeReferenceFromValue);
    public virtual void ValidateTypeKind(EdmTypeKind actualTypeKind, EdmTypeKind expectedTypeKind, Nullable`1<bool> expectStructuredType, IEdmType edmType);
    public virtual void ValidateMetadataResource(ODataResourceBase resource, IEdmEntityType resourceType);
    public sealed virtual void ValidateNullPropertyValue(IEdmTypeReference expectedPropertyTypeReference, string propertyName, bool isTopLevel, IEdmModel model);
    public sealed virtual void ValidateNullCollectionItem(IEdmTypeReference expectedItemType);
    public sealed virtual IEdmProperty ValidatePropertyDefined(string propertyName, IEdmStructuredType owningStructuredType);
    public sealed virtual IEdmNavigationProperty ValidateNestedResourceInfo(ODataNestedResourceInfo nestedResourceInfo, IEdmStructuredType declaringStructuredType, Nullable`1<ODataPayloadKind> expandedPayloadKind);
    public sealed virtual void ValidateDerivedTypeConstraint(IEdmStructuredType resourceType, IEdmStructuredType metadataType, IEnumerable`1<string> derivedTypeConstraints, string itemKind, string itemName);
}
