[ExtensionAttribute]
internal static class IDiagnosticExtensions : object {
    [ExtensionAttribute]
internal static void AddRange(ICollection`1<T> collection, IEnumerable`1<T> enumerable);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Microsoft.OpenApi.Readers.Exceptions.OpenApiReaderException : OpenApiException {
    public OpenApiReaderException(string message);
    public OpenApiReaderException(string message, ParsingContext context);
    public OpenApiReaderException(string message, YamlNode node);
    public OpenApiReaderException(string message, Exception innerException);
}
public class Microsoft.OpenApi.Readers.Exceptions.OpenApiUnsupportedSpecVersionException : Exception {
    private static string messagePattern;
    [CompilerGeneratedAttribute]
private string <SpecificationVersion>k__BackingField;
    public string SpecificationVersion { get; }
    public OpenApiUnsupportedSpecVersionException(string specificationVersion);
    public OpenApiUnsupportedSpecVersionException(string specificationVersion, Exception innerException);
    [CompilerGeneratedAttribute]
public string get_SpecificationVersion();
}
public interface Microsoft.OpenApi.Readers.Interface.IDiagnostic {
}
public interface Microsoft.OpenApi.Readers.Interface.IOpenApiReader`2 {
    public abstract virtual OpenApiDocument Read(TInput input, TDiagnostic& diagnostic);
}
internal interface Microsoft.OpenApi.Readers.Interface.IOpenApiVersionService {
    public abstract virtual OpenApiReference ConvertToOpenApiReference(string reference, Nullable`1<ReferenceType> type);
    public abstract virtual T LoadElement(ParseNode node);
    public abstract virtual OpenApiDocument LoadDocument(RootNode rootNode);
}
public interface Microsoft.OpenApi.Readers.Interface.IStreamLoader {
    public abstract virtual Task`1<Stream> LoadAsync(Uri uri);
    [ObsoleteAttribute("Use the Async overload")]
[EditorBrowsableAttribute("1")]
public abstract virtual Stream Load(Uri uri);
}
public class Microsoft.OpenApi.Readers.OpenApiDiagnostic : object {
    [CompilerGeneratedAttribute]
private IList`1<OpenApiError> <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<OpenApiError> <Warnings>k__BackingField;
    [CompilerGeneratedAttribute]
private OpenApiSpecVersion <SpecificationVersion>k__BackingField;
    public IList`1<OpenApiError> Errors { get; public set; }
    public IList`1<OpenApiError> Warnings { get; public set; }
    public OpenApiSpecVersion SpecificationVersion { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<OpenApiError> get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(IList`1<OpenApiError> value);
    [CompilerGeneratedAttribute]
public IList`1<OpenApiError> get_Warnings();
    [CompilerGeneratedAttribute]
public void set_Warnings(IList`1<OpenApiError> value);
    [CompilerGeneratedAttribute]
public OpenApiSpecVersion get_SpecificationVersion();
    [CompilerGeneratedAttribute]
public void set_SpecificationVersion(OpenApiSpecVersion value);
    public void AppendDiagnostic(OpenApiDiagnostic diagnosticToAdd, string fileNameToAdd);
}
public class Microsoft.OpenApi.Readers.OpenApiReaderSettings : object {
    [CompilerGeneratedAttribute]
private ReferenceResolutionSetting <ReferenceResolution>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LoadExternalRefs>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Func`3<IOpenApiAny, OpenApiSpecVersion, IOpenApiExtension>> <ExtensionParsers>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidationRuleSet <RuleSet>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <BaseUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <DefaultContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private IStreamLoader <CustomExternalLoader>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LeaveStreamOpen>k__BackingField;
    public ReferenceResolutionSetting ReferenceResolution { get; public set; }
    public bool LoadExternalRefs { get; public set; }
    public Dictionary`2<string, Func`3<IOpenApiAny, OpenApiSpecVersion, IOpenApiExtension>> ExtensionParsers { get; public set; }
    public ValidationRuleSet RuleSet { get; public set; }
    public Uri BaseUrl { get; public set; }
    public List`1<string> DefaultContentType { get; public set; }
    public IStreamLoader CustomExternalLoader { get; public set; }
    public bool LeaveStreamOpen { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceResolutionSetting get_ReferenceResolution();
    [CompilerGeneratedAttribute]
public void set_ReferenceResolution(ReferenceResolutionSetting value);
    [CompilerGeneratedAttribute]
public bool get_LoadExternalRefs();
    [CompilerGeneratedAttribute]
public void set_LoadExternalRefs(bool value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Func`3<IOpenApiAny, OpenApiSpecVersion, IOpenApiExtension>> get_ExtensionParsers();
    [CompilerGeneratedAttribute]
public void set_ExtensionParsers(Dictionary`2<string, Func`3<IOpenApiAny, OpenApiSpecVersion, IOpenApiExtension>> value);
    [CompilerGeneratedAttribute]
public ValidationRuleSet get_RuleSet();
    [CompilerGeneratedAttribute]
public void set_RuleSet(ValidationRuleSet value);
    [CompilerGeneratedAttribute]
public Uri get_BaseUrl();
    [CompilerGeneratedAttribute]
public void set_BaseUrl(Uri value);
    [CompilerGeneratedAttribute]
public List`1<string> get_DefaultContentType();
    [CompilerGeneratedAttribute]
public void set_DefaultContentType(List`1<string> value);
    [CompilerGeneratedAttribute]
public IStreamLoader get_CustomExternalLoader();
    [CompilerGeneratedAttribute]
public void set_CustomExternalLoader(IStreamLoader value);
    [CompilerGeneratedAttribute]
public bool get_LeaveStreamOpen();
    [CompilerGeneratedAttribute]
public void set_LeaveStreamOpen(bool value);
    public void AddMicrosoftExtensionParsers();
}
public class Microsoft.OpenApi.Readers.OpenApiStreamReader : object {
    private OpenApiReaderSettings _settings;
    public OpenApiStreamReader(OpenApiReaderSettings settings);
    public sealed virtual OpenApiDocument Read(Stream input, OpenApiDiagnostic& diagnostic);
    [AsyncStateMachineAttribute("Microsoft.OpenApi.Readers.OpenApiStreamReader/<ReadAsync>d__3")]
public Task`1<ReadResult> ReadAsync(Stream input, CancellationToken cancellationToken);
    public T ReadFragment(Stream input, OpenApiSpecVersion version, OpenApiDiagnostic& diagnostic);
}
public class Microsoft.OpenApi.Readers.OpenApiStringReader : object {
    private OpenApiReaderSettings _settings;
    public OpenApiStringReader(OpenApiReaderSettings settings);
    public sealed virtual OpenApiDocument Read(string input, OpenApiDiagnostic& diagnostic);
    public T ReadFragment(string input, OpenApiSpecVersion version, OpenApiDiagnostic& diagnostic);
}
public class Microsoft.OpenApi.Readers.OpenApiTextReaderReader : object {
    private OpenApiReaderSettings _settings;
    public OpenApiTextReaderReader(OpenApiReaderSettings settings);
    public sealed virtual OpenApiDocument Read(TextReader input, OpenApiDiagnostic& diagnostic);
    [AsyncStateMachineAttribute("Microsoft.OpenApi.Readers.OpenApiTextReaderReader/<ReadAsync>d__3")]
public Task`1<ReadResult> ReadAsync(TextReader input, CancellationToken cancellationToken);
    public T ReadFragment(TextReader input, OpenApiSpecVersion version, OpenApiDiagnostic& diagnostic);
    private static YamlDocument LoadYamlDocument(TextReader input);
}
internal class Microsoft.OpenApi.Readers.OpenApiYamlDocumentReader : object {
    private OpenApiReaderSettings _settings;
    public OpenApiYamlDocumentReader(OpenApiReaderSettings settings);
    public sealed virtual OpenApiDocument Read(YamlDocument input, OpenApiDiagnostic& diagnostic);
    [AsyncStateMachineAttribute("Microsoft.OpenApi.Readers.OpenApiYamlDocumentReader/<ReadAsync>d__3")]
public Task`1<ReadResult> ReadAsync(YamlDocument input, CancellationToken cancellationToken);
    private Task`1<OpenApiDiagnostic> LoadExternalRefsAsync(OpenApiDocument document, CancellationToken cancellationToken);
    private void ResolveReferences(OpenApiDiagnostic diagnostic, OpenApiDocument document);
    public T ReadFragment(YamlDocument input, OpenApiSpecVersion version, OpenApiDiagnostic& diagnostic);
}
internal class Microsoft.OpenApi.Readers.ParseNodes.AnyFieldMap`1 : Dictionary`2<string, AnyFieldMapParameter`1<T>> {
}
internal class Microsoft.OpenApi.Readers.ParseNodes.AnyFieldMapParameter`1 : object {
    [CompilerGeneratedAttribute]
private Func`2<T, IOpenApiAny> <PropertyGetter>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<T, IOpenApiAny> <PropertySetter>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<T, OpenApiSchema> <SchemaGetter>k__BackingField;
    public Func`2<T, IOpenApiAny> PropertyGetter { get; }
    public Action`2<T, IOpenApiAny> PropertySetter { get; }
    public Func`2<T, OpenApiSchema> SchemaGetter { get; }
    public AnyFieldMapParameter`1(Func`2<T, IOpenApiAny> propertyGetter, Action`2<T, IOpenApiAny> propertySetter, Func`2<T, OpenApiSchema> schemaGetter);
    [CompilerGeneratedAttribute]
public Func`2<T, IOpenApiAny> get_PropertyGetter();
    [CompilerGeneratedAttribute]
public Action`2<T, IOpenApiAny> get_PropertySetter();
    [CompilerGeneratedAttribute]
public Func`2<T, OpenApiSchema> get_SchemaGetter();
}
internal class Microsoft.OpenApi.Readers.ParseNodes.AnyListFieldMap`1 : Dictionary`2<string, AnyListFieldMapParameter`1<T>> {
}
internal class Microsoft.OpenApi.Readers.ParseNodes.AnyListFieldMapParameter`1 : object {
    [CompilerGeneratedAttribute]
private Func`2<T, IList`1<IOpenApiAny>> <PropertyGetter>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<T, IList`1<IOpenApiAny>> <PropertySetter>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<T, OpenApiSchema> <SchemaGetter>k__BackingField;
    public Func`2<T, IList`1<IOpenApiAny>> PropertyGetter { get; }
    public Action`2<T, IList`1<IOpenApiAny>> PropertySetter { get; }
    public Func`2<T, OpenApiSchema> SchemaGetter { get; }
    public AnyListFieldMapParameter`1(Func`2<T, IList`1<IOpenApiAny>> propertyGetter, Action`2<T, IList`1<IOpenApiAny>> propertySetter, Func`2<T, OpenApiSchema> schemaGetter);
    [CompilerGeneratedAttribute]
public Func`2<T, IList`1<IOpenApiAny>> get_PropertyGetter();
    [CompilerGeneratedAttribute]
public Action`2<T, IList`1<IOpenApiAny>> get_PropertySetter();
    [CompilerGeneratedAttribute]
public Func`2<T, OpenApiSchema> get_SchemaGetter();
}
internal class Microsoft.OpenApi.Readers.ParseNodes.AnyMapFieldMap`2 : Dictionary`2<string, AnyMapFieldMapParameter`2<T, U>> {
}
internal class Microsoft.OpenApi.Readers.ParseNodes.AnyMapFieldMapParameter`2 : object {
    [CompilerGeneratedAttribute]
private Func`2<T, IDictionary`2<string, U>> <PropertyMapGetter>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<U, IOpenApiAny> <PropertyGetter>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<U, IOpenApiAny> <PropertySetter>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<T, OpenApiSchema> <SchemaGetter>k__BackingField;
    public Func`2<T, IDictionary`2<string, U>> PropertyMapGetter { get; }
    public Func`2<U, IOpenApiAny> PropertyGetter { get; }
    public Action`2<U, IOpenApiAny> PropertySetter { get; }
    public Func`2<T, OpenApiSchema> SchemaGetter { get; }
    public AnyMapFieldMapParameter`2(Func`2<T, IDictionary`2<string, U>> propertyMapGetter, Func`2<U, IOpenApiAny> propertyGetter, Action`2<U, IOpenApiAny> propertySetter, Func`2<T, OpenApiSchema> schemaGetter);
    [CompilerGeneratedAttribute]
public Func`2<T, IDictionary`2<string, U>> get_PropertyMapGetter();
    [CompilerGeneratedAttribute]
public Func`2<U, IOpenApiAny> get_PropertyGetter();
    [CompilerGeneratedAttribute]
public Action`2<U, IOpenApiAny> get_PropertySetter();
    [CompilerGeneratedAttribute]
public Func`2<T, OpenApiSchema> get_SchemaGetter();
}
internal class Microsoft.OpenApi.Readers.ParseNodes.FixedFieldMap`1 : Dictionary`2<string, Action`2<T, ParseNode>> {
}
[ExtensionAttribute]
public static class Microsoft.OpenApi.Readers.ParseNodes.JsonPointerExtensions : object {
    [ExtensionAttribute]
public static YamlNode Find(JsonPointer currentPointer, YamlNode baseYamlNode);
}
internal class Microsoft.OpenApi.Readers.ParseNodes.ListNode : ParseNode {
    private YamlSequenceNode _nodeList;
    public ListNode(ParsingContext context, YamlSequenceNode sequenceNode);
    public virtual List`1<T> CreateList(Func`2<MapNode, T> map);
    public virtual List`1<IOpenApiAny> CreateListOfAny();
    public virtual List`1<T> CreateSimpleList(Func`2<ValueNode, T> map);
    public sealed virtual IEnumerator`1<ParseNode> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual IOpenApiAny CreateAny();
    [CompilerGeneratedAttribute]
private IOpenApiAny <CreateListOfAny>b__3_0(YamlNode n);
    [CompilerGeneratedAttribute]
private ParseNode <GetEnumerator>b__5_0(YamlNode n);
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.OpenApi.Readers.ParseNodes.MapNode : ParseNode {
    private YamlMappingNode _node;
    private List`1<PropertyNode> _nodes;
    public PropertyNode Item { get; }
    public MapNode(ParsingContext context, string yamlString);
    public MapNode(ParsingContext context, YamlNode node);
    public PropertyNode get_Item(string key);
    public virtual Dictionary`2<string, T> CreateMap(Func`2<MapNode, T> map);
    public virtual Dictionary`2<string, T> CreateMapWithReference(ReferenceType referenceType, Func`2<MapNode, T> map);
    public virtual Dictionary`2<string, T> CreateSimpleMap(Func`2<ValueNode, T> map);
    public sealed virtual IEnumerator`1<PropertyNode> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual string GetRaw();
    public T GetReferencedObject(ReferenceType referenceType, string referenceId);
    public string GetReferencePointer();
    public string GetScalarValue(ValueNode key);
    public virtual IOpenApiAny CreateAny();
    [CompilerGeneratedAttribute]
private PropertyNode <.ctor>b__3_0(KeyValuePair`2<YamlNode, YamlNode> kvp);
}
internal static class Microsoft.OpenApi.Readers.ParseNodes.OpenApiAnyConverter : object {
    public static IOpenApiAny GetSpecificOpenApiAny(IOpenApiAny openApiAny, OpenApiSchema schema);
}
internal abstract class Microsoft.OpenApi.Readers.ParseNodes.ParseNode : object {
    [CompilerGeneratedAttribute]
private ParsingContext <Context>k__BackingField;
    public ParsingContext Context { get; }
    protected ParseNode(ParsingContext parsingContext);
    [CompilerGeneratedAttribute]
public ParsingContext get_Context();
    public MapNode CheckMapNode(string nodeName);
    public static ParseNode Create(ParsingContext context, YamlNode node);
    public virtual List`1<T> CreateList(Func`2<MapNode, T> map);
    public virtual Dictionary`2<string, T> CreateMap(Func`2<MapNode, T> map);
    public virtual Dictionary`2<string, T> CreateMapWithReference(ReferenceType referenceType, Func`2<MapNode, T> map);
    public virtual List`1<T> CreateSimpleList(Func`2<ValueNode, T> map);
    public virtual Dictionary`2<string, T> CreateSimpleMap(Func`2<ValueNode, T> map);
    public virtual IOpenApiAny CreateAny();
    public virtual string GetRaw();
    public virtual string GetScalarValue();
    public virtual List`1<IOpenApiAny> CreateListOfAny();
}
internal class Microsoft.OpenApi.Readers.ParseNodes.ParserHelper : object {
    public static decimal ParseDecimalWithFallbackOnOverflow(string value, decimal defaultValue);
}
internal class Microsoft.OpenApi.Readers.ParseNodes.PatternFieldMap`1 : Dictionary`2<Func`2<string, bool>, Action`3<T, string, ParseNode>> {
}
internal class Microsoft.OpenApi.Readers.ParseNodes.PropertyNode : ParseNode {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ParseNode <Value>k__BackingField;
    public string Name { get; public set; }
    public ParseNode Value { get; public set; }
    public PropertyNode(ParsingContext context, string name, YamlNode node);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ParseNode get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(ParseNode value);
    public void ParseField(T parentInstance, IDictionary`2<string, Action`2<T, ParseNode>> fixedFields, IDictionary`2<Func`2<string, bool>, Action`3<T, string, ParseNode>> patternFields);
    public virtual IOpenApiAny CreateAny();
    [CompilerGeneratedAttribute]
private bool <ParseField>b__9_0(KeyValuePair`2<Func`2<string, bool>, Action`3<T, string, ParseNode>> p);
}
internal class Microsoft.OpenApi.Readers.ParseNodes.RootNode : ParseNode {
    private YamlDocument _yamlDocument;
    public RootNode(ParsingContext context, YamlDocument yamlDocument);
    public ParseNode Find(JsonPointer referencePointer);
    public MapNode GetMap();
}
internal class Microsoft.OpenApi.Readers.ParseNodes.ValueNode : ParseNode {
    private YamlScalarNode _node;
    public ValueNode(ParsingContext context, YamlNode node);
    public virtual string GetScalarValue();
    public virtual IOpenApiAny CreateAny();
}
public class Microsoft.OpenApi.Readers.ParsingContext : object {
    private Stack`1<string> _currentLocation;
    private Dictionary`2<string, object> _tempStorage;
    private Dictionary`2<object, Dictionary`2<string, object>> _scopedTempStorage;
    private Dictionary`2<string, Stack`1<string>> _loopStacks;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Func`3<IOpenApiAny, OpenApiSpecVersion, IOpenApiExtension>> <ExtensionParsers>k__BackingField;
    [CompilerGeneratedAttribute]
private RootNode <RootNode>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<OpenApiTag> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <BaseUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <DefaultContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private OpenApiDiagnostic <Diagnostic>k__BackingField;
    [CompilerGeneratedAttribute]
private IOpenApiVersionService <VersionService>k__BackingField;
    internal Dictionary`2<string, Func`3<IOpenApiAny, OpenApiSpecVersion, IOpenApiExtension>> ExtensionParsers { get; internal set; }
    internal RootNode RootNode { get; internal set; }
    internal List`1<OpenApiTag> Tags { get; private set; }
    internal Uri BaseUrl { get; internal set; }
    internal List`1<string> DefaultContentType { get; internal set; }
    public OpenApiDiagnostic Diagnostic { get; }
    internal IOpenApiVersionService VersionService { get; internal set; }
    public ParsingContext(OpenApiDiagnostic diagnostic);
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, Func`3<IOpenApiAny, OpenApiSpecVersion, IOpenApiExtension>> get_ExtensionParsers();
    [CompilerGeneratedAttribute]
internal void set_ExtensionParsers(Dictionary`2<string, Func`3<IOpenApiAny, OpenApiSpecVersion, IOpenApiExtension>> value);
    [CompilerGeneratedAttribute]
internal RootNode get_RootNode();
    [CompilerGeneratedAttribute]
internal void set_RootNode(RootNode value);
    [CompilerGeneratedAttribute]
internal List`1<OpenApiTag> get_Tags();
    [CompilerGeneratedAttribute]
private void set_Tags(List`1<OpenApiTag> value);
    [CompilerGeneratedAttribute]
internal Uri get_BaseUrl();
    [CompilerGeneratedAttribute]
internal void set_BaseUrl(Uri value);
    [CompilerGeneratedAttribute]
internal List`1<string> get_DefaultContentType();
    [CompilerGeneratedAttribute]
internal void set_DefaultContentType(List`1<string> value);
    [CompilerGeneratedAttribute]
public OpenApiDiagnostic get_Diagnostic();
    internal OpenApiDocument Parse(YamlDocument yamlDocument);
    internal T ParseFragment(YamlDocument yamlDocument, OpenApiSpecVersion version);
    private static string GetVersion(RootNode rootNode);
    [CompilerGeneratedAttribute]
internal IOpenApiVersionService get_VersionService();
    [CompilerGeneratedAttribute]
internal void set_VersionService(IOpenApiVersionService value);
    public void EndObject();
    public string GetLocation();
    public T GetFromTempStorage(string key, object scope);
    public void SetTempStorage(string key, object value, object scope);
    public void StartObject(string objectName);
    public bool PushLoop(string loopId, string key);
    internal void ClearLoop(string loopid);
    public void PopLoop(string loopid);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.OpenApi.Readers.Properties.SRResource : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ArgumentNullOrWhiteSpace { get; }
    internal static string CannotResolveRemoteReferencesSynchronously { get; }
    internal static string JsonPointerCannotBeResolved { get; }
    internal static string LoadReferencedObjectFromExternalNotImplmented { get; }
    internal static string ReferenceHasInvalidFormat { get; }
    internal static string ReferenceV2HasInvalidValue { get; }
    internal static string ReferenceV3HasInvalidValue { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ArgumentNullOrWhiteSpace();
    internal static string get_CannotResolveRemoteReferencesSynchronously();
    internal static string get_JsonPointerCannotBeResolved();
    internal static string get_LoadReferencedObjectFromExternalNotImplmented();
    internal static string get_ReferenceHasInvalidFormat();
    internal static string get_ReferenceV2HasInvalidValue();
    internal static string get_ReferenceV3HasInvalidValue();
}
public class Microsoft.OpenApi.Readers.ReadResult : object {
    [CompilerGeneratedAttribute]
private OpenApiDocument <OpenApiDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private OpenApiDiagnostic <OpenApiDiagnostic>k__BackingField;
    public OpenApiDocument OpenApiDocument { get; public set; }
    public OpenApiDiagnostic OpenApiDiagnostic { get; public set; }
    [CompilerGeneratedAttribute]
public void set_OpenApiDocument(OpenApiDocument value);
    [CompilerGeneratedAttribute]
public OpenApiDocument get_OpenApiDocument();
    [CompilerGeneratedAttribute]
public void set_OpenApiDiagnostic(OpenApiDiagnostic value);
    [CompilerGeneratedAttribute]
public OpenApiDiagnostic get_OpenApiDiagnostic();
}
public enum Microsoft.OpenApi.Readers.ReferenceResolutionSetting : Enum {
    public int value__;
    public static ReferenceResolutionSetting DoNotResolveReferences;
    public static ReferenceResolutionSetting ResolveLocalReferences;
    public static ReferenceResolutionSetting ResolveAllReferences;
}
internal class Microsoft.OpenApi.Readers.Services.DefaultStreamLoader : object {
    private Uri baseUrl;
    private HttpClient _httpClient;
    public DefaultStreamLoader(Uri baseUrl);
    [ObsoleteAttribute]
[EditorBrowsableAttribute("1")]
public sealed virtual Stream Load(Uri uri);
    [AsyncStateMachineAttribute("Microsoft.OpenApi.Readers.Services.DefaultStreamLoader/<LoadAsync>d__4")]
public sealed virtual Task`1<Stream> LoadAsync(Uri uri);
}
internal class Microsoft.OpenApi.Readers.Services.OpenApiRemoteReferenceCollector : OpenApiVisitorBase {
    private Dictionary`2<string, OpenApiReference> _references;
    public IEnumerable`1<OpenApiReference> References { get; }
    public IEnumerable`1<OpenApiReference> get_References();
    public virtual void Visit(IOpenApiReferenceable referenceable);
    private void AddReference(OpenApiReference reference);
}
internal class Microsoft.OpenApi.Readers.Services.OpenApiWorkspaceLoader : object {
    private OpenApiWorkspace _workspace;
    private IStreamLoader _loader;
    private OpenApiReaderSettings _readerSettings;
    public OpenApiWorkspaceLoader(OpenApiWorkspace workspace, IStreamLoader loader, OpenApiReaderSettings readerSettings);
    [AsyncStateMachineAttribute("Microsoft.OpenApi.Readers.Services.OpenApiWorkspaceLoader/<LoadAsync>d__4")]
internal Task`1<OpenApiDiagnostic> LoadAsync(OpenApiReference reference, OpenApiDocument document, OpenApiDiagnostic diagnostic, CancellationToken cancellationToken);
}
internal static class Microsoft.OpenApi.Readers.V2.OpenApiV2Deserializer : object {
    private static FixedFieldMap`1<OpenApiContact> _contactFixedFields;
    private static PatternFieldMap`1<OpenApiContact> _contactPatternFields;
    private static FixedFieldMap`1<OpenApiDocument> _openApiFixedFields;
    private static PatternFieldMap`1<OpenApiDocument> _openApiPatternFields;
    private static FixedFieldMap`1<OpenApiExternalDocs> _externalDocsFixedFields;
    private static PatternFieldMap`1<OpenApiExternalDocs> _externalDocsPatternFields;
    private static FixedFieldMap`1<OpenApiHeader> _headerFixedFields;
    private static PatternFieldMap`1<OpenApiHeader> _headerPatternFields;
    private static AnyFieldMap`1<OpenApiHeader> _headerAnyFields;
    private static AnyListFieldMap`1<OpenApiHeader> _headerAnyListFields;
    private static FixedFieldMap`1<OpenApiInfo> _infoFixedFields;
    private static PatternFieldMap`1<OpenApiInfo> _infoPatternFields;
    private static FixedFieldMap`1<OpenApiLicense> _licenseFixedFields;
    private static PatternFieldMap`1<OpenApiLicense> _licensePatternFields;
    private static FixedFieldMap`1<OpenApiOperation> _operationFixedFields;
    private static PatternFieldMap`1<OpenApiOperation> _operationPatternFields;
    private static FixedFieldMap`1<OpenApiResponses> _responsesFixedFields;
    private static PatternFieldMap`1<OpenApiResponses> _responsesPatternFields;
    private static FixedFieldMap`1<OpenApiParameter> _parameterFixedFields;
    private static PatternFieldMap`1<OpenApiParameter> _parameterPatternFields;
    private static AnyFieldMap`1<OpenApiParameter> _parameterAnyFields;
    private static AnyListFieldMap`1<OpenApiParameter> _parameterAnyListFields;
    private static FixedFieldMap`1<OpenApiPathItem> _pathItemFixedFields;
    private static PatternFieldMap`1<OpenApiPathItem> _pathItemPatternFields;
    private static FixedFieldMap`1<OpenApiPaths> _pathsFixedFields;
    private static PatternFieldMap`1<OpenApiPaths> _pathsPatternFields;
    private static FixedFieldMap`1<OpenApiResponse> _responseFixedFields;
    private static PatternFieldMap`1<OpenApiResponse> _responsePatternFields;
    private static AnyFieldMap`1<OpenApiMediaType> _mediaTypeAnyFields;
    private static FixedFieldMap`1<OpenApiSchema> _schemaFixedFields;
    private static PatternFieldMap`1<OpenApiSchema> _schemaPatternFields;
    private static AnyFieldMap`1<OpenApiSchema> _schemaAnyFields;
    private static AnyListFieldMap`1<OpenApiSchema> _schemaAnyListFields;
    private static string _flowValue;
    private static OpenApiOAuthFlow _flow;
    private static FixedFieldMap`1<OpenApiSecurityScheme> _securitySchemeFixedFields;
    private static PatternFieldMap`1<OpenApiSecurityScheme> _securitySchemePatternFields;
    private static FixedFieldMap`1<OpenApiTag> _tagFixedFields;
    private static PatternFieldMap`1<OpenApiTag> _tagPatternFields;
    private static FixedFieldMap`1<OpenApiXml> _xmlFixedFields;
    private static PatternFieldMap`1<OpenApiXml> _xmlPatternFields;
    private static OpenApiV2Deserializer();
    public static OpenApiContact LoadContact(ParseNode node);
    private static void MakeServers(IList`1<OpenApiServer> servers, ParsingContext context, RootNode rootNode);
    private static string BuildUrl(string scheme, string host, string basePath);
    public static OpenApiDocument LoadOpenApi(RootNode rootNode);
    private static void ProcessResponsesMediaTypes(MapNode mapNode, IEnumerable`1<OpenApiResponse> responses, ParsingContext context);
    private static void FixRequestBodyReferences(OpenApiDocument doc);
    private static bool IsHostValid(string host);
    public static OpenApiExternalDocs LoadExternalDocs(ParseNode node);
    public static OpenApiHeader LoadHeader(ParseNode node);
    private static void LoadStyle(OpenApiHeader header, string style);
    public static OpenApiInfo LoadInfo(ParseNode node);
    public static OpenApiLicense LoadLicense(ParseNode node);
    internal static OpenApiOperation LoadOperation(ParseNode node);
    public static OpenApiResponses LoadResponses(ParseNode node);
    private static OpenApiRequestBody CreateFormBody(ParsingContext context, List`1<OpenApiParameter> formParameters);
    internal static OpenApiRequestBody CreateRequestBody(ParsingContext context, OpenApiParameter bodyParameter);
    private static OpenApiTag LoadTagByReference(ParsingContext context, string tagName);
    private static void LoadStyle(OpenApiParameter p, string v);
    private static void LoadParameterExamplesExtension(OpenApiParameter parameter, ParseNode node);
    private static OpenApiSchema GetOrCreateSchema(OpenApiParameter p);
    private static OpenApiSchema GetOrCreateSchema(OpenApiHeader p);
    private static void ProcessIn(OpenApiParameter o, ParseNode n);
    public static OpenApiParameter LoadParameter(ParseNode node);
    public static OpenApiParameter LoadParameter(ParseNode node, bool loadRequestBody);
    public static OpenApiPathItem LoadPathItem(ParseNode node);
    private static void LoadPathParameters(OpenApiPathItem pathItem, ParseNode node);
    public static OpenApiPaths LoadPaths(ParseNode node);
    private static void ProcessProduces(MapNode mapNode, OpenApiResponse response, ParsingContext context);
    private static void LoadResponseExamplesExtension(OpenApiResponse response, ParseNode node);
    private static Dictionary`2<string, OpenApiExample> LoadExamplesExtension(ParseNode node);
    private static void LoadExamples(OpenApiResponse response, ParseNode node);
    private static void LoadExample(OpenApiResponse response, string mediaType, ParseNode node);
    public static OpenApiResponse LoadResponse(ParseNode node);
    public static OpenApiSchema LoadSchema(ParseNode node);
    public static OpenApiSecurityRequirement LoadSecurityRequirement(ParseNode node);
    private static OpenApiSecurityScheme LoadSecuritySchemeByReference(ParsingContext context, string schemeName);
    public static OpenApiSecurityScheme LoadSecurityScheme(ParseNode node);
    public static OpenApiTag LoadTag(ParseNode n);
    private static void ParseMap(MapNode mapNode, T domainObject, FixedFieldMap`1<T> fixedFieldMap, PatternFieldMap`1<T> patternFieldMap, List`1<string> requiredFields);
    private static void ProcessAnyFields(MapNode mapNode, T domainObject, AnyFieldMap`1<T> anyFieldMap);
    private static void ProcessAnyListFields(MapNode mapNode, T domainObject, AnyListFieldMap`1<T> anyListFieldMap);
    public static IOpenApiAny LoadAny(ParseNode node);
    private static IOpenApiExtension LoadExtension(string name, ParseNode node);
    private static string LoadString(ParseNode node);
    public static OpenApiXml LoadXml(ParseNode node);
}
internal class Microsoft.OpenApi.Readers.V2.OpenApiV2VersionService : object {
    [CompilerGeneratedAttribute]
private OpenApiDiagnostic <Diagnostic>k__BackingField;
    private Dictionary`2<Type, Func`2<ParseNode, object>> _loaders;
    public OpenApiDiagnostic Diagnostic { get; }
    public OpenApiV2VersionService(OpenApiDiagnostic diagnostic);
    [CompilerGeneratedAttribute]
public OpenApiDiagnostic get_Diagnostic();
    private static OpenApiReference ParseLocalReference(string localReference);
    private static ReferenceType ParseReferenceType(string referenceTypeName);
    private static ReferenceType GetReferenceTypeV2FromName(string referenceType);
    public sealed virtual OpenApiReference ConvertToOpenApiReference(string reference, Nullable`1<ReferenceType> type);
    public sealed virtual OpenApiDocument LoadDocument(RootNode rootNode);
    public sealed virtual T LoadElement(ParseNode node);
}
internal class Microsoft.OpenApi.Readers.V2.RequestBodyReferenceFixer : OpenApiVisitorBase {
    private IDictionary`2<string, OpenApiRequestBody> _requestBodies;
    public RequestBodyReferenceFixer(IDictionary`2<string, OpenApiRequestBody> requestBodies);
    public virtual void Visit(OpenApiOperation operation);
    [CompilerGeneratedAttribute]
private bool <Visit>b__2_0(OpenApiParameter p);
}
internal static class Microsoft.OpenApi.Readers.V2.TempStorageKeys : object {
    public static string ResponseSchema;
    public static string BodyParameter;
    public static string FormParameters;
    public static string OperationProduces;
    public static string ResponseProducesSet;
    public static string OperationConsumes;
    public static string GlobalConsumes;
    public static string GlobalProduces;
    public static string ParameterIsBodyOrFormData;
    public static string Examples;
}
internal static class Microsoft.OpenApi.Readers.V3.OpenApiV3Deserializer : object {
    private static FixedFieldMap`1<OpenApiCallback> _callbackFixedFields;
    private static PatternFieldMap`1<OpenApiCallback> _callbackPatternFields;
    private static FixedFieldMap`1<OpenApiComponents> _componentsFixedFields;
    private static PatternFieldMap`1<OpenApiComponents> _componentsPatternFields;
    private static FixedFieldMap`1<OpenApiContact> _contactFixedFields;
    private static PatternFieldMap`1<OpenApiContact> _contactPatternFields;
    private static FixedFieldMap`1<OpenApiDiscriminator> _discriminatorFixedFields;
    private static PatternFieldMap`1<OpenApiDiscriminator> _discriminatorPatternFields;
    private static FixedFieldMap`1<OpenApiDocument> _openApiFixedFields;
    private static PatternFieldMap`1<OpenApiDocument> _openApiPatternFields;
    private static FixedFieldMap`1<OpenApiEncoding> _encodingFixedFields;
    private static PatternFieldMap`1<OpenApiEncoding> _encodingPatternFields;
    private static FixedFieldMap`1<OpenApiExample> _exampleFixedFields;
    private static PatternFieldMap`1<OpenApiExample> _examplePatternFields;
    private static FixedFieldMap`1<OpenApiExternalDocs> _externalDocsFixedFields;
    private static PatternFieldMap`1<OpenApiExternalDocs> _externalDocsPatternFields;
    private static FixedFieldMap`1<OpenApiHeader> _headerFixedFields;
    private static PatternFieldMap`1<OpenApiHeader> _headerPatternFields;
    public static FixedFieldMap`1<OpenApiInfo> InfoFixedFields;
    public static PatternFieldMap`1<OpenApiInfo> InfoPatternFields;
    private static FixedFieldMap`1<OpenApiLicense> _licenseFixedFields;
    private static PatternFieldMap`1<OpenApiLicense> _licensePatternFields;
    private static FixedFieldMap`1<OpenApiLink> _linkFixedFields;
    private static PatternFieldMap`1<OpenApiLink> _linkPatternFields;
    private static FixedFieldMap`1<OpenApiMediaType> _mediaTypeFixedFields;
    private static PatternFieldMap`1<OpenApiMediaType> _mediaTypePatternFields;
    private static AnyFieldMap`1<OpenApiMediaType> _mediaTypeAnyFields;
    private static AnyMapFieldMap`2<OpenApiMediaType, OpenApiExample> _mediaTypeAnyMapOpenApiExampleFields;
    private static FixedFieldMap`1<OpenApiOAuthFlow> _oAuthFlowFixedFields;
    private static PatternFieldMap`1<OpenApiOAuthFlow> _oAuthFlowPatternFields;
    private static FixedFieldMap`1<OpenApiOAuthFlows> _oAuthFlowsFixedFields;
    private static PatternFieldMap`1<OpenApiOAuthFlows> _oAuthFlowsPatternFields;
    private static FixedFieldMap`1<OpenApiOperation> _operationFixedFields;
    private static PatternFieldMap`1<OpenApiOperation> _operationPatternFields;
    private static FixedFieldMap`1<OpenApiParameter> _parameterFixedFields;
    private static PatternFieldMap`1<OpenApiParameter> _parameterPatternFields;
    private static AnyFieldMap`1<OpenApiParameter> _parameterAnyFields;
    private static AnyMapFieldMap`2<OpenApiParameter, OpenApiExample> _parameterAnyMapOpenApiExampleFields;
    private static FixedFieldMap`1<OpenApiPathItem> _pathItemFixedFields;
    private static PatternFieldMap`1<OpenApiPathItem> _pathItemPatternFields;
    private static FixedFieldMap`1<OpenApiPaths> _pathsFixedFields;
    private static PatternFieldMap`1<OpenApiPaths> _pathsPatternFields;
    private static FixedFieldMap`1<OpenApiRequestBody> _requestBodyFixedFields;
    private static PatternFieldMap`1<OpenApiRequestBody> _requestBodyPatternFields;
    private static FixedFieldMap`1<OpenApiResponse> _responseFixedFields;
    private static PatternFieldMap`1<OpenApiResponse> _responsePatternFields;
    public static FixedFieldMap`1<OpenApiResponses> ResponsesFixedFields;
    public static PatternFieldMap`1<OpenApiResponses> ResponsesPatternFields;
    private static FixedFieldMap`1<OpenApiSchema> _schemaFixedFields;
    private static PatternFieldMap`1<OpenApiSchema> _schemaPatternFields;
    private static AnyFieldMap`1<OpenApiSchema> _schemaAnyFields;
    private static AnyListFieldMap`1<OpenApiSchema> _schemaAnyListFields;
    private static FixedFieldMap`1<OpenApiSecurityScheme> _securitySchemeFixedFields;
    private static PatternFieldMap`1<OpenApiSecurityScheme> _securitySchemePatternFields;
    private static FixedFieldMap`1<OpenApiServer> _serverFixedFields;
    private static PatternFieldMap`1<OpenApiServer> _serverPatternFields;
    private static FixedFieldMap`1<OpenApiServerVariable> _serverVariableFixedFields;
    private static PatternFieldMap`1<OpenApiServerVariable> _serverVariablePatternFields;
    private static FixedFieldMap`1<OpenApiTag> _tagFixedFields;
    private static PatternFieldMap`1<OpenApiTag> _tagPatternFields;
    private static FixedFieldMap`1<OpenApiXml> _xmlFixedFields;
    private static PatternFieldMap`1<OpenApiXml> _xmlPatternFields;
    private static OpenApiV3Deserializer();
    public static OpenApiCallback LoadCallback(ParseNode node);
    public static OpenApiComponents LoadComponents(ParseNode node);
    public static OpenApiContact LoadContact(ParseNode node);
    public static OpenApiDiscriminator LoadDiscriminator(ParseNode node);
    public static OpenApiDocument LoadOpenApi(RootNode rootNode);
    public static OpenApiEncoding LoadEncoding(ParseNode node);
    public static OpenApiExample LoadExample(ParseNode node);
    public static OpenApiExternalDocs LoadExternalDocs(ParseNode node);
    public static OpenApiHeader LoadHeader(ParseNode node);
    public static OpenApiInfo LoadInfo(ParseNode node);
    internal static OpenApiLicense LoadLicense(ParseNode node);
    public static OpenApiLink LoadLink(ParseNode node);
    public static OpenApiMediaType LoadMediaType(ParseNode node);
    public static OpenApiOAuthFlow LoadOAuthFlow(ParseNode node);
    public static OpenApiOAuthFlows LoadOAuthFlows(ParseNode node);
    internal static OpenApiOperation LoadOperation(ParseNode node);
    private static OpenApiTag LoadTagByReference(ParsingContext context, string tagName);
    public static OpenApiParameter LoadParameter(ParseNode node);
    public static OpenApiPathItem LoadPathItem(ParseNode node);
    public static OpenApiPaths LoadPaths(ParseNode node);
    public static OpenApiRequestBody LoadRequestBody(ParseNode node);
    public static OpenApiResponse LoadResponse(ParseNode node);
    public static OpenApiResponses LoadResponses(ParseNode node);
    public static OpenApiSchema LoadSchema(ParseNode node);
    public static OpenApiSecurityRequirement LoadSecurityRequirement(ParseNode node);
    private static OpenApiSecurityScheme LoadSecuritySchemeByReference(ParsingContext context, string schemeName);
    public static OpenApiSecurityScheme LoadSecurityScheme(ParseNode node);
    public static OpenApiServer LoadServer(ParseNode node);
    public static OpenApiServerVariable LoadServerVariable(ParseNode node);
    public static OpenApiTag LoadTag(ParseNode n);
    private static void ParseMap(MapNode mapNode, T domainObject, FixedFieldMap`1<T> fixedFieldMap, PatternFieldMap`1<T> patternFieldMap);
    private static void ProcessAnyFields(MapNode mapNode, T domainObject, AnyFieldMap`1<T> anyFieldMap);
    private static void ProcessAnyListFields(MapNode mapNode, T domainObject, AnyListFieldMap`1<T> anyListFieldMap);
    private static void ProcessAnyMapFields(MapNode mapNode, T domainObject, AnyMapFieldMap`2<T, U> anyMapFieldMap);
    private static RuntimeExpression LoadRuntimeExpression(ParseNode node);
    private static RuntimeExpressionAnyWrapper LoadRuntimeExpressionAnyWrapper(ParseNode node);
    public static IOpenApiAny LoadAny(ParseNode node);
    private static IOpenApiExtension LoadExtension(string name, ParseNode node);
    private static string LoadString(ParseNode node);
    public static OpenApiXml LoadXml(ParseNode node);
}
internal class Microsoft.OpenApi.Readers.V3.OpenApiV3VersionService : object {
    [CompilerGeneratedAttribute]
private OpenApiDiagnostic <Diagnostic>k__BackingField;
    private static Char[] _pathSeparator;
    private Dictionary`2<Type, Func`2<ParseNode, object>> _loaders;
    public OpenApiDiagnostic Diagnostic { get; }
    public OpenApiV3VersionService(OpenApiDiagnostic diagnostic);
    private static OpenApiV3VersionService();
    [CompilerGeneratedAttribute]
public OpenApiDiagnostic get_Diagnostic();
    public sealed virtual OpenApiReference ConvertToOpenApiReference(string reference, Nullable`1<ReferenceType> type);
    public sealed virtual OpenApiDocument LoadDocument(RootNode rootNode);
    public sealed virtual T LoadElement(ParseNode node);
    private OpenApiReference ParseLocalReference(string localReference);
}
[ExtensionAttribute]
internal static class Microsoft.OpenApi.Readers.YamlHelper : object {
    [ExtensionAttribute]
public static string GetScalarValue(YamlNode node);
    public static YamlNode ParseYamlString(string yamlString);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
