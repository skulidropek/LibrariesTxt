internal class Orleans.AzureUtils.AzureGatewayListProvider : object {
    private OrleansSiloInstanceManager siloInstanceManager;
    private string clusterId;
    private AzureStorageGatewayOptions options;
    private ILoggerFactory loggerFactory;
    [CompilerGeneratedAttribute]
private TimeSpan <MaxStaleness>k__BackingField;
    public TimeSpan MaxStaleness { get; }
    public bool IsUpdatable { get; }
    public AzureGatewayListProvider(ILoggerFactory loggerFactory, IOptions`1<AzureStorageGatewayOptions> options, IOptions`1<ClusterOptions> clusterOptions, IOptions`1<GatewayOptions> gatewayOptions);
    [AsyncStateMachineAttribute("Orleans.AzureUtils.AzureGatewayListProvider/<InitializeGatewayListProvider>d__5")]
public sealed virtual Task InitializeGatewayListProvider();
    public sealed virtual Task`1<IList`1<Uri>> GetGateways();
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_MaxStaleness();
    public sealed virtual bool get_IsUpdatable();
}
internal class Orleans.AzureUtils.OrleansSiloInstanceManager : object {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    private static string INSTANCE_STATUS_CREATED;
    private static string INSTANCE_STATUS_ACTIVE;
    private static string INSTANCE_STATUS_DEAD;
    private AzureTableDataManager`1<SiloInstanceTableEntry> storage;
    private ILogger logger;
    private AzureStoragePolicyOptions storagePolicyOptions;
    [CompilerGeneratedAttribute]
private string <DeploymentId>k__BackingField;
    public string TableName { get; }
    public string DeploymentId { get; private set; }
    private OrleansSiloInstanceManager(string clusterId, ILoggerFactory loggerFactory, AzureStorageOperationOptions options);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public string get_DeploymentId();
    [CompilerGeneratedAttribute]
private void set_DeploymentId(string value);
    [AsyncStateMachineAttribute("Orleans.AzureUtils.OrleansSiloInstanceManager/<GetManager>d__14")]
public static Task`1<OrleansSiloInstanceManager> GetManager(string clusterId, ILoggerFactory loggerFactory, AzureStorageOperationOptions options);
    public SiloInstanceTableEntry CreateTableVersionEntry(int tableVersion);
    public void RegisterSiloInstance(SiloInstanceTableEntry entry);
    public Task`1<string> UnregisterSiloInstance(SiloInstanceTableEntry entry);
    public Task`1<string> ActivateSiloInstance(SiloInstanceTableEntry entry);
    private static Uri ConvertToGatewayUri(SiloInstanceTableEntry gateway);
    [AsyncStateMachineAttribute("Orleans.AzureUtils.OrleansSiloInstanceManager/<FindAllGatewayProxyEndpoints>d__20")]
public Task`1<IList`1<Uri>> FindAllGatewayProxyEndpoints();
    [AsyncStateMachineAttribute("Orleans.AzureUtils.OrleansSiloInstanceManager/<DumpSiloInstanceTable>d__21")]
public Task`1<string> DumpSiloInstanceTable();
    internal Task`1<string> MergeTableEntryAsync(SiloInstanceTableEntry data);
    internal Task`1<ValueTuple`2<SiloInstanceTableEntry, string>> ReadSingleTableEntryAsync(string partitionKey, string rowKey);
    [AsyncStateMachineAttribute("Orleans.AzureUtils.OrleansSiloInstanceManager/<DeleteTableEntries>d__24")]
internal Task`1<int> DeleteTableEntries(string clusterId);
    [AsyncStateMachineAttribute("Orleans.AzureUtils.OrleansSiloInstanceManager/<CleanupDefunctSiloEntries>d__25")]
public Task CleanupDefunctSiloEntries(DateTimeOffset beforeDate);
    [AsyncStateMachineAttribute("Orleans.AzureUtils.OrleansSiloInstanceManager/<DeleteEntriesBatch>d__26")]
private Task DeleteEntriesBatch(List`1<ValueTuple`2<SiloInstanceTableEntry, string>> entriesList);
    [AsyncStateMachineAttribute("Orleans.AzureUtils.OrleansSiloInstanceManager/<FindSiloEntryAndTableVersionRow>d__27")]
internal Task`1<List`1<ValueTuple`2<SiloInstanceTableEntry, string>>> FindSiloEntryAndTableVersionRow(SiloAddress siloAddress);
    [AsyncStateMachineAttribute("Orleans.AzureUtils.OrleansSiloInstanceManager/<FindAllSiloEntries>d__28")]
internal Task`1<List`1<ValueTuple`2<SiloInstanceTableEntry, string>>> FindAllSiloEntries();
    [AsyncStateMachineAttribute("Orleans.AzureUtils.OrleansSiloInstanceManager/<TryCreateTableVersionEntryAsync>d__29")]
internal Task`1<bool> TryCreateTableVersionEntryAsync();
    [AsyncStateMachineAttribute("Orleans.AzureUtils.OrleansSiloInstanceManager/<InsertSiloEntryConditionally>d__30")]
internal Task`1<bool> InsertSiloEntryConditionally(SiloInstanceTableEntry siloEntry, SiloInstanceTableEntry tableVersionEntry, string tableVersionEtag);
    [AsyncStateMachineAttribute("Orleans.AzureUtils.OrleansSiloInstanceManager/<UpdateSiloEntryConditionally>d__31")]
internal Task`1<bool> UpdateSiloEntryConditionally(SiloInstanceTableEntry siloEntry, string entryEtag, SiloInstanceTableEntry tableVersionEntry, string versionEtag);
}
internal class Orleans.AzureUtils.SiloInstanceTableEntry : object {
    [CompilerGeneratedAttribute]
private string <DeploymentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Generation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyPort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiloName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstanceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UpdateZone>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FaultZone>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SuspectingSilos>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SuspectingTimes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IAmAliveTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MembershipVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PartitionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RowKey>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private ETag <ETag>k__BackingField;
    internal static string TABLE_VERSION_ROW;
    internal static char Seperator;
    public string DeploymentId { get; public set; }
    public string Address { get; public set; }
    public string Port { get; public set; }
    public string Generation { get; public set; }
    public string HostName { get; public set; }
    public string Status { get; public set; }
    public string ProxyPort { get; public set; }
    public string RoleName { get; public set; }
    public string SiloName { get; public set; }
    public string InstanceName { get; public set; }
    public string UpdateZone { get; public set; }
    public string FaultZone { get; public set; }
    public string SuspectingSilos { get; public set; }
    public string SuspectingTimes { get; public set; }
    public string StartTime { get; public set; }
    public string IAmAliveTime { get; public set; }
    public string MembershipVersion { get; public set; }
    public string PartitionKey { get; public set; }
    public string RowKey { get; public set; }
    public Nullable`1<DateTimeOffset> Timestamp { get; public set; }
    public ETag ETag { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DeploymentId();
    [CompilerGeneratedAttribute]
public void set_DeploymentId(string value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public string get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(string value);
    [CompilerGeneratedAttribute]
public string get_Generation();
    [CompilerGeneratedAttribute]
public void set_Generation(string value);
    [CompilerGeneratedAttribute]
public string get_HostName();
    [CompilerGeneratedAttribute]
public void set_HostName(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_ProxyPort();
    [CompilerGeneratedAttribute]
public void set_ProxyPort(string value);
    [CompilerGeneratedAttribute]
public string get_RoleName();
    [CompilerGeneratedAttribute]
public void set_RoleName(string value);
    [CompilerGeneratedAttribute]
public string get_SiloName();
    [CompilerGeneratedAttribute]
public void set_SiloName(string value);
    [CompilerGeneratedAttribute]
public string get_InstanceName();
    [CompilerGeneratedAttribute]
public void set_InstanceName(string value);
    [CompilerGeneratedAttribute]
public string get_UpdateZone();
    [CompilerGeneratedAttribute]
public void set_UpdateZone(string value);
    [CompilerGeneratedAttribute]
public string get_FaultZone();
    [CompilerGeneratedAttribute]
public void set_FaultZone(string value);
    [CompilerGeneratedAttribute]
public string get_SuspectingSilos();
    [CompilerGeneratedAttribute]
public void set_SuspectingSilos(string value);
    [CompilerGeneratedAttribute]
public string get_SuspectingTimes();
    [CompilerGeneratedAttribute]
public void set_SuspectingTimes(string value);
    [CompilerGeneratedAttribute]
public string get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(string value);
    [CompilerGeneratedAttribute]
public string get_IAmAliveTime();
    [CompilerGeneratedAttribute]
public void set_IAmAliveTime(string value);
    [CompilerGeneratedAttribute]
public string get_MembershipVersion();
    [CompilerGeneratedAttribute]
public void set_MembershipVersion(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PartitionKey();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PartitionKey(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RowKey();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RowKey(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTimeOffset> get_Timestamp();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timestamp(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public sealed virtual ETag get_ETag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ETag(ETag value);
    public static string ConstructRowKey(SiloAddress silo);
    internal static SiloAddress UnpackRowKey(string rowKey);
    public virtual string ToString();
}
public class Orleans.Clustering.AzureStorage.AzureStorageClusteringOptions : AzureStorageOperationOptions {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    public static string DEFAULT_TABLE_NAME;
    public string TableName { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_TableName();
    [CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
}
public class Orleans.Clustering.AzureStorage.AzureStorageClusteringOptionsValidator : AzureStorageOperationOptionsValidator`1<AzureStorageClusteringOptions> {
    public AzureStorageClusteringOptionsValidator(AzureStorageClusteringOptions options, string name);
}
public class Orleans.Clustering.AzureStorage.AzureStorageGatewayOptions : AzureStorageOperationOptions {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    public string TableName { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_TableName();
    [CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
}
public class Orleans.Clustering.AzureStorage.AzureStorageGatewayOptionsValidator : AzureStorageOperationOptionsValidator`1<AzureStorageGatewayOptions> {
    public AzureStorageGatewayOptionsValidator(AzureStorageGatewayOptions options, string name);
}
public class Orleans.Clustering.AzureStorage.AzureStorageOperationOptions : object {
    private TableServiceClient _tableServiceClient;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private AzureStoragePolicyOptions <StoragePolicyOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private TableClientOptions <ClientOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<Task`1<TableServiceClient>> <CreateClient>k__BackingField;
    public string TableName { get; public set; }
    public AzureStoragePolicyOptions StoragePolicyOptions { get; }
    public TableClientOptions ClientOptions { get; public set; }
    internal Func`1<Task`1<TableServiceClient>> CreateClient { get; private set; }
    public TableServiceClient TableServiceClient { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_TableName();
    [CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
    [CompilerGeneratedAttribute]
public AzureStoragePolicyOptions get_StoragePolicyOptions();
    [CompilerGeneratedAttribute]
public TableClientOptions get_ClientOptions();
    [CompilerGeneratedAttribute]
public void set_ClientOptions(TableClientOptions value);
    [CompilerGeneratedAttribute]
internal Func`1<Task`1<TableServiceClient>> get_CreateClient();
    [CompilerGeneratedAttribute]
private void set_CreateClient(Func`1<Task`1<TableServiceClient>> value);
    public TableServiceClient get_TableServiceClient();
    public void set_TableServiceClient(TableServiceClient value);
    [ObsoleteAttribute("Set the TableServiceClient property directly.")]
public void ConfigureTableServiceClient(string connectionString);
    [ObsoleteAttribute("Set the TableServiceClient property directly.")]
public void ConfigureTableServiceClient(Uri serviceUri);
    [ObsoleteAttribute("Set the TableServiceClient property directly.")]
public void ConfigureTableServiceClient(Func`1<Task`1<TableServiceClient>> createClientCallback);
    [ObsoleteAttribute("Set the TableServiceClient property directly.")]
public void ConfigureTableServiceClient(Uri serviceUri, TokenCredential tokenCredential);
    [ObsoleteAttribute("Set the TableServiceClient property directly.")]
public void ConfigureTableServiceClient(Uri serviceUri, AzureSasCredential azureSasCredential);
    [ObsoleteAttribute("Set the TableServiceClient property directly.")]
public void ConfigureTableServiceClient(Uri serviceUri, TableSharedKeyCredential sharedKeyCredential);
    internal void Validate(string name);
    [CompilerGeneratedAttribute]
private Exception <Validate>g__GetException|25_0(string message, Exception inner, <>c__DisplayClass25_0& );
}
public class Orleans.Clustering.AzureStorage.AzureStorageOperationOptionsValidator`1 : object {
    [CompilerGeneratedAttribute]
private TOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public TOptions Options { get; }
    public string Name { get; }
    public AzureStorageOperationOptionsValidator`1(TOptions options, string name);
    [CompilerGeneratedAttribute]
public TOptions get_Options();
    [CompilerGeneratedAttribute]
public string get_Name();
    public virtual void ValidateConfiguration();
}
public class Orleans.Clustering.AzureStorage.AzureStoragePolicyOptions : object {
    private Nullable`1<TimeSpan> creationTimeout;
    private Nullable`1<TimeSpan> operationTimeout;
    [CompilerGeneratedAttribute]
private int <MaxBulkUpdateRows>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxCreationRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxOperationRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <PauseBetweenCreationRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <PauseBetweenOperationRetries>k__BackingField;
    public int MaxBulkUpdateRows { get; public set; }
    public int MaxCreationRetries { get; public set; }
    public int MaxOperationRetries { get; public set; }
    public TimeSpan PauseBetweenCreationRetries { get; public set; }
    public TimeSpan PauseBetweenOperationRetries { get; public set; }
    public TimeSpan CreationTimeout { get; public set; }
    public TimeSpan OperationTimeout { get; public set; }
    [CompilerGeneratedAttribute]
public int get_MaxBulkUpdateRows();
    [CompilerGeneratedAttribute]
public void set_MaxBulkUpdateRows(int value);
    [CompilerGeneratedAttribute]
public int get_MaxCreationRetries();
    [CompilerGeneratedAttribute]
public void set_MaxCreationRetries(int value);
    [CompilerGeneratedAttribute]
public int get_MaxOperationRetries();
    [CompilerGeneratedAttribute]
public void set_MaxOperationRetries(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_PauseBetweenCreationRetries();
    [CompilerGeneratedAttribute]
public void set_PauseBetweenCreationRetries(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_PauseBetweenOperationRetries();
    [CompilerGeneratedAttribute]
public void set_PauseBetweenOperationRetries(TimeSpan value);
    public TimeSpan get_CreationTimeout();
    public void set_CreationTimeout(TimeSpan value);
    public TimeSpan get_OperationTimeout();
    public void set_OperationTimeout(TimeSpan value);
    private static void SetIfValidTimeout(Nullable`1& field, TimeSpan value, string propertyName);
}
internal static class Orleans.Clustering.AzureStorage.AzureTableConstants : object {
    public static string ANY_ETAG;
    public static string PKProperty;
    public static string RKProperty;
    public static int MaxBatchSize;
}
internal class Orleans.Clustering.AzureStorage.AzureTableDataManager`1 : object {
    private AzureStorageOperationOptions options;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private AzureStoragePolicyOptions <StoragePolicyOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private TableClient <Table>k__BackingField;
    public string TableName { get; }
    protected internal ILogger Logger { get; }
    public AzureStoragePolicyOptions StoragePolicyOptions { get; }
    public TableClient Table { get; private set; }
    public AzureTableDataManager`1(AzureStorageOperationOptions options, ILogger logger);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
protected internal ILogger get_Logger();
    [CompilerGeneratedAttribute]
public AzureStoragePolicyOptions get_StoragePolicyOptions();
    [CompilerGeneratedAttribute]
public TableClient get_Table();
    [CompilerGeneratedAttribute]
private void set_Table(TableClient value);
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<InitTableAsync>d__15")]
public Task InitTableAsync();
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<DeleteTableAsync>d__16")]
public Task DeleteTableAsync();
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<ClearTableAsync>d__17")]
public Task ClearTableAsync();
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<CreateTableEntryAsync>d__18")]
public Task`1<string> CreateTableEntryAsync(T data);
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<UpsertTableEntryAsync>d__19")]
public Task`1<string> UpsertTableEntryAsync(T data);
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<InsertTableEntryAsync>d__20")]
public Task`1<ValueTuple`2<bool, string>> InsertTableEntryAsync(T data);
    internal Task`1<string> MergeTableEntryAsync(T data, string eTag);
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<MergeTableEntryAsync>d__22")]
internal Task`1<string> MergeTableEntryAsync(T data, ETag eTag);
    public Task`1<string> UpdateTableEntryAsync(T data, string dataEtag);
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<UpdateTableEntryAsync>d__24")]
public Task`1<string> UpdateTableEntryAsync(T data, ETag dataEtag);
    public Task DeleteTableEntryAsync(T data, string eTag);
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<DeleteTableEntryAsync>d__26")]
public Task DeleteTableEntryAsync(T data, ETag eTag);
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<ReadSingleTableEntryAsync>d__27")]
public Task`1<ValueTuple`2<T, string>> ReadSingleTableEntryAsync(string partitionKey, string rowKey);
    public Task`1<List`1<ValueTuple`2<T, string>>> ReadAllTableEntriesForPartitionAsync(string partitionKey);
    public Task`1<List`1<ValueTuple`2<T, string>>> ReadAllTableEntriesAsync();
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<DeleteTableEntriesAsync>d__30")]
public Task DeleteTableEntriesAsync(List`1<ValueTuple`2<T, string>> collection);
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<ReadTableEntriesAndEtagsAsync>d__31")]
public Task`1<List`1<ValueTuple`2<T, string>>> ReadTableEntriesAndEtagsAsync(string filter);
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<BulkInsertTableEntries>d__32")]
public Task BulkInsertTableEntries(IReadOnlyCollection`1<T> collection);
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<InsertTwoTableEntriesConditionallyAsync>d__33")]
internal Task`1<ValueTuple`2<string, string>> InsertTwoTableEntriesConditionallyAsync(T data1, T data2, string data2Etag);
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<UpdateTwoTableEntriesConditionallyAsync>d__34")]
internal Task`1<ValueTuple`2<string, string>> UpdateTwoTableEntriesConditionallyAsync(T data1, string data1Etag, T data2, string data2Etag);
    [AsyncStateMachineAttribute("Orleans.Clustering.AzureStorage.AzureTableDataManager`1/<GetCloudTableCreationClientAsync>d__35")]
private ValueTask`1<TableServiceClient> GetCloudTableCreationClientAsync();
    private void CheckAlertWriteError(string operation, object data1, string data2, Exception exc);
    private void CheckAlertSlowAccess(DateTime startOperation, string operation);
    [CompilerGeneratedAttribute]
private IEnumerable`1<IEnumerable`1<ValueTuple`2<T, string>>> <ClearTableAsync>b__17_1(IGrouping`2<string, ValueTuple`2<T, string>> partition);
    [CompilerGeneratedAttribute]
private Task <ClearTableAsync>b__17_2(IEnumerable`1<ValueTuple`2<T, string>> batch);
}
internal static class Orleans.Clustering.AzureStorage.AzureTableUtils : object {
    public static string ANY_ETAG;
    public static bool TableStorageDataNotFound(Exception exc);
    private static string ExtractRestErrorCode(Exception exc);
    public static bool EvaluateException(Exception e, HttpStatusCode& httpStatusCode, String& restStatus, bool getRESTErrors);
    public static bool IsRetriableHttpError(HttpStatusCode httpStatusCode, string restStatusCode);
    public static bool IsContentionError(HttpStatusCode httpStatusCode);
    public static bool IsNotFoundError(HttpStatusCode httpStatusCode);
    [GeneratedRegexAttribute("^[A-Za-z][A-Za-z0-9]{2,62}$")]
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.9.8001")]
private static Regex TableNameRegex();
    internal static void ValidateTableName(string tableName);
    public static string SanitizeTableProperty(string key);
    internal static bool AnalyzeReadException(Exception exc, int iteration, string tableName, ILogger logger);
    internal static string PrintStorageException(Exception exception);
    internal static string PointQuery(string partitionKey, string rowKey);
    internal static string RangeQuery(string partitionKey, string minRowKey, string maxRowKey);
}
[ExtensionAttribute]
internal static class Orleans.Clustering.AzureStorage.TableDataManagerInternalExtensions : object {
    [IteratorStateMachineAttribute("Orleans.Clustering.AzureStorage.TableDataManagerInternalExtensions/<ToBatch>d__0`1")]
[ExtensionAttribute]
internal static IEnumerable`1<IEnumerable`1<TItem>> ToBatch(IEnumerable`1<TItem> source, int size);
    [IteratorStateMachineAttribute("Orleans.Clustering.AzureStorage.TableDataManagerInternalExtensions/<Take>d__1`1")]
private static IEnumerable`1<TItem> Take(IEnumerator`1<TItem> source, int size);
}
internal enum Orleans.Clustering.AzureStorage.Utilities.ErrorCode : Enum {
    public int value__;
    public static ErrorCode Runtime;
    public static ErrorCode AzureTableBase;
    public static ErrorCode AzureTable_01;
    public static ErrorCode AzureTable_02;
    public static ErrorCode AzureTable_03;
    public static ErrorCode AzureTable_04;
    public static ErrorCode AzureTable_06;
    public static ErrorCode AzureTable_07;
    public static ErrorCode AzureTable_08;
    public static ErrorCode AzureTable_09;
    public static ErrorCode AzureTable_10;
    public static ErrorCode AzureTable_11;
    public static ErrorCode AzureTable_12;
    public static ErrorCode AzureTable_13;
    public static ErrorCode AzureTable_14;
    public static ErrorCode AzureTable_15;
    public static ErrorCode AzureTable_17;
    public static ErrorCode AzureTable_18;
    public static ErrorCode AzureTable_19;
    public static ErrorCode AzureTable_37;
    public static ErrorCode AzureTable_DataNotFound;
    public static ErrorCode AzureTable_TableNotCreated;
}
internal enum Orleans.Clustering.AzureStorage.Utilities.TableStorageErrorCode : Enum {
    public int value__;
    public static TableStorageErrorCode Runtime;
    public static TableStorageErrorCode AzureTableBase;
    public static TableStorageErrorCode AzureTable_20;
    public static TableStorageErrorCode AzureTable_21;
    public static TableStorageErrorCode AzureTable_22;
    public static TableStorageErrorCode AzureTable_23;
    public static TableStorageErrorCode AzureTable_24;
    public static TableStorageErrorCode AzureTable_25;
    public static TableStorageErrorCode AzureTable_26;
    public static TableStorageErrorCode AzureTable_32;
    public static TableStorageErrorCode AzureTable_33;
    public static TableStorageErrorCode AzureTable_60;
    public static TableStorageErrorCode AzureTable_61;
    public static TableStorageErrorCode AzureTable_65;
    public static TableStorageErrorCode AzureTable_66;
}
[ExtensionAttribute]
public static class Orleans.Hosting.AzureTableClusteringExtensions : object {
    [ExtensionAttribute]
public static ISiloBuilder UseAzureStorageClustering(ISiloBuilder builder, Action`1<AzureStorageClusteringOptions> configureOptions);
    [ExtensionAttribute]
public static ISiloBuilder UseAzureStorageClustering(ISiloBuilder builder, Action`1<OptionsBuilder`1<AzureStorageClusteringOptions>> configureOptions);
    [ExtensionAttribute]
public static IClientBuilder UseAzureStorageClustering(IClientBuilder builder, Action`1<AzureStorageGatewayOptions> configureOptions);
    [ExtensionAttribute]
public static IClientBuilder UseAzureStorageClustering(IClientBuilder builder, Action`1<OptionsBuilder`1<AzureStorageGatewayOptions>> configureOptions);
}
internal class Orleans.Hosting.AzureTableStorageClusteringProviderBuilder : object {
    public sealed virtual void Configure(ISiloBuilder builder, string name, IConfigurationSection configurationSection);
    public sealed virtual void Configure(IClientBuilder builder, string name, IConfigurationSection configurationSection);
}
internal class Orleans.Runtime.MembershipService.AzureBasedMembershipTable : object {
    private ILogger logger;
    private ILoggerFactory loggerFactory;
    private OrleansSiloInstanceManager tableManager;
    private AzureStorageClusteringOptions options;
    private string clusterId;
    public AzureBasedMembershipTable(ILoggerFactory loggerFactory, IOptions`1<AzureStorageClusteringOptions> clusteringOptions, IOptions`1<ClusterOptions> clusterOptions);
    [AsyncStateMachineAttribute("Orleans.Runtime.MembershipService.AzureBasedMembershipTable/<InitializeMembershipTable>d__6")]
public sealed virtual Task InitializeMembershipTable(bool tryInitTableVersion);
    public sealed virtual Task DeleteMembershipTableEntries(string clusterId);
    public sealed virtual Task CleanupDefunctSiloEntries(DateTimeOffset beforeDate);
    [AsyncStateMachineAttribute("Orleans.Runtime.MembershipService.AzureBasedMembershipTable/<ReadRow>d__9")]
public sealed virtual Task`1<MembershipTableData> ReadRow(SiloAddress key);
    [AsyncStateMachineAttribute("Orleans.Runtime.MembershipService.AzureBasedMembershipTable/<ReadAll>d__10")]
public sealed virtual Task`1<MembershipTableData> ReadAll();
    [AsyncStateMachineAttribute("Orleans.Runtime.MembershipService.AzureBasedMembershipTable/<InsertRow>d__11")]
public sealed virtual Task`1<bool> InsertRow(MembershipEntry entry, TableVersion tableVersion);
    [AsyncStateMachineAttribute("Orleans.Runtime.MembershipService.AzureBasedMembershipTable/<UpdateRow>d__12")]
public sealed virtual Task`1<bool> UpdateRow(MembershipEntry entry, string etag, TableVersion tableVersion);
    [AsyncStateMachineAttribute("Orleans.Runtime.MembershipService.AzureBasedMembershipTable/<UpdateIAmAlive>d__13")]
public sealed virtual Task UpdateIAmAlive(MembershipEntry entry);
    private MembershipTableData Convert(List`1<ValueTuple`2<SiloInstanceTableEntry, string>> entries);
    private static MembershipEntry Parse(SiloInstanceTableEntry tableEntry);
    private static SiloInstanceTableEntry Convert(MembershipEntry memEntry, string deploymentId);
    private static SiloInstanceTableEntry ConvertPartial(MembershipEntry memEntry, string deploymentId);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.OrleansClusteringAzureStorage.Metadata_OrleansClusteringAzureStorage : TypeManifestProviderBase {
    protected virtual void ConfigureInner(TypeManifestOptions config);
}
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.9.8001")]
internal class System.Text.RegularExpressions.Generated.<RegexGenerator_g>F74B1AE921BCEFE4BA601AA541C7A23B1CA9711EA81E8FE504B5B6446748E035A__TableNameRegex_0 : Regex {
    [NullableAttribute("1")]
internal static <RegexGenerator_g>F74B1AE921BCEFE4BA601AA541C7A23B1CA9711EA81E8FE504B5B6446748E035A__TableNameRegex_0 Instance;
    private static <RegexGenerator_g>F74B1AE921BCEFE4BA601AA541C7A23B1CA9711EA81E8FE504B5B6446748E035A__TableNameRegex_0();
}
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.9.8001")]
internal static class System.Text.RegularExpressions.Generated.<RegexGenerator_g>F74B1AE921BCEFE4BA601AA541C7A23B1CA9711EA81E8FE504B5B6446748E035A__Utilities : object {
    internal static TimeSpan s_defaultTimeout;
    internal static bool s_hasTimeout;
    private static <RegexGenerator_g>F74B1AE921BCEFE4BA601AA541C7A23B1CA9711EA81E8FE504B5B6446748E035A__Utilities();
}
