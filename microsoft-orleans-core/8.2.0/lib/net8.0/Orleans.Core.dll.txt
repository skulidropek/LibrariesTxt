internal class Microsoft.Extensions.Hosting.OrleansBuilderMarker : object {
    [CompilerGeneratedAttribute]
private object <BuilderInstance>k__BackingField;
    public object BuilderInstance { get; }
    public OrleansBuilderMarker(object builderInstance);
    [CompilerGeneratedAttribute]
public object get_BuilderInstance();
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Hosting.OrleansClientGenericHostExtensions : object {
    private static Type MarkerType;
    private static OrleansClientGenericHostExtensions();
    [ExtensionAttribute]
public static HostApplicationBuilder UseOrleansClient(HostApplicationBuilder hostAppBuilder);
    [ExtensionAttribute]
public static HostApplicationBuilder UseOrleansClient(HostApplicationBuilder hostAppBuilder, Action`1<IClientBuilder> configureDelegate);
    [ExtensionAttribute]
public static IHostApplicationBuilder UseOrleansClient(IHostApplicationBuilder hostAppBuilder);
    [ExtensionAttribute]
public static IHostApplicationBuilder UseOrleansClient(IHostApplicationBuilder hostAppBuilder, Action`1<IClientBuilder> configureDelegate);
    [ExtensionAttribute]
public static IHostBuilder UseOrleansClient(IHostBuilder hostBuilder);
    [ExtensionAttribute]
public static IHostBuilder UseOrleansClient(IHostBuilder hostBuilder, Action`1<IClientBuilder> configureDelegate);
    [ExtensionAttribute]
public static IHostBuilder UseOrleansClient(IHostBuilder hostBuilder, Action`2<HostBuilderContext, IClientBuilder> configureDelegate);
    [ExtensionAttribute]
public static IServiceCollection AddOrleansClient(IServiceCollection services, Action`1<IClientBuilder> configureDelegate);
    [ExtensionAttribute]
public static IServiceCollection AddOrleansClient(IServiceCollection services, IConfiguration configuration, Action`1<IClientBuilder> configureDelegate);
    private static IClientBuilder AddOrleansClient(IServiceCollection services, IConfiguration configuration);
    private static OrleansConfigurationException GetOrleansSiloAddedException();
}
internal class Orleans.AsyncLock : object {
    private SemaphoreSlim semaphore;
    public ValueTask`1<IDisposable> LockAsync();
    [AsyncStateMachineAttribute("Orleans.AsyncLock/<<LockAsync>g__LockAsyncInternal|2_0>d")]
[CompilerGeneratedAttribute]
internal static ValueTask`1<IDisposable> <LockAsync>g__LockAsyncInternal|2_0(AsyncLock self, Task waitTask);
}
public class Orleans.AsyncSerialExecutor : object {
    private AsyncSerialExecutor`1<bool> executor;
    public Task AddNext(Func`1<Task> func);
    [AsyncStateMachineAttribute("Orleans.AsyncSerialExecutor/<Wrap>d__2")]
private Task`1<bool> Wrap(Func`1<Task> func);
}
public class Orleans.AsyncSerialExecutor`1 : object {
    private ConcurrentQueue`1<Tuple`2<TaskCompletionSource`1<TResult>, Func`1<Task`1<TResult>>>> actions;
    private InterlockedExchangeLock<TResult> locker;
    public Task`1<TResult> AddNext(Func`1<Task`1<TResult>> func);
    [AsyncStateMachineAttribute("Orleans.AsyncSerialExecutor`1/<ExecuteNext>d__4")]
private Task ExecuteNext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Orleans.BatchWorker : object {
    private object lockable;
    private Nullable`1<DateTime> scheduledNotify;
    [NullableAttribute("2")]
private Task currentWorkCycle;
    private bool moreWork;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private TaskCompletionSource`1<Task> nextWorkCyclePromise;
    [NullableAttribute("2")]
private Task nextWorkCycle;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    protected CancellationToken CancellationToken { get; protected set; }
    protected abstract virtual Task Work();
    [CompilerGeneratedAttribute]
protected CancellationToken get_CancellationToken();
    [CompilerGeneratedAttribute]
protected void set_CancellationToken(CancellationToken value);
    public void Notify();
    public void Notify(DateTime utcTime);
    [AsyncStateMachineAttribute("Orleans.BatchWorker/<ScheduleNotify>d__13")]
private Task ScheduleNotify(DateTime time, DateTime now);
    private Task Start();
    private void CheckForMoreWork();
    public bool IsIdle();
    public Task WaitForCurrentWorkToBeServiced();
    private Task CreateNextWorkCyclePromise();
    public Task NotifyAndWaitForWorkToBeServiced();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Orleans.BatchWorkerFromDelegate : BatchWorker {
    private Func`1<Task> work;
    public BatchWorkerFromDelegate(Func`1<Task> work, CancellationToken cancellationToken);
    protected virtual Task Work();
}
internal class Orleans.ClientGrainContext : object {
    private object _lockObj;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<Type, ValueTuple`2<object, IAddressable>> _extensions;
    private ConcurrentDictionary`2<Type, object> _components;
    private OutsideRuntimeClient _runtimeClient;
    private GrainReference _grainReference;
    public GrainReference GrainReference { get; }
    public GrainId GrainId { get; }
    public object GrainInstance { get; }
    public ActivationId ActivationId { get; }
    public GrainAddress Address { get; }
    public IServiceProvider ActivationServices { get; }
    public IGrainLifecycle ObservableLifecycle { get; }
    private IGrainContext Orleans.Runtime.IGrainContextAccessor.GrainContext { get; }
    public IWorkItemScheduler Scheduler { get; }
    public bool IsExemptFromCollection { get; }
    public PlacementStrategy PlacementStrategy { get; }
    public Task Deactivated { get; }
    public ClientGrainContext(OutsideRuntimeClient runtimeClient);
    public sealed virtual GrainReference get_GrainReference();
    public sealed virtual GrainId get_GrainId();
    public sealed virtual object get_GrainInstance();
    public sealed virtual ActivationId get_ActivationId();
    public sealed virtual GrainAddress get_Address();
    public sealed virtual IServiceProvider get_ActivationServices();
    public sealed virtual IGrainLifecycle get_ObservableLifecycle();
    private sealed virtual override IGrainContext Orleans.Runtime.IGrainContextAccessor.get_GrainContext();
    public sealed virtual IWorkItemScheduler get_Scheduler();
    public bool get_IsExemptFromCollection();
    public PlacementStrategy get_PlacementStrategy();
    public sealed virtual bool Equals(IGrainContext other);
    public sealed virtual TComponent GetComponent();
    public sealed virtual TTarget GetTarget();
    public sealed virtual void SetComponent(TComponent instance);
    public sealed virtual ValueTuple`2<TExtension, TExtensionInterface> GetOrSetExtension(Func`1<TExtension> newExtensionFunc);
    private bool TryGetExtension(ValueTuple`2& result);
    private bool TryGetExtension(TExtensionInterface& result);
    public sealed virtual TExtensionInterface GetExtension();
    public sealed virtual void ReceiveMessage(object message);
    public sealed virtual void Activate(Dictionary`2<string, object> requestContext, CancellationToken cancellationToken);
    public sealed virtual void Deactivate(DeactivationReason deactivationReason, CancellationToken cancellationToken);
    public sealed virtual void Rehydrate(IRehydrationContext context);
    public sealed virtual void Migrate(Dictionary`2<string, object> requestContext, CancellationToken cancellationToken);
    public sealed virtual Task get_Deactivated();
}
internal class Orleans.ClientObservers.ClientGatewayObserver : ClientObserver {
    private static IdSpan ScopedId;
    private GatewayManager gatewayManager;
    public ClientGatewayObserver(GatewayManager gatewayManager);
    private static ClientGatewayObserver();
    public sealed virtual void StopSendingToGateway(SiloAddress gateway);
    internal virtual ObserverGrainId GetObserverGrainId(ClientGrainId clientId);
    internal static IClientGatewayObserver GetObserver(IInternalGrainFactory grainFactory, ClientGrainId clientId);
}
internal abstract class Orleans.ClientObservers.ClientObserver : object {
    internal abstract virtual ObserverGrainId GetObserverGrainId(ClientGrainId clientId);
}
internal interface Orleans.ClientObservers.IClientGatewayObserver {
    public abstract virtual void StopSendingToGateway(SiloAddress gateway);
}
internal class Orleans.ClientOptionsLogger : OptionsLogger {
    private static int ClientOptionLoggerLifeCycleRing;
    public ClientOptionsLogger(ILogger`1<ClientOptionsLogger> logger, IServiceProvider services);
    public sealed virtual void Participate(IClusterClientLifecycle lifecycle);
    public Task OnStart(CancellationToken token);
}
internal class Orleans.ClusterClient : object {
    private OutsideRuntimeClient _runtimeClient;
    private ILogger`1<ClusterClient> _logger;
    private ClusterClientLifecycle _clusterClientLifecycle;
    public IServiceProvider ServiceProvider { get; }
    public ClusterClient(IServiceProvider serviceProvider, OutsideRuntimeClient runtimeClient, ILoggerFactory loggerFactory, IOptions`1<ClientMessagingOptions> clientMessagingOptions);
    public sealed virtual IServiceProvider get_ServiceProvider();
    [AsyncStateMachineAttribute("Orleans.ClusterClient/<StartAsync>d__6")]
public sealed virtual Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Orleans.ClusterClient/<StopAsync>d__7")]
public sealed virtual Task StopAsync(CancellationToken cancellationToken);
    public sealed virtual TGrainInterface GetGrain(Guid primaryKey, string grainClassNamePrefix);
    public sealed virtual TGrainInterface GetGrain(long primaryKey, string grainClassNamePrefix);
    public sealed virtual TGrainInterface GetGrain(string primaryKey, string grainClassNamePrefix);
    public sealed virtual TGrainInterface GetGrain(Guid primaryKey, string keyExtension, string grainClassNamePrefix);
    public sealed virtual TGrainInterface GetGrain(long primaryKey, string keyExtension, string grainClassNamePrefix);
    public sealed virtual TGrainObserverInterface CreateObjectReference(IGrainObserver obj);
    public sealed virtual void DeleteObjectReference(IGrainObserver obj);
    public sealed virtual TGrainObserverInterface CreateObjectReference(IAddressable obj);
    private sealed virtual override TGrainInterface Orleans.IInternalGrainFactory.GetSystemTarget(GrainType grainType, SiloAddress destination);
    public sealed virtual TGrainInterface GetSystemTarget(GrainId grainId);
    private sealed virtual override TGrainInterface Orleans.IInternalGrainFactory.Cast(IAddressable grain);
    private sealed virtual override TGrainInterface Orleans.IGrainFactory.GetGrain(GrainId grainId);
    private sealed virtual override IAddressable Orleans.IGrainFactory.GetGrain(GrainId grainId);
    public sealed virtual IGrain GetGrain(Type grainInterfaceType, string grainPrimaryKey);
    public sealed virtual IGrain GetGrain(Type grainInterfaceType, Guid grainPrimaryKey);
    public sealed virtual IGrain GetGrain(Type grainInterfaceType, long grainPrimaryKey);
    public sealed virtual IGrain GetGrain(Type grainInterfaceType, Guid grainPrimaryKey, string keyExtension);
    public sealed virtual IGrain GetGrain(Type grainInterfaceType, long grainPrimaryKey, string keyExtension);
    public sealed virtual object Cast(IAddressable grain, Type outputGrainInterfaceType);
    public sealed virtual IAddressable GetGrain(GrainId grainId, GrainInterfaceType interfaceType);
    [CompilerGeneratedAttribute]
internal static void <.ctor>g__ValidateSystemConfiguration|3_0(IServiceProvider serviceProvider);
}
internal class Orleans.ClusterClientLifecycle : LifecycleSubject {
    public ClusterClientLifecycle(ILogger logger);
}
internal static class Orleans.CodeGeneration.GrainInterfaceUtils : object {
    public static MethodInfo[] GetMethods(Type grainType, bool bAllMethods);
    public static int GetGrainClassTypeCode(Type grainClass);
    [CompilerGeneratedAttribute]
internal static void <GetMethods>g__GetMethodsImpl|0_0(Type grainType, Type serviceType, List`1<MethodInfo> methodInfos);
    [CompilerGeneratedAttribute]
internal static List`1<Type> <GetMethods>g__GetGrainInterfaces|0_1(Type type);
    [CompilerGeneratedAttribute]
internal static bool <GetMethods>g__IsGrainInterface|0_2(Type t);
}
[AttributeUsageAttribute("4")]
public class Orleans.CollectionAgeLimitAttribute : Attribute {
    private Nullable`1<TimeSpan> _value;
    public static TimeSpan MinAgeLimit;
    [CompilerGeneratedAttribute]
private double <Days>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Hours>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Minutes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AlwaysActive>k__BackingField;
    public double Days { get; public set; }
    public double Hours { get; public set; }
    public double Minutes { get; public set; }
    public bool AlwaysActive { get; public set; }
    public TimeSpan AgeLimit { get; }
    public CollectionAgeLimitAttribute(string inactivityPeriod);
    private static CollectionAgeLimitAttribute();
    [CompilerGeneratedAttribute]
public double get_Days();
    [CompilerGeneratedAttribute]
public void set_Days(double value);
    [CompilerGeneratedAttribute]
public double get_Hours();
    [CompilerGeneratedAttribute]
public void set_Hours(double value);
    [CompilerGeneratedAttribute]
public double get_Minutes();
    [CompilerGeneratedAttribute]
public void set_Minutes(double value);
    [CompilerGeneratedAttribute]
public bool get_AlwaysActive();
    [CompilerGeneratedAttribute]
public void set_AlwaysActive(bool value);
    public TimeSpan get_AgeLimit();
    public sealed virtual void Populate(IServiceProvider services, Type grainClass, GrainType grainType, Dictionary`2<string, string> properties);
    private TimeSpan CalculateValue();
}
public class Orleans.Configuration.ClientConnectionOptions : object {
    private ConnectionBuilderDelegates delegates;
    public void ConfigureConnection(Action`1<IConnectionBuilder> configure);
    internal void ConfigureConnectionBuilder(IConnectionBuilder builder);
}
public class Orleans.Configuration.ClientMessagingOptions : MessagingOptions {
    [CompilerGeneratedAttribute]
private int <ClientSenderBuckets>k__BackingField;
    public static int DEFAULT_CLIENT_SENDER_BUCKETS;
    [CompilerGeneratedAttribute]
private AddressFamily <PreferredFamily>k__BackingField;
    public static AddressFamily DEFAULT_PREFERRED_FAMILY;
    [CompilerGeneratedAttribute]
private string <NetworkInterfaceName>k__BackingField;
    [CompilerGeneratedAttribute]
private IPAddress <LocalAddress>k__BackingField;
    public int ClientSenderBuckets { get; public set; }
    public AddressFamily PreferredFamily { get; public set; }
    public string NetworkInterfaceName { get; public set; }
    public IPAddress LocalAddress { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ClientSenderBuckets();
    [CompilerGeneratedAttribute]
public void set_ClientSenderBuckets(int value);
    [CompilerGeneratedAttribute]
public AddressFamily get_PreferredFamily();
    [CompilerGeneratedAttribute]
public void set_PreferredFamily(AddressFamily value);
    [CompilerGeneratedAttribute]
public string get_NetworkInterfaceName();
    [CompilerGeneratedAttribute]
public void set_NetworkInterfaceName(string value);
    [CompilerGeneratedAttribute]
public IPAddress get_LocalAddress();
    [CompilerGeneratedAttribute]
public void set_LocalAddress(IPAddress value);
}
public class Orleans.Configuration.ClusterMembershipOptions : object {
    [CompilerGeneratedAttribute]
private int <NumMissedTableIAmAliveLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LivenessEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ProbeTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TableRefreshTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <DeathVoteExpirationTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <IAmAliveTablePublishTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <MaxJoinAttemptTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseLivenessGossip>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumProbedSilos>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumMissedProbesLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumVotesForDeathDeclaration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <DefunctSiloExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <DefunctSiloCleanupPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <LocalHealthDegradationMonitoringPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExtendProbeTimeoutDuringDegradation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableIndirectProbes>k__BackingField;
    public int NumMissedTableIAmAliveLimit { get; public set; }
    public bool LivenessEnabled { get; public set; }
    public TimeSpan ProbeTimeout { get; public set; }
    public TimeSpan TableRefreshTimeout { get; public set; }
    public TimeSpan DeathVoteExpirationTimeout { get; public set; }
    public TimeSpan IAmAliveTablePublishTimeout { get; public set; }
    public TimeSpan MaxJoinAttemptTime { get; public set; }
    public bool UseLivenessGossip { get; public set; }
    public int NumProbedSilos { get; public set; }
    public int NumMissedProbesLimit { get; public set; }
    public int NumVotesForDeathDeclaration { get; public set; }
    public TimeSpan DefunctSiloExpiration { get; public set; }
    public Nullable`1<TimeSpan> DefunctSiloCleanupPeriod { get; public set; }
    internal TimeSpan AllowedIAmAliveMissPeriod { get; }
    internal static TimeSpan ClusteringShutdownGracePeriod { get; }
    public TimeSpan LocalHealthDegradationMonitoringPeriod { get; public set; }
    public bool ExtendProbeTimeoutDuringDegradation { get; public set; }
    public bool EnableIndirectProbes { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NumMissedTableIAmAliveLimit();
    [CompilerGeneratedAttribute]
public void set_NumMissedTableIAmAliveLimit(int value);
    [CompilerGeneratedAttribute]
public bool get_LivenessEnabled();
    [CompilerGeneratedAttribute]
public void set_LivenessEnabled(bool value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ProbeTimeout();
    [CompilerGeneratedAttribute]
public void set_ProbeTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_TableRefreshTimeout();
    [CompilerGeneratedAttribute]
public void set_TableRefreshTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_DeathVoteExpirationTimeout();
    [CompilerGeneratedAttribute]
public void set_DeathVoteExpirationTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_IAmAliveTablePublishTimeout();
    [CompilerGeneratedAttribute]
public void set_IAmAliveTablePublishTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_MaxJoinAttemptTime();
    [CompilerGeneratedAttribute]
public void set_MaxJoinAttemptTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_UseLivenessGossip();
    [CompilerGeneratedAttribute]
public void set_UseLivenessGossip(bool value);
    [CompilerGeneratedAttribute]
public int get_NumProbedSilos();
    [CompilerGeneratedAttribute]
public void set_NumProbedSilos(int value);
    [CompilerGeneratedAttribute]
public int get_NumMissedProbesLimit();
    [CompilerGeneratedAttribute]
public void set_NumMissedProbesLimit(int value);
    [CompilerGeneratedAttribute]
public int get_NumVotesForDeathDeclaration();
    [CompilerGeneratedAttribute]
public void set_NumVotesForDeathDeclaration(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_DefunctSiloExpiration();
    [CompilerGeneratedAttribute]
public void set_DefunctSiloExpiration(TimeSpan value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_DefunctSiloCleanupPeriod();
    [CompilerGeneratedAttribute]
public void set_DefunctSiloCleanupPeriod(Nullable`1<TimeSpan> value);
    internal TimeSpan get_AllowedIAmAliveMissPeriod();
    internal static TimeSpan get_ClusteringShutdownGracePeriod();
    [CompilerGeneratedAttribute]
public TimeSpan get_LocalHealthDegradationMonitoringPeriod();
    [CompilerGeneratedAttribute]
public void set_LocalHealthDegradationMonitoringPeriod(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_ExtendProbeTimeoutDuringDegradation();
    [CompilerGeneratedAttribute]
public void set_ExtendProbeTimeoutDuringDegradation(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableIndirectProbes();
    [CompilerGeneratedAttribute]
public void set_EnableIndirectProbes(bool value);
}
public class Orleans.Configuration.ClusterOptions : object {
    public static string DefaultClusterId;
    public static string DefaultServiceId;
    internal static string DevelopmentClusterId;
    internal static string DevelopmentServiceId;
    [CompilerGeneratedAttribute]
private string <ClusterId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceId>k__BackingField;
    public string ClusterId { get; public set; }
    public string ServiceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClusterId();
    [CompilerGeneratedAttribute]
public void set_ClusterId(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceId();
    [CompilerGeneratedAttribute]
public void set_ServiceId(string value);
}
public class Orleans.Configuration.ClusterOptionsValidator : object {
    private ClusterOptions options;
    public ClusterOptionsValidator(IOptions`1<ClusterOptions> options);
    public sealed virtual void ValidateConfiguration();
}
internal class Orleans.Configuration.ConnectionBuilderDelegates : object {
    private List`1<Action`1<IConnectionBuilder>> configurationDelegates;
    public void Add(Action`1<IConnectionBuilder> configure);
    public void Invoke(IConnectionBuilder builder);
}
public class Orleans.Configuration.ConnectionOptions : object {
    [CompilerGeneratedAttribute]
private NetworkProtocolVersion <ProtocolVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ConnectionsPerEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ConnectionRetryDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <OpenConnectionTimeout>k__BackingField;
    public static TimeSpan DEFAULT_OPENCONNECTION_TIMEOUT;
    public NetworkProtocolVersion ProtocolVersion { get; public set; }
    public int ConnectionsPerEndpoint { get; public set; }
    public TimeSpan ConnectionRetryDelay { get; public set; }
    public TimeSpan OpenConnectionTimeout { get; public set; }
    private static ConnectionOptions();
    [CompilerGeneratedAttribute]
public NetworkProtocolVersion get_ProtocolVersion();
    [CompilerGeneratedAttribute]
public void set_ProtocolVersion(NetworkProtocolVersion value);
    [CompilerGeneratedAttribute]
public int get_ConnectionsPerEndpoint();
    [CompilerGeneratedAttribute]
public void set_ConnectionsPerEndpoint(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ConnectionRetryDelay();
    [CompilerGeneratedAttribute]
public void set_ConnectionRetryDelay(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_OpenConnectionTimeout();
    [CompilerGeneratedAttribute]
public void set_OpenConnectionTimeout(TimeSpan value);
}
internal class Orleans.Configuration.DefaultGrainTypeOptionsProvider : object {
    private TypeManifestOptions _typeManifestOptions;
    public DefaultGrainTypeOptionsProvider(IOptions`1<TypeManifestOptions> typeManifestOptions);
    public sealed virtual void Configure(GrainTypeOptions options);
    [CompilerGeneratedAttribute]
internal static bool <Configure>g__IsImplementationType|2_0(Type type);
}
public class Orleans.Configuration.GatewayOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <GatewayListRefreshPeriod>k__BackingField;
    public static int DEFAULT_PREFERED_GATEWAY_INDEX;
    [CompilerGeneratedAttribute]
private int <PreferredGatewayIndex>k__BackingField;
    public TimeSpan GatewayListRefreshPeriod { get; public set; }
    public int PreferredGatewayIndex { get; public set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_GatewayListRefreshPeriod();
    [CompilerGeneratedAttribute]
public void set_GatewayListRefreshPeriod(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_PreferredGatewayIndex();
    [CompilerGeneratedAttribute]
public void set_PreferredGatewayIndex(int value);
}
public class Orleans.Configuration.GrainTypeOptions : object {
    [CompilerGeneratedAttribute]
private HashSet`1<Type> <Classes>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<Type> <Interfaces>k__BackingField;
    public HashSet`1<Type> Classes { get; }
    public HashSet`1<Type> Interfaces { get; }
    [CompilerGeneratedAttribute]
public HashSet`1<Type> get_Classes();
    [CompilerGeneratedAttribute]
public HashSet`1<Type> get_Interfaces();
}
public class Orleans.Configuration.GrainTypeOptionsValidator : object {
    private IOptions`1<GrainTypeOptions> _options;
    private IServiceProvider _serviceProvider;
    public GrainTypeOptionsValidator(IOptions`1<GrainTypeOptions> options, IServiceProvider serviceProvider);
    public sealed virtual void ValidateConfiguration();
}
public class Orleans.Configuration.GrainVersioningOptions : object {
    [CompilerGeneratedAttribute]
private string <DefaultCompatibilityStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultVersionSelectorStrategy>k__BackingField;
    public string DefaultCompatibilityStrategy { get; public set; }
    public string DefaultVersionSelectorStrategy { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DefaultCompatibilityStrategy();
    [CompilerGeneratedAttribute]
public void set_DefaultCompatibilityStrategy(string value);
    [CompilerGeneratedAttribute]
public string get_DefaultVersionSelectorStrategy();
    [CompilerGeneratedAttribute]
public void set_DefaultVersionSelectorStrategy(string value);
}
[ExtensionAttribute]
public static class Orleans.Configuration.Internal.ServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static void AddFromExisting(IServiceCollection services);
    [ExtensionAttribute]
public static void AddFromExisting(IServiceCollection services, Type service, Type implementation);
    [ExtensionAttribute]
public static void TryAddFromExisting(IServiceCollection services);
}
public class Orleans.Configuration.LoadSheddingOptions : object {
    internal static int DefaultCpuThreshold;
    internal static int DefaultMemoryThreshold;
    [CompilerGeneratedAttribute]
private bool <LoadSheddingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CpuThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MemoryThreshold>k__BackingField;
    public bool LoadSheddingEnabled { get; public set; }
    [ObsoleteAttribute("Use CpuThreshold instead.", "True")]
public int LoadSheddingLimit { get; public set; }
    public int CpuThreshold { get; public set; }
    public int MemoryThreshold { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_LoadSheddingEnabled();
    [CompilerGeneratedAttribute]
public void set_LoadSheddingEnabled(bool value);
    public int get_LoadSheddingLimit();
    public void set_LoadSheddingLimit(int value);
    [CompilerGeneratedAttribute]
public int get_CpuThreshold();
    [CompilerGeneratedAttribute]
public void set_CpuThreshold(int value);
    [CompilerGeneratedAttribute]
public int get_MemoryThreshold();
    [CompilerGeneratedAttribute]
public void set_MemoryThreshold(int value);
}
public abstract class Orleans.Configuration.MessagingOptions : object {
    private TimeSpan _responseTimeout;
    [CompilerGeneratedAttribute]
private TimeSpan <ResponseTimeoutWithDebugger>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DropExpiredMessages>k__BackingField;
    internal static short DEFAULT_MAX_MESSAGE_SEND_RETRIES;
    [CompilerGeneratedAttribute]
private int <MaxMessageHeaderSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxMessageBodySize>k__BackingField;
    public TimeSpan ResponseTimeout { get; public set; }
    public TimeSpan ResponseTimeoutWithDebugger { get; public set; }
    public bool DropExpiredMessages { get; public set; }
    public int MaxMessageHeaderSize { get; public set; }
    public int MaxMessageBodySize { get; public set; }
    public TimeSpan get_ResponseTimeout();
    public void set_ResponseTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ResponseTimeoutWithDebugger();
    [CompilerGeneratedAttribute]
public void set_ResponseTimeoutWithDebugger(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_DropExpiredMessages();
    [CompilerGeneratedAttribute]
public void set_DropExpiredMessages(bool value);
    [CompilerGeneratedAttribute]
public int get_MaxMessageHeaderSize();
    [CompilerGeneratedAttribute]
public void set_MaxMessageHeaderSize(int value);
    [CompilerGeneratedAttribute]
public int get_MaxMessageBodySize();
    [CompilerGeneratedAttribute]
public void set_MaxMessageBodySize(int value);
}
[ExtensionAttribute]
public static class Orleans.Configuration.OptionConfigureExtensionMethods : object {
    [ExtensionAttribute]
public static IServiceCollection ConfigureFormatter(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection ConfigureFormatter(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection TryConfigureFormatter(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection ConfigureFormatterResolver(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection TryConfigureFormatterResolver(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection ConfigureNamedOptionForLogging(IServiceCollection services, string name);
}
[ExtensionAttribute]
public static class Orleans.Configuration.Overrides.OptionsOverrides : object {
    [ExtensionAttribute]
public static IOptions`1<ClusterOptions> GetProviderClusterOptions(IServiceProvider services, string providerName);
    [ExtensionAttribute]
private static IOptions`1<TOptions> GetOverridableOption(IServiceProvider services, string key);
}
public class Orleans.Configuration.StaticGatewayListProviderOptions : object {
    [CompilerGeneratedAttribute]
private List`1<Uri> <Gateways>k__BackingField;
    public List`1<Uri> Gateways { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<Uri> get_Gateways();
    [CompilerGeneratedAttribute]
public void set_Gateways(List`1<Uri> value);
}
public class Orleans.Configuration.TypeManagementOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <TypeMapRefreshInterval>k__BackingField;
    public static TimeSpan DEFAULT_REFRESH_CLUSTER_INTERFACEMAP_TIME;
    public TimeSpan TypeMapRefreshInterval { get; public set; }
    private static TypeManagementOptions();
    [CompilerGeneratedAttribute]
public TimeSpan get_TypeMapRefreshInterval();
    [CompilerGeneratedAttribute]
public void set_TypeMapRefreshInterval(TimeSpan value);
}
internal class Orleans.Configuration.Validators.ClientClusteringValidator : object {
    internal static string ClusteringNotConfigured;
    private IServiceProvider _serviceProvider;
    public ClientClusteringValidator(IServiceProvider serviceProvider);
    public sealed virtual void ValidateConfiguration();
}
internal class Orleans.Configuration.Validators.LoadSheddingValidator : object {
    private LoadSheddingOptions _loadSheddingOptions;
    public LoadSheddingValidator(IOptions`1<LoadSheddingOptions> loadSheddingOptions);
    public sealed virtual void ValidateConfiguration();
}
public class Orleans.ConnectionToClusterLostHandler : MulticastDelegate {
    public ConnectionToClusterLostHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, EventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, EventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal static class Orleans.Core.Messaging.OverloadDetectionLogic : object {
    public static bool IsOverloaded(EnvironmentStatistics& statistics, LoadSheddingOptions options);
}
internal static class Orleans.DefaultClientServices : object {
    [NullableAttribute("1")]
private static ServiceDescriptor ServiceDescriptor;
    private static DefaultClientServices();
    [NullableContextAttribute("1")]
public static void AddDefaultServices(IClientBuilder builder);
    [NullableContextAttribute("1")]
private static void ApplyConfiguration(IClientBuilder builder);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static void <ApplyConfiguration>g__ConfigureProvider|2_0(IClientBuilder builder, Dictionary`2<ValueTuple`2<string, string>, Type> knownProviderTypes, string kind, string name, IConfigurationSection configurationSection);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static IProviderBuilder`1<IClientBuilder> <ApplyConfiguration>g__GetRequiredProvider|2_1(Dictionary`2<ValueTuple`2<string, string>, Type> knownProviderTypes, string kind, string name);
    [CompilerGeneratedAttribute]
internal static Dictionary`2<ValueTuple`2<string, string>, Type> <ApplyConfiguration>g__GetRegisteredProviders|2_2();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static void <ApplyConfiguration>g__ApplySubsection|2_3(IClientBuilder builder, IConfigurationSection cfg, Dictionary`2<ValueTuple`2<string, string>, Type> knownProviderTypes, string sectionName);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static void <ApplyConfiguration>g__ApplyNamedSubsections|2_4(IClientBuilder builder, IConfigurationSection cfg, Dictionary`2<ValueTuple`2<string, string>, Type> knownProviderTypes, string sectionName);
}
internal class Orleans.DefaultOptionsFormatter`1 : object {
    private T _options;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public DefaultOptionsFormatter`1(IOptions`1<T> options);
    internal DefaultOptionsFormatter`1(string name, T options);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [IteratorStateMachineAttribute("Orleans.DefaultOptionsFormatter`1/<Format>d__6")]
public sealed virtual IEnumerable`1<string> Format();
    private static bool IsFormattableProperty(PropertyInfo prop);
    private static bool IsAccessibleMethod(MethodInfo accessor);
    private static bool IsFormattableType(Type type);
    [IteratorStateMachineAttribute("Orleans.DefaultOptionsFormatter`1/<FormatProperty>d__10")]
private static IEnumerable`1<string> FormatProperty(object options, PropertyInfo property);
}
internal class Orleans.DefaultOptionsFormatterResolver`1 : object {
    private IOptionsMonitor`1<T> _optionsMonitor;
    public DefaultOptionsFormatterResolver`1(IOptionsMonitor`1<T> optionsMonitor);
    public sealed virtual IOptionFormatter`1<T> Resolve(string name);
}
public class Orleans.Factory`1 : MulticastDelegate {
    public Factory`1(object object, IntPtr method);
    public virtual TInstance Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual TInstance EndInvoke(IAsyncResult result);
}
public class Orleans.Factory`2 : MulticastDelegate {
    public Factory`2(object object, IntPtr method);
    public virtual TInstance Invoke(TParam1 param1);
    public virtual IAsyncResult BeginInvoke(TParam1 param1, AsyncCallback callback, object object);
    public virtual TInstance EndInvoke(IAsyncResult result);
}
public class Orleans.Factory`3 : MulticastDelegate {
    public Factory`3(object object, IntPtr method);
    public virtual TInstance Invoke(TParam1 param1, TParam2 param2);
    public virtual IAsyncResult BeginInvoke(TParam1 param1, TParam2 param2, AsyncCallback callback, object object);
    public virtual TInstance EndInvoke(IAsyncResult result);
}
public class Orleans.Factory`4 : MulticastDelegate {
    public Factory`4(object object, IntPtr method);
    public virtual TInstance Invoke(TParam1 param1, TParam2 param2, TParam3 param3);
    public virtual IAsyncResult BeginInvoke(TParam1 param1, TParam2 param2, TParam3 param3, AsyncCallback callback, object object);
    public virtual TInstance EndInvoke(IAsyncResult result);
}
public class Orleans.GatewayCountChangedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private int <NumberOfConnectedGateways>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PreviousNumberOfConnectedGateways>k__BackingField;
    public int NumberOfConnectedGateways { get; }
    public int PreviousNumberOfConnectedGateways { get; }
    public bool ConnectionRecovered { get; }
    public GatewayCountChangedEventArgs(int currentNumberOfConnectedGateways, int previousNumberOfConnectedGateways);
    [CompilerGeneratedAttribute]
public int get_NumberOfConnectedGateways();
    [CompilerGeneratedAttribute]
public int get_PreviousNumberOfConnectedGateways();
    public bool get_ConnectionRecovered();
}
public class Orleans.GatewayCountChangedHandler : MulticastDelegate {
    public GatewayCountChangedHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, GatewayCountChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, GatewayCountChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[GenerateSerializerAttribute]
[ImmutableAttribute]
internal class Orleans.GrainDirectory.AddressAndTag : ValueType {
    [IdAttribute("0")]
public GrainAddress Address;
    [IdAttribute("1")]
public int VersionTag;
    public AddressAndTag(GrainAddress address, int versionTag);
}
[NullableContextAttribute("1")]
internal interface Orleans.GrainDirectory.IDhtGrainDirectory {
    public abstract virtual Task`1<AddressAndTag> RegisterAsync(GrainAddress address, int hopCount);
    public abstract virtual Task`1<AddressAndTag> RegisterAsync(GrainAddress address, GrainAddress currentRegistration, int hopCount);
    public abstract virtual Task UnregisterAsync(GrainAddress address, UnregistrationCause cause, int hopCount);
    public abstract virtual Task UnregisterManyAsync(List`1<GrainAddress> addresses, UnregistrationCause cause, int hopCount);
    public abstract virtual Task DeleteGrainAsync(GrainId grainId, int hopCount);
    public abstract virtual Task`1<AddressAndTag> LookupAsync(GrainId grainId, int hopCount);
}
[NullableContextAttribute("1")]
public interface Orleans.GrainDirectory.IGrainLocator {
    public abstract virtual Task`1<GrainAddress> Register(GrainAddress address, GrainAddress previousRegistration);
    public abstract virtual Task Unregister(GrainAddress address, UnregistrationCause cause);
    public abstract virtual ValueTask`1<GrainAddress> Lookup(GrainId grainId);
    public abstract virtual void UpdateCache(GrainId grainId, SiloAddress siloAddress);
    public abstract virtual void InvalidateCache(GrainId grainId);
    public abstract virtual void InvalidateCache(GrainAddress address);
    [NullableContextAttribute("2")]
public abstract virtual bool TryLookupInCache(GrainId grainId, GrainAddress& address);
}
public enum Orleans.GrainDirectory.UnregistrationCause : Enum {
    public byte value__;
    public static UnregistrationCause Force;
    public static UnregistrationCause NonexistentActivation;
}
internal class Orleans.GrainFactory : object {
    private GrainReferenceRuntime grainReferenceRuntime;
    private Dictionary`2<ValueTuple`2<GrainId, Type>, ISystemTarget> typedSystemTargetReferenceCache;
    private GrainReferenceActivator referenceActivator;
    private GrainInterfaceTypeResolver interfaceTypeResolver;
    private GrainInterfaceTypeToGrainTypeResolver interfaceTypeToGrainTypeResolver;
    private IRuntimeClient runtimeClient;
    private GrainReferenceRuntime GrainReferenceRuntime { get; }
    public GrainFactory(IRuntimeClient runtimeClient, GrainReferenceActivator referenceActivator, GrainInterfaceTypeResolver interfaceTypeResolver, GrainInterfaceTypeToGrainTypeResolver interfaceToTypeResolver);
    private GrainReferenceRuntime get_GrainReferenceRuntime();
    public sealed virtual TGrainInterface GetGrain(Guid primaryKey, string grainClassNamePrefix);
    public sealed virtual TGrainInterface GetGrain(long primaryKey, string grainClassNamePrefix);
    public sealed virtual TGrainInterface GetGrain(string primaryKey, string grainClassNamePrefix);
    public sealed virtual TGrainInterface GetGrain(Guid primaryKey, string keyExtension, string grainClassNamePrefix);
    public sealed virtual TGrainInterface GetGrain(long primaryKey, string keyExtension, string grainClassNamePrefix);
    public sealed virtual TGrainObserverInterface CreateObjectReference(IGrainObserver obj);
    public sealed virtual void DeleteObjectReference(IGrainObserver obj);
    public sealed virtual TGrainObserverInterface CreateObjectReference(IAddressable obj);
    public sealed virtual TGrainInterface Cast(IAddressable grain);
    public sealed virtual object Cast(IAddressable grain, Type interfaceType);
    public sealed virtual TGrainInterface GetSystemTarget(GrainType grainType, SiloAddress destination);
    public sealed virtual TGrainInterface GetSystemTarget(GrainId grainId);
    public sealed virtual TGrainInterface GetGrain(GrainId grainId);
    public sealed virtual IAddressable GetGrain(GrainId grainId);
    public sealed virtual IGrain GetGrain(Type grainInterfaceType, Guid key);
    public sealed virtual IGrain GetGrain(Type grainInterfaceType, long key);
    public sealed virtual IGrain GetGrain(Type grainInterfaceType, string key);
    public sealed virtual IGrain GetGrain(Type grainInterfaceType, Guid key, string keyExtension);
    public sealed virtual IGrain GetGrain(Type grainInterfaceType, long key, string keyExtension);
    public sealed virtual IAddressable GetGrain(GrainId grainId, GrainInterfaceType interfaceType);
    private IAddressable GetGrain(Type interfaceType, IdSpan grainKey, string grainClassNamePrefix);
    private object CreateGrainReference(Type interfaceType, GrainId grainId);
    private object CreateObjectReference(Type interfaceType, IAddressable obj);
    private static void ValidateGrainKeyExtension(string keyExt);
}
public class Orleans.GrainInterfaceTypeToGrainTypeResolver : object {
    private object _lockObj;
    private ConcurrentDictionary`2<GrainInterfaceType, GrainType> _genericMapping;
    private IClusterManifestProvider _clusterManifestProvider;
    private Cache _cache;
    public GrainInterfaceTypeToGrainTypeResolver(IClusterManifestProvider clusterManifestProvider);
    public GrainType GetGrainType(GrainInterfaceType interfaceType, string prefix);
    public GrainType GetGrainType(GrainInterfaceType interfaceType);
    public bool TryGetGrainType(GrainInterfaceType interfaceType, GrainType& result);
    private Cache GetCache();
    private static Cache BuildCache(ClusterManifest clusterManifest);
}
public class Orleans.GrainReferences.GrainReferenceActivator : object {
    private object _lockObj;
    private IServiceProvider _serviceProvider;
    private IGrainReferenceActivatorProvider[] _providers;
    private Dictionary`2<ValueTuple`2<GrainType, GrainInterfaceType>, IGrainReferenceActivator> _activators;
    public GrainReferenceActivator(IServiceProvider serviceProvider, IEnumerable`1<IGrainReferenceActivatorProvider> providers);
    public GrainReference CreateReference(GrainId grainId, GrainInterfaceType interfaceType);
    private IGrainReferenceActivator CreateActivator(GrainType grainType, GrainInterfaceType interfaceType);
}
internal class Orleans.GrainReferences.GrainReferenceActivatorProvider : object {
    private CopyContextPool _copyContextPool;
    private CodecProvider _codecProvider;
    private IServiceProvider _serviceProvider;
    private GrainPropertiesResolver _propertiesResolver;
    private RpcProvider _rpcProvider;
    private GrainVersionManifest _grainVersionManifest;
    private IGrainReferenceRuntime _grainReferenceRuntime;
    public GrainReferenceActivatorProvider(IServiceProvider serviceProvider, GrainPropertiesResolver propertiesResolver, RpcProvider rpcProvider, CopyContextPool copyContextPool, CodecProvider codecProvider, GrainVersionManifest grainVersionManifest);
    public sealed virtual bool TryGet(GrainType grainType, GrainInterfaceType interfaceType, IGrainReferenceActivator& activator);
}
public interface Orleans.GrainReferences.IGrainReferenceActivator {
    public abstract virtual GrainReference CreateReference(GrainId grainId);
}
public interface Orleans.GrainReferences.IGrainReferenceActivatorProvider {
    public abstract virtual bool TryGet(GrainType grainType, GrainInterfaceType interfaceType, IGrainReferenceActivator& activator);
}
internal class Orleans.GrainReferences.RpcProvider : object {
    private TypeConverter _typeConverter;
    private Dictionary`2<GrainInterfaceType, Type> _mapping;
    public RpcProvider(IOptions`1<TypeManifestOptions> config, GrainInterfaceTypeResolver resolver, TypeConverter typeConverter);
    public bool TryGet(GrainInterfaceType interfaceType, Type& result);
    [CompilerGeneratedAttribute]
internal static Type <.ctor>g__GetMainInterface|2_0(Type t);
}
internal class Orleans.GrainReferences.UntypedGrainReferenceActivatorProvider : object {
    private CopyContextPool _copyContextPool;
    private CodecProvider _codecProvider;
    private GrainVersionManifest _versionManifest;
    private IServiceProvider _serviceProvider;
    private IGrainReferenceRuntime _grainReferenceRuntime;
    public UntypedGrainReferenceActivatorProvider(GrainVersionManifest manifest, CodecProvider codecProvider, CopyContextPool copyContextPool, IServiceProvider serviceProvider);
    public sealed virtual bool TryGet(GrainType grainType, GrainInterfaceType interfaceType, IGrainReferenceActivator& activator);
}
[GenerateSerializerAttribute]
public class Orleans.GrainState`1 : object {
    [CompilerGeneratedAttribute]
private T <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RecordExists>k__BackingField;
    [IdAttribute("0")]
public T State { get; public set; }
    [IdAttribute("1")]
public string ETag { get; public set; }
    [IdAttribute("2")]
public bool RecordExists { get; public set; }
    public GrainState`1(T state);
    public GrainState`1(T state, string eTag);
    [CompilerGeneratedAttribute]
public sealed virtual T get_State();
    [CompilerGeneratedAttribute]
public sealed virtual void set_State(T value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ETag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ETag(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_RecordExists();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RecordExists(bool value);
}
public class Orleans.Hosting.ClientBuilder : object {
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfiguration <Configuration>k__BackingField;
    public IServiceCollection Services { get; }
    public IConfiguration Configuration { get; }
    public ClientBuilder(IServiceCollection services, IConfiguration configuration);
    [CompilerGeneratedAttribute]
public sealed virtual IServiceCollection get_Services();
    [CompilerGeneratedAttribute]
public sealed virtual IConfiguration get_Configuration();
}
[ExtensionAttribute]
public static class Orleans.Hosting.ClientBuilderExtensions : object {
    [ExtensionAttribute]
public static IClientBuilder UseConnectionRetryFilter(IClientBuilder builder, Func`3<Exception, CancellationToken, Task`1<bool>> connectionRetryFilter);
    [ExtensionAttribute]
public static IClientBuilder UseConnectionRetryFilter(IClientBuilder builder, IClientConnectionRetryFilter connectionRetryFilter);
    [ExtensionAttribute]
public static IClientBuilder UseConnectionRetryFilter(IClientBuilder builder);
    [ExtensionAttribute]
public static IClientBuilder ConfigureServices(IClientBuilder builder, Action`1<IServiceCollection> configureDelegate);
    [ExtensionAttribute]
public static IClientBuilder Configure(IClientBuilder builder, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IClientBuilder Configure(IClientBuilder builder, IConfiguration configuration);
    [ExtensionAttribute]
public static IClientBuilder AddGatewayCountChangedHandler(IClientBuilder builder, GatewayCountChangedHandler handler);
    [ExtensionAttribute]
public static IClientBuilder AddClusterConnectionLostHandler(IClientBuilder builder, ConnectionToClusterLostHandler handler);
    [ExtensionAttribute]
public static IClientBuilder AddActivityPropagation(IClientBuilder builder);
    [ExtensionAttribute]
public static IClientBuilder UseLocalhostClustering(IClientBuilder builder, int gatewayPort, string serviceId, string clusterId);
    [ExtensionAttribute]
public static IClientBuilder UseLocalhostClustering(IClientBuilder builder, Int32[] gatewayPorts, string serviceId, string clusterId);
    [ExtensionAttribute]
public static IClientBuilder UseStaticClustering(IClientBuilder builder, IPEndPoint[] endpoints);
    [ExtensionAttribute]
public static IClientBuilder UseStaticClustering(IClientBuilder builder, Action`1<StaticGatewayListProviderOptions> configureOptions);
    [ExtensionAttribute]
public static IClientBuilder UseStaticClustering(IClientBuilder builder, Action`1<OptionsBuilder`1<StaticGatewayListProviderOptions>> configureOptions);
}
[ExtensionAttribute]
public static class Orleans.Hosting.ClientBuilderGrainCallFilterExtensions : object {
    [ExtensionAttribute]
public static IClientBuilder AddIncomingGrainCallFilter(IClientBuilder builder, IIncomingGrainCallFilter filter);
    [ExtensionAttribute]
public static IClientBuilder AddIncomingGrainCallFilter(IClientBuilder builder);
    [ExtensionAttribute]
public static IClientBuilder AddIncomingGrainCallFilter(IClientBuilder builder, IncomingGrainCallFilterDelegate filter);
    [ExtensionAttribute]
public static IClientBuilder AddOutgoingGrainCallFilter(IClientBuilder builder, IOutgoingGrainCallFilter filter);
    [ExtensionAttribute]
public static IClientBuilder AddOutgoingGrainCallFilter(IClientBuilder builder);
    [ExtensionAttribute]
public static IClientBuilder AddOutgoingGrainCallFilter(IClientBuilder builder, OutgoingGrainCallFilterDelegate filter);
}
[ExtensionAttribute]
public static class Orleans.Hosting.GrainCallFilterServiceCollectionExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("Use ISiloBuilder.AddIncomingGrainCallFilter", "True")]
public static IServiceCollection AddGrainCallFilter(IServiceCollection services, IIncomingGrainCallFilter filter);
    [ExtensionAttribute]
[ObsoleteAttribute("Use ISiloBuilder.AddIncomingGrainCallFilter", "True")]
public static IServiceCollection AddGrainCallFilter(IServiceCollection services);
    [ExtensionAttribute]
[ObsoleteAttribute("Use ISiloBuilder.AddIncomingGrainCallFilter", "True")]
public static IServiceCollection AddGrainCallFilter(IServiceCollection services, GrainCallFilterDelegate filter);
    [ExtensionAttribute]
internal static IServiceCollection AddIncomingGrainCallFilter(IServiceCollection services, IIncomingGrainCallFilter filter);
    [ExtensionAttribute]
internal static IServiceCollection AddIncomingGrainCallFilter(IServiceCollection services);
    [ExtensionAttribute]
internal static IServiceCollection AddIncomingGrainCallFilter(IServiceCollection services, IncomingGrainCallFilterDelegate filter);
    [ExtensionAttribute]
internal static IServiceCollection AddOutgoingGrainCallFilter(IServiceCollection services, IOutgoingGrainCallFilter filter);
    [ExtensionAttribute]
internal static IServiceCollection AddOutgoingGrainCallFilter(IServiceCollection services);
    [ExtensionAttribute]
internal static IServiceCollection AddOutgoingGrainCallFilter(IServiceCollection services, OutgoingGrainCallFilterDelegate filter);
}
public interface Orleans.Hosting.IClientBuilder {
    public IServiceCollection Services { get; }
    public IConfiguration Configuration { get; }
    public abstract virtual IServiceCollection get_Services();
    public abstract virtual IConfiguration get_Configuration();
}
public interface Orleans.Hosting.INamedServiceConfigurator {
    public string Name { get; }
    public Action`1<Action`1<IServiceCollection>> ConfigureDelegate { get; }
    public abstract virtual string get_Name();
    public abstract virtual Action`1<Action`1<IServiceCollection>> get_ConfigureDelegate();
}
public class Orleans.Hosting.NamedServiceConfigurator : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<Action`1<IServiceCollection>> <ConfigureDelegate>k__BackingField;
    public string Name { get; }
    public Action`1<Action`1<IServiceCollection>> ConfigureDelegate { get; }
    public NamedServiceConfigurator(string name, Action`1<Action`1<IServiceCollection>> configureDelegate);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<Action`1<IServiceCollection>> get_ConfigureDelegate();
}
[ExtensionAttribute]
public static class Orleans.Hosting.NamedServiceConfiguratorExtensions : object {
    [ExtensionAttribute]
public static void Configure(INamedServiceConfigurator configurator, Action`1<OptionsBuilder`1<TOptions>> configureOptions);
    [ExtensionAttribute]
public static void ConfigureComponent(INamedServiceConfigurator configurator, Func`3<IServiceProvider, string, TComponent> factory, Action`1<OptionsBuilder`1<TOptions>> configureOptions);
    [ExtensionAttribute]
public static void ConfigureComponent(INamedServiceConfigurator configurator, Func`3<IServiceProvider, string, TComponent> factory);
    [ExtensionAttribute]
public static void ConfigureLifecycle(INamedServiceConfigurator configurator);
}
public interface Orleans.IClientConnectionRetryFilter {
    public abstract virtual Task`1<bool> ShouldRetryConnectionAttempt(Exception exception, CancellationToken cancellationToken);
}
public interface Orleans.IClusterClient {
    public IServiceProvider ServiceProvider { get; }
    public abstract virtual IServiceProvider get_ServiceProvider();
}
public interface Orleans.IClusterClientLifecycle {
}
internal interface Orleans.IClusterConnectionStatusListener {
    public abstract virtual void NotifyGatewayCountChanged(int currentNumberOfGateways, int previousNumberOfGateways);
    public abstract virtual void NotifyClusterConnectionLost();
}
public interface Orleans.IGrainState`1 {
    public T State { get; public set; }
    public string ETag { get; public set; }
    public bool RecordExists { get; public set; }
    public abstract virtual T get_State();
    public abstract virtual void set_State(T value);
    public abstract virtual string get_ETag();
    public abstract virtual void set_ETag(string value);
    public abstract virtual bool get_RecordExists();
    public abstract virtual void set_RecordExists(bool value);
}
internal interface Orleans.IInternalClusterClient {
}
internal interface Orleans.IInternalGrainFactory {
    public abstract virtual TGrainObserverInterface CreateObjectReference(IAddressable obj);
    public abstract virtual TGrainInterface GetSystemTarget(GrainType grainType, SiloAddress destination);
    public abstract virtual TGrainInterface GetSystemTarget(GrainId grainId);
    public abstract virtual TGrainInterface Cast(IAddressable grain);
    public abstract virtual object Cast(IAddressable grain, Type interfaceType);
}
public interface Orleans.IMembershipTable {
    public abstract virtual Task InitializeMembershipTable(bool tryInitTableVersion);
    public abstract virtual Task DeleteMembershipTableEntries(string clusterId);
    public abstract virtual Task CleanupDefunctSiloEntries(DateTimeOffset beforeDate);
    public abstract virtual Task`1<MembershipTableData> ReadRow(SiloAddress key);
    public abstract virtual Task`1<MembershipTableData> ReadAll();
    public abstract virtual Task`1<bool> InsertRow(MembershipEntry entry, TableVersion tableVersion);
    public abstract virtual Task`1<bool> UpdateRow(MembershipEntry entry, string etag, TableVersion tableVersion);
    public abstract virtual Task UpdateIAmAlive(MembershipEntry entry);
}
[UnorderedAttribute]
public interface Orleans.IMembershipTableSystemTarget {
}
internal class Orleans.InterfaceToImplementationMappingCache : object {
    private ConcurrentDictionary`2<Type, Dictionary`2<Type, Dictionary`2<MethodInfo, Entry>>> mappings;
    public Dictionary`2<MethodInfo, Entry> GetOrCreate(Type implementationType, Type interfaceType);
    private static Dictionary`2<Type, Dictionary`2<MethodInfo, Entry>> CreateInterfaceToImplementationMap(Type implementationType);
}
public static class Orleans.Internal.AsyncExecutorWithRetries : object {
    public static int INFINITE_RETRIES;
    private static AsyncExecutorWithRetries();
    public static Task ExecuteWithRetries(Func`2<int, Task> action, int maxNumErrorTries, Func`3<Exception, int, bool> retryExceptionFilter, TimeSpan maxExecutionTime, IBackoffProvider onErrorBackOff);
    public static Task`1<T> ExecuteWithRetries(Func`2<int, Task`1<T>> function, int maxNumErrorTries, Func`3<Exception, int, bool> retryExceptionFilter, TimeSpan maxExecutionTime, IBackoffProvider onErrorBackOff);
    public static Task`1<T> ExecuteWithRetries(Func`2<int, Task`1<T>> function, int maxNumSuccessTries, int maxNumErrorTries, Func`3<T, int, bool> retryValueFilter, Func`3<Exception, int, bool> retryExceptionFilter, TimeSpan maxExecutionTime, IBackoffProvider onSuccessBackOff, IBackoffProvider onErrorBackOff);
    [AsyncStateMachineAttribute("Orleans.Internal.AsyncExecutorWithRetries/<ExecuteWithRetriesHelper>d__4`1")]
private static Task`1<T> ExecuteWithRetriesHelper(Func`2<int, Task`1<T>> function, int maxNumSuccessTries, int maxNumErrorTries, TimeSpan maxExecutionTime, DateTime startExecutionTime, Func`3<T, int, bool> retryValueFilter, Func`3<Exception, int, bool> retryExceptionFilter, IBackoffProvider onSuccessBackOff, IBackoffProvider onErrorBackOff);
}
internal class Orleans.Internal.ExponentialBackoff : object {
    private TimeSpan minDelay;
    private TimeSpan maxDelay;
    private TimeSpan step;
    public ExponentialBackoff(TimeSpan minDelay, TimeSpan maxDelay, TimeSpan step);
    public sealed virtual TimeSpan Next(int attempt);
}
public class Orleans.Internal.FixedBackoff : object {
    private TimeSpan fixedDelay;
    public FixedBackoff(TimeSpan delay);
    public sealed virtual TimeSpan Next(int attempt);
}
public interface Orleans.Internal.IBackoffProvider {
    public abstract virtual TimeSpan Next(int attempt);
}
[ExtensionAttribute]
internal static class Orleans.Internal.OrleansTaskExtentions : object {
    [AsyncStateMachineAttribute("Orleans.Internal.OrleansTaskExtentions/<LogException>d__0")]
[ExtensionAttribute]
public static Task LogException(Task task, ILogger logger, ErrorCode errorCode, string message);
    [AsyncStateMachineAttribute("Orleans.Internal.OrleansTaskExtentions/<SafeExecute>d__1")]
public static Task SafeExecute(Func`1<Task> action);
    [AsyncStateMachineAttribute("Orleans.Internal.OrleansTaskExtentions/<ExecuteAndIgnoreException>d__2")]
public static Task ExecuteAndIgnoreException(Func`1<Task> action);
    [ExtensionAttribute]
internal static string ToString(Task t);
    [ExtensionAttribute]
public static void WaitWithThrow(Task task, TimeSpan timeout);
    [ExtensionAttribute]
internal static T WaitForResultWithThrow(Task`1<T> task, TimeSpan timeout);
    [AsyncStateMachineAttribute("Orleans.Internal.OrleansTaskExtentions/<WithTimeout>d__6")]
[ExtensionAttribute]
public static Task WithTimeout(Task taskToComplete, TimeSpan timeout, string exceptionMessage);
    [AsyncStateMachineAttribute("Orleans.Internal.OrleansTaskExtentions/<WithTimeout>d__7`1")]
[ExtensionAttribute]
public static Task`1<T> WithTimeout(Task`1<T> taskToComplete, TimeSpan timeSpan, string exceptionMessage);
    [AsyncStateMachineAttribute("Orleans.Internal.OrleansTaskExtentions/<WithCancellation>d__8")]
[ExtensionAttribute]
internal static Task WithCancellation(Task taskToComplete, string message, CancellationToken cancellationToken);
    [ExtensionAttribute]
internal static Task WithCancellation(Task taskToComplete, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Orleans.Internal.OrleansTaskExtentions/<MakeCancellable>d__10")]
private static Task MakeCancellable(Task task, CancellationToken cancellationToken);
    internal static Task WrapInTask(Action action);
    [ExtensionAttribute]
internal static T GetResult(Task`1<T> task);
    [ExtensionAttribute]
internal static Task WhenCancelled(CancellationToken token);
}
internal static class Orleans.Internal.RandomTimeSpan : object {
    public static TimeSpan Next(TimeSpan timeSpan);
    public static TimeSpan Next(TimeSpan minValue, TimeSpan maxValue);
}
internal static class Orleans.Internal.StandardExtensions : object {
    public static TimeSpan Max(TimeSpan first, TimeSpan second);
    public static TimeSpan Min(TimeSpan first, TimeSpan second);
}
internal class Orleans.InvokableObjectManager : object {
    private CancellationTokenSource disposed;
    private ConcurrentDictionary`2<ObserverGrainId, LocalObjectData> localObjects;
    private InterfaceToImplementationMappingCache _interfaceToImplementationMapping;
    private IGrainContext rootGrainContext;
    private IRuntimeClient runtimeClient;
    private ILogger logger;
    private DeepCopier deepCopier;
    private DeepCopier`1<Response> _responseCopier;
    private MessagingTrace messagingTrace;
    private List`1<IIncomingGrainCallFilter> _grainCallFilters;
    private List`1<IIncomingGrainCallFilter> GrainCallFilters { get; }
    public InvokableObjectManager(IGrainContext rootGrainContext, IRuntimeClient runtimeClient, DeepCopier deepCopier, MessagingTrace messagingTrace, DeepCopier`1<Response> responseCopier, InterfaceToImplementationMappingCache interfaceToImplementationMapping, ILogger logger);
    private List`1<IIncomingGrainCallFilter> get_GrainCallFilters();
    public bool TryRegister(IAddressable obj, ObserverGrainId objectId);
    public bool TryDeregister(ObserverGrainId objectId);
    public void Dispatch(Message message);
    public sealed virtual void Dispose();
}
public interface Orleans.IOptionFormatter {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual IEnumerable`1<string> Format();
}
public interface Orleans.IOptionFormatter`1 {
}
public interface Orleans.IOptionFormatterResolver`1 {
    public abstract virtual IOptionFormatter`1<T> Resolve(string name);
}
internal interface Orleans.ISiloControl {
    public abstract virtual Task Ping(string message);
    public abstract virtual Task ForceGarbageCollection();
    public abstract virtual Task ForceActivationCollection(TimeSpan ageLimit);
    public abstract virtual Task ForceRuntimeStatisticsCollection();
    public abstract virtual Task`1<SiloRuntimeStatistics> GetRuntimeStatistics();
    public abstract virtual Task`1<List`1<Tuple`3<GrainId, string, int>>> GetGrainStatistics();
    public abstract virtual Task`1<List`1<DetailedGrainStatistic>> GetDetailedGrainStatistics(String[] types);
    public abstract virtual Task`1<SimpleGrainStatistic[]> GetSimpleGrainStatistics();
    public abstract virtual Task`1<DetailedGrainReport> GetDetailedGrainReport(GrainId grainId);
    public abstract virtual Task`1<int> GetActivationCount();
    public abstract virtual Task`1<object> SendControlCommandToProvider(string providerName, int command, object arg);
    public abstract virtual Task`1<List`1<GrainId>> GetActiveGrains(GrainType grainType);
}
[AttributeUsageAttribute("4")]
public class Orleans.KeepAliveAttribute : Attribute {
    public sealed virtual void Populate(IServiceProvider services, Type grainClass, GrainType grainType, Dictionary`2<string, string> properties);
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
public class Orleans.LeaseProviders.AcquiredLease : object {
    [CompilerGeneratedAttribute]
private string <ResourceKey>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <StartTimeUtc>k__BackingField;
    [IdAttribute("0")]
public string ResourceKey { get; }
    [IdAttribute("1")]
public TimeSpan Duration { get; }
    [IdAttribute("2")]
public string Token { get; }
    [IdAttribute("3")]
public DateTime StartTimeUtc { get; }
    public AcquiredLease(string resourceKey, TimeSpan duration, string token, DateTime startTimeUtc);
    public AcquiredLease(string resourceKey);
    [CompilerGeneratedAttribute]
public string get_ResourceKey();
    [CompilerGeneratedAttribute]
public TimeSpan get_Duration();
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public DateTime get_StartTimeUtc();
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
public class Orleans.LeaseProviders.AcquireLeaseResult : object {
    [CompilerGeneratedAttribute]
private AcquiredLease <AcquiredLease>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseCode <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <FailureException>k__BackingField;
    [IdAttribute("0")]
public AcquiredLease AcquiredLease { get; }
    [IdAttribute("1")]
public ResponseCode StatusCode { get; }
    [IdAttribute("2")]
public Exception FailureException { get; }
    public AcquireLeaseResult(AcquiredLease acquiredLease, ResponseCode statusCode, Exception failureException);
    [CompilerGeneratedAttribute]
public AcquiredLease get_AcquiredLease();
    [CompilerGeneratedAttribute]
public ResponseCode get_StatusCode();
    [CompilerGeneratedAttribute]
public Exception get_FailureException();
}
public interface Orleans.LeaseProviders.ILeaseProvider {
    public abstract virtual Task`1<AcquireLeaseResult[]> Acquire(string category, LeaseRequest[] leaseRequests);
    public abstract virtual Task`1<AcquireLeaseResult[]> Renew(string category, AcquiredLease[] aquiredLeases);
    public abstract virtual Task Release(string category, AcquiredLease[] aquiredLeases);
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
public class Orleans.LeaseProviders.LeaseRequest : object {
    [CompilerGeneratedAttribute]
private string <ResourceKey>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Duration>k__BackingField;
    [IdAttribute("0")]
public string ResourceKey { get; }
    [IdAttribute("1")]
public TimeSpan Duration { get; }
    public LeaseRequest(string resourceKey, TimeSpan duration);
    [CompilerGeneratedAttribute]
public string get_ResourceKey();
    [CompilerGeneratedAttribute]
public TimeSpan get_Duration();
}
[GenerateSerializerAttribute]
public enum Orleans.LeaseProviders.ResponseCode : Enum {
    public int value__;
    public static ResponseCode OK;
    public static ResponseCode LeaseNotAvailable;
    public static ResponseCode InvalidToken;
    public static ResponseCode TransientFailure;
}
public abstract class Orleans.LifecycleSubject : object {
    private List`1<OrderedObserver> subscribers;
    protected ILogger logger;
    private Nullable`1<int> highStage;
    protected LifecycleSubject(ILogger logger);
    protected virtual string GetStageName(int stage);
    protected static ImmutableDictionary`2<int, string> GetStageNames(Type type);
    protected virtual void PerfMeasureOnStart(int stage, TimeSpan elapsed);
    [AsyncStateMachineAttribute("Orleans.LifecycleSubject/<OnStart>d__7")]
public virtual Task OnStart(CancellationToken cancellationToken);
    protected virtual void OnStartStageCompleted(int stage);
    protected virtual void PerfMeasureOnStop(int stage, TimeSpan elapsed);
    [AsyncStateMachineAttribute("Orleans.LifecycleSubject/<OnStop>d__10")]
public virtual Task OnStop(CancellationToken cancellationToken);
    protected virtual void OnStopStageCompleted(int stage);
    public virtual IDisposable Subscribe(string observerName, int stage, ILifecycleObserver observer);
    [CompilerGeneratedAttribute]
internal static Task <OnStart>g__CallOnStart|7_0(OrderedObserver observer, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static Task <OnStop>g__CallOnStop|10_0(OrderedObserver observer, CancellationToken cancellationToken);
}
internal class Orleans.LinearBackoffClientConnectionRetryFilter : object {
    private int _retryCount;
    private static int MaxRetry;
    private static int Delay;
    [AsyncStateMachineAttribute("Orleans.LinearBackoffClientConnectionRetryFilter/<ShouldRetryConnectionAttempt>d__3")]
public sealed virtual Task`1<bool> ShouldRetryConnectionAttempt(Exception exception, CancellationToken cancellationToken);
}
internal class Orleans.LocalClientDetails : object {
    [CompilerGeneratedAttribute]
private ClientGrainId <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private SiloAddress <ClientAddress>k__BackingField;
    public ClientGrainId ClientId { get; }
    public IPAddress IPAddress { get; }
    public SiloAddress ClientAddress { get; }
    public LocalClientDetails(IOptions`1<ClientMessagingOptions> clientMessagingOptions);
    [CompilerGeneratedAttribute]
public ClientGrainId get_ClientId();
    public IPAddress get_IPAddress();
    [CompilerGeneratedAttribute]
public SiloAddress get_ClientAddress();
}
[GenerateSerializerAttribute]
public class Orleans.MembershipEntry : object {
    [CompilerGeneratedAttribute]
private SiloAddress <SiloAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private SiloStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Tuple`2<SiloAddress, DateTime>> <SuspectTimes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ProxyPort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiloName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UpdateZone>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FaultZone>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <IAmAliveTime>k__BackingField;
    [IdAttribute("0")]
public SiloAddress SiloAddress { get; public set; }
    [IdAttribute("1")]
public SiloStatus Status { get; public set; }
    [IdAttribute("2")]
public List`1<Tuple`2<SiloAddress, DateTime>> SuspectTimes { get; public set; }
    [IdAttribute("3")]
public int ProxyPort { get; public set; }
    [IdAttribute("4")]
public string HostName { get; public set; }
    [IdAttribute("5")]
public string SiloName { get; public set; }
    [IdAttribute("6")]
public string RoleName { get; public set; }
    [IdAttribute("7")]
public int UpdateZone { get; public set; }
    [IdAttribute("8")]
public int FaultZone { get; public set; }
    [IdAttribute("9")]
public DateTime StartTime { get; public set; }
    [IdAttribute("10")]
public DateTime IAmAliveTime { get; public set; }
    [CompilerGeneratedAttribute]
public SiloAddress get_SiloAddress();
    [CompilerGeneratedAttribute]
public void set_SiloAddress(SiloAddress value);
    [CompilerGeneratedAttribute]
public SiloStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(SiloStatus value);
    [CompilerGeneratedAttribute]
public List`1<Tuple`2<SiloAddress, DateTime>> get_SuspectTimes();
    [CompilerGeneratedAttribute]
public void set_SuspectTimes(List`1<Tuple`2<SiloAddress, DateTime>> value);
    [CompilerGeneratedAttribute]
public int get_ProxyPort();
    [CompilerGeneratedAttribute]
public void set_ProxyPort(int value);
    [CompilerGeneratedAttribute]
public string get_HostName();
    [CompilerGeneratedAttribute]
public void set_HostName(string value);
    [CompilerGeneratedAttribute]
public string get_SiloName();
    [CompilerGeneratedAttribute]
public void set_SiloName(string value);
    [CompilerGeneratedAttribute]
public string get_RoleName();
    [CompilerGeneratedAttribute]
public void set_RoleName(string value);
    [CompilerGeneratedAttribute]
public int get_UpdateZone();
    [CompilerGeneratedAttribute]
public void set_UpdateZone(int value);
    [CompilerGeneratedAttribute]
public int get_FaultZone();
    [CompilerGeneratedAttribute]
public void set_FaultZone(int value);
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_IAmAliveTime();
    [CompilerGeneratedAttribute]
public void set_IAmAliveTime(DateTime value);
    public void AddOrUpdateSuspector(SiloAddress localSilo, DateTime voteTime, int maxVotes);
    public void AddSuspector(SiloAddress suspectingSilo, DateTime suspectingTime);
    internal MembershipEntry Copy();
    internal MembershipEntry WithStatus(SiloStatus status);
    internal ImmutableList`1<Tuple`2<SiloAddress, DateTime>> GetFreshVotes(DateTime now, TimeSpan expiration);
    public virtual string ToString();
    public string ToFullString();
    [CompilerGeneratedAttribute]
internal static DateTime <GetFreshVotes>g__Max|48_0(DateTime localTime, List`1<Tuple`2<SiloAddress, DateTime>> suspectTimes);
}
[GenerateSerializerAttribute]
public class Orleans.MembershipTableData : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<Tuple`2<MembershipEntry, string>> <Members>k__BackingField;
    [CompilerGeneratedAttribute]
private TableVersion <Version>k__BackingField;
    [IdAttribute("0")]
public IReadOnlyList`1<Tuple`2<MembershipEntry, string>> Members { get; private set; }
    [IdAttribute("1")]
public TableVersion Version { get; private set; }
    public MembershipTableData(List`1<Tuple`2<MembershipEntry, string>> list, TableVersion version);
    public MembershipTableData(Tuple`2<MembershipEntry, string> tuple, TableVersion version);
    public MembershipTableData(TableVersion version);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<Tuple`2<MembershipEntry, string>> get_Members();
    [CompilerGeneratedAttribute]
private void set_Members(IReadOnlyList`1<Tuple`2<MembershipEntry, string>> value);
    [CompilerGeneratedAttribute]
public TableVersion get_Version();
    [CompilerGeneratedAttribute]
private void set_Version(TableVersion value);
    public Tuple`2<MembershipEntry, string> TryGet(SiloAddress silo);
    public virtual string ToString();
    public MembershipTableData WithoutDuplicateDeads();
    internal Dictionary`2<SiloAddress, SiloStatus> GetSiloStatuses(Func`2<SiloStatus, bool> filter, bool includeMyself, SiloAddress myAddress);
}
internal class Orleans.Messaging.ClientMessageCenter : object {
    private object grainBucketUpdateLock;
    internal static TimeSpan MINIMUM_INTERCONNECT_DELAY;
    internal static int CONNECT_RETRY_COUNT;
    [CompilerGeneratedAttribute]
private IRuntimeClient <RuntimeClient>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Running>k__BackingField;
    private GatewayManager gatewayManager;
    private Action`1<Message> messageHandler;
    private int numMessages;
    private WeakReference`1[] grainBuckets;
    private ILogger logger;
    private int numberOfConnectedGateways;
    private MessageFactory messageFactory;
    private IClusterConnectionStatusListener connectionStatusListener;
    private ConnectionManager connectionManager;
    private LocalClientDetails _localClientDetails;
    internal ClientGrainId ClientId { get; }
    public IRuntimeClient RuntimeClient { get; }
    internal bool Running { get; private set; }
    public SiloAddress MyAddress { get; }
    public ClientMessageCenter(IOptions`1<ClientMessagingOptions> clientMessagingOptions, LocalClientDetails localClientDetails, IRuntimeClient runtimeClient, MessageFactory messageFactory, IClusterConnectionStatusListener connectionStatusListener, ILoggerFactory loggerFactory, ConnectionManager connectionManager, GatewayManager gatewayManager);
    private static ClientMessageCenter();
    internal ClientGrainId get_ClientId();
    [CompilerGeneratedAttribute]
public IRuntimeClient get_RuntimeClient();
    [CompilerGeneratedAttribute]
internal bool get_Running();
    [CompilerGeneratedAttribute]
private void set_Running(bool value);
    public SiloAddress get_MyAddress();
    [AsyncStateMachineAttribute("Orleans.Messaging.ClientMessageCenter/<StartAsync>d__25")]
public Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Orleans.Messaging.ClientMessageCenter/<EstablishInitialConnection>d__26")]
private Task EstablishInitialConnection(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Orleans.Messaging.ClientMessageCenter/<StopAsync>d__27")]
public Task StopAsync(CancellationToken cancellationToken);
    public sealed virtual void DispatchLocalMessage(Message message);
    public sealed virtual void SendMessage(Message msg);
    private ValueTask`1<Connection> GetGatewayConnection(Message msg);
    private void UpdateBucket(UInt32 index, ClientOutboundConnection connection);
    public void RegisterLocalMessageHandler(Action`1<Message> handler);
    public void RejectMessage(Message msg, string reason, Exception exc);
    internal void OnGatewayConnectionOpen();
    internal void OnGatewayConnectionClosed();
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
internal static void <DispatchLocalMessage>g__ThrowNullMessageHandler|28_0();
    [AsyncStateMachineAttribute("Orleans.Messaging.ClientMessageCenter/<<SendMessage>g__SendAsync|29_0>d")]
[CompilerGeneratedAttribute]
private Task <SendMessage>g__SendAsync|29_0(ValueTask`1<Connection> task, Message message);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void <SendMessage>b__29_1(object state);
    [AsyncStateMachineAttribute("Orleans.Messaging.ClientMessageCenter/<<GetGatewayConnection>g__AddToBucketAsync|30_0>d")]
[CompilerGeneratedAttribute]
private ValueTask`1<Connection> <GetGatewayConnection>g__AddToBucketAsync|30_0(UInt32 bucketIndex, ValueTask`1<Connection> connectionTask, SiloAddress gatewayAddress);
    [AsyncStateMachineAttribute("Orleans.Messaging.ClientMessageCenter/<<GetGatewayConnection>g__ConnectAsync|30_1>d")]
[CompilerGeneratedAttribute]
private ValueTask`1<Connection> <GetGatewayConnection>g__ConnectAsync|30_1(SiloAddress gateway, ValueTask`1<Connection> connectionTask, Message message, bool directGatewayMessage);
    [CompilerGeneratedAttribute]
internal static UInt32 <GetGatewayConnection>g__GetHashCodeModulo|30_2(int key, UInt32 umod);
}
internal enum Orleans.Messaging.ConnectionDirection : Enum {
    public byte value__;
    public static ConnectionDirection SiloToSilo;
    public static ConnectionDirection ClientToGateway;
    public static ConnectionDirection GatewayToClient;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Orleans.Messaging.GatewayManager : object {
    private object lockable;
    private Dictionary`2<SiloAddress, DateTime> knownDead;
    private Dictionary`2<SiloAddress, DateTime> knownMasked;
    private IGatewayListProvider gatewayListProvider;
    private ILogger logger;
    private ConnectionManager connectionManager;
    private GatewayOptions gatewayOptions;
    private PeriodicTimer gatewayRefreshTimer;
    private List`1<SiloAddress> cachedLiveGateways;
    private HashSet`1<SiloAddress> cachedLiveGatewaysSet;
    private List`1<SiloAddress> knownGateways;
    private DateTime lastRefreshTime;
    private int roundRobinCounter;
    private bool gatewayRefreshCallInitiated;
    private bool gatewayListProviderInitialized;
    [NullableAttribute("2")]
private Task gatewayRefreshTimerTask;
    public GatewayManager(IOptions`1<GatewayOptions> gatewayOptions, IGatewayListProvider gatewayListProvider, ILoggerFactory loggerFactory, ConnectionManager connectionManager, TimeProvider timeProvider);
    [AsyncStateMachineAttribute("Orleans.Messaging.GatewayManager/<StartAsync>d__17")]
public Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Orleans.Messaging.GatewayManager/<StopAsync>d__18")]
public Task StopAsync(CancellationToken cancellationToken);
    public void MarkAsDead(SiloAddress gateway);
    public void MarkAsUnavailableForSend(SiloAddress gateway);
    public virtual string ToString();
    [NullableContextAttribute("2")]
public SiloAddress GetLiveGateway();
    [NullableContextAttribute("0")]
public List`1<SiloAddress> GetLiveGateways();
    [NullableContextAttribute("0")]
public bool IsGatewayAvailable(SiloAddress siloAddress);
    internal void ExpediteUpdateLiveGatewaysSnapshot();
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Orleans.Messaging.GatewayManager/<PeriodicallyRefreshGatewaySnapshot>d__26")]
internal Task PeriodicallyRefreshGatewaySnapshot();
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Orleans.Messaging.GatewayManager/<RefreshGatewaySnapshot>d__27")]
private Task RefreshGatewaySnapshot();
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Orleans.Messaging.GatewayManager/<UpdateLiveGatewaysSnapshot>d__28")]
private Task UpdateLiveGatewaysSnapshot(IEnumerable`1<SiloAddress> refreshedGateways, TimeSpan maxStaleness);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Orleans.Messaging.GatewayManager/<CloseEvictedGatewayConnections>d__29")]
private Task CloseEvictedGatewayConnections(List`1<SiloAddress> liveGateways);
    public sealed virtual void Dispose();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Orleans.Messaging.GatewayManager/<<ExpediteUpdateLiveGatewaysSnapshot>b__25_0>d")]
[CompilerGeneratedAttribute]
private Task <ExpediteUpdateLiveGatewaysSnapshot>b__25_0();
}
public interface Orleans.Messaging.IGatewayListProvider {
    public TimeSpan MaxStaleness { get; }
    [ObsoleteAttribute("This attribute is no longer used and all providers are considered updatable")]
public bool IsUpdatable { get; }
    public abstract virtual Task InitializeGatewayListProvider();
    public abstract virtual Task`1<IList`1<Uri>> GetGateways();
    public abstract virtual TimeSpan get_MaxStaleness();
    public abstract virtual bool get_IsUpdatable();
}
public class Orleans.Messaging.StaticGatewayListProvider : object {
    private StaticGatewayListProviderOptions options;
    private TimeSpan maxStaleness;
    public TimeSpan MaxStaleness { get; }
    public bool IsUpdatable { get; }
    public StaticGatewayListProvider(IOptions`1<StaticGatewayListProviderOptions> options, IOptions`1<GatewayOptions> gatewayOptions);
    public sealed virtual Task InitializeGatewayListProvider();
    public sealed virtual Task`1<IList`1<Uri>> GetGateways();
    public sealed virtual TimeSpan get_MaxStaleness();
    public sealed virtual bool get_IsUpdatable();
}
public class Orleans.Metadata.GrainBindings : object {
    [CompilerGeneratedAttribute]
private GrainType <GrainType>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableArray`1<ImmutableDictionary`2<string, string>> <Bindings>k__BackingField;
    public GrainType GrainType { get; }
    public ImmutableArray`1<ImmutableDictionary`2<string, string>> Bindings { get; }
    public GrainBindings(GrainType grainType, ImmutableArray`1<ImmutableDictionary`2<string, string>> bindings);
    [CompilerGeneratedAttribute]
public GrainType get_GrainType();
    [CompilerGeneratedAttribute]
public ImmutableArray`1<ImmutableDictionary`2<string, string>> get_Bindings();
}
public class Orleans.Metadata.GrainBindingsResolver : object {
    private static string BindingPrefix;
    private static char BindingIndexEnd;
    private object _lockObj;
    private ConcurrentDictionary`2<GenericGrainType, GrainType> _genericMapping;
    private IClusterManifestProvider _clusterManifestProvider;
    private Cache _cache;
    public GrainBindingsResolver(IClusterManifestProvider clusterManifestProvider);
    public GrainBindings GetBindings(GrainType grainType);
    public ValueTuple`2<MajorMinorVersion, ImmutableDictionary`2<GrainType, GrainBindings>> GetAllBindings();
    private Cache GetCache();
    private Cache BuildCache(ClusterManifest clusterManifest);
    [CompilerGeneratedAttribute]
internal static bool <BuildCache>g__TryExtractBindingProperty|10_0(KeyValuePair`2<string, string> property, ValueTuple`3& result);
}
public class Orleans.Metadata.GrainInterfaceTypeResolver : object {
    private IGrainInterfaceTypeProvider[] _providers;
    private TypeConverter _typeConverter;
    public GrainInterfaceTypeResolver(IEnumerable`1<IGrainInterfaceTypeProvider> providers, TypeConverter typeConverter);
    public GrainInterfaceType GetGrainInterfaceType(Type type);
    public GrainInterfaceType GetGrainInterfaceTypeByConvention(Type type);
    private GrainInterfaceType AddGenericParameters(GrainInterfaceType result, Type type);
}
public class Orleans.Metadata.GrainPropertiesResolver : object {
    private IClusterManifestProvider _clusterManifestProvider;
    public GrainPropertiesResolver(IClusterManifestProvider clusterManifestProvider);
    public GrainProperties GetGrainProperties(GrainType grainType);
    public bool TryGetGrainProperties(GrainType grainType, GrainProperties& properties);
}
public class Orleans.Metadata.GrainTypeResolver : object {
    private static string GrainSuffix;
    private IGrainTypeProvider[] _providers;
    private TypeConverter _typeConverter;
    public GrainTypeResolver(IEnumerable`1<IGrainTypeProvider> resolvers, TypeConverter argumentFormatter);
    public GrainType GetGrainType(Type type);
    private GrainType GetGrainTypeByConvention(Type type);
    private GrainType AddGenericParameters(GrainType grainType, Type type);
}
internal class Orleans.Metadata.ImplementedInterfaceProvider : object {
    private GrainInterfaceTypeResolver interfaceTypeResolver;
    private String[] _cachedKeys;
    public ImplementedInterfaceProvider(GrainInterfaceTypeResolver interfaceTypeResolver);
    public sealed virtual void Populate(Type grainClass, GrainType grainType, Dictionary`2<string, string> properties);
    private static string GetKey(int counter);
    public static bool IsGrainInterface(Type type);
}
internal class Orleans.Metadata.TypeNameGrainPropertiesProvider : object {
    public sealed virtual void Populate(Type grainClass, GrainType grainType, Dictionary`2<string, string> properties);
    public sealed virtual void Populate(Type interfaceType, GrainInterfaceType interfaceId, Dictionary`2<string, string> properties);
}
internal class Orleans.MultiTaskCompletionSource : object {
    private TaskCompletionSource _tcs;
    private int _count;
    public Task Task { get; }
    public MultiTaskCompletionSource(int count);
    public Task get_Task();
    public void SetOneResult();
}
[ExtensionAttribute]
public static class Orleans.NamedOptionExtensions : object {
    [ExtensionAttribute]
public static TOption GetOptionsByName(IServiceProvider services, string name);
}
[ExtensionAttribute]
internal static class Orleans.Networking.Shared.BufferExtensions : object {
    [ExtensionAttribute]
public static ArraySegment`1<byte> GetArray(Memory`1<byte> memory);
    [ExtensionAttribute]
public static ArraySegment`1<byte> GetArray(ReadOnlyMemory`1<byte> memory);
    [CompilerGeneratedAttribute]
internal static void <GetArray>g__ThrowInvalid|1_0();
}
internal static class Orleans.Networking.Shared.CorrelationIdGenerator : object {
    private static Char[] s_encode32Chars;
    private static long _lastId;
    private static CorrelationIdGenerator();
    public static string GetNextId();
    private static string GenerateId(long id);
}
internal class Orleans.Networking.Shared.DuplexPipe : object {
    [CompilerGeneratedAttribute]
private PipeReader <Input>k__BackingField;
    [CompilerGeneratedAttribute]
private PipeWriter <Output>k__BackingField;
    public PipeReader Input { get; }
    public PipeWriter Output { get; }
    public DuplexPipe(PipeReader reader, PipeWriter writer);
    [CompilerGeneratedAttribute]
public sealed virtual PipeReader get_Input();
    [CompilerGeneratedAttribute]
public sealed virtual PipeWriter get_Output();
    public static DuplexPipePair CreateConnectionPair(PipeOptions inputOptions, PipeOptions outputOptions);
}
internal interface Orleans.Networking.Shared.IConnectionIdFeature {
    public string ConnectionId { get; public set; }
    public abstract virtual string get_ConnectionId();
    public abstract virtual void set_ConnectionId(string value);
}
internal interface Orleans.Networking.Shared.IConnectionItemsFeature {
    public IDictionary`2<object, object> Items { get; public set; }
    public abstract virtual IDictionary`2<object, object> get_Items();
    public abstract virtual void set_Items(IDictionary`2<object, object> value);
}
internal interface Orleans.Networking.Shared.IConnectionTransportFeature {
    public IDuplexPipe Transport { get; public set; }
    public abstract virtual IDuplexPipe get_Transport();
    public abstract virtual void set_Transport(IDuplexPipe value);
}
internal interface Orleans.Networking.Shared.IMemoryPoolFeature {
    public MemoryPool`1<byte> MemoryPool { get; }
    public abstract virtual MemoryPool`1<byte> get_MemoryPool();
}
internal class Orleans.Networking.Shared.IOQueue : PipeScheduler {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentQueue`1<ValueTuple`2<Action`1<object>, object>> _workItems;
    private int _doingWork;
    public virtual void Schedule(Action`1<object> action, object state);
    public sealed virtual void Execute();
}
internal interface Orleans.Networking.Shared.ISocketsTrace {
    public abstract virtual void ConnectionReadFin(string connectionId);
    public abstract virtual void ConnectionWriteFin(string connectionId, string reason);
    public abstract virtual void ConnectionError(string connectionId, Exception ex);
    public abstract virtual void ConnectionReset(string connectionId);
    public abstract virtual void ConnectionPause(string connectionId);
    public abstract virtual void ConnectionResume(string connectionId);
}
internal static class Orleans.Networking.Shared.KestrelMemoryPool : object {
    public static int MinimumSegmentSize;
    private static KestrelMemoryPool();
    public static MemoryPool`1<byte> Create();
    public static MemoryPool`1<byte> CreateSlabMemoryPool();
}
internal class Orleans.Networking.Shared.MemoryPoolBlock : object {
    private int _offset;
    private int _length;
    [CompilerGeneratedAttribute]
private SlabMemoryPool <Pool>k__BackingField;
    [CompilerGeneratedAttribute]
private MemoryPoolSlab <Slab>k__BackingField;
    [CompilerGeneratedAttribute]
private Memory`1<byte> <Memory>k__BackingField;
    public SlabMemoryPool Pool { get; }
    public MemoryPoolSlab Slab { get; }
    public Memory`1<byte> Memory { get; }
    internal MemoryPoolBlock(SlabMemoryPool pool, MemoryPoolSlab slab, int offset, int length);
    [CompilerGeneratedAttribute]
public SlabMemoryPool get_Pool();
    [CompilerGeneratedAttribute]
public MemoryPoolSlab get_Slab();
    [CompilerGeneratedAttribute]
public sealed virtual Memory`1<byte> get_Memory();
    protected virtual override void Finalize();
    public sealed virtual void Dispose();
    public void Lease();
}
internal class Orleans.Networking.Shared.MemoryPoolSlab : object {
    private GCHandle _gcHandle;
    private bool _isDisposed;
    [CompilerGeneratedAttribute]
private IntPtr <NativePointer>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Array>k__BackingField;
    public bool IsActive { get; }
    public IntPtr NativePointer { get; private set; }
    public Byte[] Array { get; private set; }
    public MemoryPoolSlab(Byte[] data);
    public bool get_IsActive();
    [CompilerGeneratedAttribute]
public IntPtr get_NativePointer();
    [CompilerGeneratedAttribute]
private void set_NativePointer(IntPtr value);
    [CompilerGeneratedAttribute]
public Byte[] get_Array();
    [CompilerGeneratedAttribute]
private void set_Array(Byte[] value);
    public static MemoryPoolSlab Create(int length);
    protected void Dispose(bool disposing);
    protected virtual override void Finalize();
    public sealed virtual void Dispose();
}
internal class Orleans.Networking.Shared.SharedMemoryPool : object {
    [CompilerGeneratedAttribute]
private MemoryPool`1<byte> <Pool>k__BackingField;
    public MemoryPool`1<byte> Pool { get; }
    [CompilerGeneratedAttribute]
public MemoryPool`1<byte> get_Pool();
}
internal class Orleans.Networking.Shared.SlabMemoryPool : MemoryPool`1<byte> {
    private static int _blockSize;
    private static int _blockCount;
    [CompilerGeneratedAttribute]
private int <MaxBufferSize>k__BackingField;
    private static int _slabLength;
    private ConcurrentQueue`1<MemoryPoolBlock> _blocks;
    private ConcurrentStack`1<MemoryPoolSlab> _slabs;
    private bool _isDisposed;
    private int _totalAllocatedBlocks;
    private object _disposeSync;
    private static int AnySize;
    public int MaxBufferSize { get; }
    public static int BlockSize { get; }
    private static SlabMemoryPool();
    [CompilerGeneratedAttribute]
public virtual int get_MaxBufferSize();
    public static int get_BlockSize();
    public virtual IMemoryOwner`1<byte> Rent(int size);
    private MemoryPoolBlock Lease();
    private MemoryPoolBlock AllocateSlab();
    internal void Return(MemoryPoolBlock block);
    internal void RefreshBlock(MemoryPoolSlab slab, int offset, int length);
    protected virtual void Dispose(bool disposing);
    private static void ThrowArgumentOutOfRangeException_BufferRequestTooLarge(int maxSize);
    private static void ThrowObjectDisposedException();
}
internal class Orleans.Networking.Shared.SocketAwaitableEventArgs : SocketAsyncEventArgs {
    private static Action _callbackCompleted;
    private PipeScheduler _ioScheduler;
    private Action _callback;
    public bool IsCompleted { get; }
    public SocketAwaitableEventArgs(PipeScheduler ioScheduler);
    private static SocketAwaitableEventArgs();
    public SocketAwaitableEventArgs GetAwaiter();
    public bool get_IsCompleted();
    public int GetResult();
    public sealed virtual void OnCompleted(Action continuation);
    public sealed virtual void UnsafeOnCompleted(Action continuation);
    public void Complete();
    protected virtual void OnCompleted(SocketAsyncEventArgs _);
    [CompilerGeneratedAttribute]
internal static void <GetResult>g__ThrowSocketException|7_0(SocketError e);
}
internal class Orleans.Networking.Shared.SocketConnection : TransportConnection {
    private static int MinAllocBufferSize;
    private static bool IsWindows;
    private static bool IsMacOS;
    private Socket _socket;
    private ISocketsTrace _trace;
    private SocketReceiver _receiver;
    private SocketSender _sender;
    private CancellationTokenSource _connectionClosedTokenSource;
    private object _shutdownLock;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _socketDisposed;
    private Exception modreq(System.Runtime.CompilerServices.IsVolatile) _shutdownReason;
    private Task _processingTask;
    private TaskCompletionSource`1<object> _waitForConnectionClosedTcs;
    private bool _connectionClosed;
    [CompilerGeneratedAttribute]
private MemoryPool`1<byte> <MemoryPool>k__BackingField;
    public PipeWriter Input { get; }
    public PipeReader Output { get; }
    public MemoryPool`1<byte> MemoryPool { get; }
    internal SocketConnection(Socket socket, MemoryPool`1<byte> memoryPool, PipeScheduler scheduler, ISocketsTrace trace, Nullable`1<long> maxReadBufferSize, Nullable`1<long> maxWriteBufferSize);
    private static SocketConnection();
    public PipeWriter get_Input();
    public PipeReader get_Output();
    [CompilerGeneratedAttribute]
public virtual MemoryPool`1<byte> get_MemoryPool();
    public void Start();
    [AsyncStateMachineAttribute("Orleans.Networking.Shared.SocketConnection/<StartAsync>d__23")]
private Task StartAsync();
    public virtual void Abort(ConnectionAbortedException abortReason);
    [AsyncStateMachineAttribute("Orleans.Networking.Shared.SocketConnection/<DisposeAsync>d__25")]
public virtual ValueTask DisposeAsync();
    [AsyncStateMachineAttribute("Orleans.Networking.Shared.SocketConnection/<DoReceive>d__26")]
private Task DoReceive();
    [AsyncStateMachineAttribute("Orleans.Networking.Shared.SocketConnection/<ProcessReceives>d__27")]
private Task ProcessReceives();
    [AsyncStateMachineAttribute("Orleans.Networking.Shared.SocketConnection/<DoSend>d__28")]
private Task DoSend();
    [AsyncStateMachineAttribute("Orleans.Networking.Shared.SocketConnection/<ProcessSends>d__29")]
private Task ProcessSends();
    private void FireConnectionClosed();
    private void Shutdown(Exception shutdownReason);
    private void CancelConnectionClosedToken();
    private static bool IsConnectionResetError(SocketError errorCode);
    private static bool IsConnectionAbortError(SocketError errorCode);
}
[GenerateSerializerAttribute]
public class Orleans.Networking.Shared.SocketConnectionException : OrleansException {
    public SocketConnectionException(string message);
    public SocketConnectionException(string message, Exception innerException);
    [ObsoleteAttribute]
public SocketConnectionException(SerializationInfo info, StreamingContext context);
}
internal class Orleans.Networking.Shared.SocketConnectionFactory : object {
    private SocketsTrace trace;
    private SocketSchedulers schedulers;
    private MemoryPool`1<byte> memoryPool;
    private SocketConnectionOptions _options;
    public SocketConnectionFactory(ILoggerFactory loggerFactory, SocketSchedulers schedulers, SharedMemoryPool memoryPool, IOptions`1<SocketConnectionOptions> options);
    [AsyncStateMachineAttribute("Orleans.Networking.Shared.SocketConnectionFactory/<ConnectAsync>d__5")]
public sealed virtual ValueTask`1<ConnectionContext> ConnectAsync(EndPoint endpoint, CancellationToken cancellationToken);
}
internal class Orleans.Networking.Shared.SocketConnectionListener : object {
    private MemoryPool`1<byte> _memoryPool;
    private SocketSchedulers _schedulers;
    private ISocketsTrace _trace;
    private Socket _listenSocket;
    private SocketConnectionOptions _options;
    [CompilerGeneratedAttribute]
private EndPoint <EndPoint>k__BackingField;
    public EndPoint EndPoint { get; private set; }
    internal SocketConnectionListener(EndPoint endpoint, SocketConnectionOptions options, ISocketsTrace trace, SocketSchedulers schedulers);
    [CompilerGeneratedAttribute]
public sealed virtual EndPoint get_EndPoint();
    [CompilerGeneratedAttribute]
private void set_EndPoint(EndPoint value);
    internal void Bind();
    [AsyncStateMachineAttribute("Orleans.Networking.Shared.SocketConnectionListener/<AcceptAsync>d__11")]
public sealed virtual ValueTask`1<ConnectionContext> AcceptAsync(CancellationToken cancellationToken);
    public sealed virtual ValueTask UnbindAsync(CancellationToken cancellationToken);
    public sealed virtual ValueTask DisposeAsync();
}
internal class Orleans.Networking.Shared.SocketConnectionListenerFactory : object {
    private SocketConnectionOptions socketConnectionOptions;
    private SocketsTrace trace;
    private SocketSchedulers schedulers;
    public SocketConnectionListenerFactory(ILoggerFactory loggerFactory, IOptions`1<SocketConnectionOptions> socketConnectionOptions, SocketSchedulers schedulers);
    public sealed virtual ValueTask`1<IConnectionListener> BindAsync(EndPoint endpoint, CancellationToken cancellationToken);
}
public class Orleans.Networking.Shared.SocketConnectionOptions : object {
    [CompilerGeneratedAttribute]
private int <IOQueueCount>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NoDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <KeepAlive>k__BackingField;
    [CompilerGeneratedAttribute]
private int <KeepAliveTimeSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <KeepAliveIntervalSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <KeepAliveRetryCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<MemoryPool`1<byte>> <MemoryPoolFactory>k__BackingField;
    public int IOQueueCount { get; public set; }
    public bool NoDelay { get; public set; }
    public bool KeepAlive { get; public set; }
    public int KeepAliveTimeSeconds { get; public set; }
    public int KeepAliveIntervalSeconds { get; public set; }
    public int KeepAliveRetryCount { get; public set; }
    internal Func`1<MemoryPool`1<byte>> MemoryPoolFactory { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_IOQueueCount();
    [CompilerGeneratedAttribute]
public void set_IOQueueCount(int value);
    [CompilerGeneratedAttribute]
public bool get_NoDelay();
    [CompilerGeneratedAttribute]
public void set_NoDelay(bool value);
    [CompilerGeneratedAttribute]
public bool get_KeepAlive();
    [CompilerGeneratedAttribute]
public void set_KeepAlive(bool value);
    [CompilerGeneratedAttribute]
public int get_KeepAliveTimeSeconds();
    [CompilerGeneratedAttribute]
public void set_KeepAliveTimeSeconds(int value);
    [CompilerGeneratedAttribute]
public int get_KeepAliveIntervalSeconds();
    [CompilerGeneratedAttribute]
public void set_KeepAliveIntervalSeconds(int value);
    [CompilerGeneratedAttribute]
public int get_KeepAliveRetryCount();
    [CompilerGeneratedAttribute]
public void set_KeepAliveRetryCount(int value);
    [CompilerGeneratedAttribute]
internal Func`1<MemoryPool`1<byte>> get_MemoryPoolFactory();
    [CompilerGeneratedAttribute]
internal void set_MemoryPoolFactory(Func`1<MemoryPool`1<byte>> value);
}
[ExtensionAttribute]
internal static class Orleans.Networking.Shared.SocketExtensions : object {
    private static int SIO_LOOPBACK_FAST_PATH;
    private static Byte[] Enabled;
    private static SocketExtensions();
    [ExtensionAttribute]
internal static void EnableFastPath(Socket socket);
    [ExtensionAttribute]
internal static void EnableKeepAlive(Socket socket, int timeSeconds, int intervalSeconds, int retryCount);
}
internal class Orleans.Networking.Shared.SocketReceiver : SocketSenderReceiverBase {
    public SocketReceiver(Socket socket, PipeScheduler scheduler);
    public SocketAwaitableEventArgs WaitForDataAsync();
    public SocketAwaitableEventArgs ReceiveAsync(Memory`1<byte> buffer);
}
internal class Orleans.Networking.Shared.SocketSchedulers : object {
    private static PipeScheduler[] ThreadPoolSchedulerArray;
    private int _numSchedulers;
    private PipeScheduler[] _schedulers;
    private int nextScheduler;
    public SocketSchedulers(IOptions`1<SocketConnectionOptions> options);
    private static SocketSchedulers();
    public PipeScheduler GetScheduler();
}
internal class Orleans.Networking.Shared.SocketSender : SocketSenderReceiverBase {
    private List`1<ArraySegment`1<byte>> _bufferList;
    public SocketSender(Socket socket, PipeScheduler scheduler);
    public SocketAwaitableEventArgs SendAsync(ReadOnlySequence`1& buffers);
    private SocketAwaitableEventArgs SendAsync(ReadOnlyMemory`1<byte> memory);
    private List`1<ArraySegment`1<byte>> GetBufferList(ReadOnlySequence`1& buffer);
}
internal abstract class Orleans.Networking.Shared.SocketSenderReceiverBase : object {
    protected Socket _socket;
    protected SocketAwaitableEventArgs _awaitableEventArgs;
    protected SocketSenderReceiverBase(Socket socket, PipeScheduler scheduler);
    public sealed virtual void Dispose();
}
internal class Orleans.Networking.Shared.SocketsTrace : object {
    private static Action`3<ILogger, string, Exception> _connectionPause;
    private static Action`3<ILogger, string, Exception> _connectionResume;
    private static Action`3<ILogger, string, Exception> _connectionReadFin;
    private static Action`4<ILogger, string, string, Exception> _connectionWriteFin;
    private static Action`3<ILogger, string, Exception> _connectionError;
    private static Action`3<ILogger, string, Exception> _connectionReset;
    private ILogger _logger;
    public SocketsTrace(ILogger logger);
    private static SocketsTrace();
    public void ConnectionRead(string connectionId, int count);
    public sealed virtual void ConnectionReadFin(string connectionId);
    public sealed virtual void ConnectionWriteFin(string connectionId, string reason);
    public void ConnectionWrite(string connectionId, int count);
    public void ConnectionWriteCallback(string connectionId, int status);
    public sealed virtual void ConnectionError(string connectionId, Exception ex);
    public sealed virtual void ConnectionReset(string connectionId);
    public sealed virtual void ConnectionPause(string connectionId);
    public sealed virtual void ConnectionResume(string connectionId);
    public sealed virtual IDisposable BeginScope(TState state);
    public sealed virtual bool IsEnabled(LogLevel logLevel);
    public sealed virtual void Log(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3<TState, Exception, string> formatter);
}
internal abstract class Orleans.Networking.Shared.TransportConnection : ConnectionContext {
    private IDictionary`2<object, object> _items;
    private string _connectionId;
    [CompilerGeneratedAttribute]
private EndPoint <LocalEndPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private EndPoint <RemoteEndPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private MemoryPool`1<byte> <MemoryPool>k__BackingField;
    [CompilerGeneratedAttribute]
private IDuplexPipe <Transport>k__BackingField;
    [CompilerGeneratedAttribute]
private IDuplexPipe <Application>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <ConnectionClosed>k__BackingField;
    private static Type IConnectionIdFeatureType;
    private static Type IConnectionTransportFeatureType;
    private static Type IConnectionItemsFeatureType;
    private static Type IMemoryPoolFeatureType;
    private static Type IConnectionLifetimeFeatureType;
    private object _currentIConnectionIdFeature;
    private object _currentIConnectionTransportFeature;
    private object _currentIConnectionItemsFeature;
    private object _currentIMemoryPoolFeature;
    private object _currentIConnectionLifetimeFeature;
    private int _featureRevision;
    private List`1<KeyValuePair`2<Type, object>> MaybeExtra;
    public EndPoint LocalEndPoint { get; public set; }
    public EndPoint RemoteEndPoint { get; public set; }
    public string ConnectionId { get; public set; }
    public IFeatureCollection Features { get; }
    public MemoryPool`1<byte> MemoryPool { get; }
    public IDuplexPipe Transport { get; public set; }
    public IDuplexPipe Application { get; public set; }
    public IDictionary`2<object, object> Items { get; public set; }
    public CancellationToken ConnectionClosed { get; public set; }
    private MemoryPool`1<byte> Orleans.Networking.Shared.IMemoryPoolFeature.MemoryPool { get; }
    private IDuplexPipe Orleans.Networking.Shared.IConnectionTransportFeature.Transport { get; private set; }
    private IDictionary`2<object, object> Orleans.Networking.Shared.IConnectionItemsFeature.Items { get; private set; }
    private CancellationToken Microsoft.AspNetCore.Connections.Features.IConnectionLifetimeFeature.ConnectionClosed { get; private set; }
    private bool Microsoft.AspNetCore.Http.Features.IFeatureCollection.IsReadOnly { get; }
    private int Microsoft.AspNetCore.Http.Features.IFeatureCollection.Revision { get; }
    private object Microsoft.AspNetCore.Http.Features.IFeatureCollection.Item { get; private set; }
    private static TransportConnection();
    [CompilerGeneratedAttribute]
public virtual EndPoint get_LocalEndPoint();
    [CompilerGeneratedAttribute]
public virtual void set_LocalEndPoint(EndPoint value);
    [CompilerGeneratedAttribute]
public virtual EndPoint get_RemoteEndPoint();
    [CompilerGeneratedAttribute]
public virtual void set_RemoteEndPoint(EndPoint value);
    public virtual string get_ConnectionId();
    public virtual void set_ConnectionId(string value);
    public virtual IFeatureCollection get_Features();
    [CompilerGeneratedAttribute]
public virtual MemoryPool`1<byte> get_MemoryPool();
    [CompilerGeneratedAttribute]
public virtual IDuplexPipe get_Transport();
    [CompilerGeneratedAttribute]
public virtual void set_Transport(IDuplexPipe value);
    [CompilerGeneratedAttribute]
public IDuplexPipe get_Application();
    [CompilerGeneratedAttribute]
public void set_Application(IDuplexPipe value);
    public virtual IDictionary`2<object, object> get_Items();
    public virtual void set_Items(IDictionary`2<object, object> value);
    [CompilerGeneratedAttribute]
public virtual CancellationToken get_ConnectionClosed();
    [CompilerGeneratedAttribute]
public virtual void set_ConnectionClosed(CancellationToken value);
    public virtual void Abort(ConnectionAbortedException abortReason);
    private sealed virtual override MemoryPool`1<byte> Orleans.Networking.Shared.IMemoryPoolFeature.get_MemoryPool();
    private sealed virtual override IDuplexPipe Orleans.Networking.Shared.IConnectionTransportFeature.get_Transport();
    private sealed virtual override void Orleans.Networking.Shared.IConnectionTransportFeature.set_Transport(IDuplexPipe value);
    private sealed virtual override IDictionary`2<object, object> Orleans.Networking.Shared.IConnectionItemsFeature.get_Items();
    private sealed virtual override void Orleans.Networking.Shared.IConnectionItemsFeature.set_Items(IDictionary`2<object, object> value);
    private sealed virtual override CancellationToken Microsoft.AspNetCore.Connections.Features.IConnectionLifetimeFeature.get_ConnectionClosed();
    private sealed virtual override void Microsoft.AspNetCore.Connections.Features.IConnectionLifetimeFeature.set_ConnectionClosed(CancellationToken value);
    private sealed virtual override void Microsoft.AspNetCore.Connections.Features.IConnectionLifetimeFeature.Abort();
    private void FastReset();
    internal void ResetFeatureCollection();
    private object ExtraFeatureGet(Type key);
    private void ExtraFeatureSet(Type key, object value);
    private sealed virtual override bool Microsoft.AspNetCore.Http.Features.IFeatureCollection.get_IsReadOnly();
    private sealed virtual override int Microsoft.AspNetCore.Http.Features.IFeatureCollection.get_Revision();
    private sealed virtual override object Microsoft.AspNetCore.Http.Features.IFeatureCollection.get_Item(Type key);
    private sealed virtual override void Microsoft.AspNetCore.Http.Features.IFeatureCollection.set_Item(Type key, object value);
    private sealed virtual override TFeature Microsoft.AspNetCore.Http.Features.IFeatureCollection.Get();
    private sealed virtual override void Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set(TFeature feature);
    [IteratorStateMachineAttribute("Orleans.Networking.Shared.TransportConnection/<FastEnumerable>d__72")]
private IEnumerable`1<KeyValuePair`2<Type, object>> FastEnumerable();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<Type, object>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type,System.Object>>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public static class Orleans.OptionFormattingUtilities : object {
    private static string DefaultFormatFormatting;
    private static string DefaultNamedFormatting;
    public static string Format(object key, object value, string formatting);
    public static string Name(string name, string formatting);
}
public abstract class Orleans.OptionsLogger : object {
    private ILogger logger;
    private IServiceProvider services;
    protected OptionsLogger(ILogger logger, IServiceProvider services);
    public void LogOptions();
    public void LogOptions(IEnumerable`1<IOptionFormatter> formatters);
    public void LogOption(IOptionFormatter formatter);
}
internal class Orleans.OutsideRuntimeClient : object {
    [CompilerGeneratedAttribute]
private static bool <TestOnlyThrowExceptionDuringInit>k__BackingField;
    private ILogger logger;
    private ClientMessagingOptions clientMessagingOptions;
    private ConcurrentDictionary`2<CorrelationId, CallbackData> callbacks;
    private InvokableObjectManager localObjects;
    private bool disposing;
    private bool disposed;
    private MessagingTrace messagingTrace;
    private InterfaceToImplementationMappingCache _interfaceToImplementationMapping;
    [CompilerGeneratedAttribute]
private IInternalGrainFactory <InternalGrainFactory>k__BackingField;
    private MessageFactory messageFactory;
    private LocalClientDetails _localClientDetails;
    private ILoggerFactory loggerFactory;
    private SharedCallbackData sharedCallbackData;
    private PeriodicTimer callbackTimer;
    private Task callbackTimerTask;
    [CompilerGeneratedAttribute]
private GrainAddress <CurrentActivationAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientGatewayObserver <gatewayObserver>k__BackingField;
    [CompilerGeneratedAttribute]
private IGrainReferenceRuntime <GrainReferenceRuntime>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientMessageCenter <MessageCenter>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeProvider <TimeProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ConnectionToClusterLostHandler ClusterConnectionLost;
    [CompilerGeneratedAttribute]
private GatewayCountChangedHandler GatewayCountChanged;
    internal static bool TestOnlyThrowExceptionDuringInit { get; internal set; }
    public IInternalGrainFactory InternalGrainFactory { get; private set; }
    public GrainAddress CurrentActivationAddress { get; private set; }
    public ClientGatewayObserver gatewayObserver { get; private set; }
    public string CurrentActivationIdentity { get; }
    public IGrainReferenceRuntime GrainReferenceRuntime { get; private set; }
    internal ClientMessageCenter MessageCenter { get; private set; }
    public IServiceProvider ServiceProvider { get; private set; }
    public TimeProvider TimeProvider { get; }
    public OutsideRuntimeClient(LocalClientDetails localClientDetails, ILoggerFactory loggerFactory, IOptions`1<ClientMessagingOptions> clientMessagingOptions, MessagingTrace messagingTrace, IServiceProvider serviceProvider, TimeProvider timeProvider, InterfaceToImplementationMappingCache interfaceToImplementationMapping);
    [CompilerGeneratedAttribute]
internal static bool get_TestOnlyThrowExceptionDuringInit();
    [CompilerGeneratedAttribute]
internal static void set_TestOnlyThrowExceptionDuringInit(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual IInternalGrainFactory get_InternalGrainFactory();
    [CompilerGeneratedAttribute]
private void set_InternalGrainFactory(IInternalGrainFactory value);
    [CompilerGeneratedAttribute]
public GrainAddress get_CurrentActivationAddress();
    [CompilerGeneratedAttribute]
private void set_CurrentActivationAddress(GrainAddress value);
    [CompilerGeneratedAttribute]
public ClientGatewayObserver get_gatewayObserver();
    [CompilerGeneratedAttribute]
private void set_gatewayObserver(ClientGatewayObserver value);
    public sealed virtual string get_CurrentActivationIdentity();
    [CompilerGeneratedAttribute]
public sealed virtual IGrainReferenceRuntime get_GrainReferenceRuntime();
    [CompilerGeneratedAttribute]
private void set_GrainReferenceRuntime(IGrainReferenceRuntime value);
    [CompilerGeneratedAttribute]
internal ClientMessageCenter get_MessageCenter();
    [CompilerGeneratedAttribute]
private void set_MessageCenter(ClientMessageCenter value);
    internal void ConsumeServices();
    [CompilerGeneratedAttribute]
public sealed virtual IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
private void set_ServiceProvider(IServiceProvider value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeProvider get_TimeProvider();
    [AsyncStateMachineAttribute("Orleans.OutsideRuntimeClient/<StartAsync>d__49")]
public Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Orleans.OutsideRuntimeClient/<StopAsync>d__50")]
public Task StopAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Orleans.OutsideRuntimeClient/<StartInternal>d__51")]
private Task StartInternal(CancellationToken cancellationToken);
    private void HandleMessage(Message message);
    public sealed virtual void SendResponse(Message request, Response response);
    public sealed virtual void SendRequest(GrainReference target, IInvokable request, IResponseCompletionSource context, InvokeMethodOptions options);
    public sealed virtual void ReceiveResponse(Message response);
    private void UnregisterCallback(CorrelationId id);
    private void ConstructorReset();
    public sealed virtual TimeSpan GetResponseTimeout();
    public sealed virtual void SetResponseTimeout(TimeSpan timeout);
    public sealed virtual IAddressable CreateObjectReference(IAddressable obj);
    public sealed virtual void DeleteObjectReference(IAddressable obj);
    public sealed virtual void Dispose();
    public sealed virtual void BreakOutstandingMessagesToDeadSilo(SiloAddress deadSilo);
    public sealed virtual int GetRunningRequestsCount(GrainInterfaceType grainInterfaceType);
    [CompilerGeneratedAttribute]
public void add_ClusterConnectionLost(ConnectionToClusterLostHandler value);
    [CompilerGeneratedAttribute]
public void remove_ClusterConnectionLost(ConnectionToClusterLostHandler value);
    [CompilerGeneratedAttribute]
public void add_GatewayCountChanged(GatewayCountChangedHandler value);
    [CompilerGeneratedAttribute]
public void remove_GatewayCountChanged(GatewayCountChangedHandler value);
    public sealed virtual void NotifyClusterConnectionLost();
    public sealed virtual void NotifyGatewayCountChanged(int currentNumberOfGateways, int previousNumberOfGateways);
    [AsyncStateMachineAttribute("Orleans.OutsideRuntimeClient/<MonitorCallbackExpiry>d__73")]
private Task MonitorCallbackExpiry();
    private void ThrowIfDisposed();
    [CompilerGeneratedAttribute]
private void <.ctor>b__40_0(Message msg);
    [AsyncStateMachineAttribute("Orleans.OutsideRuntimeClient/<<StartInternal>g__ExecuteWithRetries|51_3>d")]
[CompilerGeneratedAttribute]
internal static Task <StartInternal>g__ExecuteWithRetries|51_3(Func`1<Task> task, IClientConnectionRetryFilter retryFilter, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private void <ConstructorReset>b__57_0();
    [CompilerGeneratedAttribute]
private void <Dispose>b__62_0();
    [CompilerGeneratedAttribute]
private void <Dispose>b__62_1();
    [CompilerGeneratedAttribute]
internal static void <ThrowIfDisposed>g__ThrowObjectDisposedException|74_0();
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
internal class Orleans.Placement.Repartitioning.AcceptExchangeRequest : object {
    [CompilerGeneratedAttribute]
private SiloAddress <SendingSilo>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableArray`1<CandidateVertex> <ExchangeSet>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ActivationCountSnapshot>k__BackingField;
    [IdAttribute("0")]
public SiloAddress SendingSilo { get; }
    [IdAttribute("1")]
public ImmutableArray`1<CandidateVertex> ExchangeSet { get; }
    [IdAttribute("2")]
public int ActivationCountSnapshot { get; }
    public AcceptExchangeRequest(SiloAddress sendingSilo, ImmutableArray`1<CandidateVertex> exchangeSet, int activationCountSnapshot);
    [CompilerGeneratedAttribute]
public SiloAddress get_SendingSilo();
    [CompilerGeneratedAttribute]
public ImmutableArray`1<CandidateVertex> get_ExchangeSet();
    [CompilerGeneratedAttribute]
public int get_ActivationCountSnapshot();
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
internal class Orleans.Placement.Repartitioning.AcceptExchangeResponse : object {
    public static AcceptExchangeResponse CachedExchangedRecently;
    public static AcceptExchangeResponse CachedMutualExchangeAttempt;
    [CompilerGeneratedAttribute]
private ResponseType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableArray`1<GrainId> <AcceptedGrainIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableArray`1<GrainId> <GivenGrainIds>k__BackingField;
    [IdAttribute("0")]
public ResponseType Type { get; }
    [IdAttribute("1")]
public ImmutableArray`1<GrainId> AcceptedGrainIds { get; }
    [IdAttribute("2")]
public ImmutableArray`1<GrainId> GivenGrainIds { get; }
    public AcceptExchangeResponse(ResponseType type, ImmutableArray`1<GrainId> acceptedGrains, ImmutableArray`1<GrainId> givenGrains);
    private static AcceptExchangeResponse();
    [CompilerGeneratedAttribute]
public ResponseType get_Type();
    [CompilerGeneratedAttribute]
public ImmutableArray`1<GrainId> get_AcceptedGrainIds();
    [CompilerGeneratedAttribute]
public ImmutableArray`1<GrainId> get_GivenGrainIds();
}
[IsReadOnlyAttribute]
[GenerateSerializerAttribute]
[ImmutableAttribute]
public class Orleans.Placement.Repartitioning.CandidateConnectedVertex : ValueType {
    [CompilerGeneratedAttribute]
private GrainId <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TransferScore>k__BackingField;
    [IdAttribute("0")]
public GrainId Id { get; }
    [IdAttribute("1")]
public long TransferScore { get; }
    public CandidateConnectedVertex(GrainId id, long transferScore);
    [CompilerGeneratedAttribute]
public GrainId get_Id();
    [CompilerGeneratedAttribute]
public long get_TransferScore();
    public static bool op_Equality(CandidateConnectedVertex left, CandidateConnectedVertex right);
    public static bool op_Inequality(CandidateConnectedVertex left, CandidateConnectedVertex right);
    public virtual bool Equals(object obj);
    public bool Equals(CandidateConnectedVertex other);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[GenerateSerializerAttribute]
[DebuggerDisplayAttribute("Id = {Id} | Accumulated = {AccumulatedTransferScore}")]
internal class Orleans.Placement.Repartitioning.CandidateVertex : object {
    [CompilerGeneratedAttribute]
private GrainId <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private long <AccumulatedTransferScore>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableArray`1<CandidateConnectedVertex> <ConnectedVertices>k__BackingField;
    [IdAttribute("0")]
[ImmutableAttribute]
public GrainId Id { get; public set; }
    [IdAttribute("1")]
public long AccumulatedTransferScore { get; public set; }
    [IdAttribute("2")]
[ImmutableAttribute]
public ImmutableArray`1<CandidateConnectedVertex> ConnectedVertices { get; public set; }
    [CompilerGeneratedAttribute]
public GrainId get_Id();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Id(GrainId value);
    [CompilerGeneratedAttribute]
public long get_AccumulatedTransferScore();
    [CompilerGeneratedAttribute]
public void set_AccumulatedTransferScore(long value);
    [CompilerGeneratedAttribute]
public ImmutableArray`1<CandidateConnectedVertex> get_ConnectedVertices();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConnectedVertices(ImmutableArray`1<CandidateConnectedVertex> value);
    public virtual string ToString();
}
[IsReadOnlyAttribute]
[GenerateSerializerAttribute]
[ImmutableAttribute]
[DebuggerDisplayAttribute("Source: [{Source.Id} - {Source.Silo}] | Target: [{Target.Id} - {Target.Silo}]")]
internal class Orleans.Placement.Repartitioning.Edge : ValueType {
    [CompilerGeneratedAttribute]
private EdgeVertex <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private EdgeVertex <Target>k__BackingField;
    [IdAttribute("0")]
public EdgeVertex Source { get; }
    [IdAttribute("1")]
public EdgeVertex Target { get; }
    public Edge(EdgeVertex source, EdgeVertex target);
    [CompilerGeneratedAttribute]
public EdgeVertex get_Source();
    [CompilerGeneratedAttribute]
public EdgeVertex get_Target();
    public static bool op_Equality(Edge left, Edge right);
    public static bool op_Inequality(Edge left, Edge right);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(Edge other);
    public virtual int GetHashCode();
    public Edge Flip();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
[GenerateSerializerAttribute]
[ImmutableAttribute]
public class Orleans.Placement.Repartitioning.EdgeVertex : ValueType {
    [IdAttribute("0")]
public GrainId Id;
    [IdAttribute("1")]
public SiloAddress Silo;
    [IdAttribute("2")]
public bool IsMigratable;
    public EdgeVertex(GrainId id, SiloAddress silo, bool isMigratable);
    public static bool op_Equality(EdgeVertex left, EdgeVertex right);
    public static bool op_Inequality(EdgeVertex left, EdgeVertex right);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(EdgeVertex other);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[AliasAttribute("IActivationRepartitionerSystemTarget")]
internal interface Orleans.Placement.Repartitioning.IActivationRepartitionerSystemTarget {
    public static IActivationRepartitionerSystemTarget GetReference(IGrainFactory grainFactory, SiloAddress targetSilo);
    [ResponseTimeoutAttribute("00:10:00")]
public abstract virtual ValueTask TriggerExchangeRequest();
    [ResponseTimeoutAttribute("00:10:00")]
public abstract virtual ValueTask`1<AcceptExchangeResponse> AcceptExchangeRequest(AcceptExchangeRequest request);
    public abstract virtual ValueTask ResetCounters();
    public abstract virtual ValueTask`1<int> GetActivationCount();
    public abstract virtual ValueTask SetActivationCountOffset(int activationCountOffset);
    public abstract virtual ValueTask`1<ImmutableArray`1<ValueTuple`2<Edge, ulong>>> GetGrainCallFrequencies();
    public abstract virtual ValueTask FlushBuffers();
}
public interface Orleans.Placement.Repartitioning.IImbalanceToleranceRule {
    public abstract virtual bool IsSatisfiedBy(UInt32 imbalance);
}
internal interface Orleans.Placement.Repartitioning.IMessageStatisticsSink {
    public abstract virtual Action`1<Message> GetMessageObserver();
}
internal class Orleans.Placement.Repartitioning.NoOpMessageStatisticsSink : object {
    public sealed virtual Action`1<Message> GetMessageObserver();
}
internal class Orleans.Providers.ClientProviderRuntime : object {
    private IInternalGrainFactory grainFactory;
    private ClientGrainContext clientContext;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    public IGrainFactory GrainFactory { get; }
    public IServiceProvider ServiceProvider { get; }
    public ClientProviderRuntime(IInternalGrainFactory grainFactory, IServiceProvider serviceProvider, ClientGrainContext clientContext);
    public sealed virtual IGrainFactory get_GrainFactory();
    [CompilerGeneratedAttribute]
public sealed virtual IServiceProvider get_ServiceProvider();
    public sealed virtual ValueTuple`2<TExtension, TExtensionInterface> BindExtension(Func`1<TExtension> newExtensionFunc);
}
public interface Orleans.Providers.IControllable {
    public abstract virtual Task`1<object> ExecuteCommand(int command, object arg);
}
public interface Orleans.Providers.IProviderRuntime {
    public IGrainFactory GrainFactory { get; }
    public IServiceProvider ServiceProvider { get; }
    public abstract virtual IGrainFactory get_GrainFactory();
    public abstract virtual IServiceProvider get_ServiceProvider();
    public abstract virtual ValueTuple`2<TExtension, TExtensionInterface> BindExtension(Func`1<TExtension> newExtensionFunc);
}
[GenerateSerializerAttribute]
public class Orleans.Providers.ProviderInitializationException : OrleansException {
    public ProviderInitializationException(string message);
    public ProviderInitializationException(string message, Exception innerException);
    [ObsoleteAttribute]
private ProviderInitializationException(SerializationInfo info, StreamingContext context);
}
internal enum Orleans.Providers.ProviderState : Enum {
    public int value__;
    public static ProviderState None;
    public static ProviderState Initialized;
    public static ProviderState Started;
    public static ProviderState Closed;
}
[GenerateSerializerAttribute]
public class Orleans.Providers.ProviderStateException : OrleansException {
    public ProviderStateException(string message);
    public ProviderStateException(string message, Exception innerException);
    [ObsoleteAttribute]
private ProviderStateException(SerializationInfo info, StreamingContext context);
}
internal class Orleans.Providers.ProviderStateManager : object {
    [CompilerGeneratedAttribute]
private ProviderState <State>k__BackingField;
    private ProviderState presetState;
    public ProviderState State { get; private set; }
    [CompilerGeneratedAttribute]
public ProviderState get_State();
    [CompilerGeneratedAttribute]
private void set_State(ProviderState value);
    public bool PresetState(ProviderState state);
    public void CommitState();
}
internal class Orleans.Providers.StaticGatewayListProviderBuilder : object {
    public sealed virtual void Configure(IClientBuilder builder, string name, IConfigurationSection configurationSection);
}
[AttributeUsageAttribute("128")]
public class Orleans.RedactAttribute : Attribute {
    public virtual string Redact(object value);
}
[AttributeUsageAttribute("128")]
public class Orleans.RedactConnectionStringAttribute : RedactAttribute {
    public virtual string Redact(object value);
}
internal class Orleans.ReferenceEqualsComparer : object {
    [CompilerGeneratedAttribute]
private static ReferenceEqualsComparer <Default>k__BackingField;
    public static ReferenceEqualsComparer Default { get; }
    private static ReferenceEqualsComparer();
    [CompilerGeneratedAttribute]
public static ReferenceEqualsComparer get_Default();
    public sealed virtual bool Equals(object x, object y);
    public sealed virtual int GetHashCode(object obj);
}
internal class Orleans.ReferenceEqualsComparer`1 : object {
    [CompilerGeneratedAttribute]
private static ReferenceEqualsComparer`1<T> <Default>k__BackingField;
    public static ReferenceEqualsComparer`1<T> Default { get; }
    private static ReferenceEqualsComparer`1();
    [CompilerGeneratedAttribute]
public static ReferenceEqualsComparer`1<T> get_Default();
    public sealed virtual bool Equals(T x, T y);
    public sealed virtual int GetHashCode(T obj);
}
internal abstract class Orleans.Runtime.ActivityPropagationGrainCallFilter : object {
    protected static string TraceParentHeaderName;
    protected static string TraceStateHeaderName;
    internal static string RpcSystem;
    internal static string OrleansNamespacePrefix;
    internal static string ApplicationGrainActivitySourceName;
    internal static string RuntimeActivitySourceName;
    protected static ActivitySource ApplicationGrainSource;
    protected static ActivitySource RuntimeGrainSource;
    private static ActivityPropagationGrainCallFilter();
    protected static ActivitySource GetActivitySource(IGrainCallContext context);
    [AsyncStateMachineAttribute("Orleans.Runtime.ActivityPropagationGrainCallFilter/<Process>d__9")]
protected static Task Process(IGrainCallContext context, Activity activity);
}
internal class Orleans.Runtime.ActivityPropagationIncomingGrainCallFilter : ActivityPropagationGrainCallFilter {
    private DistributedContextPropagator _propagator;
    public ActivityPropagationIncomingGrainCallFilter(DistributedContextPropagator propagator);
    public sealed virtual Task Invoke(IIncomingGrainCallContext context);
}
internal class Orleans.Runtime.ActivityPropagationOutgoingGrainCallFilter : ActivityPropagationGrainCallFilter {
    private DistributedContextPropagator _propagator;
    public ActivityPropagationOutgoingGrainCallFilter(DistributedContextPropagator propagator);
    public sealed virtual Task Invoke(IOutgoingGrainCallContext context);
}
[IsReadOnlyAttribute]
internal class Orleans.Runtime.AggregatorKey : ValueType {
    [CompilerGeneratedAttribute]
private string <InstrumentName>k__BackingField;
    [CompilerGeneratedAttribute]
private KeyValuePair`2[] <Tags>k__BackingField;
    public string InstrumentName { get; }
    public KeyValuePair`2[] Tags { get; }
    public AggregatorKey(string instrumentName, KeyValuePair`2[] tags);
    [CompilerGeneratedAttribute]
public string get_InstrumentName();
    [CompilerGeneratedAttribute]
public KeyValuePair`2[] get_Tags();
    public virtual int GetHashCode();
    public sealed virtual bool Equals(AggregatorKey other);
    public virtual bool Equals(object obj);
}
internal static class Orleans.Runtime.ApplicationRequestInstruments : object {
    internal static Counter`1<long> TimedOutRequestsCounter;
    private static Int64[] AppRequestsLatencyHistogramBuckets;
    private static HistogramAggregator AppRequestsLatencyHistogramAggregator;
    private static ObservableCounter`1<long> AppRequestsLatencyHistogramBucket;
    private static ObservableCounter`1<long> AppRequestsLatencyHistogramCount;
    private static ObservableCounter`1<long> AppRequestsLatencyHistogramSum;
    private static ApplicationRequestInstruments();
    internal static void OnAppRequestsEnd(long durationMilliseconds);
    internal static void OnAppRequestsTimedOut();
}
internal class Orleans.Runtime.AsyncEnumerableGrainExtension : object {
    private static long EnumeratorExpirationMilliseconds;
    private Dictionary`2<Guid, EnumeratorState> _enumerators;
    private IGrainContext _grainContext;
    private MessagingOptions _messagingOptions;
    private IDisposable _timer;
    public AsyncEnumerableGrainExtension(IGrainContext grainContext, IOptions`1<MessagingOptions> messagingOptions);
    public sealed virtual ValueTask DisposeAsync(Guid requestId);
    [AsyncStateMachineAttribute("Orleans.Runtime.AsyncEnumerableGrainExtension/<RemoveExpiredAsync>d__7")]
private ValueTask RemoveExpiredAsync(CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<ValueTuple`2<EnumerationResult, object>> StartEnumeration(Guid requestId, IAsyncEnumerableRequest`1<T> request);
    public sealed virtual ValueTask`1<ValueTuple`2<EnumerationResult, object>> MoveNext(Guid requestId);
    private ValueTask`1<ValueTuple`2<EnumerationResult, object>> MoveNextAsync(EnumeratorState& entry, Guid requestId, IAsyncEnumerator`1<T> typedEnumerator);
    [AsyncStateMachineAttribute("Orleans.Runtime.AsyncEnumerableGrainExtension/<AwaitMoveNextAsync>d__11`1")]
private ValueTask`1<ValueTuple`2<EnumerationResult, object>> AwaitMoveNextAsync(Guid requestId, IAsyncEnumerator`1<T> typedEnumerator, Task`1<bool> moveNextTask);
    [AsyncStateMachineAttribute("Orleans.Runtime.AsyncEnumerableGrainExtension/<OnComplete>d__12`1")]
private ValueTask`1<ValueTuple`2<EnumerationResult, object>> OnComplete(Guid requestId, IAsyncEnumerator`1<T> enumerator);
    [AsyncStateMachineAttribute("Orleans.Runtime.AsyncEnumerableGrainExtension/<OnError>d__13`1")]
private ValueTask`1<ValueTuple`2<EnumerationResult, object>> OnError(Guid requestId, IAsyncEnumerator`1<T> enumerator, Exception exception);
    private void OnMoveNext(Guid requestId);
    [AsyncStateMachineAttribute("Orleans.Runtime.AsyncEnumerableGrainExtension/<DisposeAsync>d__15")]
public sealed virtual ValueTask DisposeAsync();
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Orleans.Runtime.AsyncEnumerableGrainExtension/<<StartEnumeration>g__ThrowAlreadyExists|8_0>d`1")]
[CompilerGeneratedAttribute]
internal static ValueTask`1<ValueTuple`2<EnumerationResult, object>> <StartEnumeration>g__ThrowAlreadyExists|8_0(IAsyncEnumerator`1<T> enumerator);
}
internal class Orleans.Runtime.CallbackData : object {
    private SharedCallbackData shared;
    private IResponseCompletionSource context;
    private int completed;
    private StatusResponse lastKnownStatus;
    private ValueStopwatch stopwatch;
    [CompilerGeneratedAttribute]
private Message <Message>k__BackingField;
    public Message Message { get; }
    public bool IsCompleted { get; }
    public CallbackData(SharedCallbackData shared, IResponseCompletionSource ctx, Message msg);
    [CompilerGeneratedAttribute]
public Message get_Message();
    public bool get_IsCompleted();
    public void OnStatusUpdate(StatusResponse status);
    public bool IsExpired(long currentTimestamp);
    private long GetResponseTimeoutStopwatchTicks();
    private TimeSpan GetResponseTimeout();
    public void OnTimeout();
    public void OnTargetSiloFail();
    public void DoCallback(Message response);
    private static void ResponseCallback(Message message, IResponseCompletionSource context);
    [CompilerGeneratedAttribute]
internal static void <ResponseCallback>g__HandleRejectionResponse|18_0(IResponseCompletionSource context, RejectionResponse rejection);
}
internal static class Orleans.Runtime.CatalogInstruments : object {
    internal static Counter`1<int> ActivationFailedToActivate;
    internal static Counter`1<int> ActivationCollections;
    internal static Counter`1<int> ActivationShutdown;
    internal static Counter`1<int> NonExistentActivations;
    internal static Counter`1<int> ActivationConcurrentRegistrationAttempts;
    internal static Counter`1<int> ActivationsCreated;
    internal static Counter`1<int> ActivationsDestroyed;
    internal static ObservableGauge`1<int> ActivationCount;
    internal static ObservableGauge`1<int> ActivationWorkingSet;
    private static CatalogInstruments();
    internal static void ActivationShutdownViaCollection();
    internal static void ActivationShutdownViaDeactivateOnIdle();
    internal static void ActivationShutdownViaMigration();
    internal static void ActivationShutdownViaDeactivateStuckActivation();
    internal static void RegisterActivationCountObserve(Func`1<int> observeValue);
    internal static void RegisterActivationWorkingSetObserve(Func`1<int> observeValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Orleans.Runtime.ClientClusterManifestProvider : object {
    private TaskCompletionSource`1<bool> _initialized;
    private ILogger`1<ClientClusterManifestProvider> _logger;
    private TypeManagementOptions _typeManagementOptions;
    private IServiceProvider _services;
    private LocalClientDetails _localClientDetails;
    private GatewayManager _gatewayManager;
    private AsyncEnumerable`1<ClusterManifest> _updates;
    private CancellationTokenSource _cancellation;
    private ClusterManifest _current;
    [NullableAttribute("2")]
private Task _runTask;
    [CompilerGeneratedAttribute]
private GrainManifest <LocalGrainManifest>k__BackingField;
    public ClusterManifest Current { get; }
    public IAsyncEnumerable`1<ClusterManifest> Updates { get; }
    public GrainManifest LocalGrainManifest { get; }
    public ClientClusterManifestProvider(IServiceProvider services, LocalClientDetails localClientDetails, GatewayManager gatewayManager, ILogger`1<ClientClusterManifestProvider> logger, ClientManifestProvider clientManifestProvider, IOptions`1<TypeManagementOptions> typeManagementOptions);
    public sealed virtual ClusterManifest get_Current();
    public sealed virtual IAsyncEnumerable`1<ClusterManifest> get_Updates();
    [CompilerGeneratedAttribute]
public sealed virtual GrainManifest get_LocalGrainManifest();
    public Task StartAsync();
    [AsyncStateMachineAttribute("Orleans.Runtime.ClientClusterManifestProvider/<RunAsync>d__19")]
private Task RunAsync();
    [AsyncStateMachineAttribute("Orleans.Runtime.ClientClusterManifestProvider/<GetClusterManifestUpdate>d__20")]
private Task`1<ClusterManifestUpdate> GetClusterManifestUpdate(IClusterManifestSystemTarget provider, MajorMinorVersion previousVersion);
    public sealed virtual ValueTask DisposeAsync();
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private void <.ctor>b__10_1(ClusterManifest update);
}
public static class Orleans.Runtime.ClientInstruments : object {
    internal static ObservableGauge`1<int> ConnectedGatewayCount;
    internal static void RegisterConnectedGatewayCountObserve(Func`1<int> observeValue);
}
internal class Orleans.Runtime.ClientManifestProvider : object {
    [CompilerGeneratedAttribute]
private GrainManifest <ClientManifest>k__BackingField;
    public GrainManifest ClientManifest { get; }
    public ClientManifestProvider(IEnumerable`1<IGrainInterfacePropertiesProvider> grainInterfacePropertiesProviders, IOptions`1<GrainTypeOptions> grainTypeOptions, GrainInterfaceTypeResolver interfaceTypeResolver);
    [CompilerGeneratedAttribute]
public GrainManifest get_ClientManifest();
    private static ImmutableDictionary`2<GrainInterfaceType, GrainInterfaceProperties> CreateInterfaceManifest(IEnumerable`1<IGrainInterfacePropertiesProvider> propertyProviders, IOptions`1<GrainTypeOptions> grainTypeOptions, GrainInterfaceTypeResolver interfaceTypeResolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GenerateSerializerAttribute]
[ImmutableAttribute]
public class Orleans.Runtime.ClusterManifestUpdate : object {
    [CompilerGeneratedAttribute]
private MajorMinorVersion <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableDictionary`2<SiloAddress, GrainManifest> <SiloManifests>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludesAllActiveServers>k__BackingField;
    [IdAttribute("0")]
public MajorMinorVersion Version { get; }
    [IdAttribute("1")]
public ImmutableDictionary`2<SiloAddress, GrainManifest> SiloManifests { get; }
    [IdAttribute("2")]
public bool IncludesAllActiveServers { get; }
    public ClusterManifestUpdate(MajorMinorVersion manifestVersion, ImmutableDictionary`2<SiloAddress, GrainManifest> siloManifests, bool includesAllActiveServers);
    [CompilerGeneratedAttribute]
public MajorMinorVersion get_Version();
    [CompilerGeneratedAttribute]
public ImmutableDictionary`2<SiloAddress, GrainManifest> get_SiloManifests();
    [CompilerGeneratedAttribute]
public bool get_IncludesAllActiveServers();
}
internal class Orleans.Runtime.CoarseStopwatch : ValueType {
    private long _value;
    public static long Frequency;
    public bool IsRunning { get; }
    public TimeSpan Elapsed { get; }
    public bool IsDefault { get; }
    public long ElapsedMilliseconds { get; }
    private CoarseStopwatch(long timestamp);
    public static CoarseStopwatch StartNew();
    public static CoarseStopwatch StartNew(long elapsedMs);
    public static CoarseStopwatch FromTimestamp(long timestamp);
    [IsReadOnlyAttribute]
public bool get_IsRunning();
    public TimeSpan get_Elapsed();
    [IsReadOnlyAttribute]
public bool get_IsDefault();
    [IsReadOnlyAttribute]
public long get_ElapsedMilliseconds();
    public static long GetTimestamp();
    public static CoarseStopwatch FromTimestamp(long start, long end);
    [IsReadOnlyAttribute]
public long GetRawTimestamp();
    public void Start();
    public void Restart();
    public void Reset();
    public void Stop();
    [IsReadOnlyAttribute]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
public bool Equals(CoarseStopwatch other);
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
    public static bool op_Equality(CoarseStopwatch left, CoarseStopwatch right);
    public static bool op_Inequality(CoarseStopwatch left, CoarseStopwatch right);
}
public static class Orleans.Runtime.Configuration.ConfigUtilities : object {
    internal static TimeSpan ParseTimeSpan(string input, string errorMessage);
    internal static IPAddress ResolveIPAddressOrDefault(Byte[] subnet, AddressFamily family);
    internal static IPAddress ResolveIPAddressOrDefault(string addrOrHost, Byte[] subnet, AddressFamily family);
    private static IPAddress PickIPAddress(IList`1<IPAddress> nodeIps, Byte[] subnet, AddressFamily family);
    private static IPAddress PickIPAddress(IReadOnlyList`1<IPAddress> candidates);
    internal static IPAddress GetLocalIPAddress(AddressFamily family, string interfaceName);
    public static string RedactConnectionStringInfo(string connectionString);
    [CompilerGeneratedAttribute]
internal static bool <PickIPAddress>g__CompareIPAddresses|4_0(IPAddress lhs, IPAddress rhs);
}
internal static class Orleans.Runtime.ConsistentRingInstruments : object {
    internal static ObservableGauge`1<int> RingSize;
    internal static ObservableGauge`1<float> MyRangeRingPercentage;
    internal static ObservableGauge`1<float> AverageRingPercentage;
    internal static void RegisterRingSizeObserve(Func`1<int> observeValue);
    internal static void RegisterMyRangeRingPercentageObserve(Func`1<float> observeValue);
    internal static void RegisterAverageRingPercentageObserve(Func`1<float> observeValue);
}
internal static class Orleans.Runtime.Constants : object {
    public static string TroubleshootingHelpLink;
    public static GrainType DirectoryServiceType;
    public static GrainType DirectoryCacheValidatorType;
    public static GrainType ClientDirectoryType;
    public static GrainType SiloControlType;
    public static GrainType CatalogType;
    public static GrainType MembershipServiceType;
    public static GrainType SystemMembershipTableType;
    public static GrainType FallbackSystemTargetType;
    public static GrainType LifecycleSchedulingSystemTargetType;
    public static GrainType DeploymentLoadPublisherSystemTargetType;
    public static GrainType TestHooksSystemTargetType;
    public static GrainType TransactionAgentSystemTargetType;
    public static GrainType StreamProviderManagerAgentSystemTargetType;
    public static GrainType StreamPullingAgentManagerType;
    public static GrainType StreamPullingAgentType;
    public static GrainType ManifestProviderType;
    public static GrainType ActivationMigratorType;
    public static GrainType ActivationRepartitionerType;
    public static GrainId SiloDirectConnectionId;
    public static TimeSpan DEFAULT_CLIENT_DROP_TIMEOUT;
    private static FrozenDictionary`2<GrainType, string> SingletonSystemTargetNames;
    private static Constants();
    public static string SystemTargetName(GrainType id);
    public static bool IsSingletonSystemTarget(GrainType id);
}
[IsReadOnlyAttribute]
[GenerateSerializerAttribute]
[ImmutableAttribute]
internal class Orleans.Runtime.CorrelationId : ValueType {
    [IdAttribute("0")]
private long id;
    private static long lastUsed;
    public CorrelationId(long value);
    public CorrelationId(CorrelationId other);
    public static CorrelationId GetNext();
    public virtual int GetHashCode();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(CorrelationId other);
    public static bool op_Equality(CorrelationId lhs, CorrelationId rhs);
    public static bool op_Inequality(CorrelationId lhs, CorrelationId rhs);
    public sealed virtual int CompareTo(CorrelationId other);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("2")]
private sealed virtual override string System.IFormattable.ToString(string format, IFormatProvider formatProvider);
    private sealed virtual override bool System.ISpanFormattable.TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider);
    internal long ToInt64();
}
internal class Orleans.Runtime.CounterAggregator : object {
    private KeyValuePair`2[] _tags;
    private long _value;
    public long Value { get; }
    public CounterAggregator(TagList& tagList);
    public long get_Value();
    public void Add(long measurement);
    public Measurement`1<long> Collect();
}
internal class Orleans.Runtime.CounterAggregatorGroup : object {
    [CompilerGeneratedAttribute]
private ConcurrentDictionary`2<TagList, CounterAggregator> <Aggregators>k__BackingField;
    internal ConcurrentDictionary`2<TagList, CounterAggregator> Aggregators { get; }
    [CompilerGeneratedAttribute]
internal ConcurrentDictionary`2<TagList, CounterAggregator> get_Aggregators();
    public CounterAggregator FindOrCreate(TagList tagList);
    public void Add(long measurement, string tagName1, object tagValue1);
    public void Add(long measurement, string tagName1, object tagValue1, string tagName2, object tagValue2);
    public void Add(long measurement, string tagName1, object tagValue1, string tagName2, object tagValue2, string tagName3, object tagValue3);
    public void Add(long measurement, string tagName1, object tagValue1, string tagName2, object tagValue2, string tagName3, object tagValue3, string tagName4, object tagValue4);
    public void Add(long measurement, TagList tagList);
    [IteratorStateMachineAttribute("Orleans.Runtime.CounterAggregatorGroup/<Collect>d__9")]
public IEnumerable`1<Measurement`1<long>> Collect();
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
internal class Orleans.Runtime.DetailedGrainReport : object {
    [CompilerGeneratedAttribute]
private GrainId <Grain>k__BackingField;
    [CompilerGeneratedAttribute]
private SiloAddress <SiloAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiloName>k__BackingField;
    [CompilerGeneratedAttribute]
private GrainAddress <LocalCacheActivationAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private GrainAddress <LocalDirectoryActivationAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private SiloAddress <PrimaryForGrain>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GrainClassTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalActivation>k__BackingField;
    [IdAttribute("0")]
public GrainId Grain { get; public set; }
    [IdAttribute("1")]
public SiloAddress SiloAddress { get; public set; }
    [IdAttribute("2")]
public string SiloName { get; public set; }
    [IdAttribute("3")]
public GrainAddress LocalCacheActivationAddress { get; public set; }
    [IdAttribute("4")]
public GrainAddress LocalDirectoryActivationAddress { get; public set; }
    [IdAttribute("5")]
public SiloAddress PrimaryForGrain { get; public set; }
    [IdAttribute("6")]
public string GrainClassTypeName { get; public set; }
    [IdAttribute("7")]
public string LocalActivation { get; public set; }
    [CompilerGeneratedAttribute]
public GrainId get_Grain();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Grain(GrainId value);
    [CompilerGeneratedAttribute]
public SiloAddress get_SiloAddress();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SiloAddress(SiloAddress value);
    [CompilerGeneratedAttribute]
public string get_SiloName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SiloName(string value);
    [CompilerGeneratedAttribute]
public GrainAddress get_LocalCacheActivationAddress();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_LocalCacheActivationAddress(GrainAddress value);
    [CompilerGeneratedAttribute]
public GrainAddress get_LocalDirectoryActivationAddress();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_LocalDirectoryActivationAddress(GrainAddress value);
    [CompilerGeneratedAttribute]
public SiloAddress get_PrimaryForGrain();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PrimaryForGrain(SiloAddress value);
    [CompilerGeneratedAttribute]
public string get_GrainClassTypeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GrainClassTypeName(string value);
    [CompilerGeneratedAttribute]
public string get_LocalActivation();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_LocalActivation(string value);
    public virtual string ToString();
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
public class Orleans.Runtime.DetailedGrainStatistic : object {
    [CompilerGeneratedAttribute]
private string <GrainType>k__BackingField;
    [CompilerGeneratedAttribute]
private SiloAddress <SiloAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private GrainId <GrainId>k__BackingField;
    [IdAttribute("0")]
public string GrainType { get; public set; }
    [IdAttribute("1")]
public SiloAddress SiloAddress { get; public set; }
    [IdAttribute("2")]
public GrainId GrainId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_GrainType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GrainType(string value);
    [CompilerGeneratedAttribute]
public SiloAddress get_SiloAddress();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SiloAddress(SiloAddress value);
    [CompilerGeneratedAttribute]
public GrainId get_GrainId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GrainId(GrainId value);
}
internal static class Orleans.Runtime.DirectoryInstruments : object {
    internal static Counter`1<int> LookupsLocalIssued;
    internal static Counter`1<int> LookupsLocalSuccesses;
    internal static Counter`1<int> LookupsFullIssued;
    internal static Counter`1<int> LookupsRemoteSent;
    internal static Counter`1<int> LookupsRemoteReceived;
    internal static Counter`1<int> LookupsLocalDirectoryIssued;
    internal static Counter`1<int> LookupsLocalDirectorySuccesses;
    internal static Counter`1<int> LookupsCacheIssued;
    internal static Counter`1<int> LookupsCacheSuccesses;
    internal static Counter`1<int> ValidationsCacheSent;
    internal static Counter`1<int> ValidationsCacheReceived;
    internal static ObservableGauge`1<int> DirectoryPartitionSize;
    internal static ObservableGauge`1<int> CacheSize;
    internal static ObservableGauge`1<int> RingSize;
    internal static ObservableGauge`1<long> MyPortionRingDistance;
    internal static ObservableGauge`1<float> MyPortionRingPercentage;
    internal static ObservableGauge`1<float> MyPortionAverageRingPercentage;
    internal static Counter`1<int> RegistrationsSingleActIssued;
    internal static Counter`1<int> RegistrationsSingleActLocal;
    internal static Counter`1<int> RegistrationsSingleActRemoteSent;
    internal static Counter`1<int> RegistrationsSingleActRemoteReceived;
    internal static Counter`1<int> UnregistrationsIssued;
    internal static Counter`1<int> UnregistrationsLocal;
    internal static Counter`1<int> UnregistrationsRemoteSent;
    internal static Counter`1<int> UnregistrationsRemoteReceived;
    internal static Counter`1<int> UnregistrationsManyIssued;
    internal static Counter`1<int> UnregistrationsManyRemoteSent;
    internal static Counter`1<int> UnregistrationsManyRemoteReceived;
    private static DirectoryInstruments();
    internal static void RegisterDirectoryPartitionSizeObserve(Func`1<int> observeValue);
    internal static void RegisterCacheSizeObserve(Func`1<int> observeValue);
    internal static void RegisterRingSizeObserve(Func`1<int> observeValue);
    internal static void RegisterMyPortionRingDistanceObserve(Func`1<long> observeValue);
    internal static void RegisterMyPortionRingPercentageObserve(Func`1<float> observeValue);
    internal static void RegisterMyPortionAverageRingPercentageObserve(Func`1<float> observeValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Orleans.Runtime.EquallyDividedMultiRange : object {
    private static SingleRange GetEquallyDividedSubRange(SingleRange singleRange, int numSubRanges, int mySubRangeIndex);
    public static IRingRange GetEquallyDividedSubRange(IRingRange range, int numSubRanges, int mySubRangeIndex);
}
internal static class Orleans.Runtime.GatewayInstruments : object {
    internal static Counter`1<int> GatewaySent;
    internal static Counter`1<int> GatewayReceived;
    internal static Counter`1<int> GatewayLoadShedding;
    private static GatewayInstruments();
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
internal class Orleans.Runtime.GeneralMultiRange : object {
    [NullableAttribute("1")]
[IdAttribute("0")]
private List`1<SingleRange> ranges;
    [IdAttribute("1")]
private long rangeSize;
    [NullableAttribute("1")]
internal List`1<SingleRange> Ranges { get; }
    [NullableContextAttribute("1")]
internal GeneralMultiRange(List`1<SingleRange> ranges);
    [NullableContextAttribute("1")]
internal List`1<SingleRange> get_Ranges();
    [NullableContextAttribute("1")]
internal static IRingRange Create(List`1<IRingRange> inRanges);
    public sealed virtual bool InRange(UInt32 n);
    public sealed virtual double RangePercentage();
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("2")]
private sealed virtual override string System.IFormattable.ToString(string format, IFormatProvider formatProvider);
    private sealed virtual override bool System.ISpanFormattable.TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider);
    [CompilerGeneratedAttribute]
internal static bool <Create>g__HasOverlaps|5_1(<>c__DisplayClass5_0& );
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static IRingRange <Create>g__Compact|5_2(<>c__DisplayClass5_0& );
}
[IsReadOnlyAttribute]
[ImmutableAttribute]
public class Orleans.Runtime.GenericGrainInterfaceType : ValueType {
    [CompilerGeneratedAttribute]
private GrainInterfaceType <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Arity>k__BackingField;
    public GrainInterfaceType Value { get; }
    public int Arity { get; }
    public bool IsConstructed { get; }
    private GenericGrainInterfaceType(GrainInterfaceType value, int arity);
    [CompilerGeneratedAttribute]
public GrainInterfaceType get_Value();
    [CompilerGeneratedAttribute]
public int get_Arity();
    public bool get_IsConstructed();
    public static bool TryParse(GrainInterfaceType grainType, GenericGrainInterfaceType& result);
    public GenericGrainInterfaceType GetGenericGrainType();
    public GenericGrainInterfaceType Construct(TypeConverter formatter, Type[] typeArguments);
    public Type[] GetArguments(TypeConverter formatter);
    public virtual string ToString();
    [DoesNotReturnAttribute]
private void ThrowIncorrectArgumentLength(Type[] typeArguments);
}
[IsReadOnlyAttribute]
[ImmutableAttribute]
public class Orleans.Runtime.GenericGrainType : ValueType {
    [CompilerGeneratedAttribute]
private GrainType <GrainType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Arity>k__BackingField;
    public GrainType GrainType { get; }
    public int Arity { get; }
    public bool IsConstructed { get; }
    private GenericGrainType(GrainType grainType, int arity);
    [CompilerGeneratedAttribute]
public GrainType get_GrainType();
    [CompilerGeneratedAttribute]
public int get_Arity();
    public bool get_IsConstructed();
    public static bool TryParse(GrainType grainType, GenericGrainType& result);
    public GenericGrainType GetUnconstructedGrainType();
    public GenericGrainType Construct(TypeConverter formatter, Type[] typeArguments);
    public Type[] GetArguments(TypeConverter converter);
    public virtual string ToString();
    public sealed virtual bool Equals(GenericGrainType other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [DoesNotReturnAttribute]
private void ThrowIncorrectArgumentLength(Type[] typeArguments);
}
[GenerateSerializerAttribute]
[AliasAttribute("Orleans.Runtime.GrainCallFrequency")]
[ImmutableAttribute]
public class Orleans.Runtime.GrainCallFrequency : ValueType {
    [CompilerGeneratedAttribute]
private GrainId <SourceGrain>k__BackingField;
    [CompilerGeneratedAttribute]
private GrainId <TargetGrain>k__BackingField;
    [CompilerGeneratedAttribute]
private SiloAddress <SourceHost>k__BackingField;
    [CompilerGeneratedAttribute]
private SiloAddress <TargetHost>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <CallCount>k__BackingField;
    [IdAttribute("0")]
public GrainId SourceGrain { get; public set; }
    [IdAttribute("1")]
public GrainId TargetGrain { get; public set; }
    [IdAttribute("2")]
public SiloAddress SourceHost { get; public set; }
    [IdAttribute("3")]
public SiloAddress TargetHost { get; public set; }
    [IdAttribute("4")]
public ulong CallCount { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public GrainId get_SourceGrain();
    [CompilerGeneratedAttribute]
public void set_SourceGrain(GrainId value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public GrainId get_TargetGrain();
    [CompilerGeneratedAttribute]
public void set_TargetGrain(GrainId value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public SiloAddress get_SourceHost();
    [CompilerGeneratedAttribute]
public void set_SourceHost(SiloAddress value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public SiloAddress get_TargetHost();
    [CompilerGeneratedAttribute]
public void set_TargetHost(SiloAddress value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public ulong get_CallCount();
    [CompilerGeneratedAttribute]
public void set_CallCount(ulong value);
}
[RegisterSerializerAttribute]
internal class Orleans.Runtime.GrainCancellationTokenCodec : GeneralizedReferenceTypeSurrogateCodec`2<GrainCancellationToken, GrainCancellationTokenSurrogate> {
    private IGrainCancellationTokenRuntime _runtime;
    public GrainCancellationTokenCodec(IGrainCancellationTokenRuntime runtime, IValueSerializer`1<GrainCancellationTokenSurrogate> surrogateSerializer);
    public virtual GrainCancellationToken ConvertFromSurrogate(GrainCancellationTokenSurrogate& surrogate);
    public virtual void ConvertToSurrogate(GrainCancellationToken value, GrainCancellationTokenSurrogate& surrogate);
}
internal class Orleans.Runtime.GrainCancellationTokenRuntime : object {
    private static int MaxNumCancelErrorTries;
    private TimeSpan _cancelCallMaxWaitTime;
    private IBackoffProvider _cancelCallBackoffProvider;
    private Func`3<Exception, int, bool> _cancelCallRetryExceptionFilter;
    public sealed virtual Task Cancel(Guid id, CancellationTokenSource tokenSource, ConcurrentDictionary`2<GrainId, GrainReference> grainReferences);
    [AsyncStateMachineAttribute("Orleans.Runtime.GrainCancellationTokenRuntime/<CancelTokenWithRetries>d__5")]
private Task CancelTokenWithRetries(Guid id, ConcurrentDictionary`2<GrainId, GrainReference> grainReferences, GrainId key, ICancellationSourcesExtension tokenExtension);
}
[GenerateSerializerAttribute]
internal class Orleans.Runtime.GrainCancellationTokenSurrogate : ValueType {
    [IdAttribute("0")]
public bool IsCancellationRequested;
    [IdAttribute("1")]
public Guid TokenId;
}
internal class Orleans.Runtime.GrainCountStatistics : object {
    public IEnumerable`1<KeyValuePair`2<string, long>> GetSimpleGrainStatistics();
}
internal static class Orleans.Runtime.GrainInstruments : object {
    internal static UpDownCounter`1<int> GrainCounts;
    internal static UpDownCounter`1<int> SystemTargetCounts;
    private static GrainInstruments();
    internal static void IncrementGrainCounts(string grainTypeName);
    internal static void DecrementGrainCounts(string grainTypeName);
    internal static void IncrementSystemTargetCounts(string systemTargetTypeName);
    internal static void DecrementSystemTargetCounts(string systemTargetTypeName);
}
internal class Orleans.Runtime.GrainMethodInvoker : object {
    private Message message;
    private IInvokable request;
    private List`1<IIncomingGrainCallFilter> filters;
    private InterfaceToImplementationMappingCache interfaceToImplementationMapping;
    private DeepCopier`1<Response> responseCopier;
    private IGrainContext grainContext;
    private int stage;
    [CompilerGeneratedAttribute]
private Response <Response>k__BackingField;
    public IInvokable Request { get; }
    public object Grain { get; }
    public MethodInfo InterfaceMethod { get; }
    public MethodInfo ImplementationMethod { get; }
    public object Result { get; public set; }
    public Response Response { get; public set; }
    public Nullable`1<GrainId> SourceId { get; }
    public IGrainContext TargetContext { get; }
    public GrainId TargetId { get; }
    public GrainInterfaceType InterfaceType { get; }
    public string InterfaceName { get; }
    public string MethodName { get; }
    public GrainMethodInvoker(Message message, IGrainContext grainContext, IInvokable request, List`1<IIncomingGrainCallFilter> filters, InterfaceToImplementationMappingCache interfaceToImplementationMapping, DeepCopier`1<Response> responseCopier);
    public sealed virtual IInvokable get_Request();
    public sealed virtual object get_Grain();
    public sealed virtual MethodInfo get_InterfaceMethod();
    public sealed virtual MethodInfo get_ImplementationMethod();
    public sealed virtual object get_Result();
    public sealed virtual void set_Result(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Response get_Response();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Response(Response value);
    public sealed virtual Nullable`1<GrainId> get_SourceId();
    public sealed virtual IGrainContext get_TargetContext();
    public sealed virtual GrainId get_TargetId();
    public sealed virtual GrainInterfaceType get_InterfaceType();
    public sealed virtual string get_InterfaceName();
    public sealed virtual string get_MethodName();
    [AsyncStateMachineAttribute("Orleans.Runtime.GrainMethodInvoker/<Invoke>d__35")]
public sealed virtual Task Invoke();
    private static void ThrowInvalidCall();
    private static void ThrowBrokenCallFilterChain(string filterName);
    private ValueTuple`2<MethodInfo, MethodInfo> GetMethodEntry();
}
internal static class Orleans.Runtime.GrainMetricsListener : object {
    internal static ConcurrentDictionary`2<string, int> GrainCounts;
    private static MeterListener MeterListener;
    private static GrainMetricsListener();
    internal static void Start();
    private static void OnMeasurementRecorded(Instrument instrument, int measurement, ReadOnlySpan`1<KeyValuePair`2<string, object>> tags, object state);
}
internal class Orleans.Runtime.GrainReferenceRuntime : object {
    private GrainReferenceActivator referenceActivator;
    private GrainInterfaceTypeResolver interfaceTypeResolver;
    private IGrainCancellationTokenRuntime cancellationTokenRuntime;
    private IOutgoingGrainCallFilter[] filters;
    private Action`4<GrainReference, IResponseCompletionSource, IInvokable, InvokeMethodOptions> sendRequest;
    [CompilerGeneratedAttribute]
private IRuntimeClient <RuntimeClient>k__BackingField;
    public IRuntimeClient RuntimeClient { get; private set; }
    public GrainReferenceRuntime(IRuntimeClient runtimeClient, IGrainCancellationTokenRuntime cancellationTokenRuntime, IEnumerable`1<IOutgoingGrainCallFilter> outgoingCallFilters, GrainReferenceActivator referenceActivator, GrainInterfaceTypeResolver interfaceTypeResolver);
    [CompilerGeneratedAttribute]
public IRuntimeClient get_RuntimeClient();
    [CompilerGeneratedAttribute]
private void set_RuntimeClient(IRuntimeClient value);
    public sealed virtual ValueTask`1<TResult> InvokeMethodAsync(GrainReference reference, IInvokable request, InvokeMethodOptions options);
    public sealed virtual ValueTask InvokeMethodAsync(GrainReference reference, IInvokable request, InvokeMethodOptions options);
    public sealed virtual void InvokeMethod(GrainReference reference, IInvokable request, InvokeMethodOptions options);
    [AsyncStateMachineAttribute("Orleans.Runtime.GrainReferenceRuntime/<InvokeMethodWithFiltersAsync>d__13`1")]
private ValueTask`1<TResult> InvokeMethodWithFiltersAsync(GrainReference reference, IInvokable request, InvokeMethodOptions options);
    [AsyncStateMachineAttribute("Orleans.Runtime.GrainReferenceRuntime/<InvokeMethodWithFiltersAsync>d__14")]
private ValueTask InvokeMethodWithFiltersAsync(GrainReference reference, IInvokable request, InvokeMethodOptions options);
    public sealed virtual object Cast(IAddressable grain, Type grainInterface);
    private void SetGrainCancellationTokensTarget(GrainReference target, IInvokable request);
    [CompilerGeneratedAttribute]
private void <.ctor>b__5_0(GrainReference reference, IResponseCompletionSource callback, IInvokable body, InvokeMethodOptions options);
}
internal class Orleans.Runtime.HistogramAggregator : object {
    private KeyValuePair`2[] _tags;
    private HistogramBucketAggregator[] _buckets;
    private long _count;
    private long _sum;
    public HistogramAggregator(Int64[] buckets, KeyValuePair`2[] tags, Func`2<long, KeyValuePair`2<string, object>> getLabel);
    public void Record(long number);
    [IteratorStateMachineAttribute("Orleans.Runtime.HistogramAggregator/<CollectBuckets>d__6")]
public IEnumerable`1<Measurement`1<long>> CollectBuckets();
    public Measurement`1<long> CollectCount();
    public Measurement`1<long> CollectSum();
}
internal class Orleans.Runtime.HistogramBucketAggregator : object {
    private long _value;
    private KeyValuePair`2[] _tags;
    [CompilerGeneratedAttribute]
private long <Bound>k__BackingField;
    public long Bound { get; }
    public ReadOnlySpan`1<KeyValuePair`2<string, object>> Tags { get; }
    public long Value { get; }
    public HistogramBucketAggregator(KeyValuePair`2[] tags, long bound, KeyValuePair`2<string, object> label);
    [CompilerGeneratedAttribute]
public long get_Bound();
    public ReadOnlySpan`1<KeyValuePair`2<string, object>> get_Tags();
    public long get_Value();
    public void Add(long measurement);
    public Measurement`1<long> Collect();
}
internal interface Orleans.Runtime.ICatalog {
    public abstract virtual Task DeleteActivations(List`1<GrainAddress> activationAddresses, DeactivationReasonCode reasonCode, string reasonText);
}
public interface Orleans.Runtime.IClusterManifestProvider {
    public ClusterManifest Current { get; }
    public IAsyncEnumerable`1<ClusterManifest> Updates { get; }
    public GrainManifest LocalGrainManifest { get; }
    public abstract virtual ClusterManifest get_Current();
    public abstract virtual IAsyncEnumerable`1<ClusterManifest> get_Updates();
    public abstract virtual GrainManifest get_LocalGrainManifest();
}
internal interface Orleans.Runtime.IClusterManifestSystemTarget {
    public abstract virtual ValueTask`1<ClusterManifest> GetClusterManifest();
    public abstract virtual ValueTask`1<ClusterManifestUpdate> GetClusterManifestUpdate(MajorMinorVersion previousVersion);
}
internal interface Orleans.Runtime.IDeploymentLoadPublisher {
    [OneWayAttribute]
public abstract virtual Task UpdateRuntimeStatistics(SiloAddress siloAddress, SiloRuntimeStatistics siloStats);
}
public interface Orleans.Runtime.IHealthCheckable {
    public abstract virtual bool CheckHealth(DateTime lastCheckTime, String& reason);
}
public interface Orleans.Runtime.ILocalSiloDetails {
    public string Name { get; }
    public string ClusterId { get; }
    public string DnsHostName { get; }
    public SiloAddress SiloAddress { get; }
    public SiloAddress GatewayAddress { get; }
    public abstract virtual string get_Name();
    public abstract virtual string get_ClusterId();
    public abstract virtual string get_DnsHostName();
    public abstract virtual SiloAddress get_SiloAddress();
    public abstract virtual SiloAddress get_GatewayAddress();
}
public interface Orleans.Runtime.IManagementGrain {
    public abstract virtual Task`1<Dictionary`2<SiloAddress, SiloStatus>> GetHosts(bool onlyActive);
    public abstract virtual Task`1<MembershipEntry[]> GetDetailedHosts(bool onlyActive);
    public abstract virtual Task ForceGarbageCollection(SiloAddress[] hostsIds);
    public abstract virtual Task ForceActivationCollection(SiloAddress[] hostsIds, TimeSpan ageLimit);
    public abstract virtual Task ForceActivationCollection(TimeSpan ageLimit);
    public abstract virtual Task ForceRuntimeStatisticsCollection(SiloAddress[] siloAddresses);
    public abstract virtual Task`1<SiloRuntimeStatistics[]> GetRuntimeStatistics(SiloAddress[] hostsIds);
    public abstract virtual Task`1<SimpleGrainStatistic[]> GetSimpleGrainStatistics(SiloAddress[] hostsIds);
    public abstract virtual Task`1<SimpleGrainStatistic[]> GetSimpleGrainStatistics();
    public abstract virtual Task`1<DetailedGrainStatistic[]> GetDetailedGrainStatistics(String[] types, SiloAddress[] hostsIds);
    public abstract virtual Task`1<int> GetGrainActivationCount(GrainReference grainReference);
    public abstract virtual Task`1<int> GetTotalActivationCount();
    public abstract virtual Task`1<Object[]> SendControlCommandToProvider(string providerName, int command, object arg);
    public abstract virtual ValueTask`1<SiloAddress> GetActivationAddress(IAddressable reference);
    public abstract virtual ValueTask`1<List`1<GrainId>> GetActiveGrains(GrainType type);
    public abstract virtual Task`1<List`1<GrainCallFrequency>> GetGrainCallFrequencies(SiloAddress[] hostsIds);
    public abstract virtual ValueTask ResetGrainCallFrequencies(SiloAddress[] hostsIds);
}
internal interface Orleans.Runtime.IMembershipService {
    public abstract virtual Task MembershipChangeNotification(MembershipTableSnapshot snapshot);
    public abstract virtual Task Ping(int pingNumber);
    public abstract virtual Task`1<IndirectProbeResponse> ProbeIndirectly(SiloAddress target, TimeSpan probeTimeout, int probeNumber);
}
internal interface Orleans.Runtime.IMessageCenter {
    public abstract virtual void SendMessage(Message msg);
    public abstract virtual void DispatchLocalMessage(Message message);
}
[IsReadOnlyAttribute]
[GenerateSerializerAttribute]
[ImmutableAttribute]
public class Orleans.Runtime.IndirectProbeResponse : ValueType {
    [CompilerGeneratedAttribute]
private int <IntermediaryHealthScore>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Succeeded>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ProbeResponseTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureMessage>k__BackingField;
    [IdAttribute("0")]
public int IntermediaryHealthScore { get; public set; }
    [IdAttribute("1")]
public bool Succeeded { get; public set; }
    [IdAttribute("2")]
public TimeSpan ProbeResponseTime { get; public set; }
    [IdAttribute("3")]
public string FailureMessage { get; public set; }
    [CompilerGeneratedAttribute]
public int get_IntermediaryHealthScore();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IntermediaryHealthScore(int value);
    [CompilerGeneratedAttribute]
public bool get_Succeeded();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Succeeded(bool value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ProbeResponseTime();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ProbeResponseTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public string get_FailureMessage();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FailureMessage(string value);
    public virtual string ToString();
}
internal static class Orleans.Runtime.InstrumentNames : object {
    public static string NETWORKING_SOCKETS_CLOSED;
    public static string NETWORKING_SOCKETS_OPENED;
    public static string MESSAGING_SENT_MESSAGES_SIZE;
    public static string MESSAGING_RECEIVED_MESSAGES_SIZE;
    public static string MESSAGING_SENT_BYTES_HEADER;
    public static string MESSAGING_SENT_FAILED;
    public static string MESSAGING_SENT_DROPPED;
    public static string MESSAGING_RECEIVED_BYTES_HEADER;
    public static string MESSAGING_DISPATCHER_RECEIVED;
    public static string MESSAGING_DISPATCHER_PROCESSED;
    public static string MESSAGING_DISPATCHER_FORWARDED;
    public static string MESSAGING_IMA_RECEIVED;
    public static string MESSAGING_IMA_ENQUEUED;
    public static string MESSAGING_PROCESSING_ACTIVATION_DATA_ALL;
    public static string MESSAGING_PINGS_SENT;
    public static string MESSAGING_PINGS_RECEIVED;
    public static string MESSAGING_PINGS_REPLYRECEIVED;
    public static string MESSAGING_PINGS_REPLYMISSED;
    public static string MESSAGING_EXPIRED;
    public static string MESSAGING_REJECTED;
    public static string MESSAGING_REROUTED;
    public static string MESSAGING_SENT_LOCALMESSAGES;
    public static string GATEWAY_CONNECTED_CLIENTS;
    public static string GATEWAY_SENT;
    public static string GATEWAY_RECEIVED;
    public static string GATEWAY_LOAD_SHEDDING;
    public static string SCHEDULER_NUM_LONG_RUNNING_TURNS;
    public static string CATALOG_ACTIVATION_COUNT;
    public static string CATALOG_ACTIVATION_WORKING_SET;
    public static string CATALOG_ACTIVATION_CREATED;
    public static string CATALOG_ACTIVATION_DESTROYED;
    public static string CATALOG_ACTIVATION_FAILED_TO_ACTIVATE;
    public static string CATALOG_ACTIVATION_COLLECTION_NUMBER_OF_COLLECTIONS;
    public static string CATALOG_ACTIVATION_SHUTDOWN;
    public static string CATALOG_ACTIVATION_NON_EXISTENT_ACTIVATIONS;
    public static string CATALOG_ACTIVATION_CONCURRENT_REGISTRATION_ATTEMPTS;
    public static string DIRECTORY_LOOKUPS_LOCAL_ISSUED;
    public static string DIRECTORY_LOOKUPS_LOCAL_SUCCESSES;
    public static string DIRECTORY_LOOKUPS_FULL_ISSUED;
    public static string DIRECTORY_LOOKUPS_REMOTE_SENT;
    public static string DIRECTORY_LOOKUPS_REMOTE_RECEIVED;
    public static string DIRECTORY_LOOKUPS_LOCALDIRECTORY_ISSUED;
    public static string DIRECTORY_LOOKUPS_LOCALDIRECTORY_SUCCESSES;
    public static string DIRECTORY_LOOKUPS_CACHE_ISSUED;
    public static string DIRECTORY_LOOKUPS_CACHE_SUCCESSES;
    public static string DIRECTORY_VALIDATIONS_CACHE_SENT;
    public static string DIRECTORY_VALIDATIONS_CACHE_RECEIVED;
    public static string DIRECTORY_PARTITION_SIZE;
    public static string DIRECTORY_CACHE_SIZE;
    public static string DIRECTORY_RING_RINGSIZE;
    public static string DIRECTORY_RING_MYPORTION_RINGDISTANCE;
    public static string DIRECTORY_RING_MYPORTION_RINGPERCENTAGE;
    public static string DIRECTORY_RING_MYPORTION_AVERAGERINGPERCENTAGE;
    public static string DIRECTORY_REGISTRATIONS_SINGLE_ACT_ISSUED;
    public static string DIRECTORY_REGISTRATIONS_SINGLE_ACT_LOCAL;
    public static string DIRECTORY_REGISTRATIONS_SINGLE_ACT_REMOTE_SENT;
    public static string DIRECTORY_REGISTRATIONS_SINGLE_ACT_REMOTE_RECEIVED;
    public static string DIRECTORY_UNREGISTRATIONS_ISSUED;
    public static string DIRECTORY_UNREGISTRATIONS_LOCAL;
    public static string DIRECTORY_UNREGISTRATIONS_REMOTE_SENT;
    public static string DIRECTORY_UNREGISTRATIONS_REMOTE_RECEIVED;
    public static string DIRECTORY_UNREGISTRATIONS_MANY_ISSUED;
    public static string DIRECTORY_UNREGISTRATIONS_MANY_REMOTE_SENT;
    public static string DIRECTORY_UNREGISTRATIONS_MANY_REMOTE_RECEIVED;
    public static string CONSISTENTRING_SIZE;
    public static string CONSISTENTRING_LOCAL_SIZE_PERCENTAGE;
    public static string CONSISTENTRING_AVERAGE_SIZE_PERCENTAGE;
    public static string WATCHDOG_NUM_HEALTH_CHECKS;
    public static string WATCHDOG_NUM_FAILED_HEALTH_CHECKS;
    public static string CLIENT_CONNECTED_GATEWAY_COUNT;
    public static string GRAIN_COUNTS;
    public static string SYSTEM_TARGET_COUNTS;
    public static string APP_REQUESTS_LATENCY_HISTOGRAM;
    public static string APP_REQUESTS_TIMED_OUT;
    public static string REMINDERS_TARDINESS;
    public static string REMINDERS_NUMBER_ACTIVE_REMINDERS;
    public static string REMINDERS_COUNTERS_TICKS_DELIVERED;
    public static string STORAGE_READ_ERRORS;
    public static string STORAGE_WRITE_ERRORS;
    public static string STORAGE_CLEAR_ERRORS;
    public static string STORAGE_READ_LATENCY;
    public static string STORAGE_WRITE_LATENCY;
    public static string STORAGE_CLEAR_LATENCY;
    public static string STREAMS_PUBSUB_PRODUCERS_ADDED;
    public static string STREAMS_PUBSUB_PRODUCERS_REMOVED;
    public static string STREAMS_PUBSUB_PRODUCERS_TOTAL;
    public static string STREAMS_PUBSUB_CONSUMERS_ADDED;
    public static string STREAMS_PUBSUB_CONSUMERS_REMOVED;
    public static string STREAMS_PUBSUB_CONSUMERS_TOTAL;
    public static string STREAMS_PERSISTENT_STREAM_NUM_PULLING_AGENTS;
    public static string STREAMS_PERSISTENT_STREAM_NUM_READ_MESSAGES;
    public static string STREAMS_PERSISTENT_STREAM_NUM_SENT_MESSAGES;
    public static string STREAMS_PERSISTENT_STREAM_PUBSUB_CACHE_SIZE;
    public static string STREAMS_QUEUE_INITIALIZATION_FAILURES;
    public static string STREAMS_QUEUE_INITIALIZATION_DURATION;
    public static string STREAMS_QUEUE_INITIALIZATION_EXCEPTIONS;
    public static string STREAMS_QUEUE_READ_FAILURES;
    public static string STREAMS_QUEUE_READ_DURATION;
    public static string STREAMS_QUEUE_READ_EXCEPTIONS;
    public static string STREAMS_QUEUE_SHUTDOWN_FAILURES;
    public static string STREAMS_QUEUE_SHUTDOWN_DURATION;
    public static string STREAMS_QUEUE_SHUTDOWN_EXCEPTIONS;
    public static string STREAMS_QUEUE_MESSAGES_RECEIVED;
    public static string STREAMS_QUEUE_OLDEST_MESSAGE_ENQUEUE_AGE;
    public static string STREAMS_QUEUE_NEWEST_MESSAGE_ENQUEUE_AGE;
    public static string STREAMS_BLOCK_POOL_TOTAL_MEMORY;
    public static string STREAMS_BLOCK_POOL_AVAILABLE_MEMORY;
    public static string STREAMS_BLOCK_POOL_CLAIMED_MEMORY;
    public static string STREAMS_BLOCK_POOL_RELEASED_MEMORY;
    public static string STREAMS_BLOCK_POOL_ALLOCATED_MEMORY;
    public static string STREAMS_QUEUE_CACHE_SIZE;
    public static string STREAMS_QUEUE_CACHE_LENGTH;
    public static string STREAMS_QUEUE_CACHE_MESSAGES_ADDED;
    public static string STREAMS_QUEUE_CACHE_MESSAGES_PURGED;
    public static string STREAMS_QUEUE_CACHE_MEMORY_ALLOCATED;
    public static string STREAMS_QUEUE_CACHE_MEMORY_RELEASED;
    public static string STREAMS_QUEUE_CACHE_OLDEST_TO_NEWEST_DURATION;
    public static string STREAMS_QUEUE_CACHE_OLDEST_AGE;
    public static string STREAMS_QUEUE_CACHE_PRESSURE;
    public static string STREAMS_QUEUE_CACHE_UNDER_PRESSURE;
    public static string STREAMS_QUEUE_CACHE_PRESSURE_CONTRIBUTION_COUNT;
    public static string RUNTIME_MEMORY_TOTAL_PHYSICAL_MEMORY_MB;
    public static string RUNTIME_MEMORY_AVAILABLE_MEMORY_MB;
}
public static class Orleans.Runtime.Instruments : object {
    public static Meter Meter;
    private static Instruments();
}
[IsByRefLikeAttribute]
[ObsoleteAttribute("Types with embedded references are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RefStructs")]
public class Orleans.Runtime.Internal.ExecutionContextSuppressor : ValueType {
    private bool _restoreFlow;
    [IsReadOnlyAttribute]
public void Dispose();
}
[GenerateSerializerAttribute]
internal class Orleans.Runtime.InvalidSchedulingContextException : OrleansException {
    public InvalidSchedulingContextException(string message);
    public InvalidSchedulingContextException(string message, Exception innerException);
    [ObsoleteAttribute]
private InvalidSchedulingContextException(SerializationInfo info, StreamingContext context);
}
public interface Orleans.Runtime.IRingRange {
    public abstract virtual bool InRange(UInt32 value);
    public bool InRange(GrainId grainId);
}
internal interface Orleans.Runtime.IRingRangeInternal {
    public abstract virtual double RangePercentage();
}
internal interface Orleans.Runtime.IRuntimeClient {
    public TimeProvider TimeProvider { get; }
    public IInternalGrainFactory InternalGrainFactory { get; }
    public string CurrentActivationIdentity { get; }
    public IServiceProvider ServiceProvider { get; }
    public IGrainReferenceRuntime GrainReferenceRuntime { get; }
    public abstract virtual TimeProvider get_TimeProvider();
    public abstract virtual IInternalGrainFactory get_InternalGrainFactory();
    public abstract virtual string get_CurrentActivationIdentity();
    public abstract virtual IServiceProvider get_ServiceProvider();
    public abstract virtual TimeSpan GetResponseTimeout();
    public abstract virtual void SetResponseTimeout(TimeSpan timeout);
    public abstract virtual void SendRequest(GrainReference target, IInvokable request, IResponseCompletionSource context, InvokeMethodOptions options);
    public abstract virtual void SendResponse(Message request, Response response);
    public abstract virtual void ReceiveResponse(Message message);
    public abstract virtual IAddressable CreateObjectReference(IAddressable obj);
    public abstract virtual void DeleteObjectReference(IAddressable obj);
    public abstract virtual IGrainReferenceRuntime get_GrainReferenceRuntime();
    public abstract virtual void BreakOutstandingMessagesToDeadSilo(SiloAddress deadSilo);
    public abstract virtual int GetRunningRequestsCount(GrainInterfaceType grainInterfaceType);
}
public interface Orleans.Runtime.ISingleRange {
    public UInt32 Begin { get; }
    public UInt32 End { get; }
    public abstract virtual UInt32 get_Begin();
    public abstract virtual UInt32 get_End();
}
[ExtensionAttribute]
public static class Orleans.Runtime.LifecycleParticipantExtensions : object {
    [ExtensionAttribute]
public static ILifecycleParticipant`1<TLifecycle> ParticipateIn(ILifecycleParticipant`1<ILifecycleObservable> participant);
}
internal class Orleans.Runtime.LRU`2 : object {
    [CompilerGeneratedAttribute]
private Action RaiseFlushEvent;
    private long nextGeneration;
    private long generationToFree;
    private TimeSpan requiredFreshness;
    private ConcurrentDictionary`2<TKey, TimestampedValue<TKey, TValue>> cache;
    private int count;
    [CompilerGeneratedAttribute]
private int <MaximumSize>k__BackingField;
    public int Count { get; }
    public int MaximumSize { get; }
    public LRU`2(int maxSize, TimeSpan maxAge);
    [CompilerGeneratedAttribute]
public void add_RaiseFlushEvent(Action value);
    [CompilerGeneratedAttribute]
public void remove_RaiseFlushEvent(Action value);
    public int get_Count();
    [CompilerGeneratedAttribute]
public int get_MaximumSize();
    public TValue GetOrAdd(TKey key, Func`3<TState, TKey, TValue> addFunc, TState state);
    public TValue AddOrUpdate(TKey key, Func`3<TState, TKey, TValue> addFunc, TState state);
    public void Add(TKey key, TValue value);
    public void AddOrUpdate(TKey key, TValue value);
    public bool ContainsKey(TKey key);
    public bool RemoveKey(TKey key);
    public bool TryRemove(TKey key, Func`3<T, TValue, bool> predicate, T context);
    private long GetNewGeneration();
    public void Clear();
    public bool TryGetValue(TKey key, TValue& value);
    public TValue Get(TKey key);
    public void RemoveExpired();
    private void AdjustSize();
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
internal class Orleans.Runtime.MembershipTableSnapshot : object {
    [CompilerGeneratedAttribute]
private MembershipVersion <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableDictionary`2<SiloAddress, MembershipEntry> <Entries>k__BackingField;
    [IdAttribute("0")]
public MembershipVersion Version { get; }
    [IdAttribute("1")]
public ImmutableDictionary`2<SiloAddress, MembershipEntry> Entries { get; }
    public int ActiveNodeCount { get; }
    public MembershipTableSnapshot(MembershipVersion version, ImmutableDictionary`2<SiloAddress, MembershipEntry> entries);
    public static MembershipTableSnapshot Create(MembershipEntry localSiloEntry, MembershipTableData table);
    public static MembershipTableSnapshot Create(MembershipEntry localSiloEntry, MembershipTableSnapshot snapshot);
    [CompilerGeneratedAttribute]
public MembershipVersion get_Version();
    [CompilerGeneratedAttribute]
public ImmutableDictionary`2<SiloAddress, MembershipEntry> get_Entries();
    public int get_ActiveNodeCount();
    public SiloStatus GetSiloStatus(SiloAddress silo);
    public virtual string ToString();
}
[IdAttribute("101")]
internal class Orleans.Runtime.Message : object {
    public static int LENGTH_HEADER_SIZE;
    public static int LENGTH_META_HEADER;
    private short _retryCount;
    public CoarseStopwatch _timeToExpiry;
    [CompilerGeneratedAttribute]
private object <BodyObject>k__BackingField;
    public PackedHeaders _headers;
    public CorrelationId _id;
    public Dictionary`2<string, object> _requestContextData;
    public SiloAddress _targetSilo;
    public GrainId _targetGrain;
    public SiloAddress _sendingSilo;
    public GrainId _sendingGrain;
    public ushort _interfaceVersion;
    public GrainInterfaceType _interfaceType;
    public List`1<GrainAddressCacheUpdate> _cacheInvalidationHeader;
    public object BodyObject { get; public set; }
    public PackedHeaders Headers { get; public set; }
    public Directions Direction { get; public set; }
    public bool HasDirection { get; }
    public bool IsSenderFullyAddressed { get; }
    public bool IsTargetFullyAddressed { get; }
    public bool IsExpired { get; }
    public short RetryCount { get; public set; }
    public bool HasCacheInvalidationHeader { get; }
    public bool IsSystemMessage { get; public set; }
    public bool IsReadOnly { get; public set; }
    public bool IsAlwaysInterleave { get; public set; }
    public bool IsUnordered { get; public set; }
    public bool IsLocalOnly { get; public set; }
    public bool IsKeepAlive { get; public set; }
    public CorrelationId Id { get; public set; }
    public int ForwardCount { get; public set; }
    public SiloAddress TargetSilo { get; public set; }
    public GrainId TargetGrain { get; public set; }
    public SiloAddress SendingSilo { get; public set; }
    public GrainId SendingGrain { get; public set; }
    public ushort InterfaceVersion { get; public set; }
    public ResponseTypes Result { get; public set; }
    public Nullable`1<TimeSpan> TimeToLive { get; public set; }
    public List`1<GrainAddressCacheUpdate> CacheInvalidationHeader { get; public set; }
    public Dictionary`2<string, object> RequestContextData { get; public set; }
    public GrainInterfaceType InterfaceType { get; public set; }
    [CompilerGeneratedAttribute]
public object get_BodyObject();
    [CompilerGeneratedAttribute]
public void set_BodyObject(object value);
    public PackedHeaders get_Headers();
    public void set_Headers(PackedHeaders value);
    public Directions get_Direction();
    public void set_Direction(Directions value);
    public bool get_HasDirection();
    public bool get_IsSenderFullyAddressed();
    public bool get_IsTargetFullyAddressed();
    public bool get_IsExpired();
    public short get_RetryCount();
    public void set_RetryCount(short value);
    public bool get_HasCacheInvalidationHeader();
    public bool get_IsSystemMessage();
    public void set_IsSystemMessage(bool value);
    public bool get_IsReadOnly();
    public void set_IsReadOnly(bool value);
    public bool get_IsAlwaysInterleave();
    public void set_IsAlwaysInterleave(bool value);
    public bool get_IsUnordered();
    public void set_IsUnordered(bool value);
    public bool get_IsLocalOnly();
    public void set_IsLocalOnly(bool value);
    public bool get_IsKeepAlive();
    public void set_IsKeepAlive(bool value);
    public CorrelationId get_Id();
    public void set_Id(CorrelationId value);
    public int get_ForwardCount();
    public void set_ForwardCount(int value);
    public SiloAddress get_TargetSilo();
    public void set_TargetSilo(SiloAddress value);
    public GrainId get_TargetGrain();
    public void set_TargetGrain(GrainId value);
    public SiloAddress get_SendingSilo();
    public void set_SendingSilo(SiloAddress value);
    public GrainId get_SendingGrain();
    public void set_SendingGrain(GrainId value);
    public ushort get_InterfaceVersion();
    public void set_InterfaceVersion(ushort value);
    public ResponseTypes get_Result();
    public void set_Result(ResponseTypes value);
    public Nullable`1<TimeSpan> get_TimeToLive();
    public void set_TimeToLive(Nullable`1<TimeSpan> value);
    internal long GetTimeToLiveMilliseconds();
    internal void SetTimeToLiveMilliseconds(long milliseconds);
    internal void SetInfiniteTimeToLive();
    public List`1<GrainAddressCacheUpdate> get_CacheInvalidationHeader();
    public void set_CacheInvalidationHeader(List`1<GrainAddressCacheUpdate> value);
    public Dictionary`2<string, object> get_RequestContextData();
    public void set_RequestContextData(Dictionary`2<string, object> value);
    public GrainInterfaceType get_InterfaceType();
    public void set_InterfaceType(GrainInterfaceType value);
    public bool IsExpirableMessage();
    internal void AddToCacheInvalidationHeader(GrainAddress invalidAddress, GrainAddress validAddress);
    public virtual string ToString();
    private sealed virtual override string System.IFormattable.ToString(string format, IFormatProvider formatProvider);
    private sealed virtual override bool System.ISpanFormattable.TryFormat(Span`1<char> dst, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider);
    internal bool IsPing();
    [CompilerGeneratedAttribute]
internal static bool <System.ISpanFormattable.TryFormat>g__Append|101_0(Span`1& dst, ReadOnlySpan`1<char> value);
}
internal class Orleans.Runtime.MessageFactory : object {
    private DeepCopier deepCopier;
    private ILogger logger;
    private MessagingTrace messagingTrace;
    public MessageFactory(DeepCopier deepCopier, ILogger`1<MessageFactory> logger, MessagingTrace messagingTrace);
    public Message CreateMessage(object body, InvokeMethodOptions options);
    public Message CreateResponseMessage(Message request);
    public Message CreateRejectionResponse(Message request, RejectionTypes type, string info, Exception ex);
    internal Message CreateDiagnosticResponseMessage(Message request, bool isExecuting, bool isWaiting, List`1<string> diagnostics);
}
internal class Orleans.Runtime.Messaging.CachingIdSpanCodec : object {
    private static LRU`2<IdSpan, IdSpan> SharedCache;
    private static long PurgeAfterMilliseconds;
    private static long GarbageCollectionIntervalMilliseconds;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<int, ValueTuple`2<Byte[], long>> _cache;
    private long _lastGarbageCollectionTimestamp;
    private static CachingIdSpanCodec();
    public IdSpan ReadRaw(Reader`1& reader);
    private void PurgeStaleEntries();
    public void WriteRaw(Writer`1& writer, IdSpan value);
}
internal class Orleans.Runtime.Messaging.CachingSiloAddressCodec : object {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static LRU`2<SiloAddress, ValueTuple`2<SiloAddress, Byte[]>> <SharedCache>k__BackingField;
    private static long PurgeAfterMilliseconds;
    private static long GarbageCollectionIntervalMilliseconds;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<int, ValueTuple`3<Byte[], SiloAddress, long>> _cache;
    private long _lastGarbageCollectionTimestamp;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal static LRU`2<SiloAddress, ValueTuple`2<SiloAddress, Byte[]>> SharedCache { get; }
    private static CachingSiloAddressCodec();
    [CompilerGeneratedAttribute]
internal static LRU`2<SiloAddress, ValueTuple`2<SiloAddress, Byte[]>> get_SharedCache();
    public SiloAddress ReadRaw(Reader`1& reader);
    private void PurgeStaleEntries();
    private static SiloAddress ReadSiloAddressInner(Reader`1& reader);
    public void WriteRaw(Writer`1& writer, SiloAddress value);
    private static void WriteSiloAddressInner(Writer`1& writer, SiloAddress value);
}
internal class Orleans.Runtime.Messaging.ClientOutboundConnection : Connection {
    private ClientMessageCenter messageCenter;
    private ConnectionManager connectionManager;
    private ConnectionOptions connectionOptions;
    private ClusterOptions clusterOptions;
    private ConnectionPreambleHelper connectionPreambleHelper;
    [CompilerGeneratedAttribute]
private SiloAddress <RemoteSiloAddress>k__BackingField;
    public SiloAddress RemoteSiloAddress { get; }
    protected ConnectionDirection ConnectionDirection { get; }
    protected IMessageCenter MessageCenter { get; }
    public ClientOutboundConnection(SiloAddress remoteSiloAddress, ConnectionContext connection, ConnectionDelegate middleware, ClientMessageCenter messageCenter, ConnectionManager connectionManager, ConnectionOptions connectionOptions, ConnectionCommon connectionShared, ConnectionPreambleHelper connectionPreambleHelper, ClusterOptions clusterOptions);
    [CompilerGeneratedAttribute]
public SiloAddress get_RemoteSiloAddress();
    protected virtual ConnectionDirection get_ConnectionDirection();
    protected virtual IMessageCenter get_MessageCenter();
    protected virtual void RecordMessageReceive(Message msg, int numTotalBytes, int headerBytes);
    protected virtual void RecordMessageSend(Message msg, int numTotalBytes, int headerBytes);
    protected virtual void OnReceivedMessage(Message message);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.ClientOutboundConnection/<RunInternal>d__16")]
protected virtual Task RunInternal();
    protected virtual bool PrepareMessageForSend(Message msg);
    protected virtual void RetryMessage(Message msg, Exception ex);
    internal void SendRejection(Message msg, RejectionTypes rejectionType, string reason);
    public void FailMessage(Message msg, string reason);
    protected virtual void OnSendMessageFailure(Message message, string error);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0();
}
internal class Orleans.Runtime.Messaging.ClientOutboundConnectionFactory : ConnectionFactory {
    internal static object ServicesKey;
    private ConnectionCommon connectionShared;
    private ClientConnectionOptions clientConnectionOptions;
    private ClusterOptions clusterOptions;
    private ConnectionPreambleHelper connectionPreambleHelper;
    private object initializationLock;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) isInitialized;
    private ClientMessageCenter messageCenter;
    private ConnectionManager connectionManager;
    public ClientOutboundConnectionFactory(IOptions`1<ConnectionOptions> connectionOptions, IOptions`1<ClientConnectionOptions> clientConnectionOptions, IOptions`1<ClusterOptions> clusterOptions, ConnectionCommon connectionShared, ConnectionPreambleHelper connectionPreambleHelper);
    private static ClientOutboundConnectionFactory();
    protected virtual Connection CreateConnection(SiloAddress address, ConnectionContext context);
    protected virtual void ConfigureConnectionBuilder(IConnectionBuilder connectionBuilder);
    private void EnsureInitialized();
}
internal abstract class Orleans.Runtime.Messaging.Connection : object {
    private static Func`2<ConnectionContext, Task> OnConnectedDelegate;
    private static Action`1<object> OnConnectionClosedDelegate;
    private static UnboundedChannelOptions OutgoingMessageChannelOptions;
    private static ObjectPool`1<MessageHandler> MessageHandlerPool;
    private ConnectionCommon shared;
    private ConnectionDelegate middleware;
    private Channel`1<Message> outgoingMessages;
    private ChannelWriter`1<Message> outgoingMessageWriter;
    private List`1<Message> inflight;
    private TaskCompletionSource`1<int> _transportConnectionClosed;
    private TaskCompletionSource`1<int> _initializationTcs;
    private IDuplexPipe _transport;
    private Task _processIncomingTask;
    private Task _processOutgoingTask;
    private Task _closeTask;
    [CompilerGeneratedAttribute]
private EndPoint <RemoteEndPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private EndPoint <LocalEndPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private ConnectionContext <Context>k__BackingField;
    public string ConnectionId { get; }
    public EndPoint RemoteEndPoint { get; }
    public EndPoint LocalEndPoint { get; }
    protected ConnectionContext Context { get; }
    protected NetworkingTrace Log { get; }
    protected MessagingTrace MessagingTrace { get; }
    protected ConnectionDirection ConnectionDirection { get; }
    protected MessageFactory MessageFactory { get; }
    protected IMessageCenter MessageCenter { get; }
    public bool IsValid { get; }
    public Task Initialized { get; }
    protected Connection(ConnectionContext connection, ConnectionDelegate middleware, ConnectionCommon shared);
    private static Connection();
    public string get_ConnectionId();
    [CompilerGeneratedAttribute]
public virtual EndPoint get_RemoteEndPoint();
    [CompilerGeneratedAttribute]
public virtual EndPoint get_LocalEndPoint();
    [CompilerGeneratedAttribute]
protected ConnectionContext get_Context();
    protected NetworkingTrace get_Log();
    protected MessagingTrace get_MessagingTrace();
    protected abstract virtual ConnectionDirection get_ConnectionDirection();
    protected MessageFactory get_MessageFactory();
    protected abstract virtual IMessageCenter get_MessageCenter();
    public bool get_IsValid();
    public Task get_Initialized();
    public static void ConfigureBuilder(ConnectionBuilder builder);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.Connection/<Run>d__42")]
public Task Run();
    private static Task OnConnectedAsync(ConnectionContext context);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.Connection/<RunInternal>d__44")]
protected virtual Task RunInternal();
    protected abstract virtual bool PrepareMessageForSend(Message msg);
    protected abstract virtual void RetryMessage(Message msg, Exception ex);
    public Task CloseAsync(Exception exception);
    private void OnTransportConnectionClosed();
    private void StartClosing(Exception exception);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.Connection/<CloseAsync>d__50")]
private Task CloseAsync();
    public virtual void Send(Message message);
    public virtual string ToString();
    protected abstract virtual void RecordMessageReceive(Message msg, int numTotalBytes, int headerBytes);
    protected abstract virtual void RecordMessageSend(Message msg, int numTotalBytes, int headerBytes);
    protected abstract virtual void OnReceivedMessage(Message message);
    protected abstract virtual void OnSendMessageFailure(Message message, string error);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.Connection/<ProcessIncoming>d__57")]
private Task ProcessIncoming();
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.Connection/<ProcessOutgoing>d__58")]
private Task ProcessOutgoing();
    private void RerouteMessage(Message message);
    private static EndPoint NormalizeEndpoint(EndPoint endpoint);
    private bool HandleReceiveMessageFailure(Message message, Exception exception);
    private bool HandleSendMessageFailure(Message message, Exception exception);
}
internal class Orleans.Runtime.Messaging.ConnectionCommon : object {
    [CompilerGeneratedAttribute]
private MessageFactory <MessageFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private NetworkingTrace <NetworkingTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessageStatisticsSink <MessageStatisticsSink>k__BackingField;
    [CompilerGeneratedAttribute]
private MessagingTrace <MessagingTrace>k__BackingField;
    public MessageFactory MessageFactory { get; }
    public IServiceProvider ServiceProvider { get; }
    public NetworkingTrace NetworkingTrace { get; }
    public IMessageStatisticsSink MessageStatisticsSink { get; }
    public MessagingTrace MessagingTrace { get; }
    public ConnectionCommon(IServiceProvider serviceProvider, MessageFactory messageFactory, MessagingTrace messagingTrace, NetworkingTrace networkingTrace, IMessageStatisticsSink messageStatisticsSink);
    [CompilerGeneratedAttribute]
public MessageFactory get_MessageFactory();
    [CompilerGeneratedAttribute]
public IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
public NetworkingTrace get_NetworkingTrace();
    [CompilerGeneratedAttribute]
public IMessageStatisticsSink get_MessageStatisticsSink();
    [CompilerGeneratedAttribute]
public MessagingTrace get_MessagingTrace();
}
internal abstract class Orleans.Runtime.Messaging.ConnectionFactory : object {
    private IConnectionFactory connectionFactory;
    private IServiceProvider serviceProvider;
    private ConnectionDelegate connectionDelegate;
    [CompilerGeneratedAttribute]
private ConnectionOptions <ConnectionOptions>k__BackingField;
    protected ConnectionOptions ConnectionOptions { get; }
    protected ConnectionDelegate ConnectionDelegate { get; }
    protected ConnectionFactory(IConnectionFactory connectionFactory, IServiceProvider serviceProvider, IOptions`1<ConnectionOptions> connectionOptions);
    [CompilerGeneratedAttribute]
protected ConnectionOptions get_ConnectionOptions();
    protected ConnectionDelegate get_ConnectionDelegate();
    protected virtual void ConfigureConnectionBuilder(IConnectionBuilder connectionBuilder);
    protected abstract virtual Connection CreateConnection(SiloAddress address, ConnectionContext context);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.ConnectionFactory/<ConnectAsync>d__11")]
public virtual ValueTask`1<Connection> ConnectAsync(SiloAddress address, CancellationToken cancellationToken);
}
public class Orleans.Runtime.Messaging.ConnectionFailedException : OrleansException {
    public ConnectionFailedException(string message);
    public ConnectionFailedException(string message, Exception innerException);
    [ObsoleteAttribute]
protected ConnectionFailedException(SerializationInfo info, StreamingContext context);
}
[DefaultMemberAttribute("Item")]
internal class Orleans.Runtime.Messaging.ConnectionLogScope : object {
    private Connection _connection;
    private string _cachedToString;
    public KeyValuePair`2<string, object> Item { get; }
    public int Count { get; }
    public ConnectionLogScope(Connection connection);
    public sealed virtual KeyValuePair`2<string, object> get_Item(int index);
    public sealed virtual int get_Count();
    [IteratorStateMachineAttribute("Orleans.Runtime.Messaging.ConnectionLogScope/<GetEnumerator>d__7")]
public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual string ToString();
}
internal class Orleans.Runtime.Messaging.ConnectionManager : object {
    [ThreadStaticAttribute]
private static UInt32 nextConnection;
    private ConcurrentDictionary`2<SiloAddress, ConnectionEntry> connections;
    private ConnectionOptions connectionOptions;
    private ConnectionFactory connectionFactory;
    private NetworkingTrace trace;
    private CancellationTokenSource shutdownCancellation;
    private object lockObj;
    private TaskCompletionSource`1<int> closedTaskCompletionSource;
    public int ConnectionCount { get; }
    public Task Closed { get; }
    public ConnectionManager(IOptions`1<ConnectionOptions> connectionOptions, ConnectionFactory connectionFactory, NetworkingTrace trace);
    public int get_ConnectionCount();
    public Task get_Closed();
    public List`1<SiloAddress> GetConnectedAddresses();
    public ValueTask`1<Connection> GetConnection(SiloAddress endpoint);
    public bool TryGetConnection(SiloAddress endpoint, Connection& connection);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.ConnectionManager/<GetConnectionAsync>d__16")]
private Task`1<Connection> GetConnectionAsync(SiloAddress endpoint);
    private void OnConnectionFailed(ConnectionEntry entry);
    public void OnConnected(SiloAddress address, Connection connection);
    private void OnConnected(SiloAddress address, Connection connection, ConnectionEntry entry);
    public void OnConnectionTerminated(SiloAddress address, Connection connection, Exception exception);
    private ConnectionEntry GetOrCreateEntry(SiloAddress address);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.ConnectionManager/<ConnectAsync>d__22")]
private Task`1<Connection> ConnectAsync(SiloAddress address, ConnectionEntry entry);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.ConnectionManager/<CloseAsync>d__23")]
public Task CloseAsync(SiloAddress endpoint);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.ConnectionManager/<Close>d__24")]
public Task Close(CancellationToken ct);
    private void StartConnection(SiloAddress address, Connection connection);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.ConnectionManager/<RunConnectionAsync>d__26")]
private Task RunConnectionAsync(SiloAddress address, Connection connection);
    private IDisposable BeginConnectionScope(Connection connection);
}
internal class Orleans.Runtime.Messaging.ConnectionManagerLifecycleAdapter`1 : object {
    private ConnectionManager connectionManager;
    public ConnectionManagerLifecycleAdapter`1(ConnectionManager connectionManager);
    public sealed virtual Task OnStart(CancellationToken ct);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.ConnectionManagerLifecycleAdapter`1/<OnStop>d__3")]
public sealed virtual Task OnStop(CancellationToken ct);
    public sealed virtual void Participate(TLifecycle lifecycle);
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
internal class Orleans.Runtime.Messaging.ConnectionPreamble : object {
    [CompilerGeneratedAttribute]
private NetworkProtocolVersion <NetworkProtocolVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private GrainId <NodeIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private SiloAddress <SiloAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterId>k__BackingField;
    [IdAttribute("0")]
public NetworkProtocolVersion NetworkProtocolVersion { get; public set; }
    [IdAttribute("1")]
public GrainId NodeIdentity { get; public set; }
    [IdAttribute("2")]
public SiloAddress SiloAddress { get; public set; }
    [IdAttribute("3")]
public string ClusterId { get; public set; }
    [CompilerGeneratedAttribute]
public NetworkProtocolVersion get_NetworkProtocolVersion();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NetworkProtocolVersion(NetworkProtocolVersion value);
    [CompilerGeneratedAttribute]
public GrainId get_NodeIdentity();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NodeIdentity(GrainId value);
    [CompilerGeneratedAttribute]
public SiloAddress get_SiloAddress();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SiloAddress(SiloAddress value);
    [CompilerGeneratedAttribute]
public string get_ClusterId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ClusterId(string value);
}
internal class Orleans.Runtime.Messaging.ConnectionPreambleHelper : object {
    private static int MaxPreambleLength;
    private Serializer`1<ConnectionPreamble> _preambleSerializer;
    public ConnectionPreambleHelper(Serializer`1<ConnectionPreamble> preambleSerializer);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.ConnectionPreambleHelper/<Write>d__3")]
internal ValueTask Write(ConnectionContext connection, ConnectionPreamble preamble);
    private static void WriteLength(PrefixingBufferWriter outputWriter, int length);
    [AsyncStateMachineAttribute("Orleans.Runtime.Messaging.ConnectionPreambleHelper/<Read>d__5")]
internal ValueTask`1<ConnectionPreamble> Read(ConnectionContext connection);
    [CompilerGeneratedAttribute]
internal static int <Read>g__ReadLength|5_0(ReadOnlySequence`1& b);
    [CompilerGeneratedAttribute]
internal static void <Read>g__CheckForCompletion|5_1(ReadResult& r);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GenerateSerializerAttribute]
public class Orleans.Runtime.Messaging.InvalidMessageFrameException : OrleansException {
    public InvalidMessageFrameException(string message);
    public InvalidMessageFrameException(string message, Exception innerException);
    [ObsoleteAttribute]
protected InvalidMessageFrameException(SerializationInfo info, StreamingContext context);
}
internal interface Orleans.Runtime.Messaging.IUnderlyingTransportFeature {
    public IDuplexPipe Transport { get; }
    public abstract virtual IDuplexPipe get_Transport();
}
[IsReadOnlyAttribute]
internal class Orleans.Runtime.Messaging.MessageBufferWriter : ValueType {
    [NullableAttribute("1")]
private PrefixingBufferWriter _buffer;
    [NullableContextAttribute("1")]
public MessageBufferWriter(PrefixingBufferWriter buffer);
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<byte> GetMemory(int sizeHint);
    public sealed virtual Span`1<byte> GetSpan(int sizeHint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Orleans.Runtime.Messaging.MessageSerializer : object {
    private static int FramingLength;
    private static int MessageSizeHint;
    private Dictionary`2<Type, ResponseCodec> _rawResponseCodecs;
    private CodecProvider _codecProvider;
    private IFieldCodec`1<GrainAddressCacheUpdate> _activationAddressCodec;
    private CachingSiloAddressCodec _readerSiloAddressCodec;
    private CachingSiloAddressCodec _writerSiloAddressCodec;
    private CachingIdSpanCodec _idSpanCodec;
    private SerializerSession _serializationSession;
    private SerializerSession _deserializationSession;
    private int _maxHeaderLength;
    private int _maxBodyLength;
    private DictionaryCodec`2<string, object> _requestContextCodec;
    private PrefixingBufferWriter _bufferWriter;
    public MessageSerializer(SerializerSessionPool sessionPool, SharedMemoryPool memoryPool, MessagingOptions options);
    [NullableContextAttribute("0")]
public ValueTuple`3<int, int, int> TryRead(ReadOnlySequence`1& input, Message& message);
    private void ReadBodyObject(Message message, Reader`1& reader);
    private ResponseCodec GetRawCodec(Type fieldType);
    public ValueTuple`2<int, int> Write(PipeWriter writer, Message message);
    private void ThrowIfLengthsInvalid(int headerLength, int bodyLength);
    private void ThrowInvalidHeaderLength(int headerLength);
    private void ThrowInvalidBodyLength(int bodyLength);
    private void Serialize(Writer`1& writer, Message value, PackedHeaders headers);
    private void Deserialize(Reader`1& reader, Message result);
    internal List`1<GrainAddressCacheUpdate> ReadCacheInvalidationHeaders(Reader`1& reader);
    internal void WriteCacheInvalidationHeaders(Writer`1& writer, List`1<GrainAddressCacheUpdate> value);
    [NullableContextAttribute("2")]
private static string ReadString(Reader`1& reader);
    private static void WriteString(Writer`1& writer, string value);
    private static void WriteRequestContext(Writer`1& writer, Dictionary`2<string, object> value);
    private static Dictionary`2<string, object> ReadRequestContext(Reader`1& reader);
    [NullableContextAttribute("2")]
private GrainId ReadGrainId(Reader`1& reader);
    [NullableContextAttribute("0")]
private void WriteGrainId(Writer`1& writer, GrainId value);
}
internal class Orleans.Runtime.Messaging.NetworkingTrace : DiagnosticListener {
    private ILogger log;
    public NetworkingTrace(ILoggerFactory loggerFactory);
    public sealed virtual IDisposable BeginScope(TState state);
    public sealed virtual bool IsEnabled(LogLevel logLevel);
    public sealed virtual void Log(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3<TState, Exception, string> formatter);
}
public enum Orleans.Runtime.Messaging.NetworkProtocolVersion : Enum {
    public byte value__;
    public static NetworkProtocolVersion Version1;
}
internal class Orleans.Runtime.Messaging.PrefixingBufferWriter : object {
    private MemoryPool`1<byte> memoryPool;
    private int expectedPrefixSize;
    private int payloadSizeHint;
    private PipeWriter innerWriter;
    private Memory`1<byte> prefixMemory;
    private Memory`1<byte> realMemory;
    private int advanced;
    private Sequence privateWriter;
    private int _committedBytes;
    public int CommittedBytes { get; }
    public PrefixingBufferWriter(int prefixSize, int payloadSizeHint, MemoryPool`1<byte> memoryPool);
    public int get_CommittedBytes();
    public sealed virtual void Advance(int count);
    private void AdvancePrivateWriter(int count);
    public sealed virtual Memory`1<byte> GetMemory(int sizeHint);
    public sealed virtual Span`1<byte> GetSpan(int sizeHint);
    public void Complete(ReadOnlySpan`1<byte> prefix);
    private void CompletePrivateWriter();
    public void Init(PipeWriter writer);
    public void Reset();
    public sealed virtual void Dispose();
    private void Initialize(int sizeHint);
    [CompilerGeneratedAttribute]
internal static void <.ctor>g__ThrowPrefixSize|9_0();
    [CompilerGeneratedAttribute]
internal static void <Complete>g__ThrowPrefixLength|16_0();
}
internal class Orleans.Runtime.Messaging.UnderlyingConnectionTransportFeature : object {
    [CompilerGeneratedAttribute]
private IDuplexPipe <Transport>k__BackingField;
    public IDuplexPipe Transport { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IDuplexPipe get_Transport();
    [CompilerGeneratedAttribute]
public void set_Transport(IDuplexPipe value);
}
internal static class Orleans.Runtime.MessagingInstruments : object {
    internal static long _headerBytesSent;
    internal static long _headerBytesReceived;
    internal static ObservableCounter`1<long> HeaderBytesSentCounter;
    internal static ObservableCounter`1<long> HeaderBytesReceivedCounter;
    internal static CounterAggregator LocalMessagesSentCounterAggregator;
    private static ObservableCounter`1<long> LocalMessagesSentCounter;
    internal static Counter`1<int> FailedSentMessagesCounter;
    internal static Counter`1<int> DroppedSentMessagesCounter;
    internal static Counter`1<int> RejectedMessagesCounter;
    internal static Counter`1<int> ReroutedMessagesCounter;
    internal static Counter`1<int> ExpiredMessagesCounter;
    internal static UpDownCounter`1<int> ConnectedClient;
    internal static Counter`1<int> PingSendCounter;
    internal static Counter`1<int> PingReceivedCounter;
    internal static Counter`1<int> PingReplyReceivedCounter;
    internal static Counter`1<int> PingReplyMissedCounter;
    internal static Histogram`1<int> MessageSentSizeHistogram;
    internal static Histogram`1<int> MessageReceivedSizeHistogram;
    private static MessagingInstruments();
    internal static void OnMessageExpired(Phase phase);
    internal static void OnPingSend(SiloAddress destination);
    internal static void OnPingReceive(SiloAddress destination);
    internal static void OnPingReplyReceived(SiloAddress replier);
    internal static void OnPingReplyMissed(SiloAddress replier);
    internal static void OnFailedSentMessage(Message msg);
    internal static void OnDroppedSentMessage(Message msg);
    internal static void OnRejectedMessage(Message msg);
    internal static void OnMessageReRoute(Message msg);
    internal static void OnMessageReceive(Message msg, int numTotalBytes, int headerBytes, ConnectionDirection connectionDirection, SiloAddress remoteSiloAddress);
    internal static void OnMessageSend(Message msg, int numTotalBytes, int headerBytes, ConnectionDirection connectionDirection, SiloAddress remoteSiloAddress);
}
internal static class Orleans.Runtime.MessagingProcessingInstruments : object {
    private static CounterAggregatorGroup DispatcherMessagesProcessedCounterAggregatorGroup;
    private static ObservableCounter`1<long> DispatcherMessagesProcessedCounter;
    private static CounterAggregatorGroup DispatcherMessagesReceivedCounterAggregatorGroup;
    private static ObservableCounter`1<long> DispatcherMessagesReceivedCounter;
    private static CounterAggregator DispatcherMessagesForwardedCounterAggregator;
    private static ObservableCounter`1<long> DispatcherMessagesForwardedCounter;
    private static CounterAggregator ImaReceivedCounterAggregator;
    private static ObservableCounter`1<long> ImaReceivedCounter;
    private static CounterAggregatorGroup ImaEnqueuedCounterAggregatorGroup;
    private static ObservableCounter`1<long> ImaEnqueuedCounter;
    private static CounterAggregator ImaMessageEnqueuedNullContext;
    private static CounterAggregator ImaMessageEnqueuedSystemTarget;
    private static CounterAggregator ImaMessageEnqueuedGrain;
    private static CounterAggregator[] DispatcherMessagesReceivedCounters_NullContext;
    private static CounterAggregator[] DispatcherMessagesReceivedCounters_Grain;
    private static CounterAggregator[] DispatcherMessagesProcessedCounters_Ok;
    private static CounterAggregator[] DispatcherMessagesProcessedCounters_Error;
    internal static ObservableGauge`1<long> ActivationDataAll;
    private static MessagingProcessingInstruments();
    internal static void OnDispatcherMessageReceive(Message msg);
    internal static void OnDispatcherMessageProcessedOk(Message msg);
    internal static void OnDispatcherMessageProcessedError(Message msg);
    internal static void OnDispatcherMessageForwared(Message msg);
    internal static void OnImaMessageReceived(Message msg);
    internal static void OnImaMessageEnqueued(IGrainContext context);
    internal static void RegisterActivationDataAllObserve(Func`1<long> observeValue);
}
internal class Orleans.Runtime.MessagingTrace : DiagnosticListener {
    public static string Category;
    public static string CreateMessageEventName;
    public static string SendMessageEventName;
    public static string IncomingMessageAgentReceiveMessageEventName;
    public static string DispatcherReceiveMessageEventName;
    public static string DropExpiredMessageEventName;
    public static string DropSendingMessageEventName;
    public static string DropBlockedApplicationMessageEventName;
    public static string EnqueueInboundMessageEventName;
    public static string DequeueInboundMessageEventName;
    public static string ScheduleMessageEventName;
    public static string EnqueueMessageOnActivationEventName;
    public static string InvokeMessageEventName;
    public static string RejectSendMessageToDeadSiloEventName;
    private static Action`4<ILogger, Message, Phase, Exception> LogDropExpiredMessage;
    private static Action`3<ILogger, Message, Exception> LogDropBlockedApplicationMessage;
    private static Action`3<ILogger, Message, Exception> LogEnqueueInboundMessage;
    private static Action`3<ILogger, Message, Exception> LogDequeueInboundMessage;
    private static Action`5<ILogger, SiloAddress, Message, string, Exception> LogSiloDropSendingMessage;
    private static Action`5<ILogger, SiloAddress, SiloAddress, Message, Exception> LogRejectSendMessageToDeadSilo;
    private ILogger log;
    public MessagingTrace(ILoggerFactory loggerFactory);
    private static MessagingTrace();
    public void OnSendMessage(Message message);
    public void OnIncomingMessageAgentReceiveMessage(Message message);
    public void OnDispatcherReceiveMessage(Message message);
    internal void OnDropExpiredMessage(Message message, Phase phase);
    internal void OnDropBlockedApplicationMessage(Message message);
    internal void OnSiloDropSendingMessage(SiloAddress localSiloAddress, Message message, string reason);
    public void OnEnqueueInboundMessage(Message message);
    public void OnDequeueInboundMessage(Message message);
    internal void OnCreateMessage(Message message);
    public void OnScheduleMessage(Message message);
    public void OnEnqueueMessageOnActivation(Message message, IGrainContext context);
    public void OnInvokeMessage(Message message);
    public void OnRejectSendMessageToDeadSilo(SiloAddress localSilo, Message message);
    internal void OnSendRequest(Message message);
    public sealed virtual IDisposable BeginScope(TState state);
    public sealed virtual bool IsEnabled(LogLevel logLevel);
    public sealed virtual void Log(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3<TState, Exception, string> formatter);
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
[AliasAttribute("MigrationCtx")]
[SerializationCallbacksAttribute("Orleans.Runtime.MigrationContext/SerializationHooks")]
internal class Orleans.Runtime.MigrationContext : object {
    [NullableAttribute("1")]
private object _lock;
    [NullableAttribute("1")]
internal SerializerSessionPool _sessionPool;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[IdAttribute("0")]
[ImmutableAttribute]
private Dictionary`2<string, ValueTuple`2<int, int>> _indices;
    [IdAttribute("1")]
[ImmutableAttribute]
private PooledBuffer _buffer;
    [NullableAttribute("1")]
public IEnumerable`1<string> Keys { get; }
    [NullableContextAttribute("1")]
[OrleansConstructorAttribute]
public MigrationContext(SerializerSessionPool sessionPool);
    public sealed virtual void AddBytes(string key, ReadOnlySpan`1<byte> value);
    [NullableContextAttribute("1")]
public sealed virtual void AddBytes(string key, Action`2<T, IBufferWriter`1<byte>> valueWriter, T value);
    [NullableContextAttribute("2")]
public sealed virtual bool TryAddValue(string key, T value);
    [NullableContextAttribute("1")]
public sealed virtual IEnumerable`1<string> get_Keys();
    public sealed virtual void Dispose();
    public sealed virtual bool TryGetBytes(string key, ReadOnlySequence`1& value);
    [NullableContextAttribute("2")]
public sealed virtual bool TryGetValue(string key, T& value);
    private sealed virtual override void System.Buffers.IBufferWriter<System.Byte>.Advance(int count);
    private sealed virtual override Memory`1<byte> System.Buffers.IBufferWriter<System.Byte>.GetMemory(int sizeHint);
    private sealed virtual override Span`1<byte> System.Buffers.IBufferWriter<System.Byte>.GetSpan(int sizeHint);
    [NullableContextAttribute("1")]
private sealed virtual override IEnumerator`1<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator();
    [NullableContextAttribute("1")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal static class Orleans.Runtime.NetworkingInstruments : object {
    internal static Counter`1<int> ClosedSocketsCounter;
    internal static Counter`1<int> OpenedSocketsCounter;
    private static NetworkingInstruments();
    internal static void OnOpenedSocket(ConnectionDirection direction);
    internal static void OnClosedSocket(ConnectionDirection direction);
}
internal static class Orleans.Runtime.NonCapturingTimer : object {
    public static Timer Create(TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period);
}
public class Orleans.Runtime.OnDeserializedCallbacks : DeserializationContext {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private object <RuntimeClient>k__BackingField;
    public IServiceProvider ServiceProvider { get; }
    public object RuntimeClient { get; }
    public OnDeserializedCallbacks(IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
public virtual IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
public virtual object get_RuntimeClient();
    public void OnDeserialized(IOnDeserialized value);
}
[EventSourceAttribute]
internal class Orleans.Runtime.OrleansCallBackDataEvent : EventSource {
    public static OrleansCallBackDataEvent Log;
    private static OrleansCallBackDataEvent();
    [NonEventAttribute]
public void OnTimeout(Message message);
    [EventAttribute("1")]
private void OnTimeout();
    [NonEventAttribute]
public void OnTargetSiloFail(Message message);
    [EventAttribute("2")]
private void OnTargetSiloFail();
    [NonEventAttribute]
public void DoCallback(Message message);
    [EventAttribute("3")]
private void DoCallback();
}
[EventSourceAttribute]
internal class Orleans.Runtime.OrleansDispatcherEvent : EventSource {
    public static OrleansDispatcherEvent Log;
    private static OrleansDispatcherEvent();
    [NonEventAttribute]
public void ReceiveMessage(Message message);
    [EventAttribute("1")]
private void ReceiveMessage();
}
[EventSourceAttribute]
internal class Orleans.Runtime.OrleansIncomingMessageAgentEvent : EventSource {
    public static OrleansIncomingMessageAgentEvent Log;
    private static OrleansIncomingMessageAgentEvent();
    [NonEventAttribute]
public void ReceiveMessage(Message message);
    [EventAttribute("1")]
private void ReceiveMessage();
}
[EventSourceAttribute]
internal class Orleans.Runtime.OrleansInsideRuntimeClientEvent : EventSource {
    public static OrleansInsideRuntimeClientEvent Log;
    private static OrleansInsideRuntimeClientEvent();
    [NonEventAttribute]
public void SendRequest(Message message);
    [EventAttribute("1")]
private void SendRequest();
    [NonEventAttribute]
public void ReceiveResponse(Message message);
    [EventAttribute("2")]
private void ReceiveResponse();
    [NonEventAttribute]
public void SendResponse(Message message);
    [EventAttribute("3")]
private void SendResponse();
}
[EventSourceAttribute]
internal class Orleans.Runtime.OrleansOutsideRuntimeClientEvent : EventSource {
    public static OrleansOutsideRuntimeClientEvent Log;
    private static OrleansOutsideRuntimeClientEvent();
    [NonEventAttribute]
public void SendRequest(Message message);
    [EventAttribute("1")]
private void SendRequest();
    [NonEventAttribute]
public void ReceiveResponse(Message message);
    [EventAttribute("2")]
private void ReceiveResponse();
    [NonEventAttribute]
public void SendResponse(Message message);
    [EventAttribute("3")]
private void SendResponse();
}
internal class Orleans.Runtime.OutgoingCallInvoker`1 : object {
    private IInvokable request;
    private InvokeMethodOptions options;
    private Action`4<GrainReference, IResponseCompletionSource, IInvokable, InvokeMethodOptions> sendRequest;
    private IOutgoingGrainCallFilter[] filters;
    private int stages;
    private GrainReference grainReference;
    private IOutgoingGrainCallFilter requestFilter;
    private int stage;
    [CompilerGeneratedAttribute]
private Response <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private IGrainContext <SourceContext>k__BackingField;
    public IInvokable Request { get; }
    public object Grain { get; }
    public MethodInfo InterfaceMethod { get; }
    public object Result { get; public set; }
    public Response Response { get; public set; }
    public TResult TypedResult { get; public set; }
    public IGrainContext SourceContext { get; }
    public Nullable`1<GrainId> SourceId { get; }
    public GrainId TargetId { get; }
    public GrainInterfaceType InterfaceType { get; }
    public string InterfaceName { get; }
    public string MethodName { get; }
    public OutgoingCallInvoker`1(GrainReference grain, IInvokable request, InvokeMethodOptions options, Action`4<GrainReference, IResponseCompletionSource, IInvokable, InvokeMethodOptions> sendRequest, IOutgoingGrainCallFilter[] filters);
    public sealed virtual IInvokable get_Request();
    public sealed virtual object get_Grain();
    public sealed virtual MethodInfo get_InterfaceMethod();
    public sealed virtual object get_Result();
    public sealed virtual void set_Result(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Response get_Response();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Response(Response value);
    public TResult get_TypedResult();
    public void set_TypedResult(TResult value);
    [CompilerGeneratedAttribute]
public sealed virtual IGrainContext get_SourceContext();
    public sealed virtual Nullable`1<GrainId> get_SourceId();
    public sealed virtual GrainId get_TargetId();
    public sealed virtual GrainInterfaceType get_InterfaceType();
    public sealed virtual string get_InterfaceName();
    public sealed virtual string get_MethodName();
    [AsyncStateMachineAttribute("Orleans.Runtime.OutgoingCallInvoker`1/<Invoke>d__38")]
public sealed virtual Task Invoke();
    private void ThrowInvalidCall();
    private void ThrowBrokenCallFilterChain(string filterName);
}
public interface Orleans.Runtime.Placement.IPlacementContext {
    public SiloAddress LocalSilo { get; }
    public SiloStatus LocalSiloStatus { get; }
    public abstract virtual SiloAddress[] GetCompatibleSilos(PlacementTarget target);
    public abstract virtual IReadOnlyDictionary`2<ushort, SiloAddress[]> GetCompatibleSilosWithVersions(PlacementTarget target);
    public abstract virtual SiloAddress get_LocalSilo();
    public abstract virtual SiloStatus get_LocalSiloStatus();
}
public interface Orleans.Runtime.Placement.IPlacementDirector {
    public static string PlacementHintKey;
    public abstract virtual Task`1<SiloAddress> OnAddActivation(PlacementStrategy strategy, PlacementTarget target, IPlacementContext context);
    public static SiloAddress GetPlacementHint(Dictionary`2<string, object> requestContextData, SiloAddress[] compatibleSilos);
}
[IsReadOnlyAttribute]
public class Orleans.Runtime.Placement.PlacementTarget : ValueType {
    [CompilerGeneratedAttribute]
private GrainId <GrainIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private GrainInterfaceType <InterfaceType>k__BackingField;
    [CompilerGeneratedAttribute]
private ushort <InterfaceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <RequestContextData>k__BackingField;
    public GrainId GrainIdentity { get; }
    public GrainInterfaceType InterfaceType { get; }
    public ushort InterfaceVersion { get; }
    public Dictionary`2<string, object> RequestContextData { get; }
    public PlacementTarget(GrainId grainIdentity, Dictionary`2<string, object> requestContextData, GrainInterfaceType interfaceType, ushort interfaceVersion);
    [CompilerGeneratedAttribute]
public GrainId get_GrainIdentity();
    [CompilerGeneratedAttribute]
public GrainInterfaceType get_InterfaceType();
    [CompilerGeneratedAttribute]
public ushort get_InterfaceVersion();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_RequestContextData();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Orleans.Runtime.RangeFactory : object {
    public static long RING_SIZE;
    private static GeneralMultiRange EmptyRange;
    internal static SingleRange FullRange;
    private static RangeFactory();
    public static IRingRange CreateFullRange();
    public static IRingRange CreateRange(UInt32 begin, UInt32 end);
    public static IRingRange CreateRange(List`1<IRingRange> inRanges);
    internal static IRingRange GetEquallyDividedSubRange(IRingRange range, int numSubRanges, int mySubRangeIndex);
    public static IEnumerable`1<ISingleRange> GetSubRanges(IRingRange range);
}
[IdAttribute("102")]
[GenerateSerializerAttribute]
[ImmutableAttribute]
internal class Orleans.Runtime.RejectionResponse : object {
    [CompilerGeneratedAttribute]
private string <RejectionInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private RejectionTypes <RejectionType>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [IdAttribute("0")]
public string RejectionInfo { get; public set; }
    [IdAttribute("1")]
public RejectionTypes RejectionType { get; public set; }
    [IdAttribute("2")]
public Exception Exception { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RejectionInfo();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RejectionInfo(string value);
    [CompilerGeneratedAttribute]
public RejectionTypes get_RejectionType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RejectionType(RejectionTypes value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Exception(Exception value);
}
internal static class Orleans.Runtime.ReminderInstruments : object {
    public static Histogram`1<double> TardinessSeconds;
    public static ObservableGauge`1<int> ActiveReminders;
    public static Counter`1<int> TicksDelivered;
    private static ReminderInstruments();
    public static void RegisterActiveRemindersObserve(Func`1<int> observeValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Orleans.Runtime.RequestContextExtensions : object {
    public static void Import(Dictionary`2<string, object> contextData);
    public static Dictionary`2<string, object> Export(DeepCopier copier);
    [ExtensionAttribute]
internal static Guid GetReentrancyId(Message message);
    internal static Guid GetReentrancyId(Dictionary`2<string, object> contextData);
}
internal static class Orleans.Runtime.RuntimeVersion : object {
    public static string Current { get; }
    public static string get_Current();
    internal static bool IsAssemblyDebugBuild(Assembly assembly);
}
internal class Orleans.Runtime.SchedulerInstruments : object {
    internal static Counter`1<int> LongRunningTurnsCounter;
    private static SchedulerInstruments();
}
internal class Orleans.Runtime.SharedCallbackData : object {
    public Action`1<Message> Unregister;
    public ILogger Logger;
    private TimeSpan responseTimeout;
    public long ResponseTimeoutStopwatchTicks;
    public TimeSpan ResponseTimeout { get; public set; }
    public SharedCallbackData(Action`1<Message> unregister, ILogger logger, TimeSpan responseTimeout);
    public TimeSpan get_ResponseTimeout();
    public void set_ResponseTimeout(TimeSpan value);
}
public static class Orleans.Runtime.SiloRuntimeMetricsListener : object {
    private static MeterListener MeterListener;
    private static long _connectedClientCount;
    private static long _messageReceivedTotal;
    private static long _messageSentTotal;
    private static String[] MetricNames;
    public static long ConnectedClientCount { get; }
    public static long MessageReceivedTotal { get; }
    public static long MessageSentTotal { get; }
    private static SiloRuntimeMetricsListener();
    public static long get_ConnectedClientCount();
    public static long get_MessageReceivedTotal();
    public static long get_MessageSentTotal();
    internal static void Start();
    private static void OnMeasurementRecorded(Instrument instrument, int measurement, ReadOnlySpan`1<KeyValuePair`2<string, object>> tags, object state);
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
public class Orleans.Runtime.SiloRuntimeStatistics : object {
    [CompilerGeneratedAttribute]
private int <ActivationCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RecentlyUsedActivationCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <CpuUsage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <AvailableMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MemoryUsage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TotalPhysicalMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOverloaded>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ClientCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ReceivedMessages>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SentMessages>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <DateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private EnvironmentStatistics <EnvironmentStatistics>k__BackingField;
    [IdAttribute("0")]
public int ActivationCount { get; }
    [IdAttribute("1")]
public int RecentlyUsedActivationCount { get; }
    [IdAttribute("2")]
[ObsoleteAttribute("The will be removed, use EnvironmentStatistics.CpuUsagePercentage instead.", "False")]
public Nullable`1<float> CpuUsage { get; }
    [IdAttribute("3")]
[ObsoleteAttribute("The will be removed, use EnvironmentStatistics.AvailableMemoryBytes instead.", "False")]
public Nullable`1<float> AvailableMemory { get; }
    [IdAttribute("4")]
[ObsoleteAttribute("The will be removed, use EnvironmentStatistics.MemoryUsageBytes instead.", "False")]
public Nullable`1<long> MemoryUsage { get; }
    [IdAttribute("5")]
[ObsoleteAttribute("The will be removed, use EnvironmentStatistics.MaximumAvailableMemoryBytes instead.", "False")]
public Nullable`1<long> TotalPhysicalMemory { get; }
    [IdAttribute("6")]
public bool IsOverloaded { get; }
    [IdAttribute("7")]
public long ClientCount { get; }
    [IdAttribute("8")]
public long ReceivedMessages { get; }
    [IdAttribute("9")]
public long SentMessages { get; }
    [IdAttribute("10")]
public DateTime DateTime { get; }
    [IdAttribute("11")]
public EnvironmentStatistics EnvironmentStatistics { get; }
    internal SiloRuntimeStatistics(int activationCount, int recentlyUsedActivationCount, IEnvironmentStatisticsProvider environmentStatisticsProvider, IOptions`1<LoadSheddingOptions> loadSheddingOptions, DateTime dateTime);
    [CompilerGeneratedAttribute]
public int get_ActivationCount();
    [CompilerGeneratedAttribute]
public int get_RecentlyUsedActivationCount();
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_CpuUsage();
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_AvailableMemory();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MemoryUsage();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TotalPhysicalMemory();
    [CompilerGeneratedAttribute]
public bool get_IsOverloaded();
    [CompilerGeneratedAttribute]
public long get_ClientCount();
    [CompilerGeneratedAttribute]
public long get_ReceivedMessages();
    [CompilerGeneratedAttribute]
public long get_SentMessages();
    [CompilerGeneratedAttribute]
public DateTime get_DateTime();
    [CompilerGeneratedAttribute]
public EnvironmentStatistics get_EnvironmentStatistics();
    public virtual string ToString();
}
[GenerateSerializerAttribute]
public enum Orleans.Runtime.SiloStatus : Enum {
    public int value__;
    public static SiloStatus None;
    public static SiloStatus Created;
    public static SiloStatus Joining;
    public static SiloStatus Active;
    public static SiloStatus ShuttingDown;
    public static SiloStatus Stopping;
    public static SiloStatus Dead;
}
[ExtensionAttribute]
public static class Orleans.Runtime.SiloStatusExtensions : object {
    [ExtensionAttribute]
public static bool IsTerminating(SiloStatus siloStatus);
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
public class Orleans.Runtime.SimpleGrainStatistic : object {
    [CompilerGeneratedAttribute]
private string <GrainType>k__BackingField;
    [CompilerGeneratedAttribute]
private SiloAddress <SiloAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ActivationCount>k__BackingField;
    [IdAttribute("0")]
public string GrainType { get; public set; }
    [IdAttribute("1")]
public SiloAddress SiloAddress { get; public set; }
    [IdAttribute("2")]
public int ActivationCount { get; public set; }
    [CompilerGeneratedAttribute]
public string get_GrainType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GrainType(string value);
    [CompilerGeneratedAttribute]
public SiloAddress get_SiloAddress();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SiloAddress(SiloAddress value);
    [CompilerGeneratedAttribute]
public int get_ActivationCount();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ActivationCount(int value);
    public virtual string ToString();
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
internal class Orleans.Runtime.SingleRange : object {
    [IdAttribute("0")]
private UInt32 begin;
    [IdAttribute("1")]
private UInt32 end;
    public UInt32 Begin { get; }
    public UInt32 End { get; }
    public SingleRange(UInt32 begin, UInt32 end);
    public sealed virtual UInt32 get_Begin();
    public sealed virtual UInt32 get_End();
    public sealed virtual bool InRange(UInt32 n);
    public long RangeSize();
    public sealed virtual double RangePercentage();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(SingleRange other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("2")]
private sealed virtual override string System.IFormattable.ToString(string format, IFormatProvider formatProvider);
    private sealed virtual override bool System.ISpanFormattable.TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider);
    [NullableContextAttribute("1")]
internal bool Overlaps(SingleRange other);
    [NullableContextAttribute("1")]
internal SingleRange Merge(SingleRange other);
    [NullableContextAttribute("1")]
private SingleRange MergeEnds(SingleRange other);
}
[IdAttribute("103")]
[GenerateSerializerAttribute]
[ImmutableAttribute]
internal class Orleans.Runtime.StatusResponse : object {
    [IdAttribute("0")]
private UInt32 _statusFlags;
    [CompilerGeneratedAttribute]
private List`1<string> <Diagnostics>k__BackingField;
    [IdAttribute("1")]
public List`1<string> Diagnostics { get; }
    public bool IsExecuting { get; }
    public bool IsWaiting { get; }
    public StatusResponse(bool isExecuting, bool isWaiting, List`1<string> diagnostics);
    [CompilerGeneratedAttribute]
public List`1<string> get_Diagnostics();
    public bool get_IsExecuting();
    public bool get_IsWaiting();
    public virtual string ToString();
}
internal static class Orleans.Runtime.StorageInstruments : object {
    private static Histogram`1<double> StorageReadHistogram;
    private static Histogram`1<double> StorageWriteHistogram;
    private static Histogram`1<double> StorageClearHistogram;
    private static Counter`1<int> StorageReadErrorsCounter;
    private static Counter`1<int> StorageWriteErrorsCounter;
    private static Counter`1<int> StorageClearErrorsCounter;
    private static StorageInstruments();
    internal static void OnStorageRead(TimeSpan latency);
    internal static void OnStorageWrite(TimeSpan latency);
    internal static void OnStorageReadError();
    internal static void OnStorageWriteError();
    internal static void OnStorageDelete(TimeSpan latency);
    internal static void OnStorageDeleteError();
}
internal static class Orleans.Runtime.StreamInstruments : object {
    public static Counter`1<int> PubSubProducersAdded;
    public static Counter`1<int> PubSubProducersRemoved;
    public static Counter`1<int> PubSubProducersTotal;
    public static Counter`1<int> PubSubConsumersAdded;
    public static Counter`1<int> PubSubConsumersRemoved;
    public static Counter`1<int> PubSubConsumersTotal;
    public static ObservableGauge`1<int> PersistentStreamPullingAgents;
    public static Counter`1<int> PersistentStreamReadMessages;
    public static Counter`1<int> PersistentStreamSentMessages;
    public static ObservableGauge`1<int> PersistentStreamPubSubCacheSize;
    private static StreamInstruments();
    public static void RegisterPersistentStreamPullingAgentsObserve(Func`1<Measurement`1<int>> observeValue);
    public static void RegisterPersistentStreamPubSubCacheSizeObserve(Func`1<Measurement`1<int>> observeValue);
}
internal class Orleans.Runtime.TagList : ValueType {
    [CompilerGeneratedAttribute]
private string <Name1>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value1>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name2>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value2>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name3>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value3>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name4>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value4>k__BackingField;
    public string Name1 { get; public set; }
    public object Value1 { get; public set; }
    public string Name2 { get; public set; }
    public object Value2 { get; public set; }
    public string Name3 { get; public set; }
    public object Value3 { get; public set; }
    public string Name4 { get; public set; }
    public object Value4 { get; public set; }
    public TagList(string Name1, object Value1, string Name2, object Value2, string Name3, object Value3, string Name4, object Value4);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Name1();
    [CompilerGeneratedAttribute]
public void set_Name1(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public object get_Value1();
    [CompilerGeneratedAttribute]
public void set_Value1(object value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Name2();
    [CompilerGeneratedAttribute]
public void set_Name2(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public object get_Value2();
    [CompilerGeneratedAttribute]
public void set_Value2(object value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Name3();
    [CompilerGeneratedAttribute]
public void set_Name3(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public object get_Value3();
    [CompilerGeneratedAttribute]
public void set_Value3(object value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Name4();
    [CompilerGeneratedAttribute]
public void set_Name4(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public object get_Value4();
    [CompilerGeneratedAttribute]
public void set_Value4(object value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(TagList left, TagList right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(TagList left, TagList right);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(TagList other);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public void Deconstruct(String& Name1, Object& Value1, String& Name2, Object& Value2, String& Name3, Object& Value3, String& Name4, Object& Value4);
}
internal static class Orleans.Runtime.Utilities.AsyncEnumerable : object {
    internal static object InitialValue;
    internal static object DisposedValue;
    private static AsyncEnumerable();
}
internal class Orleans.Runtime.Utilities.AsyncEnumerable`1 : object {
    private object _updateLock;
    private Func`3<T, T, bool> _updateValidator;
    private Action`1<T> _onPublished;
    private Element<T> _current;
    public AsyncEnumerable`1(T initialValue, Func`3<T, T, bool> updateValidator, Action`1<T> onPublished);
    public bool TryPublish(T value);
    public void Publish(T value);
    private PublishResult<T> TryPublish(Element<T> newItem);
    public void Dispose();
    [DoesNotReturnAttribute]
private static void ThrowInvalidUpdate();
    [DoesNotReturnAttribute]
private static void ThrowDisposed();
    public sealed virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
}
internal class Orleans.Runtime.ValueStopwatch : ValueType {
    private static double TimestampToTicks;
    private long _value;
    public bool IsRunning { get; }
    public TimeSpan Elapsed { get; }
    public long ElapsedTicks { get; }
    private ValueStopwatch(long timestamp);
    private static ValueStopwatch();
    public static ValueStopwatch StartNew();
    public static ValueStopwatch StartNew(TimeSpan elapsed);
    [IsReadOnlyAttribute]
public bool get_IsRunning();
    public TimeSpan get_Elapsed();
    [IsReadOnlyAttribute]
public long get_ElapsedTicks();
    public static long GetTimestamp();
    public static ValueStopwatch FromTimestamp(long start, long end);
    [IsReadOnlyAttribute]
public long GetRawTimestamp();
    public void Start();
    public void Restart();
    public void Reset();
    public void Stop();
}
internal class Orleans.Runtime.Versions.GrainVersionManifest : object {
    private object _lockObj;
    private ConcurrentDictionary`2<GrainInterfaceType, GrainInterfaceType> _genericInterfaceMapping;
    private ConcurrentDictionary`2<GrainType, GrainType> _genericGrainTypeMapping;
    private IClusterManifestProvider _clusterManifestProvider;
    private Dictionary`2<GrainInterfaceType, ushort> _localVersions;
    private Cache _cache;
    public MajorMinorVersion LatestVersion { get; }
    public GrainVersionManifest(IClusterManifestProvider clusterManifestProvider);
    public MajorMinorVersion get_LatestVersion();
    public ushort GetLocalVersion(GrainInterfaceType interfaceType);
    public ValueTuple`2<MajorMinorVersion, UInt16[]> GetAvailableVersions(GrainInterfaceType interfaceType);
    public ValueTuple`2<MajorMinorVersion, SiloAddress[]> GetSupportedSilos(GrainInterfaceType interfaceType, ushort version);
    public ValueTuple`2<MajorMinorVersion, SiloAddress[]> GetSupportedSilos(GrainType grainType);
    public ValueTuple`2<MajorMinorVersion, Dictionary`2<ushort, SiloAddress[]>> GetSupportedSilos(GrainType grainType, GrainInterfaceType interfaceType, UInt16[] versions);
    private Cache GetCache();
    private static Dictionary`2<GrainInterfaceType, ushort> BuildLocalVersionMap(GrainManifest manifest);
    private static Cache BuildCache(ClusterManifest clusterManifest);
}
internal static class Orleans.Runtime.WatchdogInstruments : object {
    internal static Counter`1<int> HealthChecks;
    internal static Counter`1<int> FailedHealthChecks;
    private static WatchdogInstruments();
}
public class Orleans.Serialization.ActivationIdConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
public class Orleans.Serialization.ConfigureOrleansJsonSerializerOptions : object {
    private IServiceProvider _serviceProvider;
    public ConfigureOrleansJsonSerializerOptions(IServiceProvider serviceProvider);
    public sealed virtual void PostConfigure(string name, OrleansJsonSerializerOptions options);
}
public class Orleans.Serialization.GrainIdConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
public class Orleans.Serialization.GrainReferenceJsonConverter : JsonConverter {
    private static Type AddressableType;
    private GrainReferenceActivator referenceActivator;
    public GrainReferenceJsonConverter(GrainReferenceActivator referenceActivator);
    private static GrainReferenceJsonConverter();
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
public class Orleans.Serialization.IPAddressConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
public class Orleans.Serialization.IPEndPointConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
public class Orleans.Serialization.MembershipVersionJsonConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
public class Orleans.Serialization.OrleansJsonSerializationBinder : DefaultSerializationBinder {
    private TypeResolver typeResolver;
    public OrleansJsonSerializationBinder(TypeResolver typeResolver);
    public virtual Type BindToType(string assemblyName, string typeName);
}
public class Orleans.Serialization.OrleansJsonSerializer : object {
    public static string UseFullAssemblyNamesProperty;
    public static string IndentJsonProperty;
    public static string TypeNameHandlingProperty;
    private JsonSerializerSettings settings;
    public OrleansJsonSerializer(IOptions`1<OrleansJsonSerializerOptions> options);
    public object Deserialize(Type expectedType, string input);
    public string Serialize(object item, Type expectedType);
}
public class Orleans.Serialization.OrleansJsonSerializerOptions : object {
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <JsonSerializerSettings>k__BackingField;
    public JsonSerializerSettings JsonSerializerSettings { get; public set; }
    [CompilerGeneratedAttribute]
public JsonSerializerSettings get_JsonSerializerSettings();
    [CompilerGeneratedAttribute]
public void set_JsonSerializerSettings(JsonSerializerSettings value);
}
public static class Orleans.Serialization.OrleansJsonSerializerSettings : object {
    internal static JsonSerializerSettings GetDefaultSerializerSettings();
    public static JsonSerializerSettings GetDefaultSerializerSettings(IServiceProvider services);
    internal static void Configure(IServiceProvider services, JsonSerializerSettings jsonSerializerSettings);
    public static JsonSerializerSettings UpdateSerializerSettings(JsonSerializerSettings settings, bool useFullAssemblyNames, bool indentJson, Nullable`1<TypeNameHandling> typeNameHandling);
}
public class Orleans.Serialization.SiloAddressJsonConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
public class Orleans.Serialization.UniqueKeyConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
public class Orleans.SerializerConfigurationValidator : object {
    private ICodecProvider _codecProvider;
    private TypeManifestOptions _options;
    private bool _enabled;
    public SerializerConfigurationValidator(ICodecProvider codecProvider, IOptions`1<TypeManifestOptions> options, IServiceProvider serviceProvider);
    private sealed virtual override void Orleans.IConfigurationValidator.ValidateConfiguration();
}
public static class Orleans.ServiceLifecycleStage : object {
    public static int First;
    public static int RuntimeInitialize;
    public static int RuntimeServices;
    public static int RuntimeStorageServices;
    public static int RuntimeGrainServices;
    public static int AfterRuntimeGrainServices;
    public static int ApplicationServices;
    public static int BecomeActive;
    public static int Active;
    public static int Last;
}
[ExtensionAttribute]
internal static class Orleans.SetExtensions : object {
    [ExtensionAttribute]
public static HashSet`1<T> ToSet(IEnumerable`1<T> values);
    [ExtensionAttribute]
public static string ToStrings(IEnumerable`1<T> list, Func`2<T, object> toString, string separator);
    [ExtensionAttribute]
public static T GetValueOrAddNew(Dictionary`2<TU, T> dictionary, TU key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Orleans.Statistics.EnvironmentStatisticsProvider : object {
    private static float OneKiloByte;
    private long _availableMemoryBytes;
    private long _maximumAvailableMemoryBytes;
    private EventCounterListener _eventCounterListener;
    private ObservableCounter`1<long> _availableMemoryCounter;
    private ObservableCounter`1<long> _maximumAvailableMemoryCounter;
    private DualModeKalmanFilter _cpuUsageFilter;
    private DualModeKalmanFilter _memoryUsageFilter;
    private DualModeKalmanFilter _availableMemoryFilter;
    public sealed virtual EnvironmentStatistics GetEnvironmentStatistics();
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private long <.ctor>b__9_0();
    [CompilerGeneratedAttribute]
private long <.ctor>b__9_1();
}
[ObsoleteAttribute("Used only until the interfaces that it implements are removed from the codebase")]
internal class Orleans.Statistics.OldEnvironmentStatistics : object {
    [CompilerGeneratedAttribute]
private IEnvironmentStatisticsProvider <statistics>P;
    public Nullable`1<float> CpuUsage { get; }
    public Nullable`1<long> MemoryUsage { get; }
    public Nullable`1<long> AvailableMemory { get; }
    public Nullable`1<long> TotalPhysicalMemory { get; }
    public OldEnvironmentStatistics(IEnvironmentStatisticsProvider statistics);
    public sealed virtual Nullable`1<float> get_CpuUsage();
    public sealed virtual Nullable`1<long> get_MemoryUsage();
    public sealed virtual Nullable`1<long> get_AvailableMemory();
    public sealed virtual Nullable`1<long> get_TotalPhysicalMemory();
}
[GenerateSerializerAttribute]
public class Orleans.Storage.BadProviderConfigException : OrleansException {
    public BadProviderConfigException(string msg);
    public BadProviderConfigException(string msg, Exception exc);
    [ObsoleteAttribute]
private BadProviderConfigException(SerializationInfo info, StreamingContext context);
}
public class Orleans.Storage.DefaultStorageProviderSerializerOptionsConfigurator`1 : object {
    private IServiceProvider _serviceProvider;
    public DefaultStorageProviderSerializerOptionsConfigurator`1(IServiceProvider serviceProvider);
    public sealed virtual void PostConfigure(string name, TOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Orleans.Storage.GrainStorageHelpers : object {
    public static IGrainStorage GetGrainStorage(Type grainType, IServiceProvider services);
    [DoesNotReturnAttribute]
private static void ThrowMissingProviderException(Type grainType, string name);
}
public class Orleans.Storage.GrainStorageSerializer : object {
    private IGrainStorageSerializer _serializer;
    private IGrainStorageSerializer _fallbackDeserializer;
    public GrainStorageSerializer(IGrainStorageSerializer serializer, IGrainStorageSerializer fallbackDeserializer);
    public sealed virtual BinaryData Serialize(T input);
    public sealed virtual T Deserialize(BinaryData input);
}
[ExtensionAttribute]
public static class Orleans.Storage.GrainStorageSerializerExtensions : object {
    [ExtensionAttribute]
public static T Deserialize(IGrainStorageSerializer serializer, ReadOnlyMemory`1<byte> input);
}
public interface Orleans.Storage.IGrainStorage {
    public abstract virtual Task ReadStateAsync(string stateName, GrainId grainId, IGrainState`1<T> grainState);
    public abstract virtual Task WriteStateAsync(string stateName, GrainId grainId, IGrainState`1<T> grainState);
    public abstract virtual Task ClearStateAsync(string stateName, GrainId grainId, IGrainState`1<T> grainState);
}
public interface Orleans.Storage.IGrainStorageSerializer {
    public abstract virtual BinaryData Serialize(T input);
    public abstract virtual T Deserialize(BinaryData input);
}
public interface Orleans.Storage.IMemoryStorageGrain {
    public abstract virtual Task`1<IGrainState`1<T>> ReadStateAsync(string grainStoreKey);
    public abstract virtual Task`1<string> WriteStateAsync(string grainStoreKey, IGrainState`1<T> grainState);
    public abstract virtual Task DeleteStateAsync(string grainStoreKey, string eTag);
}
[GenerateSerializerAttribute]
public class Orleans.Storage.InconsistentStateException : OrleansException {
    [CompilerGeneratedAttribute]
private bool <IsSourceActivation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StoredEtag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentEtag>k__BackingField;
    [IdAttribute("0")]
internal bool IsSourceActivation { get; internal set; }
    [IdAttribute("1")]
public string StoredEtag { get; private set; }
    [IdAttribute("2")]
public string CurrentEtag { get; private set; }
    public InconsistentStateException(string message);
    public InconsistentStateException(string message, Exception innerException);
    [ObsoleteAttribute]
protected InconsistentStateException(SerializationInfo info, StreamingContext context);
    public InconsistentStateException(string errorMsg, string storedEtag, string currentEtag, Exception storageException);
    public InconsistentStateException(string errorMsg, string storedEtag, string currentEtag);
    public InconsistentStateException(string storedEtag, string currentEtag, Exception storageException);
    [CompilerGeneratedAttribute]
internal bool get_IsSourceActivation();
    [CompilerGeneratedAttribute]
internal void set_IsSourceActivation(bool value);
    [CompilerGeneratedAttribute]
public string get_StoredEtag();
    [CompilerGeneratedAttribute]
private void set_StoredEtag(string value);
    [CompilerGeneratedAttribute]
public string get_CurrentEtag();
    [CompilerGeneratedAttribute]
private void set_CurrentEtag(string value);
    public virtual string ToString();
    [ObsoleteAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public interface Orleans.Storage.IRestExceptionDecoder {
    public abstract virtual bool DecodeException(Exception exception, HttpStatusCode& httpStatusCode, String& restStatus, bool getExtendedErrors);
}
public interface Orleans.Storage.IStorageProviderSerializerOptions {
    public IGrainStorageSerializer GrainStorageSerializer { get; public set; }
    public abstract virtual IGrainStorageSerializer get_GrainStorageSerializer();
    public abstract virtual void set_GrainStorageSerializer(IGrainStorageSerializer value);
}
public class Orleans.Storage.JsonGrainStorageSerializer : object {
    private OrleansJsonSerializer _orleansJsonSerializer;
    public JsonGrainStorageSerializer(OrleansJsonSerializer orleansJsonSerializer);
    public sealed virtual BinaryData Serialize(T value);
    public sealed virtual T Deserialize(BinaryData input);
}
public class Orleans.Storage.OrleansGrainStorageSerializer : object {
    private Serializer serializer;
    public OrleansGrainStorageSerializer(Serializer serializer);
    public sealed virtual BinaryData Serialize(T value);
    public sealed virtual T Deserialize(BinaryData input);
}
[GenerateSerializerAttribute]
[ImmutableAttribute]
public class Orleans.TableVersion : object {
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersionEtag>k__BackingField;
    [IdAttribute("0")]
public int Version { get; }
    [IdAttribute("1")]
public string VersionEtag { get; }
    public TableVersion(int version, string eTag);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public string get_VersionEtag();
    public TableVersion Next();
    public virtual string ToString();
    private sealed virtual override string System.IFormattable.ToString(string format, IFormatProvider formatProvider);
    private sealed virtual override bool System.ISpanFormattable.TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual bool Equals(TableVersion other);
    public static bool op_Equality(TableVersion left, TableVersion right);
    public static bool op_Inequality(TableVersion left, TableVersion right);
}
internal class Orleans.Threading.RecursiveInterlockedExchangeLock : object {
    private static int UNLOCKED;
    [ThreadStaticAttribute]
private static int localThreadId;
    private int lockState;
    private Func`1<bool> spinCondition;
    private static int ThreadId { get; }
    private static int get_ThreadId();
    public bool TryGet();
    public void Get();
    public bool TryRelease();
    public virtual string ToString();
}
internal interface Orleans.Timers.Internal.ILinkedList`1 {
    public T Head { get; public set; }
    public T Tail { get; public set; }
    public abstract virtual T get_Head();
    public abstract virtual void set_Head(T value);
    public abstract virtual T get_Tail();
    public abstract virtual void set_Tail(T value);
}
internal interface Orleans.Timers.Internal.ILinkedListElement`1 {
    public TSelf Next { get; public set; }
    public abstract virtual TSelf get_Next();
    public abstract virtual void set_Next(TSelf value);
}
internal interface Orleans.Timers.Internal.ITimerCallback {
    public DateTime DueTime { get; }
    public CancellationToken CancellationToken { get; }
    public abstract virtual DateTime get_DueTime();
    public abstract virtual CancellationToken get_CancellationToken();
    public abstract virtual void OnTimeout();
    public abstract virtual void OnCanceled();
}
public interface Orleans.Timers.Internal.ITimerManager {
    public abstract virtual Task`1<bool> Delay(TimeSpan timeSpan, CancellationToken cancellationToken);
}
[ExtensionAttribute]
internal static class Orleans.Timers.Internal.LinkedList : object {
    [ExtensionAttribute]
public static void AddTail(TList list, TElement element);
    [ExtensionAttribute]
public static void Remove(TList list, TElement previous, TElement current);
}
internal static class Orleans.Timers.Internal.TimerManager : object {
    public static Task`1<bool> Delay(TimeSpan timeSpan, CancellationToken cancellationToken);
    public static Task`1<bool> DelayUntil(DateTime dueTime, CancellationToken cancellationToken);
}
internal static class Orleans.Timers.Internal.TimerManager`1 : object {
    private static int MAX_STARVATION;
    private static int TIMER_TICK_MILLISECONDS;
    private static object AllQueuesLock;
    private static Timer QueueChecker;
    private static ThreadLocalQueue[] allQueues;
    [ThreadStaticAttribute]
private static ThreadLocalQueue<T> threadLocalQueue;
    private static TimerManager`1();
    public static void Register(T timer);
    private static void CheckQueues();
    private static void CheckQueueInLock(ThreadLocalQueue<T> queue, DateTime now, ExpiredTimers<T> expired);
    private static ThreadLocalQueue<T> EnsureCurrentThreadHasQueue();
    [CompilerGeneratedAttribute]
internal static ThreadLocalQueue<T> <EnsureCurrentThreadHasQueue>g__InitializeThreadLocalQueue|10_0();
}
internal class Orleans.Timers.Internal.TimerManagerImpl : object {
    public sealed virtual Task`1<bool> Delay(TimeSpan timeSpan, CancellationToken cancellationToken);
}
public class Orleans.Utilities.ObserverManager`1 : ObserverManager`2<IAddressable, TObserver> {
    public ObserverManager`1(TimeSpan expiration, ILogger log);
}
public class Orleans.Utilities.ObserverManager`2 : object {
    private Dictionary`2<TIdentity, ObserverEntry<TIdentity, TObserver>> _observers;
    private ILogger _log;
    [CompilerGeneratedAttribute]
private Func`1<DateTime> <GetDateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ExpirationDuration>k__BackingField;
    public Func`1<DateTime> GetDateTime { get; public set; }
    public TimeSpan ExpirationDuration { get; public set; }
    public int Count { get; }
    public IDictionary`2<TIdentity, TObserver> Observers { get; }
    public ObserverManager`2(TimeSpan expiration, ILogger log);
    [CompilerGeneratedAttribute]
public Func`1<DateTime> get_GetDateTime();
    [CompilerGeneratedAttribute]
public void set_GetDateTime(Func`1<DateTime> value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ExpirationDuration();
    [CompilerGeneratedAttribute]
public void set_ExpirationDuration(TimeSpan value);
    public int get_Count();
    public IDictionary`2<TIdentity, TObserver> get_Observers();
    public void Clear();
    public void Subscribe(TIdentity id, TObserver observer);
    public void Unsubscribe(TIdentity id);
    [AsyncStateMachineAttribute("Orleans.Utilities.ObserverManager`2/<Notify>d__18")]
public Task Notify(Func`2<TObserver, Task> notification, Func`2<TObserver, bool> predicate);
    public void Notify(Action`1<TObserver> notification, Func`2<TObserver, bool> predicate);
    public void ClearExpired();
    public sealed virtual IEnumerator`1<TObserver> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[ExtensionAttribute]
internal static class Orleans.Utilities.TypeConverterExtensions : object {
    private static char GenericTypeIndicator;
    private static char StartArgument;
    public static bool IsGenericType(IdSpan type);
    public static int GetGenericTypeArity(IdSpan type);
    public static bool IsConstructed(IdSpan type);
    public static IdSpan GetDeconstructed(IdSpan type);
    [ExtensionAttribute]
public static IdSpan GetConstructed(TypeConverter formatter, IdSpan unconstructed, Type[] typeArguments);
    [ExtensionAttribute]
public static GrainType GetConstructed(GenericGrainType genericGrainType, GenericGrainInterfaceType genericGrainInterfaceType);
    [ExtensionAttribute]
public static Type[] GetArguments(TypeConverter formatter, IdSpan constructed);
    [DoesNotReturnAttribute]
private static void ThrowGenericArityMismatch(GenericGrainType genericGrainType, GenericGrainInterfaceType genericInterfaceType);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Activator_GrainState`1 : object {
    public sealed virtual GrainState`1<T> Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Activator_MembershipEntry : object {
    public sealed virtual MembershipEntry Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.ClientObservers.Codec_Invokable_IClientGatewayObserver_GrainReference_AFB768FD : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<SiloAddress> _codec0;
    public Codec_Invokable_IClientGatewayObserver_GrainReference_AFB768FD(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IClientGatewayObserver_GrainReference_AFB768FD instance);
    public void Deserialize(Reader`1& reader, Invokable_IClientGatewayObserver_GrainReference_AFB768FD instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IClientGatewayObserver_GrainReference_AFB768FD value);
    public sealed virtual Invokable_IClientGatewayObserver_GrainReference_AFB768FD ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.ClientObservers.Copier_Invokable_IClientGatewayObserver_GrainReference_AFB768FD : object {
    public sealed virtual Invokable_IClientGatewayObserver_GrainReference_AFB768FD DeepCopy(Invokable_IClientGatewayObserver_GrainReference_AFB768FD original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.ClientObservers.Invokable_IClientGatewayObserver_GrainReference_AFB768FD : VoidRequest {
    public SiloAddress arg0;
    private IClientGatewayObserver target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IClientGatewayObserver_GrainReference_AFB768FD();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual void InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.ClientObservers.Proxy_IClientGatewayObserver : GrainReference {
    public Proxy_IClientGatewayObserver(GrainReferenceShared arg0, IdSpan arg1);
    private sealed virtual override void global::Orleans.ClientObservers.IClientGatewayObserver.StopSendingToGateway(SiloAddress arg0);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_GrainState`1 : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<T> _codec0;
    public Codec_GrainState`1(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, GrainState`1<T> instance);
    public void Deserialize(Reader`1& reader, GrainState`1<T> instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, GrainState`1<T> value);
    public sealed virtual GrainState`1<T> ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_Invokable_IMembershipTable_GrainReference_00BCE16F : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IMembershipTable_GrainReference_00BCE16F instance);
    public void Deserialize(Reader`1& reader, Invokable_IMembershipTable_GrainReference_00BCE16F instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMembershipTable_GrainReference_00BCE16F value);
    public sealed virtual Invokable_IMembershipTable_GrainReference_00BCE16F ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_Invokable_IMembershipTable_GrainReference_7A519C2E : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IMembershipTable_GrainReference_7A519C2E instance);
    public void Deserialize(Reader`1& reader, Invokable_IMembershipTable_GrainReference_7A519C2E instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMembershipTable_GrainReference_7A519C2E value);
    public sealed virtual Invokable_IMembershipTable_GrainReference_7A519C2E ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_Invokable_IMembershipTable_GrainReference_B1A52D2B : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_MembershipEntry _codec0;
    public Codec_Invokable_IMembershipTable_GrainReference_B1A52D2B(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IMembershipTable_GrainReference_B1A52D2B instance);
    public void Deserialize(Reader`1& reader, Invokable_IMembershipTable_GrainReference_B1A52D2B instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMembershipTable_GrainReference_B1A52D2B value);
    public sealed virtual Invokable_IMembershipTable_GrainReference_B1A52D2B ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_Invokable_IMembershipTable_GrainReference_BF899C85 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IMembershipTable_GrainReference_BF899C85 instance);
    public void Deserialize(Reader`1& reader, Invokable_IMembershipTable_GrainReference_BF899C85 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMembershipTable_GrainReference_BF899C85 value);
    public sealed virtual Invokable_IMembershipTable_GrainReference_BF899C85 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_Invokable_IMembershipTable_GrainReference_D851FB33 : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<SiloAddress> _codec0;
    public Codec_Invokable_IMembershipTable_GrainReference_D851FB33(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IMembershipTable_GrainReference_D851FB33 instance);
    public void Deserialize(Reader`1& reader, Invokable_IMembershipTable_GrainReference_D851FB33 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMembershipTable_GrainReference_D851FB33 value);
    public sealed virtual Invokable_IMembershipTable_GrainReference_D851FB33 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_Invokable_IMembershipTable_GrainReference_E06D3DBC : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_MembershipEntry _codec0;
    private Type _type1;
    private Codec_TableVersion _codec1;
    public Codec_Invokable_IMembershipTable_GrainReference_E06D3DBC(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IMembershipTable_GrainReference_E06D3DBC instance);
    public void Deserialize(Reader`1& reader, Invokable_IMembershipTable_GrainReference_E06D3DBC instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMembershipTable_GrainReference_E06D3DBC value);
    public sealed virtual Invokable_IMembershipTable_GrainReference_E06D3DBC ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_Invokable_IMembershipTable_GrainReference_FB89E5E9 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IMembershipTable_GrainReference_FB89E5E9 instance);
    public void Deserialize(Reader`1& reader, Invokable_IMembershipTable_GrainReference_FB89E5E9 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMembershipTable_GrainReference_FB89E5E9 value);
    public sealed virtual Invokable_IMembershipTable_GrainReference_FB89E5E9 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_Invokable_IMembershipTable_GrainReference_FEF3AC5A : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_MembershipEntry _codec0;
    private Type _type1;
    private Codec_TableVersion _codec1;
    public Codec_Invokable_IMembershipTable_GrainReference_FEF3AC5A(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IMembershipTable_GrainReference_FEF3AC5A instance);
    public void Deserialize(Reader`1& reader, Invokable_IMembershipTable_GrainReference_FEF3AC5A instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMembershipTable_GrainReference_FEF3AC5A value);
    public sealed virtual Invokable_IMembershipTable_GrainReference_FEF3AC5A ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Codec_Invokable_ISiloControl_GrainReference_0C7DBD0C : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_ISiloControl_GrainReference_0C7DBD0C instance);
    public void Deserialize(Reader`1& reader, Invokable_ISiloControl_GrainReference_0C7DBD0C instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ISiloControl_GrainReference_0C7DBD0C value);
    public sealed virtual Invokable_ISiloControl_GrainReference_0C7DBD0C ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Codec_Invokable_ISiloControl_GrainReference_1422B0B7 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_ISiloControl_GrainReference_1422B0B7 instance);
    public void Deserialize(Reader`1& reader, Invokable_ISiloControl_GrainReference_1422B0B7 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ISiloControl_GrainReference_1422B0B7 value);
    public sealed virtual Invokable_ISiloControl_GrainReference_1422B0B7 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Codec_Invokable_ISiloControl_GrainReference_355CA3FA_1`1 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_ISiloControl_GrainReference_355CA3FA_1`1<T> instance);
    public void Deserialize(Reader`1& reader, Invokable_ISiloControl_GrainReference_355CA3FA_1`1<T> instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ISiloControl_GrainReference_355CA3FA_1`1<T> value);
    public sealed virtual Invokable_ISiloControl_GrainReference_355CA3FA_1`1<T> ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Codec_Invokable_ISiloControl_GrainReference_45172562 : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_GrainId _codec0;
    public Codec_Invokable_ISiloControl_GrainReference_45172562(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_ISiloControl_GrainReference_45172562 instance);
    public void Deserialize(Reader`1& reader, Invokable_ISiloControl_GrainReference_45172562 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ISiloControl_GrainReference_45172562 value);
    public sealed virtual Invokable_ISiloControl_GrainReference_45172562 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Codec_Invokable_ISiloControl_GrainReference_45D07D09 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_ISiloControl_GrainReference_45D07D09 instance);
    public void Deserialize(Reader`1& reader, Invokable_ISiloControl_GrainReference_45D07D09 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ISiloControl_GrainReference_45D07D09 value);
    public sealed virtual Invokable_ISiloControl_GrainReference_45D07D09 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Codec_Invokable_ISiloControl_GrainReference_6DE16EF7 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_ISiloControl_GrainReference_6DE16EF7 instance);
    public void Deserialize(Reader`1& reader, Invokable_ISiloControl_GrainReference_6DE16EF7 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ISiloControl_GrainReference_6DE16EF7 value);
    public sealed virtual Invokable_ISiloControl_GrainReference_6DE16EF7 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Codec_Invokable_ISiloControl_GrainReference_85797C87 : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_GrainType _codec0;
    public Codec_Invokable_ISiloControl_GrainReference_85797C87(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_ISiloControl_GrainReference_85797C87 instance);
    public void Deserialize(Reader`1& reader, Invokable_ISiloControl_GrainReference_85797C87 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ISiloControl_GrainReference_85797C87 value);
    public sealed virtual Invokable_ISiloControl_GrainReference_85797C87 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Codec_Invokable_ISiloControl_GrainReference_B0F4C24B : object {
    private Type _codecFieldType;
    private Type _type0;
    private ArrayCodec`1<string> _codec0;
    public Codec_Invokable_ISiloControl_GrainReference_B0F4C24B(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_ISiloControl_GrainReference_B0F4C24B instance);
    public void Deserialize(Reader`1& reader, Invokable_ISiloControl_GrainReference_B0F4C24B instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ISiloControl_GrainReference_B0F4C24B value);
    public sealed virtual Invokable_ISiloControl_GrainReference_B0F4C24B ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Codec_Invokable_ISiloControl_GrainReference_C4C370A5 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_ISiloControl_GrainReference_C4C370A5 instance);
    public void Deserialize(Reader`1& reader, Invokable_ISiloControl_GrainReference_C4C370A5 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ISiloControl_GrainReference_C4C370A5 value);
    public sealed virtual Invokable_ISiloControl_GrainReference_C4C370A5 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Codec_Invokable_ISiloControl_GrainReference_F18EAF24 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_ISiloControl_GrainReference_F18EAF24 instance);
    public void Deserialize(Reader`1& reader, Invokable_ISiloControl_GrainReference_F18EAF24 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ISiloControl_GrainReference_F18EAF24 value);
    public sealed virtual Invokable_ISiloControl_GrainReference_F18EAF24 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Codec_Invokable_ISiloControl_GrainReference_F388CED1 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_ISiloControl_GrainReference_F388CED1 instance);
    public void Deserialize(Reader`1& reader, Invokable_ISiloControl_GrainReference_F388CED1 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ISiloControl_GrainReference_F388CED1 value);
    public sealed virtual Invokable_ISiloControl_GrainReference_F388CED1 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Codec_Invokable_ISiloControl_GrainReference_FF707A30 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_ISiloControl_GrainReference_FF707A30 instance);
    public void Deserialize(Reader`1& reader, Invokable_ISiloControl_GrainReference_FF707A30 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ISiloControl_GrainReference_FF707A30 value);
    public sealed virtual Invokable_ISiloControl_GrainReference_FF707A30 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_Invokable_IVersionManager_GrainReference_4AAEAFCE : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<VersionSelectorStrategy> _codec0;
    public Codec_Invokable_IVersionManager_GrainReference_4AAEAFCE(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IVersionManager_GrainReference_4AAEAFCE instance);
    public void Deserialize(Reader`1& reader, Invokable_IVersionManager_GrainReference_4AAEAFCE instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IVersionManager_GrainReference_4AAEAFCE value);
    public sealed virtual Invokable_IVersionManager_GrainReference_4AAEAFCE ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_Invokable_IVersionManager_GrainReference_8F5C15A9 : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<CompatibilityStrategy> _codec0;
    public Codec_Invokable_IVersionManager_GrainReference_8F5C15A9(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IVersionManager_GrainReference_8F5C15A9 instance);
    public void Deserialize(Reader`1& reader, Invokable_IVersionManager_GrainReference_8F5C15A9 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IVersionManager_GrainReference_8F5C15A9 value);
    public sealed virtual Invokable_IVersionManager_GrainReference_8F5C15A9 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_Invokable_IVersionManager_GrainReference_90AB9D5E : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_GrainInterfaceType _codec0;
    private Type _type1;
    private IFieldCodec`1<VersionSelectorStrategy> _codec1;
    public Codec_Invokable_IVersionManager_GrainReference_90AB9D5E(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IVersionManager_GrainReference_90AB9D5E instance);
    public void Deserialize(Reader`1& reader, Invokable_IVersionManager_GrainReference_90AB9D5E instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IVersionManager_GrainReference_90AB9D5E value);
    public sealed virtual Invokable_IVersionManager_GrainReference_90AB9D5E ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_Invokable_IVersionManager_GrainReference_C01C4EE8 : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_GrainInterfaceType _codec0;
    private Type _type1;
    private IFieldCodec`1<CompatibilityStrategy> _codec1;
    public Codec_Invokable_IVersionManager_GrainReference_C01C4EE8(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IVersionManager_GrainReference_C01C4EE8 instance);
    public void Deserialize(Reader`1& reader, Invokable_IVersionManager_GrainReference_C01C4EE8 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IVersionManager_GrainReference_C01C4EE8 value);
    public sealed virtual Invokable_IVersionManager_GrainReference_C01C4EE8 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_MembershipEntry : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<SiloAddress> _codec0;
    private Type _type1;
    private Codec_SiloStatus _codec1;
    private Type _type2;
    private ListCodec`1<Tuple`2<SiloAddress, DateTime>> _codec2;
    public Codec_MembershipEntry(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, MembershipEntry instance);
    public void Deserialize(Reader`1& reader, MembershipEntry instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, MembershipEntry value);
    public sealed virtual MembershipEntry ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_MembershipTableData : object {
    private Type _codecFieldType;
    private IActivator`1<MembershipTableData> _activator;
    private Type _type0;
    private IFieldCodec`1<IReadOnlyList`1<Tuple`2<MembershipEntry, string>>> _codec0;
    private Type _type1;
    private Codec_TableVersion _codec1;
    private static Action`2<MembershipTableData, IReadOnlyList`1<Tuple`2<MembershipEntry, string>>> setField0;
    private static Action`2<MembershipTableData, TableVersion> setField1;
    public Codec_MembershipTableData(IActivator`1<MembershipTableData> _activator, ICodecProvider codecProvider);
    private static Codec_MembershipTableData();
    public void Serialize(Writer`1& writer, MembershipTableData instance);
    public void Deserialize(Reader`1& reader, MembershipTableData instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, MembershipTableData value);
    public sealed virtual MembershipTableData ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Codec_TableVersion : object {
    private Type _codecFieldType;
    private IActivator`1<TableVersion> _activator;
    private static Action`2<TableVersion, int> setField0;
    private static Action`2<TableVersion, string> setField1;
    public Codec_TableVersion(IActivator`1<TableVersion> _activator);
    private static Codec_TableVersion();
    public void Serialize(Writer`1& writer, TableVersion instance);
    public void Deserialize(Reader`1& reader, TableVersion instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, TableVersion value);
    public sealed virtual TableVersion ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_GrainState`1 : object {
    private IDeepCopier`1<T> _copier0;
    public Copier_GrainState`1(ICodecProvider codecProvider);
    public sealed virtual GrainState`1<T> DeepCopy(GrainState`1<T> original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_Invokable_IMembershipTable_GrainReference_00BCE16F : object {
    public sealed virtual Invokable_IMembershipTable_GrainReference_00BCE16F DeepCopy(Invokable_IMembershipTable_GrainReference_00BCE16F original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_Invokable_IMembershipTable_GrainReference_7A519C2E : object {
    public sealed virtual Invokable_IMembershipTable_GrainReference_7A519C2E DeepCopy(Invokable_IMembershipTable_GrainReference_7A519C2E original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_Invokable_IMembershipTable_GrainReference_B1A52D2B : object {
    private Copier_MembershipEntry _copier0;
    public Copier_Invokable_IMembershipTable_GrainReference_B1A52D2B(ICodecProvider codecProvider);
    public sealed virtual Invokable_IMembershipTable_GrainReference_B1A52D2B DeepCopy(Invokable_IMembershipTable_GrainReference_B1A52D2B original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_Invokable_IMembershipTable_GrainReference_BF899C85 : object {
    public sealed virtual Invokable_IMembershipTable_GrainReference_BF899C85 DeepCopy(Invokable_IMembershipTable_GrainReference_BF899C85 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_Invokable_IMembershipTable_GrainReference_D851FB33 : object {
    public sealed virtual Invokable_IMembershipTable_GrainReference_D851FB33 DeepCopy(Invokable_IMembershipTable_GrainReference_D851FB33 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_Invokable_IMembershipTable_GrainReference_E06D3DBC : object {
    private Copier_MembershipEntry _copier0;
    public Copier_Invokable_IMembershipTable_GrainReference_E06D3DBC(ICodecProvider codecProvider);
    public sealed virtual Invokable_IMembershipTable_GrainReference_E06D3DBC DeepCopy(Invokable_IMembershipTable_GrainReference_E06D3DBC original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_Invokable_IMembershipTable_GrainReference_FB89E5E9 : object {
    public sealed virtual Invokable_IMembershipTable_GrainReference_FB89E5E9 DeepCopy(Invokable_IMembershipTable_GrainReference_FB89E5E9 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_Invokable_IMembershipTable_GrainReference_FEF3AC5A : object {
    private Copier_MembershipEntry _copier0;
    public Copier_Invokable_IMembershipTable_GrainReference_FEF3AC5A(ICodecProvider codecProvider);
    public sealed virtual Invokable_IMembershipTable_GrainReference_FEF3AC5A DeepCopy(Invokable_IMembershipTable_GrainReference_FEF3AC5A original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Copier_Invokable_ISiloControl_GrainReference_0C7DBD0C : object {
    public sealed virtual Invokable_ISiloControl_GrainReference_0C7DBD0C DeepCopy(Invokable_ISiloControl_GrainReference_0C7DBD0C original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Copier_Invokable_ISiloControl_GrainReference_1422B0B7 : object {
    public sealed virtual Invokable_ISiloControl_GrainReference_1422B0B7 DeepCopy(Invokable_ISiloControl_GrainReference_1422B0B7 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Copier_Invokable_ISiloControl_GrainReference_355CA3FA_1`1 : object {
    public sealed virtual Invokable_ISiloControl_GrainReference_355CA3FA_1`1<T> DeepCopy(Invokable_ISiloControl_GrainReference_355CA3FA_1`1<T> original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Copier_Invokable_ISiloControl_GrainReference_45172562 : object {
    public sealed virtual Invokable_ISiloControl_GrainReference_45172562 DeepCopy(Invokable_ISiloControl_GrainReference_45172562 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Copier_Invokable_ISiloControl_GrainReference_45D07D09 : object {
    public sealed virtual Invokable_ISiloControl_GrainReference_45D07D09 DeepCopy(Invokable_ISiloControl_GrainReference_45D07D09 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Copier_Invokable_ISiloControl_GrainReference_6DE16EF7 : object {
    public sealed virtual Invokable_ISiloControl_GrainReference_6DE16EF7 DeepCopy(Invokable_ISiloControl_GrainReference_6DE16EF7 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Copier_Invokable_ISiloControl_GrainReference_85797C87 : object {
    public sealed virtual Invokable_ISiloControl_GrainReference_85797C87 DeepCopy(Invokable_ISiloControl_GrainReference_85797C87 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Copier_Invokable_ISiloControl_GrainReference_B0F4C24B : object {
    private ArrayCopier`1<string> _copier0;
    public Copier_Invokable_ISiloControl_GrainReference_B0F4C24B(ICodecProvider codecProvider);
    public sealed virtual Invokable_ISiloControl_GrainReference_B0F4C24B DeepCopy(Invokable_ISiloControl_GrainReference_B0F4C24B original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Copier_Invokable_ISiloControl_GrainReference_C4C370A5 : object {
    public sealed virtual Invokable_ISiloControl_GrainReference_C4C370A5 DeepCopy(Invokable_ISiloControl_GrainReference_C4C370A5 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Copier_Invokable_ISiloControl_GrainReference_F18EAF24 : object {
    public sealed virtual Invokable_ISiloControl_GrainReference_F18EAF24 DeepCopy(Invokable_ISiloControl_GrainReference_F18EAF24 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Copier_Invokable_ISiloControl_GrainReference_F388CED1 : object {
    public sealed virtual Invokable_ISiloControl_GrainReference_F388CED1 DeepCopy(Invokable_ISiloControl_GrainReference_F388CED1 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Copier_Invokable_ISiloControl_GrainReference_FF707A30 : object {
    public sealed virtual Invokable_ISiloControl_GrainReference_FF707A30 DeepCopy(Invokable_ISiloControl_GrainReference_FF707A30 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_Invokable_IVersionManager_GrainReference_4AAEAFCE : object {
    private IDeepCopier`1<VersionSelectorStrategy> _copier0;
    public Copier_Invokable_IVersionManager_GrainReference_4AAEAFCE(ICodecProvider codecProvider);
    public sealed virtual Invokable_IVersionManager_GrainReference_4AAEAFCE DeepCopy(Invokable_IVersionManager_GrainReference_4AAEAFCE original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_Invokable_IVersionManager_GrainReference_8F5C15A9 : object {
    private IDeepCopier`1<CompatibilityStrategy> _copier0;
    public Copier_Invokable_IVersionManager_GrainReference_8F5C15A9(ICodecProvider codecProvider);
    public sealed virtual Invokable_IVersionManager_GrainReference_8F5C15A9 DeepCopy(Invokable_IVersionManager_GrainReference_8F5C15A9 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_Invokable_IVersionManager_GrainReference_90AB9D5E : object {
    private IDeepCopier`1<VersionSelectorStrategy> _copier0;
    public Copier_Invokable_IVersionManager_GrainReference_90AB9D5E(ICodecProvider codecProvider);
    public sealed virtual Invokable_IVersionManager_GrainReference_90AB9D5E DeepCopy(Invokable_IVersionManager_GrainReference_90AB9D5E original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_Invokable_IVersionManager_GrainReference_C01C4EE8 : object {
    private IDeepCopier`1<CompatibilityStrategy> _copier0;
    public Copier_Invokable_IVersionManager_GrainReference_C01C4EE8(ICodecProvider codecProvider);
    public sealed virtual Invokable_IVersionManager_GrainReference_C01C4EE8 DeepCopy(Invokable_IVersionManager_GrainReference_C01C4EE8 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_MembershipEntry : object {
    private ListCopier`1<Tuple`2<SiloAddress, DateTime>> _copier0;
    public Copier_MembershipEntry(ICodecProvider codecProvider);
    public sealed virtual MembershipEntry DeepCopy(MembershipEntry original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Copier_MembershipTableData : object {
    private IActivator`1<MembershipTableData> _activator;
    private IDeepCopier`1<IReadOnlyList`1<Tuple`2<MembershipEntry, string>>> _copier0;
    private static Action`2<MembershipTableData, IReadOnlyList`1<Tuple`2<MembershipEntry, string>>> setField0;
    private static Action`2<MembershipTableData, TableVersion> setField1;
    public Copier_MembershipTableData(IActivator`1<MembershipTableData> _activator, ICodecProvider codecProvider);
    private static Copier_MembershipTableData();
    public sealed virtual MembershipTableData DeepCopy(MembershipTableData original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.GrainDirectory.Codec_AddressAndTag : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_GrainAddress _codec0;
    private static ValueTypeSetter`2<AddressAndTag, GrainAddress> setField0;
    private static ValueTypeSetter`2<AddressAndTag, int> setField1;
    public Codec_AddressAndTag(ICodecProvider codecProvider);
    private static Codec_AddressAndTag();
    public sealed virtual void Serialize(Writer`1& writer, AddressAndTag& instance);
    public sealed virtual void Deserialize(Reader`1& reader, AddressAndTag& instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, AddressAndTag value);
    public sealed virtual AddressAndTag ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Invokable_IMembershipTable_GrainReference_00BCE16F : TaskRequest`1<MembershipTableData> {
    private IMembershipTable target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMembershipTable_GrainReference_00BCE16F();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual Task`1<MembershipTableData> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Invokable_IMembershipTable_GrainReference_7A519C2E : TaskRequest {
    public DateTimeOffset arg0;
    private IMembershipTable target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMembershipTable_GrainReference_7A519C2E();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Invokable_IMembershipTable_GrainReference_B1A52D2B : TaskRequest {
    public MembershipEntry arg0;
    private IMembershipTable target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMembershipTable_GrainReference_B1A52D2B();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Invokable_IMembershipTable_GrainReference_BF899C85 : TaskRequest {
    public string arg0;
    private IMembershipTable target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMembershipTable_GrainReference_BF899C85();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Invokable_IMembershipTable_GrainReference_D851FB33 : TaskRequest`1<MembershipTableData> {
    public SiloAddress arg0;
    private IMembershipTable target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMembershipTable_GrainReference_D851FB33();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<MembershipTableData> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Invokable_IMembershipTable_GrainReference_E06D3DBC : TaskRequest`1<bool> {
    public MembershipEntry arg0;
    public string arg1;
    public TableVersion arg2;
    private IMembershipTable target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMembershipTable_GrainReference_E06D3DBC();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<bool> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Invokable_IMembershipTable_GrainReference_FB89E5E9 : TaskRequest {
    public bool arg0;
    private IMembershipTable target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMembershipTable_GrainReference_FB89E5E9();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Invokable_IMembershipTable_GrainReference_FEF3AC5A : TaskRequest`1<bool> {
    public MembershipEntry arg0;
    public TableVersion arg1;
    private IMembershipTable target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMembershipTable_GrainReference_FEF3AC5A();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<bool> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Invokable_ISiloControl_GrainReference_0C7DBD0C : TaskRequest {
    private ISiloControl target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ISiloControl_GrainReference_0C7DBD0C();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Invokable_ISiloControl_GrainReference_1422B0B7 : TaskRequest {
    public string arg0;
    private ISiloControl target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ISiloControl_GrainReference_1422B0B7();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Invokable_ISiloControl_GrainReference_355CA3FA_1`1 : TaskRequest`1<object> {
    public string arg0;
    public int arg1;
    public object arg2;
    private ISiloControl target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ISiloControl_GrainReference_355CA3FA_1`1();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<object> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Invokable_ISiloControl_GrainReference_45172562 : TaskRequest`1<DetailedGrainReport> {
    public GrainId arg0;
    private ISiloControl target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ISiloControl_GrainReference_45172562();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<DetailedGrainReport> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Invokable_ISiloControl_GrainReference_45D07D09 : TaskRequest {
    public TimeSpan arg0;
    private ISiloControl target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ISiloControl_GrainReference_45D07D09();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Invokable_ISiloControl_GrainReference_6DE16EF7 : TaskRequest`1<SimpleGrainStatistic[]> {
    private ISiloControl target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ISiloControl_GrainReference_6DE16EF7();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual Task`1<SimpleGrainStatistic[]> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Invokable_ISiloControl_GrainReference_85797C87 : TaskRequest`1<List`1<GrainId>> {
    public GrainType arg0;
    private ISiloControl target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ISiloControl_GrainReference_85797C87();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<List`1<GrainId>> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Invokable_ISiloControl_GrainReference_B0F4C24B : TaskRequest`1<List`1<DetailedGrainStatistic>> {
    public String[] arg0;
    private ISiloControl target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ISiloControl_GrainReference_B0F4C24B();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<List`1<DetailedGrainStatistic>> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Invokable_ISiloControl_GrainReference_C4C370A5 : TaskRequest`1<int> {
    private ISiloControl target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ISiloControl_GrainReference_C4C370A5();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual Task`1<int> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Invokable_ISiloControl_GrainReference_F18EAF24 : TaskRequest`1<SiloRuntimeStatistics> {
    private ISiloControl target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ISiloControl_GrainReference_F18EAF24();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual Task`1<SiloRuntimeStatistics> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Invokable_ISiloControl_GrainReference_F388CED1 : TaskRequest {
    private ISiloControl target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ISiloControl_GrainReference_F388CED1();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Invokable_ISiloControl_GrainReference_FF707A30 : TaskRequest`1<List`1<Tuple`3<GrainId, string, int>>> {
    private ISiloControl target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ISiloControl_GrainReference_FF707A30();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual Task`1<List`1<Tuple`3<GrainId, string, int>>> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Invokable_IVersionManager_GrainReference_4AAEAFCE : TaskRequest {
    public VersionSelectorStrategy arg0;
    private IVersionManager target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IVersionManager_GrainReference_4AAEAFCE();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Invokable_IVersionManager_GrainReference_8F5C15A9 : TaskRequest {
    public CompatibilityStrategy arg0;
    private IVersionManager target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IVersionManager_GrainReference_8F5C15A9();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Invokable_IVersionManager_GrainReference_90AB9D5E : TaskRequest {
    public GrainInterfaceType arg0;
    public VersionSelectorStrategy arg1;
    private IVersionManager target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IVersionManager_GrainReference_90AB9D5E();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Invokable_IVersionManager_GrainReference_C01C4EE8 : TaskRequest {
    public GrainInterfaceType arg0;
    public CompatibilityStrategy arg1;
    private IVersionManager target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IVersionManager_GrainReference_C01C4EE8();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.LeaseProviders.Codec_AcquiredLease : object {
    private Type _codecFieldType;
    private IActivator`1<AcquiredLease> _activator;
    private static Action`2<AcquiredLease, TimeSpan> setField0;
    private static Action`2<AcquiredLease, string> setField1;
    private static Action`2<AcquiredLease, DateTime> setField2;
    private static Action`2<AcquiredLease, string> setField3;
    public Codec_AcquiredLease(IActivator`1<AcquiredLease> _activator);
    private static Codec_AcquiredLease();
    public void Serialize(Writer`1& writer, AcquiredLease instance);
    public void Deserialize(Reader`1& reader, AcquiredLease instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, AcquiredLease value);
    public sealed virtual AcquiredLease ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.LeaseProviders.Codec_AcquireLeaseResult : object {
    private Type _codecFieldType;
    private IActivator`1<AcquireLeaseResult> _activator;
    private Type _type0;
    private Codec_AcquiredLease _codec0;
    private Type _type1;
    private ExceptionCodec _codec1;
    private Type _type2;
    private Codec_ResponseCode _codec2;
    private static Action`2<AcquireLeaseResult, AcquiredLease> setField0;
    private static Action`2<AcquireLeaseResult, Exception> setField1;
    private static Action`2<AcquireLeaseResult, ResponseCode> setField2;
    public Codec_AcquireLeaseResult(IActivator`1<AcquireLeaseResult> _activator, ICodecProvider codecProvider);
    private static Codec_AcquireLeaseResult();
    public void Serialize(Writer`1& writer, AcquireLeaseResult instance);
    public void Deserialize(Reader`1& reader, AcquireLeaseResult instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, AcquireLeaseResult value);
    public sealed virtual AcquireLeaseResult ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.LeaseProviders.Codec_LeaseRequest : object {
    private Type _codecFieldType;
    private IActivator`1<LeaseRequest> _activator;
    private static Action`2<LeaseRequest, TimeSpan> setField0;
    private static Action`2<LeaseRequest, string> setField1;
    public Codec_LeaseRequest(IActivator`1<LeaseRequest> _activator);
    private static Codec_LeaseRequest();
    public void Serialize(Writer`1& writer, LeaseRequest instance);
    public void Deserialize(Reader`1& reader, LeaseRequest instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, LeaseRequest value);
    public sealed virtual LeaseRequest ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.LeaseProviders.Codec_ResponseCode : object {
    private Type _codecFieldType;
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, ResponseCode value);
    public sealed virtual ResponseCode ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Networking.Shared.Codec_SocketConnectionException : object {
    private Type _codecFieldType;
    private Codec_OrleansException _baseTypeSerializer;
    private IActivator`1<SocketConnectionException> _activator;
    public Codec_SocketConnectionException(ICodecProvider codecProvider, IActivator`1<SocketConnectionException> _activator);
    public void Serialize(Writer`1& writer, SocketConnectionException instance);
    public void Deserialize(Reader`1& reader, SocketConnectionException instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, SocketConnectionException value);
    public sealed virtual SocketConnectionException ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Networking.Shared.Copier_SocketConnectionException : ExceptionCopier`2<SocketConnectionException, OrleansException> {
    public Copier_SocketConnectionException(ICodecProvider codecProvider);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.AcceptExchangeResponse.Codec_ResponseType : object {
    private Type _codecFieldType;
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, ResponseType value);
    public sealed virtual ResponseType ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Activator_CandidateVertex : object {
    public sealed virtual CandidateVertex Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_AcceptExchangeRequest : object {
    private Type _codecFieldType;
    private IActivator`1<AcceptExchangeRequest> _activator;
    private Type _type0;
    private IFieldCodec`1<ImmutableArray`1<CandidateVertex>> _codec0;
    private Type _type1;
    private IFieldCodec`1<SiloAddress> _codec1;
    private static Action`2<AcceptExchangeRequest, int> setField0;
    private static Action`2<AcceptExchangeRequest, ImmutableArray`1<CandidateVertex>> setField1;
    private static Action`2<AcceptExchangeRequest, SiloAddress> setField2;
    public Codec_AcceptExchangeRequest(IActivator`1<AcceptExchangeRequest> _activator, ICodecProvider codecProvider);
    private static Codec_AcceptExchangeRequest();
    public void Serialize(Writer`1& writer, AcceptExchangeRequest instance);
    public void Deserialize(Reader`1& reader, AcceptExchangeRequest instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, AcceptExchangeRequest value);
    public sealed virtual AcceptExchangeRequest ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_AcceptExchangeResponse : object {
    private Type _codecFieldType;
    private IActivator`1<AcceptExchangeResponse> _activator;
    private Type _type0;
    private IFieldCodec`1<ImmutableArray`1<GrainId>> _codec0;
    private Type _type1;
    private Codec_ResponseType _codec1;
    private static Action`2<AcceptExchangeResponse, ImmutableArray`1<GrainId>> setField0;
    private static Action`2<AcceptExchangeResponse, ImmutableArray`1<GrainId>> setField1;
    private static Action`2<AcceptExchangeResponse, ResponseType> setField2;
    public Codec_AcceptExchangeResponse(IActivator`1<AcceptExchangeResponse> _activator, ICodecProvider codecProvider);
    private static Codec_AcceptExchangeResponse();
    public void Serialize(Writer`1& writer, AcceptExchangeResponse instance);
    public void Deserialize(Reader`1& reader, AcceptExchangeResponse instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, AcceptExchangeResponse value);
    public sealed virtual AcceptExchangeResponse ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_CandidateConnectedVertex : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_GrainId _codec0;
    private static ValueTypeSetter`2<CandidateConnectedVertex, GrainId> setField0;
    private static ValueTypeSetter`2<CandidateConnectedVertex, long> setField1;
    public Codec_CandidateConnectedVertex(ICodecProvider codecProvider);
    private static Codec_CandidateConnectedVertex();
    public sealed virtual void Serialize(Writer`1& writer, CandidateConnectedVertex& instance);
    public sealed virtual void Deserialize(Reader`1& reader, CandidateConnectedVertex& instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, CandidateConnectedVertex value);
    public sealed virtual CandidateConnectedVertex ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_CandidateVertex : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<ImmutableArray`1<CandidateConnectedVertex>> _codec0;
    private Type _type1;
    private Codec_GrainId _codec1;
    private static Action`2<CandidateVertex, ImmutableArray`1<CandidateConnectedVertex>> setField1;
    private static Action`2<CandidateVertex, GrainId> setField2;
    public Codec_CandidateVertex(ICodecProvider codecProvider);
    private static Codec_CandidateVertex();
    public void Serialize(Writer`1& writer, CandidateVertex instance);
    public void Deserialize(Reader`1& reader, CandidateVertex instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, CandidateVertex value);
    public sealed virtual CandidateVertex ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_Edge : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_EdgeVertex _codec0;
    private static ValueTypeSetter`2<Edge, EdgeVertex> setField0;
    private static ValueTypeSetter`2<Edge, EdgeVertex> setField1;
    public Codec_Edge(ICodecProvider codecProvider);
    private static Codec_Edge();
    public sealed virtual void Serialize(Writer`1& writer, Edge& instance);
    public sealed virtual void Deserialize(Reader`1& reader, Edge& instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Edge value);
    public sealed virtual Edge ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_EdgeVertex : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_GrainId _codec0;
    private Type _type1;
    private IFieldCodec`1<SiloAddress> _codec1;
    private static ValueTypeSetter`2<EdgeVertex, GrainId> setField0;
    private static ValueTypeSetter`2<EdgeVertex, bool> setField1;
    private static ValueTypeSetter`2<EdgeVertex, SiloAddress> setField2;
    public Codec_EdgeVertex(ICodecProvider codecProvider);
    private static Codec_EdgeVertex();
    public sealed virtual void Serialize(Writer`1& writer, EdgeVertex& instance);
    public sealed virtual void Deserialize(Reader`1& reader, EdgeVertex& instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, EdgeVertex value);
    public sealed virtual EdgeVertex ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_Invokable_IActivationRepartitionerSystemTarget_GrainReference_11731652 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IActivationRepartitionerSystemTarget_GrainReference_11731652 instance);
    public void Deserialize(Reader`1& reader, Invokable_IActivationRepartitionerSystemTarget_GrainReference_11731652 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IActivationRepartitionerSystemTarget_GrainReference_11731652 value);
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_11731652 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_Invokable_IActivationRepartitionerSystemTarget_GrainReference_135356E5 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IActivationRepartitionerSystemTarget_GrainReference_135356E5 instance);
    public void Deserialize(Reader`1& reader, Invokable_IActivationRepartitionerSystemTarget_GrainReference_135356E5 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IActivationRepartitionerSystemTarget_GrainReference_135356E5 value);
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_135356E5 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_Invokable_IActivationRepartitionerSystemTarget_GrainReference_21852A09 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IActivationRepartitionerSystemTarget_GrainReference_21852A09 instance);
    public void Deserialize(Reader`1& reader, Invokable_IActivationRepartitionerSystemTarget_GrainReference_21852A09 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IActivationRepartitionerSystemTarget_GrainReference_21852A09 value);
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_21852A09 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_Invokable_IActivationRepartitionerSystemTarget_GrainReference_9D8EDC44 : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_AcceptExchangeRequest _codec0;
    public Codec_Invokable_IActivationRepartitionerSystemTarget_GrainReference_9D8EDC44(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IActivationRepartitionerSystemTarget_GrainReference_9D8EDC44 instance);
    public void Deserialize(Reader`1& reader, Invokable_IActivationRepartitionerSystemTarget_GrainReference_9D8EDC44 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IActivationRepartitionerSystemTarget_GrainReference_9D8EDC44 value);
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_9D8EDC44 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_Invokable_IActivationRepartitionerSystemTarget_GrainReference_9FB525F3 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IActivationRepartitionerSystemTarget_GrainReference_9FB525F3 instance);
    public void Deserialize(Reader`1& reader, Invokable_IActivationRepartitionerSystemTarget_GrainReference_9FB525F3 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IActivationRepartitionerSystemTarget_GrainReference_9FB525F3 value);
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_9FB525F3 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_Invokable_IActivationRepartitionerSystemTarget_GrainReference_A6EE4757 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IActivationRepartitionerSystemTarget_GrainReference_A6EE4757 instance);
    public void Deserialize(Reader`1& reader, Invokable_IActivationRepartitionerSystemTarget_GrainReference_A6EE4757 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IActivationRepartitionerSystemTarget_GrainReference_A6EE4757 value);
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_A6EE4757 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Codec_Invokable_IActivationRepartitionerSystemTarget_GrainReference_C4497899 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IActivationRepartitionerSystemTarget_GrainReference_C4497899 instance);
    public void Deserialize(Reader`1& reader, Invokable_IActivationRepartitionerSystemTarget_GrainReference_C4497899 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IActivationRepartitionerSystemTarget_GrainReference_C4497899 value);
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_C4497899 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Copier_CandidateVertex : object {
    private static Action`2<CandidateVertex, ImmutableArray`1<CandidateConnectedVertex>> setField1;
    private static Action`2<CandidateVertex, GrainId> setField2;
    private static Copier_CandidateVertex();
    public sealed virtual CandidateVertex DeepCopy(CandidateVertex original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Copier_Invokable_IActivationRepartitionerSystemTarget_GrainReference_11731652 : object {
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_11731652 DeepCopy(Invokable_IActivationRepartitionerSystemTarget_GrainReference_11731652 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Copier_Invokable_IActivationRepartitionerSystemTarget_GrainReference_135356E5 : object {
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_135356E5 DeepCopy(Invokable_IActivationRepartitionerSystemTarget_GrainReference_135356E5 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Copier_Invokable_IActivationRepartitionerSystemTarget_GrainReference_21852A09 : object {
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_21852A09 DeepCopy(Invokable_IActivationRepartitionerSystemTarget_GrainReference_21852A09 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Copier_Invokable_IActivationRepartitionerSystemTarget_GrainReference_9D8EDC44 : object {
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_9D8EDC44 DeepCopy(Invokable_IActivationRepartitionerSystemTarget_GrainReference_9D8EDC44 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Copier_Invokable_IActivationRepartitionerSystemTarget_GrainReference_9FB525F3 : object {
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_9FB525F3 DeepCopy(Invokable_IActivationRepartitionerSystemTarget_GrainReference_9FB525F3 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Copier_Invokable_IActivationRepartitionerSystemTarget_GrainReference_A6EE4757 : object {
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_A6EE4757 DeepCopy(Invokable_IActivationRepartitionerSystemTarget_GrainReference_A6EE4757 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Copier_Invokable_IActivationRepartitionerSystemTarget_GrainReference_C4497899 : object {
    public sealed virtual Invokable_IActivationRepartitionerSystemTarget_GrainReference_C4497899 DeepCopy(Invokable_IActivationRepartitionerSystemTarget_GrainReference_C4497899 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Invokable_IActivationRepartitionerSystemTarget_GrainReference_11731652 : Request {
    private IActivationRepartitionerSystemTarget target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IActivationRepartitionerSystemTarget_GrainReference_11731652();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual ValueTask InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Invokable_IActivationRepartitionerSystemTarget_GrainReference_135356E5 : Request {
    public int arg0;
    private IActivationRepartitionerSystemTarget target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IActivationRepartitionerSystemTarget_GrainReference_135356E5();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual ValueTask InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Invokable_IActivationRepartitionerSystemTarget_GrainReference_21852A09 : Request {
    private IActivationRepartitionerSystemTarget target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IActivationRepartitionerSystemTarget_GrainReference_21852A09();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual ValueTask InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Invokable_IActivationRepartitionerSystemTarget_GrainReference_9D8EDC44 : Request`1<AcceptExchangeResponse> {
    public AcceptExchangeRequest arg0;
    private IActivationRepartitionerSystemTarget target;
    private static MethodInfo MethodBackingField;
    private static TimeSpan _responseTimeoutValue;
    private static Invokable_IActivationRepartitionerSystemTarget_GrainReference_9D8EDC44();
    public virtual Nullable`1<TimeSpan> GetDefaultResponseTimeout();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual ValueTask`1<AcceptExchangeResponse> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Invokable_IActivationRepartitionerSystemTarget_GrainReference_9FB525F3 : Request`1<int> {
    private IActivationRepartitionerSystemTarget target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IActivationRepartitionerSystemTarget_GrainReference_9FB525F3();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual ValueTask`1<int> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Invokable_IActivationRepartitionerSystemTarget_GrainReference_A6EE4757 : Request {
    private IActivationRepartitionerSystemTarget target;
    private static MethodInfo MethodBackingField;
    private static TimeSpan _responseTimeoutValue;
    private static Invokable_IActivationRepartitionerSystemTarget_GrainReference_A6EE4757();
    public virtual Nullable`1<TimeSpan> GetDefaultResponseTimeout();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual ValueTask InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Invokable_IActivationRepartitionerSystemTarget_GrainReference_C4497899 : Request`1<ImmutableArray`1<ValueTuple`2<Edge, ulong>>> {
    private IActivationRepartitionerSystemTarget target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IActivationRepartitionerSystemTarget_GrainReference_C4497899();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual ValueTask`1<ImmutableArray`1<ValueTuple`2<Edge, ulong>>> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Placement.Repartitioning.Proxy_IActivationRepartitionerSystemTarget : GrainReference {
    public Proxy_IActivationRepartitionerSystemTarget(GrainReferenceShared arg0, IdSpan arg1);
    private sealed virtual override ValueTask global::Orleans.Placement.Repartitioning.IActivationRepartitionerSystemTarget.TriggerExchangeRequest();
    private sealed virtual override ValueTask`1<AcceptExchangeResponse> global::Orleans.Placement.Repartitioning.IActivationRepartitionerSystemTarget.AcceptExchangeRequest(AcceptExchangeRequest arg0);
    private sealed virtual override ValueTask global::Orleans.Placement.Repartitioning.IActivationRepartitionerSystemTarget.ResetCounters();
    private sealed virtual override ValueTask`1<int> global::Orleans.Placement.Repartitioning.IActivationRepartitionerSystemTarget.GetActivationCount();
    private sealed virtual override ValueTask global::Orleans.Placement.Repartitioning.IActivationRepartitionerSystemTarget.SetActivationCountOffset(int arg0);
    private sealed virtual override ValueTask`1<ImmutableArray`1<ValueTuple`2<Edge, ulong>>> global::Orleans.Placement.Repartitioning.IActivationRepartitionerSystemTarget.GetGrainCallFrequencies();
    private sealed virtual override ValueTask global::Orleans.Placement.Repartitioning.IActivationRepartitionerSystemTarget.FlushBuffers();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Providers.Activator_ProviderInitializationException : object {
    public sealed virtual ProviderInitializationException Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Providers.Activator_ProviderStateException : object {
    public sealed virtual ProviderStateException Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Providers.Codec_ProviderInitializationException : object {
    private Type _codecFieldType;
    private Codec_OrleansException _baseTypeSerializer;
    public Codec_ProviderInitializationException(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, ProviderInitializationException instance);
    public void Deserialize(Reader`1& reader, ProviderInitializationException instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, ProviderInitializationException value);
    public sealed virtual ProviderInitializationException ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Providers.Codec_ProviderStateException : object {
    private Type _codecFieldType;
    private Codec_OrleansException _baseTypeSerializer;
    public Codec_ProviderStateException(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, ProviderStateException instance);
    public void Deserialize(Reader`1& reader, ProviderStateException instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, ProviderStateException value);
    public sealed virtual ProviderStateException ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Providers.Copier_ProviderInitializationException : ExceptionCopier`2<ProviderInitializationException, OrleansException> {
    public Copier_ProviderInitializationException(ICodecProvider codecProvider);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Providers.Copier_ProviderStateException : ExceptionCopier`2<ProviderStateException, OrleansException> {
    public Copier_ProviderStateException(ICodecProvider codecProvider);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Proxy_IMembershipTableSystemTarget : GrainReference {
    private Copier_MembershipEntry _copier0;
    public Proxy_IMembershipTableSystemTarget(GrainReferenceShared arg0, IdSpan arg1);
    private sealed virtual override Task global::Orleans.IMembershipTable.InitializeMembershipTable(bool arg0);
    private sealed virtual override Task global::Orleans.IMembershipTable.DeleteMembershipTableEntries(string arg0);
    private sealed virtual override Task global::Orleans.IMembershipTable.CleanupDefunctSiloEntries(DateTimeOffset arg0);
    private sealed virtual override Task`1<MembershipTableData> global::Orleans.IMembershipTable.ReadRow(SiloAddress arg0);
    private sealed virtual override Task`1<MembershipTableData> global::Orleans.IMembershipTable.ReadAll();
    private sealed virtual override Task`1<bool> global::Orleans.IMembershipTable.InsertRow(MembershipEntry arg0, TableVersion arg1);
    private sealed virtual override Task`1<bool> global::Orleans.IMembershipTable.UpdateRow(MembershipEntry arg0, string arg1, TableVersion arg2);
    private sealed virtual override Task global::Orleans.IMembershipTable.UpdateIAmAlive(MembershipEntry arg0);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Proxy_ISiloControl : GrainReference {
    private ArrayCopier`1<string> _copier0;
    private IDeepCopier`1<CompatibilityStrategy> _copier1;
    private IDeepCopier`1<VersionSelectorStrategy> _copier2;
    public Proxy_ISiloControl(GrainReferenceShared arg0, IdSpan arg1);
    private sealed virtual override Task global::Orleans.ISiloControl.Ping(string arg0);
    private sealed virtual override Task global::Orleans.ISiloControl.ForceGarbageCollection();
    private sealed virtual override Task global::Orleans.ISiloControl.ForceActivationCollection(TimeSpan arg0);
    private sealed virtual override Task global::Orleans.ISiloControl.ForceRuntimeStatisticsCollection();
    private sealed virtual override Task`1<SiloRuntimeStatistics> global::Orleans.ISiloControl.GetRuntimeStatistics();
    private sealed virtual override Task`1<List`1<Tuple`3<GrainId, string, int>>> global::Orleans.ISiloControl.GetGrainStatistics();
    private sealed virtual override Task`1<List`1<DetailedGrainStatistic>> global::Orleans.ISiloControl.GetDetailedGrainStatistics(String[] arg0);
    private sealed virtual override Task`1<SimpleGrainStatistic[]> global::Orleans.ISiloControl.GetSimpleGrainStatistics();
    private sealed virtual override Task`1<DetailedGrainReport> global::Orleans.ISiloControl.GetDetailedGrainReport(GrainId arg0);
    private sealed virtual override Task`1<int> global::Orleans.ISiloControl.GetActivationCount();
    private sealed virtual override Task`1<object> global::Orleans.ISiloControl.SendControlCommandToProvider(string arg0, int arg1, object arg2);
    private sealed virtual override Task`1<List`1<GrainId>> global::Orleans.ISiloControl.GetActiveGrains(GrainType arg0);
    private sealed virtual override Task global::Orleans.IVersionManager.SetCompatibilityStrategy(CompatibilityStrategy arg0);
    private sealed virtual override Task global::Orleans.IVersionManager.SetSelectorStrategy(VersionSelectorStrategy arg0);
    private sealed virtual override Task global::Orleans.IVersionManager.SetCompatibilityStrategy(GrainInterfaceType arg0, CompatibilityStrategy arg1);
    private sealed virtual override Task global::Orleans.IVersionManager.SetSelectorStrategy(GrainInterfaceType arg0, VersionSelectorStrategy arg1);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Activator_DetailedGrainReport : object {
    public sealed virtual DetailedGrainReport Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Activator_DetailedGrainStatistic : object {
    public sealed virtual DetailedGrainStatistic Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Activator_RejectionResponse : object {
    public sealed virtual RejectionResponse Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Activator_SimpleGrainStatistic : object {
    public sealed virtual SimpleGrainStatistic Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_ClusterManifestUpdate : object {
    private Type _codecFieldType;
    private IActivator`1<ClusterManifestUpdate> _activator;
    private Type _type0;
    private IFieldCodec`1<ImmutableDictionary`2<SiloAddress, GrainManifest>> _codec0;
    private Type _type1;
    private Codec_MajorMinorVersion _codec1;
    private static Action`2<ClusterManifestUpdate, bool> setField0;
    private static Action`2<ClusterManifestUpdate, ImmutableDictionary`2<SiloAddress, GrainManifest>> setField1;
    private static Action`2<ClusterManifestUpdate, MajorMinorVersion> setField2;
    public Codec_ClusterManifestUpdate(IActivator`1<ClusterManifestUpdate> _activator, ICodecProvider codecProvider);
    private static Codec_ClusterManifestUpdate();
    public sealed virtual void Serialize(Writer`1& writer, ClusterManifestUpdate instance);
    public sealed virtual void Deserialize(Reader`1& reader, ClusterManifestUpdate instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, ClusterManifestUpdate value);
    public sealed virtual ClusterManifestUpdate ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_CorrelationId : object {
    private Type _codecFieldType;
    private static ValueTypeGetter`2<CorrelationId, long> getField0;
    private static ValueTypeSetter`2<CorrelationId, long> setField0;
    private static Codec_CorrelationId();
    public sealed virtual void Serialize(Writer`1& writer, CorrelationId& instance);
    public sealed virtual void Deserialize(Reader`1& reader, CorrelationId& instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, CorrelationId value);
    public sealed virtual CorrelationId ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_DetailedGrainReport : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_GrainId _codec0;
    private Type _type1;
    private Codec_GrainAddress _codec1;
    private Type _type2;
    private IFieldCodec`1<SiloAddress> _codec2;
    private static Action`2<DetailedGrainReport, GrainId> setField0;
    private static Action`2<DetailedGrainReport, string> setField1;
    private static Action`2<DetailedGrainReport, string> setField2;
    private static Action`2<DetailedGrainReport, GrainAddress> setField3;
    private static Action`2<DetailedGrainReport, GrainAddress> setField4;
    private static Action`2<DetailedGrainReport, SiloAddress> setField5;
    private static Action`2<DetailedGrainReport, SiloAddress> setField6;
    private static Action`2<DetailedGrainReport, string> setField7;
    public Codec_DetailedGrainReport(ICodecProvider codecProvider);
    private static Codec_DetailedGrainReport();
    public void Serialize(Writer`1& writer, DetailedGrainReport instance);
    public void Deserialize(Reader`1& reader, DetailedGrainReport instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, DetailedGrainReport value);
    public sealed virtual DetailedGrainReport ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_DetailedGrainStatistic : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_GrainId _codec0;
    private Type _type1;
    private IFieldCodec`1<SiloAddress> _codec1;
    private static Action`2<DetailedGrainStatistic, GrainId> setField0;
    private static Action`2<DetailedGrainStatistic, string> setField1;
    private static Action`2<DetailedGrainStatistic, SiloAddress> setField2;
    public Codec_DetailedGrainStatistic(ICodecProvider codecProvider);
    private static Codec_DetailedGrainStatistic();
    public void Serialize(Writer`1& writer, DetailedGrainStatistic instance);
    public void Deserialize(Reader`1& reader, DetailedGrainStatistic instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, DetailedGrainStatistic value);
    public sealed virtual DetailedGrainStatistic ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_GeneralMultiRange : object {
    private Type _codecFieldType;
    private IActivator`1<GeneralMultiRange> _activator;
    private Type _type0;
    private ListCodec`1<SingleRange> _codec0;
    private static Func`2<GeneralMultiRange, List`1<SingleRange>> getField0;
    private static Action`2<GeneralMultiRange, List`1<SingleRange>> setField0;
    private static Func`2<GeneralMultiRange, long> getField1;
    private static Action`2<GeneralMultiRange, long> setField1;
    public Codec_GeneralMultiRange(IActivator`1<GeneralMultiRange> _activator, ICodecProvider codecProvider);
    private static Codec_GeneralMultiRange();
    public void Serialize(Writer`1& writer, GeneralMultiRange instance);
    public void Deserialize(Reader`1& reader, GeneralMultiRange instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, GeneralMultiRange value);
    public sealed virtual GeneralMultiRange ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_GrainCallFrequency : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_GrainId _codec0;
    private Type _type1;
    private IFieldCodec`1<SiloAddress> _codec1;
    public Codec_GrainCallFrequency(ICodecProvider codecProvider);
    public sealed virtual void Serialize(Writer`1& writer, GrainCallFrequency& instance);
    public sealed virtual void Deserialize(Reader`1& reader, GrainCallFrequency& instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, GrainCallFrequency value);
    public sealed virtual GrainCallFrequency ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_GrainCancellationTokenSurrogate : object {
    private Type _codecFieldType;
    public sealed virtual void Serialize(Writer`1& writer, GrainCancellationTokenSurrogate& instance);
    public sealed virtual void Deserialize(Reader`1& reader, GrainCancellationTokenSurrogate& instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, GrainCancellationTokenSurrogate value);
    public sealed virtual GrainCancellationTokenSurrogate ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_IndirectProbeResponse : object {
    private Type _codecFieldType;
    private static ValueTypeSetter`2<IndirectProbeResponse, string> setField0;
    private static ValueTypeSetter`2<IndirectProbeResponse, int> setField1;
    private static ValueTypeSetter`2<IndirectProbeResponse, TimeSpan> setField2;
    private static ValueTypeSetter`2<IndirectProbeResponse, bool> setField3;
    private static Codec_IndirectProbeResponse();
    public sealed virtual void Serialize(Writer`1& writer, IndirectProbeResponse& instance);
    public sealed virtual void Deserialize(Reader`1& reader, IndirectProbeResponse& instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, IndirectProbeResponse value);
    public sealed virtual IndirectProbeResponse ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_InvalidSchedulingContextException : object {
    private Type _codecFieldType;
    private Codec_OrleansException _baseTypeSerializer;
    private IActivator`1<InvalidSchedulingContextException> _activator;
    public Codec_InvalidSchedulingContextException(ICodecProvider codecProvider, IActivator`1<InvalidSchedulingContextException> _activator);
    public void Serialize(Writer`1& writer, InvalidSchedulingContextException instance);
    public void Deserialize(Reader`1& reader, InvalidSchedulingContextException instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, InvalidSchedulingContextException value);
    public sealed virtual InvalidSchedulingContextException ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_ICatalog_GrainReference_C4A56D7C : object {
    private Type _codecFieldType;
    private Type _type0;
    private ListCodec`1<GrainAddress> _codec0;
    private Type _type1;
    private Codec_DeactivationReasonCode _codec1;
    public Codec_Invokable_ICatalog_GrainReference_C4A56D7C(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_ICatalog_GrainReference_C4A56D7C instance);
    public void Deserialize(Reader`1& reader, Invokable_ICatalog_GrainReference_C4A56D7C instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_ICatalog_GrainReference_C4A56D7C value);
    public sealed virtual Invokable_ICatalog_GrainReference_C4A56D7C ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IClusterManifestSystemTarget_GrainReference_40D39F85 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IClusterManifestSystemTarget_GrainReference_40D39F85 instance);
    public void Deserialize(Reader`1& reader, Invokable_IClusterManifestSystemTarget_GrainReference_40D39F85 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IClusterManifestSystemTarget_GrainReference_40D39F85 value);
    public sealed virtual Invokable_IClusterManifestSystemTarget_GrainReference_40D39F85 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IClusterManifestSystemTarget_GrainReference_4EFCA109 : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_MajorMinorVersion _codec0;
    public Codec_Invokable_IClusterManifestSystemTarget_GrainReference_4EFCA109(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IClusterManifestSystemTarget_GrainReference_4EFCA109 instance);
    public void Deserialize(Reader`1& reader, Invokable_IClusterManifestSystemTarget_GrainReference_4EFCA109 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IClusterManifestSystemTarget_GrainReference_4EFCA109 value);
    public sealed virtual Invokable_IClusterManifestSystemTarget_GrainReference_4EFCA109 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IDeploymentLoadPublisher_GrainReference_C5255F0C : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<SiloAddress> _codec0;
    private Type _type1;
    private Codec_SiloRuntimeStatistics _codec1;
    public Codec_Invokable_IDeploymentLoadPublisher_GrainReference_C5255F0C(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IDeploymentLoadPublisher_GrainReference_C5255F0C instance);
    public void Deserialize(Reader`1& reader, Invokable_IDeploymentLoadPublisher_GrainReference_C5255F0C instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IDeploymentLoadPublisher_GrainReference_C5255F0C value);
    public sealed virtual Invokable_IDeploymentLoadPublisher_GrainReference_C5255F0C ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_0A1C0D82 : object {
    private Type _codecFieldType;
    private Type _type0;
    private ArrayCodec`1<string> _codec0;
    private Type _type1;
    private ArrayCodec`1<SiloAddress> _codec1;
    public Codec_Invokable_IManagementGrain_GrainReference_0A1C0D82(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_0A1C0D82 instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_0A1C0D82 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_0A1C0D82 value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_0A1C0D82 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_0F06E027 : object {
    private Type _codecFieldType;
    private Type _type0;
    private ArrayCodec`1<SiloAddress> _codec0;
    public Codec_Invokable_IManagementGrain_GrainReference_0F06E027(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_0F06E027 instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_0F06E027 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_0F06E027 value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_0F06E027 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_2D761B36 : object {
    private Type _codecFieldType;
    private Type _type0;
    private ArrayCodec`1<SiloAddress> _codec0;
    public Codec_Invokable_IManagementGrain_GrainReference_2D761B36(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_2D761B36 instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_2D761B36 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_2D761B36 value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_2D761B36 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_317D82B6 : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<IAddressable> _codec0;
    public Codec_Invokable_IManagementGrain_GrainReference_317D82B6(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_317D82B6 instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_317D82B6 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_317D82B6 value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_317D82B6 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_329F9A1B : object {
    private Type _codecFieldType;
    private Type _type0;
    private ArrayCodec`1<SiloAddress> _codec0;
    public Codec_Invokable_IManagementGrain_GrainReference_329F9A1B(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_329F9A1B instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_329F9A1B instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_329F9A1B value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_329F9A1B ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_3CFF788C : object {
    private Type _codecFieldType;
    private Type _type0;
    private ArrayCodec`1<SiloAddress> _codec0;
    public Codec_Invokable_IManagementGrain_GrainReference_3CFF788C(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_3CFF788C instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_3CFF788C instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_3CFF788C value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_3CFF788C ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_3DB7923B : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_GrainType _codec0;
    public Codec_Invokable_IManagementGrain_GrainReference_3DB7923B(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_3DB7923B instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_3DB7923B instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_3DB7923B value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_3DB7923B ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_4C0864C2 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_4C0864C2 instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_4C0864C2 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_4C0864C2 value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_4C0864C2 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_54E6D1D1 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_54E6D1D1 instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_54E6D1D1 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_54E6D1D1 value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_54E6D1D1 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_54FE0FEC : object {
    private Type _codecFieldType;
    private Type _type0;
    private ArrayCodec`1<SiloAddress> _codec0;
    public Codec_Invokable_IManagementGrain_GrainReference_54FE0FEC(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_54FE0FEC instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_54FE0FEC instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_54FE0FEC value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_54FE0FEC ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_5922EB76 : object {
    private Type _codecFieldType;
    private Type _type0;
    private ArrayCodec`1<SiloAddress> _codec0;
    public Codec_Invokable_IManagementGrain_GrainReference_5922EB76(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_5922EB76 instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_5922EB76 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_5922EB76 value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_5922EB76 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_ACCE9D6A : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_ACCE9D6A instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_ACCE9D6A instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_ACCE9D6A value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_ACCE9D6A ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_AEDE93F6 : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<GrainReference> _codec0;
    public Codec_Invokable_IManagementGrain_GrainReference_AEDE93F6(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_AEDE93F6 instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_AEDE93F6 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_AEDE93F6 value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_AEDE93F6 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_B761B345 : object {
    private Type _codecFieldType;
    private Type _type0;
    private ArrayCodec`1<SiloAddress> _codec0;
    public Codec_Invokable_IManagementGrain_GrainReference_B761B345(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_B761B345 instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_B761B345 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_B761B345 value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_B761B345 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_CC6CCBC3 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_CC6CCBC3 instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_CC6CCBC3 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_CC6CCBC3 value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_CC6CCBC3 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_D7365B43 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_D7365B43 instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_D7365B43 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_D7365B43 value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_D7365B43 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IManagementGrain_GrainReference_F67965CC_1`1 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IManagementGrain_GrainReference_F67965CC_1`1<T> instance);
    public void Deserialize(Reader`1& reader, Invokable_IManagementGrain_GrainReference_F67965CC_1`1<T> instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IManagementGrain_GrainReference_F67965CC_1`1<T> value);
    public sealed virtual Invokable_IManagementGrain_GrainReference_F67965CC_1`1<T> ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IMembershipService_GrainReference_0F85FAAF : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<SiloAddress> _codec0;
    public Codec_Invokable_IMembershipService_GrainReference_0F85FAAF(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IMembershipService_GrainReference_0F85FAAF instance);
    public void Deserialize(Reader`1& reader, Invokable_IMembershipService_GrainReference_0F85FAAF instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMembershipService_GrainReference_0F85FAAF value);
    public sealed virtual Invokable_IMembershipService_GrainReference_0F85FAAF ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IMembershipService_GrainReference_22A02D46 : object {
    private Type _codecFieldType;
    private Type _type0;
    private Codec_MembershipTableSnapshot _codec0;
    public Codec_Invokable_IMembershipService_GrainReference_22A02D46(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IMembershipService_GrainReference_22A02D46 instance);
    public void Deserialize(Reader`1& reader, Invokable_IMembershipService_GrainReference_22A02D46 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMembershipService_GrainReference_22A02D46 value);
    public sealed virtual Invokable_IMembershipService_GrainReference_22A02D46 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_Invokable_IMembershipService_GrainReference_39AB7071 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IMembershipService_GrainReference_39AB7071 instance);
    public void Deserialize(Reader`1& reader, Invokable_IMembershipService_GrainReference_39AB7071 instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMembershipService_GrainReference_39AB7071 value);
    public sealed virtual Invokable_IMembershipService_GrainReference_39AB7071 ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_MembershipTableSnapshot : object {
    private Type _codecFieldType;
    private IActivator`1<MembershipTableSnapshot> _activator;
    private Type _type0;
    private IFieldCodec`1<ImmutableDictionary`2<SiloAddress, MembershipEntry>> _codec0;
    private Type _type1;
    private Codec_MembershipVersion _codec1;
    private static Action`2<MembershipTableSnapshot, ImmutableDictionary`2<SiloAddress, MembershipEntry>> setField0;
    private static Action`2<MembershipTableSnapshot, MembershipVersion> setField1;
    public Codec_MembershipTableSnapshot(IActivator`1<MembershipTableSnapshot> _activator, ICodecProvider codecProvider);
    private static Codec_MembershipTableSnapshot();
    public void Serialize(Writer`1& writer, MembershipTableSnapshot instance);
    public void Deserialize(Reader`1& reader, MembershipTableSnapshot instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, MembershipTableSnapshot value);
    public sealed virtual MembershipTableSnapshot ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_MigrationContext : object {
    private Type _codecFieldType;
    private IActivator`1<MigrationContext> _activator;
    private Type _type0;
    private IFieldCodec`1<PooledBuffer> _codec0;
    private Type _type1;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private DictionaryCodec`2<string, ValueTuple`2<int, int>> _codec1;
    private static Func`2<MigrationContext, PooledBuffer> getField0;
    private static Action`2<MigrationContext, PooledBuffer> setField0;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`2<MigrationContext, Dictionary`2<string, ValueTuple`2<int, int>>> getField1;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<MigrationContext, Dictionary`2<string, ValueTuple`2<int, int>>> setField1;
    private SerializationHooks _hook0;
    public Codec_MigrationContext(IActivator`1<MigrationContext> _activator, ICodecProvider codecProvider, SerializationHooks _hook0);
    private static Codec_MigrationContext();
    public void Serialize(Writer`1& writer, MigrationContext instance);
    public void Deserialize(Reader`1& reader, MigrationContext instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, MigrationContext value);
    public sealed virtual MigrationContext ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_RejectionResponse : object {
    private Type _codecFieldType;
    private Type _type0;
    private ExceptionCodec _codec0;
    private Type _type1;
    private Codec_RejectionTypes _codec1;
    private static Action`2<RejectionResponse, Exception> setField0;
    private static Action`2<RejectionResponse, string> setField1;
    private static Action`2<RejectionResponse, RejectionTypes> setField2;
    public Codec_RejectionResponse(ICodecProvider codecProvider);
    private static Codec_RejectionResponse();
    public void Serialize(Writer`1& writer, RejectionResponse instance);
    public void Deserialize(Reader`1& reader, RejectionResponse instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, RejectionResponse value);
    public sealed virtual RejectionResponse ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_SiloRuntimeStatistics : object {
    private Type _codecFieldType;
    private IActivator`1<SiloRuntimeStatistics> _activator;
    private Type _type0;
    private NullableCodec`1<float> _codec0;
    private Type _type1;
    private Codec_EnvironmentStatistics _codec1;
    private Type _type2;
    private NullableCodec`1<long> _codec2;
    private static Action`2<SiloRuntimeStatistics, int> setField0;
    private static Func`2<SiloRuntimeStatistics, Nullable`1<float>> getField1;
    private static Action`2<SiloRuntimeStatistics, Nullable`1<float>> setField1;
    private static Action`2<SiloRuntimeStatistics, long> setField2;
    private static Func`2<SiloRuntimeStatistics, Nullable`1<float>> getField3;
    private static Action`2<SiloRuntimeStatistics, Nullable`1<float>> setField3;
    private static Action`2<SiloRuntimeStatistics, DateTime> setField4;
    private static Action`2<SiloRuntimeStatistics, EnvironmentStatistics> setField5;
    private static Action`2<SiloRuntimeStatistics, bool> setField6;
    private static Func`2<SiloRuntimeStatistics, Nullable`1<long>> getField7;
    private static Action`2<SiloRuntimeStatistics, Nullable`1<long>> setField7;
    private static Action`2<SiloRuntimeStatistics, long> setField8;
    private static Action`2<SiloRuntimeStatistics, int> setField9;
    private static Action`2<SiloRuntimeStatistics, long> setField10;
    private static Func`2<SiloRuntimeStatistics, Nullable`1<long>> getField11;
    private static Action`2<SiloRuntimeStatistics, Nullable`1<long>> setField11;
    public Codec_SiloRuntimeStatistics(IActivator`1<SiloRuntimeStatistics> _activator, ICodecProvider codecProvider);
    private static Codec_SiloRuntimeStatistics();
    public void Serialize(Writer`1& writer, SiloRuntimeStatistics instance);
    public void Deserialize(Reader`1& reader, SiloRuntimeStatistics instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, SiloRuntimeStatistics value);
    public sealed virtual SiloRuntimeStatistics ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_SiloStatus : object {
    private Type _codecFieldType;
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, SiloStatus value);
    public sealed virtual SiloStatus ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Codec_SimpleGrainStatistic : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<SiloAddress> _codec0;
    private static Action`2<SimpleGrainStatistic, int> setField0;
    private static Action`2<SimpleGrainStatistic, string> setField1;
    private static Action`2<SimpleGrainStatistic, SiloAddress> setField2;
    public Codec_SimpleGrainStatistic(ICodecProvider codecProvider);
    private static Codec_SimpleGrainStatistic();
    public void Serialize(Writer`1& writer, SimpleGrainStatistic instance);
    public void Deserialize(Reader`1& reader, SimpleGrainStatistic instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, SimpleGrainStatistic value);
    public sealed virtual SimpleGrainStatistic ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_SingleRange : object {
    private Type _codecFieldType;
    private IActivator`1<SingleRange> _activator;
    private static Func`2<SingleRange, UInt32> getField0;
    private static Action`2<SingleRange, UInt32> setField0;
    private static Func`2<SingleRange, UInt32> getField1;
    private static Action`2<SingleRange, UInt32> setField1;
    public Codec_SingleRange(IActivator`1<SingleRange> _activator);
    private static Codec_SingleRange();
    public void Serialize(Writer`1& writer, SingleRange instance);
    public void Deserialize(Reader`1& reader, SingleRange instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, SingleRange value);
    public sealed virtual SingleRange ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Codec_StatusResponse : object {
    private Type _codecFieldType;
    private IActivator`1<StatusResponse> _activator;
    private Type _type0;
    private ListCodec`1<string> _codec0;
    private static Func`2<StatusResponse, UInt32> getField0;
    private static Action`2<StatusResponse, UInt32> setField0;
    private static Action`2<StatusResponse, List`1<string>> setField1;
    public Codec_StatusResponse(IActivator`1<StatusResponse> _activator, ICodecProvider codecProvider);
    private static Codec_StatusResponse();
    public void Serialize(Writer`1& writer, StatusResponse instance);
    public void Deserialize(Reader`1& reader, StatusResponse instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, StatusResponse value);
    public sealed virtual StatusResponse ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_ClusterManifestUpdate : object {
    private static Action`2<ClusterManifestUpdate, bool> setField0;
    private static Action`2<ClusterManifestUpdate, ImmutableDictionary`2<SiloAddress, GrainManifest>> setField1;
    private static Action`2<ClusterManifestUpdate, MajorMinorVersion> setField2;
    private static Copier_ClusterManifestUpdate();
    public sealed virtual ClusterManifestUpdate DeepCopy(ClusterManifestUpdate original, CopyContext context);
    public sealed virtual void DeepCopy(ClusterManifestUpdate input, ClusterManifestUpdate output, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Copier_InvalidSchedulingContextException : ExceptionCopier`2<InvalidSchedulingContextException, OrleansException> {
    public Copier_InvalidSchedulingContextException(ICodecProvider codecProvider);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_ICatalog_GrainReference_C4A56D7C : object {
    private ListCopier`1<GrainAddress> _copier0;
    public Copier_Invokable_ICatalog_GrainReference_C4A56D7C(ICodecProvider codecProvider);
    public sealed virtual Invokable_ICatalog_GrainReference_C4A56D7C DeepCopy(Invokable_ICatalog_GrainReference_C4A56D7C original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IClusterManifestSystemTarget_GrainReference_40D39F85 : object {
    public sealed virtual Invokable_IClusterManifestSystemTarget_GrainReference_40D39F85 DeepCopy(Invokable_IClusterManifestSystemTarget_GrainReference_40D39F85 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IClusterManifestSystemTarget_GrainReference_4EFCA109 : object {
    public sealed virtual Invokable_IClusterManifestSystemTarget_GrainReference_4EFCA109 DeepCopy(Invokable_IClusterManifestSystemTarget_GrainReference_4EFCA109 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IDeploymentLoadPublisher_GrainReference_C5255F0C : object {
    public sealed virtual Invokable_IDeploymentLoadPublisher_GrainReference_C5255F0C DeepCopy(Invokable_IDeploymentLoadPublisher_GrainReference_C5255F0C original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_0A1C0D82 : object {
    private ArrayCopier`1<string> _copier0;
    private ArrayCopier`1<SiloAddress> _copier1;
    public Copier_Invokable_IManagementGrain_GrainReference_0A1C0D82(ICodecProvider codecProvider);
    public sealed virtual Invokable_IManagementGrain_GrainReference_0A1C0D82 DeepCopy(Invokable_IManagementGrain_GrainReference_0A1C0D82 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_0F06E027 : object {
    private ArrayCopier`1<SiloAddress> _copier0;
    public Copier_Invokable_IManagementGrain_GrainReference_0F06E027(ICodecProvider codecProvider);
    public sealed virtual Invokable_IManagementGrain_GrainReference_0F06E027 DeepCopy(Invokable_IManagementGrain_GrainReference_0F06E027 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_2D761B36 : object {
    private ArrayCopier`1<SiloAddress> _copier0;
    public Copier_Invokable_IManagementGrain_GrainReference_2D761B36(ICodecProvider codecProvider);
    public sealed virtual Invokable_IManagementGrain_GrainReference_2D761B36 DeepCopy(Invokable_IManagementGrain_GrainReference_2D761B36 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_317D82B6 : object {
    private IDeepCopier`1<IAddressable> _copier0;
    public Copier_Invokable_IManagementGrain_GrainReference_317D82B6(ICodecProvider codecProvider);
    public sealed virtual Invokable_IManagementGrain_GrainReference_317D82B6 DeepCopy(Invokable_IManagementGrain_GrainReference_317D82B6 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_329F9A1B : object {
    private ArrayCopier`1<SiloAddress> _copier0;
    public Copier_Invokable_IManagementGrain_GrainReference_329F9A1B(ICodecProvider codecProvider);
    public sealed virtual Invokable_IManagementGrain_GrainReference_329F9A1B DeepCopy(Invokable_IManagementGrain_GrainReference_329F9A1B original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_3CFF788C : object {
    private ArrayCopier`1<SiloAddress> _copier0;
    public Copier_Invokable_IManagementGrain_GrainReference_3CFF788C(ICodecProvider codecProvider);
    public sealed virtual Invokable_IManagementGrain_GrainReference_3CFF788C DeepCopy(Invokable_IManagementGrain_GrainReference_3CFF788C original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_3DB7923B : object {
    public sealed virtual Invokable_IManagementGrain_GrainReference_3DB7923B DeepCopy(Invokable_IManagementGrain_GrainReference_3DB7923B original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_4C0864C2 : object {
    public sealed virtual Invokable_IManagementGrain_GrainReference_4C0864C2 DeepCopy(Invokable_IManagementGrain_GrainReference_4C0864C2 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_54E6D1D1 : object {
    public sealed virtual Invokable_IManagementGrain_GrainReference_54E6D1D1 DeepCopy(Invokable_IManagementGrain_GrainReference_54E6D1D1 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_54FE0FEC : object {
    private ArrayCopier`1<SiloAddress> _copier0;
    public Copier_Invokable_IManagementGrain_GrainReference_54FE0FEC(ICodecProvider codecProvider);
    public sealed virtual Invokable_IManagementGrain_GrainReference_54FE0FEC DeepCopy(Invokable_IManagementGrain_GrainReference_54FE0FEC original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_5922EB76 : object {
    private ArrayCopier`1<SiloAddress> _copier0;
    public Copier_Invokable_IManagementGrain_GrainReference_5922EB76(ICodecProvider codecProvider);
    public sealed virtual Invokable_IManagementGrain_GrainReference_5922EB76 DeepCopy(Invokable_IManagementGrain_GrainReference_5922EB76 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_ACCE9D6A : object {
    public sealed virtual Invokable_IManagementGrain_GrainReference_ACCE9D6A DeepCopy(Invokable_IManagementGrain_GrainReference_ACCE9D6A original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_AEDE93F6 : object {
    private IDeepCopier`1<GrainReference> _copier0;
    public Copier_Invokable_IManagementGrain_GrainReference_AEDE93F6(ICodecProvider codecProvider);
    public sealed virtual Invokable_IManagementGrain_GrainReference_AEDE93F6 DeepCopy(Invokable_IManagementGrain_GrainReference_AEDE93F6 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_B761B345 : object {
    private ArrayCopier`1<SiloAddress> _copier0;
    public Copier_Invokable_IManagementGrain_GrainReference_B761B345(ICodecProvider codecProvider);
    public sealed virtual Invokable_IManagementGrain_GrainReference_B761B345 DeepCopy(Invokable_IManagementGrain_GrainReference_B761B345 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_CC6CCBC3 : object {
    public sealed virtual Invokable_IManagementGrain_GrainReference_CC6CCBC3 DeepCopy(Invokable_IManagementGrain_GrainReference_CC6CCBC3 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_D7365B43 : object {
    public sealed virtual Invokable_IManagementGrain_GrainReference_D7365B43 DeepCopy(Invokable_IManagementGrain_GrainReference_D7365B43 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IManagementGrain_GrainReference_F67965CC_1`1 : object {
    public sealed virtual Invokable_IManagementGrain_GrainReference_F67965CC_1`1<T> DeepCopy(Invokable_IManagementGrain_GrainReference_F67965CC_1`1<T> original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IMembershipService_GrainReference_0F85FAAF : object {
    public sealed virtual Invokable_IMembershipService_GrainReference_0F85FAAF DeepCopy(Invokable_IMembershipService_GrainReference_0F85FAAF original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IMembershipService_GrainReference_22A02D46 : object {
    public sealed virtual Invokable_IMembershipService_GrainReference_22A02D46 DeepCopy(Invokable_IMembershipService_GrainReference_22A02D46 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Copier_Invokable_IMembershipService_GrainReference_39AB7071 : object {
    public sealed virtual Invokable_IMembershipService_GrainReference_39AB7071 DeepCopy(Invokable_IMembershipService_GrainReference_39AB7071 original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Runtime.Invokable_ICatalog_GrainReference_C4A56D7C : TaskRequest {
    public List`1<GrainAddress> arg0;
    public DeactivationReasonCode arg1;
    public string arg2;
    private ICatalog target;
    private static MethodInfo MethodBackingField;
    private static Invokable_ICatalog_GrainReference_C4A56D7C();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Runtime.Invokable_IClusterManifestSystemTarget_GrainReference_40D39F85 : Request`1<ClusterManifest> {
    private IClusterManifestSystemTarget target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IClusterManifestSystemTarget_GrainReference_40D39F85();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual ValueTask`1<ClusterManifest> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Runtime.Invokable_IClusterManifestSystemTarget_GrainReference_4EFCA109 : Request`1<ClusterManifestUpdate> {
    public MajorMinorVersion arg0;
    private IClusterManifestSystemTarget target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IClusterManifestSystemTarget_GrainReference_4EFCA109();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual ValueTask`1<ClusterManifestUpdate> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Runtime.Invokable_IDeploymentLoadPublisher_GrainReference_C5255F0C : TaskRequest {
    public SiloAddress arg0;
    public SiloRuntimeStatistics arg1;
    private IDeploymentLoadPublisher target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IDeploymentLoadPublisher_GrainReference_C5255F0C();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_0A1C0D82 : TaskRequest`1<DetailedGrainStatistic[]> {
    public String[] arg0;
    public SiloAddress[] arg1;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_0A1C0D82();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<DetailedGrainStatistic[]> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_0F06E027 : TaskRequest`1<List`1<GrainCallFrequency>> {
    public SiloAddress[] arg0;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_0F06E027();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<List`1<GrainCallFrequency>> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_2D761B36 : TaskRequest`1<SiloRuntimeStatistics[]> {
    public SiloAddress[] arg0;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_2D761B36();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<SiloRuntimeStatistics[]> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_317D82B6 : Request`1<SiloAddress> {
    public IAddressable arg0;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_317D82B6();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual ValueTask`1<SiloAddress> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_329F9A1B : TaskRequest {
    public SiloAddress[] arg0;
    public TimeSpan arg1;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_329F9A1B();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_3CFF788C : TaskRequest`1<SimpleGrainStatistic[]> {
    public SiloAddress[] arg0;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_3CFF788C();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<SimpleGrainStatistic[]> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_3DB7923B : Request`1<List`1<GrainId>> {
    public GrainType arg0;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_3DB7923B();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual ValueTask`1<List`1<GrainId>> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_4C0864C2 : TaskRequest`1<Dictionary`2<SiloAddress, SiloStatus>> {
    public bool arg0;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_4C0864C2();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<Dictionary`2<SiloAddress, SiloStatus>> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_54E6D1D1 : TaskRequest {
    public TimeSpan arg0;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_54E6D1D1();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_54FE0FEC : Request {
    public SiloAddress[] arg0;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_54FE0FEC();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual ValueTask InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_5922EB76 : TaskRequest {
    public SiloAddress[] arg0;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_5922EB76();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_ACCE9D6A : TaskRequest`1<SimpleGrainStatistic[]> {
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_ACCE9D6A();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual Task`1<SimpleGrainStatistic[]> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_AEDE93F6 : TaskRequest`1<int> {
    public GrainReference arg0;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_AEDE93F6();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<int> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_B761B345 : TaskRequest {
    public SiloAddress[] arg0;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_B761B345();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_CC6CCBC3 : TaskRequest`1<MembershipEntry[]> {
    public bool arg0;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_CC6CCBC3();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<MembershipEntry[]> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_D7365B43 : TaskRequest`1<int> {
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_D7365B43();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    protected virtual Task`1<int> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Runtime.Invokable_IManagementGrain_GrainReference_F67965CC_1`1 : TaskRequest`1<Object[]> {
    public string arg0;
    public int arg1;
    public object arg2;
    private IManagementGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IManagementGrain_GrainReference_F67965CC_1`1();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<Object[]> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Runtime.Invokable_IMembershipService_GrainReference_0F85FAAF : TaskRequest`1<IndirectProbeResponse> {
    public SiloAddress arg0;
    public TimeSpan arg1;
    public int arg2;
    private IMembershipService target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMembershipService_GrainReference_0F85FAAF();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<IndirectProbeResponse> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Runtime.Invokable_IMembershipService_GrainReference_22A02D46 : TaskRequest {
    public MembershipTableSnapshot arg0;
    private IMembershipService target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMembershipService_GrainReference_22A02D46();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OrleansCodeGen.Orleans.Runtime.Invokable_IMembershipService_GrainReference_39AB7071 : TaskRequest {
    public int arg0;
    private IMembershipService target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMembershipService_GrainReference_39AB7071();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Message.Codec_Directions : object {
    private Type _codecFieldType;
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Directions value);
    public sealed virtual Directions ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Message.Codec_RejectionTypes : object {
    private Type _codecFieldType;
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, RejectionTypes value);
    public sealed virtual RejectionTypes ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Message.Codec_ResponseTypes : object {
    private Type _codecFieldType;
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, ResponseTypes value);
    public sealed virtual ResponseTypes ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Messaging.Activator_ConnectionPreamble : object {
    public sealed virtual ConnectionPreamble Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Messaging.Activator_InvalidMessageFrameException : object {
    public sealed virtual InvalidMessageFrameException Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Messaging.Codec_ConnectionPreamble : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<NetworkProtocolVersion> _codec0;
    private Type _type1;
    private Codec_GrainId _codec1;
    private Type _type2;
    private IFieldCodec`1<SiloAddress> _codec2;
    private static Action`2<ConnectionPreamble, string> setField0;
    private static Action`2<ConnectionPreamble, NetworkProtocolVersion> setField1;
    private static Action`2<ConnectionPreamble, GrainId> setField2;
    private static Action`2<ConnectionPreamble, SiloAddress> setField3;
    public Codec_ConnectionPreamble(ICodecProvider codecProvider);
    private static Codec_ConnectionPreamble();
    public void Serialize(Writer`1& writer, ConnectionPreamble instance);
    public void Deserialize(Reader`1& reader, ConnectionPreamble instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, ConnectionPreamble value);
    public sealed virtual ConnectionPreamble ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Messaging.Codec_InvalidMessageFrameException : object {
    private Type _codecFieldType;
    private Codec_OrleansException _baseTypeSerializer;
    public Codec_InvalidMessageFrameException(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, InvalidMessageFrameException instance);
    public void Deserialize(Reader`1& reader, InvalidMessageFrameException instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, InvalidMessageFrameException value);
    public sealed virtual InvalidMessageFrameException ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Runtime.Messaging.Copier_InvalidMessageFrameException : ExceptionCopier`2<InvalidMessageFrameException, OrleansException> {
    public Copier_InvalidMessageFrameException(ICodecProvider codecProvider);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Proxy_ICatalog : GrainReference {
    private ListCopier`1<GrainAddress> _copier0;
    public Proxy_ICatalog(GrainReferenceShared arg0, IdSpan arg1);
    private sealed virtual override Task global::Orleans.Runtime.ICatalog.DeleteActivations(List`1<GrainAddress> arg0, DeactivationReasonCode arg1, string arg2);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Proxy_IClusterManifestSystemTarget : GrainReference {
    public Proxy_IClusterManifestSystemTarget(GrainReferenceShared arg0, IdSpan arg1);
    private sealed virtual override ValueTask`1<ClusterManifest> global::Orleans.Runtime.IClusterManifestSystemTarget.GetClusterManifest();
    private sealed virtual override ValueTask`1<ClusterManifestUpdate> global::Orleans.Runtime.IClusterManifestSystemTarget.GetClusterManifestUpdate(MajorMinorVersion arg0);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Proxy_IDeploymentLoadPublisher : GrainReference {
    public Proxy_IDeploymentLoadPublisher(GrainReferenceShared arg0, IdSpan arg1);
    private sealed virtual override Task global::Orleans.Runtime.IDeploymentLoadPublisher.UpdateRuntimeStatistics(SiloAddress arg0, SiloRuntimeStatistics arg1);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Proxy_IManagementGrain : GrainReference {
    private ArrayCopier`1<SiloAddress> _copier0;
    private ArrayCopier`1<string> _copier1;
    private IDeepCopier`1<GrainReference> _copier2;
    private IDeepCopier`1<IAddressable> _copier3;
    private IDeepCopier`1<CompatibilityStrategy> _copier4;
    private IDeepCopier`1<VersionSelectorStrategy> _copier5;
    public Proxy_IManagementGrain(GrainReferenceShared arg0, IdSpan arg1);
    private sealed virtual override Task`1<Dictionary`2<SiloAddress, SiloStatus>> global::Orleans.Runtime.IManagementGrain.GetHosts(bool arg0);
    private sealed virtual override Task`1<MembershipEntry[]> global::Orleans.Runtime.IManagementGrain.GetDetailedHosts(bool arg0);
    private sealed virtual override Task global::Orleans.Runtime.IManagementGrain.ForceGarbageCollection(SiloAddress[] arg0);
    private sealed virtual override Task global::Orleans.Runtime.IManagementGrain.ForceActivationCollection(SiloAddress[] arg0, TimeSpan arg1);
    private sealed virtual override Task global::Orleans.Runtime.IManagementGrain.ForceActivationCollection(TimeSpan arg0);
    private sealed virtual override Task global::Orleans.Runtime.IManagementGrain.ForceRuntimeStatisticsCollection(SiloAddress[] arg0);
    private sealed virtual override Task`1<SiloRuntimeStatistics[]> global::Orleans.Runtime.IManagementGrain.GetRuntimeStatistics(SiloAddress[] arg0);
    private sealed virtual override Task`1<SimpleGrainStatistic[]> global::Orleans.Runtime.IManagementGrain.GetSimpleGrainStatistics(SiloAddress[] arg0);
    private sealed virtual override Task`1<SimpleGrainStatistic[]> global::Orleans.Runtime.IManagementGrain.GetSimpleGrainStatistics();
    private sealed virtual override Task`1<DetailedGrainStatistic[]> global::Orleans.Runtime.IManagementGrain.GetDetailedGrainStatistics(String[] arg0, SiloAddress[] arg1);
    private sealed virtual override Task`1<int> global::Orleans.Runtime.IManagementGrain.GetGrainActivationCount(GrainReference arg0);
    private sealed virtual override Task`1<int> global::Orleans.Runtime.IManagementGrain.GetTotalActivationCount();
    private sealed virtual override Task`1<Object[]> global::Orleans.Runtime.IManagementGrain.SendControlCommandToProvider(string arg0, int arg1, object arg2);
    private sealed virtual override ValueTask`1<SiloAddress> global::Orleans.Runtime.IManagementGrain.GetActivationAddress(IAddressable arg0);
    private sealed virtual override ValueTask`1<List`1<GrainId>> global::Orleans.Runtime.IManagementGrain.GetActiveGrains(GrainType arg0);
    private sealed virtual override Task`1<List`1<GrainCallFrequency>> global::Orleans.Runtime.IManagementGrain.GetGrainCallFrequencies(SiloAddress[] arg0);
    private sealed virtual override ValueTask global::Orleans.Runtime.IManagementGrain.ResetGrainCallFrequencies(SiloAddress[] arg0);
    private sealed virtual override Task global::Orleans.IVersionManager.SetCompatibilityStrategy(CompatibilityStrategy arg0);
    private sealed virtual override Task global::Orleans.IVersionManager.SetSelectorStrategy(VersionSelectorStrategy arg0);
    private sealed virtual override Task global::Orleans.IVersionManager.SetCompatibilityStrategy(GrainInterfaceType arg0, CompatibilityStrategy arg1);
    private sealed virtual override Task global::Orleans.IVersionManager.SetSelectorStrategy(GrainInterfaceType arg0, VersionSelectorStrategy arg1);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Runtime.Proxy_IMembershipService : GrainReference {
    public Proxy_IMembershipService(GrainReferenceShared arg0, IdSpan arg1);
    private sealed virtual override Task global::Orleans.Runtime.IMembershipService.MembershipChangeNotification(MembershipTableSnapshot arg0);
    private sealed virtual override Task global::Orleans.Runtime.IMembershipService.Ping(int arg0);
    private sealed virtual override Task`1<IndirectProbeResponse> global::Orleans.Runtime.IMembershipService.ProbeIndirectly(SiloAddress arg0, TimeSpan arg1, int arg2);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Storage.Activator_BadProviderConfigException : object {
    public sealed virtual BadProviderConfigException Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Storage.Activator_InconsistentStateException : object {
    public sealed virtual InconsistentStateException Create();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Storage.Codec_BadProviderConfigException : object {
    private Type _codecFieldType;
    private Codec_OrleansException _baseTypeSerializer;
    public Codec_BadProviderConfigException(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, BadProviderConfigException instance);
    public void Deserialize(Reader`1& reader, BadProviderConfigException instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, BadProviderConfigException value);
    public sealed virtual BadProviderConfigException ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Storage.Codec_InconsistentStateException : object {
    private Type _codecFieldType;
    private Codec_OrleansException _baseTypeSerializer;
    private static Action`2<InconsistentStateException, string> setField0;
    private static Action`2<InconsistentStateException, string> setField2;
    public Codec_InconsistentStateException(ICodecProvider codecProvider);
    private static Codec_InconsistentStateException();
    public sealed virtual void Serialize(Writer`1& writer, InconsistentStateException instance);
    public sealed virtual void Deserialize(Reader`1& reader, InconsistentStateException instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, InconsistentStateException value);
    public sealed virtual InconsistentStateException ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Storage.Codec_Invokable_IMemoryStorageGrain_GrainReference_45659318_1`1 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IMemoryStorageGrain_GrainReference_45659318_1`1<T> instance);
    public void Deserialize(Reader`1& reader, Invokable_IMemoryStorageGrain_GrainReference_45659318_1`1<T> instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMemoryStorageGrain_GrainReference_45659318_1`1<T> value);
    public sealed virtual Invokable_IMemoryStorageGrain_GrainReference_45659318_1`1<T> ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Storage.Codec_Invokable_IMemoryStorageGrain_GrainReference_7CC6CA25_1`1 : object {
    private Type _codecFieldType;
    private Type _type0;
    private IFieldCodec`1<IGrainState`1<T>> _codec0;
    public Codec_Invokable_IMemoryStorageGrain_GrainReference_7CC6CA25_1`1(ICodecProvider codecProvider);
    public void Serialize(Writer`1& writer, Invokable_IMemoryStorageGrain_GrainReference_7CC6CA25_1`1<T> instance);
    public void Deserialize(Reader`1& reader, Invokable_IMemoryStorageGrain_GrainReference_7CC6CA25_1`1<T> instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMemoryStorageGrain_GrainReference_7CC6CA25_1`1<T> value);
    public sealed virtual Invokable_IMemoryStorageGrain_GrainReference_7CC6CA25_1`1<T> ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Storage.Codec_Invokable_IMemoryStorageGrain_GrainReference_B7CADD03_1`1 : object {
    private Type _codecFieldType;
    public void Serialize(Writer`1& writer, Invokable_IMemoryStorageGrain_GrainReference_B7CADD03_1`1<T> instance);
    public void Deserialize(Reader`1& reader, Invokable_IMemoryStorageGrain_GrainReference_B7CADD03_1`1<T> instance);
    public sealed virtual void WriteField(Writer`1& writer, UInt32 fieldIdDelta, Type expectedType, Invokable_IMemoryStorageGrain_GrainReference_B7CADD03_1`1<T> value);
    public sealed virtual Invokable_IMemoryStorageGrain_GrainReference_B7CADD03_1`1<T> ReadValue(Reader`1& reader, Field field);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Storage.Copier_BadProviderConfigException : ExceptionCopier`2<BadProviderConfigException, OrleansException> {
    public Copier_BadProviderConfigException(ICodecProvider codecProvider);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Storage.Copier_InconsistentStateException : ExceptionCopier`2<InconsistentStateException, OrleansException> {
    private static Action`2<InconsistentStateException, string> setField0;
    private static Action`2<InconsistentStateException, string> setField2;
    public Copier_InconsistentStateException(ICodecProvider codecProvider);
    private static Copier_InconsistentStateException();
    public virtual void DeepCopy(InconsistentStateException input, InconsistentStateException output, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Storage.Copier_Invokable_IMemoryStorageGrain_GrainReference_45659318_1`1 : object {
    public sealed virtual Invokable_IMemoryStorageGrain_GrainReference_45659318_1`1<T> DeepCopy(Invokable_IMemoryStorageGrain_GrainReference_45659318_1`1<T> original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Storage.Copier_Invokable_IMemoryStorageGrain_GrainReference_7CC6CA25_1`1 : object {
    private IDeepCopier`1<IGrainState`1<T>> _copier0;
    public Copier_Invokable_IMemoryStorageGrain_GrainReference_7CC6CA25_1`1(ICodecProvider codecProvider);
    public sealed virtual Invokable_IMemoryStorageGrain_GrainReference_7CC6CA25_1`1<T> DeepCopy(Invokable_IMemoryStorageGrain_GrainReference_7CC6CA25_1`1<T> original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
public class OrleansCodeGen.Orleans.Storage.Copier_Invokable_IMemoryStorageGrain_GrainReference_B7CADD03_1`1 : object {
    public sealed virtual Invokable_IMemoryStorageGrain_GrainReference_B7CADD03_1`1<T> DeepCopy(Invokable_IMemoryStorageGrain_GrainReference_B7CADD03_1`1<T> original, CopyContext context);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Storage.Invokable_IMemoryStorageGrain_GrainReference_45659318_1`1 : TaskRequest`1<IGrainState`1<T>> {
    public string arg0;
    private IMemoryStorageGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMemoryStorageGrain_GrainReference_45659318_1`1();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<IGrainState`1<T>> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Storage.Invokable_IMemoryStorageGrain_GrainReference_7CC6CA25_1`1 : TaskRequest`1<string> {
    public string arg0;
    public IGrainState`1<T> arg1;
    private IMemoryStorageGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMemoryStorageGrain_GrainReference_7CC6CA25_1`1();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task`1<string> InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
[CompoundTypeAliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OrleansCodeGen.Orleans.Storage.Invokable_IMemoryStorageGrain_GrainReference_B7CADD03_1`1 : TaskRequest {
    public string arg0;
    public string arg1;
    private IMemoryStorageGrain target;
    private static MethodInfo MethodBackingField;
    private static Invokable_IMemoryStorageGrain_GrainReference_B7CADD03_1`1();
    public virtual int GetArgumentCount();
    public virtual string GetMethodName();
    public virtual string GetInterfaceName();
    public virtual string GetActivityName();
    public virtual Type GetInterfaceType();
    public virtual MethodInfo GetMethod();
    public virtual void SetTarget(ITargetHolder holder);
    public virtual object GetTarget();
    public virtual void Dispose();
    public virtual object GetArgument(int index);
    public virtual void SetArgument(int index, object value);
    protected virtual Task InvokeInner();
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.Orleans.Storage.Proxy_IMemoryStorageGrain : GrainReference {
    public Proxy_IMemoryStorageGrain(GrainReferenceShared arg0, IdSpan arg1);
    private sealed virtual override Task`1<IGrainState`1<T>> global::Orleans.Storage.IMemoryStorageGrain.ReadStateAsync(string arg0);
    private sealed virtual override Task`1<string> global::Orleans.Storage.IMemoryStorageGrain.WriteStateAsync(string arg0, IGrainState`1<T> arg1);
    private sealed virtual override Task global::Orleans.Storage.IMemoryStorageGrain.DeleteStateAsync(string arg0, string arg1);
}
[GeneratedCodeAttribute("OrleansCodeGen", "8.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class OrleansCodeGen.OrleansCore.Metadata_OrleansCore : TypeManifestProviderBase {
    protected virtual void ConfigureInner(TypeManifestOptions config);
}
