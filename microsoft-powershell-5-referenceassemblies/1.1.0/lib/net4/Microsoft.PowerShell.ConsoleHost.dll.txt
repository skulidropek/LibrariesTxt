public class Microsoft.PowerShell.Commands.StartTranscriptCommand : PSCmdlet {
    public SwitchParameter Append { get; public set; }
    public SwitchParameter Force { get; public set; }
    public SwitchParameter IncludeInvocationHeader { get; public set; }
    public string LiteralPath { get; public set; }
    public SwitchParameter NoClobber { get; public set; }
    public string OutputDirectory { get; public set; }
    public string Path { get; public set; }
    public string get_Path();
    public void set_Path(string value);
    public string get_LiteralPath();
    public void set_LiteralPath(string value);
    public string get_OutputDirectory();
    public void set_OutputDirectory(string value);
    public SwitchParameter get_Append();
    public void set_Append(SwitchParameter value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public SwitchParameter get_NoClobber();
    public void set_NoClobber(SwitchParameter value);
    public SwitchParameter get_IncludeInvocationHeader();
    public void set_IncludeInvocationHeader(SwitchParameter value);
    protected virtual void BeginProcessing();
}
public class Microsoft.PowerShell.Commands.StopTranscriptCommand : PSCmdlet {
    protected virtual void BeginProcessing();
}
public static class Microsoft.PowerShell.ConsoleShell : object {
    public static int Start(RunspaceConfiguration configuration, string bannerText, string helpText, String[] args);
}
public class Microsoft.PowerShell.EngineInstaller : PSInstaller {
}
public class Microsoft.PowerShell.PSHostPSSnapIn : PSSnapIn {
    public string Description { get; }
    public string DescriptionResource { get; }
    public string Name { get; }
    public string Vendor { get; }
    public string VendorResource { get; }
    public virtual string get_Name();
    public virtual string get_Vendor();
    public virtual string get_VendorResource();
    public virtual string get_Description();
    public virtual string get_DescriptionResource();
}
public class Microsoft.PowerShell.UnmanagedPSEntry : object {
    public int Start(string consoleFilePath, String[] args);
}
