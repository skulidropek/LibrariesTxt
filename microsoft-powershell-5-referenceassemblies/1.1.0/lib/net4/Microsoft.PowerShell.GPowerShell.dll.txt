public class Microsoft.PowerShell.Host.ISE.ConsoleEditor : ISEEditor {
    public string InputText { get; public set; }
    public string Text { get; public set; }
    protected virtual void Finalize();
    public string get_InputText();
    public void set_InputText(string value);
    public virtual string get_Text();
    public virtual void set_Text(string value);
    public virtual void Clear();
    public sealed virtual void Dispose();
    protected virtual int GetLineStartPosition(int bufferPosition);
}
public interface Microsoft.PowerShell.Host.ISE.IAddOnToolHostObject {
    public ObjectModelRoot HostObject { get; public set; }
    public abstract virtual ObjectModelRoot get_HostObject();
    public abstract virtual void set_HostObject(ObjectModelRoot value);
}
public class Microsoft.PowerShell.Host.ISE.ISEAddOnTool : object {
    public Control Control { get; }
    public bool IsVisible { get; public set; }
    public string Name { get; }
    public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public string get_Name();
    public bool get_IsVisible();
    public void set_IsVisible(bool value);
    public Control get_Control();
}
public class Microsoft.PowerShell.Host.ISE.ISEAddOnToolAddedOrRemovedEventArgs : EventArgs {
    public bool Added { get; }
    public ISEAddOnTool Tool { get; }
    public bool get_Added();
    public ISEAddOnTool get_Tool();
}
public class Microsoft.PowerShell.Host.ISE.ISEAddOnToolCollection : UICollection`1<ISEAddOnTool> {
    public ISEAddOnTool Add(string name, Type controlType);
    public ISEAddOnTool Add(string name, Type controlType, bool isVisible);
    public bool Contains(UserControl control);
}
public class Microsoft.PowerShell.Host.ISE.ISEAddOnToolEventArgs : EventArgs {
    public ISEAddOnTool Tool { get; }
    public ISEAddOnTool get_Tool();
}
public class Microsoft.PowerShell.Host.ISE.ISEAddOnToolPaneOpenOrClosedEventArgs : EventArgs {
    public ISEAddOnToolCollection Collection { get; }
    public bool Opened { get; }
    public ISEAddOnToolCollection get_Collection();
    public bool get_Opened();
}
public abstract class Microsoft.PowerShell.Host.ISE.ISEEditor : object {
    public bool CanGoToMatch { get; }
    public int CaretColumn { get; }
    public int CaretLine { get; }
    public string CaretLineText { get; }
    public int LineCount { get; }
    public string SelectedText { get; }
    public string Text { get; public set; }
    protected ISEEditor(IContentType contentType);
    public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public int get_LineCount();
    public int get_CaretLine();
    public int get_CaretColumn();
    public virtual string get_Text();
    public virtual void set_Text(string value);
    public string get_SelectedText();
    public string get_CaretLineText();
    public bool get_CanGoToMatch();
    public void SelectCaretLine();
    public void InsertText(string text);
    public int GetLineLength(int lineNumber);
    public void EnsureVisible(int lineNumber);
    public void SetCaretPosition(int lineNumber, int columnNumber);
    public void Select(int startLine, int startColumn, int endLine, int endColumn);
    public virtual void Clear();
    public void Focus();
    public void GoToMatch();
    public void ToggleOutliningExpansion();
    protected virtual int GetLineStartPosition(int bufferPosition);
    protected void AddCommandToContextMenu(ICommand command, string automationId);
    protected void EnsureSpanVisible(SnapshotSpan span);
}
public class Microsoft.PowerShell.Host.ISE.ISEFile : object {
    public string DisplayName { get; }
    public ISEEditor Editor { get; }
    public Encoding Encoding { get; }
    public string FullPath { get; }
    public bool IsRecovered { get; }
    public bool IsSaved { get; }
    public bool IsUntitled { get; }
    public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public bool get_IsSaved();
    public bool get_IsUntitled();
    public string get_FullPath();
    public ISEEditor get_Editor();
    public string get_DisplayName();
    public Encoding get_Encoding();
    public bool get_IsRecovered();
    public void Save();
    public void Save(Encoding saveEncoding);
    public void SaveAs(string saveAsFileName);
    public void SaveAs(string saveAsFileName, Encoding saveEncoding);
}
public class Microsoft.PowerShell.Host.ISE.ISEFileCollection : ObservableCollection`1<ISEFile> {
    public ISEFile SelectedFile { get; public set; }
    public ISEFile get_SelectedFile();
    public void set_SelectedFile(ISEFile value);
    public void SetSelectedFile(ISEFile file);
    public void Remove(ISEFile file, bool force);
    public ISEFile Add(string fullPath);
    public ISEFile Add();
    protected virtual void InsertItem(int index, ISEFile item);
    protected virtual void SetItem(int index, ISEFile item);
    protected virtual void ClearItems();
    protected virtual void MoveItem(int oldIndex, int newIndex);
    protected virtual void RemoveItem(int index);
}
public class Microsoft.PowerShell.Host.ISE.ISEMenuItem : object {
    public ScriptBlock Action { get; }
    public string DisplayName { get; }
    public KeyGesture Shortcut { get; }
    public IList`1<ISEMenuItem> Submenus { get; }
    public ScriptBlock get_Action();
    public string get_DisplayName();
    public KeyGesture get_Shortcut();
    public IList`1<ISEMenuItem> get_Submenus();
}
public class Microsoft.PowerShell.Host.ISE.ISEMenuItemCollection : UICollection`1<ISEMenuItem> {
    public ISEMenuItem Add(string displayName, ScriptBlock action, KeyGesture shortcut);
}
public class Microsoft.PowerShell.Host.ISE.ISEOptions : object {
    public short AutoSaveMinuteInterval { get; public set; }
    public Color ConsolePaneBackgroundColor { get; public set; }
    public Color ConsolePaneForegroundColor { get; public set; }
    public Color ConsolePaneTextBackgroundColor { get; public set; }
    public IDictionary`2<PSTokenType, Color> ConsoleTokenColors { get; }
    public Color DebugBackgroundColor { get; public set; }
    public Color DebugForegroundColor { get; public set; }
    public ISEOptions DefaultOptions { get; }
    public Color ErrorBackgroundColor { get; public set; }
    public Color ErrorForegroundColor { get; public set; }
    public string FontName { get; public set; }
    public int FontSize { get; public set; }
    public int IntellisenseTimeoutInSeconds { get; public set; }
    public int MruCount { get; public set; }
    public Color ScriptPaneBackgroundColor { get; public set; }
    public Color ScriptPaneForegroundColor { get; public set; }
    public SelectedScriptPaneState SelectedScriptPaneState { get; public set; }
    public bool ShowDefaultSnippets { get; public set; }
    public bool ShowIntellisenseInConsolePane { get; public set; }
    public bool ShowIntellisenseInScriptPane { get; public set; }
    public bool ShowLineNumbers { get; public set; }
    public bool ShowOutlining { get; public set; }
    public bool ShowToolBar { get; public set; }
    public bool ShowWarningBeforeSavingOnRun { get; public set; }
    public bool ShowWarningForDuplicateFiles { get; public set; }
    public IDictionary`2<PSTokenType, Color> TokenColors { get; }
    public bool UseEnterToSelectInConsolePaneIntellisense { get; public set; }
    public bool UseEnterToSelectInScriptPaneIntellisense { get; public set; }
    public bool UseLocalHelp { get; public set; }
    public Color VerboseBackgroundColor { get; public set; }
    public Color VerboseForegroundColor { get; public set; }
    public Color WarningBackgroundColor { get; public set; }
    public Color WarningForegroundColor { get; public set; }
    public IDictionary`2<PSXmlTokenType, Color> XmlTokenColors { get; }
    public double Zoom { get; public set; }
    public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public SelectedScriptPaneState get_SelectedScriptPaneState();
    public void set_SelectedScriptPaneState(SelectedScriptPaneState value);
    public bool get_ShowDefaultSnippets();
    public void set_ShowDefaultSnippets(bool value);
    public bool get_ShowToolBar();
    public void set_ShowToolBar(bool value);
    public bool get_ShowOutlining();
    public void set_ShowOutlining(bool value);
    public bool get_ShowLineNumbers();
    public void set_ShowLineNumbers(bool value);
    public IDictionary`2<PSTokenType, Color> get_TokenColors();
    public IDictionary`2<PSTokenType, Color> get_ConsoleTokenColors();
    public IDictionary`2<PSXmlTokenType, Color> get_XmlTokenColors();
    public ISEOptions get_DefaultOptions();
    public int get_FontSize();
    public void set_FontSize(int value);
    public double get_Zoom();
    public void set_Zoom(double value);
    public string get_FontName();
    public void set_FontName(string value);
    public Color get_ErrorForegroundColor();
    public void set_ErrorForegroundColor(Color value);
    public Color get_ErrorBackgroundColor();
    public void set_ErrorBackgroundColor(Color value);
    public Color get_WarningForegroundColor();
    public void set_WarningForegroundColor(Color value);
    public Color get_WarningBackgroundColor();
    public void set_WarningBackgroundColor(Color value);
    public Color get_VerboseForegroundColor();
    public void set_VerboseForegroundColor(Color value);
    public Color get_VerboseBackgroundColor();
    public void set_VerboseBackgroundColor(Color value);
    public Color get_DebugForegroundColor();
    public void set_DebugForegroundColor(Color value);
    public Color get_DebugBackgroundColor();
    public void set_DebugBackgroundColor(Color value);
    public Color get_ConsolePaneBackgroundColor();
    public void set_ConsolePaneBackgroundColor(Color value);
    public Color get_ConsolePaneTextBackgroundColor();
    public void set_ConsolePaneTextBackgroundColor(Color value);
    public Color get_ConsolePaneForegroundColor();
    public void set_ConsolePaneForegroundColor(Color value);
    public Color get_ScriptPaneBackgroundColor();
    public void set_ScriptPaneBackgroundColor(Color value);
    public Color get_ScriptPaneForegroundColor();
    public void set_ScriptPaneForegroundColor(Color value);
    public bool get_ShowWarningForDuplicateFiles();
    public void set_ShowWarningForDuplicateFiles(bool value);
    public bool get_ShowWarningBeforeSavingOnRun();
    public void set_ShowWarningBeforeSavingOnRun(bool value);
    public bool get_UseLocalHelp();
    public void set_UseLocalHelp(bool value);
    public short get_AutoSaveMinuteInterval();
    public void set_AutoSaveMinuteInterval(short value);
    public int get_MruCount();
    public void set_MruCount(int value);
    public bool get_ShowIntellisenseInConsolePane();
    public void set_ShowIntellisenseInConsolePane(bool value);
    public bool get_ShowIntellisenseInScriptPane();
    public void set_ShowIntellisenseInScriptPane(bool value);
    public bool get_UseEnterToSelectInConsolePaneIntellisense();
    public void set_UseEnterToSelectInConsolePaneIntellisense(bool value);
    public bool get_UseEnterToSelectInScriptPaneIntellisense();
    public void set_UseEnterToSelectInScriptPaneIntellisense(bool value);
    public int get_IntellisenseTimeoutInSeconds();
    public void set_IntellisenseTimeoutInSeconds(int value);
    public void RestoreDefaults();
    public void RestoreDefaultTokenColors();
    public void RestoreDefaultConsoleTokenColors();
    public void RestoreDefaultXmlTokenColors();
}
public class Microsoft.PowerShell.Host.ISE.ISESnippet : object {
    public string Author { get; }
    public string CodeFragment { get; }
    public string Description { get; }
    public string DisplayTitle { get; }
    public string FullPath { get; }
    public bool IsDefault { get; }
    public bool IsTabSpecific { get; }
    public Version SchemaVersion { get; }
    public string get_DisplayTitle();
    public Version get_SchemaVersion();
    public string get_Description();
    public string get_Author();
    public string get_CodeFragment();
    public bool get_IsTabSpecific();
    public bool get_IsDefault();
    public string get_FullPath();
    public sealed virtual bool Equals(ISESnippet other);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.PowerShell.Host.ISE.ISESnippetCollection : object {
    public int Count { get; }
    public ISESnippet Item { get; }
    public int get_Count();
    public ISESnippet get_Item(int index);
    public void Load(string filePathName);
    public sealed virtual IEnumerator`1<ISESnippet> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Microsoft.PowerShell.Host.ISE.ObjectModelRoot : object {
    public ISEFile CurrentFile { get; }
    public PowerShellTab CurrentPowerShellTab { get; }
    public ISEAddOnTool CurrentVisibleHorizontalTool { get; }
    public ISEAddOnTool CurrentVisibleVerticalTool { get; }
    public ISEOptions Options { get; }
    public PowerShellTabCollection PowerShellTabs { get; }
    public PowerShellTab get_CurrentPowerShellTab();
    public ISEFile get_CurrentFile();
    public ISEAddOnTool get_CurrentVisibleHorizontalTool();
    public ISEAddOnTool get_CurrentVisibleVerticalTool();
    public ISEOptions get_Options();
    public PowerShellTabCollection get_PowerShellTabs();
}
public class Microsoft.PowerShell.Host.ISE.PowerShellTab : object {
    public ISEMenuItem AddOnsMenu { get; }
    public bool CanInvoke { get; }
    public ConsoleEditor ConsolePane { get; }
    public string DisplayName { get; public set; }
    public bool ExpandedScript { get; public set; }
    public ISEFileCollection Files { get; }
    public ISEAddOnToolCollection HorizontalAddOnTools { get; }
    public bool HorizontalAddOnToolsPaneOpened { get; public set; }
    public string Prompt { get; }
    public bool ShowCommands { get; public set; }
    public ISESnippetCollection Snippets { get; }
    public string StatusText { get; }
    public ISEAddOnToolCollection VerticalAddOnTools { get; }
    public bool VerticalAddOnToolsPaneOpened { get; public set; }
    public ReadOnlyISEAddOnToolCollection VisibleHorizontalAddOnTools { get; }
    public ReadOnlyISEAddOnToolCollection VisibleVerticalAddOnTools { get; }
    public double ZoomLevel { get; public set; }
    public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public void add_AddOnToolPaneOpenedOrClosed(EventHandler`1<ISEAddOnToolPaneOpenOrClosedEventArgs> value);
    public void remove_AddOnToolPaneOpenedOrClosed(EventHandler`1<ISEAddOnToolPaneOpenOrClosedEventArgs> value);
    public void add_AddOnToolVisibilityChanged(EventHandler`1<ISEAddOnToolEventArgs> value);
    public void remove_AddOnToolVisibilityChanged(EventHandler`1<ISEAddOnToolEventArgs> value);
    public void add_AddOnToolAddedOrRemoved(EventHandler`1<ISEAddOnToolAddedOrRemovedEventArgs> value);
    public void remove_AddOnToolAddedOrRemoved(EventHandler`1<ISEAddOnToolAddedOrRemovedEventArgs> value);
    public void add_ZoomLevelChanged(EventHandler`1<double> value);
    public void remove_ZoomLevelChanged(EventHandler`1<double> value);
    public ISEMenuItem get_AddOnsMenu();
    public string get_StatusText();
    public bool get_ExpandedScript();
    public void set_ExpandedScript(bool value);
    public bool get_ShowCommands();
    public void set_ShowCommands(bool value);
    public bool get_HorizontalAddOnToolsPaneOpened();
    public void set_HorizontalAddOnToolsPaneOpened(bool value);
    public void set_ZoomLevel(double value);
    public double get_ZoomLevel();
    public bool get_VerticalAddOnToolsPaneOpened();
    public void set_VerticalAddOnToolsPaneOpened(bool value);
    public string get_Prompt();
    public ConsoleEditor get_ConsolePane();
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public ISEFileCollection get_Files();
    public ISESnippetCollection get_Snippets();
    public bool get_CanInvoke();
    public ISEAddOnToolCollection get_HorizontalAddOnTools();
    public ISEAddOnToolCollection get_VerticalAddOnTools();
    public ReadOnlyISEAddOnToolCollection get_VisibleHorizontalAddOnTools();
    public ReadOnlyISEAddOnToolCollection get_VisibleVerticalAddOnTools();
    public void Invoke(ScriptBlock script);
    public void Invoke(string script);
    public Collection`1<PSObject> InvokeSynchronous(ScriptBlock script);
    public Collection`1<PSObject> InvokeSynchronous(ScriptBlock script, bool useNewScope);
    public Collection`1<PSObject> InvokeSynchronous(string script);
    public Collection`1<PSObject> InvokeSynchronous(string script, bool useNewScope);
    public Collection`1<PSObject> InvokeSynchronous(string script, bool useNewScope, int millisecondsTimeout);
    public Collection`1<PSObject> InvokeSynchronousCommand(string command, bool useNewScope, int millisecondsTimeout);
    protected void OnSelectedFileNeedsFocus(EventArgs e);
}
public class Microsoft.PowerShell.Host.ISE.PowerShellTabCollection : ObservableCollection`1<PowerShellTab> {
    public PowerShellTab SelectedPowerShellTab { get; public set; }
    public PowerShellTab get_SelectedPowerShellTab();
    public void set_SelectedPowerShellTab(PowerShellTab value);
    public void SetSelectedPowerShellTab(PowerShellTab powerShellTab);
    public PowerShellTab Add();
    protected virtual void InsertItem(int index, PowerShellTab item);
    protected virtual void MoveItem(int oldIndex, int newIndex);
    protected virtual void SetItem(int index, PowerShellTab item);
    protected virtual void ClearItems();
    protected virtual void RemoveItem(int index);
}
public enum Microsoft.PowerShell.Host.ISE.PSXmlTokenType : Enum {
    public int value__;
    public static PSXmlTokenType Attribute;
    public static PSXmlTokenType CharacterData;
    public static PSXmlTokenType Comment;
    public static PSXmlTokenType CommentDelimiter;
    public static PSXmlTokenType ElementName;
    public static PSXmlTokenType MarkupExtension;
    public static PSXmlTokenType Quote;
    public static PSXmlTokenType QuotedString;
    public static PSXmlTokenType Tag;
    public static PSXmlTokenType Text;
}
public class Microsoft.PowerShell.Host.ISE.ReadOnlyISEAddOnToolCollection : UICollection`1<ISEAddOnTool> {
    public ISEAddOnTool SelectedAddOnTool { get; public set; }
    public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public ISEAddOnTool get_SelectedAddOnTool();
    public void set_SelectedAddOnTool(ISEAddOnTool value);
    public bool Contains(UserControl control);
}
public enum Microsoft.PowerShell.Host.ISE.SelectedScriptPaneState : Enum {
    public int value__;
    public static SelectedScriptPaneState Maximized;
    public static SelectedScriptPaneState Right;
    public static SelectedScriptPaneState Top;
}
public static class Microsoft.PowerShell.Host.ISE.SnippetStrings : object {
    public static string ModuleNotFound;
    public static string NoSnippetsInModule;
    public static string SnippetsNoCloseCData;
}
[DefaultMemberAttribute("Item")]
public class Microsoft.PowerShell.Host.ISE.UICollection`1 : object {
    public int Count { get; }
    public bool IsReadOnly { get; }
    public T Item { get; public set; }
    public sealed virtual void add_CollectionChanged(NotifyCollectionChangedEventHandler value);
    public sealed virtual void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual bool Remove(T item);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual void RemoveAt(int index);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.AddOnToolTabControl : TabControl {
    protected virtual void OnItemsChanged(NotifyCollectionChangedEventArgs e);
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.App : Application {
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public static class Microsoft.Windows.PowerShell.Gui.Internal.AutomationNames : object {
    public static string ApplicationStatus;
    public static string CollapseScriptPane;
    public static string Console;
    public static string DebugPrompt;
    public static string Editor;
    public static string FindWhatText;
    public static string HorizontalAddOn;
    public static string HorizontalAddOnSplitter;
    public static string MainMenu;
    public static string MainWindow;
    public static string NestedPrompt;
    public static string ProgressIndicator;
    public static string Prompt;
    public static string ReplaceWithText;
    public static string Runspace;
    public static string Runspaces;
    public static string ScriptExpander;
    public static string ScriptPane;
    public static string ScriptSplitter;
    public static string ScriptTools;
    public static string ToolBar;
    public static string VerticalAddOn;
    public static string VerticalAddOnSplitter;
    public static string ZoomSelection;
}
public static class Microsoft.Windows.PowerShell.Gui.Internal.ColorNames : object {
    public static string AliceBlueColorName;
    public static string AntiqueWhiteColorName;
    public static string AquaColorName;
    public static string AquamarineColorName;
    public static string AzureColorName;
    public static string BeigeColorName;
    public static string BisqueColorName;
    public static string BlackColorName;
    public static string BlanchedAlmondColorName;
    public static string BlueColorName;
    public static string BlueVioletColorName;
    public static string BrownColorName;
    public static string BurlyWoodColorName;
    public static string CadetBlueColorName;
    public static string ChartreuseColorName;
    public static string ChocolateColorName;
    public static string CoralColorName;
    public static string CornflowerBlueColorName;
    public static string CornsilkColorName;
    public static string CrimsonColorName;
    public static string CyanColorName;
    public static string DarkBlueColorName;
    public static string DarkCyanColorName;
    public static string DarkGoldenrodColorName;
    public static string DarkGrayColorName;
    public static string DarkGreenColorName;
    public static string DarkKhakiColorName;
    public static string DarkMagentaColorName;
    public static string DarkOliveGreenColorName;
    public static string DarkOrangeColorName;
    public static string DarkOrchidColorName;
    public static string DarkRedColorName;
    public static string DarkSalmonColorName;
    public static string DarkSeaGreenColorName;
    public static string DarkSlateBlueColorName;
    public static string DarkSlateGrayColorName;
    public static string DarkTurquoiseColorName;
    public static string DarkVioletColorName;
    public static string DeepPinkColorName;
    public static string DeepSkyBlueColorName;
    public static string DimGrayColorName;
    public static string DodgerBlueColorName;
    public static string FirebrickColorName;
    public static string FloralWhiteColorName;
    public static string ForestGreenColorName;
    public static string FuchsiaColorName;
    public static string GainsboroColorName;
    public static string GhostWhiteColorName;
    public static string GoldColorName;
    public static string GoldenrodColorName;
    public static string GrayColorName;
    public static string GreenColorName;
    public static string GreenYellowColorName;
    public static string HoneydewColorName;
    public static string HotPinkColorName;
    public static string IndianRedColorName;
    public static string IndigoColorName;
    public static string IvoryColorName;
    public static string KhakiColorName;
    public static string LavenderBlushColorName;
    public static string LavenderColorName;
    public static string LawnGreenColorName;
    public static string LemonChiffonColorName;
    public static string LightBlueColorName;
    public static string LightCoralColorName;
    public static string LightCyanColorName;
    public static string LightGoldenrodYellowColorName;
    public static string LightGrayColorName;
    public static string LightGreenColorName;
    public static string LightPinkColorName;
    public static string LightSalmonColorName;
    public static string LightSeaGreenColorName;
    public static string LightSkyBlueColorName;
    public static string LightSlateGrayColorName;
    public static string LightSteelBlueColorName;
    public static string LightYellowColorName;
    public static string LimeColorName;
    public static string LimeGreenColorName;
    public static string LinenColorName;
    public static string MagentaColorName;
    public static string MaroonColorName;
    public static string MediumAquamarineColorName;
    public static string MediumBlueColorName;
    public static string MediumOrchidColorName;
    public static string MediumPurpleColorName;
    public static string MediumSeaGreenColorName;
    public static string MediumSlateBlueColorName;
    public static string MediumSpringGreenColorName;
    public static string MediumTurquoiseColorName;
    public static string MediumVioletRedColorName;
    public static string MidnightBlueColorName;
    public static string MintCreamColorName;
    public static string MistyRoseColorName;
    public static string MoccasinColorName;
    public static string NavajoWhiteColorName;
    public static string NavyColorName;
    public static string OldLaceColorName;
    public static string OliveColorName;
    public static string OliveDrabColorName;
    public static string OrangeColorName;
    public static string OrangeRedColorName;
    public static string OrchidColorName;
    public static string PaleGoldenrodColorName;
    public static string PaleGreenColorName;
    public static string PaleTurquoiseColorName;
    public static string PaleVioletRedColorName;
    public static string PapayaWhipColorName;
    public static string PeachPuffColorName;
    public static string PeruColorName;
    public static string PinkColorName;
    public static string PlumColorName;
    public static string PowderBlueColorName;
    public static string PurpleColorName;
    public static string RedColorName;
    public static string RosyBrownColorName;
    public static string RoyalBlueColorName;
    public static string SaddleBrownColorName;
    public static string SalmonColorName;
    public static string SandyBrownColorName;
    public static string SeaGreenColorName;
    public static string SeaShellColorName;
    public static string SiennaColorName;
    public static string SilverColorName;
    public static string SkyBlueColorName;
    public static string SlateBlueColorName;
    public static string SlateGrayColorName;
    public static string SnowColorName;
    public static string SpringGreenColorName;
    public static string SteelBlueColorName;
    public static string TanColorName;
    public static string TealColorName;
    public static string ThistleColorName;
    public static string TomatoColorName;
    public static string TransparentColorName;
    public static string TurquoiseColorName;
    public static string VioletColorName;
    public static string WheatColorName;
    public static string WhiteColorName;
    public static string WhiteSmokeColorName;
    public static string YellowColorName;
    public static string YellowGreenColorName;
}
public class Microsoft.Windows.PowerShell.Gui.Internal.ColorPicker : UserControl {
    public Color CurrentColor { get; public set; }
    public void add_ColorChanged(EventHandler value);
    public void remove_ColorChanged(EventHandler value);
    public Color get_CurrentColor();
    public void set_CurrentColor(Color value);
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public static class Microsoft.Windows.PowerShell.Gui.Internal.ContextMenuOnlyCustomCommands : object {
    public static RoutedUICommand DisableBreakpoint { get; }
    public static RoutedUICommand EnableBreakpoint { get; }
    public static RoutedUICommand get_EnableBreakpoint();
    public static RoutedUICommand get_DisableBreakpoint();
}
public static class Microsoft.Windows.PowerShell.Gui.Internal.ControlTexts : object {
    public static string AddOnTools;
    public static string Cancel;
    public static string CloseRunspace;
    public static string CloseScript;
    public static string Col;
    public static string Completed;
    public static string Computer;
    public static string Connect;
    public static string Copy;
    public static string CredentialMessage;
    public static string Cut;
    public static string DebugMenu;
    public static string Edit;
    public static string Exit;
    public static string Failed;
    public static string File;
    public static string FileAlreadyOpened;
    public static string FileIsReadOnly;
    public static string Find;
    public static string FindInSelection;
    public static string FindNext;
    public static string FindNextMenu;
    public static string FindPreviousMenu;
    public static string FindTitle;
    public static string FindWhat;
    public static string GoToLine;
    public static string GoToLineCaption;
    public static string GoToMatch;
    public static string GraphicalPowerShell;
    public static string Help;
    public static string InTheFutureDoNotShow;
    public static string LineNumber;
    public static string Ln;
    public static string MatchCase;
    public static string ModuleBrowserAddOn;
    public static string NewRemotePowerShellTab;
    public static string NewRemotePowerShellTabCaption;
    public static string NewScript;
    public static string NotStarted;
    public static string OpenOptionsDialog;
    public static string OpenScript;
    public static string Paste;
    public static string Redo;
    public static string RegularExpressions;
    public static string Replace;
    public static string ReplaceAll;
    public static string ReplaceButtonText;
    public static string ReplaceCaption;
    public static string ReplaceWith;
    public static string RunScript;
    public static string RunSelection;
    public static string Running;
    public static string SaveOnRun;
    public static string SaveScript;
    public static string SaveScriptAs;
    public static string Script;
    public static string ScriptAnalyzerAddOn;
    public static string ScriptBrowserAddOn;
    public static string SearchUp;
    public static string SelectAll;
    public static string ShowCommandCopy;
    public static string ShowCommandInsert;
    public static string ShowCommandRun;
    public static string ShowCommandShowOnStartup;
    public static string ShowScriptPaneMaximized;
    public static string ShowScriptPaneRight;
    public static string ShowScriptPaneTop;
    public static string StartPowerShell;
    public static string Stopped;
    public static string Stopping;
    public static string ToggleScriptingPane;
    public static string ToggleToolBar;
    public static string Tools;
    public static string Undo;
    public static string UserName;
    public static string View;
    public static string WholeWord;
    public static string WindowTitleElevatedPrefix;
    public static string WindowsPowerShellHelp;
    public static string ZoomIn;
    public static string ZoomOut;
}
public static class Microsoft.Windows.PowerShell.Gui.Internal.CustomCommands : object {
    public static RoutedUICommand AboutAddOnTools { get; }
    public static RoutedUICommand ApplicationExit { get; }
    public static RoutedUICommand BreakAllDebugger { get; }
    public static RoutedUICommand ClearOutput { get; }
    public static RoutedUICommand CloseRunspaceCmd { get; }
    public static RoutedUICommand CloseScript { get; }
    public static RoutedUICommand Copy { get; }
    public static RoutedUICommand CustomScriptCmd { get; }
    public static RoutedUICommand Cut { get; }
    public static RoutedUICommand DisableAllBreakpoints { get; }
    public static RoutedUICommand EnableAllBreakpoints { get; }
    public static RoutedUICommand Find { get; }
    public static RoutedUICommand FindNext { get; }
    public static RoutedUICommand FindPrevious { get; }
    public static RoutedUICommand GetCallStack { get; }
    public static RoutedUICommand GoToConsolePane { get; }
    public static RoutedUICommand GoToEditor { get; }
    public static RoutedUICommand GoToLine { get; }
    public static RoutedUICommand GoToMatch { get; }
    public static RoutedUICommand GoToSelectedHorizontalAddOnTool { get; }
    public static RoutedUICommand GoToSelectedVerticalAddOnTool { get; }
    public static RoutedUICommand Help { get; }
    public static RoutedUICommand HideHorizontalAddOnTool { get; }
    public static RoutedUICommand HideVerticalAddOnTool { get; }
    public static RoutedUICommand ListBreakpoints { get; }
    public static RoutedUICommand ModuleBrowserAddOnCommand { get; }
    public static RoutedUICommand MoveHorizontalAddOnToolToVertical { get; }
    public static RoutedUICommand MoveScriptToTopOrRightCmd { get; }
    public static RoutedUICommand MoveVerticalAddOnToolToHorizontal { get; }
    public static RoutedUICommand NewRemotePowerShellTab { get; }
    public static RoutedUICommand NewRunspaceCmd { get; }
    public static RoutedUICommand NewScript { get; }
    public static RoutedUICommand OpenMruFile { get; }
    public static RoutedUICommand OpenOptionsDialog { get; }
    public static RoutedUICommand OpenScript { get; }
    public static RoutedUICommand Paste { get; }
    public static RoutedUICommand Redo { get; }
    public static RoutedUICommand RemoveAllBreakpoints { get; }
    public static RoutedUICommand Replace { get; }
    public static RoutedUICommand ReplaceAllCmd { get; }
    public static RoutedUICommand ResumeDebugger { get; }
    public static RoutedUICommand RunScript { get; }
    public static RoutedUICommand RunSelection { get; }
    public static RoutedUICommand SaveScript { get; }
    public static RoutedUICommand SaveScriptAs { get; }
    public static RoutedUICommand ScriptAnalyzerAddOnCommand { get; }
    public static RoutedUICommand ScriptBrowserAddOnCommand { get; }
    public static RoutedUICommand SelectAll { get; }
    public static RoutedUICommand ShowAndSelectAddOnTool { get; }
    public static RoutedUICommand ShowPopupCommand { get; }
    public static RoutedUICommand ShowRunspaceCmd { get; }
    public static RoutedUICommand ShowScriptCmd { get; }
    public static RoutedUICommand ShowScriptPaneMaximized { get; }
    public static RoutedUICommand ShowScriptPaneRight { get; }
    public static RoutedUICommand ShowScriptPaneTop { get; }
    public static RoutedUICommand ShowSnippet { get; }
    public static RoutedUICommand StartIntellisense { get; }
    public static RoutedUICommand StartPowerShell { get; }
    public static RoutedUICommand StepInto { get; }
    public static RoutedUICommand StepOut { get; }
    public static RoutedUICommand StepOver { get; }
    public static RoutedUICommand StopDebugger { get; }
    public static RoutedUICommand StopExecution { get; }
    public static RoutedUICommand ToggleBreakpoint { get; }
    public static RoutedUICommand ToggleEmbeddedCommands { get; }
    public static RoutedUICommand ToggleHorizontalAddOnPane { get; }
    public static RoutedUICommand ToggleOutliningExpandCollapseAll { get; }
    public static RoutedUICommand ToggleScriptingPane { get; }
    public static RoutedUICommand ToggleShowLineNumbers { get; }
    public static RoutedUICommand ToggleShowOutlining { get; }
    public static RoutedUICommand ToggleToolBar { get; }
    public static RoutedUICommand ToggleVerticalAddOnPane { get; }
    public static RoutedUICommand Undo { get; }
    public static RoutedUICommand UpdateHelp { get; }
    public static RoutedUICommand ZoomIn { get; }
    public static RoutedUICommand ZoomOut { get; }
    public static RoutedUICommand get_OpenMruFile();
    public static RoutedUICommand get_GoToMatch();
    public static RoutedUICommand get_Find();
    public static RoutedUICommand get_Replace();
    public static RoutedUICommand get_NewScript();
    public static RoutedUICommand get_OpenScript();
    public static RoutedUICommand get_SaveScript();
    public static RoutedUICommand get_SaveScriptAs();
    public static RoutedUICommand get_CloseScript();
    public static RoutedUICommand get_Undo();
    public static RoutedUICommand get_Redo();
    public static RoutedUICommand get_Cut();
    public static RoutedUICommand get_Copy();
    public static RoutedUICommand get_Paste();
    public static RoutedUICommand get_Help();
    public static RoutedUICommand get_SelectAll();
    public static RoutedUICommand get_ZoomIn();
    public static RoutedUICommand get_ZoomOut();
    public static RoutedUICommand get_GoToLine();
    public static RoutedUICommand get_StartPowerShell();
    public static RoutedUICommand get_ToggleToolBar();
    public static RoutedUICommand get_ToggleScriptingPane();
    public static RoutedUICommand get_ToggleHorizontalAddOnPane();
    public static RoutedUICommand get_ToggleVerticalAddOnPane();
    public static RoutedUICommand get_MoveHorizontalAddOnToolToVertical();
    public static RoutedUICommand get_MoveVerticalAddOnToolToHorizontal();
    public static RoutedUICommand get_GoToSelectedVerticalAddOnTool();
    public static RoutedUICommand get_GoToSelectedHorizontalAddOnTool();
    public static RoutedUICommand get_ShowAndSelectAddOnTool();
    public static RoutedUICommand get_HideHorizontalAddOnTool();
    public static RoutedUICommand get_HideVerticalAddOnTool();
    public static RoutedUICommand get_ShowScriptPaneMaximized();
    public static RoutedUICommand get_ShowScriptPaneTop();
    public static RoutedUICommand get_ShowScriptPaneRight();
    public static RoutedUICommand get_GoToConsolePane();
    public static RoutedUICommand get_ApplicationExit();
    public static RoutedUICommand get_GoToEditor();
    public static RoutedUICommand get_NewRemotePowerShellTab();
    public static RoutedUICommand get_OpenOptionsDialog();
    public static RoutedUICommand get_FindNext();
    public static RoutedUICommand get_FindPrevious();
    public static RoutedUICommand get_ReplaceAllCmd();
    public static RoutedUICommand get_ClearOutput();
    public static RoutedUICommand get_MoveScriptToTopOrRightCmd();
    public static RoutedUICommand get_RunScript();
    public static RoutedUICommand get_RunSelection();
    public static RoutedUICommand get_StopExecution();
    public static RoutedUICommand get_NewRunspaceCmd();
    public static RoutedUICommand get_CloseRunspaceCmd();
    public static RoutedUICommand get_ShowRunspaceCmd();
    public static RoutedUICommand get_CustomScriptCmd();
    public static RoutedUICommand get_ShowScriptCmd();
    public static RoutedUICommand get_StepInto();
    public static RoutedUICommand get_StepOver();
    public static RoutedUICommand get_StepOut();
    public static RoutedUICommand get_ResumeDebugger();
    public static RoutedUICommand get_BreakAllDebugger();
    public static RoutedUICommand get_StopDebugger();
    public static RoutedUICommand get_ToggleBreakpoint();
    public static RoutedUICommand get_RemoveAllBreakpoints();
    public static RoutedUICommand get_EnableAllBreakpoints();
    public static RoutedUICommand get_DisableAllBreakpoints();
    public static RoutedUICommand get_GetCallStack();
    public static RoutedUICommand get_ListBreakpoints();
    public static RoutedUICommand get_StartIntellisense();
    public static RoutedUICommand get_ToggleShowOutlining();
    public static RoutedUICommand get_ToggleEmbeddedCommands();
    public static RoutedUICommand get_ToggleShowLineNumbers();
    public static RoutedUICommand get_ToggleOutliningExpandCollapseAll();
    public static RoutedUICommand get_UpdateHelp();
    public static RoutedUICommand get_ShowSnippet();
    public static RoutedUICommand get_AboutAddOnTools();
    public static RoutedUICommand get_ShowPopupCommand();
    public static RoutedUICommand get_ScriptBrowserAddOnCommand();
    public static RoutedUICommand get_ModuleBrowserAddOnCommand();
    public static RoutedUICommand get_ScriptAnalyzerAddOnCommand();
}
public class Microsoft.Windows.PowerShell.Gui.Internal.EditorTabControl : TabControl {
    protected virtual void OnItemsChanged(NotifyCollectionChangedEventArgs e);
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.FindAndReplaceDialog : Window {
    public void SetFindMode(bool findMode);
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public static class Microsoft.Windows.PowerShell.Gui.Internal.HostGuiAutomationNames : object {
    public static string CancelName;
    public static string FixedWidthCheckBoxAutomationName;
    public static string InputDescription;
    public static string InputHelpMessage;
    public static string ManageThemesButtonAutomationName;
    public static string OkName;
    public static string OptionsWindowApplyButtonAutomationName;
    public static string OptionsWindowAutoSaveTextBoxAutomationName;
    public static string OptionsWindowCancelButtonAutomationName;
    public static string OptionsWindowEnterSelectsIntellisenseCheckBox2AutomationName;
    public static string OptionsWindowEnterSelectsIntellisenseCheckBoxAutomationName;
    public static string OptionsWindowFontFamilyComboBoxAutomationName;
    public static string OptionsWindowFontSizeComboBoxAutomationName;
    public static string OptionsWindowOkButtonAutomationName;
    public static string OptionsWindowPositionComboBoxAutomationName;
    public static string OptionsWindowPromptToSaveBeforeRunCheckBoxAutomationName;
    public static string OptionsWindowRecentFilesTextBoxAutomationName;
    public static string OptionsWindowRestoreButtonAutomationName;
    public static string OptionsWindowSampleRichTextBoxAutomationName;
    public static string OptionsWindowShowInTheConsolePaneCheckBoxAutomationName;
    public static string OptionsWindowShowInTheScriptPaneCheckBoxAutomationName;
    public static string OptionsWindowShowLineNumbersCheckBoxAutomationName;
    public static string OptionsWindowShowOutliningCheckBoxAutomationName;
    public static string OptionsWindowShowToolBarCheckBoxAutomationName;
    public static string OptionsWindowTimeoutInSecondsComboBoxAutomationName;
    public static string OptionsWindowUseDefaultSnippetsCheckBoxAutomationName;
    public static string OptionsWindowUseLocalHelpCheckBoxAutomationName;
    public static string OptionsWindowWarnAboutDuplicateFilesCheckBoxAutomationName;
    public static string PasswordInput;
    public static string TextInput;
}
public static class Microsoft.Windows.PowerShell.Gui.Internal.HostGuiNLStrings : object {
    public static string BangBang;
    public static string BangDollarNull;
    public static string BangHelp;
    public static string BangQuotes;
    public static string DollarNull;
    public static string HostName;
}
public static class Microsoft.Windows.PowerShell.Gui.Internal.HostGuiStrings : object {
    public static string Cancel;
    public static string CaptionDashMessage;
    public static string CloseButtonTitle;
    public static string CredentialTitle;
    public static string DebugFormat;
    public static string Input;
    public static string IntegerRequired;
    public static string Ok;
    public static string ProgressRecordFullDescription;
    public static string ProgressRecordNoOperation;
    public static string ProgressRecordNoTime;
    public static string ProgressRecordNoTimeAndNoOperation;
    public static string PromptCommandsToolTip;
    public static string VerboseFormat;
    public static string WarningFormat;
}
public class Microsoft.Windows.PowerShell.Gui.Internal.HostTextWriter : TextWriter {
    public Encoding Encoding { get; }
    public virtual Encoding get_Encoding();
    public static void RegisterHost(PSHostUserInterface host);
    public virtual void Write(string value);
    public virtual void WriteLine(string value);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.InternalPropertyBindingConverter : object {
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.MainWindow : Window {
    protected virtual void OnMouseWheel(MouseWheelEventArgs e);
    protected virtual void OnPreviewDragEnter(DragEventArgs e);
    protected virtual void OnPreviewDrop(DragEventArgs e);
    protected virtual void OnPreviewDragOver(DragEventArgs e);
    protected virtual void OnPreviewKeyDown(KeyEventArgs e);
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.ManageThemesWindow : Window {
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.NewRemotePowerShellTabDialog : Window {
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public static class Microsoft.Windows.PowerShell.Gui.Internal.OptionsGuiStrings : object {
    public static string OptionsColorPickerBlueLabelContent;
    public static string OptionsColorPickerGreenLabelContent;
    public static string OptionsColorPickerHexadecimalRadioButtonContent;
    public static string OptionsColorPickerRedLabelContent;
    public static string OptionsErrorsInGeneralSettingsMessage;
    public static string OptionsErrorsInThemeImport;
    public static string OptionsInvalidFontInThemeFile;
    public static string OptionsInvalidFontSizeInThemeFile;
    public static string OptionsManageThemesCancelButtonContent;
    public static string OptionsManageThemesDeleteButtonContent;
    public static string OptionsManageThemesExportButtonContent;
    public static string OptionsManageThemesImportButtonContent;
    public static string OptionsManageThemesRenameButtonContent;
    public static string OptionsManageThemesRenameToBlankMessage;
    public static string OptionsManageThemesWindowTitle;
    public static string OptionsMostRecentlyUsedOutOfRangeMessage;
    public static string OptionsOverwritePresetThemeTemplate;
    public static string OptionsReallyResetMessage;
    public static string OptionsReallyResetTitle;
    public static string OptionsRenameFailedMessage;
    public static string OptionsSampleCharacterData;
    public static string OptionsSampleLength;
    public static string OptionsSampleOutputText;
    public static string OptionsSamplePowerShellComment;
    public static string OptionsSampleQuotedString;
    public static string OptionsSampleThisIsAWarning;
    public static string OptionsSampleThisIsAnError;
    public static string OptionsSampleThisIsDebugOutput;
    public static string OptionsSampleThisIsVerboseOutput;
    public static string OptionsSampleXmlComment;
    public static string OptionsSampleXmlText;
    public static string OptionsTextInScriptPaneExample;
    public static string OptionsThemeNameDarkDark;
    public static string OptionsThemeNameDarkLight;
    public static string OptionsThemeNameLightDark;
    public static string OptionsThemeNameLightLight;
    public static string OptionsThemeNameMonochromeGreen;
    public static string OptionsThemeNamePresentation;
    public static string OptionsWindowApplyButtonContent;
    public static string OptionsWindowAttributeTreeViewItemHeader;
    public static string OptionsWindowAttributeTreeViewItemHeader2;
    public static string OptionsWindowAutoSaveIntervalInMinutesLabelContent;
    public static string OptionsWindowBackgroundTreeViewItemHeader;
    public static string OptionsWindowBackgroundTreeViewItemHeader2;
    public static string OptionsWindowBackgroundTreeViewItemHeader4;
    public static string OptionsWindowBackgroundTreeViewItemHeader5;
    public static string OptionsWindowBackgroundTreeViewItemHeader6;
    public static string OptionsWindowBackgroundTreeViewItemHeader7;
    public static string OptionsWindowCancelButtonContent;
    public static string OptionsWindowCharacterDataTreeViewItemHeader;
    public static string OptionsWindowColorsAndFontsTabItemHeader;
    public static string OptionsWindowCommandArgumentTreeViewItemHeader;
    public static string OptionsWindowCommandParameterTreeViewItemHeader;
    public static string OptionsWindowCommandTreeViewItemHeader;
    public static string OptionsWindowCommentDelimiterTreeViewItemHeader;
    public static string OptionsWindowCommentTreeViewItemHeader;
    public static string OptionsWindowCommentTreeViewItemHeader2;
    public static string OptionsWindowConsoleAttributeTreeViewItemHeader;
    public static string OptionsWindowConsoleCommandArgumentTreeViewItemHeader;
    public static string OptionsWindowConsoleCommandParameterTreeViewItemHeader;
    public static string OptionsWindowConsoleCommandTreeViewItemHeader;
    public static string OptionsWindowConsoleCommentTreeViewItemHeader;
    public static string OptionsWindowConsoleGroupEndTreeViewItemHeader;
    public static string OptionsWindowConsoleGroupStartTreeViewItemHeader;
    public static string OptionsWindowConsoleKeywordTreeViewItemHeader;
    public static string OptionsWindowConsoleLineContinuationTreeViewItemHeader;
    public static string OptionsWindowConsoleLoopLabelTreeViewItemHeader;
    public static string OptionsWindowConsoleMemberTreeViewItemHeader;
    public static string OptionsWindowConsoleNumberTreeViewItemHeader;
    public static string OptionsWindowConsoleOperatorTreeViewItemHeader;
    public static string OptionsWindowConsolePaneTreeViewItemHeader;
    public static string OptionsWindowConsoleStatementSeparatorTreeViewItemHeader;
    public static string OptionsWindowConsoleStringTreeViewItemHeader;
    public static string OptionsWindowConsoleTokensTreeViewItemHeader;
    public static string OptionsWindowConsoleTypeTreeViewItemHeader;
    public static string OptionsWindowConsoleVariableTreeViewItemHeader;
    public static string OptionsWindowCurrentThemeLabelContent;
    public static string OptionsWindowElementNameTreeViewItemHeader;
    public static string OptionsWindowEnterSelectsIntellisenseCheckBoxContent;
    public static string OptionsWindowEnterSelectsIntellisenseCheckBoxContent2;
    public static string OptionsWindowFixedWidthFontsOnlyCheckBoxContent;
    public static string OptionsWindowFontFamilyLabelContent;
    public static string OptionsWindowFontSizeLabelContent;
    public static string OptionsWindowForegroundTreeViewItemHeader;
    public static string OptionsWindowForegroundTreeViewItemHeader3;
    public static string OptionsWindowForegroundTreeViewItemHeader4;
    public static string OptionsWindowForegroundTreeViewItemHeader5;
    public static string OptionsWindowForegroundTreeViewItemHeader6;
    public static string OptionsWindowGeneralTabItemHeader;
    public static string OptionsWindowGroupEndTreeViewItemHeader;
    public static string OptionsWindowGroupStartTreeViewItemHeader;
    public static string OptionsWindowHeader;
    public static string OptionsWindowIntellisenseGroupBoxHeader;
    public static string OptionsWindowKeywordTreeViewItemHeader;
    public static string OptionsWindowLineContinuationTreeViewItemHeader;
    public static string OptionsWindowLoopLabelTreeViewItemHeader;
    public static string OptionsWindowManageThemesButtonContent;
    public static string OptionsWindowMarkupExtensionTreeViewItemHeader;
    public static string OptionsWindowMaximizedComboBoxItemContent;
    public static string OptionsWindowMemberTreeViewItemHeader;
    public static string OptionsWindowNumberTreeViewItemHeader;
    public static string OptionsWindowOkButtonContent;
    public static string OptionsWindowOperatorTreeViewItemHeader;
    public static string OptionsWindowOtherSettingsGroupBoxHeader;
    public static string OptionsWindowOutputStreamsTreeViewItemHeader;
    public static string OptionsWindowPositionLabelContent;
    public static string OptionsWindowPromptToSaveBeforeRunCheckBoxContent;
    public static string OptionsWindowQuoteTreeViewItemHeader;
    public static string OptionsWindowQuotedStringTreeViewItemHeader;
    public static string OptionsWindowRecentFilesToShowLabelContent;
    public static string OptionsWindowRestoreDefaultsButtonContent;
    public static string OptionsWindowRightComboBoxItemContent;
    public static string OptionsWindowSampleGroupBoxHeader;
    public static string OptionsWindowScriptPaneBehaviorGroupBoxHeader;
    public static string OptionsWindowScriptPaneTokensTreeViewItemHeader;
    public static string OptionsWindowScriptPaneTreeViewItemHeader;
    public static string OptionsWindowShowInTheConsolePaneCheckBoxContent;
    public static string OptionsWindowShowInTheScriptPaneCheckBoxContent;
    public static string OptionsWindowShowLineNumbersCheckBoxContent;
    public static string OptionsWindowShowOutliningCheckBoxContent;
    public static string OptionsWindowShowToolBarCheckBoxContent;
    public static string OptionsWindowStatementSeparatorTreeViewItemHeader;
    public static string OptionsWindowStringTreeViewItemHeader;
    public static string OptionsWindowTagTreeViewItemHeader;
    public static string OptionsWindowTextBackgroundTreeViewItemHeader;
    public static string OptionsWindowTextTreeViewItemHeader;
    public static string OptionsWindowTimeoutInSecondsLabelContent;
    public static string OptionsWindowTopComboBoxItemContent;
    public static string OptionsWindowTypeTreeViewItemHeader;
    public static string OptionsWindowUseDefaultSnippetsCheckBoxContent;
    public static string OptionsWindowUseLocalHelpCheckBoxContent;
    public static string OptionsWindowVariableTreeViewItemHeader;
    public static string OptionsWindowWarnAboutDuplicateFilesCheckBoxContent;
    public static string OptionsWindowXmlTokensTreeViewItemHeader;
}
public class Microsoft.Windows.PowerShell.Gui.Internal.OptionsWindow : Window {
    public OptionsWindow(ISEOptions initialOptions);
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.OutputControl : UserControl {
    public static DependencyProperty ContentProperty;
    public object Content { get; public set; }
    public object get_Content();
    public void set_Content(object value);
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public static class Microsoft.Windows.PowerShell.Gui.Internal.Program : object {
    public static int Initialize();
    public static void OpenFiles(List`1<string> fileNames);
    public static void ShowMainWindow(List`1<string> filesToOpen, bool mta, bool noProfile, SendOrPostCallback loadedCallback);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.ProgressBarInformation : object {
    public string Description { get; }
    public int FontSize { get; }
    public int PercentComplete { get; }
    public Thickness ProgressMargin { get; }
    public ProgressRecord ProgressRecord { get; }
    public Thickness TextMargin { get; }
    public ProgressBarInformation(long sourceId, ProgressRecord progressRecord);
    public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public int get_FontSize();
    public int get_PercentComplete();
    public string get_Description();
    public ProgressRecord get_ProgressRecord();
    public Thickness get_ProgressMargin();
    public Thickness get_TextMargin();
}
public class Microsoft.Windows.PowerShell.Gui.Internal.ProgressControl : UserControl {
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.PromptForChoiceDialog : Window {
    public int Result { get; }
    public int get_Result();
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.ReadLineDialog : Window {
    public bool IsSecure { get; }
    public object ResultObject { get; }
    public Type TargetType { get; }
    public bool get_IsSecure();
    public object get_ResultObject();
    public Type get_TargetType();
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.RunspaceControl : UserControl {
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.RunspaceTabControl : TabControl {
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IStyleConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.ScriptExpander : UserControl {
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.ShowCommandAddOnControl : UserControl {
    public ObjectModelRoot HostObject { get; public set; }
    public sealed virtual ObjectModelRoot get_HostObject();
    public sealed virtual void set_HostObject(ObjectModelRoot value);
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.SkippableMessageBox : Window {
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
public class Microsoft.Windows.PowerShell.Gui.Internal.StatusAndSizingBar : UserControl {
    public sealed virtual void InitializeComponent();
    [EditorBrowsableAttribute("1")]
private sealed virtual override void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.Windows.PowerShell.Gui.Internal.StorableColorTheme : object {
    public string FontFamily { get; public set; }
    public int FontSize { get; public set; }
    public Color Item { get; public set; }
    public Color Item { get; }
    public Collection`1<string> Keys { get; }
    public string Name { get; public set; }
    public Collection`1<Color> Values { get; }
    public Collection`1<string> get_Keys();
    public Collection`1<Color> get_Values();
    public string get_Name();
    public void set_Name(string value);
    public string get_FontFamily();
    public void set_FontFamily(string value);
    public int get_FontSize();
    public void set_FontSize(int value);
    public Color get_Item(string key);
    public void set_Item(string key, Color value);
    public Color get_Item(string key, Color defaultColor);
    public static bool op_Equality(StorableColorTheme left, StorableColorTheme right);
    public static bool op_Inequality(StorableColorTheme left, StorableColorTheme right);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public static class Microsoft.Windows.PowerShell.Gui.Internal.ToolTipStrings : object {
    public static string ClearConsoleTooltip;
    public static string CloseTool;
    public static string CopyTooltip;
    public static string CutTooltip;
    public static string HideAddOnToolsPane;
    public static string HideScriptPaneTooltip;
    public static string MoveScriptPaneRight;
    public static string MoveScriptPaneUp;
    public static string NewScriptTooltip;
    public static string OpenScriptTooltip;
    public static string PasteTooltip;
    public static string PromptTooltip;
    public static string RedoTooltip;
    public static string RunCommandTooltip;
    public static string RunScriptTooltip;
    public static string RunSelectionTooltip;
    public static string SaveScriptTooltip;
    public static string StartPowerShellInASeparateWindow;
    public static string StopExecutionTooltip;
    public static string UndoTooltip;
    public static string Zoom;
}
[EditorBrowsableAttribute("1")]
public class XamlGeneratedNamespace.GeneratedInternalTypeHelper : InternalTypeHelper {
    protected virtual object CreateInstance(Type type, CultureInfo culture);
    protected virtual object GetPropertyValue(PropertyInfo propertyInfo, object target, CultureInfo culture);
    protected virtual void SetPropertyValue(PropertyInfo propertyInfo, object target, object value, CultureInfo culture);
    protected virtual Delegate CreateDelegate(Type delegateType, object target, string handler);
    protected virtual void AddEventHandler(EventInfo eventInfo, object target, Delegate handler);
}
