[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class AddMember : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class AddTypeStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class AliasCommandStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class ConvertFromStringData : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class ConvertHTMLStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class ConvertMarkdownStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class CsvCommandStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Debugger : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class EventingStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class FormatAndOut_out_gridview : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class GetMember : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class GetRandomCommandStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class GetUptimeStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class HostStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class HttpCommandStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class ImplicitRemotingStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class ImportLocalizedDataStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class MatchStringStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class MeasureObjectStrings : object {
}
[CmdletAttribute("Add", "Member")]
public class Microsoft.PowerShell.Commands.AddMemberCommand : PSCmdlet {
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public PSMemberTypes MemberType { get; public set; }
    [ParameterAttribute]
public string Name { get; public set; }
    [ParameterAttribute]
public object Value { get; public set; }
    [ParameterAttribute]
public object SecondValue { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string TypeName { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [ParameterAttribute]
[ValidateNotePropertyNameAttribute]
[NotePropertyTransformationAttribute]
[ValidateNotNullOrEmptyAttribute]
public string NotePropertyName { get; public set; }
    [ParameterAttribute]
[AllowNullAttribute]
public object NotePropertyValue { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public IDictionary NotePropertyMembers { get; public set; }
    public PSObject get_InputObject();
    public void set_InputObject(PSObject value);
    public PSMemberTypes get_MemberType();
    public void set_MemberType(PSMemberTypes value);
    public string get_Name();
    public void set_Name(string value);
    public object get_Value();
    public void set_Value(object value);
    public object get_SecondValue();
    public void set_SecondValue(object value);
    public string get_TypeName();
    public void set_TypeName(string value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public SwitchParameter get_PassThru();
    public void set_PassThru(SwitchParameter value);
    public string get_NotePropertyName();
    public void set_NotePropertyName(string value);
    public object get_NotePropertyValue();
    public void set_NotePropertyValue(object value);
    public IDictionary get_NotePropertyMembers();
    public void set_NotePropertyMembers(IDictionary value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Add", "Type")]
[OutputTypeAttribute("System.Type")]
public class Microsoft.PowerShell.Commands.AddTypeCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateTrustedDataAttribute]
public string TypeDefinition { get; public set; }
    [ParameterAttribute]
[ValidateTrustedDataAttribute]
public string Name { get; public set; }
    [ParameterAttribute]
public String[] MemberDefinition { get; public set; }
    [ParameterAttribute]
[AllowNullAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string Namespace { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] UsingNamespace { get; public set; }
    [ParameterAttribute]
[ValidateTrustedDataAttribute]
public String[] Path { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateTrustedDataAttribute]
public String[] LiteralPath { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateTrustedDataAttribute]
public String[] AssemblyName { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public Language Language { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] ReferencedAssemblies { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string OutputAssembly { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public OutputAssemblyType OutputType { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
public SwitchParameter IgnoreWarnings { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] CompilerOptions { get; public set; }
    public string get_TypeDefinition();
    public void set_TypeDefinition(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public String[] get_MemberDefinition();
    public void set_MemberDefinition(String[] value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public String[] get_UsingNamespace();
    [CompilerGeneratedAttribute]
public void set_UsingNamespace(String[] value);
    public String[] get_Path();
    public void set_Path(String[] value);
    public String[] get_LiteralPath();
    public void set_LiteralPath(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_AssemblyName();
    [CompilerGeneratedAttribute]
public void set_AssemblyName(String[] value);
    [CompilerGeneratedAttribute]
public Language get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(Language value);
    public String[] get_ReferencedAssemblies();
    public void set_ReferencedAssemblies(String[] value);
    public string get_OutputAssembly();
    public void set_OutputAssembly(string value);
    [CompilerGeneratedAttribute]
public OutputAssemblyType get_OutputType();
    [CompilerGeneratedAttribute]
public void set_OutputType(OutputAssemblyType value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_PassThru();
    [CompilerGeneratedAttribute]
public void set_PassThru(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_IgnoreWarnings();
    [CompilerGeneratedAttribute]
public void set_IgnoreWarnings(SwitchParameter value);
    [CompilerGeneratedAttribute]
public String[] get_CompilerOptions();
    [CompilerGeneratedAttribute]
public void set_CompilerOptions(String[] value);
    protected virtual void BeginProcessing();
    protected virtual void EndProcessing();
}
internal class Microsoft.PowerShell.Commands.ArgumentToTypeNameTransformationAttribute : ArgumentTransformationAttribute {
    public virtual object Transform(EngineIntrinsics engineIntrinsics, object inputData);
}
public abstract class Microsoft.PowerShell.Commands.BaseCsvWritingCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullAttribute]
public char Delimiter { get; public set; }
    [ParameterAttribute]
public SwitchParameter UseCulture { get; public set; }
    public PSObject InputObject { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public SwitchParameter IncludeTypeInformation { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public SwitchParameter NoTypeInformation { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] QuoteFields { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public QuoteKind UseQuotes { get; public set; }
    [ParameterAttribute]
public SwitchParameter NoHeader { get; public set; }
    [CompilerGeneratedAttribute]
public char get_Delimiter();
    [CompilerGeneratedAttribute]
public void set_Delimiter(char value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_UseCulture();
    [CompilerGeneratedAttribute]
public void set_UseCulture(SwitchParameter value);
    public abstract virtual PSObject get_InputObject();
    public abstract virtual void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_IncludeTypeInformation();
    [CompilerGeneratedAttribute]
public void set_IncludeTypeInformation(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_NoTypeInformation();
    [CompilerGeneratedAttribute]
public void set_NoTypeInformation(SwitchParameter value);
    [CompilerGeneratedAttribute]
public String[] get_QuoteFields();
    [CompilerGeneratedAttribute]
public void set_QuoteFields(String[] value);
    [CompilerGeneratedAttribute]
public QuoteKind get_UseQuotes();
    [CompilerGeneratedAttribute]
public void set_UseQuotes(QuoteKind value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_NoHeader();
    [CompilerGeneratedAttribute]
public void set_NoHeader(SwitchParameter value);
    public virtual void WriteCsvLine(string line);
    protected virtual void BeginProcessing();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.PowerShell.Commands.BasicHtmlWebResponseObject : WebResponseObject {
    public string Content { get; }
    [NullableAttribute("2")]
public Encoding Encoding { get; }
    public WebCmdletElementCollection InputFields { get; }
    public WebCmdletElementCollection Links { get; }
    public WebCmdletElementCollection Images { get; }
    public BasicHtmlWebResponseObject(HttpResponseMessage response, TimeSpan perReadTimeout, CancellationToken cancellationToken);
    public BasicHtmlWebResponseObject(HttpResponseMessage response, Stream contentStream, TimeSpan perReadTimeout, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public string get_Content();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Encoding get_Encoding();
    public WebCmdletElementCollection get_InputFields();
    public WebCmdletElementCollection get_Links();
    public WebCmdletElementCollection get_Images();
    [MemberNotNullAttribute("Content")]
protected void InitializeContent(CancellationToken cancellationToken);
}
public enum Microsoft.PowerShell.Commands.BreakpointType : Enum {
    public int value__;
    public static BreakpointType Line;
    public static BreakpointType Variable;
    public static BreakpointType Command;
}
public class Microsoft.PowerShell.Commands.ByteCollection : object {
    [ObsoleteAttribute("The property is deprecated, please use Offset64 instead.", "True")]
public UInt32 Offset { get; }
    public ulong Offset64 { get; }
    public Byte[] Bytes { get; }
    public string Path { get; }
    public string HexOffset { get; }
    public string Label { get; }
    public string HexBytes { get; }
    public string Ascii { get; }
    [ObsoleteAttribute("The constructor is deprecated.", "True")]
public ByteCollection(UInt32 offset, Byte[] value, string path);
    public ByteCollection(ulong offset, Byte[] value, string path);
    [ObsoleteAttribute("The constructor is deprecated.", "True")]
public ByteCollection(UInt32 offset, Byte[] value);
    public ByteCollection(ulong offset, Byte[] value);
    public ByteCollection(ulong offset, string label, Byte[] value);
    public ByteCollection(Byte[] value);
    public UInt32 get_Offset();
    [CompilerGeneratedAttribute]
public ulong get_Offset64();
    [CompilerGeneratedAttribute]
public Byte[] get_Bytes();
    [CompilerGeneratedAttribute]
public string get_Path();
    public string get_HexOffset();
    [CompilerGeneratedAttribute]
public string get_Label();
    public string get_HexBytes();
    public string get_Ascii();
    public virtual string ToString();
}
[CmdletAttribute("Clear", "Variable")]
[OutputTypeAttribute("System.Management.Automation.PSVariable")]
public class Microsoft.PowerShell.Commands.ClearVariableCommand : VariableCommandBase {
    [ParameterAttribute]
public String[] Name { get; public set; }
    [ParameterAttribute]
public String[] Include { get; public set; }
    [ParameterAttribute]
public String[] Exclude { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(String[] value);
    public String[] get_Include();
    public void set_Include(String[] value);
    public String[] get_Exclude();
    public void set_Exclude(String[] value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public SwitchParameter get_PassThru();
    public void set_PassThru(SwitchParameter value);
    protected virtual void ProcessRecord();
}
internal abstract class Microsoft.PowerShell.Commands.ColumnInfo : object {
    protected string displayName;
    protected string staleObjectPropertyName;
    internal abstract virtual object GetValue(PSObject liveObject);
}
public abstract class Microsoft.PowerShell.Commands.CommonRunspaceCommandBase : PSCmdlet {
    protected static string RunspaceParameterSet;
    protected static string RunspaceNameParameterSet;
    protected static string RunspaceIdParameterSet;
    protected static string RunspaceInstanceIdParameterSet;
    protected static string ProcessNameParameterSet;
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] RunspaceName { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public Runspace[] Runspace { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public Int32[] RunspaceId { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public Guid[] RunspaceInstanceId { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string ProcessName { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] AppDomainName { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_RunspaceName();
    [CompilerGeneratedAttribute]
public void set_RunspaceName(String[] value);
    [CompilerGeneratedAttribute]
public Runspace[] get_Runspace();
    [CompilerGeneratedAttribute]
public void set_Runspace(Runspace[] value);
    [CompilerGeneratedAttribute]
public Int32[] get_RunspaceId();
    [CompilerGeneratedAttribute]
public void set_RunspaceId(Int32[] value);
    [CompilerGeneratedAttribute]
public Guid[] get_RunspaceInstanceId();
    [CompilerGeneratedAttribute]
public void set_RunspaceInstanceId(Guid[] value);
    [CompilerGeneratedAttribute]
public string get_ProcessName();
    [CompilerGeneratedAttribute]
public void set_ProcessName(string value);
    [CompilerGeneratedAttribute]
public String[] get_AppDomainName();
    [CompilerGeneratedAttribute]
public void set_AppDomainName(String[] value);
    protected IReadOnlyList`1<Runspace> GetRunspaces();
    protected Debugger GetDebuggerFromRunspace(Runspace runspace);
    protected void SetDebugPreferenceHelper(string processName, String[] appDomainName, bool enable, string fullyQualifiedErrorId);
}
[CmdletAttribute("Compare", "Object")]
public class Microsoft.PowerShell.Commands.CompareObjectCommand : ObjectCmdletBase {
    [ParameterAttribute]
[AllowEmptyCollectionAttribute]
public PSObject[] ReferenceObject { get; public set; }
    [ParameterAttribute]
[AllowEmptyCollectionAttribute]
public PSObject[] DifferenceObject { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int SyncWindow { get; public set; }
    [ParameterAttribute]
public Object[] Property { get; public set; }
    [ParameterAttribute]
public SwitchParameter ExcludeDifferent { get; public set; }
    [ParameterAttribute]
public SwitchParameter IncludeEqual { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [CompilerGeneratedAttribute]
public PSObject[] get_ReferenceObject();
    [CompilerGeneratedAttribute]
public void set_ReferenceObject(PSObject[] value);
    [CompilerGeneratedAttribute]
public PSObject[] get_DifferenceObject();
    [CompilerGeneratedAttribute]
public void set_DifferenceObject(PSObject[] value);
    [CompilerGeneratedAttribute]
public int get_SyncWindow();
    [CompilerGeneratedAttribute]
public void set_SyncWindow(int value);
    [CompilerGeneratedAttribute]
public Object[] get_Property();
    [CompilerGeneratedAttribute]
public void set_Property(Object[] value);
    public SwitchParameter get_ExcludeDifferent();
    public void set_ExcludeDifferent(SwitchParameter value);
    public SwitchParameter get_IncludeEqual();
    public void set_IncludeEqual(SwitchParameter value);
    public SwitchParameter get_PassThru();
    public void set_PassThru(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
public class Microsoft.PowerShell.Commands.ConsoleColorCmdlet : PSCmdlet {
    [ParameterAttribute]
public ConsoleColor ForegroundColor { get; public set; }
    [ParameterAttribute]
public ConsoleColor BackgroundColor { get; public set; }
    public ConsoleColor get_ForegroundColor();
    public void set_ForegroundColor(ConsoleColor value);
    public ConsoleColor get_BackgroundColor();
    public void set_BackgroundColor(ConsoleColor value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.PowerShell.Commands.ContentHelper : object {
}
[CmdletAttribute("ConvertFrom", "Csv")]
public class Microsoft.PowerShell.Commands.ConvertFromCsvCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullAttribute]
[ValidateNotNullOrEmptyAttribute]
public char Delimiter { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
[ValidateNotNullOrEmptyAttribute]
public SwitchParameter UseCulture { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
[ValidateNotNullOrEmptyAttribute]
public PSObject[] InputObject { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Header { get; public set; }
    [CompilerGeneratedAttribute]
public char get_Delimiter();
    [CompilerGeneratedAttribute]
public void set_Delimiter(char value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_UseCulture();
    [CompilerGeneratedAttribute]
public void set_UseCulture(SwitchParameter value);
    [CompilerGeneratedAttribute]
public PSObject[] get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject[] value);
    [CompilerGeneratedAttribute]
public String[] get_Header();
    [CompilerGeneratedAttribute]
public void set_Header(String[] value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
}
[CmdletAttribute("ConvertFrom", "Json")]
public class Microsoft.PowerShell.Commands.ConvertFromJsonCommand : Cmdlet {
    [ParameterAttribute]
[AllowEmptyStringAttribute]
public string InputObject { get; public set; }
    [ParameterAttribute]
public SwitchParameter AsHashtable { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("0")]
public int Depth { get; public set; }
    [ParameterAttribute]
public SwitchParameter NoEnumerate { get; public set; }
    [CompilerGeneratedAttribute]
public string get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(string value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_AsHashtable();
    [CompilerGeneratedAttribute]
public void set_AsHashtable(SwitchParameter value);
    [CompilerGeneratedAttribute]
public int get_Depth();
    [CompilerGeneratedAttribute]
public void set_Depth(int value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_NoEnumerate();
    [CompilerGeneratedAttribute]
public void set_NoEnumerate(SwitchParameter value);
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("ConvertFrom", "Markdown")]
[OutputTypeAttribute("Microsoft.PowerShell.MarkdownRender.MarkdownInfo")]
public class Microsoft.PowerShell.Commands.ConvertFromMarkdownCommand : PSCmdlet {
    [ValidateNotNullOrEmptyAttribute]
[ParameterAttribute]
public String[] Path { get; public set; }
    [ValidateNotNullOrEmptyAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public String[] LiteralPath { get; public set; }
    [ValidateNotNullOrEmptyAttribute]
[ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
public SwitchParameter AsVT100EncodedString { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_LiteralPath();
    [CompilerGeneratedAttribute]
public void set_LiteralPath(String[] value);
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_AsVT100EncodedString();
    [CompilerGeneratedAttribute]
public void set_AsVT100EncodedString(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
}
[CmdletAttribute("ConvertFrom", "StringData")]
[OutputTypeAttribute("System.Collections.Hashtable")]
public class Microsoft.PowerShell.Commands.ConvertFromStringDataCommand : PSCmdlet {
    [ParameterAttribute]
[AllowEmptyStringAttribute]
public string StringData { get; public set; }
    [ParameterAttribute]
public char Delimiter { get; public set; }
    public string get_StringData();
    public void set_StringData(string value);
    [CompilerGeneratedAttribute]
public char get_Delimiter();
    [CompilerGeneratedAttribute]
public void set_Delimiter(char value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("ConvertTo", "Csv")]
[OutputTypeAttribute("System.String")]
public class Microsoft.PowerShell.Commands.ConvertToCsvCommand : BaseCsvWritingCommand {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [CompilerGeneratedAttribute]
public virtual PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public virtual void set_InputObject(PSObject value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    public virtual void WriteCsvLine(string line);
}
[CmdletAttribute("ConvertTo", "Html")]
[OutputTypeAttribute("System.String")]
public class Microsoft.PowerShell.Commands.ConvertToHtmlCommand : PSCmdlet {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
public Object[] Property { get; public set; }
    [ParameterAttribute]
public String[] Body { get; public set; }
    [ParameterAttribute]
public String[] Head { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string Title { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[ValidateSetAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string As { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateNotNullOrEmptyAttribute]
public Uri CssUri { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public SwitchParameter Fragment { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] PostContent { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] PreContent { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public Hashtable Meta { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[ValidatePatternAttribute("^[A-Za-z0-9]\w+\S+[A-Za-z0-9]$")]
public string Charset { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public SwitchParameter Transitional { get; public set; }
    public PSObject get_InputObject();
    public void set_InputObject(PSObject value);
    public Object[] get_Property();
    public void set_Property(Object[] value);
    public String[] get_Body();
    public void set_Body(String[] value);
    public String[] get_Head();
    public void set_Head(String[] value);
    public string get_Title();
    public void set_Title(string value);
    public string get_As();
    public void set_As(string value);
    public Uri get_CssUri();
    public void set_CssUri(Uri value);
    public SwitchParameter get_Fragment();
    public void set_Fragment(SwitchParameter value);
    public String[] get_PostContent();
    public void set_PostContent(String[] value);
    public String[] get_PreContent();
    public void set_PreContent(String[] value);
    public Hashtable get_Meta();
    public void set_Meta(Hashtable value);
    public string get_Charset();
    public void set_Charset(string value);
    public SwitchParameter get_Transitional();
    public void set_Transitional(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("ConvertTo", "Json")]
[OutputTypeAttribute("System.String")]
public class Microsoft.PowerShell.Commands.ConvertToJsonCommand : PSCmdlet {
    [ParameterAttribute]
[AllowNullAttribute]
public object InputObject { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Depth { get; public set; }
    [ParameterAttribute]
public SwitchParameter Compress { get; public set; }
    [ParameterAttribute]
public SwitchParameter EnumsAsStrings { get; public set; }
    [ParameterAttribute]
public SwitchParameter AsArray { get; public set; }
    [ParameterAttribute]
public StringEscapeHandling EscapeHandling { get; public set; }
    [CompilerGeneratedAttribute]
public object get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(object value);
    public int get_Depth();
    public void set_Depth(int value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Compress();
    [CompilerGeneratedAttribute]
public void set_Compress(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_EnumsAsStrings();
    [CompilerGeneratedAttribute]
public void set_EnumsAsStrings(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_AsArray();
    [CompilerGeneratedAttribute]
public void set_AsArray(SwitchParameter value);
    [CompilerGeneratedAttribute]
public StringEscapeHandling get_EscapeHandling();
    [CompilerGeneratedAttribute]
public void set_EscapeHandling(StringEscapeHandling value);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
    protected virtual void StopProcessing();
}
[CmdletAttribute("ConvertTo", "Xml")]
[OutputTypeAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.ConvertToXmlCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Depth { get; public set; }
    [ParameterAttribute]
[AllowNullAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
public SwitchParameter NoTypeInformation { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[ValidateSetAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string As { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Depth();
    [CompilerGeneratedAttribute]
public void set_Depth(int value);
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    public SwitchParameter get_NoTypeInformation();
    public void set_NoTypeInformation(SwitchParameter value);
    [CompilerGeneratedAttribute]
public string get_As();
    [CompilerGeneratedAttribute]
public void set_As(string value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
    protected virtual void StopProcessing();
    public sealed virtual void Dispose();
}
internal class Microsoft.PowerShell.Commands.CSVHelper : object {
}
[CmdletAttribute("Debug", "Runspace")]
public class Microsoft.PowerShell.Commands.DebugRunspaceCommand : PSCmdlet {
    [ParameterAttribute]
public Runspace Runspace { get; public set; }
    [ParameterAttribute]
public string Name { get; public set; }
    [ParameterAttribute]
public int Id { get; public set; }
    [ParameterAttribute]
public Guid InstanceId { get; public set; }
    [ParameterAttribute]
public SwitchParameter BreakAll { get; public set; }
    [CompilerGeneratedAttribute]
public Runspace get_Runspace();
    [CompilerGeneratedAttribute]
public void set_Runspace(Runspace value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Guid get_InstanceId();
    [CompilerGeneratedAttribute]
public void set_InstanceId(Guid value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_BreakAll();
    [CompilerGeneratedAttribute]
public void set_BreakAll(SwitchParameter value);
    protected virtual void EndProcessing();
    protected virtual void StopProcessing();
}
[CmdletAttribute("Disable", "PSBreakpoint")]
[OutputTypeAttribute("System.Management.Automation.Breakpoint")]
public class Microsoft.PowerShell.Commands.DisablePSBreakpointCommand : PSBreakpointUpdaterCommandBase {
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [CompilerGeneratedAttribute]
public SwitchParameter get_PassThru();
    [CompilerGeneratedAttribute]
public void set_PassThru(SwitchParameter value);
    protected virtual void ProcessBreakpoint(Breakpoint breakpoint);
}
[CmdletAttribute("Disable", "RunspaceDebug")]
public class Microsoft.PowerShell.Commands.DisableRunspaceDebugCommand : CommonRunspaceCommandBase {
    protected virtual void ProcessRecord();
}
public enum Microsoft.PowerShell.Commands.DisplayHintType : Enum {
    public int value__;
    public static DisplayHintType Date;
    public static DisplayHintType Time;
    public static DisplayHintType DateTime;
}
[CmdletAttribute("Enable", "PSBreakpoint")]
[OutputTypeAttribute("System.Management.Automation.Breakpoint")]
public class Microsoft.PowerShell.Commands.EnablePSBreakpointCommand : PSBreakpointUpdaterCommandBase {
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [CompilerGeneratedAttribute]
public SwitchParameter get_PassThru();
    [CompilerGeneratedAttribute]
public void set_PassThru(SwitchParameter value);
    protected virtual void ProcessBreakpoint(Breakpoint breakpoint);
}
[CmdletAttribute("Enable", "RunspaceDebug")]
public class Microsoft.PowerShell.Commands.EnableRunspaceDebugCommand : CommonRunspaceCommandBase {
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
public SwitchParameter BreakAll { get; public set; }
    [CompilerGeneratedAttribute]
public SwitchParameter get_BreakAll();
    [CompilerGeneratedAttribute]
public void set_BreakAll(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Export", "Alias")]
[OutputTypeAttribute("System.Management.Automation.AliasInfo")]
public class Microsoft.PowerShell.Commands.ExportAliasCommand : PSCmdlet {
    [ParameterAttribute]
public string Path { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string LiteralPath { get; public set; }
    [ParameterAttribute]
public String[] Name { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [ParameterAttribute]
public ExportAliasFormat As { get; public set; }
    [ParameterAttribute]
public SwitchParameter Append { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public SwitchParameter NoClobber { get; public set; }
    [ParameterAttribute]
public string Description { get; public set; }
    [ParameterAttribute]
public string Scope { get; public set; }
    public string get_Path();
    public void set_Path(string value);
    public string get_LiteralPath();
    public void set_LiteralPath(string value);
    public String[] get_Name();
    public void set_Name(String[] value);
    public SwitchParameter get_PassThru();
    public void set_PassThru(SwitchParameter value);
    [CompilerGeneratedAttribute]
public ExportAliasFormat get_As();
    [CompilerGeneratedAttribute]
public void set_As(ExportAliasFormat value);
    public SwitchParameter get_Append();
    public void set_Append(SwitchParameter value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public SwitchParameter get_NoClobber();
    public void set_NoClobber(SwitchParameter value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
public enum Microsoft.PowerShell.Commands.ExportAliasFormat : Enum {
    public int value__;
    public static ExportAliasFormat Csv;
    public static ExportAliasFormat Script;
}
[CmdletAttribute("Export", "Clixml")]
public class Microsoft.PowerShell.Commands.ExportClixmlCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Depth { get; public set; }
    [ParameterAttribute]
public string Path { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string LiteralPath { get; public set; }
    [ParameterAttribute]
[AllowNullAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public SwitchParameter NoClobber { get; public set; }
    [ParameterAttribute]
[ArgumentToEncodingTransformationAttribute]
[ArgumentEncodingCompletionsAttribute]
[ValidateNotNullOrEmptyAttribute]
public Encoding Encoding { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Depth();
    [CompilerGeneratedAttribute]
public void set_Depth(int value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    public string get_LiteralPath();
    public void set_LiteralPath(string value);
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public SwitchParameter get_NoClobber();
    public void set_NoClobber(SwitchParameter value);
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
    protected virtual void StopProcessing();
    public sealed virtual void Dispose();
}
[CmdletAttribute("Export", "Csv")]
public class Microsoft.PowerShell.Commands.ExportCsvCommand : BaseCsvWritingCommand {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string Path { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string LiteralPath { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public SwitchParameter NoClobber { get; public set; }
    [ParameterAttribute]
[ArgumentToEncodingTransformationAttribute]
[ArgumentEncodingCompletionsAttribute]
[ValidateNotNullOrEmptyAttribute]
public Encoding Encoding { get; public set; }
    [ParameterAttribute]
public SwitchParameter Append { get; public set; }
    [CompilerGeneratedAttribute]
public virtual PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public virtual void set_InputObject(PSObject value);
    public string get_Path();
    public void set_Path(string value);
    public string get_LiteralPath();
    public void set_LiteralPath(string value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Force();
    [CompilerGeneratedAttribute]
public void set_Force(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_NoClobber();
    [CompilerGeneratedAttribute]
public void set_NoClobber(SwitchParameter value);
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Append();
    [CompilerGeneratedAttribute]
public void set_Append(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
    public virtual void WriteCsvLine(string line);
    public sealed virtual void Dispose();
}
internal class Microsoft.PowerShell.Commands.ExportCsvHelper : object {
    public sealed virtual void Dispose();
}
[CmdletAttribute("Export", "FormatData")]
public class Microsoft.PowerShell.Commands.ExportFormatDataCommand : PSCmdlet {
    [ParameterAttribute]
public ExtendedTypeDefinition[] InputObject { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string Path { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string LiteralPath { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public SwitchParameter NoClobber { get; public set; }
    [ParameterAttribute]
public SwitchParameter IncludeScriptBlock { get; public set; }
    public ExtendedTypeDefinition[] get_InputObject();
    public void set_InputObject(ExtendedTypeDefinition[] value);
    public string get_Path();
    public void set_Path(string value);
    public string get_LiteralPath();
    public void set_LiteralPath(string value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public SwitchParameter get_NoClobber();
    public void set_NoClobber(SwitchParameter value);
    public SwitchParameter get_IncludeScriptBlock();
    public void set_IncludeScriptBlock(SwitchParameter value);
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("Export", "PSSession")]
[OutputTypeAttribute("System.IO.FileInfo")]
public class Microsoft.PowerShell.Commands.ExportPSSessionCommand : ImplicitRemotingCommandBase {
    public static Version VersionOfScriptGenerator { get; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string OutputModule { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
[ArgumentToEncodingTransformationAttribute]
[ArgumentEncodingCompletionsAttribute]
[ValidateNotNullOrEmptyAttribute]
public Encoding Encoding { get; public set; }
    public static Version get_VersionOfScriptGenerator();
    [CompilerGeneratedAttribute]
public string get_OutputModule();
    [CompilerGeneratedAttribute]
public void set_OutputModule(string value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    protected virtual void BeginProcessing();
}
internal class Microsoft.PowerShell.Commands.ExpressionColumnInfo : ColumnInfo {
    internal virtual object GetValue(PSObject liveObject);
}
public class Microsoft.PowerShell.Commands.FileHashInfo : object {
    public string Algorithm { get; public set; }
    public string Hash { get; public set; }
    public string Path { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Algorithm();
    [CompilerGeneratedAttribute]
public void set_Algorithm(string value);
    [CompilerGeneratedAttribute]
public string get_Hash();
    [CompilerGeneratedAttribute]
public void set_Hash(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
}
[CmdletAttribute("Format", "Custom")]
[OutputTypeAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.FormatCustomCommand : OuterFormatShapeCommandBase {
    [ParameterAttribute]
public Object[] Property { get; public set; }
    [ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
[ParameterAttribute]
public int Depth { get; public set; }
    public Object[] get_Property();
    public void set_Property(Object[] value);
    public int get_Depth();
    public void set_Depth(int value);
    internal virtual FormattingCommandLineParameters GetCommandLineParameters();
}
[CmdletAttribute("Format", "Hex")]
[OutputTypeAttribute("Microsoft.PowerShell.Commands.ByteCollection")]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.FormatHex : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Path { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] LiteralPath { get; public set; }
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
[ArgumentToEncodingTransformationAttribute]
[ArgumentEncodingCompletionsAttribute]
[ValidateNotNullOrEmptyAttribute]
public Encoding Encoding { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("0")]
public long Count { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("1")]
public long Offset { get; public set; }
    [ParameterAttribute]
[ObsoleteAttribute("Raw parameter is deprecated.", "True")]
public SwitchParameter Raw { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_LiteralPath();
    [CompilerGeneratedAttribute]
public void set_LiteralPath(String[] value);
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public long get_Offset();
    [CompilerGeneratedAttribute]
public void set_Offset(long value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(SwitchParameter value);
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("Format", "List")]
[OutputTypeAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.FormatListCommand : OuterFormatTableAndListBase {
}
[CmdletAttribute("Format", "Table")]
[OutputTypeAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.FormatTableCommand : OuterFormatTableBase {
}
[CmdletAttribute("Format", "Wide")]
[OutputTypeAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.FormatWideCommand : OuterFormatShapeCommandBase {
    [ParameterAttribute]
public object Property { get; public set; }
    [ParameterAttribute]
public SwitchParameter AutoSize { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Column { get; public set; }
    public object get_Property();
    public void set_Property(object value);
    public SwitchParameter get_AutoSize();
    public void set_AutoSize(SwitchParameter value);
    public int get_Column();
    public void set_Column(int value);
    internal virtual FormattingCommandLineParameters GetCommandLineParameters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.PowerShell.Commands.FormObject : object {
    public string Id { get; }
    public string Method { get; }
    public string Action { get; }
    public Dictionary`2<string, string> Fields { get; }
    public FormObject(string id, string method, string action);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Fields();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DefaultMemberAttribute("Item")]
public class Microsoft.PowerShell.Commands.FormObjectCollection : Collection`1<FormObject> {
    [NullableAttribute("2")]
public FormObject Item { get; }
    public FormObject get_Item(string key);
}
public class Microsoft.PowerShell.Commands.GenericMeasureInfo : MeasureInfo {
    public int Count { get; public set; }
    public Nullable`1<double> Average { get; public set; }
    public Nullable`1<double> Sum { get; public set; }
    public Nullable`1<double> Maximum { get; public set; }
    public Nullable`1<double> Minimum { get; public set; }
    public Nullable`1<double> StandardDeviation { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Average();
    [CompilerGeneratedAttribute]
public void set_Average(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Sum();
    [CompilerGeneratedAttribute]
public void set_Sum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Maximum();
    [CompilerGeneratedAttribute]
public void set_Maximum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Minimum();
    [CompilerGeneratedAttribute]
public void set_Minimum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_StandardDeviation();
    [CompilerGeneratedAttribute]
public void set_StandardDeviation(Nullable`1<double> value);
}
public class Microsoft.PowerShell.Commands.GenericObjectMeasureInfo : MeasureInfo {
    public int Count { get; public set; }
    public Nullable`1<double> Average { get; public set; }
    public Nullable`1<double> Sum { get; public set; }
    public object Maximum { get; public set; }
    public object Minimum { get; public set; }
    public Nullable`1<double> StandardDeviation { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Average();
    [CompilerGeneratedAttribute]
public void set_Average(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Sum();
    [CompilerGeneratedAttribute]
public void set_Sum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public object get_Maximum();
    [CompilerGeneratedAttribute]
public void set_Maximum(object value);
    [CompilerGeneratedAttribute]
public object get_Minimum();
    [CompilerGeneratedAttribute]
public void set_Minimum(object value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_StandardDeviation();
    [CompilerGeneratedAttribute]
public void set_StandardDeviation(Nullable`1<double> value);
}
[CmdletAttribute("Get", "Alias")]
[OutputTypeAttribute("System.Management.Automation.AliasInfo")]
public class Microsoft.PowerShell.Commands.GetAliasCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Name { get; public set; }
    [ParameterAttribute]
public String[] Exclude { get; public set; }
    [ParameterAttribute]
public string Scope { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Definition { get; public set; }
    public String[] get_Name();
    public void set_Name(String[] value);
    public String[] get_Exclude();
    public void set_Exclude(String[] value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public String[] get_Definition();
    [CompilerGeneratedAttribute]
public void set_Definition(String[] value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "Culture")]
[OutputTypeAttribute("System.Globalization.CultureInfo")]
public class Microsoft.PowerShell.Commands.GetCultureCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateSetAttribute("Microsoft.PowerShell.Commands.ValidateCultureNamesGenerator")]
[ValidateNotNullAttribute]
public String[] Name { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public SwitchParameter NoUserOverrides { get; public set; }
    [ParameterAttribute]
public SwitchParameter ListAvailable { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(String[] value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_NoUserOverrides();
    [CompilerGeneratedAttribute]
public void set_NoUserOverrides(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_ListAvailable();
    [CompilerGeneratedAttribute]
public void set_ListAvailable(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "Date")]
[OutputTypeAttribute("System.String")]
[OutputTypeAttribute("System.DateTime")]
public class Microsoft.PowerShell.Commands.GetDateCommand : Cmdlet {
    [ParameterAttribute]
[ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public DateTime Date { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public long UnixTimeSeconds { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Year { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Month { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Day { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Hour { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Minute { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Second { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Millisecond { get; public set; }
    [ParameterAttribute]
public DisplayHintType DisplayHint { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public string UFormat { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ArgumentCompletionsAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string Format { get; public set; }
    [ParameterAttribute]
public SwitchParameter AsUTC { get; public set; }
    public DateTime get_Date();
    public void set_Date(DateTime value);
    public long get_UnixTimeSeconds();
    public void set_UnixTimeSeconds(long value);
    public int get_Year();
    public void set_Year(int value);
    public int get_Month();
    public void set_Month(int value);
    public int get_Day();
    public void set_Day(int value);
    public int get_Hour();
    public void set_Hour(int value);
    public int get_Minute();
    public void set_Minute(int value);
    public int get_Second();
    public void set_Second(int value);
    public int get_Millisecond();
    public void set_Millisecond(int value);
    [CompilerGeneratedAttribute]
public DisplayHintType get_DisplayHint();
    [CompilerGeneratedAttribute]
public void set_DisplayHint(DisplayHintType value);
    [CompilerGeneratedAttribute]
public string get_UFormat();
    [CompilerGeneratedAttribute]
public void set_UFormat(string value);
    [CompilerGeneratedAttribute]
public string get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(string value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_AsUTC();
    [CompilerGeneratedAttribute]
public void set_AsUTC(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "Error")]
[OutputTypeAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.GetErrorCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Newest { get; public set; }
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public int get_Newest();
    [CompilerGeneratedAttribute]
public void set_Newest(int value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "Event")]
[OutputTypeAttribute("System.Management.Automation.PSEventArgs")]
public class Microsoft.PowerShell.Commands.GetEventCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string SourceIdentifier { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public int EventIdentifier { get; public set; }
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    public int get_EventIdentifier();
    public void set_EventIdentifier(int value);
    protected virtual void EndProcessing();
}
[CmdletAttribute("Get", "EventSubscriber")]
[OutputTypeAttribute("System.Management.Automation.PSEventSubscriber")]
public class Microsoft.PowerShell.Commands.GetEventSubscriberCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string SourceIdentifier { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public int SubscriptionId { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    [CompilerGeneratedAttribute]
public int get_SubscriptionId();
    [CompilerGeneratedAttribute]
public void set_SubscriptionId(int value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Force();
    [CompilerGeneratedAttribute]
public void set_Force(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "FileHash")]
[OutputTypeAttribute("Microsoft.PowerShell.Commands.FileHashInfo")]
public class Microsoft.PowerShell.Commands.GetFileHashCommand : HashCmdletBase {
    [ParameterAttribute]
public String[] Path { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] LiteralPath { get; public set; }
    [ParameterAttribute]
public Stream InputStream { get; public set; }
    public String[] get_Path();
    public void set_Path(String[] value);
    public String[] get_LiteralPath();
    public void set_LiteralPath(String[] value);
    [CompilerGeneratedAttribute]
public Stream get_InputStream();
    [CompilerGeneratedAttribute]
public void set_InputStream(Stream value);
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("Get", "FormatData")]
[OutputTypeAttribute("System.Management.Automation.ExtendedTypeDefinition")]
public class Microsoft.PowerShell.Commands.GetFormatDataCommand : PSCmdlet {
    [ValidateNotNullOrEmptyAttribute]
[ParameterAttribute]
public String[] TypeName { get; public set; }
    [ParameterAttribute]
public Version PowerShellVersion { get; public set; }
    public String[] get_TypeName();
    public void set_TypeName(String[] value);
    [CompilerGeneratedAttribute]
public Version get_PowerShellVersion();
    [CompilerGeneratedAttribute]
public void set_PowerShellVersion(Version value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "Host")]
[OutputTypeAttribute("System.Management.Automation.Host.PSHost")]
public class Microsoft.PowerShell.Commands.GetHostCommand : PSCmdlet {
    protected virtual void BeginProcessing();
}
[CmdletAttribute("Get", "MarkdownOption")]
[OutputTypeAttribute("Microsoft.PowerShell.MarkdownRender.PSMarkdownOptionInfo")]
public class Microsoft.PowerShell.Commands.GetMarkdownOptionCommand : PSCmdlet {
    protected virtual void EndProcessing();
}
[CmdletAttribute("Get", "Member")]
[OutputTypeAttribute("Microsoft.PowerShell.Commands.MemberDefinition")]
public class Microsoft.PowerShell.Commands.GetMemberCommand : PSCmdlet {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Name { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public PSMemberTypes MemberType { get; public set; }
    [ParameterAttribute]
public PSMemberViewTypes View { get; public set; }
    [ParameterAttribute]
public SwitchParameter Static { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public String[] get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(String[] value);
    [CompilerGeneratedAttribute]
public PSMemberTypes get_MemberType();
    [CompilerGeneratedAttribute]
public void set_MemberType(PSMemberTypes value);
    [CompilerGeneratedAttribute]
public PSMemberViewTypes get_View();
    [CompilerGeneratedAttribute]
public void set_View(PSMemberViewTypes value);
    public SwitchParameter get_Static();
    public void set_Static(SwitchParameter value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("Get", "PSBreakpoint")]
[OutputTypeAttribute("System.Management.Automation.CommandBreakpoint")]
[OutputTypeAttribute("System.Management.Automation.LineBreakpoint")]
[OutputTypeAttribute("System.Management.Automation.VariableBreakpoint")]
[OutputTypeAttribute("System.Management.Automation.Breakpoint")]
public class Microsoft.PowerShell.Commands.GetPSBreakpointCommand : PSBreakpointAccessorCommandBase {
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Script { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public Int32[] Id { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public String[] Variable { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public String[] Command { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public BreakpointType[] Type { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Script();
    [CompilerGeneratedAttribute]
public void set_Script(String[] value);
    [CompilerGeneratedAttribute]
public Int32[] get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Int32[] value);
    [CompilerGeneratedAttribute]
public String[] get_Variable();
    [CompilerGeneratedAttribute]
public void set_Variable(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(String[] value);
    [CompilerGeneratedAttribute]
public BreakpointType[] get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(BreakpointType[] value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "PSCallStack")]
[OutputTypeAttribute("System.Management.Automation.CallStackFrame")]
public class Microsoft.PowerShell.Commands.GetPSCallStackCommand : PSCmdlet {
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "Random")]
[OutputTypeAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.GetRandomCommand : GetRandomCommandBase {
    [ParameterAttribute]
[ValidateNotNullAttribute]
public Nullable`1<int> SetSeed { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SetSeed();
    [CompilerGeneratedAttribute]
public void set_SetSeed(Nullable`1<int> value);
    protected virtual void BeginProcessing();
}
public class Microsoft.PowerShell.Commands.GetRandomCommandBase : PSCmdlet {
    [ParameterAttribute]
public object Maximum { get; public set; }
    [ParameterAttribute]
public object Minimum { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[AllowNullAttribute]
public Object[] InputObject { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Count { get; public set; }
    [ParameterAttribute]
public SwitchParameter Shuffle { get; public set; }
    [CompilerGeneratedAttribute]
public object get_Maximum();
    [CompilerGeneratedAttribute]
public void set_Maximum(object value);
    [CompilerGeneratedAttribute]
public object get_Minimum();
    [CompilerGeneratedAttribute]
public void set_Minimum(object value);
    [CompilerGeneratedAttribute]
public Object[] get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(Object[] value);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Shuffle();
    [CompilerGeneratedAttribute]
public void set_Shuffle(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("Get", "Runspace")]
[OutputTypeAttribute("System.Management.Automation.Runspaces.Runspace")]
public class Microsoft.PowerShell.Commands.GetRunspaceCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Name { get; public set; }
    [ParameterAttribute]
public Int32[] Id { get; public set; }
    [ParameterAttribute]
public Guid[] InstanceId { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(String[] value);
    [CompilerGeneratedAttribute]
public Int32[] get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Int32[] value);
    [CompilerGeneratedAttribute]
public Guid[] get_InstanceId();
    [CompilerGeneratedAttribute]
public void set_InstanceId(Guid[] value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "RunspaceDebug")]
[OutputTypeAttribute("Microsoft.PowerShell.Commands.PSRunspaceDebug")]
public class Microsoft.PowerShell.Commands.GetRunspaceDebugCommand : CommonRunspaceCommandBase {
    protected virtual void ProcessRecord();
}
internal static class Microsoft.PowerShell.Commands.GetRunspaceUtils : object {
}
[CmdletAttribute("Get", "SecureRandom")]
[OutputTypeAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.GetSecureRandomCommand : GetRandomCommandBase {
}
[CmdletAttribute("Get", "TraceSource")]
[OutputTypeAttribute("System.Management.Automation.PSTraceSource")]
public class Microsoft.PowerShell.Commands.GetTraceSourceCommand : TraceCommandBase {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Name { get; public set; }
    public String[] get_Name();
    public void set_Name(String[] value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "TypeData")]
[OutputTypeAttribute("System.Management.Automation.PSObject")]
public class Microsoft.PowerShell.Commands.GetTypeDataCommand : PSCmdlet {
    [ValidateNotNullOrEmptyAttribute]
[ParameterAttribute]
public String[] TypeName { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(String[] value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "UICulture")]
[OutputTypeAttribute("System.Globalization.CultureInfo")]
public class Microsoft.PowerShell.Commands.GetUICultureCommand : PSCmdlet {
    protected virtual void BeginProcessing();
}
[CmdletAttribute("Get", "Unique")]
public class Microsoft.PowerShell.Commands.GetUniqueCommand : PSCmdlet {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
public SwitchParameter AsString { get; public set; }
    [ParameterAttribute]
public SwitchParameter OnType { get; public set; }
    [ParameterAttribute]
public SwitchParameter CaseInsensitive { get; public set; }
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    public SwitchParameter get_AsString();
    public void set_AsString(SwitchParameter value);
    public SwitchParameter get_OnType();
    public void set_OnType(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_CaseInsensitive();
    [CompilerGeneratedAttribute]
public void set_CaseInsensitive(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "Uptime")]
[OutputTypeAttribute("System.TimeSpan")]
[OutputTypeAttribute("System.DateTime")]
public class Microsoft.PowerShell.Commands.GetUptimeCommand : PSCmdlet {
    [ParameterAttribute]
public SwitchParameter Since { get; public set; }
    [CompilerGeneratedAttribute]
public SwitchParameter get_Since();
    [CompilerGeneratedAttribute]
public void set_Since(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "Variable")]
[OutputTypeAttribute("System.Management.Automation.PSVariable")]
public class Microsoft.PowerShell.Commands.GetVariableCommand : VariableCommandBase {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Name { get; public set; }
    [ParameterAttribute]
public SwitchParameter ValueOnly { get; public set; }
    [ParameterAttribute]
public String[] Include { get; public set; }
    [ParameterAttribute]
public String[] Exclude { get; public set; }
    public String[] get_Name();
    public void set_Name(String[] value);
    public SwitchParameter get_ValueOnly();
    public void set_ValueOnly(SwitchParameter value);
    public String[] get_Include();
    public void set_Include(String[] value);
    public String[] get_Exclude();
    public void set_Exclude(String[] value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "Verb")]
[OutputTypeAttribute("System.Management.Automation.VerbInfo")]
public class Microsoft.PowerShell.Commands.GetVerbCommand : Cmdlet {
    [ParameterAttribute]
public String[] Verb { get; public set; }
    [ParameterAttribute]
[ValidateSetAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Group { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Verb();
    [CompilerGeneratedAttribute]
public void set_Verb(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(String[] value);
    protected virtual void ProcessRecord();
}
[DebuggerDisplayAttribute("{Name} ({Count})")]
public class Microsoft.PowerShell.Commands.GroupInfo : object {
    public ArrayList Values { get; }
    public int Count { get; }
    public Collection`1<PSObject> Group { get; }
    public string Name { get; }
    internal virtual void Add(PSObject groupValue);
    public ArrayList get_Values();
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public Collection`1<PSObject> get_Group();
    [CompilerGeneratedAttribute]
public string get_Name();
}
public class Microsoft.PowerShell.Commands.GroupInfoNoElement : GroupInfo {
    internal virtual void Add(PSObject groupValue);
}
[CmdletAttribute("Group", "Object")]
[OutputTypeAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.GroupObjectCommand : ObjectBase {
    [ParameterAttribute]
public SwitchParameter NoElement { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public SwitchParameter AsHashTable { get; public set; }
    [ParameterAttribute]
public SwitchParameter AsString { get; public set; }
    [CompilerGeneratedAttribute]
public SwitchParameter get_NoElement();
    [CompilerGeneratedAttribute]
public void set_NoElement(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_AsHashTable();
    [CompilerGeneratedAttribute]
public void set_AsHashTable(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_AsString();
    [CompilerGeneratedAttribute]
public void set_AsString(SwitchParameter value);
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
internal class Microsoft.PowerShell.Commands.GroupObjectExpressionParameterDefinition : CommandParameterDefinition {
    protected virtual void SetEntries();
}
public class Microsoft.PowerShell.Commands.HashCmdletBase : PSCmdlet {
    [ParameterAttribute]
[ValidateSetAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string Algorithm { get; public set; }
    public string get_Algorithm();
    public void set_Algorithm(string value);
}
internal class Microsoft.PowerShell.Commands.HeaderInfo : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.PowerShell.Commands.HttpKnownHeaderNames : object {
    public static string Accept;
    public static string AcceptCharset;
    public static string AcceptEncoding;
    public static string AcceptLanguage;
    public static string AcceptPatch;
    public static string AcceptRanges;
    public static string AccessControlAllowCredentials;
    public static string AccessControlAllowHeaders;
    public static string AccessControlAllowMethods;
    public static string AccessControlAllowOrigin;
    public static string AccessControlExposeHeaders;
    public static string AccessControlMaxAge;
    public static string Age;
    public static string Allow;
    public static string AltSvc;
    public static string Authorization;
    public static string CacheControl;
    public static string Connection;
    public static string ContentDisposition;
    public static string ContentEncoding;
    public static string ContentLanguage;
    public static string ContentLength;
    public static string ContentLocation;
    public static string ContentMD5;
    public static string ContentRange;
    public static string ContentSecurityPolicy;
    public static string ContentType;
    public static string Cookie;
    public static string Cookie2;
    public static string Date;
    public static string ETag;
    public static string Expect;
    public static string Expires;
    public static string From;
    public static string Host;
    public static string IfMatch;
    public static string IfModifiedSince;
    public static string IfNoneMatch;
    public static string IfRange;
    public static string IfUnmodifiedSince;
    public static string KeepAlive;
    public static string LastModified;
    public static string Link;
    public static string Location;
    public static string MaxForwards;
    public static string Origin;
    public static string P3P;
    public static string Pragma;
    public static string ProxyAuthenticate;
    public static string ProxyAuthorization;
    public static string ProxyConnection;
    public static string PublicKeyPins;
    public static string Range;
    public static string Referer;
    public static string RetryAfter;
    public static string SecWebSocketAccept;
    public static string SecWebSocketExtensions;
    public static string SecWebSocketKey;
    public static string SecWebSocketProtocol;
    public static string SecWebSocketVersion;
    public static string Server;
    public static string SetCookie;
    public static string SetCookie2;
    public static string StrictTransportSecurity;
    public static string TE;
    public static string TSV;
    public static string Trailer;
    public static string TransferEncoding;
    public static string Upgrade;
    public static string UpgradeInsecureRequests;
    public static string UserAgent;
    public static string Vary;
    public static string Via;
    public static string WWWAuthenticate;
    public static string Warning;
    public static string XAspNetVersion;
    public static string XContentDuration;
    public static string XContentTypeOptions;
    public static string XFrameOptions;
    public static string XMSEdgeRef;
    public static string XPoweredBy;
    public static string XRequestID;
    public static string XUACompatible;
}
public class Microsoft.PowerShell.Commands.HttpResponseException : HttpRequestException {
    public HttpResponseMessage Response { get; }
    public HttpResponseException(string message, HttpResponseMessage response);
    [CompilerGeneratedAttribute]
public HttpResponseMessage get_Response();
}
internal class Microsoft.PowerShell.Commands.HttpVersionCompletionsAttribute : ArgumentCompletionsAttribute {
    [NullableAttribute("1")]
public static String[] AllowedVersions;
}
internal class Microsoft.PowerShell.Commands.ImplicitRemotingCodeGenerator : object {
}
public class Microsoft.PowerShell.Commands.ImplicitRemotingCommandBase : PSCmdlet {
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] CommandName { get; public set; }
    [ParameterAttribute]
public SwitchParameter AllowClobber { get; public set; }
    [ParameterAttribute]
[AllowNullAttribute]
[AllowEmptyCollectionAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] ArgumentList { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public CommandTypes CommandType { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateNotNullAttribute]
public String[] Module { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public ModuleSpecification[] FullyQualifiedModule { get; public set; }
    [ParameterAttribute]
public String[] FormatTypeName { get; public set; }
    [ParameterAttribute]
public X509Certificate2 Certificate { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public PSSession Session { get; public set; }
    public String[] get_CommandName();
    public void set_CommandName(String[] value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_AllowClobber();
    [CompilerGeneratedAttribute]
public void set_AllowClobber(SwitchParameter value);
    public Object[] get_ArgumentList();
    public void set_ArgumentList(Object[] value);
    public CommandTypes get_CommandType();
    public void set_CommandType(CommandTypes value);
    public String[] get_Module();
    public void set_Module(String[] value);
    public ModuleSpecification[] get_FullyQualifiedModule();
    public void set_FullyQualifiedModule(ModuleSpecification[] value);
    public String[] get_FormatTypeName();
    public void set_FormatTypeName(String[] value);
    [CompilerGeneratedAttribute]
public X509Certificate2 get_Certificate();
    [CompilerGeneratedAttribute]
public void set_Certificate(X509Certificate2 value);
    [CompilerGeneratedAttribute]
public PSSession get_Session();
    [CompilerGeneratedAttribute]
public void set_Session(PSSession value);
}
[CmdletAttribute("Import", "Alias")]
[OutputTypeAttribute("System.Management.Automation.AliasInfo")]
public class Microsoft.PowerShell.Commands.ImportAliasCommand : PSCmdlet {
    [ParameterAttribute]
public string Path { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string LiteralPath { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string Scope { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    public string get_LiteralPath();
    public void set_LiteralPath(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    public SwitchParameter get_PassThru();
    public void set_PassThru(SwitchParameter value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Import", "Clixml")]
public class Microsoft.PowerShell.Commands.ImportClixmlCommand : PSCmdlet {
    [ParameterAttribute]
public String[] Path { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] LiteralPath { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(String[] value);
    public String[] get_LiteralPath();
    public void set_LiteralPath(String[] value);
    public sealed virtual void Dispose();
    protected virtual void ProcessRecord();
    protected virtual void StopProcessing();
}
[CmdletAttribute("Import", "Csv")]
public class Microsoft.PowerShell.Commands.ImportCsvCommand : PSCmdlet {
    [ParameterAttribute]
[ParameterAttribute]
[ValidateNotNullAttribute]
public char Delimiter { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Path { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] LiteralPath { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ValidateNotNullAttribute]
public SwitchParameter UseCulture { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Header { get; public set; }
    [ParameterAttribute]
[ArgumentToEncodingTransformationAttribute]
[ArgumentEncodingCompletionsAttribute]
[ValidateNotNullOrEmptyAttribute]
public Encoding Encoding { get; public set; }
    [CompilerGeneratedAttribute]
public char get_Delimiter();
    [CompilerGeneratedAttribute]
public void set_Delimiter(char value);
    public String[] get_Path();
    public void set_Path(String[] value);
    public String[] get_LiteralPath();
    public void set_LiteralPath(String[] value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_UseCulture();
    [CompilerGeneratedAttribute]
public void set_UseCulture(SwitchParameter value);
    [CompilerGeneratedAttribute]
public String[] get_Header();
    [CompilerGeneratedAttribute]
public void set_Header(String[] value);
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
}
internal class Microsoft.PowerShell.Commands.ImportCsvHelper : object {
}
internal static class Microsoft.PowerShell.Commands.ImportExportCSVHelper : object {
}
[CmdletAttribute("Import", "LocalizedData")]
public class Microsoft.PowerShell.Commands.ImportLocalizedData : PSCmdlet {
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateNotNullOrEmptyAttribute]
public string BindingVariable { get; public set; }
    [ParameterAttribute]
public string UICulture { get; public set; }
    [ParameterAttribute]
public string BaseDirectory { get; public set; }
    [ParameterAttribute]
public string FileName { get; public set; }
    [ParameterAttribute]
[ValidateTrustedDataAttribute]
public String[] SupportedCommand { get; public set; }
    public string get_BindingVariable();
    public void set_BindingVariable(string value);
    public string get_UICulture();
    public void set_UICulture(string value);
    public string get_BaseDirectory();
    public void set_BaseDirectory(string value);
    public string get_FileName();
    public void set_FileName(string value);
    public String[] get_SupportedCommand();
    public void set_SupportedCommand(String[] value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Import", "PowerShellDataFile")]
public class Microsoft.PowerShell.Commands.ImportPowerShellDataFileCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Path { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] LiteralPath { get; public set; }
    [ParameterAttribute]
public SwitchParameter SkipLimitCheck { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(String[] value);
    public String[] get_LiteralPath();
    public void set_LiteralPath(String[] value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_SkipLimitCheck();
    [CompilerGeneratedAttribute]
public void set_SkipLimitCheck(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Import", "PSSession")]
[OutputTypeAttribute("System.Management.Automation.PSModuleInfo")]
public class Microsoft.PowerShell.Commands.ImportPSSessionCommand : ImplicitRemotingCommandBase {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string Prefix { get; public set; }
    [ParameterAttribute]
public SwitchParameter DisableNameChecking { get; public set; }
    public string get_Prefix();
    public void set_Prefix(string value);
    public SwitchParameter get_DisableNameChecking();
    public void set_DisableNameChecking(SwitchParameter value);
    protected virtual void BeginProcessing();
}
internal class Microsoft.PowerShell.Commands.ImportXmlHelper : object {
    public sealed virtual void Dispose();
}
internal class Microsoft.PowerShell.Commands.IndexColumnInfo : ColumnInfo {
    internal virtual object GetValue(PSObject liveObject);
}
internal class Microsoft.PowerShell.Commands.IndexedOrderByPropertyComparer : object {
    public sealed virtual int Compare(OrderByPropertyEntry lhs, OrderByPropertyEntry rhs);
}
internal static class Microsoft.PowerShell.Commands.InputFileOpenModeConversion : object {
}
internal class Microsoft.PowerShell.Commands.Internal.Format.PrinterLineOutput : LineOutput {
    internal bool RequiresBuffering { get; }
    internal int ColumnNumber { get; }
    internal int RowNumber { get; }
    internal virtual bool get_RequiresBuffering();
    internal virtual void ExecuteBufferPlayBack(DoPlayBackCall playback);
    internal virtual int get_ColumnNumber();
    internal virtual int get_RowNumber();
    internal virtual void WriteLine(string s);
    internal virtual void WriteRawText(string s);
}
[CmdletAttribute("Invoke", "Expression")]
public class Microsoft.PowerShell.Commands.InvokeExpressionCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateTrustedDataAttribute]
public string Command { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(string value);
    protected virtual void ProcessRecord();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[CmdletAttribute("Invoke", "RestMethod")]
public class Microsoft.PowerShell.Commands.InvokeRestMethodCommand : WebRequestPSCmdlet {
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public SwitchParameter FollowRelLink { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int MaximumFollowRelLink { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string ResponseHeadersVariable { get; public set; }
    [ParameterAttribute]
public string StatusCodeVariable { get; public set; }
    public SwitchParameter get_FollowRelLink();
    public void set_FollowRelLink(SwitchParameter value);
    public int get_MaximumFollowRelLink();
    public void set_MaximumFollowRelLink(int value);
    [CompilerGeneratedAttribute]
public string get_ResponseHeadersVariable();
    [CompilerGeneratedAttribute]
public void set_ResponseHeadersVariable(string value);
    [CompilerGeneratedAttribute]
public string get_StatusCodeVariable();
    [CompilerGeneratedAttribute]
public void set_StatusCodeVariable(string value);
    [NullableContextAttribute("1")]
internal virtual void ProcessResponse(HttpResponseMessage response);
}
[CmdletAttribute("Invoke", "WebRequest")]
[OutputTypeAttribute("Microsoft.PowerShell.Commands.BasicHtmlWebResponseObject")]
public class Microsoft.PowerShell.Commands.InvokeWebRequestCommand : WebRequestPSCmdlet {
    [NullableContextAttribute("1")]
internal virtual void ProcessResponse(HttpResponseMessage response);
}
public static class Microsoft.PowerShell.Commands.JsonObject : object {
    public static object ConvertFromJson(string input, ErrorRecord& error);
    public static object ConvertFromJson(string input, bool returnHashtable, ErrorRecord& error);
    public static object ConvertFromJson(string input, bool returnHashtable, Nullable`1<int> maxDepth, ErrorRecord& error);
    public static string ConvertToJson(object objectToProcess, ConvertToJsonContext& context);
}
internal class Microsoft.PowerShell.Commands.JsonSchemaReferenceResolutionException : Exception {
    [NullableContextAttribute("1")]
public JsonSchemaReferenceResolutionException(Exception innerException);
}
public enum Microsoft.PowerShell.Commands.Language : Enum {
    public int value__;
    public static Language CSharp;
}
public class Microsoft.PowerShell.Commands.MatchInfo : object {
    public bool IgnoreCase { get; public set; }
    public int LineNumber { get; public set; }
    public string Line { get; public set; }
    public string Filename { get; }
    public string Path { get; public set; }
    public string Pattern { get; public set; }
    public MatchInfoContext Context { get; public set; }
    public Match[] Matches { get; public set; }
    public MatchInfo(IReadOnlyList`1<int> matchIndexes, IReadOnlyList`1<int> matchLengths);
    [CompilerGeneratedAttribute]
public bool get_IgnoreCase();
    [CompilerGeneratedAttribute]
public void set_IgnoreCase(bool value);
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public void set_LineNumber(int value);
    [CompilerGeneratedAttribute]
public string get_Line();
    [CompilerGeneratedAttribute]
public void set_Line(string value);
    public string get_Filename();
    public string get_Path();
    public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public MatchInfoContext get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(MatchInfoContext value);
    public string RelativePath(string directory);
    public virtual string ToString();
    public string ToString(string directory);
    public string ToEmphasizedString(string directory);
    [CompilerGeneratedAttribute]
public Match[] get_Matches();
    [CompilerGeneratedAttribute]
public void set_Matches(Match[] value);
}
public class Microsoft.PowerShell.Commands.MatchInfoContext : object {
    public String[] PreContext { get; public set; }
    public String[] PostContext { get; public set; }
    public String[] DisplayPreContext { get; public set; }
    public String[] DisplayPostContext { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_PreContext();
    [CompilerGeneratedAttribute]
public void set_PreContext(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_PostContext();
    [CompilerGeneratedAttribute]
public void set_PostContext(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_DisplayPreContext();
    [CompilerGeneratedAttribute]
public void set_DisplayPreContext(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_DisplayPostContext();
    [CompilerGeneratedAttribute]
public void set_DisplayPostContext(String[] value);
    public sealed virtual object Clone();
}
[CmdletAttribute("Measure", "Command")]
[OutputTypeAttribute("System.TimeSpan")]
public class Microsoft.PowerShell.Commands.MeasureCommandCommand : PSCmdlet {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
public ScriptBlock Expression { get; public set; }
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public ScriptBlock get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(ScriptBlock value);
    protected virtual void EndProcessing();
    protected virtual void ProcessRecord();
}
public abstract class Microsoft.PowerShell.Commands.MeasureInfo : object {
    public string Property { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Property();
    [CompilerGeneratedAttribute]
public void set_Property(string value);
}
[CmdletAttribute("Measure", "Object")]
[OutputTypeAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.MeasureObjectCommand : PSCmdlet {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ValidateNotNullOrEmptyAttribute]
[ParameterAttribute]
public PSPropertyExpression[] Property { get; public set; }
    [ParameterAttribute]
public SwitchParameter StandardDeviation { get; public set; }
    [ParameterAttribute]
public SwitchParameter Sum { get; public set; }
    [ParameterAttribute]
public SwitchParameter AllStats { get; public set; }
    [ParameterAttribute]
public SwitchParameter Average { get; public set; }
    [ParameterAttribute]
public SwitchParameter Maximum { get; public set; }
    [ParameterAttribute]
public SwitchParameter Minimum { get; public set; }
    [ParameterAttribute]
public SwitchParameter Line { get; public set; }
    [ParameterAttribute]
public SwitchParameter Word { get; public set; }
    [ParameterAttribute]
public SwitchParameter Character { get; public set; }
    [ParameterAttribute]
public SwitchParameter IgnoreWhiteSpace { get; public set; }
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public PSPropertyExpression[] get_Property();
    [CompilerGeneratedAttribute]
public void set_Property(PSPropertyExpression[] value);
    public SwitchParameter get_StandardDeviation();
    public void set_StandardDeviation(SwitchParameter value);
    public SwitchParameter get_Sum();
    public void set_Sum(SwitchParameter value);
    public SwitchParameter get_AllStats();
    public void set_AllStats(SwitchParameter value);
    public SwitchParameter get_Average();
    public void set_Average(SwitchParameter value);
    public SwitchParameter get_Maximum();
    public void set_Maximum(SwitchParameter value);
    public SwitchParameter get_Minimum();
    public void set_Minimum(SwitchParameter value);
    public SwitchParameter get_Line();
    public void set_Line(SwitchParameter value);
    public SwitchParameter get_Word();
    public void set_Word(SwitchParameter value);
    public SwitchParameter get_Character();
    public void set_Character(SwitchParameter value);
    public SwitchParameter get_IgnoreWhiteSpace();
    public void set_IgnoreWhiteSpace(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
public class Microsoft.PowerShell.Commands.MemberDefinition : object {
    public string TypeName { get; }
    public string Name { get; }
    public PSMemberTypes MemberType { get; }
    public string Definition { get; }
    public MemberDefinition(string typeName, string name, PSMemberTypes memberType, string definition);
    public virtual string ToString();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public PSMemberTypes get_MemberType();
    [CompilerGeneratedAttribute]
public string get_Definition();
}
[CmdletAttribute("New", "Alias")]
[OutputTypeAttribute("System.Management.Automation.AliasInfo")]
public class Microsoft.PowerShell.Commands.NewAliasCommand : WriteAliasCommandBase {
    protected virtual void ProcessRecord();
}
[CmdletAttribute("New", "Event")]
[OutputTypeAttribute("System.Management.Automation.PSEventArgs")]
public class Microsoft.PowerShell.Commands.NewEventCommand : PSCmdlet {
    [ParameterAttribute]
public string SourceIdentifier { get; public set; }
    [ParameterAttribute]
public PSObject Sender { get; public set; }
    [ParameterAttribute]
public PSObject[] EventArguments { get; public set; }
    [ParameterAttribute]
public PSObject MessageData { get; public set; }
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    public PSObject get_Sender();
    public void set_Sender(PSObject value);
    public PSObject[] get_EventArguments();
    public void set_EventArguments(PSObject[] value);
    public PSObject get_MessageData();
    public void set_MessageData(PSObject value);
    protected virtual void EndProcessing();
}
[CmdletAttribute("New", "Guid")]
[OutputTypeAttribute("System.Guid")]
public class Microsoft.PowerShell.Commands.NewGuidCommand : Cmdlet {
    protected virtual void EndProcessing();
}
[CmdletAttribute("New", "Object")]
public class Microsoft.PowerShell.Commands.NewObjectCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateTrustedDataAttribute]
public string TypeName { get; public set; }
    [ParameterAttribute]
[ValidateTrustedDataAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] ArgumentList { get; public set; }
    [ParameterAttribute]
public SwitchParameter Strict { get; public set; }
    [ParameterAttribute]
[ValidateTrustedDataAttribute]
public IDictionary Property { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
    [CompilerGeneratedAttribute]
public Object[] get_ArgumentList();
    [CompilerGeneratedAttribute]
public void set_ArgumentList(Object[] value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Strict();
    [CompilerGeneratedAttribute]
public void set_Strict(SwitchParameter value);
    [CompilerGeneratedAttribute]
public IDictionary get_Property();
    [CompilerGeneratedAttribute]
public void set_Property(IDictionary value);
    protected virtual void BeginProcessing();
}
internal static class Microsoft.PowerShell.Commands.NewObjectNativeMethods : object {
}
[CmdletAttribute("New", "TemporaryFile")]
[OutputTypeAttribute("System.IO.FileInfo")]
public class Microsoft.PowerShell.Commands.NewTemporaryFileCommand : Cmdlet {
    protected virtual void EndProcessing();
}
[CmdletAttribute("New", "TimeSpan")]
[OutputTypeAttribute("System.TimeSpan")]
public class Microsoft.PowerShell.Commands.NewTimeSpanCommand : PSCmdlet {
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public DateTime Start { get; public set; }
    [ParameterAttribute]
public DateTime End { get; public set; }
    [ParameterAttribute]
public int Days { get; public set; }
    [ParameterAttribute]
public int Hours { get; public set; }
    [ParameterAttribute]
public int Minutes { get; public set; }
    [ParameterAttribute]
public int Seconds { get; public set; }
    [ParameterAttribute]
public int Milliseconds { get; public set; }
    public DateTime get_Start();
    public void set_Start(DateTime value);
    public DateTime get_End();
    public void set_End(DateTime value);
    [CompilerGeneratedAttribute]
public int get_Days();
    [CompilerGeneratedAttribute]
public void set_Days(int value);
    [CompilerGeneratedAttribute]
public int get_Hours();
    [CompilerGeneratedAttribute]
public void set_Hours(int value);
    [CompilerGeneratedAttribute]
public int get_Minutes();
    [CompilerGeneratedAttribute]
public void set_Minutes(int value);
    [CompilerGeneratedAttribute]
public int get_Seconds();
    [CompilerGeneratedAttribute]
public void set_Seconds(int value);
    [CompilerGeneratedAttribute]
public int get_Milliseconds();
    [CompilerGeneratedAttribute]
public void set_Milliseconds(int value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("New", "Variable")]
[OutputTypeAttribute("System.Management.Automation.PSVariable")]
public class Microsoft.PowerShell.Commands.NewVariableCommand : VariableCommandBase {
    [ParameterAttribute]
public string Name { get; public set; }
    [ParameterAttribute]
public object Value { get; public set; }
    [ParameterAttribute]
public string Description { get; public set; }
    [ParameterAttribute]
public ScopedItemOptions Option { get; public set; }
    [ParameterAttribute]
public SessionStateEntryVisibility Visibility { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public ScopedItemOptions get_Option();
    [CompilerGeneratedAttribute]
public void set_Option(ScopedItemOptions value);
    public SessionStateEntryVisibility get_Visibility();
    public void set_Visibility(SessionStateEntryVisibility value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public SwitchParameter get_PassThru();
    public void set_PassThru(SwitchParameter value);
    protected virtual void ProcessRecord();
}
public abstract class Microsoft.PowerShell.Commands.ObjectBase : ObjectCmdletBase {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
public Object[] Property { get; public set; }
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public Object[] get_Property();
    [CompilerGeneratedAttribute]
public void set_Property(Object[] value);
}
public class Microsoft.PowerShell.Commands.ObjectCmdletBase : PSCmdlet {
    [ParameterAttribute]
public string Culture { get; public set; }
    [ParameterAttribute]
public SwitchParameter CaseSensitive { get; public set; }
    public string get_Culture();
    public void set_Culture(string value);
    public SwitchParameter get_CaseSensitive();
    public void set_CaseSensitive(SwitchParameter value);
}
internal class Microsoft.PowerShell.Commands.ObjectCommandComparer : object {
    public sealed virtual int Compare(object first, object second);
}
internal class Microsoft.PowerShell.Commands.ObjectCommandPropertyValue : object {
    public virtual bool Equals(object inputObject);
    public virtual int GetHashCode();
}
internal class Microsoft.PowerShell.Commands.OrderByProperty : object {
}
internal class Microsoft.PowerShell.Commands.OrderByPropertyComparer : object {
    public sealed virtual int Compare(OrderByPropertyEntry firstEntry, OrderByPropertyEntry secondEntry);
}
internal class Microsoft.PowerShell.Commands.OrderByPropertyEntry : object {
}
internal static class Microsoft.PowerShell.Commands.OrderByPropertyEntryEvaluationHelper : object {
}
public class Microsoft.PowerShell.Commands.OrderObjectBase : ObjectBase {
    protected virtual void ProcessRecord();
}
internal class Microsoft.PowerShell.Commands.OriginalColumnInfo : ColumnInfo {
    internal virtual object GetValue(PSObject liveObject);
}
[CmdletAttribute("Out", "File")]
public class Microsoft.PowerShell.Commands.OutFileCommand : FrontEndCommandBase {
    [AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public string FilePath { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string LiteralPath { get; public set; }
    [ParameterAttribute]
[ArgumentToEncodingTransformationAttribute]
[ArgumentEncodingCompletionsAttribute]
[ValidateNotNullOrEmptyAttribute]
public Encoding Encoding { get; public set; }
    [ParameterAttribute]
public SwitchParameter Append { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public SwitchParameter NoClobber { get; public set; }
    [ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
[ParameterAttribute]
public int Width { get; public set; }
    [ParameterAttribute]
public SwitchParameter NoNewline { get; public set; }
    public string get_FilePath();
    public void set_FilePath(string value);
    public string get_LiteralPath();
    public void set_LiteralPath(string value);
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    public SwitchParameter get_Append();
    public void set_Append(SwitchParameter value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public SwitchParameter get_NoClobber();
    public void set_NoClobber(SwitchParameter value);
    public int get_Width();
    public void set_Width(int value);
    public SwitchParameter get_NoNewline();
    public void set_NoNewline(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
    protected virtual void InternalDispose();
}
[CmdletAttribute("Out", "GridView")]
public class Microsoft.PowerShell.Commands.OutGridViewCommand : PSCmdlet {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string Title { get; public set; }
    [ParameterAttribute]
public SwitchParameter Wait { get; public set; }
    [ParameterAttribute]
public OutputModeOption OutputMode { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Wait();
    [CompilerGeneratedAttribute]
public void set_Wait(SwitchParameter value);
    [CompilerGeneratedAttribute]
public OutputModeOption get_OutputMode();
    [CompilerGeneratedAttribute]
public void set_OutputMode(OutputModeOption value);
    public SwitchParameter get_PassThru();
    public void set_PassThru(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void EndProcessing();
    protected virtual void ProcessRecord();
    protected virtual void StopProcessing();
    public sealed virtual void Dispose();
}
[CmdletAttribute("Out", "Printer")]
public class Microsoft.PowerShell.Commands.OutPrinterCommand : FrontEndCommandBase {
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    protected virtual void BeginProcessing();
}
public enum Microsoft.PowerShell.Commands.OutputAssemblyType : Enum {
    public int value__;
    public static OutputAssemblyType Library;
    public static OutputAssemblyType ConsoleApplication;
    public static OutputAssemblyType WindowsApplication;
}
public enum Microsoft.PowerShell.Commands.OutputModeOption : Enum {
    public int value__;
    public static OutputModeOption None;
    public static OutputModeOption Single;
    public static OutputModeOption Multiple;
}
[CmdletAttribute("Out", "String")]
[OutputTypeAttribute("System.String")]
public class Microsoft.PowerShell.Commands.OutStringCommand : FrontEndCommandBase {
    [ParameterAttribute]
public SwitchParameter Stream { get; public set; }
    [ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
[ParameterAttribute]
public int Width { get; public set; }
    [ParameterAttribute]
public SwitchParameter NoNewline { get; public set; }
    public SwitchParameter get_Stream();
    public void set_Stream(SwitchParameter value);
    public int get_Width();
    public void set_Width(int value);
    public SwitchParameter get_NoNewline();
    public void set_NoNewline(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
internal class Microsoft.PowerShell.Commands.OutWindowProxy : object {
    public sealed virtual void Dispose();
}
internal class Microsoft.PowerShell.Commands.PolymorphicRandomNumberGenerator : object {
    public int Next(int minValue, int maxValue);
}
public abstract class Microsoft.PowerShell.Commands.PSBreakpointAccessorCommandBase : PSBreakpointCommandBase {
}
public abstract class Microsoft.PowerShell.Commands.PSBreakpointCommandBase : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullAttribute]
[RunspaceAttribute]
public Runspace Runspace { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Runspace get_Runspace();
    [CompilerGeneratedAttribute]
public virtual void set_Runspace(Runspace value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessBreakpoint(Breakpoint breakpoint);
}
public abstract class Microsoft.PowerShell.Commands.PSBreakpointUpdaterCommandBase : PSBreakpointCommandBase {
    [ParameterAttribute]
[ValidateNotNullAttribute]
public Breakpoint[] Breakpoint { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public Int32[] Id { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RunspaceAttribute]
public Runspace Runspace { get; public set; }
    [CompilerGeneratedAttribute]
public Breakpoint[] get_Breakpoint();
    [CompilerGeneratedAttribute]
public void set_Breakpoint(Breakpoint[] value);
    [CompilerGeneratedAttribute]
public Int32[] get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Int32[] value);
    [CompilerGeneratedAttribute]
public virtual Runspace get_Runspace();
    [CompilerGeneratedAttribute]
public virtual void set_Runspace(Runspace value);
    protected virtual void ProcessRecord();
}
internal class Microsoft.PowerShell.Commands.PSHostTraceListener : TraceListener {
    protected virtual override void Finalize();
    protected virtual void Dispose(bool disposing);
    public virtual void Write(string output);
    public virtual void WriteLine(string output);
}
internal static class Microsoft.PowerShell.Commands.PSMarkdownOptionInfoCache : object {
}
internal class Microsoft.PowerShell.Commands.PSPropertyExpressionFilter : object {
}
public class Microsoft.PowerShell.Commands.PSRunspaceDebug : object {
    public bool Enabled { get; }
    public bool BreakAll { get; }
    public string RunspaceName { get; }
    public int RunspaceId { get; }
    public PSRunspaceDebug(bool enabled, bool breakAll, string runspaceName, int runspaceId);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public bool get_BreakAll();
    [CompilerGeneratedAttribute]
public string get_RunspaceName();
    [CompilerGeneratedAttribute]
public int get_RunspaceId();
}
internal static class Microsoft.PowerShell.Commands.PSTuple : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.PowerShell.Commands.PSUserAgent : object {
    public static string InternetExplorer { get; }
    public static string FireFox { get; }
    public static string Chrome { get; }
    public static string Opera { get; }
    public static string Safari { get; }
    public static string get_InternetExplorer();
    public static string get_FireFox();
    public static string get_Chrome();
    public static string get_Opera();
    public static string get_Safari();
}
[CmdletAttribute("Read", "Host")]
[OutputTypeAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.ReadHostCommand : PSCmdlet {
    [ParameterAttribute]
[AllowNullAttribute]
public object Prompt { get; public set; }
    [ParameterAttribute]
public SwitchParameter AsSecureString { get; public set; }
    [ParameterAttribute]
public SwitchParameter MaskInput { get; public set; }
    public object get_Prompt();
    public void set_Prompt(object value);
    public SwitchParameter get_AsSecureString();
    public void set_AsSecureString(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_MaskInput();
    [CompilerGeneratedAttribute]
public void set_MaskInput(SwitchParameter value);
    protected virtual void BeginProcessing();
}
[CmdletAttribute("Register", "EngineEvent")]
[OutputTypeAttribute("System.Management.Automation.PSEventJob")]
public class Microsoft.PowerShell.Commands.RegisterEngineEventCommand : ObjectEventRegistrationBase {
    [ParameterAttribute]
public string SourceIdentifier { get; public set; }
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    protected virtual object GetSourceObject();
    protected virtual string GetSourceObjectEventName();
}
[CmdletAttribute("Register", "ObjectEvent")]
[OutputTypeAttribute("System.Management.Automation.PSEventJob")]
public class Microsoft.PowerShell.Commands.RegisterObjectEventCommand : ObjectEventRegistrationBase {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
public string EventName { get; public set; }
    public PSObject get_InputObject();
    public void set_InputObject(PSObject value);
    public string get_EventName();
    public void set_EventName(string value);
    protected virtual object GetSourceObject();
    protected virtual string GetSourceObjectEventName();
}
[CmdletAttribute("Remove", "Alias")]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.RemoveAliasCommand : PSCmdlet {
    [ParameterAttribute]
public String[] Name { get; public set; }
    [ParameterAttribute]
public string Scope { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(String[] value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Force();
    [CompilerGeneratedAttribute]
public void set_Force(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Remove", "Event")]
public class Microsoft.PowerShell.Commands.RemoveEventCommand : PSCmdlet {
    [ParameterAttribute]
public string SourceIdentifier { get; public set; }
    [ParameterAttribute]
public int EventIdentifier { get; public set; }
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    public int get_EventIdentifier();
    public void set_EventIdentifier(int value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Remove", "PSBreakpoint")]
public class Microsoft.PowerShell.Commands.RemovePSBreakpointCommand : PSBreakpointUpdaterCommandBase {
    protected virtual void ProcessBreakpoint(Breakpoint breakpoint);
}
[CmdletAttribute("Remove", "TypeData")]
public class Microsoft.PowerShell.Commands.RemoveTypeDataCommand : PSCmdlet {
    [ParameterAttribute]
[ArgumentToTypeNameTransformationAttribute]
[ValidateNotNullOrEmptyAttribute]
public string TypeName { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Path { get; public set; }
    [ParameterAttribute]
public TypeData TypeData { get; public set; }
    public string get_TypeName();
    public void set_TypeName(string value);
    public String[] get_Path();
    public void set_Path(String[] value);
    public TypeData get_TypeData();
    public void set_TypeData(TypeData value);
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("Remove", "Variable")]
public class Microsoft.PowerShell.Commands.RemoveVariableCommand : VariableCommandBase {
    [ParameterAttribute]
public String[] Name { get; public set; }
    [ParameterAttribute]
public String[] Include { get; public set; }
    [ParameterAttribute]
public String[] Exclude { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(String[] value);
    public String[] get_Include();
    public void set_Include(String[] value);
    public String[] get_Exclude();
    public void set_Exclude(String[] value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    protected virtual void ProcessRecord();
}
internal class Microsoft.PowerShell.Commands.ScalarTypeColumnInfo : ColumnInfo {
    internal virtual object GetValue(PSObject liveObject);
}
[CmdletAttribute("Select", "Object")]
public class Microsoft.PowerShell.Commands.SelectObjectCommand : PSCmdlet {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public Object[] Property { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public String[] ExcludeProperty { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public string ExpandProperty { get; public set; }
    [ParameterAttribute]
public SwitchParameter Unique { get; public set; }
    [ParameterAttribute]
public SwitchParameter CaseInsensitive { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Last { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int First { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Skip { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int SkipLast { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public SwitchParameter Wait { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public Int32[] Index { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public Int32[] SkipIndex { get; public set; }
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public Object[] get_Property();
    [CompilerGeneratedAttribute]
public void set_Property(Object[] value);
    [CompilerGeneratedAttribute]
public String[] get_ExcludeProperty();
    [CompilerGeneratedAttribute]
public void set_ExcludeProperty(String[] value);
    [CompilerGeneratedAttribute]
public string get_ExpandProperty();
    [CompilerGeneratedAttribute]
public void set_ExpandProperty(string value);
    public SwitchParameter get_Unique();
    public void set_Unique(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_CaseInsensitive();
    [CompilerGeneratedAttribute]
public void set_CaseInsensitive(SwitchParameter value);
    public int get_Last();
    public void set_Last(int value);
    public int get_First();
    public void set_First(int value);
    [CompilerGeneratedAttribute]
public int get_Skip();
    [CompilerGeneratedAttribute]
public void set_Skip(int value);
    [CompilerGeneratedAttribute]
public int get_SkipLast();
    [CompilerGeneratedAttribute]
public void set_SkipLast(int value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Wait();
    [CompilerGeneratedAttribute]
public void set_Wait(SwitchParameter value);
    public Int32[] get_Index();
    public void set_Index(Int32[] value);
    public Int32[] get_SkipIndex();
    public void set_SkipIndex(Int32[] value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
internal class Microsoft.PowerShell.Commands.SelectObjectException : SystemException {
}
internal class Microsoft.PowerShell.Commands.SelectObjectExpressionParameterDefinition : CommandParameterDefinition {
    protected virtual void SetEntries();
}
[CmdletAttribute("Select", "String")]
[OutputTypeAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[OutputTypeAttribute("System.String")]
public class Microsoft.PowerShell.Commands.SelectStringCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateSetAttribute("Microsoft.PowerShell.Commands.ValidateMatchStringCultureNamesGenerator")]
[ValidateNotNullAttribute]
public string Culture { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[AllowNullAttribute]
[AllowEmptyStringAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
public String[] Pattern { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[FileinfoToStringAttribute]
public String[] Path { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[FileinfoToStringAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] LiteralPath { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
public SwitchParameter Raw { get; public set; }
    [ParameterAttribute]
public SwitchParameter SimpleMatch { get; public set; }
    [ParameterAttribute]
public SwitchParameter CaseSensitive { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
public SwitchParameter Quiet { get; public set; }
    [ParameterAttribute]
public SwitchParameter List { get; public set; }
    [ParameterAttribute]
public SwitchParameter NoEmphasis { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Include { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Exclude { get; public set; }
    [ParameterAttribute]
public SwitchParameter NotMatch { get; public set; }
    [ParameterAttribute]
public SwitchParameter AllMatches { get; public set; }
    [ParameterAttribute]
[ArgumentToEncodingTransformationAttribute]
[ArgumentEncodingCompletionsAttribute]
[ValidateNotNullOrEmptyAttribute]
public Encoding Encoding { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[ValidateCountAttribute("1", "2")]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public Int32[] Context { get; public set; }
    public string get_Culture();
    public void set_Culture(string value);
    public PSObject get_InputObject();
    public void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public String[] get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(String[] value);
    public String[] get_LiteralPath();
    public void set_LiteralPath(String[] value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_SimpleMatch();
    [CompilerGeneratedAttribute]
public void set_SimpleMatch(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_CaseSensitive();
    [CompilerGeneratedAttribute]
public void set_CaseSensitive(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Quiet();
    [CompilerGeneratedAttribute]
public void set_Quiet(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_List();
    [CompilerGeneratedAttribute]
public void set_List(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_NoEmphasis();
    [CompilerGeneratedAttribute]
public void set_NoEmphasis(SwitchParameter value);
    public String[] get_Include();
    public void set_Include(String[] value);
    public String[] get_Exclude();
    public void set_Exclude(String[] value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_NotMatch();
    [CompilerGeneratedAttribute]
public void set_NotMatch(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_AllMatches();
    [CompilerGeneratedAttribute]
public void set_AllMatches(SwitchParameter value);
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    public Int32[] get_Context();
    public void set_Context(Int32[] value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("Select", "Xml")]
[OutputTypeAttribute("Microsoft.PowerShell.Commands.SelectXmlInfo")]
public class Microsoft.PowerShell.Commands.SelectXmlCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Path { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] LiteralPath { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public XmlNode[] Xml { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Content { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string XPath { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public Hashtable Namespace { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(String[] value);
    public String[] get_LiteralPath();
    public void set_LiteralPath(String[] value);
    [CompilerGeneratedAttribute]
public XmlNode[] get_Xml();
    [CompilerGeneratedAttribute]
public void set_Xml(XmlNode[] value);
    [CompilerGeneratedAttribute]
public String[] get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(String[] value);
    [CompilerGeneratedAttribute]
public string get_XPath();
    [CompilerGeneratedAttribute]
public void set_XPath(string value);
    [CompilerGeneratedAttribute]
public Hashtable get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(Hashtable value);
    protected virtual void ProcessRecord();
}
public class Microsoft.PowerShell.Commands.SelectXmlInfo : object {
    public XmlNode Node { get; public set; }
    public string Path { get; public set; }
    public string Pattern { get; public set; }
    [CompilerGeneratedAttribute]
public XmlNode get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(XmlNode value);
    public string get_Path();
    public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(string value);
    public virtual string ToString();
}
[ObsoleteAttribute("This cmdlet does not guarantee secure connections to SMTP servers. While there is no immediate replacement available in PowerShell, we recommend you do not use Send-MailMessage at this time. See https://aka.ms/SendMailMessage for more information.")]
[CmdletAttribute("Send", "MailMessage")]
public class Microsoft.PowerShell.Commands.SendMailMessage : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Attachments { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Bcc { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string Body { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public SwitchParameter BodyAsHtml { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateNotNullOrEmptyAttribute]
[ArgumentEncodingCompletionsAttribute]
[ArgumentToEncodingTransformationAttribute]
public Encoding Encoding { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] Cc { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateNotNullOrEmptyAttribute]
public DeliveryNotificationOptions DeliveryNotificationOption { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string From { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateNotNullOrEmptyAttribute]
public string SmtpServer { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public MailPriority Priority { get; public set; }
    [ParameterAttribute]
public String[] ReplyTo { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string Subject { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] To { get; public set; }
    [ParameterAttribute]
[CredentialAttribute]
[ValidateNotNullOrEmptyAttribute]
public PSCredential Credential { get; public set; }
    [ParameterAttribute]
public SwitchParameter UseSsl { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Port { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Attachments();
    [CompilerGeneratedAttribute]
public void set_Attachments(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Bcc();
    [CompilerGeneratedAttribute]
public void set_Bcc(String[] value);
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(string value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_BodyAsHtml();
    [CompilerGeneratedAttribute]
public void set_BodyAsHtml(SwitchParameter value);
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    [CompilerGeneratedAttribute]
public String[] get_Cc();
    [CompilerGeneratedAttribute]
public void set_Cc(String[] value);
    [CompilerGeneratedAttribute]
public DeliveryNotificationOptions get_DeliveryNotificationOption();
    [CompilerGeneratedAttribute]
public void set_DeliveryNotificationOption(DeliveryNotificationOptions value);
    [CompilerGeneratedAttribute]
public string get_From();
    [CompilerGeneratedAttribute]
public void set_From(string value);
    [CompilerGeneratedAttribute]
public string get_SmtpServer();
    [CompilerGeneratedAttribute]
public void set_SmtpServer(string value);
    [CompilerGeneratedAttribute]
public MailPriority get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(MailPriority value);
    [CompilerGeneratedAttribute]
public String[] get_ReplyTo();
    [CompilerGeneratedAttribute]
public void set_ReplyTo(String[] value);
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(string value);
    [CompilerGeneratedAttribute]
public String[] get_To();
    [CompilerGeneratedAttribute]
public void set_To(String[] value);
    [CompilerGeneratedAttribute]
public PSCredential get_Credential();
    [CompilerGeneratedAttribute]
public void set_Credential(PSCredential value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_UseSsl();
    [CompilerGeneratedAttribute]
public void set_UseSsl(SwitchParameter value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("Set", "Alias")]
[OutputTypeAttribute("System.Management.Automation.AliasInfo")]
public class Microsoft.PowerShell.Commands.SetAliasCommand : WriteAliasCommandBase {
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Set", "Date")]
[OutputTypeAttribute("System.DateTime")]
public class Microsoft.PowerShell.Commands.SetDateCommand : PSCmdlet {
    [ParameterAttribute]
public DateTime Date { get; public set; }
    [ParameterAttribute]
[AllowNullAttribute]
public TimeSpan Adjust { get; public set; }
    [ParameterAttribute]
public DisplayHintType DisplayHint { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_Date();
    [CompilerGeneratedAttribute]
public void set_Date(DateTime value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Adjust();
    [CompilerGeneratedAttribute]
public void set_Adjust(TimeSpan value);
    [CompilerGeneratedAttribute]
public DisplayHintType get_DisplayHint();
    [CompilerGeneratedAttribute]
public void set_DisplayHint(DisplayHintType value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Set", "MarkdownOption")]
[OutputTypeAttribute("Microsoft.PowerShell.MarkdownRender.PSMarkdownOptionInfo")]
public class Microsoft.PowerShell.Commands.SetMarkdownOptionCommand : PSCmdlet {
    [ValidatePatternAttribute("^\[*[0-9;]*?m{1}")]
[ParameterAttribute]
public string Header1Color { get; public set; }
    [ValidatePatternAttribute("^\[*[0-9;]*?m{1}")]
[ParameterAttribute]
public string Header2Color { get; public set; }
    [ValidatePatternAttribute("^\[*[0-9;]*?m{1}")]
[ParameterAttribute]
public string Header3Color { get; public set; }
    [ValidatePatternAttribute("^\[*[0-9;]*?m{1}")]
[ParameterAttribute]
public string Header4Color { get; public set; }
    [ValidatePatternAttribute("^\[*[0-9;]*?m{1}")]
[ParameterAttribute]
public string Header5Color { get; public set; }
    [ValidatePatternAttribute("^\[*[0-9;]*?m{1}")]
[ParameterAttribute]
public string Header6Color { get; public set; }
    [ValidatePatternAttribute("^\[*[0-9;]*?m{1}")]
[ParameterAttribute]
public string Code { get; public set; }
    [ValidatePatternAttribute("^\[*[0-9;]*?m{1}")]
[ParameterAttribute]
public string ImageAltTextForegroundColor { get; public set; }
    [ValidatePatternAttribute("^\[*[0-9;]*?m{1}")]
[ParameterAttribute]
public string LinkForegroundColor { get; public set; }
    [ValidatePatternAttribute("^\[*[0-9;]*?m{1}")]
[ParameterAttribute]
public string ItalicsForegroundColor { get; public set; }
    [ValidatePatternAttribute("^\[*[0-9;]*?m{1}")]
[ParameterAttribute]
public string BoldForegroundColor { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [ValidateNotNullOrEmptyAttribute]
[ParameterAttribute]
[ValidateSetAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string Theme { get; public set; }
    [ValidateNotNullOrEmptyAttribute]
[ParameterAttribute]
public PSObject InputObject { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Header1Color();
    [CompilerGeneratedAttribute]
public void set_Header1Color(string value);
    [CompilerGeneratedAttribute]
public string get_Header2Color();
    [CompilerGeneratedAttribute]
public void set_Header2Color(string value);
    [CompilerGeneratedAttribute]
public string get_Header3Color();
    [CompilerGeneratedAttribute]
public void set_Header3Color(string value);
    [CompilerGeneratedAttribute]
public string get_Header4Color();
    [CompilerGeneratedAttribute]
public void set_Header4Color(string value);
    [CompilerGeneratedAttribute]
public string get_Header5Color();
    [CompilerGeneratedAttribute]
public void set_Header5Color(string value);
    [CompilerGeneratedAttribute]
public string get_Header6Color();
    [CompilerGeneratedAttribute]
public void set_Header6Color(string value);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_ImageAltTextForegroundColor();
    [CompilerGeneratedAttribute]
public void set_ImageAltTextForegroundColor(string value);
    [CompilerGeneratedAttribute]
public string get_LinkForegroundColor();
    [CompilerGeneratedAttribute]
public void set_LinkForegroundColor(string value);
    [CompilerGeneratedAttribute]
public string get_ItalicsForegroundColor();
    [CompilerGeneratedAttribute]
public void set_ItalicsForegroundColor(string value);
    [CompilerGeneratedAttribute]
public string get_BoldForegroundColor();
    [CompilerGeneratedAttribute]
public void set_BoldForegroundColor(string value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_PassThru();
    [CompilerGeneratedAttribute]
public void set_PassThru(SwitchParameter value);
    [CompilerGeneratedAttribute]
public string get_Theme();
    [CompilerGeneratedAttribute]
public void set_Theme(string value);
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    protected virtual void EndProcessing();
}
[CmdletAttribute("Set", "PSBreakpoint")]
[OutputTypeAttribute("System.Management.Automation.CommandBreakpoint")]
[OutputTypeAttribute("System.Management.Automation.LineBreakpoint")]
[OutputTypeAttribute("System.Management.Automation.VariableBreakpoint")]
public class Microsoft.PowerShell.Commands.SetPSBreakpointCommand : PSBreakpointAccessorCommandBase {
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
public ScriptBlock Action { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Column { get; public set; }
    [AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public String[] Command { get; public set; }
    [ParameterAttribute]
public Int32[] Line { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ValidateNotNullAttribute]
public String[] Script { get; public set; }
    [AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
public String[] Variable { get; public set; }
    [ParameterAttribute]
public VariableAccessMode Mode { get; public set; }
    [CompilerGeneratedAttribute]
public ScriptBlock get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(ScriptBlock value);
    [CompilerGeneratedAttribute]
public int get_Column();
    [CompilerGeneratedAttribute]
public void set_Column(int value);
    [CompilerGeneratedAttribute]
public String[] get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(String[] value);
    [CompilerGeneratedAttribute]
public Int32[] get_Line();
    [CompilerGeneratedAttribute]
public void set_Line(Int32[] value);
    [CompilerGeneratedAttribute]
public String[] get_Script();
    [CompilerGeneratedAttribute]
public void set_Script(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Variable();
    [CompilerGeneratedAttribute]
public void set_Variable(String[] value);
    [CompilerGeneratedAttribute]
public VariableAccessMode get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(VariableAccessMode value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Set", "TraceSource")]
[OutputTypeAttribute("System.Management.Automation.PSTraceSource")]
public class Microsoft.PowerShell.Commands.SetTraceSourceCommand : TraceListenerCommandBase {
    [ParameterAttribute]
public String[] Name { get; public set; }
    [ParameterAttribute]
public PSTraceSourceOptions Option { get; public set; }
    [ParameterAttribute]
public TraceOptions ListenerOption { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string FilePath { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
public SwitchParameter Debugger { get; public set; }
    [ParameterAttribute]
public SwitchParameter PSHost { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] RemoveListener { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] RemoveFileListener { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    public String[] get_Name();
    public void set_Name(String[] value);
    public PSTraceSourceOptions get_Option();
    public void set_Option(PSTraceSourceOptions value);
    public TraceOptions get_ListenerOption();
    public void set_ListenerOption(TraceOptions value);
    public string get_FilePath();
    public void set_FilePath(string value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public SwitchParameter get_Debugger();
    public void set_Debugger(SwitchParameter value);
    public SwitchParameter get_PSHost();
    public void set_PSHost(SwitchParameter value);
    [CompilerGeneratedAttribute]
public String[] get_RemoveListener();
    [CompilerGeneratedAttribute]
public void set_RemoveListener(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_RemoveFileListener();
    [CompilerGeneratedAttribute]
public void set_RemoveFileListener(String[] value);
    public SwitchParameter get_PassThru();
    public void set_PassThru(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Set", "Variable")]
[OutputTypeAttribute("System.Management.Automation.PSVariable")]
public class Microsoft.PowerShell.Commands.SetVariableCommand : VariableCommandBase {
    [ParameterAttribute]
public String[] Name { get; public set; }
    [ParameterAttribute]
public object Value { get; public set; }
    [ParameterAttribute]
public String[] Include { get; public set; }
    [ParameterAttribute]
public String[] Exclude { get; public set; }
    [ParameterAttribute]
public string Description { get; public set; }
    [ParameterAttribute]
public ScopedItemOptions Option { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
public SessionStateEntryVisibility Visibility { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(String[] value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
    public String[] get_Include();
    public void set_Include(String[] value);
    public String[] get_Exclude();
    public void set_Exclude(String[] value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    public ScopedItemOptions get_Option();
    public void set_Option(ScopedItemOptions value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public SessionStateEntryVisibility get_Visibility();
    public void set_Visibility(SessionStateEntryVisibility value);
    public SwitchParameter get_PassThru();
    public void set_PassThru(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("Show", "Command")]
public class Microsoft.PowerShell.Commands.ShowCommandCommand : PSCmdlet {
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string Name { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public double Height { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public double Width { get; public set; }
    [ParameterAttribute]
public SwitchParameter NoCommonParameter { get; public set; }
    [ParameterAttribute]
public SwitchParameter ErrorPopup { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public double get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(double value);
    [CompilerGeneratedAttribute]
public double get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(double value);
    public SwitchParameter get_NoCommonParameter();
    public void set_NoCommonParameter(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_ErrorPopup();
    [CompilerGeneratedAttribute]
public void set_ErrorPopup(SwitchParameter value);
    public SwitchParameter get_PassThru();
    public void set_PassThru(SwitchParameter value);
    public void RunScript(string script);
    public sealed virtual void Dispose();
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
    protected virtual void StopProcessing();
}
public class Microsoft.PowerShell.Commands.ShowCommandExtension.ShowCommandCommandInfo : object {
    public string Name { get; }
    public string ModuleName { get; }
    public ShowCommandModuleInfo Module { get; }
    public CommandTypes CommandType { get; }
    public string Definition { get; }
    public ICollection`1<ShowCommandParameterSetInfo> ParameterSets { get; }
    public ShowCommandCommandInfo(CommandInfo other);
    public ShowCommandCommandInfo(PSObject other);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_ModuleName();
    [CompilerGeneratedAttribute]
public ShowCommandModuleInfo get_Module();
    [CompilerGeneratedAttribute]
public CommandTypes get_CommandType();
    [CompilerGeneratedAttribute]
public string get_Definition();
    [CompilerGeneratedAttribute]
public ICollection`1<ShowCommandParameterSetInfo> get_ParameterSets();
}
public class Microsoft.PowerShell.Commands.ShowCommandExtension.ShowCommandModuleInfo : object {
    public string Name { get; }
    public ShowCommandModuleInfo(PSModuleInfo other);
    public ShowCommandModuleInfo(PSObject other);
    [CompilerGeneratedAttribute]
public string get_Name();
}
public class Microsoft.PowerShell.Commands.ShowCommandExtension.ShowCommandParameterInfo : object {
    public string Name { get; }
    public bool IsMandatory { get; }
    public bool ValueFromPipeline { get; }
    public ShowCommandParameterType ParameterType { get; }
    public IList`1<string> ValidParamSetValues { get; }
    public bool HasParameterSet { get; }
    public int Position { get; }
    public ShowCommandParameterInfo(CommandParameterInfo other);
    public ShowCommandParameterInfo(PSObject other);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public bool get_IsMandatory();
    [CompilerGeneratedAttribute]
public bool get_ValueFromPipeline();
    [CompilerGeneratedAttribute]
public ShowCommandParameterType get_ParameterType();
    [CompilerGeneratedAttribute]
public IList`1<string> get_ValidParamSetValues();
    [CompilerGeneratedAttribute]
public bool get_HasParameterSet();
    [CompilerGeneratedAttribute]
public int get_Position();
}
public class Microsoft.PowerShell.Commands.ShowCommandExtension.ShowCommandParameterSetInfo : object {
    public string Name { get; }
    public bool IsDefault { get; }
    public ICollection`1<ShowCommandParameterInfo> Parameters { get; }
    public ShowCommandParameterSetInfo(CommandParameterSetInfo other);
    public ShowCommandParameterSetInfo(PSObject other);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public ICollection`1<ShowCommandParameterInfo> get_Parameters();
}
public class Microsoft.PowerShell.Commands.ShowCommandExtension.ShowCommandParameterType : object {
    public string FullName { get; }
    public bool IsEnum { get; }
    public bool ImplementsDictionary { get; }
    public bool HasFlagAttribute { get; }
    public bool IsArray { get; }
    public ShowCommandParameterType ElementType { get; }
    public bool IsString { get; }
    public bool IsScriptBlock { get; }
    public bool IsBoolean { get; }
    public bool IsSwitch { get; }
    public ArrayList EnumValues { get; }
    public ShowCommandParameterType(Type other);
    public ShowCommandParameterType(PSObject other);
    [CompilerGeneratedAttribute]
public string get_FullName();
    [CompilerGeneratedAttribute]
public bool get_IsEnum();
    [CompilerGeneratedAttribute]
public bool get_ImplementsDictionary();
    [CompilerGeneratedAttribute]
public bool get_HasFlagAttribute();
    [CompilerGeneratedAttribute]
public bool get_IsArray();
    [CompilerGeneratedAttribute]
public ShowCommandParameterType get_ElementType();
    public bool get_IsString();
    public bool get_IsScriptBlock();
    public bool get_IsBoolean();
    public bool get_IsSwitch();
    [CompilerGeneratedAttribute]
public ArrayList get_EnumValues();
}
internal class Microsoft.PowerShell.Commands.ShowCommandProxy : object {
}
[CmdletAttribute("Show", "Markdown")]
[OutputTypeAttribute("System.String")]
public class Microsoft.PowerShell.Commands.ShowMarkdownCommand : PSCmdlet {
    [ValidateNotNullOrEmptyAttribute]
[ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ValidateNotNullOrEmptyAttribute]
[ParameterAttribute]
public String[] Path { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] LiteralPath { get; public set; }
    [ParameterAttribute]
public SwitchParameter UseBrowser { get; public set; }
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public String[] get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(String[] value);
    public String[] get_LiteralPath();
    public void set_LiteralPath(String[] value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_UseBrowser();
    [CompilerGeneratedAttribute]
public void set_UseBrowser(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("Sort", "Object")]
public class Microsoft.PowerShell.Commands.SortObjectCommand : OrderObjectBase {
    [ParameterAttribute]
public SwitchParameter Stable { get; public set; }
    [ParameterAttribute]
public SwitchParameter Descending { get; public set; }
    [ParameterAttribute]
public SwitchParameter Unique { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Top { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Bottom { get; public set; }
    [CompilerGeneratedAttribute]
public SwitchParameter get_Stable();
    [CompilerGeneratedAttribute]
public void set_Stable(SwitchParameter value);
    public SwitchParameter get_Descending();
    public void set_Descending(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Unique();
    [CompilerGeneratedAttribute]
public void set_Unique(SwitchParameter value);
    [CompilerGeneratedAttribute]
public int get_Top();
    [CompilerGeneratedAttribute]
public void set_Top(int value);
    [CompilerGeneratedAttribute]
public int get_Bottom();
    [CompilerGeneratedAttribute]
public void set_Bottom(int value);
    protected virtual void EndProcessing();
}
internal class Microsoft.PowerShell.Commands.SortObjectExpressionParameterDefinition : CommandParameterDefinition {
    protected virtual void SetEntries();
}
internal static class Microsoft.PowerShell.Commands.SortObjectParameterDefinitionKeys : object {
}
[CmdletAttribute("Start", "Sleep")]
public class Microsoft.PowerShell.Commands.StartSleepCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public double Seconds { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public int Milliseconds { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("1")]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public TimeSpan Duration { get; public set; }
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
public double get_Seconds();
    [CompilerGeneratedAttribute]
public void set_Seconds(double value);
    [CompilerGeneratedAttribute]
public int get_Milliseconds();
    [CompilerGeneratedAttribute]
public void set_Milliseconds(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(TimeSpan value);
    protected virtual void ProcessRecord();
    protected virtual void StopProcessing();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.PowerShell.Commands.StreamHelper : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.PowerShell.Commands.StreamTimeoutExtensions : object {
}
internal class Microsoft.PowerShell.Commands.TableView : object {
}
[CmdletAttribute("Tee", "Object")]
public class Microsoft.PowerShell.Commands.TeeObjectCommand : PSCmdlet {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string FilePath { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string LiteralPath { get; public set; }
    [ParameterAttribute]
public SwitchParameter Append { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ArgumentToEncodingTransformationAttribute]
[ArgumentEncodingCompletionsAttribute]
[ValidateNotNullOrEmptyAttribute]
public Encoding Encoding { get; public set; }
    [ParameterAttribute]
public string Variable { get; public set; }
    public PSObject get_InputObject();
    public void set_InputObject(PSObject value);
    public string get_FilePath();
    public void set_FilePath(string value);
    public string get_LiteralPath();
    public void set_LiteralPath(string value);
    public SwitchParameter get_Append();
    public void set_Append(SwitchParameter value);
    [CompilerGeneratedAttribute]
public Encoding get_Encoding();
    [CompilerGeneratedAttribute]
public void set_Encoding(Encoding value);
    public string get_Variable();
    public void set_Variable(string value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
    public sealed virtual void Dispose();
}
[CmdletAttribute("Test", "Json")]
[OutputTypeAttribute("System.Boolean")]
public class Microsoft.PowerShell.Commands.TestJsonCommand : PSCmdlet {
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
public string Json { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
public string Path { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string LiteralPath { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string Schema { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string SchemaFile { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Json();
    [CompilerGeneratedAttribute]
public void set_Json(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    public string get_LiteralPath();
    public void set_LiteralPath(string value);
    [CompilerGeneratedAttribute]
public string get_Schema();
    [CompilerGeneratedAttribute]
public void set_Schema(string value);
    [CompilerGeneratedAttribute]
public string get_SchemaFile();
    [CompilerGeneratedAttribute]
public void set_SchemaFile(string value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
}
[ObsoleteAttribute("This class is included in this SDK for completeness only. The members of this class cannot be used directly, nor should this class be used to derive other classes.", "True")]
public enum Microsoft.PowerShell.Commands.TextEncodingType : Enum {
    public int value__;
    public static TextEncodingType Unknown;
    public static TextEncodingType String;
    public static TextEncodingType Unicode;
    public static TextEncodingType Byte;
    public static TextEncodingType BigEndianUnicode;
    public static TextEncodingType BigEndianUTF32;
    public static TextEncodingType Utf8;
    public static TextEncodingType Utf7;
    public static TextEncodingType Ascii;
}
public class Microsoft.PowerShell.Commands.TextMeasureInfo : MeasureInfo {
    public Nullable`1<int> Lines { get; public set; }
    public Nullable`1<int> Words { get; public set; }
    public Nullable`1<int> Characters { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Lines();
    [CompilerGeneratedAttribute]
public void set_Lines(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Words();
    [CompilerGeneratedAttribute]
public void set_Words(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Characters();
    [CompilerGeneratedAttribute]
public void set_Characters(Nullable`1<int> value);
}
internal class Microsoft.PowerShell.Commands.ToStringColumnInfo : ColumnInfo {
    internal virtual object GetValue(PSObject liveObject);
}
public class Microsoft.PowerShell.Commands.TraceCommandBase : PSCmdlet {
}
[CmdletAttribute("Trace", "Command")]
public class Microsoft.PowerShell.Commands.TraceCommandCommand : TraceListenerCommandBase {
    [ParameterAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
public String[] Name { get; public set; }
    [ParameterAttribute]
public PSTraceSourceOptions Option { get; public set; }
    [ParameterAttribute]
public ScriptBlock Expression { get; public set; }
    [ParameterAttribute]
public string Command { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] ArgumentList { get; public set; }
    [ParameterAttribute]
public TraceOptions ListenerOption { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string FilePath { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
public SwitchParameter Debugger { get; public set; }
    [ParameterAttribute]
public SwitchParameter PSHost { get; public set; }
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    public String[] get_Name();
    public void set_Name(String[] value);
    public PSTraceSourceOptions get_Option();
    public void set_Option(PSTraceSourceOptions value);
    [CompilerGeneratedAttribute]
public ScriptBlock get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(ScriptBlock value);
    [CompilerGeneratedAttribute]
public string get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(string value);
    [CompilerGeneratedAttribute]
public Object[] get_ArgumentList();
    [CompilerGeneratedAttribute]
public void set_ArgumentList(Object[] value);
    public TraceOptions get_ListenerOption();
    public void set_ListenerOption(TraceOptions value);
    public string get_FilePath();
    public void set_FilePath(string value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public SwitchParameter get_Debugger();
    public void set_Debugger(SwitchParameter value);
    public SwitchParameter get_PSHost();
    public void set_PSHost(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
    protected virtual void StopProcessing();
    public sealed virtual void Dispose();
}
public class Microsoft.PowerShell.Commands.TraceListenerCommandBase : TraceCommandBase {
    public bool ForceWrite { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ForceWrite();
    [CompilerGeneratedAttribute]
public void set_ForceWrite(bool value);
    protected void ClearStoredState();
}
internal class Microsoft.PowerShell.Commands.TracePipelineWriter : PipelineWriter {
    public WaitHandle WaitHandle { get; }
    public bool IsOpen { get; }
    public int Count { get; }
    public int MaxCapacity { get; }
    public virtual WaitHandle get_WaitHandle();
    public virtual bool get_IsOpen();
    public virtual int get_Count();
    public virtual int get_MaxCapacity();
    public virtual void Close();
    public virtual void Flush();
    public virtual int Write(object obj);
    public virtual int Write(object obj, bool enumerateCollection);
}
internal class Microsoft.PowerShell.Commands.TypeNameColumnInfo : ColumnInfo {
    internal virtual object GetValue(PSObject liveObject);
}
[CmdletAttribute("Unblock", "File")]
public class Microsoft.PowerShell.Commands.UnblockFileCommand : PSCmdlet {
    [ParameterAttribute]
public String[] Path { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] LiteralPath { get; public set; }
    public String[] get_Path();
    public void set_Path(String[] value);
    public String[] get_LiteralPath();
    public void set_LiteralPath(String[] value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Unregister", "Event")]
public class Microsoft.PowerShell.Commands.UnregisterEventCommand : PSCmdlet {
    [ParameterAttribute]
public string SourceIdentifier { get; public set; }
    [ParameterAttribute]
public int SubscriptionId { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    [CompilerGeneratedAttribute]
public int get_SubscriptionId();
    [CompilerGeneratedAttribute]
public void set_SubscriptionId(int value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_Force();
    [CompilerGeneratedAttribute]
public void set_Force(SwitchParameter value);
    protected virtual void ProcessRecord();
}
public class Microsoft.PowerShell.Commands.UpdateData : PSCmdlet {
    protected static string FileParameterSet;
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateNotNullAttribute]
public String[] AppendPath { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public String[] PrependPath { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_AppendPath();
    [CompilerGeneratedAttribute]
public void set_AppendPath(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_PrependPath();
    [CompilerGeneratedAttribute]
public void set_PrependPath(String[] value);
}
[CmdletAttribute("Update", "FormatData")]
public class Microsoft.PowerShell.Commands.UpdateFormatDataCommand : UpdateData {
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Update", "List")]
public class Microsoft.PowerShell.Commands.UpdateListCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public Object[] Add { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public Object[] Remove { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public Object[] Replace { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string Property { get; public set; }
    [CompilerGeneratedAttribute]
public Object[] get_Add();
    [CompilerGeneratedAttribute]
public void set_Add(Object[] value);
    [CompilerGeneratedAttribute]
public Object[] get_Remove();
    [CompilerGeneratedAttribute]
public void set_Remove(Object[] value);
    [CompilerGeneratedAttribute]
public Object[] get_Replace();
    [CompilerGeneratedAttribute]
public void set_Replace(Object[] value);
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public string get_Property();
    [CompilerGeneratedAttribute]
public void set_Property(string value);
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("Update", "TypeData")]
public class Microsoft.PowerShell.Commands.UpdateTypeDataCommand : UpdateData {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
[ValidateSetAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public PSMemberTypes MemberType { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string MemberName { get; public set; }
    [ParameterAttribute]
public object Value { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public object SecondValue { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public Type TypeConverter { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public Type TypeAdapter { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string SerializationMethod { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public Type TargetTypeForDeserialization { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int SerializationDepth { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string DefaultDisplayProperty { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public Nullable`1<bool> InheritPropertySerializationSet { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string StringSerializationSource { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] DefaultDisplayPropertySet { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] DefaultKeyPropertySet { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public String[] PropertySerializationSet { get; public set; }
    [ParameterAttribute]
[ArgumentToTypeNameTransformationAttribute]
[ValidateNotNullOrEmptyAttribute]
public string TypeName { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [ParameterAttribute]
public TypeData[] TypeData { get; public set; }
    public PSMemberTypes get_MemberType();
    public void set_MemberType(PSMemberTypes value);
    public string get_MemberName();
    public void set_MemberName(string value);
    public object get_Value();
    public void set_Value(object value);
    public object get_SecondValue();
    public void set_SecondValue(object value);
    public Type get_TypeConverter();
    public void set_TypeConverter(Type value);
    public Type get_TypeAdapter();
    public void set_TypeAdapter(Type value);
    public string get_SerializationMethod();
    public void set_SerializationMethod(string value);
    public Type get_TargetTypeForDeserialization();
    public void set_TargetTypeForDeserialization(Type value);
    public int get_SerializationDepth();
    public void set_SerializationDepth(int value);
    public string get_DefaultDisplayProperty();
    public void set_DefaultDisplayProperty(string value);
    public Nullable`1<bool> get_InheritPropertySerializationSet();
    public void set_InheritPropertySerializationSet(Nullable`1<bool> value);
    public string get_StringSerializationSource();
    public void set_StringSerializationSource(string value);
    public String[] get_DefaultDisplayPropertySet();
    public void set_DefaultDisplayPropertySet(String[] value);
    public String[] get_DefaultKeyPropertySet();
    public void set_DefaultKeyPropertySet(String[] value);
    public String[] get_PropertySerializationSet();
    public void set_PropertySerializationSet(String[] value);
    public string get_TypeName();
    public void set_TypeName(string value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    public TypeData[] get_TypeData();
    public void set_TypeData(TypeData[] value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
internal class Microsoft.PowerShell.Commands.Utility.JoinItemCompleter : object {
    public string NewLineText { get; }
    public sealed virtual IEnumerable`1<CompletionResult> CompleteArgument(string commandName, string parameterName, string wordToComplete, CommandAst commandAst, IDictionary fakeBoundParameters);
    public string get_NewLineText();
}
[CmdletAttribute("Join", "String")]
[OutputTypeAttribute("System.String")]
public class Microsoft.PowerShell.Commands.Utility.JoinStringCommand : PSCmdlet {
    [ParameterAttribute]
[ArgumentCompleterAttribute("System.Management.Automation.PropertyNameCompleter")]
public PSPropertyExpression Property { get; public set; }
    [ParameterAttribute]
[ArgumentCompleterAttribute("Microsoft.PowerShell.Commands.Utility.JoinItemCompleter")]
[AllowEmptyStringAttribute]
public string Separator { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string OutputPrefix { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string OutputSuffix { get; public set; }
    [ParameterAttribute]
public SwitchParameter SingleQuote { get; public set; }
    [ParameterAttribute]
public SwitchParameter DoubleQuote { get; public set; }
    [ParameterAttribute]
[ArgumentCompleterAttribute("Microsoft.PowerShell.Commands.Utility.JoinItemCompleter")]
public string FormatString { get; public set; }
    [ParameterAttribute]
public SwitchParameter UseCulture { get; public set; }
    [ParameterAttribute]
public PSObject[] InputObject { get; public set; }
    [CompilerGeneratedAttribute]
public PSPropertyExpression get_Property();
    [CompilerGeneratedAttribute]
public void set_Property(PSPropertyExpression value);
    public string get_Separator();
    public void set_Separator(string value);
    [CompilerGeneratedAttribute]
public string get_OutputPrefix();
    [CompilerGeneratedAttribute]
public void set_OutputPrefix(string value);
    [CompilerGeneratedAttribute]
public string get_OutputSuffix();
    [CompilerGeneratedAttribute]
public void set_OutputSuffix(string value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_SingleQuote();
    [CompilerGeneratedAttribute]
public void set_SingleQuote(SwitchParameter value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_DoubleQuote();
    [CompilerGeneratedAttribute]
public void set_DoubleQuote(SwitchParameter value);
    [CompilerGeneratedAttribute]
public string get_FormatString();
    [CompilerGeneratedAttribute]
public void set_FormatString(string value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_UseCulture();
    [CompilerGeneratedAttribute]
public void set_UseCulture(SwitchParameter value);
    [CompilerGeneratedAttribute]
public PSObject[] get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject[] value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[ObsoleteAttribute("This class is obsolete", "True")]
public static class Microsoft.PowerShell.Commands.UtilityResources : object {
    public static string PathDoesNotExist { get; }
    public static string FileReadError { get; }
    public static string FormatHexPathPrefix { get; }
    public static string CouldNotParseAsPowerShellDataFile { get; }
    public static string get_PathDoesNotExist();
    public static string get_FileReadError();
    public static string get_FormatHexPathPrefix();
    public static string get_CouldNotParseAsPowerShellDataFile();
}
public class Microsoft.PowerShell.Commands.ValidateCultureNamesGenerator : object {
    private sealed virtual override String[] System.Management.Automation.IValidateSetValuesGenerator.GetValidValues();
}
public class Microsoft.PowerShell.Commands.ValidateMatchStringCultureNamesGenerator : object {
    private sealed virtual override String[] System.Management.Automation.IValidateSetValuesGenerator.GetValidValues();
}
public abstract class Microsoft.PowerShell.Commands.VariableCommandBase : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string Scope { get; public set; }
    protected String[] IncludeFilters { get; protected set; }
    protected String[] ExcludeFilters { get; protected set; }
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    protected String[] get_IncludeFilters();
    protected void set_IncludeFilters(String[] value);
    protected String[] get_ExcludeFilters();
    protected void set_ExcludeFilters(String[] value);
}
[CmdletAttribute("Wait", "Debugger")]
public class Microsoft.PowerShell.Commands.WaitDebuggerCommand : PSCmdlet {
    protected virtual void EndProcessing();
}
[CmdletAttribute("Wait", "Event")]
[OutputTypeAttribute("System.Management.Automation.PSEventArgs")]
public class Microsoft.PowerShell.Commands.WaitEventCommand : PSCmdlet {
    [ParameterAttribute]
public string SourceIdentifier { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Timeout { get; public set; }
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    public int get_Timeout();
    public void set_Timeout(int value);
    protected virtual void ProcessRecord();
    protected virtual void StopProcessing();
}
public enum Microsoft.PowerShell.Commands.WebAuthenticationType : Enum {
    public int value__;
    public static WebAuthenticationType None;
    public static WebAuthenticationType Basic;
    public static WebAuthenticationType Bearer;
    public static WebAuthenticationType OAuth;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.PowerShell.Commands.WebCmdletElementCollection : ReadOnlyCollection`1<PSObject> {
    public PSObject Find(string nameOrId);
    public PSObject FindById(string id);
    public PSObject FindByName(string name);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.PowerShell.Commands.WebProxy : object {
    public ICredentials Credentials { get; public set; }
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual bool Equals(WebProxy other);
    public sealed virtual ICredentials get_Credentials();
    public sealed virtual void set_Credentials(ICredentials value);
    [NullableContextAttribute("1")]
public sealed virtual Uri GetProxy(Uri destination);
    [NullableContextAttribute("1")]
public sealed virtual bool IsBypassed(Uri host);
}
public enum Microsoft.PowerShell.Commands.WebRequestMethod : Enum {
    public int value__;
    public static WebRequestMethod Default;
    public static WebRequestMethod Get;
    public static WebRequestMethod Head;
    public static WebRequestMethod Post;
    public static WebRequestMethod Put;
    public static WebRequestMethod Delete;
    public static WebRequestMethod Trace;
    public static WebRequestMethod Options;
    public static WebRequestMethod Merge;
    public static WebRequestMethod Patch;
}
public abstract class Microsoft.PowerShell.Commands.WebRequestPSCmdlet : PSCmdlet {
    [ParameterAttribute]
public SwitchParameter UseBasicParsing { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public Uri Uri { get; public set; }
    [ParameterAttribute]
[ArgumentToVersionTransformationAttribute]
[HttpVersionCompletionsAttribute]
public Version HttpVersion { get; public set; }
    [ParameterAttribute]
public WebRequestSession WebSession { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string SessionVariable { get; public set; }
    [ParameterAttribute]
public SwitchParameter AllowUnencryptedAuthentication { get; public set; }
    [ParameterAttribute]
public WebAuthenticationType Authentication { get; public set; }
    [ParameterAttribute]
[CredentialAttribute]
public PSCredential Credential { get; public set; }
    [ParameterAttribute]
public SwitchParameter UseDefaultCredentials { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string CertificateThumbprint { get; public set; }
    [ParameterAttribute]
[ValidateNotNullAttribute]
public X509Certificate Certificate { get; public set; }
    [ParameterAttribute]
public SwitchParameter SkipCertificateCheck { get; public set; }
    [ParameterAttribute]
public WebSslProtocol SslProtocol { get; public set; }
    [ParameterAttribute]
public SecureString Token { get; public set; }
    [ParameterAttribute]
public string UserAgent { get; public set; }
    [ParameterAttribute]
public SwitchParameter DisableKeepAlive { get; public set; }
    [AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int ConnectionTimeoutSeconds { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int OperationTimeoutSeconds { get; public set; }
    [ParameterAttribute]
public IDictionary Headers { get; public set; }
    [ParameterAttribute]
public SwitchParameter SkipHeaderValidation { get; public set; }
    [ParameterAttribute]
public SwitchParameter AllowInsecureRedirect { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int MaximumRedirection { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int MaximumRetryCount { get; public set; }
    [ParameterAttribute]
public SwitchParameter PreserveAuthorizationOnRedirect { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int RetryIntervalSec { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public WebRequestMethod Method { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ValidateNotNullOrEmptyAttribute]
public string CustomMethod { get; public set; }
    [ParameterAttribute]
public SwitchParameter PreserveHttpMethodOnRedirect { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public UnixDomainSocketEndPoint UnixSocket { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public SwitchParameter NoProxy { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public Uri Proxy { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[CredentialAttribute]
public PSCredential ProxyCredential { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public SwitchParameter ProxyUseDefaultCredentials { get; public set; }
    [ParameterAttribute]
public object Body { get; public set; }
    [ParameterAttribute]
public IDictionary Form { get; public set; }
    [ParameterAttribute]
public string ContentType { get; public set; }
    [ParameterAttribute]
[ValidateSetAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string TransferEncoding { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string InFile { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string OutFile { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [ParameterAttribute]
public SwitchParameter Resume { get; public set; }
    [ParameterAttribute]
public SwitchParameter SkipHttpErrorCheck { get; public set; }
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_UseBasicParsing();
    [CompilerGeneratedAttribute]
public virtual void set_UseBasicParsing(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual Uri get_Uri();
    [CompilerGeneratedAttribute]
public virtual void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public virtual Version get_HttpVersion();
    [CompilerGeneratedAttribute]
public virtual void set_HttpVersion(Version value);
    [CompilerGeneratedAttribute]
public virtual WebRequestSession get_WebSession();
    [CompilerGeneratedAttribute]
public virtual void set_WebSession(WebRequestSession value);
    [CompilerGeneratedAttribute]
public virtual string get_SessionVariable();
    [CompilerGeneratedAttribute]
public virtual void set_SessionVariable(string value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_AllowUnencryptedAuthentication();
    [CompilerGeneratedAttribute]
public virtual void set_AllowUnencryptedAuthentication(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual WebAuthenticationType get_Authentication();
    [CompilerGeneratedAttribute]
public virtual void set_Authentication(WebAuthenticationType value);
    [CompilerGeneratedAttribute]
public virtual PSCredential get_Credential();
    [CompilerGeneratedAttribute]
public virtual void set_Credential(PSCredential value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_UseDefaultCredentials();
    [CompilerGeneratedAttribute]
public virtual void set_UseDefaultCredentials(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual string get_CertificateThumbprint();
    [CompilerGeneratedAttribute]
public virtual void set_CertificateThumbprint(string value);
    [CompilerGeneratedAttribute]
public virtual X509Certificate get_Certificate();
    [CompilerGeneratedAttribute]
public virtual void set_Certificate(X509Certificate value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_SkipCertificateCheck();
    [CompilerGeneratedAttribute]
public virtual void set_SkipCertificateCheck(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual WebSslProtocol get_SslProtocol();
    [CompilerGeneratedAttribute]
public virtual void set_SslProtocol(WebSslProtocol value);
    [CompilerGeneratedAttribute]
public virtual SecureString get_Token();
    [CompilerGeneratedAttribute]
public virtual void set_Token(SecureString value);
    [CompilerGeneratedAttribute]
public virtual string get_UserAgent();
    [CompilerGeneratedAttribute]
public virtual void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_DisableKeepAlive();
    [CompilerGeneratedAttribute]
public virtual void set_DisableKeepAlive(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual int get_ConnectionTimeoutSeconds();
    [CompilerGeneratedAttribute]
public virtual void set_ConnectionTimeoutSeconds(int value);
    [CompilerGeneratedAttribute]
public virtual int get_OperationTimeoutSeconds();
    [CompilerGeneratedAttribute]
public virtual void set_OperationTimeoutSeconds(int value);
    [CompilerGeneratedAttribute]
public virtual IDictionary get_Headers();
    [CompilerGeneratedAttribute]
public virtual void set_Headers(IDictionary value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_SkipHeaderValidation();
    [CompilerGeneratedAttribute]
public virtual void set_SkipHeaderValidation(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_AllowInsecureRedirect();
    [CompilerGeneratedAttribute]
public virtual void set_AllowInsecureRedirect(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual int get_MaximumRedirection();
    [CompilerGeneratedAttribute]
public virtual void set_MaximumRedirection(int value);
    [CompilerGeneratedAttribute]
public virtual int get_MaximumRetryCount();
    [CompilerGeneratedAttribute]
public virtual void set_MaximumRetryCount(int value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_PreserveAuthorizationOnRedirect();
    [CompilerGeneratedAttribute]
public virtual void set_PreserveAuthorizationOnRedirect(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual int get_RetryIntervalSec();
    [CompilerGeneratedAttribute]
public virtual void set_RetryIntervalSec(int value);
    [CompilerGeneratedAttribute]
public virtual WebRequestMethod get_Method();
    [CompilerGeneratedAttribute]
public virtual void set_Method(WebRequestMethod value);
    public virtual string get_CustomMethod();
    public virtual void set_CustomMethod(string value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_PreserveHttpMethodOnRedirect();
    [CompilerGeneratedAttribute]
public virtual void set_PreserveHttpMethodOnRedirect(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual UnixDomainSocketEndPoint get_UnixSocket();
    [CompilerGeneratedAttribute]
public virtual void set_UnixSocket(UnixDomainSocketEndPoint value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_NoProxy();
    [CompilerGeneratedAttribute]
public virtual void set_NoProxy(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual Uri get_Proxy();
    [CompilerGeneratedAttribute]
public virtual void set_Proxy(Uri value);
    [CompilerGeneratedAttribute]
public virtual PSCredential get_ProxyCredential();
    [CompilerGeneratedAttribute]
public virtual void set_ProxyCredential(PSCredential value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_ProxyUseDefaultCredentials();
    [CompilerGeneratedAttribute]
public virtual void set_ProxyUseDefaultCredentials(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual object get_Body();
    [CompilerGeneratedAttribute]
public virtual void set_Body(object value);
    [CompilerGeneratedAttribute]
public virtual IDictionary get_Form();
    [CompilerGeneratedAttribute]
public virtual void set_Form(IDictionary value);
    [CompilerGeneratedAttribute]
public virtual string get_ContentType();
    [CompilerGeneratedAttribute]
public virtual void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public virtual string get_TransferEncoding();
    [CompilerGeneratedAttribute]
public virtual void set_TransferEncoding(string value);
    [CompilerGeneratedAttribute]
public virtual string get_InFile();
    [CompilerGeneratedAttribute]
public virtual void set_InFile(string value);
    [CompilerGeneratedAttribute]
public virtual string get_OutFile();
    [CompilerGeneratedAttribute]
public virtual void set_OutFile(string value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_PassThru();
    [CompilerGeneratedAttribute]
public virtual void set_PassThru(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_Resume();
    [CompilerGeneratedAttribute]
public virtual void set_Resume(SwitchParameter value);
    [CompilerGeneratedAttribute]
public virtual SwitchParameter get_SkipHttpErrorCheck();
    [CompilerGeneratedAttribute]
public virtual void set_SkipHttpErrorCheck(SwitchParameter value);
    internal abstract virtual void ProcessResponse(HttpResponseMessage response);
    protected virtual void ProcessRecord();
    protected virtual void StopProcessing();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    internal virtual void ValidateParameters();
    internal virtual void PrepareSession();
    internal virtual HttpClient GetHttpClient(bool handleRedirect);
    internal virtual HttpRequestMessage GetRequest(Uri uri);
    internal virtual void FillRequestStream(HttpRequestMessage request);
    internal virtual HttpResponseMessage GetResponse(HttpClient client, HttpRequestMessage request, bool handleRedirect);
    internal virtual void UpdateSession(HttpResponseMessage response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.PowerShell.Commands.WebRequestSession : object {
    public Dictionary`2<string, string> Headers { get; public set; }
    public CookieContainer Cookies { get; public set; }
    public bool UseDefaultCredentials { get; public set; }
    [NullableAttribute("2")]
public ICredentials Credentials { get; public set; }
    [NullableAttribute("2")]
public X509CertificateCollection Certificates { get; public set; }
    public string UserAgent { get; public set; }
    [NullableAttribute("2")]
public IWebProxy Proxy { get; public set; }
    public int MaximumRedirection { get; public set; }
    public int MaximumRetryCount { get; public set; }
    public int RetryIntervalInSeconds { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(Dictionary`2<string, string> value);
    public CookieContainer get_Cookies();
    public void set_Cookies(CookieContainer value);
    public bool get_UseDefaultCredentials();
    public void set_UseDefaultCredentials(bool value);
    [NullableContextAttribute("2")]
public ICredentials get_Credentials();
    [NullableContextAttribute("2")]
public void set_Credentials(ICredentials value);
    [NullableContextAttribute("2")]
public X509CertificateCollection get_Certificates();
    [NullableContextAttribute("2")]
public void set_Certificates(X509CertificateCollection value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [NullableContextAttribute("2")]
public IWebProxy get_Proxy();
    [NullableContextAttribute("2")]
public void set_Proxy(IWebProxy value);
    public int get_MaximumRedirection();
    public void set_MaximumRedirection(int value);
    [CompilerGeneratedAttribute]
public int get_MaximumRetryCount();
    [CompilerGeneratedAttribute]
public void set_MaximumRetryCount(int value);
    [CompilerGeneratedAttribute]
public int get_RetryIntervalInSeconds();
    [CompilerGeneratedAttribute]
public void set_RetryIntervalInSeconds(int value);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.PowerShell.Commands.WebResponseContentMemoryStream : MemoryStream {
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual int ReadByte();
    public virtual void SetLength(long value);
    public virtual Byte[] ToArray();
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual void WriteByte(byte value);
    public virtual void WriteTo(Stream stream);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.PowerShell.Commands.WebResponseHelper : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.PowerShell.Commands.WebResponseObject : object {
    protected TimeSpan perReadTimeout;
    public HttpResponseMessage BaseResponse { get; public set; }
    [NullableAttribute("2")]
public Byte[] Content { get; protected set; }
    public Dictionary`2<string, IEnumerable`1<string>> Headers { get; }
    [NullableAttribute("2")]
public string RawContent { get; protected set; }
    public long RawContentLength { get; }
    public MemoryStream RawContentStream { get; protected set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, string> RelationLink { get; }
    public int StatusCode { get; }
    public string StatusDescription { get; }
    public WebResponseObject(HttpResponseMessage response, TimeSpan perReadTimeout, CancellationToken cancellationToken);
    public WebResponseObject(HttpResponseMessage response, Stream contentStream, TimeSpan perReadTimeout, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public HttpResponseMessage get_BaseResponse();
    [CompilerGeneratedAttribute]
public void set_BaseResponse(HttpResponseMessage value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Byte[] get_Content();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected void set_Content(Byte[] value);
    public Dictionary`2<string, IEnumerable`1<string>> get_Headers();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_RawContent();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected void set_RawContent(string value);
    public long get_RawContentLength();
    [CompilerGeneratedAttribute]
public MemoryStream get_RawContentStream();
    [CompilerGeneratedAttribute]
protected void set_RawContentStream(MemoryStream value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_RelationLink();
    public int get_StatusCode();
    public string get_StatusDescription();
    public sealed virtual string ToString();
}
[FlagsAttribute]
public enum Microsoft.PowerShell.Commands.WebSslProtocol : Enum {
    public int value__;
    public static WebSslProtocol Default;
    public static WebSslProtocol Tls;
    public static WebSslProtocol Tls11;
    public static WebSslProtocol Tls12;
    public static WebSslProtocol Tls13;
}
public class Microsoft.PowerShell.Commands.WriteAliasCommandBase : PSCmdlet {
    [ParameterAttribute]
public string Name { get; public set; }
    [ParameterAttribute]
public string Value { get; public set; }
    [ParameterAttribute]
public string Description { get; public set; }
    [ParameterAttribute]
public ScopedItemOptions Option { get; public set; }
    [ParameterAttribute]
public SwitchParameter PassThru { get; public set; }
    [ParameterAttribute]
public string Scope { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public ScopedItemOptions get_Option();
    [CompilerGeneratedAttribute]
public void set_Option(ScopedItemOptions value);
    public SwitchParameter get_PassThru();
    public void set_PassThru(SwitchParameter value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
}
[CmdletAttribute("Write", "Debug")]
public class Microsoft.PowerShell.Commands.WriteDebugCommand : PSCmdlet {
    [ParameterAttribute]
[AllowEmptyStringAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string Message { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Write", "Error")]
public class Microsoft.PowerShell.Commands.WriteErrorCommand : WriteOrThrowErrorCommand {
}
public class Microsoft.PowerShell.Commands.WriteErrorException : SystemException {
    public WriteErrorException(string message);
    public WriteErrorException(string message, Exception innerException);
    [ObsoleteAttribute("Legacy serialization support is deprecated since .NET 8")]
protected WriteErrorException(SerializationInfo info, StreamingContext context);
}
[CmdletAttribute("Write", "Host")]
public class Microsoft.PowerShell.Commands.WriteHostCommand : ConsoleColorCmdlet {
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public object Object { get; public set; }
    [ParameterAttribute]
public SwitchParameter NoNewline { get; public set; }
    [ParameterAttribute]
public object Separator { get; public set; }
    [CompilerGeneratedAttribute]
public object get_Object();
    [CompilerGeneratedAttribute]
public void set_Object(object value);
    public SwitchParameter get_NoNewline();
    public void set_NoNewline(SwitchParameter value);
    [CompilerGeneratedAttribute]
public object get_Separator();
    [CompilerGeneratedAttribute]
public void set_Separator(object value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Write", "Information")]
public class Microsoft.PowerShell.Commands.WriteInformationCommand : PSCmdlet {
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowNullAttribute]
public object MessageData { get; public set; }
    [ParameterAttribute]
public String[] Tags { get; public set; }
    [CompilerGeneratedAttribute]
public object get_MessageData();
    [CompilerGeneratedAttribute]
public void set_MessageData(object value);
    [CompilerGeneratedAttribute]
public String[] get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(String[] value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
}
public class Microsoft.PowerShell.Commands.WriteOrThrowErrorCommand : PSCmdlet {
    [ParameterAttribute]
public Exception Exception { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
[AllowNullAttribute]
[AllowEmptyStringAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string Message { get; public set; }
    [ParameterAttribute]
public ErrorRecord ErrorRecord { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public ErrorCategory Category { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public string ErrorId { get; public set; }
    [ParameterAttribute]
[ParameterAttribute]
public object TargetObject { get; public set; }
    [ParameterAttribute]
public string RecommendedAction { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string CategoryActivity { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string CategoryReason { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string CategoryTargetName { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string CategoryTargetType { get; public set; }
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public ErrorRecord get_ErrorRecord();
    [CompilerGeneratedAttribute]
public void set_ErrorRecord(ErrorRecord value);
    [CompilerGeneratedAttribute]
public ErrorCategory get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(ErrorCategory value);
    [CompilerGeneratedAttribute]
public string get_ErrorId();
    [CompilerGeneratedAttribute]
public void set_ErrorId(string value);
    [CompilerGeneratedAttribute]
public object get_TargetObject();
    [CompilerGeneratedAttribute]
public void set_TargetObject(object value);
    [CompilerGeneratedAttribute]
public string get_RecommendedAction();
    [CompilerGeneratedAttribute]
public void set_RecommendedAction(string value);
    [CompilerGeneratedAttribute]
public string get_CategoryActivity();
    [CompilerGeneratedAttribute]
public void set_CategoryActivity(string value);
    [CompilerGeneratedAttribute]
public string get_CategoryReason();
    [CompilerGeneratedAttribute]
public void set_CategoryReason(string value);
    [CompilerGeneratedAttribute]
public string get_CategoryTargetName();
    [CompilerGeneratedAttribute]
public void set_CategoryTargetName(string value);
    [CompilerGeneratedAttribute]
public string get_CategoryTargetType();
    [CompilerGeneratedAttribute]
public void set_CategoryTargetType(string value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Write", "Output")]
public class Microsoft.PowerShell.Commands.WriteOutputCommand : PSCmdlet {
    [ParameterAttribute]
[AllowNullAttribute]
[AllowEmptyCollectionAttribute]
public PSObject InputObject { get; public set; }
    [ParameterAttribute]
public SwitchParameter NoEnumerate { get; public set; }
    [CompilerGeneratedAttribute]
public PSObject get_InputObject();
    [CompilerGeneratedAttribute]
public void set_InputObject(PSObject value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_NoEnumerate();
    [CompilerGeneratedAttribute]
public void set_NoEnumerate(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Write", "Progress")]
public class Microsoft.PowerShell.Commands.WriteProgressCommand : PSCmdlet {
    [ParameterAttribute]
public string Activity { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string Status { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int Id { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int PercentComplete { get; public set; }
    [ParameterAttribute]
public int SecondsRemaining { get; public set; }
    [ParameterAttribute]
public string CurrentOperation { get; public set; }
    [ParameterAttribute]
[ValidateRangeAttribute("Mono.Cecil.CustomAttributeArgument", "Mono.Cecil.CustomAttributeArgument")]
public int ParentId { get; public set; }
    [ParameterAttribute]
public SwitchParameter Completed { get; public set; }
    [ParameterAttribute]
public int SourceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Activity();
    [CompilerGeneratedAttribute]
public void set_Activity(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_PercentComplete();
    [CompilerGeneratedAttribute]
public void set_PercentComplete(int value);
    [CompilerGeneratedAttribute]
public int get_SecondsRemaining();
    [CompilerGeneratedAttribute]
public void set_SecondsRemaining(int value);
    [CompilerGeneratedAttribute]
public string get_CurrentOperation();
    [CompilerGeneratedAttribute]
public void set_CurrentOperation(string value);
    [CompilerGeneratedAttribute]
public int get_ParentId();
    [CompilerGeneratedAttribute]
public void set_ParentId(int value);
    public SwitchParameter get_Completed();
    public void set_Completed(SwitchParameter value);
    [CompilerGeneratedAttribute]
public int get_SourceId();
    [CompilerGeneratedAttribute]
public void set_SourceId(int value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Write", "Verbose")]
public class Microsoft.PowerShell.Commands.WriteVerboseCommand : PSCmdlet {
    [ParameterAttribute]
[AllowEmptyStringAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string Message { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Write", "Warning")]
public class Microsoft.PowerShell.Commands.WriteWarningCommand : PSCmdlet {
    [ParameterAttribute]
[AllowEmptyStringAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string Message { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    protected virtual void ProcessRecord();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class NewObjectStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class OutPrinterDisplayStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class SelectObjectStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class SendMailMessageStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class SortObjectStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class StartSleepStrings : object {
}
internal class System.Management.Automation.CustomInternalSerializer : object {
}
internal class System.Management.Automation.CustomSerialization : object {
    public static int MshDefaultSerializationDepth { get; }
    [CompilerGeneratedAttribute]
public static int get_MshDefaultSerializationDepth();
}
internal static class System.Management.Automation.CustomSerializationStrings : object {
}
[AttributeUsageAttribute("384")]
public class System.Management.Automation.Runspaces.RunspaceAttribute : ArgumentTransformationAttribute {
    public bool TransformNullOptionalParameters { get; }
    public virtual object Transform(EngineIntrinsics engineIntrinsics, object inputData);
    public virtual bool get_TransformNullOptionalParameters();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class TestJsonCmdletStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class TraceCommandStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class UnblockFileStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class UpdateDataStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class UpdateListStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class UtilityCommonStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class VariableCommandStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class WebCmdletStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class WriteErrorStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class WriteProgressResourceStrings : object {
}
