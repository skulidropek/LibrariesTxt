[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class CertificateCommands : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class CertificateProviderStrings : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class CmsCommands : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class ExecutionPolicyCommands : object {
}
[CmdletAttribute("ConvertFrom", "SecureString")]
[OutputTypeAttribute("System.String")]
public class Microsoft.PowerShell.Commands.ConvertFromSecureStringCommand : ConvertFromToSecureStringCommandBase {
    [ParameterAttribute]
public SecureString SecureString { get; public set; }
    [ParameterAttribute]
public SwitchParameter AsPlainText { get; public set; }
    public SecureString get_SecureString();
    public void set_SecureString(SecureString value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_AsPlainText();
    [CompilerGeneratedAttribute]
public void set_AsPlainText(SwitchParameter value);
    protected virtual void ProcessRecord();
}
public abstract class Microsoft.PowerShell.Commands.ConvertFromToSecureStringCommandBase : SecureStringCommandBase {
    [ParameterAttribute]
public SecureString SecureKey { get; public set; }
    [ParameterAttribute]
public Byte[] Key { get; public set; }
    protected ConvertFromToSecureStringCommandBase(string name);
    public SecureString get_SecureKey();
    public void set_SecureKey(SecureString value);
    public Byte[] get_Key();
    public void set_Key(Byte[] value);
}
[CmdletAttribute("ConvertTo", "SecureString")]
[OutputTypeAttribute("System.Security.SecureString")]
public class Microsoft.PowerShell.Commands.ConvertToSecureStringCommand : ConvertFromToSecureStringCommandBase {
    [ParameterAttribute]
public string String { get; public set; }
    [ParameterAttribute]
public SwitchParameter AsPlainText { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    public string get_String();
    public void set_String(string value);
    public SwitchParameter get_AsPlainText();
    public void set_AsPlainText(SwitchParameter value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Get", "AuthenticodeSignature")]
[OutputTypeAttribute("System.Management.Automation.Signature")]
public class Microsoft.PowerShell.Commands.GetAuthenticodeSignatureCommand : SignatureCommandsBase {
    protected virtual Signature PerformAction(string filePath);
    protected virtual Signature PerformAction(string sourcePathOrExtension, Byte[] content);
}
[CmdletAttribute("Get", "CmsMessage")]
[OutputTypeAttribute("System.Security.Cryptography.Pkcs.EnvelopedCms")]
public class Microsoft.PowerShell.Commands.GetCmsMessageCommand : PSCmdlet {
    [ParameterAttribute]
[AllowNullAttribute]
[AllowEmptyStringAttribute]
public string Content { get; public set; }
    [ParameterAttribute]
public string Path { get; public set; }
    [ParameterAttribute]
public string LiteralPath { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_LiteralPath();
    [CompilerGeneratedAttribute]
public void set_LiteralPath(string value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
[CmdletAttribute("Get", "Credential")]
[OutputTypeAttribute("System.Management.Automation.PSCredential")]
public class Microsoft.PowerShell.Commands.GetCredentialCommand : PSCmdlet {
    [ParameterAttribute]
[ValidateNotNullAttribute]
[CredentialAttribute]
public PSCredential Credential { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string Message { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string UserName { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public string Title { get; public set; }
    [CompilerGeneratedAttribute]
public PSCredential get_Credential();
    [CompilerGeneratedAttribute]
public void set_Credential(PSCredential value);
    public string get_Message();
    public void set_Message(string value);
    public string get_UserName();
    public void set_UserName(string value);
    public string get_Title();
    public void set_Title(string value);
    protected virtual void BeginProcessing();
}
[CmdletAttribute("Get", "ExecutionPolicy")]
[OutputTypeAttribute("Microsoft.PowerShell.ExecutionPolicy")]
public class Microsoft.PowerShell.Commands.GetExecutionPolicyCommand : PSCmdlet {
    [ParameterAttribute]
public ExecutionPolicyScope Scope { get; public set; }
    [ParameterAttribute]
public SwitchParameter List { get; public set; }
    public ExecutionPolicyScope get_Scope();
    public void set_Scope(ExecutionPolicyScope value);
    public SwitchParameter get_List();
    public void set_List(SwitchParameter value);
    protected virtual void BeginProcessing();
}
[CmdletAttribute("Get", "PfxCertificate")]
[OutputTypeAttribute("System.Security.Cryptography.X509Certificates.X509Certificate2")]
public class Microsoft.PowerShell.Commands.GetPfxCertificateCommand : PSCmdlet {
    [ParameterAttribute]
public String[] FilePath { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] LiteralPath { get; public set; }
    [ParameterAttribute]
public SecureString Password { get; public set; }
    [ParameterAttribute]
public SwitchParameter NoPromptForPassword { get; public set; }
    public String[] get_FilePath();
    public void set_FilePath(String[] value);
    public String[] get_LiteralPath();
    public void set_LiteralPath(String[] value);
    [CompilerGeneratedAttribute]
public SecureString get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SecureString value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_NoPromptForPassword();
    [CompilerGeneratedAttribute]
public void set_NoPromptForPassword(SwitchParameter value);
    protected virtual void ProcessRecord();
}
[CmdletAttribute("Protect", "CmsMessage")]
[OutputTypeAttribute("System.String")]
public class Microsoft.PowerShell.Commands.ProtectCmsMessageCommand : PSCmdlet {
    [ParameterAttribute]
public CmsMessageRecipient[] To { get; public set; }
    [ParameterAttribute]
[AllowNullAttribute]
[AllowEmptyStringAttribute]
public PSObject Content { get; public set; }
    [ParameterAttribute]
public string Path { get; public set; }
    [ParameterAttribute]
public string LiteralPath { get; public set; }
    [ParameterAttribute]
public string OutFile { get; public set; }
    [CompilerGeneratedAttribute]
public CmsMessageRecipient[] get_To();
    [CompilerGeneratedAttribute]
public void set_To(CmsMessageRecipient[] value);
    [CompilerGeneratedAttribute]
public PSObject get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(PSObject value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_LiteralPath();
    [CompilerGeneratedAttribute]
public void set_LiteralPath(string value);
    [CompilerGeneratedAttribute]
public string get_OutFile();
    [CompilerGeneratedAttribute]
public void set_OutFile(string value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
public abstract class Microsoft.PowerShell.Commands.SecureStringCommandBase : PSCmdlet {
    protected SecureString SecureStringData { get; protected set; }
    protected SecureStringCommandBase(string name);
    protected SecureString get_SecureStringData();
    protected void set_SecureStringData(SecureString value);
}
public abstract class Microsoft.PowerShell.Commands.SecurityDescriptorCommandsBase : PSCmdlet {
    [ParameterAttribute]
public string Filter { get; public set; }
    [ParameterAttribute]
public String[] Include { get; public set; }
    [ParameterAttribute]
public String[] Exclude { get; public set; }
    public string get_Filter();
    public void set_Filter(string value);
    public String[] get_Include();
    public void set_Include(String[] value);
    public String[] get_Exclude();
    public void set_Exclude(String[] value);
    public static string GetPath(PSObject instance);
    public static string GetOwner(PSObject instance);
    public static string GetGroup(PSObject instance);
    public static AuthorizationRuleCollection GetAccess(PSObject instance);
    public static AuthorizationRuleCollection GetAudit(PSObject instance);
    public static SecurityIdentifier GetCentralAccessPolicyId(PSObject instance);
    public static string GetSddl(PSObject instance);
}
[CmdletAttribute("Set", "AuthenticodeSignature")]
[OutputTypeAttribute("System.Management.Automation.Signature")]
public class Microsoft.PowerShell.Commands.SetAuthenticodeSignatureCommand : SignatureCommandsBase {
    [ParameterAttribute]
public X509Certificate2 Certificate { get; public set; }
    [ParameterAttribute]
[ValidateSetAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public string IncludeChain { get; public set; }
    [ParameterAttribute]
public string TimestampServer { get; public set; }
    [ParameterAttribute]
public string HashAlgorithm { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    public X509Certificate2 get_Certificate();
    public void set_Certificate(X509Certificate2 value);
    public string get_IncludeChain();
    public void set_IncludeChain(string value);
    public string get_TimestampServer();
    public void set_TimestampServer(string value);
    public string get_HashAlgorithm();
    public void set_HashAlgorithm(string value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    protected virtual Signature PerformAction(string filePath);
    protected virtual Signature PerformAction(string sourcePathOrExtension, Byte[] content);
}
[CmdletAttribute("Set", "ExecutionPolicy")]
public class Microsoft.PowerShell.Commands.SetExecutionPolicyCommand : PSCmdlet {
    [ParameterAttribute]
public ExecutionPolicy ExecutionPolicy { get; public set; }
    [ParameterAttribute]
public ExecutionPolicyScope Scope { get; public set; }
    [ParameterAttribute]
public SwitchParameter Force { get; public set; }
    public ExecutionPolicy get_ExecutionPolicy();
    public void set_ExecutionPolicy(ExecutionPolicy value);
    public ExecutionPolicyScope get_Scope();
    public void set_Scope(ExecutionPolicyScope value);
    public SwitchParameter get_Force();
    public void set_Force(SwitchParameter value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
}
public abstract class Microsoft.PowerShell.Commands.SignatureCommandsBase : PSCmdlet {
    [ParameterAttribute]
public String[] FilePath { get; public set; }
    [ParameterAttribute]
[AliasAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] LiteralPath { get; public set; }
    protected Signature Signature { get; protected set; }
    [ParameterAttribute]
public String[] SourcePathOrExtension { get; public set; }
    [ParameterAttribute]
[ValidateNotNullOrEmptyAttribute]
public Byte[] Content { get; public set; }
    protected SignatureCommandsBase(string name);
    public String[] get_FilePath();
    public void set_FilePath(String[] value);
    public String[] get_LiteralPath();
    public void set_LiteralPath(String[] value);
    protected Signature get_Signature();
    protected void set_Signature(Signature value);
    public String[] get_SourcePathOrExtension();
    public void set_SourcePathOrExtension(String[] value);
    public Byte[] get_Content();
    public void set_Content(Byte[] value);
    protected virtual void ProcessRecord();
    protected abstract virtual Signature PerformAction(string filePath);
    protected abstract virtual Signature PerformAction(string fileName, Byte[] content);
}
[CmdletAttribute("Unprotect", "CmsMessage")]
[OutputTypeAttribute("System.String")]
public class Microsoft.PowerShell.Commands.UnprotectCmsMessageCommand : PSCmdlet {
    [ParameterAttribute]
[AllowNullAttribute]
[AllowEmptyStringAttribute]
public string Content { get; public set; }
    [ParameterAttribute]
[PSTypeNameAttribute("System.Diagnostics.Eventing.Reader.EventLogRecord")]
public PSObject EventLogRecord { get; public set; }
    [ParameterAttribute]
public string Path { get; public set; }
    [ParameterAttribute]
public string LiteralPath { get; public set; }
    [ParameterAttribute]
public SwitchParameter IncludeContext { get; public set; }
    [ParameterAttribute]
public CmsMessageRecipient[] To { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
    [CompilerGeneratedAttribute]
public PSObject get_EventLogRecord();
    [CompilerGeneratedAttribute]
public void set_EventLogRecord(PSObject value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_LiteralPath();
    [CompilerGeneratedAttribute]
public void set_LiteralPath(string value);
    [CompilerGeneratedAttribute]
public SwitchParameter get_IncludeContext();
    [CompilerGeneratedAttribute]
public void set_IncludeContext(SwitchParameter value);
    [CompilerGeneratedAttribute]
public CmsMessageRecipient[] get_To();
    [CompilerGeneratedAttribute]
public void set_To(CmsMessageRecipient[] value);
    protected virtual void BeginProcessing();
    protected virtual void ProcessRecord();
    protected virtual void EndProcessing();
}
internal static class Microsoft.PowerShell.SecurityUtils : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class SecureStringCommands : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class SignatureCommands : object {
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class UtilsStrings : object {
}
