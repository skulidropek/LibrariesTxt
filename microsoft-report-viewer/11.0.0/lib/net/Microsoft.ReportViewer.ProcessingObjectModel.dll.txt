internal static class AssemblyVersionInfo : object {
    public static string VersionString;
    public static int MajorVersion;
    public static int MinorVersion;
    public static int BuildVersion;
    public static int SPLevel;
    public static string ProductVersionString;
    public static string ProductNameString;
    public static string SqlEngineUsageMetricsRoleGuidString;
    public static string ProductNameBrandingString;
    public static string LongProductNameBrandingString;
    public static string ProductNameShortcutBrandingString;
    public static string VersionLocationString;
    public static string ProductVersionLocationString;
    public static string VersionHelpKeywordPrefix;
    public static string VersionHelpSettingsToken;
    public static string SetupSupportFolder;
    public static string ProductLicenseFile;
    public static string ProductUpdateCategory;
    public static string SqlProductFamilyCode;
    public static string ProductDiscoveryId;
    public static string SqlInstanceIDPrefix;
    public static string AsInstanceIDPrefix;
    public static string RsInstanceIDPrefix;
    public static string MaxMaintenanceVersion;
    public static UInt32 evalTimeBombValue;
    public static UInt32 currentReleaseTimeBombValue;
    public static string WerEventNameSetupMsi;
    public static string WerEventNameSetupConfig;
    public static string ASUsageMetricsRoleGuidString;
    public static string VersionBIDSHelpNamespace;
    public static string VisualStudioShellVersion;
    public static string VersionHelpNamespace { get; }
    public static string get_VersionHelpNamespace();
}
internal static class Microsoft.ReportingServices.PublicKeyConstants : object {
    internal static string SQLTestKey;
    internal static string SQLTestKeyToken;
    private static string SQLPublicKey;
    private static string SQLPublicKeyToken;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string AssemblyVersion;
    internal static string AssemblyQualifier;
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ActionExprHost : ReportObjectModelProxy {
    [CLSCompliantAttribute("False")]
protected IList`1<ParamExprHost> m_drillThroughParameterHostsRemotable;
    public object HyperlinkExpr { get; }
    public object DrillThroughReportNameExpr { get; }
    internal IList`1<ParamExprHost> DrillThroughParameterHostsRemotable { get; }
    public object DrillThroughBookmarkLinkExpr { get; }
    public object BookmarkLinkExpr { get; }
    public object LabelExpr { get; }
    public virtual object get_HyperlinkExpr();
    public virtual object get_DrillThroughReportNameExpr();
    internal IList`1<ParamExprHost> get_DrillThroughParameterHostsRemotable();
    public virtual object get_DrillThroughBookmarkLinkExpr();
    public virtual object get_BookmarkLinkExpr();
    public virtual object get_LabelExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ActionInfoExprHost : StyleExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<ActionExprHost> m_actionItemHostsRemotable;
    internal IList`1<ActionExprHost> ActionItemHostsRemotable { get; }
    internal IList`1<ActionExprHost> get_ActionItemHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.AggregateParamExprHost : ReportObjectModelProxy {
    public object ValueExpr { get; }
    public virtual object get_ValueExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.BackFrameExprHost : StyleExprHost {
    public FrameBackgroundExprHost FrameBackgroundHost;
    public FrameImageExprHost FrameImageHost;
    public object FrameStyleExpr { get; }
    public object FrameShapeExpr { get; }
    public object FrameWidthExpr { get; }
    public object GlassEffectExpr { get; }
    public virtual object get_FrameStyleExpr();
    public virtual object get_FrameShapeExpr();
    public virtual object get_FrameWidthExpr();
    public virtual object get_GlassEffectExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.BaseGaugeImageExprHost : ReportObjectModelProxy {
    public object SourceExpr { get; }
    public object ValueExpr { get; }
    public object MIMETypeExpr { get; }
    public object TransparentColorExpr { get; }
    public virtual object get_SourceExpr();
    public virtual object get_ValueExpr();
    public virtual object get_MIMETypeExpr();
    public virtual object get_TransparentColorExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.CalcFieldExprHost : ReportObjectModelProxy {
    public object ValueExpr { get; }
    public virtual object get_ValueExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.CapImageExprHost : BaseGaugeImageExprHost {
    public object HueColorExpr { get; }
    public object OffsetXExpr { get; }
    public object OffsetYExpr { get; }
    public virtual object get_HueColorExpr();
    public virtual object get_OffsetXExpr();
    public virtual object get_OffsetYExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.CellExprHost : ReportObjectModelProxy {
    [CLSCompliantAttribute("False")]
protected IList`1<JoinConditionExprHost> m_joinConditionExprHostsRemotable;
    internal IList`1<JoinConditionExprHost> JoinConditionExprHostsRemotable { get; }
    internal IList`1<JoinConditionExprHost> get_JoinConditionExprHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.Chart3DPropertiesExprHost : ReportObjectModelProxy {
    public object EnabledExpr { get; }
    public object ProjectionModeExpr { get; }
    public object PerspectiveExpr { get; }
    public object RotationExpr { get; }
    public object InclinationExpr { get; }
    public object DepthRatioExpr { get; }
    public object ShadingExpr { get; }
    public object GapDepthExpr { get; }
    public object WallThicknessExpr { get; }
    public object ClusteredExpr { get; }
    public virtual object get_EnabledExpr();
    public virtual object get_ProjectionModeExpr();
    public virtual object get_PerspectiveExpr();
    public virtual object get_RotationExpr();
    public virtual object get_InclinationExpr();
    public virtual object get_DepthRatioExpr();
    public virtual object get_ShadingExpr();
    public virtual object get_GapDepthExpr();
    public virtual object get_WallThicknessExpr();
    public virtual object get_ClusteredExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartAreaExprHost : StyleExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<ChartAxisExprHost> m_categoryAxesHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartAxisExprHost> m_valueAxesHostsRemotable;
    public Chart3DPropertiesExprHost Chart3DPropertiesHost;
    public ChartElementPositionExprHost ChartElementPositionHost;
    public ChartElementPositionExprHost ChartInnerPlotPositionHost;
    internal IList`1<ChartAxisExprHost> CategoryAxesHostsRemotable { get; }
    internal IList`1<ChartAxisExprHost> ValueAxesHostsRemotable { get; }
    public object HiddenExpr { get; }
    public object AlignOrientationExpr { get; }
    public object EquallySizedAxesFontExpr { get; }
    public object CursorExpr { get; }
    public object AxesViewExpr { get; }
    public object ChartAlignTypePositionExpr { get; }
    public object InnerPlotPositionExpr { get; }
    internal IList`1<ChartAxisExprHost> get_CategoryAxesHostsRemotable();
    internal IList`1<ChartAxisExprHost> get_ValueAxesHostsRemotable();
    public virtual object get_HiddenExpr();
    public virtual object get_AlignOrientationExpr();
    public virtual object get_EquallySizedAxesFontExpr();
    public virtual object get_CursorExpr();
    public virtual object get_AxesViewExpr();
    public virtual object get_ChartAlignTypePositionExpr();
    public virtual object get_InnerPlotPositionExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartAxisExprHost : StyleExprHost {
    public ChartAxisTitleExprHost TitleHost;
    public ChartGridLinesExprHost MajorGridLinesHost;
    public ChartGridLinesExprHost MinorGridLinesHost;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_customPropertyHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartStripLineExprHost> m_stripLinesHostsRemotable;
    public ChartTickMarksExprHost MajorTickMarksHost;
    public ChartTickMarksExprHost MinorTickMarksHost;
    public ChartAxisScaleBreakExprHost AxisScaleBreakHost;
    internal IList`1<DataValueExprHost> CustomPropertyHostsRemotable { get; }
    internal IList`1<ChartStripLineExprHost> ChartStripLinesHostsRemotable { get; }
    public object AxisMinExpr { get; }
    public object AxisMaxExpr { get; }
    public object AxisCrossAtExpr { get; }
    public object VisibleExpr { get; }
    public object MarginExpr { get; }
    public object IntervalExpr { get; }
    public object IntervalTypeExpr { get; }
    public object IntervalOffsetExpr { get; }
    public object IntervalOffsetTypeExpr { get; }
    public object MarksAlwaysAtPlotEdgeExpr { get; }
    public object ReverseExpr { get; }
    public object LocationExpr { get; }
    public object InterlacedExpr { get; }
    public object InterlacedColorExpr { get; }
    public object LogScaleExpr { get; }
    public object LogBaseExpr { get; }
    public object HideLabelsExpr { get; }
    public object AngleExpr { get; }
    public object ArrowsExpr { get; }
    public object PreventFontShrinkExpr { get; }
    public object PreventFontGrowExpr { get; }
    public object PreventLabelOffsetExpr { get; }
    public object PreventWordWrapExpr { get; }
    public object AllowLabelRotationExpr { get; }
    public object IncludeZeroExpr { get; }
    public object LabelsAutoFitDisabledExpr { get; }
    public object MinFontSizeExpr { get; }
    public object MaxFontSizeExpr { get; }
    public object OffsetLabelsExpr { get; }
    public object HideEndLabelsExpr { get; }
    public object VariableAutoIntervalExpr { get; }
    public object LabelIntervalExpr { get; }
    public object LabelIntervalTypeExpr { get; }
    public object LabelIntervalOffsetExpr { get; }
    public object LabelIntervalOffsetTypeExpr { get; }
    internal IList`1<DataValueExprHost> get_CustomPropertyHostsRemotable();
    internal IList`1<ChartStripLineExprHost> get_ChartStripLinesHostsRemotable();
    public virtual object get_AxisMinExpr();
    public virtual object get_AxisMaxExpr();
    public virtual object get_AxisCrossAtExpr();
    public virtual object get_VisibleExpr();
    public virtual object get_MarginExpr();
    public virtual object get_IntervalExpr();
    public virtual object get_IntervalTypeExpr();
    public virtual object get_IntervalOffsetExpr();
    public virtual object get_IntervalOffsetTypeExpr();
    public virtual object get_MarksAlwaysAtPlotEdgeExpr();
    public virtual object get_ReverseExpr();
    public virtual object get_LocationExpr();
    public virtual object get_InterlacedExpr();
    public virtual object get_InterlacedColorExpr();
    public virtual object get_LogScaleExpr();
    public virtual object get_LogBaseExpr();
    public virtual object get_HideLabelsExpr();
    public virtual object get_AngleExpr();
    public virtual object get_ArrowsExpr();
    public virtual object get_PreventFontShrinkExpr();
    public virtual object get_PreventFontGrowExpr();
    public virtual object get_PreventLabelOffsetExpr();
    public virtual object get_PreventWordWrapExpr();
    public virtual object get_AllowLabelRotationExpr();
    public virtual object get_IncludeZeroExpr();
    public virtual object get_LabelsAutoFitDisabledExpr();
    public virtual object get_MinFontSizeExpr();
    public virtual object get_MaxFontSizeExpr();
    public virtual object get_OffsetLabelsExpr();
    public virtual object get_HideEndLabelsExpr();
    public virtual object get_VariableAutoIntervalExpr();
    public virtual object get_LabelIntervalExpr();
    public virtual object get_LabelIntervalTypeExpr();
    public virtual object get_LabelIntervalOffsetExpr();
    public virtual object get_LabelIntervalOffsetTypeExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartAxisScaleBreakExprHost : StyleExprHost {
    public object EnabledExpr { get; }
    public object BreakLineTypeExpr { get; }
    public object CollapsibleSpaceThresholdExpr { get; }
    public object MaxNumberOfBreaksExpr { get; }
    public object SpacingExpr { get; }
    public object IncludeZeroExpr { get; }
    public virtual object get_EnabledExpr();
    public virtual object get_BreakLineTypeExpr();
    public virtual object get_CollapsibleSpaceThresholdExpr();
    public virtual object get_MaxNumberOfBreaksExpr();
    public virtual object get_SpacingExpr();
    public virtual object get_IncludeZeroExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartAxisTitleExprHost : ChartTitleBaseExprHost {
    public object TextOrientationExpr { get; }
    public virtual object get_TextOrientationExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartBorderSkinExprHost : StyleExprHost {
    public object BorderSkinTypeExpr { get; }
    public virtual object get_BorderSkinTypeExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartCustomPaletteColorExprHost : ReportObjectModelProxy {
    public object ColorExpr { get; }
    public virtual object get_ColorExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartDataLabelExprHost : StyleExprHost {
    public ActionInfoExprHost ActionInfoHost;
    public object VisibleExpr { get; }
    public object LabelExpr { get; }
    public object ChartDataLabelPositionExpr { get; }
    public object RotationExpr { get; }
    public object UseValueAsLabelExpr { get; }
    public object ToolTipExpr { get; }
    public virtual object get_VisibleExpr();
    public virtual object get_LabelExpr();
    public virtual object get_ChartDataLabelPositionExpr();
    public virtual object get_RotationExpr();
    public virtual object get_UseValueAsLabelExpr();
    public virtual object get_ToolTipExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartDataPointExprHost : CellExprHost {
    public StyleExprHost StyleHost;
    public ChartDataPointInLegendExprHost DataPointInLegendHost;
    public ChartDataLabelExprHost DataLabelHost;
    public ChartMarkerExprHost ChartMarkerHost;
    public ActionInfoExprHost ActionInfoHost;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_customPropertyHostsRemotable;
    public object DataLabelValueExpr { get; }
    public object DataLabelVisibleExpr { get; }
    public object DataPointValuesXExpr { get; }
    public object DataPointValuesYExpr { get; }
    public object DataPointValuesSizeExpr { get; }
    public object DataPointValuesHighExpr { get; }
    public object DataPointValuesLowExpr { get; }
    public object DataPointValuesStartExpr { get; }
    public object DataPointValuesEndExpr { get; }
    public object DataPointValuesMeanExpr { get; }
    public object DataPointValuesMedianExpr { get; }
    public object DataPointValuesHighlightXExpr { get; }
    public object DataPointValuesHighlightYExpr { get; }
    public object DataPointValuesHighlightSizeExpr { get; }
    public object AxisLabelExpr { get; }
    internal IList`1<DataValueExprHost> CustomPropertyHostsRemotable { get; }
    public object ToolTipExpr { get; }
    public virtual object get_DataLabelValueExpr();
    public virtual object get_DataLabelVisibleExpr();
    public virtual object get_DataPointValuesXExpr();
    public virtual object get_DataPointValuesYExpr();
    public virtual object get_DataPointValuesSizeExpr();
    public virtual object get_DataPointValuesHighExpr();
    public virtual object get_DataPointValuesLowExpr();
    public virtual object get_DataPointValuesStartExpr();
    public virtual object get_DataPointValuesEndExpr();
    public virtual object get_DataPointValuesMeanExpr();
    public virtual object get_DataPointValuesMedianExpr();
    public virtual object get_DataPointValuesHighlightXExpr();
    public virtual object get_DataPointValuesHighlightYExpr();
    public virtual object get_DataPointValuesHighlightSizeExpr();
    public virtual object get_AxisLabelExpr();
    internal IList`1<DataValueExprHost> get_CustomPropertyHostsRemotable();
    public virtual object get_ToolTipExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartDataPointInLegendExprHost : StyleExprHost {
    public ActionInfoExprHost ActionInfoHost;
    public object LegendTextExpr { get; }
    public object ToolTipExpr { get; }
    public object HiddenExpr { get; }
    public virtual object get_LegendTextExpr();
    public virtual object get_ToolTipExpr();
    public virtual object get_HiddenExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartDerivedSeriesExprHost : StyleExprHost {
    public ChartSeriesExprHost ChartSeriesHost;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartFormulaParameterExprHost> m_formulaParametersHostsRemotable;
    internal IList`1<ChartFormulaParameterExprHost> ChartFormulaParametersHostsRemotable { get; }
    internal IList`1<ChartFormulaParameterExprHost> get_ChartFormulaParametersHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartElementPositionExprHost : ReportObjectModelProxy {
    public object TopExpr { get; }
    public object LeftExpr { get; }
    public object HeightExpr { get; }
    public object WidthExpr { get; }
    public virtual object get_TopExpr();
    public virtual object get_LeftExpr();
    public virtual object get_HeightExpr();
    public virtual object get_WidthExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartEmptyPointsExprHost : StyleExprHost {
    public ChartMarkerExprHost ChartMarkerHost;
    public ChartDataLabelExprHost DataLabelHost;
    public ChartDataPointInLegendExprHost DataPointInLegendHost;
    public ActionInfoExprHost ActionInfoHost;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_customPropertyHostsRemotable;
    public object AxisLabelExpr { get; }
    internal IList`1<DataValueExprHost> CustomPropertyHostsRemotable { get; }
    public object ToolTipExpr { get; }
    public virtual object get_AxisLabelExpr();
    internal IList`1<DataValueExprHost> get_CustomPropertyHostsRemotable();
    public virtual object get_ToolTipExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartExprHost : DataRegionExprHost`2<ChartMemberExprHost, ChartDataPointExprHost> {
    [CLSCompliantAttribute("False")]
protected IList`1<ChartSeriesExprHost> m_seriesCollectionHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartDerivedSeriesExprHost> m_derivedSeriesCollectionHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartAreaExprHost> m_chartAreasHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartTitleExprHost> m_titlesHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartLegendExprHost> m_legendsHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_codeParametersHostsRemotable;
    public ChartTitleExprHost NoDataMessageHost;
    public ChartBorderSkinExprHost BorderSkinHost;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartCustomPaletteColorExprHost> m_customPaletteColorHostsRemotable;
    internal IList`1<ChartSeriesExprHost> SeriesCollectionHostsRemotable { get; }
    internal IList`1<ChartDerivedSeriesExprHost> ChartDerivedSeriesCollectionHostsRemotable { get; }
    internal IList`1<ChartAreaExprHost> ChartAreasHostsRemotable { get; }
    internal IList`1<ChartTitleExprHost> TitlesHostsRemotable { get; }
    internal IList`1<ChartLegendExprHost> LegendsHostsRemotable { get; }
    internal IList`1<DataValueExprHost> CodeParametersHostsRemotable { get; }
    public object DynamicHeightExpr { get; }
    public object DynamicWidthExpr { get; }
    public object PaletteExpr { get; }
    internal IList`1<ChartCustomPaletteColorExprHost> CustomPaletteColorHostsRemotable { get; }
    public object PaletteHatchBehaviorExpr { get; }
    internal IList`1<ChartSeriesExprHost> get_SeriesCollectionHostsRemotable();
    internal IList`1<ChartDerivedSeriesExprHost> get_ChartDerivedSeriesCollectionHostsRemotable();
    internal IList`1<ChartAreaExprHost> get_ChartAreasHostsRemotable();
    internal IList`1<ChartTitleExprHost> get_TitlesHostsRemotable();
    internal IList`1<ChartLegendExprHost> get_LegendsHostsRemotable();
    internal IList`1<DataValueExprHost> get_CodeParametersHostsRemotable();
    public virtual object get_DynamicHeightExpr();
    public virtual object get_DynamicWidthExpr();
    public virtual object get_PaletteExpr();
    internal IList`1<ChartCustomPaletteColorExprHost> get_CustomPaletteColorHostsRemotable();
    public virtual object get_PaletteHatchBehaviorExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartFormulaParameterExprHost : StyleExprHost {
    public object ValueExpr { get; }
    public virtual object get_ValueExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartGridLinesExprHost : StyleExprHost {
    public object EnabledExpr { get; }
    public object IntervalExpr { get; }
    public object IntervalTypeExpr { get; }
    public object IntervalOffsetExpr { get; }
    public object IntervalOffsetTypeExpr { get; }
    public virtual object get_EnabledExpr();
    public virtual object get_IntervalExpr();
    public virtual object get_IntervalTypeExpr();
    public virtual object get_IntervalOffsetExpr();
    public virtual object get_IntervalOffsetTypeExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartLegendColumnExprHost : StyleExprHost {
    public ChartLegendColumnHeaderExprHost HeaderHost;
    public ActionInfoExprHost ActionInfoHost;
    public object ColumnTypeExpr { get; }
    public object ValueExpr { get; }
    public object ToolTipExpr { get; }
    public object MinimumWidthExpr { get; }
    public object MaximumWidthExpr { get; }
    public object SeriesSymbolWidthExpr { get; }
    public object SeriesSymbolHeightExpr { get; }
    public virtual object get_ColumnTypeExpr();
    public virtual object get_ValueExpr();
    public virtual object get_ToolTipExpr();
    public virtual object get_MinimumWidthExpr();
    public virtual object get_MaximumWidthExpr();
    public virtual object get_SeriesSymbolWidthExpr();
    public virtual object get_SeriesSymbolHeightExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartLegendColumnHeaderExprHost : StyleExprHost {
    public object ValueExpr { get; }
    public virtual object get_ValueExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartLegendCustomItemCellExprHost : StyleExprHost {
    public ActionInfoExprHost ActionInfoHost;
    public object CellTypeExpr { get; }
    public object TextExpr { get; }
    public object CellSpanExpr { get; }
    public object ToolTipExpr { get; }
    public object ImageWidthExpr { get; }
    public object ImageHeightExpr { get; }
    public object SymbolHeightExpr { get; }
    public object SymbolWidthExpr { get; }
    public object AlignmentExpr { get; }
    public object TopMarginExpr { get; }
    public object BottomMarginExpr { get; }
    public object LeftMarginExpr { get; }
    public object RightMarginExpr { get; }
    public virtual object get_CellTypeExpr();
    public virtual object get_TextExpr();
    public virtual object get_CellSpanExpr();
    public virtual object get_ToolTipExpr();
    public virtual object get_ImageWidthExpr();
    public virtual object get_ImageHeightExpr();
    public virtual object get_SymbolHeightExpr();
    public virtual object get_SymbolWidthExpr();
    public virtual object get_AlignmentExpr();
    public virtual object get_TopMarginExpr();
    public virtual object get_BottomMarginExpr();
    public virtual object get_LeftMarginExpr();
    public virtual object get_RightMarginExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartLegendCustomItemExprHost : StyleExprHost {
    public ChartMarkerExprHost ChartMarkerHost;
    public ActionInfoExprHost ActionInfoHost;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartLegendCustomItemCellExprHost> m_legendCustomItemCellsHostsRemotable;
    public object SeparatorExpr { get; }
    public object SeparatorColorExpr { get; }
    public object ToolTipExpr { get; }
    internal IList`1<ChartLegendCustomItemCellExprHost> ChartLegendCustomItemCellsHostsRemotable { get; }
    public virtual object get_SeparatorExpr();
    public virtual object get_SeparatorColorExpr();
    public virtual object get_ToolTipExpr();
    internal IList`1<ChartLegendCustomItemCellExprHost> get_ChartLegendCustomItemCellsHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartLegendExprHost : StyleExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<ChartLegendCustomItemExprHost> m_legendCustomItemsHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartLegendColumnExprHost> m_legendColumnsHostsRemotable;
    public ChartLegendTitleExprHost TitleExprHost;
    public ChartElementPositionExprHost ChartElementPositionHost;
    internal IList`1<ChartLegendCustomItemExprHost> ChartLegendCustomItemsHostsRemotable { get; }
    internal IList`1<ChartLegendColumnExprHost> ChartLegendColumnsHostsRemotable { get; }
    public object ChartLegendPositionExpr { get; }
    public object LayoutExpr { get; }
    public object HiddenExpr { get; }
    public object DockOutsideChartAreaExpr { get; }
    public object AutoFitTextDisabledExpr { get; }
    public object MinFontSizeExpr { get; }
    public object HeaderSeparatorExpr { get; }
    public object HeaderSeparatorColorExpr { get; }
    public object ColumnSeparatorExpr { get; }
    public object ColumnSeparatorColorExpr { get; }
    public object ColumnSpacingExpr { get; }
    public object InterlacedRowsExpr { get; }
    public object InterlacedRowsColorExpr { get; }
    public object EquallySpacedItemsExpr { get; }
    public object ReversedExpr { get; }
    public object MaxAutoSizeExpr { get; }
    public object TextWrapThresholdExpr { get; }
    internal IList`1<ChartLegendCustomItemExprHost> get_ChartLegendCustomItemsHostsRemotable();
    internal IList`1<ChartLegendColumnExprHost> get_ChartLegendColumnsHostsRemotable();
    public virtual object get_ChartLegendPositionExpr();
    public virtual object get_LayoutExpr();
    public virtual object get_HiddenExpr();
    public virtual object get_DockOutsideChartAreaExpr();
    public virtual object get_AutoFitTextDisabledExpr();
    public virtual object get_MinFontSizeExpr();
    public virtual object get_HeaderSeparatorExpr();
    public virtual object get_HeaderSeparatorColorExpr();
    public virtual object get_ColumnSeparatorExpr();
    public virtual object get_ColumnSeparatorColorExpr();
    public virtual object get_ColumnSpacingExpr();
    public virtual object get_InterlacedRowsExpr();
    public virtual object get_InterlacedRowsColorExpr();
    public virtual object get_EquallySpacedItemsExpr();
    public virtual object get_ReversedExpr();
    public virtual object get_MaxAutoSizeExpr();
    public virtual object get_TextWrapThresholdExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartLegendTitleExprHost : ChartTitleBaseExprHost {
    public object TitleSeparatorExpr { get; }
    public virtual object get_TitleSeparatorExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartMarkerExprHost : StyleExprHost {
    public object TypeExpr { get; }
    public object SizeExpr { get; }
    public virtual object get_TypeExpr();
    public virtual object get_SizeExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartMemberExprHost : MemberNodeExprHost`1<ChartMemberExprHost> {
    public ChartSeriesExprHost ChartSeriesHost;
    public object MemberLabelExpr { get; }
    public virtual object get_MemberLabelExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartNoMoveDirectionsExprHost : ReportObjectModelProxy {
    public object UpExpr { get; }
    public object DownExpr { get; }
    public object LeftExpr { get; }
    public object RightExpr { get; }
    public object UpLeftExpr { get; }
    public object UpRightExpr { get; }
    public object DownLeftExpr { get; }
    public object DownRightExpr { get; }
    public virtual object get_UpExpr();
    public virtual object get_DownExpr();
    public virtual object get_LeftExpr();
    public virtual object get_RightExpr();
    public virtual object get_UpLeftExpr();
    public virtual object get_UpRightExpr();
    public virtual object get_DownLeftExpr();
    public virtual object get_DownRightExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartSeriesExprHost : StyleExprHost {
    public ActionInfoExprHost ActionInfoHost;
    public ChartEmptyPointsExprHost EmptyPointsHost;
    public ChartSmartLabelExprHost SmartLabelHost;
    public ChartDataLabelExprHost DataLabelHost;
    public ChartMarkerExprHost ChartMarkerHost;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_customPropertyHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartDerivedSeriesExprHost> m_derivedSeriesCollectionHostsRemotable;
    public ChartDataPointInLegendExprHost DataPointInLegendHost;
    public object TypeExpr { get; }
    public object SubtypeExpr { get; }
    public object LegendNameExpr { get; }
    public object LegendTextExpr { get; }
    public object ChartAreaNameExpr { get; }
    public object ValueAxisNameExpr { get; }
    public object CategoryAxisNameExpr { get; }
    public object HiddenExpr { get; }
    public object HideInLegendExpr { get; }
    internal IList`1<DataValueExprHost> CustomPropertyHostsRemotable { get; }
    internal IList`1<ChartDerivedSeriesExprHost> ChartDerivedSeriesCollectionHostsRemotable { get; }
    public object ToolTipExpr { get; }
    public virtual object get_TypeExpr();
    public virtual object get_SubtypeExpr();
    public virtual object get_LegendNameExpr();
    public virtual object get_LegendTextExpr();
    public virtual object get_ChartAreaNameExpr();
    public virtual object get_ValueAxisNameExpr();
    public virtual object get_CategoryAxisNameExpr();
    public virtual object get_HiddenExpr();
    public virtual object get_HideInLegendExpr();
    internal IList`1<DataValueExprHost> get_CustomPropertyHostsRemotable();
    internal IList`1<ChartDerivedSeriesExprHost> get_ChartDerivedSeriesCollectionHostsRemotable();
    public virtual object get_ToolTipExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartSmartLabelExprHost : StyleExprHost {
    public ChartNoMoveDirectionsExprHost NoMoveDirectionsHost;
    public object AllowOutSidePlotAreaExpr { get; }
    public object CalloutBackColorExpr { get; }
    public object CalloutLineAnchorExpr { get; }
    public object CalloutLineColorExpr { get; }
    public object CalloutLineStyleExpr { get; }
    public object CalloutLineWidthExpr { get; }
    public object CalloutStyleExpr { get; }
    public object ShowOverlappedExpr { get; }
    public object MarkerOverlappingExpr { get; }
    public object MaxMovingDistanceExpr { get; }
    public object MinMovingDistanceExpr { get; }
    public object DisabledExpr { get; }
    public virtual object get_AllowOutSidePlotAreaExpr();
    public virtual object get_CalloutBackColorExpr();
    public virtual object get_CalloutLineAnchorExpr();
    public virtual object get_CalloutLineColorExpr();
    public virtual object get_CalloutLineStyleExpr();
    public virtual object get_CalloutLineWidthExpr();
    public virtual object get_CalloutStyleExpr();
    public virtual object get_ShowOverlappedExpr();
    public virtual object get_MarkerOverlappingExpr();
    public virtual object get_MaxMovingDistanceExpr();
    public virtual object get_MinMovingDistanceExpr();
    public virtual object get_DisabledExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartStripLineExprHost : StyleExprHost {
    public ActionInfoExprHost ActionInfoHost;
    public object TitleExpr { get; }
    public object TitleAngleExpr { get; }
    public object TextOrientationExpr { get; }
    public object ToolTipExpr { get; }
    public object IntervalExpr { get; }
    public object IntervalTypeExpr { get; }
    public object IntervalOffsetExpr { get; }
    public object IntervalOffsetTypeExpr { get; }
    public object StripWidthExpr { get; }
    public object StripWidthTypeExpr { get; }
    public virtual object get_TitleExpr();
    public virtual object get_TitleAngleExpr();
    public virtual object get_TextOrientationExpr();
    public virtual object get_ToolTipExpr();
    public virtual object get_IntervalExpr();
    public virtual object get_IntervalTypeExpr();
    public virtual object get_IntervalOffsetExpr();
    public virtual object get_IntervalOffsetTypeExpr();
    public virtual object get_StripWidthExpr();
    public virtual object get_StripWidthTypeExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartTickMarksExprHost : StyleExprHost {
    public object EnabledExpr { get; }
    public object TypeExpr { get; }
    public object LengthExpr { get; }
    public object IntervalExpr { get; }
    public object IntervalTypeExpr { get; }
    public object IntervalOffsetExpr { get; }
    public object IntervalOffsetTypeExpr { get; }
    public virtual object get_EnabledExpr();
    public virtual object get_TypeExpr();
    public virtual object get_LengthExpr();
    public virtual object get_IntervalExpr();
    public virtual object get_IntervalTypeExpr();
    public virtual object get_IntervalOffsetExpr();
    public virtual object get_IntervalOffsetTypeExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartTitleBaseExprHost : StyleExprHost {
    public object CaptionExpr { get; }
    public object ChartTitlePositionExpr { get; }
    public virtual object get_CaptionExpr();
    public virtual object get_ChartTitlePositionExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ChartTitleExprHost : ChartTitleBaseExprHost {
    public ActionInfoExprHost ActionInfoHost;
    public ChartElementPositionExprHost ChartElementPositionHost;
    public object HiddenExpr { get; }
    public object DockingExpr { get; }
    public object DockingOffsetExpr { get; }
    public object DockOutsideChartAreaExpr { get; }
    public object ToolTipExpr { get; }
    public object TextOrientationExpr { get; }
    public virtual object get_HiddenExpr();
    public virtual object get_DockingExpr();
    public virtual object get_DockingOffsetExpr();
    public virtual object get_DockOutsideChartAreaExpr();
    public virtual object get_ToolTipExpr();
    public virtual object get_TextOrientationExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.CustomCodeProxyBase : object {
    private IReportObjectModelProxyForCustomCode m_reportObjectModel;
    protected IReportObjectModelProxyForCustomCode Report { get; }
    protected CustomCodeProxyBase(IReportObjectModelProxyForCustomCode reportObjectModel);
    protected IReportObjectModelProxyForCustomCode get_Report();
    protected virtual void OnInit();
    internal void CallOnInit();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.CustomLabelExprHost : StyleExprHost {
    public TickMarkStyleExprHost TickMarkStyleHost;
    public object TextExpr { get; }
    public object AllowUpsideDownExpr { get; }
    public object DistanceFromScaleExpr { get; }
    public object FontAngleExpr { get; }
    public object PlacementExpr { get; }
    public object RotateLabelExpr { get; }
    public object ValueExpr { get; }
    public object HiddenExpr { get; }
    public object UseFontPercentExpr { get; }
    public virtual object get_TextExpr();
    public virtual object get_AllowUpsideDownExpr();
    public virtual object get_DistanceFromScaleExpr();
    public virtual object get_FontAngleExpr();
    public virtual object get_PlacementExpr();
    public virtual object get_RotateLabelExpr();
    public virtual object get_ValueExpr();
    public virtual object get_HiddenExpr();
    public virtual object get_UseFontPercentExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.CustomReportItemExprHost : DataRegionExprHost`2<DataGroupExprHost, DataCellExprHost> {
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.DataCellExprHost : CellExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_dataValueHostsRemotable;
    internal IList`1<DataValueExprHost> DataValueHostsRemotable { get; }
    internal IList`1<DataValueExprHost> get_DataValueHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.DataGroupExprHost : MemberNodeExprHost`1<DataGroupExprHost> {
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.DataRegionExprHost`2 : ReportItemExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<FilterExprHost> m_filterHostsRemotable;
    protected SortExprHost m_sortHost;
    [CLSCompliantAttribute("False")]
protected IList`1<IMemberNode> m_memberTreeHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<TCellType> m_cellHostsRemotable;
    public IndexedExprHost UserSortExpressionsHost;
    [CLSCompliantAttribute("False")]
protected IList`1<JoinConditionExprHost> m_joinConditionExprHostsRemotable;
    public object NoRowsExpr { get; }
    internal IList`1<FilterExprHost> FilterHostsRemotable { get; }
    internal SortExprHost SortHost { get; }
    internal IList`1<IMemberNode> MemberTreeHostsRemotable { get; }
    internal IList`1<TCellType> CellHostsRemotable { get; }
    internal IList`1<JoinConditionExprHost> JoinConditionExprHostsRemotable { get; }
    public virtual object get_NoRowsExpr();
    internal IList`1<FilterExprHost> get_FilterHostsRemotable();
    internal SortExprHost get_SortHost();
    internal IList`1<IMemberNode> get_MemberTreeHostsRemotable();
    internal IList`1<TCellType> get_CellHostsRemotable();
    internal IList`1<JoinConditionExprHost> get_JoinConditionExprHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.DataSetExprHost : ReportObjectModelProxy {
    [CLSCompliantAttribute("False")]
protected IList`1<CalcFieldExprHost> m_fieldHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<JoinConditionExprHost> m_joinConditionExprHostsRemotable;
    public IndexedExprHost QueryParametersHost;
    [CLSCompliantAttribute("False")]
protected IList`1<FilterExprHost> m_filterHostsRemotable;
    public IndexedExprHost UserSortExpressionsHost;
    internal IList`1<CalcFieldExprHost> FieldHostsRemotable { get; }
    internal IList`1<JoinConditionExprHost> JoinConditionExprHostsRemotable { get; }
    public object QueryCommandTextExpr { get; }
    internal IList`1<FilterExprHost> FilterHostsRemotable { get; }
    internal IList`1<CalcFieldExprHost> get_FieldHostsRemotable();
    internal IList`1<JoinConditionExprHost> get_JoinConditionExprHostsRemotable();
    public virtual object get_QueryCommandTextExpr();
    internal IList`1<FilterExprHost> get_FilterHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.DataSourceExprHost : ReportObjectModelProxy {
    public object ConnectStringExpr { get; }
    public virtual object get_ConnectStringExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.DataValueExprHost : ReportObjectModelProxy {
    public object DataValueNameExpr { get; }
    public object DataValueValueExpr { get; }
    public virtual object get_DataValueNameExpr();
    public virtual object get_DataValueValueExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.FilterExprHost : IndexedExprHost {
    public object FilterExpressionExpr { get; }
    public virtual object get_FilterExpressionExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.FrameBackgroundExprHost : StyleExprHost {
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.FrameImageExprHost : BaseGaugeImageExprHost {
    public object HueColorExpr { get; }
    public object TransparencyExpr { get; }
    public object ClipImageExpr { get; }
    public virtual object get_HueColorExpr();
    public virtual object get_TransparencyExpr();
    public virtual object get_ClipImageExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.GaugeCellExprHost : DataCellExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<GaugeInputValueExprHost> m_gaugeInputValueHostsRemotable;
    internal IList`1<GaugeInputValueExprHost> GaugeInputValueHostsRemotable { get; }
    internal IList`1<GaugeInputValueExprHost> get_GaugeInputValueHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.GaugeExprHost : GaugePanelItemExprHost {
    public BackFrameExprHost BackFrameHost;
    public TopImageExprHost TopImageHost;
    public object ClipContentExpr { get; }
    public object AspectRatioExpr { get; }
    public virtual object get_ClipContentExpr();
    public virtual object get_AspectRatioExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.GaugeImageExprHost : GaugePanelItemExprHost {
    public object SourceExpr { get; }
    public object ValueExpr { get; }
    public virtual object get_SourceExpr();
    public virtual object get_ValueExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.GaugeInputValueExprHost : ReportObjectModelProxy {
    public object ValueExpr { get; }
    public object FormulaExpr { get; }
    public object MinPercentExpr { get; }
    public object MaxPercentExpr { get; }
    public object MultiplierExpr { get; }
    public object AddConstantExpr { get; }
    public virtual object get_ValueExpr();
    public virtual object get_FormulaExpr();
    public virtual object get_MinPercentExpr();
    public virtual object get_MaxPercentExpr();
    public virtual object get_MultiplierExpr();
    public virtual object get_AddConstantExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.GaugeLabelExprHost : GaugePanelItemExprHost {
    public object TextExpr { get; }
    public object AngleExpr { get; }
    public object ResizeModeExpr { get; }
    public object TextShadowOffsetExpr { get; }
    public object UseFontPercentExpr { get; }
    public virtual object get_TextExpr();
    public virtual object get_AngleExpr();
    public virtual object get_ResizeModeExpr();
    public virtual object get_TextShadowOffsetExpr();
    public virtual object get_UseFontPercentExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.GaugeMemberExprHost : MemberNodeExprHost`1<GaugeMemberExprHost> {
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.GaugePanelExprHost : DataRegionExprHost`2<GaugeMemberExprHost, GaugeCellExprHost> {
    [CLSCompliantAttribute("False")]
protected IList`1<LinearGaugeExprHost> m_linearGaugesHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<RadialGaugeExprHost> m_radialGaugesHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<NumericIndicatorExprHost> m_numericIndicatorsHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<StateIndicatorExprHost> m_stateIndicatorsHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<GaugeImageExprHost> m_gaugeImagesHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<GaugeLabelExprHost> m_gaugeLabelsHostsRemotable;
    public BackFrameExprHost BackFrameHost;
    public TopImageExprHost TopImageHost;
    internal IList`1<LinearGaugeExprHost> LinearGaugesHostsRemotable { get; }
    internal IList`1<RadialGaugeExprHost> RadialGaugesHostsRemotable { get; }
    internal IList`1<NumericIndicatorExprHost> NumericIndicatorsHostsRemotable { get; }
    internal IList`1<StateIndicatorExprHost> StateIndicatorsHostsRemotable { get; }
    internal IList`1<GaugeImageExprHost> GaugeImagesHostsRemotable { get; }
    internal IList`1<GaugeLabelExprHost> GaugeLabelsHostsRemotable { get; }
    public object AntiAliasingExpr { get; }
    public object AutoLayoutExpr { get; }
    public object ShadowIntensityExpr { get; }
    public object TextAntiAliasingQualityExpr { get; }
    internal IList`1<LinearGaugeExprHost> get_LinearGaugesHostsRemotable();
    internal IList`1<RadialGaugeExprHost> get_RadialGaugesHostsRemotable();
    internal IList`1<NumericIndicatorExprHost> get_NumericIndicatorsHostsRemotable();
    internal IList`1<StateIndicatorExprHost> get_StateIndicatorsHostsRemotable();
    internal IList`1<GaugeImageExprHost> get_GaugeImagesHostsRemotable();
    internal IList`1<GaugeLabelExprHost> get_GaugeLabelsHostsRemotable();
    public virtual object get_AntiAliasingExpr();
    public virtual object get_AutoLayoutExpr();
    public virtual object get_ShadowIntensityExpr();
    public virtual object get_TextAntiAliasingQualityExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.GaugePanelItemExprHost : StyleExprHost {
    public ActionInfoExprHost ActionInfoHost;
    public object TopExpr { get; }
    public object LeftExpr { get; }
    public object HeightExpr { get; }
    public object WidthExpr { get; }
    public object ZIndexExpr { get; }
    public object HiddenExpr { get; }
    public object ToolTipExpr { get; }
    public virtual object get_TopExpr();
    public virtual object get_LeftExpr();
    public virtual object get_HeightExpr();
    public virtual object get_WidthExpr();
    public virtual object get_ZIndexExpr();
    public virtual object get_HiddenExpr();
    public virtual object get_ToolTipExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.GaugePointerExprHost : StyleExprHost {
    public GaugeInputValueExprHost GaugeInputValueHost;
    public PointerImageExprHost PointerImageHost;
    public ActionInfoExprHost ActionInfoHost;
    public object BarStartExpr { get; }
    public object DistanceFromScaleExpr { get; }
    public object MarkerLengthExpr { get; }
    public object MarkerStyleExpr { get; }
    public object PlacementExpr { get; }
    public object SnappingEnabledExpr { get; }
    public object SnappingIntervalExpr { get; }
    public object ToolTipExpr { get; }
    public object HiddenExpr { get; }
    public object WidthExpr { get; }
    public virtual object get_BarStartExpr();
    public virtual object get_DistanceFromScaleExpr();
    public virtual object get_MarkerLengthExpr();
    public virtual object get_MarkerStyleExpr();
    public virtual object get_PlacementExpr();
    public virtual object get_SnappingEnabledExpr();
    public virtual object get_SnappingIntervalExpr();
    public virtual object get_ToolTipExpr();
    public virtual object get_HiddenExpr();
    public virtual object get_WidthExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.GaugeScaleExprHost : StyleExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<ScaleRangeExprHost> m_scaleRangesHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<CustomLabelExprHost> m_customLabelsHostsRemotable;
    public GaugeInputValueExprHost MaximumValueHost;
    public GaugeInputValueExprHost MinimumValueHost;
    public GaugeTickMarksExprHost GaugeMajorTickMarksHost;
    public GaugeTickMarksExprHost GaugeMinorTickMarksHost;
    public ScalePinExprHost MaximumPinHost;
    public ScalePinExprHost MinimumPinHost;
    public ScaleLabelsExprHost ScaleLabelsHost;
    public ActionInfoExprHost ActionInfoHost;
    internal IList`1<ScaleRangeExprHost> ScaleRangesHostsRemotable { get; }
    internal IList`1<CustomLabelExprHost> CustomLabelsHostsRemotable { get; }
    public object IntervalExpr { get; }
    public object IntervalOffsetExpr { get; }
    public object LogarithmicExpr { get; }
    public object LogarithmicBaseExpr { get; }
    public object MultiplierExpr { get; }
    public object ReversedExpr { get; }
    public object TickMarksOnTopExpr { get; }
    public object ToolTipExpr { get; }
    public object HiddenExpr { get; }
    public object WidthExpr { get; }
    internal IList`1<ScaleRangeExprHost> get_ScaleRangesHostsRemotable();
    internal IList`1<CustomLabelExprHost> get_CustomLabelsHostsRemotable();
    public virtual object get_IntervalExpr();
    public virtual object get_IntervalOffsetExpr();
    public virtual object get_LogarithmicExpr();
    public virtual object get_LogarithmicBaseExpr();
    public virtual object get_MultiplierExpr();
    public virtual object get_ReversedExpr();
    public virtual object get_TickMarksOnTopExpr();
    public virtual object get_ToolTipExpr();
    public virtual object get_HiddenExpr();
    public virtual object get_WidthExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.GaugeTickMarksExprHost : TickMarkStyleExprHost {
    public object IntervalExpr { get; }
    public object IntervalOffsetExpr { get; }
    public virtual object get_IntervalExpr();
    public virtual object get_IntervalOffsetExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.GroupExprHost : IndexedExprHost {
    public IndexedExprHost ParentExpressionsHost;
    public IndexedExprHost ReGroupExpressionsHost;
    public IndexedExprHost VariableValueHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<FilterExprHost> m_filterHostsRemotable;
    public IndexedExprHost UserSortExpressionsHost;
    public PageBreakExprHost PageBreakExprHost;
    public object LabelExpr { get; }
    public object PageNameExpr { get; }
    internal IList`1<FilterExprHost> FilterHostsRemotable { get; }
    public virtual object get_LabelExpr();
    public virtual object get_PageNameExpr();
    internal IList`1<FilterExprHost> get_FilterHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ImageExprHost : ReportItemExprHost {
    public object ValueExpr { get; }
    public object MIMETypeExpr { get; }
    public object TagExpr { get; }
    public virtual object get_ValueExpr();
    public virtual object get_MIMETypeExpr();
    public virtual object get_TagExpr();
}
public interface Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IMemberNode {
    public GroupExprHost GroupHost { get; }
    public SortExprHost SortHost { get; }
    public IList`1<DataValueExprHost> CustomPropertyHostsRemotable { get; }
    public IList`1<IMemberNode> MemberTreeHostsRemotable { get; }
    public IList`1<JoinConditionExprHost> JoinConditionExprHostsRemotable { get; }
    public abstract virtual GroupExprHost get_GroupHost();
    public abstract virtual SortExprHost get_SortHost();
    public abstract virtual IList`1<DataValueExprHost> get_CustomPropertyHostsRemotable();
    public abstract virtual IList`1<IMemberNode> get_MemberTreeHostsRemotable();
    public abstract virtual IList`1<JoinConditionExprHost> get_JoinConditionExprHostsRemotable();
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IndexedExprHost : ReportObjectModelProxy {
    public object Item { get; }
    public virtual object get_Item(int index);
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IndicatorImageExprHost : BaseGaugeImageExprHost {
    public object HueColorExpr { get; }
    public object TransparencyExpr { get; }
    public virtual object get_HueColorExpr();
    public virtual object get_TransparencyExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IndicatorStateExprHost : ReportObjectModelProxy {
    public GaugeInputValueExprHost StartValueHost;
    public GaugeInputValueExprHost EndValueHost;
    public IndicatorImageExprHost IndicatorImageHost;
    public object ColorExpr { get; }
    public object ScaleFactorExpr { get; }
    public object IndicatorStyleExpr { get; }
    public virtual object get_ColorExpr();
    public virtual object get_ScaleFactorExpr();
    public virtual object get_IndicatorStyleExpr();
}
public interface Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IReportObjectModelProxyForCustomCode {
    public Parameters Parameters { get; }
    public Globals Globals { get; }
    public User User { get; }
    public Variables Variables { get; }
    public abstract virtual Parameters get_Parameters();
    public abstract virtual Globals get_Globals();
    public abstract virtual User get_User();
    public abstract virtual Variables get_Variables();
}
public interface Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IVisibilityHiddenExprHost {
    public object VisibilityHiddenExpr { get; }
    public abstract virtual object get_VisibilityHiddenExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.JoinConditionExprHost : ReportObjectModelProxy {
    public object ForeignKeyExpr { get; }
    public object PrimaryKeyExpr { get; }
    public virtual object get_ForeignKeyExpr();
    public virtual object get_PrimaryKeyExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.LinearGaugeExprHost : GaugeExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<LinearScaleExprHost> m_linearScalesHostsRemotable;
    internal IList`1<LinearScaleExprHost> LinearScalesHostsRemotable { get; }
    public object OrientationExpr { get; }
    internal IList`1<LinearScaleExprHost> get_LinearScalesHostsRemotable();
    public virtual object get_OrientationExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.LinearPointerExprHost : GaugePointerExprHost {
    public ThermometerExprHost ThermometerHost;
    public object TypeExpr { get; }
    public virtual object get_TypeExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.LinearScaleExprHost : GaugeScaleExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<LinearPointerExprHost> m_linearPointersHostsRemotable;
    internal IList`1<LinearPointerExprHost> LinearPointersHostsRemotable { get; }
    public object StartMarginExpr { get; }
    public object EndMarginExpr { get; }
    internal IList`1<LinearPointerExprHost> get_LinearPointersHostsRemotable();
    public virtual object get_StartMarginExpr();
    public virtual object get_EndMarginExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.LookupDestExprHost : ReportObjectModelProxy {
    public object DestExpr { get; }
    public virtual object get_DestExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.LookupExprHost : ReportObjectModelProxy {
    public object SourceExpr { get; }
    public object ResultExpr { get; }
    public virtual object get_SourceExpr();
    public virtual object get_ResultExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapAppearanceRuleExprHost : ReportObjectModelProxy {
    [CLSCompliantAttribute("False")]
protected IList`1<MapBucketExprHost> m_mapBucketsHostsRemotable;
    public object DataValueExpr { get; }
    public object DistributionTypeExpr { get; }
    public object BucketCountExpr { get; }
    public object StartValueExpr { get; }
    public object EndValueExpr { get; }
    internal IList`1<MapBucketExprHost> MapBucketsHostsRemotable { get; }
    public object LegendTextExpr { get; }
    public virtual object get_DataValueExpr();
    public virtual object get_DistributionTypeExpr();
    public virtual object get_BucketCountExpr();
    public virtual object get_StartValueExpr();
    public virtual object get_EndValueExpr();
    internal IList`1<MapBucketExprHost> get_MapBucketsHostsRemotable();
    public virtual object get_LegendTextExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapBindingFieldPairExprHost : ReportObjectModelProxy {
    public object FieldNameExpr { get; }
    public object BindingExpressionExpr { get; }
    public virtual object get_FieldNameExpr();
    public virtual object get_BindingExpressionExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapBorderSkinExprHost : StyleExprHost {
    public object MapBorderSkinTypeExpr { get; }
    public virtual object get_MapBorderSkinTypeExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapBucketExprHost : ReportObjectModelProxy {
    public object StartValueExpr { get; }
    public object EndValueExpr { get; }
    public virtual object get_StartValueExpr();
    public virtual object get_EndValueExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapColorPaletteRuleExprHost : MapColorRuleExprHost {
    public object PaletteExpr { get; }
    public virtual object get_PaletteExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapColorRangeRuleExprHost : MapColorRuleExprHost {
    public object StartColorExpr { get; }
    public object MiddleColorExpr { get; }
    public object EndColorExpr { get; }
    public virtual object get_StartColorExpr();
    public virtual object get_MiddleColorExpr();
    public virtual object get_EndColorExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapColorRuleExprHost : MapAppearanceRuleExprHost {
    public object ShowInColorScaleExpr { get; }
    public virtual object get_ShowInColorScaleExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapColorScaleExprHost : MapDockableSubItemExprHost {
    public MapColorScaleTitleExprHost MapColorScaleTitleHost;
    public object TickMarkLengthExpr { get; }
    public object ColorBarBorderColorExpr { get; }
    public object LabelIntervalExpr { get; }
    public object LabelFormatExpr { get; }
    public object LabelPlacementExpr { get; }
    public object LabelBehaviorExpr { get; }
    public object HideEndLabelsExpr { get; }
    public object RangeGapColorExpr { get; }
    public object NoDataTextExpr { get; }
    public virtual object get_TickMarkLengthExpr();
    public virtual object get_ColorBarBorderColorExpr();
    public virtual object get_LabelIntervalExpr();
    public virtual object get_LabelFormatExpr();
    public virtual object get_LabelPlacementExpr();
    public virtual object get_LabelBehaviorExpr();
    public virtual object get_HideEndLabelsExpr();
    public virtual object get_RangeGapColorExpr();
    public virtual object get_NoDataTextExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapColorScaleTitleExprHost : StyleExprHost {
    public object CaptionExpr { get; }
    public virtual object get_CaptionExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapCustomColorExprHost : ReportObjectModelProxy {
    public object ColorExpr { get; }
    public virtual object get_ColorExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapCustomColorRuleExprHost : MapColorRuleExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<MapCustomColorExprHost> m_mapCustomColorsHostsRemotable;
    internal IList`1<MapCustomColorExprHost> MapCustomColorsHostsRemotable { get; }
    internal IList`1<MapCustomColorExprHost> get_MapCustomColorsHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapCustomViewExprHost : MapViewExprHost {
    public object CenterXExpr { get; }
    public object CenterYExpr { get; }
    public virtual object get_CenterXExpr();
    public virtual object get_CenterYExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapDataBoundViewExprHost : MapViewExprHost {
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapDataRegionExprHost : DataRegionExprHost`2<MapMemberExprHost, CellExprHost> {
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapDistanceScaleExprHost : MapDockableSubItemExprHost {
    public object ScaleColorExpr { get; }
    public object ScaleBorderColorExpr { get; }
    public virtual object get_ScaleColorExpr();
    public virtual object get_ScaleBorderColorExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapDockableSubItemExprHost : MapSubItemExprHost {
    public ActionInfoExprHost ActionInfoHost;
    public object MapPositionExpr { get; }
    public object DockOutsideViewportExpr { get; }
    public object HiddenExpr { get; }
    public object ToolTipExpr { get; }
    public virtual object get_MapPositionExpr();
    public virtual object get_DockOutsideViewportExpr();
    public virtual object get_HiddenExpr();
    public virtual object get_ToolTipExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapElementViewExprHost : MapViewExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<MapBindingFieldPairExprHost> m_mapBindingFieldPairsHostsRemotable;
    public object LayerNameExpr { get; }
    internal IList`1<MapBindingFieldPairExprHost> MapBindingFieldPairsHostsRemotable { get; }
    public virtual object get_LayerNameExpr();
    internal IList`1<MapBindingFieldPairExprHost> get_MapBindingFieldPairsHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapExprHost : ReportItemExprHost {
    public MapViewportExprHost MapViewportHost;
    [CLSCompliantAttribute("False")]
protected IList`1<MapPolygonLayerExprHost> m_mapPolygonLayersHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<MapPointLayerExprHost> m_mapPointLayersHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<MapLineLayerExprHost> m_mapLineLayersHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<MapTileLayerExprHost> m_mapTileLayersHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<MapLegendExprHost> m_mapLegendsHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<MapTitleExprHost> m_mapTitlesHostsRemotable;
    public MapDistanceScaleExprHost MapDistanceScaleHost;
    public MapColorScaleExprHost MapColorScaleHost;
    public MapBorderSkinExprHost MapBorderSkinHost;
    internal IList`1<MapPolygonLayerExprHost> MapPolygonLayersHostsRemotable { get; }
    internal IList`1<MapPointLayerExprHost> MapPointLayersHostsRemotable { get; }
    internal IList`1<MapLineLayerExprHost> MapLineLayersHostsRemotable { get; }
    internal IList`1<MapTileLayerExprHost> MapTileLayersHostsRemotable { get; }
    internal IList`1<MapLegendExprHost> MapLegendsHostsRemotable { get; }
    internal IList`1<MapTitleExprHost> MapTitlesHostsRemotable { get; }
    public object AntiAliasingExpr { get; }
    public object TextAntiAliasingQualityExpr { get; }
    public object ShadowIntensityExpr { get; }
    public object TileLanguageExpr { get; }
    internal IList`1<MapPolygonLayerExprHost> get_MapPolygonLayersHostsRemotable();
    internal IList`1<MapPointLayerExprHost> get_MapPointLayersHostsRemotable();
    internal IList`1<MapLineLayerExprHost> get_MapLineLayersHostsRemotable();
    internal IList`1<MapTileLayerExprHost> get_MapTileLayersHostsRemotable();
    internal IList`1<MapLegendExprHost> get_MapLegendsHostsRemotable();
    internal IList`1<MapTitleExprHost> get_MapTitlesHostsRemotable();
    public virtual object get_AntiAliasingExpr();
    public virtual object get_TextAntiAliasingQualityExpr();
    public virtual object get_ShadowIntensityExpr();
    public virtual object get_TileLanguageExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapFieldNameExprHost : ReportObjectModelProxy {
    public object NameExpr { get; }
    public virtual object get_NameExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapGridLinesExprHost : StyleExprHost {
    public object HiddenExpr { get; }
    public object IntervalExpr { get; }
    public object ShowLabelsExpr { get; }
    public object LabelPositionExpr { get; }
    public virtual object get_HiddenExpr();
    public virtual object get_IntervalExpr();
    public virtual object get_ShowLabelsExpr();
    public virtual object get_LabelPositionExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapLayerExprHost : ReportObjectModelProxy {
    public object VisibilityModeExpr { get; }
    public object MinimumZoomExpr { get; }
    public object MaximumZoomExpr { get; }
    public object TransparencyExpr { get; }
    public virtual object get_VisibilityModeExpr();
    public virtual object get_MinimumZoomExpr();
    public virtual object get_MaximumZoomExpr();
    public virtual object get_TransparencyExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapLegendExprHost : MapDockableSubItemExprHost {
    public MapLegendTitleExprHost MapLegendTitleHost;
    public object LayoutExpr { get; }
    public object AutoFitTextDisabledExpr { get; }
    public object MinFontSizeExpr { get; }
    public object InterlacedRowsExpr { get; }
    public object InterlacedRowsColorExpr { get; }
    public object EquallySpacedItemsExpr { get; }
    public object TextWrapThresholdExpr { get; }
    public virtual object get_LayoutExpr();
    public virtual object get_AutoFitTextDisabledExpr();
    public virtual object get_MinFontSizeExpr();
    public virtual object get_InterlacedRowsExpr();
    public virtual object get_InterlacedRowsColorExpr();
    public virtual object get_EquallySpacedItemsExpr();
    public virtual object get_TextWrapThresholdExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapLegendTitleExprHost : StyleExprHost {
    public object CaptionExpr { get; }
    public object TitleSeparatorExpr { get; }
    public object TitleSeparatorColorExpr { get; }
    public virtual object get_CaptionExpr();
    public virtual object get_TitleSeparatorExpr();
    public virtual object get_TitleSeparatorColorExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapLimitsExprHost : ReportObjectModelProxy {
    public object MinimumXExpr { get; }
    public object MinimumYExpr { get; }
    public object MaximumXExpr { get; }
    public object MaximumYExpr { get; }
    public object LimitToDataExpr { get; }
    public virtual object get_MinimumXExpr();
    public virtual object get_MinimumYExpr();
    public virtual object get_MaximumXExpr();
    public virtual object get_MaximumYExpr();
    public virtual object get_LimitToDataExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapLineExprHost : MapSpatialElementExprHost {
    public MapLineTemplateExprHost MapLineTemplateHost;
    public object UseCustomLineTemplateExpr { get; }
    public virtual object get_UseCustomLineTemplateExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapLineLayerExprHost : MapVectorLayerExprHost {
    public MapLineTemplateExprHost MapLineTemplateHost;
    public MapLineRulesExprHost MapLineRulesHost;
    [CLSCompliantAttribute("False")]
protected IList`1<MapLineExprHost> m_mapLinesHostsRemotable;
    internal IList`1<MapLineExprHost> MapLinesHostsRemotable { get; }
    internal IList`1<MapLineExprHost> get_MapLinesHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapLineRulesExprHost : ReportObjectModelProxy {
    public MapSizeRuleExprHost MapSizeRuleHost;
    public MapColorRuleExprHost MapColorRuleHost;
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapLineTemplateExprHost : MapSpatialElementTemplateExprHost {
    public object WidthExpr { get; }
    public object LabelPlacementExpr { get; }
    public virtual object get_WidthExpr();
    public virtual object get_LabelPlacementExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapLocationExprHost : ReportObjectModelProxy {
    public object LeftExpr { get; }
    public object TopExpr { get; }
    public object UnitExpr { get; }
    public virtual object get_LeftExpr();
    public virtual object get_TopExpr();
    public virtual object get_UnitExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapMarkerExprHost : ReportObjectModelProxy {
    public MapMarkerImageExprHost MapMarkerImageHost;
    public object MapMarkerStyleExpr { get; }
    public virtual object get_MapMarkerStyleExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapMarkerImageExprHost : ReportObjectModelProxy {
    public object SourceExpr { get; }
    public object ValueExpr { get; }
    public object MIMETypeExpr { get; }
    public object TransparentColorExpr { get; }
    public object ResizeModeExpr { get; }
    public virtual object get_SourceExpr();
    public virtual object get_ValueExpr();
    public virtual object get_MIMETypeExpr();
    public virtual object get_TransparentColorExpr();
    public virtual object get_ResizeModeExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapMarkerRuleExprHost : MapAppearanceRuleExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<MapMarkerExprHost> m_mapMarkersHostsRemotable;
    internal IList`1<MapMarkerExprHost> MapMarkersHostsRemotable { get; }
    internal IList`1<MapMarkerExprHost> get_MapMarkersHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapMarkerTemplateExprHost : MapPointTemplateExprHost {
    public MapMarkerExprHost MapMarkerHost;
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapMemberExprHost : MemberNodeExprHost`1<MapMemberExprHost> {
    [CLSCompliantAttribute("False")]
protected IList`1<MapPolygonLayerExprHost> m_mapPolygonLayersHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<MapPointLayerExprHost> m_mapPointLayersHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<MapLineLayerExprHost> m_mapLineLayersHostsRemotable;
    internal IList`1<MapPolygonLayerExprHost> MapPolygonLayersHostsRemotable { get; }
    internal IList`1<MapPointLayerExprHost> MapPointLayersHostsRemotable { get; }
    internal IList`1<MapLineLayerExprHost> MapLineLayersHostsRemotable { get; }
    internal IList`1<MapPolygonLayerExprHost> get_MapPolygonLayersHostsRemotable();
    internal IList`1<MapPointLayerExprHost> get_MapPointLayersHostsRemotable();
    internal IList`1<MapLineLayerExprHost> get_MapLineLayersHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapPointExprHost : MapSpatialElementExprHost {
    public MapPointTemplateExprHost MapPointTemplateHost;
    public object UseCustomPointTemplateExpr { get; }
    public virtual object get_UseCustomPointTemplateExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapPointLayerExprHost : MapVectorLayerExprHost {
    public MapPointTemplateExprHost MapPointTemplateHost;
    public MapPointRulesExprHost MapPointRulesHost;
    [CLSCompliantAttribute("False")]
protected IList`1<MapPointExprHost> m_mapPointsHostsRemotable;
    internal IList`1<MapPointExprHost> MapPointsHostsRemotable { get; }
    internal IList`1<MapPointExprHost> get_MapPointsHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapPointRulesExprHost : ReportObjectModelProxy {
    public MapSizeRuleExprHost MapSizeRuleHost;
    public MapColorRuleExprHost MapColorRuleHost;
    public MapMarkerRuleExprHost MapMarkerRuleHost;
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapPointTemplateExprHost : MapSpatialElementTemplateExprHost {
    public object SizeExpr { get; }
    public object LabelPlacementExpr { get; }
    public virtual object get_SizeExpr();
    public virtual object get_LabelPlacementExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapPolygonExprHost : MapSpatialElementExprHost {
    public MapPolygonTemplateExprHost MapPolygonTemplateHost;
    public MapPointTemplateExprHost MapPointTemplateHost;
    public object UseCustomPolygonTemplateExpr { get; }
    public object UseCustomPointTemplateExpr { get; }
    public virtual object get_UseCustomPolygonTemplateExpr();
    public virtual object get_UseCustomPointTemplateExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapPolygonLayerExprHost : MapVectorLayerExprHost {
    public MapPolygonTemplateExprHost MapPolygonTemplateHost;
    public MapPolygonRulesExprHost MapPolygonRulesHost;
    public MapPointTemplateExprHost MapPointTemplateHost;
    public MapPointRulesExprHost MapPointRulesHost;
    [CLSCompliantAttribute("False")]
protected IList`1<MapPolygonExprHost> m_mapPolygonsHostsRemotable;
    internal IList`1<MapPolygonExprHost> MapPolygonsHostsRemotable { get; }
    internal IList`1<MapPolygonExprHost> get_MapPolygonsHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapPolygonRulesExprHost : ReportObjectModelProxy {
    public MapColorRuleExprHost MapColorRuleHost;
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapPolygonTemplateExprHost : MapSpatialElementTemplateExprHost {
    public object ScaleFactorExpr { get; }
    public object CenterPointOffsetXExpr { get; }
    public object CenterPointOffsetYExpr { get; }
    public object ShowLabelExpr { get; }
    public object LabelPlacementExpr { get; }
    public virtual object get_ScaleFactorExpr();
    public virtual object get_CenterPointOffsetXExpr();
    public virtual object get_CenterPointOffsetYExpr();
    public virtual object get_ShowLabelExpr();
    public virtual object get_LabelPlacementExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapShapefileExprHost : MapSpatialDataExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<MapFieldNameExprHost> m_mapFieldNamesHostsRemotable;
    public object SourceExpr { get; }
    internal IList`1<MapFieldNameExprHost> MapFieldNamesHostsRemotable { get; }
    public virtual object get_SourceExpr();
    internal IList`1<MapFieldNameExprHost> get_MapFieldNamesHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapSizeExprHost : ReportObjectModelProxy {
    public object WidthExpr { get; }
    public object HeightExpr { get; }
    public object UnitExpr { get; }
    public virtual object get_WidthExpr();
    public virtual object get_HeightExpr();
    public virtual object get_UnitExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapSizeRuleExprHost : MapAppearanceRuleExprHost {
    public object StartSizeExpr { get; }
    public object EndSizeExpr { get; }
    public virtual object get_StartSizeExpr();
    public virtual object get_EndSizeExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapSpatialDataExprHost : ReportObjectModelProxy {
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapSpatialDataRegionExprHost : MapSpatialDataExprHost {
    public object VectorDataExpr { get; }
    public virtual object get_VectorDataExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapSpatialDataSetExprHost : MapSpatialDataExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<MapFieldNameExprHost> m_mapFieldNamesHostsRemotable;
    public object DataSetNameExpr { get; }
    public object SpatialFieldExpr { get; }
    internal IList`1<MapFieldNameExprHost> MapFieldNamesHostsRemotable { get; }
    public virtual object get_DataSetNameExpr();
    public virtual object get_SpatialFieldExpr();
    internal IList`1<MapFieldNameExprHost> get_MapFieldNamesHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapSpatialElementExprHost : ReportObjectModelProxy {
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapSpatialElementTemplateExprHost : StyleExprHost {
    public ActionInfoExprHost ActionInfoHost;
    public object HiddenExpr { get; }
    public object OffsetXExpr { get; }
    public object OffsetYExpr { get; }
    public object LabelExpr { get; }
    public object ToolTipExpr { get; }
    public object DataElementLabelExpr { get; }
    public virtual object get_HiddenExpr();
    public virtual object get_OffsetXExpr();
    public virtual object get_OffsetYExpr();
    public virtual object get_LabelExpr();
    public virtual object get_ToolTipExpr();
    public virtual object get_DataElementLabelExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapSubItemExprHost : StyleExprHost {
    public MapLocationExprHost MapLocationHost;
    public MapSizeExprHost MapSizeHost;
    public object LeftMarginExpr { get; }
    public object RightMarginExpr { get; }
    public object TopMarginExpr { get; }
    public object BottomMarginExpr { get; }
    public object ZIndexExpr { get; }
    public virtual object get_LeftMarginExpr();
    public virtual object get_RightMarginExpr();
    public virtual object get_TopMarginExpr();
    public virtual object get_BottomMarginExpr();
    public virtual object get_ZIndexExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapTileExprHost : ReportObjectModelProxy {
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapTileLayerExprHost : MapLayerExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<MapTileExprHost> m_mapTilesHostsRemotable;
    public object ServiceUrlExpr { get; }
    public object TileStyleExpr { get; }
    public object UseSecureConnectionExpr { get; }
    internal IList`1<MapTileExprHost> MapTilesHostsRemotable { get; }
    public virtual object get_ServiceUrlExpr();
    public virtual object get_TileStyleExpr();
    public virtual object get_UseSecureConnectionExpr();
    internal IList`1<MapTileExprHost> get_MapTilesHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapTitleExprHost : MapDockableSubItemExprHost {
    public object TextExpr { get; }
    public object AngleExpr { get; }
    public object TextShadowOffsetExpr { get; }
    public virtual object get_TextExpr();
    public virtual object get_AngleExpr();
    public virtual object get_TextShadowOffsetExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapVectorLayerExprHost : MapLayerExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<MapBindingFieldPairExprHost> m_mapBindingFieldPairsHostsRemotable;
    public MapSpatialDataExprHost MapSpatialDataHost;
    internal IList`1<MapBindingFieldPairExprHost> MapBindingFieldPairsHostsRemotable { get; }
    internal IList`1<MapBindingFieldPairExprHost> get_MapBindingFieldPairsHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapViewExprHost : ReportObjectModelProxy {
    public object ZoomExpr { get; }
    public virtual object get_ZoomExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MapViewportExprHost : MapSubItemExprHost {
    public MapLimitsExprHost MapLimitsHost;
    public MapViewExprHost MapViewHost;
    public MapGridLinesExprHost MapMeridiansHost;
    public MapGridLinesExprHost MapParallelsHost;
    public object MapCoordinateSystemExpr { get; }
    public object MapProjectionExpr { get; }
    public object ProjectionCenterXExpr { get; }
    public object ProjectionCenterYExpr { get; }
    public object MaximumZoomExpr { get; }
    public object MinimumZoomExpr { get; }
    public object ContentMarginExpr { get; }
    public object GridUnderContentExpr { get; }
    public object SimplificationResolutionExpr { get; }
    public virtual object get_MapCoordinateSystemExpr();
    public virtual object get_MapProjectionExpr();
    public virtual object get_ProjectionCenterXExpr();
    public virtual object get_ProjectionCenterYExpr();
    public virtual object get_MaximumZoomExpr();
    public virtual object get_MinimumZoomExpr();
    public virtual object get_ContentMarginExpr();
    public virtual object get_GridUnderContentExpr();
    public virtual object get_SimplificationResolutionExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.MemberNodeExprHost`1 : ReportObjectModelProxy {
    protected GroupExprHost m_groupHost;
    protected SortExprHost m_sortHost;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_customPropertyHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<IMemberNode> m_memberTreeHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<JoinConditionExprHost> m_joinConditionExprHostsRemotable;
    private GroupExprHost Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IMemberNode.GroupHost { get; }
    private SortExprHost Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IMemberNode.SortHost { get; }
    private IList`1<DataValueExprHost> Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IMemberNode.CustomPropertyHostsRemotable { get; }
    private IList`1<IMemberNode> Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IMemberNode.MemberTreeHostsRemotable { get; }
    private IList`1<JoinConditionExprHost> Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IMemberNode.JoinConditionExprHostsRemotable { get; }
    private sealed virtual override GroupExprHost Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IMemberNode.get_GroupHost();
    private sealed virtual override SortExprHost Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IMemberNode.get_SortHost();
    private sealed virtual override IList`1<DataValueExprHost> Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IMemberNode.get_CustomPropertyHostsRemotable();
    private sealed virtual override IList`1<IMemberNode> Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IMemberNode.get_MemberTreeHostsRemotable();
    private sealed virtual override IList`1<JoinConditionExprHost> Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IMemberNode.get_JoinConditionExprHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.NumericIndicatorExprHost : GaugePanelItemExprHost {
    public GaugeInputValueExprHost GaugeInputValueHost;
    [CLSCompliantAttribute("False")]
protected IList`1<NumericIndicatorRangeExprHost> m_numericIndicatorRangesHostsRemotable;
    public GaugeInputValueExprHost MinimumValueHost;
    public GaugeInputValueExprHost MaximumValueHost;
    [CLSCompliantAttribute("False")]
public IList`1<NumericIndicatorRangeExprHost> NumericIndicatorRangesHostsRemotable { get; }
    public object DecimalDigitColorExpr { get; }
    public object DigitColorExpr { get; }
    public object UseFontPercentExpr { get; }
    public object DecimalDigitsExpr { get; }
    public object DigitsExpr { get; }
    public object MultiplierExpr { get; }
    public object NonNumericStringExpr { get; }
    public object OutOfRangeStringExpr { get; }
    public object ResizeModeExpr { get; }
    public object ShowDecimalPointExpr { get; }
    public object ShowLeadingZerosExpr { get; }
    public object IndicatorStyleExpr { get; }
    public object ShowSignExpr { get; }
    public object SnappingEnabledExpr { get; }
    public object SnappingIntervalExpr { get; }
    public object LedDimColorExpr { get; }
    public object SeparatorWidthExpr { get; }
    public object SeparatorColorExpr { get; }
    public IList`1<NumericIndicatorRangeExprHost> get_NumericIndicatorRangesHostsRemotable();
    public virtual object get_DecimalDigitColorExpr();
    public virtual object get_DigitColorExpr();
    public virtual object get_UseFontPercentExpr();
    public virtual object get_DecimalDigitsExpr();
    public virtual object get_DigitsExpr();
    public virtual object get_MultiplierExpr();
    public virtual object get_NonNumericStringExpr();
    public virtual object get_OutOfRangeStringExpr();
    public virtual object get_ResizeModeExpr();
    public virtual object get_ShowDecimalPointExpr();
    public virtual object get_ShowLeadingZerosExpr();
    public virtual object get_IndicatorStyleExpr();
    public virtual object get_ShowSignExpr();
    public virtual object get_SnappingEnabledExpr();
    public virtual object get_SnappingIntervalExpr();
    public virtual object get_LedDimColorExpr();
    public virtual object get_SeparatorWidthExpr();
    public virtual object get_SeparatorColorExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.NumericIndicatorRangeExprHost : ReportObjectModelProxy {
    public GaugeInputValueExprHost StartValueHost;
    public GaugeInputValueExprHost EndValueHost;
    public object DecimalDigitColorExpr { get; }
    public object DigitColorExpr { get; }
    public virtual object get_DecimalDigitColorExpr();
    public virtual object get_DigitColorExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.PageBreakExprHost : ReportObjectModelProxy {
    public object DisabledExpr { get; }
    public object ResetPageNumberExpr { get; }
    public virtual object get_DisabledExpr();
    public virtual object get_ResetPageNumberExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ParagraphExprHost : StyleExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<TextRunExprHost> m_textRunHostsRemotable;
    internal IList`1<TextRunExprHost> TextRunHostsRemotable { get; }
    public object LeftIndentExpr { get; }
    public object RightIndentExpr { get; }
    public object HangingIndentExpr { get; }
    public object SpaceBeforeExpr { get; }
    public object SpaceAfterExpr { get; }
    public object ListStyleExpr { get; }
    public object ListLevelExpr { get; }
    internal IList`1<TextRunExprHost> get_TextRunHostsRemotable();
    public virtual object get_LeftIndentExpr();
    public virtual object get_RightIndentExpr();
    public virtual object get_HangingIndentExpr();
    public virtual object get_SpaceBeforeExpr();
    public virtual object get_SpaceAfterExpr();
    public virtual object get_ListStyleExpr();
    public virtual object get_ListLevelExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ParamExprHost : ReportObjectModelProxy {
    public object ValueExpr { get; }
    public object OmitExpr { get; }
    public virtual object get_ValueExpr();
    public virtual object get_OmitExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.PinLabelExprHost : StyleExprHost {
    public object TextExpr { get; }
    public object AllowUpsideDownExpr { get; }
    public object DistanceFromScaleExpr { get; }
    public object FontAngleExpr { get; }
    public object PlacementExpr { get; }
    public object RotateLabelExpr { get; }
    public object UseFontPercentExpr { get; }
    public virtual object get_TextExpr();
    public virtual object get_AllowUpsideDownExpr();
    public virtual object get_DistanceFromScaleExpr();
    public virtual object get_FontAngleExpr();
    public virtual object get_PlacementExpr();
    public virtual object get_RotateLabelExpr();
    public virtual object get_UseFontPercentExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.PointerCapExprHost : StyleExprHost {
    public CapImageExprHost CapImageHost;
    public object OnTopExpr { get; }
    public object ReflectionExpr { get; }
    public object CapStyleExpr { get; }
    public object HiddenExpr { get; }
    public object WidthExpr { get; }
    public virtual object get_OnTopExpr();
    public virtual object get_ReflectionExpr();
    public virtual object get_CapStyleExpr();
    public virtual object get_HiddenExpr();
    public virtual object get_WidthExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.PointerImageExprHost : BaseGaugeImageExprHost {
    public object HueColorExpr { get; }
    public object TransparencyExpr { get; }
    public object OffsetXExpr { get; }
    public object OffsetYExpr { get; }
    public virtual object get_HueColorExpr();
    public virtual object get_TransparencyExpr();
    public virtual object get_OffsetXExpr();
    public virtual object get_OffsetYExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.RadialGaugeExprHost : GaugeExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<RadialScaleExprHost> m_radialScalesHostsRemotable;
    internal IList`1<RadialScaleExprHost> RadialScalesHostsRemotable { get; }
    public object PivotXExpr { get; }
    public object PivotYExpr { get; }
    internal IList`1<RadialScaleExprHost> get_RadialScalesHostsRemotable();
    public virtual object get_PivotXExpr();
    public virtual object get_PivotYExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.RadialPointerExprHost : GaugePointerExprHost {
    public PointerCapExprHost PointerCapHost;
    public object TypeExpr { get; }
    public object NeedleStyleExpr { get; }
    public virtual object get_TypeExpr();
    public virtual object get_NeedleStyleExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.RadialScaleExprHost : GaugeScaleExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<RadialPointerExprHost> m_radialPointersHostsRemotable;
    internal IList`1<RadialPointerExprHost> RadialPointersHostsRemotable { get; }
    public object RadiusExpr { get; }
    public object StartAngleExpr { get; }
    public object SweepAngleExpr { get; }
    internal IList`1<RadialPointerExprHost> get_RadialPointersHostsRemotable();
    public virtual object get_RadiusExpr();
    public virtual object get_StartAngleExpr();
    public virtual object get_SweepAngleExpr();
}
[CLSCompliantAttribute("False")]
[DefaultMemberAttribute("Item")]
public class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.RemoteArrayWrapper`1 : MarshalByRefObject {
    private T[] m_array;
    public T Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public RemoteArrayWrapper`1(T[] array);
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(T item);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
}
[CLSCompliantAttribute("False")]
[DefaultMemberAttribute("Item")]
public class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.RemoteMemberArrayWrapper`1 : MarshalByRefObject {
    private TMemberType[] m_array;
    public IMemberNode Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public RemoteMemberArrayWrapper`1(TMemberType[] array);
    public sealed virtual int IndexOf(IMemberNode item);
    public sealed virtual void Insert(int index, IMemberNode item);
    public sealed virtual IMemberNode get_Item(int index);
    public sealed virtual void set_Item(int index, IMemberNode value);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual void Add(IMemberNode item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(IMemberNode item);
    public sealed virtual void CopyTo(IMemberNode[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(IMemberNode item);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerator`1<IMemberNode> GetEnumerator();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ReportExprHost : ReportItemExprHost {
    protected CustomCodeProxyBase m_codeProxyBase;
    public IndexedExprHost VariableValueHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<AggregateParamExprHost> m_aggregateParamHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<LookupExprHost> m_lookupExprHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<LookupDestExprHost> m_lookupDestExprHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ReportParamExprHost> m_reportParameterHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<DataSourceExprHost> m_dataSourceHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<DataSetExprHost> m_dataSetHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<StyleExprHost> m_pageSectionHostsRemotable;
    protected StyleExprHost m_pageHost;
    [CLSCompliantAttribute("False")]
protected IList`1<StyleExprHost> m_pageHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ReportSectionExprHost> m_reportSectionHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ReportItemExprHost> m_lineHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ReportItemExprHost> m_rectangleHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<TextBoxExprHost> m_textBoxHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ImageExprHost> m_imageHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<SubreportExprHost> m_subreportHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<TablixExprHost> m_tablixHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartExprHost> m_chartHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<GaugePanelExprHost> m_gaugePanelHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<MapExprHost> m_mapHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<MapDataRegionExprHost> m_mapDataRegionHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<CustomReportItemExprHost> m_customReportItemHostsRemotable;
    public object ReportLanguageExpr { get; }
    public object AutoRefreshExpr { get; }
    public object InitialPageNameExpr { get; }
    internal IList`1<AggregateParamExprHost> AggregateParamHostsRemotable { get; }
    [CLSCompliantAttribute("False")]
public IList`1<LookupExprHost> LookupExprHostsRemotable { get; }
    [CLSCompliantAttribute("False")]
public IList`1<LookupDestExprHost> LookupDestExprHostsRemotable { get; }
    internal IList`1<ReportParamExprHost> ReportParameterHostsRemotable { get; }
    internal IList`1<DataSourceExprHost> DataSourceHostsRemotable { get; }
    internal IList`1<DataSetExprHost> DataSetHostsRemotable { get; }
    internal IList`1<StyleExprHost> PageSectionHostsRemotable { get; }
    internal StyleExprHost PageHost { get; }
    [CLSCompliantAttribute("False")]
public IList`1<StyleExprHost> PageHostsRemotable { get; }
    [CLSCompliantAttribute("False")]
public IList`1<ReportSectionExprHost> ReportSectionHostsRemotable { get; }
    internal IList`1<ReportItemExprHost> LineHostsRemotable { get; }
    internal IList`1<ReportItemExprHost> RectangleHostsRemotable { get; }
    internal IList`1<TextBoxExprHost> TextBoxHostsRemotable { get; }
    internal IList`1<ImageExprHost> ImageHostsRemotable { get; }
    internal IList`1<SubreportExprHost> SubreportHostsRemotable { get; }
    internal IList`1<TablixExprHost> TablixHostsRemotable { get; }
    internal IList`1<ChartExprHost> ChartHostsRemotable { get; }
    internal IList`1<GaugePanelExprHost> GaugePanelHostsRemotable { get; }
    internal IList`1<MapExprHost> MapHostsRemotable { get; }
    internal IList`1<MapDataRegionExprHost> MapDataRegionHostsRemotable { get; }
    internal IList`1<CustomReportItemExprHost> CustomReportItemHostsRemotable { get; }
    protected ReportExprHost(object reportObjectModel);
    internal void CustomCodeOnInit();
    public virtual object get_ReportLanguageExpr();
    public virtual object get_AutoRefreshExpr();
    public virtual object get_InitialPageNameExpr();
    internal IList`1<AggregateParamExprHost> get_AggregateParamHostsRemotable();
    public IList`1<LookupExprHost> get_LookupExprHostsRemotable();
    public IList`1<LookupDestExprHost> get_LookupDestExprHostsRemotable();
    internal IList`1<ReportParamExprHost> get_ReportParameterHostsRemotable();
    internal IList`1<DataSourceExprHost> get_DataSourceHostsRemotable();
    internal IList`1<DataSetExprHost> get_DataSetHostsRemotable();
    internal IList`1<StyleExprHost> get_PageSectionHostsRemotable();
    internal virtual StyleExprHost get_PageHost();
    public IList`1<StyleExprHost> get_PageHostsRemotable();
    public IList`1<ReportSectionExprHost> get_ReportSectionHostsRemotable();
    internal IList`1<ReportItemExprHost> get_LineHostsRemotable();
    internal IList`1<ReportItemExprHost> get_RectangleHostsRemotable();
    internal IList`1<TextBoxExprHost> get_TextBoxHostsRemotable();
    internal IList`1<ImageExprHost> get_ImageHostsRemotable();
    internal IList`1<SubreportExprHost> get_SubreportHostsRemotable();
    internal IList`1<TablixExprHost> get_TablixHostsRemotable();
    internal IList`1<ChartExprHost> get_ChartHostsRemotable();
    internal IList`1<GaugePanelExprHost> get_GaugePanelHostsRemotable();
    internal IList`1<MapExprHost> get_MapHostsRemotable();
    internal IList`1<MapDataRegionExprHost> get_MapDataRegionHostsRemotable();
    internal IList`1<CustomReportItemExprHost> get_CustomReportItemHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ReportItemExprHost : StyleExprHost {
    public ActionInfoExprHost ActionInfoHost;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_customPropertyHostsRemotable;
    public PageBreakExprHost PageBreakExprHost;
    internal IList`1<DataValueExprHost> CustomPropertyHostsRemotable { get; }
    public object LabelExpr { get; }
    public object BookmarkExpr { get; }
    public object ToolTipExpr { get; }
    public object VisibilityHiddenExpr { get; }
    public object PageNameExpr { get; }
    internal IList`1<DataValueExprHost> get_CustomPropertyHostsRemotable();
    public virtual object get_LabelExpr();
    public virtual object get_BookmarkExpr();
    public virtual object get_ToolTipExpr();
    public virtual object get_VisibilityHiddenExpr();
    public virtual object get_PageNameExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ReportObjectModelProxy : MarshalByRefObject {
    private OnDemandObjectModel m_reportObjectModel;
    protected Fields Fields { get; }
    protected Parameters Parameters { get; }
    protected Globals Globals { get; }
    protected User User { get; }
    protected ReportItems ReportItems { get; }
    protected Aggregates Aggregates { get; }
    protected Lookups Lookups { get; }
    protected DataSets DataSets { get; }
    protected DataSources DataSources { get; }
    protected Variables Variables { get; }
    private Parameters Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IReportObjectModelProxyForCustomCode.Parameters { get; }
    private Globals Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IReportObjectModelProxyForCustomCode.Globals { get; }
    private User Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IReportObjectModelProxyForCustomCode.User { get; }
    private Variables Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IReportObjectModelProxyForCustomCode.Variables { get; }
    internal void SetReportObjectModel(OnDemandObjectModel reportObjectModel);
    protected Fields get_Fields();
    protected Parameters get_Parameters();
    protected Globals get_Globals();
    protected User get_User();
    protected ReportItems get_ReportItems();
    protected Aggregates get_Aggregates();
    protected Lookups get_Lookups();
    protected DataSets get_DataSets();
    protected DataSources get_DataSources();
    protected Variables get_Variables();
    protected bool InScope(string scope);
    protected int Level();
    protected int Level(string scope);
    protected object MinValue(Object[] arguments);
    protected object MaxValue(Object[] arguments);
    protected string CreateDrillthroughContext();
    private sealed virtual override Parameters Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IReportObjectModelProxyForCustomCode.get_Parameters();
    private sealed virtual override Globals Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IReportObjectModelProxyForCustomCode.get_Globals();
    private sealed virtual override User Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IReportObjectModelProxyForCustomCode.get_User();
    private sealed virtual override Variables Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.IReportObjectModelProxyForCustomCode.get_Variables();
    public virtual object InitializeLifetimeService();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ReportParamExprHost : IndexedExprHost {
    public IndexedExprHost ValidValuesHost;
    public IndexedExprHost ValidValueLabelsHost;
    public object PromptExpr { get; }
    public object ValidationExpressionExpr { get; }
    public virtual object get_PromptExpr();
    public virtual object get_ValidationExpressionExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ReportSectionExprHost : ReportItemExprHost {
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ScaleLabelsExprHost : StyleExprHost {
    public object IntervalExpr { get; }
    public object IntervalOffsetExpr { get; }
    public object AllowUpsideDownExpr { get; }
    public object DistanceFromScaleExpr { get; }
    public object FontAngleExpr { get; }
    public object PlacementExpr { get; }
    public object RotateLabelsExpr { get; }
    public object ShowEndLabelsExpr { get; }
    public object HiddenExpr { get; }
    public object UseFontPercentExpr { get; }
    public virtual object get_IntervalExpr();
    public virtual object get_IntervalOffsetExpr();
    public virtual object get_AllowUpsideDownExpr();
    public virtual object get_DistanceFromScaleExpr();
    public virtual object get_FontAngleExpr();
    public virtual object get_PlacementExpr();
    public virtual object get_RotateLabelsExpr();
    public virtual object get_ShowEndLabelsExpr();
    public virtual object get_HiddenExpr();
    public virtual object get_UseFontPercentExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ScalePinExprHost : TickMarkStyleExprHost {
    public PinLabelExprHost PinLabelHost;
    public object LocationExpr { get; }
    public object EnableExpr { get; }
    public virtual object get_LocationExpr();
    public virtual object get_EnableExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ScaleRangeExprHost : StyleExprHost {
    public GaugeInputValueExprHost StartValueHost;
    public GaugeInputValueExprHost EndValueHost;
    public ActionInfoExprHost ActionInfoHost;
    public object DistanceFromScaleExpr { get; }
    public object StartWidthExpr { get; }
    public object EndWidthExpr { get; }
    public object InRangeBarPointerColorExpr { get; }
    public object InRangeLabelColorExpr { get; }
    public object InRangeTickMarksColorExpr { get; }
    public object PlacementExpr { get; }
    public object ToolTipExpr { get; }
    public object HiddenExpr { get; }
    public virtual object get_DistanceFromScaleExpr();
    public virtual object get_StartWidthExpr();
    public virtual object get_EndWidthExpr();
    public virtual object get_InRangeBarPointerColorExpr();
    public virtual object get_InRangeLabelColorExpr();
    public virtual object get_InRangeTickMarksColorExpr();
    public virtual object get_PlacementExpr();
    public virtual object get_ToolTipExpr();
    public virtual object get_HiddenExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.SortExprHost : IndexedExprHost {
    public IndexedExprHost SortDirectionHosts;
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.StateIndicatorExprHost : GaugePanelItemExprHost {
    public GaugeInputValueExprHost GaugeInputValueHost;
    public IndicatorImageExprHost IndicatorImageHost;
    [CLSCompliantAttribute("False")]
protected IList`1<IndicatorStateExprHost> m_indicatorStatesHostsRemotable;
    public GaugeInputValueExprHost MaximumValueHost;
    public GaugeInputValueExprHost MinimumValueHost;
    public object IndicatorStyleExpr { get; }
    public object ScaleFactorExpr { get; }
    [CLSCompliantAttribute("False")]
public IList`1<IndicatorStateExprHost> IndicatorStatesHostsRemotable { get; }
    public object ResizeModeExpr { get; }
    public object AngleExpr { get; }
    public object TransformationTypeExpr { get; }
    public virtual object get_IndicatorStyleExpr();
    public virtual object get_ScaleFactorExpr();
    public IList`1<IndicatorStateExprHost> get_IndicatorStatesHostsRemotable();
    public virtual object get_ResizeModeExpr();
    public virtual object get_AngleExpr();
    public virtual object get_TransformationTypeExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.StyleExprHost : ReportObjectModelProxy {
    public object BorderColorExpr { get; }
    public object BorderColorLeftExpr { get; }
    public object BorderColorRightExpr { get; }
    public object BorderColorTopExpr { get; }
    public object BorderColorBottomExpr { get; }
    public object BorderStyleExpr { get; }
    public object BorderStyleLeftExpr { get; }
    public object BorderStyleRightExpr { get; }
    public object BorderStyleTopExpr { get; }
    public object BorderStyleBottomExpr { get; }
    public object BorderWidthExpr { get; }
    public object BorderWidthLeftExpr { get; }
    public object BorderWidthRightExpr { get; }
    public object BorderWidthTopExpr { get; }
    public object BorderWidthBottomExpr { get; }
    public object BackgroundColorExpr { get; }
    public object BackgroundGradientTypeExpr { get; }
    public object BackgroundGradientEndColorExpr { get; }
    public object BackgroundImageValueExpr { get; }
    public object BackgroundImageMIMETypeExpr { get; }
    public object BackgroundRepeatExpr { get; }
    public object PositionExpr { get; }
    public object TransparentColorExpr { get; }
    public object FontStyleExpr { get; }
    public object FontFamilyExpr { get; }
    public object FontSizeExpr { get; }
    public object FontWeightExpr { get; }
    public object FormatExpr { get; }
    public object TextDecorationExpr { get; }
    public object TextAlignExpr { get; }
    public object VerticalAlignExpr { get; }
    public object ColorExpr { get; }
    public object PaddingLeftExpr { get; }
    public object PaddingRightExpr { get; }
    public object PaddingTopExpr { get; }
    public object PaddingBottomExpr { get; }
    public object LineHeightExpr { get; }
    public object CanSortExpr { get; }
    public object DirectionExpr { get; }
    public object WritingModeExpr { get; }
    public object LanguageExpr { get; }
    public object UnicodeBiDiExpr { get; }
    public object CalendarExpr { get; }
    public object NumeralLanguageExpr { get; }
    public object NumeralVariantExpr { get; }
    public object TextEffectExpr { get; }
    public object BackgroundHatchTypeExpr { get; }
    public object ShadowColorExpr { get; }
    public object ShadowOffsetExpr { get; }
    public virtual object get_BorderColorExpr();
    public virtual object get_BorderColorLeftExpr();
    public virtual object get_BorderColorRightExpr();
    public virtual object get_BorderColorTopExpr();
    public virtual object get_BorderColorBottomExpr();
    public virtual object get_BorderStyleExpr();
    public virtual object get_BorderStyleLeftExpr();
    public virtual object get_BorderStyleRightExpr();
    public virtual object get_BorderStyleTopExpr();
    public virtual object get_BorderStyleBottomExpr();
    public virtual object get_BorderWidthExpr();
    public virtual object get_BorderWidthLeftExpr();
    public virtual object get_BorderWidthRightExpr();
    public virtual object get_BorderWidthTopExpr();
    public virtual object get_BorderWidthBottomExpr();
    public virtual object get_BackgroundColorExpr();
    public virtual object get_BackgroundGradientTypeExpr();
    public virtual object get_BackgroundGradientEndColorExpr();
    public virtual object get_BackgroundImageValueExpr();
    public virtual object get_BackgroundImageMIMETypeExpr();
    public virtual object get_BackgroundRepeatExpr();
    public virtual object get_PositionExpr();
    public virtual object get_TransparentColorExpr();
    public virtual object get_FontStyleExpr();
    public virtual object get_FontFamilyExpr();
    public virtual object get_FontSizeExpr();
    public virtual object get_FontWeightExpr();
    public virtual object get_FormatExpr();
    public virtual object get_TextDecorationExpr();
    public virtual object get_TextAlignExpr();
    public virtual object get_VerticalAlignExpr();
    public virtual object get_ColorExpr();
    public virtual object get_PaddingLeftExpr();
    public virtual object get_PaddingRightExpr();
    public virtual object get_PaddingTopExpr();
    public virtual object get_PaddingBottomExpr();
    public virtual object get_LineHeightExpr();
    public virtual object get_CanSortExpr();
    public virtual object get_DirectionExpr();
    public virtual object get_WritingModeExpr();
    public virtual object get_LanguageExpr();
    public virtual object get_UnicodeBiDiExpr();
    public virtual object get_CalendarExpr();
    public virtual object get_NumeralLanguageExpr();
    public virtual object get_NumeralVariantExpr();
    public virtual object get_TextEffectExpr();
    public virtual object get_BackgroundHatchTypeExpr();
    public virtual object get_ShadowColorExpr();
    public virtual object get_ShadowOffsetExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.SubreportExprHost : ReportItemExprHost {
    [CLSCompliantAttribute("False")]
protected IList`1<ParamExprHost> m_parameterHostsRemotable;
    public object NoRowsExpr { get; }
    internal IList`1<ParamExprHost> ParameterHostsRemotable { get; }
    public virtual object get_NoRowsExpr();
    internal IList`1<ParamExprHost> get_ParameterHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.TablixCellExprHost : CellExprHost {
    public StyleExprHost CellContentsStyleHost;
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.TablixExprHost : DataRegionExprHost`2<TablixMemberExprHost, TablixCellExprHost> {
    [CLSCompliantAttribute("False")]
protected IList`1<TablixCellExprHost> m_cornerCellHostsRemotable;
    public object TopMarginExpr { get; }
    public object BottomMarginExpr { get; }
    public object LeftMarginExpr { get; }
    public object RightMarginExpr { get; }
    internal IList`1<TablixCellExprHost> CornerCellHostsRemotable { get; }
    public virtual object get_TopMarginExpr();
    public virtual object get_BottomMarginExpr();
    public virtual object get_LeftMarginExpr();
    public virtual object get_RightMarginExpr();
    internal IList`1<TablixCellExprHost> get_CornerCellHostsRemotable();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.TablixMemberExprHost : MemberNodeExprHost`1<TablixMemberExprHost> {
    public object VisibilityHiddenExpr { get; }
    public virtual object get_VisibilityHiddenExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.TextBoxExprHost : ReportItemExprHost {
    public static string ValueName;
    [CLSCompliantAttribute("False")]
protected IList`1<ParagraphExprHost> m_paragraphHostsRemotable;
    private ReportItem m_textBox;
    internal IList`1<ParagraphExprHost> ParagraphHostsRemotable { get; }
    public object Value { get; }
    internal ReportItem ReportObjectModelTextBox { get; }
    public object ValueExpr { get; }
    public object ToggleImageInitialStateExpr { get; }
    internal IList`1<ParagraphExprHost> get_ParagraphHostsRemotable();
    internal void SetTextBox(ReportItem textBox);
    public object get_Value();
    internal ReportItem get_ReportObjectModelTextBox();
    public virtual object get_ValueExpr();
    public virtual object get_ToggleImageInitialStateExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.TextRunExprHost : StyleExprHost {
    public ActionInfoExprHost ActionInfoHost;
    private TextRun m_textRun;
    public object Value { get; }
    public object LabelExpr { get; }
    public object ValueExpr { get; }
    public object ToolTipExpr { get; }
    public object MarkupTypeExpr { get; }
    internal void SetTextRun(TextRun textRun);
    public object get_Value();
    public virtual object get_LabelExpr();
    public virtual object get_ValueExpr();
    public virtual object get_ToolTipExpr();
    public virtual object get_MarkupTypeExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.ThermometerExprHost : StyleExprHost {
    public object BulbOffsetExpr { get; }
    public object BulbSizeExpr { get; }
    public object ThermometerStyleExpr { get; }
    public virtual object get_BulbOffsetExpr();
    public virtual object get_BulbSizeExpr();
    public virtual object get_ThermometerStyleExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.TickMarkStyleExprHost : StyleExprHost {
    public TopImageExprHost TickMarkImageHost;
    public object DistanceFromScaleExpr { get; }
    public object PlacementExpr { get; }
    public object EnableGradientExpr { get; }
    public object GradientDensityExpr { get; }
    public object LengthExpr { get; }
    public object WidthExpr { get; }
    public object ShapeExpr { get; }
    public object HiddenExpr { get; }
    public virtual object get_DistanceFromScaleExpr();
    public virtual object get_PlacementExpr();
    public virtual object get_EnableGradientExpr();
    public virtual object get_GradientDensityExpr();
    public virtual object get_LengthExpr();
    public virtual object get_WidthExpr();
    public virtual object get_ShapeExpr();
    public virtual object get_HiddenExpr();
}
public abstract class Microsoft.ReportingServices.RdlExpressions.ExpressionHostObjectModel.TopImageExprHost : BaseGaugeImageExprHost {
    public object HueColorExpr { get; }
    public virtual object get_HueColorExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ActionExprHost : ReportObjectModelProxy {
    protected ParamExprHost[] DrillThroughParameterHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<ParamExprHost> m_drillThroughParameterHostsRemotable;
    public object HyperlinkExpr { get; }
    public object DrillThroughReportNameExpr { get; }
    internal IList`1<ParamExprHost> DrillThroughParameterHostsRemotable { get; }
    public object DrillThroughBookmarkLinkExpr { get; }
    public object BookmarkLinkExpr { get; }
    public object LabelExpr { get; }
    public virtual object get_HyperlinkExpr();
    public virtual object get_DrillThroughReportNameExpr();
    internal IList`1<ParamExprHost> get_DrillThroughParameterHostsRemotable();
    public virtual object get_DrillThroughBookmarkLinkExpr();
    public virtual object get_BookmarkLinkExpr();
    public virtual object get_LabelExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ActionInfoExprHost : StyleExprHost {
    protected ActionExprHost[] ActionItemHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<ActionExprHost> m_actionItemHostsRemotable;
    internal IList`1<ActionExprHost> ActionItemHostsRemotable { get; }
    internal IList`1<ActionExprHost> get_ActionItemHostsRemotable();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ActiveXControlExprHost : ReportItemExprHost {
    protected ParamExprHost[] ParameterHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<ParamExprHost> m_parameterHostsRemotable;
    internal IList`1<ParamExprHost> ParameterHostsRemotable { get; }
    internal IList`1<ParamExprHost> get_ParameterHostsRemotable();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.AggregateParamExprHost : ReportObjectModelProxy {
    public object ValueExpr { get; }
    public virtual object get_ValueExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.AxisExprHost : StyleExprHost {
    public ChartTitleExprHost TitleHost;
    public StyleExprHost MajorGridLinesHost;
    public StyleExprHost MinorGridLinesHost;
    protected DataValueExprHost[] CustomPropertyHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_customPropertyHostsRemotable;
    internal IList`1<DataValueExprHost> CustomPropertyHostsRemotable { get; }
    public object AxisMinExpr { get; }
    public object AxisMaxExpr { get; }
    public object AxisCrossAtExpr { get; }
    public object AxisMajorIntervalExpr { get; }
    public object AxisMinorIntervalExpr { get; }
    internal IList`1<DataValueExprHost> get_CustomPropertyHostsRemotable();
    public virtual object get_AxisMinExpr();
    public virtual object get_AxisMaxExpr();
    public virtual object get_AxisCrossAtExpr();
    public virtual object get_AxisMajorIntervalExpr();
    public virtual object get_AxisMinorIntervalExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.CalcFieldExprHost : ReportObjectModelProxy {
    public object ValueExpr { get; }
    public virtual object get_ValueExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ChartDataPointExprHost : IndexedExprHost {
    public StyleExprHost DataLabelStyleHost;
    public ActionExprHost ActionHost;
    public StyleExprHost StyleHost;
    public StyleExprHost MarkerStyleHost;
    public ActionInfoExprHost ActionInfoHost;
    protected DataValueExprHost[] CustomPropertyHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_customPropertyHostsRemotable;
    public object DataLabelValueExpr { get; }
    internal IList`1<DataValueExprHost> CustomPropertyHostsRemotable { get; }
    public virtual object get_DataLabelValueExpr();
    internal IList`1<DataValueExprHost> get_CustomPropertyHostsRemotable();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ChartDynamicGroupExprHost : DynamicGroupExprHost {
    public object HeadingLabelExpr { get; }
    public virtual object get_HeadingLabelExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ChartExprHost : DataRegionExprHost {
    public MultiChartExprHost MultiChartHost;
    public ChartDynamicGroupExprHost RowGroupingsHost;
    public IndexedExprHost StaticRowLabelsHost;
    public ChartDynamicGroupExprHost ColumnGroupingsHost;
    public IndexedExprHost StaticColumnLabelsHost;
    protected ChartDataPointExprHost[] ChartDataPointHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartDataPointExprHost> m_chartDataPointHostsRemotable;
    public ChartTitleExprHost TitleHost;
    public AxisExprHost CategoryAxisHost;
    public AxisExprHost ValueAxisHost;
    public StyleExprHost LegendHost;
    public StyleExprHost PlotAreaHost;
    internal IList`1<ChartDataPointExprHost> ChartDataPointHostsRemotable { get; }
    internal IList`1<ChartDataPointExprHost> get_ChartDataPointHostsRemotable();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ChartTitleExprHost : StyleExprHost {
    public object CaptionExpr { get; }
    public virtual object get_CaptionExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.CustomCodeProxyBase : object {
    private IReportObjectModelProxyForCustomCode m_reportObjectModel;
    protected IReportObjectModelProxyForCustomCode Report { get; }
    protected CustomCodeProxyBase(IReportObjectModelProxyForCustomCode reportObjectModel);
    protected IReportObjectModelProxyForCustomCode get_Report();
    protected virtual void OnInit();
    internal void CallOnInit();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.CustomReportItemExprHost : DataRegionExprHost {
    protected DataGroupingExprHost[] DataGroupingHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<DataGroupingExprHost> m_dataGroupingHostsRemotable;
    protected DataCellExprHost[] DataCellHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<DataCellExprHost> m_dataCellHostsRemotable;
    internal IList`1<DataGroupingExprHost> DataGroupingHostsRemotable { get; }
    internal IList`1<DataCellExprHost> DataCellHostsRemotable { get; }
    internal IList`1<DataGroupingExprHost> get_DataGroupingHostsRemotable();
    internal IList`1<DataCellExprHost> get_DataCellHostsRemotable();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.DataCellExprHost : ReportObjectModelProxy {
    protected DataValueExprHost[] DataValueHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_dataValueHostsRemotable;
    internal IList`1<DataValueExprHost> DataValueHostsRemotable { get; }
    internal IList`1<DataValueExprHost> get_DataValueHostsRemotable();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.DataGroupingExprHost : ReportObjectModelProxy {
    public GroupingExprHost GroupingHost;
    public SortingExprHost SortingHost;
    protected DataValueExprHost[] CustomPropertyHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_customPropertyHostsRemotable;
    protected DataGroupingExprHost[] DataGroupingHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<DataGroupingExprHost> m_dataGroupingHostsRemotable;
    internal IList`1<DataValueExprHost> CustomPropertyHostsRemotable { get; }
    internal IList`1<DataGroupingExprHost> DataGroupingHostsRemotable { get; }
    internal IList`1<DataValueExprHost> get_CustomPropertyHostsRemotable();
    internal IList`1<DataGroupingExprHost> get_DataGroupingHostsRemotable();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.DataRegionExprHost : ReportItemExprHost {
    protected FilterExprHost[] FilterHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<FilterExprHost> m_filterHostsRemotable;
    public IndexedExprHost UserSortExpressionsHost;
    public object NoRowsExpr { get; }
    internal IList`1<FilterExprHost> FilterHostsRemotable { get; }
    public virtual object get_NoRowsExpr();
    internal IList`1<FilterExprHost> get_FilterHostsRemotable();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.DataSetExprHost : ReportObjectModelProxy {
    protected CalcFieldExprHost[] FieldHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<CalcFieldExprHost> m_fieldHostsRemotable;
    public IndexedExprHost QueryParametersHost;
    protected FilterExprHost[] FilterHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<FilterExprHost> m_filterHostsRemotable;
    public IndexedExprHost UserSortExpressionsHost;
    internal IList`1<CalcFieldExprHost> FieldHostsRemotable { get; }
    public object QueryCommandTextExpr { get; }
    internal IList`1<FilterExprHost> FilterHostsRemotable { get; }
    internal IList`1<CalcFieldExprHost> get_FieldHostsRemotable();
    public virtual object get_QueryCommandTextExpr();
    internal IList`1<FilterExprHost> get_FilterHostsRemotable();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.DataSourceExprHost : ReportObjectModelProxy {
    public object ConnectStringExpr { get; }
    public virtual object get_ConnectStringExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.DataValueExprHost : ReportObjectModelProxy {
    public object DataValueNameExpr { get; }
    public object DataValueValueExpr { get; }
    public virtual object get_DataValueNameExpr();
    public virtual object get_DataValueValueExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.DynamicGroupExprHost : ReportObjectModelProxy {
    public GroupingExprHost GroupingHost;
    public SortingExprHost SortingHost;
    public DynamicGroupExprHost SubGroupHost;
    public object VisibilityHiddenExpr { get; }
    public virtual object get_VisibilityHiddenExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.FilterExprHost : IndexedExprHost {
    public object FilterExpressionExpr { get; }
    public virtual object get_FilterExpressionExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.GroupingExprHost : IndexedExprHost {
    protected FilterExprHost[] FilterHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<FilterExprHost> m_filterHostsRemotable;
    public IndexedExprHost ParentExpressionsHost;
    protected DataValueExprHost[] CustomPropertyHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_customPropertyHostsRemotable;
    public IndexedExprHost UserSortExpressionsHost;
    public object LabelExpr { get; }
    internal IList`1<FilterExprHost> FilterHostsRemotable { get; }
    internal IList`1<DataValueExprHost> CustomPropertyHostsRemotable { get; }
    public virtual object get_LabelExpr();
    internal IList`1<FilterExprHost> get_FilterHostsRemotable();
    internal IList`1<DataValueExprHost> get_CustomPropertyHostsRemotable();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ImageExprHost : ReportItemExprHost {
    public object ValueExpr { get; }
    public object MIMETypeExpr { get; }
    public virtual object get_ValueExpr();
    public virtual object get_MIMETypeExpr();
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.IndexedExprHost : ReportObjectModelProxy {
    public object Item { get; }
    public virtual object get_Item(int index);
}
public interface Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.IReportObjectModelProxyForCustomCode {
    public Parameters Parameters { get; }
    public Globals Globals { get; }
    public User User { get; }
    public abstract virtual Parameters get_Parameters();
    public abstract virtual Globals get_Globals();
    public abstract virtual User get_User();
}
public interface Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.IVisibilityHiddenExprHost {
    public object VisibilityHiddenExpr { get; }
    public abstract virtual object get_VisibilityHiddenExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ListExprHost : DataRegionExprHost {
    public GroupingExprHost GroupingHost;
    public SortingExprHost SortingHost;
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.MatrixDynamicGroupExprHost : DynamicGroupExprHost {
    public StyleExprHost SubtotalHost;
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.MatrixExprHost : DataRegionExprHost {
    public MatrixDynamicGroupExprHost RowGroupingsHost;
    public MatrixDynamicGroupExprHost ColumnGroupingsHost;
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.MultiChartExprHost : ReportObjectModelProxy {
    public GroupingExprHost GroupingHost;
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.OWCChartExprHost : DataRegionExprHost {
    public IndexedExprHost OWCChartColumnHosts;
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ParamExprHost : ReportObjectModelProxy {
    public object ValueExpr { get; }
    public object OmitExpr { get; }
    public virtual object get_ValueExpr();
    public virtual object get_OmitExpr();
}
[DefaultMemberAttribute("Item")]
[CLSCompliantAttribute("False")]
public class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.RemoteArrayWrapper`1 : MarshalByRefObject {
    private T[] m_array;
    public T Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public RemoteArrayWrapper`1(T[] array);
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(T item);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ReportExprHost : ReportItemExprHost {
    protected CustomCodeProxyBase m_codeProxyBase;
    protected AggregateParamExprHost[] AggregateParamHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<AggregateParamExprHost> m_aggregateParamHostsRemotable;
    protected ReportParamExprHost[] ReportParameterHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<ReportParamExprHost> m_reportParameterHostsRemotable;
    protected DataSourceExprHost[] DataSourceHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<DataSourceExprHost> m_dataSourceHostsRemotable;
    protected DataSetExprHost[] DataSetHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<DataSetExprHost> m_dataSetHostsRemotable;
    protected StyleExprHost[] PageSectionHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<StyleExprHost> m_pageSectionHostsRemotable;
    protected ReportItemExprHost[] LineHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<ReportItemExprHost> m_lineHostsRemotable;
    protected ReportItemExprHost[] RectangleHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<ReportItemExprHost> m_rectangleHostsRemotable;
    protected TextBoxExprHost[] TextBoxHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<TextBoxExprHost> m_textBoxHostsRemotable;
    protected ImageExprHost[] ImageHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<ImageExprHost> m_imageHostsRemotable;
    protected SubreportExprHost[] SubreportHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<SubreportExprHost> m_subreportHostsRemotable;
    protected ActiveXControlExprHost[] ActiveXControlHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<ActiveXControlExprHost> m_activeXControlHostsRemotable;
    protected ListExprHost[] ListHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<ListExprHost> m_listHostsRemotable;
    protected MatrixExprHost[] MatrixHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<MatrixExprHost> m_matrixHostsRemotable;
    protected ChartExprHost[] ChartHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<ChartExprHost> m_chartHostsRemotable;
    protected TableExprHost[] TableHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<TableExprHost> m_tableHostsRemotable;
    protected OWCChartExprHost[] OWCChartHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<OWCChartExprHost> m_OWCChartHostsRemotable;
    [CLSCompliantAttribute("False")]
protected IList`1<CustomReportItemExprHost> m_customReportItemHostsRemotable;
    public object ReportLanguageExpr { get; }
    internal IList`1<AggregateParamExprHost> AggregateParamHostsRemotable { get; }
    internal IList`1<ReportParamExprHost> ReportParameterHostsRemotable { get; }
    internal IList`1<DataSourceExprHost> DataSourceHostsRemotable { get; }
    internal IList`1<DataSetExprHost> DataSetHostsRemotable { get; }
    internal IList`1<StyleExprHost> PageSectionHostsRemotable { get; }
    internal IList`1<ReportItemExprHost> LineHostsRemotable { get; }
    internal IList`1<ReportItemExprHost> RectangleHostsRemotable { get; }
    internal IList`1<TextBoxExprHost> TextBoxHostsRemotable { get; }
    internal IList`1<ImageExprHost> ImageHostsRemotable { get; }
    internal IList`1<SubreportExprHost> SubreportHostsRemotable { get; }
    internal IList`1<ActiveXControlExprHost> ActiveXControlHostsRemotable { get; }
    internal IList`1<ListExprHost> ListHostsRemotable { get; }
    internal IList`1<MatrixExprHost> MatrixHostsRemotable { get; }
    internal IList`1<ChartExprHost> ChartHostsRemotable { get; }
    internal IList`1<TableExprHost> TableHostsRemotable { get; }
    internal IList`1<OWCChartExprHost> OWCChartHostsRemotable { get; }
    internal IList`1<CustomReportItemExprHost> CustomReportItemHostsRemotable { get; }
    protected ReportExprHost(object reportObjectModel);
    internal void CustomCodeOnInit();
    public virtual object get_ReportLanguageExpr();
    internal IList`1<AggregateParamExprHost> get_AggregateParamHostsRemotable();
    internal IList`1<ReportParamExprHost> get_ReportParameterHostsRemotable();
    internal IList`1<DataSourceExprHost> get_DataSourceHostsRemotable();
    internal IList`1<DataSetExprHost> get_DataSetHostsRemotable();
    internal IList`1<StyleExprHost> get_PageSectionHostsRemotable();
    internal IList`1<ReportItemExprHost> get_LineHostsRemotable();
    internal IList`1<ReportItemExprHost> get_RectangleHostsRemotable();
    internal IList`1<TextBoxExprHost> get_TextBoxHostsRemotable();
    internal IList`1<ImageExprHost> get_ImageHostsRemotable();
    internal IList`1<SubreportExprHost> get_SubreportHostsRemotable();
    internal IList`1<ActiveXControlExprHost> get_ActiveXControlHostsRemotable();
    internal IList`1<ListExprHost> get_ListHostsRemotable();
    internal IList`1<MatrixExprHost> get_MatrixHostsRemotable();
    internal IList`1<ChartExprHost> get_ChartHostsRemotable();
    internal IList`1<TableExprHost> get_TableHostsRemotable();
    internal IList`1<OWCChartExprHost> get_OWCChartHostsRemotable();
    internal IList`1<CustomReportItemExprHost> get_CustomReportItemHostsRemotable();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ReportItemExprHost : StyleExprHost {
    public ActionExprHost ActionHost;
    public ActionInfoExprHost ActionInfoHost;
    protected DataValueExprHost[] CustomPropertyHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<DataValueExprHost> m_customPropertyHostsRemotable;
    internal IList`1<DataValueExprHost> CustomPropertyHostsRemotable { get; }
    public object LabelExpr { get; }
    public object BookmarkExpr { get; }
    public object ToolTipExpr { get; }
    public object VisibilityHiddenExpr { get; }
    internal IList`1<DataValueExprHost> get_CustomPropertyHostsRemotable();
    public virtual object get_LabelExpr();
    public virtual object get_BookmarkExpr();
    public virtual object get_ToolTipExpr();
    public virtual object get_VisibilityHiddenExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ReportObjectModelProxy : MarshalByRefObject {
    private ObjectModel m_reportObjectModel;
    protected Fields Fields { get; }
    protected Parameters Parameters { get; }
    protected Globals Globals { get; }
    protected User User { get; }
    protected ReportItems ReportItems { get; }
    protected Aggregates Aggregates { get; }
    protected DataSets DataSets { get; }
    protected DataSources DataSources { get; }
    private Parameters Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.IReportObjectModelProxyForCustomCode.Parameters { get; }
    private Globals Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.IReportObjectModelProxyForCustomCode.Globals { get; }
    private User Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.IReportObjectModelProxyForCustomCode.User { get; }
    internal void SetReportObjectModel(ObjectModel reportObjectModel);
    protected Fields get_Fields();
    protected Parameters get_Parameters();
    protected Globals get_Globals();
    protected User get_User();
    protected ReportItems get_ReportItems();
    protected Aggregates get_Aggregates();
    protected DataSets get_DataSets();
    protected DataSources get_DataSources();
    protected bool InScope(string scope);
    protected int Level();
    protected int Level(string scope);
    private sealed virtual override Parameters Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.IReportObjectModelProxyForCustomCode.get_Parameters();
    private sealed virtual override Globals Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.IReportObjectModelProxyForCustomCode.get_Globals();
    private sealed virtual override User Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.IReportObjectModelProxyForCustomCode.get_User();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.ReportParamExprHost : IndexedExprHost {
    public IndexedExprHost ValidValuesHost;
    public IndexedExprHost ValidValueLabelsHost;
    public object ValidationExpressionExpr { get; }
    public virtual object get_ValidationExpressionExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.SortingExprHost : IndexedExprHost {
    public IndexedExprHost SortDirectionHosts;
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.StyleExprHost : ReportObjectModelProxy {
    public object BorderColorExpr { get; }
    public object BorderColorLeftExpr { get; }
    public object BorderColorRightExpr { get; }
    public object BorderColorTopExpr { get; }
    public object BorderColorBottomExpr { get; }
    public object BorderStyleExpr { get; }
    public object BorderStyleLeftExpr { get; }
    public object BorderStyleRightExpr { get; }
    public object BorderStyleTopExpr { get; }
    public object BorderStyleBottomExpr { get; }
    public object BorderWidthExpr { get; }
    public object BorderWidthLeftExpr { get; }
    public object BorderWidthRightExpr { get; }
    public object BorderWidthTopExpr { get; }
    public object BorderWidthBottomExpr { get; }
    public object BackgroundColorExpr { get; }
    public object BackgroundGradientTypeExpr { get; }
    public object BackgroundGradientEndColorExpr { get; }
    public object BackgroundImageValueExpr { get; }
    public object BackgroundImageMIMETypeExpr { get; }
    public object BackgroundRepeatExpr { get; }
    public object FontStyleExpr { get; }
    public object FontFamilyExpr { get; }
    public object FontSizeExpr { get; }
    public object FontWeightExpr { get; }
    public object FormatExpr { get; }
    public object TextDecorationExpr { get; }
    public object TextAlignExpr { get; }
    public object VerticalAlignExpr { get; }
    public object ColorExpr { get; }
    public object PaddingLeftExpr { get; }
    public object PaddingRightExpr { get; }
    public object PaddingTopExpr { get; }
    public object PaddingBottomExpr { get; }
    public object LineHeightExpr { get; }
    public object CanSortExpr { get; }
    public object DirectionExpr { get; }
    public object WritingModeExpr { get; }
    public object LanguageExpr { get; }
    public object UnicodeBiDiExpr { get; }
    public object CalendarExpr { get; }
    public object NumeralLanguageExpr { get; }
    public object NumeralVariantExpr { get; }
    public virtual object get_BorderColorExpr();
    public virtual object get_BorderColorLeftExpr();
    public virtual object get_BorderColorRightExpr();
    public virtual object get_BorderColorTopExpr();
    public virtual object get_BorderColorBottomExpr();
    public virtual object get_BorderStyleExpr();
    public virtual object get_BorderStyleLeftExpr();
    public virtual object get_BorderStyleRightExpr();
    public virtual object get_BorderStyleTopExpr();
    public virtual object get_BorderStyleBottomExpr();
    public virtual object get_BorderWidthExpr();
    public virtual object get_BorderWidthLeftExpr();
    public virtual object get_BorderWidthRightExpr();
    public virtual object get_BorderWidthTopExpr();
    public virtual object get_BorderWidthBottomExpr();
    public virtual object get_BackgroundColorExpr();
    public virtual object get_BackgroundGradientTypeExpr();
    public virtual object get_BackgroundGradientEndColorExpr();
    public virtual object get_BackgroundImageValueExpr();
    public virtual object get_BackgroundImageMIMETypeExpr();
    public virtual object get_BackgroundRepeatExpr();
    public virtual object get_FontStyleExpr();
    public virtual object get_FontFamilyExpr();
    public virtual object get_FontSizeExpr();
    public virtual object get_FontWeightExpr();
    public virtual object get_FormatExpr();
    public virtual object get_TextDecorationExpr();
    public virtual object get_TextAlignExpr();
    public virtual object get_VerticalAlignExpr();
    public virtual object get_ColorExpr();
    public virtual object get_PaddingLeftExpr();
    public virtual object get_PaddingRightExpr();
    public virtual object get_PaddingTopExpr();
    public virtual object get_PaddingBottomExpr();
    public virtual object get_LineHeightExpr();
    public virtual object get_CanSortExpr();
    public virtual object get_DirectionExpr();
    public virtual object get_WritingModeExpr();
    public virtual object get_LanguageExpr();
    public virtual object get_UnicodeBiDiExpr();
    public virtual object get_CalendarExpr();
    public virtual object get_NumeralLanguageExpr();
    public virtual object get_NumeralVariantExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.SubreportExprHost : ReportItemExprHost {
    protected ParamExprHost[] ParameterHosts;
    [CLSCompliantAttribute("False")]
protected IList`1<ParamExprHost> m_parameterHostsRemotable;
    public object NoRowsExpr { get; }
    internal IList`1<ParamExprHost> ParameterHostsRemotable { get; }
    public virtual object get_NoRowsExpr();
    internal IList`1<ParamExprHost> get_ParameterHostsRemotable();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.TableExprHost : DataRegionExprHost {
    public TableGroupExprHost TableGroupsHost;
    public IndexedExprHost TableRowVisibilityHiddenExpressions;
    public IndexedExprHost TableColumnVisibilityHiddenExpressions;
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.TableGroupExprHost : DynamicGroupExprHost {
    public IndexedExprHost TableRowVisibilityHiddenExpressions;
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ExprHostObjectModel.TextBoxExprHost : ReportItemExprHost {
    public static string ValueName;
    private ReportItem m_textBox;
    public object Value { get; }
    internal ReportItem ReportObjectModelTextBox { get; }
    public object ValueExpr { get; }
    public object ToggleImageInitialStateExpr { get; }
    internal void SetTextBox(ReportItem textBox);
    public object get_Value();
    internal ReportItem get_ReportObjectModelTextBox();
    public virtual object get_ValueExpr();
    public virtual object get_ToggleImageInitialStateExpr();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.OnDemandReportObjectModel.Lookup : MarshalByRefObject {
    public object Value { get; }
    public Object[] Values { get; }
    public abstract virtual object get_Value();
    public abstract virtual Object[] get_Values();
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.OnDemandReportObjectModel.Lookups : MarshalByRefObject {
    public Lookup Item { get; }
    public abstract virtual Lookup get_Item(string key);
}
internal abstract class Microsoft.ReportingServices.ReportProcessing.OnDemandReportObjectModel.OnDemandObjectModel : ObjectModel {
    public Variables Variables { get; }
    public Lookups Lookups { get; }
    public abstract virtual Variables get_Variables();
    public abstract virtual Lookups get_Lookups();
    public abstract virtual object MinValue(Object[] arguments);
    public abstract virtual object MaxValue(Object[] arguments);
}
public abstract class Microsoft.ReportingServices.ReportProcessing.OnDemandReportObjectModel.Paragraph : MarshalByRefObject {
    public TextRuns TextRuns { get; }
    public abstract virtual TextRuns get_TextRuns();
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.OnDemandReportObjectModel.Paragraphs : MarshalByRefObject {
    public Paragraph Item { get; }
    public abstract virtual Paragraph get_Item(int index);
}
public abstract class Microsoft.ReportingServices.ReportProcessing.OnDemandReportObjectModel.TextRun : MarshalByRefObject {
    public object Value { get; }
    public abstract virtual object get_Value();
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.OnDemandReportObjectModel.TextRuns : MarshalByRefObject {
    public TextRun Item { get; }
    public abstract virtual TextRun get_Item(int index);
}
public abstract class Microsoft.ReportingServices.ReportProcessing.OnDemandReportObjectModel.Variable : MarshalByRefObject {
    public object Value { get; public set; }
    public bool Writable { get; }
    public abstract virtual object get_Value();
    public abstract virtual void set_Value(object value);
    public abstract virtual bool get_Writable();
    public abstract virtual bool SetValue(object value);
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.OnDemandReportObjectModel.Variables : MarshalByRefObject {
    public Variable Item { get; }
    public abstract virtual Variable get_Item(string key);
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.Aggregates : MarshalByRefObject {
    public object Item { get; }
    public abstract virtual object get_Item(string key);
}
internal abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.CalculatedFieldWrapper : MarshalByRefObject {
    public object Value { get; }
    public abstract virtual object get_Value();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.DataSet : MarshalByRefObject {
    public string CommandText { get; }
    public string RewrittenCommandText { get; }
    public DateTime ExecutionTime { get; }
    public abstract virtual string get_CommandText();
    public abstract virtual string get_RewrittenCommandText();
    public abstract virtual DateTime get_ExecutionTime();
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.DataSets : MarshalByRefObject {
    public DataSet Item { get; }
    public abstract virtual DataSet get_Item(string key);
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.DataSource : MarshalByRefObject {
    public string DataSourceReference { get; }
    public string Type { get; }
    public abstract virtual string get_DataSourceReference();
    public abstract virtual string get_Type();
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.DataSources : MarshalByRefObject {
    public DataSource Item { get; }
    public abstract virtual DataSource get_Item(string key);
}
[DefaultMemberAttribute("Properties")]
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.Field : MarshalByRefObject {
    public object Value { get; }
    public bool IsMissing { get; }
    public string UniqueName { get; }
    public string BackgroundColor { get; }
    public string Color { get; }
    public string FontFamily { get; }
    public string FontSize { get; }
    public string FontWeight { get; }
    public string FontStyle { get; }
    public string TextDecoration { get; }
    public string FormattedValue { get; }
    public object Key { get; }
    public int LevelNumber { get; }
    public string ParentUniqueName { get; }
    public object Properties { get; }
    public abstract virtual object get_Value();
    public abstract virtual bool get_IsMissing();
    public abstract virtual string get_UniqueName();
    public abstract virtual string get_BackgroundColor();
    public abstract virtual string get_Color();
    public abstract virtual string get_FontFamily();
    public abstract virtual string get_FontSize();
    public abstract virtual string get_FontWeight();
    public abstract virtual string get_FontStyle();
    public abstract virtual string get_TextDecoration();
    public abstract virtual string get_FormattedValue();
    public abstract virtual object get_Key();
    public abstract virtual int get_LevelNumber();
    public abstract virtual string get_ParentUniqueName();
    public abstract virtual object get_Properties(string key);
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.Fields : MarshalByRefObject {
    public Field Item { get; }
    public abstract virtual Field get_Item(string key);
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.Globals : MarshalByRefObject {
    public object Item { get; }
    public string ReportName { get; }
    public int PageNumber { get; }
    public int TotalPages { get; }
    public int OverallPageNumber { get; }
    public int OverallTotalPages { get; }
    public DateTime ExecutionTime { get; }
    public string ReportServerUrl { get; }
    public string ReportFolder { get; }
    public string PageName { get; }
    public RenderFormat RenderFormat { get; }
    public abstract virtual object get_Item(string key);
    public abstract virtual string get_ReportName();
    public abstract virtual int get_PageNumber();
    public abstract virtual int get_TotalPages();
    public abstract virtual int get_OverallPageNumber();
    public abstract virtual int get_OverallTotalPages();
    public abstract virtual DateTime get_ExecutionTime();
    public abstract virtual string get_ReportServerUrl();
    public abstract virtual string get_ReportFolder();
    public abstract virtual string get_PageName();
    public abstract virtual RenderFormat get_RenderFormat();
}
internal abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.ObjectModel : MarshalByRefObject {
    public Fields Fields { get; }
    public Parameters Parameters { get; }
    public Globals Globals { get; }
    public User User { get; }
    public ReportItems ReportItems { get; }
    public Aggregates Aggregates { get; }
    public DataSets DataSets { get; }
    public DataSources DataSources { get; }
    public abstract virtual Fields get_Fields();
    public abstract virtual Parameters get_Parameters();
    public abstract virtual Globals get_Globals();
    public abstract virtual User get_User();
    public abstract virtual ReportItems get_ReportItems();
    public abstract virtual Aggregates get_Aggregates();
    public abstract virtual DataSets get_DataSets();
    public abstract virtual DataSources get_DataSources();
    public abstract virtual bool InScope(string scope);
    public abstract virtual int RecursiveLevel(string scope);
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.Parameter : MarshalByRefObject {
    public object Value { get; }
    public object Label { get; }
    public int Count { get; }
    public bool IsMultiValue { get; }
    public abstract virtual object get_Value();
    public abstract virtual object get_Label();
    public abstract virtual int get_Count();
    public abstract virtual bool get_IsMultiValue();
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.Parameters : MarshalByRefObject {
    public Parameter Item { get; }
    public abstract virtual Parameter get_Item(string key);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.ReadOnlyNameValueCollection : MarshalByRefObject {
    private NameValueCollection m_originalCollection;
    public String[] AllKeys { get; }
    public String[] AllValues { get; }
    public string Item { get; }
    public string Item { get; }
    public int Count { get; }
    public KeysCollection Keys { get; }
    internal ReadOnlyNameValueCollection(NameValueCollection originalCollection);
    public String[] get_AllKeys();
    public String[] get_AllValues();
    public string get_Item(int index);
    public string get_Item(string name);
    public int get_Count();
    public KeysCollection get_Keys();
    public void CopyTo(Array dest, int index);
    public string Get(int index);
    public string Get(string name);
    public string GetKey(int index);
    public String[] GetValues(int index);
    public String[] GetValues(string name);
    public bool HasKeys();
    public IEnumerator GetEnumerator();
}
public class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.RenderFormat : MarshalByRefObject {
    private RenderFormatImplBase m_renderFormatImpl;
    public string Name { get; }
    public bool IsInteractive { get; }
    public ReadOnlyNameValueCollection DeviceInfo { get; }
    internal RenderFormat(RenderFormatImplBase renderFormatImpl);
    public string get_Name();
    public bool get_IsInteractive();
    public ReadOnlyNameValueCollection get_DeviceInfo();
}
internal abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.RenderFormatImplBase : MarshalByRefObject {
    internal string Name { get; }
    internal bool IsInteractive { get; }
    internal ReadOnlyNameValueCollection DeviceInfo { get; }
    internal abstract virtual string get_Name();
    internal abstract virtual bool get_IsInteractive();
    internal abstract virtual ReadOnlyNameValueCollection get_DeviceInfo();
}
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.ReportItem : MarshalByRefObject {
    public object Value { get; }
    public abstract virtual object get_Value();
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.ReportItems : MarshalByRefObject {
    public ReportItem Item { get; }
    public abstract virtual ReportItem get_Item(string key);
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.ReportingServices.ReportProcessing.ReportObjectModel.User : MarshalByRefObject {
    public object Item { get; }
    public string UserID { get; }
    public string Language { get; }
    public abstract virtual object get_Item(string key);
    public abstract virtual string get_UserID();
    public abstract virtual string get_Language();
}
