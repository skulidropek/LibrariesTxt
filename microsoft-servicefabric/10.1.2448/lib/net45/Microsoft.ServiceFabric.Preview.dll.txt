public class Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription : object {
    [CompilerGeneratedAttribute]
private string <DeploymentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ComposeFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainerRegistryUserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainerRegistryPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRegistryPasswordEncrypted>k__BackingField;
    public string DeploymentName { get; private set; }
    public string ComposeFilePath { get; private set; }
    public string ContainerRegistryUserName { get; public set; }
    public string ContainerRegistryPassword { get; public set; }
    public bool IsRegistryPasswordEncrypted { get; public set; }
    public ComposeDeploymentDescription(string deploymentName, string composeFilePath);
    [CompilerGeneratedAttribute]
public string get_DeploymentName();
    [CompilerGeneratedAttribute]
private void set_DeploymentName(string value);
    [CompilerGeneratedAttribute]
public string get_ComposeFilePath();
    [CompilerGeneratedAttribute]
private void set_ComposeFilePath(string value);
    [CompilerGeneratedAttribute]
public string get_ContainerRegistryUserName();
    [CompilerGeneratedAttribute]
public void set_ContainerRegistryUserName(string value);
    [CompilerGeneratedAttribute]
public string get_ContainerRegistryPassword();
    [CompilerGeneratedAttribute]
public void set_ContainerRegistryPassword(string value);
    [CompilerGeneratedAttribute]
public bool get_IsRegistryPasswordEncrypted();
    [CompilerGeneratedAttribute]
public void set_IsRegistryPasswordEncrypted(bool value);
    internal ComposeDeploymentDescriptionWrapper ToWrapper();
}
public class Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentRollbackDescription : object {
    [CompilerGeneratedAttribute]
private string <DeploymentName>k__BackingField;
    public string DeploymentName { get; private set; }
    public ComposeDeploymentRollbackDescription(string deploymentName);
    [CompilerGeneratedAttribute]
public string get_DeploymentName();
    [CompilerGeneratedAttribute]
private void set_DeploymentName(string value);
    internal ComposeDeploymentRollbackDescriptionWrapper ToWrapper();
}
public class Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription : object {
    [CompilerGeneratedAttribute]
private string <DeploymentNameFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MaxResults>k__BackingField;
    public string DeploymentNameFilter { get; public set; }
    public string ContinuationToken { get; public set; }
    public long MaxResults { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DeploymentNameFilter();
    [CompilerGeneratedAttribute]
public void set_DeploymentNameFilter(string value);
    [CompilerGeneratedAttribute]
public string get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(string value);
    [CompilerGeneratedAttribute]
public long get_MaxResults();
    [CompilerGeneratedAttribute]
public void set_MaxResults(long value);
    internal ComposeDeploymentStatusQueryDescriptionWrapper ToWrapper();
}
public class Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription : object {
    [CompilerGeneratedAttribute]
private string <DeploymentName>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ComposeFilePaths>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainerRegistryUserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainerRegistryPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRegistryPasswordEncrypted>k__BackingField;
    [CompilerGeneratedAttribute]
private UpgradePolicyDescription <UpgradePolicyDescription>k__BackingField;
    public string DeploymentName { get; public set; }
    public String[] ComposeFilePaths { get; public set; }
    public string ContainerRegistryUserName { get; public set; }
    public string ContainerRegistryPassword { get; public set; }
    public bool IsRegistryPasswordEncrypted { get; public set; }
    public UpgradePolicyDescription UpgradePolicyDescription { get; public set; }
    public ComposeDeploymentUpgradeDescription(string deploymentName, String[] composeFilePaths);
    [CompilerGeneratedAttribute]
public string get_DeploymentName();
    [CompilerGeneratedAttribute]
public void set_DeploymentName(string value);
    [CompilerGeneratedAttribute]
public String[] get_ComposeFilePaths();
    [CompilerGeneratedAttribute]
public void set_ComposeFilePaths(String[] value);
    [CompilerGeneratedAttribute]
public string get_ContainerRegistryUserName();
    [CompilerGeneratedAttribute]
public void set_ContainerRegistryUserName(string value);
    [CompilerGeneratedAttribute]
public string get_ContainerRegistryPassword();
    [CompilerGeneratedAttribute]
public void set_ContainerRegistryPassword(string value);
    [CompilerGeneratedAttribute]
public bool get_IsRegistryPasswordEncrypted();
    [CompilerGeneratedAttribute]
public void set_IsRegistryPasswordEncrypted(bool value);
    [CompilerGeneratedAttribute]
public UpgradePolicyDescription get_UpgradePolicyDescription();
    [CompilerGeneratedAttribute]
public void set_UpgradePolicyDescription(UpgradePolicyDescription value);
    internal ComposeDeploymentUpgradeDescriptionWrapper ToWrapper();
}
public class Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription : object {
    [CompilerGeneratedAttribute]
private string <DeploymentName>k__BackingField;
    public string DeploymentName { get; public set; }
    public DeleteComposeDeploymentDescription(string deploymentName);
    [CompilerGeneratedAttribute]
public string get_DeploymentName();
    [CompilerGeneratedAttribute]
public void set_DeploymentName(string value);
    internal DeleteComposeDeploymentDescriptionWrapper ToWrapper();
}
[ExtensionAttribute]
public static class Microsoft.ServiceFabric.Preview.Client.Extensions : object {
    [ExtensionAttribute]
public static Task CreateComposeDeploymentAsync(ComposeDeploymentClient client, ComposeDeploymentDescription composeDeploymentDescription);
    [ExtensionAttribute]
public static Task CreateComposeDeploymentAsync(ComposeDeploymentClient client, ComposeDeploymentDescription composeDeploymentDescription, TimeSpan timeout);
    [ExtensionAttribute]
public static Task CreateComposeDeploymentAsync(ComposeDeploymentClient client, ComposeDeploymentDescription composeDeploymentDescription, TimeSpan timeout, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<ComposeDeploymentStatusList> GetComposeDeploymentStatusPagedListAsync(QueryClient client, ComposeDeploymentStatusQueryDescription composeDeploymentQueryDescription);
    [ExtensionAttribute]
public static Task`1<ComposeDeploymentStatusList> GetComposeDeploymentStatusPagedListAsync(QueryClient client, ComposeDeploymentStatusQueryDescription composeDeploymentQueryDescription, TimeSpan timeout);
    [ExtensionAttribute]
public static Task`1<ComposeDeploymentStatusList> GetComposeDeploymentStatusPagedListAsync(QueryClient client, ComposeDeploymentStatusQueryDescription composeDeploymentQueryDescription, TimeSpan timeout, CancellationToken cancellationToken);
    private static ComposeDeploymentStatusList ComposeDeploymentStatusListConverter(ComposeDeploymentStatusListWrapper wrapper);
    [ExtensionAttribute]
public static Task DeleteComposeDeploymentAsync(ComposeDeploymentClient client, DeleteComposeDeploymentDescription description);
    [ExtensionAttribute]
public static Task DeleteComposeDeploymentAsync(ComposeDeploymentClient client, DeleteComposeDeploymentDescription description, TimeSpan timeout);
    [ExtensionAttribute]
public static Task DeleteComposeDeploymentAsync(ComposeDeploymentClient client, DeleteComposeDeploymentDescription description, TimeSpan timeout, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task UpgradeComposeDeploymentAsync(ComposeDeploymentClient client, ComposeDeploymentUpgradeDescription upgradeDescription);
    [ExtensionAttribute]
public static Task UpgradeComposeDeploymentAsync(ComposeDeploymentClient client, ComposeDeploymentUpgradeDescription upgradeDescription, TimeSpan timeout, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<ComposeDeploymentUpgradeProgress> GetComposeDeploymentUpgradeProgressAsync(ComposeDeploymentClient client, string deploymentName);
    [ExtensionAttribute]
internal static Task`1<ComposeDeploymentUpgradeProgress> GetComposeDeploymentUpgradeProgressAsync(ComposeDeploymentClient client, string deploymentName, TimeSpan timeout, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task RollbackComposeDeploymentUpgradeAsync(ComposeDeploymentClient client, ComposeDeploymentRollbackDescription description);
    [ExtensionAttribute]
public static Task RollbackComposeDeploymentUpgradeAsync(ComposeDeploymentClient client, ComposeDeploymentRollbackDescription description, TimeSpan timeout);
    [ExtensionAttribute]
public static Task RollbackComposeDeploymentUpgradeAsync(ComposeDeploymentClient client, ComposeDeploymentRollbackDescription description, TimeSpan timeout, CancellationToken cancellationToken);
}
public enum Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus : Enum {
    public int value__;
    public static ComposeDeploymentStatus Invalid;
    public static ComposeDeploymentStatus Provisioning;
    public static ComposeDeploymentStatus Creating;
    public static ComposeDeploymentStatus Ready;
    public static ComposeDeploymentStatus Unprovisioning;
    public static ComposeDeploymentStatus Deleting;
    public static ComposeDeploymentStatus Failed;
    public static ComposeDeploymentStatus Upgrading;
}
public class Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusList : PagedList`1<ComposeDeploymentStatusResultItem> {
    internal ComposeDeploymentStatusList(IList`1<ComposeDeploymentStatusResultItem> list);
}
public class Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem : object {
    [CompilerGeneratedAttribute]
private string <DeploymentName>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ApplicationName>k__BackingField;
    [CompilerGeneratedAttribute]
private ComposeDeploymentStatus <ComposeDeploymentStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusDetails>k__BackingField;
    public string DeploymentName { get; internal set; }
    public Uri ApplicationName { get; internal set; }
    public ComposeDeploymentStatus ComposeDeploymentStatus { get; internal set; }
    [JsonCustomizationAttribute]
public string StatusDetails { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_DeploymentName();
    [CompilerGeneratedAttribute]
internal void set_DeploymentName(string value);
    [CompilerGeneratedAttribute]
public Uri get_ApplicationName();
    [CompilerGeneratedAttribute]
internal void set_ApplicationName(Uri value);
    [CompilerGeneratedAttribute]
public ComposeDeploymentStatus get_ComposeDeploymentStatus();
    [CompilerGeneratedAttribute]
internal void set_ComposeDeploymentStatus(ComposeDeploymentStatus value);
    [CompilerGeneratedAttribute]
public string get_StatusDetails();
    [CompilerGeneratedAttribute]
internal void set_StatusDetails(string value);
    internal static ComposeDeploymentStatusResultItem CreateFromNative(FABRIC_COMPOSE_DEPLOYMENT_STATUS_QUERY_RESULT_ITEM nativeResultItem);
}
