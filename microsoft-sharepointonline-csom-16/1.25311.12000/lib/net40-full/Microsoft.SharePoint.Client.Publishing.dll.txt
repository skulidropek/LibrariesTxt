[ScriptTypeAttribute("SP.Publishing.EmailPublishingStatus")]
public class Microsoft.SharePoint.Client.EmailPublishingStatus : ClientValueObject {
    private string m_destinationURL;
    private int m_errorCode;
    private PublishingStatus m_status;
    [RemoteAttribute]
public string DestinationURL { get; public set; }
    [RemoteAttribute]
public int ErrorCode { get; public set; }
    [RemoteAttribute]
public PublishingStatus Status { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DestinationURL();
    public void set_DestinationURL(string value);
    public int get_ErrorCode();
    public void set_ErrorCode(int value);
    public PublishingStatus get_Status();
    public void set_Status(PublishingStatus value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.PrePublishValidationsErrorCodesForEmail")]
public class Microsoft.SharePoint.Client.PrePublishValidationsErrorCodesForEmail : ClientValueObject {
    private string m_emailAddress;
    private IList`1<int> m_errorCodes;
    [RemoteAttribute]
public string EmailAddress { get; public set; }
    [RemoteAttribute]
public IList`1<int> ErrorCodes { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    public IList`1<int> get_ErrorCodes();
    public void set_ErrorCodes(IList`1<int> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.PrePublishValidationsErrorCodesForSharePointSite")]
public class Microsoft.SharePoint.Client.PrePublishValidationsErrorCodesForSharePointSite : ClientValueObject {
    private IList`1<int> m_errorCodes;
    private string m_siteId;
    [RemoteAttribute]
public IList`1<int> ErrorCodes { get; public set; }
    [RemoteAttribute]
public string SiteId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<int> get_ErrorCodes();
    public void set_ErrorCodes(IList`1<int> value);
    public string get_SiteId();
    public void set_SiteId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.PrePublishValidationsErrorCodesForTeams")]
public class Microsoft.SharePoint.Client.PrePublishValidationsErrorCodesForTeams : ClientValueObject {
    private string m_audienceId;
    private IList`1<int> m_errorCodes;
    private int m_numberOfImagesInPayload;
    [RemoteAttribute]
public string AudienceId { get; public set; }
    [RemoteAttribute]
public IList`1<int> ErrorCodes { get; public set; }
    [RemoteAttribute]
public int NumberOfImagesInPayload { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AudienceId();
    public void set_AudienceId(string value);
    public IList`1<int> get_ErrorCodes();
    public void set_ErrorCodes(IList`1<int> value);
    public int get_NumberOfImagesInPayload();
    public void set_NumberOfImagesInPayload(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.PrePublishValidationsErrorCodesForVivaEngage")]
public class Microsoft.SharePoint.Client.PrePublishValidationsErrorCodesForVivaEngage : ClientValueObject {
    private string m_destinationName;
    private VivaEngageDestinationType m_destinationType;
    private IList`1<int> m_errorCodes;
    [RemoteAttribute]
public string DestinationName { get; public set; }
    [RemoteAttribute]
public VivaEngageDestinationType DestinationType { get; public set; }
    [RemoteAttribute]
public IList`1<int> ErrorCodes { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DestinationName();
    public void set_DestinationName(string value);
    public VivaEngageDestinationType get_DestinationType();
    public void set_DestinationType(VivaEngageDestinationType value);
    public IList`1<int> get_ErrorCodes();
    public void set_ErrorCodes(IList`1<int> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.PrePublishValidationsResponse")]
public class Microsoft.SharePoint.Client.PrePublishValidationsResponse : ClientValueObject {
    private IEnumerable`1<int> m_errorCodes;
    private IList`1<PrePublishValidationsErrorCodesForEmail> m_prePublishValidationsErrorCodesForEmails;
    private IList`1<PrePublishValidationsErrorCodesForSharePointSite> m_prePublishValidationsErrorCodesForSharePointSites;
    private IList`1<PrePublishValidationsErrorCodesForTeams> m_prePublishValidationsErrorCodesForTeams;
    private PrePublishValidationsErrorCodesForVivaEngage m_prePublishValidationsErrorCodesForVivaEngage;
    [RemoteAttribute]
public IEnumerable`1<int> ErrorCodes { get; public set; }
    [RemoteAttribute]
public IList`1<PrePublishValidationsErrorCodesForEmail> PrePublishValidationsErrorCodesForEmails { get; public set; }
    [RemoteAttribute]
public IList`1<PrePublishValidationsErrorCodesForSharePointSite> PrePublishValidationsErrorCodesForSharePointSites { get; public set; }
    [RemoteAttribute]
public IList`1<PrePublishValidationsErrorCodesForTeams> PrePublishValidationsErrorCodesForTeams { get; public set; }
    [RemoteAttribute]
public PrePublishValidationsErrorCodesForVivaEngage PrePublishValidationsErrorCodesForVivaEngage { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IEnumerable`1<int> get_ErrorCodes();
    public void set_ErrorCodes(IEnumerable`1<int> value);
    public IList`1<PrePublishValidationsErrorCodesForEmail> get_PrePublishValidationsErrorCodesForEmails();
    public void set_PrePublishValidationsErrorCodesForEmails(IList`1<PrePublishValidationsErrorCodesForEmail> value);
    public IList`1<PrePublishValidationsErrorCodesForSharePointSite> get_PrePublishValidationsErrorCodesForSharePointSites();
    public void set_PrePublishValidationsErrorCodesForSharePointSites(IList`1<PrePublishValidationsErrorCodesForSharePointSite> value);
    public IList`1<PrePublishValidationsErrorCodesForTeams> get_PrePublishValidationsErrorCodesForTeams();
    public void set_PrePublishValidationsErrorCodesForTeams(IList`1<PrePublishValidationsErrorCodesForTeams> value);
    public PrePublishValidationsErrorCodesForVivaEngage get_PrePublishValidationsErrorCodesForVivaEngage();
    public void set_PrePublishValidationsErrorCodesForVivaEngage(PrePublishValidationsErrorCodesForVivaEngage value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.AcronymInformation")]
public class Microsoft.SharePoint.Client.Publishing.AcronymInformation : ClientValueObject {
    private string m_acronym;
    private string m_color;
    private int m_lcid;
    private string m_text;
    [RemoteAttribute]
public string Acronym { get; public set; }
    [RemoteAttribute]
public string Color { get; public set; }
    [RemoteAttribute]
public int Lcid { get; public set; }
    [RemoteAttribute]
public string Text { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Acronym();
    public void set_Acronym(string value);
    public string get_Color();
    public void set_Color(string value);
    public int get_Lcid();
    public void set_Lcid(int value);
    public string get_Text();
    public void set_Text(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.AddinPlugin")]
public class Microsoft.SharePoint.Client.Publishing.AddinPlugin : ClientObject {
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string Markup { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    public AddinPlugin(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public AddinPlugin(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Description();
    public void set_Description(string value);
    public string get_Markup();
    public void set_Markup(string value);
    public string get_Title();
    public void set_Title(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.AddinPluginPropertyNames : object {
    public static string Description;
    public static string Markup;
    public static string Title;
}
[ScriptTypeAttribute("SP.Publishing.AddinSettings")]
public class Microsoft.SharePoint.Client.Publishing.AddinSettings : ClientObject {
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public bool Enabled { get; public set; }
    [RemoteAttribute]
public string HeadScript { get; public set; }
    [RemoteAttribute]
public string HtmlEndBody { get; public set; }
    [RemoteAttribute]
public string HtmlStartBody { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public IDictionary`2<string, string> MetaTagPagePropertyMappings { get; public set; }
    [RemoteAttribute]
public string Namespace { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    public AddinSettings(ClientRuntimeContext context, Guid id);
    [EditorBrowsableAttribute("1")]
public AddinSettings(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Description();
    public void set_Description(string value);
    public bool get_Enabled();
    public void set_Enabled(bool value);
    public string get_HeadScript();
    public void set_HeadScript(string value);
    public string get_HtmlEndBody();
    public void set_HtmlEndBody(string value);
    public string get_HtmlStartBody();
    public void set_HtmlStartBody(string value);
    public Guid get_Id();
    public IDictionary`2<string, string> get_MetaTagPagePropertyMappings();
    public void set_MetaTagPagePropertyMappings(IDictionary`2<string, string> value);
    public string get_Namespace();
    public void set_Namespace(string value);
    public string get_Title();
    public void set_Title(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.AddinSettingsPropertyNames : object {
    public static string Description;
    public static string Enabled;
    public static string HeadScript;
    public static string HtmlEndBody;
    public static string HtmlStartBody;
    public static string Id;
    public static string MetaTagPagePropertyMappings;
    public static string Namespace;
    public static string Title;
}
[ScriptTypeAttribute("SP.Publishing.AuthoringSchemaFeatureVersion")]
public class Microsoft.SharePoint.Client.Publishing.AuthoringSchemaFeatureVersion : ClientValueObject {
    private string m_name;
    private string m_version;
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string Version { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Name();
    public void set_Name(string value);
    public string get_Version();
    public void set_Version(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.BoostFieldsData")]
public class Microsoft.SharePoint.Client.Publishing.BoostFieldsData : ClientValueObject {
    private BoostFieldsData m_boostOrderType;
    private bool m_boostUntilSeen;
    private DateTime m_expiry;
    private UInt32 m_impressions;
    private int m_nextItemId;
    private int m_nextItemVersion;
    private int m_previousItemId;
    private int m_previousItemVersion;
    [RemoteAttribute]
public BoostFieldsData BoostOrderType { get; public set; }
    [RemoteAttribute]
public bool BoostUntilSeen { get; public set; }
    [RemoteAttribute]
public DateTime Expiry { get; public set; }
    [RemoteAttribute]
public UInt32 Impressions { get; public set; }
    [RemoteAttribute]
public int NextItemId { get; public set; }
    [RemoteAttribute]
public int NextItemVersion { get; public set; }
    [RemoteAttribute]
public int PreviousItemId { get; public set; }
    [RemoteAttribute]
public int PreviousItemVersion { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public BoostFieldsData get_BoostOrderType();
    public void set_BoostOrderType(BoostFieldsData value);
    public bool get_BoostUntilSeen();
    public void set_BoostUntilSeen(bool value);
    public DateTime get_Expiry();
    public void set_Expiry(DateTime value);
    public UInt32 get_Impressions();
    public void set_Impressions(UInt32 value);
    public int get_NextItemId();
    public void set_NextItemId(int value);
    public int get_NextItemVersion();
    public void set_NextItemVersion(int value);
    public int get_PreviousItemId();
    public void set_PreviousItemId(int value);
    public int get_PreviousItemVersion();
    public void set_PreviousItemVersion(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.CampaignPublicationFieldsData")]
public class Microsoft.SharePoint.Client.Publishing.CampaignPublicationFieldsData : SitePageFieldsData {
    private string m_endpointEmail;
    private string m_endpointSharePoint;
    private string m_endpointTeams;
    private string m_endpointVivaEngage;
    private string m_endpointYammer;
    private string m_publicationMetadata;
    private PublicationStatus m_publicationStatus;
    [RemoteAttribute]
public string EndpointEmail { get; public set; }
    [RemoteAttribute]
public string EndpointSharePoint { get; public set; }
    [RemoteAttribute]
public string EndpointTeams { get; public set; }
    [RemoteAttribute]
public string EndpointVivaEngage { get; public set; }
    [RemoteAttribute]
public string EndpointYammer { get; public set; }
    [RemoteAttribute]
public string PublicationMetadata { get; public set; }
    [RemoteAttribute]
public PublicationStatus PublicationStatus { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_EndpointEmail();
    public void set_EndpointEmail(string value);
    public string get_EndpointSharePoint();
    public void set_EndpointSharePoint(string value);
    public string get_EndpointTeams();
    public void set_EndpointTeams(string value);
    public string get_EndpointVivaEngage();
    public void set_EndpointVivaEngage(string value);
    public string get_EndpointYammer();
    public void set_EndpointYammer(string value);
    public string get_PublicationMetadata();
    public void set_PublicationMetadata(string value);
    public PublicationStatus get_PublicationStatus();
    public void set_PublicationStatus(PublicationStatus value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.CampaignPublicationMailDraftData")]
public class Microsoft.SharePoint.Client.Publishing.CampaignPublicationMailDraftData : ClientValueObject {
    private string m_draftId;
    private string m_groupUpn;
    [RemoteAttribute]
public string DraftId { get; public set; }
    [RemoteAttribute]
public string GroupUpn { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DraftId();
    public void set_DraftId(string value);
    public string get_GroupUpn();
    public void set_GroupUpn(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.Publishing.ChannelPermission : Enum {
    public int value__;
    public static ChannelPermission Contributor;
    public static ChannelPermission Viewer;
    public static ChannelPermission Owner;
}
[ScriptTypeAttribute("SP.Publishing.CustomizableString")]
public class Microsoft.SharePoint.Client.Publishing.CustomizableString : ClientObject {
    [RemoteAttribute]
public string DefaultValue { get; }
    [RemoteAttribute]
public bool UsesDefaultValue { get; public set; }
    [RemoteAttribute]
public string Value { get; public set; }
    [EditorBrowsableAttribute("1")]
public CustomizableString(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_DefaultValue();
    public bool get_UsesDefaultValue();
    public void set_UsesDefaultValue(bool value);
    public string get_Value();
    public void set_Value(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.CustomizableStringPropertyNames : object {
    public static string DefaultValue;
    public static string UsesDefaultValue;
    public static string Value;
}
[ScriptTypeAttribute("SP.Publishing.DesignPackage")]
public static class Microsoft.SharePoint.Client.Publishing.DesignPackage : object {
    [RemoteAttribute]
public static void Install(ClientRuntimeContext context, Site site, DesignPackageInfo info, string path);
    [RemoteAttribute]
public static void UnInstall(ClientRuntimeContext context, Site site, DesignPackageInfo info);
    [RemoteAttribute]
public static void Apply(ClientRuntimeContext context, Site site, DesignPackageInfo info);
    [RemoteAttribute]
public static ClientResult`1<DesignPackageInfo> ExportEnterprise(ClientRuntimeContext context, Site site, bool includeSearchConfiguration);
    [RemoteAttribute]
public static ClientResult`1<DesignPackageInfo> ExportSmallBusiness(ClientRuntimeContext context, Site site, string packageName, bool includeSearchConfiguration);
}
[ScriptTypeAttribute("SP.Publishing.DesignPackageInfo")]
public class Microsoft.SharePoint.Client.Publishing.DesignPackageInfo : ClientValueObject {
    private int m_majorVersion;
    private int m_minorVersion;
    private Guid m_packageGuid;
    private string m_packageName;
    [RemoteAttribute]
public int MajorVersion { get; public set; }
    [RemoteAttribute]
public int MinorVersion { get; public set; }
    [RemoteAttribute]
public Guid PackageGuid { get; public set; }
    [RemoteAttribute]
public string PackageName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_MajorVersion();
    public void set_MajorVersion(int value);
    public int get_MinorVersion();
    public void set_MinorVersion(int value);
    public Guid get_PackageGuid();
    public void set_PackageGuid(Guid value);
    public string get_PackageName();
    public void set_PackageName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.EnumerateOnlyVideoCollection")]
public class Microsoft.SharePoint.Client.Publishing.EnumerateOnlyVideoCollection : ClientObjectCollection`1<VideoItem> {
    [EditorBrowsableAttribute("1")]
public EnumerateOnlyVideoCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.Publishing.FeedVideoPageFieldsData")]
public class Microsoft.SharePoint.Client.Publishing.FeedVideoPageFieldsData : RepostPageFieldsData {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[ScriptTypeAttribute("SP.Publishing.ImageRendition")]
public class Microsoft.SharePoint.Client.Publishing.ImageRendition : ClientValueObject {
    private string m_group;
    private int m_height;
    private int m_id;
    private int m_idCsom;
    private string m_name;
    private int m_version;
    private int m_width;
    [RemoteAttribute]
public string Group { get; public set; }
    [RemoteAttribute]
public int Height { get; public set; }
    [RemoteAttribute]
public int Id { get; }
    [RemoteAttribute]
internal int IdCsom { get; internal set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public int Version { get; }
    [RemoteAttribute]
public int Width { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Group();
    public void set_Group(string value);
    public int get_Height();
    public void set_Height(int value);
    public int get_Id();
    internal int get_IdCsom();
    internal void set_IdCsom(int value);
    public string get_Name();
    public void set_Name(string value);
    public int get_Version();
    public int get_Width();
    public void set_Width(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.Publishing.Navigation.NavigationLinkType : Enum {
    public int value__;
    public static NavigationLinkType Root;
    public static NavigationLinkType FriendlyUrl;
    public static NavigationLinkType SimpleLink;
}
[ScriptTypeAttribute("SP.Publishing.Navigation.NavigationTerm")]
public class Microsoft.SharePoint.Client.Publishing.Navigation.NavigationTerm : NavigationTermSetItem {
    [RemoteAttribute]
public string AssociatedFolderUrl { get; public set; }
    [RemoteAttribute]
public CustomizableString CatalogTargetUrl { get; }
    [RemoteAttribute]
public string CategoryImageUrl { get; public set; }
    [RemoteAttribute]
public NavigationTermProviderNameCollection ExcludedProviders { get; }
    [RemoteAttribute]
public bool ExcludeFromCurrentNavigation { get; public set; }
    [RemoteAttribute]
public bool ExcludeFromGlobalNavigation { get; public set; }
    [RemoteAttribute]
public CustomizableString FriendlyUrlSegment { get; }
    [RemoteAttribute]
public string HoverText { get; public set; }
    [RemoteAttribute]
public bool IsDeprecated { get; }
    [RemoteAttribute]
public bool IsPinned { get; }
    [RemoteAttribute]
public bool IsPinnedRoot { get; }
    [RemoteAttribute]
public NavigationTerm Parent { get; }
    [RemoteAttribute]
public string SimpleLinkUrl { get; public set; }
    [RemoteAttribute]
public CustomizableString TargetSiteId { get; }
    [RemoteAttribute]
public CustomizableString TargetTermSetId { get; }
    [RemoteAttribute]
public CustomizableString TargetUrl { get; }
    [RemoteAttribute]
public CustomizableString TargetUrlListId { get; }
    [RemoteAttribute]
public CustomizableString TargetUrlListItemId { get; }
    [RemoteAttribute]
public CustomizableString TargetUrlWebId { get; }
    [RemoteAttribute]
public NavigationTermSet TermSet { get; }
    [EditorBrowsableAttribute("1")]
public NavigationTerm(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_AssociatedFolderUrl();
    public void set_AssociatedFolderUrl(string value);
    public CustomizableString get_CatalogTargetUrl();
    public string get_CategoryImageUrl();
    public void set_CategoryImageUrl(string value);
    public NavigationTermProviderNameCollection get_ExcludedProviders();
    public bool get_ExcludeFromCurrentNavigation();
    public void set_ExcludeFromCurrentNavigation(bool value);
    public bool get_ExcludeFromGlobalNavigation();
    public void set_ExcludeFromGlobalNavigation(bool value);
    public CustomizableString get_FriendlyUrlSegment();
    public string get_HoverText();
    public void set_HoverText(string value);
    public bool get_IsDeprecated();
    public bool get_IsPinned();
    public bool get_IsPinnedRoot();
    public NavigationTerm get_Parent();
    public string get_SimpleLinkUrl();
    public void set_SimpleLinkUrl(string value);
    public CustomizableString get_TargetSiteId();
    public CustomizableString get_TargetTermSetId();
    public CustomizableString get_TargetUrl();
    public CustomizableString get_TargetUrlListId();
    public CustomizableString get_TargetUrlListItemId();
    public CustomizableString get_TargetUrlWebId();
    public NavigationTermSet get_TermSet();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public static NavigationTerm GetAsResolvedByWeb(ClientRuntimeContext context, Term term, Web web, string siteMapProviderName);
    [RemoteAttribute]
public static NavigationTerm GetAsResolvedByView(ClientRuntimeContext context, Term term, NavigationTermSetView view);
    [RemoteAttribute]
public NavigationTerm GetAsEditable(TaxonomySession taxonomySession);
    [RemoteAttribute]
public virtual NavigationTerm GetWithNewView(NavigationTermSetView newView);
    [RemoteAttribute]
public ClientResult`1<string> GetResolvedTargetUrl(string browserQueryString, String[] remainingUrlSegments);
    [RemoteAttribute]
public virtual ClientResult`1<string> GetResolvedTargetUrlWithoutQuery();
    [RemoteAttribute]
public ClientResult`1<string> GetResolvedAssociatedFolderUrl();
    [RemoteAttribute]
public virtual ClientResult`1<string> GetWebRelativeFriendlyUrl();
    [RemoteAttribute]
public NavigationTermCollection GetAllParentTerms();
    [RemoteAttribute]
public virtual Term GetTaxonomyTerm();
    [RemoteAttribute]
public virtual void Move(NavigationTermSetItem newParent);
    [RemoteAttribute]
public virtual void DeleteObject();
}
[ScriptTypeAttribute("SP.Publishing.Navigation.NavigationTermCollection")]
public class Microsoft.SharePoint.Client.Publishing.Navigation.NavigationTermCollection : ClientObjectCollection`1<NavigationTerm> {
    [EditorBrowsableAttribute("1")]
public NavigationTermCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.Navigation.NavigationTermObjectPropertyNames : object {
    public static string CatalogTargetUrl;
    public static string ExcludedProviders;
    public static string FriendlyUrlSegment;
    public static string Parent;
    public static string TargetSiteId;
    public static string TargetTermSetId;
    public static string TargetUrl;
    public static string TargetUrlListId;
    public static string TargetUrlListItemId;
    public static string TargetUrlWebId;
    public static string TermSet;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.Navigation.NavigationTermPropertyNames : object {
    public static string AssociatedFolderUrl;
    public static string CategoryImageUrl;
    public static string ExcludeFromCurrentNavigation;
    public static string ExcludeFromGlobalNavigation;
    public static string HoverText;
    public static string IsDeprecated;
    public static string IsPinned;
    public static string IsPinnedRoot;
    public static string SimpleLinkUrl;
}
[ScriptTypeAttribute("SP.Publishing.Navigation.NavigationTermProviderNameCollection")]
public class Microsoft.SharePoint.Client.Publishing.Navigation.NavigationTermProviderNameCollection : ClientObjectCollection`1<string> {
    [EditorBrowsableAttribute("1")]
public NavigationTermProviderNameCollection(ClientRuntimeContext context, ObjectPath objectPath);
    private void OnAdd(string fieldName);
    private void OnClear();
    private void OnRemove(string fieldName);
    [RemoteAttribute]
public void Add(string item);
    [RemoteAttribute]
public void Clear();
    [RemoteAttribute]
public ClientResult`1<bool> Remove(string item);
}
[ScriptTypeAttribute("SP.Publishing.Navigation.NavigationTermSet")]
public class Microsoft.SharePoint.Client.Publishing.Navigation.NavigationTermSet : NavigationTermSetItem {
    [RemoteAttribute]
public bool IsNavigationTermSet { get; public set; }
    [RemoteAttribute]
public int Lcid { get; }
    [RemoteAttribute]
public bool LoadedFromPersistedData { get; }
    [RemoteAttribute]
public Guid TermGroupId { get; }
    [RemoteAttribute]
public Guid TermStoreId { get; }
    [EditorBrowsableAttribute("1")]
public NavigationTermSet(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_IsNavigationTermSet();
    public void set_IsNavigationTermSet(bool value);
    public int get_Lcid();
    public bool get_LoadedFromPersistedData();
    public Guid get_TermGroupId();
    public Guid get_TermStoreId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public static NavigationTermSet GetAsResolvedByWeb(ClientRuntimeContext context, TermSet termSet, Web web, string siteMapProviderName);
    [RemoteAttribute]
public static NavigationTermSet GetAsResolvedByView(ClientRuntimeContext context, TermSet termSet, NavigationTermSetView view);
    [RemoteAttribute]
public NavigationTermSet GetAsEditable(TaxonomySession taxonomySession);
    [RemoteAttribute]
public virtual NavigationTermSet GetWithNewView(NavigationTermSetView newView);
    [RemoteAttribute]
public virtual TermSet GetTaxonomyTermSet();
    [RemoteAttribute]
public NavigationTermCollection GetAllTerms();
    [RemoteAttribute]
public NavigationTerm FindTermForUrl(string url);
}
[ScriptTypeAttribute("SP.Publishing.Navigation.NavigationTermSetItem")]
public class Microsoft.SharePoint.Client.Publishing.Navigation.NavigationTermSetItem : ClientObject {
    [RemoteAttribute]
public CustomizableString CatalogTargetUrlForChildTerms { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool IsReadOnly { get; }
    [RemoteAttribute]
public NavigationLinkType LinkType { get; public set; }
    [RemoteAttribute]
public CustomizableString TargetUrlForChildTerms { get; }
    [RemoteAttribute]
public string TaxonomyName { get; }
    [RemoteAttribute]
public NavigationTermCollection Terms { get; }
    [RemoteAttribute]
public CustomizableString Title { get; }
    [RemoteAttribute]
public NavigationTermSetView View { get; }
    [EditorBrowsableAttribute("1")]
public NavigationTermSetItem(ClientRuntimeContext context, ObjectPath objectPath);
    public CustomizableString get_CatalogTargetUrlForChildTerms();
    public Guid get_Id();
    public bool get_IsReadOnly();
    public NavigationLinkType get_LinkType();
    public void set_LinkType(NavigationLinkType value);
    public CustomizableString get_TargetUrlForChildTerms();
    public string get_TaxonomyName();
    public NavigationTermCollection get_Terms();
    public CustomizableString get_Title();
    public NavigationTermSetView get_View();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ClientResult`1<string> GetResolvedDisplayUrl(string browserQueryString);
    [RemoteAttribute]
public TermStore GetTaxonomyTermStore();
    [RemoteAttribute]
public NavigationTerm CreateTerm(string termName, NavigationLinkType linkType, Guid termId);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.Navigation.NavigationTermSetItemObjectPropertyNames : object {
    public static string CatalogTargetUrlForChildTerms;
    public static string TargetUrlForChildTerms;
    public static string Terms;
    public static string Title;
    public static string View;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.Navigation.NavigationTermSetItemPropertyNames : object {
    public static string Id;
    public static string IsReadOnly;
    public static string LinkType;
    public static string TaxonomyName;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.Navigation.NavigationTermSetPropertyNames : object {
    public static string IsNavigationTermSet;
    public static string Lcid;
    public static string LoadedFromPersistedData;
    public static string TermGroupId;
    public static string TermStoreId;
}
[ScriptTypeAttribute("SP.Publishing.Navigation.NavigationTermSetView")]
public class Microsoft.SharePoint.Client.Publishing.Navigation.NavigationTermSetView : ClientObject {
    [RemoteAttribute]
public bool ExcludeDeprecatedTerms { get; public set; }
    [RemoteAttribute]
public bool ExcludeTermsByPermissions { get; public set; }
    [RemoteAttribute]
public bool ExcludeTermsByProvider { get; public set; }
    [RemoteAttribute]
public string ServerRelativeSiteUrl { get; }
    [RemoteAttribute]
public string ServerRelativeWebUrl { get; }
    [RemoteAttribute]
public string SiteMapProviderName { get; public set; }
    [RemoteAttribute]
public Guid WebId { get; }
    [RemoteAttribute]
public string WebTitle { get; }
    public NavigationTermSetView(ClientRuntimeContext context, Web web, string siteMapProviderName);
    [EditorBrowsableAttribute("1")]
public NavigationTermSetView(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_ExcludeDeprecatedTerms();
    public void set_ExcludeDeprecatedTerms(bool value);
    public bool get_ExcludeTermsByPermissions();
    public void set_ExcludeTermsByPermissions(bool value);
    public bool get_ExcludeTermsByProvider();
    public void set_ExcludeTermsByProvider(bool value);
    public string get_ServerRelativeSiteUrl();
    public string get_ServerRelativeWebUrl();
    public string get_SiteMapProviderName();
    public void set_SiteMapProviderName(string value);
    public Guid get_WebId();
    public string get_WebTitle();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public static NavigationTermSetView CreateEmptyInstance(ClientRuntimeContext context);
    [RemoteAttribute]
public NavigationTermSetView GetCopy();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.Navigation.NavigationTermSetViewPropertyNames : object {
    public static string ExcludeDeprecatedTerms;
    public static string ExcludeTermsByPermissions;
    public static string ExcludeTermsByProvider;
    public static string ServerRelativeSiteUrl;
    public static string ServerRelativeWebUrl;
    public static string SiteMapProviderName;
    public static string WebId;
    public static string WebTitle;
}
public enum Microsoft.SharePoint.Client.Publishing.Navigation.PortalNavigationCacheState : Enum {
    public int value__;
    public static PortalNavigationCacheState Enabled;
    public static PortalNavigationCacheState PendingEnable;
    public static PortalNavigationCacheState Refreshing;
    public static PortalNavigationCacheState PendingOptOut;
    public static PortalNavigationCacheState OptedOut;
    public static PortalNavigationCacheState EnabledGlobal;
    public static PortalNavigationCacheState EnabledCurrent;
    public static PortalNavigationCacheState EnabledBoth;
    public static PortalNavigationCacheState NotNeeded;
}
[ScriptTypeAttribute("SP.Publishing.Navigation.StandardNavigationSettings")]
public class Microsoft.SharePoint.Client.Publishing.Navigation.StandardNavigationSettings : ClientObject {
    [RemoteAttribute]
public StandardNavigationSource Source { get; public set; }
    [RemoteAttribute]
public Guid TermSetId { get; public set; }
    [RemoteAttribute]
public Guid TermStoreId { get; public set; }
    [EditorBrowsableAttribute("1")]
public StandardNavigationSettings(ClientRuntimeContext context, ObjectPath objectPath);
    public StandardNavigationSource get_Source();
    public void set_Source(StandardNavigationSource value);
    public Guid get_TermSetId();
    public void set_TermSetId(Guid value);
    public Guid get_TermStoreId();
    public void set_TermStoreId(Guid value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.Navigation.StandardNavigationSettingsPropertyNames : object {
    public static string Source;
    public static string TermSetId;
    public static string TermStoreId;
}
public enum Microsoft.SharePoint.Client.Publishing.Navigation.StandardNavigationSource : Enum {
    public int value__;
    public static StandardNavigationSource Unknown;
    public static StandardNavigationSource PortalProvider;
    public static StandardNavigationSource TaxonomyProvider;
    public static StandardNavigationSource InheritFromParentWeb;
}
[ScriptTypeAttribute("SP.Publishing.Navigation.TaxonomyNavigation")]
public static class Microsoft.SharePoint.Client.Publishing.Navigation.TaxonomyNavigation : object {
    [RemoteAttribute]
public static WebNavigationSettings GetWebNavigationSettings(ClientRuntimeContext context, Web web);
    [RemoteAttribute]
public static NavigationTermSet GetTermSetForWeb(ClientRuntimeContext context, Web web, string siteMapProviderName, bool includeInheritedSettings);
    [RemoteAttribute]
public static ClientResult`1<bool> SetCrawlAsFriendlyUrlPage(ClientRuntimeContext context, NavigationTerm navigationTerm, bool crawlAsFriendlyUrlPage);
    [RemoteAttribute]
public static ClientResult`1<int> GetNavigationLcidForWeb(ClientRuntimeContext context, Web web);
    [RemoteAttribute]
public static void FlushSiteFromCache(ClientRuntimeContext context, Site site);
    [RemoteAttribute]
public static void FlushWebFromCache(ClientRuntimeContext context, Web web);
    [RemoteAttribute]
public static void FlushTermSetFromCache(ClientRuntimeContext context, Web webForPermissions, Guid termStoreId, Guid termSetId);
}
[ScriptTypeAttribute("SP.Publishing.Navigation.WebNavigationSettings")]
public class Microsoft.SharePoint.Client.Publishing.Navigation.WebNavigationSettings : ClientObject {
    [RemoteAttribute]
public bool AddNewPagesToNavigation { get; public set; }
    [RemoteAttribute]
public int CachedHierarchyDepth { get; public set; }
    [RemoteAttribute]
public int CacheSchemaVersion { get; public set; }
    [RemoteAttribute]
public int CachingRetryAttemptLeft { get; public set; }
    [RemoteAttribute]
public PortalNavigationCacheState CachingState { get; public set; }
    [RemoteAttribute]
public bool CreateFriendlyUrlsForNewPages { get; public set; }
    [RemoteAttribute]
public StandardNavigationSettings CurrentNavigation { get; }
    [RemoteAttribute]
public StandardNavigationSettings GlobalNavigation { get; }
    [RemoteAttribute]
public DateTime LastCachingRefreshAttempted { get; public set; }
    [RemoteAttribute]
public Guid PortalNavigationSuccessfulRefreshID { get; public set; }
    [RemoteAttribute]
public DateTime PortalNavigationSuccessfulRefreshTime { get; public set; }
    public WebNavigationSettings(ClientRuntimeContext context, Web web);
    [EditorBrowsableAttribute("1")]
public WebNavigationSettings(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_AddNewPagesToNavigation();
    public void set_AddNewPagesToNavigation(bool value);
    public int get_CachedHierarchyDepth();
    public void set_CachedHierarchyDepth(int value);
    public int get_CacheSchemaVersion();
    public void set_CacheSchemaVersion(int value);
    public int get_CachingRetryAttemptLeft();
    public void set_CachingRetryAttemptLeft(int value);
    public PortalNavigationCacheState get_CachingState();
    public void set_CachingState(PortalNavigationCacheState value);
    public bool get_CreateFriendlyUrlsForNewPages();
    public void set_CreateFriendlyUrlsForNewPages(bool value);
    public StandardNavigationSettings get_CurrentNavigation();
    public StandardNavigationSettings get_GlobalNavigation();
    public DateTime get_LastCachingRefreshAttempted();
    public void set_LastCachingRefreshAttempted(DateTime value);
    public Guid get_PortalNavigationSuccessfulRefreshID();
    public void set_PortalNavigationSuccessfulRefreshID(Guid value);
    public DateTime get_PortalNavigationSuccessfulRefreshTime();
    public void set_PortalNavigationSuccessfulRefreshTime(DateTime value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update(TaxonomySession taxonomySession);
    [RemoteAttribute]
public void ResetToDefaults();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.Navigation.WebNavigationSettingsObjectPropertyNames : object {
    public static string CurrentNavigation;
    public static string GlobalNavigation;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.Navigation.WebNavigationSettingsPropertyNames : object {
    public static string AddNewPagesToNavigation;
    public static string CachedHierarchyDepth;
    public static string CacheSchemaVersion;
    public static string CachingRetryAttemptLeft;
    public static string CachingState;
    public static string CreateFriendlyUrlsForNewPages;
    public static string LastCachingRefreshAttempted;
    public static string PortalNavigationSuccessfulRefreshID;
    public static string PortalNavigationSuccessfulRefreshTime;
}
[ScriptTypeAttribute("SP.Publishing.PageLayoutCreationInformation")]
public class Microsoft.SharePoint.Client.Publishing.PageLayoutCreationInformation : ClientValueObject {
    private string m_associatedContentTypeId;
    private string m_masterPageUrl;
    private string m_newPageLayoutEditablePath;
    private string m_newPageLayoutNameWithoutExtension;
    private Web m_web;
    [RemoteAttribute]
public string AssociatedContentTypeId { get; public set; }
    [RemoteAttribute]
public string MasterPageUrl { get; public set; }
    [RemoteAttribute]
public string NewPageLayoutEditablePath { get; public set; }
    [RemoteAttribute]
public string NewPageLayoutNameWithoutExtension { get; public set; }
    [RemoteAttribute]
public Web Web { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AssociatedContentTypeId();
    public void set_AssociatedContentTypeId(string value);
    public string get_MasterPageUrl();
    public void set_MasterPageUrl(string value);
    public string get_NewPageLayoutEditablePath();
    public void set_NewPageLayoutEditablePath(string value);
    public string get_NewPageLayoutNameWithoutExtension();
    public void set_NewPageLayoutNameWithoutExtension(string value);
    public Web get_Web();
    public void set_Web(Web value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.Publishing.PortalLaunch.PortalLaunchRedirectionType : Enum {
    public int value__;
    public static PortalLaunchRedirectionType Bidirectional;
    public static PortalLaunchRedirectionType ToTemporaryPage;
    public static PortalLaunchRedirectionType SiteBased;
}
[ScriptTypeAttribute("SP.Publishing.PortalLaunch.PortalLaunchSetupWrapper")]
public class Microsoft.SharePoint.Client.Publishing.PortalLaunch.PortalLaunchSetupWrapper : ClientValueObject {
    private IDictionary`2<string, PortalLaunchWaveSetup> m_sPPortalLaunchWaveSetups;
    [RemoteAttribute]
public IDictionary`2<string, PortalLaunchWaveSetup> SPPortalLaunchWaveSetups { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IDictionary`2<string, PortalLaunchWaveSetup> get_SPPortalLaunchWaveSetups();
    public void set_SPPortalLaunchWaveSetups(IDictionary`2<string, PortalLaunchWaveSetup> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.Publishing.PortalLaunch.PortalLaunchStatus : Enum {
    public int value__;
    public static PortalLaunchStatus Created;
    public static PortalLaunchStatus Started;
    public static PortalLaunchStatus Paused;
    public static PortalLaunchStatus Canceled;
    public static PortalLaunchStatus Completed;
    public static PortalLaunchStatus Deleted;
}
public enum Microsoft.SharePoint.Client.Publishing.PortalLaunch.PortalLaunchUsersSizeType : Enum {
    public int value__;
    public static PortalLaunchUsersSizeType LessThan10kUsers;
    public static PortalLaunchUsersSizeType From10kTo30kUsers;
    public static PortalLaunchUsersSizeType From30kTo100KUsers;
    public static PortalLaunchUsersSizeType MoreThan100kUsers;
}
[ScriptTypeAttribute("SP.Publishing.PortalLaunch.PortalLaunchWave")]
public class Microsoft.SharePoint.Client.Publishing.PortalLaunch.PortalLaunchWave : ClientValueObject {
    private IList`1<PortalLaunchWaveGroup> m_groups;
    private DateTime m_launchDateUtc;
    private string m_name;
    private int m_order;
    [RemoteAttribute]
public IList`1<PortalLaunchWaveGroup> Groups { get; public set; }
    [RemoteAttribute]
public DateTime LaunchDateUtc { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public int Order { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<PortalLaunchWaveGroup> get_Groups();
    public void set_Groups(IList`1<PortalLaunchWaveGroup> value);
    public DateTime get_LaunchDateUtc();
    public void set_LaunchDateUtc(DateTime value);
    public string get_Name();
    public void set_Name(string value);
    public int get_Order();
    public void set_Order(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.PortalLaunch.PortalLaunchWaveGroup")]
public class Microsoft.SharePoint.Client.Publishing.PortalLaunch.PortalLaunchWaveGroup : ClientValueObject {
    private Guid m_id;
    private string m_siteUrl;
    private string m_userGroupName;
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string SiteUrl { get; public set; }
    [RemoteAttribute]
public string UserGroupName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_SiteUrl();
    public void set_SiteUrl(string value);
    public string get_UserGroupName();
    public void set_UserGroupName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.PortalLaunch.PortalLaunchWaveSetup")]
public class Microsoft.SharePoint.Client.Publishing.PortalLaunch.PortalLaunchWaveSetup : ClientValueObject {
    private string m_alternativeUrlsOfNewSite;
    private string m_alternativeUrlsOfOldSite;
    private DateTime m_createdOn;
    private PortalLaunchUsersSizeType m_expectedUsersSize;
    private bool m_isPaused;
    private DateTime m_modifiedOn;
    private string m_newSiteUrl;
    private IDictionary`2<string, string> m_ownersAndEditors;
    private int m_pauseAtWave;
    private PortalLaunchRedirectionType m_redirectionType;
    private string m_redirectUrl;
    private Guid m_siteId;
    private PortalLaunchStatus m_status;
    private string m_waveOverrideUsers;
    private IList`1<PortalLaunchWave> m_waves;
    [RemoteAttribute]
public string AlternativeUrlsOfNewSite { get; public set; }
    [RemoteAttribute]
public string AlternativeUrlsOfOldSite { get; public set; }
    [RemoteAttribute]
public DateTime CreatedOn { get; public set; }
    [RemoteAttribute]
public PortalLaunchUsersSizeType ExpectedUsersSize { get; public set; }
    [RemoteAttribute]
public bool IsPaused { get; }
    [RemoteAttribute]
public DateTime ModifiedOn { get; public set; }
    [RemoteAttribute]
public string NewSiteUrl { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, string> OwnersAndEditors { get; public set; }
    [RemoteAttribute]
public int PauseAtWave { get; public set; }
    [RemoteAttribute]
public PortalLaunchRedirectionType RedirectionType { get; public set; }
    [RemoteAttribute]
public string RedirectUrl { get; public set; }
    [RemoteAttribute]
public Guid SiteId { get; public set; }
    [RemoteAttribute]
public PortalLaunchStatus Status { get; public set; }
    [RemoteAttribute]
public string WaveOverrideUsers { get; public set; }
    [RemoteAttribute]
public IList`1<PortalLaunchWave> Waves { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AlternativeUrlsOfNewSite();
    public void set_AlternativeUrlsOfNewSite(string value);
    public string get_AlternativeUrlsOfOldSite();
    public void set_AlternativeUrlsOfOldSite(string value);
    public DateTime get_CreatedOn();
    public void set_CreatedOn(DateTime value);
    public PortalLaunchUsersSizeType get_ExpectedUsersSize();
    public void set_ExpectedUsersSize(PortalLaunchUsersSizeType value);
    public bool get_IsPaused();
    public DateTime get_ModifiedOn();
    public void set_ModifiedOn(DateTime value);
    public string get_NewSiteUrl();
    public void set_NewSiteUrl(string value);
    public IDictionary`2<string, string> get_OwnersAndEditors();
    public void set_OwnersAndEditors(IDictionary`2<string, string> value);
    public int get_PauseAtWave();
    public void set_PauseAtWave(int value);
    public PortalLaunchRedirectionType get_RedirectionType();
    public void set_RedirectionType(PortalLaunchRedirectionType value);
    public string get_RedirectUrl();
    public void set_RedirectUrl(string value);
    public Guid get_SiteId();
    public void set_SiteId(Guid value);
    public PortalLaunchStatus get_Status();
    public void set_Status(PortalLaunchStatus value);
    public string get_WaveOverrideUsers();
    public void set_WaveOverrideUsers(string value);
    public IList`1<PortalLaunchWave> get_Waves();
    public void set_Waves(IList`1<PortalLaunchWave> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.Publishing.PortalPermission : Enum {
    public int value__;
    public static PortalPermission HubContributor;
    public static PortalPermission ChannelCreator;
    public static PortalPermission HubViewer;
}
public enum Microsoft.SharePoint.Client.Publishing.PublicationStatus : Enum {
    public int value__;
    public static PublicationStatus Draft;
    public static PublicationStatus Publishing;
    public static PublicationStatus Published;
    public static PublicationStatus NeedsAttention;
    public static PublicationStatus PendingApproval;
    public static PublicationStatus Rejected;
    public static PublicationStatus ReadyToPublish;
    public static PublicationStatus Scheduled;
}
[ScriptTypeAttribute("SP.Publishing.PublishingPage")]
public class Microsoft.SharePoint.Client.Publishing.PublishingPage : ScheduledItem {
    [EditorBrowsableAttribute("1")]
public PublishingPage(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static PublishingPage GetPublishingPage(ClientRuntimeContext context, ListItem sourceListItem);
    [RemoteAttribute]
public ClientResult`1<string> AddFriendlyUrl(string friendlyUrlSegment, NavigationTermSetItem editableParent, bool doAddToNavigation);
}
[ScriptTypeAttribute("SP.Publishing.PublishingPageInformation")]
public class Microsoft.SharePoint.Client.Publishing.PublishingPageInformation : ClientValueObject {
    private Folder m_folder;
    private string m_name;
    private ListItem m_pageLayoutListItem;
    [RemoteAttribute]
public Folder Folder { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public ListItem PageLayoutListItem { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Folder get_Folder();
    public void set_Folder(Folder value);
    public string get_Name();
    public void set_Name(string value);
    public ListItem get_PageLayoutListItem();
    public void set_PageLayoutListItem(ListItem value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.PublishingSite")]
public class Microsoft.SharePoint.Client.Publishing.PublishingSite : ClientObject {
    [EditorBrowsableAttribute("1")]
public PublishingSite(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static void CreatePageLayout(ClientRuntimeContext context, PageLayoutCreationInformation parameters);
}
[ScriptTypeAttribute("SP.Publishing.PublishingWeb")]
public class Microsoft.SharePoint.Client.Publishing.PublishingWeb : ClientObject {
    [RemoteAttribute]
public Web Web { get; }
    [EditorBrowsableAttribute("1")]
public PublishingWeb(ClientRuntimeContext context, ObjectPath objectPath);
    public Web get_Web();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public PublishingPage AddPublishingPage(PublishingPageInformation pageInformation);
    [RemoteAttribute]
public static PublishingWeb GetPublishingWeb(ClientRuntimeContext context, Web web);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.PublishingWebObjectPropertyNames : object {
    public static string Web;
}
[ScriptTypeAttribute("SP.Publishing.RepostPageFieldsData")]
public class Microsoft.SharePoint.Client.Publishing.RepostPageFieldsData : SitePageFieldsData {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[ScriptTypeAttribute("SP.Publishing.ScheduledItem")]
public class Microsoft.SharePoint.Client.Publishing.ScheduledItem : ClientObject {
    [RemoteAttribute]
public DateTime EndDate { get; public set; }
    [RemoteAttribute]
public ListItem ListItem { get; }
    [RemoteAttribute]
public DateTime StartDate { get; public set; }
    [EditorBrowsableAttribute("1")]
public ScheduledItem(ClientRuntimeContext context, ObjectPath objectPath);
    public DateTime get_EndDate();
    public void set_EndDate(DateTime value);
    public ListItem get_ListItem();
    public DateTime get_StartDate();
    public void set_StartDate(DateTime value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Schedule(string approvalComment);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.ScheduledItemObjectPropertyNames : object {
    public static string ListItem;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.ScheduledItemPropertyNames : object {
    public static string EndDate;
    public static string StartDate;
}
public class Microsoft.SharePoint.Client.Publishing.ScriptTypeFactory : object {
    public sealed virtual IFromJson CreateObjectFromScriptType(string scriptType, ClientRuntimeContext context);
}
[ScriptTypeAttribute("SP.Publishing.Search")]
public class Microsoft.SharePoint.Client.Publishing.Search : ClientObject {
    [RemoteAttribute]
public Int32[] QueryLanguages { get; }
    [EditorBrowsableAttribute("1")]
public Search(ClientRuntimeContext context, ObjectPath objectPath);
    public Int32[] get_QueryLanguages();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.SearchPropertyNames : object {
    public static string QueryLanguages;
}
[ScriptTypeAttribute("SP.Publishing.SharePagePreviewByEmailFieldsData")]
public class Microsoft.SharePoint.Client.Publishing.SharePagePreviewByEmailFieldsData : ClientValueObject {
    private string m_message;
    private String[] m_recipientEmails;
    [RemoteAttribute]
public string message { get; public set; }
    [RemoteAttribute]
public String[] recipientEmails { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_message();
    public void set_message(string value);
    public String[] get_recipientEmails();
    public void set_recipientEmails(String[] value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SiteImageRenditions")]
public static class Microsoft.SharePoint.Client.Publishing.SiteImageRenditions : object {
    [RemoteAttribute]
public static IList`1<ImageRendition> GetRenditions(ClientRuntimeContext context);
    [RemoteAttribute]
public static void SetRenditions(ClientRuntimeContext context, IList`1<ImageRendition> renditions);
}
[ScriptTypeAttribute("SP.Publishing.SitePage3DFieldsData")]
public class Microsoft.SharePoint.Client.Publishing.SitePage3DFieldsData : SitePageFieldsData {
    private string m_spaceContent;
    [RemoteAttribute]
public string SpaceContent { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_SpaceContent();
    public void set_SpaceContent(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SitePageAuthoringMetadata")]
public class Microsoft.SharePoint.Client.Publishing.SitePageAuthoringMetadata : ClientValueObject {
    private long m_sequenceId;
    private Guid m_sessionId;
    [RemoteAttribute]
public long SequenceId { get; public set; }
    [RemoteAttribute]
public Guid SessionId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public long get_SequenceId();
    public void set_SequenceId(long value);
    public Guid get_SessionId();
    public void set_SessionId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SitePageBoostProperties")]
public class Microsoft.SharePoint.Client.Publishing.SitePageBoostProperties : ClientValueObject {
    private double m_boostOrder;
    private int m_boostOrderVersion;
    private DateTime m_boostUntilExpiryDate;
    private bool m_boostUntilSeen;
    private int m_boostUntilUsersViewedCount;
    [RemoteAttribute]
public double BoostOrder { get; public set; }
    [RemoteAttribute]
public int BoostOrderVersion { get; public set; }
    [RemoteAttribute]
public DateTime BoostUntilExpiryDate { get; public set; }
    [RemoteAttribute]
public bool BoostUntilSeen { get; public set; }
    [RemoteAttribute]
public int BoostUntilUsersViewedCount { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public double get_BoostOrder();
    public void set_BoostOrder(double value);
    public int get_BoostOrderVersion();
    public void set_BoostOrderVersion(int value);
    public DateTime get_BoostUntilExpiryDate();
    public void set_BoostUntilExpiryDate(DateTime value);
    public bool get_BoostUntilSeen();
    public void set_BoostUntilSeen(bool value);
    public int get_BoostUntilUsersViewedCount();
    public void set_BoostUntilUsersViewedCount(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.Publishing.SitePageCoAuthAction : Enum {
    public int value__;
    public static SitePageCoAuthAction None;
    public static SitePageCoAuthAction Save;
    public static SitePageCoAuthAction SaveNew;
}
public enum Microsoft.SharePoint.Client.Publishing.SitePageCoAuthLockAction : Enum {
    public int value__;
    public static SitePageCoAuthLockAction None;
    public static SitePageCoAuthLockAction Refresh;
    public static SitePageCoAuthLockAction Release;
}
[ScriptTypeAttribute("SP.Publishing.SitePageCoAuthState")]
public class Microsoft.SharePoint.Client.Publishing.SitePageCoAuthState : ClientValueObject {
    private SitePageCoAuthAction m_action;
    private IList`1<AuthoringSchemaFeatureVersion> m_authoringSchemaFeatureVersions;
    private bool m_hasReachedMinorVersionsLimit;
    private bool m_isNewSession;
    private bool m_isPartitionFlushed;
    private SitePageCoAuthLockAction m_lockAction;
    private int m_lockDuration;
    private bool m_overwriteExistingVersion;
    private string m_sharedLockId;
    [RemoteAttribute]
public SitePageCoAuthAction Action { get; public set; }
    [RemoteAttribute]
public IList`1<AuthoringSchemaFeatureVersion> AuthoringSchemaFeatureVersions { get; public set; }
    [RemoteAttribute]
public bool HasReachedMinorVersionsLimit { get; public set; }
    [RemoteAttribute]
public bool IsNewSession { get; public set; }
    [RemoteAttribute]
public bool IsPartitionFlushed { get; public set; }
    [RemoteAttribute]
public SitePageCoAuthLockAction LockAction { get; public set; }
    [RemoteAttribute]
public int LockDuration { get; public set; }
    [RemoteAttribute]
public bool OverwriteExistingVersion { get; public set; }
    [RemoteAttribute]
public string SharedLockId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public SitePageCoAuthAction get_Action();
    public void set_Action(SitePageCoAuthAction value);
    public IList`1<AuthoringSchemaFeatureVersion> get_AuthoringSchemaFeatureVersions();
    public void set_AuthoringSchemaFeatureVersions(IList`1<AuthoringSchemaFeatureVersion> value);
    public bool get_HasReachedMinorVersionsLimit();
    public void set_HasReachedMinorVersionsLimit(bool value);
    public bool get_IsNewSession();
    public void set_IsNewSession(bool value);
    public bool get_IsPartitionFlushed();
    public void set_IsPartitionFlushed(bool value);
    public SitePageCoAuthLockAction get_LockAction();
    public void set_LockAction(SitePageCoAuthLockAction value);
    public int get_LockDuration();
    public void set_LockDuration(int value);
    public bool get_OverwriteExistingVersion();
    public void set_OverwriteExistingVersion(bool value);
    public string get_SharedLockId();
    public void set_SharedLockId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SitePageCollaborator")]
public class Microsoft.SharePoint.Client.Publishing.SitePageCollaborator : ClientValueObject {
    private string m_displayName;
    private string m_loginName;
    private int m_userId;
    [RemoteAttribute]
public string DisplayName { get; public set; }
    [RemoteAttribute]
public string LoginName { get; public set; }
    [RemoteAttribute]
public int UserId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public string get_LoginName();
    public void set_LoginName(string value);
    public int get_UserId();
    public void set_UserId(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SitePageFieldsData")]
public class Microsoft.SharePoint.Client.Publishing.SitePageFieldsData : ClientValueObject {
    private String[] m_authorByline;
    private SitePageAuthoringMetadata m_authoringMetadata;
    private string m_bannerImageUrl;
    private SitePageBoostProperties m_boostProperties;
    private string m_callToAction;
    private string m_canvasContent1;
    private string m_canvasJson1;
    private string m_categories;
    private SitePageCoAuthState m_coAuthState;
    private SitePageCollaborator[] m_collaborators;
    private string m_description;
    private string m_emailTranspileContent;
    private string m_hiddenHighlightsMetadata;
    private string m_hideListEditorMetadata;
    private string m_layoutWebpartsContent;
    private DateTime m_modified;
    private DateTime m_publishStartDate;
    private string m_teamsTranspileContent;
    private string m_title;
    private string m_topicHeader;
    private string m_webTranspileContent;
    [RemoteAttribute]
public String[] AuthorByline { get; public set; }
    [RemoteAttribute]
public SitePageAuthoringMetadata AuthoringMetadata { get; public set; }
    [RemoteAttribute]
public string BannerImageUrl { get; public set; }
    [RemoteAttribute]
public SitePageBoostProperties BoostProperties { get; public set; }
    [RemoteAttribute]
public string CallToAction { get; public set; }
    [RemoteAttribute]
public string CanvasContent1 { get; public set; }
    [RemoteAttribute]
public string CanvasJson1 { get; public set; }
    [RemoteAttribute]
public string Categories { get; public set; }
    [RemoteAttribute]
public SitePageCoAuthState CoAuthState { get; public set; }
    [RemoteAttribute]
public SitePageCollaborator[] Collaborators { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string EmailTranspileContent { get; public set; }
    [RemoteAttribute]
public string HiddenHighlightsMetadata { get; public set; }
    [RemoteAttribute]
public string HideListEditorMetadata { get; public set; }
    [RemoteAttribute]
public string LayoutWebpartsContent { get; public set; }
    [RemoteAttribute]
public DateTime Modified { get; public set; }
    [RemoteAttribute]
public DateTime PublishStartDate { get; public set; }
    [RemoteAttribute]
public string TeamsTranspileContent { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string TopicHeader { get; public set; }
    [RemoteAttribute]
public string WebTranspileContent { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public String[] get_AuthorByline();
    public void set_AuthorByline(String[] value);
    public SitePageAuthoringMetadata get_AuthoringMetadata();
    public void set_AuthoringMetadata(SitePageAuthoringMetadata value);
    public string get_BannerImageUrl();
    public void set_BannerImageUrl(string value);
    public SitePageBoostProperties get_BoostProperties();
    public void set_BoostProperties(SitePageBoostProperties value);
    public string get_CallToAction();
    public void set_CallToAction(string value);
    public string get_CanvasContent1();
    public void set_CanvasContent1(string value);
    public string get_CanvasJson1();
    public void set_CanvasJson1(string value);
    public string get_Categories();
    public void set_Categories(string value);
    public SitePageCoAuthState get_CoAuthState();
    public void set_CoAuthState(SitePageCoAuthState value);
    public SitePageCollaborator[] get_Collaborators();
    public void set_Collaborators(SitePageCollaborator[] value);
    public string get_Description();
    public void set_Description(string value);
    public string get_EmailTranspileContent();
    public void set_EmailTranspileContent(string value);
    public string get_HiddenHighlightsMetadata();
    public void set_HiddenHighlightsMetadata(string value);
    public string get_HideListEditorMetadata();
    public void set_HideListEditorMetadata(string value);
    public string get_LayoutWebpartsContent();
    public void set_LayoutWebpartsContent(string value);
    public DateTime get_Modified();
    public void set_Modified(DateTime value);
    public DateTime get_PublishStartDate();
    public void set_PublishStartDate(DateTime value);
    public string get_TeamsTranspileContent();
    public void set_TeamsTranspileContent(string value);
    public string get_Title();
    public void set_Title(string value);
    public string get_TopicHeader();
    public void set_TopicHeader(string value);
    public string get_WebTranspileContent();
    public void set_WebTranspileContent(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SitePageStreamContent")]
public class Microsoft.SharePoint.Client.Publishing.SitePageStreamContent : ClientValueObject {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[ScriptTypeAttribute("SP.Publishing.SitePageVersionInfo")]
public class Microsoft.SharePoint.Client.Publishing.SitePageVersionInfo : ClientValueObject {
    private DateTime m_lastVersionCreated;
    private string m_lastVersionCreatedBy;
    [RemoteAttribute]
public DateTime LastVersionCreated { get; public set; }
    [RemoteAttribute]
public string LastVersionCreatedBy { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_LastVersionCreated();
    public void set_LastVersionCreated(DateTime value);
    public string get_LastVersionCreatedBy();
    public void set_LastVersionCreatedBy(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SitePageVersionInfoCollection")]
public class Microsoft.SharePoint.Client.Publishing.SitePageVersionInfoCollection : ClientValueObject {
    private DateTime m_created;
    private string m_createdBy;
    [RemoteAttribute]
public DateTime Created { get; public set; }
    [RemoteAttribute]
public string CreatedBy { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_Created();
    public void set_Created(DateTime value);
    public string get_CreatedBy();
    public void set_CreatedBy(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SitePagStreamData")]
public class Microsoft.SharePoint.Client.Publishing.SitePagStreamData : ClientValueObject {
    private SitePageCoAuthState m_coAuthState;
    private IList`1<SitePageStreamContent> m_streamContents;
    [RemoteAttribute]
public SitePageCoAuthState CoAuthState { get; public set; }
    [RemoteAttribute]
public IList`1<SitePageStreamContent> StreamContents { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public SitePageCoAuthState get_CoAuthState();
    public void set_CoAuthState(SitePageCoAuthState value);
    public IList`1<SitePageStreamContent> get_StreamContents();
    public void set_StreamContents(IList`1<SitePageStreamContent> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SiteServicesAddins")]
public static class Microsoft.SharePoint.Client.Publishing.SiteServicesAddins : object {
    [RemoteAttribute]
public static AddinSettings GetSettings(ClientRuntimeContext context, Guid addinId);
    [RemoteAttribute]
public static void SetSettings(ClientRuntimeContext context, AddinSettings addin);
    [RemoteAttribute]
public static void DeleteSettings(ClientRuntimeContext context, Guid addinId);
    [RemoteAttribute]
public static AddinPlugin GetPlugin(ClientRuntimeContext context, string pluginName);
    [RemoteAttribute]
public static void SetPlugin(ClientRuntimeContext context, AddinPlugin plugin);
    [RemoteAttribute]
public static void DeletePlugin(ClientRuntimeContext context, string pluginName);
}
[ScriptTypeAttribute("SP.Publishing.SiteSharingEmailContext")]
public class Microsoft.SharePoint.Client.Publishing.SiteSharingEmailContext : ClientValueObject {
    private string m_customDescription;
    private string m_customTitle;
    private string m_message;
    private string m_url;
    [RemoteAttribute]
public string CustomDescription { get; public set; }
    [RemoteAttribute]
public string CustomTitle { get; public set; }
    [RemoteAttribute]
public string Message { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_CustomDescription();
    public void set_CustomDescription(string value);
    public string get_CustomTitle();
    public void set_CustomTitle(string value);
    public string get_Message();
    public void set_Message(string value);
    public string get_Url();
    public void set_Url(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SpotlightChannel")]
public class Microsoft.SharePoint.Client.Publishing.SpotlightChannel : ClientObject {
    [RemoteAttribute]
public VideoChannel Channel { get; }
    [RemoteAttribute]
public Guid ChannelId { get; public set; }
    [RemoteAttribute]
public int Id { get; }
    [RemoteAttribute]
public string TileHtmlColor { get; }
    [RemoteAttribute]
public string Title { get; }
    [RemoteAttribute]
public string VideoLibraryServerRelativeUrl { get; }
    [EditorBrowsableAttribute("1")]
public SpotlightChannel(ClientRuntimeContext context, ObjectPath objectPath);
    public VideoChannel get_Channel();
    public Guid get_ChannelId();
    public void set_ChannelId(Guid value);
    public int get_Id();
    public string get_TileHtmlColor();
    public string get_Title();
    public string get_VideoLibraryServerRelativeUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("SP.Publishing.SpotlightChannelCollection")]
public class Microsoft.SharePoint.Client.Publishing.SpotlightChannelCollection : ClientObjectCollection`1<SpotlightChannel> {
    [EditorBrowsableAttribute("1")]
public SpotlightChannelCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public SpotlightChannel GetById(int id);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.SpotlightChannelObjectPropertyNames : object {
    public static string Channel;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.SpotlightChannelPropertyNames : object {
    public static string ChannelId;
    public static string Id;
    public static string TileHtmlColor;
    public static string Title;
    public static string VideoLibraryServerRelativeUrl;
}
[ScriptTypeAttribute("SP.Publishing.SpotlightVideo")]
public class Microsoft.SharePoint.Client.Publishing.SpotlightVideo : ClientObject {
    [RemoteAttribute]
public int Id { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [RemoteAttribute]
public string Url { get; public set; }
    [RemoteAttribute]
public VideoItem Video { get; }
    [EditorBrowsableAttribute("1")]
public SpotlightVideo(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_Id();
    public string get_ServerRelativeUrl();
    public string get_Url();
    public void set_Url(string value);
    public VideoItem get_Video();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public virtual void Update();
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("SP.Publishing.SpotlightVideoCollection")]
public class Microsoft.SharePoint.Client.Publishing.SpotlightVideoCollection : ClientObjectCollection`1<SpotlightVideo> {
    [EditorBrowsableAttribute("1")]
public SpotlightVideoCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public SpotlightVideo GetById(int id);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.SpotlightVideoObjectPropertyNames : object {
    public static string Video;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.SpotlightVideoPropertyNames : object {
    public static string Id;
    public static string ServerRelativeUrl;
    public static string Url;
}
[ScriptTypeAttribute("SP.Publishing.StartCoAuthMetaData")]
public class Microsoft.SharePoint.Client.Publishing.StartCoAuthMetaData : ClientValueObject {
    private IList`1<AuthoringSchemaFeatureVersion> m_authoringSchemaFeatureVersions;
    private bool m_forceCheckin;
    private bool m_isUserConsentProvidedForModerationStatus;
    [RemoteAttribute]
public IList`1<AuthoringSchemaFeatureVersion> AuthoringSchemaFeatureVersions { get; public set; }
    [RemoteAttribute]
public bool ForceCheckin { get; public set; }
    [RemoteAttribute]
public bool IsUserConsentProvidedForModerationStatus { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<AuthoringSchemaFeatureVersion> get_AuthoringSchemaFeatureVersions();
    public void set_AuthoringSchemaFeatureVersions(IList`1<AuthoringSchemaFeatureVersion> value);
    public bool get_ForceCheckin();
    public void set_ForceCheckin(bool value);
    public bool get_IsUserConsentProvidedForModerationStatus();
    public void set_IsUserConsentProvidedForModerationStatus(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SubtitleCollection")]
public class Microsoft.SharePoint.Client.Publishing.SubtitleCollection : ClientObjectCollection`1<SubtitleFile> {
    [EditorBrowsableAttribute("1")]
public SubtitleCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public virtual ClientResult`1<Stream> GetSubtitleFile(string name);
}
[ScriptTypeAttribute("SP.Publishing.SubtitleFile")]
public class Microsoft.SharePoint.Client.Publishing.SubtitleFile : ClientObject {
    [RemoteAttribute]
public string Language { get; public set; }
    [RemoteAttribute]
public string NativeLanguageName { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [EditorBrowsableAttribute("1")]
public SubtitleFile(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Language();
    public void set_Language(string value);
    public string get_NativeLanguageName();
    public void set_NativeLanguageName(string value);
    public string get_Url();
    public void set_Url(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.SubtitleFilePropertyNames : object {
    public static string Language;
    public static string NativeLanguageName;
    public static string Url;
}
[ScriptTypeAttribute("SP.Publishing.TextValueWithLanguage")]
public class Microsoft.SharePoint.Client.Publishing.TextValueWithLanguage : ClientValueObject {
    private string m_colorSeed;
    private int m_lcid;
    private string m_text;
    [RemoteAttribute]
public string ColorSeed { get; public set; }
    [RemoteAttribute]
public int Lcid { get; public set; }
    [RemoteAttribute]
public string Text { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ColorSeed();
    public void set_ColorSeed(string value);
    public int get_Lcid();
    public void set_Lcid(int value);
    public string get_Text();
    public void set_Text(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.TopicPageFieldsData")]
public class Microsoft.SharePoint.Client.Publishing.TopicPageFieldsData : SitePageFieldsData {
    private string m_entityId;
    private string m_entityRelations;
    private string m_entityType;
    private string m_verifiedTopicAllowedEditors;
    [RemoteAttribute]
public string EntityId { get; public set; }
    [RemoteAttribute]
public string EntityRelations { get; public set; }
    [RemoteAttribute]
public string EntityType { get; public set; }
    [RemoteAttribute]
public string VerifiedTopicAllowedEditors { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_EntityId();
    public void set_EntityId(string value);
    public string get_EntityRelations();
    public void set_EntityRelations(string value);
    public string get_EntityType();
    public void set_EntityType(string value);
    public string get_VerifiedTopicAllowedEditors();
    public void set_VerifiedTopicAllowedEditors(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.VariationLabel")]
public class Microsoft.SharePoint.Client.Publishing.VariationLabel : ClientObject {
    [RemoteAttribute]
public string DisplayName { get; }
    [RemoteAttribute]
public bool IsSource { get; }
    [RemoteAttribute]
public string Language { get; }
    [RemoteAttribute]
public string Locale { get; }
    [RemoteAttribute]
public string Title { get; }
    [RemoteAttribute]
public string TopWebUrl { get; }
    [EditorBrowsableAttribute("1")]
public VariationLabel(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_DisplayName();
    public bool get_IsSource();
    public string get_Language();
    public string get_Locale();
    public string get_Title();
    public string get_TopWebUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.VariationLabelPropertyNames : object {
    public static string DisplayName;
    public static string IsSource;
    public static string Language;
    public static string Locale;
    public static string Title;
    public static string TopWebUrl;
}
[ScriptTypeAttribute("SP.Publishing.Variations")]
public class Microsoft.SharePoint.Client.Publishing.Variations : ClientObject {
    [EditorBrowsableAttribute("1")]
public Variations(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static ClientObjectList`1<VariationLabel> GetLabels(ClientRuntimeContext context);
    [RemoteAttribute]
public static ClientResult`1<string> GetPeerUrl(ClientRuntimeContext context, string currentUrl, string labelTitle);
    [RemoteAttribute]
public static void UpdateListItems(ClientRuntimeContext context, Guid listId, Int32[] itemIds);
}
[ScriptTypeAttribute("SP.Publishing.VideoChannel")]
public class Microsoft.SharePoint.Client.Publishing.VideoChannel : ClientObject {
    [RemoteAttribute]
public bool CanAdministrateByCurrent { get; }
    [RemoteAttribute]
public bool CanEditByCurrent { get; }
    [RemoteAttribute]
public bool CanViewByCurrent { get; }
    [RemoteAttribute]
public string ChannelPageUrl { get; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public ChannelPermission DownloadUrlVisibleMinPermission { get; public set; }
    [RemoteAttribute]
public string FullUrl { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public Search Search { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [RemoteAttribute]
public bool ShareByEmailEnabled { get; }
    [RemoteAttribute]
public SpotlightVideoCollection SpotlightVideos { get; }
    [RemoteAttribute]
public string TileHtmlColor { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public VideoCollection Videos { get; }
    [RemoteAttribute]
public int YammerDefaultGroupId { get; public set; }
    [RemoteAttribute]
public bool YammerEnabled { get; public set; }
    [EditorBrowsableAttribute("1")]
public VideoChannel(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_CanAdministrateByCurrent();
    public bool get_CanEditByCurrent();
    public bool get_CanViewByCurrent();
    public string get_ChannelPageUrl();
    public string get_Description();
    public void set_Description(string value);
    public ChannelPermission get_DownloadUrlVisibleMinPermission();
    public void set_DownloadUrlVisibleMinPermission(ChannelPermission value);
    public string get_FullUrl();
    public Guid get_Id();
    public Search get_Search();
    public string get_ServerRelativeUrl();
    public bool get_ShareByEmailEnabled();
    public SpotlightVideoCollection get_SpotlightVideos();
    public string get_TileHtmlColor();
    public void set_TileHtmlColor(string value);
    public string get_Title();
    public void set_Title(string value);
    public VideoCollection get_Videos();
    public int get_YammerDefaultGroupId();
    public void set_YammerDefaultGroupId(int value);
    public bool get_YammerEnabled();
    public void set_YammerEnabled(bool value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public virtual ClientResult`1<int> GetVideoCount();
    [RemoteAttribute]
public ClientResult`1<string> GetChannelPageUrl(ViewControlState viewMode);
    [RemoteAttribute]
public virtual void Update();
}
[ScriptTypeAttribute("SP.Publishing.VideoChannelCollection")]
public class Microsoft.SharePoint.Client.Publishing.VideoChannelCollection : ClientObjectCollection`1<VideoChannel> {
    [EditorBrowsableAttribute("1")]
public VideoChannelCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public VideoChannel GetById(Guid id);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.VideoChannelObjectPropertyNames : object {
    public static string Search;
    public static string SpotlightVideos;
    public static string Videos;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.VideoChannelPropertyNames : object {
    public static string CanAdministrateByCurrent;
    public static string CanEditByCurrent;
    public static string CanViewByCurrent;
    public static string ChannelPageUrl;
    public static string Description;
    public static string DownloadUrlVisibleMinPermission;
    public static string FullUrl;
    public static string Id;
    public static string ServerRelativeUrl;
    public static string ShareByEmailEnabled;
    public static string TileHtmlColor;
    public static string Title;
    public static string YammerDefaultGroupId;
    public static string YammerEnabled;
}
[ScriptTypeAttribute("SP.Publishing.VideoCollection")]
public class Microsoft.SharePoint.Client.Publishing.VideoCollection : ClientObjectCollection`1<VideoItem> {
    [EditorBrowsableAttribute("1")]
public VideoCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public VideoItem GetById(Guid id);
}
[ScriptTypeAttribute("SP.Publishing.VideoItem")]
public class Microsoft.SharePoint.Client.Publishing.VideoItem : ClientObject {
    [RemoteAttribute]
public User Author { get; }
    [RemoteAttribute]
public Guid ChannelID { get; }
    [RemoteAttribute]
public DateTime CreatedDate { get; }
    [RemoteAttribute]
public string DefaultEmbedCode { get; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string DisplayFormUrl { get; }
    [RemoteAttribute]
public string FileName { get; }
    [RemoteAttribute]
public User Owner { get; }
    [RemoteAttribute]
public string OwnerName { get; }
    [RemoteAttribute]
public UserCollection PeopleInMedia { get; }
    [RemoteAttribute]
public string PlayerPageUrl { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [RemoteAttribute]
public VideoThumbnailChoices ThumbnailSelection { get; public set; }
    [RemoteAttribute]
public string ThumbnailUrl { get; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public Guid ID { get; }
    [RemoteAttribute]
public string Url { get; }
    [RemoteAttribute]
public string VideoDownloadUrl { get; }
    [RemoteAttribute]
public int VideoDurationInSeconds { get; public set; }
    [RemoteAttribute]
public VideoProcessingStatus VideoProcessingStatus { get; }
    [RemoteAttribute]
public int ViewCount { get; }
    [RemoteAttribute]
public string YammerObjectUrl { get; }
    [EditorBrowsableAttribute("1")]
public VideoItem(ClientRuntimeContext context, ObjectPath objectPath);
    public User get_Author();
    public Guid get_ChannelID();
    public DateTime get_CreatedDate();
    public string get_DefaultEmbedCode();
    public string get_Description();
    public void set_Description(string value);
    public string get_DisplayFormUrl();
    public string get_FileName();
    public User get_Owner();
    public string get_OwnerName();
    public UserCollection get_PeopleInMedia();
    public string get_PlayerPageUrl();
    public string get_ServerRelativeUrl();
    public VideoThumbnailChoices get_ThumbnailSelection();
    public void set_ThumbnailSelection(VideoThumbnailChoices value);
    public string get_ThumbnailUrl();
    public string get_Title();
    public void set_Title(string value);
    public Guid get_ID();
    public string get_Url();
    public string get_VideoDownloadUrl();
    public int get_VideoDurationInSeconds();
    public void set_VideoDurationInSeconds(int value);
    public VideoProcessingStatus get_VideoProcessingStatus();
    public int get_ViewCount();
    public string get_YammerObjectUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public virtual ClientResult`1<string> GetPlaybackUrl(VideoStreamingFormat videoFormat);
    [RemoteAttribute]
public virtual ClientResult`1<string> GetStreamingKeyAccessToken();
    [RemoteAttribute]
public virtual VideoPlaybackMetadata GetPlaybackMetadata(string sdnConfiguration);
    [RemoteAttribute]
public virtual void Update();
    [RemoteAttribute]
public virtual void DeleteObject();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.VideoItemObjectPropertyNames : object {
    public static string Author;
    public static string Owner;
    public static string PeopleInMedia;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.VideoItemPropertyNames : object {
    public static string ChannelID;
    public static string CreatedDate;
    public static string DefaultEmbedCode;
    public static string Description;
    public static string DisplayFormUrl;
    public static string FileName;
    public static string OwnerName;
    public static string PlayerPageUrl;
    public static string ServerRelativeUrl;
    public static string ThumbnailSelection;
    public static string ThumbnailUrl;
    public static string Title;
    public static string ID;
    public static string Url;
    public static string VideoDownloadUrl;
    public static string VideoDurationInSeconds;
    public static string VideoProcessingStatus;
    public static string ViewCount;
    public static string YammerObjectUrl;
}
[ScriptTypeAttribute("SP.Publishing.VideoPermissionGroup")]
public class Microsoft.SharePoint.Client.Publishing.VideoPermissionGroup : ClientObject {
    [RemoteAttribute]
public int Id { get; }
    [RemoteAttribute]
public UserCollection Users { get; }
    [EditorBrowsableAttribute("1")]
public VideoPermissionGroup(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_Id();
    public UserCollection get_Users();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.VideoPermissionGroupObjectPropertyNames : object {
    public static string Users;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.VideoPermissionGroupPropertyNames : object {
    public static string Id;
}
[ScriptTypeAttribute("SP.Publishing.VideoPlaybackMetadata")]
public class Microsoft.SharePoint.Client.Publishing.VideoPlaybackMetadata : ClientObject {
    [RemoteAttribute]
public string HLSUrl { get; }
    [RemoteAttribute]
public string SdnPlaybackMetadata { get; }
    [RemoteAttribute]
public string StreamingUrl { get; }
    [RemoteAttribute]
public string Token { get; }
    [EditorBrowsableAttribute("1")]
public VideoPlaybackMetadata(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_HLSUrl();
    public string get_SdnPlaybackMetadata();
    public string get_StreamingUrl();
    public string get_Token();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.VideoPlaybackMetadataPropertyNames : object {
    public static string HLSUrl;
    public static string SdnPlaybackMetadata;
    public static string StreamingUrl;
    public static string Token;
}
public enum Microsoft.SharePoint.Client.Publishing.VideoPlaybackOrigin : Enum {
    public int value__;
    public static VideoPlaybackOrigin Other;
    public static VideoPlaybackOrigin VideoPortal;
    public static VideoPlaybackOrigin EmbeddedPlayer;
}
public enum Microsoft.SharePoint.Client.Publishing.VideoProcessingStatus : Enum {
    public int value__;
    public static VideoProcessingStatus PendingProcessing;
    public static VideoProcessingStatus Processing;
    public static VideoProcessingStatus ReadyForPlay;
    public static VideoProcessingStatus ErrorOnUploading;
    public static VideoProcessingStatus ErrorOnProcessing;
    public static VideoProcessingStatus Timeout;
    public static VideoProcessingStatus UnsupportedFormat;
    public static VideoProcessingStatus CorruptedFile;
}
public enum Microsoft.SharePoint.Client.Publishing.VideoStreamingFormat : Enum {
    public int value__;
    public static VideoStreamingFormat HLS;
    public static VideoStreamingFormat Streaming;
}
[ScriptTypeAttribute("SP.Publishing.VideoThumbnail")]
public class Microsoft.SharePoint.Client.Publishing.VideoThumbnail : ClientObject {
    [RemoteAttribute]
public VideoThumbnailChoices Choice { get; }
    [RemoteAttribute]
public bool IsSelected { get; }
    [RemoteAttribute]
public string Url { get; }
    [EditorBrowsableAttribute("1")]
public VideoThumbnail(ClientRuntimeContext context, ObjectPath objectPath);
    public VideoThumbnailChoices get_Choice();
    public bool get_IsSelected();
    public string get_Url();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.Publishing.VideoThumbnailChoices : Enum {
    public int value__;
    public static VideoThumbnailChoices Custom;
    public static VideoThumbnailChoices First;
    public static VideoThumbnailChoices Second;
    public static VideoThumbnailChoices Third;
    public static VideoThumbnailChoices Fourth;
    public static VideoThumbnailChoices Fifth;
}
[ScriptTypeAttribute("SP.Publishing.VideoThumbnailCollection")]
public class Microsoft.SharePoint.Client.Publishing.VideoThumbnailCollection : ClientObjectCollection`1<VideoThumbnail> {
    [EditorBrowsableAttribute("1")]
public VideoThumbnailCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public virtual VideoThumbnail GetByIndex(VideoThumbnailChoices choice);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Publishing.VideoThumbnailPropertyNames : object {
    public static string Choice;
    public static string IsSelected;
    public static string Url;
}
public enum Microsoft.SharePoint.Client.Publishing.ViewControlState : Enum {
    public int value__;
    public static ViewControlState DefaultState;
    public static ViewControlState Popular;
    public static ViewControlState Newest;
    public static ViewControlState MyVideos;
}
public enum Microsoft.SharePoint.Client.PublishingStatus : Enum {
    public int value__;
    public static PublishingStatus None;
    public static PublishingStatus Publishing;
    public static PublishingStatus Failed;
    public static PublishingStatus Successful;
}
[ScriptTypeAttribute("SP.Publishing.PublishingStatusResponse")]
public class Microsoft.SharePoint.Client.PublishingStatusResponse : ClientValueObject {
    private EmailPublishingStatus m_emailPublishingStatus;
    private DateTime m_lastTriedAt;
    private int m_prePublishValidationErrorCode;
    private PublishingStatus m_publishingStatus;
    private IList`1<SharePointPublishingStatusResponse> m_sharePointPublishingStatus;
    private IList`1<TeamsPublishingStatusResponse> m_teamsPublishingStatus;
    private VivaEngagePublishingStatus m_vivaEngagePublishingStatus;
    private IDictionary`2<string, string> m_yammerPublishingStatus;
    [RemoteAttribute]
public EmailPublishingStatus EmailPublishingStatus { get; public set; }
    [RemoteAttribute]
public DateTime LastTriedAt { get; public set; }
    [RemoteAttribute]
public int PrePublishValidationErrorCode { get; public set; }
    [RemoteAttribute]
public PublishingStatus PublishingStatus { get; public set; }
    [RemoteAttribute]
public IList`1<SharePointPublishingStatusResponse> SharePointPublishingStatus { get; public set; }
    [RemoteAttribute]
public IList`1<TeamsPublishingStatusResponse> TeamsPublishingStatus { get; public set; }
    [RemoteAttribute]
public VivaEngagePublishingStatus VivaEngagePublishingStatus { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, string> YammerPublishingStatus { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public EmailPublishingStatus get_EmailPublishingStatus();
    public void set_EmailPublishingStatus(EmailPublishingStatus value);
    public DateTime get_LastTriedAt();
    public void set_LastTriedAt(DateTime value);
    public int get_PrePublishValidationErrorCode();
    public void set_PrePublishValidationErrorCode(int value);
    public PublishingStatus get_PublishingStatus();
    public void set_PublishingStatus(PublishingStatus value);
    public IList`1<SharePointPublishingStatusResponse> get_SharePointPublishingStatus();
    public void set_SharePointPublishingStatus(IList`1<SharePointPublishingStatusResponse> value);
    public IList`1<TeamsPublishingStatusResponse> get_TeamsPublishingStatus();
    public void set_TeamsPublishingStatus(IList`1<TeamsPublishingStatusResponse> value);
    public VivaEngagePublishingStatus get_VivaEngagePublishingStatus();
    public void set_VivaEngagePublishingStatus(VivaEngagePublishingStatus value);
    public IDictionary`2<string, string> get_YammerPublishingStatus();
    public void set_YammerPublishingStatus(IDictionary`2<string, string> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.PublishPublicationResponse")]
public class Microsoft.SharePoint.Client.PublishPublicationResponse : ClientValueObject {
    private int m_errorCode;
    private string m_message;
    private bool m_status;
    [RemoteAttribute]
public int ErrorCode { get; public set; }
    [RemoteAttribute]
public string Message { get; public set; }
    [RemoteAttribute]
public bool Status { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_ErrorCode();
    public void set_ErrorCode(int value);
    public string get_Message();
    public void set_Message(string value);
    public bool get_Status();
    public void set_Status(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SchedulePublicationResponse")]
public class Microsoft.SharePoint.Client.SchedulePublicationResponse : ClientValueObject {
    private PublicationStatus m_publicationStatus;
    [RemoteAttribute]
public PublicationStatus PublicationStatus { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public PublicationStatus get_PublicationStatus();
    public void set_PublicationStatus(PublicationStatus value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SendTestEmailResponse")]
public class Microsoft.SharePoint.Client.SendTestEmailResponse : ClientValueObject {
    private int m_errorCode;
    private bool m_response;
    [RemoteAttribute]
public int ErrorCode { get; public set; }
    [RemoteAttribute]
public bool Response { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_ErrorCode();
    public void set_ErrorCode(int value);
    public bool get_Response();
    public void set_Response(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SendTestTeamsMessageResponse")]
public class Microsoft.SharePoint.Client.SendTestTeamsMessageResponse : ClientValueObject {
    private int m_errorCode;
    private bool m_response;
    [RemoteAttribute]
public int ErrorCode { get; public set; }
    [RemoteAttribute]
public bool Response { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_ErrorCode();
    public void set_ErrorCode(int value);
    public bool get_Response();
    public void set_Response(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SharePointPublishingStatus")]
public class Microsoft.SharePoint.Client.SharePointPublishingStatus : ClientValueObject {
    private string m_destinationPageURL;
    private int m_errorCode;
    private PublishingStatus m_status;
    [RemoteAttribute]
public string DestinationPageURL { get; public set; }
    [RemoteAttribute]
public int ErrorCode { get; public set; }
    [RemoteAttribute]
public PublishingStatus Status { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DestinationPageURL();
    public void set_DestinationPageURL(string value);
    public int get_ErrorCode();
    public void set_ErrorCode(int value);
    public PublishingStatus get_Status();
    public void set_Status(PublishingStatus value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.SharePointPublishingStatusResponse")]
public class Microsoft.SharePoint.Client.SharePointPublishingStatusResponse : ClientValueObject {
    private string m_siteId;
    private SharePointPublishingStatus m_status;
    [RemoteAttribute]
public string SiteId { get; public set; }
    [RemoteAttribute]
public SharePointPublishingStatus Status { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_SiteId();
    public void set_SiteId(string value);
    public SharePointPublishingStatus get_Status();
    public void set_Status(SharePointPublishingStatus value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.TeamsPublishingStatus")]
public class Microsoft.SharePoint.Client.TeamsPublishingStatus : ClientValueObject {
    private string m_audienceId;
    private int m_errorCode;
    private string m_errorMessage;
    private int m_httpStatusCode;
    private PublishingStatus m_status;
    [RemoteAttribute]
public string AudienceId { get; public set; }
    [RemoteAttribute]
public int ErrorCode { get; public set; }
    [RemoteAttribute]
public string ErrorMessage { get; public set; }
    [RemoteAttribute]
public int HttpStatusCode { get; public set; }
    [RemoteAttribute]
public PublishingStatus Status { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AudienceId();
    public void set_AudienceId(string value);
    public int get_ErrorCode();
    public void set_ErrorCode(int value);
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    public int get_HttpStatusCode();
    public void set_HttpStatusCode(int value);
    public PublishingStatus get_Status();
    public void set_Status(PublishingStatus value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Publishing.TeamsPublishingStatusResponse")]
public class Microsoft.SharePoint.Client.TeamsPublishingStatusResponse : ClientValueObject {
    private string m_audienceId;
    private TeamsPublishingStatus m_status;
    [RemoteAttribute]
public string AudienceId { get; public set; }
    [RemoteAttribute]
public TeamsPublishingStatus Status { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AudienceId();
    public void set_AudienceId(string value);
    public TeamsPublishingStatus get_Status();
    public void set_Status(TeamsPublishingStatus value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.VivaEngageDestinationType : Enum {
    public int value__;
    public static VivaEngageDestinationType Community;
    public static VivaEngageDestinationType Storyline;
}
[ScriptTypeAttribute("SP.Publishing.VivaEngagePublishingStatus")]
public class Microsoft.SharePoint.Client.VivaEngagePublishingStatus : ClientValueObject {
    private string m_destinationId;
    private int m_errorCode;
    private string m_errorMessage;
    private PublishingStatus m_status;
    [RemoteAttribute]
public string DestinationId { get; public set; }
    [RemoteAttribute]
public int ErrorCode { get; public set; }
    [RemoteAttribute]
public string ErrorMessage { get; public set; }
    [RemoteAttribute]
public PublishingStatus Status { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DestinationId();
    public void set_DestinationId(string value);
    public int get_ErrorCode();
    public void set_ErrorCode(int value);
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    public PublishingStatus get_Status();
    public void set_Status(PublishingStatus value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
