[ScriptTypeAttribute("SP.Taxonomy.ChangedGroup")]
public class Microsoft.SharePoint.Client.Taxonomy.ChangedGroup : ChangedItem {
    [EditorBrowsableAttribute("1")]
public ChangedGroup(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.Taxonomy.ChangedItem")]
public class Microsoft.SharePoint.Client.Taxonomy.ChangedItem : ClientObject {
    [RemoteAttribute]
public string ChangedBy { get; }
    [RemoteAttribute]
public DateTime ChangedTime { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public ChangedItemType ItemType { get; }
    [RemoteAttribute]
public ChangedOperationType Operation { get; }
    [EditorBrowsableAttribute("1")]
public ChangedItem(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_ChangedBy();
    public DateTime get_ChangedTime();
    public Guid get_Id();
    public ChangedItemType get_ItemType();
    public ChangedOperationType get_Operation();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Taxonomy.ChangedItemCollection")]
public class Microsoft.SharePoint.Client.Taxonomy.ChangedItemCollection : ClientObjectCollection`1<ChangedItem> {
    [EditorBrowsableAttribute("1")]
public ChangedItemCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.ChangedItemPropertyNames : object {
    public static string ChangedBy;
    public static string ChangedTime;
    public static string Id;
    public static string ItemType;
    public static string Operation;
}
public enum Microsoft.SharePoint.Client.Taxonomy.ChangedItemType : Enum {
    public int value__;
    public static ChangedItemType Unknown;
    public static ChangedItemType Term;
    public static ChangedItemType TermSet;
    public static ChangedItemType Group;
    public static ChangedItemType TermStore;
    public static ChangedItemType Site;
}
public enum Microsoft.SharePoint.Client.Taxonomy.ChangedOperationType : Enum {
    public int value__;
    public static ChangedOperationType Unknown;
    public static ChangedOperationType Add;
    public static ChangedOperationType Edit;
    public static ChangedOperationType DeleteObject;
    public static ChangedOperationType Move;
    public static ChangedOperationType Copy;
    public static ChangedOperationType PathChange;
    public static ChangedOperationType Merge;
    public static ChangedOperationType ImportObject;
    public static ChangedOperationType Restore;
}
[ScriptTypeAttribute("SP.Taxonomy.ChangedSite")]
public class Microsoft.SharePoint.Client.Taxonomy.ChangedSite : ChangedItem {
    [RemoteAttribute]
public Guid SiteId { get; }
    [RemoteAttribute]
public Guid TermId { get; }
    [RemoteAttribute]
public Guid TermSetId { get; }
    [EditorBrowsableAttribute("1")]
public ChangedSite(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_SiteId();
    public Guid get_TermId();
    public Guid get_TermSetId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.ChangedSitePropertyNames : object {
    public static string SiteId;
    public static string TermId;
    public static string TermSetId;
}
[ScriptTypeAttribute("SP.Taxonomy.ChangedTerm")]
public class Microsoft.SharePoint.Client.Taxonomy.ChangedTerm : ChangedItem {
    [RemoteAttribute]
public IEnumerable`1<string> ChangedCustomProperties { get; }
    [RemoteAttribute]
public IEnumerable`1<string> ChangedLocalCustomProperties { get; }
    [RemoteAttribute]
public Guid GroupId { get; }
    [RemoteAttribute]
public IEnumerable`1<int> LcidsForChangedDescriptions { get; }
    [RemoteAttribute]
public IEnumerable`1<int> LcidsForChangedLabels { get; }
    [RemoteAttribute]
public Guid TermSetId { get; }
    [EditorBrowsableAttribute("1")]
public ChangedTerm(ClientRuntimeContext context, ObjectPath objectPath);
    public IEnumerable`1<string> get_ChangedCustomProperties();
    public IEnumerable`1<string> get_ChangedLocalCustomProperties();
    public Guid get_GroupId();
    public IEnumerable`1<int> get_LcidsForChangedDescriptions();
    public IEnumerable`1<int> get_LcidsForChangedLabels();
    public Guid get_TermSetId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.ChangedTermPropertyNames : object {
    public static string ChangedCustomProperties;
    public static string ChangedLocalCustomProperties;
    public static string GroupId;
    public static string LcidsForChangedDescriptions;
    public static string LcidsForChangedLabels;
    public static string TermSetId;
}
[ScriptTypeAttribute("SP.Taxonomy.ChangedTermSet")]
public class Microsoft.SharePoint.Client.Taxonomy.ChangedTermSet : ChangedItem {
    [RemoteAttribute]
public Guid FromGroupId { get; }
    [RemoteAttribute]
public Guid GroupId { get; }
    [EditorBrowsableAttribute("1")]
public ChangedTermSet(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_FromGroupId();
    public Guid get_GroupId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.ChangedTermSetPropertyNames : object {
    public static string FromGroupId;
    public static string GroupId;
}
[ScriptTypeAttribute("SP.Taxonomy.ChangedTermStore")]
public class Microsoft.SharePoint.Client.Taxonomy.ChangedTermStore : ChangedItem {
    [RemoteAttribute]
public int ChangedLanguage { get; }
    [RemoteAttribute]
public bool IsDefaultLanguageChanged { get; }
    [RemoteAttribute]
public bool IsFullFarmRestore { get; }
    [EditorBrowsableAttribute("1")]
public ChangedTermStore(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_ChangedLanguage();
    public bool get_IsDefaultLanguageChanged();
    public bool get_IsFullFarmRestore();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.ChangedTermStorePropertyNames : object {
    public static string ChangedLanguage;
    public static string IsDefaultLanguageChanged;
    public static string IsFullFarmRestore;
}
[ScriptTypeAttribute("SP.Taxonomy.ChangeInformation")]
public class Microsoft.SharePoint.Client.Taxonomy.ChangeInformation : ClientObject {
    [RemoteAttribute]
public ChangedItemType ItemType { get; public set; }
    [RemoteAttribute]
public ChangedOperationType OperationType { get; public set; }
    [RemoteAttribute]
public DateTime StartTime { get; public set; }
    [RemoteAttribute]
public TimeSpan WithinTimeSpan { get; public set; }
    public ChangeInformation(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public ChangeInformation(ClientRuntimeContext context, ObjectPath objectPath);
    public ChangedItemType get_ItemType();
    public void set_ItemType(ChangedItemType value);
    public ChangedOperationType get_OperationType();
    public void set_OperationType(ChangedOperationType value);
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    public TimeSpan get_WithinTimeSpan();
    public void set_WithinTimeSpan(TimeSpan value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.ChangeInformationPropertyNames : object {
    public static string ItemType;
    public static string OperationType;
    public static string StartTime;
    public static string WithinTimeSpan;
}
[ScriptTypeAttribute("SP.Taxonomy.ContentTypeSync.ContentTypeInfo")]
public class Microsoft.SharePoint.Client.Taxonomy.ContentTypeSync.ContentTypeInfo : ClientValueObject {
    private string m_description;
    private string m_group;
    private string m_id;
    private bool m_isHidden;
    private bool m_isSealed;
    private string m_name;
    private string m_parentName;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string Group { get; public set; }
    [RemoteAttribute]
public string Id { get; public set; }
    [RemoteAttribute]
public bool IsHidden { get; public set; }
    [RemoteAttribute]
public bool IsSealed { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string ParentName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public string get_Group();
    public void set_Group(string value);
    public string get_Id();
    public void set_Id(string value);
    public bool get_IsHidden();
    public void set_IsHidden(bool value);
    public bool get_IsSealed();
    public void set_IsSealed(bool value);
    public string get_Name();
    public void set_Name(string value);
    public string get_ParentName();
    public void set_ParentName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Taxonomy.ContentTypeSync.ContentTypePublisher")]
public class Microsoft.SharePoint.Client.Taxonomy.ContentTypeSync.ContentTypePublisher : ClientObject {
    public ContentTypePublisher(ClientRuntimeContext context, Site hubSite);
    [EditorBrowsableAttribute("1")]
public ContentTypePublisher(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public void Publish(ContentType contentType, bool republish);
    [RemoteAttribute]
public void Unpublish(ContentType contentType);
    [RemoteAttribute]
public ClientResult`1<bool> IsPublished(ContentType contentType);
}
[ScriptTypeAttribute("SP.Taxonomy.ContentTypeSync.ContentTypeSubscriber")]
public class Microsoft.SharePoint.Client.Taxonomy.ContentTypeSync.ContentTypeSubscriber : ClientObject {
    public ContentTypeSubscriber(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public ContentTypeSubscriber(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public ClientResult`1<ContentTypeSyndicationResult> SyncContentTypesFromHubSite(string siteUrl, IList`1<ContentTypeId> contentTypeIdsToSync);
    [RemoteAttribute]
public ClientResult`1<ContentTypeSyndicationResult> SyncContentTypesFromHubSite2(string siteUrl, IList`1<string> contentTypeIdsToSync);
    [RemoteAttribute]
public IList`1<ContentTypeInfo> GetCompatibleHubContentTypes(string webUrl, string listUrl);
}
[ScriptTypeAttribute("SP.Taxonomy.ContentTypeSync.ContentTypeSyndicationResult")]
public class Microsoft.SharePoint.Client.Taxonomy.ContentTypeSync.ContentTypeSyndicationResult : ClientValueObject {
    private IList`1<string> m_failedContentTypeErrors;
    private IList`1<string> m_failedContentTypeIDs;
    private eFailedReason m_failedReason;
    private bool m_isPassed;
    [RemoteAttribute]
public IList`1<string> FailedContentTypeErrors { get; }
    [RemoteAttribute]
public IList`1<string> FailedContentTypeIDs { get; }
    [RemoteAttribute]
public eFailedReason FailedReason { get; public set; }
    [RemoteAttribute]
public bool IsPassed { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<string> get_FailedContentTypeErrors();
    public IList`1<string> get_FailedContentTypeIDs();
    public eFailedReason get_FailedReason();
    public void set_FailedReason(eFailedReason value);
    public bool get_IsPassed();
    public void set_IsPassed(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.Taxonomy.ContentTypeSync.eFailedReason : Enum {
    public int value__;
    public static eFailedReason Unknown;
    public static eFailedReason InvalidSubscriptionID;
    public static eFailedReason InvalidSiteID;
    public static eFailedReason Readonly;
    public static eFailedReason FailedAccess;
    public static eFailedReason TaxonomyDisabled;
    public static eFailedReason TemplateNotSupported;
    public static eFailedReason FewContentTypesFailedToSync;
    public static eFailedReason PreCheckFailedColumn;
    public static eFailedReason PreCheckFailedContentTypeName;
    public static eFailedReason PreCheckFailedFeatures;
    public static eFailedReason PackageRetrievingFailed;
}
[ScriptTypeAttribute("SP.Taxonomy.CustomPropertyMatchInformation")]
public class Microsoft.SharePoint.Client.Taxonomy.CustomPropertyMatchInformation : ClientObject {
    [RemoteAttribute]
public string CustomPropertyName { get; public set; }
    [RemoteAttribute]
public string CustomPropertyValue { get; public set; }
    [RemoteAttribute]
public int ResultCollectionSize { get; public set; }
    [RemoteAttribute]
public StringMatchOption StringMatchOption { get; public set; }
    [RemoteAttribute]
public bool TrimUnavailable { get; public set; }
    public CustomPropertyMatchInformation(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public CustomPropertyMatchInformation(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_CustomPropertyName();
    public void set_CustomPropertyName(string value);
    public string get_CustomPropertyValue();
    public void set_CustomPropertyValue(string value);
    public int get_ResultCollectionSize();
    public void set_ResultCollectionSize(int value);
    public StringMatchOption get_StringMatchOption();
    public void set_StringMatchOption(StringMatchOption value);
    public bool get_TrimUnavailable();
    public void set_TrimUnavailable(bool value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.CustomPropertyMatchInformationPropertyNames : object {
    public static string CustomPropertyName;
    public static string CustomPropertyValue;
    public static string ResultCollectionSize;
    public static string StringMatchOption;
    public static string TrimUnavailable;
}
[ScriptTypeAttribute("SP.Taxonomy.Label")]
public class Microsoft.SharePoint.Client.Taxonomy.Label : ClientObject {
    [RemoteAttribute]
public bool IsDefaultForLanguage { get; }
    [RemoteAttribute]
public int Language { get; public set; }
    [RemoteAttribute]
public Term Term { get; }
    [RemoteAttribute]
public string Value { get; public set; }
    [EditorBrowsableAttribute("1")]
public Label(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_IsDefaultForLanguage();
    public int get_Language();
    public void set_Language(int value);
    public Term get_Term();
    public string get_Value();
    public void set_Value(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public void SetAsDefaultForLanguage();
}
[ScriptTypeAttribute("SP.Taxonomy.LabelCollection")]
public class Microsoft.SharePoint.Client.Taxonomy.LabelCollection : ClientObjectCollection`1<Label> {
    [EditorBrowsableAttribute("1")]
public LabelCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Label GetByValue(string index);
}
[ScriptTypeAttribute("SP.Taxonomy.LabelMatchInformation")]
public class Microsoft.SharePoint.Client.Taxonomy.LabelMatchInformation : ClientObject {
    [RemoteAttribute]
public bool DefaultLabelOnly { get; public set; }
    [RemoteAttribute]
public bool ExcludeKeyword { get; public set; }
    [RemoteAttribute]
public int Lcid { get; public set; }
    [RemoteAttribute]
public int ResultCollectionSize { get; public set; }
    [RemoteAttribute]
public StringMatchOption StringMatchOption { get; public set; }
    [RemoteAttribute]
public string TermLabel { get; public set; }
    [RemoteAttribute]
public bool TrimDeprecated { get; public set; }
    [RemoteAttribute]
public bool TrimUnavailable { get; public set; }
    public LabelMatchInformation(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public LabelMatchInformation(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_DefaultLabelOnly();
    public void set_DefaultLabelOnly(bool value);
    public bool get_ExcludeKeyword();
    public void set_ExcludeKeyword(bool value);
    public int get_Lcid();
    public void set_Lcid(int value);
    public int get_ResultCollectionSize();
    public void set_ResultCollectionSize(int value);
    public StringMatchOption get_StringMatchOption();
    public void set_StringMatchOption(StringMatchOption value);
    public string get_TermLabel();
    public void set_TermLabel(string value);
    public bool get_TrimDeprecated();
    public void set_TrimDeprecated(bool value);
    public bool get_TrimUnavailable();
    public void set_TrimUnavailable(bool value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.LabelMatchInformationPropertyNames : object {
    public static string DefaultLabelOnly;
    public static string ExcludeKeyword;
    public static string Lcid;
    public static string ResultCollectionSize;
    public static string StringMatchOption;
    public static string TermLabel;
    public static string TrimDeprecated;
    public static string TrimUnavailable;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.LabelObjectPropertyNames : object {
    public static string Term;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.LabelPropertyNames : object {
    public static string IsDefaultForLanguage;
    public static string Language;
    public static string Value;
}
[ScriptTypeAttribute("SP.Taxonomy.MobileTaxonomyField")]
public class Microsoft.SharePoint.Client.Taxonomy.MobileTaxonomyField : ClientObject {
    [RemoteAttribute]
public bool ReadOnly { get; }
    [EditorBrowsableAttribute("1")]
public MobileTaxonomyField(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_ReadOnly();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.MobileTaxonomyFieldPropertyNames : object {
    public static string ReadOnly;
}
public class Microsoft.SharePoint.Client.Taxonomy.ScriptTypeFactory : object {
    public sealed virtual IFromJson CreateObjectFromScriptType(string scriptType, ClientRuntimeContext context);
}
public enum Microsoft.SharePoint.Client.Taxonomy.StringMatchOption : Enum {
    public int value__;
    public static StringMatchOption StartsWith;
    public static StringMatchOption ExactMatch;
}
[ScriptTypeAttribute("SP.Taxonomy.TaxonomyField")]
public class Microsoft.SharePoint.Client.Taxonomy.TaxonomyField : FieldLookup {
    [RemoteAttribute]
public Guid AnchorId { get; public set; }
    [RemoteAttribute]
public bool CreateValuesInEditForm { get; public set; }
    [RemoteAttribute]
public bool IsAnchorValid { get; }
    [RemoteAttribute]
public bool IsDocTagsEnabled { get; public set; }
    [RemoteAttribute]
public bool IsEnhancedImageTaggingEnabled { get; public set; }
    [RemoteAttribute]
public bool IsKeyword { get; public set; }
    [RemoteAttribute]
public bool IsPathRendered { get; public set; }
    [RemoteAttribute]
public bool IsTermSetValid { get; }
    [RemoteAttribute]
public bool Open { get; public set; }
    [RemoteAttribute]
public Guid SspId { get; public set; }
    [RemoteAttribute]
public string TargetTemplate { get; public set; }
    [RemoteAttribute]
public Guid TermSetId { get; public set; }
    [RemoteAttribute]
public Guid TextField { get; }
    [RemoteAttribute]
public bool UserCreated { get; public set; }
    [EditorBrowsableAttribute("1")]
public TaxonomyField(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_AnchorId();
    public void set_AnchorId(Guid value);
    public bool get_CreateValuesInEditForm();
    public void set_CreateValuesInEditForm(bool value);
    public bool get_IsAnchorValid();
    public bool get_IsDocTagsEnabled();
    public void set_IsDocTagsEnabled(bool value);
    public bool get_IsEnhancedImageTaggingEnabled();
    public void set_IsEnhancedImageTaggingEnabled(bool value);
    public bool get_IsKeyword();
    public void set_IsKeyword(bool value);
    public bool get_IsPathRendered();
    public void set_IsPathRendered(bool value);
    public bool get_IsTermSetValid();
    public bool get_Open();
    public void set_Open(bool value);
    public Guid get_SspId();
    public void set_SspId(Guid value);
    public string get_TargetTemplate();
    public void set_TargetTemplate(string value);
    public Guid get_TermSetId();
    public void set_TermSetId(Guid value);
    public Guid get_TextField();
    public bool get_UserCreated();
    public void set_UserCreated(bool value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public virtual ClientResult`1<string> GetFieldValueAsText(object value);
    [RemoteAttribute]
public ClientResult`1<TaxonomyFieldValue> GetFieldValueAsTaxonomyFieldValue(string value);
    [RemoteAttribute]
public TaxonomyFieldValueCollection GetFieldValueAsTaxonomyFieldValueCollection(string value);
    [RemoteAttribute]
public void SetFieldValueByTerm(ListItem item, Term term, int lcid);
    [RemoteAttribute]
public void SetFieldValueByTermCollection(ListItem item, TermCollection terms, int lcid);
    [RemoteAttribute]
public void SetFieldValueByCollection(ListItem item, Collection`1<Term> terms, int lcid);
    [RemoteAttribute]
public void SetFieldValueByValue(ListItem item, TaxonomyFieldValue taxValue);
    [RemoteAttribute]
public void SetFieldValueByValueCollection(ListItem item, TaxonomyFieldValueCollection taxValueCollection);
    [RemoteAttribute]
public virtual ClientResult`1<string> GetFieldValueAsHtml(object value);
    [RemoteAttribute]
public virtual ClientResult`1<string> GetValidatedString(object value);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldPropertyNames : object {
    public static string AnchorId;
    public static string CreateValuesInEditForm;
    public static string IsAnchorValid;
    public static string IsDocTagsEnabled;
    public static string IsEnhancedImageTaggingEnabled;
    public static string IsKeyword;
    public static string IsPathRendered;
    public static string IsTermSetValid;
    public static string Open;
    public static string SspId;
    public static string TargetTemplate;
    public static string TermSetId;
    public static string TextField;
    public static string UserCreated;
}
[ScriptTypeAttribute("SP.Taxonomy.TaxonomyFieldValue")]
public class Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValue : ClientValueObject {
    private string m_label;
    private string m_termGuid;
    private int m_wssId;
    [RemoteAttribute]
public string Label { get; public set; }
    [RemoteAttribute]
public string TermGuid { get; public set; }
    [RemoteAttribute]
public int WssId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Label();
    public void set_Label(string value);
    public string get_TermGuid();
    public void set_TermGuid(string value);
    public int get_WssId();
    public void set_WssId(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Taxonomy.TaxonomyFieldValueCollection")]
public class Microsoft.SharePoint.Client.Taxonomy.TaxonomyFieldValueCollection : ClientObjectCollection`1<TaxonomyFieldValue> {
    public TaxonomyFieldValueCollection(ClientRuntimeContext context, string fieldValue, Field creatingField);
    [EditorBrowsableAttribute("1")]
public TaxonomyFieldValueCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public void PopulateFromLabelGuidPairs(string text);
}
[ScriptTypeAttribute("SP.Taxonomy.TaxonomyItem")]
public class Microsoft.SharePoint.Client.Taxonomy.TaxonomyItem : ClientObject {
    [RemoteAttribute]
public DateTime CreatedDate { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public DateTime LastModifiedDate { get; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public TermStore TermStore { get; }
    [EditorBrowsableAttribute("1")]
public TaxonomyItem(ClientRuntimeContext context, ObjectPath objectPath);
    public DateTime get_CreatedDate();
    public Guid get_Id();
    public DateTime get_LastModifiedDate();
    public string get_Name();
    public void set_Name(string value);
    public TermStore get_TermStore();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public virtual void DeleteObject();
    [RemoteAttribute]
public static ClientResult`1<string> NormalizeName(ClientRuntimeContext context, string name);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TaxonomyItemObjectPropertyNames : object {
    public static string TermStore;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TaxonomyItemPropertyNames : object {
    public static string CreatedDate;
    public static string Id;
    public static string LastModifiedDate;
    public static string Name;
}
[ScriptTypeAttribute("SP.Taxonomy.TaxonomySession")]
public class Microsoft.SharePoint.Client.Taxonomy.TaxonomySession : ClientObject {
    [RemoteAttribute]
public String[] OfflineTermStoreNames { get; }
    [RemoteAttribute]
public TermStoreCollection TermStores { get; }
    [EditorBrowsableAttribute("1")]
public TaxonomySession(ClientRuntimeContext context, ObjectPath objectPath);
    public String[] get_OfflineTermStoreNames();
    public TermStoreCollection get_TermStores();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public static TaxonomySession GetTaxonomySession(ClientRuntimeContext context);
    [RemoteAttribute]
public TermCollection GetTerms(LabelMatchInformation labelMatchInformation);
    [RemoteAttribute]
public void UpdateCache();
    [RemoteAttribute]
public Term GetTerm(Guid termId);
    [RemoteAttribute]
public TermCollection GetTermsById(Guid[] termIds);
    [RemoteAttribute]
public TermCollection GetTermsInDefaultLanguage(string termLabel, bool defaultLabelOnly, StringMatchOption stringMatchOption, int resultCollectionSize, bool trimUnavailable, bool trimDeprecated);
    [RemoteAttribute]
public TermCollection GetTermsInWorkingLocale(string termLabel, bool defaultLabelOnly, StringMatchOption stringMatchOption, int resultCollectionSize, bool trimUnavailable, bool trimDeprecated);
    [RemoteAttribute]
public TermCollection GetTermsWithCustomProperty(CustomPropertyMatchInformation customPropertyMatchInformation);
    [RemoteAttribute]
public TermSetCollection GetTermSetsByName(string termSetName, int lcid);
    [RemoteAttribute]
public TermSetCollection GetTermSetsByTermLabel(String[] requiredTermLabels, int lcid);
    [RemoteAttribute]
public TermStore GetDefaultKeywordsTermStore();
    [RemoteAttribute]
public TermStore GetDefaultSiteCollectionTermStore();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TaxonomySessionObjectPropertyNames : object {
    public static string TermStores;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TaxonomySessionPropertyNames : object {
    public static string OfflineTermStoreNames;
}
[ScriptTypeAttribute("SP.Taxonomy.Term")]
public class Microsoft.SharePoint.Client.Taxonomy.Term : TermSetItem {
    [RemoteAttribute]
public string Description { get; }
    [RemoteAttribute]
public bool IsDeprecated { get; }
    [RemoteAttribute]
public bool IsKeyword { get; }
    [RemoteAttribute]
public bool IsPinned { get; }
    [RemoteAttribute]
public bool IsPinnedRoot { get; }
    [RemoteAttribute]
public bool IsReused { get; }
    [RemoteAttribute]
public bool IsRoot { get; }
    [RemoteAttribute]
public bool IsSourceTerm { get; }
    [RemoteAttribute]
public LabelCollection Labels { get; }
    [RemoteAttribute]
public IDictionary`2<string, string> LocalCustomProperties { get; }
    [RemoteAttribute]
public IEnumerable`1<Guid> MergedTermIds { get; }
    [RemoteAttribute]
public Term Parent { get; }
    [RemoteAttribute]
public string PathOfTerm { get; }
    [RemoteAttribute]
public TermSet PinSourceTermSet { get; }
    [RemoteAttribute]
public TermCollection ReusedTerms { get; }
    [RemoteAttribute]
public Term SourceTerm { get; }
    [RemoteAttribute]
public int TermsCount { get; }
    [RemoteAttribute]
public TermSet TermSet { get; }
    [RemoteAttribute]
public TermSetCollection TermSets { get; }
    [EditorBrowsableAttribute("1")]
public Term(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Description();
    public bool get_IsDeprecated();
    public bool get_IsKeyword();
    public bool get_IsPinned();
    public bool get_IsPinnedRoot();
    public bool get_IsReused();
    public bool get_IsRoot();
    public bool get_IsSourceTerm();
    public LabelCollection get_Labels();
    public IDictionary`2<string, string> get_LocalCustomProperties();
    public IEnumerable`1<Guid> get_MergedTermIds();
    public Term get_Parent();
    public string get_PathOfTerm();
    public TermSet get_PinSourceTermSet();
    public TermCollection get_ReusedTerms();
    public Term get_SourceTerm();
    public int get_TermsCount();
    public TermSet get_TermSet();
    public TermSetCollection get_TermSets();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public Term Copy(bool doCopyChildren);
    [RemoteAttribute]
public Label CreateLabel(string labelName, int lcid, bool isDefault);
    [RemoteAttribute]
public void DeleteLocalCustomProperty(string name);
    [RemoteAttribute]
public void DeleteAllLocalCustomProperties();
    [RemoteAttribute]
public void Deprecate(bool doDeprecate);
    [RemoteAttribute]
public LabelCollection GetAllLabels(int lcid);
    [RemoteAttribute]
public ClientResult`1<string> GetDefaultLabel(int lcid);
    [RemoteAttribute]
public ClientResult`1<string> GetDescription(int lcid);
    [RemoteAttribute]
public Term Merge(Term termToMerge);
    [RemoteAttribute]
public void Move(TermSetItem newParent);
    [RemoteAttribute]
public void ReassignSourceTerm(Term reusedTerm);
    [RemoteAttribute]
public void SetDescription(string description, int lcid);
    [RemoteAttribute]
public void SetLocalCustomProperty(string name, string value);
    [RemoteAttribute]
public ClientResult`1<bool> GetIsDescendantOf(Term ancestorTerm);
    [RemoteAttribute]
public ClientResult`1<string> GetPath(int lcid);
}
[ScriptTypeAttribute("SP.Taxonomy.TermCollection")]
public class Microsoft.SharePoint.Client.Taxonomy.TermCollection : ClientObjectCollection`1<Term> {
    [EditorBrowsableAttribute("1")]
public TermCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Term GetById(Guid index);
    [RemoteAttribute]
public Term GetByName(string index);
}
[ScriptTypeAttribute("SP.Taxonomy.TermGroup")]
public class Microsoft.SharePoint.Client.Taxonomy.TermGroup : TaxonomyItem {
    [RemoteAttribute]
public IEnumerable`1<string> ContributorPrincipalNames { get; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<string> GroupManagerPrincipalNames { get; }
    [RemoteAttribute]
public bool IsSiteCollectionGroup { get; }
    [RemoteAttribute]
public bool IsSystemGroup { get; }
    [RemoteAttribute]
public TermSetCollection TermSets { get; }
    [EditorBrowsableAttribute("1")]
public TermGroup(ClientRuntimeContext context, ObjectPath objectPath);
    public IEnumerable`1<string> get_ContributorPrincipalNames();
    public string get_Description();
    public void set_Description(string value);
    public IEnumerable`1<string> get_GroupManagerPrincipalNames();
    public bool get_IsSiteCollectionGroup();
    public bool get_IsSystemGroup();
    public TermSetCollection get_TermSets();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void AddContributor(string principalName);
    [RemoteAttribute]
public void AddGroupManager(string principalName);
    [RemoteAttribute]
public TermSet CreateTermSet(string name, Guid newTermSetId, int lcid);
    [RemoteAttribute]
public ClientResult`1<string> ExportObject();
    [RemoteAttribute]
public ChangedItemCollection GetChanges(ChangeInformation changeInformation);
    [RemoteAttribute]
public TermSetCollection GetTermSetsWithCustomProperty(CustomPropertyMatchInformation customPropertyMatchInformation);
}
[ScriptTypeAttribute("SP.Taxonomy.TermGroupCollection")]
public class Microsoft.SharePoint.Client.Taxonomy.TermGroupCollection : ClientObjectCollection`1<TermGroup> {
    [EditorBrowsableAttribute("1")]
public TermGroupCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public TermGroup GetById(Guid index);
    [RemoteAttribute]
public TermGroup GetByName(string index);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TermGroupObjectPropertyNames : object {
    public static string TermSets;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TermGroupPropertyNames : object {
    public static string ContributorPrincipalNames;
    public static string Description;
    public static string GroupManagerPrincipalNames;
    public static string IsSiteCollectionGroup;
    public static string IsSystemGroup;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TermObjectPropertyNames : object {
    public static string Labels;
    public static string Parent;
    public static string PinSourceTermSet;
    public static string ReusedTerms;
    public static string SourceTerm;
    public static string TermSet;
    public static string TermSets;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TermPropertyNames : object {
    public static string Description;
    public static string IsDeprecated;
    public static string IsKeyword;
    public static string IsPinned;
    public static string IsPinnedRoot;
    public static string IsReused;
    public static string IsRoot;
    public static string IsSourceTerm;
    public static string LocalCustomProperties;
    public static string MergedTermIds;
    public static string PathOfTerm;
    public static string TermsCount;
}
[ScriptTypeAttribute("SP.Taxonomy.TermSet")]
public class Microsoft.SharePoint.Client.Taxonomy.TermSet : TermSetItem {
    [RemoteAttribute]
public string Contact { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public TermGroup Group { get; }
    [RemoteAttribute]
public bool IsOpenForTermCreation { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, string> Names { get; }
    [RemoteAttribute]
public IEnumerable`1<string> Stakeholders { get; }
    [EditorBrowsableAttribute("1")]
public TermSet(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Contact();
    public void set_Contact(string value);
    public string get_Description();
    public void set_Description(string value);
    public TermGroup get_Group();
    public bool get_IsOpenForTermCreation();
    public void set_IsOpenForTermCreation(bool value);
    public IDictionary`2<string, string> get_Names();
    public IEnumerable`1<string> get_Stakeholders();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void AddStakeholder(string stakeholderName);
    [RemoteAttribute]
public TermSet Copy();
    [RemoteAttribute]
public void DeleteStakeholder(string stakeholderName);
    [RemoteAttribute]
public ClientResult`1<string> ExportObject();
    [RemoteAttribute]
public TermCollection GetAllTerms();
    [RemoteAttribute]
public TermCollection GetAllTermsIncludeDeprecated();
    [RemoteAttribute]
public ChangedItemCollection GetChanges(ChangeInformation changeInformation);
    [RemoteAttribute]
public Term GetTerm(Guid termId);
    [RemoteAttribute]
public TermCollection GetTerms(LabelMatchInformation labelMatchInformation);
    [RemoteAttribute]
public TermCollection GetTermsWithCustomProperty(CustomPropertyMatchInformation customPropertyMatchInformation);
    [RemoteAttribute]
public void Move(TermGroup targetGroup);
}
[ScriptTypeAttribute("SP.Taxonomy.TermSetCollection")]
public class Microsoft.SharePoint.Client.Taxonomy.TermSetCollection : ClientObjectCollection`1<TermSet> {
    [EditorBrowsableAttribute("1")]
public TermSetCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public TermSet GetById(Guid index);
    [RemoteAttribute]
public TermSet GetByName(string index);
}
[ScriptTypeAttribute("SP.Taxonomy.TermSetItem")]
public class Microsoft.SharePoint.Client.Taxonomy.TermSetItem : TaxonomyItem {
    [RemoteAttribute]
public IDictionary`2<string, string> CustomProperties { get; }
    [RemoteAttribute]
public string CustomSortOrder { get; public set; }
    [RemoteAttribute]
public bool IsAvailableForTagging { get; public set; }
    [RemoteAttribute]
public string Owner { get; public set; }
    [RemoteAttribute]
public TermCollection Terms { get; }
    [EditorBrowsableAttribute("1")]
public TermSetItem(ClientRuntimeContext context, ObjectPath objectPath);
    public IDictionary`2<string, string> get_CustomProperties();
    public string get_CustomSortOrder();
    public void set_CustomSortOrder(string value);
    public bool get_IsAvailableForTagging();
    public void set_IsAvailableForTagging(bool value);
    public string get_Owner();
    public void set_Owner(string value);
    public TermCollection get_Terms();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public Term CreateTerm(string name, int lcid, Guid newTermId);
    [RemoteAttribute]
public TermCollection GetTerms(int pagingLimit);
    [RemoteAttribute]
public Term ReuseTerm(Term sourceTerm, bool reuseBranch);
    [RemoteAttribute]
public Term ReuseTermWithPinning(Term sourceTerm);
    [RemoteAttribute]
public virtual void DeleteCustomProperty(string name);
    [RemoteAttribute]
public virtual void DeleteAllCustomProperties();
    [RemoteAttribute]
public virtual void SetCustomProperty(string name, string value);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TermSetItemObjectPropertyNames : object {
    public static string Terms;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TermSetItemPropertyNames : object {
    public static string CustomProperties;
    public static string CustomSortOrder;
    public static string IsAvailableForTagging;
    public static string Owner;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TermSetObjectPropertyNames : object {
    public static string Group;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TermSetPropertyNames : object {
    public static string Contact;
    public static string Description;
    public static string IsOpenForTermCreation;
    public static string Names;
    public static string Stakeholders;
}
[ScriptTypeAttribute("SP.Taxonomy.TermStore")]
public class Microsoft.SharePoint.Client.Taxonomy.TermStore : ClientObject {
    [RemoteAttribute]
public string ContentTypePublishingHub { get; }
    [RemoteAttribute]
public int DefaultLanguage { get; public set; }
    [RemoteAttribute]
public TermGroupCollection Groups { get; }
    [RemoteAttribute]
public TermSet HashTagsTermSet { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool IsOnline { get; }
    [RemoteAttribute]
public TermSet KeywordsTermSet { get; }
    [RemoteAttribute]
public IEnumerable`1<int> Languages { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public TermSet OrphanedTermsTermSet { get; }
    [RemoteAttribute]
public TermGroup SystemGroup { get; }
    [RemoteAttribute]
public int WorkingLanguage { get; public set; }
    [EditorBrowsableAttribute("1")]
public TermStore(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_ContentTypePublishingHub();
    public int get_DefaultLanguage();
    public void set_DefaultLanguage(int value);
    public TermGroupCollection get_Groups();
    public TermSet get_HashTagsTermSet();
    public Guid get_Id();
    public bool get_IsOnline();
    public TermSet get_KeywordsTermSet();
    public IEnumerable`1<int> get_Languages();
    public string get_Name();
    public TermSet get_OrphanedTermsTermSet();
    public TermGroup get_SystemGroup();
    public int get_WorkingLanguage();
    public void set_WorkingLanguage(int value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public TermGroup GetSiteCollectionGroup(Site currentSite, bool createIfMissing);
    [RemoteAttribute]
public void UpdateUsedTermsOnSite(Site site);
    [RemoteAttribute]
public void AddLanguage(int lcid);
    [RemoteAttribute]
public void CommitAll();
    [RemoteAttribute]
public TermGroup CreateGroup(string name, Guid groupId);
    [RemoteAttribute]
public void DeleteLanguage(int lcid);
    [RemoteAttribute]
public ChangedItemCollection GetChanges(ChangeInformation changeInformation);
    [RemoteAttribute]
public TermGroup GetGroup(Guid id);
    [RemoteAttribute]
public ClientResult`1<Stream> GetPackagesUpdateInformation(DateTime lastUpdateTime);
    [RemoteAttribute]
public ClientResult`1<Stream> GetPackagesUpdateInformationByIds(DateTime lastUpdateTime, String[] strContentTypeIds);
    [RemoteAttribute]
public ClientResult`1<Stream> GetPackage(string packageId, Guid packageType, string farmVersion, int siteCompatibilityLevel);
    [RemoteAttribute]
public void UploadPackages(string packageId, Stream stream, string farmVersion, int siteCompatibilityLevel);
    [RemoteAttribute]
public Term GetTerm(Guid termId);
    [RemoteAttribute]
public Term GetTermInTermSet(Guid termSetId, Guid termId);
    [RemoteAttribute]
public TermCollection GetTermsById(Guid[] termIds);
    [RemoteAttribute]
public TermCollection GetTerms(LabelMatchInformation labelMatchInformation);
    [RemoteAttribute]
public TermSetCollection GetTermSetsByName(string termSetName, int lcid);
    [RemoteAttribute]
public TermCollection GetTermsWithCustomProperty(CustomPropertyMatchInformation customPropertyMatchInformation);
    [RemoteAttribute]
public TermSet GetTermSet(Guid termSetId);
    [RemoteAttribute]
public TermSetCollection GetTermSetsByTermLabel(String[] requiredTermLabels, int lcid);
    [RemoteAttribute]
public TermSetCollection GetTermSetsWithCustomProperty(CustomPropertyMatchInformation customPropertyMatchInformation);
    [RemoteAttribute]
public void RollbackAll();
    [RemoteAttribute]
public void UpdateCache();
}
[ScriptTypeAttribute("SP.Taxonomy.TermStoreCollection")]
public class Microsoft.SharePoint.Client.Taxonomy.TermStoreCollection : ClientObjectCollection`1<TermStore> {
    [EditorBrowsableAttribute("1")]
public TermStoreCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public TermStore GetById(Guid index);
    [RemoteAttribute]
public TermStore GetByName(string index);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TermStoreObjectPropertyNames : object {
    public static string Groups;
    public static string HashTagsTermSet;
    public static string KeywordsTermSet;
    public static string OrphanedTermsTermSet;
    public static string SystemGroup;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Taxonomy.TermStorePropertyNames : object {
    public static string ContentTypePublishingHub;
    public static string DefaultLanguage;
    public static string Id;
    public static string IsOnline;
    public static string Languages;
    public static string Name;
    public static string WorkingLanguage;
}
