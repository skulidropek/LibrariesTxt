public enum Microsoft.ProjectServer.Client.AccrueAt : Enum {
    public int value__;
    public static AccrueAt NotSpecified;
    public static AccrueAt Start;
    public static AccrueAt End;
    public static AccrueAt Prorated;
}
[ScriptTypeAttribute("PS.Assignment")]
public class Microsoft.ProjectServer.Client.Assignment : ClientObject {
    [RemoteAttribute]
public double ActualCostWorkPerformed { get; }
    [RemoteAttribute]
public double ActualOvertimeCost { get; }
    [RemoteAttribute]
public double BaselineCost { get; }
    [RemoteAttribute]
public double BaselineCostPerUse { get; }
    [RemoteAttribute]
public DateTime BaselineFinish { get; }
    [RemoteAttribute]
public DateTime BaselineStart { get; }
    [RemoteAttribute]
public string BaselineWork { get; }
    [RemoteAttribute]
public TimeSpan BaselineWorkTimeSpan { get; }
    [RemoteAttribute]
public double BudgetedCostWorkPerformed { get; }
    [RemoteAttribute]
public double BudgetedCostWorkScheduled { get; }
    [RemoteAttribute]
public double CostVariance { get; }
    [RemoteAttribute]
public double CostVarianceAtCompletion { get; }
    [RemoteAttribute]
public DateTime Created { get; }
    [RemoteAttribute]
public double CurrentCostVariance { get; }
    [RemoteAttribute]
public CustomFieldCollection CustomFields { get; }
    [RemoteAttribute]
public DateTime Finish { get; }
    [RemoteAttribute]
public string FinishVariance { get; }
    [RemoteAttribute]
public TimeSpan FinishVarianceTimeSpan { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool IsConfirmed { get; }
    [RemoteAttribute]
public bool IsOverAllocated { get; }
    [RemoteAttribute]
public bool IsPublished { get; }
    [RemoteAttribute]
public bool IsResponsePending { get; }
    [RemoteAttribute]
public bool IsUpdateNeeded { get; }
    [RemoteAttribute]
public string LevelingDelay { get; }
    [RemoteAttribute]
public TimeSpan LevelingDelayTimeSpan { get; }
    [RemoteAttribute]
public DateTime Modified { get; }
    [RemoteAttribute]
public string Notes { get; }
    [RemoteAttribute]
public double OvertimeCost { get; }
    [RemoteAttribute]
public double RemainingCost { get; }
    [RemoteAttribute]
public double RemainingOvertimeCost { get; }
    [RemoteAttribute]
public DateTime Resume { get; }
    [RemoteAttribute]
public double ScheduleCostVariance { get; }
    [RemoteAttribute]
public DateTime Start { get; }
    [RemoteAttribute]
public string StartVariance { get; }
    [RemoteAttribute]
public TimeSpan StartVarianceTimeSpan { get; }
    [RemoteAttribute]
public DateTime Stop { get; }
    [RemoteAttribute]
public WorkContourType WorkContourType { get; }
    [RemoteAttribute]
public string WorkVariance { get; }
    [RemoteAttribute]
public TimeSpan WorkVarianceTimeSpan { get; }
    [EditorBrowsableAttribute("1")]
public Assignment(ClientRuntimeContext context, ObjectPath objectPath);
    public double get_ActualCostWorkPerformed();
    public double get_ActualOvertimeCost();
    public double get_BaselineCost();
    public double get_BaselineCostPerUse();
    public DateTime get_BaselineFinish();
    public DateTime get_BaselineStart();
    public string get_BaselineWork();
    public TimeSpan get_BaselineWorkTimeSpan();
    public double get_BudgetedCostWorkPerformed();
    public double get_BudgetedCostWorkScheduled();
    public double get_CostVariance();
    public double get_CostVarianceAtCompletion();
    public DateTime get_Created();
    public double get_CurrentCostVariance();
    public CustomFieldCollection get_CustomFields();
    public DateTime get_Finish();
    public string get_FinishVariance();
    public TimeSpan get_FinishVarianceTimeSpan();
    public Guid get_Id();
    public bool get_IsConfirmed();
    public bool get_IsOverAllocated();
    public bool get_IsPublished();
    public bool get_IsResponsePending();
    public bool get_IsUpdateNeeded();
    public string get_LevelingDelay();
    public TimeSpan get_LevelingDelayTimeSpan();
    public DateTime get_Modified();
    public string get_Notes();
    public double get_OvertimeCost();
    public double get_RemainingCost();
    public double get_RemainingOvertimeCost();
    public DateTime get_Resume();
    public double get_ScheduleCostVariance();
    public DateTime get_Start();
    public string get_StartVariance();
    public TimeSpan get_StartVarianceTimeSpan();
    public DateTime get_Stop();
    public WorkContourType get_WorkContourType();
    public string get_WorkVariance();
    public TimeSpan get_WorkVarianceTimeSpan();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.AssignmentCreationInformation")]
public class Microsoft.ProjectServer.Client.AssignmentCreationInformation : ClientValueObject {
    private DateTime m_finish;
    private Guid m_id;
    private string m_notes;
    private Guid m_resourceId;
    private DateTime m_start;
    private Guid m_taskId;
    [RemoteAttribute]
public DateTime Finish { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string Notes { get; public set; }
    [RemoteAttribute]
public Guid ResourceId { get; public set; }
    [RemoteAttribute]
public DateTime Start { get; public set; }
    [RemoteAttribute]
public Guid TaskId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_Finish();
    public void set_Finish(DateTime value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_Notes();
    public void set_Notes(string value);
    public Guid get_ResourceId();
    public void set_ResourceId(Guid value);
    public DateTime get_Start();
    public void set_Start(DateTime value);
    public Guid get_TaskId();
    public void set_TaskId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.AssignmentObjectPropertyNames : object {
    public static string CustomFields;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.AssignmentPropertyNames : object {
    public static string ActualCostWorkPerformed;
    public static string ActualOvertimeCost;
    public static string BaselineCost;
    public static string BaselineCostPerUse;
    public static string BaselineFinish;
    public static string BaselineStart;
    public static string BaselineWork;
    public static string BaselineWorkTimeSpan;
    public static string BudgetedCostWorkPerformed;
    public static string BudgetedCostWorkScheduled;
    public static string CostVariance;
    public static string CostVarianceAtCompletion;
    public static string Created;
    public static string CurrentCostVariance;
    public static string Finish;
    public static string FinishVariance;
    public static string FinishVarianceTimeSpan;
    public static string Id;
    public static string IsConfirmed;
    public static string IsOverAllocated;
    public static string IsPublished;
    public static string IsResponsePending;
    public static string IsUpdateNeeded;
    public static string LevelingDelay;
    public static string LevelingDelayTimeSpan;
    public static string Modified;
    public static string Notes;
    public static string OvertimeCost;
    public static string RemainingCost;
    public static string RemainingOvertimeCost;
    public static string Resume;
    public static string ScheduleCostVariance;
    public static string Start;
    public static string StartVariance;
    public static string StartVarianceTimeSpan;
    public static string Stop;
    public static string WorkContourType;
    public static string WorkVariance;
    public static string WorkVarianceTimeSpan;
}
[ScriptTypeAttribute("PS.BaseCalendarException")]
public class Microsoft.ProjectServer.Client.BaseCalendarException : CalendarException {
    [EditorBrowsableAttribute("1")]
public BaseCalendarException(ClientRuntimeContext context, ObjectPath objectPath);
}
public enum Microsoft.ProjectServer.Client.BookingType : Enum {
    public int value__;
    public static BookingType NotSpecified;
    public static BookingType Committed;
    public static BookingType Proposed;
}
[ScriptTypeAttribute("PS.Calendar")]
public class Microsoft.ProjectServer.Client.Calendar : ClientObject {
    [RemoteAttribute]
public CalendarExceptionCollection BaseCalendarExceptions { get; }
    [RemoteAttribute]
public DateTime Created { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool IsStandardCalendar { get; }
    [RemoteAttribute]
public DateTime Modified { get; }
    [RemoteAttribute]
public string Name { get; }
    [EditorBrowsableAttribute("1")]
public Calendar(ClientRuntimeContext context, ObjectPath objectPath);
    public CalendarExceptionCollection get_BaseCalendarExceptions();
    public DateTime get_Created();
    public Guid get_Id();
    public bool get_IsStandardCalendar();
    public DateTime get_Modified();
    public string get_Name();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public Calendar CopyTo(string name);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.CalendarCollection")]
public class Microsoft.ProjectServer.Client.CalendarCollection : ClientObjectCollection`1<Calendar> {
    [EditorBrowsableAttribute("1")]
public CalendarCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Calendar Add(CalendarCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(Calendar calendar);
    [RemoteAttribute]
public Calendar GetById(string objectId);
    [RemoteAttribute]
public Calendar GetByGuid(Guid uid);
    [RemoteAttribute]
public void Update();
}
[ScriptTypeAttribute("PS.CalendarCreationInformation")]
public class Microsoft.ProjectServer.Client.CalendarCreationInformation : ClientValueObject {
    private Guid m_id;
    private string m_name;
    private Guid m_originalId;
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public Guid OriginalId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_Name();
    public void set_Name(string value);
    public Guid get_OriginalId();
    public void set_OriginalId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.CalendarException")]
public class Microsoft.ProjectServer.Client.CalendarException : ClientObject {
    [RemoteAttribute]
public Calendar Calendar { get; }
    [RemoteAttribute]
public DateTime Finish { get; }
    [RemoteAttribute]
public int Id { get; public set; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public CalendarRecurrenceDays RecurrenceDays { get; }
    [RemoteAttribute]
public int RecurrenceFrequency { get; }
    [RemoteAttribute]
public int RecurrenceMonth { get; }
    [RemoteAttribute]
public int RecurrenceMonthDay { get; }
    [RemoteAttribute]
public CalendarRecurrenceType RecurrenceType { get; }
    [RemoteAttribute]
public CalendarRecurrenceWeek RecurrenceWeek { get; }
    [RemoteAttribute]
public int Shift1Finish { get; }
    [RemoteAttribute]
public int Shift1Start { get; }
    [RemoteAttribute]
public int Shift2Finish { get; }
    [RemoteAttribute]
public int Shift2Start { get; }
    [RemoteAttribute]
public int Shift3Finish { get; }
    [RemoteAttribute]
public int Shift3Start { get; }
    [RemoteAttribute]
public int Shift4Finish { get; }
    [RemoteAttribute]
public int Shift4Start { get; }
    [RemoteAttribute]
public int Shift5Finish { get; }
    [RemoteAttribute]
public int Shift5Start { get; }
    [RemoteAttribute]
public DateTime Start { get; }
    [EditorBrowsableAttribute("1")]
public CalendarException(ClientRuntimeContext context, ObjectPath objectPath);
    public Calendar get_Calendar();
    public DateTime get_Finish();
    public int get_Id();
    public void set_Id(int value);
    public string get_Name();
    public CalendarRecurrenceDays get_RecurrenceDays();
    public int get_RecurrenceFrequency();
    public int get_RecurrenceMonth();
    public int get_RecurrenceMonthDay();
    public CalendarRecurrenceType get_RecurrenceType();
    public CalendarRecurrenceWeek get_RecurrenceWeek();
    public int get_Shift1Finish();
    public int get_Shift1Start();
    public int get_Shift2Finish();
    public int get_Shift2Start();
    public int get_Shift3Finish();
    public int get_Shift3Start();
    public int get_Shift4Finish();
    public int get_Shift4Start();
    public int get_Shift5Finish();
    public int get_Shift5Start();
    public DateTime get_Start();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public virtual void DeleteObject();
}
[ScriptTypeAttribute("PS.CalendarExceptionCollection")]
public class Microsoft.ProjectServer.Client.CalendarExceptionCollection : ClientObjectCollection`1<CalendarException> {
    [EditorBrowsableAttribute("1")]
public CalendarExceptionCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public CalendarException GetById(int id);
    [RemoteAttribute]
public CalendarException Add(CalendarExceptionCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(CalendarException exception);
}
[ScriptTypeAttribute("PS.CalendarExceptionCreationInformation")]
public class Microsoft.ProjectServer.Client.CalendarExceptionCreationInformation : ClientValueObject {
    private DateTime m_finish;
    private string m_name;
    private CalendarRecurrenceDays m_recurrenceDays;
    private int m_recurrenceFrequency;
    private int m_recurrenceMonth;
    private int m_recurrenceMonthDay;
    private CalendarRecurrenceType m_recurrenceType;
    private CalendarRecurrenceWeek m_recurrenceWeek;
    private int m_shift1Finish;
    private int m_shift1Start;
    private int m_shift2Finish;
    private int m_shift2Start;
    private int m_shift3Finish;
    private int m_shift3Start;
    private int m_shift4Finish;
    private int m_shift4Start;
    private int m_shift5Finish;
    private int m_shift5Start;
    private DateTime m_start;
    [RemoteAttribute]
public DateTime Finish { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public CalendarRecurrenceDays RecurrenceDays { get; public set; }
    [RemoteAttribute]
public int RecurrenceFrequency { get; public set; }
    [RemoteAttribute]
public int RecurrenceMonth { get; public set; }
    [RemoteAttribute]
public int RecurrenceMonthDay { get; public set; }
    [RemoteAttribute]
public CalendarRecurrenceType RecurrenceType { get; public set; }
    [RemoteAttribute]
public CalendarRecurrenceWeek RecurrenceWeek { get; public set; }
    [RemoteAttribute]
public int Shift1Finish { get; public set; }
    [RemoteAttribute]
public int Shift1Start { get; public set; }
    [RemoteAttribute]
public int Shift2Finish { get; public set; }
    [RemoteAttribute]
public int Shift2Start { get; public set; }
    [RemoteAttribute]
public int Shift3Finish { get; public set; }
    [RemoteAttribute]
public int Shift3Start { get; public set; }
    [RemoteAttribute]
public int Shift4Finish { get; public set; }
    [RemoteAttribute]
public int Shift4Start { get; public set; }
    [RemoteAttribute]
public int Shift5Finish { get; public set; }
    [RemoteAttribute]
public int Shift5Start { get; public set; }
    [RemoteAttribute]
public DateTime Start { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_Finish();
    public void set_Finish(DateTime value);
    public string get_Name();
    public void set_Name(string value);
    public CalendarRecurrenceDays get_RecurrenceDays();
    public void set_RecurrenceDays(CalendarRecurrenceDays value);
    public int get_RecurrenceFrequency();
    public void set_RecurrenceFrequency(int value);
    public int get_RecurrenceMonth();
    public void set_RecurrenceMonth(int value);
    public int get_RecurrenceMonthDay();
    public void set_RecurrenceMonthDay(int value);
    public CalendarRecurrenceType get_RecurrenceType();
    public void set_RecurrenceType(CalendarRecurrenceType value);
    public CalendarRecurrenceWeek get_RecurrenceWeek();
    public void set_RecurrenceWeek(CalendarRecurrenceWeek value);
    public int get_Shift1Finish();
    public void set_Shift1Finish(int value);
    public int get_Shift1Start();
    public void set_Shift1Start(int value);
    public int get_Shift2Finish();
    public void set_Shift2Finish(int value);
    public int get_Shift2Start();
    public void set_Shift2Start(int value);
    public int get_Shift3Finish();
    public void set_Shift3Finish(int value);
    public int get_Shift3Start();
    public void set_Shift3Start(int value);
    public int get_Shift4Finish();
    public void set_Shift4Finish(int value);
    public int get_Shift4Start();
    public void set_Shift4Start(int value);
    public int get_Shift5Finish();
    public void set_Shift5Finish(int value);
    public int get_Shift5Start();
    public void set_Shift5Start(int value);
    public DateTime get_Start();
    public void set_Start(DateTime value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.CalendarExceptionObjectPropertyNames : object {
    public static string Calendar;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.CalendarExceptionPropertyNames : object {
    public static string Finish;
    public static string Id;
    public static string Name;
    public static string RecurrenceDays;
    public static string RecurrenceFrequency;
    public static string RecurrenceMonth;
    public static string RecurrenceMonthDay;
    public static string RecurrenceType;
    public static string RecurrenceWeek;
    public static string Shift1Finish;
    public static string Shift1Start;
    public static string Shift2Finish;
    public static string Shift2Start;
    public static string Shift3Finish;
    public static string Shift3Start;
    public static string Shift4Finish;
    public static string Shift4Start;
    public static string Shift5Finish;
    public static string Shift5Start;
    public static string Start;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.CalendarObjectPropertyNames : object {
    public static string BaseCalendarExceptions;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.CalendarPropertyNames : object {
    public static string Created;
    public static string Id;
    public static string IsStandardCalendar;
    public static string Modified;
    public static string Name;
}
[FlagsAttribute]
public enum Microsoft.ProjectServer.Client.CalendarRecurrenceDays : Enum {
    public int value__;
    public static CalendarRecurrenceDays NotSpecified;
    public static CalendarRecurrenceDays Sunday;
    public static CalendarRecurrenceDays Monday;
    public static CalendarRecurrenceDays Tuesday;
    public static CalendarRecurrenceDays Wednesday;
    public static CalendarRecurrenceDays Thursday;
    public static CalendarRecurrenceDays Friday;
    public static CalendarRecurrenceDays Saturday;
}
public enum Microsoft.ProjectServer.Client.CalendarRecurrenceType : Enum {
    public int value__;
    public static CalendarRecurrenceType Daily;
    public static CalendarRecurrenceType DailySkip;
    public static CalendarRecurrenceType Weekly;
    public static CalendarRecurrenceType Monthly;
    public static CalendarRecurrenceType Yearly;
}
public enum Microsoft.ProjectServer.Client.CalendarRecurrenceWeek : Enum {
    public int value__;
    public static CalendarRecurrenceWeek NotSpecified;
    public static CalendarRecurrenceWeek First;
    public static CalendarRecurrenceWeek Second;
    public static CalendarRecurrenceWeek Third;
    public static CalendarRecurrenceWeek Fourth;
    public static CalendarRecurrenceWeek Last;
}
public enum Microsoft.ProjectServer.Client.CommittedDecisionResult : Enum {
    public int value__;
    public static CommittedDecisionResult NotSpecified;
    public static CommittedDecisionResult ForcedIn;
    public static CommittedDecisionResult ForcedOut;
    public static CommittedDecisionResult CommittedOut;
    public static CommittedDecisionResult CommittedIn;
}
public enum Microsoft.ProjectServer.Client.ConstraintType : Enum {
    public int value__;
    public static ConstraintType NotSpecified;
    public static ConstraintType AsSoonAsPossible;
    public static ConstraintType AsLateAsPossible;
    public static ConstraintType MustStartOn;
    public static ConstraintType MustFinishOn;
    public static ConstraintType StartNoEarlierThan;
    public static ConstraintType StartNoLaterThan;
    public static ConstraintType FinishNoEarlierThan;
    public static ConstraintType FinishNoLaterThan;
}
[ScriptTypeAttribute("PS.CostRateCreationInformation")]
public class Microsoft.ProjectServer.Client.CostRateCreationInformation : ClientValueObject {
    private double m_costPerUse;
    private DateTime m_effectiveDate;
    private double m_overtimeRate;
    private double m_standardRate;
    [RemoteAttribute]
public double CostPerUse { get; public set; }
    [RemoteAttribute]
public DateTime EffectiveDate { get; public set; }
    [RemoteAttribute]
public double OvertimeRate { get; public set; }
    [RemoteAttribute]
public double StandardRate { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public double get_CostPerUse();
    public void set_CostPerUse(double value);
    public DateTime get_EffectiveDate();
    public void set_EffectiveDate(DateTime value);
    public double get_OvertimeRate();
    public void set_OvertimeRate(double value);
    public double get_StandardRate();
    public void set_StandardRate(double value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.ProjectServer.Client.CostRateTableName : Enum {
    public int value__;
    public static CostRateTableName A;
    public static CostRateTableName B;
    public static CostRateTableName C;
    public static CostRateTableName D;
    public static CostRateTableName E;
}
public enum Microsoft.ProjectServer.Client.CurrencySymbolPosition : Enum {
    public int value__;
    public static CurrencySymbolPosition NotSpecified;
    public static CurrencySymbolPosition Before;
    public static CurrencySymbolPosition After;
    public static CurrencySymbolPosition BeforeWithSpace;
    public static CurrencySymbolPosition AfterWithSpace;
}
[ScriptTypeAttribute("PS.CustomField")]
public class Microsoft.ProjectServer.Client.CustomField : ClientObject {
    [RemoteAttribute]
public Guid AppAlternateId { get; }
    [RemoteAttribute]
public Guid DepartmentId { get; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public EntityType EntityType { get; }
    [RemoteAttribute]
public CustomFieldType FieldType { get; }
    [RemoteAttribute]
public string Formula { get; public set; }
    [RemoteAttribute]
public string GraphicalIndicatorNonSummary { get; public set; }
    [RemoteAttribute]
public string GraphicalIndicatorProjectSummary { get; public set; }
    [RemoteAttribute]
public string GraphicalIndicatorSummary { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string InternalName { get; }
    [RemoteAttribute]
public bool IsEditableInVisibility { get; public set; }
    [RemoteAttribute]
public bool IsLeafOnly { get; public set; }
    [RemoteAttribute]
public bool IsMultilineText { get; public set; }
    [RemoteAttribute]
public bool IsRequired { get; public set; }
    [RemoteAttribute]
public bool IsWorkflowControlled { get; public set; }
    [RemoteAttribute]
public bool LookupAllowMultiSelect { get; public set; }
    [RemoteAttribute]
public Guid LookupDefaultValue { get; public set; }
    [RemoteAttribute]
public LookupEntryCollection LookupEntries { get; }
    [RemoteAttribute]
public LookupTable LookupTable { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public bool RollsDownToAssignments { get; public set; }
    [RemoteAttribute]
public CustomFieldRollupType RollupType { get; public set; }
    [RemoteAttribute]
public bool ShowToolTip { get; public set; }
    [RemoteAttribute]
public bool UseFieldForMatching { get; public set; }
    [EditorBrowsableAttribute("1")]
public CustomField(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_AppAlternateId();
    public Guid get_DepartmentId();
    public string get_Description();
    public void set_Description(string value);
    public EntityType get_EntityType();
    public CustomFieldType get_FieldType();
    public string get_Formula();
    public void set_Formula(string value);
    public string get_GraphicalIndicatorNonSummary();
    public void set_GraphicalIndicatorNonSummary(string value);
    public string get_GraphicalIndicatorProjectSummary();
    public void set_GraphicalIndicatorProjectSummary(string value);
    public string get_GraphicalIndicatorSummary();
    public void set_GraphicalIndicatorSummary(string value);
    public Guid get_Id();
    public string get_InternalName();
    public bool get_IsEditableInVisibility();
    public void set_IsEditableInVisibility(bool value);
    public bool get_IsLeafOnly();
    public void set_IsLeafOnly(bool value);
    public bool get_IsMultilineText();
    public void set_IsMultilineText(bool value);
    public bool get_IsRequired();
    public void set_IsRequired(bool value);
    public bool get_IsWorkflowControlled();
    public void set_IsWorkflowControlled(bool value);
    public bool get_LookupAllowMultiSelect();
    public void set_LookupAllowMultiSelect(bool value);
    public Guid get_LookupDefaultValue();
    public void set_LookupDefaultValue(Guid value);
    public LookupEntryCollection get_LookupEntries();
    public LookupTable get_LookupTable();
    public void set_LookupTable(LookupTable value);
    public string get_Name();
    public void set_Name(string value);
    public bool get_RollsDownToAssignments();
    public void set_RollsDownToAssignments(bool value);
    public CustomFieldRollupType get_RollupType();
    public void set_RollupType(CustomFieldRollupType value);
    public bool get_ShowToolTip();
    public void set_ShowToolTip(bool value);
    public bool get_UseFieldForMatching();
    public void set_UseFieldForMatching(bool value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.CustomFieldCollection")]
public class Microsoft.ProjectServer.Client.CustomFieldCollection : ClientObjectCollection`1<CustomField> {
    [EditorBrowsableAttribute("1")]
public CustomFieldCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public CustomField Add(CustomFieldCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(CustomField field);
    [RemoteAttribute]
public CustomField GetById(string objectId);
    [RemoteAttribute]
public CustomField GetByGuid(Guid uid);
    [RemoteAttribute]
public CustomField GetByAppAlternateId(string objectId);
    [RemoteAttribute]
public void Update();
}
[ScriptTypeAttribute("PS.CustomFieldCreationInformation")]
public class Microsoft.ProjectServer.Client.CustomFieldCreationInformation : ClientValueObject {
    private string m_description;
    private EntityType m_entityType;
    private CustomFieldType m_fieldType;
    private string m_formula;
    private string m_graphicalIndicatorNonSummary;
    private string m_graphicalIndicatorProjectSummary;
    private string m_graphicalIndicatorSummary;
    private Guid m_id;
    private bool m_isEditableInVisibility;
    private bool m_isLeafOnly;
    private bool m_isMultilineText;
    private bool m_isRequired;
    private bool m_isWorkflowControlled;
    private bool m_lookupAllowMultiSelect;
    private Guid m_lookupDefaultValue;
    private LookupTable m_lookupTable;
    private string m_name;
    private bool m_showToolTip;
    private bool m_useFieldForMatching;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public EntityType EntityType { get; public set; }
    [RemoteAttribute]
public CustomFieldType FieldType { get; public set; }
    [RemoteAttribute]
public string Formula { get; public set; }
    [RemoteAttribute]
public string GraphicalIndicatorNonSummary { get; public set; }
    [RemoteAttribute]
public string GraphicalIndicatorProjectSummary { get; public set; }
    [RemoteAttribute]
public string GraphicalIndicatorSummary { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public bool IsEditableInVisibility { get; public set; }
    [RemoteAttribute]
public bool IsLeafOnly { get; public set; }
    [RemoteAttribute]
public bool IsMultilineText { get; public set; }
    [RemoteAttribute]
public bool IsRequired { get; public set; }
    [RemoteAttribute]
public bool IsWorkflowControlled { get; public set; }
    [RemoteAttribute]
public bool LookupAllowMultiSelect { get; public set; }
    [RemoteAttribute]
public Guid LookupDefaultValue { get; public set; }
    [RemoteAttribute]
public LookupTable LookupTable { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public bool ShowToolTip { get; public set; }
    [RemoteAttribute]
public bool UseFieldForMatching { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public EntityType get_EntityType();
    public void set_EntityType(EntityType value);
    public CustomFieldType get_FieldType();
    public void set_FieldType(CustomFieldType value);
    public string get_Formula();
    public void set_Formula(string value);
    public string get_GraphicalIndicatorNonSummary();
    public void set_GraphicalIndicatorNonSummary(string value);
    public string get_GraphicalIndicatorProjectSummary();
    public void set_GraphicalIndicatorProjectSummary(string value);
    public string get_GraphicalIndicatorSummary();
    public void set_GraphicalIndicatorSummary(string value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public bool get_IsEditableInVisibility();
    public void set_IsEditableInVisibility(bool value);
    public bool get_IsLeafOnly();
    public void set_IsLeafOnly(bool value);
    public bool get_IsMultilineText();
    public void set_IsMultilineText(bool value);
    public bool get_IsRequired();
    public void set_IsRequired(bool value);
    public bool get_IsWorkflowControlled();
    public void set_IsWorkflowControlled(bool value);
    public bool get_LookupAllowMultiSelect();
    public void set_LookupAllowMultiSelect(bool value);
    public Guid get_LookupDefaultValue();
    public void set_LookupDefaultValue(Guid value);
    public LookupTable get_LookupTable();
    public void set_LookupTable(LookupTable value);
    public string get_Name();
    public void set_Name(string value);
    public bool get_ShowToolTip();
    public void set_ShowToolTip(bool value);
    public bool get_UseFieldForMatching();
    public void set_UseFieldForMatching(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.CustomFieldObjectPropertyNames : object {
    public static string EntityType;
    public static string LookupEntries;
    public static string LookupTable;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.CustomFieldPropertyNames : object {
    public static string AppAlternateId;
    public static string DepartmentId;
    public static string Description;
    public static string FieldType;
    public static string Formula;
    public static string GraphicalIndicatorNonSummary;
    public static string GraphicalIndicatorProjectSummary;
    public static string GraphicalIndicatorSummary;
    public static string Id;
    public static string InternalName;
    public static string IsEditableInVisibility;
    public static string IsLeafOnly;
    public static string IsMultilineText;
    public static string IsRequired;
    public static string IsWorkflowControlled;
    public static string LookupAllowMultiSelect;
    public static string LookupDefaultValue;
    public static string Name;
    public static string RollsDownToAssignments;
    public static string RollupType;
    public static string ShowToolTip;
    public static string UseFieldForMatching;
}
public enum Microsoft.ProjectServer.Client.CustomFieldRollupType : Enum {
    public int value__;
    public static CustomFieldRollupType NotSpecified;
    public static CustomFieldRollupType Max;
    public static CustomFieldRollupType Min;
    public static CustomFieldRollupType Count;
    public static CustomFieldRollupType Sum;
    public static CustomFieldRollupType Average;
    public static CustomFieldRollupType AverageSublevel;
    public static CustomFieldRollupType CountSublevel;
    public static CustomFieldRollupType CountNonSummary;
    public static CustomFieldRollupType StdDev;
    public static CustomFieldRollupType Formula;
    public static CustomFieldRollupType None;
}
public enum Microsoft.ProjectServer.Client.CustomFieldType : Enum {
    public int value__;
    public static CustomFieldType COST;
    public static CustomFieldType DATE;
    public static CustomFieldType FINISHDATE;
    public static CustomFieldType DURATION;
    public static CustomFieldType FLAG;
    public static CustomFieldType NUMBER;
    public static CustomFieldType TEXT;
}
[ScriptTypeAttribute("PS.DeletedPublishedAssignment")]
public class Microsoft.ProjectServer.Client.DeletedPublishedAssignment : ClientObject {
    [RemoteAttribute]
public DateTime DeletedDate { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public Guid ProjectId { get; }
    [EditorBrowsableAttribute("1")]
public DeletedPublishedAssignment(ClientRuntimeContext context, ObjectPath objectPath);
    public DateTime get_DeletedDate();
    public Guid get_Id();
    public Guid get_ProjectId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.DeletedPublishedAssignmentCollection")]
public class Microsoft.ProjectServer.Client.DeletedPublishedAssignmentCollection : ClientObjectCollection`1<DeletedPublishedAssignment> {
    [EditorBrowsableAttribute("1")]
public DeletedPublishedAssignmentCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.DeletedPublishedAssignmentPropertyNames : object {
    public static string DeletedDate;
    public static string Id;
    public static string ProjectId;
}
public enum Microsoft.ProjectServer.Client.DependencyType : Enum {
    public int value__;
    public static DependencyType FinishFinish;
    public static DependencyType FinishStart;
    public static DependencyType StartFinish;
    public static DependencyType StartStart;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.DraftAssignment")]
public class Microsoft.ProjectServer.Client.DraftAssignment : Assignment {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; public set; }
    [RemoteAttribute]
public double ActualCost { get; public set; }
    [RemoteAttribute]
public DateTime ActualFinish { get; public set; }
    [RemoteAttribute]
public string ActualOvertimeWork { get; public set; }
    [RemoteAttribute]
public TimeSpan ActualOvertimeWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public DateTime ActualStart { get; public set; }
    [RemoteAttribute]
public string ActualWork { get; public set; }
    [RemoteAttribute]
public TimeSpan ActualWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public double BudgetedCost { get; public set; }
    [RemoteAttribute]
public string BudgetedWork { get; public set; }
    [RemoteAttribute]
public TimeSpan BudgetedWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public double Cost { get; public set; }
    [RemoteAttribute]
public CostRateTableName CostRateTable { get; public set; }
    [RemoteAttribute]
public BookingType DefaultBookingType { get; public set; }
    [RemoteAttribute]
public string Delay { get; public set; }
    [RemoteAttribute]
public TimeSpan DelayTimeSpan { get; public set; }
    [RemoteAttribute]
public bool IsLockedByManager { get; public set; }
    [RemoteAttribute]
public bool IsWorkResource { get; public set; }
    [RemoteAttribute]
public string OvertimeWork { get; public set; }
    [RemoteAttribute]
public TimeSpan OvertimeWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public User Owner { get; public set; }
    [RemoteAttribute]
public DraftAssignment Parent { get; }
    [RemoteAttribute]
public int PercentWorkComplete { get; public set; }
    [RemoteAttribute]
public string RegularWork { get; public set; }
    [RemoteAttribute]
public TimeSpan RegularWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public string RemainingOvertimeWork { get; public set; }
    [RemoteAttribute]
public TimeSpan RemainingOvertimeWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public string RemainingWork { get; public set; }
    [RemoteAttribute]
public TimeSpan RemainingWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public DraftProjectResource Resource { get; }
    [RemoteAttribute]
public double ResourceCapacity { get; public set; }
    [RemoteAttribute]
public DraftTask Task { get; }
    [RemoteAttribute]
public string Work { get; public set; }
    [RemoteAttribute]
public TimeSpan WorkTimeSpan { get; public set; }
    [EditorBrowsableAttribute("1")]
public DraftAssignment(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    [RemoteAttribute]
public void set_Item(string fieldName, object value);
    public double get_ActualCost();
    public void set_ActualCost(double value);
    public DateTime get_ActualFinish();
    public void set_ActualFinish(DateTime value);
    public string get_ActualOvertimeWork();
    public void set_ActualOvertimeWork(string value);
    public TimeSpan get_ActualOvertimeWorkTimeSpan();
    public void set_ActualOvertimeWorkTimeSpan(TimeSpan value);
    public DateTime get_ActualStart();
    public void set_ActualStart(DateTime value);
    public string get_ActualWork();
    public void set_ActualWork(string value);
    public TimeSpan get_ActualWorkTimeSpan();
    public void set_ActualWorkTimeSpan(TimeSpan value);
    public double get_BudgetedCost();
    public void set_BudgetedCost(double value);
    public string get_BudgetedWork();
    public void set_BudgetedWork(string value);
    public TimeSpan get_BudgetedWorkTimeSpan();
    public void set_BudgetedWorkTimeSpan(TimeSpan value);
    public double get_Cost();
    public void set_Cost(double value);
    public CostRateTableName get_CostRateTable();
    public void set_CostRateTable(CostRateTableName value);
    public BookingType get_DefaultBookingType();
    public void set_DefaultBookingType(BookingType value);
    public string get_Delay();
    public void set_Delay(string value);
    public TimeSpan get_DelayTimeSpan();
    public void set_DelayTimeSpan(TimeSpan value);
    public bool get_IsLockedByManager();
    public void set_IsLockedByManager(bool value);
    public bool get_IsWorkResource();
    public void set_IsWorkResource(bool value);
    public string get_OvertimeWork();
    public void set_OvertimeWork(string value);
    public TimeSpan get_OvertimeWorkTimeSpan();
    public void set_OvertimeWorkTimeSpan(TimeSpan value);
    public User get_Owner();
    public void set_Owner(User value);
    public DraftAssignment get_Parent();
    public int get_PercentWorkComplete();
    public void set_PercentWorkComplete(int value);
    public string get_RegularWork();
    public void set_RegularWork(string value);
    public TimeSpan get_RegularWorkTimeSpan();
    public void set_RegularWorkTimeSpan(TimeSpan value);
    public string get_RemainingOvertimeWork();
    public void set_RemainingOvertimeWork(string value);
    public TimeSpan get_RemainingOvertimeWorkTimeSpan();
    public void set_RemainingOvertimeWorkTimeSpan(TimeSpan value);
    public string get_RemainingWork();
    public void set_RemainingWork(string value);
    public TimeSpan get_RemainingWorkTimeSpan();
    public void set_RemainingWorkTimeSpan(TimeSpan value);
    public DraftProjectResource get_Resource();
    public double get_ResourceCapacity();
    public void set_ResourceCapacity(double value);
    public DraftTask get_Task();
    public string get_Work();
    public void set_Work(string value);
    public TimeSpan get_WorkTimeSpan();
    public void set_WorkTimeSpan(TimeSpan value);
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
internal void SetCustomFieldValue(string fieldName, object value);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.DraftAssignmentCollection")]
public class Microsoft.ProjectServer.Client.DraftAssignmentCollection : ClientObjectCollection`1<DraftAssignment> {
    [EditorBrowsableAttribute("1")]
public DraftAssignmentCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public DraftAssignment GetById(string objectId);
    [RemoteAttribute]
public DraftAssignment GetByGuid(Guid uid);
    [RemoteAttribute]
public DraftAssignment Add(AssignmentCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(DraftAssignment assignment);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.DraftAssignmentObjectPropertyNames : object {
    public static string Owner;
    public static string Parent;
    public static string Resource;
    public static string Task;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.DraftAssignmentPropertyNames : object {
    public static string ActualCost;
    public static string ActualFinish;
    public static string ActualOvertimeWork;
    public static string ActualOvertimeWorkTimeSpan;
    public static string ActualStart;
    public static string ActualWork;
    public static string ActualWorkTimeSpan;
    public static string BudgetedCost;
    public static string BudgetedWork;
    public static string BudgetedWorkTimeSpan;
    public static string Cost;
    public static string CostRateTable;
    public static string DefaultBookingType;
    public static string Delay;
    public static string DelayTimeSpan;
    public static string IsLockedByManager;
    public static string IsWorkResource;
    public static string OvertimeWork;
    public static string OvertimeWorkTimeSpan;
    public static string PercentWorkComplete;
    public static string RegularWork;
    public static string RegularWorkTimeSpan;
    public static string RemainingOvertimeWork;
    public static string RemainingOvertimeWorkTimeSpan;
    public static string RemainingWork;
    public static string RemainingWorkTimeSpan;
    public static string ResourceCapacity;
    public static string Work;
    public static string WorkTimeSpan;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.DraftProject")]
public class Microsoft.ProjectServer.Client.DraftProject : Project {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; public set; }
    [RemoteAttribute]
public DraftAssignmentCollection Assignments { get; }
    [RemoteAttribute]
public Calendar Calendar { get; public set; }
    [RemoteAttribute]
public string CurrencyCode { get; public set; }
    [RemoteAttribute]
public int CurrencyDigits { get; public set; }
    [RemoteAttribute]
public CurrencySymbolPosition CurrencyPosition { get; public set; }
    [RemoteAttribute]
public string CurrencySymbol { get; public set; }
    [RemoteAttribute]
public DateTime CurrentDate { get; public set; }
    [RemoteAttribute]
public short DaysPerMonth { get; public set; }
    [RemoteAttribute]
public bool DefaultEffortDriven { get; public set; }
    [RemoteAttribute]
public bool DefaultEstimatedDuration { get; public set; }
    [RemoteAttribute]
public FixedCostAccrual DefaultFixedCostAccrual { get; public set; }
    [RemoteAttribute]
public double DefaultOvertimeRate { get; public set; }
    [RemoteAttribute]
public double DefaultStandardRate { get; public set; }
    [RemoteAttribute]
public TaskType DefaultTaskType { get; public set; }
    [RemoteAttribute]
public WorkFormat DefaultWorkFormat { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public DateTime FinishDate { get; public set; }
    [RemoteAttribute]
public short FiscalYearStartMonth { get; public set; }
    [RemoteAttribute]
public DraftProject IncludeCustomFields { get; }
    [RemoteAttribute]
public int MinutesPerDay { get; public set; }
    [RemoteAttribute]
public int MinutesPerWeek { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public bool NewTasksAreManual { get; public set; }
    [RemoteAttribute]
public bool NumberFiscalYearFromStart { get; public set; }
    [RemoteAttribute]
public User Owner { get; public set; }
    [RemoteAttribute]
public string ProjectIdentifier { get; public set; }
    [RemoteAttribute]
public DraftProjectResourceCollection ProjectResources { get; }
    [RemoteAttribute]
public bool ProtectedActualsSynch { get; public set; }
    [RemoteAttribute]
public bool ScheduledFromStart { get; public set; }
    [RemoteAttribute]
public bool ShowEstimatedDurations { get; public set; }
    [RemoteAttribute]
public DateTime StartDate { get; public set; }
    [RemoteAttribute]
public DateTime StatusDate { get; public set; }
    [RemoteAttribute]
public DraftTaskLinkCollection TaskLinks { get; }
    [RemoteAttribute]
public DraftTaskCollection Tasks { get; }
    [RemoteAttribute]
public TrackingMode TrackingMode { get; public set; }
    [RemoteAttribute]
public DateTime UtilizationDate { get; public set; }
    [RemoteAttribute]
public ProjectUtilizationType UtilizationType { get; public set; }
    [RemoteAttribute]
public short WeekStartDay { get; public set; }
    [RemoteAttribute]
public decimal WinprojVersion { get; public set; }
    [EditorBrowsableAttribute("1")]
public DraftProject(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    [RemoteAttribute]
public void set_Item(string fieldName, object value);
    public DraftAssignmentCollection get_Assignments();
    public Calendar get_Calendar();
    public void set_Calendar(Calendar value);
    public string get_CurrencyCode();
    public void set_CurrencyCode(string value);
    public int get_CurrencyDigits();
    public void set_CurrencyDigits(int value);
    public CurrencySymbolPosition get_CurrencyPosition();
    public void set_CurrencyPosition(CurrencySymbolPosition value);
    public string get_CurrencySymbol();
    public void set_CurrencySymbol(string value);
    public DateTime get_CurrentDate();
    public void set_CurrentDate(DateTime value);
    public short get_DaysPerMonth();
    public void set_DaysPerMonth(short value);
    public bool get_DefaultEffortDriven();
    public void set_DefaultEffortDriven(bool value);
    public bool get_DefaultEstimatedDuration();
    public void set_DefaultEstimatedDuration(bool value);
    public FixedCostAccrual get_DefaultFixedCostAccrual();
    public void set_DefaultFixedCostAccrual(FixedCostAccrual value);
    public double get_DefaultOvertimeRate();
    public void set_DefaultOvertimeRate(double value);
    public double get_DefaultStandardRate();
    public void set_DefaultStandardRate(double value);
    public TaskType get_DefaultTaskType();
    public void set_DefaultTaskType(TaskType value);
    public WorkFormat get_DefaultWorkFormat();
    public void set_DefaultWorkFormat(WorkFormat value);
    public string get_Description();
    public void set_Description(string value);
    public DateTime get_FinishDate();
    public void set_FinishDate(DateTime value);
    public short get_FiscalYearStartMonth();
    public void set_FiscalYearStartMonth(short value);
    public DraftProject get_IncludeCustomFields();
    public int get_MinutesPerDay();
    public void set_MinutesPerDay(int value);
    public int get_MinutesPerWeek();
    public void set_MinutesPerWeek(int value);
    public string get_Name();
    public void set_Name(string value);
    public bool get_NewTasksAreManual();
    public void set_NewTasksAreManual(bool value);
    public bool get_NumberFiscalYearFromStart();
    public void set_NumberFiscalYearFromStart(bool value);
    public User get_Owner();
    public void set_Owner(User value);
    public string get_ProjectIdentifier();
    public void set_ProjectIdentifier(string value);
    public DraftProjectResourceCollection get_ProjectResources();
    public bool get_ProtectedActualsSynch();
    public void set_ProtectedActualsSynch(bool value);
    public bool get_ScheduledFromStart();
    public void set_ScheduledFromStart(bool value);
    public bool get_ShowEstimatedDurations();
    public void set_ShowEstimatedDurations(bool value);
    public DateTime get_StartDate();
    public void set_StartDate(DateTime value);
    public DateTime get_StatusDate();
    public void set_StatusDate(DateTime value);
    public DraftTaskLinkCollection get_TaskLinks();
    public DraftTaskCollection get_Tasks();
    public TrackingMode get_TrackingMode();
    public void set_TrackingMode(TrackingMode value);
    public DateTime get_UtilizationDate();
    public void set_UtilizationDate(DateTime value);
    public ProjectUtilizationType get_UtilizationType();
    public void set_UtilizationType(ProjectUtilizationType value);
    public short get_WeekStartDay();
    public void set_WeekStartDay(short value);
    public decimal get_WinprojVersion();
    public void set_WinprojVersion(decimal value);
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
public void Validate();
    [RemoteAttribute]
public virtual QueueJob Update();
    [RemoteAttribute]
public QueueJob Publish(bool checkIn);
    [RemoteAttribute]
public QueueJob PublishSummary(bool checkIn);
    [RemoteAttribute]
public QueueJob CheckIn(bool force);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.DraftProjectObjectPropertyNames : object {
    public static string Assignments;
    public static string Calendar;
    public static string IncludeCustomFields;
    public static string Owner;
    public static string ProjectResources;
    public static string TaskLinks;
    public static string Tasks;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.DraftProjectPropertyNames : object {
    public static string CurrencyCode;
    public static string CurrencyDigits;
    public static string CurrencyPosition;
    public static string CurrencySymbol;
    public static string CurrentDate;
    public static string DaysPerMonth;
    public static string DefaultEffortDriven;
    public static string DefaultEstimatedDuration;
    public static string DefaultFixedCostAccrual;
    public static string DefaultOvertimeRate;
    public static string DefaultStandardRate;
    public static string DefaultTaskType;
    public static string DefaultWorkFormat;
    public static string Description;
    public static string FinishDate;
    public static string FiscalYearStartMonth;
    public static string MinutesPerDay;
    public static string MinutesPerWeek;
    public static string Name;
    public static string NewTasksAreManual;
    public static string NumberFiscalYearFromStart;
    public static string ProjectIdentifier;
    public static string ProtectedActualsSynch;
    public static string ScheduledFromStart;
    public static string ShowEstimatedDurations;
    public static string StartDate;
    public static string StatusDate;
    public static string TrackingMode;
    public static string UtilizationDate;
    public static string UtilizationType;
    public static string WeekStartDay;
    public static string WinprojVersion;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.DraftProjectResource")]
public class Microsoft.ProjectServer.Client.DraftProjectResource : ProjectResource {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; public set; }
    [RemoteAttribute]
public DraftAssignmentCollection Assignments { get; }
    [RemoteAttribute]
public bool CanLevel { get; public set; }
    [RemoteAttribute]
public string Code { get; public set; }
    [RemoteAttribute]
public AccrueAt CostAccrual { get; public set; }
    [RemoteAttribute]
public string CostCenter { get; public set; }
    [RemoteAttribute]
public double CostPerUse { get; public set; }
    [RemoteAttribute]
public User DefaultAssignmentOwner { get; public set; }
    [RemoteAttribute]
public BookingType DefaultBookingType { get; public set; }
    [RemoteAttribute]
public string Email { get; public set; }
    [RemoteAttribute]
public string Group { get; public set; }
    [RemoteAttribute]
public string Initials { get; public set; }
    [RemoteAttribute]
public string MaterialLabel { get; public set; }
    [RemoteAttribute]
public double MaximumCapacity { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public double OvertimeRate { get; public set; }
    [RemoteAttribute]
public OvertimeRateFormat OvertimeRateUnits { get; public set; }
    [RemoteAttribute]
public string Phonetics { get; public set; }
    [RemoteAttribute]
public double StandardRate { get; public set; }
    [RemoteAttribute]
public StandardRateFormat StandardRateUnits { get; public set; }
    [EditorBrowsableAttribute("1")]
public DraftProjectResource(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    [RemoteAttribute]
public void set_Item(string fieldName, object value);
    public DraftAssignmentCollection get_Assignments();
    public bool get_CanLevel();
    public void set_CanLevel(bool value);
    public string get_Code();
    public void set_Code(string value);
    public AccrueAt get_CostAccrual();
    public void set_CostAccrual(AccrueAt value);
    public string get_CostCenter();
    public void set_CostCenter(string value);
    public double get_CostPerUse();
    public void set_CostPerUse(double value);
    public User get_DefaultAssignmentOwner();
    public void set_DefaultAssignmentOwner(User value);
    public BookingType get_DefaultBookingType();
    public void set_DefaultBookingType(BookingType value);
    public string get_Email();
    public void set_Email(string value);
    public string get_Group();
    public void set_Group(string value);
    public string get_Initials();
    public void set_Initials(string value);
    public string get_MaterialLabel();
    public void set_MaterialLabel(string value);
    public double get_MaximumCapacity();
    public void set_MaximumCapacity(double value);
    public string get_Name();
    public void set_Name(string value);
    public double get_OvertimeRate();
    public void set_OvertimeRate(double value);
    public OvertimeRateFormat get_OvertimeRateUnits();
    public void set_OvertimeRateUnits(OvertimeRateFormat value);
    public string get_Phonetics();
    public void set_Phonetics(string value);
    public double get_StandardRate();
    public void set_StandardRate(double value);
    public StandardRateFormat get_StandardRateUnits();
    public void set_StandardRateUnits(StandardRateFormat value);
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
internal void SetCustomFieldValue(string fieldName, object value);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.DraftProjectResourceCollection")]
public class Microsoft.ProjectServer.Client.DraftProjectResourceCollection : ClientObjectCollection`1<DraftProjectResource> {
    [EditorBrowsableAttribute("1")]
public DraftProjectResourceCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public DraftProjectResource GetById(string objectId);
    [RemoteAttribute]
public DraftProjectResource GetByGuid(Guid uid);
    [RemoteAttribute]
public DraftProjectResource Add(ProjectResourceCreationInformation parameters);
    [RemoteAttribute]
public DraftProjectResource AddEnterpriseResource(EnterpriseResource resource);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(DraftProjectResource resource);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.DraftProjectResourceObjectPropertyNames : object {
    public static string Assignments;
    public static string DefaultAssignmentOwner;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.DraftProjectResourcePropertyNames : object {
    public static string CanLevel;
    public static string Code;
    public static string CostAccrual;
    public static string CostCenter;
    public static string CostPerUse;
    public static string DefaultBookingType;
    public static string Email;
    public static string Group;
    public static string Initials;
    public static string MaterialLabel;
    public static string MaximumCapacity;
    public static string Name;
    public static string OvertimeRate;
    public static string OvertimeRateUnits;
    public static string Phonetics;
    public static string StandardRate;
    public static string StandardRateUnits;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.DraftTask")]
public class Microsoft.ProjectServer.Client.DraftTask : Task {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; public set; }
    [RemoteAttribute]
public double ActualCost { get; public set; }
    [RemoteAttribute]
public DateTime ActualFinish { get; public set; }
    [RemoteAttribute]
public DateTime ActualStart { get; public set; }
    [RemoteAttribute]
public string ActualWork { get; public set; }
    [RemoteAttribute]
public TimeSpan ActualWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public DraftAssignmentCollection Assignments { get; }
    [RemoteAttribute]
public string BudgetWork { get; public set; }
    [RemoteAttribute]
public TimeSpan BudgetWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public Calendar Calendar { get; public set; }
    [RemoteAttribute]
public DateTime Completion { get; public set; }
    [RemoteAttribute]
public DateTime ConstraintStartEnd { get; public set; }
    [RemoteAttribute]
public ConstraintType ConstraintType { get; public set; }
    [RemoteAttribute]
public double Cost { get; public set; }
    [RemoteAttribute]
public DateTime Deadline { get; public set; }
    [RemoteAttribute]
public string Duration { get; public set; }
    [RemoteAttribute]
public TimeSpan DurationTimeSpan { get; public set; }
    [RemoteAttribute]
public DateTime Finish { get; public set; }
    [RemoteAttribute]
public string FinishText { get; public set; }
    [RemoteAttribute]
public double FixedCost { get; public set; }
    [RemoteAttribute]
public bool IsActive { get; public set; }
    [RemoteAttribute]
public bool IsEffortDriven { get; public set; }
    [RemoteAttribute]
public bool IsLockedByManager { get; public set; }
    [RemoteAttribute]
public bool IsManual { get; public set; }
    [RemoteAttribute]
public bool IsMarked { get; public set; }
    [RemoteAttribute]
public bool IsMilestone { get; public set; }
    [RemoteAttribute]
public bool LevelingAdjustsAssignments { get; public set; }
    [RemoteAttribute]
public bool LevelingCanSplit { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public int OutlineLevel { get; public set; }
    [RemoteAttribute]
public DraftTask Parent { get; }
    [RemoteAttribute]
public int PercentComplete { get; public set; }
    [RemoteAttribute]
public int PercentPhysicalWorkComplete { get; public set; }
    [RemoteAttribute]
public DraftTaskLinkCollection Predecessors { get; }
    [RemoteAttribute]
public int Priority { get; public set; }
    [RemoteAttribute]
public string RemainingDuration { get; public set; }
    [RemoteAttribute]
public TimeSpan RemainingDurationTimeSpan { get; public set; }
    [RemoteAttribute]
public DateTime Start { get; public set; }
    [RemoteAttribute]
public string StartText { get; public set; }
    [RemoteAttribute]
public User StatusManager { get; public set; }
    [RemoteAttribute]
public DraftTaskLinkCollection Successors { get; }
    [RemoteAttribute]
public TaskType TaskType { get; public set; }
    [RemoteAttribute]
public bool UsePercentPhysicalWorkComplete { get; public set; }
    [RemoteAttribute]
public string Work { get; public set; }
    [RemoteAttribute]
public TimeSpan WorkTimeSpan { get; public set; }
    [EditorBrowsableAttribute("1")]
public DraftTask(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    [RemoteAttribute]
public void set_Item(string fieldName, object value);
    public double get_ActualCost();
    public void set_ActualCost(double value);
    public DateTime get_ActualFinish();
    public void set_ActualFinish(DateTime value);
    public DateTime get_ActualStart();
    public void set_ActualStart(DateTime value);
    public string get_ActualWork();
    public void set_ActualWork(string value);
    public TimeSpan get_ActualWorkTimeSpan();
    public void set_ActualWorkTimeSpan(TimeSpan value);
    public DraftAssignmentCollection get_Assignments();
    public string get_BudgetWork();
    public void set_BudgetWork(string value);
    public TimeSpan get_BudgetWorkTimeSpan();
    public void set_BudgetWorkTimeSpan(TimeSpan value);
    public Calendar get_Calendar();
    public void set_Calendar(Calendar value);
    public DateTime get_Completion();
    public void set_Completion(DateTime value);
    public DateTime get_ConstraintStartEnd();
    public void set_ConstraintStartEnd(DateTime value);
    public ConstraintType get_ConstraintType();
    public void set_ConstraintType(ConstraintType value);
    public double get_Cost();
    public void set_Cost(double value);
    public DateTime get_Deadline();
    public void set_Deadline(DateTime value);
    public string get_Duration();
    public void set_Duration(string value);
    public TimeSpan get_DurationTimeSpan();
    public void set_DurationTimeSpan(TimeSpan value);
    public DateTime get_Finish();
    public void set_Finish(DateTime value);
    public string get_FinishText();
    public void set_FinishText(string value);
    public double get_FixedCost();
    public void set_FixedCost(double value);
    public bool get_IsActive();
    public void set_IsActive(bool value);
    public bool get_IsEffortDriven();
    public void set_IsEffortDriven(bool value);
    public bool get_IsLockedByManager();
    public void set_IsLockedByManager(bool value);
    public bool get_IsManual();
    public void set_IsManual(bool value);
    public bool get_IsMarked();
    public void set_IsMarked(bool value);
    public bool get_IsMilestone();
    public void set_IsMilestone(bool value);
    public bool get_LevelingAdjustsAssignments();
    public void set_LevelingAdjustsAssignments(bool value);
    public bool get_LevelingCanSplit();
    public void set_LevelingCanSplit(bool value);
    public string get_Name();
    public void set_Name(string value);
    public int get_OutlineLevel();
    public void set_OutlineLevel(int value);
    public DraftTask get_Parent();
    public int get_PercentComplete();
    public void set_PercentComplete(int value);
    public int get_PercentPhysicalWorkComplete();
    public void set_PercentPhysicalWorkComplete(int value);
    public DraftTaskLinkCollection get_Predecessors();
    public int get_Priority();
    public void set_Priority(int value);
    public string get_RemainingDuration();
    public void set_RemainingDuration(string value);
    public TimeSpan get_RemainingDurationTimeSpan();
    public void set_RemainingDurationTimeSpan(TimeSpan value);
    public DateTime get_Start();
    public void set_Start(DateTime value);
    public string get_StartText();
    public void set_StartText(string value);
    public User get_StatusManager();
    public void set_StatusManager(User value);
    public DraftTaskLinkCollection get_Successors();
    public TaskType get_TaskType();
    public void set_TaskType(TaskType value);
    public bool get_UsePercentPhysicalWorkComplete();
    public void set_UsePercentPhysicalWorkComplete(bool value);
    public string get_Work();
    public void set_Work(string value);
    public TimeSpan get_WorkTimeSpan();
    public void set_WorkTimeSpan(TimeSpan value);
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
internal void SetCustomFieldValue(string fieldName, object value);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.DraftTaskCollection")]
public class Microsoft.ProjectServer.Client.DraftTaskCollection : ClientObjectCollection`1<DraftTask> {
    [EditorBrowsableAttribute("1")]
public DraftTaskCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public DraftTask GetById(string objectId);
    [RemoteAttribute]
public DraftTask GetByGuid(Guid uid);
    [RemoteAttribute]
public DraftTask Add(TaskCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(DraftTask task);
}
[ScriptTypeAttribute("PS.DraftTaskLink")]
public class Microsoft.ProjectServer.Client.DraftTaskLink : TaskLink {
    [RemoteAttribute]
public DependencyType DependencyType { get; public set; }
    [RemoteAttribute]
public DraftTask End { get; }
    [RemoteAttribute]
public string LinkLagDuration { get; public set; }
    [RemoteAttribute]
public Guid PredecessorTaskId { get; }
    [RemoteAttribute]
public DraftTask Start { get; }
    [RemoteAttribute]
public Guid SuccessorTaskId { get; }
    [EditorBrowsableAttribute("1")]
public DraftTaskLink(ClientRuntimeContext context, ObjectPath objectPath);
    public DependencyType get_DependencyType();
    public void set_DependencyType(DependencyType value);
    public DraftTask get_End();
    public string get_LinkLagDuration();
    public void set_LinkLagDuration(string value);
    public Guid get_PredecessorTaskId();
    public DraftTask get_Start();
    public Guid get_SuccessorTaskId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.DraftTaskLinkCollection")]
public class Microsoft.ProjectServer.Client.DraftTaskLinkCollection : ClientObjectCollection`1<DraftTaskLink> {
    [EditorBrowsableAttribute("1")]
public DraftTaskLinkCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public DraftTaskLink GetById(string objectId);
    [RemoteAttribute]
public DraftTaskLink GetByGuid(Guid uid);
    [RemoteAttribute]
public DraftTaskLink Add(TaskLinkCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(DraftTaskLink TaskLink);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.DraftTaskLinkObjectPropertyNames : object {
    public static string End;
    public static string Start;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.DraftTaskLinkPropertyNames : object {
    public static string DependencyType;
    public static string LinkLagDuration;
    public static string PredecessorTaskId;
    public static string SuccessorTaskId;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.DraftTaskObjectPropertyNames : object {
    public static string Assignments;
    public static string Calendar;
    public static string Parent;
    public static string Predecessors;
    public static string StatusManager;
    public static string Successors;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.DraftTaskPropertyNames : object {
    public static string ActualCost;
    public static string ActualFinish;
    public static string ActualStart;
    public static string ActualWork;
    public static string ActualWorkTimeSpan;
    public static string BudgetWork;
    public static string BudgetWorkTimeSpan;
    public static string Completion;
    public static string ConstraintStartEnd;
    public static string ConstraintType;
    public static string Cost;
    public static string Deadline;
    public static string Duration;
    public static string DurationTimeSpan;
    public static string Finish;
    public static string FinishText;
    public static string FixedCost;
    public static string IsActive;
    public static string IsEffortDriven;
    public static string IsLockedByManager;
    public static string IsManual;
    public static string IsMarked;
    public static string IsMilestone;
    public static string LevelingAdjustsAssignments;
    public static string LevelingCanSplit;
    public static string Name;
    public static string OutlineLevel;
    public static string PercentComplete;
    public static string PercentPhysicalWorkComplete;
    public static string Priority;
    public static string RemainingDuration;
    public static string RemainingDurationTimeSpan;
    public static string Start;
    public static string StartText;
    public static string TaskType;
    public static string UsePercentPhysicalWorkComplete;
    public static string Work;
    public static string WorkTimeSpan;
}
[ScriptTypeAttribute("PS.Engagement")]
public class Microsoft.ProjectServer.Client.Engagement : ClientObject {
    [RemoteAttribute]
public EngagementCommentCollection Comments { get; }
    [RemoteAttribute]
public DateTime CreatedDate { get; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public DateTime Modified { get; }
    [RemoteAttribute]
public User ModifiedBy { get; }
    [RemoteAttribute]
public Project Project { get; }
    [RemoteAttribute]
public EnterpriseResource Resource { get; public set; }
    [RemoteAttribute]
public User ReviewedBy { get; }
    [RemoteAttribute]
public DateTime ReviewedDate { get; }
    [RemoteAttribute]
public EngagementStatus Status { get; public set; }
    [RemoteAttribute]
public User SubmittedBy { get; }
    [RemoteAttribute]
public DateTime SubmittedDate { get; }
    [RemoteAttribute]
public bool TimephasedEditsOnly { get; }
    [EditorBrowsableAttribute("1")]
public Engagement(ClientRuntimeContext context, ObjectPath objectPath);
    public EngagementCommentCollection get_Comments();
    public DateTime get_CreatedDate();
    public string get_Description();
    public void set_Description(string value);
    public Guid get_Id();
    public DateTime get_Modified();
    public User get_ModifiedBy();
    public Project get_Project();
    public EnterpriseResource get_Resource();
    public void set_Resource(EnterpriseResource value);
    public User get_ReviewedBy();
    public DateTime get_ReviewedDate();
    public EngagementStatus get_Status();
    public void set_Status(EngagementStatus value);
    public User get_SubmittedBy();
    public DateTime get_SubmittedDate();
    public bool get_TimephasedEditsOnly();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.EngagementComment")]
public class Microsoft.ProjectServer.Client.EngagementComment : ClientObject {
    [RemoteAttribute]
public User Author { get; }
    [RemoteAttribute]
public DateTime Created { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string Message { get; }
    [EditorBrowsableAttribute("1")]
public EngagementComment(ClientRuntimeContext context, ObjectPath objectPath);
    public User get_Author();
    public DateTime get_Created();
    public Guid get_Id();
    public string get_Message();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.EngagementCommentCollection")]
public class Microsoft.ProjectServer.Client.EngagementCommentCollection : ClientObjectCollection`1<EngagementComment> {
    [EditorBrowsableAttribute("1")]
public EngagementCommentCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public EngagementComment Add(string comment);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EngagementCommentObjectPropertyNames : object {
    public static string Author;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EngagementCommentPropertyNames : object {
    public static string Created;
    public static string Id;
    public static string Message;
}
public enum Microsoft.ProjectServer.Client.EngagementContourType : Enum {
    public int value__;
    public static EngagementContourType Approved;
    public static EngagementContourType Proposed;
    public static EngagementContourType Draft;
}
[ScriptTypeAttribute("PS.EngagementCreationInformation")]
public class Microsoft.ProjectServer.Client.EngagementCreationInformation : ClientValueObject {
    private string m_description;
    private DateTime m_finish;
    private Guid m_id;
    private double m_maxUnits;
    private DateTime m_start;
    private IEnumerable`1<EngagementTimephasedPeriodCreationInformation> m_timephasedPeriodData;
    private string m_work;
    private TimeSpan m_workTimeSpan;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public DateTime Finish { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public double MaxUnits { get; public set; }
    [RemoteAttribute]
public DateTime Start { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<EngagementTimephasedPeriodCreationInformation> TimephasedPeriodData { get; public set; }
    [RemoteAttribute]
public string Work { get; public set; }
    [RemoteAttribute]
public TimeSpan WorkTimeSpan { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public DateTime get_Finish();
    public void set_Finish(DateTime value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public double get_MaxUnits();
    public void set_MaxUnits(double value);
    public DateTime get_Start();
    public void set_Start(DateTime value);
    public IEnumerable`1<EngagementTimephasedPeriodCreationInformation> get_TimephasedPeriodData();
    public void set_TimephasedPeriodData(IEnumerable`1<EngagementTimephasedPeriodCreationInformation> value);
    public string get_Work();
    public void set_Work(string value);
    public TimeSpan get_WorkTimeSpan();
    public void set_WorkTimeSpan(TimeSpan value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EngagementObjectPropertyNames : object {
    public static string Comments;
    public static string ModifiedBy;
    public static string Project;
    public static string Resource;
    public static string ReviewedBy;
    public static string SubmittedBy;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EngagementPropertyNames : object {
    public static string CreatedDate;
    public static string Description;
    public static string Id;
    public static string Modified;
    public static string ReviewedDate;
    public static string Status;
    public static string SubmittedDate;
    public static string TimephasedEditsOnly;
}
[ScriptTypeAttribute("PS.EngagementSaveConflictException")]
public class Microsoft.ProjectServer.Client.EngagementSaveConflictException : ClientValueObject {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
public enum Microsoft.ProjectServer.Client.EngagementStatus : Enum {
    public int value__;
    public static EngagementStatus Approved;
    public static EngagementStatus Proposed;
    public static EngagementStatus Draft;
    public static EngagementStatus Rejected;
    public static EngagementStatus Reproposed;
}
[ScriptTypeAttribute("PS.EngagementTimephasedPeriod")]
public class Microsoft.ProjectServer.Client.EngagementTimephasedPeriod : ClientObject {
    [RemoteAttribute]
public DateTime End { get; }
    [RemoteAttribute]
public double MaxUnits { get; public set; }
    [RemoteAttribute]
public DateTime Start { get; }
    [RemoteAttribute]
public string Work { get; public set; }
    [RemoteAttribute]
public TimeSpan WorkTimeSpan { get; public set; }
    [EditorBrowsableAttribute("1")]
public EngagementTimephasedPeriod(ClientRuntimeContext context, ObjectPath objectPath);
    public DateTime get_End();
    public double get_MaxUnits();
    public void set_MaxUnits(double value);
    public DateTime get_Start();
    public string get_Work();
    public void set_Work(string value);
    public TimeSpan get_WorkTimeSpan();
    public void set_WorkTimeSpan(TimeSpan value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.EngagementTimephasedPeriodCreationInformation")]
public class Microsoft.ProjectServer.Client.EngagementTimephasedPeriodCreationInformation : ClientValueObject {
    private DateTime m_end;
    private double m_maxUnits;
    private DateTime m_start;
    private string m_work;
    private TimeSpan m_workTimeSpan;
    [RemoteAttribute]
public DateTime End { get; public set; }
    [RemoteAttribute]
public double MaxUnits { get; public set; }
    [RemoteAttribute]
public DateTime Start { get; public set; }
    [RemoteAttribute]
public string Work { get; public set; }
    [RemoteAttribute]
public TimeSpan WorkTimeSpan { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_End();
    public void set_End(DateTime value);
    public double get_MaxUnits();
    public void set_MaxUnits(double value);
    public DateTime get_Start();
    public void set_Start(DateTime value);
    public string get_Work();
    public void set_Work(string value);
    public TimeSpan get_WorkTimeSpan();
    public void set_WorkTimeSpan(TimeSpan value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EngagementTimephasedPeriodPropertyNames : object {
    public static string End;
    public static string MaxUnits;
    public static string Start;
    public static string Work;
    public static string WorkTimeSpan;
}
[ScriptTypeAttribute("PS.EnterpriseProjectType")]
public class Microsoft.ProjectServer.Client.EnterpriseProjectType : ClientObject {
    [RemoteAttribute]
public IEnumerable`1<Guid> Departments { get; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string ImageUrl { get; public set; }
    [RemoteAttribute]
public bool IsDefault { get; public set; }
    [RemoteAttribute]
public bool IsManaged { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public int Order { get; public set; }
    [RemoteAttribute]
public bool PermissionSyncEnable { get; public set; }
    [RemoteAttribute]
public ProjectDetailPageCollection ProjectDetailPages { get; }
    [RemoteAttribute]
public Guid ProjectPlanTemplateId { get; public set; }
    [RemoteAttribute]
public EnterpriseProjectTypeSiteCreationOptions SiteCreationOption { get; public set; }
    [RemoteAttribute]
public string SiteCreationURL { get; public set; }
    [RemoteAttribute]
public bool TaskListSyncEnable { get; public set; }
    [RemoteAttribute]
public Guid WorkflowAssociationId { get; public set; }
    [RemoteAttribute]
public string WorkflowAssociationName { get; public set; }
    [RemoteAttribute]
public int WorkspaceTemplateLCID { get; public set; }
    [RemoteAttribute]
public string WorkspaceTemplateName { get; public set; }
    [EditorBrowsableAttribute("1")]
public EnterpriseProjectType(ClientRuntimeContext context, ObjectPath objectPath);
    public IEnumerable`1<Guid> get_Departments();
    public string get_Description();
    public void set_Description(string value);
    public Guid get_Id();
    public string get_ImageUrl();
    public void set_ImageUrl(string value);
    public bool get_IsDefault();
    public void set_IsDefault(bool value);
    public bool get_IsManaged();
    public void set_IsManaged(bool value);
    public string get_Name();
    public void set_Name(string value);
    public int get_Order();
    public void set_Order(int value);
    public bool get_PermissionSyncEnable();
    public void set_PermissionSyncEnable(bool value);
    public ProjectDetailPageCollection get_ProjectDetailPages();
    public Guid get_ProjectPlanTemplateId();
    public void set_ProjectPlanTemplateId(Guid value);
    public EnterpriseProjectTypeSiteCreationOptions get_SiteCreationOption();
    public void set_SiteCreationOption(EnterpriseProjectTypeSiteCreationOptions value);
    public string get_SiteCreationURL();
    public void set_SiteCreationURL(string value);
    public bool get_TaskListSyncEnable();
    public void set_TaskListSyncEnable(bool value);
    public Guid get_WorkflowAssociationId();
    public void set_WorkflowAssociationId(Guid value);
    public string get_WorkflowAssociationName();
    public void set_WorkflowAssociationName(string value);
    public int get_WorkspaceTemplateLCID();
    public void set_WorkspaceTemplateLCID(int value);
    public string get_WorkspaceTemplateName();
    public void set_WorkspaceTemplateName(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void AddDepartment(Guid departmentValueGuid);
    [RemoteAttribute]
public void RemoveDepartment(Guid departmentValueGuid);
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public void UpdateCreatePDP(ProjectDetailPageCreationInformation pdp);
}
[ScriptTypeAttribute("PS.EnterpriseProjectTypeCollection")]
public class Microsoft.ProjectServer.Client.EnterpriseProjectTypeCollection : ClientObjectCollection`1<EnterpriseProjectType> {
    [EditorBrowsableAttribute("1")]
public EnterpriseProjectTypeCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public EnterpriseProjectType GetById(string objectId);
    [RemoteAttribute]
public EnterpriseProjectType GetByGuid(Guid uid);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public EnterpriseProjectType Add(EnterpriseProjectTypeCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(EnterpriseProjectType ept);
}
[ScriptTypeAttribute("PS.EnterpriseProjectTypeCreationInformation")]
public class Microsoft.ProjectServer.Client.EnterpriseProjectTypeCreationInformation : ClientValueObject {
    private IEnumerable`1<Guid> m_departmentIds;
    private string m_description;
    private Guid m_id;
    private string m_imageUrl;
    private bool m_isDefault;
    private bool m_isManaged;
    private string m_name;
    private int m_order;
    private bool m_permissionSyncEnable;
    private IEnumerable`1<ProjectDetailPageCreationInformation> m_projectDetailPages;
    private Guid m_projectPlanTemplateId;
    private EnterpriseProjectTypeSiteCreationOptions m_siteCreationOption;
    private string m_siteCreationURL;
    private bool m_taskListSyncEnable;
    private Guid m_workflowAssociationId;
    private string m_workflowAssociationName;
    private UInt32 m_workspaceTemplateLCID;
    private string m_workspaceTemplateName;
    [RemoteAttribute]
public IEnumerable`1<Guid> DepartmentIds { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string ImageUrl { get; public set; }
    [RemoteAttribute]
public bool IsDefault { get; public set; }
    [RemoteAttribute]
public bool IsManaged { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public int Order { get; public set; }
    [RemoteAttribute]
public bool PermissionSyncEnable { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<ProjectDetailPageCreationInformation> ProjectDetailPages { get; public set; }
    [RemoteAttribute]
public Guid ProjectPlanTemplateId { get; public set; }
    [RemoteAttribute]
public EnterpriseProjectTypeSiteCreationOptions SiteCreationOption { get; public set; }
    [RemoteAttribute]
public string SiteCreationURL { get; public set; }
    [RemoteAttribute]
public bool TaskListSyncEnable { get; public set; }
    [RemoteAttribute]
public Guid WorkflowAssociationId { get; public set; }
    [RemoteAttribute]
public string WorkflowAssociationName { get; public set; }
    [RemoteAttribute]
public UInt32 WorkspaceTemplateLCID { get; public set; }
    [RemoteAttribute]
public string WorkspaceTemplateName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IEnumerable`1<Guid> get_DepartmentIds();
    public void set_DepartmentIds(IEnumerable`1<Guid> value);
    public string get_Description();
    public void set_Description(string value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_ImageUrl();
    public void set_ImageUrl(string value);
    public bool get_IsDefault();
    public void set_IsDefault(bool value);
    public bool get_IsManaged();
    public void set_IsManaged(bool value);
    public string get_Name();
    public void set_Name(string value);
    public int get_Order();
    public void set_Order(int value);
    public bool get_PermissionSyncEnable();
    public void set_PermissionSyncEnable(bool value);
    public IEnumerable`1<ProjectDetailPageCreationInformation> get_ProjectDetailPages();
    public void set_ProjectDetailPages(IEnumerable`1<ProjectDetailPageCreationInformation> value);
    public Guid get_ProjectPlanTemplateId();
    public void set_ProjectPlanTemplateId(Guid value);
    public EnterpriseProjectTypeSiteCreationOptions get_SiteCreationOption();
    public void set_SiteCreationOption(EnterpriseProjectTypeSiteCreationOptions value);
    public string get_SiteCreationURL();
    public void set_SiteCreationURL(string value);
    public bool get_TaskListSyncEnable();
    public void set_TaskListSyncEnable(bool value);
    public Guid get_WorkflowAssociationId();
    public void set_WorkflowAssociationId(Guid value);
    public string get_WorkflowAssociationName();
    public void set_WorkflowAssociationName(string value);
    public UInt32 get_WorkspaceTemplateLCID();
    public void set_WorkspaceTemplateLCID(UInt32 value);
    public string get_WorkspaceTemplateName();
    public void set_WorkspaceTemplateName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EnterpriseProjectTypeObjectPropertyNames : object {
    public static string ProjectDetailPages;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EnterpriseProjectTypePropertyNames : object {
    public static string Departments;
    public static string Description;
    public static string Id;
    public static string ImageUrl;
    public static string IsDefault;
    public static string IsManaged;
    public static string Name;
    public static string Order;
    public static string PermissionSyncEnable;
    public static string ProjectPlanTemplateId;
    public static string SiteCreationOption;
    public static string SiteCreationURL;
    public static string TaskListSyncEnable;
    public static string WorkflowAssociationId;
    public static string WorkflowAssociationName;
    public static string WorkspaceTemplateLCID;
    public static string WorkspaceTemplateName;
}
public enum Microsoft.ProjectServer.Client.EnterpriseProjectTypeSiteCreationOptions : Enum {
    public int value__;
    public static EnterpriseProjectTypeSiteCreationOptions NotSpecified;
    public static EnterpriseProjectTypeSiteCreationOptions AskOnPublish;
    public static EnterpriseProjectTypeSiteCreationOptions CreateOnFirstPublish;
    public static EnterpriseProjectTypeSiteCreationOptions None;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.EnterpriseResource")]
public class Microsoft.ProjectServer.Client.EnterpriseResource : ClientObject {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; public set; }
    [RemoteAttribute]
public StatusAssignmentCollection Assignments { get; }
    [RemoteAttribute]
public Calendar BaseCalendar { get; public set; }
    [RemoteAttribute]
public bool CanLevel { get; public set; }
    [RemoteAttribute]
public string Code { get; public set; }
    [RemoteAttribute]
public AccrueAt CostAccrual { get; public set; }
    [RemoteAttribute]
public string CostCenter { get; public set; }
    [RemoteAttribute]
public EnterpriseResourceCostRateTableCollection CostRateTables { get; }
    [RemoteAttribute]
public DateTime Created { get; }
    [RemoteAttribute]
public CustomFieldCollection CustomFields { get; }
    [RemoteAttribute]
public User DefaultAssignmentOwner { get; public set; }
    [RemoteAttribute]
public BookingType DefaultBookingType { get; public set; }
    [RemoteAttribute]
public string Email { get; public set; }
    [RemoteAttribute]
public ResourceEngagementCollection Engagements { get; }
    [RemoteAttribute]
public string ExternalId { get; public set; }
    [RemoteAttribute]
public string Group { get; public set; }
    [RemoteAttribute]
public DateTime HireDate { get; public set; }
    [RemoteAttribute]
public string HyperlinkName { get; public set; }
    [RemoteAttribute]
public string HyperlinkUrl { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string Initials { get; public set; }
    [RemoteAttribute]
public bool IsActive { get; public set; }
    [RemoteAttribute]
public bool IsBudget { get; }
    [RemoteAttribute]
public bool IsCheckedOut { get; }
    [RemoteAttribute]
public bool IsGeneric { get; }
    [RemoteAttribute]
public bool IsTeam { get; }
    [RemoteAttribute]
public string MaterialLabel { get; public set; }
    [RemoteAttribute]
public DateTime Modified { get; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string Phonetics { get; public set; }
    [RemoteAttribute]
public bool RequiresEngagements { get; public set; }
    [RemoteAttribute]
public CalendarExceptionCollection ResourceCalendarExceptions { get; }
    [RemoteAttribute]
public int ResourceIdentifier { get; }
    [RemoteAttribute]
public EnterpriseResourceType ResourceType { get; }
    [RemoteAttribute]
public DateTime TerminationDate { get; public set; }
    [RemoteAttribute]
public User TimesheetManager { get; public set; }
    [RemoteAttribute]
public User User { get; public set; }
    [EditorBrowsableAttribute("1")]
public EnterpriseResource(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    [RemoteAttribute]
public void set_Item(string fieldName, object value);
    public StatusAssignmentCollection get_Assignments();
    public Calendar get_BaseCalendar();
    public void set_BaseCalendar(Calendar value);
    public bool get_CanLevel();
    public void set_CanLevel(bool value);
    public string get_Code();
    public void set_Code(string value);
    public AccrueAt get_CostAccrual();
    public void set_CostAccrual(AccrueAt value);
    public string get_CostCenter();
    public void set_CostCenter(string value);
    public EnterpriseResourceCostRateTableCollection get_CostRateTables();
    public DateTime get_Created();
    public CustomFieldCollection get_CustomFields();
    public User get_DefaultAssignmentOwner();
    public void set_DefaultAssignmentOwner(User value);
    public BookingType get_DefaultBookingType();
    public void set_DefaultBookingType(BookingType value);
    public string get_Email();
    public void set_Email(string value);
    public ResourceEngagementCollection get_Engagements();
    public string get_ExternalId();
    public void set_ExternalId(string value);
    public string get_Group();
    public void set_Group(string value);
    public DateTime get_HireDate();
    public void set_HireDate(DateTime value);
    public string get_HyperlinkName();
    public void set_HyperlinkName(string value);
    public string get_HyperlinkUrl();
    public void set_HyperlinkUrl(string value);
    public Guid get_Id();
    public string get_Initials();
    public void set_Initials(string value);
    public bool get_IsActive();
    public void set_IsActive(bool value);
    public bool get_IsBudget();
    public bool get_IsCheckedOut();
    public bool get_IsGeneric();
    public bool get_IsTeam();
    public string get_MaterialLabel();
    public void set_MaterialLabel(string value);
    public DateTime get_Modified();
    public string get_Name();
    public void set_Name(string value);
    public string get_Phonetics();
    public void set_Phonetics(string value);
    public bool get_RequiresEngagements();
    public void set_RequiresEngagements(bool value);
    public CalendarExceptionCollection get_ResourceCalendarExceptions();
    public int get_ResourceIdentifier();
    public EnterpriseResourceType get_ResourceType();
    public DateTime get_TerminationDate();
    public void set_TerminationDate(DateTime value);
    public User get_TimesheetManager();
    public void set_TimesheetManager(User value);
    public User get_User();
    public void set_User(User value);
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
public void UpdateClaimsAccount(string newClaimsAccount);
    [RemoteAttribute]
internal void SetCustomFieldValue(string fieldName, object value);
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public void ForceCheckIn();
    [RemoteAttribute]
public static EnterpriseResource GetSelf(ClientRuntimeContext Context);
}
[ScriptTypeAttribute("PS.EnterpriseResourceCollection")]
public class Microsoft.ProjectServer.Client.EnterpriseResourceCollection : ClientObjectCollection`1<EnterpriseResource> {
    [EditorBrowsableAttribute("1")]
public EnterpriseResourceCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public EnterpriseResource GetById(string objectId);
    [RemoteAttribute]
public EnterpriseResource GetByGuid(Guid uid);
    [RemoteAttribute]
public EnterpriseResource GetByUser(User user);
    [RemoteAttribute]
public EnterpriseResource Add(EnterpriseResourceCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(EnterpriseResource resource);
    [RemoteAttribute]
public void Update();
}
[ScriptTypeAttribute("PS.EnterpriseResourceCostRate")]
public class Microsoft.ProjectServer.Client.EnterpriseResourceCostRate : ClientObject {
    [RemoteAttribute]
public double CostPerUse { get; public set; }
    [RemoteAttribute]
public DateTime EffectiveStarting { get; }
    [RemoteAttribute]
public DateTime EffectiveUntil { get; }
    [RemoteAttribute]
public double OvertimeRate { get; public set; }
    [RemoteAttribute]
public double StandardRate { get; public set; }
    [EditorBrowsableAttribute("1")]
public EnterpriseResourceCostRate(ClientRuntimeContext context, ObjectPath objectPath);
    public double get_CostPerUse();
    public void set_CostPerUse(double value);
    public DateTime get_EffectiveStarting();
    public DateTime get_EffectiveUntil();
    public double get_OvertimeRate();
    public void set_OvertimeRate(double value);
    public double get_StandardRate();
    public void set_StandardRate(double value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public virtual ClientResult`1<bool> DeleteObject();
}
[ScriptTypeAttribute("PS.EnterpriseResourceCostRateCollection")]
public class Microsoft.ProjectServer.Client.EnterpriseResourceCostRateCollection : ClientObjectCollection`1<EnterpriseResourceCostRate> {
    [EditorBrowsableAttribute("1")]
public EnterpriseResourceCostRateCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public EnterpriseResourceCostRate Add(CostRateCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(EnterpriseResourceCostRate costRate);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EnterpriseResourceCostRatePropertyNames : object {
    public static string CostPerUse;
    public static string EffectiveStarting;
    public static string EffectiveUntil;
    public static string OvertimeRate;
    public static string StandardRate;
}
[ScriptTypeAttribute("PS.EnterpriseResourceCostRateTable")]
public class Microsoft.ProjectServer.Client.EnterpriseResourceCostRateTable : ClientObject {
    [RemoteAttribute]
public EnterpriseResourceCostRateCollection CostRates { get; }
    [RemoteAttribute]
public CostRateTableName Name { get; }
    [EditorBrowsableAttribute("1")]
public EnterpriseResourceCostRateTable(ClientRuntimeContext context, ObjectPath objectPath);
    public EnterpriseResourceCostRateCollection get_CostRates();
    public CostRateTableName get_Name();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.EnterpriseResourceCostRateTableCollection")]
public class Microsoft.ProjectServer.Client.EnterpriseResourceCostRateTableCollection : ClientObjectCollection`1<EnterpriseResourceCostRateTable> {
    [EditorBrowsableAttribute("1")]
public EnterpriseResourceCostRateTableCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public EnterpriseResourceCostRateTable GetByName(CostRateTableName name);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EnterpriseResourceCostRateTableObjectPropertyNames : object {
    public static string CostRates;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EnterpriseResourceCostRateTablePropertyNames : object {
    public static string Name;
}
[ScriptTypeAttribute("PS.EnterpriseResourceCreationInformation")]
public class Microsoft.ProjectServer.Client.EnterpriseResourceCreationInformation : ClientValueObject {
    private string m_hyperlinkName;
    private string m_hyperlinkUrl;
    private Guid m_id;
    private bool m_isBudget;
    private bool m_isGeneric;
    private bool m_isInactive;
    private string m_name;
    private EnterpriseResourceType m_resourceType;
    [RemoteAttribute]
public string HyperlinkName { get; public set; }
    [RemoteAttribute]
public string HyperlinkUrl { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public bool IsBudget { get; public set; }
    [RemoteAttribute]
public bool IsGeneric { get; public set; }
    [RemoteAttribute]
public bool IsInactive { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public EnterpriseResourceType ResourceType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_HyperlinkName();
    public void set_HyperlinkName(string value);
    public string get_HyperlinkUrl();
    public void set_HyperlinkUrl(string value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public bool get_IsBudget();
    public void set_IsBudget(bool value);
    public bool get_IsGeneric();
    public void set_IsGeneric(bool value);
    public bool get_IsInactive();
    public void set_IsInactive(bool value);
    public string get_Name();
    public void set_Name(string value);
    public EnterpriseResourceType get_ResourceType();
    public void set_ResourceType(EnterpriseResourceType value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EnterpriseResourceObjectPropertyNames : object {
    public static string Assignments;
    public static string BaseCalendar;
    public static string CostRateTables;
    public static string CustomFields;
    public static string DefaultAssignmentOwner;
    public static string Engagements;
    public static string ResourceCalendarExceptions;
    public static string TimesheetManager;
    public static string User;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EnterpriseResourcePropertyNames : object {
    public static string CanLevel;
    public static string Code;
    public static string CostAccrual;
    public static string CostCenter;
    public static string Created;
    public static string DefaultBookingType;
    public static string Email;
    public static string ExternalId;
    public static string Group;
    public static string HireDate;
    public static string HyperlinkName;
    public static string HyperlinkUrl;
    public static string Id;
    public static string Initials;
    public static string IsActive;
    public static string IsBudget;
    public static string IsCheckedOut;
    public static string IsGeneric;
    public static string IsTeam;
    public static string MaterialLabel;
    public static string Modified;
    public static string Name;
    public static string Phonetics;
    public static string RequiresEngagements;
    public static string ResourceIdentifier;
    public static string ResourceType;
    public static string TerminationDate;
}
public enum Microsoft.ProjectServer.Client.EnterpriseResourceType : Enum {
    public int value__;
    public static EnterpriseResourceType NotSpecified;
    public static EnterpriseResourceType Work;
    public static EnterpriseResourceType Material;
    public static EnterpriseResourceType Cost;
}
[ScriptTypeAttribute("PS.EntityType")]
public class Microsoft.ProjectServer.Client.EntityType : ClientObject {
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public Guid ID { get; }
    [EditorBrowsableAttribute("1")]
public EntityType(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Name();
    public Guid get_ID();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EntityTypePropertyNames : object {
    public static string Name;
    public static string ID;
}
[ScriptTypeAttribute("PS.EntityTypes")]
public class Microsoft.ProjectServer.Client.EntityTypes : ClientObject {
    [RemoteAttribute]
public EntityType AssignmentEntity { get; }
    [RemoteAttribute]
public EntityType ProjectEntity { get; }
    [RemoteAttribute]
public EntityType ResourceEntity { get; }
    [RemoteAttribute]
public EntityType TaskEntity { get; }
    [EditorBrowsableAttribute("1")]
public EntityTypes(ClientRuntimeContext context, ObjectPath objectPath);
    public EntityType get_AssignmentEntity();
    public EntityType get_ProjectEntity();
    public EntityType get_ResourceEntity();
    public EntityType get_TaskEntity();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EntityTypesObjectPropertyNames : object {
    public static string AssignmentEntity;
    public static string ProjectEntity;
    public static string ResourceEntity;
    public static string TaskEntity;
}
[ScriptTypeAttribute("PS.Event")]
public class Microsoft.ProjectServer.Client.Event : ClientObject {
    [RemoteAttribute]
public string EventName { get; public set; }
    [RemoteAttribute]
public int Id { get; }
    [RemoteAttribute]
public string SourceName { get; public set; }
    [EditorBrowsableAttribute("1")]
public Event(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_EventName();
    public void set_EventName(string value);
    public int get_Id();
    public string get_SourceName();
    public void set_SourceName(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.EventCollection")]
public class Microsoft.ProjectServer.Client.EventCollection : ClientObjectCollection`1<Event> {
    [EditorBrowsableAttribute("1")]
public EventCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Event GetById(string objectId);
    [RemoteAttribute]
public Event GetByInt(int id);
}
[ScriptTypeAttribute("PS.EventHandler")]
public class Microsoft.ProjectServer.Client.EventHandler : ClientObject {
    [RemoteAttribute]
public string AssemblyName { get; public set; }
    [RemoteAttribute]
public string ClassName { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string EndpointUrl { get; public set; }
    [RemoteAttribute]
public Event Event { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public int Order { get; public set; }
    [EditorBrowsableAttribute("1")]
public EventHandler(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_AssemblyName();
    public void set_AssemblyName(string value);
    public string get_ClassName();
    public void set_ClassName(string value);
    public string get_Description();
    public void set_Description(string value);
    public string get_EndpointUrl();
    public void set_EndpointUrl(string value);
    public Event get_Event();
    public Guid get_Id();
    public string get_Name();
    public void set_Name(string value);
    public int get_Order();
    public void set_Order(int value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.EventHandlerCollection")]
public class Microsoft.ProjectServer.Client.EventHandlerCollection : ClientObjectCollection`1<EventHandler> {
    [EditorBrowsableAttribute("1")]
public EventHandlerCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public EventHandler GetById(string objectId);
    [RemoteAttribute]
public EventHandler GetByGuid(Guid uid);
    [RemoteAttribute]
public EventHandler Add(EventHandlerCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(EventHandler handler);
    [RemoteAttribute]
public void Update();
}
[ScriptTypeAttribute("PS.EventHandlerCreationInformation")]
public class Microsoft.ProjectServer.Client.EventHandlerCreationInformation : ClientValueObject {
    private string m_assemblyName;
    private string m_className;
    private string m_description;
    private string m_endpointUrl;
    private int m_eventId;
    private Guid m_id;
    private string m_name;
    private int m_order;
    [RemoteAttribute]
public string AssemblyName { get; public set; }
    [RemoteAttribute]
public string ClassName { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string EndpointUrl { get; public set; }
    [RemoteAttribute]
public int EventId { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public int Order { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AssemblyName();
    public void set_AssemblyName(string value);
    public string get_ClassName();
    public void set_ClassName(string value);
    public string get_Description();
    public void set_Description(string value);
    public string get_EndpointUrl();
    public void set_EndpointUrl(string value);
    public int get_EventId();
    public void set_EventId(int value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_Name();
    public void set_Name(string value);
    public int get_Order();
    public void set_Order(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EventHandlerObjectPropertyNames : object {
    public static string Event;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EventHandlerPropertyNames : object {
    public static string AssemblyName;
    public static string ClassName;
    public static string Description;
    public static string EndpointUrl;
    public static string Id;
    public static string Name;
    public static string Order;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.EventPropertyNames : object {
    public static string EventName;
    public static string Id;
    public static string SourceName;
}
public enum Microsoft.ProjectServer.Client.FixedCostAccrual : Enum {
    public int value__;
    public static FixedCostAccrual NotSpecified;
    public static FixedCostAccrual Start;
    public static FixedCostAccrual End;
    public static FixedCostAccrual Prorated;
}
public enum Microsoft.ProjectServer.Client.JobState : Enum {
    public int value__;
    public static JobState Unknown;
    public static JobState ReadyForProcessing;
    public static JobState SendIncomplete;
    public static JobState Processing;
    public static JobState Success;
    public static JobState Failed;
    public static JobState FailedNotBlocking;
    public static JobState ProcessingDeferred;
    public static JobState CorrelationBlocked;
    public static JobState Canceled;
    public static JobState OnHold;
    public static JobState Sleeping;
    public static JobState ReadyForLaunch;
    public static JobState LastState;
}
[ScriptTypeAttribute("PS.LookupCost")]
public class Microsoft.ProjectServer.Client.LookupCost : LookupEntry {
    [RemoteAttribute]
public decimal Value { get; public set; }
    [EditorBrowsableAttribute("1")]
public LookupCost(ClientRuntimeContext context, ObjectPath objectPath);
    public decimal get_Value();
    public void set_Value(decimal value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.LookupCostPropertyNames : object {
    public static string Value;
}
[ScriptTypeAttribute("PS.LookupDate")]
public class Microsoft.ProjectServer.Client.LookupDate : LookupEntry {
    [RemoteAttribute]
public DateTime Value { get; public set; }
    [EditorBrowsableAttribute("1")]
public LookupDate(ClientRuntimeContext context, ObjectPath objectPath);
    public DateTime get_Value();
    public void set_Value(DateTime value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.LookupDatePropertyNames : object {
    public static string Value;
}
[ScriptTypeAttribute("PS.LookupDuration")]
public class Microsoft.ProjectServer.Client.LookupDuration : LookupEntry {
    [RemoteAttribute]
public string Value { get; public set; }
    [RemoteAttribute]
public TimeSpan ValueTimeSpan { get; public set; }
    [EditorBrowsableAttribute("1")]
public LookupDuration(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Value();
    public void set_Value(string value);
    public TimeSpan get_ValueTimeSpan();
    public void set_ValueTimeSpan(TimeSpan value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.LookupDurationPropertyNames : object {
    public static string Value;
    public static string ValueTimeSpan;
}
[ScriptTypeAttribute("PS.LookupEntry")]
public class Microsoft.ProjectServer.Client.LookupEntry : ClientObject {
    [RemoteAttribute]
public Guid AppAlternateId { get; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string FullValue { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string InternalName { get; }
    [RemoteAttribute]
public decimal SortIndex { get; public set; }
    [EditorBrowsableAttribute("1")]
public LookupEntry(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_AppAlternateId();
    public string get_Description();
    public void set_Description(string value);
    public string get_FullValue();
    public Guid get_Id();
    public string get_InternalName();
    public decimal get_SortIndex();
    public void set_SortIndex(decimal value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.LookupEntryCollection")]
public class Microsoft.ProjectServer.Client.LookupEntryCollection : ClientObjectCollection`1<LookupEntry> {
    [EditorBrowsableAttribute("1")]
public LookupEntryCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public LookupEntry GetById(string objectId);
    [RemoteAttribute]
public LookupEntry GetByAppAlternateId(string objectId);
    [RemoteAttribute]
public LookupEntry GetByGuid(Guid uid);
    [RemoteAttribute]
public LookupEntry Add(LookupEntryCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(LookupEntry entry);
}
[ScriptTypeAttribute("PS.LookupEntryCreationInformation")]
public class Microsoft.ProjectServer.Client.LookupEntryCreationInformation : ClientValueObject {
    private string m_description;
    private Guid m_id;
    private Guid m_parentId;
    private decimal m_sortIndex;
    private LookupEntryValue m_value;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public Guid ParentId { get; public set; }
    [RemoteAttribute]
public decimal SortIndex { get; public set; }
    [RemoteAttribute]
public LookupEntryValue Value { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public Guid get_ParentId();
    public void set_ParentId(Guid value);
    public decimal get_SortIndex();
    public void set_SortIndex(decimal value);
    public LookupEntryValue get_Value();
    public void set_Value(LookupEntryValue value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.LookupEntryPropertyNames : object {
    public static string AppAlternateId;
    public static string Description;
    public static string FullValue;
    public static string Id;
    public static string InternalName;
    public static string SortIndex;
}
[ScriptTypeAttribute("PS.LookupEntryValue")]
public class Microsoft.ProjectServer.Client.LookupEntryValue : ClientValueObject {
    private DateTime m_dateValue;
    private string m_durationValue;
    private decimal m_numberValue;
    private string m_textValue;
    [RemoteAttribute]
public DateTime DateValue { get; public set; }
    [RemoteAttribute]
public string DurationValue { get; public set; }
    [RemoteAttribute]
public decimal NumberValue { get; public set; }
    [RemoteAttribute]
public string TextValue { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_DateValue();
    public void set_DateValue(DateTime value);
    public string get_DurationValue();
    public void set_DurationValue(string value);
    public decimal get_NumberValue();
    public void set_NumberValue(decimal value);
    public string get_TextValue();
    public void set_TextValue(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.LookupMask")]
public class Microsoft.ProjectServer.Client.LookupMask : ClientValueObject {
    private int m_length;
    private LookupTableMaskSequence m_maskType;
    private string m_separator;
    [RemoteAttribute]
public int Length { get; public set; }
    [RemoteAttribute]
public LookupTableMaskSequence MaskType { get; public set; }
    [RemoteAttribute]
public string Separator { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_Length();
    public void set_Length(int value);
    public LookupTableMaskSequence get_MaskType();
    public void set_MaskType(LookupTableMaskSequence value);
    public string get_Separator();
    public void set_Separator(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.LookupNumber")]
public class Microsoft.ProjectServer.Client.LookupNumber : LookupEntry {
    [RemoteAttribute]
public decimal Value { get; public set; }
    [EditorBrowsableAttribute("1")]
public LookupNumber(ClientRuntimeContext context, ObjectPath objectPath);
    public decimal get_Value();
    public void set_Value(decimal value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.LookupNumberPropertyNames : object {
    public static string Value;
}
[ScriptTypeAttribute("PS.LookupTable")]
public class Microsoft.ProjectServer.Client.LookupTable : ClientObject {
    [RemoteAttribute]
public Guid AppAlternateId { get; }
    [RemoteAttribute]
public LookupEntryCollection Entries { get; }
    [RemoteAttribute]
public CustomFieldType FieldType { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public IEnumerable`1<LookupMask> Masks { get; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public LookupTableSortOrder SortOrder { get; public set; }
    [EditorBrowsableAttribute("1")]
public LookupTable(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_AppAlternateId();
    public LookupEntryCollection get_Entries();
    public CustomFieldType get_FieldType();
    public Guid get_Id();
    public IEnumerable`1<LookupMask> get_Masks();
    public string get_Name();
    public void set_Name(string value);
    public LookupTableSortOrder get_SortOrder();
    public void set_SortOrder(LookupTableSortOrder value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void AddMask(LookupMask mask);
    [RemoteAttribute]
public void UpdateMask(LookupMask mask, int level);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.LookupTableCollection")]
public class Microsoft.ProjectServer.Client.LookupTableCollection : ClientObjectCollection`1<LookupTable> {
    [EditorBrowsableAttribute("1")]
public LookupTableCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public LookupTable GetById(string objectId);
    [RemoteAttribute]
public LookupTable GetByGuid(Guid uid);
    [RemoteAttribute]
public LookupTable GetByAppAlternateId(string objectId);
    [RemoteAttribute]
public LookupTable Add(LookupTableCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(LookupTable table);
    [RemoteAttribute]
public void Update();
}
public enum Microsoft.ProjectServer.Client.LookupTableConstants : Enum {
    public int value__;
    public static LookupTableConstants MaxSeparatorLength;
    public static LookupTableConstants AnyLengthSequence;
    public static LookupTableConstants MinValueLength;
    public static LookupTableConstants MaxValueLength;
    public static LookupTableConstants MaxDescriptionLength;
    public static LookupTableConstants MinLevel;
    public static LookupTableConstants MaxLevel;
    public static LookupTableConstants NoSortOrder;
}
[ScriptTypeAttribute("PS.LookupTableCreationInformation")]
public class Microsoft.ProjectServer.Client.LookupTableCreationInformation : ClientValueObject {
    private IEnumerable`1<LookupEntryCreationInformation> m_entries;
    private Guid m_id;
    private IEnumerable`1<LookupMask> m_masks;
    private string m_name;
    private LookupTableSortOrder m_sortOrder;
    [RemoteAttribute]
public IEnumerable`1<LookupEntryCreationInformation> Entries { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<LookupMask> Masks { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public LookupTableSortOrder SortOrder { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IEnumerable`1<LookupEntryCreationInformation> get_Entries();
    public void set_Entries(IEnumerable`1<LookupEntryCreationInformation> value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public IEnumerable`1<LookupMask> get_Masks();
    public void set_Masks(IEnumerable`1<LookupMask> value);
    public string get_Name();
    public void set_Name(string value);
    public LookupTableSortOrder get_SortOrder();
    public void set_SortOrder(LookupTableSortOrder value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.ProjectServer.Client.LookupTableMaskSequence : Enum {
    public int value__;
    public static LookupTableMaskSequence NUMBER_TEXT;
    public static LookupTableMaskSequence UPPERCASE;
    public static LookupTableMaskSequence LOWERCASE;
    public static LookupTableMaskSequence CHARACTERS;
    public static LookupTableMaskSequence DATE;
    public static LookupTableMaskSequence COST;
    public static LookupTableMaskSequence DURATION;
    public static LookupTableMaskSequence NUMBER_DECIMAL;
    public static LookupTableMaskSequence FLAG;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.LookupTableObjectPropertyNames : object {
    public static string Entries;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.LookupTablePropertyNames : object {
    public static string AppAlternateId;
    public static string FieldType;
    public static string Id;
    public static string Masks;
    public static string Name;
    public static string SortOrder;
}
[ScriptTypeAttribute("PS.LookupTables")]
public class Microsoft.ProjectServer.Client.LookupTables : ClientObject {
    [EditorBrowsableAttribute("1")]
public LookupTables(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static ClientArrayResult`1<char> InvalidNameCharacters(ClientRuntimeContext context);
}
public enum Microsoft.ProjectServer.Client.LookupTableSortOrder : Enum {
    public int value__;
    public static LookupTableSortOrder UserDefined;
    public static LookupTableSortOrder Ascending;
    public static LookupTableSortOrder Descending;
}
[ScriptTypeAttribute("PS.LookupText")]
public class Microsoft.ProjectServer.Client.LookupText : LookupEntry {
    [RemoteAttribute]
public bool HasChildren { get; }
    [RemoteAttribute]
public LookupMask Mask { get; }
    [RemoteAttribute]
public LookupText Parent { get; public set; }
    [RemoteAttribute]
public string Value { get; public set; }
    [EditorBrowsableAttribute("1")]
public LookupText(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_HasChildren();
    public LookupMask get_Mask();
    public LookupText get_Parent();
    public void set_Parent(LookupText value);
    public string get_Value();
    public void set_Value(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.LookupTextObjectPropertyNames : object {
    public static string Parent;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.LookupTextPropertyNames : object {
    public static string HasChildren;
    public static string Mask;
    public static string Value;
}
public enum Microsoft.ProjectServer.Client.OvertimeRateFormat : Enum {
    public int value__;
    public static OvertimeRateFormat Minute;
    public static OvertimeRateFormat Hour;
    public static OvertimeRateFormat Day;
    public static OvertimeRateFormat Week;
    public static OvertimeRateFormat Month;
    public static OvertimeRateFormat Year;
    public static OvertimeRateFormat Material;
}
[ScriptTypeAttribute("PS.PageSizes")]
public class Microsoft.ProjectServer.Client.PageSizes : ClientObject {
    [RemoteAttribute]
public int EngagementsTimephased { get; }
    [RemoteAttribute]
public int EnterpriseResources { get; }
    [RemoteAttribute]
public int Projects { get; }
    public PageSizes(ClientRuntimeContext context, ProjectServer server);
    [EditorBrowsableAttribute("1")]
public PageSizes(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_EngagementsTimephased();
    public int get_EnterpriseResources();
    public int get_Projects();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PageSizesPropertyNames : object {
    public static string EngagementsTimephased;
    public static string EnterpriseResources;
    public static string Projects;
}
[ScriptTypeAttribute("PS.Phase")]
public class Microsoft.ProjectServer.Client.Phase : ClientObject {
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public StageCollection Stages { get; }
    [EditorBrowsableAttribute("1")]
public Phase(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Description();
    public void set_Description(string value);
    public Guid get_Id();
    public string get_Name();
    public void set_Name(string value);
    public StageCollection get_Stages();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.PhaseCollection")]
public class Microsoft.ProjectServer.Client.PhaseCollection : ClientObjectCollection`1<Phase> {
    [EditorBrowsableAttribute("1")]
public PhaseCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Phase GetById(string objectId);
    [RemoteAttribute]
public Phase GetByGuid(Guid uid);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public Phase Add(PhaseCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(Phase phase);
}
[ScriptTypeAttribute("PS.PhaseCreationInformation")]
public class Microsoft.ProjectServer.Client.PhaseCreationInformation : ClientValueObject {
    private string m_description;
    private Guid m_id;
    private string m_name;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_Name();
    public void set_Name(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PhaseObjectPropertyNames : object {
    public static string Stages;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PhasePropertyNames : object {
    public static string Description;
    public static string Id;
    public static string Name;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.PlanAssignment")]
public class Microsoft.ProjectServer.Client.PlanAssignment : ClientObject {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; public set; }
    [RemoteAttribute]
public BookingType BookingType { get; public set; }
    [RemoteAttribute]
public bool CanLevel { get; }
    [RemoteAttribute]
public string Code { get; }
    [RemoteAttribute]
public string CostCenter { get; }
    [RemoteAttribute]
public CustomFieldCollection CustomFields { get; }
    [RemoteAttribute]
public string Email { get; }
    [RemoteAttribute]
public string Group { get; }
    [RemoteAttribute]
public DateTime HireDate { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public PlanAssignmentIntervalCollection Intervals { get; }
    [RemoteAttribute]
public bool IsTeam { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public string Phonetics { get; }
    [RemoteAttribute]
public EnterpriseResource Resource { get; }
    [RemoteAttribute]
public EnterpriseResourceType ResourceType { get; }
    [RemoteAttribute]
public DateTime TerminationDate { get; }
    [EditorBrowsableAttribute("1")]
public PlanAssignment(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    [RemoteAttribute]
public void set_Item(string fieldName, object value);
    public BookingType get_BookingType();
    public void set_BookingType(BookingType value);
    public bool get_CanLevel();
    public string get_Code();
    public string get_CostCenter();
    public CustomFieldCollection get_CustomFields();
    public string get_Email();
    public string get_Group();
    public DateTime get_HireDate();
    public Guid get_Id();
    public PlanAssignmentIntervalCollection get_Intervals();
    public bool get_IsTeam();
    public string get_Name();
    public string get_Phonetics();
    public EnterpriseResource get_Resource();
    public EnterpriseResourceType get_ResourceType();
    public DateTime get_TerminationDate();
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
internal void SetCustomFieldValue(string fieldName, object value);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.PlanAssignmentCollection")]
public class Microsoft.ProjectServer.Client.PlanAssignmentCollection : ClientObjectCollection`1<PlanAssignment> {
    [EditorBrowsableAttribute("1")]
public PlanAssignmentCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public PlanAssignment GetById(string objectId);
    [RemoteAttribute]
public PlanAssignment GetByGuid(Guid uid);
    [RemoteAttribute]
public PlanAssignment Add(PlanAssignmentCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(PlanAssignment assignment);
}
[ScriptTypeAttribute("PS.PlanAssignmentCreationInformation")]
public class Microsoft.ProjectServer.Client.PlanAssignmentCreationInformation : ClientValueObject {
    private BookingType m_bookingType;
    private Guid m_id;
    private IEnumerable`1<PlanAssignmentIntervalCreationInformation> m_intervals;
    private Guid m_resourceId;
    [RemoteAttribute]
public BookingType BookingType { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<PlanAssignmentIntervalCreationInformation> Intervals { get; public set; }
    [RemoteAttribute]
public Guid ResourceId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public BookingType get_BookingType();
    public void set_BookingType(BookingType value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public IEnumerable`1<PlanAssignmentIntervalCreationInformation> get_Intervals();
    public void set_Intervals(IEnumerable`1<PlanAssignmentIntervalCreationInformation> value);
    public Guid get_ResourceId();
    public void set_ResourceId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.PlanAssignmentInterval")]
public class Microsoft.ProjectServer.Client.PlanAssignmentInterval : ClientObject {
    [RemoteAttribute]
public string Duration { get; public set; }
    [RemoteAttribute]
public TimeSpan DurationTimeSpan { get; public set; }
    [RemoteAttribute]
public DateTime End { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public DateTime Start { get; }
    [EditorBrowsableAttribute("1")]
public PlanAssignmentInterval(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Duration();
    public void set_Duration(string value);
    public TimeSpan get_DurationTimeSpan();
    public void set_DurationTimeSpan(TimeSpan value);
    public DateTime get_End();
    public string get_Name();
    public DateTime get_Start();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.PlanAssignmentIntervalCollection")]
public class Microsoft.ProjectServer.Client.PlanAssignmentIntervalCollection : ClientObjectCollection`1<PlanAssignmentInterval> {
    [EditorBrowsableAttribute("1")]
public PlanAssignmentIntervalCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public PlanAssignmentInterval GetById(string id);
    [RemoteAttribute]
public PlanAssignmentInterval GetByStart(DateTime start);
}
[ScriptTypeAttribute("PS.PlanAssignmentIntervalCreationInformation")]
public class Microsoft.ProjectServer.Client.PlanAssignmentIntervalCreationInformation : ClientValueObject {
    private string m_duration;
    private DateTime m_interval;
    [RemoteAttribute]
public string Duration { get; public set; }
    [RemoteAttribute]
public DateTime Interval { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Duration();
    public void set_Duration(string value);
    public DateTime get_Interval();
    public void set_Interval(DateTime value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PlanAssignmentIntervalPropertyNames : object {
    public static string Duration;
    public static string DurationTimeSpan;
    public static string End;
    public static string Name;
    public static string Start;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PlanAssignmentObjectPropertyNames : object {
    public static string CustomFields;
    public static string Intervals;
    public static string Resource;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PlanAssignmentPropertyNames : object {
    public static string BookingType;
    public static string CanLevel;
    public static string Code;
    public static string CostCenter;
    public static string Email;
    public static string Group;
    public static string HireDate;
    public static string Id;
    public static string IsTeam;
    public static string Name;
    public static string Phonetics;
    public static string ResourceType;
    public static string TerminationDate;
}
[ScriptTypeAttribute("PS.Project")]
public class Microsoft.ProjectServer.Client.Project : ClientObject {
    [RemoteAttribute]
public DateTime ApprovedEnd { get; }
    [RemoteAttribute]
public DateTime ApprovedStart { get; }
    [RemoteAttribute]
public bool CalculateActualCosts { get; }
    [RemoteAttribute]
public bool CalculatesActualCosts { get; }
    [RemoteAttribute]
public User CheckedOutBy { get; }
    [RemoteAttribute]
public DateTime CheckedOutDate { get; }
    [RemoteAttribute]
public string CheckOutDescription { get; }
    [RemoteAttribute]
public Guid CheckOutId { get; }
    [RemoteAttribute]
public DateTime CreatedDate { get; }
    [RemoteAttribute]
public int CriticalSlackLimit { get; }
    [RemoteAttribute]
public CustomFieldCollection CustomFields { get; }
    [RemoteAttribute]
public DateTime DefaultFinishTime { get; }
    [RemoteAttribute]
public OvertimeRateFormat DefaultOvertimeRateUnits { get; }
    [RemoteAttribute]
public StandardRateFormat DefaultStandardRateUnits { get; }
    [RemoteAttribute]
public DateTime DefaultStartTime { get; }
    [RemoteAttribute]
public ProjectEngagementCollection Engagements { get; }
    [RemoteAttribute]
public EnterpriseProjectType EnterpriseProjectType { get; }
    [RemoteAttribute]
public bool HasMppPendingImport { get; }
    [RemoteAttribute]
public bool HonorConstraints { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool IsCheckedOut { get; }
    [RemoteAttribute]
public DateTime LastPublishedDate { get; }
    [RemoteAttribute]
public DateTime LastSavedDate { get; }
    [RemoteAttribute]
public bool MoveActualIfLater { get; }
    [RemoteAttribute]
public bool MoveActualToStatus { get; }
    [RemoteAttribute]
public bool MoveRemainingIfEarlier { get; }
    [RemoteAttribute]
public bool MoveRemainingToStatus { get; }
    [RemoteAttribute]
public bool MultipleCriticalPaths { get; }
    [RemoteAttribute]
public CommittedDecisionResult OptimizerDecision { get; }
    [RemoteAttribute]
public int PercentComplete { get; }
    [RemoteAttribute]
public Phase Phase { get; }
    [RemoteAttribute]
public CommittedDecisionResult PlannerDecision { get; }
    [RemoteAttribute]
public string ProjectSiteUrl { get; }
    [RemoteAttribute]
public ProjectSummaryTask ProjectSummaryTask { get; }
    [RemoteAttribute]
public ProjectType ProjectType { get; }
    [RemoteAttribute]
public QueueJobCollection QueueJobs { get; }
    [RemoteAttribute]
public bool SplitInProgress { get; }
    [RemoteAttribute]
public bool SpreadActualCostsToStatus { get; }
    [RemoteAttribute]
public bool SpreadPercentCompleteToStatus { get; }
    [RemoteAttribute]
public Stage Stage { get; }
    [RemoteAttribute]
public Guid SummaryTaskId { get; }
    [RemoteAttribute]
public Guid TaskListId { get; }
    [EditorBrowsableAttribute("1")]
public Project(ClientRuntimeContext context, ObjectPath objectPath);
    public DateTime get_ApprovedEnd();
    public DateTime get_ApprovedStart();
    public bool get_CalculateActualCosts();
    public bool get_CalculatesActualCosts();
    public User get_CheckedOutBy();
    public DateTime get_CheckedOutDate();
    public string get_CheckOutDescription();
    public Guid get_CheckOutId();
    public DateTime get_CreatedDate();
    public int get_CriticalSlackLimit();
    public CustomFieldCollection get_CustomFields();
    public DateTime get_DefaultFinishTime();
    public OvertimeRateFormat get_DefaultOvertimeRateUnits();
    public StandardRateFormat get_DefaultStandardRateUnits();
    public DateTime get_DefaultStartTime();
    public ProjectEngagementCollection get_Engagements();
    public EnterpriseProjectType get_EnterpriseProjectType();
    public bool get_HasMppPendingImport();
    public bool get_HonorConstraints();
    public Guid get_Id();
    public bool get_IsCheckedOut();
    public DateTime get_LastPublishedDate();
    public DateTime get_LastSavedDate();
    public bool get_MoveActualIfLater();
    public bool get_MoveActualToStatus();
    public bool get_MoveRemainingIfEarlier();
    public bool get_MoveRemainingToStatus();
    public bool get_MultipleCriticalPaths();
    public CommittedDecisionResult get_OptimizerDecision();
    public int get_PercentComplete();
    public Phase get_Phase();
    public CommittedDecisionResult get_PlannerDecision();
    public string get_ProjectSiteUrl();
    public ProjectSummaryTask get_ProjectSummaryTask();
    public ProjectType get_ProjectType();
    public QueueJobCollection get_QueueJobs();
    public bool get_SplitInProgress();
    public bool get_SpreadActualCostsToStatus();
    public bool get_SpreadPercentCompleteToStatus();
    public Stage get_Stage();
    public Guid get_SummaryTaskId();
    public Guid get_TaskListId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void SetCustomFieldValue(string fieldName, object value);
    [RemoteAttribute]
public void UpdateIdeaListItemStatus(string status);
    [RemoteAttribute]
public void UpdateProjectStageStatus(Stage stage, string statusInformation, UpdateProjectStageStatusFieldValue stageStatusValue, bool append);
    [RemoteAttribute]
public void EnterProjectStage(Stage stage);
    [RemoteAttribute]
public void LeaveProjectStage();
    [RemoteAttribute]
public ClientResult`1<ReadyToLeaveProjectStageValue> ReadyToLeaveProjectStage();
    [RemoteAttribute]
public ResourcePlan GetResourcePlan(DateTime start, DateTime end, TimeScale timeScale);
}
[ScriptTypeAttribute("PS.ProjectCollection")]
public class Microsoft.ProjectServer.Client.ProjectCollection : ClientObjectCollection`1<PublishedProject> {
    [EditorBrowsableAttribute("1")]
public ProjectCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public PublishedProject GetById(string objectId);
    [RemoteAttribute]
public PublishedProject GetByGuid(Guid uid);
    [RemoteAttribute]
public PublishedProject Add(ProjectCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(PublishedProject project);
    [RemoteAttribute]
public void Validate();
    [RemoteAttribute]
public QueueJob Update();
}
public class Microsoft.ProjectServer.Client.ProjectContext : ClientContext {
    private ProjectServer _server;
    private ServiceStatus _serviceStatus;
    private PageSizes _pageSizes;
    private static int _queuePollInterval;
    public WorkflowActivities WorkflowActivities { get; }
    public WorkflowDesigner WorkflowDesigner { get; }
    public EntityTypes EntityTypes { get; }
    public ProjectCollection Projects { get; }
    public CustomFieldCollection CustomFields { get; }
    public LookupTableCollection LookupTables { get; }
    public EnterpriseProjectTypeCollection EnterpriseProjectTypes { get; }
    public PhaseCollection Phases { get; }
    public StageCollection Stages { get; }
    public ProjectDetailPageCollection ProjectDetailPages { get; }
    public EnterpriseResourceCollection EnterpriseResources { get; }
    public EventCollection Events { get; }
    public EventHandlerCollection EventHandlers { get; }
    public TimeSheetPeriodCollection TimeSheetPeriods { get; }
    public CalendarCollection Calendars { get; }
    public ServiceStatus ServiceStatus { get; }
    public PageSizes PageSizes { get; }
    public ProjectContext(string url);
    public WorkflowActivities get_WorkflowActivities();
    public WorkflowDesigner get_WorkflowDesigner();
    public EntityTypes get_EntityTypes();
    public ProjectCollection get_Projects();
    public CustomFieldCollection get_CustomFields();
    public LookupTableCollection get_LookupTables();
    public EnterpriseProjectTypeCollection get_EnterpriseProjectTypes();
    public PhaseCollection get_Phases();
    public StageCollection get_Stages();
    public ProjectDetailPageCollection get_ProjectDetailPages();
    public EnterpriseResourceCollection get_EnterpriseResources();
    public EventCollection get_Events();
    public EventHandlerCollection get_EventHandlers();
    public TimeSheetPeriodCollection get_TimeSheetPeriods();
    public CalendarCollection get_Calendars();
    public ServiceStatus get_ServiceStatus();
    public PageSizes get_PageSizes();
    public DeletedPublishedAssignmentCollection GetDeletedPublishedAssignments(DateTime deletedDate);
    private static bool IsPendingJob(QueueJob job, JobState& state);
    public JobState WaitForQueue(QueueJob job, int timeoutSeconds);
}
[ScriptTypeAttribute("PS.ProjectCreationInformation")]
public class Microsoft.ProjectServer.Client.ProjectCreationInformation : ClientValueObject {
    private string m_description;
    private Guid m_enterpriseProjectTypeId;
    private Guid m_id;
    private string m_name;
    private DateTime m_start;
    private List m_taskList;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public Guid EnterpriseProjectTypeId { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public DateTime Start { get; public set; }
    [RemoteAttribute]
public List TaskList { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public Guid get_EnterpriseProjectTypeId();
    public void set_EnterpriseProjectTypeId(Guid value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_Name();
    public void set_Name(string value);
    public DateTime get_Start();
    public void set_Start(DateTime value);
    public List get_TaskList();
    public void set_TaskList(List value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.ProjectDetailPage")]
public class Microsoft.ProjectServer.Client.ProjectDetailPage : ClientObject {
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public ListItem Item { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public ProjectDetailPageType PageType { get; }
    [EditorBrowsableAttribute("1")]
public ProjectDetailPage(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_Id();
    public ListItem get_Item();
    public string get_Name();
    public ProjectDetailPageType get_PageType();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.ProjectDetailPageCollection")]
public class Microsoft.ProjectServer.Client.ProjectDetailPageCollection : ClientObjectCollection`1<ProjectDetailPage> {
    [RemoteAttribute]
public List List { get; }
    [EditorBrowsableAttribute("1")]
public ProjectDetailPageCollection(ClientRuntimeContext context, ObjectPath objectPath);
    public List get_List();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ProjectDetailPage GetById(string objectId);
    [RemoteAttribute]
public ProjectDetailPage GetByGuid(Guid uid);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ProjectDetailPageCollectionObjectPropertyNames : object {
    public static string List;
}
[ScriptTypeAttribute("PS.ProjectDetailPageCreationInformation")]
public class Microsoft.ProjectServer.Client.ProjectDetailPageCreationInformation : ClientValueObject {
    private Guid m_id;
    private bool m_isCreate;
    private int m_position;
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public bool IsCreate { get; public set; }
    [RemoteAttribute]
public int Position { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_Id();
    public void set_Id(Guid value);
    public bool get_IsCreate();
    public void set_IsCreate(bool value);
    public int get_Position();
    public void set_Position(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ProjectDetailPageObjectPropertyNames : object {
    public static string Item;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ProjectDetailPagePropertyNames : object {
    public static string Id;
    public static string Name;
    public static string PageType;
}
public enum Microsoft.ProjectServer.Client.ProjectDetailPageType : Enum {
    public int value__;
    public static ProjectDetailPageType None;
    public static ProjectDetailPageType ProjectDefault;
    public static ProjectDetailPageType NewProject;
    public static ProjectDetailPageType WorkflowStatus;
}
[ScriptTypeAttribute("PS.ProjectEngagement")]
public class Microsoft.ProjectServer.Client.ProjectEngagement : Engagement {
    [RemoteAttribute]
public DateTime ApprovedFinish { get; }
    [RemoteAttribute]
public double ApprovedMaxUnits { get; }
    [RemoteAttribute]
public DateTime ApprovedStart { get; }
    [RemoteAttribute]
public string ApprovedWork { get; }
    [RemoteAttribute]
public TimeSpan ApprovedWorkTimeSpan { get; }
    [RemoteAttribute]
public bool HasUnsubmittedChanges { get; }
    [RemoteAttribute]
public DateTime RequestedFinish { get; public set; }
    [RemoteAttribute]
public double RequestedMaxUnits { get; public set; }
    [RemoteAttribute]
public DateTime RequestedStart { get; public set; }
    [RemoteAttribute]
public string RequestedWork { get; public set; }
    [RemoteAttribute]
public TimeSpan RequestedWorkTimeSpan { get; public set; }
    [EditorBrowsableAttribute("1")]
public ProjectEngagement(ClientRuntimeContext context, ObjectPath objectPath);
    public DateTime get_ApprovedFinish();
    public double get_ApprovedMaxUnits();
    public DateTime get_ApprovedStart();
    public string get_ApprovedWork();
    public TimeSpan get_ApprovedWorkTimeSpan();
    public bool get_HasUnsubmittedChanges();
    public DateTime get_RequestedFinish();
    public void set_RequestedFinish(DateTime value);
    public double get_RequestedMaxUnits();
    public void set_RequestedMaxUnits(double value);
    public DateTime get_RequestedStart();
    public void set_RequestedStart(DateTime value);
    public string get_RequestedWork();
    public void set_RequestedWork(string value);
    public TimeSpan get_RequestedWorkTimeSpan();
    public void set_RequestedWorkTimeSpan(TimeSpan value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public ProjectEngagementTimephasedCollection GetTimephased(DateTime start, DateTime end, TimeScale timescale, EngagementContourType contourType);
}
[ScriptTypeAttribute("PS.ProjectEngagementCollection")]
public class Microsoft.ProjectServer.Client.ProjectEngagementCollection : ClientObjectCollection`1<ProjectEngagement> {
    [EditorBrowsableAttribute("1")]
public ProjectEngagementCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public ProjectEngagement Add(ProjectEngagementCreationInformation parameters);
    [RemoteAttribute]
public virtual ClientResult`1<bool> Remove(Engagement engagement);
    [RemoteAttribute]
public virtual void Update();
    [RemoteAttribute]
public ProjectEngagement GetById(string objectId);
    [RemoteAttribute]
public ProjectEngagement GetByGuid(Guid uid);
}
[ScriptTypeAttribute("PS.ProjectEngagementComment")]
public class Microsoft.ProjectServer.Client.ProjectEngagementComment : EngagementComment {
    [EditorBrowsableAttribute("1")]
public ProjectEngagementComment(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("PS.ProjectEngagementCreationInformation")]
public class Microsoft.ProjectServer.Client.ProjectEngagementCreationInformation : EngagementCreationInformation {
    private EnterpriseResource m_resource;
    [RemoteAttribute]
public EnterpriseResource Resource { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public EnterpriseResource get_Resource();
    public void set_Resource(EnterpriseResource value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ProjectEngagementPropertyNames : object {
    public static string ApprovedFinish;
    public static string ApprovedMaxUnits;
    public static string ApprovedStart;
    public static string ApprovedWork;
    public static string ApprovedWorkTimeSpan;
    public static string HasUnsubmittedChanges;
    public static string RequestedFinish;
    public static string RequestedMaxUnits;
    public static string RequestedStart;
    public static string RequestedWork;
    public static string RequestedWorkTimeSpan;
}
[ScriptTypeAttribute("PS.ProjectEngagementTimephasedCollection")]
public class Microsoft.ProjectServer.Client.ProjectEngagementTimephasedCollection : ClientObjectCollection`1<ProjectEngagementTimephasedPeriod> {
    [EditorBrowsableAttribute("1")]
public ProjectEngagementTimephasedCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public ProjectEngagementTimephasedPeriod GetByStart(DateTime date);
}
[ScriptTypeAttribute("PS.ProjectEngagementTimephasedPeriod")]
public class Microsoft.ProjectServer.Client.ProjectEngagementTimephasedPeriod : EngagementTimephasedPeriod {
    [EditorBrowsableAttribute("1")]
public ProjectEngagementTimephasedPeriod(ClientRuntimeContext context, ObjectPath objectPath);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ProjectObjectPropertyNames : object {
    public static string CheckedOutBy;
    public static string CustomFields;
    public static string Engagements;
    public static string EnterpriseProjectType;
    public static string Phase;
    public static string ProjectSummaryTask;
    public static string QueueJobs;
    public static string Stage;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ProjectPropertyNames : object {
    public static string ApprovedEnd;
    public static string ApprovedStart;
    public static string CalculateActualCosts;
    public static string CalculatesActualCosts;
    public static string CheckedOutDate;
    public static string CheckOutDescription;
    public static string CheckOutId;
    public static string CreatedDate;
    public static string CriticalSlackLimit;
    public static string DefaultFinishTime;
    public static string DefaultOvertimeRateUnits;
    public static string DefaultStandardRateUnits;
    public static string DefaultStartTime;
    public static string HasMppPendingImport;
    public static string HonorConstraints;
    public static string Id;
    public static string IsCheckedOut;
    public static string LastPublishedDate;
    public static string LastSavedDate;
    public static string MoveActualIfLater;
    public static string MoveActualToStatus;
    public static string MoveRemainingIfEarlier;
    public static string MoveRemainingToStatus;
    public static string MultipleCriticalPaths;
    public static string OptimizerDecision;
    public static string PercentComplete;
    public static string PlannerDecision;
    public static string ProjectSiteUrl;
    public static string ProjectType;
    public static string SplitInProgress;
    public static string SpreadActualCostsToStatus;
    public static string SpreadPercentCompleteToStatus;
    public static string SummaryTaskId;
    public static string TaskListId;
}
[ScriptTypeAttribute("PS.ProjectResource")]
public class Microsoft.ProjectServer.Client.ProjectResource : ClientObject {
    [RemoteAttribute]
public double ActualCost { get; }
    [RemoteAttribute]
public string ActualCostWorkPerformed { get; }
    [RemoteAttribute]
public TimeSpan ActualCostWorkPerformedTimeSpan { get; }
    [RemoteAttribute]
public double ActualOvertimeCost { get; }
    [RemoteAttribute]
public string ActualOvertimeWork { get; }
    [RemoteAttribute]
public TimeSpan ActualOvertimeWorkTimeSpan { get; }
    [RemoteAttribute]
public string ActualWork { get; }
    [RemoteAttribute]
public TimeSpan ActualWorkTimeSpan { get; }
    [RemoteAttribute]
public DateTime AvailableFrom { get; }
    [RemoteAttribute]
public DateTime AvailableTo { get; }
    [RemoteAttribute]
public double BaselineCost { get; }
    [RemoteAttribute]
public string BaselineWork { get; }
    [RemoteAttribute]
public TimeSpan BaselineWorkTimeSpan { get; }
    [RemoteAttribute]
public double BudetCostWorkPerformed { get; }
    [RemoteAttribute]
public double BudgetedCost { get; }
    [RemoteAttribute]
public double BudgetedCostWorkScheduled { get; }
    [RemoteAttribute]
public string BudgetedWork { get; }
    [RemoteAttribute]
public TimeSpan BudgetedWorkTimeSpan { get; }
    [RemoteAttribute]
public double Cost { get; }
    [RemoteAttribute]
public double CostVariance { get; }
    [RemoteAttribute]
public double CostVarianceAtCompletion { get; }
    [RemoteAttribute]
public DateTime Created { get; }
    [RemoteAttribute]
public double CurrentCostVariance { get; }
    [RemoteAttribute]
public CustomFieldCollection CustomFields { get; }
    [RemoteAttribute]
public EnterpriseResource EnterpriseResource { get; }
    [RemoteAttribute]
public DateTime Finish { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool IsBudgeted { get; }
    [RemoteAttribute]
public bool IsGenericResource { get; }
    [RemoteAttribute]
public bool IsOverAllocated { get; }
    [RemoteAttribute]
public DateTime Modified { get; }
    [RemoteAttribute]
public string Notes { get; }
    [RemoteAttribute]
public double OvertimeCost { get; }
    [RemoteAttribute]
public string OvertimeWork { get; }
    [RemoteAttribute]
public TimeSpan OvertimeWorkTimeSpan { get; }
    [RemoteAttribute]
public string PeakWork { get; }
    [RemoteAttribute]
public TimeSpan PeakWorkTimeSpan { get; }
    [RemoteAttribute]
public int PercentWorkComplete { get; }
    [RemoteAttribute]
public string RegularWork { get; }
    [RemoteAttribute]
public TimeSpan RegularWorkTimeSpan { get; }
    [RemoteAttribute]
public double RemainingCost { get; }
    [RemoteAttribute]
public double RemainingOvertimeCost { get; }
    [RemoteAttribute]
public string RemainingOvertimeWork { get; }
    [RemoteAttribute]
public TimeSpan RemainingOvertimeWorkTimeSpan { get; }
    [RemoteAttribute]
public string RemainingWork { get; }
    [RemoteAttribute]
public TimeSpan RemainingWorkTimeSpan { get; }
    [RemoteAttribute]
public double ScheduleCostVariance { get; }
    [RemoteAttribute]
public DateTime Start { get; }
    [RemoteAttribute]
public string Work { get; }
    [RemoteAttribute]
public TimeSpan WorkTimeSpan { get; }
    [RemoteAttribute]
public string WorkVariance { get; }
    [RemoteAttribute]
public TimeSpan WorkVarianceTimeSpan { get; }
    [EditorBrowsableAttribute("1")]
public ProjectResource(ClientRuntimeContext context, ObjectPath objectPath);
    public double get_ActualCost();
    public string get_ActualCostWorkPerformed();
    public TimeSpan get_ActualCostWorkPerformedTimeSpan();
    public double get_ActualOvertimeCost();
    public string get_ActualOvertimeWork();
    public TimeSpan get_ActualOvertimeWorkTimeSpan();
    public string get_ActualWork();
    public TimeSpan get_ActualWorkTimeSpan();
    public DateTime get_AvailableFrom();
    public DateTime get_AvailableTo();
    public double get_BaselineCost();
    public string get_BaselineWork();
    public TimeSpan get_BaselineWorkTimeSpan();
    public double get_BudetCostWorkPerformed();
    public double get_BudgetedCost();
    public double get_BudgetedCostWorkScheduled();
    public string get_BudgetedWork();
    public TimeSpan get_BudgetedWorkTimeSpan();
    public double get_Cost();
    public double get_CostVariance();
    public double get_CostVarianceAtCompletion();
    public DateTime get_Created();
    public double get_CurrentCostVariance();
    public CustomFieldCollection get_CustomFields();
    public EnterpriseResource get_EnterpriseResource();
    public DateTime get_Finish();
    public Guid get_Id();
    public bool get_IsBudgeted();
    public bool get_IsGenericResource();
    public bool get_IsOverAllocated();
    public DateTime get_Modified();
    public string get_Notes();
    public double get_OvertimeCost();
    public string get_OvertimeWork();
    public TimeSpan get_OvertimeWorkTimeSpan();
    public string get_PeakWork();
    public TimeSpan get_PeakWorkTimeSpan();
    public int get_PercentWorkComplete();
    public string get_RegularWork();
    public TimeSpan get_RegularWorkTimeSpan();
    public double get_RemainingCost();
    public double get_RemainingOvertimeCost();
    public string get_RemainingOvertimeWork();
    public TimeSpan get_RemainingOvertimeWorkTimeSpan();
    public string get_RemainingWork();
    public TimeSpan get_RemainingWorkTimeSpan();
    public double get_ScheduleCostVariance();
    public DateTime get_Start();
    public string get_Work();
    public TimeSpan get_WorkTimeSpan();
    public string get_WorkVariance();
    public TimeSpan get_WorkVarianceTimeSpan();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.ProjectResourceCreationInformation")]
public class Microsoft.ProjectServer.Client.ProjectResourceCreationInformation : ClientValueObject {
    private string m_account;
    private string m_email;
    private Guid m_id;
    private string m_name;
    private string m_notes;
    [RemoteAttribute]
public string Account { get; public set; }
    [RemoteAttribute]
public string Email { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string Notes { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Account();
    public void set_Account(string value);
    public string get_Email();
    public void set_Email(string value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_Name();
    public void set_Name(string value);
    public string get_Notes();
    public void set_Notes(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ProjectResourceObjectPropertyNames : object {
    public static string CustomFields;
    public static string EnterpriseResource;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ProjectResourcePropertyNames : object {
    public static string ActualCost;
    public static string ActualCostWorkPerformed;
    public static string ActualCostWorkPerformedTimeSpan;
    public static string ActualOvertimeCost;
    public static string ActualOvertimeWork;
    public static string ActualOvertimeWorkTimeSpan;
    public static string ActualWork;
    public static string ActualWorkTimeSpan;
    public static string AvailableFrom;
    public static string AvailableTo;
    public static string BaselineCost;
    public static string BaselineWork;
    public static string BaselineWorkTimeSpan;
    public static string BudetCostWorkPerformed;
    public static string BudgetedCost;
    public static string BudgetedCostWorkScheduled;
    public static string BudgetedWork;
    public static string BudgetedWorkTimeSpan;
    public static string Cost;
    public static string CostVariance;
    public static string CostVarianceAtCompletion;
    public static string Created;
    public static string CurrentCostVariance;
    public static string Finish;
    public static string Id;
    public static string IsBudgeted;
    public static string IsGenericResource;
    public static string IsOverAllocated;
    public static string Modified;
    public static string Notes;
    public static string OvertimeCost;
    public static string OvertimeWork;
    public static string OvertimeWorkTimeSpan;
    public static string PeakWork;
    public static string PeakWorkTimeSpan;
    public static string PercentWorkComplete;
    public static string RegularWork;
    public static string RegularWorkTimeSpan;
    public static string RemainingCost;
    public static string RemainingOvertimeCost;
    public static string RemainingOvertimeWork;
    public static string RemainingOvertimeWorkTimeSpan;
    public static string RemainingWork;
    public static string RemainingWorkTimeSpan;
    public static string ScheduleCostVariance;
    public static string Start;
    public static string Work;
    public static string WorkTimeSpan;
    public static string WorkVariance;
    public static string WorkVarianceTimeSpan;
}
[ScriptTypeAttribute("PS.ProjectServer")]
public class Microsoft.ProjectServer.Client.ProjectServer : ClientObject {
    [RemoteAttribute]
public CalendarCollection Calendars { get; }
    [RemoteAttribute]
public CustomFieldCollection CustomFields { get; }
    [RemoteAttribute]
public int EngagementsTimephasedPageSize { get; }
    [RemoteAttribute]
public EnterpriseProjectTypeCollection EnterpriseProjectTypes { get; }
    [RemoteAttribute]
public EnterpriseResourceCollection EnterpriseResources { get; }
    [RemoteAttribute]
public int EnterpriseResourcesPageSize { get; }
    [RemoteAttribute]
public EntityTypes EntityTypes { get; }
    [RemoteAttribute]
public EventHandlerCollection EventHandlers { get; }
    [RemoteAttribute]
public EventCollection Events { get; }
    [RemoteAttribute]
public bool IsDelegate { get; }
    [RemoteAttribute]
public bool IsReadOnly { get; }
    [RemoteAttribute]
public LookupTableCollection LookupTables { get; }
    [RemoteAttribute]
public PhaseCollection Phases { get; }
    [RemoteAttribute]
public ProjectDetailPageCollection ProjectDetailPages { get; }
    [RemoteAttribute]
public ProjectCollection Projects { get; }
    [RemoteAttribute]
public int ProjectsPageSize { get; }
    [RemoteAttribute]
public StageCollection Stages { get; }
    [RemoteAttribute]
public TimeSheetPeriodCollection TimeSheetPeriods { get; }
    [RemoteAttribute]
public WorkflowActivities WorkflowActivities { get; }
    [RemoteAttribute]
public WorkflowDesigner WorkflowDesigner { get; }
    public ProjectServer(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public ProjectServer(ClientRuntimeContext context, ObjectPath objectPath);
    public CalendarCollection get_Calendars();
    public CustomFieldCollection get_CustomFields();
    public int get_EngagementsTimephasedPageSize();
    public EnterpriseProjectTypeCollection get_EnterpriseProjectTypes();
    public EnterpriseResourceCollection get_EnterpriseResources();
    public int get_EnterpriseResourcesPageSize();
    public EntityTypes get_EntityTypes();
    public EventHandlerCollection get_EventHandlers();
    public EventCollection get_Events();
    public bool get_IsDelegate();
    public bool get_IsReadOnly();
    public LookupTableCollection get_LookupTables();
    public PhaseCollection get_Phases();
    public ProjectDetailPageCollection get_ProjectDetailPages();
    public ProjectCollection get_Projects();
    public int get_ProjectsPageSize();
    public StageCollection get_Stages();
    public TimeSheetPeriodCollection get_TimeSheetPeriods();
    public WorkflowActivities get_WorkflowActivities();
    public WorkflowDesigner get_WorkflowDesigner();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void StopDelegation();
    [RemoteAttribute]
public DeletedPublishedAssignmentCollection GetDeletedPublishedAssignments(DateTime deletedDate);
}
[ScriptTypeAttribute("PS.ProjectServerData")]
public class Microsoft.ProjectServer.Client.ProjectServerData : ClientObject {
    public ProjectServerData(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public ProjectServerData(ClientRuntimeContext context, ObjectPath objectPath);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ProjectServerObjectPropertyNames : object {
    public static string Calendars;
    public static string CustomFields;
    public static string EnterpriseProjectTypes;
    public static string EnterpriseResources;
    public static string EntityTypes;
    public static string EventHandlers;
    public static string Events;
    public static string LookupTables;
    public static string Phases;
    public static string ProjectDetailPages;
    public static string Projects;
    public static string Stages;
    public static string TimeSheetPeriods;
    public static string WorkflowActivities;
    public static string WorkflowDesigner;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ProjectServerPropertyNames : object {
    public static string EngagementsTimephasedPageSize;
    public static string EnterpriseResourcesPageSize;
    public static string IsDelegate;
    public static string IsReadOnly;
    public static string ProjectsPageSize;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.ProjectSummaryTask")]
public class Microsoft.ProjectServer.Client.ProjectSummaryTask : Task {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; }
    [RemoteAttribute]
public double ActualCost { get; }
    [RemoteAttribute]
public string ActualWork { get; }
    [RemoteAttribute]
public TimeSpan ActualWorkTimeSpan { get; }
    [RemoteAttribute]
public string BudgetWork { get; }
    [RemoteAttribute]
public TimeSpan BudgetWorkTimeSpan { get; }
    [RemoteAttribute]
public double Cost { get; }
    [RemoteAttribute]
public string Duration { get; }
    [RemoteAttribute]
public TimeSpan DurationTimeSpan { get; }
    [RemoteAttribute]
public DateTime Finish { get; }
    [RemoteAttribute]
public string FinishText { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public int PercentComplete { get; }
    [RemoteAttribute]
public int Priority { get; }
    [RemoteAttribute]
public DateTime Start { get; }
    [RemoteAttribute]
public string StartText { get; }
    [RemoteAttribute]
public string Work { get; }
    [RemoteAttribute]
public TimeSpan WorkTimeSpan { get; }
    [EditorBrowsableAttribute("1")]
public ProjectSummaryTask(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    public double get_ActualCost();
    public string get_ActualWork();
    public TimeSpan get_ActualWorkTimeSpan();
    public string get_BudgetWork();
    public TimeSpan get_BudgetWorkTimeSpan();
    public double get_Cost();
    public string get_Duration();
    public TimeSpan get_DurationTimeSpan();
    public DateTime get_Finish();
    public string get_FinishText();
    public string get_Name();
    public int get_PercentComplete();
    public int get_Priority();
    public DateTime get_Start();
    public string get_StartText();
    public string get_Work();
    public TimeSpan get_WorkTimeSpan();
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ProjectSummaryTaskPropertyNames : object {
    public static string ActualCost;
    public static string ActualWork;
    public static string ActualWorkTimeSpan;
    public static string BudgetWork;
    public static string BudgetWorkTimeSpan;
    public static string Cost;
    public static string Duration;
    public static string DurationTimeSpan;
    public static string Finish;
    public static string FinishText;
    public static string Name;
    public static string PercentComplete;
    public static string Priority;
    public static string Start;
    public static string StartText;
    public static string Work;
    public static string WorkTimeSpan;
}
public enum Microsoft.ProjectServer.Client.ProjectType : Enum {
    public int value__;
    public static ProjectType MinRequestValue;
    public static ProjectType NotSpecified;
    public static ProjectType Project;
    public static ProjectType Template;
    public static ProjectType Global;
    public static ProjectType ResGlobal;
    public static ProjectType LightWeightProject;
    public static ProjectType InsertedProject;
    public static ProjectType MasterProject;
    public static ProjectType TimesheetAdminProject;
    public static ProjectType NewProject;
    public static ProjectType NewTemplate;
    public static ProjectType NewGlobal;
    public static ProjectType NewResGlobal;
    public static ProjectType InactiveProject;
    public static ProjectType InactiveTemplate;
    public static ProjectType InactiveGlobal;
    public static ProjectType NewOffset;
    public static ProjectType InactiveOffset;
    public static ProjectType MaxRequestValue;
}
public enum Microsoft.ProjectServer.Client.ProjectUtilizationType : Enum {
    public int value__;
    public static ProjectUtilizationType ProjectPlan;
    public static ProjectUtilizationType ResourceEngagements;
    public static ProjectUtilizationType ProjectPlanUntil;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.PublishedAssignment")]
public class Microsoft.ProjectServer.Client.PublishedAssignment : Assignment {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; }
    [RemoteAttribute]
public double ActualCost { get; }
    [RemoteAttribute]
public DateTime ActualFinish { get; }
    [RemoteAttribute]
public string ActualOvertimeWork { get; }
    [RemoteAttribute]
public TimeSpan ActualOvertimeWorkTimeSpan { get; }
    [RemoteAttribute]
public DateTime ActualStart { get; }
    [RemoteAttribute]
public string ActualWork { get; }
    [RemoteAttribute]
public TimeSpan ActualWorkTimeSpan { get; }
    [RemoteAttribute]
public double BudgetedCost { get; }
    [RemoteAttribute]
public string BudgetedWork { get; }
    [RemoteAttribute]
public TimeSpan BudgetedWorkTimeSpan { get; }
    [RemoteAttribute]
public double Cost { get; }
    [RemoteAttribute]
public CostRateTableName CostRateTable { get; }
    [RemoteAttribute]
public BookingType DefaultBookingType { get; }
    [RemoteAttribute]
public string Delay { get; }
    [RemoteAttribute]
public TimeSpan DelayTimeSpan { get; }
    [RemoteAttribute]
public bool IsLockedByManager { get; }
    [RemoteAttribute]
public bool IsWorkResource { get; }
    [RemoteAttribute]
public string OvertimeWork { get; }
    [RemoteAttribute]
public TimeSpan OvertimeWorkTimeSpan { get; }
    [RemoteAttribute]
public User Owner { get; }
    [RemoteAttribute]
public PublishedAssignment Parent { get; }
    [RemoteAttribute]
public int PercentWorkComplete { get; }
    [RemoteAttribute]
public string RegularWork { get; }
    [RemoteAttribute]
public TimeSpan RegularWorkTimeSpan { get; }
    [RemoteAttribute]
public string RemainingOvertimeWork { get; }
    [RemoteAttribute]
public TimeSpan RemainingOvertimeWorkTimeSpan { get; }
    [RemoteAttribute]
public string RemainingWork { get; }
    [RemoteAttribute]
public TimeSpan RemainingWorkTimeSpan { get; }
    [RemoteAttribute]
public PublishedProjectResource Resource { get; }
    [RemoteAttribute]
public double ResourceCapacity { get; }
    [RemoteAttribute]
public PublishedTask Task { get; }
    [RemoteAttribute]
public string Work { get; }
    [RemoteAttribute]
public TimeSpan WorkTimeSpan { get; }
    [EditorBrowsableAttribute("1")]
public PublishedAssignment(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    public double get_ActualCost();
    public DateTime get_ActualFinish();
    public string get_ActualOvertimeWork();
    public TimeSpan get_ActualOvertimeWorkTimeSpan();
    public DateTime get_ActualStart();
    public string get_ActualWork();
    public TimeSpan get_ActualWorkTimeSpan();
    public double get_BudgetedCost();
    public string get_BudgetedWork();
    public TimeSpan get_BudgetedWorkTimeSpan();
    public double get_Cost();
    public CostRateTableName get_CostRateTable();
    public BookingType get_DefaultBookingType();
    public string get_Delay();
    public TimeSpan get_DelayTimeSpan();
    public bool get_IsLockedByManager();
    public bool get_IsWorkResource();
    public string get_OvertimeWork();
    public TimeSpan get_OvertimeWorkTimeSpan();
    public User get_Owner();
    public PublishedAssignment get_Parent();
    public int get_PercentWorkComplete();
    public string get_RegularWork();
    public TimeSpan get_RegularWorkTimeSpan();
    public string get_RemainingOvertimeWork();
    public TimeSpan get_RemainingOvertimeWorkTimeSpan();
    public string get_RemainingWork();
    public TimeSpan get_RemainingWorkTimeSpan();
    public PublishedProjectResource get_Resource();
    public double get_ResourceCapacity();
    public PublishedTask get_Task();
    public string get_Work();
    public TimeSpan get_WorkTimeSpan();
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
}
[ScriptTypeAttribute("PS.PublishedAssignmentCollection")]
public class Microsoft.ProjectServer.Client.PublishedAssignmentCollection : ClientObjectCollection`1<PublishedAssignment> {
    [EditorBrowsableAttribute("1")]
public PublishedAssignmentCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public PublishedAssignment GetById(string objectId);
    [RemoteAttribute]
public PublishedAssignment GetByGuid(Guid uid);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PublishedAssignmentObjectPropertyNames : object {
    public static string Owner;
    public static string Parent;
    public static string Resource;
    public static string Task;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PublishedAssignmentPropertyNames : object {
    public static string ActualCost;
    public static string ActualFinish;
    public static string ActualOvertimeWork;
    public static string ActualOvertimeWorkTimeSpan;
    public static string ActualStart;
    public static string ActualWork;
    public static string ActualWorkTimeSpan;
    public static string BudgetedCost;
    public static string BudgetedWork;
    public static string BudgetedWorkTimeSpan;
    public static string Cost;
    public static string CostRateTable;
    public static string DefaultBookingType;
    public static string Delay;
    public static string DelayTimeSpan;
    public static string IsLockedByManager;
    public static string IsWorkResource;
    public static string OvertimeWork;
    public static string OvertimeWorkTimeSpan;
    public static string PercentWorkComplete;
    public static string RegularWork;
    public static string RegularWorkTimeSpan;
    public static string RemainingOvertimeWork;
    public static string RemainingOvertimeWorkTimeSpan;
    public static string RemainingWork;
    public static string RemainingWorkTimeSpan;
    public static string ResourceCapacity;
    public static string Work;
    public static string WorkTimeSpan;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.PublishedProject")]
public class Microsoft.ProjectServer.Client.PublishedProject : Project {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; public set; }
    [RemoteAttribute]
public PublishedAssignmentCollection Assignments { get; }
    [RemoteAttribute]
public Calendar Calendar { get; }
    [RemoteAttribute]
public string CurrencyCode { get; }
    [RemoteAttribute]
public int CurrencyDigits { get; }
    [RemoteAttribute]
public CurrencySymbolPosition CurrencyPosition { get; }
    [RemoteAttribute]
public string CurrencySymbol { get; }
    [RemoteAttribute]
public DateTime CurrentDate { get; }
    [RemoteAttribute]
public short DaysPerMonth { get; }
    [RemoteAttribute]
public bool DefaultEffortDriven { get; }
    [RemoteAttribute]
public bool DefaultEstimatedDuration { get; }
    [RemoteAttribute]
public FixedCostAccrual DefaultFixedCostAccrual { get; }
    [RemoteAttribute]
public double DefaultOvertimeRate { get; }
    [RemoteAttribute]
public double DefaultStandardRate { get; }
    [RemoteAttribute]
public TaskType DefaultTaskType { get; }
    [RemoteAttribute]
public WorkFormat DefaultWorkFormat { get; }
    [RemoteAttribute]
public string Description { get; }
    [RemoteAttribute]
public DraftProject Draft { get; }
    [RemoteAttribute]
public DateTime FinishDate { get; }
    [RemoteAttribute]
public short FiscalYearStartMonth { get; }
    [RemoteAttribute]
public PublishedProject IncludeCustomFields { get; }
    [RemoteAttribute]
public bool IsEnterpriseProject { get; public set; }
    [RemoteAttribute]
public int MinutesPerDay { get; }
    [RemoteAttribute]
public int MinutesPerWeek { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public bool NewTasksAreManual { get; }
    [RemoteAttribute]
public bool NumberFiscalYearFromStart { get; }
    [RemoteAttribute]
public User Owner { get; public set; }
    [RemoteAttribute]
public string ProjectIdentifier { get; }
    [RemoteAttribute]
public PublishedProjectResourceCollection ProjectResources { get; }
    [RemoteAttribute]
public bool ProtectedActualsSynch { get; }
    [RemoteAttribute]
public bool ScheduledFromStart { get; }
    [RemoteAttribute]
public bool ShowEstimatedDurations { get; }
    [RemoteAttribute]
public DateTime StartDate { get; }
    [RemoteAttribute]
public DateTime StatusDate { get; }
    [RemoteAttribute]
public PublishedTaskLinkCollection TaskLinks { get; }
    [RemoteAttribute]
public PublishedTaskCollection Tasks { get; }
    [RemoteAttribute]
public TrackingMode TrackingMode { get; }
    [RemoteAttribute]
public DateTime UtilizationDate { get; }
    [RemoteAttribute]
public ProjectUtilizationType UtilizationType { get; }
    [RemoteAttribute]
public short WeekStartDay { get; }
    [RemoteAttribute]
public decimal WinprojVersion { get; }
    [EditorBrowsableAttribute("1")]
public PublishedProject(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    [RemoteAttribute]
public void set_Item(string fieldName, object value);
    public PublishedAssignmentCollection get_Assignments();
    public Calendar get_Calendar();
    public string get_CurrencyCode();
    public int get_CurrencyDigits();
    public CurrencySymbolPosition get_CurrencyPosition();
    public string get_CurrencySymbol();
    public DateTime get_CurrentDate();
    public short get_DaysPerMonth();
    public bool get_DefaultEffortDriven();
    public bool get_DefaultEstimatedDuration();
    public FixedCostAccrual get_DefaultFixedCostAccrual();
    public double get_DefaultOvertimeRate();
    public double get_DefaultStandardRate();
    public TaskType get_DefaultTaskType();
    public WorkFormat get_DefaultWorkFormat();
    public string get_Description();
    public DraftProject get_Draft();
    public DateTime get_FinishDate();
    public short get_FiscalYearStartMonth();
    public PublishedProject get_IncludeCustomFields();
    public bool get_IsEnterpriseProject();
    public void set_IsEnterpriseProject(bool value);
    public int get_MinutesPerDay();
    public int get_MinutesPerWeek();
    public string get_Name();
    public bool get_NewTasksAreManual();
    public bool get_NumberFiscalYearFromStart();
    public User get_Owner();
    public void set_Owner(User value);
    public string get_ProjectIdentifier();
    public PublishedProjectResourceCollection get_ProjectResources();
    public bool get_ProtectedActualsSynch();
    public bool get_ScheduledFromStart();
    public bool get_ShowEstimatedDurations();
    public DateTime get_StartDate();
    public DateTime get_StatusDate();
    public PublishedTaskLinkCollection get_TaskLinks();
    public PublishedTaskCollection get_Tasks();
    public TrackingMode get_TrackingMode();
    public DateTime get_UtilizationDate();
    public ProjectUtilizationType get_UtilizationType();
    public short get_WeekStartDay();
    public decimal get_WinprojVersion();
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
public DraftProject CheckOut();
    [RemoteAttribute]
public void SubmitToWorkflow();
    [RemoteAttribute]
public QueueJob DeleteObject();
    [RemoteAttribute]
public void UnlinkProjectSite();
    [RemoteAttribute]
public QueueJob UpdateVisibilityCustomFields();
    [RemoteAttribute]
public void CreateProjectSite(string siteName);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PublishedProjectObjectPropertyNames : object {
    public static string Assignments;
    public static string Calendar;
    public static string Draft;
    public static string IncludeCustomFields;
    public static string Owner;
    public static string ProjectResources;
    public static string TaskLinks;
    public static string Tasks;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PublishedProjectPropertyNames : object {
    public static string CurrencyCode;
    public static string CurrencyDigits;
    public static string CurrencyPosition;
    public static string CurrencySymbol;
    public static string CurrentDate;
    public static string DaysPerMonth;
    public static string DefaultEffortDriven;
    public static string DefaultEstimatedDuration;
    public static string DefaultFixedCostAccrual;
    public static string DefaultOvertimeRate;
    public static string DefaultStandardRate;
    public static string DefaultTaskType;
    public static string DefaultWorkFormat;
    public static string Description;
    public static string FinishDate;
    public static string FiscalYearStartMonth;
    public static string IsEnterpriseProject;
    public static string MinutesPerDay;
    public static string MinutesPerWeek;
    public static string Name;
    public static string NewTasksAreManual;
    public static string NumberFiscalYearFromStart;
    public static string ProjectIdentifier;
    public static string ProtectedActualsSynch;
    public static string ScheduledFromStart;
    public static string ShowEstimatedDurations;
    public static string StartDate;
    public static string StatusDate;
    public static string TrackingMode;
    public static string UtilizationDate;
    public static string UtilizationType;
    public static string WeekStartDay;
    public static string WinprojVersion;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.PublishedProjectResource")]
public class Microsoft.ProjectServer.Client.PublishedProjectResource : ProjectResource {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; }
    [RemoteAttribute]
public PublishedAssignmentCollection Assignments { get; }
    [RemoteAttribute]
public bool CanLevel { get; }
    [RemoteAttribute]
public string Code { get; }
    [RemoteAttribute]
public AccrueAt CostAccrual { get; }
    [RemoteAttribute]
public string CostCenter { get; }
    [RemoteAttribute]
public double CostPerUse { get; }
    [RemoteAttribute]
public User DefaultAssignmentOwner { get; }
    [RemoteAttribute]
public BookingType DefaultBookingType { get; }
    [RemoteAttribute]
public string Email { get; }
    [RemoteAttribute]
public string Group { get; }
    [RemoteAttribute]
public string Initials { get; }
    [RemoteAttribute]
public string MaterialLabel { get; }
    [RemoteAttribute]
public double MaximumCapacity { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public double OvertimeRate { get; }
    [RemoteAttribute]
public OvertimeRateFormat OvertimeRateUnits { get; }
    [RemoteAttribute]
public string Phonetics { get; }
    [RemoteAttribute]
public double StandardRate { get; }
    [RemoteAttribute]
public StandardRateFormat StandardRateUnits { get; }
    [EditorBrowsableAttribute("1")]
public PublishedProjectResource(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    public PublishedAssignmentCollection get_Assignments();
    public bool get_CanLevel();
    public string get_Code();
    public AccrueAt get_CostAccrual();
    public string get_CostCenter();
    public double get_CostPerUse();
    public User get_DefaultAssignmentOwner();
    public BookingType get_DefaultBookingType();
    public string get_Email();
    public string get_Group();
    public string get_Initials();
    public string get_MaterialLabel();
    public double get_MaximumCapacity();
    public string get_Name();
    public double get_OvertimeRate();
    public OvertimeRateFormat get_OvertimeRateUnits();
    public string get_Phonetics();
    public double get_StandardRate();
    public StandardRateFormat get_StandardRateUnits();
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
}
[ScriptTypeAttribute("PS.PublishedProjectResourceCollection")]
public class Microsoft.ProjectServer.Client.PublishedProjectResourceCollection : ClientObjectCollection`1<PublishedProjectResource> {
    [EditorBrowsableAttribute("1")]
public PublishedProjectResourceCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public PublishedProjectResource GetById(string objectId);
    [RemoteAttribute]
public PublishedProjectResource GetByGuid(Guid uid);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PublishedProjectResourceObjectPropertyNames : object {
    public static string Assignments;
    public static string DefaultAssignmentOwner;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PublishedProjectResourcePropertyNames : object {
    public static string CanLevel;
    public static string Code;
    public static string CostAccrual;
    public static string CostCenter;
    public static string CostPerUse;
    public static string DefaultBookingType;
    public static string Email;
    public static string Group;
    public static string Initials;
    public static string MaterialLabel;
    public static string MaximumCapacity;
    public static string Name;
    public static string OvertimeRate;
    public static string OvertimeRateUnits;
    public static string Phonetics;
    public static string StandardRate;
    public static string StandardRateUnits;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.PublishedTask")]
public class Microsoft.ProjectServer.Client.PublishedTask : Task {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; }
    [RemoteAttribute]
public double ActualCost { get; }
    [RemoteAttribute]
public DateTime ActualFinish { get; }
    [RemoteAttribute]
public DateTime ActualStart { get; }
    [RemoteAttribute]
public string ActualWork { get; }
    [RemoteAttribute]
public TimeSpan ActualWorkTimeSpan { get; }
    [RemoteAttribute]
public PublishedAssignmentCollection Assignments { get; }
    [RemoteAttribute]
public string BudgetWork { get; }
    [RemoteAttribute]
public TimeSpan BudgetWorkTimeSpan { get; }
    [RemoteAttribute]
public Calendar Calendar { get; }
    [RemoteAttribute]
public DateTime Completion { get; }
    [RemoteAttribute]
public DateTime ConstraintStartEnd { get; }
    [RemoteAttribute]
public ConstraintType ConstraintType { get; }
    [RemoteAttribute]
public double Cost { get; }
    [RemoteAttribute]
public DateTime Deadline { get; }
    [RemoteAttribute]
public string Duration { get; }
    [RemoteAttribute]
public TimeSpan DurationTimeSpan { get; }
    [RemoteAttribute]
public DateTime Finish { get; }
    [RemoteAttribute]
public string FinishText { get; }
    [RemoteAttribute]
public double FixedCost { get; }
    [RemoteAttribute]
public bool IsActive { get; }
    [RemoteAttribute]
public bool IsEffortDriven { get; }
    [RemoteAttribute]
public bool IsLockedByManager { get; }
    [RemoteAttribute]
public bool IsManual { get; }
    [RemoteAttribute]
public bool IsMarked { get; }
    [RemoteAttribute]
public bool IsMilestone { get; }
    [RemoteAttribute]
public bool LevelingAdjustsAssignments { get; }
    [RemoteAttribute]
public bool LevelingCanSplit { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public int OutlineLevel { get; }
    [RemoteAttribute]
public PublishedTask Parent { get; }
    [RemoteAttribute]
public int PercentComplete { get; }
    [RemoteAttribute]
public int PercentPhysicalWorkComplete { get; }
    [RemoteAttribute]
public PublishedTaskLinkCollection Predecessors { get; }
    [RemoteAttribute]
public int Priority { get; }
    [RemoteAttribute]
public string RemainingDuration { get; }
    [RemoteAttribute]
public TimeSpan RemainingDurationTimeSpan { get; }
    [RemoteAttribute]
public DateTime Start { get; }
    [RemoteAttribute]
public string StartText { get; }
    [RemoteAttribute]
public User StatusManager { get; }
    [RemoteAttribute]
public PublishedTaskLinkCollection Successors { get; }
    [RemoteAttribute]
public TaskType TaskType { get; }
    [RemoteAttribute]
public bool UsePercentPhysicalWorkComplete { get; }
    [RemoteAttribute]
public string Work { get; }
    [RemoteAttribute]
public TimeSpan WorkTimeSpan { get; }
    [EditorBrowsableAttribute("1")]
public PublishedTask(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    public double get_ActualCost();
    public DateTime get_ActualFinish();
    public DateTime get_ActualStart();
    public string get_ActualWork();
    public TimeSpan get_ActualWorkTimeSpan();
    public PublishedAssignmentCollection get_Assignments();
    public string get_BudgetWork();
    public TimeSpan get_BudgetWorkTimeSpan();
    public Calendar get_Calendar();
    public DateTime get_Completion();
    public DateTime get_ConstraintStartEnd();
    public ConstraintType get_ConstraintType();
    public double get_Cost();
    public DateTime get_Deadline();
    public string get_Duration();
    public TimeSpan get_DurationTimeSpan();
    public DateTime get_Finish();
    public string get_FinishText();
    public double get_FixedCost();
    public bool get_IsActive();
    public bool get_IsEffortDriven();
    public bool get_IsLockedByManager();
    public bool get_IsManual();
    public bool get_IsMarked();
    public bool get_IsMilestone();
    public bool get_LevelingAdjustsAssignments();
    public bool get_LevelingCanSplit();
    public string get_Name();
    public int get_OutlineLevel();
    public PublishedTask get_Parent();
    public int get_PercentComplete();
    public int get_PercentPhysicalWorkComplete();
    public PublishedTaskLinkCollection get_Predecessors();
    public int get_Priority();
    public string get_RemainingDuration();
    public TimeSpan get_RemainingDurationTimeSpan();
    public DateTime get_Start();
    public string get_StartText();
    public User get_StatusManager();
    public PublishedTaskLinkCollection get_Successors();
    public TaskType get_TaskType();
    public bool get_UsePercentPhysicalWorkComplete();
    public string get_Work();
    public TimeSpan get_WorkTimeSpan();
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
}
[ScriptTypeAttribute("PS.PublishedTaskCollection")]
public class Microsoft.ProjectServer.Client.PublishedTaskCollection : ClientObjectCollection`1<PublishedTask> {
    [EditorBrowsableAttribute("1")]
public PublishedTaskCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public PublishedTask GetById(string objectId);
    [RemoteAttribute]
public PublishedTask GetByGuid(Guid uid);
}
[ScriptTypeAttribute("PS.PublishedTaskLink")]
public class Microsoft.ProjectServer.Client.PublishedTaskLink : TaskLink {
    [RemoteAttribute]
public DependencyType DependencyType { get; }
    [RemoteAttribute]
public PublishedTask End { get; }
    [RemoteAttribute]
public int LinkLag { get; }
    [RemoteAttribute]
public string LinkLagDuration { get; }
    [RemoteAttribute]
public short LinkLagFmt { get; }
    [RemoteAttribute]
public Guid PredecessorTaskId { get; }
    [RemoteAttribute]
public Guid ProjUid { get; }
    [RemoteAttribute]
public PublishedTask Start { get; }
    [RemoteAttribute]
public Guid SuccessorTaskId { get; }
    [EditorBrowsableAttribute("1")]
public PublishedTaskLink(ClientRuntimeContext context, ObjectPath objectPath);
    public DependencyType get_DependencyType();
    public PublishedTask get_End();
    public int get_LinkLag();
    public string get_LinkLagDuration();
    public short get_LinkLagFmt();
    public Guid get_PredecessorTaskId();
    public Guid get_ProjUid();
    public PublishedTask get_Start();
    public Guid get_SuccessorTaskId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.PublishedTaskLinkCollection")]
public class Microsoft.ProjectServer.Client.PublishedTaskLinkCollection : ClientObjectCollection`1<PublishedTaskLink> {
    [EditorBrowsableAttribute("1")]
public PublishedTaskLinkCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public PublishedTaskLink GetById(string objectId);
    [RemoteAttribute]
public PublishedTaskLink GetByGuid(Guid uid);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PublishedTaskLinkObjectPropertyNames : object {
    public static string End;
    public static string Start;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PublishedTaskLinkPropertyNames : object {
    public static string DependencyType;
    public static string LinkLag;
    public static string LinkLagDuration;
    public static string LinkLagFmt;
    public static string PredecessorTaskId;
    public static string ProjUid;
    public static string SuccessorTaskId;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PublishedTaskObjectPropertyNames : object {
    public static string Assignments;
    public static string Calendar;
    public static string Parent;
    public static string Predecessors;
    public static string StatusManager;
    public static string Successors;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.PublishedTaskPropertyNames : object {
    public static string ActualCost;
    public static string ActualFinish;
    public static string ActualStart;
    public static string ActualWork;
    public static string ActualWorkTimeSpan;
    public static string BudgetWork;
    public static string BudgetWorkTimeSpan;
    public static string Completion;
    public static string ConstraintStartEnd;
    public static string ConstraintType;
    public static string Cost;
    public static string Deadline;
    public static string Duration;
    public static string DurationTimeSpan;
    public static string Finish;
    public static string FinishText;
    public static string FixedCost;
    public static string IsActive;
    public static string IsEffortDriven;
    public static string IsLockedByManager;
    public static string IsManual;
    public static string IsMarked;
    public static string IsMilestone;
    public static string LevelingAdjustsAssignments;
    public static string LevelingCanSplit;
    public static string Name;
    public static string OutlineLevel;
    public static string PercentComplete;
    public static string PercentPhysicalWorkComplete;
    public static string Priority;
    public static string RemainingDuration;
    public static string RemainingDurationTimeSpan;
    public static string Start;
    public static string StartText;
    public static string TaskType;
    public static string UsePercentPhysicalWorkComplete;
    public static string Work;
    public static string WorkTimeSpan;
}
[ScriptTypeAttribute("PS.QueueJob")]
public class Microsoft.ProjectServer.Client.QueueJob : ClientObject {
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public JobState JobState { get; }
    [RemoteAttribute]
public QueueMsgType MessageType { get; }
    [RemoteAttribute]
public int PercentComplete { get; }
    [RemoteAttribute]
public Project Project { get; }
    [RemoteAttribute]
public User Submitter { get; }
    [RemoteAttribute]
public TimeSpan WaitTime { get; }
    [EditorBrowsableAttribute("1")]
public QueueJob(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_Id();
    public JobState get_JobState();
    public QueueMsgType get_MessageType();
    public int get_PercentComplete();
    public Project get_Project();
    public User get_Submitter();
    public TimeSpan get_WaitTime();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Cancel();
}
[ScriptTypeAttribute("PS.QueueJobCollection")]
public class Microsoft.ProjectServer.Client.QueueJobCollection : ClientObjectCollection`1<QueueJob> {
    [EditorBrowsableAttribute("1")]
public QueueJobCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public QueueJob GetById(string objectId);
    [RemoteAttribute]
public QueueJob GetByGuid(Guid uid);
    [RemoteAttribute]
public ClientObjectList`1<QueueJob> getAll();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.QueueJobObjectPropertyNames : object {
    public static string Project;
    public static string Submitter;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.QueueJobPropertyNames : object {
    public static string Id;
    public static string JobState;
    public static string MessageType;
    public static string PercentComplete;
    public static string WaitTime;
}
public enum Microsoft.ProjectServer.Client.QueueMsgType : Enum {
    public int value__;
    public static QueueMsgType Unknown;
    public static QueueMsgType ACProjectSave;
    public static QueueMsgType AdSyncERP;
    public static QueueMsgType AdSyncGroup;
    public static QueueMsgType ArchiveCategories;
    public static QueueMsgType ArchiveCustomFields;
    public static QueueMsgType ArchiveGlobalProject;
    public static QueueMsgType ArchiveResources;
    public static QueueMsgType ArchiveSystemSettings;
    public static QueueMsgType ArchiveViews;
    public static QueueMsgType BumpPriority;
    public static QueueMsgType CBSProjRendezvous;
    public static QueueMsgType CBSRequest;
    public static QueueMsgType CBSTsRendezvous;
    public static QueueMsgType CreateProposalProject;
    public static QueueMsgType CreateWssSite;
    public static QueueMsgType DeleteWssSite;
    public static QueueMsgType LWPUpgradeToProject;
    public static QueueMsgType NotificationMessage;
    public static QueueMsgType ProjectArchive;
    public static QueueMsgType ProjectArchiveRetentionDelete;
    public static QueueMsgType ProjectCheckIn;
    public static QueueMsgType ProjectCreate;
    public static QueueMsgType ProjectDelete;
    public static QueueMsgType ProjectPublish;
    public static QueueMsgType ProjectRename;
    public static QueueMsgType ProjectRestore;
    public static QueueMsgType ProjectReversePublish;
    public static QueueMsgType ProjectUpdate;
    public static QueueMsgType ProjectUpdateTeam;
    public static QueueMsgType PublishNotifications;
    public static QueueMsgType QueueCleanup;
    public static QueueMsgType ReportingAttributeCubeSettingsSync;
    public static QueueMsgType ReportingBaseCalendarSync;
    public static QueueMsgType ReportingCustomFieldMetadataSync;
    public static QueueMsgType ReportingEntityUserViewRefresh;
    public static QueueMsgType ReportingFiscalPeriodsSync;
    public static QueueMsgType ReportingLookupTableSync;
    public static QueueMsgType ReportingProjectDelete;
    public static QueueMsgType ReportingProjectPublish;
    public static QueueMsgType ReportingResourcesCapacityRangeSync;
    public static QueueMsgType ReportingResourceSync;
    public static QueueMsgType ReportingTimesheetAdjust;
    public static QueueMsgType ReportingTimesheetClassSync;
    public static QueueMsgType ReportingTimesheetDelete;
    public static QueueMsgType ReportingTimesheetPeriodDelete;
    public static QueueMsgType ReportingTimesheetPeriodSync;
    public static QueueMsgType ReportingTimesheetSave;
    public static QueueMsgType ReportingTimesheetStatusSync;
    public static QueueMsgType ReportingWSSSync;
    public static QueueMsgType ResourcePlanCheckIn;
    public static QueueMsgType ResourcePlanDelete;
    public static QueueMsgType ResourcePlanPublish;
    public static QueueMsgType ResourcePlanSave;
    public static QueueMsgType RestoreCategories;
    public static QueueMsgType RestoreCustomFields;
    public static QueueMsgType RestoreGlobalProject;
    public static QueueMsgType RestoreResources;
    public static QueueMsgType RestoreSystemSettings;
    public static QueueMsgType RestoreViews;
    public static QueueMsgType RulesProcessAll;
    public static QueueMsgType RulesProcessAllAutoForManager;
    public static QueueMsgType RulesProcessAllForManager;
    public static QueueMsgType RulesProcessSingleForManager;
    public static QueueMsgType StatusApproval;
    public static QueueMsgType Timer1;
    public static QueueMsgType Timer10;
    public static QueueMsgType Timer2;
    public static QueueMsgType Timer3;
    public static QueueMsgType Timer4;
    public static QueueMsgType Timer5;
    public static QueueMsgType Timer6;
    public static QueueMsgType Timer7;
    public static QueueMsgType Timer8;
    public static QueueMsgType Timer9;
    public static QueueMsgType TimerMessage;
    public static QueueMsgType TimerRzNotify;
    public static QueueMsgType TimerRzProj;
    public static QueueMsgType TimerRzTS;
    public static QueueMsgType TimesheetMessage;
    public static QueueMsgType TimesheetDelete;
    public static QueueMsgType TimesheetRecall;
    public static QueueMsgType TimesheetReview;
    public static QueueMsgType TimesheetSubmit;
    public static QueueMsgType TimesheetUpdate;
    public static QueueMsgType ReportingSyncGlobalData;
    public static QueueMsgType SynchronizeMembershipForWssSite;
    public static QueueMsgType SynchronizeSingleUserMembershipInWss;
    public static QueueMsgType ReportingRefresh;
    public static QueueMsgType UpdateScheduledProject;
    public static QueueMsgType WorkflowStartWorkflow;
    public static QueueMsgType AnalysisDelete;
    public static QueueMsgType AnalysisCreate;
    public static QueueMsgType AnalysisUpdate;
    public static QueueMsgType PlannerSolutionCreate;
    public static QueueMsgType PlannerSolutionDelete;
    public static QueueMsgType OptimizerSolutionCreate;
    public static QueueMsgType OptimizerSolutionDelete;
    public static QueueMsgType TimesheetLineApproval;
    public static QueueMsgType PeriodicTasks;
    public static QueueMsgType PDPUpdateProjectImpacts;
    public static QueueMsgType ExchangeSyncTasks;
    public static QueueMsgType ReportingAttributeCubeDepartmentSync;
    public static QueueMsgType ReportingTimesheetProjectAggregation;
    public static QueueMsgType ReportingTimesheetAssignmentsUpgrade;
    public static QueueMsgType WorkflowCheckinNotify;
    public static QueueMsgType WorkflowChangeWorkflow;
    public static QueueMsgType ProjectPublishSummary;
    public static QueueMsgType ReportingOlapDatabaseSettingsSync;
    public static QueueMsgType ReportingWorkflowMetadataSync;
    public static QueueMsgType ReportWorkflowProjectDataSync;
    public static QueueMsgType ReportEptSync;
    public static QueueMsgType ReportingSummaryPublish;
    public static QueueMsgType ReportingSolutionCommitedDecisionSync;
    public static QueueMsgType WorkflowCommitNotify;
    public static QueueMsgType ReportingTimesheetAssignmentsRefresh;
    public static QueueMsgType UpdateProjectSitePath;
    public static QueueMsgType AddSingleUserMembershipInWss;
    public static QueueMsgType DeleteSingleUserMembershipInWss;
    public static QueueMsgType TimeSheetUpdateResourceNonWorkingTime;
    public static QueueMsgType SyncProjectEnterpriseEntities;
    public static QueueMsgType LastMessage;
    public static QueueMsgType ExchangeCalOofSync;
    public static QueueMsgType PreparePSPermissionSynchronization;
    public static QueueMsgType PSPermissionSynchronizePWASite;
    public static QueueMsgType PSPermissionSynchronizeProjectSite;
    public static QueueMsgType PreparePSProjectPermissionSynchronization;
    public static QueueMsgType ScheduleWebPartSave;
    public static QueueMsgType ProjectImportTaskList;
    public static QueueMsgType TimesheetUpdateSRAForResource;
    public static QueueMsgType ActiveMonitorCheck;
    public static QueueMsgType ManagedModeTaskSynchronization;
    public static QueueMsgType ResourcePlanMigrate;
    public static QueueMsgType ReportingWSSIssueSync;
    public static QueueMsgType ReportingWSSRiskSync;
    public static QueueMsgType ReportingWSSDocSync;
    public static QueueMsgType ReportingWSSDeliverableSync;
    public static QueueMsgType UpdateSRA;
}
public enum Microsoft.ProjectServer.Client.ReadyToLeaveProjectStageValue : Enum {
    public int value__;
    public static ReadyToLeaveProjectStageValue Ready;
    public static ReadyToLeaveProjectStageValue RequiresFieldsAndDrivers;
    public static ReadyToLeaveProjectStageValue RequiresDrivers;
    public static ReadyToLeaveProjectStageValue RequiresFields;
}
[ScriptTypeAttribute("PS.ResourceCalendarException")]
public class Microsoft.ProjectServer.Client.ResourceCalendarException : CalendarException {
    [EditorBrowsableAttribute("1")]
public ResourceCalendarException(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("PS.ResourceEngagement")]
public class Microsoft.ProjectServer.Client.ResourceEngagement : Engagement {
    [RemoteAttribute]
public DateTime ApprovedFinish { get; public set; }
    [RemoteAttribute]
public double ApprovedMaxUnits { get; public set; }
    [RemoteAttribute]
public DateTime ApprovedStart { get; public set; }
    [RemoteAttribute]
public string ApprovedWork { get; public set; }
    [RemoteAttribute]
public TimeSpan ApprovedWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public DateTime RequestedFinish { get; }
    [RemoteAttribute]
public double RequestedMaxUnits { get; }
    [RemoteAttribute]
public DateTime RequestedStart { get; }
    [RemoteAttribute]
public string RequestedWork { get; }
    [RemoteAttribute]
public TimeSpan RequestedWorkTimeSpan { get; }
    [EditorBrowsableAttribute("1")]
public ResourceEngagement(ClientRuntimeContext context, ObjectPath objectPath);
    public DateTime get_ApprovedFinish();
    public void set_ApprovedFinish(DateTime value);
    public double get_ApprovedMaxUnits();
    public void set_ApprovedMaxUnits(double value);
    public DateTime get_ApprovedStart();
    public void set_ApprovedStart(DateTime value);
    public string get_ApprovedWork();
    public void set_ApprovedWork(string value);
    public TimeSpan get_ApprovedWorkTimeSpan();
    public void set_ApprovedWorkTimeSpan(TimeSpan value);
    public DateTime get_RequestedFinish();
    public double get_RequestedMaxUnits();
    public DateTime get_RequestedStart();
    public string get_RequestedWork();
    public TimeSpan get_RequestedWorkTimeSpan();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public ResourceEngagementTimephasedCollection GetTimephased(DateTime start, DateTime end, TimeScale timescale, EngagementContourType contourType);
}
[ScriptTypeAttribute("PS.ResourceEngagementCollection")]
public class Microsoft.ProjectServer.Client.ResourceEngagementCollection : ClientObjectCollection`1<ResourceEngagement> {
    [EditorBrowsableAttribute("1")]
public ResourceEngagementCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public virtual ClientResult`1<bool> Remove(Engagement engagement);
    [RemoteAttribute]
public virtual void Update();
    [RemoteAttribute]
public ResourceEngagement GetById(string objectId);
    [RemoteAttribute]
public ResourceEngagement GetByGuid(Guid uid);
}
[ScriptTypeAttribute("PS.ResourceEngagementComment")]
public class Microsoft.ProjectServer.Client.ResourceEngagementComment : EngagementComment {
    [EditorBrowsableAttribute("1")]
public ResourceEngagementComment(ClientRuntimeContext context, ObjectPath objectPath);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ResourceEngagementPropertyNames : object {
    public static string ApprovedFinish;
    public static string ApprovedMaxUnits;
    public static string ApprovedStart;
    public static string ApprovedWork;
    public static string ApprovedWorkTimeSpan;
    public static string RequestedFinish;
    public static string RequestedMaxUnits;
    public static string RequestedStart;
    public static string RequestedWork;
    public static string RequestedWorkTimeSpan;
}
[ScriptTypeAttribute("PS.ResourceEngagementTimephasedCollection")]
public class Microsoft.ProjectServer.Client.ResourceEngagementTimephasedCollection : ClientObjectCollection`1<ResourceEngagementTimephasedPeriod> {
    [EditorBrowsableAttribute("1")]
public ResourceEngagementTimephasedCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public ResourceEngagementTimephasedPeriod GetByStart(DateTime date);
}
[ScriptTypeAttribute("PS.ResourceEngagementTimephasedPeriod")]
public class Microsoft.ProjectServer.Client.ResourceEngagementTimephasedPeriod : EngagementTimephasedPeriod {
    [EditorBrowsableAttribute("1")]
public ResourceEngagementTimephasedPeriod(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("PS.ResourcePlan")]
public class Microsoft.ProjectServer.Client.ResourcePlan : ClientObject {
    [RemoteAttribute]
public PlanAssignmentCollection Assignments { get; }
    [RemoteAttribute]
public DateTime Finish { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public DateTime Start { get; }
    [RemoteAttribute]
public DateTime UtilizationDate { get; public set; }
    [RemoteAttribute]
public UtilizationType UtilizationType { get; public set; }
    [EditorBrowsableAttribute("1")]
public ResourcePlan(ClientRuntimeContext context, ObjectPath objectPath);
    public PlanAssignmentCollection get_Assignments();
    public DateTime get_Finish();
    public Guid get_Id();
    public DateTime get_Start();
    public DateTime get_UtilizationDate();
    public void set_UtilizationDate(DateTime value);
    public UtilizationType get_UtilizationType();
    public void set_UtilizationType(UtilizationType value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public QueueJob Update();
    [RemoteAttribute]
public QueueJob Publish();
    [RemoteAttribute]
public QueueJob ForceCheckIn();
    [RemoteAttribute]
public QueueJob DeleteObject();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ResourcePlanObjectPropertyNames : object {
    public static string Assignments;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ResourcePlanPropertyNames : object {
    public static string Finish;
    public static string Id;
    public static string Start;
    public static string UtilizationDate;
    public static string UtilizationType;
}
public enum Microsoft.ProjectServer.Client.ResourceType : Enum {
    public int value__;
    public static ResourceType WinProjScratchpadResource;
    public static ResourceType WinProjUnknownResource;
    public static ResourceType WinProjUnassignedResource;
    public static ResourceType WinProjSummaryResource;
    public static ResourceType PureUser;
    public static ResourceType WorkResource;
    public static ResourceType CAN_LOG_IN_MAXIMUM;
    public static ResourceType GenericWorkResource;
    public static ResourceType MaterialResource;
    public static ResourceType GenericMaterialResource;
    public static ResourceType CostResources;
    public static ResourceType GenericCostResources;
    public static ResourceType IS_NONBUDGET_TYPE_MAXIMUM;
    public static ResourceType BudgetWorkResource;
    public static ResourceType BudgetCostResource;
    public static ResourceType BudgetMaterialResource;
    public static ResourceType GenericBudgetWorkResource;
    public static ResourceType GenericBudgetCostResource;
    public static ResourceType GenericBudgetMaterialResource;
    public static ResourceType INACTIVATED_OFFSET;
}
public class Microsoft.ProjectServer.Client.ScriptTypeFactory : object {
    public sealed virtual IFromJson CreateObjectFromScriptType(string scriptType, ClientRuntimeContext context);
}
[ScriptTypeAttribute("PS.ServiceStatus")]
public class Microsoft.ProjectServer.Client.ServiceStatus : ClientObject {
    [RemoteAttribute]
public bool IsDelegate { get; }
    [RemoteAttribute]
public bool IsReadOnly { get; }
    public ServiceStatus(ClientRuntimeContext context, ProjectServer server);
    [EditorBrowsableAttribute("1")]
public ServiceStatus(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_IsDelegate();
    public bool get_IsReadOnly();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void StopDelegation();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.ServiceStatusPropertyNames : object {
    public static string IsDelegate;
    public static string IsReadOnly;
}
[ScriptTypeAttribute("PS.Stage")]
public class Microsoft.ProjectServer.Client.Stage : ClientObject {
    [RemoteAttribute]
public StrategicImpactBehavior Behavior { get; public set; }
    [RemoteAttribute]
public bool CheckInRequired { get; public set; }
    [RemoteAttribute]
public StageCustomFieldCollection CustomFields { get; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public Phase Phase { get; public set; }
    [RemoteAttribute]
public StageDetailPageCollection ProjectDetailPages { get; }
    [RemoteAttribute]
public string SubmitDescription { get; public set; }
    [RemoteAttribute]
public ProjectDetailPage WorkflowStatusPage { get; public set; }
    [EditorBrowsableAttribute("1")]
public Stage(ClientRuntimeContext context, ObjectPath objectPath);
    public StrategicImpactBehavior get_Behavior();
    public void set_Behavior(StrategicImpactBehavior value);
    public bool get_CheckInRequired();
    public void set_CheckInRequired(bool value);
    public StageCustomFieldCollection get_CustomFields();
    public string get_Description();
    public void set_Description(string value);
    public Guid get_Id();
    public string get_Name();
    public void set_Name(string value);
    public Phase get_Phase();
    public void set_Phase(Phase value);
    public StageDetailPageCollection get_ProjectDetailPages();
    public string get_SubmitDescription();
    public void set_SubmitDescription(string value);
    public ProjectDetailPage get_WorkflowStatusPage();
    public void set_WorkflowStatusPage(ProjectDetailPage value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.StageCollection")]
public class Microsoft.ProjectServer.Client.StageCollection : ClientObjectCollection`1<Stage> {
    [EditorBrowsableAttribute("1")]
public StageCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Stage GetById(string objectId);
    [RemoteAttribute]
public Stage GetByGuid(Guid uid);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public Stage Add(StageCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(Stage stage);
}
[ScriptTypeAttribute("PS.StageCreationInformation")]
public class Microsoft.ProjectServer.Client.StageCreationInformation : ClientValueObject {
    private StrategicImpactBehavior m_behavior;
    private bool m_checkInRequired;
    private IEnumerable`1<StageCustomFieldCreationInformation> m_customFields;
    private string m_description;
    private Guid m_id;
    private string m_name;
    private Guid m_phaseId;
    private IEnumerable`1<StageDetailPageCreationInformation> m_projectDetailPages;
    private string m_submitDescription;
    private Guid m_workflowStatusPageId;
    [RemoteAttribute]
public StrategicImpactBehavior Behavior { get; public set; }
    [RemoteAttribute]
public bool CheckInRequired { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<StageCustomFieldCreationInformation> CustomFields { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public Guid PhaseId { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<StageDetailPageCreationInformation> ProjectDetailPages { get; public set; }
    [RemoteAttribute]
public string SubmitDescription { get; public set; }
    [RemoteAttribute]
public Guid WorkflowStatusPageId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public StrategicImpactBehavior get_Behavior();
    public void set_Behavior(StrategicImpactBehavior value);
    public bool get_CheckInRequired();
    public void set_CheckInRequired(bool value);
    public IEnumerable`1<StageCustomFieldCreationInformation> get_CustomFields();
    public void set_CustomFields(IEnumerable`1<StageCustomFieldCreationInformation> value);
    public string get_Description();
    public void set_Description(string value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_Name();
    public void set_Name(string value);
    public Guid get_PhaseId();
    public void set_PhaseId(Guid value);
    public IEnumerable`1<StageDetailPageCreationInformation> get_ProjectDetailPages();
    public void set_ProjectDetailPages(IEnumerable`1<StageDetailPageCreationInformation> value);
    public string get_SubmitDescription();
    public void set_SubmitDescription(string value);
    public Guid get_WorkflowStatusPageId();
    public void set_WorkflowStatusPageId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.StageCustomField")]
public class Microsoft.ProjectServer.Client.StageCustomField : ClientObject {
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public bool ReadOnly { get; }
    [RemoteAttribute]
public bool Required { get; }
    [RemoteAttribute]
public Stage Stage { get; }
    [EditorBrowsableAttribute("1")]
public StageCustomField(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_Id();
    public string get_Name();
    public bool get_ReadOnly();
    public bool get_Required();
    public Stage get_Stage();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.StageCustomFieldCollection")]
public class Microsoft.ProjectServer.Client.StageCustomFieldCollection : ClientObjectCollection`1<StageCustomField> {
    [EditorBrowsableAttribute("1")]
public StageCustomFieldCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public StageCustomField GetById(string objectId);
    [RemoteAttribute]
public StageCustomField GetByGuid(Guid uid);
    [RemoteAttribute]
public StageCustomField Add(StageCustomFieldCreationInformation creationInfo);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(StageCustomField field);
}
[ScriptTypeAttribute("PS.StageCustomFieldCreationInformation")]
public class Microsoft.ProjectServer.Client.StageCustomFieldCreationInformation : ClientValueObject {
    private Guid m_id;
    private bool m_readOnly;
    private bool m_required;
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public bool ReadOnly { get; public set; }
    [RemoteAttribute]
public bool Required { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_Id();
    public void set_Id(Guid value);
    public bool get_ReadOnly();
    public void set_ReadOnly(bool value);
    public bool get_Required();
    public void set_Required(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.StageCustomFieldObjectPropertyNames : object {
    public static string Stage;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.StageCustomFieldPropertyNames : object {
    public static string Id;
    public static string Name;
    public static string ReadOnly;
    public static string Required;
}
[ScriptTypeAttribute("PS.StageDetailPage")]
public class Microsoft.ProjectServer.Client.StageDetailPage : ClientObject {
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public ProjectDetailPage Page { get; public set; }
    [RemoteAttribute]
public int Position { get; public set; }
    [RemoteAttribute]
public bool RequiresAttention { get; public set; }
    [RemoteAttribute]
public Stage Stage { get; }
    [EditorBrowsableAttribute("1")]
public StageDetailPage(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Description();
    public void set_Description(string value);
    public Guid get_Id();
    public ProjectDetailPage get_Page();
    public void set_Page(ProjectDetailPage value);
    public int get_Position();
    public void set_Position(int value);
    public bool get_RequiresAttention();
    public void set_RequiresAttention(bool value);
    public Stage get_Stage();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.StageDetailPageCollection")]
public class Microsoft.ProjectServer.Client.StageDetailPageCollection : ClientObjectCollection`1<StageDetailPage> {
    [EditorBrowsableAttribute("1")]
public StageDetailPageCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public StageDetailPage GetById(string objectId);
    [RemoteAttribute]
public StageDetailPage GetByGuid(Guid uid);
    [RemoteAttribute]
public StageDetailPage Add(StageDetailPageCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(StageDetailPage pdp);
}
[ScriptTypeAttribute("PS.StageDetailPageCreationInformation")]
public class Microsoft.ProjectServer.Client.StageDetailPageCreationInformation : ClientValueObject {
    private string m_description;
    private Guid m_id;
    private int m_position;
    private bool m_requiresAttention;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public int Position { get; public set; }
    [RemoteAttribute]
public bool RequiresAttention { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public int get_Position();
    public void set_Position(int value);
    public bool get_RequiresAttention();
    public void set_RequiresAttention(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.StageDetailPageObjectPropertyNames : object {
    public static string Page;
    public static string Stage;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.StageDetailPagePropertyNames : object {
    public static string Description;
    public static string Id;
    public static string Position;
    public static string RequiresAttention;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.StageObjectPropertyNames : object {
    public static string CustomFields;
    public static string Phase;
    public static string ProjectDetailPages;
    public static string WorkflowStatusPage;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.StagePropertyNames : object {
    public static string Behavior;
    public static string CheckInRequired;
    public static string Description;
    public static string Id;
    public static string Name;
    public static string SubmitDescription;
}
public enum Microsoft.ProjectServer.Client.StandardRateFormat : Enum {
    public int value__;
    public static StandardRateFormat Minute;
    public static StandardRateFormat Hour;
    public static StandardRateFormat Day;
    public static StandardRateFormat Week;
    public static StandardRateFormat Month;
    public static StandardRateFormat Year;
    public static StandardRateFormat Material;
}
public enum Microsoft.ProjectServer.Client.StatusApprovalType : Enum {
    public int value__;
    public static StatusApprovalType None;
    public static StatusApprovalType Accepted;
    public static StatusApprovalType Rejected;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.StatusAssignment")]
public class Microsoft.ProjectServer.Client.StatusAssignment : ClientObject {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; public set; }
    [RemoteAttribute]
public DateTime ActualFinish { get; public set; }
    [RemoteAttribute]
public string ActualOvertime { get; public set; }
    [RemoteAttribute]
public TimeSpan ActualOvertimeTimeSpan { get; public set; }
    [RemoteAttribute]
public DateTime ActualStart { get; public set; }
    [RemoteAttribute]
public string ActualWork { get; public set; }
    [RemoteAttribute]
public TimeSpan ActualWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public StatusApprovalType ApprovalStatus { get; }
    [RemoteAttribute]
public string Comments { get; public set; }
    [RemoteAttribute]
public CustomFieldCollection CustomFields { get; }
    [RemoteAttribute]
public DateTime Finish { get; public set; }
    [RemoteAttribute]
public StatusAssignmentHistoryLineCollection History { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool IsConfirmed { get; public set; }
    [RemoteAttribute]
public DateTime Modified { get; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string Overtime { get; public set; }
    [RemoteAttribute]
public TimeSpan OvertimeTimeSpan { get; public set; }
    [RemoteAttribute]
public short PercentComplete { get; public set; }
    [RemoteAttribute]
public PublishedProject Project { get; }
    [RemoteAttribute]
public string RegularWork { get; public set; }
    [RemoteAttribute]
public TimeSpan RegularWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public string RemainingOvertime { get; public set; }
    [RemoteAttribute]
public TimeSpan RemainingOvertimeTimeSpan { get; public set; }
    [RemoteAttribute]
public string RemainingWork { get; public set; }
    [RemoteAttribute]
public TimeSpan RemainingWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public EnterpriseResource Resource { get; }
    [RemoteAttribute]
public DateTime Start { get; public set; }
    [RemoteAttribute]
public StatusTask Task { get; }
    [RemoteAttribute]
public string Work { get; public set; }
    [RemoteAttribute]
public TimeSpan WorkTimeSpan { get; public set; }
    [EditorBrowsableAttribute("1")]
public StatusAssignment(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    [RemoteAttribute]
public void set_Item(string fieldName, object value);
    public DateTime get_ActualFinish();
    public void set_ActualFinish(DateTime value);
    public string get_ActualOvertime();
    public void set_ActualOvertime(string value);
    public TimeSpan get_ActualOvertimeTimeSpan();
    public void set_ActualOvertimeTimeSpan(TimeSpan value);
    public DateTime get_ActualStart();
    public void set_ActualStart(DateTime value);
    public string get_ActualWork();
    public void set_ActualWork(string value);
    public TimeSpan get_ActualWorkTimeSpan();
    public void set_ActualWorkTimeSpan(TimeSpan value);
    public StatusApprovalType get_ApprovalStatus();
    public string get_Comments();
    public void set_Comments(string value);
    public CustomFieldCollection get_CustomFields();
    public DateTime get_Finish();
    public void set_Finish(DateTime value);
    public StatusAssignmentHistoryLineCollection get_History();
    public Guid get_Id();
    public bool get_IsConfirmed();
    public void set_IsConfirmed(bool value);
    public DateTime get_Modified();
    public string get_Name();
    public void set_Name(string value);
    public string get_Overtime();
    public void set_Overtime(string value);
    public TimeSpan get_OvertimeTimeSpan();
    public void set_OvertimeTimeSpan(TimeSpan value);
    public short get_PercentComplete();
    public void set_PercentComplete(short value);
    public PublishedProject get_Project();
    public string get_RegularWork();
    public void set_RegularWork(string value);
    public TimeSpan get_RegularWorkTimeSpan();
    public void set_RegularWorkTimeSpan(TimeSpan value);
    public string get_RemainingOvertime();
    public void set_RemainingOvertime(string value);
    public TimeSpan get_RemainingOvertimeTimeSpan();
    public void set_RemainingOvertimeTimeSpan(TimeSpan value);
    public string get_RemainingWork();
    public void set_RemainingWork(string value);
    public TimeSpan get_RemainingWorkTimeSpan();
    public void set_RemainingWorkTimeSpan(TimeSpan value);
    public EnterpriseResource get_Resource();
    public DateTime get_Start();
    public void set_Start(DateTime value);
    public StatusTask get_Task();
    public string get_Work();
    public void set_Work(string value);
    public TimeSpan get_WorkTimeSpan();
    public void set_WorkTimeSpan(TimeSpan value);
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
internal void SetCustomFieldValue(string fieldName, object value);
    [RemoteAttribute]
public void SubmitStatusUpdates(string comment);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.StatusAssignmentCollection")]
public class Microsoft.ProjectServer.Client.StatusAssignmentCollection : ClientObjectCollection`1<StatusAssignment> {
    [EditorBrowsableAttribute("1")]
public StatusAssignmentCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public TimePhase GetTimePhase(DateTime start, DateTime end);
    [RemoteAttribute]
public StatusAssignment GetById(string objectId);
    [RemoteAttribute]
public StatusAssignment GetByGuid(Guid uid);
    [RemoteAttribute]
public StatusAssignment Add(StatusAssignmentCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(StatusAssignment assignment);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public void SubmitAllStatusUpdates(string comment);
}
[ScriptTypeAttribute("PS.StatusAssignmentCreationInformation")]
public class Microsoft.ProjectServer.Client.StatusAssignmentCreationInformation : ClientValueObject {
    private string m_comment;
    private Guid m_id;
    private Guid m_projectId;
    private StatusTaskCreationInformation m_task;
    [RemoteAttribute]
public string Comment { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public Guid ProjectId { get; public set; }
    [RemoteAttribute]
public StatusTaskCreationInformation Task { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Comment();
    public void set_Comment(string value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public Guid get_ProjectId();
    public void set_ProjectId(Guid value);
    public StatusTaskCreationInformation get_Task();
    public void set_Task(StatusTaskCreationInformation value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.StatusAssignmentHistoryLine")]
public class Microsoft.ProjectServer.Client.StatusAssignmentHistoryLine : ClientObject {
    [RemoteAttribute]
public Guid ApproverId { get; }
    [RemoteAttribute]
public User Author { get; }
    [RemoteAttribute]
public string Comment { get; }
    [RemoteAttribute]
public StatusApprovalType Decision { get; }
    [RemoteAttribute]
public DateTime DecisionDate { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public Guid ReassignedResourceId { get; }
    [RemoteAttribute]
public DateTime ReassignmentDate { get; }
    [RemoteAttribute]
public int State { get; }
    [RemoteAttribute]
public DateTime Submitted { get; }
    [RemoteAttribute]
public Guid SubmitterId { get; }
    [RemoteAttribute]
public StatusUpdateType UpdateType { get; }
    [EditorBrowsableAttribute("1")]
public StatusAssignmentHistoryLine(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_ApproverId();
    public User get_Author();
    public string get_Comment();
    public StatusApprovalType get_Decision();
    public DateTime get_DecisionDate();
    public Guid get_Id();
    public Guid get_ReassignedResourceId();
    public DateTime get_ReassignmentDate();
    public int get_State();
    public DateTime get_Submitted();
    public Guid get_SubmitterId();
    public StatusUpdateType get_UpdateType();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.StatusAssignmentHistoryLineCollection")]
public class Microsoft.ProjectServer.Client.StatusAssignmentHistoryLineCollection : ClientObjectCollection`1<StatusAssignmentHistoryLine> {
    [EditorBrowsableAttribute("1")]
public StatusAssignmentHistoryLineCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public StatusAssignmentHistoryLine GetById(string objectId);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.StatusAssignmentHistoryLineObjectPropertyNames : object {
    public static string Author;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.StatusAssignmentHistoryLinePropertyNames : object {
    public static string ApproverId;
    public static string Comment;
    public static string Decision;
    public static string DecisionDate;
    public static string Id;
    public static string ReassignedResourceId;
    public static string ReassignmentDate;
    public static string State;
    public static string Submitted;
    public static string SubmitterId;
    public static string UpdateType;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.StatusAssignmentObjectPropertyNames : object {
    public static string CustomFields;
    public static string History;
    public static string Project;
    public static string Resource;
    public static string Task;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.StatusAssignmentPropertyNames : object {
    public static string ActualFinish;
    public static string ActualOvertime;
    public static string ActualOvertimeTimeSpan;
    public static string ActualStart;
    public static string ActualWork;
    public static string ActualWorkTimeSpan;
    public static string ApprovalStatus;
    public static string Comments;
    public static string Finish;
    public static string Id;
    public static string IsConfirmed;
    public static string Modified;
    public static string Name;
    public static string Overtime;
    public static string OvertimeTimeSpan;
    public static string PercentComplete;
    public static string RegularWork;
    public static string RegularWorkTimeSpan;
    public static string RemainingOvertime;
    public static string RemainingOvertimeTimeSpan;
    public static string RemainingWork;
    public static string RemainingWorkTimeSpan;
    public static string Start;
    public static string Work;
    public static string WorkTimeSpan;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("PS.StatusTask")]
public class Microsoft.ProjectServer.Client.StatusTask : ClientObject {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; }
    [RemoteAttribute]
public string ActualWork { get; public set; }
    [RemoteAttribute]
public TimeSpan ActualWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public CustomFieldCollection CustomFields { get; }
    [RemoteAttribute]
public DateTime Deadline { get; public set; }
    [RemoteAttribute]
public string Duration { get; public set; }
    [RemoteAttribute]
public TimeSpan DurationTimeSpan { get; public set; }
    [RemoteAttribute]
public DateTime Finish { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string Overtime { get; public set; }
    [RemoteAttribute]
public TimeSpan OvertimeTimeSpan { get; public set; }
    [RemoteAttribute]
public short PercentComplete { get; public set; }
    [RemoteAttribute]
public short PercentWorkComplete { get; public set; }
    [RemoteAttribute]
public short PhysicalPercentComplete { get; public set; }
    [RemoteAttribute]
public Guid ProjectTaskId { get; }
    [RemoteAttribute]
public string RegularWork { get; public set; }
    [RemoteAttribute]
public TimeSpan RegularWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public string RemainingDuration { get; public set; }
    [RemoteAttribute]
public TimeSpan RemainingDurationTimeSpan { get; public set; }
    [RemoteAttribute]
public string RemainingOvertime { get; public set; }
    [RemoteAttribute]
public TimeSpan RemainingOvertimeTimeSpan { get; public set; }
    [RemoteAttribute]
public string RemainingWork { get; public set; }
    [RemoteAttribute]
public TimeSpan RemainingWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public DateTime Resume { get; public set; }
    [RemoteAttribute]
public DateTime Start { get; public set; }
    [RemoteAttribute]
public User StatusManager { get; }
    [RemoteAttribute]
public string Work { get; public set; }
    [RemoteAttribute]
public TimeSpan WorkTimeSpan { get; public set; }
    [EditorBrowsableAttribute("1")]
public StatusTask(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    public string get_ActualWork();
    public void set_ActualWork(string value);
    public TimeSpan get_ActualWorkTimeSpan();
    public void set_ActualWorkTimeSpan(TimeSpan value);
    public CustomFieldCollection get_CustomFields();
    public DateTime get_Deadline();
    public void set_Deadline(DateTime value);
    public string get_Duration();
    public void set_Duration(string value);
    public TimeSpan get_DurationTimeSpan();
    public void set_DurationTimeSpan(TimeSpan value);
    public DateTime get_Finish();
    public void set_Finish(DateTime value);
    public Guid get_Id();
    public string get_Name();
    public void set_Name(string value);
    public string get_Overtime();
    public void set_Overtime(string value);
    public TimeSpan get_OvertimeTimeSpan();
    public void set_OvertimeTimeSpan(TimeSpan value);
    public short get_PercentComplete();
    public void set_PercentComplete(short value);
    public short get_PercentWorkComplete();
    public void set_PercentWorkComplete(short value);
    public short get_PhysicalPercentComplete();
    public void set_PhysicalPercentComplete(short value);
    public Guid get_ProjectTaskId();
    public string get_RegularWork();
    public void set_RegularWork(string value);
    public TimeSpan get_RegularWorkTimeSpan();
    public void set_RegularWorkTimeSpan(TimeSpan value);
    public string get_RemainingDuration();
    public void set_RemainingDuration(string value);
    public TimeSpan get_RemainingDurationTimeSpan();
    public void set_RemainingDurationTimeSpan(TimeSpan value);
    public string get_RemainingOvertime();
    public void set_RemainingOvertime(string value);
    public TimeSpan get_RemainingOvertimeTimeSpan();
    public void set_RemainingOvertimeTimeSpan(TimeSpan value);
    public string get_RemainingWork();
    public void set_RemainingWork(string value);
    public TimeSpan get_RemainingWorkTimeSpan();
    public void set_RemainingWorkTimeSpan(TimeSpan value);
    public DateTime get_Resume();
    public void set_Resume(DateTime value);
    public DateTime get_Start();
    public void set_Start(DateTime value);
    public User get_StatusManager();
    public string get_Work();
    public void set_Work(string value);
    public TimeSpan get_WorkTimeSpan();
    public void set_WorkTimeSpan(TimeSpan value);
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
}
[ScriptTypeAttribute("PS.StatusTaskCreationInformation")]
public class Microsoft.ProjectServer.Client.StatusTaskCreationInformation : ClientValueObject {
    private DateTime m_finish;
    private Guid m_id;
    private string m_name;
    private Guid m_parentId;
    private DateTime m_start;
    private string m_work;
    [RemoteAttribute]
public DateTime Finish { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public Guid ParentId { get; public set; }
    [RemoteAttribute]
public DateTime Start { get; public set; }
    [RemoteAttribute]
public string Work { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_Finish();
    public void set_Finish(DateTime value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_Name();
    public void set_Name(string value);
    public Guid get_ParentId();
    public void set_ParentId(Guid value);
    public DateTime get_Start();
    public void set_Start(DateTime value);
    public string get_Work();
    public void set_Work(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.StatusTaskObjectPropertyNames : object {
    public static string CustomFields;
    public static string StatusManager;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.StatusTaskPropertyNames : object {
    public static string ActualWork;
    public static string ActualWorkTimeSpan;
    public static string Deadline;
    public static string Duration;
    public static string DurationTimeSpan;
    public static string Finish;
    public static string Id;
    public static string Name;
    public static string Overtime;
    public static string OvertimeTimeSpan;
    public static string PercentComplete;
    public static string PercentWorkComplete;
    public static string PhysicalPercentComplete;
    public static string ProjectTaskId;
    public static string RegularWork;
    public static string RegularWorkTimeSpan;
    public static string RemainingDuration;
    public static string RemainingDurationTimeSpan;
    public static string RemainingOvertime;
    public static string RemainingOvertimeTimeSpan;
    public static string RemainingWork;
    public static string RemainingWorkTimeSpan;
    public static string Resume;
    public static string Start;
    public static string Work;
    public static string WorkTimeSpan;
}
public enum Microsoft.ProjectServer.Client.StatusTransactionState : Enum {
    public int value__;
    public static StatusTransactionState Saved;
    public static StatusTransactionState Submitted;
    public static StatusTransactionState InProcess;
    public static StatusTransactionState ApplySuccessful;
    public static StatusTransactionState ApplyFailed;
}
public enum Microsoft.ProjectServer.Client.StatusUpdateType : Enum {
    public int value__;
    public static StatusUpdateType Update;
    public static StatusUpdateType Decline;
    public static StatusUpdateType CreateTask;
    public static StatusUpdateType Delegate;
    public static StatusUpdateType CreateAssignment;
    public static StatusUpdateType TeamDelegate;
    public static StatusUpdateType DeleteTask;
    public static StatusUpdateType DeleteAssignment;
}
public enum Microsoft.ProjectServer.Client.StrategicImpactBehavior : Enum {
    public int value__;
    public static StrategicImpactBehavior NotSpecified;
    public static StrategicImpactBehavior ReadOnly;
    public static StrategicImpactBehavior ReadWrite;
    public static StrategicImpactBehavior Required;
}
[ScriptTypeAttribute("PS.Task")]
public class Microsoft.ProjectServer.Client.Task : ClientObject {
    [RemoteAttribute]
public double ActualCostWorkPerformed { get; }
    [RemoteAttribute]
public string ActualDuration { get; }
    [RemoteAttribute]
public TimeSpan ActualDurationTimeSpan { get; }
    [RemoteAttribute]
public double ActualOvertimeCost { get; }
    [RemoteAttribute]
public string ActualOvertimeWork { get; }
    [RemoteAttribute]
public TimeSpan ActualOvertimeWorkTimeSpan { get; }
    [RemoteAttribute]
public double BaselineCost { get; }
    [RemoteAttribute]
public string BaselineDuration { get; }
    [RemoteAttribute]
public TimeSpan BaselineDurationTimeSpan { get; }
    [RemoteAttribute]
public DateTime BaselineFinish { get; }
    [RemoteAttribute]
public DateTime BaselineStart { get; }
    [RemoteAttribute]
public string BaselineWork { get; }
    [RemoteAttribute]
public TimeSpan BaselineWorkTimeSpan { get; }
    [RemoteAttribute]
public double BudgetCost { get; }
    [RemoteAttribute]
public double BudgetedCostWorkPerformed { get; }
    [RemoteAttribute]
public double BudgetedCostWorkScheduled { get; }
    [RemoteAttribute]
public string Contact { get; }
    [RemoteAttribute]
public double CostPerformanceIndex { get; }
    [RemoteAttribute]
public double CostVariance { get; }
    [RemoteAttribute]
public double CostVarianceAtCompletion { get; }
    [RemoteAttribute]
public int CostVariancePercentage { get; }
    [RemoteAttribute]
public DateTime Created { get; }
    [RemoteAttribute]
public double CurrentCostVariance { get; }
    [RemoteAttribute]
public CustomFieldCollection CustomFields { get; }
    [RemoteAttribute]
public string DurationVariance { get; }
    [RemoteAttribute]
public TimeSpan DurationVarianceTimeSpan { get; }
    [RemoteAttribute]
public DateTime EarliestFinish { get; }
    [RemoteAttribute]
public DateTime EarliestStart { get; }
    [RemoteAttribute]
public double EstimateAtCompletion { get; }
    [RemoteAttribute]
public Guid ExternalProjectUid { get; }
    [RemoteAttribute]
public Guid ExternalTaskUid { get; }
    [RemoteAttribute]
public string FinishSlack { get; }
    [RemoteAttribute]
public TimeSpan FinishSlackTimeSpan { get; }
    [RemoteAttribute]
public string FinishVariance { get; }
    [RemoteAttribute]
public TimeSpan FinishVarianceTimeSpan { get; }
    [RemoteAttribute]
public FixedCostAccrual FixedCostAccrual { get; }
    [RemoteAttribute]
public string FreeSlack { get; }
    [RemoteAttribute]
public TimeSpan FreeSlackTimeSpan { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool IgnoreResourceCalendar { get; }
    [RemoteAttribute]
public bool IsCritical { get; }
    [RemoteAttribute]
public bool IsDurationEstimate { get; }
    [RemoteAttribute]
public bool IsExternalTask { get; }
    [RemoteAttribute]
public bool IsOverAllocated { get; }
    [RemoteAttribute]
public bool IsRecurring { get; }
    [RemoteAttribute]
public bool IsRecurringSummary { get; }
    [RemoteAttribute]
public bool IsRolledUp { get; }
    [RemoteAttribute]
public bool IsSubProject { get; }
    [RemoteAttribute]
public bool IsSubProjectReadOnly { get; }
    [RemoteAttribute]
public bool IsSubProjectScheduledFromFinish { get; }
    [RemoteAttribute]
public bool IsSummary { get; }
    [RemoteAttribute]
public DateTime LatestFinish { get; }
    [RemoteAttribute]
public DateTime LatestStart { get; }
    [RemoteAttribute]
public string LevelingDelay { get; }
    [RemoteAttribute]
public TimeSpan LevelingDelayTimeSpan { get; }
    [RemoteAttribute]
public DateTime Modified { get; }
    [RemoteAttribute]
public string Notes { get; }
    [RemoteAttribute]
public string OutlinePosition { get; }
    [RemoteAttribute]
public double OvertimeCost { get; }
    [RemoteAttribute]
public string OvertimeWork { get; }
    [RemoteAttribute]
public TimeSpan OvertimeWorkTimeSpan { get; }
    [RemoteAttribute]
public int PercentWorkComplete { get; }
    [RemoteAttribute]
public DateTime PreLevelingFinish { get; }
    [RemoteAttribute]
public DateTime PreLevelingStart { get; }
    [RemoteAttribute]
public string RegularWork { get; }
    [RemoteAttribute]
public TimeSpan RegularWorkTimeSpan { get; }
    [RemoteAttribute]
public double RemainingCost { get; }
    [RemoteAttribute]
public double RemainingOvertimeCost { get; }
    [RemoteAttribute]
public string RemainingOvertimeWork { get; }
    [RemoteAttribute]
public TimeSpan RemainingOvertimeWorkTimeSpan { get; }
    [RemoteAttribute]
public string RemainingWork { get; }
    [RemoteAttribute]
public TimeSpan RemainingWorkTimeSpan { get; }
    [RemoteAttribute]
public DateTime Resume { get; }
    [RemoteAttribute]
public double ScheduleCostVariance { get; }
    [RemoteAttribute]
public string ScheduledDuration { get; }
    [RemoteAttribute]
public TimeSpan ScheduledDurationTimeSpan { get; }
    [RemoteAttribute]
public DateTime ScheduledFinish { get; }
    [RemoteAttribute]
public DateTime ScheduledStart { get; }
    [RemoteAttribute]
public double SchedulePerformanceIndex { get; }
    [RemoteAttribute]
public int ScheduleVariancePercentage { get; }
    [RemoteAttribute]
public string StartSlack { get; }
    [RemoteAttribute]
public TimeSpan StartSlackTimeSpan { get; }
    [RemoteAttribute]
public string StartVariance { get; }
    [RemoteAttribute]
public TimeSpan StartVarianceTimeSpan { get; }
    [RemoteAttribute]
public DateTime Stop { get; }
    [RemoteAttribute]
public PublishedProject SubProject { get; }
    [RemoteAttribute]
public double ToCompletePerformanceIndex { get; }
    [RemoteAttribute]
public string TotalSlack { get; }
    [RemoteAttribute]
public TimeSpan TotalSlackTimeSpan { get; }
    [RemoteAttribute]
public string WorkBreakdownStructure { get; }
    [RemoteAttribute]
public string WorkVariance { get; }
    [RemoteAttribute]
public TimeSpan WorkVarianceTimeSpan { get; }
    [EditorBrowsableAttribute("1")]
public Task(ClientRuntimeContext context, ObjectPath objectPath);
    public double get_ActualCostWorkPerformed();
    public string get_ActualDuration();
    public TimeSpan get_ActualDurationTimeSpan();
    public double get_ActualOvertimeCost();
    public string get_ActualOvertimeWork();
    public TimeSpan get_ActualOvertimeWorkTimeSpan();
    public double get_BaselineCost();
    public string get_BaselineDuration();
    public TimeSpan get_BaselineDurationTimeSpan();
    public DateTime get_BaselineFinish();
    public DateTime get_BaselineStart();
    public string get_BaselineWork();
    public TimeSpan get_BaselineWorkTimeSpan();
    public double get_BudgetCost();
    public double get_BudgetedCostWorkPerformed();
    public double get_BudgetedCostWorkScheduled();
    public string get_Contact();
    public double get_CostPerformanceIndex();
    public double get_CostVariance();
    public double get_CostVarianceAtCompletion();
    public int get_CostVariancePercentage();
    public DateTime get_Created();
    public double get_CurrentCostVariance();
    public CustomFieldCollection get_CustomFields();
    public string get_DurationVariance();
    public TimeSpan get_DurationVarianceTimeSpan();
    public DateTime get_EarliestFinish();
    public DateTime get_EarliestStart();
    public double get_EstimateAtCompletion();
    public Guid get_ExternalProjectUid();
    public Guid get_ExternalTaskUid();
    public string get_FinishSlack();
    public TimeSpan get_FinishSlackTimeSpan();
    public string get_FinishVariance();
    public TimeSpan get_FinishVarianceTimeSpan();
    public FixedCostAccrual get_FixedCostAccrual();
    public string get_FreeSlack();
    public TimeSpan get_FreeSlackTimeSpan();
    public Guid get_Id();
    public bool get_IgnoreResourceCalendar();
    public bool get_IsCritical();
    public bool get_IsDurationEstimate();
    public bool get_IsExternalTask();
    public bool get_IsOverAllocated();
    public bool get_IsRecurring();
    public bool get_IsRecurringSummary();
    public bool get_IsRolledUp();
    public bool get_IsSubProject();
    public bool get_IsSubProjectReadOnly();
    public bool get_IsSubProjectScheduledFromFinish();
    public bool get_IsSummary();
    public DateTime get_LatestFinish();
    public DateTime get_LatestStart();
    public string get_LevelingDelay();
    public TimeSpan get_LevelingDelayTimeSpan();
    public DateTime get_Modified();
    public string get_Notes();
    public string get_OutlinePosition();
    public double get_OvertimeCost();
    public string get_OvertimeWork();
    public TimeSpan get_OvertimeWorkTimeSpan();
    public int get_PercentWorkComplete();
    public DateTime get_PreLevelingFinish();
    public DateTime get_PreLevelingStart();
    public string get_RegularWork();
    public TimeSpan get_RegularWorkTimeSpan();
    public double get_RemainingCost();
    public double get_RemainingOvertimeCost();
    public string get_RemainingOvertimeWork();
    public TimeSpan get_RemainingOvertimeWorkTimeSpan();
    public string get_RemainingWork();
    public TimeSpan get_RemainingWorkTimeSpan();
    public DateTime get_Resume();
    public double get_ScheduleCostVariance();
    public string get_ScheduledDuration();
    public TimeSpan get_ScheduledDurationTimeSpan();
    public DateTime get_ScheduledFinish();
    public DateTime get_ScheduledStart();
    public double get_SchedulePerformanceIndex();
    public int get_ScheduleVariancePercentage();
    public string get_StartSlack();
    public TimeSpan get_StartSlackTimeSpan();
    public string get_StartVariance();
    public TimeSpan get_StartVarianceTimeSpan();
    public DateTime get_Stop();
    public PublishedProject get_SubProject();
    public double get_ToCompletePerformanceIndex();
    public string get_TotalSlack();
    public TimeSpan get_TotalSlackTimeSpan();
    public string get_WorkBreakdownStructure();
    public string get_WorkVariance();
    public TimeSpan get_WorkVarianceTimeSpan();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.TaskCreationInformation")]
public class Microsoft.ProjectServer.Client.TaskCreationInformation : ClientValueObject {
    private Guid m_addAfterId;
    private string m_duration;
    private DateTime m_finish;
    private Guid m_id;
    private bool m_isManual;
    private string m_name;
    private string m_notes;
    private Guid m_parentId;
    private DateTime m_start;
    private User m_statusManager;
    [RemoteAttribute]
public Guid AddAfterId { get; public set; }
    [RemoteAttribute]
public string Duration { get; public set; }
    [RemoteAttribute]
public DateTime Finish { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public bool IsManual { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string Notes { get; public set; }
    [RemoteAttribute]
public Guid ParentId { get; public set; }
    [RemoteAttribute]
public DateTime Start { get; public set; }
    [RemoteAttribute]
public User StatusManager { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_AddAfterId();
    public void set_AddAfterId(Guid value);
    public string get_Duration();
    public void set_Duration(string value);
    public DateTime get_Finish();
    public void set_Finish(DateTime value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public bool get_IsManual();
    public void set_IsManual(bool value);
    public string get_Name();
    public void set_Name(string value);
    public string get_Notes();
    public void set_Notes(string value);
    public Guid get_ParentId();
    public void set_ParentId(Guid value);
    public DateTime get_Start();
    public void set_Start(DateTime value);
    public User get_StatusManager();
    public void set_StatusManager(User value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.TaskLink")]
public class Microsoft.ProjectServer.Client.TaskLink : ClientObject {
    [RemoteAttribute]
public Guid Id { get; }
    [EditorBrowsableAttribute("1")]
public TaskLink(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_Id();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.TaskLinkCreationInformation")]
public class Microsoft.ProjectServer.Client.TaskLinkCreationInformation : ClientValueObject {
    private DependencyType m_dependencyType;
    private Guid m_endId;
    private Guid m_id;
    private string m_linkLagDuration;
    private Guid m_startId;
    [RemoteAttribute]
public DependencyType DependencyType { get; public set; }
    [RemoteAttribute]
public Guid EndId { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string LinkLagDuration { get; public set; }
    [RemoteAttribute]
public Guid StartId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DependencyType get_DependencyType();
    public void set_DependencyType(DependencyType value);
    public Guid get_EndId();
    public void set_EndId(Guid value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_LinkLagDuration();
    public void set_LinkLagDuration(string value);
    public Guid get_StartId();
    public void set_StartId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.TaskLinkPropertyNames : object {
    public static string Id;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.TaskObjectPropertyNames : object {
    public static string CustomFields;
    public static string SubProject;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.TaskPropertyNames : object {
    public static string ActualCostWorkPerformed;
    public static string ActualDuration;
    public static string ActualDurationTimeSpan;
    public static string ActualOvertimeCost;
    public static string ActualOvertimeWork;
    public static string ActualOvertimeWorkTimeSpan;
    public static string BaselineCost;
    public static string BaselineDuration;
    public static string BaselineDurationTimeSpan;
    public static string BaselineFinish;
    public static string BaselineStart;
    public static string BaselineWork;
    public static string BaselineWorkTimeSpan;
    public static string BudgetCost;
    public static string BudgetedCostWorkPerformed;
    public static string BudgetedCostWorkScheduled;
    public static string Contact;
    public static string CostPerformanceIndex;
    public static string CostVariance;
    public static string CostVarianceAtCompletion;
    public static string CostVariancePercentage;
    public static string Created;
    public static string CurrentCostVariance;
    public static string DurationVariance;
    public static string DurationVarianceTimeSpan;
    public static string EarliestFinish;
    public static string EarliestStart;
    public static string EstimateAtCompletion;
    public static string ExternalProjectUid;
    public static string ExternalTaskUid;
    public static string FinishSlack;
    public static string FinishSlackTimeSpan;
    public static string FinishVariance;
    public static string FinishVarianceTimeSpan;
    public static string FixedCostAccrual;
    public static string FreeSlack;
    public static string FreeSlackTimeSpan;
    public static string Id;
    public static string IgnoreResourceCalendar;
    public static string IsCritical;
    public static string IsDurationEstimate;
    public static string IsExternalTask;
    public static string IsOverAllocated;
    public static string IsRecurring;
    public static string IsRecurringSummary;
    public static string IsRolledUp;
    public static string IsSubProject;
    public static string IsSubProjectReadOnly;
    public static string IsSubProjectScheduledFromFinish;
    public static string IsSummary;
    public static string LatestFinish;
    public static string LatestStart;
    public static string LevelingDelay;
    public static string LevelingDelayTimeSpan;
    public static string Modified;
    public static string Notes;
    public static string OutlinePosition;
    public static string OvertimeCost;
    public static string OvertimeWork;
    public static string OvertimeWorkTimeSpan;
    public static string PercentWorkComplete;
    public static string PreLevelingFinish;
    public static string PreLevelingStart;
    public static string RegularWork;
    public static string RegularWorkTimeSpan;
    public static string RemainingCost;
    public static string RemainingOvertimeCost;
    public static string RemainingOvertimeWork;
    public static string RemainingOvertimeWorkTimeSpan;
    public static string RemainingWork;
    public static string RemainingWorkTimeSpan;
    public static string Resume;
    public static string ScheduleCostVariance;
    public static string ScheduledDuration;
    public static string ScheduledDurationTimeSpan;
    public static string ScheduledFinish;
    public static string ScheduledStart;
    public static string SchedulePerformanceIndex;
    public static string ScheduleVariancePercentage;
    public static string StartSlack;
    public static string StartSlackTimeSpan;
    public static string StartVariance;
    public static string StartVarianceTimeSpan;
    public static string Stop;
    public static string ToCompletePerformanceIndex;
    public static string TotalSlack;
    public static string TotalSlackTimeSpan;
    public static string WorkBreakdownStructure;
    public static string WorkVariance;
    public static string WorkVarianceTimeSpan;
}
public enum Microsoft.ProjectServer.Client.TaskType : Enum {
    public int value__;
    public static TaskType FixedUnits;
    public static TaskType FixedDuration;
    public static TaskType FixedWork;
    public static TaskType Dummy;
}
[ScriptTypeAttribute("PS.TimePhase")]
public class Microsoft.ProjectServer.Client.TimePhase : ClientObject {
    [RemoteAttribute]
public StatusAssignmentCollection Assignments { get; }
    [RemoteAttribute]
public DateTime End { get; }
    [RemoteAttribute]
public DateTime Start { get; }
    [EditorBrowsableAttribute("1")]
public TimePhase(ClientRuntimeContext context, ObjectPath objectPath);
    public StatusAssignmentCollection get_Assignments();
    public DateTime get_End();
    public DateTime get_Start();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.TimePhaseObjectPropertyNames : object {
    public static string Assignments;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.TimePhasePropertyNames : object {
    public static string End;
    public static string Start;
}
public enum Microsoft.ProjectServer.Client.TimeScale : Enum {
    public short value__;
    public static TimeScale Days;
    public static TimeScale Weeks;
    public static TimeScale Months;
    public static TimeScale Quarters;
    public static TimeScale Years;
}
[ScriptTypeAttribute("PS.TimeSheet")]
public class Microsoft.ProjectServer.Client.TimeSheet : ClientObject {
    [RemoteAttribute]
public string Comments { get; }
    [RemoteAttribute]
public User Creator { get; }
    [RemoteAttribute]
public TimeSheetEntryMode EntryMode { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool IsControlledByOwner { get; public set; }
    [RemoteAttribute]
public bool IsProcessed { get; public set; }
    [RemoteAttribute]
public TimeSheetLineCollection Lines { get; }
    [RemoteAttribute]
public User Manager { get; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public TimeSheetPeriod Period { get; }
    [RemoteAttribute]
public TimeSheetStatus Status { get; public set; }
    [RemoteAttribute]
public string TotalActualWork { get; public set; }
    [RemoteAttribute]
public TimeSpan TotalActualWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public string TotalNonBillableOvertimeWork { get; public set; }
    [RemoteAttribute]
public TimeSpan TotalNonBillableOvertimeWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public string TotalNonBillableWork { get; public set; }
    [RemoteAttribute]
public TimeSpan TotalNonBillableWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public string TotalOvertimeWork { get; public set; }
    [RemoteAttribute]
public TimeSpan TotalOvertimeWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public string TotalWork { get; public set; }
    [RemoteAttribute]
public TimeSpan TotalWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public byte WeekStartsOn { get; public set; }
    [EditorBrowsableAttribute("1")]
public TimeSheet(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Comments();
    public User get_Creator();
    public TimeSheetEntryMode get_EntryMode();
    public void set_EntryMode(TimeSheetEntryMode value);
    public Guid get_Id();
    public bool get_IsControlledByOwner();
    public void set_IsControlledByOwner(bool value);
    public bool get_IsProcessed();
    public void set_IsProcessed(bool value);
    public TimeSheetLineCollection get_Lines();
    public User get_Manager();
    public string get_Name();
    public void set_Name(string value);
    public TimeSheetPeriod get_Period();
    public TimeSheetStatus get_Status();
    public void set_Status(TimeSheetStatus value);
    public string get_TotalActualWork();
    public void set_TotalActualWork(string value);
    public TimeSpan get_TotalActualWorkTimeSpan();
    public void set_TotalActualWorkTimeSpan(TimeSpan value);
    public string get_TotalNonBillableOvertimeWork();
    public void set_TotalNonBillableOvertimeWork(string value);
    public TimeSpan get_TotalNonBillableOvertimeWorkTimeSpan();
    public void set_TotalNonBillableOvertimeWorkTimeSpan(TimeSpan value);
    public string get_TotalNonBillableWork();
    public void set_TotalNonBillableWork(string value);
    public TimeSpan get_TotalNonBillableWorkTimeSpan();
    public void set_TotalNonBillableWorkTimeSpan(TimeSpan value);
    public string get_TotalOvertimeWork();
    public void set_TotalOvertimeWork(string value);
    public TimeSpan get_TotalOvertimeWorkTimeSpan();
    public void set_TotalOvertimeWorkTimeSpan(TimeSpan value);
    public string get_TotalWork();
    public void set_TotalWork(string value);
    public TimeSpan get_TotalWorkTimeSpan();
    public void set_TotalWorkTimeSpan(TimeSpan value);
    public byte get_WeekStartsOn();
    public void set_WeekStartsOn(byte value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public void Submit(string comment);
    [RemoteAttribute]
public void Recall();
}
public enum Microsoft.ProjectServer.Client.TimeSheetEntryMode : Enum {
    public int value__;
    public static TimeSheetEntryMode NotSpecified;
    public static TimeSheetEntryMode Daily;
    public static TimeSheetEntryMode Weekly;
}
[ScriptTypeAttribute("PS.TimeSheetLine")]
public class Microsoft.ProjectServer.Client.TimeSheetLine : ClientObject {
    [RemoteAttribute]
public PublishedAssignment Assignment { get; }
    [RemoteAttribute]
public string Comment { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public TimeSheetLineClass LineClass { get; public set; }
    [RemoteAttribute]
public string ProjectName { get; }
    [RemoteAttribute]
public TimeSheetLineStatus Status { get; public set; }
    [RemoteAttribute]
public string TaskName { get; }
    [RemoteAttribute]
public TimeSheet TimeSheet { get; }
    [RemoteAttribute]
public string TotalWork { get; }
    [RemoteAttribute]
public TimeSpan TotalWorkTimeSpan { get; }
    [RemoteAttribute]
public TimeSheetValidationType ValidationType { get; }
    [RemoteAttribute]
public TimeSheetWorkCollection Work { get; }
    [EditorBrowsableAttribute("1")]
public TimeSheetLine(ClientRuntimeContext context, ObjectPath objectPath);
    public PublishedAssignment get_Assignment();
    public string get_Comment();
    public void set_Comment(string value);
    public Guid get_Id();
    public TimeSheetLineClass get_LineClass();
    public void set_LineClass(TimeSheetLineClass value);
    public string get_ProjectName();
    public TimeSheetLineStatus get_Status();
    public void set_Status(TimeSheetLineStatus value);
    public string get_TaskName();
    public TimeSheet get_TimeSheet();
    public string get_TotalWork();
    public TimeSpan get_TotalWorkTimeSpan();
    public TimeSheetValidationType get_ValidationType();
    public TimeSheetWorkCollection get_Work();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public void Submit(string comment);
}
public enum Microsoft.ProjectServer.Client.TimeSheetLineClass : Enum {
    public int value__;
    public static TimeSheetLineClass StandardLine;
    public static TimeSheetLineClass SickTimeLine;
    public static TimeSheetLineClass VacationLine;
    public static TimeSheetLineClass AdministrativeLine;
}
[ScriptTypeAttribute("PS.TimeSheetLineCollection")]
public class Microsoft.ProjectServer.Client.TimeSheetLineCollection : ClientObjectCollection`1<TimeSheetLine> {
    [EditorBrowsableAttribute("1")]
public TimeSheetLineCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public TimeSheetLine GetById(string objectId);
    [RemoteAttribute]
public TimeSheetLine GetByGuid(Guid uid);
    [RemoteAttribute]
public TimeSheetLine Add(TimeSheetLineCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(TimeSheetLine line);
}
[ScriptTypeAttribute("PS.TimeSheetLineCreationInformation")]
public class Microsoft.ProjectServer.Client.TimeSheetLineCreationInformation : ClientValueObject {
    private Guid m_assignmentId;
    private string m_comment;
    private Guid m_id;
    private TimeSheetLineClass m_lineClass;
    private Guid m_projectId;
    private string m_taskName;
    [RemoteAttribute]
public Guid AssignmentId { get; public set; }
    [RemoteAttribute]
public string Comment { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public TimeSheetLineClass LineClass { get; public set; }
    [RemoteAttribute]
public Guid ProjectId { get; public set; }
    [RemoteAttribute]
public string TaskName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_AssignmentId();
    public void set_AssignmentId(Guid value);
    public string get_Comment();
    public void set_Comment(string value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public TimeSheetLineClass get_LineClass();
    public void set_LineClass(TimeSheetLineClass value);
    public Guid get_ProjectId();
    public void set_ProjectId(Guid value);
    public string get_TaskName();
    public void set_TaskName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.TimeSheetLineObjectPropertyNames : object {
    public static string Assignment;
    public static string TimeSheet;
    public static string Work;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.TimeSheetLinePropertyNames : object {
    public static string Comment;
    public static string Id;
    public static string LineClass;
    public static string ProjectName;
    public static string Status;
    public static string TaskName;
    public static string TotalWork;
    public static string TotalWorkTimeSpan;
    public static string ValidationType;
}
public enum Microsoft.ProjectServer.Client.TimeSheetLineStatus : Enum {
    public int value__;
    public static TimeSheetLineStatus NotSpecified;
    public static TimeSheetLineStatus Pending;
    public static TimeSheetLineStatus Approved;
    public static TimeSheetLineStatus Rejected;
    public static TimeSheetLineStatus NotApplicable;
    public static TimeSheetLineStatus PendingApproval;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.TimeSheetObjectPropertyNames : object {
    public static string Creator;
    public static string Lines;
    public static string Manager;
    public static string Period;
}
[ScriptTypeAttribute("PS.TimeSheetPeriod")]
public class Microsoft.ProjectServer.Client.TimeSheetPeriod : ClientObject {
    [RemoteAttribute]
public DateTime End { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public DateTime Start { get; }
    [RemoteAttribute]
public TimeSheet TimeSheet { get; }
    [EditorBrowsableAttribute("1")]
public TimeSheetPeriod(ClientRuntimeContext context, ObjectPath objectPath);
    public DateTime get_End();
    public Guid get_Id();
    public string get_Name();
    public DateTime get_Start();
    public TimeSheet get_TimeSheet();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public TimeSheet CreateTimeSheet();
}
[ScriptTypeAttribute("PS.TimeSheetPeriodCollection")]
public class Microsoft.ProjectServer.Client.TimeSheetPeriodCollection : ClientObjectCollection`1<TimeSheetPeriod> {
    [EditorBrowsableAttribute("1")]
public TimeSheetPeriodCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public TimeSheetPeriod GetById(string objectId);
    [RemoteAttribute]
public TimeSheetPeriod GetByGuid(Guid uid);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.TimeSheetPeriodObjectPropertyNames : object {
    public static string TimeSheet;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.TimeSheetPeriodPropertyNames : object {
    public static string End;
    public static string Id;
    public static string Name;
    public static string Start;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.TimeSheetPropertyNames : object {
    public static string Comments;
    public static string EntryMode;
    public static string Id;
    public static string IsControlledByOwner;
    public static string IsProcessed;
    public static string Name;
    public static string Status;
    public static string TotalActualWork;
    public static string TotalActualWorkTimeSpan;
    public static string TotalNonBillableOvertimeWork;
    public static string TotalNonBillableOvertimeWorkTimeSpan;
    public static string TotalNonBillableWork;
    public static string TotalNonBillableWorkTimeSpan;
    public static string TotalOvertimeWork;
    public static string TotalOvertimeWorkTimeSpan;
    public static string TotalWork;
    public static string TotalWorkTimeSpan;
    public static string WeekStartsOn;
}
public enum Microsoft.ProjectServer.Client.TimeSheetStatus : Enum {
    public int value__;
    public static TimeSheetStatus NotSpecified;
    public static TimeSheetStatus InProgress;
    public static TimeSheetStatus Submitted;
    public static TimeSheetStatus Acceptable;
    public static TimeSheetStatus Approved;
    public static TimeSheetStatus Rejected;
    public static TimeSheetStatus PendingSubmit;
}
public enum Microsoft.ProjectServer.Client.TimeSheetValidationType : Enum {
    public int value__;
    public static TimeSheetValidationType Unverified;
    public static TimeSheetValidationType Verified;
    public static TimeSheetValidationType ProjectLevel;
}
[ScriptTypeAttribute("PS.TimeSheetWork")]
public class Microsoft.ProjectServer.Client.TimeSheetWork : ClientObject {
    [RemoteAttribute]
public string ActualWork { get; public set; }
    [RemoteAttribute]
public TimeSpan ActualWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public string Comment { get; public set; }
    [RemoteAttribute]
public DateTime End { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string NonBillableOvertimeWork { get; public set; }
    [RemoteAttribute]
public TimeSpan NonBillableOvertimeWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public string NonBillableWork { get; public set; }
    [RemoteAttribute]
public TimeSpan NonBillableWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public string OvertimeWork { get; public set; }
    [RemoteAttribute]
public TimeSpan OvertimeWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public string PlannedWork { get; public set; }
    [RemoteAttribute]
public TimeSpan PlannedWorkTimeSpan { get; public set; }
    [RemoteAttribute]
public DateTime Start { get; public set; }
    [EditorBrowsableAttribute("1")]
public TimeSheetWork(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_ActualWork();
    public void set_ActualWork(string value);
    public TimeSpan get_ActualWorkTimeSpan();
    public void set_ActualWorkTimeSpan(TimeSpan value);
    public string get_Comment();
    public void set_Comment(string value);
    public DateTime get_End();
    public void set_End(DateTime value);
    public Guid get_Id();
    public string get_NonBillableOvertimeWork();
    public void set_NonBillableOvertimeWork(string value);
    public TimeSpan get_NonBillableOvertimeWorkTimeSpan();
    public void set_NonBillableOvertimeWorkTimeSpan(TimeSpan value);
    public string get_NonBillableWork();
    public void set_NonBillableWork(string value);
    public TimeSpan get_NonBillableWorkTimeSpan();
    public void set_NonBillableWorkTimeSpan(TimeSpan value);
    public string get_OvertimeWork();
    public void set_OvertimeWork(string value);
    public TimeSpan get_OvertimeWorkTimeSpan();
    public void set_OvertimeWorkTimeSpan(TimeSpan value);
    public string get_PlannedWork();
    public void set_PlannedWork(string value);
    public TimeSpan get_PlannedWorkTimeSpan();
    public void set_PlannedWorkTimeSpan(TimeSpan value);
    public DateTime get_Start();
    public void set_Start(DateTime value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("PS.TimeSheetWorkCollection")]
public class Microsoft.ProjectServer.Client.TimeSheetWorkCollection : ClientObjectCollection`1<TimeSheetWork> {
    [EditorBrowsableAttribute("1")]
public TimeSheetWorkCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public TimeSheetWork GetById(string objectId);
    [RemoteAttribute]
public TimeSheetWork GetByStartDate(DateTime start);
    [RemoteAttribute]
public TimeSheetWork Add(TimeSheetWorkCreationInformation parameters);
    [RemoteAttribute]
public ClientResult`1<bool> Remove(TimeSheetWork work);
}
[ScriptTypeAttribute("PS.TimeSheetWorkCreationInformation")]
public class Microsoft.ProjectServer.Client.TimeSheetWorkCreationInformation : ClientValueObject {
    private string m_actualWork;
    private string m_comment;
    private DateTime m_end;
    private string m_nonBillableOvertimeWork;
    private string m_nonBillableWork;
    private string m_overtimeWork;
    private string m_plannedWork;
    private DateTime m_start;
    [RemoteAttribute]
public string ActualWork { get; public set; }
    [RemoteAttribute]
public string Comment { get; public set; }
    [RemoteAttribute]
public DateTime End { get; public set; }
    [RemoteAttribute]
public string NonBillableOvertimeWork { get; public set; }
    [RemoteAttribute]
public string NonBillableWork { get; public set; }
    [RemoteAttribute]
public string OvertimeWork { get; public set; }
    [RemoteAttribute]
public string PlannedWork { get; public set; }
    [RemoteAttribute]
public DateTime Start { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ActualWork();
    public void set_ActualWork(string value);
    public string get_Comment();
    public void set_Comment(string value);
    public DateTime get_End();
    public void set_End(DateTime value);
    public string get_NonBillableOvertimeWork();
    public void set_NonBillableOvertimeWork(string value);
    public string get_NonBillableWork();
    public void set_NonBillableWork(string value);
    public string get_OvertimeWork();
    public void set_OvertimeWork(string value);
    public string get_PlannedWork();
    public void set_PlannedWork(string value);
    public DateTime get_Start();
    public void set_Start(DateTime value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.TimeSheetWorkPropertyNames : object {
    public static string ActualWork;
    public static string ActualWorkTimeSpan;
    public static string Comment;
    public static string End;
    public static string Id;
    public static string NonBillableOvertimeWork;
    public static string NonBillableOvertimeWorkTimeSpan;
    public static string NonBillableWork;
    public static string NonBillableWorkTimeSpan;
    public static string OvertimeWork;
    public static string OvertimeWorkTimeSpan;
    public static string PlannedWork;
    public static string PlannedWorkTimeSpan;
    public static string Start;
}
public enum Microsoft.ProjectServer.Client.TrackingMode : Enum {
    public int value__;
    public static TrackingMode None;
    public static TrackingMode TimePhased;
    public static TrackingMode PercentComplete;
    public static TrackingMode ActualHours;
}
public enum Microsoft.ProjectServer.Client.UpdateProjectStageStatusFieldValue : Enum {
    public int value__;
    public static UpdateProjectStageStatusFieldValue None;
    public static UpdateProjectStageStatusFieldValue WaitingForInput;
    public static UpdateProjectStageStatusFieldValue WaitingForApproval;
    public static UpdateProjectStageStatusFieldValue WorkflowProcessing;
}
public enum Microsoft.ProjectServer.Client.UtilizationType : Enum {
    public int value__;
    public static UtilizationType FromProjectPlan;
    public static UtilizationType FromResourcePlan;
    public static UtilizationType FromProjectPlanThenResourcePlan;
}
public enum Microsoft.ProjectServer.Client.WorkContourType : Enum {
    public int value__;
    public static WorkContourType Flat;
    public static WorkContourType BackLoaded;
    public static WorkContourType FrontLoaded;
    public static WorkContourType DoublePeak;
    public static WorkContourType EarlyPeak;
    public static WorkContourType LatePeak;
    public static WorkContourType Bell;
    public static WorkContourType Turtle;
    public static WorkContourType UserDefined;
}
[ScriptTypeAttribute("PS.WorkflowActivities")]
public class Microsoft.ProjectServer.Client.WorkflowActivities : ClientObject {
    [EditorBrowsableAttribute("1")]
public WorkflowActivities(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public ClientResult`1<Guid> CreateProjectFromListItem(Guid webId, Guid listId, int itemId, Guid eptId);
    [RemoteAttribute]
public void UpdateIdeaListItemStatus(Guid projectId, string status);
    [RemoteAttribute]
public ClientResult`1<double> ReadCurrencyProperty(Guid projectId, string propertyId);
    [RemoteAttribute]
public ClientResult`1<DateTime> ReadDateTimeProperty(Guid projectId, string propertyId);
    [RemoteAttribute]
public ClientResult`1<int> ReadIntegerProperty(Guid projectId, string propertyId);
    [RemoteAttribute]
public ClientResult`1<bool> ReadBooleanProperty(Guid projectId, string propertyId);
    [RemoteAttribute]
public ClientResult`1<double> ReadNumberProperty(Guid projectId, string propertyId);
    [RemoteAttribute]
public ClientResult`1<string> ReadTextProperty(Guid projectId, string propertyId);
    [RemoteAttribute]
public ClientResult`1<Guid> ReadGuidProperty(Guid projectId, string propertyId);
    [RemoteAttribute]
public ClientResult`1<string> ReadProjectProperty(Guid projectId, string propertyId);
    [RemoteAttribute]
public void UpdateCurrencyProperty(Guid projectId, string propertyId, double value);
    [RemoteAttribute]
public void UpdateDateTimeProperty(Guid projectId, string propertyId, DateTime value);
    [RemoteAttribute]
public void UpdateIntegerProperty(Guid projectId, string propertyId, int value);
    [RemoteAttribute]
public void UpdateBooleanProperty(Guid projectId, string propertyId, bool value);
    [RemoteAttribute]
public void UpdateNumberProperty(Guid projectId, string propertyId, double value);
    [RemoteAttribute]
public void UpdateTextProperty(Guid projectId, string propertyId, string value);
    [RemoteAttribute]
public void UpdateGuidProperty(Guid projectId, string propertyId, Guid value);
    [RemoteAttribute]
public void UpdateProjectStageStatus(Guid projectId, Guid stageId, string statusInformation, UpdateProjectStageStatusFieldValue stageStatusValue, bool append);
    [RemoteAttribute]
public void EnterProjectStage(Guid projectId, Guid stageId);
    [RemoteAttribute]
public ClientResult`1<ReadyToLeaveProjectStageValue> ReadyToLeaveProjectStage(Guid projectId);
    [RemoteAttribute]
public void LeaveProjectStage(Guid projectId);
}
[ScriptTypeAttribute("PS.WorkflowDesigner")]
public class Microsoft.ProjectServer.Client.WorkflowDesigner : ClientObject {
    [RemoteAttribute]
public WorkflowDesignerFieldCollection Fields { get; }
    [EditorBrowsableAttribute("1")]
public WorkflowDesigner(ClientRuntimeContext context, ObjectPath objectPath);
    public WorkflowDesignerFieldCollection get_Fields();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.WorkflowDesignerField")]
public class Microsoft.ProjectServer.Client.WorkflowDesignerField : ClientObject {
    [RemoteAttribute]
public string DisplayName { get; }
    [RemoteAttribute]
public string Id { get; }
    [RemoteAttribute]
public bool IsLookupField { get; }
    [RemoteAttribute]
public bool IsReadOnly { get; }
    [RemoteAttribute]
public LookupEntryCollection LookupEntries { get; }
    [RemoteAttribute]
public FieldType SPFieldType { get; }
    [EditorBrowsableAttribute("1")]
public WorkflowDesignerField(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_DisplayName();
    public string get_Id();
    public bool get_IsLookupField();
    public bool get_IsReadOnly();
    public LookupEntryCollection get_LookupEntries();
    public FieldType get_SPFieldType();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("PS.WorkflowDesignerFieldCollection")]
public class Microsoft.ProjectServer.Client.WorkflowDesignerFieldCollection : ClientObjectCollection`1<WorkflowDesignerField> {
    [EditorBrowsableAttribute("1")]
public WorkflowDesignerFieldCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public WorkflowDesignerField GetById(string objectId);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.WorkflowDesignerFieldObjectPropertyNames : object {
    public static string LookupEntries;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.WorkflowDesignerFieldPropertyNames : object {
    public static string DisplayName;
    public static string Id;
    public static string IsLookupField;
    public static string IsReadOnly;
    public static string SPFieldType;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.ProjectServer.Client.WorkflowDesignerObjectPropertyNames : object {
    public static string Fields;
}
public enum Microsoft.ProjectServer.Client.WorkFormat : Enum {
    public int value__;
    public static WorkFormat Minute;
    public static WorkFormat Hour;
    public static WorkFormat Day;
    public static WorkFormat Week;
    public static WorkFormat Month;
}
