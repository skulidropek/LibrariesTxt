[ScriptTypeAttribute("Microsoft.SharePoint.BusinessData.Infrastructure.EntityInstanceIdEncoder")]
public static class Microsoft.BusinessData.Infrastructure.EntityInstanceIdEncoder : object {
    [RemoteAttribute]
public static ClientResult`1<string> EncodeEntityInstanceId(ClientRuntimeContext context, Object[] subIdentifiers);
}
[ScriptTypeAttribute("SP.BusinessData.Infrastructure.ExternalSubscriptionStore")]
public class Microsoft.BusinessData.Infrastructure.ExternalSubscriptionStore : ClientObject {
    public ExternalSubscriptionStore(ClientRuntimeContext context, Web web);
    [EditorBrowsableAttribute("1")]
public ExternalSubscriptionStore(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public void IndexStore();
}
[ScriptTypeAttribute("SP.BusinessData.AppBdcCatalog")]
public class Microsoft.BusinessData.MetadataModel.AppBdcCatalog : ClientObject {
    [EditorBrowsableAttribute("1")]
public AppBdcCatalog(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Entity GetEntity(string namespace, string name);
    [RemoteAttribute]
public ClientResult`1<string> GetLobSystemProperty(string lobSystemName, string propertyName);
    [RemoteAttribute]
public void SetLobSystemProperty(string lobSystemName, string propertyName, string propertyValue);
    [RemoteAttribute]
public ClientResult`1<string> GetLobSystemInstanceProperty(string lobSystemName, string lobSystemInstanceName, string propertyName);
    [RemoteAttribute]
public void SetLobSystemInstanceProperty(string lobSystemName, string lobSystemInstanceName, string propertyName, string propertyValue);
    [RemoteAttribute]
public ClientResult`1<string> GetConnectionId(string lobSystemName, string lobSystemInstanceName);
    [RemoteAttribute]
public void SetConnectionId(string lobSystemName, string lobSystemInstanceName, string connectionId);
    [RemoteAttribute]
public ClientArrayResult`1<string> GetPermissibleConnections();
}
[ScriptTypeAttribute("SP.BusinessData.Collections.EntityFieldCollection")]
public class Microsoft.BusinessData.MetadataModel.Collections.EntityFieldCollection : ClientObjectCollection`1<EntityField> {
    [EditorBrowsableAttribute("1")]
public EntityFieldCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.BusinessData.Collections.EntityIdentifierCollection")]
public class Microsoft.BusinessData.MetadataModel.Collections.EntityIdentifierCollection : ClientObjectCollection`1<EntityIdentifier> {
    [EditorBrowsableAttribute("1")]
public EntityIdentifierCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.BusinessData.Collections.EntityInstanceCollection")]
public class Microsoft.BusinessData.MetadataModel.Collections.EntityInstanceCollection : ClientObjectCollection`1<EntityInstance> {
    [EditorBrowsableAttribute("1")]
public EntityInstanceCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.BusinessData.Collections.FilterCollection")]
public class Microsoft.BusinessData.MetadataModel.Collections.FilterCollection : ClientObjectCollection`1<Filter> {
    [EditorBrowsableAttribute("1")]
public FilterCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public void SetFilterValue(string inputFilterName, int valueIndex, object value);
}
[ScriptTypeAttribute("SP.BusinessData.Collections.LobSystemInstanceCollection")]
public class Microsoft.BusinessData.MetadataModel.Collections.LobSystemInstanceCollection : ClientObjectCollection`1<LobSystemInstance> {
    [EditorBrowsableAttribute("1")]
public LobSystemInstanceCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.BusinessData.Collections.TypeDescriptorCollection")]
public class Microsoft.BusinessData.MetadataModel.Collections.TypeDescriptorCollection : ClientObjectCollection`1<TypeDescriptor> {
    [EditorBrowsableAttribute("1")]
public TypeDescriptorCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.BusinessData.Entity")]
public class Microsoft.BusinessData.MetadataModel.Entity : ClientObject {
    [RemoteAttribute]
public long EstimatedInstanceCount { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public string Namespace { get; }
    [EditorBrowsableAttribute("1")]
public Entity(ClientRuntimeContext context, ObjectPath objectPath);
    public long get_EstimatedInstanceCount();
    public string get_Name();
    public string get_Namespace();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public EntityIdentifierCollection GetIdentifiers();
    [RemoteAttribute]
public ClientResult`1<int> GetIdentifierCount();
    [RemoteAttribute]
public LobSystem GetLobSystem();
    [RemoteAttribute]
public EntityView GetCreatorView(string methodInstanceName);
    [RemoteAttribute]
public EntityView GetUpdaterView(string updaterName);
    [RemoteAttribute]
public EntityView GetFinderView(string methodInstanceName);
    [RemoteAttribute]
public EntityView GetSpecificFinderView(string specificFinderName);
    [RemoteAttribute]
public EntityView GetDefaultSpecificFinderView();
    [RemoteAttribute]
public EntityInstance FindSpecificDefault(EntityIdentity identity, LobSystemInstance lobSystemInstance);
    [RemoteAttribute]
public EntityInstance FindSpecific(EntityIdentity identity, string specificFinderName, LobSystemInstance lobSystemInstance);
    [RemoteAttribute]
public EntityInstance FindSpecificDefaultByBdcId(string bdcIdentity, LobSystemInstance lobSystemInstance);
    [RemoteAttribute]
public EntityInstance FindSpecificByBdcId(string bdcIdentity, string specificFinderName, LobSystemInstance lobSystemInstance);
    [RemoteAttribute]
public EntityInstanceCollection FindFiltered(FilterCollection filterList, string nameOfFinder, LobSystemInstance lobSystemInstance);
    [RemoteAttribute]
public EntityInstanceCollection FindAssociated(EntityInstance entityInstance, string associationName, FilterCollection filterList, LobSystemInstance lobSystemInstance);
    [RemoteAttribute]
public FilterCollection GetFilters(string methodInstanceName);
    [RemoteAttribute]
public MethodExecutionResult Execute(string methodInstanceName, LobSystemInstance lobSystemInstance, Object[] inputParams);
    [RemoteAttribute]
public EntityView GetAssociationView(string associationName);
    [RemoteAttribute]
public EntityIdentity Create(EntityFieldValueDictionary fieldValues, LobSystemInstance lobSystemInstance);
    [RemoteAttribute]
public Subscription Subscribe(EntityEventType eventType, NotificationCallback notificationCallback, string onBehalfOfUser, string subscriberName, LobSystemInstance lobSystemInstance);
    [RemoteAttribute]
public void Unsubscribe(Subscription subscription, string onBehalfOfUser, string unsubscriberName, LobSystemInstance lobSystemInstance);
}
[ScriptTypeAttribute("SP.BusinessData.EntityField")]
public class Microsoft.BusinessData.MetadataModel.EntityField : ClientObject {
    [RemoteAttribute]
public bool ContainsLocalizedDisplayName { get; }
    [RemoteAttribute]
public string DefaultDisplayName { get; }
    [RemoteAttribute]
public string LocalizedDisplayName { get; }
    [RemoteAttribute]
public string Name { get; }
    [EditorBrowsableAttribute("1")]
public EntityField(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_ContainsLocalizedDisplayName();
    public string get_DefaultDisplayName();
    public string get_LocalizedDisplayName();
    public string get_Name();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.MetadataModel.EntityFieldPropertyNames : object {
    public static string ContainsLocalizedDisplayName;
    public static string DefaultDisplayName;
    public static string LocalizedDisplayName;
    public static string Name;
}
[ScriptTypeAttribute("SP.BusinessData.EntityIdentifier")]
public class Microsoft.BusinessData.MetadataModel.EntityIdentifier : ClientObject {
    [RemoteAttribute]
public string IdentifierType { get; }
    [RemoteAttribute]
public string Name { get; }
    [EditorBrowsableAttribute("1")]
public EntityIdentifier(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_IdentifierType();
    public string get_Name();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ClientResult`1<string> GetDefaultDisplayName();
    [RemoteAttribute]
public ClientResult`1<bool> ContainsLocalizedDisplayName();
    [RemoteAttribute]
public ClientResult`1<string> GetLocalizedDisplayName();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.MetadataModel.EntityIdentifierPropertyNames : object {
    public static string IdentifierType;
    public static string Name;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.MetadataModel.EntityPropertyNames : object {
    public static string EstimatedInstanceCount;
    public static string Name;
    public static string Namespace;
}
[ScriptTypeAttribute("SP.BusinessData.EntityView")]
public class Microsoft.BusinessData.MetadataModel.EntityView : ClientObject {
    [RemoteAttribute]
public EntityFieldCollection Fields { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public string RelatedSpecificFinderName { get; }
    [EditorBrowsableAttribute("1")]
public EntityView(ClientRuntimeContext context, ObjectPath objectPath);
    public EntityFieldCollection get_Fields();
    public string get_Name();
    public string get_RelatedSpecificFinderName();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public EntityFieldValueDictionary GetDefaultValues();
    [RemoteAttribute]
public ClientResult`1<string> GetXmlSchema();
    [RemoteAttribute]
public TypeDescriptor GetTypeDescriptor(string fieldDotNotation);
    [RemoteAttribute]
public ClientResult`1<string> GetType(string fieldDotNotation);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.MetadataModel.EntityViewObjectPropertyNames : object {
    public static string Fields;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.MetadataModel.EntityViewPropertyNames : object {
    public static string Name;
    public static string RelatedSpecificFinderName;
}
[ScriptTypeAttribute("SP.BusinessData.Filter")]
public class Microsoft.BusinessData.MetadataModel.Filter : ClientObject {
    [RemoteAttribute]
public string DefaultDisplayName { get; }
    [RemoteAttribute]
public string FilterField { get; }
    [RemoteAttribute]
public string FilterType { get; }
    [RemoteAttribute]
public string LocalizedDisplayName { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public int ValueCount { get; }
    [EditorBrowsableAttribute("1")]
public Filter(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_DefaultDisplayName();
    public string get_FilterField();
    public string get_FilterType();
    public string get_LocalizedDisplayName();
    public string get_Name();
    public int get_ValueCount();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.MetadataModel.FilterPropertyNames : object {
    public static string DefaultDisplayName;
    public static string FilterField;
    public static string FilterType;
    public static string LocalizedDisplayName;
    public static string Name;
    public static string ValueCount;
}
[ScriptTypeAttribute("SP.BusinessData.LobSystem")]
public class Microsoft.BusinessData.MetadataModel.LobSystem : ClientObject {
    [RemoteAttribute]
public string Name { get; }
    [EditorBrowsableAttribute("1")]
public LobSystem(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Name();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public LobSystemInstanceCollection GetLobSystemInstances();
}
[ScriptTypeAttribute("SP.BusinessData.LobSystemInstance")]
public class Microsoft.BusinessData.MetadataModel.LobSystemInstance : ClientObject {
    [RemoteAttribute]
public string Name { get; }
    [EditorBrowsableAttribute("1")]
public LobSystemInstance(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Name();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.MetadataModel.LobSystemInstancePropertyNames : object {
    public static string Name;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.MetadataModel.LobSystemPropertyNames : object {
    public static string Name;
}
[ScriptTypeAttribute("SP.BusinessData.MethodExecutionResult")]
public class Microsoft.BusinessData.MetadataModel.MethodExecutionResult : ClientObject {
    [RemoteAttribute]
public ReturnParameterCollection ReturnParameterCollection { get; }
    [EditorBrowsableAttribute("1")]
public MethodExecutionResult(ClientRuntimeContext context, ObjectPath objectPath);
    public ReturnParameterCollection get_ReturnParameterCollection();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.MetadataModel.MethodExecutionResultObjectPropertyNames : object {
    public static string ReturnParameterCollection;
}
[ScriptTypeAttribute("SP.BusinessData.ReturnParameterCollection")]
public class Microsoft.BusinessData.MetadataModel.ReturnParameterCollection : ClientObjectCollection`1<EntityFieldValueDictionary> {
    [EditorBrowsableAttribute("1")]
public ReturnParameterCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.BusinessData.TypeDescriptor")]
public class Microsoft.BusinessData.MetadataModel.TypeDescriptor : ClientObject {
    [RemoteAttribute]
public bool ContainsReadOnly { get; }
    [RemoteAttribute]
public bool IsCollection { get; }
    [RemoteAttribute]
public bool IsReadOnly { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public string TypeName { get; }
    [EditorBrowsableAttribute("1")]
public TypeDescriptor(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_ContainsReadOnly();
    public bool get_IsCollection();
    public bool get_IsReadOnly();
    public string get_Name();
    public string get_TypeName();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ClientResult`1<bool> ContainsLocalizedDisplayName();
    [RemoteAttribute]
public ClientResult`1<string> GetLocalizedDisplayName();
    [RemoteAttribute]
public ClientResult`1<string> GetDefaultDisplayName();
    [RemoteAttribute]
public ClientResult`1<bool> IsRoot();
    [RemoteAttribute]
public ClientResult`1<bool> IsLeaf();
    [RemoteAttribute]
public TypeDescriptorCollection GetChildTypeDescriptors();
    [RemoteAttribute]
public TypeDescriptor GetParentTypeDescriptor();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.MetadataModel.TypeDescriptorPropertyNames : object {
    public static string ContainsReadOnly;
    public static string IsCollection;
    public static string IsReadOnly;
    public static string Name;
    public static string TypeName;
}
public enum Microsoft.BusinessData.Runtime.EntityEventType : Enum {
    public int value__;
    public static EntityEventType None;
    public static EntityEventType ItemAdded;
    public static EntityEventType ItemUpdated;
    public static EntityEventType ItemDeleted;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("SP.BusinessData.Runtime.EntityFieldValueDictionary")]
public class Microsoft.BusinessData.Runtime.EntityFieldValueDictionary : ClientObject {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; public set; }
    [EditorBrowsableAttribute("1")]
public EntityFieldValueDictionary(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    [RemoteAttribute]
public void set_Item(string fieldName, object value);
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
public void FromXml(string xml);
    [RemoteAttribute]
public ClientResult`1<string> ToXml();
    [RemoteAttribute]
public void CreateInstance(string fieldInstanceDotNotation, string fieldDotNotation);
    [RemoteAttribute]
public void CreateCollectionInstance(string fieldDotNotation, int size);
    [RemoteAttribute]
public ClientResult`1<int> GetCollectionSize(string fieldDotNotation);
    [RemoteAttribute]
internal void SetFieldValue(string fieldDotNotation, object value);
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("SP.BusinessData.Runtime.EntityIdentity")]
public class Microsoft.BusinessData.Runtime.EntityIdentity : ClientObject {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; }
    [RemoteAttribute]
public int IdentifierCount { get; }
    public EntityIdentity(ClientRuntimeContext context, Object[] identifierValues);
    [EditorBrowsableAttribute("1")]
public EntityIdentity(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    public int get_IdentifierCount();
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.Runtime.EntityIdentityPropertyNames : object {
    public static string IdentifierCount;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("SP.BusinessData.Runtime.EntityInstance")]
public class Microsoft.BusinessData.Runtime.EntityInstance : ClientObject {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; public set; }
    [EditorBrowsableAttribute("1")]
public EntityInstance(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    [RemoteAttribute]
public void set_Item(string fieldName, object value);
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
internal void SetFieldValue(string fieldDotNotation, object value);
    [RemoteAttribute]
public void CreateInstance(string fieldInstanceDotNotation, string fieldDotNotation);
    [RemoteAttribute]
public void CreateCollectionInstance(string fieldDotNotation, int size);
    [RemoteAttribute]
public virtual EntityIdentity GetIdentity();
    [RemoteAttribute]
public virtual void DeleteObject();
    [RemoteAttribute]
public virtual void Update();
    [RemoteAttribute]
public virtual void FromXml(string xml);
    [RemoteAttribute]
public ClientResult`1<string> ToXml();
}
[ScriptTypeAttribute("SP.BusinessData.Runtime.NotificationCallback")]
public class Microsoft.BusinessData.Runtime.NotificationCallback : ClientObject {
    [RemoteAttribute]
public string NotificationContext { get; public set; }
    [RemoteAttribute]
public string NotificationEndpoint { get; }
    [RemoteAttribute]
public string NotificationForwarderType { get; public set; }
    public NotificationCallback(ClientRuntimeContext context, string notificationEndpoint);
    [EditorBrowsableAttribute("1")]
public NotificationCallback(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_NotificationContext();
    public void set_NotificationContext(string value);
    public string get_NotificationEndpoint();
    public string get_NotificationForwarderType();
    public void set_NotificationForwarderType(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.Runtime.NotificationCallbackPropertyNames : object {
    public static string NotificationContext;
    public static string NotificationEndpoint;
    public static string NotificationForwarderType;
}
[ScriptTypeAttribute("SP.BusinessData.Runtime.Subscription")]
public class Microsoft.BusinessData.Runtime.Subscription : ClientObject {
    [RemoteAttribute]
public string Hash { get; }
    [RemoteAttribute]
public IDictionary`2<string, object> ID { get; }
    public Subscription(ClientRuntimeContext context, IDictionary`2<string, object> id, string hash);
    [EditorBrowsableAttribute("1")]
public Subscription(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Hash();
    public IDictionary`2<string, object> get_ID();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.BusinessData.Runtime.SubscriptionPropertyNames : object {
    public static string Hash;
    public static string ID;
}
public enum Microsoft.SharePoint.Activities.SPActivityResponseStatus : Enum {
    public int value__;
    public static SPActivityResponseStatus Success;
    public static SPActivityResponseStatus UnknownError;
    public static SPActivityResponseStatus BadRequest;
    public static SPActivityResponseStatus AccessDenied;
    public static SPActivityResponseStatus ActivityNotFound;
    public static SPActivityResponseStatus ActivityAlreadyExists;
    public static SPActivityResponseStatus Disabled;
    public static SPActivityResponseStatus InternalError;
}
[FlagsAttribute]
public enum Microsoft.SharePoint.AddToOneDrive.AtoScenario : Enum {
    public UInt32 value__;
    public static AtoScenario None;
    public static AtoScenario Vault;
    public static AtoScenario AlbumPhoto;
    public static AtoScenario UrlFile;
}
public enum Microsoft.SharePoint.Administration.AppSource : Enum {
    public int value__;
    public static AppSource InvalidSource;
    public static AppSource Marketplace;
    public static AppSource CorporateCatalog;
    public static AppSource DeveloperSite;
    public static AppSource ObjectModel;
    public static AppSource RemoteObjectModel;
    public static AppSource SiteCollectionCorporateCatalog;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.CustomFontsResource")]
public class Microsoft.SharePoint.Administration.CustomFontsResource : ClientValueObject {
    private Byte[] m_byteArray;
    private string m_fileName;
    private string m_fullPath;
    private int m_majVer;
    private CustomFontsResourceType m_type;
    [RemoteAttribute]
public Byte[] byteArray { get; public set; }
    [RemoteAttribute]
public string fileName { get; public set; }
    [RemoteAttribute]
public string fullPath { get; public set; }
    [RemoteAttribute]
public int MajVer { get; public set; }
    [RemoteAttribute]
public CustomFontsResourceType type { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Byte[] get_byteArray();
    public void set_byteArray(Byte[] value);
    public string get_fileName();
    public void set_fileName(string value);
    public string get_fullPath();
    public void set_fullPath(string value);
    public int get_MajVer();
    public void set_MajVer(int value);
    public CustomFontsResourceType get_type();
    public void set_type(CustomFontsResourceType value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Administration.CustomFontsResourceType : Enum {
    public int value__;
    public static CustomFontsResourceType None;
    public static CustomFontsResourceType Catalog;
    public static CustomFontsResourceType Font;
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Administration.DesignPackageType : Enum {
    public ulong value__;
    public static DesignPackageType None;
    public static DesignPackageType Topic;
    public static DesignPackageType Showcase;
    public static DesignPackageType Blank;
    public static DesignPackageType TeamSite;
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Administration.OrgAssetFlags : Enum {
    public int value__;
    public static OrgAssetFlags None;
    public static OrgAssetFlags CopilotSearchable;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.OrgAssets")]
public class Microsoft.SharePoint.Administration.OrgAssets : ClientValueObject {
    private OrgAssetsLibraryCollection m_centralAssetRepositoryLibraries;
    private ResourcePath m_domain;
    private OrgAssetsLibraryCollection m_orgAssetsLibraries;
    private Guid m_siteId;
    private ResourcePath m_url;
    private Guid m_webId;
    [RemoteAttribute]
public OrgAssetsLibraryCollection CentralAssetRepositoryLibraries { get; }
    [RemoteAttribute]
public ResourcePath Domain { get; }
    [RemoteAttribute]
public OrgAssetsLibraryCollection OrgAssetsLibraries { get; public set; }
    [RemoteAttribute]
public Guid SiteId { get; }
    [RemoteAttribute]
public ResourcePath Url { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public OrgAssetsLibraryCollection get_CentralAssetRepositoryLibraries();
    public ResourcePath get_Domain();
    public OrgAssetsLibraryCollection get_OrgAssetsLibraries();
    public void set_OrgAssetsLibraries(OrgAssetsLibraryCollection value);
    public Guid get_SiteId();
    public ResourcePath get_Url();
    public Guid get_WebId();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.OrgAssetsLibrary")]
public class Microsoft.SharePoint.Administration.OrgAssetsLibrary : ClientValueObject {
    private string m_displayName;
    private string m_fileType;
    private ResourcePath m_libraryUrl;
    private Guid m_listId;
    private OrgAssetFlags m_orgAssetFlags;
    private OrgAssetType m_orgAssetType;
    private ResourcePath m_thumbnailUrl;
    private Guid m_uniqueId;
    [RemoteAttribute]
public string DisplayName { get; public set; }
    [RemoteAttribute]
public string FileType { get; public set; }
    [RemoteAttribute]
public ResourcePath LibraryUrl { get; public set; }
    [RemoteAttribute]
public Guid ListId { get; public set; }
    [RemoteAttribute]
public OrgAssetFlags OrgAssetFlags { get; public set; }
    [RemoteAttribute]
public OrgAssetType OrgAssetType { get; public set; }
    [RemoteAttribute]
public ResourcePath ThumbnailUrl { get; public set; }
    [RemoteAttribute]
public Guid UniqueId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public string get_FileType();
    public void set_FileType(string value);
    public ResourcePath get_LibraryUrl();
    public void set_LibraryUrl(ResourcePath value);
    public Guid get_ListId();
    public void set_ListId(Guid value);
    public OrgAssetFlags get_OrgAssetFlags();
    public void set_OrgAssetFlags(OrgAssetFlags value);
    public OrgAssetType get_OrgAssetType();
    public void set_OrgAssetType(OrgAssetType value);
    public ResourcePath get_ThumbnailUrl();
    public void set_ThumbnailUrl(ResourcePath value);
    public Guid get_UniqueId();
    public void set_UniqueId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.OrgAssetsLibraryCollection")]
public class Microsoft.SharePoint.Administration.OrgAssetsLibraryCollection : ClientValueObjectCollection`1<OrgAssetsLibrary> {
    private IList`1<OrgAssetsLibrary> m_orgAssetsLibraries;
    [RemoteAttribute]
public IList`1<OrgAssetsLibrary> OrgAssetsLibraries { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<OrgAssetsLibrary> get_OrgAssetsLibraries();
    public void set_OrgAssetsLibraries(IList`1<OrgAssetsLibrary> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Administration.OrgAssetType : Enum {
    public int value__;
    public static OrgAssetType Undefined;
    public static OrgAssetType ImageDocumentLibrary;
    public static OrgAssetType OfficeTemplateLibrary;
    public static OrgAssetType OfficeFontLibrary;
    public static OrgAssetType BrandFontsLibrary;
    public static OrgAssetType BrandKitLibrary;
    public static OrgAssetType BrandColorsList;
}
[ScriptTypeAttribute("SP.SystemSiteLockExpirationResult")]
public class Microsoft.SharePoint.Administration.SiteMove.Client.SystemSiteLockExpirationResult : ClientValueObject {
    private int m_error;
    private DateTime m_expiration;
    [RemoteAttribute]
public int Error { get; public set; }
    [RemoteAttribute]
public DateTime Expiration { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_Error();
    public void set_Error(int value);
    public DateTime get_Expiration();
    public void set_Expiration(DateTime value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Administration.SPEnterpriseContentTypeSyncTrigger : Enum {
    public int value__;
    public static SPEnterpriseContentTypeSyncTrigger UserTriggeredForRefresh;
    public static SPEnterpriseContentTypeSyncTrigger RefreshECTsOnSiteRestore;
    public static SPEnterpriseContentTypeSyncTrigger RefreshStaleContentType;
    public static SPEnterpriseContentTypeSyncTrigger AddCopyContentTypeAsync;
    public static SPEnterpriseContentTypeSyncTrigger BackfillContentTypesUsage;
}
public enum Microsoft.SharePoint.Administration.SPOnlineProvisioning.RestrictedSiteCreationMode : Enum {
    public byte value__;
    public static RestrictedSiteCreationMode Deny;
    public static RestrictedSiteCreationMode Allow;
}
public enum Microsoft.SharePoint.Administration.SPOnlineProvisioning.RestrictedSiteCreationSiteType : Enum {
    public byte value__;
    public static RestrictedSiteCreationSiteType All;
    public static RestrictedSiteCreationSiteType Team;
    public static RestrictedSiteCreationSiteType Communication;
}
public enum Microsoft.SharePoint.Administration.SPResilienceModeType : Enum {
    public int value__;
    public static SPResilienceModeType DefaultAAD;
    public static SPResilienceModeType Enabled;
    public static SPResilienceModeType Disabled;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.AttestationPolicyResourceStorage")]
public class Microsoft.SharePoint.Administration.TenantAdmin.AttestationPolicyResourceStorage : PolicyResourceStorage {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.AuditData")]
public class Microsoft.SharePoint.Administration.TenantAdmin.AuditData : ClientValueObject {
    private string m_clientIP;
    private Guid m_correlationId;
    private DateTime m_creationTime;
    private string m_eventData;
    private EventData m_eventDataParsed;
    private string m_eventSource;
    private string m_id;
    private string m_itemType;
    private Guid m_listItemUniqueId;
    private IList`1<ModifiedProperty> m_modifiedProperties;
    private string m_name;
    private string m_newValue;
    private string m_objectId;
    private string m_oldValue;
    private IList`1<Parameter> m_parameters;
    private string m_site;
    private IList`1<TargetProperty> m_target;
    private string m_targetUserOrGroupName;
    private string m_targetUserOrGroupType;
    private string m_teamName;
    private string m_userId;
    private int m_userType;
    [RemoteAttribute]
public string ClientIP { get; public set; }
    [RemoteAttribute]
public Guid CorrelationId { get; public set; }
    [RemoteAttribute]
public DateTime CreationTime { get; public set; }
    [RemoteAttribute]
public string EventData { get; public set; }
    [RemoteAttribute]
public EventData EventDataParsed { get; public set; }
    [RemoteAttribute]
public string EventSource { get; public set; }
    [RemoteAttribute]
public string Id { get; public set; }
    [RemoteAttribute]
public string ItemType { get; public set; }
    [RemoteAttribute]
public Guid ListItemUniqueId { get; public set; }
    [RemoteAttribute]
public IList`1<ModifiedProperty> ModifiedProperties { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string NewValue { get; public set; }
    [RemoteAttribute]
public string ObjectId { get; public set; }
    [RemoteAttribute]
public string OldValue { get; public set; }
    [RemoteAttribute]
public IList`1<Parameter> Parameters { get; public set; }
    [RemoteAttribute]
public string Site { get; public set; }
    [RemoteAttribute]
public IList`1<TargetProperty> Target { get; public set; }
    [RemoteAttribute]
public string TargetUserOrGroupName { get; public set; }
    [RemoteAttribute]
public string TargetUserOrGroupType { get; public set; }
    [RemoteAttribute]
public string TeamName { get; public set; }
    [RemoteAttribute]
public string UserId { get; public set; }
    [RemoteAttribute]
public int UserType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ClientIP();
    public void set_ClientIP(string value);
    public Guid get_CorrelationId();
    public void set_CorrelationId(Guid value);
    public DateTime get_CreationTime();
    public void set_CreationTime(DateTime value);
    public string get_EventData();
    public void set_EventData(string value);
    public EventData get_EventDataParsed();
    public void set_EventDataParsed(EventData value);
    public string get_EventSource();
    public void set_EventSource(string value);
    public string get_Id();
    public void set_Id(string value);
    public string get_ItemType();
    public void set_ItemType(string value);
    public Guid get_ListItemUniqueId();
    public void set_ListItemUniqueId(Guid value);
    public IList`1<ModifiedProperty> get_ModifiedProperties();
    public void set_ModifiedProperties(IList`1<ModifiedProperty> value);
    public string get_Name();
    public void set_Name(string value);
    public string get_NewValue();
    public void set_NewValue(string value);
    public string get_ObjectId();
    public void set_ObjectId(string value);
    public string get_OldValue();
    public void set_OldValue(string value);
    public IList`1<Parameter> get_Parameters();
    public void set_Parameters(IList`1<Parameter> value);
    public string get_Site();
    public void set_Site(string value);
    public IList`1<TargetProperty> get_Target();
    public void set_Target(IList`1<TargetProperty> value);
    public string get_TargetUserOrGroupName();
    public void set_TargetUserOrGroupName(string value);
    public string get_TargetUserOrGroupType();
    public void set_TargetUserOrGroupType(string value);
    public string get_TeamName();
    public void set_TeamName(string value);
    public string get_UserId();
    public void set_UserId(string value);
    public int get_UserType();
    public void set_UserType(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.AuditJobStatus : Enum {
    public int value__;
    public static AuditJobStatus Queued;
    public static AuditJobStatus Active;
    public static AuditJobStatus Succeeded;
    public static AuditJobStatus PermanentFailed;
    public static AuditJobStatus TransientFailed;
    public static AuditJobStatus TimedOut;
    public static AuditJobStatus Cancelled;
    public static AuditJobStatus Cancelling;
    public static AuditJobStatus Deleted;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.AuditSearchRequestStatus")]
public class Microsoft.SharePoint.Administration.TenantAdmin.AuditSearchRequestStatus : ClientValueObject {
    private DateTime m_completedTimeUtc;
    private float m_completenessPercent;
    private Guid m_correlationId;
    private DateTime m_createdTimeUtc;
    private string m_dataGroupId;
    private string m_errorMessage;
    private DateTime m_executedTimeUtc;
    private string m_jobId;
    private DateTime m_lastModifiedTimeUtc;
    private float m_progressPercent;
    private string m_request;
    private string m_requestId;
    private string m_requestStorageName;
    private string m_resultStorageName;
    private string m_searchUser;
    private AuditJobStatus m_status;
    private bool m_throttled;
    private long m_totalItemCount;
    [RemoteAttribute]
public DateTime CompletedTimeUtc { get; public set; }
    [RemoteAttribute]
public float CompletenessPercent { get; public set; }
    [RemoteAttribute]
public Guid CorrelationId { get; public set; }
    [RemoteAttribute]
public DateTime CreatedTimeUtc { get; public set; }
    [RemoteAttribute]
public string DataGroupId { get; public set; }
    [RemoteAttribute]
public string ErrorMessage { get; public set; }
    [RemoteAttribute]
public DateTime ExecutedTimeUtc { get; public set; }
    [RemoteAttribute]
public string JobId { get; public set; }
    [RemoteAttribute]
public DateTime LastModifiedTimeUtc { get; public set; }
    [RemoteAttribute]
public float ProgressPercent { get; public set; }
    [RemoteAttribute]
public string Request { get; public set; }
    [RemoteAttribute]
public string RequestId { get; public set; }
    [RemoteAttribute]
public string RequestStorageName { get; public set; }
    [RemoteAttribute]
public string ResultStorageName { get; public set; }
    [RemoteAttribute]
public string SearchUser { get; public set; }
    [RemoteAttribute]
public AuditJobStatus Status { get; public set; }
    [RemoteAttribute]
public bool Throttled { get; public set; }
    [RemoteAttribute]
public long TotalItemCount { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_CompletedTimeUtc();
    public void set_CompletedTimeUtc(DateTime value);
    public float get_CompletenessPercent();
    public void set_CompletenessPercent(float value);
    public Guid get_CorrelationId();
    public void set_CorrelationId(Guid value);
    public DateTime get_CreatedTimeUtc();
    public void set_CreatedTimeUtc(DateTime value);
    public string get_DataGroupId();
    public void set_DataGroupId(string value);
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    public DateTime get_ExecutedTimeUtc();
    public void set_ExecutedTimeUtc(DateTime value);
    public string get_JobId();
    public void set_JobId(string value);
    public DateTime get_LastModifiedTimeUtc();
    public void set_LastModifiedTimeUtc(DateTime value);
    public float get_ProgressPercent();
    public void set_ProgressPercent(float value);
    public string get_Request();
    public void set_Request(string value);
    public string get_RequestId();
    public void set_RequestId(string value);
    public string get_RequestStorageName();
    public void set_RequestStorageName(string value);
    public string get_ResultStorageName();
    public void set_ResultStorageName(string value);
    public string get_SearchUser();
    public void set_SearchUser(string value);
    public AuditJobStatus get_Status();
    public void set_Status(AuditJobStatus value);
    public bool get_Throttled();
    public void set_Throttled(bool value);
    public long get_TotalItemCount();
    public void set_TotalItemCount(long value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.ChangeHistoryReportType : Enum {
    public int value__;
    public static ChangeHistoryReportType Unknown;
    public static ChangeHistoryReportType SiteSettings;
    public static ChangeHistoryReportType TenantSettings;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.CollaborationInsightsData")]
public class Microsoft.SharePoint.Administration.TenantAdmin.CollaborationInsightsData : ClientValueObject {
    private IList`1<CollaborativeOneDriveUser> m_collaborativeOneDriveUsers;
    private IList`1<CollaborativeUser> m_collaborativeUsers;
    private DateTime m_lastReportDate;
    [RemoteAttribute]
public IList`1<CollaborativeOneDriveUser> collaborativeOneDriveUsers { get; public set; }
    [RemoteAttribute]
public IList`1<CollaborativeUser> collaborativeUsers { get; public set; }
    [RemoteAttribute]
public DateTime lastReportDate { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<CollaborativeOneDriveUser> get_collaborativeOneDriveUsers();
    public void set_collaborativeOneDriveUsers(IList`1<CollaborativeOneDriveUser> value);
    public IList`1<CollaborativeUser> get_collaborativeUsers();
    public void set_collaborativeUsers(IList`1<CollaborativeUser> value);
    public DateTime get_lastReportDate();
    public void set_lastReportDate(DateTime value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.CollaborationInsightsOverview")]
public class Microsoft.SharePoint.Administration.TenantAdmin.CollaborationInsightsOverview : ClientValueObject {
    private DateTime m_lastReportDate;
    private int m_totalGuests;
    private int m_totalInternalUsers;
    private int m_totalOneDrives;
    private int m_totalSites;
    private int m_totalUsers;
    [RemoteAttribute]
public DateTime lastReportDate { get; public set; }
    [RemoteAttribute]
public int totalGuests { get; public set; }
    [RemoteAttribute]
public int totalInternalUsers { get; public set; }
    [RemoteAttribute]
public int totalOneDrives { get; public set; }
    [RemoteAttribute]
public int totalSites { get; public set; }
    [RemoteAttribute]
public int totalUsers { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_lastReportDate();
    public void set_lastReportDate(DateTime value);
    public int get_totalGuests();
    public void set_totalGuests(int value);
    public int get_totalInternalUsers();
    public void set_totalInternalUsers(int value);
    public int get_totalOneDrives();
    public void set_totalOneDrives(int value);
    public int get_totalSites();
    public void set_totalSites(int value);
    public int get_totalUsers();
    public void set_totalUsers(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.CollaborativeOneDriveUser")]
public class Microsoft.SharePoint.Administration.TenantAdmin.CollaborativeOneDriveUser : ClientValueObject {
    private int m_anonymousLinkCount;
    private int m_fileCount;
    private int m_filesSharedExternally;
    private int m_filesSharedInternally;
    private int m_totalFilesShared;
    private string m_userPrincipalName;
    [RemoteAttribute]
public int anonymousLinkCount { get; public set; }
    [RemoteAttribute]
public int fileCount { get; public set; }
    [RemoteAttribute]
public int filesSharedExternally { get; public set; }
    [RemoteAttribute]
public int filesSharedInternally { get; public set; }
    [RemoteAttribute]
public int totalFilesShared { get; public set; }
    [RemoteAttribute]
public string userPrincipalName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_anonymousLinkCount();
    public void set_anonymousLinkCount(int value);
    public int get_fileCount();
    public void set_fileCount(int value);
    public int get_filesSharedExternally();
    public void set_filesSharedExternally(int value);
    public int get_filesSharedInternally();
    public void set_filesSharedInternally(int value);
    public int get_totalFilesShared();
    public void set_totalFilesShared(int value);
    public string get_userPrincipalName();
    public void set_userPrincipalName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.CollaborativeUser")]
public class Microsoft.SharePoint.Administration.TenantAdmin.CollaborativeUser : ClientValueObject {
    private int m_totalFileInteraction;
    private int m_totalFilesSharedExternally;
    private int m_totalFilesSharedInternally;
    private int m_totalFilesViewedOrEdited;
    private string m_userPrincipalName;
    [RemoteAttribute]
public int totalFileInteraction { get; public set; }
    [RemoteAttribute]
public int totalFilesSharedExternally { get; public set; }
    [RemoteAttribute]
public int totalFilesSharedInternally { get; public set; }
    [RemoteAttribute]
public int totalFilesViewedOrEdited { get; public set; }
    [RemoteAttribute]
public string userPrincipalName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_totalFileInteraction();
    public void set_totalFileInteraction(int value);
    public int get_totalFilesSharedExternally();
    public void set_totalFilesSharedExternally(int value);
    public int get_totalFilesSharedInternally();
    public void set_totalFilesSharedInternally(int value);
    public int get_totalFilesViewedOrEdited();
    public void set_totalFilesViewedOrEdited(int value);
    public string get_userPrincipalName();
    public void set_userPrincipalName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.ContentEventCategory : Enum {
    public int value__;
    public static ContentEventCategory Unknown;
    public static ContentEventCategory Ransomware;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.EventData")]
public class Microsoft.SharePoint.Administration.TenantAdmin.EventData : ClientValueObject {
    private string m_archiveUrl;
    private string m_group;
    private Guid m_hubSiteId;
    private string m_identity;
    private string m_isHubSite;
    private string m_newSiteUrl;
    private Guid m_previousHubSiteId;
    private string m_sourceSiteUrl;
    private long m_storageMaximumLevel;
    private long m_storagePreviousMaximumLevel;
    private long m_storagePreviousWarningLevel;
    private long m_storageWarningLevel;
    private string m_targetSiteUrl;
    [RemoteAttribute]
public string ArchiveUrl { get; public set; }
    [RemoteAttribute]
public string Group { get; public set; }
    [RemoteAttribute]
public Guid HubSiteId { get; public set; }
    [RemoteAttribute]
public string Identity { get; public set; }
    [RemoteAttribute]
public string IsHubSite { get; public set; }
    [RemoteAttribute]
public string NewSiteUrl { get; public set; }
    [RemoteAttribute]
public Guid PreviousHubSiteId { get; public set; }
    [RemoteAttribute]
public string SourceSiteUrl { get; public set; }
    [RemoteAttribute]
public long StorageMaximumLevel { get; public set; }
    [RemoteAttribute]
public long StoragePreviousMaximumLevel { get; public set; }
    [RemoteAttribute]
public long StoragePreviousWarningLevel { get; public set; }
    [RemoteAttribute]
public long StorageWarningLevel { get; public set; }
    [RemoteAttribute]
public string TargetSiteUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ArchiveUrl();
    public void set_ArchiveUrl(string value);
    public string get_Group();
    public void set_Group(string value);
    public Guid get_HubSiteId();
    public void set_HubSiteId(Guid value);
    public string get_Identity();
    public void set_Identity(string value);
    public string get_IsHubSite();
    public void set_IsHubSite(string value);
    public string get_NewSiteUrl();
    public void set_NewSiteUrl(string value);
    public Guid get_PreviousHubSiteId();
    public void set_PreviousHubSiteId(Guid value);
    public string get_SourceSiteUrl();
    public void set_SourceSiteUrl(string value);
    public long get_StorageMaximumLevel();
    public void set_StorageMaximumLevel(long value);
    public long get_StoragePreviousMaximumLevel();
    public void set_StoragePreviousMaximumLevel(long value);
    public long get_StoragePreviousWarningLevel();
    public void set_StoragePreviousWarningLevel(long value);
    public long get_StorageWarningLevel();
    public void set_StorageWarningLevel(long value);
    public string get_TargetSiteUrl();
    public void set_TargetSiteUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.GroupSitesActivityDetail")]
public class Microsoft.SharePoint.Administration.TenantAdmin.GroupSitesActivityDetail : ClientValueObject {
    private Guid m_groupId;
    private DateTime m_lastActivityDate;
    [RemoteAttribute]
public Guid GroupId { get; public set; }
    [RemoteAttribute]
public DateTime LastActivityDate { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_GroupId();
    public void set_GroupId(Guid value);
    public DateTime get_LastActivityDate();
    public void set_LastActivityDate(DateTime value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.ImpactedAsset")]
public class Microsoft.SharePoint.Administration.TenantAdmin.ImpactedAsset : ClientValueObject {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.InactiveSitePolicyResourceState : Enum {
    public int value__;
    public static InactiveSitePolicyResourceState Unknown;
    public static InactiveSitePolicyResourceState Active;
    public static InactiveSitePolicyResourceState Notified1;
    public static InactiveSitePolicyResourceState Notified2;
    public static InactiveSitePolicyResourceState Notified3;
    public static InactiveSitePolicyResourceState Locked;
    public static InactiveSitePolicyResourceState Deleted;
    public static InactiveSitePolicyResourceState Unactioned;
    public static InactiveSitePolicyResourceState AlreadyActioned;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.InactiveSitePolicyResourceStorage")]
public class Microsoft.SharePoint.Administration.TenantAdmin.InactiveSitePolicyResourceStorage : ClientValueObject {
    private DateTime m_createdOn;
    private DateTime m_lastScopedOn;
    private DateTime m_lastTransitionedOn;
    private FieldLookupValue m_lookupSiteId;
    private string m_notificationData;
    private PolicyNotificationStatus m_notificationStatus;
    private Guid m_resourceId;
    private PolicyResourceState m_resourceState;
    private string m_resourceStateTransitionData;
    private PolicyResourceType m_resourceType;
    private DateTime m_updatedOn;
    private string m_userResponses;
    [RemoteAttribute]
public DateTime createdOn { get; public set; }
    [RemoteAttribute]
public DateTime lastScopedOn { get; public set; }
    [RemoteAttribute]
public DateTime lastTransitionedOn { get; public set; }
    [RemoteAttribute]
public FieldLookupValue lookupSiteId { get; public set; }
    [RemoteAttribute]
public string notificationData { get; public set; }
    [RemoteAttribute]
public PolicyNotificationStatus notificationStatus { get; public set; }
    [RemoteAttribute]
public Guid resourceId { get; public set; }
    [RemoteAttribute]
public PolicyResourceState resourceState { get; public set; }
    [RemoteAttribute]
public string resourceStateTransitionData { get; public set; }
    [RemoteAttribute]
public PolicyResourceType resourceType { get; public set; }
    [RemoteAttribute]
public DateTime updatedOn { get; public set; }
    [RemoteAttribute]
public string userResponses { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_createdOn();
    public void set_createdOn(DateTime value);
    public DateTime get_lastScopedOn();
    public void set_lastScopedOn(DateTime value);
    public DateTime get_lastTransitionedOn();
    public void set_lastTransitionedOn(DateTime value);
    public FieldLookupValue get_lookupSiteId();
    public void set_lookupSiteId(FieldLookupValue value);
    public string get_notificationData();
    public void set_notificationData(string value);
    public PolicyNotificationStatus get_notificationStatus();
    public void set_notificationStatus(PolicyNotificationStatus value);
    public Guid get_resourceId();
    public void set_resourceId(Guid value);
    public PolicyResourceState get_resourceState();
    public void set_resourceState(PolicyResourceState value);
    public string get_resourceStateTransitionData();
    public void set_resourceStateTransitionData(string value);
    public PolicyResourceType get_resourceType();
    public void set_resourceType(PolicyResourceType value);
    public DateTime get_updatedOn();
    public void set_updatedOn(DateTime value);
    public string get_userResponses();
    public void set_userResponses(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.InactiveSitePolicyResourceStorageColumnName : Enum {
    public int value__;
    public static InactiveSitePolicyResourceStorageColumnName Unknown;
    public static InactiveSitePolicyResourceStorageColumnName ResourceId;
    public static InactiveSitePolicyResourceStorageColumnName ResourceType;
    public static InactiveSitePolicyResourceStorageColumnName ResourceState;
    public static InactiveSitePolicyResourceStorageColumnName LastScopedOn;
    public static InactiveSitePolicyResourceStorageColumnName CreatedOn;
    public static InactiveSitePolicyResourceStorageColumnName UpdatedOn;
    public static InactiveSitePolicyResourceStorageColumnName LookupSiteId;
    public static InactiveSitePolicyResourceStorageColumnName ResourceStateTransitionData;
    public static InactiveSitePolicyResourceStorageColumnName NotificationData;
    public static InactiveSitePolicyResourceStorageColumnName NotificationStatus;
    public static InactiveSitePolicyResourceStorageColumnName UserResponses;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.InactiveSitePolicyResourceType : Enum {
    public int value__;
    public static InactiveSitePolicyResourceType Unknown;
    public static InactiveSitePolicyResourceType Site;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.InsightsSummaryResponse")]
public class Microsoft.SharePoint.Administration.TenantAdmin.InsightsSummaryResponse : ClientValueObject {
    private string m_insightsSummary;
    private int m_totalPagedCount;
    [RemoteAttribute]
public string insightsSummary { get; public set; }
    [RemoteAttribute]
public int totalPagedCount { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_insightsSummary();
    public void set_insightsSummary(string value);
    public int get_totalPagedCount();
    public void set_totalPagedCount(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.ModifiedProperty")]
public class Microsoft.SharePoint.Administration.TenantAdmin.ModifiedProperty : ClientValueObject {
    private string m_name;
    private string m_newValue;
    private string m_oldValue;
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string NewValue { get; public set; }
    [RemoteAttribute]
public string OldValue { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Name();
    public void set_Name(string value);
    public string get_NewValue();
    public void set_NewValue(string value);
    public string get_OldValue();
    public void set_OldValue(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.OwnershipPolicyResourceStorage")]
public class Microsoft.SharePoint.Administration.TenantAdmin.OwnershipPolicyResourceStorage : ClientValueObject {
    private DateTime m_createdOn;
    private DateTime m_lastScopedOn;
    private FieldLookupValue m_lookupSiteId;
    private string m_notificationData;
    private PolicyNotificationStatus m_notificationStatus;
    private string m_policyActionLog;
    private Guid m_resourceId;
    private PolicyResourceState m_resourceState;
    private string m_resourceStateTransitionData;
    private PolicyResourceType m_resourceType;
    private DateTime m_updatedOn;
    private string m_userResponses;
    [RemoteAttribute]
public DateTime createdOn { get; public set; }
    [RemoteAttribute]
public DateTime lastScopedOn { get; public set; }
    [RemoteAttribute]
public FieldLookupValue lookupSiteId { get; public set; }
    [RemoteAttribute]
public string notificationData { get; public set; }
    [RemoteAttribute]
public PolicyNotificationStatus notificationStatus { get; public set; }
    [RemoteAttribute]
public string policyActionLog { get; public set; }
    [RemoteAttribute]
public Guid resourceId { get; public set; }
    [RemoteAttribute]
public PolicyResourceState resourceState { get; public set; }
    [RemoteAttribute]
public string resourceStateTransitionData { get; public set; }
    [RemoteAttribute]
public PolicyResourceType resourceType { get; public set; }
    [RemoteAttribute]
public DateTime updatedOn { get; public set; }
    [RemoteAttribute]
public string userResponses { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_createdOn();
    public void set_createdOn(DateTime value);
    public DateTime get_lastScopedOn();
    public void set_lastScopedOn(DateTime value);
    public FieldLookupValue get_lookupSiteId();
    public void set_lookupSiteId(FieldLookupValue value);
    public string get_notificationData();
    public void set_notificationData(string value);
    public PolicyNotificationStatus get_notificationStatus();
    public void set_notificationStatus(PolicyNotificationStatus value);
    public string get_policyActionLog();
    public void set_policyActionLog(string value);
    public Guid get_resourceId();
    public void set_resourceId(Guid value);
    public PolicyResourceState get_resourceState();
    public void set_resourceState(PolicyResourceState value);
    public string get_resourceStateTransitionData();
    public void set_resourceStateTransitionData(string value);
    public PolicyResourceType get_resourceType();
    public void set_resourceType(PolicyResourceType value);
    public DateTime get_updatedOn();
    public void set_updatedOn(DateTime value);
    public string get_userResponses();
    public void set_userResponses(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.OwnershipPolicyResourceStorageColumnName : Enum {
    public int value__;
    public static OwnershipPolicyResourceStorageColumnName Unknown;
    public static OwnershipPolicyResourceStorageColumnName ResourceId;
    public static OwnershipPolicyResourceStorageColumnName ResourceType;
    public static OwnershipPolicyResourceStorageColumnName ResourceState;
    public static OwnershipPolicyResourceStorageColumnName LastScopedOn;
    public static OwnershipPolicyResourceStorageColumnName CreatedOn;
    public static OwnershipPolicyResourceStorageColumnName UpdatedOn;
    public static OwnershipPolicyResourceStorageColumnName LookupSiteId;
    public static OwnershipPolicyResourceStorageColumnName ResourceStateTransitionData;
    public static OwnershipPolicyResourceStorageColumnName NotificationStatus;
    public static OwnershipPolicyResourceStorageColumnName NotificationData;
    public static OwnershipPolicyResourceStorageColumnName PolicyActionLog;
    public static OwnershipPolicyResourceStorageColumnName UserResponses;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.PageResponse")]
public class Microsoft.SharePoint.Administration.TenantAdmin.PageResponse : ClientValueObject {
    private string m_continuationToken;
    private int m_pageNumber;
    private IEnumerable`1<AuditSearchRequestStatus> m_pageResult;
    private int m_pageSize;
    private int m_totalCount;
    private int m_totalPages;
    [RemoteAttribute]
public string ContinuationToken { get; public set; }
    [RemoteAttribute]
public int PageNumber { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<AuditSearchRequestStatus> PageResult { get; public set; }
    [RemoteAttribute]
public int PageSize { get; public set; }
    [RemoteAttribute]
public int TotalCount { get; public set; }
    [RemoteAttribute]
public int TotalPages { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ContinuationToken();
    public void set_ContinuationToken(string value);
    public int get_PageNumber();
    public void set_PageNumber(int value);
    public IEnumerable`1<AuditSearchRequestStatus> get_PageResult();
    public void set_PageResult(IEnumerable`1<AuditSearchRequestStatus> value);
    public int get_PageSize();
    public void set_PageSize(int value);
    public int get_TotalCount();
    public void set_TotalCount(int value);
    public int get_TotalPages();
    public void set_TotalPages(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.Parameter")]
public class Microsoft.SharePoint.Administration.TenantAdmin.Parameter : ClientValueObject {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyDefinitionColumn : Enum {
    public int value__;
    public static PolicyDefinitionColumn Unknown;
    public static PolicyDefinitionColumn CreatedBy;
    public static PolicyDefinitionColumn CreatedTime;
    public static PolicyDefinitionColumn LastUpdatedTime;
    public static PolicyDefinitionColumn PolicyCustomName;
    public static PolicyDefinitionColumn PolicyDefinitionDetails;
    public static PolicyDefinitionColumn PolicyDeleteReason;
    public static PolicyDefinitionColumn PolicyDescription;
    public static PolicyDefinitionColumn PolicyFrequencyUnit;
    public static PolicyDefinitionColumn PolicyFrequencyValue;
    public static PolicyDefinitionColumn PolicyId;
    public static PolicyDefinitionColumn PolicyState;
    public static PolicyDefinitionColumn PolicyTags;
    public static PolicyDefinitionColumn PolicyTemplate;
    public static PolicyDefinitionColumn PolicyType;
    public static PolicyDefinitionColumn PolicyVersion;
    public static PolicyDefinitionColumn UpdatedBy;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyDefinitionState : Enum {
    public int value__;
    public static PolicyDefinitionState Unknown;
    public static PolicyDefinitionState Enabled;
    public static PolicyDefinitionState Disabled;
    public static PolicyDefinitionState Deleted;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyExecutionStatus : Enum {
    public int value__;
    public static PolicyExecutionStatus Unknown;
    public static PolicyExecutionStatus Scheduled;
    public static PolicyExecutionStatus Running;
    public static PolicyExecutionStatus Success;
    public static PolicyExecutionStatus Failure;
    public static PolicyExecutionStatus Abandoned;
    public static PolicyExecutionStatus Created;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyFrequencyUnits : Enum {
    public int value__;
    public static PolicyFrequencyUnits Unknown;
    public static PolicyFrequencyUnits Daily;
    public static PolicyFrequencyUnits Weekly;
    public static PolicyFrequencyUnits Monthly;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyNotificationStatus : Enum {
    public int value__;
    public static PolicyNotificationStatus Unknown;
    public static PolicyNotificationStatus Notified;
    public static PolicyNotificationStatus Responded;
    public static PolicyNotificationStatus Unattended;
    public static PolicyNotificationStatus Unnotified;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyReportHeader : Enum {
    public int value__;
    public static PolicyReportHeader Action;
    public static PolicyReportHeader ActionStatus;
    public static PolicyReportHeader ActionStatusOfPolicy;
    public static PolicyReportHeader ActiveSiteMemberUserInfoList;
    public static PolicyReportHeader DateCreated;
    public static PolicyReportHeader DaysSinceFirstNotification;
    public static PolicyReportHeader EnforcedOn;
    public static PolicyReportHeader FirstScopedOn;
    public static PolicyReportHeader IsSiteRetained;
    public static PolicyReportHeader IsTeamsConnected;
    public static PolicyReportHeader LastAttestationDate;
    public static PolicyReportHeader LastSiteActivityOn;
    public static PolicyReportHeader ManagerOfPreviousOwnerUserInfoList;
    public static PolicyReportHeader MinimumOwnerCount;
    public static PolicyReportHeader NextSiteLifeCycleStatus;
    public static PolicyReportHeader NotifiedActiveSiteMemberEmailList;
    public static PolicyReportHeader NotifiedManagerOfPreviousOwnerEmailList;
    public static PolicyReportHeader NotifiedSiteAdminEmailList;
    public static PolicyReportHeader NotifiedSiteOwnerEmailList;
    public static PolicyReportHeader PolicyNotificationStatus;
    public static PolicyReportHeader ReadOnlyDuration;
    public static PolicyReportHeader SensitivityLabel;
    public static PolicyReportHeader SiteAdminCount;
    public static PolicyReportHeader SiteAdminEmailList;
    public static PolicyReportHeader SiteOwnerCount;
    public static PolicyReportHeader SiteOwnerEmailList;
    public static PolicyReportHeader StorageUsed;
    public static PolicyReportHeader Template;
    public static PolicyReportHeader Title;
    public static PolicyReportHeader TotalNotificationCount;
    public static PolicyReportHeader Url;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyResourceState : Enum {
    public int value__;
    public static PolicyResourceState Unknown;
    public static PolicyResourceState Archived;
    public static PolicyResourceState Deleted;
    public static PolicyResourceState ReadOnlyLocked;
    public static PolicyResourceState Unactioned;
    public static PolicyResourceState AlreadyActioned;
    public static PolicyResourceState Active;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.PolicyResourceStorage")]
public class Microsoft.SharePoint.Administration.TenantAdmin.PolicyResourceStorage : ClientValueObject {
    private DateTime m_createdOn;
    private DateTime m_lastScopedOn;
    private FieldLookupValue m_lookupSiteId;
    private string m_notificationData;
    private PolicyNotificationStatus m_notificationStatus;
    private string m_policyActionLog;
    private Guid m_resourceId;
    private PolicyResourceState m_resourceState;
    private string m_resourceStateTransitionData;
    private PolicyResourceType m_resourceType;
    private DateTime m_updatedOn;
    private string m_userResponses;
    [RemoteAttribute]
public DateTime createdOn { get; public set; }
    [RemoteAttribute]
public DateTime lastScopedOn { get; public set; }
    [RemoteAttribute]
public FieldLookupValue lookupSiteId { get; public set; }
    [RemoteAttribute]
public string notificationData { get; public set; }
    [RemoteAttribute]
public PolicyNotificationStatus notificationStatus { get; public set; }
    [RemoteAttribute]
public string policyActionLog { get; public set; }
    [RemoteAttribute]
public Guid resourceId { get; public set; }
    [RemoteAttribute]
public PolicyResourceState resourceState { get; public set; }
    [RemoteAttribute]
public string resourceStateTransitionData { get; public set; }
    [RemoteAttribute]
public PolicyResourceType resourceType { get; public set; }
    [RemoteAttribute]
public DateTime updatedOn { get; public set; }
    [RemoteAttribute]
public string userResponses { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_createdOn();
    public void set_createdOn(DateTime value);
    public DateTime get_lastScopedOn();
    public void set_lastScopedOn(DateTime value);
    public FieldLookupValue get_lookupSiteId();
    public void set_lookupSiteId(FieldLookupValue value);
    public string get_notificationData();
    public void set_notificationData(string value);
    public PolicyNotificationStatus get_notificationStatus();
    public void set_notificationStatus(PolicyNotificationStatus value);
    public string get_policyActionLog();
    public void set_policyActionLog(string value);
    public Guid get_resourceId();
    public void set_resourceId(Guid value);
    public PolicyResourceState get_resourceState();
    public void set_resourceState(PolicyResourceState value);
    public string get_resourceStateTransitionData();
    public void set_resourceStateTransitionData(string value);
    public PolicyResourceType get_resourceType();
    public void set_resourceType(PolicyResourceType value);
    public DateTime get_updatedOn();
    public void set_updatedOn(DateTime value);
    public string get_userResponses();
    public void set_userResponses(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyResourceStorageColumnName : Enum {
    public int value__;
    public static PolicyResourceStorageColumnName Unknown;
    public static PolicyResourceStorageColumnName ResourceId;
    public static PolicyResourceStorageColumnName ResourceType;
    public static PolicyResourceStorageColumnName ResourceState;
    public static PolicyResourceStorageColumnName LastScopedOn;
    public static PolicyResourceStorageColumnName CreatedOn;
    public static PolicyResourceStorageColumnName UpdatedOn;
    public static PolicyResourceStorageColumnName LookupSiteId;
    public static PolicyResourceStorageColumnName ResourceStateTransitionData;
    public static PolicyResourceStorageColumnName NotificationStatus;
    public static PolicyResourceStorageColumnName NotificationData;
    public static PolicyResourceStorageColumnName PolicyActionLog;
    public static PolicyResourceStorageColumnName UserResponses;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyResourceType : Enum {
    public int value__;
    public static PolicyResourceType Unknown;
    public static PolicyResourceType Site;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyTagValue : Enum {
    public int value__;
    public static PolicyTagValue Unknown;
    public static PolicyTagValue ModifyExecutionFrequency;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyTemplate : Enum {
    public int value__;
    public static PolicyTemplate Unknown;
    public static PolicyTemplate InactivePolicy;
    public static PolicyTemplate OwnershipPolicy;
    public static PolicyTemplate AttestationPolicy;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyTypes : Enum {
    public int value__;
    public static PolicyTypes Unknown;
    public static PolicyTypes Custom;
    public static PolicyTypes Internal;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.PolicyWorkItemType : Enum {
    public int value__;
    public static PolicyWorkItemType Unknown;
    public static PolicyWorkItemType Parent;
    public static PolicyWorkItemType Child;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.RansomwareActivityColumn : Enum {
    public int value__;
    public static RansomwareActivityColumn Unknown;
    public static RansomwareActivityColumn ActivityId;
    public static RansomwareActivityColumn ActivityGeneratedOn;
    public static RansomwareActivityColumn AssignedTo;
    public static RansomwareActivityColumn Category;
    public static RansomwareActivityColumn Classification;
    public static RansomwareActivityColumn CreatedTime;
    public static RansomwareActivityColumn DetectionSource;
    public static RansomwareActivityColumn DriveId;
    public static RansomwareActivityColumn EventId;
    public static RansomwareActivityColumn FirstActivity;
    public static RansomwareActivityColumn ImpactedAssetLocation;
    public static RansomwareActivityColumn ImpactedAssets;
    public static RansomwareActivityColumn ImpactedAssetsCount;
    public static RansomwareActivityColumn ImpactedAssetsUserCount;
    public static RansomwareActivityColumn ImpactedDocLibName;
    public static RansomwareActivityColumn InvestigationState;
    public static RansomwareActivityColumn LastActivity;
    public static RansomwareActivityColumn LastUpdatedTime;
    public static RansomwareActivityColumn RansomwareDetectionReason;
    public static RansomwareActivityColumn RansomwareDetectionScore;
    public static RansomwareActivityColumn SiteId;
    public static RansomwareActivityColumn SiteOwner;
    public static RansomwareActivityColumn SiteType;
    public static RansomwareActivityColumn SiteName;
    public static RansomwareActivityColumn SiteUrl;
    public static RansomwareActivityColumn Status;
    public static RansomwareActivityColumn SyncStatus;
    public static RansomwareActivityColumn TagId;
    public static RansomwareActivityColumn UpdatedBy;
    public static RansomwareActivityColumn WebId;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.RansomwareActivitySiteType : Enum {
    public int value__;
    public static RansomwareActivitySiteType Unknown;
    public static RansomwareActivitySiteType OneDrive;
    public static RansomwareActivitySiteType SharePoint;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.RansomwareActivityStatus : Enum {
    public int value__;
    public static RansomwareActivityStatus Unknown;
    public static RansomwareActivityStatus Open;
    public static RansomwareActivityStatus Active;
    public static RansomwareActivityStatus InProgress;
    public static RansomwareActivityStatus Resolved;
    public static RansomwareActivityStatus ResolvedByEvent;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.RansomwareActivitySyncStatus : Enum {
    public int value__;
    public static RansomwareActivitySyncStatus Unknown;
    public static RansomwareActivitySyncStatus Paused;
    public static RansomwareActivitySyncStatus Resynced;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.RansomwareClassification : Enum {
    public int value__;
    public static RansomwareClassification Unknown;
    public static RansomwareClassification TruePositiveRansomwareConfirmed;
    public static RansomwareClassification BenignPositive;
    public static RansomwareClassification FalsePositive;
    public static RansomwareClassification Undetermined;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.RansomwareEventColumn : Enum {
    public int value__;
    public static RansomwareEventColumn Unknown;
    public static RansomwareEventColumn AssignedTo;
    public static RansomwareEventColumn Category;
    public static RansomwareEventColumn Classification;
    public static RansomwareEventColumn CreatedTime;
    public static RansomwareEventColumn Determination;
    public static RansomwareEventColumn EventId;
    public static RansomwareEventColumn FirstOccurrence;
    public static RansomwareEventColumn LastUpdatedTime;
    public static RansomwareEventColumn LastOccurrence;
    public static RansomwareEventColumn InvestigationState;
    public static RansomwareEventColumn Severity;
    public static RansomwareEventColumn Status;
    public static RansomwareEventColumn TagId;
    public static RansomwareEventColumn UpdatedBy;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.RansomwareEventStatus : Enum {
    public int value__;
    public static RansomwareEventStatus Unknown;
    public static RansomwareEventStatus CollectingData;
    public static RansomwareEventStatus Open;
    public static RansomwareEventStatus Active;
    public static RansomwareEventStatus InProgress;
    public static RansomwareEventStatus Resolved;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.RansomwareInvestigationState : Enum {
    public int value__;
    public static RansomwareInvestigationState Unknown;
    public static RansomwareInvestigationState NotStarted;
    public static RansomwareInvestigationState Restored;
    public static RansomwareInvestigationState Started;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.RansomwareProperties")]
public class Microsoft.SharePoint.Administration.TenantAdmin.RansomwareProperties : ClientValueObject {
    private DateTime m_activityGeneratedOn;
    private Guid m_activityId;
    private ContentEventCategory m_category;
    private string m_detectionSource;
    private string m_driveId;
    private DateTime m_firstActivity;
    private string m_impactedAssetLocation;
    private string m_impactedDocLibName;
    private RansomwareActivitySiteType m_impactedSiteType;
    private DateTime m_lastActivity;
    private string m_ransomwareDetectionReason;
    private double m_ransomwareDetectionScore;
    private string m_siteLabelId;
    private string m_siteLabelName;
    private string m_siteName;
    private string m_siteOwnerName;
    private Guid m_siteSubscriptionId;
    private string m_siteUrl;
    [RemoteAttribute]
public DateTime activityGeneratedOn { get; public set; }
    [RemoteAttribute]
public Guid activityId { get; public set; }
    [RemoteAttribute]
public ContentEventCategory category { get; public set; }
    [RemoteAttribute]
public string detectionSource { get; public set; }
    [RemoteAttribute]
public string driveId { get; public set; }
    [RemoteAttribute]
public DateTime firstActivity { get; public set; }
    [RemoteAttribute]
public string impactedAssetLocation { get; public set; }
    [RemoteAttribute]
public string impactedDocLibName { get; public set; }
    [RemoteAttribute]
public RansomwareActivitySiteType impactedSiteType { get; public set; }
    [RemoteAttribute]
public DateTime lastActivity { get; public set; }
    [RemoteAttribute]
public string ransomwareDetectionReason { get; public set; }
    [RemoteAttribute]
public double ransomwareDetectionScore { get; public set; }
    [RemoteAttribute]
public string siteLabelId { get; public set; }
    [RemoteAttribute]
public string siteLabelName { get; public set; }
    [RemoteAttribute]
public string siteName { get; public set; }
    [RemoteAttribute]
public string siteOwnerName { get; public set; }
    [RemoteAttribute]
public Guid siteSubscriptionId { get; }
    [RemoteAttribute]
public string siteUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_activityGeneratedOn();
    public void set_activityGeneratedOn(DateTime value);
    public Guid get_activityId();
    public void set_activityId(Guid value);
    public ContentEventCategory get_category();
    public void set_category(ContentEventCategory value);
    public string get_detectionSource();
    public void set_detectionSource(string value);
    public string get_driveId();
    public void set_driveId(string value);
    public DateTime get_firstActivity();
    public void set_firstActivity(DateTime value);
    public string get_impactedAssetLocation();
    public void set_impactedAssetLocation(string value);
    public string get_impactedDocLibName();
    public void set_impactedDocLibName(string value);
    public RansomwareActivitySiteType get_impactedSiteType();
    public void set_impactedSiteType(RansomwareActivitySiteType value);
    public DateTime get_lastActivity();
    public void set_lastActivity(DateTime value);
    public string get_ransomwareDetectionReason();
    public void set_ransomwareDetectionReason(string value);
    public double get_ransomwareDetectionScore();
    public void set_ransomwareDetectionScore(double value);
    public string get_siteLabelId();
    public void set_siteLabelId(string value);
    public string get_siteLabelName();
    public void set_siteLabelName(string value);
    public string get_siteName();
    public void set_siteName(string value);
    public string get_siteOwnerName();
    public void set_siteOwnerName(string value);
    public Guid get_siteSubscriptionId();
    public string get_siteUrl();
    public void set_siteUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.RansomwareReportNameType : Enum {
    public int value__;
    public static RansomwareReportNameType Unknown;
    public static RansomwareReportNameType ContentEventsRansomwareReport;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.RansomwareSeverity : Enum {
    public int value__;
    public static RansomwareSeverity Unknown;
    public static RansomwareSeverity High;
    public static RansomwareSeverity Low;
    public static RansomwareSeverity Medium;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.RecentAdminActionReport")]
public class Microsoft.SharePoint.Administration.TenantAdmin.RecentAdminActionReport : ClientValueObject {
    private string m_actions;
    private string m_createdByEmail;
    private string m_createdByName;
    private DateTime m_createdDate;
    private string m_downloadLink;
    private string m_name;
    private long m_numberOfRecords;
    private double m_progressPercentage;
    private DateTime m_queryEndDate;
    private DateTime m_queryStartDate;
    private ChangeHistoryReportType m_reportType;
    private Guid m_requestId;
    private string m_sites;
    private Guid m_sPOCorrelationId;
    private RecentAdminActionReportStatus m_status;
    private Guid m_uALCorrelationId;
    private long m_uALNumberOfRecords;
    private string m_users;
    [RemoteAttribute]
public string actions { get; public set; }
    [RemoteAttribute]
public string createdByEmail { get; public set; }
    [RemoteAttribute]
public string createdByName { get; public set; }
    [RemoteAttribute]
public DateTime createdDate { get; public set; }
    [RemoteAttribute]
public string downloadLink { get; public set; }
    [RemoteAttribute]
public string name { get; public set; }
    [RemoteAttribute]
public long numberOfRecords { get; public set; }
    [RemoteAttribute]
public double progressPercentage { get; public set; }
    [RemoteAttribute]
public DateTime queryEndDate { get; public set; }
    [RemoteAttribute]
public DateTime queryStartDate { get; public set; }
    [RemoteAttribute]
public ChangeHistoryReportType reportType { get; public set; }
    [RemoteAttribute]
public Guid requestId { get; public set; }
    [RemoteAttribute]
public string sites { get; public set; }
    [RemoteAttribute]
public Guid sPOCorrelationId { get; public set; }
    [RemoteAttribute]
public RecentAdminActionReportStatus status { get; public set; }
    [RemoteAttribute]
public Guid uALCorrelationId { get; public set; }
    [RemoteAttribute]
public long uALNumberOfRecords { get; public set; }
    [RemoteAttribute]
public string users { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_actions();
    public void set_actions(string value);
    public string get_createdByEmail();
    public void set_createdByEmail(string value);
    public string get_createdByName();
    public void set_createdByName(string value);
    public DateTime get_createdDate();
    public void set_createdDate(DateTime value);
    public string get_downloadLink();
    public void set_downloadLink(string value);
    public string get_name();
    public void set_name(string value);
    public long get_numberOfRecords();
    public void set_numberOfRecords(long value);
    public double get_progressPercentage();
    public void set_progressPercentage(double value);
    public DateTime get_queryEndDate();
    public void set_queryEndDate(DateTime value);
    public DateTime get_queryStartDate();
    public void set_queryStartDate(DateTime value);
    public ChangeHistoryReportType get_reportType();
    public void set_reportType(ChangeHistoryReportType value);
    public Guid get_requestId();
    public void set_requestId(Guid value);
    public string get_sites();
    public void set_sites(string value);
    public Guid get_sPOCorrelationId();
    public void set_sPOCorrelationId(Guid value);
    public RecentAdminActionReportStatus get_status();
    public void set_status(RecentAdminActionReportStatus value);
    public Guid get_uALCorrelationId();
    public void set_uALCorrelationId(Guid value);
    public long get_uALNumberOfRecords();
    public void set_uALNumberOfRecords(long value);
    public string get_users();
    public void set_users(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.RecentAdminActionReportStatus : Enum {
    public int value__;
    public static RecentAdminActionReportStatus Unknown;
    public static RecentAdminActionReportStatus Cancelled;
    public static RecentAdminActionReportStatus Completed;
    public static RecentAdminActionReportStatus Created;
    public static RecentAdminActionReportStatus Failed;
    public static RecentAdminActionReportStatus InProgress;
    public static RecentAdminActionReportStatus PreparingForDownload;
    public static RecentAdminActionReportStatus Queued;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.RestrictedSearchStage : Enum {
    public int value__;
    public static RestrictedSearchStage Disabled;
    public static RestrictedSearchStage Enabled;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.SPContentEventsCustomEmailProperty")]
public class Microsoft.SharePoint.Administration.TenantAdmin.SPContentEventsCustomEmailProperty : ClientValueObject {
    private ContentEventCategory m_category;
    private IList`1<string> m_emailAddresses;
    [RemoteAttribute]
public ContentEventCategory Category { get; public set; }
    [RemoteAttribute]
public IList`1<string> EmailAddresses { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public ContentEventCategory get_Category();
    public void set_Category(ContentEventCategory value);
    public IList`1<string> get_EmailAddresses();
    public void set_EmailAddresses(IList`1<string> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.TargetProperty")]
public class Microsoft.SharePoint.Administration.TenantAdmin.TargetProperty : ClientValueObject {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.TeamsSitesActivityDetail")]
public class Microsoft.SharePoint.Administration.TenantAdmin.TeamsSitesActivityDetail : ClientValueObject {
    private DateTime m_lastActivityDate;
    private Guid m_teamId;
    [RemoteAttribute]
public DateTime LastActivityDate { get; public set; }
    [RemoteAttribute]
public Guid TeamId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_LastActivityDate();
    public void set_LastActivityDate(DateTime value);
    public Guid get_TeamId();
    public void set_TeamId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminActionSource : Enum {
    public int value__;
    public static TenantAdminActionSource Unknown;
    public static TenantAdminActionSource AzureActiveDirectory;
    public static TenantAdminActionSource ExchangeAdminCenter;
    public static TenantAdminActionSource Microsoft365AdminCenter;
    public static TenantAdminActionSource SecurityAndComplianceAdminCenter;
    public static TenantAdminActionSource SharePointAdminCenter;
    public static TenantAdminActionSource SharePointOnlineManagementShell;
    public static TenantAdminActionSource TeamsAdminCenter;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminActionStatus : Enum {
    public int value__;
    public static TenantAdminActionStatus Unknown;
    public static TenantAdminActionStatus Failed;
    public static TenantAdminActionStatus InProgress;
    public static TenantAdminActionStatus PartialSuccess;
    public static TenantAdminActionStatus Success;
    public static TenantAdminActionStatus Timeout;
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminActionType : Enum {
    public int value__;
    public static TenantAdminActionType Unknown;
    public static TenantAdminActionType ClassicSiteCreation;
    public static TenantAdminActionType HubSiteAssociation;
    public static TenantAdminActionType ModernSiteCreation;
    public static TenantAdminActionType RootSiteRestore;
    public static TenantAdminActionType SitePurgeDeletion;
    public static TenantAdminActionType SiteRestore;
    public static TenantAdminActionType SiteSoftDeletion;
    public static TenantAdminActionType SwappingSite;
    public static TenantAdminActionType UpdateAdmins;
    public static TenantAdminActionType UpdateGroupUsers;
    public static TenantAdminActionType UpdateHubSettings;
    public static TenantAdminActionType UpdateIBMode;
    public static TenantAdminActionType UpdateIBSegments;
    public static TenantAdminActionType UpdatePrimaryAdmin;
    public static TenantAdminActionType UpdateSecondaryAdmins;
    public static TenantAdminActionType UpdateSiteAddress;
    public static TenantAdminActionType UpdateSiteSensitivity;
    public static TenantAdminActionType UpdateSiteSharing;
    public static TenantAdminActionType UpdateSiteStorage;
    public static TenantAdminActionType UpdateSiteTitle;
    public static TenantAdminActionType UpdateSiteUserGroups;
    public static TenantAdminActionType RegisterHubSite;
    public static TenantAdminActionType UnregisterHubSite;
    public static TenantAdminActionType UpdateGroupOwners;
    public static TenantAdminActionType UpdateGroupMembers;
    public static TenantAdminActionType UpdateSiteAdmins;
    public static TenantAdminActionType UpdateSiteOwners;
    public static TenantAdminActionType UpdateSiteMembers;
    public static TenantAdminActionType UpdateSiteVisitors;
    public static TenantAdminActionType UpdateTeamDetails;
    public static TenantAdminActionType UpdateGroupDetails;
    public static TenantAdminActionType UpdateGroupSettings;
    public static TenantAdminActionType UpdateTeamsSettings;
    public static TenantAdminActionType UpdateExchangeSettings;
    public static TenantAdminActionType UpdateGroupEmail;
    public static TenantAdminActionType UpdateTeamEmail;
    public static TenantAdminActionType AddTeamToGroup;
    public static TenantAdminActionType ArchiveSite;
    public static TenantAdminActionType UnarchiveSite;
    public static TenantAdminActionType ArchivedSiteSoftDeletion;
    public static TenantAdminActionType ArchivedSiteRestore;
    public static TenantAdminActionType UpdateTeamMembers;
    public static TenantAdminActionType UpdateTeamOwners;
    public static TenantAdminActionType SoftUnarchiveSite;
    public static TenantAdminActionType UpdateRestrictedAccessSiteSetting;
    public static TenantAdminActionType UpdateCustomScriptsSetting;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminListItemColumnValue")]
public class Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminListItemColumnValue : ClientValueObject {
    private string m_columnName;
    private string m_columnValue;
    [RemoteAttribute]
public string columnName { get; public set; }
    [RemoteAttribute]
public string columnValue { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_columnName();
    public void set_columnName(string value);
    public string get_columnValue();
    public void set_columnValue(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminPolicyDefinition")]
public class Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminPolicyDefinition : ClientValueObject {
    private string m_createdBy;
    private DateTime m_lastUpdatedTime;
    private DateTime m_policyCreatedTime;
    private string m_policyCustomName;
    private string m_policyDefinitionDetails;
    private string m_policyDeleteReason;
    private string m_policyDescription;
    private PolicyFrequencyUnits m_policyFrequencyUnit;
    private int m_policyFrequencyValue;
    private Guid m_policyId;
    private PolicyDefinitionState m_policyState;
    private string m_policyTags;
    private PolicyTemplate m_policyTemplate;
    private PolicyTypes m_policyType;
    private int m_policyVersion;
    private string m_updatedBy;
    [RemoteAttribute]
public string createdBy { get; public set; }
    [RemoteAttribute]
public DateTime lastUpdatedTime { get; public set; }
    [RemoteAttribute]
public DateTime policyCreatedTime { get; public set; }
    [RemoteAttribute]
public string policyCustomName { get; public set; }
    [RemoteAttribute]
public string policyDefinitionDetails { get; public set; }
    [RemoteAttribute]
public string policyDeleteReason { get; public set; }
    [RemoteAttribute]
public string policyDescription { get; public set; }
    [RemoteAttribute]
public PolicyFrequencyUnits policyFrequencyUnit { get; public set; }
    [RemoteAttribute]
public int policyFrequencyValue { get; public set; }
    [RemoteAttribute]
public Guid policyId { get; public set; }
    [RemoteAttribute]
public PolicyDefinitionState policyState { get; public set; }
    [RemoteAttribute]
public string policyTags { get; public set; }
    [RemoteAttribute]
public PolicyTemplate policyTemplate { get; public set; }
    [RemoteAttribute]
public PolicyTypes policyType { get; public set; }
    [RemoteAttribute]
public int policyVersion { get; public set; }
    [RemoteAttribute]
public string updatedBy { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_createdBy();
    public void set_createdBy(string value);
    public DateTime get_lastUpdatedTime();
    public void set_lastUpdatedTime(DateTime value);
    public DateTime get_policyCreatedTime();
    public void set_policyCreatedTime(DateTime value);
    public string get_policyCustomName();
    public void set_policyCustomName(string value);
    public string get_policyDefinitionDetails();
    public void set_policyDefinitionDetails(string value);
    public string get_policyDeleteReason();
    public void set_policyDeleteReason(string value);
    public string get_policyDescription();
    public void set_policyDescription(string value);
    public PolicyFrequencyUnits get_policyFrequencyUnit();
    public void set_policyFrequencyUnit(PolicyFrequencyUnits value);
    public int get_policyFrequencyValue();
    public void set_policyFrequencyValue(int value);
    public Guid get_policyId();
    public void set_policyId(Guid value);
    public PolicyDefinitionState get_policyState();
    public void set_policyState(PolicyDefinitionState value);
    public string get_policyTags();
    public void set_policyTags(string value);
    public PolicyTemplate get_policyTemplate();
    public void set_policyTemplate(PolicyTemplate value);
    public PolicyTypes get_policyType();
    public void set_policyType(PolicyTypes value);
    public int get_policyVersion();
    public void set_policyVersion(int value);
    public string get_updatedBy();
    public void set_updatedBy(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminPolicyReport")]
public class Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminPolicyReport : ClientValueObject {
    private DateTime m_policyExecutionTime;
    private int m_policyExecutionId;
    private Guid m_policyId;
    private string m_policyReportDetails;
    private int m_policyVersion;
    private DateTime m_reportCreationTime;
    private DateTime m_reportUpdationTime;
    [RemoteAttribute]
public DateTime policyExecutionTime { get; public set; }
    [RemoteAttribute]
public int policyExecutionId { get; public set; }
    [RemoteAttribute]
public Guid policyId { get; public set; }
    [RemoteAttribute]
public string policyReportDetails { get; public set; }
    [RemoteAttribute]
public int policyVersion { get; public set; }
    [RemoteAttribute]
public DateTime reportCreationTime { get; public set; }
    [RemoteAttribute]
public DateTime reportUpdationTime { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_policyExecutionTime();
    public void set_policyExecutionTime(DateTime value);
    public int get_policyExecutionId();
    public void set_policyExecutionId(int value);
    public Guid get_policyId();
    public void set_policyId(Guid value);
    public string get_policyReportDetails();
    public void set_policyReportDetails(string value);
    public int get_policyVersion();
    public void set_policyVersion(int value);
    public DateTime get_reportCreationTime();
    public void set_reportCreationTime(DateTime value);
    public DateTime get_reportUpdationTime();
    public void set_reportUpdationTime(DateTime value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminRansomwareActivitiesOverview")]
public class Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminRansomwareActivitiesOverview : ClientValueObject {
    private DateTime m_firstActivityTime;
    private int m_impactedAssetsCount;
    private DateTime m_lastActivityTime;
    private int m_oneDriveActivityCount;
    private int m_sharePointActivityCount;
    private int m_totalActivitiesCount;
    private int m_unresolvedActivitiesCount;
    private int m_usersCount;
    [RemoteAttribute]
public DateTime firstActivityTime { get; public set; }
    [RemoteAttribute]
public int impactedAssetsCount { get; public set; }
    [RemoteAttribute]
public DateTime lastActivityTime { get; public set; }
    [RemoteAttribute]
public int oneDriveActivityCount { get; public set; }
    [RemoteAttribute]
public int sharePointActivityCount { get; public set; }
    [RemoteAttribute]
public int totalActivitiesCount { get; public set; }
    [RemoteAttribute]
public int unresolvedActivitiesCount { get; public set; }
    [RemoteAttribute]
public int usersCount { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_firstActivityTime();
    public void set_firstActivityTime(DateTime value);
    public int get_impactedAssetsCount();
    public void set_impactedAssetsCount(int value);
    public DateTime get_lastActivityTime();
    public void set_lastActivityTime(DateTime value);
    public int get_oneDriveActivityCount();
    public void set_oneDriveActivityCount(int value);
    public int get_sharePointActivityCount();
    public void set_sharePointActivityCount(int value);
    public int get_totalActivitiesCount();
    public void set_totalActivitiesCount(int value);
    public int get_unresolvedActivitiesCount();
    public void set_unresolvedActivitiesCount(int value);
    public int get_usersCount();
    public void set_usersCount(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminRansomwareActivity")]
public class Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminRansomwareActivity : ClientValueObject {
    private DateTime m_activityGeneratedOn;
    private Guid m_activityId;
    private string m_assignedTo;
    private ContentEventCategory m_category;
    private RansomwareClassification m_classification;
    private DateTime m_createdTime;
    private string m_detectionSource;
    private string m_driveId;
    private Guid m_eventId;
    private DateTime m_firstActivity;
    private string m_impactedAssetLocation;
    private string m_impactedAssets;
    private int m_impactedAssetsCount;
    private int m_impactedAssetsUserCount;
    private string m_impactedDocLibName;
    private RansomwareInvestigationState m_investigationState;
    private DateTime m_lastActivity;
    private DateTime m_lastUpdatedTime;
    private string m_ransomwareDetectionReason;
    private double m_ransomwareDetectionScore;
    private Guid m_siteId;
    private string m_siteName;
    private string m_siteOwner;
    private RansomwareActivitySiteType m_siteType;
    private string m_siteUrl;
    private RansomwareActivityStatus m_status;
    private RansomwareActivitySyncStatus m_syncStatus;
    private string m_tagId;
    private string m_updatedBy;
    private Guid m_webId;
    [RemoteAttribute]
public DateTime activityGeneratedOn { get; public set; }
    [RemoteAttribute]
public Guid activityId { get; public set; }
    [RemoteAttribute]
public string assignedTo { get; public set; }
    [RemoteAttribute]
public ContentEventCategory category { get; public set; }
    [RemoteAttribute]
public RansomwareClassification classification { get; public set; }
    [RemoteAttribute]
public DateTime createdTime { get; public set; }
    [RemoteAttribute]
public string detectionSource { get; public set; }
    [RemoteAttribute]
public string driveId { get; public set; }
    [RemoteAttribute]
public Guid eventId { get; public set; }
    [RemoteAttribute]
public DateTime firstActivity { get; public set; }
    [RemoteAttribute]
public string impactedAssetLocation { get; public set; }
    [RemoteAttribute]
public string impactedAssets { get; public set; }
    [RemoteAttribute]
public int impactedAssetsCount { get; public set; }
    [RemoteAttribute]
public int impactedAssetsUserCount { get; public set; }
    [RemoteAttribute]
public string impactedDocLibName { get; public set; }
    [RemoteAttribute]
public RansomwareInvestigationState investigationState { get; public set; }
    [RemoteAttribute]
public DateTime lastActivity { get; public set; }
    [RemoteAttribute]
public DateTime lastUpdatedTime { get; public set; }
    [RemoteAttribute]
public string ransomwareDetectionReason { get; public set; }
    [RemoteAttribute]
public double RansomwareDetectionScore { get; public set; }
    [RemoteAttribute]
public Guid siteId { get; public set; }
    [RemoteAttribute]
public string siteName { get; public set; }
    [RemoteAttribute]
public string siteOwner { get; public set; }
    [RemoteAttribute]
public RansomwareActivitySiteType siteType { get; public set; }
    [RemoteAttribute]
public string siteUrl { get; public set; }
    [RemoteAttribute]
public RansomwareActivityStatus status { get; public set; }
    [RemoteAttribute]
public RansomwareActivitySyncStatus syncStatus { get; public set; }
    [RemoteAttribute]
public string tagId { get; public set; }
    [RemoteAttribute]
public string updatedBy { get; public set; }
    [RemoteAttribute]
public Guid webId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_activityGeneratedOn();
    public void set_activityGeneratedOn(DateTime value);
    public Guid get_activityId();
    public void set_activityId(Guid value);
    public string get_assignedTo();
    public void set_assignedTo(string value);
    public ContentEventCategory get_category();
    public void set_category(ContentEventCategory value);
    public RansomwareClassification get_classification();
    public void set_classification(RansomwareClassification value);
    public DateTime get_createdTime();
    public void set_createdTime(DateTime value);
    public string get_detectionSource();
    public void set_detectionSource(string value);
    public string get_driveId();
    public void set_driveId(string value);
    public Guid get_eventId();
    public void set_eventId(Guid value);
    public DateTime get_firstActivity();
    public void set_firstActivity(DateTime value);
    public string get_impactedAssetLocation();
    public void set_impactedAssetLocation(string value);
    public string get_impactedAssets();
    public void set_impactedAssets(string value);
    public int get_impactedAssetsCount();
    public void set_impactedAssetsCount(int value);
    public int get_impactedAssetsUserCount();
    public void set_impactedAssetsUserCount(int value);
    public string get_impactedDocLibName();
    public void set_impactedDocLibName(string value);
    public RansomwareInvestigationState get_investigationState();
    public void set_investigationState(RansomwareInvestigationState value);
    public DateTime get_lastActivity();
    public void set_lastActivity(DateTime value);
    public DateTime get_lastUpdatedTime();
    public void set_lastUpdatedTime(DateTime value);
    public string get_ransomwareDetectionReason();
    public void set_ransomwareDetectionReason(string value);
    public double get_RansomwareDetectionScore();
    public void set_RansomwareDetectionScore(double value);
    public Guid get_siteId();
    public void set_siteId(Guid value);
    public string get_siteName();
    public void set_siteName(string value);
    public string get_siteOwner();
    public void set_siteOwner(string value);
    public RansomwareActivitySiteType get_siteType();
    public void set_siteType(RansomwareActivitySiteType value);
    public string get_siteUrl();
    public void set_siteUrl(string value);
    public RansomwareActivityStatus get_status();
    public void set_status(RansomwareActivityStatus value);
    public RansomwareActivitySyncStatus get_syncStatus();
    public void set_syncStatus(RansomwareActivitySyncStatus value);
    public string get_tagId();
    public void set_tagId(string value);
    public string get_updatedBy();
    public void set_updatedBy(string value);
    public Guid get_webId();
    public void set_webId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminRansomwareEvent")]
public class Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminRansomwareEvent : ClientValueObject {
    private string m_assignedTo;
    private ContentEventCategory m_category;
    private RansomwareClassification m_classification;
    private DateTime m_createdTime;
    private Guid m_eventId;
    private DateTime m_firstOccurrence;
    private RansomwareInvestigationState m_investigationState;
    private DateTime m_lastOccurrence;
    private DateTime m_lastUpdatedTime;
    private RansomwareSeverity m_severity;
    private RansomwareEventStatus m_status;
    private string m_tagId;
    private string m_updatedBy;
    [RemoteAttribute]
public string assignedTo { get; public set; }
    [RemoteAttribute]
public ContentEventCategory category { get; public set; }
    [RemoteAttribute]
public RansomwareClassification classification { get; public set; }
    [RemoteAttribute]
public DateTime createdTime { get; public set; }
    [RemoteAttribute]
public Guid eventId { get; public set; }
    [RemoteAttribute]
public DateTime firstOccurrence { get; public set; }
    [RemoteAttribute]
public RansomwareInvestigationState investigationState { get; public set; }
    [RemoteAttribute]
public DateTime lastOccurrence { get; public set; }
    [RemoteAttribute]
public DateTime lastUpdatedTime { get; public set; }
    [RemoteAttribute]
public RansomwareSeverity severity { get; public set; }
    [RemoteAttribute]
public RansomwareEventStatus status { get; public set; }
    [RemoteAttribute]
public string tagId { get; public set; }
    [RemoteAttribute]
public string updatedBy { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_assignedTo();
    public void set_assignedTo(string value);
    public ContentEventCategory get_category();
    public void set_category(ContentEventCategory value);
    public RansomwareClassification get_classification();
    public void set_classification(RansomwareClassification value);
    public DateTime get_createdTime();
    public void set_createdTime(DateTime value);
    public Guid get_eventId();
    public void set_eventId(Guid value);
    public DateTime get_firstOccurrence();
    public void set_firstOccurrence(DateTime value);
    public RansomwareInvestigationState get_investigationState();
    public void set_investigationState(RansomwareInvestigationState value);
    public DateTime get_lastOccurrence();
    public void set_lastOccurrence(DateTime value);
    public DateTime get_lastUpdatedTime();
    public void set_lastUpdatedTime(DateTime value);
    public RansomwareSeverity get_severity();
    public void set_severity(RansomwareSeverity value);
    public RansomwareEventStatus get_status();
    public void set_status(RansomwareEventStatus value);
    public string get_tagId();
    public void set_tagId(string value);
    public string get_updatedBy();
    public void set_updatedBy(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminRansomwareEventsOverview")]
public class Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminRansomwareEventsOverview : ClientValueObject {
    private int m_activeEventsCount;
    private int m_openEventsCount;
    [RemoteAttribute]
public int activeEventsCount { get; public set; }
    [RemoteAttribute]
public int openEventsCount { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_activeEventsCount();
    public void set_activeEventsCount(int value);
    public int get_openEventsCount();
    public void set_openEventsCount(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminRecentAction")]
public class Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminRecentAction : ClientValueObject {
    private string m_adminActionId;
    private TenantAdminActionSource m_adminActionSource;
    private TenantAdminActionStatus m_adminActionStatus;
    private TenantAdminActionType m_adminActionType;
    private Guid m_correlationId;
    private DateTime m_createdTime;
    private bool m_isPartOfBulkUpdate;
    private string m_key;
    private string m_name;
    private string m_newValue;
    private string m_oldValue;
    private string m_type;
    private string m_url;
    private string m_userEmail;
    [RemoteAttribute]
public string adminActionId { get; public set; }
    [RemoteAttribute]
public TenantAdminActionSource adminActionSource { get; public set; }
    [RemoteAttribute]
public TenantAdminActionStatus adminActionStatus { get; public set; }
    [RemoteAttribute]
public TenantAdminActionType adminActionType { get; public set; }
    [RemoteAttribute]
public Guid correlationId { get; public set; }
    [RemoteAttribute]
public DateTime createdTime { get; public set; }
    [RemoteAttribute]
public bool isPartOfBulkUpdate { get; public set; }
    [RemoteAttribute]
public string key { get; public set; }
    [RemoteAttribute]
public string name { get; public set; }
    [RemoteAttribute]
public string newValue { get; public set; }
    [RemoteAttribute]
public string oldValue { get; public set; }
    [RemoteAttribute]
public string type { get; public set; }
    [RemoteAttribute]
public string url { get; public set; }
    [RemoteAttribute]
public string userEmail { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_adminActionId();
    public void set_adminActionId(string value);
    public TenantAdminActionSource get_adminActionSource();
    public void set_adminActionSource(TenantAdminActionSource value);
    public TenantAdminActionStatus get_adminActionStatus();
    public void set_adminActionStatus(TenantAdminActionStatus value);
    public TenantAdminActionType get_adminActionType();
    public void set_adminActionType(TenantAdminActionType value);
    public Guid get_correlationId();
    public void set_correlationId(Guid value);
    public DateTime get_createdTime();
    public void set_createdTime(DateTime value);
    public bool get_isPartOfBulkUpdate();
    public void set_isPartOfBulkUpdate(bool value);
    public string get_key();
    public void set_key(string value);
    public string get_name();
    public void set_name(string value);
    public string get_newValue();
    public void set_newValue(string value);
    public string get_oldValue();
    public void set_oldValue(string value);
    public string get_type();
    public void set_type(string value);
    public string get_url();
    public void set_url(string value);
    public string get_userEmail();
    public void set_userEmail(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminRecentActionPayload")]
public class Microsoft.SharePoint.Administration.TenantAdmin.TenantAdminRecentActionPayload : ClientValueObject {
    private string m_adminActionId;
    private string m_adminActionSource;
    private string m_adminActionStatus;
    private string m_adminActionType;
    private Guid m_correlationId;
    private DateTime m_createdTime;
    private bool m_isPartOfBulkUpdate;
    private string m_key;
    private string m_name;
    private string m_newValue;
    private string m_oldValue;
    private string m_url;
    private string m_userEmail;
    [RemoteAttribute]
public string adminActionId { get; public set; }
    [RemoteAttribute]
public string adminActionSource { get; public set; }
    [RemoteAttribute]
public string adminActionStatus { get; public set; }
    [RemoteAttribute]
public string adminActionType { get; public set; }
    [RemoteAttribute]
public Guid correlationId { get; public set; }
    [RemoteAttribute]
public DateTime createdTime { get; public set; }
    [RemoteAttribute]
public bool isPartOfBulkUpdate { get; public set; }
    [RemoteAttribute]
public string key { get; public set; }
    [RemoteAttribute]
public string name { get; public set; }
    [RemoteAttribute]
public string newValue { get; public set; }
    [RemoteAttribute]
public string oldValue { get; public set; }
    [RemoteAttribute]
public string url { get; public set; }
    [RemoteAttribute]
public string userEmail { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_adminActionId();
    public void set_adminActionId(string value);
    public string get_adminActionSource();
    public void set_adminActionSource(string value);
    public string get_adminActionStatus();
    public void set_adminActionStatus(string value);
    public string get_adminActionType();
    public void set_adminActionType(string value);
    public Guid get_correlationId();
    public void set_correlationId(Guid value);
    public DateTime get_createdTime();
    public void set_createdTime(DateTime value);
    public bool get_isPartOfBulkUpdate();
    public void set_isPartOfBulkUpdate(bool value);
    public string get_key();
    public void set_key(string value);
    public string get_name();
    public void set_name(string value);
    public string get_newValue();
    public void set_newValue(string value);
    public string get_oldValue();
    public void set_oldValue(string value);
    public string get_url();
    public void set_url(string value);
    public string get_userEmail();
    public void set_userEmail(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Administration.TenantAdmin.TenantSettingsActionType : Enum {
    public int value__;
    public static TenantSettingsActionType Unknown;
    public static TenantSettingsActionType SiteCreationSettingChanged;
    public static TenantSettingsActionType DeviceAccessPolicyChanged;
    public static TenantSettingsActionType SocialSettingUpdated;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Administration.TenantAdmin.UnifiedAuditRecord")]
public class Microsoft.SharePoint.Administration.TenantAdmin.UnifiedAuditRecord : ClientValueObject {
    private AuditData m_auditData;
    private DateTime m_creationDate;
    private string m_operation;
    private string m_rawAuditData;
    private Guid m_recordId;
    private int m_recordType;
    private string m_userId;
    [RemoteAttribute]
public AuditData AuditData { get; public set; }
    [RemoteAttribute]
public DateTime CreationDate { get; public set; }
    [RemoteAttribute]
public string Operation { get; public set; }
    [RemoteAttribute]
public string RawAuditData { get; public set; }
    [RemoteAttribute]
public Guid RecordId { get; public set; }
    [RemoteAttribute]
public int RecordType { get; public set; }
    [RemoteAttribute]
public string UserId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public AuditData get_AuditData();
    public void set_AuditData(AuditData value);
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    public string get_Operation();
    public void set_Operation(string value);
    public string get_RawAuditData();
    public void set_RawAuditData(string value);
    public Guid get_RecordId();
    public void set_RecordId(Guid value);
    public int get_RecordType();
    public void set_RecordType(int value);
    public string get_UserId();
    public void set_UserId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Agreements.Models.FieldCreationParameters")]
public class Microsoft.SharePoint.Agreements.Models.FieldCreationParameters : ClientValueObject {
    private string m_dataSource;
    private string m_dataType;
    private string m_description;
    private string m_title;
    [RemoteAttribute]
public string DataSource { get; public set; }
    [RemoteAttribute]
public string DataType { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DataSource();
    public void set_DataSource(string value);
    public string get_DataType();
    public void set_DataType(string value);
    public string get_Description();
    public void set_Description(string value);
    public string get_Title();
    public void set_Title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters")]
public class Microsoft.SharePoint.ApplicationPages.ClientPickerQuery.ClientPeoplePickerQueryParameters : ClientValueObject {
    private bool m_allowEmailAddresses;
    private bool m_allowMultipleEntities;
    private bool m_allowOnlyEmailAddresses;
    private bool m_allUrlZones;
    private string m_enabledClaimProviders;
    private bool m_forceClaims;
    private int m_maximumEntitySuggestions;
    private PrincipalSource m_principalSource;
    private PrincipalType m_principalType;
    private PeoplePickerQuerySettings m_querySettings;
    private string m_queryString;
    private bool m_required;
    private int m_sharePointGroupID;
    private UrlZone m_urlZone;
    private bool m_urlZoneSpecified;
    private bool m_useSubstrateSearch;
    private Web m_web;
    private Guid m_webApplicationID;
    [RemoteAttribute]
public bool AllowEmailAddresses { get; public set; }
    [RemoteAttribute]
public bool AllowMultipleEntities { get; public set; }
    [RemoteAttribute]
public bool AllowOnlyEmailAddresses { get; public set; }
    [RemoteAttribute]
public bool AllUrlZones { get; public set; }
    [RemoteAttribute]
public string EnabledClaimProviders { get; public set; }
    [RemoteAttribute]
public bool ForceClaims { get; public set; }
    [RemoteAttribute]
public int MaximumEntitySuggestions { get; public set; }
    [RemoteAttribute]
public PrincipalSource PrincipalSource { get; public set; }
    [RemoteAttribute]
public PrincipalType PrincipalType { get; public set; }
    [RemoteAttribute]
public PeoplePickerQuerySettings QuerySettings { get; public set; }
    [RemoteAttribute]
public string QueryString { get; public set; }
    [RemoteAttribute]
public bool Required { get; public set; }
    [RemoteAttribute]
public int SharePointGroupID { get; public set; }
    [RemoteAttribute]
public UrlZone UrlZone { get; public set; }
    [RemoteAttribute]
public bool UrlZoneSpecified { get; public set; }
    [RemoteAttribute]
public bool UseSubstrateSearch { get; public set; }
    [RemoteAttribute]
public Web Web { get; public set; }
    [RemoteAttribute]
public Guid WebApplicationID { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_AllowEmailAddresses();
    public void set_AllowEmailAddresses(bool value);
    public bool get_AllowMultipleEntities();
    public void set_AllowMultipleEntities(bool value);
    public bool get_AllowOnlyEmailAddresses();
    public void set_AllowOnlyEmailAddresses(bool value);
    public bool get_AllUrlZones();
    public void set_AllUrlZones(bool value);
    public string get_EnabledClaimProviders();
    public void set_EnabledClaimProviders(string value);
    public bool get_ForceClaims();
    public void set_ForceClaims(bool value);
    public int get_MaximumEntitySuggestions();
    public void set_MaximumEntitySuggestions(int value);
    public PrincipalSource get_PrincipalSource();
    public void set_PrincipalSource(PrincipalSource value);
    public PrincipalType get_PrincipalType();
    public void set_PrincipalType(PrincipalType value);
    public PeoplePickerQuerySettings get_QuerySettings();
    public void set_QuerySettings(PeoplePickerQuerySettings value);
    public string get_QueryString();
    public void set_QueryString(string value);
    public bool get_Required();
    public void set_Required(bool value);
    public int get_SharePointGroupID();
    public void set_SharePointGroupID(int value);
    public UrlZone get_UrlZone();
    public void set_UrlZone(UrlZone value);
    public bool get_UrlZoneSpecified();
    public void set_UrlZoneSpecified(bool value);
    public bool get_UseSubstrateSearch();
    public void set_UseSubstrateSearch(bool value);
    public Web get_Web();
    public void set_Web(Web value);
    public Guid get_WebApplicationID();
    public void set_WebApplicationID(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface")]
public static class Microsoft.SharePoint.ApplicationPages.ClientPickerQuery.ClientPeoplePickerWebServiceInterface : object {
    [RemoteAttribute]
public static ClientResult`1<string> ClientPeoplePickerSearchUser(ClientRuntimeContext context, ClientPeoplePickerQueryParameters queryParams);
    [RemoteAttribute]
public static ClientResult`1<string> ClientPeoplePickerResolveUser(ClientRuntimeContext context, ClientPeoplePickerQueryParameters queryParams);
    [RemoteAttribute]
public static PickerEntityInformation GetPickerEntityInformation(ClientRuntimeContext context, PickerEntityInformationRequest entityInformationRequest);
}
[ScriptTypeAttribute("SP.UI.ApplicationPages.PeoplePickerQuerySettings")]
public class Microsoft.SharePoint.ApplicationPages.ClientPickerQuery.PeoplePickerQuerySettings : ClientValueObject {
    private bool m_excludeAllUsersOnTenantClaim;
    private bool m_isSharing;
    [RemoteAttribute]
public bool ExcludeAllUsersOnTenantClaim { get; public set; }
    [RemoteAttribute]
public bool IsSharing { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_ExcludeAllUsersOnTenantClaim();
    public void set_ExcludeAllUsersOnTenantClaim(bool value);
    public bool get_IsSharing();
    public void set_IsSharing(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.UI.ApplicationPages.PickerEntityInformation")]
public class Microsoft.SharePoint.ApplicationPages.ClientPickerQuery.PickerEntityInformation : ClientObject {
    [RemoteAttribute]
public PickerEntityInformationRequest Entity { get; }
    [RemoteAttribute]
public int TotalMemberCount { get; }
    [EditorBrowsableAttribute("1")]
public PickerEntityInformation(ClientRuntimeContext context, ObjectPath objectPath);
    public PickerEntityInformationRequest get_Entity();
    public int get_TotalMemberCount();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.ApplicationPages.ClientPickerQuery.PickerEntityInformationPropertyNames : object {
    public static string Entity;
    public static string TotalMemberCount;
}
[ScriptTypeAttribute("SP.UI.ApplicationPages.PickerEntityInformationRequest")]
public class Microsoft.SharePoint.ApplicationPages.ClientPickerQuery.PickerEntityInformationRequest : ClientValueObject {
    private string m_emailAddress;
    private int m_groupId;
    private string m_key;
    private PrincipalType m_principalType;
    [RemoteAttribute]
public string EmailAddress { get; public set; }
    [RemoteAttribute]
public int GroupId { get; public set; }
    [RemoteAttribute]
public string Key { get; public set; }
    [RemoteAttribute]
public PrincipalType PrincipalType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    public int get_GroupId();
    public void set_GroupId(int value);
    public string get_Key();
    public void set_Key(string value);
    public PrincipalType get_PrincipalType();
    public void set_PrincipalType(PrincipalType value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Authentication.SPACSServicePrincipalInfo")]
public class Microsoft.SharePoint.Authentication.SPACSServicePrincipalInfo : ClientValueObject {
    private IEnumerable`1<string> m_appDomains;
    private Guid m_appId;
    private string m_appIdentifier;
    private string m_redirectUri;
    private string m_title;
    [RemoteAttribute]
public IEnumerable`1<string> appDomains { get; public set; }
    [RemoteAttribute]
public Guid appId { get; public set; }
    [RemoteAttribute]
public string appIdentifier { get; public set; }
    [RemoteAttribute]
public string redirectUri { get; public set; }
    [RemoteAttribute]
public string title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IEnumerable`1<string> get_appDomains();
    public void set_appDomains(IEnumerable`1<string> value);
    public Guid get_appId();
    public void set_appId(Guid value);
    public string get_appIdentifier();
    public void set_appIdentifier(string value);
    public string get_redirectUri();
    public void set_redirectUri(string value);
    public string get_title();
    public void set_title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.AuthPolicy.JITDlpExecutionMode : Enum {
    public int value__;
    public static JITDlpExecutionMode Enforce;
    public static JITDlpExecutionMode Audit;
}
[ScriptTypeAttribute("Microsoft.SharePoint.AuthPolicy.SPJitDlpPolicyData")]
public class Microsoft.SharePoint.AuthPolicy.SPJitDlpPolicyData : ClientValueObject {
    private JITDlpExecutionMode m_executionMode;
    private bool m_isPolicyEnabled;
    private ushort m_oDBSensitivityRefreshWindowInHours;
    [RemoteAttribute]
public JITDlpExecutionMode ExecutionMode { get; public set; }
    [RemoteAttribute]
public bool IsPolicyEnabled { get; public set; }
    [RemoteAttribute]
public ushort ODBSensitivityRefreshWindowInHours { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public JITDlpExecutionMode get_ExecutionMode();
    public void set_ExecutionMode(JITDlpExecutionMode value);
    public bool get_IsPolicyEnabled();
    public void set_IsPolicyEnabled(bool value);
    public ushort get_ODBSensitivityRefreshWindowInHours();
    public void set_ODBSensitivityRefreshWindowInHours(ushort value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.BrandCenter.OrgAssetsLibraryConfigParam")]
public class Microsoft.SharePoint.BrandCenter.OrgAssetsLibraryConfigParam : ClientValueObject {
    private bool m_isCopilotSearchable;
    private bool m_isCopilotSearchablePresent;
    [RemoteAttribute]
public bool IsCopilotSearchable { get; public set; }
    [RemoteAttribute]
public bool IsCopilotSearchablePresent { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_IsCopilotSearchable();
    public void set_IsCopilotSearchable(bool value);
    public bool get_IsCopilotSearchablePresent();
    public void set_IsCopilotSearchablePresent(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.BusinessApps.BusinessAppMigrationOperationStatus : Enum {
    public int value__;
    public static BusinessAppMigrationOperationStatus Running;
    public static BusinessAppMigrationOperationStatus Succeeded;
    public static BusinessAppMigrationOperationStatus UserInteractionRequired;
    public static BusinessAppMigrationOperationStatus Failed;
    public static BusinessAppMigrationOperationStatus Invalid;
}
[ScriptTypeAttribute("SP.AccessRequests")]
public static class Microsoft.SharePoint.Client.AccessRequests : object {
    [RemoteAttribute]
public static void ChangeRequestStatus(ClientRuntimeContext context, int itemId, int newStatus, string convStr, string permType, int permissionLevel);
    [RemoteAttribute]
public static void ChangeRequestStatusBulk(ClientRuntimeContext context, IList`1<int> requestIds, int newStatus);
    [RemoteAttribute]
public static void UpdateConversation(ClientRuntimeContext context, int itemId, string convStr, Web web);
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.AddFieldOptions : Enum {
    public int value__;
    public static AddFieldOptions DefaultValue;
    public static AddFieldOptions AddToDefaultContentType;
    public static AddFieldOptions AddToNoContentType;
    public static AddFieldOptions AddToAllContentTypes;
    public static AddFieldOptions AddFieldInternalNameHint;
    public static AddFieldOptions AddFieldToDefaultView;
    public static AddFieldOptions AddFieldCheckDisplayName;
}
public enum Microsoft.SharePoint.Client.AdditionalAccessStatus : Enum {
    public int value__;
    public static AdditionalAccessStatus None;
    public static AdditionalAccessStatus Pending;
    public static AdditionalAccessStatus Approved;
    public static AdditionalAccessStatus Denied;
}
public enum Microsoft.SharePoint.Client.AdditionalAccessStatusResponseCode : Enum {
    public int value__;
    public static AdditionalAccessStatusResponseCode Success;
    public static AdditionalAccessStatusResponseCode AccessDenied;
    public static AdditionalAccessStatusResponseCode UnknownError;
    public static AdditionalAccessStatusResponseCode AdditionalAccessRequestDisabled;
}
public enum Microsoft.SharePoint.Client.Administration.FeatureScope : Enum {
    public int value__;
    public static FeatureScope Site;
    public static FeatureScope Web;
}
public enum Microsoft.SharePoint.Client.Administration.MnAGroupConnectedPreValidationCheckResult : Enum {
    public int value__;
    public static MnAGroupConnectedPreValidationCheckResult CheckDisabled;
    public static MnAGroupConnectedPreValidationCheckResult Success;
    public static MnAGroupConnectedPreValidationCheckResult IdmEntryDoesNotExist;
    public static MnAGroupConnectedPreValidationCheckResult IdmTooManyEntries;
    public static MnAGroupConnectedPreValidationCheckResult IdmEntryDoesNotCorrespondWithRequest;
}
public enum Microsoft.SharePoint.Client.Administration.MnALicenseType : Enum {
    public int value__;
    public static MnALicenseType MnAODMove;
    public static MnALicenseType MnASiteMove;
}
public enum Microsoft.SharePoint.Client.Administration.MnATenantIdentityMapCallCorrectnessCheckResult : Enum {
    public int value__;
    public static MnATenantIdentityMapCallCorrectnessCheckResult TrustIsNotEstablishedYet;
    public static MnATenantIdentityMapCallCorrectnessCheckResult CallFromTheSourceSide;
    public static MnATenantIdentityMapCallCorrectnessCheckResult CallFromTheTargetSide;
    public static MnATenantIdentityMapCallCorrectnessCheckResult CallUnderReverseConfig;
}
public enum Microsoft.SharePoint.Client.Administration.MnAUserLicenseCheckResult : Enum {
    public int value__;
    public static MnAUserLicenseCheckResult Success;
    public static MnAUserLicenseCheckResult IdmEntryDoesNotExist;
    public static MnAUserLicenseCheckResult IdmTooManyEntries;
    public static MnAUserLicenseCheckResult IdmEntryDoesNotCorrespondWithRequest;
    public static MnAUserLicenseCheckResult TargetUserIsNotLicensed;
    public static MnAUserLicenseCheckResult SourceUserIsNotLicensed;
}
public enum Microsoft.SharePoint.Client.Administration.OrgRelationRole : Enum {
    public int value__;
    public static OrgRelationRole None;
    public static OrgRelationRole Source;
    public static OrgRelationRole Target;
}
public enum Microsoft.SharePoint.Client.Administration.OrgRelationScenario : Enum {
    public int value__;
    public static OrgRelationScenario None;
    public static OrgRelationScenario MnA;
}
public enum Microsoft.SharePoint.Client.Administration.OrgRelationState : Enum {
    public int value__;
    public static OrgRelationState None;
    public static OrgRelationState MergeContentDefined;
    public static OrgRelationState IdentityMappingInProgress;
    public static OrgRelationState IdentityMappingCompleted;
    public static OrgRelationState ContentMergeInProgress;
    public static OrgRelationState ContentMergeCompleted;
}
public enum Microsoft.SharePoint.Client.Administration.OrgRelationVerificationStatus : Enum {
    public int value__;
    public static OrgRelationVerificationStatus NotEstablished;
    public static OrgRelationVerificationStatus NotEstablishedByPartner;
    public static OrgRelationVerificationStatus Dormant;
    public static OrgRelationVerificationStatus DormantByPartner;
    public static OrgRelationVerificationStatus GoodToProceed;
    public static OrgRelationVerificationStatus CouldNotContactPartner;
}
public enum Microsoft.SharePoint.Client.Administration.SPBlockDownloadFileTypeId : Enum {
    public int value__;
    public static SPBlockDownloadFileTypeId TeamsMeetingRecording;
}
public enum Microsoft.SharePoint.Client.Administration.TenantIdentityMapItemType : Enum {
    public int value__;
    public static TenantIdentityMapItemType User;
    public static TenantIdentityMapItemType Group;
}
public enum Microsoft.SharePoint.Client.Administration.TenantIdentityMappingGroupField : Enum {
    public int value__;
    public static TenantIdentityMappingGroupField SourceGroupObjectId;
    public static TenantIdentityMappingGroupField TargetGroupObjectId;
    public static TenantIdentityMappingGroupField TargetGroupName;
}
public enum Microsoft.SharePoint.Client.Administration.TenantIdentityMappingGroupType : Enum {
    public int value__;
    public static TenantIdentityMappingGroupType None;
    public static TenantIdentityMappingGroupType RegularGroup;
    public static TenantIdentityMappingGroupType AdminGroup;
    public static TenantIdentityMappingGroupType O365Group;
}
public enum Microsoft.SharePoint.Client.Administration.TenantIdentityMappingUserField : Enum {
    public int value__;
    public static TenantIdentityMappingUserField SourceUserKey;
    public static TenantIdentityMappingUserField TargetUserPuid;
    public static TenantIdentityMappingUserField TargetUserUpn;
    public static TenantIdentityMappingUserField TargetUserEmail;
}
public enum Microsoft.SharePoint.Client.Administration.TenantIdentityMappingUserType : Enum {
    public int value__;
    public static TenantIdentityMappingUserType None;
    public static TenantIdentityMappingUserType RegularUser;
    public static TenantIdentityMappingUserType AdminUser;
    public static TenantIdentityMappingUserType GuestUser;
}
public enum Microsoft.SharePoint.Client.Administration.TenantIdentityMigrationState : Enum {
    public int value__;
    public static TenantIdentityMigrationState None;
    public static TenantIdentityMigrationState ReadyForMigration;
    public static TenantIdentityMigrationState MigrationInProgress;
    public static TenantIdentityMigrationState MigrationCompleted;
    public static TenantIdentityMigrationState MigrationSuspended;
}
public enum Microsoft.SharePoint.Client.Administration.TenantIdentityMigrationStatus : Enum {
    public int value__;
    public static TenantIdentityMigrationStatus None;
    public static TenantIdentityMigrationStatus Succeeded;
    public static TenantIdentityMigrationStatus UnexceptedFailure;
    public static TenantIdentityMigrationStatus MigratorInternalFailure;
    public static TenantIdentityMigrationStatus UserMigrationSucceeded_GroupMigrationSucceeded;
    public static TenantIdentityMigrationStatus UserMigrationSucceeded_GroupMigrationInternalFailure;
    public static TenantIdentityMigrationStatus UserMigrationInternalFailure_GroupMigrationSucceeded;
    public static TenantIdentityMigrationStatus UserMigrationInternalFailure_GroupMigrationInternalFailure;
}
public enum Microsoft.SharePoint.Client.Administration.TenantStoreIdentityMigrationProperty : Enum {
    public int value__;
    public static TenantStoreIdentityMigrationProperty IdentityMigrationState;
    public static TenantStoreIdentityMigrationProperty IdentityMigrationStatus;
    public static TenantStoreIdentityMigrationProperty IdentityMigrationStatusLastUpdated;
}
[ScriptTypeAttribute("SP.AgreementAttributeDTO")]
public class Microsoft.SharePoint.Client.AgreementAttributeDTO : ClientValueObject {
    private DateTime m_reviewCompleteDate;
    private UserDTO m_reviewer;
    private string m_reviewId;
    private DateTime m_reviewStartDate;
    private SPAgreementState m_state;
    [RemoteAttribute]
public DateTime ReviewCompleteDate { get; public set; }
    [RemoteAttribute]
public UserDTO Reviewer { get; public set; }
    [RemoteAttribute]
public string ReviewId { get; public set; }
    [RemoteAttribute]
public DateTime ReviewStartDate { get; public set; }
    [RemoteAttribute]
public SPAgreementState State { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_ReviewCompleteDate();
    public void set_ReviewCompleteDate(DateTime value);
    public UserDTO get_Reviewer();
    public void set_Reviewer(UserDTO value);
    public string get_ReviewId();
    public void set_ReviewId(string value);
    public DateTime get_ReviewStartDate();
    public void set_ReviewStartDate(DateTime value);
    public SPAgreementState get_State();
    public void set_State(SPAgreementState value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AgreementAttributeRequestDTO")]
public class Microsoft.SharePoint.Client.AgreementAttributeRequestDTO : ClientValueObject {
    private string m_documentUri;
    [RemoteAttribute]
public string DocumentUri { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DocumentUri();
    public void set_DocumentUri(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ExtensionAttribute]
[ScriptTypeAttribute("SP.AgreementController")]
public static class Microsoft.SharePoint.Client.AgreementController : object {
    [ExtensionAttribute]
[RemoteAttribute]
public static ListItem AddField(List fieldLibrary, FieldCreationParameters fieldCreationParameters);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<AgreementLocationData> GetAgreementLocation(Web web, Guid categoryId);
    [ExtensionAttribute]
[RemoteAttribute]
public static void SetAgreementLocation(Web web, Guid categoryId, AgreementLocation agreementLocation);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<CreateAgreementFolderInfo> CreateAgreementFolder(Web web, string CategoryId, bool UpdatePermissions);
    [ExtensionAttribute]
[RemoteAttribute]
public static List CreateAgreementLibrary(Web web, string LibraryCategoryName, string Description);
    [ExtensionAttribute]
[RemoteAttribute]
public static IEnumerable`1<AgreementMetaData> GetAgreements(Web web, AgreementSearchParameters agreementSearchParameters);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<AgreementMetaData> GetAgreement(Web web, string AgreementNumber);
    [ExtensionAttribute]
[RemoteAttribute]
public static IEnumerable`1<AgreementDocument> GetAgreementDocuments(Web web, string folderUrl);
    [ExtensionAttribute]
[RemoteAttribute]
public static void UpdateAgreementState(List list, UpdateAgreementStatePayload updateAgreementStatePayload);
    [ExtensionAttribute]
[RemoteAttribute]
public static void UpdateUploadedAgreementMetadata(List list, UpdateUploadedAgreementMetadataPayload updateUploadedAgreementMetadataPayload);
    [ExtensionAttribute]
[RemoteAttribute]
public static void UpdateUploadedAgreementSupportingDocumentMetadata(List list, UpdateUploadedAgreementMetadataPayload updateUploadedAgreementMetadataPayload);
    [ExtensionAttribute]
[RemoteAttribute]
public static void UpdateAgreementMetaData(List list, UpdateAgreementMetaDataPayload updateData);
    [ExtensionAttribute]
[RemoteAttribute]
public static void UpdateAgreementESignConfig(List list, UpdateAgreementESignConfigPayload updatedESignConfig);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<bool> IsApprovalConfiguredForAgreement(List list, string agreementUrl);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<bool> IsUserLicensedForSharePointContentSolution(Web web);
    [ExtensionAttribute]
[RemoteAttribute]
public static void PublishTemplate(List modernTemplateLibrary, PublishModernTemplatePayload payload);
    [ExtensionAttribute]
[RemoteAttribute]
public static IEnumerable`1<AgreementCountryResponse> GetAgreementCountries(Web web);
}
[ScriptTypeAttribute("SP.AgreementCountryResponse")]
public class Microsoft.SharePoint.Client.AgreementCountryResponse : ClientValueObject {
    private string m_countryKey;
    private string m_displayName;
    [RemoteAttribute]
public string CountryKey { get; public set; }
    [RemoteAttribute]
public string DisplayName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_CountryKey();
    public void set_CountryKey(string value);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AgreementDataPair")]
public class Microsoft.SharePoint.Client.AgreementDataPair : ClientValueObject {
    private int m_count;
    private string m_name;
    [RemoteAttribute]
public int Count { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_Count();
    public void set_Count(int value);
    public string get_Name();
    public void set_Name(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AgreementDocument")]
public class Microsoft.SharePoint.Client.AgreementDocument : ClientValueObject {
    private string m_documentType;
    private string m_documentUrl;
    private bool m_isActive;
    private IEnumerable`1<string> m_linkedPDFs;
    private string m_state;
    [RemoteAttribute]
public string DocumentType { get; public set; }
    [RemoteAttribute]
public string DocumentUrl { get; public set; }
    [RemoteAttribute]
public bool IsActive { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<string> LinkedPDFs { get; public set; }
    [RemoteAttribute]
public string State { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DocumentType();
    public void set_DocumentType(string value);
    public string get_DocumentUrl();
    public void set_DocumentUrl(string value);
    public bool get_IsActive();
    public void set_IsActive(bool value);
    public IEnumerable`1<string> get_LinkedPDFs();
    public void set_LinkedPDFs(IEnumerable`1<string> value);
    public string get_State();
    public void set_State(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AgreementDocumentsInfo")]
public class Microsoft.SharePoint.Client.AgreementDocumentsInfo : ClientValueObject {
    private IEnumerable`1<AgreementDocument> m_documents;
    [RemoteAttribute]
public IEnumerable`1<AgreementDocument> Documents { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IEnumerable`1<AgreementDocument> get_Documents();
    public void set_Documents(IEnumerable`1<AgreementDocument> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AgreementESignStatusUpdatedPayload")]
public class Microsoft.SharePoint.Client.AgreementESignStatusUpdatedPayload : ClientValueObject {
    private Guid m_agreementId;
    private Guid m_externalReference;
    private Guid m_signedDocId;
    private string m_status;
    [RemoteAttribute]
public Guid AgreementId { get; public set; }
    [RemoteAttribute]
public Guid ExternalReference { get; public set; }
    [RemoteAttribute]
public Guid SignedDocId { get; public set; }
    [RemoteAttribute]
public string Status { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_AgreementId();
    public void set_AgreementId(Guid value);
    public Guid get_ExternalReference();
    public void set_ExternalReference(Guid value);
    public Guid get_SignedDocId();
    public void set_SignedDocId(Guid value);
    public string get_Status();
    public void set_Status(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AgreementLocation")]
public class Microsoft.SharePoint.Client.AgreementLocation : ClientValueObject {
    private string m_categoryLabel;
    private Guid m_libraryId;
    private Guid m_siteId;
    private Guid m_webId;
    [RemoteAttribute]
public string CategoryLabel { get; public set; }
    [RemoteAttribute]
public Guid LibraryId { get; public set; }
    [RemoteAttribute]
public Guid SiteId { get; public set; }
    [RemoteAttribute]
public Guid WebId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_CategoryLabel();
    public void set_CategoryLabel(string value);
    public Guid get_LibraryId();
    public void set_LibraryId(Guid value);
    public Guid get_SiteId();
    public void set_SiteId(Guid value);
    public Guid get_WebId();
    public void set_WebId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AgreementLocationData")]
public class Microsoft.SharePoint.Client.AgreementLocationData : ClientValueObject {
    private string m_libraryId;
    private string m_siteId;
    private string m_webId;
    [RemoteAttribute]
public string LibraryId { get; public set; }
    [RemoteAttribute]
public string SiteId { get; public set; }
    [RemoteAttribute]
public string WebId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_LibraryId();
    public void set_LibraryId(string value);
    public string get_SiteId();
    public void set_SiteId(string value);
    public string get_WebId();
    public void set_WebId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AgreementMetaData")]
public class Microsoft.SharePoint.Client.AgreementMetaData : ClientValueObject {
    private string m_agreementNumber;
    private string m_category;
    private string m_country;
    private string m_createdBy;
    private string m_createdTime;
    private IEnumerable`1<AgreementDocument> m_documents;
    private string m_endDate;
    private string m_firstParty;
    private string m_language;
    private string m_name;
    private string m_owner;
    private string m_secondParty;
    private string m_siteId;
    private string m_startDate;
    private string m_state;
    private string m_totalValue;
    private string m_url;
    private string m_webId;
    private string m_webUrl;
    [RemoteAttribute]
public string AgreementNumber { get; public set; }
    [RemoteAttribute]
public string Category { get; public set; }
    [RemoteAttribute]
public string Country { get; public set; }
    [RemoteAttribute]
public string CreatedBy { get; public set; }
    [RemoteAttribute]
public string CreatedTime { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<AgreementDocument> Documents { get; public set; }
    [RemoteAttribute]
public string EndDate { get; public set; }
    [RemoteAttribute]
public string FirstParty { get; public set; }
    [RemoteAttribute]
public string Language { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string Owner { get; public set; }
    [RemoteAttribute]
public string SecondParty { get; public set; }
    [RemoteAttribute]
public string SiteId { get; public set; }
    [RemoteAttribute]
public string StartDate { get; public set; }
    [RemoteAttribute]
public string State { get; public set; }
    [RemoteAttribute]
public string TotalValue { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [RemoteAttribute]
public string WebId { get; public set; }
    [RemoteAttribute]
public string WebUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AgreementNumber();
    public void set_AgreementNumber(string value);
    public string get_Category();
    public void set_Category(string value);
    public string get_Country();
    public void set_Country(string value);
    public string get_CreatedBy();
    public void set_CreatedBy(string value);
    public string get_CreatedTime();
    public void set_CreatedTime(string value);
    public IEnumerable`1<AgreementDocument> get_Documents();
    public void set_Documents(IEnumerable`1<AgreementDocument> value);
    public string get_EndDate();
    public void set_EndDate(string value);
    public string get_FirstParty();
    public void set_FirstParty(string value);
    public string get_Language();
    public void set_Language(string value);
    public string get_Name();
    public void set_Name(string value);
    public string get_Owner();
    public void set_Owner(string value);
    public string get_SecondParty();
    public void set_SecondParty(string value);
    public string get_SiteId();
    public void set_SiteId(string value);
    public string get_StartDate();
    public void set_StartDate(string value);
    public string get_State();
    public void set_State(string value);
    public string get_TotalValue();
    public void set_TotalValue(string value);
    public string get_Url();
    public void set_Url(string value);
    public string get_WebId();
    public void set_WebId(string value);
    public string get_WebUrl();
    public void set_WebUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AgreementReportBaseData")]
public class Microsoft.SharePoint.Client.AgreementReportBaseData : ClientValueObject {
    private IList`1<AgreementDataPair> m_byExpirationStatus;
    private string m_errorMessage;
    private int m_expired;
    private int m_inEffect;
    private IList`1<AgreementDataPair> m_inProgressByState;
    private int m_nearExpiration;
    [RemoteAttribute]
public IList`1<AgreementDataPair> ByExpirationStatus { get; public set; }
    [RemoteAttribute]
public string ErrorMessage { get; public set; }
    [RemoteAttribute]
public int Expired { get; public set; }
    [RemoteAttribute]
public int InEffect { get; public set; }
    [RemoteAttribute]
public IList`1<AgreementDataPair> InProgressByState { get; public set; }
    [RemoteAttribute]
public int NearExpiration { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<AgreementDataPair> get_ByExpirationStatus();
    public void set_ByExpirationStatus(IList`1<AgreementDataPair> value);
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    public int get_Expired();
    public void set_Expired(int value);
    public int get_InEffect();
    public void set_InEffect(int value);
    public IList`1<AgreementDataPair> get_InProgressByState();
    public void set_InProgressByState(IList`1<AgreementDataPair> value);
    public int get_NearExpiration();
    public void set_NearExpiration(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AgreementReportFilter")]
public class Microsoft.SharePoint.Client.AgreementReportFilter : ClientValueObject {
    private string m_category;
    private string m_firstParty;
    private string m_language;
    private string m_location;
    private string m_owner;
    private string m_secondParty;
    private string m_state;
    [RemoteAttribute]
public string Category { get; public set; }
    [RemoteAttribute]
public string FirstParty { get; public set; }
    [RemoteAttribute]
public string Language { get; public set; }
    [RemoteAttribute]
public string Location { get; public set; }
    [RemoteAttribute]
public string Owner { get; public set; }
    [RemoteAttribute]
public string SecondParty { get; public set; }
    [RemoteAttribute]
public string State { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Category();
    public void set_Category(string value);
    public string get_FirstParty();
    public void set_FirstParty(string value);
    public string get_Language();
    public void set_Language(string value);
    public string get_Location();
    public void set_Location(string value);
    public string get_Owner();
    public void set_Owner(string value);
    public string get_SecondParty();
    public void set_SecondParty(string value);
    public string get_State();
    public void set_State(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AgreementReportsController")]
public static class Microsoft.SharePoint.Client.AgreementReportsController : object {
}
[ScriptTypeAttribute("SP.AgreementSearchParameters")]
public class Microsoft.SharePoint.Client.AgreementSearchParameters : ClientValueObject {
    private string m_agreementNumber;
    private string m_category;
    private string m_owner;
    private int m_rowLimit;
    private int m_startRow;
    private string m_state;
    [RemoteAttribute]
public string AgreementNumber { get; public set; }
    [RemoteAttribute]
public string Category { get; public set; }
    [RemoteAttribute]
public string Owner { get; public set; }
    [RemoteAttribute]
public int RowLimit { get; public set; }
    [RemoteAttribute]
public int StartRow { get; public set; }
    [RemoteAttribute]
public string State { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AgreementNumber();
    public void set_AgreementNumber(string value);
    public string get_Category();
    public void set_Category(string value);
    public string get_Owner();
    public void set_Owner(string value);
    public int get_RowLimit();
    public void set_RowLimit(int value);
    public int get_StartRow();
    public void set_StartRow(int value);
    public string get_State();
    public void set_State(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Internal.AgreementsESignManager")]
public static class Microsoft.SharePoint.Client.AgreementsESignManager : object {
    [RemoteAttribute]
public static void AgreementESignStatusUpdated(ClientRuntimeContext context, AgreementESignStatusUpdatedPayload payload);
}
[ScriptTypeAttribute("SP.AgreementSummaryData")]
public class Microsoft.SharePoint.Client.AgreementSummaryData : AgreementReportBaseData {
    private IList`1<AgreementDataPair> m_byCategory;
    private IList`1<AgreementDataPair> m_byExpirationYear;
    private IList`1<AgreementDataPair> m_byFirstParty;
    private IList`1<AgreementDataPair> m_byRenewalYear;
    private IList`1<AgreementDataPair> m_bySecondParty;
    private int m_evergreen;
    [RemoteAttribute]
public IList`1<AgreementDataPair> ByCategory { get; public set; }
    [RemoteAttribute]
public IList`1<AgreementDataPair> ByExpirationYear { get; public set; }
    [RemoteAttribute]
public IList`1<AgreementDataPair> ByFirstParty { get; public set; }
    [RemoteAttribute]
public IList`1<AgreementDataPair> ByRenewalYear { get; public set; }
    [RemoteAttribute]
public IList`1<AgreementDataPair> BySecondParty { get; public set; }
    [RemoteAttribute]
public int Evergreen { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<AgreementDataPair> get_ByCategory();
    public void set_ByCategory(IList`1<AgreementDataPair> value);
    public IList`1<AgreementDataPair> get_ByExpirationYear();
    public void set_ByExpirationYear(IList`1<AgreementDataPair> value);
    public IList`1<AgreementDataPair> get_ByFirstParty();
    public void set_ByFirstParty(IList`1<AgreementDataPair> value);
    public IList`1<AgreementDataPair> get_ByRenewalYear();
    public void set_ByRenewalYear(IList`1<AgreementDataPair> value);
    public IList`1<AgreementDataPair> get_BySecondParty();
    public void set_BySecondParty(IList`1<AgreementDataPair> value);
    public int get_Evergreen();
    public void set_Evergreen(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Alert")]
public class Microsoft.SharePoint.Client.Alert : ClientObject {
    [RemoteAttribute]
public AlertFrequency AlertFrequency { get; public set; }
    [RemoteAttribute]
public string AlertTemplateName { get; }
    [RemoteAttribute]
public DateTime AlertTime { get; public set; }
    [RemoteAttribute]
public AlertType AlertType { get; }
    [RemoteAttribute]
public PropertyValues AllProperties { get; }
    [RemoteAttribute]
public bool AlwaysNotify { get; public set; }
    [RemoteAttribute]
public AlertDeliveryChannel DeliveryChannels { get; public set; }
    [RemoteAttribute]
public AlertEventType EventType { get; public set; }
    [RemoteAttribute]
public string Filter { get; public set; }
    [RemoteAttribute]
public Guid ID { get; }
    [RemoteAttribute]
public ListItem Item { get; }
    [RemoteAttribute]
public int ItemID { get; }
    [RemoteAttribute]
public List List { get; }
    [RemoteAttribute]
public Guid ListID { get; }
    [RemoteAttribute]
public string ListUrl { get; }
    [RemoteAttribute]
public IDictionary`2<string, string> Properties { get; }
    [RemoteAttribute]
public AlertStatus Status { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public User User { get; }
    [RemoteAttribute]
public int UserId { get; }
    [EditorBrowsableAttribute("1")]
public Alert(ClientRuntimeContext context, ObjectPath objectPath);
    public AlertFrequency get_AlertFrequency();
    public void set_AlertFrequency(AlertFrequency value);
    public string get_AlertTemplateName();
    public DateTime get_AlertTime();
    public void set_AlertTime(DateTime value);
    public AlertType get_AlertType();
    public PropertyValues get_AllProperties();
    public bool get_AlwaysNotify();
    public void set_AlwaysNotify(bool value);
    public AlertDeliveryChannel get_DeliveryChannels();
    public void set_DeliveryChannels(AlertDeliveryChannel value);
    public AlertEventType get_EventType();
    public void set_EventType(AlertEventType value);
    public string get_Filter();
    public void set_Filter(string value);
    public Guid get_ID();
    public ListItem get_Item();
    public int get_ItemID();
    public List get_List();
    public Guid get_ListID();
    public string get_ListUrl();
    public IDictionary`2<string, string> get_Properties();
    public AlertStatus get_Status();
    public void set_Status(AlertStatus value);
    public string get_Title();
    public void set_Title(string value);
    public User get_User();
    public int get_UserId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void UpdateAlert();
}
[ScriptTypeAttribute("SP.AlertCollection")]
public class Microsoft.SharePoint.Client.AlertCollection : ClientObjectCollection`1<Alert> {
    [EditorBrowsableAttribute("1")]
public AlertCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Alert GetById(Guid idAlert);
    [RemoteAttribute]
public ClientResult`1<bool> Contains(Guid idAlert);
    [RemoteAttribute]
public ClientResult`1<Guid> Add(AlertCreationInformation alertCreationInformation);
    [RemoteAttribute]
public void DeleteAlertAtIndex(int index);
    [RemoteAttribute]
public void DeleteAlert(Guid idAlert);
}
[ScriptTypeAttribute("SP.AlertCreationInformation")]
public class Microsoft.SharePoint.Client.AlertCreationInformation : ClientValueObject {
    private AlertFrequency m_alertFrequency;
    private string m_alertTemplateName;
    private DateTime m_alertTime;
    private AlertType m_alertType;
    private bool m_alwaysNotify;
    private AlertDeliveryChannel m_deliveryChannels;
    private AlertEventType m_eventType;
    private int m_eventTypeBitmask;
    private string m_filter;
    private ListItem m_item;
    private List m_list;
    private IDictionary`2<string, string> m_properties;
    private AlertStatus m_status;
    private string m_title;
    private User m_user;
    [RemoteAttribute]
public AlertFrequency AlertFrequency { get; public set; }
    [RemoteAttribute]
public string AlertTemplateName { get; public set; }
    [RemoteAttribute]
public DateTime AlertTime { get; public set; }
    [RemoteAttribute]
public AlertType AlertType { get; public set; }
    [RemoteAttribute]
public bool AlwaysNotify { get; public set; }
    [RemoteAttribute]
public AlertDeliveryChannel DeliveryChannels { get; public set; }
    [RemoteAttribute]
public AlertEventType EventType { get; public set; }
    [RemoteAttribute]
public int EventTypeBitmask { get; public set; }
    [RemoteAttribute]
public string Filter { get; public set; }
    [RemoteAttribute]
public ListItem Item { get; public set; }
    [RemoteAttribute]
public List List { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, string> Properties { get; public set; }
    [RemoteAttribute]
public AlertStatus Status { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public User User { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public AlertFrequency get_AlertFrequency();
    public void set_AlertFrequency(AlertFrequency value);
    public string get_AlertTemplateName();
    public void set_AlertTemplateName(string value);
    public DateTime get_AlertTime();
    public void set_AlertTime(DateTime value);
    public AlertType get_AlertType();
    public void set_AlertType(AlertType value);
    public bool get_AlwaysNotify();
    public void set_AlwaysNotify(bool value);
    public AlertDeliveryChannel get_DeliveryChannels();
    public void set_DeliveryChannels(AlertDeliveryChannel value);
    public AlertEventType get_EventType();
    public void set_EventType(AlertEventType value);
    public int get_EventTypeBitmask();
    public void set_EventTypeBitmask(int value);
    public string get_Filter();
    public void set_Filter(string value);
    public ListItem get_Item();
    public void set_Item(ListItem value);
    public List get_List();
    public void set_List(List value);
    public IDictionary`2<string, string> get_Properties();
    public void set_Properties(IDictionary`2<string, string> value);
    public AlertStatus get_Status();
    public void set_Status(AlertStatus value);
    public string get_Title();
    public void set_Title(string value);
    public User get_User();
    public void set_User(User value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.AlertDeliveryChannel : Enum {
    public int value__;
    public static AlertDeliveryChannel Email;
    public static AlertDeliveryChannel Sms;
    public static AlertDeliveryChannel Content;
}
public enum Microsoft.SharePoint.Client.AlertEventType : Enum {
    public int value__;
    public static AlertEventType AddObject;
    public static AlertEventType ModifyObject;
    public static AlertEventType DeleteObject;
    public static AlertEventType Discussion;
    public static AlertEventType All;
}
public enum Microsoft.SharePoint.Client.AlertFrequency : Enum {
    public int value__;
    public static AlertFrequency Immediate;
    public static AlertFrequency Daily;
    public static AlertFrequency Weekly;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.AlertObjectPropertyNames : object {
    public static string AllProperties;
    public static string Item;
    public static string List;
    public static string User;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.AlertPropertyNames : object {
    public static string AlertFrequency;
    public static string AlertTemplateName;
    public static string AlertTime;
    public static string AlertType;
    public static string AlwaysNotify;
    public static string DeliveryChannels;
    public static string EventType;
    public static string Filter;
    public static string ID;
    public static string ItemID;
    public static string ListID;
    public static string ListUrl;
    public static string Properties;
    public static string Status;
    public static string Title;
    public static string UserId;
}
public enum Microsoft.SharePoint.Client.AlertStatus : Enum {
    public int value__;
    public static AlertStatus On;
    public static AlertStatus Off;
    public static AlertStatus Error;
}
public enum Microsoft.SharePoint.Client.AlertType : Enum {
    public int value__;
    public static AlertType List;
    public static AlertType Item;
    public static AlertType Custom;
}
[ScriptTypeAttribute("SP.AlternateUrl")]
public class Microsoft.SharePoint.Client.AlternateUrl : ClientObject {
    [RemoteAttribute]
public string Uri { get; }
    [RemoteAttribute]
public UrlZone UrlZone { get; }
    [EditorBrowsableAttribute("1")]
public AlternateUrl(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Uri();
    public UrlZone get_UrlZone();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.AlternateUrlPropertyNames : object {
    public static string Uri;
    public static string UrlZone;
}
[ScriptTypeAttribute("SP.Analytics.AnalyticsUsageEntry")]
public class Microsoft.SharePoint.Client.Analytics.AnalyticsUsageEntry : ClientObject {
    [EditorBrowsableAttribute("1")]
public AnalyticsUsageEntry(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static void LogAnalyticsEvent(ClientRuntimeContext context, int eventTypeId, string itemId);
    [RemoteAttribute]
public static void LogAnalyticsEvent2(ClientRuntimeContext context, int eventTypeId, string itemId, Guid rollupScopeId, Guid siteId, string userId);
    [RemoteAttribute]
public static void LogAnalyticsAppEvent(ClientRuntimeContext context, Guid appEventTypeId, string itemId);
    [RemoteAttribute]
public static void LogAnalyticsAppEvent2(ClientRuntimeContext context, Guid appEventTypeId, string itemId, Guid rollupScopeId, Guid siteId, string userId);
}
public enum Microsoft.SharePoint.Client.Analytics.EventTypeId : Enum {
    public int value__;
    public static EventTypeId None;
    public static EventTypeId First;
    public static EventTypeId View;
    public static EventTypeId RecommendationView;
    public static EventTypeId RecommendationClick;
    public static EventTypeId Last;
}
public enum Microsoft.SharePoint.Client.AnonymousLinkType : Enum {
    public int value__;
    public static AnonymousLinkType None;
    public static AnonymousLinkType View;
    public static AnonymousLinkType Edit;
}
[ScriptTypeAttribute("SP.App")]
public class Microsoft.SharePoint.Client.App : ClientObject {
    [RemoteAttribute]
public string AssetId { get; }
    [RemoteAttribute]
public string ContentMarket { get; }
    [RemoteAttribute]
public string VersionString { get; }
    [EditorBrowsableAttribute("1")]
public App(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_AssetId();
    public string get_ContentMarket();
    public string get_VersionString();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AppCatalog")]
public static class Microsoft.SharePoint.Client.AppCatalog : object {
    [RemoteAttribute]
public static ClientObjectList`1<AppInstance> GetAppInstances(ClientRuntimeContext context, Web web);
    [RemoteAttribute]
public static AppInstance GetAppInstance(ClientRuntimeContext context, Web web, Guid appInstanceId);
    [RemoteAttribute]
public static ClientObjectList`1<AppInstance> GetDeveloperSiteAppInstancesByIds(ClientRuntimeContext context, Site site, Guid[] appInstanceIds);
    [RemoteAttribute]
public static ClientResult`1<bool> IsAppSideloadingEnabled(ClientRuntimeContext context);
    [RemoteAttribute]
public static AppDetails GetAppDetails(ClientRuntimeContext context, Web web, AppInstance appInstance);
    [RemoteAttribute]
public static ClientArrayResult`1<string> GetAppPermissionDescriptions(ClientRuntimeContext context, Web web, AppInstance appInstance);
}
[ScriptTypeAttribute("SP.AppConfiguration")]
public class Microsoft.SharePoint.Client.AppConfiguration : ClientObject {
    [RemoteAttribute]
public IList`1<DashboardItem> DashboardItems { get; public set; }
    [RemoteAttribute]
public IList`1<PivotItem> PivotItems { get; public set; }
    public AppConfiguration(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public AppConfiguration(ClientRuntimeContext context, ObjectPath objectPath);
    public IList`1<DashboardItem> get_DashboardItems();
    public void set_DashboardItems(IList`1<DashboardItem> value);
    public IList`1<PivotItem> get_PivotItems();
    public void set_PivotItems(IList`1<PivotItem> value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.AppConfigurationPropertyNames : object {
    public static string DashboardItems;
    public static string PivotItems;
}
[ScriptTypeAttribute("SP.AppInstance")]
public class Microsoft.SharePoint.Client.AppInstance : ClientObject {
    private static string cachedSqlConnectionString;
    private static DateTime cachedSqlConnectionStringRefreshTime;
    private static Nullable`1<bool> debugMode;
    private static string connectionStringKeyName;
    [RemoteAttribute]
public string AppPrincipalId { get; }
    [RemoteAttribute]
public string AppWebFullUrl { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string ImageFallbackUrl { get; }
    [RemoteAttribute]
public string ImageUrl { get; }
    [RemoteAttribute]
public bool InError { get; }
    [RemoteAttribute]
public string StartPage { get; }
    [RemoteAttribute]
public Byte[] PackageFingerprint { get; }
    [RemoteAttribute]
public Guid ProductId { get; }
    [RemoteAttribute]
public string RemoteAppUrl { get; }
    [RemoteAttribute]
public string SettingsPageUrl { get; }
    [RemoteAttribute]
public Guid SiteId { get; }
    [RemoteAttribute]
public AppInstanceStatus Status { get; }
    [RemoteAttribute]
public string Title { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public AppInstance(ClientRuntimeContext context, ObjectPath objectPath);
    public static bool TryGetAppDatabaseConnectionDirect(ClientRuntimeContext context, SqlConnection& connection, Boolean& isReadOnly);
    public static bool TryGetAppDatabaseConnectionDirect(ClientRuntimeContext context, SqlConnectionStringBuilder template, SqlConnection& connection, Boolean& isReadOnly);
    private static void RefreshConnectionString(ClientRuntimeContext context);
    private static SqlConnection TryOpenConnection(string connectionString, Boolean& isReadOnly);
    private static SqlConnection TryOpenConnection(string connectionString);
    public string get_AppPrincipalId();
    public string get_AppWebFullUrl();
    public Guid get_Id();
    public string get_ImageFallbackUrl();
    public string get_ImageUrl();
    public bool get_InError();
    public string get_StartPage();
    public Byte[] get_PackageFingerprint();
    public Guid get_ProductId();
    public string get_RemoteAppUrl();
    public string get_SettingsPageUrl();
    public Guid get_SiteId();
    public AppInstanceStatus get_Status();
    public string get_Title();
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ClientResult`1<bool> isClientSideComponent(Web web);
    [RemoteAttribute]
public ClientObjectList`1<AppInstanceErrorDetails> GetErrorDetails();
    [RemoteAttribute]
public ClientResult`1<Guid> Uninstall();
    [RemoteAttribute]
public void Upgrade(Stream appPackageStream);
    [RemoteAttribute]
public ClientResult`1<bool> CancelAllJobs();
    [RemoteAttribute]
public ClientResult`1<Guid> Install();
    [RemoteAttribute]
public ClientResult`1<Guid> Recycle();
    [RemoteAttribute]
public ClientResult`1<Guid> Restore();
    [RemoteAttribute]
public App GetPreviousAppVersion();
    [RemoteAttribute]
public void RetryAllJobs();
    [RemoteAttribute]
public static ClientResult`1<string> RetrieveAppDatabaseConnectionString(ClientRuntimeContext context);
    [RemoteAttribute]
public static AppIconInfo GetAppIcon(ClientRuntimeContext context, Web hostWeb, Guid appinstanceId, Byte[] packageFingerprint);
}
[ScriptTypeAttribute("SP.AppInstanceErrorDetails")]
public class Microsoft.SharePoint.Client.AppInstanceErrorDetails : ClientObject {
    [RemoteAttribute]
public Guid CorrelationId { get; public set; }
    [RemoteAttribute]
public string ErrorDetail { get; }
    [RemoteAttribute]
public AppInstanceErrorType ErrorType { get; public set; }
    [RemoteAttribute]
public string ErrorTypeName { get; }
    [RemoteAttribute]
public string ExceptionMessage { get; }
    [RemoteAttribute]
public AppInstanceErrorSource Source { get; public set; }
    [RemoteAttribute]
public string SourceName { get; }
    [EditorBrowsableAttribute("1")]
public AppInstanceErrorDetails(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_CorrelationId();
    public void set_CorrelationId(Guid value);
    public string get_ErrorDetail();
    public AppInstanceErrorType get_ErrorType();
    public void set_ErrorType(AppInstanceErrorType value);
    public string get_ErrorTypeName();
    public string get_ExceptionMessage();
    public AppInstanceErrorSource get_Source();
    public void set_Source(AppInstanceErrorSource value);
    public string get_SourceName();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.AppInstanceErrorDetailsPropertyNames : object {
    public static string CorrelationId;
    public static string ErrorDetail;
    public static string ErrorType;
    public static string ErrorTypeName;
    public static string ExceptionMessage;
    public static string Source;
    public static string SourceName;
}
public enum Microsoft.SharePoint.Client.AppInstanceErrorSource : Enum {
    public int value__;
    public static AppInstanceErrorSource Common;
    public static AppInstanceErrorSource AppWeb;
    public static AppInstanceErrorSource ParentWeb;
    public static AppInstanceErrorSource RemoteWebSite;
    public static AppInstanceErrorSource Database;
    public static AppInstanceErrorSource OfficeExtension;
    public static AppInstanceErrorSource EventCallouts;
    public static AppInstanceErrorSource Finalization;
}
public enum Microsoft.SharePoint.Client.AppInstanceErrorType : Enum {
    public int value__;
    public static AppInstanceErrorType Transient;
    public static AppInstanceErrorType Configuration;
    public static AppInstanceErrorType App;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.AppInstancePropertyNames : object {
    public static string AppPrincipalId;
    public static string AppWebFullUrl;
    public static string Id;
    public static string ImageFallbackUrl;
    public static string ImageUrl;
    public static string InError;
    public static string StartPage;
    public static string PackageFingerprint;
    public static string ProductId;
    public static string RemoteAppUrl;
    public static string SettingsPageUrl;
    public static string SiteId;
    public static string Status;
    public static string Title;
    public static string WebId;
}
public enum Microsoft.SharePoint.Client.AppInstanceStatus : Enum {
    public int value__;
    public static AppInstanceStatus InvalidStatus;
    public static AppInstanceStatus Installing;
    public static AppInstanceStatus Canceling;
    public static AppInstanceStatus Uninstalling;
    public static AppInstanceStatus Installed;
    public static AppInstanceStatus Upgrading;
    public static AppInstanceStatus Initialized;
    public static AppInstanceStatus UpgradeCanceling;
    public static AppInstanceStatus Disabling;
    public static AppInstanceStatus Disabled;
    public static AppInstanceStatus SecretRolling;
    public static AppInstanceStatus Recycling;
    public static AppInstanceStatus Recycled;
    public static AppInstanceStatus Restoring;
    public static AppInstanceStatus RestoreCanceling;
}
[ScriptTypeAttribute("SP.AppLicense")]
public class Microsoft.SharePoint.Client.AppLicense : ClientValueObject {
    private string m_rawXMLLicenseToken;
    [RemoteAttribute]
public string RawXMLLicenseToken { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_RawXMLLicenseToken();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AppLicenseCollection")]
public class Microsoft.SharePoint.Client.AppLicenseCollection : ClientValueObjectCollection`1<AppLicense> {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
public enum Microsoft.SharePoint.Client.AppLicenseType : Enum {
    public int value__;
    public static AppLicenseType PerpetualMultiUser;
    public static AppLicenseType PerpetualAllUsers;
    public static AppLicenseType TrialMultiUser;
    public static AppLicenseType TrialAllUsers;
}
[ScriptTypeAttribute("SP.AppPrincipal")]
public class Microsoft.SharePoint.Client.AppPrincipal : ClientObject {
    [RemoteAttribute]
public string DisplayName { get; }
    [RemoteAttribute]
public IEnumerable`1<string> EndpointAuthorities { get; }
    [RemoteAttribute]
public string NameIdentifier { get; }
    [RemoteAttribute]
public IEnumerable`1<string> RedirectAddresses { get; }
    [EditorBrowsableAttribute("1")]
public AppPrincipal(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_DisplayName();
    public IEnumerable`1<string> get_EndpointAuthorities();
    public string get_NameIdentifier();
    public IEnumerable`1<string> get_RedirectAddresses();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AppPrincipalConfiguration")]
public class Microsoft.SharePoint.Client.AppPrincipalConfiguration : ClientValueObject {
    private IList`1<string> m_applicationEndpointAuthorities;
    private IList`1<string> m_applicationPrincipalNames;
    private string m_nameIdentifier;
    private IList`1<string> m_redirectAddresses;
    [RemoteAttribute]
public IList`1<string> ApplicationEndpointAuthorities { get; public set; }
    [RemoteAttribute]
public IList`1<string> ApplicationPrincipalNames { get; public set; }
    [RemoteAttribute]
public string NameIdentifier { get; public set; }
    [RemoteAttribute]
public IList`1<string> RedirectAddresses { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<string> get_ApplicationEndpointAuthorities();
    public void set_ApplicationEndpointAuthorities(IList`1<string> value);
    public IList`1<string> get_ApplicationPrincipalNames();
    public void set_ApplicationPrincipalNames(IList`1<string> value);
    public string get_NameIdentifier();
    public void set_NameIdentifier(string value);
    public IList`1<string> get_RedirectAddresses();
    public void set_RedirectAddresses(IList`1<string> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AppPrincipalCredential")]
public class Microsoft.SharePoint.Client.AppPrincipalCredential : ClientObject {
    [EditorBrowsableAttribute("1")]
public AppPrincipalCredential(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static AppPrincipalCredential CreateFromKeyGroup(ClientRuntimeContext context, Guid keyGroupIdentifier);
    [RemoteAttribute]
public static AppPrincipalCredential CreateFromSymmetricKey(ClientRuntimeContext context, string symmetricKey, DateTime notBefore, DateTime notAfter);
}
[ScriptTypeAttribute("SP.AppPrincipalCredentialReference")]
public class Microsoft.SharePoint.Client.AppPrincipalCredentialReference : ClientValueObject {
    private Guid m_id;
    private string m_nameIdentifier;
    private DateTime m_notAfter;
    private DateTime m_notBefore;
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string NameIdentifier { get; public set; }
    [RemoteAttribute]
public DateTime NotAfter { get; public set; }
    [RemoteAttribute]
public DateTime NotBefore { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_NameIdentifier();
    public void set_NameIdentifier(string value);
    public DateTime get_NotAfter();
    public void set_NotAfter(DateTime value);
    public DateTime get_NotBefore();
    public void set_NotBefore(DateTime value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AppPrincipalIdentityProvider")]
public class Microsoft.SharePoint.Client.AppPrincipalIdentityProvider : ClientObject {
    [EditorBrowsableAttribute("1")]
public AppPrincipalIdentityProvider(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static AppPrincipalIdentityProvider GetExternal(ClientRuntimeContext Context);
}
[ScriptTypeAttribute("SP.AppPrincipalManager")]
public class Microsoft.SharePoint.Client.AppPrincipalManager : ClientObject {
    [EditorBrowsableAttribute("1")]
public AppPrincipalManager(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public AppPrincipal LookupAppPrincipal(AppPrincipalIdentityProvider identityProvider, AppPrincipalName appPrincipalName);
    [RemoteAttribute]
public void DeleteAppPrincipal(AppPrincipal appPrincipal);
    [RemoteAttribute]
public void AddAppPrincipalCredential(AppPrincipal appPrincipal, AppPrincipalCredential credential);
    [RemoteAttribute]
public static AppPrincipalManager GetManager(ClientRuntimeContext context, Web web);
    [RemoteAttribute]
public AppPrincipal CreateAppPrincipal(ExternalAppPrincipalCreationParameters parameters);
    [RemoteAttribute]
public ClientResult`1<AppPrincipalConfiguration> GetAppPrincipalConfiguration(AppPrincipal appPrincipal);
    [RemoteAttribute]
public void SetAppPrincipalConfiguration(AppPrincipalConfiguration appPrincipalConfiguration);
    [RemoteAttribute]
public IEnumerable`1<AppPrincipalCredentialReference> GetAppPrincipalCredentials(AppPrincipal appPrincipal);
    [RemoteAttribute]
public void DeleteAppPrincipalCredential(AppPrincipalCredentialReference credentialReference);
}
[ScriptTypeAttribute("SP.AppPrincipalName")]
public class Microsoft.SharePoint.Client.AppPrincipalName : ClientObject {
    [EditorBrowsableAttribute("1")]
public AppPrincipalName(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static AppPrincipalName CreateFromNameIdentifier(ClientRuntimeContext context, string nameIdentifier);
    [RemoteAttribute]
public static AppPrincipalName CreateFromAppPrincipalIdentifier(ClientRuntimeContext context, string appPrincipalIdentifier);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.AppPrincipalPropertyNames : object {
    public static string DisplayName;
    public static string EndpointAuthorities;
    public static string NameIdentifier;
    public static string RedirectAddresses;
}
[ScriptTypeAttribute("SP.AppProperties")]
public class Microsoft.SharePoint.Client.AppProperties : ClientValueObject {
    private bool m_appSettingsEnabled;
    private string m_description;
    private string m_eulaUrl;
    private bool m_isAnonymous;
    private bool m_isDisabled;
    private bool m_managedDeploymentEnabled;
    private bool m_managePermissionsEnabled;
    private bool m_manageSeatsEnabled;
    private bool m_monitoringEnabled;
    private string m_publisher;
    private bool m_removeEnabled;
    private bool m_sideLoadEnabled;
    private string m_supportUrl;
    private bool m_viewInMarketPlaceEnabled;
    [RemoteAttribute]
public bool AppSettingsEnabled { get; }
    [RemoteAttribute]
public string Description { get; }
    [RemoteAttribute]
public string EulaUrl { get; }
    [RemoteAttribute]
public bool IsAnonymous { get; }
    [RemoteAttribute]
public bool IsDisabled { get; }
    [RemoteAttribute]
public bool ManagedDeploymentEnabled { get; }
    [RemoteAttribute]
public bool ManagePermissionsEnabled { get; }
    [RemoteAttribute]
public bool ManageSeatsEnabled { get; }
    [RemoteAttribute]
public bool MonitoringEnabled { get; }
    [RemoteAttribute]
public string Publisher { get; }
    [RemoteAttribute]
public bool RemoveEnabled { get; }
    [RemoteAttribute]
public bool SideLoadEnabled { get; }
    [RemoteAttribute]
public string SupportUrl { get; }
    [RemoteAttribute]
public bool ViewInMarketPlaceEnabled { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_AppSettingsEnabled();
    public string get_Description();
    public string get_EulaUrl();
    public bool get_IsAnonymous();
    public bool get_IsDisabled();
    public bool get_ManagedDeploymentEnabled();
    public bool get_ManagePermissionsEnabled();
    public bool get_ManageSeatsEnabled();
    public bool get_MonitoringEnabled();
    public string get_Publisher();
    public bool get_RemoveEnabled();
    public bool get_SideLoadEnabled();
    public string get_SupportUrl();
    public bool get_ViewInMarketPlaceEnabled();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.AppPropertyNames : object {
    public static string AssetId;
    public static string ContentMarket;
    public static string VersionString;
}
[ScriptTypeAttribute("SP.ApprovalRequest")]
public class Microsoft.SharePoint.Client.ApprovalRequest : ClientObject {
    [RemoteAttribute]
public string Actions { get; }
    [RemoteAttribute]
public bool AllowCancel { get; public set; }
    [RemoteAttribute]
public bool AllowRespond { get; public set; }
    [RemoteAttribute]
public bool AllowResubmit { get; public set; }
    [RemoteAttribute]
public string Approvers { get; }
    [RemoteAttribute]
public bool AwaitAll { get; public set; }
    [RemoteAttribute]
public int CurrentStepNumber { get; public set; }
    [RemoteAttribute]
public string Details { get; public set; }
    [RemoteAttribute]
public string Id { get; public set; }
    [RemoteAttribute]
public string PartnerMetadata { get; }
    [RemoteAttribute]
public int Priority { get; }
    [RemoteAttribute]
public string RequestType { get; public set; }
    [RemoteAttribute]
public string Responses { get; }
    [RemoteAttribute]
public int Status { get; }
    [RemoteAttribute]
public string Title { get; public set; }
    [EditorBrowsableAttribute("1")]
public ApprovalRequest(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Actions();
    public bool get_AllowCancel();
    public void set_AllowCancel(bool value);
    public bool get_AllowRespond();
    public void set_AllowRespond(bool value);
    public bool get_AllowResubmit();
    public void set_AllowResubmit(bool value);
    public string get_Approvers();
    public bool get_AwaitAll();
    public void set_AwaitAll(bool value);
    public int get_CurrentStepNumber();
    public void set_CurrentStepNumber(int value);
    public string get_Details();
    public void set_Details(string value);
    public string get_Id();
    public void set_Id(string value);
    public string get_PartnerMetadata();
    public int get_Priority();
    public string get_RequestType();
    public void set_RequestType(string value);
    public string get_Responses();
    public int get_Status();
    public string get_Title();
    public void set_Title(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ApprovalRequestPropertyNames : object {
    public static string Actions;
    public static string AllowCancel;
    public static string AllowRespond;
    public static string AllowResubmit;
    public static string Approvers;
    public static string AwaitAll;
    public static string CurrentStepNumber;
    public static string Details;
    public static string Id;
    public static string PartnerMetadata;
    public static string Priority;
    public static string RequestType;
    public static string Responses;
    public static string Status;
    public static string Title;
}
[ScriptTypeAttribute("SP.Approvals")]
public static class Microsoft.SharePoint.Client.Approvals : object {
    [RemoteAttribute]
public static void Enable(ClientRuntimeContext context, string listId, bool addFieldsToDefaultView, string extraViewToEnable);
    [RemoteAttribute]
public static void Disable(ClientRuntimeContext context, string listId, string viewId);
    [RemoteAttribute]
public static void SetProperties(ClientRuntimeContext context, string listId, ApprovalsProperties properties);
    [RemoteAttribute]
public static ClientResult`1<ApprovalsProperties> GetProperties(ClientRuntimeContext context, string listId);
    [RemoteAttribute]
public static ClientResult`1<string> CreateItemRequest(ClientRuntimeContext context, ApprovalsCreateRequestParameters creationInfo);
    [RemoteAttribute]
public static void ApproveItemRequest(ClientRuntimeContext context, string listId, string itemId, string url, string version, string approvalId, string comments);
    [RemoteAttribute]
public static void RejectItemRequest(ClientRuntimeContext context, string listId, string itemId, string url, string version, string approvalId, string comments);
    [RemoteAttribute]
public static void CancelItemRequest(ClientRuntimeContext context, string listId, string itemId, string url, string version, string approvalId);
    [RemoteAttribute]
public static ApprovalRequest GetItemRequest(ClientRuntimeContext context, string listId, string itemId, string url, string version);
}
[ScriptTypeAttribute("SP.ApprovalsCreateRequestParameters")]
public class Microsoft.SharePoint.Client.ApprovalsCreateRequestParameters : ClientValueObject {
    private string m_approvers;
    private bool m_awaitAll;
    private string m_details;
    private string m_itemId;
    private ListItemUrlType m_itemUrlType;
    private string m_listId;
    private bool m_markDocAsFinal;
    private string m_title;
    private string m_url;
    private string m_version;
    [RemoteAttribute]
public string approvers { get; public set; }
    [RemoteAttribute]
public bool awaitAll { get; public set; }
    [RemoteAttribute]
public string details { get; public set; }
    [RemoteAttribute]
public string itemId { get; public set; }
    [RemoteAttribute]
public ListItemUrlType itemUrlType { get; public set; }
    [RemoteAttribute]
public string listId { get; public set; }
    [RemoteAttribute]
public bool markDocAsFinal { get; public set; }
    [RemoteAttribute]
public string title { get; public set; }
    [RemoteAttribute]
public string url { get; public set; }
    [RemoteAttribute]
public string version { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_approvers();
    public void set_approvers(string value);
    public bool get_awaitAll();
    public void set_awaitAll(bool value);
    public string get_details();
    public void set_details(string value);
    public string get_itemId();
    public void set_itemId(string value);
    public ListItemUrlType get_itemUrlType();
    public void set_itemUrlType(ListItemUrlType value);
    public string get_listId();
    public void set_listId(string value);
    public bool get_markDocAsFinal();
    public void set_markDocAsFinal(bool value);
    public string get_title();
    public void set_title(string value);
    public string get_url();
    public void set_url(string value);
    public string get_version();
    public void set_version(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Internal.ApprovalsManager")]
public static class Microsoft.SharePoint.Client.ApprovalsManager : object {
    [RemoteAttribute]
public static void OnRequestUpdated(ClientRuntimeContext context);
}
[ScriptTypeAttribute("SP.ApprovalsProperties")]
public class Microsoft.SharePoint.Client.ApprovalsProperties : ClientValueObject {
    private bool m_approversAwaitAll;
    private bool m_approversAwaitAllFixed;
    private bool m_approversFixed;
    private ApproverSource m_approverSourceType;
    private string m_approverSourceValue;
    private string m_provisioningError;
    private int m_provisioningStatus;
    [RemoteAttribute]
public bool ApproversAwaitAll { get; public set; }
    [RemoteAttribute]
public bool ApproversAwaitAllFixed { get; public set; }
    [RemoteAttribute]
public bool ApproversFixed { get; public set; }
    [RemoteAttribute]
public ApproverSource ApproverSourceType { get; public set; }
    [RemoteAttribute]
public string ApproverSourceValue { get; public set; }
    [RemoteAttribute]
public string ProvisioningError { get; public set; }
    [RemoteAttribute]
public int ProvisioningStatus { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_ApproversAwaitAll();
    public void set_ApproversAwaitAll(bool value);
    public bool get_ApproversAwaitAllFixed();
    public void set_ApproversAwaitAllFixed(bool value);
    public bool get_ApproversFixed();
    public void set_ApproversFixed(bool value);
    public ApproverSource get_ApproverSourceType();
    public void set_ApproverSourceType(ApproverSource value);
    public string get_ApproverSourceValue();
    public void set_ApproverSourceValue(string value);
    public string get_ProvisioningError();
    public void set_ProvisioningError(string value);
    public int get_ProvisioningStatus();
    public void set_ProvisioningStatus(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.ApproverSource : Enum {
    public int value__;
    public static ApproverSource UserList;
    public static ApproverSource Field;
}
[ScriptTypeAttribute("SP.AppSiteContext")]
public class Microsoft.SharePoint.Client.AppSiteContext : ClientValueObject {
    private string m_siteUrl;
    [RemoteAttribute]
public string SiteUrl { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_SiteUrl();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AppSiteContextUtility")]
public static class Microsoft.SharePoint.Client.AppSiteContextUtility : object {
    [RemoteAttribute]
public static IList`1<AppSiteContext> GetAppSiteContextCollection(ClientRuntimeContext context);
}
public enum Microsoft.SharePoint.Client.AppStatus : Enum {
    public int value__;
    public static AppStatus InvalidStatus;
    public static AppStatus Installing;
    public static AppStatus Canceling;
    public static AppStatus Uninstalling;
    public static AppStatus Installed;
    public static AppStatus Upgrading;
    public static AppStatus Initialized;
    public static AppStatus UpgradeCanceling;
    public static AppStatus Disabling;
    public static AppStatus Disabled;
    public static AppStatus SecretRolling;
    public static AppStatus Recycling;
    public static AppStatus Recycled;
    public static AppStatus Restoring;
    public static AppStatus RestoreCanceling;
}
[ScriptTypeAttribute("SP.AppTile")]
public class Microsoft.SharePoint.Client.AppTile : ClientObject {
    [RemoteAttribute]
public Guid AppId { get; }
    [RemoteAttribute]
public string AppPrincipalId { get; }
    [RemoteAttribute]
public AppSource AppSource { get; }
    [RemoteAttribute]
public AppStatus AppStatus { get; }
    [RemoteAttribute]
public AppType AppType { get; }
    [RemoteAttribute]
public string AssetId { get; }
    [RemoteAttribute]
public ListTemplateType BaseTemplate { get; }
    [RemoteAttribute]
public int ChildCount { get; }
    [RemoteAttribute]
public string ContentMarket { get; }
    [RemoteAttribute]
public string CustomSettingsUrl { get; }
    [RemoteAttribute]
public string Description { get; }
    [RemoteAttribute]
public bool IsCorporateCatalogSite { get; }
    [RemoteAttribute]
public string LastModified { get; }
    [RemoteAttribute]
public DateTime LastModifiedDate { get; }
    [RemoteAttribute]
public Guid ProductId { get; }
    [RemoteAttribute]
public string Target { get; }
    [RemoteAttribute]
public string Thumbnail { get; }
    [RemoteAttribute]
public string Title { get; }
    [RemoteAttribute]
public string Version { get; }
    [EditorBrowsableAttribute("1")]
public AppTile(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_AppId();
    public string get_AppPrincipalId();
    public AppSource get_AppSource();
    public AppStatus get_AppStatus();
    public AppType get_AppType();
    public string get_AssetId();
    public ListTemplateType get_BaseTemplate();
    public int get_ChildCount();
    public string get_ContentMarket();
    public string get_CustomSettingsUrl();
    public string get_Description();
    public bool get_IsCorporateCatalogSite();
    public string get_LastModified();
    public DateTime get_LastModifiedDate();
    public Guid get_ProductId();
    public string get_Target();
    public string get_Thumbnail();
    public string get_Title();
    public string get_Version();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AppTileCollection")]
public class Microsoft.SharePoint.Client.AppTileCollection : ClientObjectCollection`1<AppTile> {
    [EditorBrowsableAttribute("1")]
public AppTileCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.AppTileProperties")]
public static class Microsoft.SharePoint.Client.AppTileProperties : object {
    [RemoteAttribute]
public static ClientResult`1<AppProperties> GetAppProperties(ClientRuntimeContext context, Guid appId, AppType appType, Guid productId, AppSource appSource, string assetId, string contentMarket, bool isTenantApp);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.AppTilePropertyNames : object {
    public static string AppId;
    public static string AppPrincipalId;
    public static string AppSource;
    public static string AppStatus;
    public static string AppType;
    public static string AssetId;
    public static string BaseTemplate;
    public static string ChildCount;
    public static string ContentMarket;
    public static string CustomSettingsUrl;
    public static string Description;
    public static string IsCorporateCatalogSite;
    public static string LastModified;
    public static string LastModifiedDate;
    public static string ProductId;
    public static string Target;
    public static string Thumbnail;
    public static string Title;
    public static string Version;
}
public enum Microsoft.SharePoint.Client.AppType : Enum {
    public int value__;
    public static AppType Doclib;
    public static AppType List;
    public static AppType Tenant;
    public static AppType Instance;
    public static AppType Feature;
    public static AppType CommonList;
}
[ScriptTypeAttribute("SP.AppViewCreationInfo")]
public class Microsoft.SharePoint.Client.AppViewCreationInfo : ClientValueObject {
    private Guid m_appId;
    private bool m_isPrivate;
    private string m_title;
    [RemoteAttribute]
public Guid AppId { get; public set; }
    [RemoteAttribute]
public bool IsPrivate { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_AppId();
    public void set_AppId(Guid value);
    public bool get_IsPrivate();
    public void set_IsPrivate(bool value);
    public string get_Title();
    public void set_Title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.ArchiveStatus : Enum {
    public int value__;
    public static ArchiveStatus None;
    public static ArchiveStatus Hydrating;
    public static ArchiveStatus Archiving;
    public static ArchiveStatus Archived;
}
[ScriptTypeAttribute("SP.AsyncReadJobInfo")]
public class Microsoft.SharePoint.Client.AsyncReadJobInfo : ClientValueObject {
    private string m_currentChangeToken;
    private Guid m_jobId;
    [RemoteAttribute]
public string CurrentChangeToken { get; public set; }
    [RemoteAttribute]
public Guid JobId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_CurrentChangeToken();
    public void set_CurrentChangeToken(string value);
    public Guid get_JobId();
    public void set_JobId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.AsyncReadOptions")]
public class Microsoft.SharePoint.Client.AsyncReadOptions : ClientValueObject {
    private bool m_includeDirectDescendantsOnly;
    private bool m_includeExtendedMetadata;
    private bool m_includePermission;
    private bool m_includeSecurity;
    private bool m_includeVersions;
    private string m_startChangeToken;
    [RemoteAttribute]
public bool IncludeDirectDescendantsOnly { get; public set; }
    [RemoteAttribute]
public bool IncludeExtendedMetadata { get; public set; }
    [RemoteAttribute]
public bool IncludePermission { get; public set; }
    [RemoteAttribute]
public bool IncludeSecurity { get; public set; }
    [RemoteAttribute]
public bool IncludeVersions { get; public set; }
    [RemoteAttribute]
public string StartChangeToken { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_IncludeDirectDescendantsOnly();
    public void set_IncludeDirectDescendantsOnly(bool value);
    public bool get_IncludeExtendedMetadata();
    public void set_IncludeExtendedMetadata(bool value);
    public bool get_IncludePermission();
    public void set_IncludePermission(bool value);
    public bool get_IncludeSecurity();
    public void set_IncludeSecurity(bool value);
    public bool get_IncludeVersions();
    public void set_IncludeVersions(bool value);
    public string get_StartChangeToken();
    public void set_StartChangeToken(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Attachment")]
public class Microsoft.SharePoint.Client.Attachment : ClientObject {
    [RemoteAttribute]
public string FileName { get; }
    [RemoteAttribute]
public ResourcePath FileNameAsPath { get; }
    [RemoteAttribute]
public ResourcePath ServerRelativePath { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [EditorBrowsableAttribute("1")]
public Attachment(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_FileName();
    public ResourcePath get_FileNameAsPath();
    public ResourcePath get_ServerRelativePath();
    public string get_ServerRelativeUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public void RecycleObject();
}
[ScriptTypeAttribute("SP.AttachmentCollection")]
public class Microsoft.SharePoint.Client.AttachmentCollection : ClientObjectCollection`1<Attachment> {
    [EditorBrowsableAttribute("1")]
public AttachmentCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Attachment Add(AttachmentCreationInformation parameters);
    [RemoteAttribute]
public Attachment AddUsingPath(ResourcePath filename, Stream contentStream);
    [RemoteAttribute]
public Attachment GetByFileName(string fileName);
    [RemoteAttribute]
public Attachment GetByFileNameAsPath(ResourcePath fileName);
}
[ScriptTypeAttribute("SP.AttachmentCreationInformation")]
public class Microsoft.SharePoint.Client.AttachmentCreationInformation : ClientValueObject {
    private Stream m_contentStream;
    private string m_fileName;
    [RemoteAttribute]
public Stream ContentStream { get; public set; }
    [RemoteAttribute]
public string FileName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Stream get_ContentStream();
    public void set_ContentStream(Stream value);
    public string get_FileName();
    public void set_FileName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.AttachmentPropertyNames : object {
    public static string FileName;
    public static string FileNameAsPath;
    public static string ServerRelativePath;
    public static string ServerRelativeUrl;
}
[ScriptTypeAttribute("SP.Audience")]
public class Microsoft.SharePoint.Client.Audience : ClientValueObject {
    private string m_email;
    private Guid m_id;
    private string m_title;
    [RemoteAttribute]
public string Email { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Email();
    public void set_Email(string value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_Title();
    public void set_Title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Audit")]
public class Microsoft.SharePoint.Client.Audit : ClientObject {
    [RemoteAttribute]
public AuditMaskType AuditFlags { get; public set; }
    [EditorBrowsableAttribute("1")]
public Audit(ClientRuntimeContext context, ObjectPath objectPath);
    public AuditMaskType get_AuditFlags();
    public void set_AuditFlags(AuditMaskType value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update();
}
public enum Microsoft.SharePoint.Client.AuditMaskType : Enum {
    public int value__;
    public static AuditMaskType None;
    public static AuditMaskType CheckOut;
    public static AuditMaskType CheckIn;
    public static AuditMaskType View;
    public static AuditMaskType ObjectDelete;
    public static AuditMaskType Update;
    public static AuditMaskType ProfileChange;
    public static AuditMaskType ChildDelete;
    public static AuditMaskType SchemaChange;
    public static AuditMaskType SecurityChange;
    public static AuditMaskType Undelete;
    public static AuditMaskType Workflow;
    public static AuditMaskType Copy;
    public static AuditMaskType Move;
    public static AuditMaskType Search;
    public static AuditMaskType All;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.AuditPropertyNames : object {
    public static string AuditFlags;
}
[ScriptTypeAttribute("SP.AutoLabellingWorkInformation")]
public class Microsoft.SharePoint.Client.AutoLabellingWorkInformation : ClientValueObject {
    private string m_routingHint;
    private Guid m_scaleUnitId;
    private string m_watermark;
    private SensitivityLabelWorkItemType m_workItemType;
    [RemoteAttribute]
public string RoutingHint { get; public set; }
    [RemoteAttribute]
public Guid ScaleUnitId { get; public set; }
    [RemoteAttribute]
public string Watermark { get; public set; }
    [RemoteAttribute]
public SensitivityLabelWorkItemType WorkItemType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_RoutingHint();
    public void set_RoutingHint(string value);
    public Guid get_ScaleUnitId();
    public void set_ScaleUnitId(Guid value);
    public string get_Watermark();
    public void set_Watermark(string value);
    public SensitivityLabelWorkItemType get_WorkItemType();
    public void set_WorkItemType(SensitivityLabelWorkItemType value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.BasePermissions")]
public class Microsoft.SharePoint.Client.BasePermissions : ClientValueObject {
    private UInt32 m_high;
    private UInt32 m_low;
    [RemoteAttribute]
internal UInt32 High { get; internal set; }
    [RemoteAttribute]
internal UInt32 Low { get; internal set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public void Set(PermissionKind perm);
    public void Clear(PermissionKind perm);
    public void ClearAll();
    public bool Has(PermissionKind perm);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public bool HasPermissions(UInt32 high, UInt32 low);
    internal UInt32 get_High();
    internal void set_High(UInt32 value);
    internal UInt32 get_Low();
    internal void set_Low(UInt32 value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.BaseType : Enum {
    public int value__;
    public static BaseType None;
    public static BaseType GenericList;
    public static BaseType DocumentLibrary;
    public static BaseType Unused;
    public static BaseType DiscussionBoard;
    public static BaseType Survey;
    public static BaseType Issue;
}
[ScriptTypeAttribute("SP.BrandCenter")]
public class Microsoft.SharePoint.Client.BrandCenter : ClientObject {
    public BrandCenter(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public BrandCenter(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public ClientResult`1<OrgAssets> OrgAssets();
    [RemoteAttribute]
public ClientResult`1<OrgAssets> OrgAssetsWithCacheFlag(bool shouldUseCache);
    [RemoteAttribute]
public ClientResult`1<BrandCenterConfiguration> Configuration();
    [RemoteAttribute]
public ClientResult`1<BrandCenterConfiguration> CurrentBrandingConfiguration();
    [RemoteAttribute]
public ClientResult`1<OrgAssets> EnsureBrandFontsLibraryFeature();
    [RemoteAttribute]
public ClientResult`1<OrgAssets> EnsureBrandColorsListFeature();
    [RemoteAttribute]
public ClientResult`1<ThemeData> AddTenantTheme(ThemeData themeData);
    [RemoteAttribute]
public ClientResult`1<ThemeData> AddSiteTheme(ThemeData themeData);
    [RemoteAttribute]
public ClientResult`1<ThemeData> UpdateTenantTheme(ThemeData themeData);
    [RemoteAttribute]
public ClientResult`1<ThemeData> UpdateSiteTheme(ThemeData themeData);
    [RemoteAttribute]
public void DeleteSiteTheme(int themeId);
    [RemoteAttribute]
public ClientResult`1<bool> ValidateTenantThemeName(string name);
    [RemoteAttribute]
public ClientResult`1<ThemeData> GetTenantThemeById(int id);
    [RemoteAttribute]
public ClientResult`1<TenantThemes> GetTenantThemes();
    [RemoteAttribute]
public ClientResult`1<TenantThemes> GetTenantThemesXgeoUtil();
    [RemoteAttribute]
public ClientResult`1<SiteThemes> GetSiteThemes();
}
[ScriptTypeAttribute("SP.BrandCenterConfiguration")]
public class Microsoft.SharePoint.Client.BrandCenterConfiguration : ClientValueObject {
    private Guid m_brandColorsListId;
    private ResourcePath m_brandColorsListUrl;
    private Guid m_brandFontLibraryId;
    private ResourcePath m_brandFontLibraryUrl;
    private bool m_isBrandCenterSiteFeatureEnabled;
    private bool m_isPublicCdnEnabled;
    private OrgAssets m_orgAssets;
    private Guid m_siteId;
    private string m_siteUrl;
    [RemoteAttribute]
public Guid BrandColorsListId { get; public set; }
    [RemoteAttribute]
public ResourcePath BrandColorsListUrl { get; public set; }
    [RemoteAttribute]
public Guid BrandFontLibraryId { get; public set; }
    [RemoteAttribute]
public ResourcePath BrandFontLibraryUrl { get; public set; }
    [RemoteAttribute]
public bool IsBrandCenterSiteFeatureEnabled { get; public set; }
    [RemoteAttribute]
public bool IsPublicCdnEnabled { get; public set; }
    [RemoteAttribute]
public OrgAssets OrgAssets { get; public set; }
    [RemoteAttribute]
public Guid SiteId { get; public set; }
    [RemoteAttribute]
public string SiteUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_BrandColorsListId();
    public void set_BrandColorsListId(Guid value);
    public ResourcePath get_BrandColorsListUrl();
    public void set_BrandColorsListUrl(ResourcePath value);
    public Guid get_BrandFontLibraryId();
    public void set_BrandFontLibraryId(Guid value);
    public ResourcePath get_BrandFontLibraryUrl();
    public void set_BrandFontLibraryUrl(ResourcePath value);
    public bool get_IsBrandCenterSiteFeatureEnabled();
    public void set_IsBrandCenterSiteFeatureEnabled(bool value);
    public bool get_IsPublicCdnEnabled();
    public void set_IsPublicCdnEnabled(bool value);
    public OrgAssets get_OrgAssets();
    public void set_OrgAssets(OrgAssets value);
    public Guid get_SiteId();
    public void set_SiteId(Guid value);
    public string get_SiteUrl();
    public void set_SiteUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Broker")]
public static class Microsoft.SharePoint.Client.Broker : object {
}
public enum Microsoft.SharePoint.Client.BrowserFileHandling : Enum {
    public int value__;
    public static BrowserFileHandling Permissive;
    public static BrowserFileHandling Strict;
}
[ExtensionAttribute]
[ScriptTypeAttribute("SP.BUSettingsConfigurationController")]
public static class Microsoft.SharePoint.Client.BUSettingsConfigurationController : object {
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<WorkflowConfigurationResponse> CreateWorkflowConfiguration(Web web, WorkflowConfigurationCreateRequest configuration);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<WorkflowConfigurationResponse> GetWorkflowConfigurations(Web web, WorkflowConfigurationSearchFilters filters);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<ConfiguredUserInfo> GetTemplateManagerUsers(Web web);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<WorkflowConfigurationResponse> EditWorkflowConfiguration(Web web, WorkflowConfigurationEditRequest configuration);
    [ExtensionAttribute]
[RemoteAttribute]
public static void DeleteWorkflowConfiguration(Web web, int ConfigurationID);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<ConfiguredUserInfo> GetWorkspaceOwners(Web web);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<ConfiguredUserInfo> GetWorkspaceMembers(Web web);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<ConfiguredUserInfo> AddWorkspaceOwners(Web web, IList`1<ConfiguredUserInfo> usersInfo);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<ConfiguredUserInfo> AddWorkspaceMembers(Web web, IList`1<ConfiguredUserInfo> usersInfo);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<ConfiguredUserInfo> AddTemplateManagerUsers(Web web, IList`1<ConfiguredUserInfo> usersInfo);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<ConfiguredUserInfo> RemoveWorkspaceOwners(Web web, IList`1<ConfiguredUserInfo> usersInfo);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<ConfiguredUserInfo> RemoveWorkspaceMembers(Web web, IList`1<ConfiguredUserInfo> usersInfo);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<ConfiguredUserInfo> RemoveTemplateManagerUsers(Web web, IList`1<ConfiguredUserInfo> usersInfo);
    [ExtensionAttribute]
[RemoteAttribute]
public static void ProvisionTemplateManagerGroup(Web web);
    [ExtensionAttribute]
[RemoteAttribute]
public static void ProvisionWorkspaceOwnerGroup(Web web);
    [ExtensionAttribute]
[RemoteAttribute]
public static void ProvisionWorkspaceMemberGroup(Web web);
}
[ScriptTypeAttribute("SP.CAAEFieldElement")]
public class Microsoft.SharePoint.Client.CAAEFieldElement : ClientValueObject {
    private string m_id;
    private string m_version;
    [RemoteAttribute]
public string Id { get; public set; }
    [RemoteAttribute]
public string Version { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Id();
    public void set_Id(string value);
    public string get_Version();
    public void set_Version(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CAAESnippetElement")]
public class Microsoft.SharePoint.Client.CAAESnippetElement : ClientValueObject {
    private string m_id;
    private string m_version;
    [RemoteAttribute]
public string Id { get; public set; }
    [RemoteAttribute]
public string Version { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Id();
    public void set_Id(string value);
    public string get_Version();
    public void set_Version(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CAFieldValue")]
public class Microsoft.SharePoint.Client.CAFieldValue : ClientValueObject {
    private string m_dataType;
    private string m_id;
    private string m_name;
    private string m_value;
    [RemoteAttribute]
public string DataType { get; public set; }
    [RemoteAttribute]
public string Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string Value { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DataType();
    public void set_DataType(string value);
    public string get_Id();
    public void set_Id(string value);
    public string get_Name();
    public void set_Name(string value);
    public string get_Value();
    public void set_Value(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.CalendarType : Enum {
    public int value__;
    public static CalendarType None;
    public static CalendarType Gregorian;
    public static CalendarType Japan;
    public static CalendarType Taiwan;
    public static CalendarType Korea;
    public static CalendarType Hijri;
    public static CalendarType Thai;
    public static CalendarType Hebrew;
    public static CalendarType GregorianMEFrench;
    public static CalendarType GregorianArabic;
    public static CalendarType GregorianXLITEnglish;
    public static CalendarType GregorianXLITFrench;
    public static CalendarType KoreaJapanLunar;
    public static CalendarType ChineseLunar;
    public static CalendarType SakaEra;
    public static CalendarType UmAlQura;
}
[ScriptTypeAttribute("SP.CamlQuery")]
public class Microsoft.SharePoint.Client.CamlQuery : ClientValueObject {
    private bool m_allowIncrementalResults;
    private bool m_datesInUtc;
    private ResourcePath m_folderServerRelativePath;
    private string m_folderServerRelativeUrl;
    private ListItemCollectionPosition m_listItemCollectionPosition;
    private string m_viewXml;
    [RemoteAttribute]
public bool AllowIncrementalResults { get; public set; }
    [RemoteAttribute]
public bool DatesInUtc { get; public set; }
    [RemoteAttribute]
public ResourcePath FolderServerRelativePath { get; public set; }
    [RemoteAttribute]
public string FolderServerRelativeUrl { get; public set; }
    [RemoteAttribute]
public ListItemCollectionPosition ListItemCollectionPosition { get; public set; }
    [RemoteAttribute]
public string ViewXml { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public static CamlQuery CreateAllItemsQuery();
    public static CamlQuery CreateAllItemsQuery(int rowLimit, String[] viewFields);
    public static CamlQuery CreateAllFoldersQuery();
    public bool get_AllowIncrementalResults();
    public void set_AllowIncrementalResults(bool value);
    public bool get_DatesInUtc();
    public void set_DatesInUtc(bool value);
    public ResourcePath get_FolderServerRelativePath();
    public void set_FolderServerRelativePath(ResourcePath value);
    public string get_FolderServerRelativeUrl();
    public void set_FolderServerRelativeUrl(string value);
    public ListItemCollectionPosition get_ListItemCollectionPosition();
    public void set_ListItemCollectionPosition(ListItemCollectionPosition value);
    public string get_ViewXml();
    public void set_ViewXml(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Campaigns.CampaignCommunicationEntity")]
public class Microsoft.SharePoint.Client.CampaignCommunicationEntity : ClientValueObject {
    private string m_campaignId;
    private IList`1<string> m_channels;
    private string m_communicationId;
    private CampaignUserInfo m_createdBy;
    private DateTime m_lastEditedDateTime;
    private string m_page;
    private DateTime m_publishingDateTime;
    private string m_state;
    private string m_title;
    [RemoteAttribute]
public string campaignId { get; public set; }
    [RemoteAttribute]
public IList`1<string> channels { get; public set; }
    [RemoteAttribute]
public string communicationId { get; public set; }
    [RemoteAttribute]
public CampaignUserInfo createdBy { get; public set; }
    [RemoteAttribute]
public DateTime lastEditedDateTime { get; public set; }
    [RemoteAttribute]
public string page { get; public set; }
    [RemoteAttribute]
public DateTime publishingDateTime { get; public set; }
    [RemoteAttribute]
public string state { get; public set; }
    [RemoteAttribute]
public string title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_campaignId();
    public void set_campaignId(string value);
    public IList`1<string> get_channels();
    public void set_channels(IList`1<string> value);
    public string get_communicationId();
    public void set_communicationId(string value);
    public CampaignUserInfo get_createdBy();
    public void set_createdBy(CampaignUserInfo value);
    public DateTime get_lastEditedDateTime();
    public void set_lastEditedDateTime(DateTime value);
    public string get_page();
    public void set_page(string value);
    public DateTime get_publishingDateTime();
    public void set_publishingDateTime(DateTime value);
    public string get_state();
    public void set_state(string value);
    public string get_title();
    public void set_title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Campaigns.CampaignEntity")]
public class Microsoft.SharePoint.Client.CampaignEntity : ClientValueObject {
    private string m_campaignId;
    private IList`1<string> m_channels;
    private IList`1<CampaignUserInfo> m_contributors;
    private string m_description;
    private DateTime m_endDate;
    private IList`1<string> m_objectives;
    private CampaignUserInfo m_owner;
    private DateTime m_startDate;
    private string m_status;
    private IList`1<string> m_tags;
    private string m_title;
    [RemoteAttribute]
public string campaignId { get; public set; }
    [RemoteAttribute]
public IList`1<string> channels { get; public set; }
    [RemoteAttribute]
public IList`1<CampaignUserInfo> contributors { get; public set; }
    [RemoteAttribute]
public string description { get; public set; }
    [RemoteAttribute]
public DateTime endDate { get; public set; }
    [RemoteAttribute]
public IList`1<string> objectives { get; public set; }
    [RemoteAttribute]
public CampaignUserInfo owner { get; public set; }
    [RemoteAttribute]
public DateTime startDate { get; public set; }
    [RemoteAttribute]
public string status { get; public set; }
    [RemoteAttribute]
public IList`1<string> tags { get; public set; }
    [RemoteAttribute]
public string title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_campaignId();
    public void set_campaignId(string value);
    public IList`1<string> get_channels();
    public void set_channels(IList`1<string> value);
    public IList`1<CampaignUserInfo> get_contributors();
    public void set_contributors(IList`1<CampaignUserInfo> value);
    public string get_description();
    public void set_description(string value);
    public DateTime get_endDate();
    public void set_endDate(DateTime value);
    public IList`1<string> get_objectives();
    public void set_objectives(IList`1<string> value);
    public CampaignUserInfo get_owner();
    public void set_owner(CampaignUserInfo value);
    public DateTime get_startDate();
    public void set_startDate(DateTime value);
    public string get_status();
    public void set_status(string value);
    public IList`1<string> get_tags();
    public void set_tags(IList`1<string> value);
    public string get_title();
    public void set_title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Campaigns.CampaignSummary")]
public class Microsoft.SharePoint.Client.CampaignSummary : ClientValueObject {
    private string m_campaignId;
    private DateTime m_endDate;
    private CampaignUserInfo m_owner;
    private DateTime m_startDate;
    private string m_status;
    private IList`1<string> m_tags;
    private string m_title;
    [RemoteAttribute]
public string campaignId { get; public set; }
    [RemoteAttribute]
public DateTime endDate { get; public set; }
    [RemoteAttribute]
public CampaignUserInfo owner { get; public set; }
    [RemoteAttribute]
public DateTime startDate { get; public set; }
    [RemoteAttribute]
public string status { get; public set; }
    [RemoteAttribute]
public IList`1<string> tags { get; public set; }
    [RemoteAttribute]
public string title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_campaignId();
    public void set_campaignId(string value);
    public DateTime get_endDate();
    public void set_endDate(DateTime value);
    public CampaignUserInfo get_owner();
    public void set_owner(CampaignUserInfo value);
    public DateTime get_startDate();
    public void set_startDate(DateTime value);
    public string get_status();
    public void set_status(string value);
    public IList`1<string> get_tags();
    public void set_tags(IList`1<string> value);
    public string get_title();
    public void set_title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Campaigns.CampaignUserInfo")]
public class Microsoft.SharePoint.Client.CampaignUserInfo : ClientValueObject {
    private string m_email;
    private int m_id;
    private bool m_isExternal;
    private string m_loginName;
    private string m_name;
    private PrincipalType m_principalType;
    private UserIdInfo m_userId;
    private string m_userPrincipalName;
    [RemoteAttribute]
public string email { get; public set; }
    [RemoteAttribute]
public int id { get; public set; }
    [RemoteAttribute]
public bool isExternal { get; public set; }
    [RemoteAttribute]
public string loginName { get; public set; }
    [RemoteAttribute]
public string name { get; public set; }
    [RemoteAttribute]
public PrincipalType principalType { get; public set; }
    [RemoteAttribute]
public UserIdInfo userId { get; }
    [RemoteAttribute]
public string userPrincipalName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_email();
    public void set_email(string value);
    public int get_id();
    public void set_id(int value);
    public bool get_isExternal();
    public void set_isExternal(bool value);
    public string get_loginName();
    public void set_loginName(string value);
    public string get_name();
    public void set_name(string value);
    public PrincipalType get_principalType();
    public void set_principalType(PrincipalType value);
    public UserIdInfo get_userId();
    public string get_userPrincipalName();
    public void set_userPrincipalName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CampainAnalytics")]
public static class Microsoft.SharePoint.Client.CampainAnalytics : object {
    [RemoteAttribute]
public static ClientResult`1<ReportResponse> GetReport(ClientRuntimeContext context, VinciAnalyticsReportRequest request);
    [RemoteAttribute]
public static ClientResult`1<DimensionsResponse> GetDimensions(ClientRuntimeContext context, VinciAnalyticsDimensionsRequest request);
}
[ScriptTypeAttribute("SP.Change")]
public class Microsoft.SharePoint.Client.Change : ClientObject {
    [RemoteAttribute]
public ChangeToken ChangeToken { get; }
    [RemoteAttribute]
public ChangeType ChangeType { get; }
    [RemoteAttribute]
public string RelativeTime { get; }
    [RemoteAttribute]
public Guid SiteId { get; }
    [RemoteAttribute]
public DateTime Time { get; }
    [EditorBrowsableAttribute("1")]
public Change(ClientRuntimeContext context, ObjectPath objectPath);
    public ChangeToken get_ChangeToken();
    public ChangeType get_ChangeType();
    public string get_RelativeTime();
    public Guid get_SiteId();
    public DateTime get_Time();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ChangeAlert")]
public class Microsoft.SharePoint.Client.ChangeAlert : Change {
    [RemoteAttribute]
public Guid AlertId { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public ChangeAlert(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_AlertId();
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeAlertPropertyNames : object {
    public static string AlertId;
    public static string WebId;
}
[ScriptTypeAttribute("SP.ChangeAppConsentPrincipal")]
public class Microsoft.SharePoint.Client.ChangeAppConsentPrincipal : Change {
    [RemoteAttribute]
public int AppConsentPrincipalId { get; }
    [EditorBrowsableAttribute("1")]
public ChangeAppConsentPrincipal(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_AppConsentPrincipalId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeAppConsentPrincipalPropertyNames : object {
    public static string AppConsentPrincipalId;
}
[ScriptTypeAttribute("SP.ChangeCollection")]
public class Microsoft.SharePoint.Client.ChangeCollection : ClientObjectCollection`1<Change> {
    [RemoteAttribute]
public bool HasMoreChanges { get; }
    [RemoteAttribute]
public ChangeToken LastChangeToken { get; }
    [EditorBrowsableAttribute("1")]
public ChangeCollection(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_HasMoreChanges();
    public ChangeToken get_LastChangeToken();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeCollectionPropertyNames : object {
    public static string HasMoreChanges;
    public static string LastChangeToken;
}
[ScriptTypeAttribute("SP.ChangeContentType")]
public class Microsoft.SharePoint.Client.ChangeContentType : Change {
    [RemoteAttribute]
public ContentTypeId ContentTypeId { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public ChangeContentType(ClientRuntimeContext context, ObjectPath objectPath);
    public ContentTypeId get_ContentTypeId();
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeContentTypePropertyNames : object {
    public static string ContentTypeId;
    public static string WebId;
}
[ScriptTypeAttribute("SP.ChangeField")]
public class Microsoft.SharePoint.Client.ChangeField : Change {
    [RemoteAttribute]
public Guid FieldId { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public ChangeField(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_FieldId();
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeFieldPropertyNames : object {
    public static string FieldId;
    public static string WebId;
}
[ScriptTypeAttribute("SP.ChangeFile")]
public class Microsoft.SharePoint.Client.ChangeFile : Change {
    [RemoteAttribute]
public Guid UniqueId { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public ChangeFile(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_UniqueId();
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeFilePropertyNames : object {
    public static string UniqueId;
    public static string WebId;
}
[ScriptTypeAttribute("SP.ChangeFolder")]
public class Microsoft.SharePoint.Client.ChangeFolder : Change {
    [RemoteAttribute]
public bool IsRecycleBinOperation { get; }
    [RemoteAttribute]
public Guid UniqueId { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public ChangeFolder(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_IsRecycleBinOperation();
    public Guid get_UniqueId();
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeFolderPropertyNames : object {
    public static string IsRecycleBinOperation;
    public static string UniqueId;
    public static string WebId;
}
[ScriptTypeAttribute("SP.ChangeGroup")]
public class Microsoft.SharePoint.Client.ChangeGroup : Change {
    [RemoteAttribute]
public int GroupId { get; }
    [EditorBrowsableAttribute("1")]
public ChangeGroup(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_GroupId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeGroupPropertyNames : object {
    public static string GroupId;
}
[ScriptTypeAttribute("SP.ChangeItem")]
public class Microsoft.SharePoint.Client.ChangeItem : Change {
    [RemoteAttribute]
public SPChangeActivityType ActivityType { get; }
    [RemoteAttribute]
public ContentTypeId ContentTypeId { get; }
    [RemoteAttribute]
public string Editor { get; }
    [RemoteAttribute]
public string EditorEmailHint { get; }
    [RemoteAttribute]
public string EditorLoginName { get; }
    [RemoteAttribute]
public FileSystemObjectType FileSystemObjectType { get; }
    [RemoteAttribute]
public string FileType { get; }
    [RemoteAttribute]
public string Hashtag { get; }
    [RemoteAttribute]
public bool Hidden { get; }
    [RemoteAttribute]
public int ItemId { get; }
    [RemoteAttribute]
public bool IsRecycleBinOperation { get; }
    [RemoteAttribute]
public Guid ListId { get; }
    [RemoteAttribute]
public ListTemplateType ListTemplate { get; }
    [RemoteAttribute]
public string ListTitle { get; }
    [RemoteAttribute]
public bool MoveWasForRecycle { get; }
    [RemoteAttribute]
public bool MoveWasForRestore { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [RemoteAttribute]
public SharedWithUser SharedByUser { get; }
    [RemoteAttribute]
public SharedWithUserCollection SharedWithUsers { get; }
    [RemoteAttribute]
public string Title { get; }
    [RemoteAttribute]
public Guid UniqueId { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public ChangeItem(ClientRuntimeContext context, ObjectPath objectPath);
    public SPChangeActivityType get_ActivityType();
    public ContentTypeId get_ContentTypeId();
    public string get_Editor();
    public string get_EditorEmailHint();
    public string get_EditorLoginName();
    public FileSystemObjectType get_FileSystemObjectType();
    public string get_FileType();
    public string get_Hashtag();
    public bool get_Hidden();
    public int get_ItemId();
    public bool get_IsRecycleBinOperation();
    public Guid get_ListId();
    public ListTemplateType get_ListTemplate();
    public string get_ListTitle();
    public bool get_MoveWasForRecycle();
    public bool get_MoveWasForRestore();
    public string get_ServerRelativeUrl();
    public SharedWithUser get_SharedByUser();
    public SharedWithUserCollection get_SharedWithUsers();
    public string get_Title();
    public Guid get_UniqueId();
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeItemPropertyNames : object {
    public static string ActivityType;
    public static string ContentTypeId;
    public static string Editor;
    public static string EditorEmailHint;
    public static string EditorLoginName;
    public static string FileSystemObjectType;
    public static string FileType;
    public static string Hashtag;
    public static string Hidden;
    public static string ItemId;
    public static string IsRecycleBinOperation;
    public static string ListId;
    public static string ListTemplate;
    public static string ListTitle;
    public static string MoveWasForRecycle;
    public static string MoveWasForRestore;
    public static string ServerRelativeUrl;
    public static string SharedByUser;
    public static string SharedWithUsers;
    public static string Title;
    public static string UniqueId;
    public static string WebId;
}
[ScriptTypeAttribute("SP.ChangeList")]
public class Microsoft.SharePoint.Client.ChangeList : Change {
    [RemoteAttribute]
public ListTemplateType BaseTemplate { get; }
    [RemoteAttribute]
public User Creator { get; }
    [RemoteAttribute]
public string Editor { get; }
    [RemoteAttribute]
public bool Hidden { get; }
    [RemoteAttribute]
public Guid ListId { get; }
    [RemoteAttribute]
public bool IsRecycleBinOperation { get; }
    [RemoteAttribute]
public string RootFolderUrl { get; }
    [RemoteAttribute]
public string Title { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public ChangeList(ClientRuntimeContext context, ObjectPath objectPath);
    public ListTemplateType get_BaseTemplate();
    public User get_Creator();
    public string get_Editor();
    public bool get_Hidden();
    public Guid get_ListId();
    public bool get_IsRecycleBinOperation();
    public string get_RootFolderUrl();
    public string get_Title();
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeListObjectPropertyNames : object {
    public static string Creator;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeListPropertyNames : object {
    public static string BaseTemplate;
    public static string Editor;
    public static string Hidden;
    public static string ListId;
    public static string IsRecycleBinOperation;
    public static string RootFolderUrl;
    public static string Title;
    public static string WebId;
}
[ScriptTypeAttribute("SP.ChangeLogItemQuery")]
public class Microsoft.SharePoint.Client.ChangeLogItemQuery : ClientValueObject {
    private string m_changeToken;
    private string m_contains;
    private string m_query;
    private string m_queryOptions;
    private string m_rowLimit;
    private string m_viewFields;
    private string m_viewName;
    [RemoteAttribute]
public string ChangeToken { get; public set; }
    [RemoteAttribute]
public string Contains { get; public set; }
    [RemoteAttribute]
public string Query { get; public set; }
    [RemoteAttribute]
public string QueryOptions { get; public set; }
    [RemoteAttribute]
public string RowLimit { get; public set; }
    [RemoteAttribute]
public string ViewFields { get; public set; }
    [RemoteAttribute]
public string ViewName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ChangeToken();
    public void set_ChangeToken(string value);
    public string get_Contains();
    public void set_Contains(string value);
    public string get_Query();
    public void set_Query(string value);
    public string get_QueryOptions();
    public void set_QueryOptions(string value);
    public string get_RowLimit();
    public void set_RowLimit(string value);
    public string get_ViewFields();
    public void set_ViewFields(string value);
    public string get_ViewName();
    public void set_ViewName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangePropertyNames : object {
    public static string ChangeToken;
    public static string ChangeType;
    public static string RelativeTime;
    public static string SiteId;
    public static string Time;
}
[ScriptTypeAttribute("SP.ChangeQuery")]
public class Microsoft.SharePoint.Client.ChangeQuery : ClientValueObject {
    private bool m_activity;
    private bool m_add;
    private bool m_alert;
    private bool m_appConsentPrincipal;
    private ChangeToken m_changeTokenEnd;
    private ChangeToken m_changeTokenStart;
    private bool m_contentType;
    private bool m_deleteObject;
    private long m_fetchLimit;
    private bool m_field;
    private bool m_file;
    private bool m_folder;
    private bool m_group;
    private bool m_groupMembershipAdd;
    private bool m_groupMembershipDelete;
    private bool m_ignoreStartTokenNotFoundError;
    private bool m_item;
    private bool m_latestFirst;
    private bool m_list;
    private bool m_move;
    private bool m_navigation;
    private bool m_recursiveAll;
    private bool m_rename;
    private bool m_requireSecurityTrim;
    private bool m_restore;
    private bool m_roleAssignmentAdd;
    private bool m_roleAssignmentDelete;
    private bool m_roleDefinitionAdd;
    private bool m_roleDefinitionDelete;
    private bool m_roleDefinitionUpdate;
    private bool m_securityPolicy;
    private bool m_site;
    private bool m_systemUpdate;
    private bool m_update;
    private bool m_user;
    private bool m_view;
    private bool m_web;
    [RemoteAttribute]
public bool Activity { get; public set; }
    [RemoteAttribute]
public bool Add { get; public set; }
    [RemoteAttribute]
public bool Alert { get; public set; }
    [RemoteAttribute]
public bool AppConsentPrincipal { get; public set; }
    [RemoteAttribute]
public ChangeToken ChangeTokenEnd { get; public set; }
    [RemoteAttribute]
public ChangeToken ChangeTokenStart { get; public set; }
    [RemoteAttribute]
public bool ContentType { get; public set; }
    [RemoteAttribute]
public bool DeleteObject { get; public set; }
    [RemoteAttribute]
public long FetchLimit { get; public set; }
    [RemoteAttribute]
public bool Field { get; public set; }
    [RemoteAttribute]
public bool File { get; public set; }
    [RemoteAttribute]
public bool Folder { get; public set; }
    [RemoteAttribute]
public bool Group { get; public set; }
    [RemoteAttribute]
public bool GroupMembershipAdd { get; public set; }
    [RemoteAttribute]
public bool GroupMembershipDelete { get; public set; }
    [RemoteAttribute]
public bool IgnoreStartTokenNotFoundError { get; public set; }
    [RemoteAttribute]
public bool Item { get; public set; }
    [RemoteAttribute]
public bool LatestFirst { get; public set; }
    [RemoteAttribute]
public bool List { get; public set; }
    [RemoteAttribute]
public bool Move { get; public set; }
    [RemoteAttribute]
public bool Navigation { get; public set; }
    [RemoteAttribute]
public bool RecursiveAll { get; public set; }
    [RemoteAttribute]
public bool Rename { get; public set; }
    [RemoteAttribute]
public bool RequireSecurityTrim { get; public set; }
    [RemoteAttribute]
public bool Restore { get; public set; }
    [RemoteAttribute]
public bool RoleAssignmentAdd { get; public set; }
    [RemoteAttribute]
public bool RoleAssignmentDelete { get; public set; }
    [RemoteAttribute]
public bool RoleDefinitionAdd { get; public set; }
    [RemoteAttribute]
public bool RoleDefinitionDelete { get; public set; }
    [RemoteAttribute]
public bool RoleDefinitionUpdate { get; public set; }
    [RemoteAttribute]
public bool SecurityPolicy { get; public set; }
    [RemoteAttribute]
public bool Site { get; public set; }
    [RemoteAttribute]
public bool SystemUpdate { get; public set; }
    [RemoteAttribute]
public bool Update { get; public set; }
    [RemoteAttribute]
public bool User { get; public set; }
    [RemoteAttribute]
public bool View { get; public set; }
    [RemoteAttribute]
public bool Web { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public ChangeQuery(bool allChangeObjectTypes, bool allChangeTypes);
    private void InitQuery(bool allChangeObjectTypes, bool allChangeTypes);
    public bool get_Activity();
    public void set_Activity(bool value);
    public bool get_Add();
    public void set_Add(bool value);
    public bool get_Alert();
    public void set_Alert(bool value);
    public bool get_AppConsentPrincipal();
    public void set_AppConsentPrincipal(bool value);
    public ChangeToken get_ChangeTokenEnd();
    public void set_ChangeTokenEnd(ChangeToken value);
    public ChangeToken get_ChangeTokenStart();
    public void set_ChangeTokenStart(ChangeToken value);
    public bool get_ContentType();
    public void set_ContentType(bool value);
    public bool get_DeleteObject();
    public void set_DeleteObject(bool value);
    public long get_FetchLimit();
    public void set_FetchLimit(long value);
    public bool get_Field();
    public void set_Field(bool value);
    public bool get_File();
    public void set_File(bool value);
    public bool get_Folder();
    public void set_Folder(bool value);
    public bool get_Group();
    public void set_Group(bool value);
    public bool get_GroupMembershipAdd();
    public void set_GroupMembershipAdd(bool value);
    public bool get_GroupMembershipDelete();
    public void set_GroupMembershipDelete(bool value);
    public bool get_IgnoreStartTokenNotFoundError();
    public void set_IgnoreStartTokenNotFoundError(bool value);
    public bool get_Item();
    public void set_Item(bool value);
    public bool get_LatestFirst();
    public void set_LatestFirst(bool value);
    public bool get_List();
    public void set_List(bool value);
    public bool get_Move();
    public void set_Move(bool value);
    public bool get_Navigation();
    public void set_Navigation(bool value);
    public bool get_RecursiveAll();
    public void set_RecursiveAll(bool value);
    public bool get_Rename();
    public void set_Rename(bool value);
    public bool get_RequireSecurityTrim();
    public void set_RequireSecurityTrim(bool value);
    public bool get_Restore();
    public void set_Restore(bool value);
    public bool get_RoleAssignmentAdd();
    public void set_RoleAssignmentAdd(bool value);
    public bool get_RoleAssignmentDelete();
    public void set_RoleAssignmentDelete(bool value);
    public bool get_RoleDefinitionAdd();
    public void set_RoleDefinitionAdd(bool value);
    public bool get_RoleDefinitionDelete();
    public void set_RoleDefinitionDelete(bool value);
    public bool get_RoleDefinitionUpdate();
    public void set_RoleDefinitionUpdate(bool value);
    public bool get_SecurityPolicy();
    public void set_SecurityPolicy(bool value);
    public bool get_Site();
    public void set_Site(bool value);
    public bool get_SystemUpdate();
    public void set_SystemUpdate(bool value);
    public bool get_Update();
    public void set_Update(bool value);
    public bool get_User();
    public void set_User(bool value);
    public bool get_View();
    public void set_View(bool value);
    public bool get_Web();
    public void set_Web(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ChangeSite")]
public class Microsoft.SharePoint.Client.ChangeSite : Change {
    [EditorBrowsableAttribute("1")]
public ChangeSite(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.ChangeToken")]
public class Microsoft.SharePoint.Client.ChangeToken : ClientValueObject {
    private string m_stringValue;
    [RemoteAttribute]
public string StringValue { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_StringValue();
    public void set_StringValue(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.ChangeType : Enum {
    public int value__;
    public static ChangeType NoChange;
    public static ChangeType Add;
    public static ChangeType Update;
    public static ChangeType DeleteObject;
    public static ChangeType Rename;
    public static ChangeType MoveAway;
    public static ChangeType MoveInto;
    public static ChangeType Restore;
    public static ChangeType RoleAdd;
    public static ChangeType RoleDelete;
    public static ChangeType RoleUpdate;
    public static ChangeType AssignmentAdd;
    public static ChangeType AssignmentDelete;
    public static ChangeType MemberAdd;
    public static ChangeType MemberDelete;
    public static ChangeType SystemUpdate;
    public static ChangeType Navigation;
    public static ChangeType ScopeAdd;
    public static ChangeType ScopeDelete;
    public static ChangeType ListContentTypeAdd;
    public static ChangeType ListContentTypeDelete;
    public static ChangeType Dirty;
    public static ChangeType Activity;
}
[ScriptTypeAttribute("SP.ChangeUser")]
public class Microsoft.SharePoint.Client.ChangeUser : Change {
    [RemoteAttribute]
public bool Activate { get; }
    [RemoteAttribute]
public int UserId { get; }
    [EditorBrowsableAttribute("1")]
public ChangeUser(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_Activate();
    public int get_UserId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeUserPropertyNames : object {
    public static string Activate;
    public static string UserId;
}
[ScriptTypeAttribute("SP.ChangeView")]
public class Microsoft.SharePoint.Client.ChangeView : Change {
    [RemoteAttribute]
public Guid ViewId { get; }
    [RemoteAttribute]
public Guid ListId { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public ChangeView(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_ViewId();
    public Guid get_ListId();
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeViewPropertyNames : object {
    public static string ViewId;
    public static string ListId;
    public static string WebId;
}
[ScriptTypeAttribute("SP.ChangeWeb")]
public class Microsoft.SharePoint.Client.ChangeWeb : Change {
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public ChangeWeb(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ChangeWebPropertyNames : object {
    public static string WebId;
}
[ScriptTypeAttribute("SP.CheckedOutFile")]
public class Microsoft.SharePoint.Client.CheckedOutFile : ClientObject {
    [RemoteAttribute]
public User CheckedOutBy { get; }
    [RemoteAttribute]
public int CheckedOutById { get; }
    [RemoteAttribute]
public ResourcePath ServerRelativePath { get; }
    [EditorBrowsableAttribute("1")]
public CheckedOutFile(ClientRuntimeContext context, ObjectPath objectPath);
    public User get_CheckedOutBy();
    public int get_CheckedOutById();
    public ResourcePath get_ServerRelativePath();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void TakeOverCheckOut();
}
[ScriptTypeAttribute("SP.CheckedOutFileCollection")]
public class Microsoft.SharePoint.Client.CheckedOutFileCollection : ClientObjectCollection`1<CheckedOutFile> {
    [EditorBrowsableAttribute("1")]
public CheckedOutFileCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public CheckedOutFile GetByPath(ResourcePath path);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.CheckedOutFileObjectPropertyNames : object {
    public static string CheckedOutBy;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.CheckedOutFilePropertyNames : object {
    public static string CheckedOutById;
    public static string ServerRelativePath;
}
public enum Microsoft.SharePoint.Client.CheckinType : Enum {
    public int value__;
    public static CheckinType MinorCheckIn;
    public static CheckinType MajorCheckIn;
    public static CheckinType OverwriteCheckIn;
}
public enum Microsoft.SharePoint.Client.CheckOutType : Enum {
    public int value__;
    public static CheckOutType Online;
    public static CheckOutType Offline;
    public static CheckOutType None;
}
public enum Microsoft.SharePoint.Client.ChoiceFormatType : Enum {
    public int value__;
    public static ChoiceFormatType Dropdown;
    public static ChoiceFormatType RadioButtons;
}
[ScriptTypeAttribute("SP.ClassificationResult")]
public class Microsoft.SharePoint.Client.ClassificationResult : ClientValueObject {
    private double m_confidenceScore;
    private string m_contentTypeId;
    private string m_contentTypeName;
    private string m_error;
    private IDictionary`2<string, string> m_metas;
    private string m_modelId;
    private string m_modelVersion;
    private int m_retentionLabelFlags;
    private string m_retentionLabelName;
    private int m_retryCount;
    private string m_sensitivityLabel;
    private IDictionary`2<string, string> m_tableMetas;
    [RemoteAttribute]
public double ConfidenceScore { get; public set; }
    [RemoteAttribute]
public string ContentTypeId { get; public set; }
    [RemoteAttribute]
public string ContentTypeName { get; public set; }
    [RemoteAttribute]
public string Error { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, string> Metas { get; public set; }
    [RemoteAttribute]
public string ModelId { get; public set; }
    [RemoteAttribute]
public string ModelVersion { get; public set; }
    [RemoteAttribute]
public int RetentionLabelFlags { get; public set; }
    [RemoteAttribute]
public string RetentionLabelName { get; public set; }
    [RemoteAttribute]
public int RetryCount { get; public set; }
    [RemoteAttribute]
public string SensitivityLabel { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, string> TableMetas { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public double get_ConfidenceScore();
    public void set_ConfidenceScore(double value);
    public string get_ContentTypeId();
    public void set_ContentTypeId(string value);
    public string get_ContentTypeName();
    public void set_ContentTypeName(string value);
    public string get_Error();
    public void set_Error(string value);
    public IDictionary`2<string, string> get_Metas();
    public void set_Metas(IDictionary`2<string, string> value);
    public string get_ModelId();
    public void set_ModelId(string value);
    public string get_ModelVersion();
    public void set_ModelVersion(string value);
    public int get_RetentionLabelFlags();
    public void set_RetentionLabelFlags(int value);
    public string get_RetentionLabelName();
    public void set_RetentionLabelName(string value);
    public int get_RetryCount();
    public void set_RetryCount(int value);
    public string get_SensitivityLabel();
    public void set_SensitivityLabel(string value);
    public IDictionary`2<string, string> get_TableMetas();
    public void set_TableMetas(IDictionary`2<string, string> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public class Microsoft.SharePoint.Client.ClientContext : ClientRuntimeContext {
    private Web m_web;
    private Site m_site;
    private RequestResources m_requestResources;
    private bool m_formDigestHandlingEnabled;
    private FormDigestInfo m_formDigestInfo;
    private static string GetUpdatedFormDigestInfoRequestBody;
    private static XmlNamespaceManager s_nsmgr;
    public Web Web { get; }
    public Site Site { get; }
    public RequestResources RequestResources { get; }
    private string RequestResourceHeaderValue { get; }
    public bool FormDigestHandlingEnabled { get; public set; }
    public Version ServerVersion { get; }
    private static XmlNamespaceManager NamespaceManager { get; }
    public ClientContext(string webFullUrl);
    public ClientContext(Uri webFullUrl);
    public Web get_Web();
    public Site get_Site();
    public RequestResources get_RequestResources();
    private string get_RequestResourceHeaderValue();
    public bool get_FormDigestHandlingEnabled();
    public void set_FormDigestHandlingEnabled(bool value);
    public FormDigestInfo GetFormDigestDirect();
    public Version get_ServerVersion();
    private string GetValueFromResponse(string response, string beginTag, string endTag);
    private string GetSitesAsmxUrl();
    private void BuildGetUpdatedFormDigestInfoRequestBody(Stream requestStream);
    private FormDigestInfo ParseFormDigest(Stream responseStream);
    internal void FireExecutingWebRequestEventInternal(WebRequestEventArgs args);
    public virtual void ExecuteQuery();
    [AsyncStateMachineAttribute("Microsoft.SharePoint.Client.ClientContext/<ExecuteQueryAsync>d__28")]
public virtual Task ExecuteQueryAsync();
    private void SetRequestHeaderValue();
    private static XmlNamespaceManager get_NamespaceManager();
    private string ExtractSoapError(WebException webEx);
    private void EnsureFormDigest();
    private FormDigestInfo GetFormDigestInfoPrivate();
    [AsyncStateMachineAttribute("Microsoft.SharePoint.Client.ClientContext/<EnsureFormDigestAsync>d__36")]
private Task EnsureFormDigestAsync();
    [AsyncStateMachineAttribute("Microsoft.SharePoint.Client.ClientContext/<GetFormDigestInfoPrivateAsync>d__37")]
private Task`1<FormDigestInfo> GetFormDigestInfoPrivateAsync();
    private FormDigestInfo GetFormDigestInfo(WebRequestExecutor executor);
    private WebRequestExecutor GetWebRequestExecutor();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0();
}
[ScriptTypeAttribute("SP.ColumnTypeInfo")]
public class Microsoft.SharePoint.Client.ColumnTypeInfo : ClientValueObject {
    private string m_placeholderId;
    private string m_translatedPlaceholderType;
    [RemoteAttribute]
public string PlaceholderId { get; public set; }
    [RemoteAttribute]
public string TranslatedPlaceholderType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_PlaceholderId();
    public void set_PlaceholderId(string value);
    public string get_TranslatedPlaceholderType();
    public void set_TranslatedPlaceholderType(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CompatibilityRange")]
public class Microsoft.SharePoint.Client.CompatibilityRange : ClientObject {
    [EditorBrowsableAttribute("1")]
public CompatibilityRange(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.ConfigurationData")]
public class Microsoft.SharePoint.Client.ConfigurationData : ClientValueObject {
    private ResourcePath m_bridgeAbsolutePath;
    private bool m_isCustomizedThemeEnabled;
    private bool m_isPersonalizationEnabled;
    private bool m_isVivaHomeOptedOut;
    private HomeSiteNavConfiguration m_navConfig;
    private Guid m_siteId;
    private string m_theme;
    private VivaExperienceType m_vivaExperienceType;
    private Guid m_webId;
    [RemoteAttribute]
public ResourcePath BridgeAbsolutePath { get; public set; }
    [RemoteAttribute]
public bool IsCustomizedThemeEnabled { get; public set; }
    [RemoteAttribute]
public bool IsPersonalizationEnabled { get; public set; }
    [RemoteAttribute]
public bool IsVivaHomeOptedOut { get; public set; }
    [RemoteAttribute]
public HomeSiteNavConfiguration NavConfig { get; public set; }
    [RemoteAttribute]
public Guid SiteId { get; public set; }
    [RemoteAttribute]
public string Theme { get; public set; }
    [RemoteAttribute]
public VivaExperienceType VivaExperienceType { get; public set; }
    [RemoteAttribute]
public Guid WebId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public ResourcePath get_BridgeAbsolutePath();
    public void set_BridgeAbsolutePath(ResourcePath value);
    public bool get_IsCustomizedThemeEnabled();
    public void set_IsCustomizedThemeEnabled(bool value);
    public bool get_IsPersonalizationEnabled();
    public void set_IsPersonalizationEnabled(bool value);
    public bool get_IsVivaHomeOptedOut();
    public void set_IsVivaHomeOptedOut(bool value);
    public HomeSiteNavConfiguration get_NavConfig();
    public void set_NavConfig(HomeSiteNavConfiguration value);
    public Guid get_SiteId();
    public void set_SiteId(Guid value);
    public string get_Theme();
    public void set_Theme(string value);
    public VivaExperienceType get_VivaExperienceType();
    public void set_VivaExperienceType(VivaExperienceType value);
    public Guid get_WebId();
    public void set_WebId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ConfiguredUserInfo")]
public class Microsoft.SharePoint.Client.ConfiguredUserInfo : ClientValueObject {
    private string m_email;
    private string m_loginName;
    private string m_name;
    private string m_profilePicUrl;
    private int m_userId;
    [RemoteAttribute]
public string Email { get; public set; }
    [RemoteAttribute]
public string LoginName { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string ProfilePicUrl { get; public set; }
    [RemoteAttribute]
public int UserId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Email();
    public void set_Email(string value);
    public string get_LoginName();
    public void set_LoginName(string value);
    public string get_Name();
    public void set_Name(string value);
    public string get_ProfilePicUrl();
    public void set_ProfilePicUrl(string value);
    public int get_UserId();
    public void set_UserId(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ContentAssemblyFileInfo")]
public class Microsoft.SharePoint.Client.ContentAssemblyFileInfo : ClientValueObject {
    private string m_fileUrl;
    private string m_serverRedirectedEmbedUrl;
    [RemoteAttribute]
public string FileUrl { get; public set; }
    [RemoteAttribute]
public string ServerRedirectedEmbedUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_FileUrl();
    public void set_FileUrl(string value);
    public string get_ServerRedirectedEmbedUrl();
    public void set_ServerRedirectedEmbedUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ContentAssemblyFormAnswer")]
public class Microsoft.SharePoint.Client.ContentAssemblyFormAnswer : ClientValueObject {
    private string m_additionalData;
    private string m_answer;
    private string m_contentControlTagName;
    [RemoteAttribute]
public string AdditionalData { get; public set; }
    [RemoteAttribute]
public string Answer { get; public set; }
    [RemoteAttribute]
public string ContentControlTagName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AdditionalData();
    public void set_AdditionalData(string value);
    public string get_Answer();
    public void set_Answer(string value);
    public string get_ContentControlTagName();
    public void set_ContentControlTagName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ContentAssemblyModernTemplateColumnsMappingInfo")]
public class Microsoft.SharePoint.Client.ContentAssemblyModernTemplateColumnsMappingInfo : ClientValueObject {
    private string m_destinationListContentTypeId;
    private string m_destinationSiteContentTypeId;
    private IEnumerable`1<PlaceholderV2> m_placeholders;
    [RemoteAttribute]
public string DestinationListContentTypeId { get; public set; }
    [RemoteAttribute]
public string DestinationSiteContentTypeId { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<PlaceholderV2> Placeholders { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DestinationListContentTypeId();
    public void set_DestinationListContentTypeId(string value);
    public string get_DestinationSiteContentTypeId();
    public void set_DestinationSiteContentTypeId(string value);
    public IEnumerable`1<PlaceholderV2> get_Placeholders();
    public void set_Placeholders(IEnumerable`1<PlaceholderV2> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ContentControlInfo")]
public class Microsoft.SharePoint.Client.ContentControlInfo : ClientValueObject {
    private string m_contentControlTagName;
    private int m_endIndex;
    private bool m_isSingleParargaph;
    private IList`1<string> m_paragraphIds;
    private int m_startIndex;
    [RemoteAttribute]
public string ContentControlTagName { get; public set; }
    [RemoteAttribute]
public int EndIndex { get; public set; }
    [RemoteAttribute]
public bool IsSingleParargaph { get; public set; }
    [RemoteAttribute]
public IList`1<string> ParagraphIds { get; public set; }
    [RemoteAttribute]
public int StartIndex { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ContentControlTagName();
    public void set_ContentControlTagName(string value);
    public int get_EndIndex();
    public void set_EndIndex(int value);
    public bool get_IsSingleParargaph();
    public void set_IsSingleParargaph(bool value);
    public IList`1<string> get_ParagraphIds();
    public void set_ParagraphIds(IList`1<string> value);
    public int get_StartIndex();
    public void set_StartIndex(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ContentType")]
public class Microsoft.SharePoint.Client.ContentType : ClientObject {
    [RemoteAttribute]
public string ClientFormCustomFormatter { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public UserResource DescriptionResource { get; }
    [RemoteAttribute]
public string DisplayFormClientSideComponentId { get; public set; }
    [RemoteAttribute]
public string DisplayFormClientSideComponentProperties { get; public set; }
    [RemoteAttribute]
public UrlTarget DisplayFormTarget { get; public set; }
    [RemoteAttribute]
public string DisplayFormTemplateName { get; public set; }
    [RemoteAttribute]
public string DisplayFormUrl { get; public set; }
    [RemoteAttribute]
public string DocumentTemplate { get; public set; }
    [RemoteAttribute]
public string DocumentTemplateUrl { get; }
    [RemoteAttribute]
public string EditFormClientSideComponentId { get; public set; }
    [RemoteAttribute]
public string EditFormClientSideComponentProperties { get; public set; }
    [RemoteAttribute]
public UrlTarget EditFormTarget { get; public set; }
    [RemoteAttribute]
public string EditFormTemplateName { get; public set; }
    [RemoteAttribute]
public string EditFormUrl { get; public set; }
    [RemoteAttribute]
public FieldLinkCollection FieldLinks { get; }
    [RemoteAttribute]
public FieldCollection Fields { get; }
    [RemoteAttribute]
public string Group { get; public set; }
    [RemoteAttribute]
public bool Hidden { get; public set; }
    [RemoteAttribute]
public ContentTypeId Id { get; }
    [RemoteAttribute]
public string JSLink { get; public set; }
    [RemoteAttribute]
public string MobileDisplayFormUrl { get; public set; }
    [RemoteAttribute]
public string MobileEditFormUrl { get; public set; }
    [RemoteAttribute]
public string MobileNewFormUrl { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public UserResource NameResource { get; }
    [RemoteAttribute]
public string NewFormClientSideComponentId { get; public set; }
    [RemoteAttribute]
public string NewFormClientSideComponentProperties { get; public set; }
    [RemoteAttribute]
public UrlTarget NewFormTarget { get; public set; }
    [RemoteAttribute]
public string NewFormTemplateName { get; public set; }
    [RemoteAttribute]
public string NewFormUrl { get; public set; }
    [RemoteAttribute]
public ContentType Parent { get; }
    [RemoteAttribute]
public bool ReadOnly { get; public set; }
    [RemoteAttribute]
public string SchemaXml { get; }
    [RemoteAttribute]
public string SchemaXmlWithResourceTokens { get; public set; }
    [RemoteAttribute]
public string Scope { get; }
    [RemoteAttribute]
public bool Sealed { get; public set; }
    [RemoteAttribute]
public string StringId { get; }
    [RemoteAttribute]
public WorkflowAssociationCollection WorkflowAssociations { get; }
    [EditorBrowsableAttribute("1")]
public ContentType(ClientRuntimeContext context, ObjectPath objectPath);
    internal void InitFromCreationInformation(ContentTypeCreationInformation creation);
    public string get_ClientFormCustomFormatter();
    public void set_ClientFormCustomFormatter(string value);
    public string get_Description();
    public void set_Description(string value);
    public UserResource get_DescriptionResource();
    public string get_DisplayFormClientSideComponentId();
    public void set_DisplayFormClientSideComponentId(string value);
    public string get_DisplayFormClientSideComponentProperties();
    public void set_DisplayFormClientSideComponentProperties(string value);
    public UrlTarget get_DisplayFormTarget();
    public void set_DisplayFormTarget(UrlTarget value);
    public string get_DisplayFormTemplateName();
    public void set_DisplayFormTemplateName(string value);
    public string get_DisplayFormUrl();
    public void set_DisplayFormUrl(string value);
    public string get_DocumentTemplate();
    public void set_DocumentTemplate(string value);
    public string get_DocumentTemplateUrl();
    public string get_EditFormClientSideComponentId();
    public void set_EditFormClientSideComponentId(string value);
    public string get_EditFormClientSideComponentProperties();
    public void set_EditFormClientSideComponentProperties(string value);
    public UrlTarget get_EditFormTarget();
    public void set_EditFormTarget(UrlTarget value);
    public string get_EditFormTemplateName();
    public void set_EditFormTemplateName(string value);
    public string get_EditFormUrl();
    public void set_EditFormUrl(string value);
    public FieldLinkCollection get_FieldLinks();
    public FieldCollection get_Fields();
    public string get_Group();
    public void set_Group(string value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public ContentTypeId get_Id();
    public string get_JSLink();
    public void set_JSLink(string value);
    public string get_MobileDisplayFormUrl();
    public void set_MobileDisplayFormUrl(string value);
    public string get_MobileEditFormUrl();
    public void set_MobileEditFormUrl(string value);
    public string get_MobileNewFormUrl();
    public void set_MobileNewFormUrl(string value);
    public string get_Name();
    public void set_Name(string value);
    public UserResource get_NameResource();
    public string get_NewFormClientSideComponentId();
    public void set_NewFormClientSideComponentId(string value);
    public string get_NewFormClientSideComponentProperties();
    public void set_NewFormClientSideComponentProperties(string value);
    public UrlTarget get_NewFormTarget();
    public void set_NewFormTarget(UrlTarget value);
    public string get_NewFormTemplateName();
    public void set_NewFormTemplateName(string value);
    public string get_NewFormUrl();
    public void set_NewFormUrl(string value);
    public ContentType get_Parent();
    public bool get_ReadOnly();
    public void set_ReadOnly(bool value);
    public string get_SchemaXml();
    public string get_SchemaXmlWithResourceTokens();
    public void set_SchemaXmlWithResourceTokens(string value);
    public string get_Scope();
    public bool get_Sealed();
    public void set_Sealed(bool value);
    public string get_StringId();
    public WorkflowAssociationCollection get_WorkflowAssociations();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update(bool updateChildren);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("SP.ContentTypeCollection")]
public class Microsoft.SharePoint.Client.ContentTypeCollection : ClientObjectCollection`1<ContentType> {
    [EditorBrowsableAttribute("1")]
public ContentTypeCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public ContentType GetById(string contentTypeId);
    [RemoteAttribute]
public ContentType AddExistingContentType(ContentType contentType);
    [RemoteAttribute]
public ContentType Add(ContentTypeCreationInformation parameters);
}
[ScriptTypeAttribute("SP.ContentTypeCreationInformation")]
public class Microsoft.SharePoint.Client.ContentTypeCreationInformation : ClientValueObject {
    private string m_description;
    private string m_group;
    private string m_id;
    private string m_name;
    private ContentType m_parentContentType;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string Group { get; public set; }
    [RemoteAttribute]
public string Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public ContentType ParentContentType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public string get_Group();
    public void set_Group(string value);
    public string get_Id();
    public void set_Id(string value);
    public string get_Name();
    public void set_Name(string value);
    public ContentType get_ParentContentType();
    public void set_ParentContentType(ContentType value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ContentTypeId")]
public class Microsoft.SharePoint.Client.ContentTypeId : ClientValueObject {
    private string m_stringValue;
    [RemoteAttribute]
public string StringValue { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string ToString();
    public string get_StringValue();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ContentTypeObjectPropertyNames : object {
    public static string DescriptionResource;
    public static string FieldLinks;
    public static string Fields;
    public static string NameResource;
    public static string Parent;
    public static string WorkflowAssociations;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ContentTypePropertyNames : object {
    public static string ClientFormCustomFormatter;
    public static string Description;
    public static string DisplayFormClientSideComponentId;
    public static string DisplayFormClientSideComponentProperties;
    public static string DisplayFormTarget;
    public static string DisplayFormTemplateName;
    public static string DisplayFormUrl;
    public static string DocumentTemplate;
    public static string DocumentTemplateUrl;
    public static string EditFormClientSideComponentId;
    public static string EditFormClientSideComponentProperties;
    public static string EditFormTarget;
    public static string EditFormTemplateName;
    public static string EditFormUrl;
    public static string Group;
    public static string Hidden;
    public static string Id;
    public static string JSLink;
    public static string MobileDisplayFormUrl;
    public static string MobileEditFormUrl;
    public static string MobileNewFormUrl;
    public static string Name;
    public static string NewFormClientSideComponentId;
    public static string NewFormClientSideComponentProperties;
    public static string NewFormTarget;
    public static string NewFormTemplateName;
    public static string NewFormUrl;
    public static string ReadOnly;
    public static string SchemaXml;
    public static string SchemaXmlWithResourceTokens;
    public static string Scope;
    public static string Sealed;
    public static string StringId;
}
[ScriptTypeAttribute("SP.CopyJobProgress")]
public class Microsoft.SharePoint.Client.CopyJobProgress : ClientValueObject {
    private MigrationJobState m_jobState;
    private IList`1<string> m_logs;
    [RemoteAttribute]
public MigrationJobState JobState { get; public set; }
    [RemoteAttribute]
public IList`1<string> Logs { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public MigrationJobState get_JobState();
    public void set_JobState(MigrationJobState value);
    public IList`1<string> get_Logs();
    public void set_Logs(IList`1<string> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CopyMigrationInfo")]
public class Microsoft.SharePoint.Client.CopyMigrationInfo : ClientValueObject {
    private Byte[] m_encryptionKey;
    private Guid m_jobId;
    private string m_jobQueueUri;
    private IList`1<Guid> m_sourceListItemUniqueIds;
    [RemoteAttribute]
public Byte[] EncryptionKey { get; public set; }
    [RemoteAttribute]
public Guid JobId { get; public set; }
    [RemoteAttribute]
public string JobQueueUri { get; public set; }
    [RemoteAttribute]
public IList`1<Guid> SourceListItemUniqueIds { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Byte[] get_EncryptionKey();
    public void set_EncryptionKey(Byte[] value);
    public Guid get_JobId();
    public void set_JobId(Guid value);
    public string get_JobQueueUri();
    public void set_JobQueueUri(string value);
    public IList`1<Guid> get_SourceListItemUniqueIds();
    public void set_SourceListItemUniqueIds(IList`1<Guid> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CopyMigrationOptions")]
public class Microsoft.SharePoint.Client.CopyMigrationOptions : ClientValueObject {
    private bool m_allowSchemaMismatch;
    private bool m_allowSmallerVersionLimitOnDestination;
    private bool m_bypassSharedLock;
    private String[] m_clientEtags;
    private String[] m_customizedItemName;
    private bool m_excludeChildren;
    private bool m_ignoreVersionHistory;
    private bool m_includeItemPermissions;
    private bool m_isMoveMode;
    private SPMoveAndShareFileInfo m_moveAndShareFileInfo;
    private bool m_moveButKeepSource;
    private MigrationNameConflictBehavior m_nameConflictBehavior;
    private bool m_sameWebCopyMoveOptimization;
    [RemoteAttribute]
public bool AllowSchemaMismatch { get; public set; }
    [RemoteAttribute]
public bool AllowSmallerVersionLimitOnDestination { get; public set; }
    [RemoteAttribute]
internal bool BypassSharedLock { get; internal set; }
    [RemoteAttribute]
public String[] ClientEtags { get; public set; }
    [RemoteAttribute]
public String[] CustomizedItemName { get; public set; }
    [RemoteAttribute]
public bool ExcludeChildren { get; public set; }
    [RemoteAttribute]
public bool IgnoreVersionHistory { get; public set; }
    [RemoteAttribute]
internal bool IncludeItemPermissions { get; internal set; }
    [RemoteAttribute]
public bool IsMoveMode { get; public set; }
    [RemoteAttribute]
internal SPMoveAndShareFileInfo MoveAndShareFileInfo { get; internal set; }
    [RemoteAttribute]
public bool MoveButKeepSource { get; public set; }
    [RemoteAttribute]
public MigrationNameConflictBehavior NameConflictBehavior { get; public set; }
    [RemoteAttribute]
public bool SameWebCopyMoveOptimization { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_AllowSchemaMismatch();
    public void set_AllowSchemaMismatch(bool value);
    public bool get_AllowSmallerVersionLimitOnDestination();
    public void set_AllowSmallerVersionLimitOnDestination(bool value);
    internal bool get_BypassSharedLock();
    internal void set_BypassSharedLock(bool value);
    public String[] get_ClientEtags();
    public void set_ClientEtags(String[] value);
    public String[] get_CustomizedItemName();
    public void set_CustomizedItemName(String[] value);
    public bool get_ExcludeChildren();
    public void set_ExcludeChildren(bool value);
    public bool get_IgnoreVersionHistory();
    public void set_IgnoreVersionHistory(bool value);
    internal bool get_IncludeItemPermissions();
    internal void set_IncludeItemPermissions(bool value);
    public bool get_IsMoveMode();
    public void set_IsMoveMode(bool value);
    internal SPMoveAndShareFileInfo get_MoveAndShareFileInfo();
    internal void set_MoveAndShareFileInfo(SPMoveAndShareFileInfo value);
    public bool get_MoveButKeepSource();
    public void set_MoveButKeepSource(bool value);
    public MigrationNameConflictBehavior get_NameConflictBehavior();
    public void set_NameConflictBehavior(MigrationNameConflictBehavior value);
    public bool get_SameWebCopyMoveOptimization();
    public void set_SameWebCopyMoveOptimization(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CopySourceInfo")]
public class Microsoft.SharePoint.Client.CopySourceInfo : ClientObject {
    [EditorBrowsableAttribute("1")]
public CopySourceInfo(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.CountByDate")]
public class Microsoft.SharePoint.Client.CountByDate : ClientValueObject {
    private int m_count;
    private int m_date;
    [RemoteAttribute]
public int count { get; public set; }
    [RemoteAttribute]
public int date { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_count();
    public void set_count(int value);
    public int get_date();
    public void set_date(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CreatableItemInfo")]
public class Microsoft.SharePoint.Client.CreatableItemInfo : ClientValueObject {
    private int m_documentTemplate;
    private string m_fileExtension;
    private string m_itemType;
    [RemoteAttribute]
public int DocumentTemplate { get; }
    [RemoteAttribute]
public string FileExtension { get; }
    [RemoteAttribute]
public string ItemType { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_DocumentTemplate();
    public string get_FileExtension();
    public string get_ItemType();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CreatableItemInfoCollection")]
public class Microsoft.SharePoint.Client.CreatableItemInfoCollection : ClientValueObjectCollection`1<CreatableItemInfo> {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[ScriptTypeAttribute("SP.CreatablesInfo")]
public class Microsoft.SharePoint.Client.CreatablesInfo : ClientObject {
    [RemoteAttribute]
public bool CanCreateFolders { get; }
    [RemoteAttribute]
public bool CanCreateItems { get; }
    [RemoteAttribute]
public bool CanUploadFiles { get; }
    [RemoteAttribute]
public CreatableItemInfoCollection CreatablesCollection { get; }
    [EditorBrowsableAttribute("1")]
public CreatablesInfo(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_CanCreateFolders();
    public bool get_CanCreateItems();
    public bool get_CanUploadFiles();
    public CreatableItemInfoCollection get_CreatablesCollection();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.CreatablesInfoPropertyNames : object {
    public static string CanCreateFolders;
    public static string CanCreateItems;
    public static string CanUploadFiles;
    public static string CreatablesCollection;
}
[ScriptTypeAttribute("SP.CreateAgreementFolderInfo")]
public class Microsoft.SharePoint.Client.CreateAgreementFolderInfo : ClientValueObject {
    private string m_agreementFolderServerRelativeUrl;
    private string m_agreementNumber;
    [RemoteAttribute]
public string AgreementFolderServerRelativeUrl { get; public set; }
    [RemoteAttribute]
public string AgreementNumber { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AgreementFolderServerRelativeUrl();
    public void set_AgreementFolderServerRelativeUrl(string value);
    public string get_AgreementNumber();
    public void set_AgreementNumber(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CreateReviewRequestDTO")]
public class Microsoft.SharePoint.Client.CreateReviewRequestDTO : ClientValueObject {
    private string m_documentUri;
    private string m_reviewer;
    [RemoteAttribute]
public string DocumentUri { get; public set; }
    [RemoteAttribute]
public string Reviewer { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DocumentUri();
    public void set_DocumentUri(string value);
    public string get_Reviewer();
    public void set_Reviewer(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CurrencyInformation")]
public class Microsoft.SharePoint.Client.CurrencyInformation : ClientValueObject {
    private string m_displayString;
    private string m_languageCultureName;
    private string m_lCID;
    [RemoteAttribute]
public string DisplayString { get; }
    [RemoteAttribute]
public string LanguageCultureName { get; }
    [RemoteAttribute]
public string LCID { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DisplayString();
    public string get_LanguageCultureName();
    public string get_LCID();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CurrencyInformationCollection")]
public class Microsoft.SharePoint.Client.CurrencyInformationCollection : ClientValueObjectCollection`1<CurrencyInformation> {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[ScriptTypeAttribute("SP.CurrencyList")]
public class Microsoft.SharePoint.Client.CurrencyList : ClientObject {
    [EditorBrowsableAttribute("1")]
public CurrencyList(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static ClientResult`1<CurrencyInformationCollection> GetList(ClientRuntimeContext context);
}
[ScriptTypeAttribute("SP.CustomActionElement")]
public class Microsoft.SharePoint.Client.CustomActionElement : ClientValueObject {
    private Guid m_clientSideComponentId;
    private string m_clientSideComponentProperties;
    private string m_commandUIExtension;
    private string m_id;
    private string m_enabledScript;
    private string m_hostProperties;
    private string m_imageUrl;
    private string m_location;
    private string m_registrationId;
    private UserCustomActionRegistrationType m_registrationType;
    private bool m_requireSiteAdministrator;
    private BasePermissions m_rights;
    private string m_title;
    private string m_urlAction;
    [RemoteAttribute]
public Guid ClientSideComponentId { get; }
    [RemoteAttribute]
public string ClientSideComponentProperties { get; }
    [RemoteAttribute]
public string CommandUIExtension { get; }
    [RemoteAttribute]
public string Id { get; }
    [RemoteAttribute]
public string EnabledScript { get; }
    [RemoteAttribute]
public string HostProperties { get; }
    [RemoteAttribute]
public string ImageUrl { get; }
    [RemoteAttribute]
public string Location { get; }
    [RemoteAttribute]
public string RegistrationId { get; }
    [RemoteAttribute]
public UserCustomActionRegistrationType RegistrationType { get; }
    [RemoteAttribute]
public bool RequireSiteAdministrator { get; }
    [RemoteAttribute]
public BasePermissions Rights { get; }
    [RemoteAttribute]
public string Title { get; }
    [RemoteAttribute]
public string UrlAction { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_ClientSideComponentId();
    public string get_ClientSideComponentProperties();
    public string get_CommandUIExtension();
    public string get_Id();
    public string get_EnabledScript();
    public string get_HostProperties();
    public string get_ImageUrl();
    public string get_Location();
    public string get_RegistrationId();
    public UserCustomActionRegistrationType get_RegistrationType();
    public bool get_RequireSiteAdministrator();
    public BasePermissions get_Rights();
    public string get_Title();
    public string get_UrlAction();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CustomActionElementCollection")]
public class Microsoft.SharePoint.Client.CustomActionElementCollection : ClientValueObjectCollection`1<CustomActionElement> {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[ScriptTypeAttribute("SP.CustomerKeyInfo")]
public class Microsoft.SharePoint.Client.CustomerKeyInfo : ClientValueObject {
    private CustomerKeyVaultInfo m_availabilityKeyVault;
    private CustomerKeyVaultInfo m_primaryKeyVault;
    private CustomerKeyVaultInfo m_secondaryKeyVault;
    [RemoteAttribute]
public CustomerKeyVaultInfo AvailabilityKeyVault { get; public set; }
    [RemoteAttribute]
public CustomerKeyVaultInfo PrimaryKeyVault { get; public set; }
    [RemoteAttribute]
public CustomerKeyVaultInfo SecondaryKeyVault { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public CustomerKeyVaultInfo get_AvailabilityKeyVault();
    public void set_AvailabilityKeyVault(CustomerKeyVaultInfo value);
    public CustomerKeyVaultInfo get_PrimaryKeyVault();
    public void set_PrimaryKeyVault(CustomerKeyVaultInfo value);
    public CustomerKeyVaultInfo get_SecondaryKeyVault();
    public void set_SecondaryKeyVault(CustomerKeyVaultInfo value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.CustomerKeyStatus : Enum {
    public int value__;
    public static CustomerKeyStatus Unregistered;
    public static CustomerKeyStatus Registering;
    public static CustomerKeyStatus Registered;
    public static CustomerKeyStatus Rolling;
    public static CustomerKeyStatus Recovering;
    public static CustomerKeyStatus UnregisteringToMMK;
    public static CustomerKeyStatus RegisteringToMMK;
    public static CustomerKeyStatus RegisteredToMMK;
    public static CustomerKeyStatus RollingMMK;
}
[ScriptTypeAttribute("SP.CustomerKeyStatusInfo")]
public class Microsoft.SharePoint.Client.CustomerKeyStatusInfo : ClientValueObject {
    private string m_availabilityKeyVaultUri;
    private string m_primaryKeyVaultUri;
    private bool m_recoveryEnabled;
    private double m_registrationProgress;
    private string m_secondaryKeyVaultUri;
    private CustomerKeyStatus m_status;
    [RemoteAttribute]
public string AvailabilityKeyVaultUri { get; public set; }
    [RemoteAttribute]
public string PrimaryKeyVaultUri { get; public set; }
    [RemoteAttribute]
public bool RecoveryEnabled { get; public set; }
    [RemoteAttribute]
public double RegistrationProgress { get; public set; }
    [RemoteAttribute]
public string SecondaryKeyVaultUri { get; public set; }
    [RemoteAttribute]
public CustomerKeyStatus Status { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AvailabilityKeyVaultUri();
    public void set_AvailabilityKeyVaultUri(string value);
    public string get_PrimaryKeyVaultUri();
    public void set_PrimaryKeyVaultUri(string value);
    public bool get_RecoveryEnabled();
    public void set_RecoveryEnabled(bool value);
    public double get_RegistrationProgress();
    public void set_RegistrationProgress(double value);
    public string get_SecondaryKeyVaultUri();
    public void set_SecondaryKeyVaultUri(string value);
    public CustomerKeyStatus get_Status();
    public void set_Status(CustomerKeyStatus value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CustomerKeyVaultInfo")]
public class Microsoft.SharePoint.Client.CustomerKeyVaultInfo : ClientValueObject {
    private string m_keyName;
    private Guid m_keyVersion;
    private string m_resourceGroupName;
    private Guid m_subscriptionId;
    private string m_uri;
    private string m_vaultName;
    [RemoteAttribute]
public string KeyName { get; public set; }
    [RemoteAttribute]
public Guid KeyVersion { get; public set; }
    [RemoteAttribute]
public string ResourceGroupName { get; public set; }
    [RemoteAttribute]
public Guid SubscriptionId { get; public set; }
    [RemoteAttribute]
public string Uri { get; public set; }
    [RemoteAttribute]
public string VaultName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_KeyName();
    public void set_KeyName(string value);
    public Guid get_KeyVersion();
    public void set_KeyVersion(Guid value);
    public string get_ResourceGroupName();
    public void set_ResourceGroupName(string value);
    public Guid get_SubscriptionId();
    public void set_SubscriptionId(Guid value);
    public string get_Uri();
    public void set_Uri(string value);
    public string get_VaultName();
    public void set_VaultName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.CustomerKeyVaultKeyType : Enum {
    public int value__;
    public static CustomerKeyVaultKeyType Primary;
    public static CustomerKeyVaultKeyType Secondary;
    public static CustomerKeyVaultKeyType Availability;
}
public enum Microsoft.SharePoint.Client.CustomerRecoveryKeyMode : Enum {
    public int value__;
    public static CustomerRecoveryKeyMode Standard;
    public static CustomerRecoveryKeyMode NoRecoveryKey;
    public static CustomerRecoveryKeyMode CustomerControlled;
}
[ScriptTypeAttribute("SP.CustomizedFormsPage")]
public class Microsoft.SharePoint.Client.CustomizedFormsPage : ClientValueObject {
    private PageType m_formType;
    private Guid m_pageId;
    private string m_url;
    private Guid m_webpartId;
    [RemoteAttribute]
public PageType formType { get; }
    [RemoteAttribute]
public Guid pageId { get; }
    [RemoteAttribute]
public string Url { get; }
    [RemoteAttribute]
public Guid webpartId { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public PageType get_formType();
    public Guid get_pageId();
    public string get_Url();
    public Guid get_webpartId();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.CustomizedFormsPageCollection")]
public class Microsoft.SharePoint.Client.CustomizedFormsPageCollection : ClientValueObjectCollection`1<CustomizedFormsPage> {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.CustomizedPageStatus : Enum {
    public int value__;
    public static CustomizedPageStatus None;
    public static CustomizedPageStatus Uncustomized;
    public static CustomizedPageStatus Customized;
}
[ScriptTypeAttribute("SP.DashboardItem")]
public class Microsoft.SharePoint.Client.DashboardItem : ClientValueObject {
    private ResourcePath m_webAbsolutePath;
    [RemoteAttribute]
public ResourcePath WebAbsolutePath { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public ResourcePath get_WebAbsolutePath();
    public void set_WebAbsolutePath(ResourcePath value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.DashboardItemInfo")]
public class Microsoft.SharePoint.Client.DashboardItemInfo : ClientValueObject {
    private int m_itemId;
    private Guid m_listId;
    private Guid m_siteId;
    private Guid m_webId;
    [RemoteAttribute]
public int ItemId { get; public set; }
    [RemoteAttribute]
public Guid ListId { get; public set; }
    [RemoteAttribute]
public Guid SiteId { get; public set; }
    [RemoteAttribute]
public Guid WebId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_ItemId();
    public void set_ItemId(int value);
    public Guid get_ListId();
    public void set_ListId(Guid value);
    public Guid get_SiteId();
    public void set_SiteId(Guid value);
    public Guid get_WebId();
    public void set_WebId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.DateTimeFieldFormatType : Enum {
    public int value__;
    public static DateTimeFieldFormatType DateOnly;
    public static DateTimeFieldFormatType DateTime;
}
public enum Microsoft.SharePoint.Client.DateTimeFieldFriendlyFormatType : Enum {
    public int value__;
    public static DateTimeFieldFriendlyFormatType Unspecified;
    public static DateTimeFieldFriendlyFormatType Disabled;
    public static DateTimeFieldFriendlyFormatType Relative;
}
[ScriptTypeAttribute("SP.DeviationAnalysisRule")]
public class Microsoft.SharePoint.Client.DeviationAnalysisRule : ClientValueObject {
    private string m_definition;
    private IList`1<string> m_fallbackClauses;
    private Guid m_id;
    private bool m_isAcceptable;
    private IList`1<string> m_notes;
    private string m_ruleName;
    private bool m_sendForApproval;
    private string m_snippetPath;
    [RemoteAttribute]
public string Definition { get; public set; }
    [RemoteAttribute]
public IList`1<string> FallbackClauses { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public bool IsAcceptable { get; public set; }
    [RemoteAttribute]
public IList`1<string> Notes { get; public set; }
    [RemoteAttribute]
public string RuleName { get; public set; }
    [RemoteAttribute]
public bool SendForApproval { get; public set; }
    [RemoteAttribute]
public string SnippetPath { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Definition();
    public void set_Definition(string value);
    public IList`1<string> get_FallbackClauses();
    public void set_FallbackClauses(IList`1<string> value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public bool get_IsAcceptable();
    public void set_IsAcceptable(bool value);
    public IList`1<string> get_Notes();
    public void set_Notes(IList`1<string> value);
    public string get_RuleName();
    public void set_RuleName(string value);
    public bool get_SendForApproval();
    public void set_SendForApproval(bool value);
    public string get_SnippetPath();
    public void set_SnippetPath(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ExtensionAttribute]
[ScriptTypeAttribute("SP.DeviationAnalysisRulesController")]
public static class Microsoft.SharePoint.Client.DeviationAnalysisRulesController : object {
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<string> AddDeviationAnalysisRule(Web web, DeviationAnalysisRule deviationAnalysisRule);
    [ExtensionAttribute]
[RemoteAttribute]
public static void UpdateDeviationAnalysisRule(Web web, DeviationAnalysisRule deviationAnalysisRule);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<DeviationAnalysisRule> GetDeviationAnalysisRule(Web web, Guid Id);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<DeviationAnalysisRule> GetDeviationAnalysisRulesForSnippet(Web web, int snippetItemId, string snippetPath);
    [ExtensionAttribute]
[RemoteAttribute]
public static void DeleteDeviationAnalysisRule(Web web, Guid ruleId, string snippetPath);
}
[ScriptTypeAttribute("Microsoft.SharePoint.CampaignAnalytics.DimensionsResponse")]
public class Microsoft.SharePoint.Client.DimensionsResponse : ClientValueObject {
    private IList`1<string> m_application;
    [RemoteAttribute]
public IList`1<string> application { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<string> get_application();
    public void set_application(IList`1<string> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.DlpPolicyTip")]
public class Microsoft.SharePoint.Client.DlpPolicyTip : ClientObject {
    [RemoteAttribute]
public string AppliedActionsText { get; }
    [RemoteAttribute]
public string ComplianceUrl { get; }
    [RemoteAttribute]
public string GeneralText { get; }
    [RemoteAttribute]
public DateTime LastProcessedTime { get; }
    [RemoteAttribute]
public IEnumerable`1<string> MatchedConditionDescriptions { get; }
    [RemoteAttribute]
public RuleOverrideOptions OverrideOptions { get; }
    [RemoteAttribute]
public string TwoLetterISOLanguageName { get; }
    [EditorBrowsableAttribute("1")]
public DlpPolicyTip(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_AppliedActionsText();
    public string get_ComplianceUrl();
    public string get_GeneralText();
    public DateTime get_LastProcessedTime();
    public IEnumerable`1<string> get_MatchedConditionDescriptions();
    public RuleOverrideOptions get_OverrideOptions();
    public string get_TwoLetterISOLanguageName();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.DlpPolicyTipPropertyNames : object {
    public static string AppliedActionsText;
    public static string ComplianceUrl;
    public static string GeneralText;
    public static string LastProcessedTime;
    public static string MatchedConditionDescriptions;
    public static string OverrideOptions;
    public static string TwoLetterISOLanguageName;
}
[ScriptTypeAttribute("SP.DocumentGenerationInfo")]
public class Microsoft.SharePoint.Client.DocumentGenerationInfo : ClientValueObject {
    private IList`1<string> m_conditionalFieldsToBeDeleted;
    private IList`1<ContentAssemblyFormAnswer> m_contentAssemblyFormAnswers;
    private bool m_copyFieldsFromExistingDocument;
    private string m_fileName;
    private string m_folderUrl;
    private OutputFileFormat m_format;
    private bool m_isTempFile;
    private string m_tempFileUrl;
    private bool m_updateFolderPermissions;
    [RemoteAttribute]
public IList`1<string> ConditionalFieldsToBeDeleted { get; public set; }
    [RemoteAttribute]
public IList`1<ContentAssemblyFormAnswer> ContentAssemblyFormAnswers { get; public set; }
    [RemoteAttribute]
public bool CopyFieldsFromExistingDocument { get; public set; }
    [RemoteAttribute]
public string FileName { get; public set; }
    [RemoteAttribute]
public string FolderUrl { get; public set; }
    [RemoteAttribute]
public OutputFileFormat Format { get; public set; }
    [RemoteAttribute]
public bool IsTempFile { get; public set; }
    [RemoteAttribute]
public string TempFileUrl { get; public set; }
    [RemoteAttribute]
public bool UpdateFolderPermissions { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<string> get_ConditionalFieldsToBeDeleted();
    public void set_ConditionalFieldsToBeDeleted(IList`1<string> value);
    public IList`1<ContentAssemblyFormAnswer> get_ContentAssemblyFormAnswers();
    public void set_ContentAssemblyFormAnswers(IList`1<ContentAssemblyFormAnswer> value);
    public bool get_CopyFieldsFromExistingDocument();
    public void set_CopyFieldsFromExistingDocument(bool value);
    public string get_FileName();
    public void set_FileName(string value);
    public string get_FolderUrl();
    public void set_FolderUrl(string value);
    public OutputFileFormat get_Format();
    public void set_Format(OutputFileFormat value);
    public bool get_IsTempFile();
    public void set_IsTempFile(bool value);
    public string get_TempFileUrl();
    public void set_TempFileUrl(string value);
    public bool get_UpdateFolderPermissions();
    public void set_UpdateFolderPermissions(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.DocumentLibraryInformation")]
public class Microsoft.SharePoint.Client.DocumentLibraryInformation : ClientValueObject {
    private string m_absoluteUrl;
    private string m_driveId;
    private bool m_fromCrossFarm;
    private Guid m_id;
    private bool m_isDefaultDocumentLibrary;
    private DateTime m_modified;
    private string m_modifiedFriendlyDisplay;
    private string m_serverRelativeUrl;
    private string m_title;
    [RemoteAttribute]
public string AbsoluteUrl { get; }
    [RemoteAttribute]
public string DriveId { get; }
    [RemoteAttribute]
public bool FromCrossFarm { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool IsDefaultDocumentLibrary { get; }
    [RemoteAttribute]
public DateTime Modified { get; }
    [RemoteAttribute]
public string ModifiedFriendlyDisplay { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [RemoteAttribute]
public string Title { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AbsoluteUrl();
    public string get_DriveId();
    public bool get_FromCrossFarm();
    public Guid get_Id();
    public bool get_IsDefaultDocumentLibrary();
    public DateTime get_Modified();
    public string get_ModifiedFriendlyDisplay();
    public string get_ServerRelativeUrl();
    public string get_Title();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.DocumentTemplateType : Enum {
    public int value__;
    public static DocumentTemplateType Invalid;
    public static DocumentTemplateType Word;
    public static DocumentTemplateType Excel;
    public static DocumentTemplateType PowerPoint;
    public static DocumentTemplateType OneNote;
    public static DocumentTemplateType ExcelForm;
    public static DocumentTemplateType Visio;
    public static DocumentTemplateType Max;
}
public enum Microsoft.SharePoint.Client.DraftVisibilityType : Enum {
    public int value__;
    public static DraftVisibilityType Reader;
    public static DraftVisibilityType Author;
    public static DraftVisibilityType Approver;
}
[ScriptTypeAttribute("SP.EffectiveInformationRightsManagementSettings")]
public class Microsoft.SharePoint.Client.EffectiveInformationRightsManagementSettings : ClientObject {
    [RemoteAttribute]
public bool AllowPrint { get; }
    [RemoteAttribute]
public bool AllowScript { get; }
    [RemoteAttribute]
public bool AllowWriteCopy { get; }
    [RemoteAttribute]
public bool DisableDocumentBrowserView { get; }
    [RemoteAttribute]
public int DocumentAccessExpireDays { get; }
    [RemoteAttribute]
public DateTime DocumentLibraryProtectionExpireDate { get; }
    [RemoteAttribute]
public bool EnableDocumentAccessExpire { get; }
    [RemoteAttribute]
public bool EnableDocumentBrowserPublishingView { get; }
    [RemoteAttribute]
public bool EnableGroupProtection { get; }
    [RemoteAttribute]
public bool EnableLicenseCacheExpire { get; }
    [RemoteAttribute]
public string GroupName { get; }
    [RemoteAttribute]
public bool IrmEnabled { get; }
    [RemoteAttribute]
public int LicenseCacheExpireDays { get; }
    [RemoteAttribute]
public string PolicyDescription { get; }
    [RemoteAttribute]
public string PolicyTitle { get; }
    [RemoteAttribute]
public SPEffectiveInformationRightsManagementSettingsSource SettingSource { get; }
    [RemoteAttribute]
public string TemplateId { get; }
    [EditorBrowsableAttribute("1")]
public EffectiveInformationRightsManagementSettings(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_AllowPrint();
    public bool get_AllowScript();
    public bool get_AllowWriteCopy();
    public bool get_DisableDocumentBrowserView();
    public int get_DocumentAccessExpireDays();
    public DateTime get_DocumentLibraryProtectionExpireDate();
    public bool get_EnableDocumentAccessExpire();
    public bool get_EnableDocumentBrowserPublishingView();
    public bool get_EnableGroupProtection();
    public bool get_EnableLicenseCacheExpire();
    public string get_GroupName();
    public bool get_IrmEnabled();
    public int get_LicenseCacheExpireDays();
    public string get_PolicyDescription();
    public string get_PolicyTitle();
    public SPEffectiveInformationRightsManagementSettingsSource get_SettingSource();
    public string get_TemplateId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.EffectiveInformationRightsManagementSettingsPropertyNames : object {
    public static string AllowPrint;
    public static string AllowScript;
    public static string AllowWriteCopy;
    public static string DisableDocumentBrowserView;
    public static string DocumentAccessExpireDays;
    public static string DocumentLibraryProtectionExpireDate;
    public static string EnableDocumentAccessExpire;
    public static string EnableDocumentBrowserPublishingView;
    public static string EnableGroupProtection;
    public static string EnableLicenseCacheExpire;
    public static string GroupName;
    public static string IrmEnabled;
    public static string LicenseCacheExpireDays;
    public static string PolicyDescription;
    public static string PolicyTitle;
    public static string SettingSource;
    public static string TemplateId;
}
[ScriptTypeAttribute("SP.EmployeeEngagement")]
public class Microsoft.SharePoint.Client.EmployeeEngagement : ClientObject {
    public EmployeeEngagement(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public EmployeeEngagement(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public IEnumerable`1<TargetedSiteDetails> GetTargetedSitesAsEditor();
    [RemoteAttribute]
public static ClientResult`1<string> GetThemeDataXGeo(ClientRuntimeContext context, HomeSiteReference affinityHomeSiteReference);
    [RemoteAttribute]
public static ClientResult`1<ConfigurationData> GetEEConfigurationXGeo(ClientRuntimeContext context, Guid siteId);
    [RemoteAttribute]
public static ClientResult`1<VivaConnectionsUrlConfiguration> GetVivaConnectionsUrlConfigurationXGeo(ClientRuntimeContext context, string adminConfiguredUrl);
    [RemoteAttribute]
public static ClientResult`1<IDictionary`2<string, string>> VivaHomeConfigurationXGeo(ClientRuntimeContext context, bool shouldByPassCache);
    [RemoteAttribute]
public static ClientResult`1<DashboardItemInfo> DashboardItem(ClientRuntimeContext context, string siteUrl);
    [RemoteAttribute]
public static ClientResult`1<string> GetTenantDashboardContentXGeo(ClientRuntimeContext context, string overrideLanguageCode);
}
[ScriptTypeAttribute("SP.EncryptionOption")]
public class Microsoft.SharePoint.Client.EncryptionOption : ClientValueObject {
    private Byte[] m_aES256CBCKey;
    [RemoteAttribute]
public Byte[] AES256CBCKey { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Byte[] get_AES256CBCKey();
    public void set_AES256CBCKey(Byte[] value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.EnqueueJobInformation")]
public class Microsoft.SharePoint.Client.EnqueueJobInformation : ClientValueObject {
    private EnqueueJobStatus m_enqueueJobStatus;
    private string m_message;
    [RemoteAttribute]
public EnqueueJobStatus EnqueueJobStatus { get; public set; }
    [RemoteAttribute]
public string Message { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public EnqueueJobStatus get_EnqueueJobStatus();
    public void set_EnqueueJobStatus(EnqueueJobStatus value);
    public string get_Message();
    public void set_Message(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.EnqueueJobStatus : Enum {
    public int value__;
    public static EnqueueJobStatus Failed;
    public static EnqueueJobStatus Success;
}
[ScriptTypeAttribute("SP.eSign")]
public static class Microsoft.SharePoint.Client.eSign : object {
    [RemoteAttribute]
public static ClientResult`1<string> StartAgreement(ClientRuntimeContext context, CreateAgreementModel startAgreement);
    [RemoteAttribute]
public static ClientResult`1<string> GetAuditTrail(ClientRuntimeContext context, Guid documentId);
    [RemoteAttribute]
public static ClientResult`1<string> GetSigningFields(ClientRuntimeContext context, Guid documentId);
}
[ScriptTypeAttribute("SP.eSignInternal")]
public static class Microsoft.SharePoint.Client.eSignInternal : object {
    [RemoteAttribute]
public static ClientResult`1<string> StartAgreement(ClientRuntimeContext context, CreateAgreementModel startAgreement);
    [RemoteAttribute]
public static ClientResult`1<string> StartAgreementV2(ClientRuntimeContext context, CreateAgreementModelV2 startAgreement);
    [RemoteAttribute]
public static ClientResult`1<string> AddAuditTrailEntry(ClientRuntimeContext context, AddAuditTrailEntryModel addAuditTrailEntry);
    [RemoteAttribute]
public static void SignAgreement(ClientRuntimeContext context, SignAgreementModel signAgreement);
    [RemoteAttribute]
public static void CancelAgreement(ClientRuntimeContext context, CancelAgreementModel cancelAgreement);
    [RemoteAttribute]
public static void DeclineAgreement(ClientRuntimeContext context, DeclineAgreementModel declineAgreement);
    [RemoteAttribute]
public static ClientResult`1<DateTime> CompleteAgreement(ClientRuntimeContext context, CompleteAgreementModel completeAgreement);
    [RemoteAttribute]
public static ClientResult`1<string> CompleteAgreementV3(ClientRuntimeContext context, CompleteAgreementModel completeAgreement);
    [RemoteAttribute]
public static ClientResult`1<string> CompleteAgreementV4(ClientRuntimeContext context, CompleteAgreementModelV4 completeAgreement);
    [RemoteAttribute]
public static void UpdateAuditTrailEntry(ClientRuntimeContext context, UpdateAuditTrailEntryModel updateAuditTrailEntry);
    [RemoteAttribute]
public static void BillAgreement(ClientRuntimeContext context, Guid documentId);
    [RemoteAttribute]
public static void CleanupAgreement(ClientRuntimeContext context, Guid documentId);
    [RemoteAttribute]
public static ClientResult`1<string> GetEsignSettings(ClientRuntimeContext context);
}
[ScriptTypeAttribute("SP.EventReceiverDefinition")]
public class Microsoft.SharePoint.Client.EventReceiverDefinition : ClientObject {
    [RemoteAttribute]
public string ReceiverAssembly { get; }
    [RemoteAttribute]
public string ReceiverClass { get; }
    [RemoteAttribute]
public Guid ReceiverId { get; }
    [RemoteAttribute]
public string ReceiverName { get; }
    [RemoteAttribute]
public int SequenceNumber { get; }
    [RemoteAttribute]
public EventReceiverSynchronization Synchronization { get; }
    [RemoteAttribute]
public EventReceiverType EventType { get; }
    [RemoteAttribute]
public string ReceiverUrl { get; }
    [EditorBrowsableAttribute("1")]
public EventReceiverDefinition(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_ReceiverAssembly();
    public string get_ReceiverClass();
    public Guid get_ReceiverId();
    public string get_ReceiverName();
    public int get_SequenceNumber();
    public EventReceiverSynchronization get_Synchronization();
    public EventReceiverType get_EventType();
    public string get_ReceiverUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("SP.EventReceiverDefinitionCollection")]
public class Microsoft.SharePoint.Client.EventReceiverDefinitionCollection : ClientObjectCollection`1<EventReceiverDefinition> {
    [EditorBrowsableAttribute("1")]
public EventReceiverDefinitionCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public EventReceiverDefinition GetById(Guid eventReceiverId);
    [RemoteAttribute]
public EventReceiverDefinition Add(EventReceiverDefinitionCreationInformation eventReceiverCreationInformation);
}
[ScriptTypeAttribute("SP.EventReceiverDefinitionCreationInformation")]
public class Microsoft.SharePoint.Client.EventReceiverDefinitionCreationInformation : ClientValueObject {
    private string m_receiverAssembly;
    private string m_receiverClass;
    private string m_receiverName;
    private int m_sequenceNumber;
    private EventReceiverSynchronization m_synchronization;
    private EventReceiverType m_eventType;
    private string m_receiverUrl;
    [RemoteAttribute]
public string ReceiverAssembly { get; public set; }
    [RemoteAttribute]
public string ReceiverClass { get; public set; }
    [RemoteAttribute]
public string ReceiverName { get; public set; }
    [RemoteAttribute]
public int SequenceNumber { get; public set; }
    [RemoteAttribute]
public EventReceiverSynchronization Synchronization { get; public set; }
    [RemoteAttribute]
public EventReceiverType EventType { get; public set; }
    [RemoteAttribute]
public string ReceiverUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ReceiverAssembly();
    public void set_ReceiverAssembly(string value);
    public string get_ReceiverClass();
    public void set_ReceiverClass(string value);
    public string get_ReceiverName();
    public void set_ReceiverName(string value);
    public int get_SequenceNumber();
    public void set_SequenceNumber(int value);
    public EventReceiverSynchronization get_Synchronization();
    public void set_Synchronization(EventReceiverSynchronization value);
    public EventReceiverType get_EventType();
    public void set_EventType(EventReceiverType value);
    public string get_ReceiverUrl();
    public void set_ReceiverUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.EventReceiverDefinitionPropertyNames : object {
    public static string ReceiverAssembly;
    public static string ReceiverClass;
    public static string ReceiverId;
    public static string ReceiverName;
    public static string SequenceNumber;
    public static string Synchronization;
    public static string EventType;
    public static string ReceiverUrl;
}
[ServiceContractAttribute]
public interface Microsoft.SharePoint.Client.EventReceivers.IRemoteEventService {
    [OperationContractAttribute]
public abstract virtual SPRemoteEventResult ProcessEvent(SPRemoteEventProperties properties);
    [OperationContractAttribute]
public abstract virtual void ProcessOneWayEvent(SPRemoteEventProperties properties);
}
[DataContractAttribute]
public class Microsoft.SharePoint.Client.EventReceivers.SPRemoteAppEventProperties : object {
    [CompilerGeneratedAttribute]
private Uri <HostWebFullUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <AppWebFullUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <PreviousVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ProductId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentMarket>k__BackingField;
    [DataMemberAttribute]
public Uri HostWebFullUrl { get; public set; }
    [DataMemberAttribute]
public Uri AppWebFullUrl { get; public set; }
    [DataMemberAttribute]
public Version Version { get; public set; }
    [DataMemberAttribute]
public Version PreviousVersion { get; public set; }
    [DataMemberAttribute]
public Guid ProductId { get; public set; }
    [DataMemberAttribute]
public string AssetId { get; public set; }
    [DataMemberAttribute]
public string ContentMarket { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_HostWebFullUrl();
    [CompilerGeneratedAttribute]
public void set_HostWebFullUrl(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_AppWebFullUrl();
    [CompilerGeneratedAttribute]
public void set_AppWebFullUrl(Uri value);
    [CompilerGeneratedAttribute]
public Version get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Version value);
    [CompilerGeneratedAttribute]
public Version get_PreviousVersion();
    [CompilerGeneratedAttribute]
public void set_PreviousVersion(Version value);
    [CompilerGeneratedAttribute]
public Guid get_ProductId();
    [CompilerGeneratedAttribute]
public void set_ProductId(Guid value);
    [CompilerGeneratedAttribute]
public string get_AssetId();
    [CompilerGeneratedAttribute]
public void set_AssetId(string value);
    [CompilerGeneratedAttribute]
public string get_ContentMarket();
    [CompilerGeneratedAttribute]
public void set_ContentMarket(string value);
}
[DataContractAttribute]
public class Microsoft.SharePoint.Client.EventReceivers.SPRemoteEntityInstanceEventProperties : object {
    [CompilerGeneratedAttribute]
private string <EntityName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntityNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NotificationContext>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LobSystemInstanceName>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <NotificationMessage>k__BackingField;
    [DataMemberAttribute]
public string EntityName { get; public set; }
    [DataMemberAttribute]
public string EntityNamespace { get; public set; }
    [DataMemberAttribute]
public string NotificationContext { get; public set; }
    [DataMemberAttribute]
public string LobSystemInstanceName { get; public set; }
    [DataMemberAttribute]
public Byte[] NotificationMessage { get; public set; }
    [CompilerGeneratedAttribute]
public string get_EntityName();
    [CompilerGeneratedAttribute]
public void set_EntityName(string value);
    [CompilerGeneratedAttribute]
public string get_EntityNamespace();
    [CompilerGeneratedAttribute]
public void set_EntityNamespace(string value);
    [CompilerGeneratedAttribute]
public string get_NotificationContext();
    [CompilerGeneratedAttribute]
public void set_NotificationContext(string value);
    [CompilerGeneratedAttribute]
public string get_LobSystemInstanceName();
    [CompilerGeneratedAttribute]
public void set_LobSystemInstanceName(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_NotificationMessage();
    [CompilerGeneratedAttribute]
public void set_NotificationMessage(Byte[] value);
}
[DataContractAttribute]
public class Microsoft.SharePoint.Client.EventReceivers.SPRemoteEventProperties : object {
    [CompilerGeneratedAttribute]
private SPRemoteEventType <EventType>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <CorrelationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContextToken>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CultureLCID>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UICultureLCID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private SPRemoteItemEventProperties <ItemEventProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private SPRemoteListEventProperties <ListEventProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private SPRemoteWebEventProperties <WebEventProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private SPRemoteSecurityEventProperties <SecurityEventProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private SPRemoteAppEventProperties <AppEventProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private SPRemoteEntityInstanceEventProperties <EntityInstanceEventProperties>k__BackingField;
    [DataMemberAttribute]
public SPRemoteEventType EventType { get; public set; }
    [DataMemberAttribute]
public Guid CorrelationId { get; public set; }
    [DataMemberAttribute]
public string ContextToken { get; public set; }
    [DataMemberAttribute]
public int CultureLCID { get; public set; }
    [DataMemberAttribute]
public int UICultureLCID { get; public set; }
    [DataMemberAttribute]
public string ErrorCode { get; public set; }
    [DataMemberAttribute]
public string ErrorMessage { get; public set; }
    [DataMemberAttribute]
public SPRemoteItemEventProperties ItemEventProperties { get; public set; }
    [DataMemberAttribute]
public SPRemoteListEventProperties ListEventProperties { get; public set; }
    [DataMemberAttribute]
public SPRemoteWebEventProperties WebEventProperties { get; public set; }
    [DataMemberAttribute]
public SPRemoteSecurityEventProperties SecurityEventProperties { get; public set; }
    [DataMemberAttribute]
public SPRemoteAppEventProperties AppEventProperties { get; public set; }
    [DataMemberAttribute]
public SPRemoteEntityInstanceEventProperties EntityInstanceEventProperties { get; public set; }
    [CompilerGeneratedAttribute]
public SPRemoteEventType get_EventType();
    [CompilerGeneratedAttribute]
public void set_EventType(SPRemoteEventType value);
    [CompilerGeneratedAttribute]
public Guid get_CorrelationId();
    [CompilerGeneratedAttribute]
public void set_CorrelationId(Guid value);
    [CompilerGeneratedAttribute]
public string get_ContextToken();
    [CompilerGeneratedAttribute]
public void set_ContextToken(string value);
    [CompilerGeneratedAttribute]
public int get_CultureLCID();
    [CompilerGeneratedAttribute]
public void set_CultureLCID(int value);
    [CompilerGeneratedAttribute]
public int get_UICultureLCID();
    [CompilerGeneratedAttribute]
public void set_UICultureLCID(int value);
    [CompilerGeneratedAttribute]
public string get_ErrorCode();
    [CompilerGeneratedAttribute]
public void set_ErrorCode(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public SPRemoteItemEventProperties get_ItemEventProperties();
    [CompilerGeneratedAttribute]
public void set_ItemEventProperties(SPRemoteItemEventProperties value);
    [CompilerGeneratedAttribute]
public SPRemoteListEventProperties get_ListEventProperties();
    [CompilerGeneratedAttribute]
public void set_ListEventProperties(SPRemoteListEventProperties value);
    [CompilerGeneratedAttribute]
public SPRemoteWebEventProperties get_WebEventProperties();
    [CompilerGeneratedAttribute]
public void set_WebEventProperties(SPRemoteWebEventProperties value);
    [CompilerGeneratedAttribute]
public SPRemoteSecurityEventProperties get_SecurityEventProperties();
    [CompilerGeneratedAttribute]
public void set_SecurityEventProperties(SPRemoteSecurityEventProperties value);
    [CompilerGeneratedAttribute]
public SPRemoteAppEventProperties get_AppEventProperties();
    [CompilerGeneratedAttribute]
public void set_AppEventProperties(SPRemoteAppEventProperties value);
    [CompilerGeneratedAttribute]
public SPRemoteEntityInstanceEventProperties get_EntityInstanceEventProperties();
    [CompilerGeneratedAttribute]
public void set_EntityInstanceEventProperties(SPRemoteEntityInstanceEventProperties value);
}
[DataContractAttribute]
public class Microsoft.SharePoint.Client.EventReceivers.SPRemoteEventResult : object {
    [CompilerGeneratedAttribute]
private SPRemoteEventServiceStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUrl>k__BackingField;
    private Dictionary`2<string, object> changedItemProperties;
    [DataMemberAttribute]
public SPRemoteEventServiceStatus Status { get; public set; }
    [DataMemberAttribute]
public string ErrorMessage { get; public set; }
    [DataMemberAttribute]
[ObsoleteAttribute("Default list forms are committed through asynchronous XmlHttpRequests, so redirect urls specified in this way aren't followed by default.  In order to force a list form to follow a cancelation redirect url, set the list form web part's CSRRenderMode property to CSRRenderMode.ServerRender")]
public string RedirectUrl { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, object> ChangedItemProperties { get; }
    [CompilerGeneratedAttribute]
public SPRemoteEventServiceStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(SPRemoteEventServiceStatus value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUrl();
    [CompilerGeneratedAttribute]
public void set_RedirectUrl(string value);
    public Dictionary`2<string, object> get_ChangedItemProperties();
}
public enum Microsoft.SharePoint.Client.EventReceivers.SPRemoteEventServiceStatus : Enum {
    public int value__;
    public static SPRemoteEventServiceStatus Continue;
    public static SPRemoteEventServiceStatus CancelNoError;
    public static SPRemoteEventServiceStatus CancelWithError;
    [ObsoleteAttribute("Default list forms are committed through asynchronous XmlHttpRequests, so redirect urls specified in this way aren't followed by default.  In order to force a list form to follow a cancelation redirect url, set the list form web part's CSRRenderMode property to CSRRenderMode.ServerRender")]
public static SPRemoteEventServiceStatus CancelWithRedirectUrl;
}
public enum Microsoft.SharePoint.Client.EventReceivers.SPRemoteEventType : Enum {
    public int value__;
    public static SPRemoteEventType ItemAdding;
    public static SPRemoteEventType ItemUpdating;
    public static SPRemoteEventType ItemDeleting;
    public static SPRemoteEventType ItemCheckingIn;
    public static SPRemoteEventType ItemCheckingOut;
    public static SPRemoteEventType ItemUncheckingOut;
    public static SPRemoteEventType ItemAttachmentAdding;
    public static SPRemoteEventType ItemAttachmentDeleting;
    public static SPRemoteEventType ItemFileMoving;
    public static SPRemoteEventType ItemVersionDeleting;
    public static SPRemoteEventType FieldAdding;
    public static SPRemoteEventType FieldUpdating;
    public static SPRemoteEventType FieldDeleting;
    public static SPRemoteEventType ListAdding;
    public static SPRemoteEventType ListDeleting;
    public static SPRemoteEventType SiteDeleting;
    public static SPRemoteEventType WebDeleting;
    public static SPRemoteEventType WebMoving;
    public static SPRemoteEventType WebAdding;
    public static SPRemoteEventType GroupAdding;
    public static SPRemoteEventType GroupUpdating;
    public static SPRemoteEventType GroupDeleting;
    public static SPRemoteEventType GroupUserAdding;
    public static SPRemoteEventType GroupUserDeleting;
    public static SPRemoteEventType RoleDefinitionAdding;
    public static SPRemoteEventType RoleDefinitionUpdating;
    public static SPRemoteEventType RoleDefinitionDeleting;
    public static SPRemoteEventType RoleAssignmentAdding;
    public static SPRemoteEventType RoleAssignmentDeleting;
    public static SPRemoteEventType InheritanceBreaking;
    public static SPRemoteEventType InheritanceResetting;
    public static SPRemoteEventType ItemAdded;
    public static SPRemoteEventType ItemUpdated;
    public static SPRemoteEventType ItemDeleted;
    public static SPRemoteEventType ItemCheckedIn;
    public static SPRemoteEventType ItemCheckedOut;
    public static SPRemoteEventType ItemUncheckedOut;
    public static SPRemoteEventType ItemAttachmentAdded;
    public static SPRemoteEventType ItemAttachmentDeleted;
    public static SPRemoteEventType ItemFileMoved;
    public static SPRemoteEventType ItemFileConverted;
    public static SPRemoteEventType ItemVersionDeleted;
    public static SPRemoteEventType FieldAdded;
    public static SPRemoteEventType FieldUpdated;
    public static SPRemoteEventType FieldDeleted;
    public static SPRemoteEventType ListAdded;
    public static SPRemoteEventType ListDeleted;
    public static SPRemoteEventType SiteDeleted;
    public static SPRemoteEventType WebDeleted;
    public static SPRemoteEventType WebMoved;
    public static SPRemoteEventType WebProvisioned;
    public static SPRemoteEventType WebRestored;
    public static SPRemoteEventType GroupAdded;
    public static SPRemoteEventType GroupUpdated;
    public static SPRemoteEventType GroupDeleted;
    public static SPRemoteEventType GroupUserAdded;
    public static SPRemoteEventType GroupUserDeleted;
    public static SPRemoteEventType RoleDefinitionAdded;
    public static SPRemoteEventType RoleDefinitionUpdated;
    public static SPRemoteEventType RoleDefinitionDeleted;
    public static SPRemoteEventType RoleAssignmentAdded;
    public static SPRemoteEventType RoleAssignmentDeleted;
    public static SPRemoteEventType InheritanceBroken;
    public static SPRemoteEventType InheritanceReset;
    public static SPRemoteEventType EntityInstanceAdded;
    public static SPRemoteEventType EntityInstanceUpdated;
    public static SPRemoteEventType EntityInstanceDeleted;
    public static SPRemoteEventType AppInstalled;
    public static SPRemoteEventType AppUpgraded;
    public static SPRemoteEventType AppUninstalling;
}
[DataContractAttribute]
public class Microsoft.SharePoint.Client.EventReceivers.SPRemoteItemEventProperties : object {
    [CompilerGeneratedAttribute]
private string <WebUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ListId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ListTitle>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ListItemId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Versionless>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserLoginName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBackgroundSave>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BeforeUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AfterUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <ExternalNotificationMessage>k__BackingField;
    [DataMemberAttribute]
private Dictionary`2<string, object> m_beforeProperties;
    [DataMemberAttribute]
private Dictionary`2<string, object> m_afterProperties;
    [DataMemberAttribute]
public string WebUrl { get; public set; }
    [DataMemberAttribute]
public Guid ListId { get; public set; }
    [DataMemberAttribute]
public string ListTitle { get; public set; }
    [DataMemberAttribute]
public int ListItemId { get; public set; }
    [DataMemberAttribute]
public bool Versionless { get; public set; }
    [DataMemberAttribute]
public string UserDisplayName { get; public set; }
    [DataMemberAttribute]
public string UserLoginName { get; public set; }
    [DataMemberAttribute]
public bool IsBackgroundSave { get; public set; }
    [DataMemberAttribute]
public int CurrentUserId { get; public set; }
    [DataMemberAttribute]
public string BeforeUrl { get; public set; }
    [DataMemberAttribute]
public string AfterUrl { get; public set; }
    [DataMemberAttribute]
public Byte[] ExternalNotificationMessage { get; public set; }
    public Dictionary`2<string, object> BeforeProperties { get; }
    public Dictionary`2<string, object> AfterProperties { get; }
    [CompilerGeneratedAttribute]
public string get_WebUrl();
    [CompilerGeneratedAttribute]
public void set_WebUrl(string value);
    [CompilerGeneratedAttribute]
public Guid get_ListId();
    [CompilerGeneratedAttribute]
public void set_ListId(Guid value);
    [CompilerGeneratedAttribute]
public string get_ListTitle();
    [CompilerGeneratedAttribute]
public void set_ListTitle(string value);
    [CompilerGeneratedAttribute]
public int get_ListItemId();
    [CompilerGeneratedAttribute]
public void set_ListItemId(int value);
    [CompilerGeneratedAttribute]
public bool get_Versionless();
    [CompilerGeneratedAttribute]
public void set_Versionless(bool value);
    [CompilerGeneratedAttribute]
public string get_UserDisplayName();
    [CompilerGeneratedAttribute]
public void set_UserDisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_UserLoginName();
    [CompilerGeneratedAttribute]
public void set_UserLoginName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsBackgroundSave();
    [CompilerGeneratedAttribute]
public void set_IsBackgroundSave(bool value);
    [CompilerGeneratedAttribute]
public int get_CurrentUserId();
    [CompilerGeneratedAttribute]
public void set_CurrentUserId(int value);
    [CompilerGeneratedAttribute]
public string get_BeforeUrl();
    [CompilerGeneratedAttribute]
public void set_BeforeUrl(string value);
    [CompilerGeneratedAttribute]
public string get_AfterUrl();
    [CompilerGeneratedAttribute]
public void set_AfterUrl(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_ExternalNotificationMessage();
    [CompilerGeneratedAttribute]
public void set_ExternalNotificationMessage(Byte[] value);
    public Dictionary`2<string, object> get_BeforeProperties();
    public Dictionary`2<string, object> get_AfterProperties();
}
[DataContractAttribute]
public class Microsoft.SharePoint.Client.EventReceivers.SPRemoteListEventProperties : object {
    [CompilerGeneratedAttribute]
private string <WebUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ListId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ListTitle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldXml>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <FeatureId>k__BackingField;
    [DataMemberAttribute]
public string WebUrl { get; public set; }
    [DataMemberAttribute]
public Guid ListId { get; public set; }
    [DataMemberAttribute]
public string ListTitle { get; public set; }
    [DataMemberAttribute]
public string FieldName { get; public set; }
    [DataMemberAttribute]
public string FieldXml { get; public set; }
    [DataMemberAttribute]
public int TemplateId { get; public set; }
    [DataMemberAttribute]
public Guid FeatureId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_WebUrl();
    [CompilerGeneratedAttribute]
public void set_WebUrl(string value);
    [CompilerGeneratedAttribute]
public Guid get_ListId();
    [CompilerGeneratedAttribute]
public void set_ListId(Guid value);
    [CompilerGeneratedAttribute]
public string get_ListTitle();
    [CompilerGeneratedAttribute]
public void set_ListTitle(string value);
    [CompilerGeneratedAttribute]
public string get_FieldName();
    [CompilerGeneratedAttribute]
public void set_FieldName(string value);
    [CompilerGeneratedAttribute]
public string get_FieldXml();
    [CompilerGeneratedAttribute]
public void set_FieldXml(string value);
    [CompilerGeneratedAttribute]
public int get_TemplateId();
    [CompilerGeneratedAttribute]
public void set_TemplateId(int value);
    [CompilerGeneratedAttribute]
public Guid get_FeatureId();
    [CompilerGeneratedAttribute]
public void set_FeatureId(Guid value);
}
[DataContractAttribute]
public class Microsoft.SharePoint.Client.EventReceivers.SPRemoteSecurityEventProperties : object {
    [CompilerGeneratedAttribute]
private string <UserDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserLoginName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <WebId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebFullUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <GroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <GroupOwnerId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <GroupNewOwnerId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <GroupUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupUserLoginName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleDefinitionName>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <RoleDefinitionPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RoleDefinitionId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ObjectType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PrincipalId>k__BackingField;
    [DataMemberAttribute]
public string UserDisplayName { get; public set; }
    [DataMemberAttribute]
public string UserLoginName { get; public set; }
    [DataMemberAttribute]
public Guid WebId { get; public set; }
    [DataMemberAttribute]
public string WebFullUrl { get; public set; }
    [DataMemberAttribute]
public string GroupName { get; public set; }
    [DataMemberAttribute]
public int GroupId { get; public set; }
    [DataMemberAttribute]
public int GroupOwnerId { get; public set; }
    [DataMemberAttribute]
public int GroupNewOwnerId { get; public set; }
    [DataMemberAttribute]
public int GroupUserId { get; public set; }
    [DataMemberAttribute]
public string GroupUserLoginName { get; public set; }
    [DataMemberAttribute]
public string RoleDefinitionName { get; public set; }
    [DataMemberAttribute]
public ulong RoleDefinitionPermissions { get; public set; }
    [DataMemberAttribute]
public int RoleDefinitionId { get; public set; }
    [DataMemberAttribute]
public int ObjectType { get; public set; }
    [DataMemberAttribute]
public string ScopeUrl { get; public set; }
    [DataMemberAttribute]
public int PrincipalId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserDisplayName();
    [CompilerGeneratedAttribute]
public void set_UserDisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_UserLoginName();
    [CompilerGeneratedAttribute]
public void set_UserLoginName(string value);
    [CompilerGeneratedAttribute]
public Guid get_WebId();
    [CompilerGeneratedAttribute]
public void set_WebId(Guid value);
    [CompilerGeneratedAttribute]
public string get_WebFullUrl();
    [CompilerGeneratedAttribute]
public void set_WebFullUrl(string value);
    [CompilerGeneratedAttribute]
public string get_GroupName();
    [CompilerGeneratedAttribute]
public void set_GroupName(string value);
    [CompilerGeneratedAttribute]
public int get_GroupId();
    [CompilerGeneratedAttribute]
public void set_GroupId(int value);
    [CompilerGeneratedAttribute]
public int get_GroupOwnerId();
    [CompilerGeneratedAttribute]
public void set_GroupOwnerId(int value);
    [CompilerGeneratedAttribute]
public int get_GroupNewOwnerId();
    [CompilerGeneratedAttribute]
public void set_GroupNewOwnerId(int value);
    [CompilerGeneratedAttribute]
public int get_GroupUserId();
    [CompilerGeneratedAttribute]
public void set_GroupUserId(int value);
    [CompilerGeneratedAttribute]
public string get_GroupUserLoginName();
    [CompilerGeneratedAttribute]
public void set_GroupUserLoginName(string value);
    [CompilerGeneratedAttribute]
public string get_RoleDefinitionName();
    [CompilerGeneratedAttribute]
public void set_RoleDefinitionName(string value);
    [CompilerGeneratedAttribute]
public ulong get_RoleDefinitionPermissions();
    [CompilerGeneratedAttribute]
public void set_RoleDefinitionPermissions(ulong value);
    [CompilerGeneratedAttribute]
public int get_RoleDefinitionId();
    [CompilerGeneratedAttribute]
public void set_RoleDefinitionId(int value);
    [CompilerGeneratedAttribute]
public int get_ObjectType();
    [CompilerGeneratedAttribute]
public void set_ObjectType(int value);
    [CompilerGeneratedAttribute]
public string get_ScopeUrl();
    [CompilerGeneratedAttribute]
public void set_ScopeUrl(string value);
    [CompilerGeneratedAttribute]
public int get_PrincipalId();
    [CompilerGeneratedAttribute]
public void set_PrincipalId(int value);
}
[DataContractAttribute]
public class Microsoft.SharePoint.Client.EventReceivers.SPRemoteWebEventProperties : object {
    [CompilerGeneratedAttribute]
private string <FullUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerRelativeUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewServerRelativeUrl>k__BackingField;
    [DataMemberAttribute]
public string FullUrl { get; public set; }
    [DataMemberAttribute]
public string ServerRelativeUrl { get; public set; }
    [DataMemberAttribute]
public string NewServerRelativeUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FullUrl();
    [CompilerGeneratedAttribute]
public void set_FullUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ServerRelativeUrl();
    [CompilerGeneratedAttribute]
public void set_ServerRelativeUrl(string value);
    [CompilerGeneratedAttribute]
public string get_NewServerRelativeUrl();
    [CompilerGeneratedAttribute]
public void set_NewServerRelativeUrl(string value);
}
public enum Microsoft.SharePoint.Client.EventReceiverSynchronization : Enum {
    public int value__;
    public static EventReceiverSynchronization DefaultSynchronization;
    public static EventReceiverSynchronization Synchronous;
    public static EventReceiverSynchronization Asynchronous;
    public static EventReceiverSynchronization UndefinedInternalOnly;
}
public enum Microsoft.SharePoint.Client.EventReceiverType : Enum {
    public int value__;
    public static EventReceiverType InvalidReceiver;
    public static EventReceiverType ItemAdding;
    public static EventReceiverType ItemUpdating;
    public static EventReceiverType ItemDeleting;
    public static EventReceiverType ItemCheckingIn;
    public static EventReceiverType ItemCheckingOut;
    public static EventReceiverType ItemUncheckingOut;
    public static EventReceiverType ItemAttachmentAdding;
    public static EventReceiverType ItemAttachmentDeleting;
    public static EventReceiverType ItemFileMoving;
    public static EventReceiverType ItemVersionDeleting;
    public static EventReceiverType FieldAdding;
    public static EventReceiverType FieldUpdating;
    public static EventReceiverType FieldDeleting;
    public static EventReceiverType ListAdding;
    public static EventReceiverType ListDeleting;
    public static EventReceiverType SiteDeleting;
    public static EventReceiverType WebDeleting;
    public static EventReceiverType WebMoving;
    public static EventReceiverType WebAdding;
    public static EventReceiverType SiteMovingFromGeoLocation;
    public static EventReceiverType GroupAdding;
    public static EventReceiverType GroupUpdating;
    public static EventReceiverType GroupDeleting;
    public static EventReceiverType GroupUserAdding;
    public static EventReceiverType GroupUserDeleting;
    public static EventReceiverType RoleDefinitionAdding;
    public static EventReceiverType RoleDefinitionUpdating;
    public static EventReceiverType RoleDefinitionDeleting;
    public static EventReceiverType RoleAssignmentAdding;
    public static EventReceiverType RoleAssignmentDeleting;
    public static EventReceiverType InheritanceBreaking;
    public static EventReceiverType InheritanceResetting;
    public static EventReceiverType WorkflowStarting;
    public static EventReceiverType StartOfAfterEvents;
    public static EventReceiverType ItemAdded;
    public static EventReceiverType ItemUpdated;
    public static EventReceiverType ItemDeleted;
    public static EventReceiverType ItemCheckedIn;
    public static EventReceiverType ItemCheckedOut;
    public static EventReceiverType ItemUncheckedOut;
    public static EventReceiverType ItemAttachmentAdded;
    public static EventReceiverType ItemAttachmentDeleted;
    public static EventReceiverType ItemFileMoved;
    public static EventReceiverType ItemFileConverted;
    public static EventReceiverType ItemVersionDeleted;
    public static EventReceiverType ItemQuotaExceeded;
    public static EventReceiverType ItemLowLevelSchemaChanged;
    public static EventReceiverType FieldAdded;
    public static EventReceiverType FieldUpdated;
    public static EventReceiverType FieldDeleted;
    public static EventReceiverType ListAdded;
    public static EventReceiverType ListDeleted;
    public static EventReceiverType ListRestored;
    public static EventReceiverType SiteDeleted;
    public static EventReceiverType WebDeleted;
    public static EventReceiverType WebRestored;
    public static EventReceiverType WebMoved;
    public static EventReceiverType WebProvisioned;
    public static EventReceiverType GroupAdded;
    public static EventReceiverType GroupUpdated;
    public static EventReceiverType GroupDeleted;
    public static EventReceiverType GroupUserAdded;
    public static EventReceiverType GroupUserDeleted;
    public static EventReceiverType RoleDefinitionAdded;
    public static EventReceiverType RoleDefinitionUpdated;
    public static EventReceiverType RoleDefinitionDeleted;
    public static EventReceiverType RoleAssignmentAdded;
    public static EventReceiverType RoleAssignmentDeleted;
    public static EventReceiverType InheritanceBroken;
    public static EventReceiverType InheritanceReset;
    public static EventReceiverType WorkflowStarted;
    public static EventReceiverType WorkflowPostponed;
    public static EventReceiverType WorkflowCompleted;
    public static EventReceiverType EntityInstanceAdded;
    public static EventReceiverType EntityInstanceUpdated;
    public static EventReceiverType EntityInstanceDeleted;
    public static EventReceiverType AppInstalled;
    public static EventReceiverType AppUpgraded;
    public static EventReceiverType AppUninstalling;
    public static EventReceiverType EmailReceived;
    public static EventReceiverType ContextEvent;
}
public class Microsoft.SharePoint.Client.ExternalApplicationRequestToken : object {
    internal static int TokenVersion1;
    private static int TotalParts1;
    private static char TokenPartSeparator;
    private int m_tokenVersion;
    private Guid m_siteId;
    private int m_userId;
    private Guid m_appId;
    private string m_appPrincipal;
    private DateTime m_dateTime;
    private Byte[] m_clientHash;
    private Byte[] m_serverHash;
    private string m_tokenString;
    private string m_tokenPrefix;
    public int Version { get; }
    public Guid SiteId { get; }
    public int UserId { get; }
    public Guid ApplicationId { get; }
    public string ApplicationPrincipalLogOnName { get; }
    public DateTime DateTime { get; }
    public Byte[] ClientHash { get; internal set; }
    public Byte[] ServerHash { get; internal set; }
    public string TokenPrefix { get; }
    private string TokenString { get; }
    private ExternalApplicationRequestToken(int tokenVersion, Guid siteId, int userId, Guid appId, string appPrincipal, DateTime dateTime, Byte[] clientHash, Byte[] serverHash);
    public virtual string ToString();
    public int get_Version();
    public Guid get_SiteId();
    public int get_UserId();
    public Guid get_ApplicationId();
    public string get_ApplicationPrincipalLogOnName();
    public DateTime get_DateTime();
    public Byte[] get_ClientHash();
    internal void set_ClientHash(Byte[] value);
    public Byte[] get_ServerHash();
    internal void set_ServerHash(Byte[] value);
    public static ExternalApplicationRequestToken TryParse(string str);
    public string get_TokenPrefix();
    private string get_TokenString();
    private static ExternalApplicationRequestToken TryParsePrivate(string str);
    private static ExternalApplicationRequestToken TryParseToken1(String[] parts);
    private static bool TryParseGuid(string str, Guid& guid);
}
[ScriptTypeAttribute("SP.ExternalAppPrincipalCreationParameters")]
public class Microsoft.SharePoint.Client.ExternalAppPrincipalCreationParameters : ClientValueObject {
    private string m_appIdentifier;
    private IList`1<string> m_applicationEndpointAuthorities;
    private AppPrincipalCredential m_credential;
    private string m_displayName;
    private IList`1<string> m_redirectAddresses;
    private bool m_trustedForDelegation;
    [RemoteAttribute]
public string AppIdentifier { get; public set; }
    [RemoteAttribute]
public IList`1<string> ApplicationEndpointAuthorities { get; public set; }
    [RemoteAttribute]
public AppPrincipalCredential Credential { get; public set; }
    [RemoteAttribute]
public string DisplayName { get; public set; }
    [RemoteAttribute]
public IList`1<string> RedirectAddresses { get; public set; }
    [RemoteAttribute]
public bool TrustedForDelegation { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AppIdentifier();
    public void set_AppIdentifier(string value);
    public IList`1<string> get_ApplicationEndpointAuthorities();
    public void set_ApplicationEndpointAuthorities(IList`1<string> value);
    public AppPrincipalCredential get_Credential();
    public void set_Credential(AppPrincipalCredential value);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public IList`1<string> get_RedirectAddresses();
    public void set_RedirectAddresses(IList`1<string> value);
    public bool get_TrustedForDelegation();
    public void set_TrustedForDelegation(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FavoriteItemCollection")]
public static class Microsoft.SharePoint.Client.FavoriteItemCollection : object {
    [RemoteAttribute]
public static ClientResult`1<string> GetFavoriteItems(ClientRuntimeContext context);
}
[ScriptTypeAttribute("Microsoft.SharePoint.ListHome.FavoriteListHomeItem")]
public class Microsoft.SharePoint.Client.FavoriteListHomeItem : ListHomeItem {
    private float m_favoritesOrder;
    private float m_lastPolled;
    private long m_order;
    [RemoteAttribute]
public float favoritesOrder { get; public set; }
    [RemoteAttribute]
public float lastPolled { get; public set; }
    [RemoteAttribute]
public long order { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public float get_favoritesOrder();
    public void set_favoritesOrder(float value);
    public float get_lastPolled();
    public void set_lastPolled(float value);
    public long get_order();
    public void set_order(long value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FavoriteLists")]
public static class Microsoft.SharePoint.Client.FavoriteLists : object {
    [RemoteAttribute]
public static ClientResult`1<FavoriteListHomeItem[]> GetListsBy(ClientRuntimeContext context, string siteId, string listId, int page);
    [RemoteAttribute]
public static ClientResult`1<FavoriteListHomeItem> AddList(ClientRuntimeContext context, FavoriteListHomeItem favoriteList);
    [RemoteAttribute]
public static ClientResult`1<FavoriteListHomeItem> UpdateList(ClientRuntimeContext context, FavoriteListHomeItem favoriteList);
    [RemoteAttribute]
public static ClientResult`1<FavoriteListHomeItem> RemoveList(ClientRuntimeContext context, string siteId, string listId, string webId);
    [RemoteAttribute]
public static void ReorderList(ClientRuntimeContext context, FavoriteListHomeItem listToReorder, FavoriteListHomeItem listBefore, FavoriteListHomeItem listAfter);
}
[ScriptTypeAttribute("SP.FavoriteListsSubstrate")]
public static class Microsoft.SharePoint.Client.FavoriteListsSubstrate : object {
    [RemoteAttribute]
public static ClientResult`1<string> GetListsBy(ClientRuntimeContext context, string siteId, string listId, int page);
    [RemoteAttribute]
public static ClientResult`1<string> AddList(ClientRuntimeContext context, FavoriteListHomeItem list, string contentSource, string query);
    [RemoteAttribute]
public static void UpdateList(ClientRuntimeContext context, FavoriteListHomeItem list);
    [RemoteAttribute]
public static void RemoveList(ClientRuntimeContext context, string siteId, string listId, string webId);
}
[ScriptTypeAttribute("SP.Feature")]
public class Microsoft.SharePoint.Client.Feature : ClientObject {
    [RemoteAttribute]
public Guid DefinitionId { get; }
    [RemoteAttribute]
public string DisplayName { get; }
    [EditorBrowsableAttribute("1")]
public Feature(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_DefinitionId();
    public string get_DisplayName();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FeatureCollection")]
public class Microsoft.SharePoint.Client.FeatureCollection : ClientObjectCollection`1<Feature> {
    [EditorBrowsableAttribute("1")]
public FeatureCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Feature GetById(Guid featureId);
    [RemoteAttribute]
public Feature Add(Guid featureId, bool force, FeatureDefinitionScope featdefScope);
    [RemoteAttribute]
public void Remove(Guid featureId, bool force);
}
public enum Microsoft.SharePoint.Client.FeatureDefinitionScope : Enum {
    public int value__;
    public static FeatureDefinitionScope None;
    public static FeatureDefinitionScope Farm;
    public static FeatureDefinitionScope Site;
    public static FeatureDefinitionScope Web;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FeaturePropertyNames : object {
    public static string DefinitionId;
    public static string DisplayName;
}
[ScriptTypeAttribute("SP.Field")]
public class Microsoft.SharePoint.Client.Field : ClientObject {
    [RemoteAttribute]
public string AutofillInfo { get; public set; }
    [RemoteAttribute]
public bool AutoIndexed { get; }
    [RemoteAttribute]
public bool CanBeDeleted { get; }
    [RemoteAttribute]
public Guid ClientSideComponentId { get; public set; }
    [RemoteAttribute]
public string ClientSideComponentProperties { get; public set; }
    [RemoteAttribute]
public string ClientValidationFormula { get; public set; }
    [RemoteAttribute]
public string ClientValidationMessage { get; public set; }
    [RemoteAttribute]
public string CustomFormatter { get; public set; }
    [RemoteAttribute]
public string DefaultFormula { get; public set; }
    [RemoteAttribute]
public string DefaultValue { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public UserResource DescriptionResource { get; }
    [RemoteAttribute]
public string Direction { get; public set; }
    [RemoteAttribute]
public bool EnforceUniqueValues { get; public set; }
    [RemoteAttribute]
public string EntityPropertyName { get; }
    [RemoteAttribute]
public bool Filterable { get; }
    [RemoteAttribute]
public bool FromBaseType { get; }
    [RemoteAttribute]
public string Group { get; public set; }
    [RemoteAttribute]
public bool Hidden { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool Indexed { get; public set; }
    [RemoteAttribute]
public FieldIndexStatus IndexStatus { get; }
    [RemoteAttribute]
public string InternalName { get; }
    [RemoteAttribute]
public bool IsModern { get; public set; }
    [RemoteAttribute]
public string JSLink { get; public set; }
    [RemoteAttribute]
public bool NoCrawl { get; public set; }
    [RemoteAttribute]
public bool PinnedToFiltersPane { get; public set; }
    [RemoteAttribute]
public bool ReadOnlyField { get; public set; }
    [RemoteAttribute]
public bool Required { get; public set; }
    [RemoteAttribute]
public string SchemaXml { get; public set; }
    [RemoteAttribute]
public string SchemaXmlWithResourceTokens { get; }
    [RemoteAttribute]
public string Scope { get; }
    [RemoteAttribute]
public bool Sealed { get; public set; }
    [RemoteAttribute]
public ShowInFiltersPaneStatus ShowInFiltersPane { get; public set; }
    [RemoteAttribute]
public bool Sortable { get; }
    [RemoteAttribute]
public string StaticName { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public UserResource TitleResource { get; }
    [RemoteAttribute]
public FieldType FieldTypeKind { get; public set; }
    [RemoteAttribute]
public string TypeAsString { get; public set; }
    [RemoteAttribute]
public string TypeDisplayName { get; }
    [RemoteAttribute]
public string TypeShortDescription { get; }
    [RemoteAttribute]
public string ValidationFormula { get; public set; }
    [RemoteAttribute]
public string ValidationMessage { get; public set; }
    [EditorBrowsableAttribute("1")]
public Field(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_AutofillInfo();
    public void set_AutofillInfo(string value);
    public bool get_AutoIndexed();
    public bool get_CanBeDeleted();
    public Guid get_ClientSideComponentId();
    public void set_ClientSideComponentId(Guid value);
    public string get_ClientSideComponentProperties();
    public void set_ClientSideComponentProperties(string value);
    public string get_ClientValidationFormula();
    public void set_ClientValidationFormula(string value);
    public string get_ClientValidationMessage();
    public void set_ClientValidationMessage(string value);
    public string get_CustomFormatter();
    public void set_CustomFormatter(string value);
    public string get_DefaultFormula();
    public void set_DefaultFormula(string value);
    public string get_DefaultValue();
    public void set_DefaultValue(string value);
    public string get_Description();
    public void set_Description(string value);
    public UserResource get_DescriptionResource();
    public string get_Direction();
    public void set_Direction(string value);
    public bool get_EnforceUniqueValues();
    public void set_EnforceUniqueValues(bool value);
    public string get_EntityPropertyName();
    public bool get_Filterable();
    public bool get_FromBaseType();
    public string get_Group();
    public void set_Group(string value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public Guid get_Id();
    public bool get_Indexed();
    public void set_Indexed(bool value);
    public FieldIndexStatus get_IndexStatus();
    public string get_InternalName();
    public bool get_IsModern();
    public void set_IsModern(bool value);
    public string get_JSLink();
    public void set_JSLink(string value);
    public bool get_NoCrawl();
    public void set_NoCrawl(bool value);
    public bool get_PinnedToFiltersPane();
    public void set_PinnedToFiltersPane(bool value);
    public bool get_ReadOnlyField();
    public void set_ReadOnlyField(bool value);
    public bool get_Required();
    public void set_Required(bool value);
    public string get_SchemaXml();
    public void set_SchemaXml(string value);
    public string get_SchemaXmlWithResourceTokens();
    public string get_Scope();
    public bool get_Sealed();
    public void set_Sealed(bool value);
    public ShowInFiltersPaneStatus get_ShowInFiltersPane();
    public void set_ShowInFiltersPane(ShowInFiltersPaneStatus value);
    public bool get_Sortable();
    public string get_StaticName();
    public void set_StaticName(string value);
    public string get_Title();
    public void set_Title(string value);
    public UserResource get_TitleResource();
    public FieldType get_FieldTypeKind();
    public void set_FieldTypeKind(FieldType value);
    public string get_TypeAsString();
    public void set_TypeAsString(string value);
    public string get_TypeDisplayName();
    public string get_TypeShortDescription();
    public string get_ValidationFormula();
    public void set_ValidationFormula(string value);
    public string get_ValidationMessage();
    public void set_ValidationMessage(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void ValidateSetValue(ListItem item, string value);
    [RemoteAttribute]
public void UpdateAndPushChanges(bool pushChangesToLists);
    [RemoteAttribute]
public virtual void Update();
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public ClientResult`1<FieldIndexStatus> EnableIndex();
    [RemoteAttribute]
public ClientResult`1<FieldIndexStatus> DisableIndex();
    [RemoteAttribute]
public void SetShowInDisplayForm(bool value);
    [RemoteAttribute]
public void SetShowInEditForm(bool value);
    [RemoteAttribute]
public void SetShowInNewForm(bool value);
}
[ScriptTypeAttribute("SP.FieldCalculated")]
public class Microsoft.SharePoint.Client.FieldCalculated : Field {
    [RemoteAttribute]
public int CurrencyLocaleId { get; public set; }
    [RemoteAttribute]
public DateTimeFieldFormatType DateFormat { get; public set; }
    [RemoteAttribute]
public int DisplayFormat { get; }
    [RemoteAttribute]
public string Formula { get; public set; }
    [RemoteAttribute]
public FieldType OutputType { get; public set; }
    [RemoteAttribute]
public bool ShowAsPercentage { get; public set; }
    [EditorBrowsableAttribute("1")]
public FieldCalculated(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_CurrencyLocaleId();
    public void set_CurrencyLocaleId(int value);
    public DateTimeFieldFormatType get_DateFormat();
    public void set_DateFormat(DateTimeFieldFormatType value);
    public int get_DisplayFormat();
    public string get_Formula();
    public void set_Formula(string value);
    public FieldType get_OutputType();
    public void set_OutputType(FieldType value);
    public bool get_ShowAsPercentage();
    public void set_ShowAsPercentage(bool value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FieldCalculatedErrorValue")]
public class Microsoft.SharePoint.Client.FieldCalculatedErrorValue : ClientValueObject {
    private string m_errorMessage;
    [RemoteAttribute]
public string ErrorMessage { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ErrorMessage();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldCalculatedPropertyNames : object {
    public static string CurrencyLocaleId;
    public static string DateFormat;
    public static string DisplayFormat;
    public static string Formula;
    public static string OutputType;
    public static string ShowAsPercentage;
}
[ScriptTypeAttribute("SP.FieldChoice")]
public class Microsoft.SharePoint.Client.FieldChoice : FieldMultiChoice {
    [RemoteAttribute]
public ChoiceFormatType EditFormat { get; public set; }
    [EditorBrowsableAttribute("1")]
public FieldChoice(ClientRuntimeContext context, ObjectPath objectPath);
    public ChoiceFormatType get_EditFormat();
    public void set_EditFormat(ChoiceFormatType value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldChoicePropertyNames : object {
    public static string EditFormat;
}
[ScriptTypeAttribute("SP.FieldCollection")]
public class Microsoft.SharePoint.Client.FieldCollection : ClientObjectCollection`1<Field> {
    [RemoteAttribute]
public string SchemaXml { get; }
    [EditorBrowsableAttribute("1")]
public FieldCollection(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_SchemaXml();
    [RemoteAttribute]
public Field GetByTitle(string title);
    [RemoteAttribute]
public Field GetById(Guid id);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public Field GetByInternalNameOrTitle(string strName);
    [RemoteAttribute]
public Field Add(Field field);
    [RemoteAttribute]
public Field AddDependentLookup(string displayName, Field primaryLookupField, string lookupField);
    [RemoteAttribute]
public Field AddFieldAsXml(string schemaXml, bool addToDefaultView, AddFieldOptions options);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldCollectionPropertyNames : object {
    public static string SchemaXml;
}
[ScriptTypeAttribute("SP.FieldComputed")]
public class Microsoft.SharePoint.Client.FieldComputed : Field {
    [RemoteAttribute]
public bool EnableLookup { get; public set; }
    [EditorBrowsableAttribute("1")]
public FieldComputed(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_EnableLookup();
    public void set_EnableLookup(bool value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldComputedPropertyNames : object {
    public static string EnableLookup;
}
[ScriptTypeAttribute("SP.FieldCurrency")]
public class Microsoft.SharePoint.Client.FieldCurrency : FieldNumber {
    [RemoteAttribute]
public int CurrencyLocaleId { get; public set; }
    [EditorBrowsableAttribute("1")]
public FieldCurrency(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_CurrencyLocaleId();
    public void set_CurrencyLocaleId(int value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldCurrencyPropertyNames : object {
    public static string CurrencyLocaleId;
}
[ScriptTypeAttribute("SP.FieldDateTime")]
public class Microsoft.SharePoint.Client.FieldDateTime : Field {
    [RemoteAttribute]
public CalendarType DateTimeCalendarType { get; public set; }
    [RemoteAttribute]
public string DateFormat { get; public set; }
    [RemoteAttribute]
public DateTimeFieldFormatType DisplayFormat { get; public set; }
    [RemoteAttribute]
public DateTimeFieldFriendlyFormatType FriendlyDisplayFormat { get; public set; }
    [RemoteAttribute]
public string TimeFormat { get; public set; }
    [EditorBrowsableAttribute("1")]
public FieldDateTime(ClientRuntimeContext context, ObjectPath objectPath);
    public CalendarType get_DateTimeCalendarType();
    public void set_DateTimeCalendarType(CalendarType value);
    public string get_DateFormat();
    public void set_DateFormat(string value);
    public DateTimeFieldFormatType get_DisplayFormat();
    public void set_DisplayFormat(DateTimeFieldFormatType value);
    public DateTimeFieldFriendlyFormatType get_FriendlyDisplayFormat();
    public void set_FriendlyDisplayFormat(DateTimeFieldFriendlyFormatType value);
    public string get_TimeFormat();
    public void set_TimeFormat(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldDateTimePropertyNames : object {
    public static string DateTimeCalendarType;
    public static string DateFormat;
    public static string DisplayFormat;
    public static string FriendlyDisplayFormat;
    public static string TimeFormat;
}
[ScriptTypeAttribute("SP.FieldGeolocation")]
public class Microsoft.SharePoint.Client.FieldGeolocation : Field {
    [EditorBrowsableAttribute("1")]
public FieldGeolocation(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.FieldGeolocationValue")]
public class Microsoft.SharePoint.Client.FieldGeolocationValue : ClientValueObject {
    private double m_altitude;
    private double m_latitude;
    private double m_longitude;
    private double m_measure;
    [RemoteAttribute]
public double Altitude { get; public set; }
    [RemoteAttribute]
public double Latitude { get; public set; }
    [RemoteAttribute]
public double Longitude { get; public set; }
    [RemoteAttribute]
public double Measure { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public double get_Altitude();
    public void set_Altitude(double value);
    public double get_Latitude();
    public void set_Latitude(double value);
    public double get_Longitude();
    public void set_Longitude(double value);
    public double get_Measure();
    public void set_Measure(double value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FieldGuid")]
public class Microsoft.SharePoint.Client.FieldGuid : Field {
    [EditorBrowsableAttribute("1")]
public FieldGuid(ClientRuntimeContext context, ObjectPath objectPath);
}
public enum Microsoft.SharePoint.Client.FieldIndexStatus : Enum {
    public int value__;
    public static FieldIndexStatus None;
    public static FieldIndexStatus Indexed;
    public static FieldIndexStatus Enabling;
    public static FieldIndexStatus Disabling;
}
[ScriptTypeAttribute("SP.FieldLink")]
public class Microsoft.SharePoint.Client.FieldLink : ClientObject {
    [RemoteAttribute]
public string DisplayName { get; public set; }
    [RemoteAttribute]
public bool Hidden { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public bool ReadOnly { get; public set; }
    [RemoteAttribute]
public bool Required { get; public set; }
    [RemoteAttribute]
public bool ShowInDisplayForm { get; public set; }
    [EditorBrowsableAttribute("1")]
public FieldLink(ClientRuntimeContext context, ObjectPath objectPath);
    internal void InitFromCreationInformation(FieldLinkCreationInformation creation);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public Guid get_Id();
    public string get_Name();
    public bool get_ReadOnly();
    public void set_ReadOnly(bool value);
    public bool get_Required();
    public void set_Required(bool value);
    public bool get_ShowInDisplayForm();
    public void set_ShowInDisplayForm(bool value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("SP.FieldLinkCollection")]
public class Microsoft.SharePoint.Client.FieldLinkCollection : ClientObjectCollection`1<FieldLink> {
    [EditorBrowsableAttribute("1")]
public FieldLinkCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public FieldLink GetById(Guid id);
    [RemoteAttribute]
public FieldLink Add(FieldLinkCreationInformation parameters);
    [RemoteAttribute]
public void Reorder(String[] internalNames);
}
[ScriptTypeAttribute("SP.FieldLinkCreationInformation")]
public class Microsoft.SharePoint.Client.FieldLinkCreationInformation : ClientValueObject {
    private Field m_field;
    [RemoteAttribute]
public Field Field { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Field get_Field();
    public void set_Field(Field value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldLinkPropertyNames : object {
    public static string DisplayName;
    public static string Hidden;
    public static string Id;
    public static string Name;
    public static string ReadOnly;
    public static string Required;
    public static string ShowInDisplayForm;
}
[ScriptTypeAttribute("SP.FieldLocation")]
public class Microsoft.SharePoint.Client.FieldLocation : FieldMultiLineText {
    [EditorBrowsableAttribute("1")]
public FieldLocation(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.FieldLookup")]
public class Microsoft.SharePoint.Client.FieldLookup : Field {
    [RemoteAttribute]
public bool AllowMultipleValues { get; public set; }
    [RemoteAttribute]
public IList`1<string> DependentLookupInternalNames { get; }
    [RemoteAttribute]
public bool IsDependentLookup { get; }
    [RemoteAttribute]
public bool IsRelationship { get; public set; }
    [RemoteAttribute]
public string LookupField { get; public set; }
    [RemoteAttribute]
public string LookupList { get; public set; }
    [RemoteAttribute]
public Guid LookupWebId { get; public set; }
    [RemoteAttribute]
public string PrimaryFieldId { get; public set; }
    [RemoteAttribute]
public RelationshipDeleteBehaviorType RelationshipDeleteBehavior { get; public set; }
    [RemoteAttribute]
public bool UnlimitedLengthInDocumentLibrary { get; public set; }
    [EditorBrowsableAttribute("1")]
public FieldLookup(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_AllowMultipleValues();
    public void set_AllowMultipleValues(bool value);
    public IList`1<string> get_DependentLookupInternalNames();
    public bool get_IsDependentLookup();
    public bool get_IsRelationship();
    public void set_IsRelationship(bool value);
    public string get_LookupField();
    public void set_LookupField(string value);
    public string get_LookupList();
    public void set_LookupList(string value);
    public Guid get_LookupWebId();
    public void set_LookupWebId(Guid value);
    public string get_PrimaryFieldId();
    public void set_PrimaryFieldId(string value);
    public RelationshipDeleteBehaviorType get_RelationshipDeleteBehavior();
    public void set_RelationshipDeleteBehavior(RelationshipDeleteBehaviorType value);
    public bool get_UnlimitedLengthInDocumentLibrary();
    public void set_UnlimitedLengthInDocumentLibrary(bool value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldLookupPropertyNames : object {
    public static string AllowMultipleValues;
    public static string DependentLookupInternalNames;
    public static string IsDependentLookup;
    public static string IsRelationship;
    public static string LookupField;
    public static string LookupList;
    public static string LookupWebId;
    public static string PrimaryFieldId;
    public static string RelationshipDeleteBehavior;
    public static string UnlimitedLengthInDocumentLibrary;
}
[ScriptTypeAttribute("SP.FieldLookupValue")]
public class Microsoft.SharePoint.Client.FieldLookupValue : ClientValueObject {
    private int m_lookupId;
    private string m_lookupValue;
    [RemoteAttribute]
public int LookupId { get; public set; }
    [RemoteAttribute]
public string LookupValue { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    internal void SetLookupValue(string value);
    public int get_LookupId();
    public void set_LookupId(int value);
    public string get_LookupValue();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FieldMultiChoice")]
public class Microsoft.SharePoint.Client.FieldMultiChoice : Field {
    [RemoteAttribute]
public bool FillInChoice { get; public set; }
    [RemoteAttribute]
public string Mappings { get; }
    [RemoteAttribute]
public String[] Choices { get; public set; }
    [RemoteAttribute]
public bool UnlimitedLengthInDocumentLibrary { get; public set; }
    [EditorBrowsableAttribute("1")]
public FieldMultiChoice(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_FillInChoice();
    public void set_FillInChoice(bool value);
    public string get_Mappings();
    public String[] get_Choices();
    public void set_Choices(String[] value);
    public bool get_UnlimitedLengthInDocumentLibrary();
    public void set_UnlimitedLengthInDocumentLibrary(bool value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldMultiChoicePropertyNames : object {
    public static string FillInChoice;
    public static string Mappings;
    public static string Choices;
    public static string UnlimitedLengthInDocumentLibrary;
}
[ScriptTypeAttribute("SP.FieldMultiLineText")]
public class Microsoft.SharePoint.Client.FieldMultiLineText : Field {
    [RemoteAttribute]
public bool AllowHyperlink { get; public set; }
    [RemoteAttribute]
public bool AppendOnly { get; public set; }
    [RemoteAttribute]
public bool IsLongHyperlink { get; public set; }
    [RemoteAttribute]
public int NumberOfLines { get; public set; }
    [RemoteAttribute]
public bool RestrictedMode { get; public set; }
    [RemoteAttribute]
public bool RichText { get; public set; }
    [RemoteAttribute]
public bool UnlimitedLengthInDocumentLibrary { get; public set; }
    [RemoteAttribute]
public bool WikiLinking { get; }
    [EditorBrowsableAttribute("1")]
public FieldMultiLineText(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_AllowHyperlink();
    public void set_AllowHyperlink(bool value);
    public bool get_AppendOnly();
    public void set_AppendOnly(bool value);
    public bool get_IsLongHyperlink();
    public void set_IsLongHyperlink(bool value);
    public int get_NumberOfLines();
    public void set_NumberOfLines(int value);
    public bool get_RestrictedMode();
    public void set_RestrictedMode(bool value);
    public bool get_RichText();
    public void set_RichText(bool value);
    public bool get_UnlimitedLengthInDocumentLibrary();
    public void set_UnlimitedLengthInDocumentLibrary(bool value);
    public bool get_WikiLinking();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldMultiLineTextPropertyNames : object {
    public static string AllowHyperlink;
    public static string AppendOnly;
    public static string IsLongHyperlink;
    public static string NumberOfLines;
    public static string RestrictedMode;
    public static string RichText;
    public static string UnlimitedLengthInDocumentLibrary;
    public static string WikiLinking;
}
[ScriptTypeAttribute("SP.FieldNumber")]
public class Microsoft.SharePoint.Client.FieldNumber : Field {
    [RemoteAttribute]
public bool CommaSeparator { get; public set; }
    [RemoteAttribute]
public string CustomUnitName { get; public set; }
    [RemoteAttribute]
public bool CustomUnitOnRight { get; public set; }
    [RemoteAttribute]
public int DisplayFormat { get; }
    [RemoteAttribute]
public double MaximumValue { get; public set; }
    [RemoteAttribute]
public double MinimumValue { get; public set; }
    [RemoteAttribute]
public bool ShowAsPercentage { get; public set; }
    [RemoteAttribute]
public string Unit { get; public set; }
    [EditorBrowsableAttribute("1")]
public FieldNumber(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_CommaSeparator();
    public void set_CommaSeparator(bool value);
    public string get_CustomUnitName();
    public void set_CustomUnitName(string value);
    public bool get_CustomUnitOnRight();
    public void set_CustomUnitOnRight(bool value);
    public int get_DisplayFormat();
    public double get_MaximumValue();
    public void set_MaximumValue(double value);
    public double get_MinimumValue();
    public void set_MinimumValue(double value);
    public bool get_ShowAsPercentage();
    public void set_ShowAsPercentage(bool value);
    public string get_Unit();
    public void set_Unit(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldNumberPropertyNames : object {
    public static string CommaSeparator;
    public static string CustomUnitName;
    public static string CustomUnitOnRight;
    public static string DisplayFormat;
    public static string MaximumValue;
    public static string MinimumValue;
    public static string ShowAsPercentage;
    public static string Unit;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldObjectPropertyNames : object {
    public static string DescriptionResource;
    public static string TitleResource;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldPropertyNames : object {
    public static string AutofillInfo;
    public static string AutoIndexed;
    public static string CanBeDeleted;
    public static string ClientSideComponentId;
    public static string ClientSideComponentProperties;
    public static string ClientValidationFormula;
    public static string ClientValidationMessage;
    public static string CustomFormatter;
    public static string DefaultFormula;
    public static string DefaultValue;
    public static string Description;
    public static string Direction;
    public static string EnforceUniqueValues;
    public static string EntityPropertyName;
    public static string Filterable;
    public static string FromBaseType;
    public static string Group;
    public static string Hidden;
    public static string Id;
    public static string Indexed;
    public static string IndexStatus;
    public static string InternalName;
    public static string IsModern;
    public static string JSLink;
    public static string NoCrawl;
    public static string PinnedToFiltersPane;
    public static string ReadOnlyField;
    public static string Required;
    public static string SchemaXml;
    public static string SchemaXmlWithResourceTokens;
    public static string Scope;
    public static string Sealed;
    public static string ShowInFiltersPane;
    public static string Sortable;
    public static string StaticName;
    public static string Title;
    public static string FieldTypeKind;
    public static string TypeAsString;
    public static string TypeDisplayName;
    public static string TypeShortDescription;
    public static string ValidationFormula;
    public static string ValidationMessage;
}
[ScriptTypeAttribute("SP.FieldRatingScale")]
public class Microsoft.SharePoint.Client.FieldRatingScale : FieldMultiChoice {
    [RemoteAttribute]
public int GridEndNumber { get; public set; }
    [RemoteAttribute]
public string GridNAOptionText { get; public set; }
    [RemoteAttribute]
public int GridStartNumber { get; public set; }
    [RemoteAttribute]
public string GridTextRangeAverage { get; public set; }
    [RemoteAttribute]
public string GridTextRangeHigh { get; public set; }
    [RemoteAttribute]
public string GridTextRangeLow { get; public set; }
    [RemoteAttribute]
public int RangeCount { get; }
    [EditorBrowsableAttribute("1")]
public FieldRatingScale(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_GridEndNumber();
    public void set_GridEndNumber(int value);
    public string get_GridNAOptionText();
    public void set_GridNAOptionText(string value);
    public int get_GridStartNumber();
    public void set_GridStartNumber(int value);
    public string get_GridTextRangeAverage();
    public void set_GridTextRangeAverage(string value);
    public string get_GridTextRangeHigh();
    public void set_GridTextRangeHigh(string value);
    public string get_GridTextRangeLow();
    public void set_GridTextRangeLow(string value);
    public int get_RangeCount();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldRatingScalePropertyNames : object {
    public static string GridEndNumber;
    public static string GridNAOptionText;
    public static string GridStartNumber;
    public static string GridTextRangeAverage;
    public static string GridTextRangeHigh;
    public static string GridTextRangeLow;
    public static string RangeCount;
}
[ScriptTypeAttribute("SP.FieldRatingScaleQuestionAnswer")]
public class Microsoft.SharePoint.Client.FieldRatingScaleQuestionAnswer : ClientValueObject {
    private int m_answer;
    private string m_question;
    [RemoteAttribute]
public int Answer { get; public set; }
    [RemoteAttribute]
public string Question { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_Answer();
    public void set_Answer(int value);
    public string get_Question();
    public void set_Question(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("SP.FieldStringValues")]
public class Microsoft.SharePoint.Client.FieldStringValues : ClientObject {
    public Dictionary`2<string, string> FieldValues { get; }
    public string Item { get; }
    [EditorBrowsableAttribute("1")]
public FieldStringValues(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, string> get_FieldValues();
    [PseudoRemoteAttribute]
public string get_Item(string fieldName);
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal string GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
}
[ScriptTypeAttribute("SP.FieldText")]
public class Microsoft.SharePoint.Client.FieldText : Field {
    [RemoteAttribute]
public int MaxLength { get; public set; }
    [EditorBrowsableAttribute("1")]
public FieldText(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_MaxLength();
    public void set_MaxLength(int value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldTextPropertyNames : object {
    public static string MaxLength;
}
[ScriptTypeAttribute("SP.FieldThumbnail")]
public class Microsoft.SharePoint.Client.FieldThumbnail : ClientObject {
    [EditorBrowsableAttribute("1")]
public FieldThumbnail(ClientRuntimeContext context, ObjectPath objectPath);
}
public enum Microsoft.SharePoint.Client.FieldType : Enum {
    public int value__;
    public static FieldType Invalid;
    public static FieldType Integer;
    public static FieldType Text;
    public static FieldType Note;
    public static FieldType DateTime;
    public static FieldType Counter;
    public static FieldType Choice;
    public static FieldType Lookup;
    public static FieldType Boolean;
    public static FieldType Number;
    public static FieldType Currency;
    public static FieldType URL;
    public static FieldType Computed;
    public static FieldType Threading;
    public static FieldType Guid;
    public static FieldType MultiChoice;
    public static FieldType GridChoice;
    public static FieldType Calculated;
    public static FieldType File;
    public static FieldType Attachments;
    public static FieldType User;
    public static FieldType Recurrence;
    public static FieldType CrossProjectLink;
    public static FieldType ModStat;
    public static FieldType Error;
    public static FieldType ContentTypeId;
    public static FieldType PageSeparator;
    public static FieldType ThreadIndex;
    public static FieldType WorkflowStatus;
    public static FieldType AllDayEvent;
    public static FieldType WorkflowEventType;
    public static FieldType Geolocation;
    public static FieldType OutcomeChoice;
    public static FieldType Location;
    public static FieldType Thumbnail;
    public static FieldType MaxItems;
}
[ScriptTypeAttribute("SP.FieldUrl")]
public class Microsoft.SharePoint.Client.FieldUrl : Field {
    [RemoteAttribute]
public UrlFieldFormatType DisplayFormat { get; public set; }
    [EditorBrowsableAttribute("1")]
public FieldUrl(ClientRuntimeContext context, ObjectPath objectPath);
    public UrlFieldFormatType get_DisplayFormat();
    public void set_DisplayFormat(UrlFieldFormatType value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldUrlPropertyNames : object {
    public static string DisplayFormat;
}
[ScriptTypeAttribute("SP.FieldUrlValue")]
public class Microsoft.SharePoint.Client.FieldUrlValue : ClientValueObject {
    private string m_description;
    private string m_url;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public string get_Url();
    public void set_Url(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FieldUser")]
public class Microsoft.SharePoint.Client.FieldUser : FieldLookup {
    [RemoteAttribute]
public bool AllowDisplay { get; public set; }
    [RemoteAttribute]
public bool Presence { get; public set; }
    [RemoteAttribute]
public int SelectionGroup { get; public set; }
    [RemoteAttribute]
public FieldUserSelectionMode SelectionMode { get; public set; }
    [RemoteAttribute]
public string UserDisplayOptions { get; public set; }
    [EditorBrowsableAttribute("1")]
public FieldUser(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_AllowDisplay();
    public void set_AllowDisplay(bool value);
    public bool get_Presence();
    public void set_Presence(bool value);
    public int get_SelectionGroup();
    public void set_SelectionGroup(int value);
    public FieldUserSelectionMode get_SelectionMode();
    public void set_SelectionMode(FieldUserSelectionMode value);
    public string get_UserDisplayOptions();
    public void set_UserDisplayOptions(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FieldUserPropertyNames : object {
    public static string AllowDisplay;
    public static string Presence;
    public static string SelectionGroup;
    public static string SelectionMode;
    public static string UserDisplayOptions;
}
public enum Microsoft.SharePoint.Client.FieldUserSelectionMode : Enum {
    public int value__;
    public static FieldUserSelectionMode PeopleOnly;
    public static FieldUserSelectionMode PeopleAndGroups;
    public static FieldUserSelectionMode GroupsOnly;
}
[ScriptTypeAttribute("SP.FieldUserValue")]
public class Microsoft.SharePoint.Client.FieldUserValue : FieldLookupValue {
    private string m_email;
    [RemoteAttribute]
public string Email { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public static FieldUserValue FromUser(string userName);
    public string get_Email();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FieldValuesWithUrl")]
public class Microsoft.SharePoint.Client.FieldValuesWithUrl : ClientValueObject {
    private IEnumerable`1<CAFieldValue> m_fieldValues;
    private string m_serverRedirectedEmbedUrl;
    [RemoteAttribute]
public IEnumerable`1<CAFieldValue> FieldValues { get; public set; }
    [RemoteAttribute]
public string ServerRedirectedEmbedUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IEnumerable`1<CAFieldValue> get_FieldValues();
    public void set_FieldValues(IEnumerable`1<CAFieldValue> value);
    public string get_ServerRedirectedEmbedUrl();
    public void set_ServerRedirectedEmbedUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.File")]
public class Microsoft.SharePoint.Client.File : ClientObject {
    private static int UploadBufferSize;
    [RemoteAttribute]
public User Author { get; }
    [RemoteAttribute]
public User CheckedOutByUser { get; }
    [RemoteAttribute]
public string CheckInComment { get; }
    [RemoteAttribute]
public CheckOutType CheckOutType { get; }
    [RemoteAttribute]
public ListItemComplianceInfo ComplianceInfo { get; }
    [RemoteAttribute]
public string ContentTag { get; }
    [RemoteAttribute]
public CustomizedPageStatus CustomizedPageStatus { get; }
    [RemoteAttribute]
public Guid ListId { get; }
    [RemoteAttribute]
public EffectiveInformationRightsManagementSettings EffectiveInformationRightsManagementSettings { get; }
    [RemoteAttribute]
public string ETag { get; }
    [RemoteAttribute]
public bool Exists { get; }
    [RemoteAttribute]
public bool ExistsAllowThrowForPolicyFailures { get; }
    [RemoteAttribute]
public bool ExistsWithException { get; }
    [RemoteAttribute]
public DateTime ExpirationDate { get; public set; }
    [RemoteAttribute]
public bool HasAlternateContentStreams { get; }
    [RemoteAttribute]
public InformationRightsManagementFileSettings InformationRightsManagementSettings { get; }
    [RemoteAttribute]
public bool IrmEnabled { get; public set; }
    [RemoteAttribute]
public long Length { get; }
    [RemoteAttribute]
public FileLevel Level { get; }
    [RemoteAttribute]
public string LinkingUri { get; }
    [RemoteAttribute]
public string LinkingUrl { get; }
    [RemoteAttribute]
public ListItem ListItemAllFields { get; }
    [RemoteAttribute]
public User LockedByUser { get; }
    [RemoteAttribute]
public int MajorVersion { get; }
    [RemoteAttribute]
public int MinorVersion { get; }
    [RemoteAttribute]
public User ModifiedBy { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public ListPageRenderType PageRenderType { get; }
    [RemoteAttribute]
public PropertyValues Properties { get; }
    [RemoteAttribute]
public string ServerRedirectedUrl { get; }
    [RemoteAttribute]
public ResourcePath ServerRelativePath { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [RemoteAttribute]
public Guid SiteId { get; }
    [RemoteAttribute]
public bool SuppressExpirationNotification { get; public set; }
    [RemoteAttribute]
public DateTime TimeCreated { get; }
    [RemoteAttribute]
public DateTime TimeLastModified { get; }
    [RemoteAttribute]
public string Title { get; }
    [RemoteAttribute]
public int UIVersion { get; }
    [RemoteAttribute]
public string UIVersionLabel { get; }
    [RemoteAttribute]
public Guid UniqueId { get; public set; }
    [RemoteAttribute]
public FileVersionEventCollection VersionEvents { get; }
    [RemoteAttribute]
public FileVersionCollection VersionExpirationReport { get; }
    [RemoteAttribute]
public FileVersionCollection Versions { get; }
    [RemoteAttribute]
public string VroomDriveID { get; }
    [RemoteAttribute]
public string VroomItemID { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public File(ClientRuntimeContext context, ObjectPath objectPath);
    internal void InitFromCreationInformation(FileCreationInformation creation);
    private void CheckScope(PersonalizationScope scope);
    private static string MakeFullUrl(ClientContext context, string serverRelativeUrl);
    public static FileInformation OpenBinaryDirect(ClientContext context, string serverRelativeUrl);
    public static void SaveBinaryDirect(ClientContext context, string serverRelativeUrl, Stream stream, bool overwriteIfExists);
    public static void SaveBinaryDirect(ClientContext context, string serverRelativeUrl, Stream stream, string etag);
    private static void SaveBinary(ClientContext context, string serverRelativeUrl, Stream stream, string etag, bool overwriteIfExists, SaveBinaryCheckMode checkMode);
    public User get_Author();
    public User get_CheckedOutByUser();
    public string get_CheckInComment();
    public CheckOutType get_CheckOutType();
    public ListItemComplianceInfo get_ComplianceInfo();
    public string get_ContentTag();
    public CustomizedPageStatus get_CustomizedPageStatus();
    public Guid get_ListId();
    public EffectiveInformationRightsManagementSettings get_EffectiveInformationRightsManagementSettings();
    public string get_ETag();
    public bool get_Exists();
    public bool get_ExistsAllowThrowForPolicyFailures();
    public bool get_ExistsWithException();
    public DateTime get_ExpirationDate();
    public void set_ExpirationDate(DateTime value);
    public bool get_HasAlternateContentStreams();
    public InformationRightsManagementFileSettings get_InformationRightsManagementSettings();
    public bool get_IrmEnabled();
    public void set_IrmEnabled(bool value);
    public long get_Length();
    public FileLevel get_Level();
    public string get_LinkingUri();
    public string get_LinkingUrl();
    public ListItem get_ListItemAllFields();
    public User get_LockedByUser();
    public int get_MajorVersion();
    public int get_MinorVersion();
    public User get_ModifiedBy();
    public string get_Name();
    public ListPageRenderType get_PageRenderType();
    public PropertyValues get_Properties();
    public string get_ServerRedirectedUrl();
    public ResourcePath get_ServerRelativePath();
    public string get_ServerRelativeUrl();
    public Guid get_SiteId();
    public bool get_SuppressExpirationNotification();
    public void set_SuppressExpirationNotification(bool value);
    public DateTime get_TimeCreated();
    public DateTime get_TimeLastModified();
    public string get_Title();
    public int get_UIVersion();
    public string get_UIVersionLabel();
    public Guid get_UniqueId();
    public void set_UniqueId(Guid value);
    public FileVersionEventCollection get_VersionEvents();
    public FileVersionCollection get_VersionExpirationReport();
    public FileVersionCollection get_Versions();
    public string get_VroomDriveID();
    public string get_VroomItemID();
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void SetMediaServiceMetadata(MediaServiceUpdateParameters parameters);
    [RemoteAttribute]
public ClientResult`1<MediaServiceUpdateParameters> GetMediaServiceMetadata();
    [RemoteAttribute]
public ClientResult`1<bool> ChangeContentStorageSchema(string desiredSchema);
    [RemoteAttribute]
public ClientResult`1<bool> AddFileScannerWorkItem(string dispatchType, string jobType, string jobSubType);
    [RemoteAttribute]
public void SetExpirationDate(DateTime expirationDate);
    [RemoteAttribute]
public ClientResult`1<long> StartUpload(Guid uploadId, Stream stream);
    [RemoteAttribute]
public File StartUploadFile(Guid uploadId, Stream stream);
    [RemoteAttribute]
public ClientResult`1<long> ContinueUpload(Guid uploadId, long fileOffset, Stream stream);
    [RemoteAttribute]
public File FinishUpload(Guid uploadId, long fileOffset, Stream stream);
    [RemoteAttribute]
public File FinishUploadWithChecksum(Guid uploadId, long fileOffset, string checksum, Stream stream, Guid sandboxId);
    [RemoteAttribute]
public File Upload(Guid uploadId, Stream stream);
    [RemoteAttribute]
public File UploadWithChecksum(Guid uploadId, Byte[] checksum, Stream stream);
    [RemoteAttribute]
public void CancelUpload(Guid uploadId);
    [RemoteAttribute]
public UploadStatus GetUploadStatus(Guid uploadId);
    [RemoteAttribute]
public LimitedWebPartManager GetLimitedWebPartManager(PersonalizationScope scope);
    [RemoteAttribute]
public ClientResult`1<string> GetPreAuthorizedAccessUrl(int expirationHours);
    [RemoteAttribute]
public ClientResult`1<string> GetPreAuthorizedAccessUrl2(int expirationHours, int expirationMinuites);
    [RemoteAttribute]
public ClientResult`1<string> GetImagePreviewUrl(int width, int height, string clientType);
    [RemoteAttribute]
public ClientResult`1<string> GetImagePreviewUri(int width, int height, string clientType);
    [RemoteAttribute]
public void SaveBinary(FileSaveBinaryInformation parameters);
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public void DeleteWithParameters(FileDeleteParameters parameters);
    [RemoteAttribute]
public ClientResult`1<Guid> Recycle();
    [RemoteAttribute]
public ClientResult`1<Guid> RecycleWithETag(string etagMatch);
    [RemoteAttribute]
public ClientResult`1<Guid> RecycleWithParameters(FileDeleteParameters parameters);
    [RemoteAttribute]
public ClientResult`1<Stream> ExecuteCobaltRequest(Stream inputStream);
    [RemoteAttribute]
public void CheckOut();
    [RemoteAttribute]
public void UndoCheckOut();
    [RemoteAttribute]
public void CheckIn(string comment, CheckinType checkInType);
    [RemoteAttribute]
public void Publish(string comment);
    [RemoteAttribute]
public void UnPublish(string comment);
    [RemoteAttribute]
public void Approve(string comment);
    [RemoteAttribute]
public void Deny(string comment);
    [RemoteAttribute]
public static ClientResult`1<int> GetContentVerFromTag(ClientRuntimeContext context, string contentTag);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public void MoveTo(string newUrl, MoveOperations flags);
    [RemoteAttribute]
public void MoveToUsingPath(ResourcePath newPath, MoveOperations moveOperations);
    [RemoteAttribute]
public void CopyTo(string strNewUrl, bool bOverWrite);
    [RemoteAttribute]
public void CopyToUsingPath(ResourcePath newPath, bool bOverWrite);
    [RemoteAttribute]
public ClientResult`1<Stream> OpenBinaryStream();
    [RemoteAttribute]
public ClientResult`1<Stream> OpenBinaryStreamWithOptions(SPOpenBinaryOptions openOptions);
    [RemoteAttribute]
public ClientResult`1<string> GetWOPIFrameUrl(SPWOPIFrameAction action);
    [RemoteAttribute]
public ClientResult`1<bool> CheckAccessAndPostViewAuditEvent();
}
public enum Microsoft.SharePoint.Client.FileArchiveStatus : Enum {
    public byte value__;
    public static FileArchiveStatus None;
    public static FileArchiveStatus Active;
    public static FileArchiveStatus Archiving;
    public static FileArchiveStatus Hydrating;
    public static FileArchiveStatus SingleSidedArchive;
}
[ScriptTypeAttribute("SP.FileCollection")]
public class Microsoft.SharePoint.Client.FileCollection : ClientObjectCollection`1<File> {
    [EditorBrowsableAttribute("1")]
public FileCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public File GetByUrl(string url);
    [RemoteAttribute]
public File Add(FileCreationInformation parameters);
    [RemoteAttribute]
public File AddTemplateFile(string urlOfFile, TemplateFileType templateFileType);
    [RemoteAttribute]
public File AddUsingPath(ResourcePath path, FileCollectionAddParameters parameters, Stream contentStream);
}
[ScriptTypeAttribute("SP.FileCollectionAddParameters")]
public class Microsoft.SharePoint.Client.FileCollectionAddParameters : ClientValueObject {
    private bool m_autoCheckoutOnInvalidData;
    private bool m_ensureUniqueFileName;
    private bool m_overwrite;
    private string m_xorHash;
    [RemoteAttribute]
public bool AutoCheckoutOnInvalidData { get; public set; }
    [RemoteAttribute]
public bool EnsureUniqueFileName { get; public set; }
    [RemoteAttribute]
public bool Overwrite { get; public set; }
    [RemoteAttribute]
public string XorHash { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_AutoCheckoutOnInvalidData();
    public void set_AutoCheckoutOnInvalidData(bool value);
    public bool get_EnsureUniqueFileName();
    public void set_EnsureUniqueFileName(bool value);
    public bool get_Overwrite();
    public void set_Overwrite(bool value);
    public string get_XorHash();
    public void set_XorHash(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FileCreationInformation")]
public class Microsoft.SharePoint.Client.FileCreationInformation : ClientValueObject {
    private Byte[] m_content;
    private Stream m_contentStream;
    private bool m_overwrite;
    private string m_url;
    private string m_xorHash;
    [RemoteAttribute]
public Byte[] Content { get; public set; }
    [RemoteAttribute]
public Stream ContentStream { get; public set; }
    [RemoteAttribute]
public bool Overwrite { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [RemoteAttribute]
public string XorHash { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Byte[] get_Content();
    public void set_Content(Byte[] value);
    public Stream get_ContentStream();
    public void set_ContentStream(Stream value);
    public bool get_Overwrite();
    public void set_Overwrite(bool value);
    public string get_Url();
    public void set_Url(string value);
    public string get_XorHash();
    public void set_XorHash(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FileDeleteParameters")]
public class Microsoft.SharePoint.Client.FileDeleteParameters : ClientValueObject {
    private bool m_bypassSharedLock;
    private string m_eTagMatch;
    [RemoteAttribute]
public bool BypassSharedLock { get; public set; }
    [RemoteAttribute]
public string ETagMatch { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_BypassSharedLock();
    public void set_BypassSharedLock(bool value);
    public string get_ETagMatch();
    public void set_ETagMatch(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public class Microsoft.SharePoint.Client.FileInformation : object {
    private Stream m_stream;
    private string m_etag;
    public Stream Stream { get; }
    public string ETag { get; }
    internal FileInformation(Stream stream, string etag);
    public Stream get_Stream();
    public string get_ETag();
    public sealed virtual void Dispose();
}
public enum Microsoft.SharePoint.Client.FileLevel : Enum {
    public byte value__;
    public static FileLevel Published;
    public static FileLevel Draft;
    public static FileLevel Checkout;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FileObjectPropertyNames : object {
    public static string Author;
    public static string CheckedOutByUser;
    public static string EffectiveInformationRightsManagementSettings;
    public static string InformationRightsManagementSettings;
    public static string ListItemAllFields;
    public static string LockedByUser;
    public static string ModifiedBy;
    public static string Properties;
    public static string VersionEvents;
    public static string VersionExpirationReport;
    public static string Versions;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FilePropertyNames : object {
    public static string CheckInComment;
    public static string CheckOutType;
    public static string ComplianceInfo;
    public static string ContentTag;
    public static string CustomizedPageStatus;
    public static string ListId;
    public static string ETag;
    public static string Exists;
    public static string ExistsAllowThrowForPolicyFailures;
    public static string ExistsWithException;
    public static string ExpirationDate;
    public static string HasAlternateContentStreams;
    public static string IrmEnabled;
    public static string Length;
    public static string Level;
    public static string LinkingUri;
    public static string LinkingUrl;
    public static string MajorVersion;
    public static string MinorVersion;
    public static string Name;
    public static string PageRenderType;
    public static string ServerRedirectedUrl;
    public static string ServerRelativePath;
    public static string ServerRelativeUrl;
    public static string SiteId;
    public static string SuppressExpirationNotification;
    public static string TimeCreated;
    public static string TimeLastModified;
    public static string Title;
    public static string UIVersion;
    public static string UIVersionLabel;
    public static string UniqueId;
    public static string VroomDriveID;
    public static string VroomItemID;
    public static string WebId;
}
[ScriptTypeAttribute("SP.FileSaveBinaryInformation")]
public class Microsoft.SharePoint.Client.FileSaveBinaryInformation : ClientValueObject {
    private bool m_checkRequiredFields;
    private Byte[] m_content;
    private Stream m_contentStream;
    private string m_eTag;
    private IDictionary`2<string, object> m_fieldValues;
    [RemoteAttribute]
public bool CheckRequiredFields { get; public set; }
    [RemoteAttribute]
public Byte[] Content { get; public set; }
    [RemoteAttribute]
public Stream ContentStream { get; public set; }
    [RemoteAttribute]
public string ETag { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, object> FieldValues { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_CheckRequiredFields();
    public void set_CheckRequiredFields(bool value);
    public Byte[] get_Content();
    public void set_Content(Byte[] value);
    public Stream get_ContentStream();
    public void set_ContentStream(Stream value);
    public string get_ETag();
    public void set_ETag(string value);
    public IDictionary`2<string, object> get_FieldValues();
    public void set_FieldValues(IDictionary`2<string, object> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.FileSystemObjectType : Enum {
    public int value__;
    public static FileSystemObjectType Invalid;
    public static FileSystemObjectType File;
    public static FileSystemObjectType Folder;
    public static FileSystemObjectType Web;
}
[ScriptTypeAttribute("SP.FileVersion")]
public class Microsoft.SharePoint.Client.FileVersion : ClientObject {
    [RemoteAttribute]
public string CheckInComment { get; }
    [RemoteAttribute]
public DateTime Created { get; }
    [RemoteAttribute]
public User CreatedBy { get; }
    [RemoteAttribute]
public string ExpirationDate { get; }
    [RemoteAttribute]
public int ID { get; }
    [RemoteAttribute]
public bool IsCurrentVersion { get; }
    [RemoteAttribute]
public long Length { get; }
    [RemoteAttribute]
public int Size { get; }
    [RemoteAttribute]
public string SnapshotDate { get; }
    [RemoteAttribute]
public string Url { get; }
    [RemoteAttribute]
public string VersionLabel { get; }
    [EditorBrowsableAttribute("1")]
public FileVersion(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_CheckInComment();
    public DateTime get_Created();
    public User get_CreatedBy();
    public string get_ExpirationDate();
    public int get_ID();
    public bool get_IsCurrentVersion();
    public long get_Length();
    public int get_Size();
    public string get_SnapshotDate();
    public string get_Url();
    public string get_VersionLabel();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ClientResult`1<Stream> OpenBinaryStream();
    [RemoteAttribute]
public ClientResult`1<Stream> OpenBinaryStreamWithOptions(SPOpenBinaryOptions openOptions);
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public void SetExpirationDate(DateTime expirationDate);
}
public enum Microsoft.SharePoint.Client.FileVersionBatchDeleteMode : Enum {
    public int value__;
    public static FileVersionBatchDeleteMode DeleteOlderThanDays;
    public static FileVersionBatchDeleteMode CountLimits;
    public static FileVersionBatchDeleteMode AutomaticTrim;
}
[ScriptTypeAttribute("SP.FileVersionBatchDeleteParameters")]
public class Microsoft.SharePoint.Client.FileVersionBatchDeleteParameters : ClientValueObject {
    private FileVersionBatchDeleteMode m_batchDeleteMode;
    private int m_deleteOlderThanDays;
    private int m_majorVersionLimit;
    private int m_majorWithMinorVersionsLimit;
    [RemoteAttribute]
public FileVersionBatchDeleteMode BatchDeleteMode { get; public set; }
    [RemoteAttribute]
public int DeleteOlderThanDays { get; public set; }
    [RemoteAttribute]
public int MajorVersionLimit { get; public set; }
    [RemoteAttribute]
public int MajorWithMinorVersionsLimit { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public FileVersionBatchDeleteMode get_BatchDeleteMode();
    public void set_BatchDeleteMode(FileVersionBatchDeleteMode value);
    public int get_DeleteOlderThanDays();
    public void set_DeleteOlderThanDays(int value);
    public int get_MajorVersionLimit();
    public void set_MajorVersionLimit(int value);
    public int get_MajorWithMinorVersionsLimit();
    public void set_MajorWithMinorVersionsLimit(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FileVersionCollection")]
public class Microsoft.SharePoint.Client.FileVersionCollection : ClientObjectCollection`1<FileVersion> {
    [EditorBrowsableAttribute("1")]
public FileVersionCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public FileVersion GetById(int versionid);
    [RemoteAttribute]
public void DeleteByID(int vid);
    [RemoteAttribute]
public void RecycleByID(int vid);
    [RemoteAttribute]
public void DeleteByLabel(string versionlabel);
    [RemoteAttribute]
public void RecycleByLabel(string versionlabel);
    [RemoteAttribute]
public void DeleteAll();
    [RemoteAttribute]
public void RestoreByLabel(string versionlabel);
}
[ScriptTypeAttribute("SP.FileVersionEvent")]
public class Microsoft.SharePoint.Client.FileVersionEvent : ClientObject {
    [RemoteAttribute]
public string Editor { get; }
    [RemoteAttribute]
public string EditorEmail { get; }
    [RemoteAttribute]
public SharedWithUser SharedByUser { get; }
    [RemoteAttribute]
public SharedWithUserCollection SharedWithUsers { get; }
    [RemoteAttribute]
public DateTime Time { get; }
    [RemoteAttribute]
public FileVersionEventType EventType { get; }
    [EditorBrowsableAttribute("1")]
public FileVersionEvent(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Editor();
    public string get_EditorEmail();
    public SharedWithUser get_SharedByUser();
    public SharedWithUserCollection get_SharedWithUsers();
    public DateTime get_Time();
    public FileVersionEventType get_EventType();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FileVersionEventCollection")]
public class Microsoft.SharePoint.Client.FileVersionEventCollection : ClientObjectCollection`1<FileVersionEvent> {
    [EditorBrowsableAttribute("1")]
public FileVersionEventCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FileVersionEventPropertyNames : object {
    public static string Editor;
    public static string EditorEmail;
    public static string SharedByUser;
    public static string SharedWithUsers;
    public static string Time;
    public static string EventType;
}
public enum Microsoft.SharePoint.Client.FileVersionEventType : Enum {
    public short value__;
    public static FileVersionEventType Share;
    public static FileVersionEventType Rename;
    public static FileVersionEventType Restore;
    public static FileVersionEventType MaxServerType;
    public static FileVersionEventType FromClient;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FileVersionObjectPropertyNames : object {
    public static string CreatedBy;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FileVersionPropertyNames : object {
    public static string CheckInComment;
    public static string Created;
    public static string ExpirationDate;
    public static string ID;
    public static string IsCurrentVersion;
    public static string Length;
    public static string Size;
    public static string SnapshotDate;
    public static string Url;
    public static string VersionLabel;
}
[ScriptTypeAttribute("SP.FlowSynchronizationResult")]
public class Microsoft.SharePoint.Client.FlowSynchronizationResult : ClientObject {
    [RemoteAttribute]
public string SynchronizationData { get; }
    [RemoteAttribute]
public FlowSynchronizationStatus SynchronizationStatus { get; }
    [EditorBrowsableAttribute("1")]
public FlowSynchronizationResult(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_SynchronizationData();
    public FlowSynchronizationStatus get_SynchronizationStatus();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FlowSynchronizationResultPropertyNames : object {
    public static string SynchronizationData;
    public static string SynchronizationStatus;
}
public enum Microsoft.SharePoint.Client.FlowSynchronizationStatus : Enum {
    public int value__;
    public static FlowSynchronizationStatus Success;
    public static FlowSynchronizationStatus NotFound;
    public static FlowSynchronizationStatus Forbidden;
    public static FlowSynchronizationStatus TimeOut;
    public static FlowSynchronizationStatus UnexpectedError;
    public static FlowSynchronizationStatus BadRequest;
    public static FlowSynchronizationStatus Suspended;
    public static FlowSynchronizationStatus Running;
}
[ScriptTypeAttribute("SP.Folder")]
public class Microsoft.SharePoint.Client.Folder : ClientObject {
    [RemoteAttribute]
public IList`1<ContentTypeId> ContentTypeOrder { get; }
    [RemoteAttribute]
public bool Exists { get; }
    [RemoteAttribute]
public bool ExistsAllowThrowForPolicyFailures { get; }
    [RemoteAttribute]
public bool ExistsWithException { get; }
    [RemoteAttribute]
public FileCollection Files { get; }
    [RemoteAttribute]
public bool IsWOPIEnabled { get; }
    [RemoteAttribute]
public ListItem ListItemAllFields { get; }
    [RemoteAttribute]
public int ItemCount { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public Folder ParentFolder { get; }
    [RemoteAttribute]
public string ProgID { get; }
    [RemoteAttribute]
public PropertyValues Properties { get; }
    [RemoteAttribute]
public ResourcePath ServerRelativePath { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [RemoteAttribute]
public StorageMetrics StorageMetrics { get; }
    [RemoteAttribute]
public FolderCollection Folders { get; }
    [RemoteAttribute]
public DateTime TimeCreated { get; }
    [RemoteAttribute]
public DateTime TimeLastModified { get; }
    [RemoteAttribute]
public IList`1<ContentTypeId> UniqueContentTypeOrder { get; public set; }
    [RemoteAttribute]
public Guid UniqueId { get; }
    [RemoteAttribute]
public string WelcomePage { get; public set; }
    [EditorBrowsableAttribute("1")]
public Folder(ClientRuntimeContext context, ObjectPath objectPath);
    public IList`1<ContentTypeId> get_ContentTypeOrder();
    public bool get_Exists();
    public bool get_ExistsAllowThrowForPolicyFailures();
    public bool get_ExistsWithException();
    public FileCollection get_Files();
    public bool get_IsWOPIEnabled();
    public ListItem get_ListItemAllFields();
    public int get_ItemCount();
    public string get_Name();
    public Folder get_ParentFolder();
    public string get_ProgID();
    public PropertyValues get_Properties();
    public ResourcePath get_ServerRelativePath();
    public string get_ServerRelativeUrl();
    public StorageMetrics get_StorageMetrics();
    public FolderCollection get_Folders();
    public DateTime get_TimeCreated();
    public DateTime get_TimeLastModified();
    public IList`1<ContentTypeId> get_UniqueContentTypeOrder();
    public void set_UniqueContentTypeOrder(IList`1<ContentTypeId> value);
    public Guid get_UniqueId();
    public string get_WelcomePage();
    public void set_WelcomePage(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public void DeleteWithParameters(FolderDeleteParameters parameters);
    [RemoteAttribute]
public ClientResult`1<Guid> Recycle();
    [RemoteAttribute]
public ClientResult`1<Guid> RecycleWithParameters(FolderDeleteParameters parameters);
    [RemoteAttribute]
public ClientResult`1<Guid> StartDelete();
    [RemoteAttribute]
public ChangeCollection GetListItemChanges(ChangeQuery query);
    [RemoteAttribute]
public ChangeCollection GetChanges(ChangeQuery query);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public void MoveTo(string newUrl);
    [RemoteAttribute]
public void MoveToUsingPath(ResourcePath newPath);
    [RemoteAttribute]
public void AddSubFolder(string leafName, ListItemUpdateParameters updateParams);
    [RemoteAttribute]
public void AddSubFolderUsingPath(ResourcePath leafPath);
}
[ScriptTypeAttribute("SP.FolderCollection")]
public class Microsoft.SharePoint.Client.FolderCollection : ClientObjectCollection`1<Folder> {
    [EditorBrowsableAttribute("1")]
public FolderCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Folder GetByUrl(string url);
    [RemoteAttribute]
public Folder GetByPath(ResourcePath path);
    [RemoteAttribute]
public Folder Add(string url);
    [RemoteAttribute]
public Folder AddUsingPath(ResourcePath path, FolderCollectionAddParameters parameters);
    [RemoteAttribute]
public Folder AddWithOverwrite(string url, bool overwrite);
}
[ScriptTypeAttribute("SP.FolderCollectionAddParameters")]
public class Microsoft.SharePoint.Client.FolderCollectionAddParameters : ClientValueObject {
    private bool m_ensureUniqueFileName;
    private bool m_overwrite;
    [RemoteAttribute]
public bool EnsureUniqueFileName { get; public set; }
    [RemoteAttribute]
public bool Overwrite { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_EnsureUniqueFileName();
    public void set_EnsureUniqueFileName(bool value);
    public bool get_Overwrite();
    public void set_Overwrite(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FolderColoringInformation")]
public class Microsoft.SharePoint.Client.FolderColoringInformation : ClientValueObject {
    private string m_colorHex;
    private string m_colorTag;
    private string m_emoji;
    [RemoteAttribute]
public string ColorHex { get; public set; }
    [RemoteAttribute]
public string ColorTag { get; public set; }
    [RemoteAttribute]
public string Emoji { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ColorHex();
    public void set_ColorHex(string value);
    public string get_ColorTag();
    public void set_ColorTag(string value);
    public string get_Emoji();
    public void set_Emoji(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FolderDeleteParameters")]
public class Microsoft.SharePoint.Client.FolderDeleteParameters : ClientValueObject {
    private bool m_bypassSharedLock;
    private bool m_deleteIfEmpty;
    private string m_eTagMatch;
    [RemoteAttribute]
public bool BypassSharedLock { get; public set; }
    [RemoteAttribute]
public bool DeleteIfEmpty { get; public set; }
    [RemoteAttribute]
public string ETagMatch { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_BypassSharedLock();
    public void set_BypassSharedLock(bool value);
    public bool get_DeleteIfEmpty();
    public void set_DeleteIfEmpty(bool value);
    public string get_ETagMatch();
    public void set_ETagMatch(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FolderObjectPropertyNames : object {
    public static string Files;
    public static string ListItemAllFields;
    public static string ParentFolder;
    public static string Properties;
    public static string StorageMetrics;
    public static string Folders;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FolderPropertyNames : object {
    public static string ContentTypeOrder;
    public static string Exists;
    public static string ExistsAllowThrowForPolicyFailures;
    public static string ExistsWithException;
    public static string IsWOPIEnabled;
    public static string ItemCount;
    public static string Name;
    public static string ProgID;
    public static string ServerRelativePath;
    public static string ServerRelativeUrl;
    public static string TimeCreated;
    public static string TimeLastModified;
    public static string UniqueContentTypeOrder;
    public static string UniqueId;
    public static string WelcomePage;
}
[ScriptTypeAttribute("SP.FontPackageCreationParameters")]
public class Microsoft.SharePoint.Client.FontPackageCreationParameters : ClientValueObject {
    private bool m_isHidden;
    private string m_packageJson;
    private string m_title;
    [RemoteAttribute]
public bool IsHidden { get; public set; }
    [RemoteAttribute]
public string PackageJson { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_IsHidden();
    public void set_IsHidden(bool value);
    public string get_PackageJson();
    public void set_PackageJson(string value);
    public string get_Title();
    public void set_Title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.FontPackageStore : Enum {
    public int value__;
    public static FontPackageStore Tenant;
    public static FontPackageStore OutOfBox;
    public static FontPackageStore Site;
}
public enum Microsoft.SharePoint.Client.FooterLayoutType : Enum {
    public int value__;
    public static FooterLayoutType Simple;
    public static FooterLayoutType Extended;
    public static FooterLayoutType Stacked;
}
public enum Microsoft.SharePoint.Client.FooterVariantThemeType : Enum {
    public int value__;
    public static FooterVariantThemeType Strong;
    public static FooterVariantThemeType Neutral;
    public static FooterVariantThemeType Soft;
    public static FooterVariantThemeType None;
}
[ScriptTypeAttribute("SP.Form")]
public class Microsoft.SharePoint.Client.Form : ClientObject {
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public ResourcePath ResourcePath { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [RemoteAttribute]
public PageType FormType { get; }
    [EditorBrowsableAttribute("1")]
public Form(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_Id();
    public ResourcePath get_ResourcePath();
    public string get_ServerRelativeUrl();
    public PageType get_FormType();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.FormCollection")]
public class Microsoft.SharePoint.Client.FormCollection : ClientObjectCollection`1<Form> {
    [EditorBrowsableAttribute("1")]
public FormCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Form GetByPageType(PageType formType);
    [RemoteAttribute]
public Form GetById(Guid id);
}
public class Microsoft.SharePoint.Client.FormDigestInfo : object {
    [CompilerGeneratedAttribute]
private string <DigestValue>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Expiration>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <RequestSchemaVersion>k__BackingField;
    public string DigestValue { get; internal set; }
    public DateTime Expiration { get; internal set; }
    internal Version RequestSchemaVersion { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_DigestValue();
    [CompilerGeneratedAttribute]
internal void set_DigestValue(string value);
    [CompilerGeneratedAttribute]
public DateTime get_Expiration();
    [CompilerGeneratedAttribute]
internal void set_Expiration(DateTime value);
    [CompilerGeneratedAttribute]
internal Version get_RequestSchemaVersion();
    [CompilerGeneratedAttribute]
internal void set_RequestSchemaVersion(Version value);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.FormPropertyNames : object {
    public static string Id;
    public static string ResourcePath;
    public static string ServerRelativeUrl;
    public static string FormType;
}
[ScriptTypeAttribute("SP.GetListItemVersionsParameters")]
public class Microsoft.SharePoint.Client.GetListItemVersionsParameters : ClientValueObject {
    private ListItemVersionCollectionPosition m_listItemVersionCollectionPosition;
    private UInt32 m_rowLimit;
    private bool m_sortDescending;
    [RemoteAttribute]
public ListItemVersionCollectionPosition ListItemVersionCollectionPosition { get; public set; }
    [RemoteAttribute]
public UInt32 RowLimit { get; public set; }
    [RemoteAttribute]
public bool SortDescending { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public ListItemVersionCollectionPosition get_ListItemVersionCollectionPosition();
    public void set_ListItemVersionCollectionPosition(ListItemVersionCollectionPosition value);
    public UInt32 get_RowLimit();
    public void set_RowLimit(UInt32 value);
    public bool get_SortDescending();
    public void set_SortDescending(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.GetListsParameters")]
public class Microsoft.SharePoint.Client.GetListsParameters : ClientValueObject {
    private ListCollectionPosition m_listCollectionPosition;
    private int m_rowLimit;
    [RemoteAttribute]
public ListCollectionPosition ListCollectionPosition { get; public set; }
    [RemoteAttribute]
public int RowLimit { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public ListCollectionPosition get_ListCollectionPosition();
    public void set_ListCollectionPosition(ListCollectionPosition value);
    public int get_RowLimit();
    public void set_RowLimit(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.GridInitInfoType")]
public class Microsoft.SharePoint.Client.GridInitInfoType : ClientValueObject {
    private string m_controllerId;
    private string m_gridSerializer;
    private string m_jsInitObj;
    [RemoteAttribute]
public string ControllerId { get; public set; }
    [RemoteAttribute]
public string GridSerializer { get; public set; }
    [RemoteAttribute]
public string JsInitObj { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ControllerId();
    public void set_ControllerId(string value);
    public string get_GridSerializer();
    public void set_GridSerializer(string value);
    public string get_JsInitObj();
    public void set_JsInitObj(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Group")]
public class Microsoft.SharePoint.Client.Group : Principal {
    [RemoteAttribute]
public bool AllowMembersEditMembership { get; public set; }
    [RemoteAttribute]
public bool AllowRequestToJoinLeave { get; public set; }
    [RemoteAttribute]
public bool AutoAcceptRequestToJoinLeave { get; public set; }
    [RemoteAttribute]
public bool CanCurrentUserEditMembership { get; }
    [RemoteAttribute]
public bool CanCurrentUserManageGroup { get; }
    [RemoteAttribute]
public bool CanCurrentUserViewMembership { get; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public bool OnlyAllowMembersViewMembership { get; public set; }
    [RemoteAttribute]
public Principal Owner { get; public set; }
    [RemoteAttribute]
public string OwnerTitle { get; }
    [RemoteAttribute]
public string RequestToJoinLeaveEmailSetting { get; public set; }
    [RemoteAttribute]
public UserCollection Users { get; }
    [EditorBrowsableAttribute("1")]
public Group(ClientRuntimeContext context, ObjectPath objectPath);
    internal void InitFromCreationInformation(GroupCreationInformation creation);
    public bool get_AllowMembersEditMembership();
    public void set_AllowMembersEditMembership(bool value);
    public bool get_AllowRequestToJoinLeave();
    public void set_AllowRequestToJoinLeave(bool value);
    public bool get_AutoAcceptRequestToJoinLeave();
    public void set_AutoAcceptRequestToJoinLeave(bool value);
    public bool get_CanCurrentUserEditMembership();
    public bool get_CanCurrentUserManageGroup();
    public bool get_CanCurrentUserViewMembership();
    public string get_Description();
    public void set_Description(string value);
    public bool get_OnlyAllowMembersViewMembership();
    public void set_OnlyAllowMembersViewMembership(bool value);
    public Principal get_Owner();
    public void set_Owner(Principal value);
    public string get_OwnerTitle();
    public string get_RequestToJoinLeaveEmailSetting();
    public void set_RequestToJoinLeaveEmailSetting(string value);
    public UserCollection get_Users();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update();
}
[ScriptTypeAttribute("SP.GroupCollection")]
public class Microsoft.SharePoint.Client.GroupCollection : ClientObjectCollection`1<Group> {
    [EditorBrowsableAttribute("1")]
public GroupCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Group GetByName(string name);
    [RemoteAttribute]
public Group GetById(int id);
    [RemoteAttribute]
public Group Add(GroupCreationInformation parameters);
    [RemoteAttribute]
public void RemoveByLoginName(string loginName);
    [RemoteAttribute]
public void RemoveById(int id);
    [RemoteAttribute]
public void Remove(Group group);
}
[ScriptTypeAttribute("SP.GroupCreationInformation")]
public class Microsoft.SharePoint.Client.GroupCreationInformation : ClientValueObject {
    private string m_description;
    private string m_title;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public string get_Title();
    public void set_Title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.GroupObjectPropertyNames : object {
    public static string Owner;
    public static string Users;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.GroupPropertyNames : object {
    public static string AllowMembersEditMembership;
    public static string AllowRequestToJoinLeave;
    public static string AutoAcceptRequestToJoinLeave;
    public static string CanCurrentUserEditMembership;
    public static string CanCurrentUserManageGroup;
    public static string CanCurrentUserViewMembership;
    public static string Description;
    public static string OnlyAllowMembersViewMembership;
    public static string OwnerTitle;
    public static string RequestToJoinLeaveEmailSetting;
}
[ScriptTypeAttribute("SP.Hashtag")]
public class Microsoft.SharePoint.Client.Hashtag : ClientValueObject {
    private string m_actor;
    private string m_application;
    private string m_label;
    private DateTime m_timestamp;
    [RemoteAttribute]
public string Actor { get; public set; }
    [RemoteAttribute]
public string Application { get; public set; }
    [RemoteAttribute]
public string Label { get; public set; }
    [RemoteAttribute]
public DateTime Timestamp { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Actor();
    public void set_Actor(string value);
    public string get_Application();
    public void set_Application(string value);
    public string get_Label();
    public void set_Label(string value);
    public DateTime get_Timestamp();
    public void set_Timestamp(DateTime value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.HeaderLayoutType : Enum {
    public int value__;
    public static HeaderLayoutType None;
    public static HeaderLayoutType Standard;
    public static HeaderLayoutType Compact;
    public static HeaderLayoutType Minimal;
    public static HeaderLayoutType Extended;
}
[ScriptTypeAttribute("SP.HomeSiteNavConfiguration")]
public class Microsoft.SharePoint.Client.HomeSiteNavConfiguration : ClientValueObject {
    private bool m_isEnabled;
    private string m_logoHash;
    [RemoteAttribute]
public bool IsEnabled { get; public set; }
    [RemoteAttribute]
public string LogoHash { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_IsEnabled();
    public void set_IsEnabled(bool value);
    public string get_LogoHash();
    public void set_LogoHash(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.HomeSiteReference")]
public class Microsoft.SharePoint.Client.HomeSiteReference : ClientValueObject {
    private IList`1<Guid> m_audiences;
    private TargetedSiteFlags m_siteFlags;
    private Guid m_siteId;
    private Guid m_webId;
    [RemoteAttribute]
public IList`1<Guid> Audiences { get; public set; }
    [RemoteAttribute]
public TargetedSiteFlags SiteFlags { get; public set; }
    [RemoteAttribute]
public Guid SiteId { get; public set; }
    [RemoteAttribute]
public Guid WebId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<Guid> get_Audiences();
    public void set_Audiences(IList`1<Guid> value);
    public TargetedSiteFlags get_SiteFlags();
    public void set_SiteFlags(TargetedSiteFlags value);
    public Guid get_SiteId();
    public void set_SiteId(Guid value);
    public Guid get_WebId();
    public void set_WebId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.HomeSitesDetails")]
public class Microsoft.SharePoint.Client.HomeSitesDetails : ClientValueObject {
    private IList`1<Guid> m_audiences;
    private bool m_isInDraftMode;
    private bool m_isVivaBackendSite;
    private IList`1<Guid> m_matchingAudiences;
    private Guid m_siteId;
    private TargetedLicenseType m_targetedLicenseType;
    private string m_title;
    private string m_url;
    private bool m_vivaConnectionsDefaultStart;
    private Guid m_webId;
    [RemoteAttribute]
public IList`1<Guid> Audiences { get; public set; }
    [RemoteAttribute]
public bool IsInDraftMode { get; public set; }
    [RemoteAttribute]
public bool IsVivaBackendSite { get; public set; }
    [RemoteAttribute]
public IList`1<Guid> MatchingAudiences { get; public set; }
    [RemoteAttribute]
public Guid SiteId { get; public set; }
    [RemoteAttribute]
public TargetedLicenseType TargetedLicenseType { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [RemoteAttribute]
public bool VivaConnectionsDefaultStart { get; public set; }
    [RemoteAttribute]
public Guid WebId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<Guid> get_Audiences();
    public void set_Audiences(IList`1<Guid> value);
    public bool get_IsInDraftMode();
    public void set_IsInDraftMode(bool value);
    public bool get_IsVivaBackendSite();
    public void set_IsVivaBackendSite(bool value);
    public IList`1<Guid> get_MatchingAudiences();
    public void set_MatchingAudiences(IList`1<Guid> value);
    public Guid get_SiteId();
    public void set_SiteId(Guid value);
    public TargetedLicenseType get_TargetedLicenseType();
    public void set_TargetedLicenseType(TargetedLicenseType value);
    public string get_Title();
    public void set_Title(string value);
    public string get_Url();
    public void set_Url(string value);
    public bool get_VivaConnectionsDefaultStart();
    public void set_VivaConnectionsDefaultStart(bool value);
    public Guid get_WebId();
    public void set_WebId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.HTMLFieldSecuritySetting")]
public class Microsoft.SharePoint.Client.HTMLFieldSecuritySetting : ClientValueObject {
    private IList`1<string> m_allowedDomains;
    private short m_allowEmbedding;
    [RemoteAttribute]
public IList`1<string> allowedDomains { get; public set; }
    [RemoteAttribute]
public short allowEmbedding { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<string> get_allowedDomains();
    public void set_allowedDomains(IList`1<string> value);
    public short get_allowEmbedding();
    public void set_allowEmbedding(short value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.HubSiteCreationInformation")]
public class Microsoft.SharePoint.Client.HubSiteCreationInformation : ClientValueObject {
    private string m_description;
    private bool m_enablePermissionsSync;
    private string m_enforcedECTs;
    private int m_enforcedECTsVersion;
    private bool m_hideNameInNavigation;
    private string m_logoUrl;
    private Guid m_parentHubSiteId;
    private int m_permissionsSyncTag;
    private bool m_requiresJoinApproval;
    private Guid m_siteDesignId;
    private Guid m_siteId;
    private string m_siteUrl;
    private string m_targets;
    private Guid m_tenantInstanceId;
    private string m_title;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public bool EnablePermissionsSync { get; public set; }
    [RemoteAttribute]
public string EnforcedECTs { get; public set; }
    [RemoteAttribute]
public int EnforcedECTsVersion { get; public set; }
    [RemoteAttribute]
public bool HideNameInNavigation { get; public set; }
    [RemoteAttribute]
public string LogoUrl { get; public set; }
    [RemoteAttribute]
public Guid ParentHubSiteId { get; public set; }
    [RemoteAttribute]
public int PermissionsSyncTag { get; public set; }
    [RemoteAttribute]
public bool RequiresJoinApproval { get; public set; }
    [RemoteAttribute]
public Guid SiteDesignId { get; public set; }
    [RemoteAttribute]
public Guid SiteId { get; public set; }
    [RemoteAttribute]
public string SiteUrl { get; public set; }
    [RemoteAttribute]
public string Targets { get; public set; }
    [RemoteAttribute]
public Guid TenantInstanceId { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public bool get_EnablePermissionsSync();
    public void set_EnablePermissionsSync(bool value);
    public string get_EnforcedECTs();
    public void set_EnforcedECTs(string value);
    public int get_EnforcedECTsVersion();
    public void set_EnforcedECTsVersion(int value);
    public bool get_HideNameInNavigation();
    public void set_HideNameInNavigation(bool value);
    public string get_LogoUrl();
    public void set_LogoUrl(string value);
    public Guid get_ParentHubSiteId();
    public void set_ParentHubSiteId(Guid value);
    public int get_PermissionsSyncTag();
    public void set_PermissionsSyncTag(int value);
    public bool get_RequiresJoinApproval();
    public void set_RequiresJoinApproval(bool value);
    public Guid get_SiteDesignId();
    public void set_SiteDesignId(Guid value);
    public Guid get_SiteId();
    public void set_SiteId(Guid value);
    public string get_SiteUrl();
    public void set_SiteUrl(string value);
    public string get_Targets();
    public void set_Targets(string value);
    public Guid get_TenantInstanceId();
    public void set_TenantInstanceId(Guid value);
    public string get_Title();
    public void set_Title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.InformationRightsManagementFileSettings")]
public class Microsoft.SharePoint.Client.InformationRightsManagementFileSettings : ClientObject {
    [RemoteAttribute]
public bool AllowPrint { get; public set; }
    [RemoteAttribute]
public bool AllowScript { get; public set; }
    [RemoteAttribute]
public bool AllowWriteCopy { get; public set; }
    [RemoteAttribute]
public bool DisableDocumentBrowserView { get; public set; }
    [RemoteAttribute]
public int DocumentAccessExpireDays { get; public set; }
    [RemoteAttribute]
public bool EnableDocumentAccessExpire { get; public set; }
    [RemoteAttribute]
public bool EnableDocumentBrowserPublishingView { get; public set; }
    [RemoteAttribute]
public bool EnableGroupProtection { get; public set; }
    [RemoteAttribute]
public bool EnableLicenseCacheExpire { get; public set; }
    [RemoteAttribute]
public string GroupName { get; public set; }
    [RemoteAttribute]
public bool IrmEnabled { get; public set; }
    [RemoteAttribute]
public int LicenseCacheExpireDays { get; public set; }
    [RemoteAttribute]
public string PolicyDescription { get; public set; }
    [RemoteAttribute]
public string PolicyTitle { get; public set; }
    [RemoteAttribute]
public string TemplateId { get; public set; }
    [EditorBrowsableAttribute("1")]
public InformationRightsManagementFileSettings(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_AllowPrint();
    public void set_AllowPrint(bool value);
    public bool get_AllowScript();
    public void set_AllowScript(bool value);
    public bool get_AllowWriteCopy();
    public void set_AllowWriteCopy(bool value);
    public bool get_DisableDocumentBrowserView();
    public void set_DisableDocumentBrowserView(bool value);
    public int get_DocumentAccessExpireDays();
    public void set_DocumentAccessExpireDays(int value);
    public bool get_EnableDocumentAccessExpire();
    public void set_EnableDocumentAccessExpire(bool value);
    public bool get_EnableDocumentBrowserPublishingView();
    public void set_EnableDocumentBrowserPublishingView(bool value);
    public bool get_EnableGroupProtection();
    public void set_EnableGroupProtection(bool value);
    public bool get_EnableLicenseCacheExpire();
    public void set_EnableLicenseCacheExpire(bool value);
    public string get_GroupName();
    public void set_GroupName(string value);
    public bool get_IrmEnabled();
    public void set_IrmEnabled(bool value);
    public int get_LicenseCacheExpireDays();
    public void set_LicenseCacheExpireDays(int value);
    public string get_PolicyDescription();
    public void set_PolicyDescription(string value);
    public string get_PolicyTitle();
    public void set_PolicyTitle(string value);
    public string get_TemplateId();
    public void set_TemplateId(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Reset();
    [RemoteAttribute]
public void Update();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.InformationRightsManagementFileSettingsPropertyNames : object {
    public static string AllowPrint;
    public static string AllowScript;
    public static string AllowWriteCopy;
    public static string DisableDocumentBrowserView;
    public static string DocumentAccessExpireDays;
    public static string EnableDocumentAccessExpire;
    public static string EnableDocumentBrowserPublishingView;
    public static string EnableGroupProtection;
    public static string EnableLicenseCacheExpire;
    public static string GroupName;
    public static string IrmEnabled;
    public static string LicenseCacheExpireDays;
    public static string PolicyDescription;
    public static string PolicyTitle;
    public static string TemplateId;
}
[ScriptTypeAttribute("SP.InformationRightsManagementSettings")]
public class Microsoft.SharePoint.Client.InformationRightsManagementSettings : ClientObject {
    [RemoteAttribute]
public bool AllowPrint { get; public set; }
    [RemoteAttribute]
public bool AllowScript { get; public set; }
    [RemoteAttribute]
public bool AllowWriteCopy { get; public set; }
    [RemoteAttribute]
public bool DisableDocumentBrowserView { get; public set; }
    [RemoteAttribute]
public int DocumentAccessExpireDays { get; public set; }
    [RemoteAttribute]
public DateTime DocumentLibraryProtectionExpireDate { get; public set; }
    [RemoteAttribute]
public bool EnableDocumentAccessExpire { get; public set; }
    [RemoteAttribute]
public bool EnableDocumentBrowserPublishingView { get; public set; }
    [RemoteAttribute]
public bool EnableGroupProtection { get; public set; }
    [RemoteAttribute]
public bool EnableLicenseCacheExpire { get; public set; }
    [RemoteAttribute]
public string GroupName { get; public set; }
    [RemoteAttribute]
public int LicenseCacheExpireDays { get; public set; }
    [RemoteAttribute]
public string PolicyDescription { get; public set; }
    [RemoteAttribute]
public string PolicyTitle { get; public set; }
    [RemoteAttribute]
public string TemplateId { get; public set; }
    [EditorBrowsableAttribute("1")]
public InformationRightsManagementSettings(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_AllowPrint();
    public void set_AllowPrint(bool value);
    public bool get_AllowScript();
    public void set_AllowScript(bool value);
    public bool get_AllowWriteCopy();
    public void set_AllowWriteCopy(bool value);
    public bool get_DisableDocumentBrowserView();
    public void set_DisableDocumentBrowserView(bool value);
    public int get_DocumentAccessExpireDays();
    public void set_DocumentAccessExpireDays(int value);
    public DateTime get_DocumentLibraryProtectionExpireDate();
    public void set_DocumentLibraryProtectionExpireDate(DateTime value);
    public bool get_EnableDocumentAccessExpire();
    public void set_EnableDocumentAccessExpire(bool value);
    public bool get_EnableDocumentBrowserPublishingView();
    public void set_EnableDocumentBrowserPublishingView(bool value);
    public bool get_EnableGroupProtection();
    public void set_EnableGroupProtection(bool value);
    public bool get_EnableLicenseCacheExpire();
    public void set_EnableLicenseCacheExpire(bool value);
    public string get_GroupName();
    public void set_GroupName(string value);
    public int get_LicenseCacheExpireDays();
    public void set_LicenseCacheExpireDays(int value);
    public string get_PolicyDescription();
    public void set_PolicyDescription(string value);
    public string get_PolicyTitle();
    public void set_PolicyTitle(string value);
    public string get_TemplateId();
    public void set_TemplateId(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Reset();
    [RemoteAttribute]
public void Update();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.InformationRightsManagementSettingsPropertyNames : object {
    public static string AllowPrint;
    public static string AllowScript;
    public static string AllowWriteCopy;
    public static string DisableDocumentBrowserView;
    public static string DocumentAccessExpireDays;
    public static string DocumentLibraryProtectionExpireDate;
    public static string EnableDocumentAccessExpire;
    public static string EnableDocumentBrowserPublishingView;
    public static string EnableGroupProtection;
    public static string EnableLicenseCacheExpire;
    public static string GroupName;
    public static string LicenseCacheExpireDays;
    public static string PolicyDescription;
    public static string PolicyTitle;
    public static string TemplateId;
}
[ScriptTypeAttribute("SP.IngestionTaskKey")]
public class Microsoft.SharePoint.Client.IngestionTaskKey : ClientValueObject {
    private string m_ingestionTableAccountKey;
    private string m_ingestionTableAccountName;
    private string m_jobId;
    private string m_taskId;
    private string m_tenantName;
    [RemoteAttribute]
public string IngestionTableAccountKey { get; public set; }
    [RemoteAttribute]
public string IngestionTableAccountName { get; public set; }
    [RemoteAttribute]
public string JobId { get; public set; }
    [RemoteAttribute]
public string TaskId { get; public set; }
    [RemoteAttribute]
public string TenantName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_IngestionTableAccountKey();
    public void set_IngestionTableAccountKey(string value);
    public string get_IngestionTableAccountName();
    public void set_IngestionTableAccountName(string value);
    public string get_JobId();
    public void set_JobId(string value);
    public string get_TaskId();
    public void set_TaskId(string value);
    public string get_TenantName();
    public void set_TenantName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ItemOrderUpdateValue")]
public class Microsoft.SharePoint.Client.ItemOrderUpdateValue : ClientValueObject {
    private bool m_hasException;
    private int m_itemId;
    private float m_updatedOrder;
    [RemoteAttribute]
public bool HasException { get; public set; }
    [RemoteAttribute]
public int ItemId { get; public set; }
    [RemoteAttribute]
public float UpdatedOrder { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_HasException();
    public void set_HasException(bool value);
    public int get_ItemId();
    public void set_ItemId(int value);
    public float get_UpdatedOrder();
    public void set_UpdatedOrder(float value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.KnowledgeHub")]
public class Microsoft.SharePoint.Client.KnowledgeHub : ClientObject {
    public KnowledgeHub(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public KnowledgeHub(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.KnowledgeHubSiteReference")]
public class Microsoft.SharePoint.Client.KnowledgeHubSiteReference : ClientValueObject {
    private Guid m_siteId;
    private string m_url;
    private Guid m_webId;
    [RemoteAttribute]
public Guid SiteId { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [RemoteAttribute]
public Guid WebId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_SiteId();
    public void set_SiteId(Guid value);
    public string get_Url();
    public void set_Url(string value);
    public Guid get_WebId();
    public void set_WebId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Language")]
public class Microsoft.SharePoint.Client.Language : ClientValueObject {
    private string m_displayName;
    private string m_languageTag;
    private int m_lcid;
    [RemoteAttribute]
public string DisplayName { get; }
    [RemoteAttribute]
public string LanguageTag { get; }
    [RemoteAttribute]
public int Lcid { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DisplayName();
    public string get_LanguageTag();
    public int get_Lcid();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.LanguageCollection")]
public class Microsoft.SharePoint.Client.LanguageCollection : ClientObjectCollection`1<Language> {
    [EditorBrowsableAttribute("1")]
public LanguageCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public ClientResult`1<Language> GetById(int id);
}
[ScriptTypeAttribute("SP.List")]
public class Microsoft.SharePoint.Client.List : SecurableObject {
    [RemoteAttribute]
public string AdditionalUXProperties { get; public set; }
    [RemoteAttribute]
public bool AllowContentTypes { get; }
    [RemoteAttribute]
public bool AllowDeletion { get; public set; }
    [RemoteAttribute]
public User Author { get; }
    [RemoteAttribute]
public int BaseTemplate { get; }
    [RemoteAttribute]
public BaseType BaseType { get; }
    [RemoteAttribute]
public BrowserFileHandling BrowserFileHandling { get; }
    [RemoteAttribute]
public string Color { get; public set; }
    [RemoteAttribute]
public ContentTypeCollection ContentTypes { get; }
    [RemoteAttribute]
public bool ContentTypesEnabled { get; public set; }
    [RemoteAttribute]
public bool CrawlNonDefaultViews { get; public set; }
    [RemoteAttribute]
public CreatablesInfo CreatablesInfo { get; }
    [RemoteAttribute]
public DateTime Created { get; }
    [RemoteAttribute]
public ChangeToken CurrentChangeToken { get; }
    [RemoteAttribute]
public CustomActionElementCollection CustomActionElements { get; }
    [RemoteAttribute]
public ListDataSource DataSource { get; }
    [RemoteAttribute]
public Guid DefaultContentApprovalWorkflowId { get; public set; }
    [RemoteAttribute]
public string DefaultDisplayFormUrl { get; public set; }
    [RemoteAttribute]
public string DefaultEditFormUrl { get; public set; }
    [RemoteAttribute]
public bool DefaultItemOpenInBrowser { get; public set; }
    [RemoteAttribute]
public bool DefaultItemOpenUseListSetting { get; }
    [RemoteAttribute]
public string DefaultNewFormUrl { get; public set; }
    [RemoteAttribute]
public View DefaultView { get; }
    [RemoteAttribute]
public ResourcePath DefaultViewPath { get; }
    [RemoteAttribute]
public string DefaultViewUrl { get; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public UserResource DescriptionResource { get; }
    [RemoteAttribute]
public string Direction { get; public set; }
    [RemoteAttribute]
public bool DisableCommenting { get; public set; }
    [RemoteAttribute]
public bool DisableGridEditing { get; public set; }
    [RemoteAttribute]
public string DocumentTemplateUrl { get; public set; }
    [RemoteAttribute]
public DraftVisibilityType DraftVersionVisibility { get; public set; }
    [RemoteAttribute]
public BasePermissions EffectiveBasePermissions { get; }
    [RemoteAttribute]
public BasePermissions EffectiveBasePermissionsForUI { get; }
    [RemoteAttribute]
public bool EnableAssignToEmail { get; public set; }
    [RemoteAttribute]
public bool EnableAttachments { get; public set; }
    [RemoteAttribute]
public DateTime EnabledQueryableColumnsDateTime { get; }
    [RemoteAttribute]
public bool EnableFolderCreation { get; public set; }
    [RemoteAttribute]
public bool EnableMinorVersions { get; public set; }
    [RemoteAttribute]
public bool EnableModeration { get; public set; }
    [RemoteAttribute]
public bool EnableRequestSignOff { get; public set; }
    [RemoteAttribute]
public bool EnableVersioning { get; public set; }
    [RemoteAttribute]
public string EntityTypeName { get; }
    [RemoteAttribute]
public EventReceiverDefinitionCollection EventReceivers { get; }
    [RemoteAttribute]
public bool ExcludeFromOfflineClient { get; public set; }
    [RemoteAttribute]
public bool ExemptFromBlockDownloadOfNonViewableFiles { get; }
    [RemoteAttribute]
public FieldCollection Fields { get; }
    [RemoteAttribute]
public bool FileSavePostProcessingEnabled { get; }
    [RemoteAttribute]
public bool ForceCheckout { get; public set; }
    [RemoteAttribute]
public FormCollection Forms { get; }
    [RemoteAttribute]
public bool HasContentAssemblyTemplates { get; public set; }
    [RemoteAttribute]
public bool HasCopyMoveRules { get; }
    [RemoteAttribute]
public bool HasExternalDataSource { get; }
    [RemoteAttribute]
public bool HasFolderColoringFields { get; }
    [RemoteAttribute]
public bool HasListBoundContentAssemblyTemplates { get; public set; }
    [RemoteAttribute]
public bool Hidden { get; public set; }
    [RemoteAttribute]
public bool HighPriorityMediaProcessing { get; }
    [RemoteAttribute]
public string Icon { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public ResourcePath ImagePath { get; public set; }
    [RemoteAttribute]
public string ImageUrl { get; public set; }
    [RemoteAttribute]
public InformationRightsManagementSettings InformationRightsManagementSettings { get; }
    [RemoteAttribute]
public string DefaultSensitivityLabelForLibrary { get; public set; }
    [RemoteAttribute]
public string SensitivityLabelToEncryptOnDownloadForLibrary { get; public set; }
    [RemoteAttribute]
public bool IrmEnabled { get; public set; }
    [RemoteAttribute]
public bool IrmExpire { get; public set; }
    [RemoteAttribute]
public bool IrmReject { get; public set; }
    [RemoteAttribute]
public bool IsApplicationList { get; public set; }
    [RemoteAttribute]
public bool IsCatalog { get; }
    [RemoteAttribute]
public bool IsContributorOwnerEnabled { get; }
    [RemoteAttribute]
public bool IsDefaultDocumentLibrary { get; }
    [RemoteAttribute]
public bool IsEnterpriseGalleryLibrary { get; public set; }
    [RemoteAttribute]
public bool IsPredictionModelApplied { get; }
    [RemoteAttribute]
public bool IsPrivate { get; }
    [RemoteAttribute]
public bool IsSiteAssetsLibrary { get; }
    [RemoteAttribute]
public bool IsSystemList { get; }
    [RemoteAttribute]
public int ItemCount { get; }
    [RemoteAttribute]
public ListItemCollection Items { get; }
    [RemoteAttribute]
public DateTime LastItemDeletedDate { get; }
    [RemoteAttribute]
public DateTime LastItemModifiedDate { get; public set; }
    [RemoteAttribute]
public DateTime LastItemUserModifiedDate { get; public set; }
    [RemoteAttribute]
public ListExperience ListExperienceOptions { get; public set; }
    [RemoteAttribute]
public bool ListFormCustomized { get; public set; }
    [RemoteAttribute]
public string ListItemEntityTypeFullName { get; }
    [RemoteAttribute]
public int ListSchemaVersion { get; }
    [RemoteAttribute]
public int MajorVersionLimit { get; public set; }
    [RemoteAttribute]
public int MajorWithMinorVersionsLimit { get; public set; }
    [RemoteAttribute]
public bool MultipleDataList { get; public set; }
    [RemoteAttribute]
public bool NoCrawl { get; public set; }
    [RemoteAttribute]
public bool OnQuickLaunch { get; public set; }
    [RemoteAttribute]
public ListPageRenderType PageRenderType { get; }
    [RemoteAttribute]
public Web ParentWeb { get; }
    [RemoteAttribute]
public ResourcePath ParentWebPath { get; }
    [RemoteAttribute]
public string ParentWebUrl { get; }
    [RemoteAttribute]
public bool ParserDisabled { get; public set; }
    [RemoteAttribute]
public int ReadSecurity { get; public set; }
    [RemoteAttribute]
public Folder RootFolder { get; }
    [RemoteAttribute]
public string SchemaXml { get; }
    [RemoteAttribute]
public bool ServerTemplateCanCreateFolders { get; }
    [RemoteAttribute]
public bool ShowHiddenFieldsInModernForm { get; public set; }
    [RemoteAttribute]
public Guid TemplateFeatureId { get; }
    [RemoteAttribute]
public string TemplateTypeId { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public UserResource TitleResource { get; }
    [RemoteAttribute]
public UserCustomActionCollection UserCustomActions { get; }
    [RemoteAttribute]
public string ValidationFormula { get; public set; }
    [RemoteAttribute]
public string ValidationMessage { get; public set; }
    [RemoteAttribute]
public VersionPolicyManager VersionPolicies { get; }
    [RemoteAttribute]
public ViewCollection Views { get; }
    [RemoteAttribute]
public WorkflowAssociationCollection WorkflowAssociations { get; }
    [RemoteAttribute]
public int WriteSecurity { get; public set; }
    [EditorBrowsableAttribute("1")]
public List(ClientRuntimeContext context, ObjectPath objectPath);
    internal void InitFromCreationInformation(ListCreationInformation creation);
    public ListItem GetItemById(string id);
    public string get_AdditionalUXProperties();
    public void set_AdditionalUXProperties(string value);
    public bool get_AllowContentTypes();
    public bool get_AllowDeletion();
    public void set_AllowDeletion(bool value);
    public User get_Author();
    public int get_BaseTemplate();
    public BaseType get_BaseType();
    public BrowserFileHandling get_BrowserFileHandling();
    public string get_Color();
    public void set_Color(string value);
    public ContentTypeCollection get_ContentTypes();
    public bool get_ContentTypesEnabled();
    public void set_ContentTypesEnabled(bool value);
    public bool get_CrawlNonDefaultViews();
    public void set_CrawlNonDefaultViews(bool value);
    public CreatablesInfo get_CreatablesInfo();
    public DateTime get_Created();
    public ChangeToken get_CurrentChangeToken();
    public CustomActionElementCollection get_CustomActionElements();
    public ListDataSource get_DataSource();
    public Guid get_DefaultContentApprovalWorkflowId();
    public void set_DefaultContentApprovalWorkflowId(Guid value);
    public string get_DefaultDisplayFormUrl();
    public void set_DefaultDisplayFormUrl(string value);
    public string get_DefaultEditFormUrl();
    public void set_DefaultEditFormUrl(string value);
    public bool get_DefaultItemOpenInBrowser();
    public void set_DefaultItemOpenInBrowser(bool value);
    public bool get_DefaultItemOpenUseListSetting();
    public string get_DefaultNewFormUrl();
    public void set_DefaultNewFormUrl(string value);
    public View get_DefaultView();
    public ResourcePath get_DefaultViewPath();
    public string get_DefaultViewUrl();
    public string get_Description();
    public void set_Description(string value);
    public UserResource get_DescriptionResource();
    public string get_Direction();
    public void set_Direction(string value);
    public bool get_DisableCommenting();
    public void set_DisableCommenting(bool value);
    public bool get_DisableGridEditing();
    public void set_DisableGridEditing(bool value);
    public string get_DocumentTemplateUrl();
    public void set_DocumentTemplateUrl(string value);
    public DraftVisibilityType get_DraftVersionVisibility();
    public void set_DraftVersionVisibility(DraftVisibilityType value);
    public BasePermissions get_EffectiveBasePermissions();
    public BasePermissions get_EffectiveBasePermissionsForUI();
    public bool get_EnableAssignToEmail();
    public void set_EnableAssignToEmail(bool value);
    public bool get_EnableAttachments();
    public void set_EnableAttachments(bool value);
    public DateTime get_EnabledQueryableColumnsDateTime();
    public bool get_EnableFolderCreation();
    public void set_EnableFolderCreation(bool value);
    public bool get_EnableMinorVersions();
    public void set_EnableMinorVersions(bool value);
    public bool get_EnableModeration();
    public void set_EnableModeration(bool value);
    public bool get_EnableRequestSignOff();
    public void set_EnableRequestSignOff(bool value);
    public bool get_EnableVersioning();
    public void set_EnableVersioning(bool value);
    public string get_EntityTypeName();
    public EventReceiverDefinitionCollection get_EventReceivers();
    public bool get_ExcludeFromOfflineClient();
    public void set_ExcludeFromOfflineClient(bool value);
    public bool get_ExemptFromBlockDownloadOfNonViewableFiles();
    public FieldCollection get_Fields();
    public bool get_FileSavePostProcessingEnabled();
    public bool get_ForceCheckout();
    public void set_ForceCheckout(bool value);
    public FormCollection get_Forms();
    public bool get_HasContentAssemblyTemplates();
    public void set_HasContentAssemblyTemplates(bool value);
    public bool get_HasCopyMoveRules();
    public bool get_HasExternalDataSource();
    public bool get_HasFolderColoringFields();
    public bool get_HasListBoundContentAssemblyTemplates();
    public void set_HasListBoundContentAssemblyTemplates(bool value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public bool get_HighPriorityMediaProcessing();
    public string get_Icon();
    public void set_Icon(string value);
    public Guid get_Id();
    public ResourcePath get_ImagePath();
    public void set_ImagePath(ResourcePath value);
    public string get_ImageUrl();
    public void set_ImageUrl(string value);
    public InformationRightsManagementSettings get_InformationRightsManagementSettings();
    public string get_DefaultSensitivityLabelForLibrary();
    public void set_DefaultSensitivityLabelForLibrary(string value);
    public string get_SensitivityLabelToEncryptOnDownloadForLibrary();
    public void set_SensitivityLabelToEncryptOnDownloadForLibrary(string value);
    public bool get_IrmEnabled();
    public void set_IrmEnabled(bool value);
    public bool get_IrmExpire();
    public void set_IrmExpire(bool value);
    public bool get_IrmReject();
    public void set_IrmReject(bool value);
    public bool get_IsApplicationList();
    public void set_IsApplicationList(bool value);
    public bool get_IsCatalog();
    public bool get_IsContributorOwnerEnabled();
    public bool get_IsDefaultDocumentLibrary();
    public bool get_IsEnterpriseGalleryLibrary();
    public void set_IsEnterpriseGalleryLibrary(bool value);
    public bool get_IsPredictionModelApplied();
    public bool get_IsPrivate();
    public bool get_IsSiteAssetsLibrary();
    public bool get_IsSystemList();
    public int get_ItemCount();
    public ListItemCollection get_Items();
    public DateTime get_LastItemDeletedDate();
    public DateTime get_LastItemModifiedDate();
    public void set_LastItemModifiedDate(DateTime value);
    public DateTime get_LastItemUserModifiedDate();
    public void set_LastItemUserModifiedDate(DateTime value);
    public ListExperience get_ListExperienceOptions();
    public void set_ListExperienceOptions(ListExperience value);
    public bool get_ListFormCustomized();
    public void set_ListFormCustomized(bool value);
    public string get_ListItemEntityTypeFullName();
    public int get_ListSchemaVersion();
    public int get_MajorVersionLimit();
    public void set_MajorVersionLimit(int value);
    public int get_MajorWithMinorVersionsLimit();
    public void set_MajorWithMinorVersionsLimit(int value);
    public bool get_MultipleDataList();
    public void set_MultipleDataList(bool value);
    public bool get_NoCrawl();
    public void set_NoCrawl(bool value);
    public bool get_OnQuickLaunch();
    public void set_OnQuickLaunch(bool value);
    public ListPageRenderType get_PageRenderType();
    public Web get_ParentWeb();
    public ResourcePath get_ParentWebPath();
    public string get_ParentWebUrl();
    public bool get_ParserDisabled();
    public void set_ParserDisabled(bool value);
    public int get_ReadSecurity();
    public void set_ReadSecurity(int value);
    public Folder get_RootFolder();
    public string get_SchemaXml();
    public bool get_ServerTemplateCanCreateFolders();
    public bool get_ShowHiddenFieldsInModernForm();
    public void set_ShowHiddenFieldsInModernForm(bool value);
    public Guid get_TemplateFeatureId();
    public string get_TemplateTypeId();
    public void set_TemplateTypeId(string value);
    public string get_Title();
    public void set_Title(string value);
    public UserResource get_TitleResource();
    public UserCustomActionCollection get_UserCustomActions();
    public string get_ValidationFormula();
    public void set_ValidationFormula(string value);
    public string get_ValidationMessage();
    public void set_ValidationMessage(string value);
    public VersionPolicyManager get_VersionPolicies();
    public ViewCollection get_Views();
    public WorkflowAssociationCollection get_WorkflowAssociations();
    public int get_WriteSecurity();
    public void set_WriteSecurity(int value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void StartDeleteFileVersions(int deleteOlderThanDays);
    [RemoteAttribute]
public void StartDeleteFileVersionsByMode(FileVersionBatchDeleteParameters batchDeleteParameters);
    [RemoteAttribute]
public void CancelDeleteFileVersions();
    [RemoteAttribute]
public ClientResult`1<string> GetProgressForDeleteFileVersions();
    [RemoteAttribute]
public void StartFileVersionExpirationReport(string reportFileUrl);
    [RemoteAttribute]
public ClientResult`1<string> GetProgressForFileVersionExpirationReport(string reportFileUrl);
    [RemoteAttribute]
public ClientResult`1<string> GetSpecialFolderUrl(SpecialFolderType type, bool bForceCreate, Guid existingFolderGuid);
    [RemoteAttribute]
public ClientResult`1<string> ParseDocumentTemplate(string Name);
    [RemoteAttribute]
public void UpdateCAAETemplate(string Name, UpdateTemplateInfo updateTemplateInfo);
    [RemoteAttribute]
public IEnumerable`1<PlaceholderV2> GetCAAETemplateMetadataV2(string Id);
    [RemoteAttribute]
public void UpdateCAAETemplateV2(string Id, UpdateTemplateInfoV2 updateTemplateInfo);
    [RemoteAttribute]
public ClientResult`1<ContentAssemblyModernTemplateColumnsMappingInfo> MapFieldsToColumnsForModernTemlate(PublishModernTemplatePayload payload);
    [RemoteAttribute]
public ClientResult`1<ContentAssemblyModernTemplateColumnsMappingInfo> MapFieldsToColumnsForModernTemplate(PublishModernTemplatePayload templatePayload);
    [RemoteAttribute]
public void PublishTemplateV2(PublishTemplateV2Payload payload);
    [RemoteAttribute]
public void PublishSnippet(PublishSnippetPayload publishSnippetPayload);
    [RemoteAttribute]
public IEnumerable`1<PlaceholderV2> GetContentAssemblyTemplateFields(string TemplateUrl);
    [RemoteAttribute]
public ClientResult`1<FieldValuesWithUrl> GetContentAssemblyDocumentFieldValues(string DocumentUrl);
    [RemoteAttribute]
public ClientResult`1<ContentAssemblyFileInfo> UpdateContentAssemblyDocument(string TemplateUrl, IList`1<ContentAssemblyFormAnswer> contentAssemblyFormAnswers);
    [RemoteAttribute]
public ClientResult`1<ContentAssemblyFileInfo> CreateDocumentFromContentAssemblyTemplate(string TemplateUrl, DocumentGenerationInfo documentGenerationInfo);
    [RemoteAttribute]
public ClientResult`1<TemplateMetaData> GetCAAETemplateMetadata(string Name, bool Published);
    [RemoteAttribute]
public ClientResult`1<ContentAssemblyFileInfo> CreateDocumentFromCAAETemplate(string ContentTypeName, DocumentGenerationInfo documentGenerationInfo);
    [RemoteAttribute]
public ClientResult`1<ContentAssemblyFileInfo> CreateDocumentFromCAAETemplateV2(string Id, DocumentGenerationInfo documentGenerationInfo);
    [RemoteAttribute]
public ContentType CreateSmartTemplateContentTypeAndAddToList(string Name, string Description);
    [RemoteAttribute]
public ClientResult`1<TemplatizationMetaData> CopyTemplateAndGetMetadata(string Id);
    [RemoteAttribute]
public ContentType CreateSmartTemplateContentTypeAndAddToListV2(string Name, string Description, string TemplatePath, string Status);
    [RemoteAttribute]
public ClientResult`1<LockFileData> LockSmartTemplate(string Id);
    [RemoteAttribute]
public void UnlockSmartTemplate(string Id, string LockId);
    [RemoteAttribute]
public ClientResult`1<LockFileData> RefreshLockSmartTemplate(string Id, string LockId);
    [RemoteAttribute]
public void SetContentAssemblyTemplateReadOnly(string Id);
    [RemoteAttribute]
public void UnsetContentAssemblyTemplateReadOnly(string Id);
    [RemoteAttribute]
public ClientResult`1<string> CAAECreateTempFolder();
    [RemoteAttribute]
public ClientResult`1<string> CAAERenameFileInTemporaryFolder(string Path, string UpdatedName);
    [RemoteAttribute]
public ClientResult`1<bool> IsSyntexAIFeaturesFlightEnabled();
    [RemoteAttribute]
public ClientResult`1<string> CreateHVCSItemApprovalRequest(ApprovalsCreateRequestParameters createItemRequestPayload);
    [RemoteAttribute]
public CheckedOutFileCollection GetCheckedOutFiles();
    [RemoteAttribute]
public ListBloomFilter GetBloomFilter(int startItemId);
    [RemoteAttribute]
public ListBloomFilter GetBloomFilterWithCustomFields(int listItemStartingID, IList`1<string> internalFieldNames);
    [RemoteAttribute]
public ClientResult`1<string> SaveAsNewView(string oldName, string newName, bool privateView, string uri);
    [RemoteAttribute]
public View CreateMappedView(AppViewCreationInfo appViewCreationInfo, VisualizationAppTarget visualizationTarget);
    [RemoteAttribute]
public VisualizationAppSynchronizationResult ValidateAppName(string appDisplayName);
    [RemoteAttribute]
public View PublishMappedView(Guid appId, VisualizationAppTarget visualizationTarget);
    [RemoteAttribute]
public View UnpublishMappedView(Guid appId, VisualizationAppTarget visualizationTarget);
    [RemoteAttribute]
public VisualizationAppSynchronizationResult GetMappedApp(Guid appId, VisualizationAppTarget visualizationAppTarget);
    [RemoteAttribute]
public VisualizationAppSynchronizationResult GetMappedApps(VisualizationAppTarget visualizationAppTarget);
    [RemoteAttribute]
public FlowSynchronizationResult SyncFlowTemplates(string category);
    [RemoteAttribute]
public IList`1<Guid> GetAsyncActionTaskIds();
    [RemoteAttribute]
public ClientResult`1<IDictionary`2<string, string>> GetAsyncActionConfig(Guid id);
    [RemoteAttribute]
public ClientResult`1<bool> EnqueueAsyncActionTaskById(Guid id, IDictionary`2<string, string> parameters);
    [RemoteAttribute]
public FlowSynchronizationResult SyncFlowInstances(bool retrieveGroupFlows);
    [RemoteAttribute]
public FlowSynchronizationResult SyncFlowInstance(Guid flowID);
    [RemoteAttribute]
public FlowSynchronizationResult SyncFlowCallbackUrl(string flowId);
    [RemoteAttribute]
public ClientResult`1<string> CreateDocumentAndGetEditLink(string fileName, string folderPath, int documentTemplateType, string templateUrl);
    [RemoteAttribute]
public ClientResult`1<string> CreateDocumentWithDefaultName(string folderPath, string extension);
    [RemoteAttribute]
public ListItem CreateDocument(string fileName, Folder targetFolder, DocumentTemplateType templateType);
    [RemoteAttribute]
public ListItem CreateDocumentFromTemplateStream(string fileName, Folder targetFolder, string extension, Stream templateStream);
    [RemoteAttribute]
public ListItem CreateDocumentFromTemplateBytes(string fileName, Folder targetFolder, Byte[] templateBytes, string extension);
    [RemoteAttribute]
public ListItem CreateDocumentFromTemplate(string fileName, Folder targetFolder, string templateUrl);
    [RemoteAttribute]
public ListItem CreateDocumentFromTemplateUsingPath(ResourcePath filePath, Folder targetFolder, ResourcePath templatePath);
    [RemoteAttribute]
public ClientResult`1<Guid> StartRecycle();
    [RemoteAttribute]
public ClientResult`1<Guid> Recycle();
    [RemoteAttribute]
public ChangeCollection GetChanges(ChangeQuery query);
    [RemoteAttribute]
public ClientResult`1<BasePermissions> GetUserEffectivePermissions(string userName);
    [RemoteAttribute]
public void SaveAsTemplate(string strFileName, string strName, string strDescription, bool bSaveData);
    [RemoteAttribute]
public ClientResult`1<int> ReserveListItemId();
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public View GetView(Guid viewGuid);
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public static ClientResult`1<Stream> GetListDataAsStream(ClientRuntimeContext context, string listFullUrl, RenderListDataParameters parameters, RenderListDataOverrideParameters overrideParameters);
    [RemoteAttribute]
public ClientResult`1<Stream> RenderListDataAsStream(RenderListDataParameters parameters, RenderListDataOverrideParameters overrideParameters);
    [RemoteAttribute]
public ClientResult`1<Stream> RenderListFilterData(RenderListFilterDataParameters parameters);
    [RemoteAttribute]
public ClientResult`1<Stream> RenderListContextMenuData(RenderListContextMenuDataParameters parameters);
    [RemoteAttribute]
public ListItem GetItemByUniqueId(Guid uniqueId);
    [RemoteAttribute]
public RelatedFieldCollection GetRelatedFields();
    [RemoteAttribute]
public ClientResult`1<string> RenderExtendedListFormData(int itemId, string formId, int mode, RenderListFormDataOptions options, int cutoffVersion);
    [RemoteAttribute]
public ClientResult`1<string> GetLookupFieldChoices(string targetFieldName, string pagingInfo);
    [RemoteAttribute]
public ClientResult`1<string> SearchLookupFieldChoices(string targetFieldName, string beginsWithSearchString, string pagingInfo);
    [RemoteAttribute]
public ClientResult`1<string> RenderListFormData(int itemId, string formId, int mode);
    [RemoteAttribute]
public ClientResult`1<string> RenderListData(string viewXml);
    [RemoteAttribute]
public static ClientResult`1<Stream> GetOneDriveListDataAsStream(ClientRuntimeContext context, RenderListDataParameters parameters, RenderListDataOverrideParameters overrideParameters);
    [RemoteAttribute]
public ListItemCollection GetItems(CamlQuery query);
    [RemoteAttribute]
public ListItem GetItemById(int id);
    [RemoteAttribute]
internal ListItem GetItemByStringId(string sId);
    [RemoteAttribute]
public void SetExemptFromBlockDownloadOfNonViewableFiles(bool value);
    [RemoteAttribute]
public ListItem AddItem(ListItemCreationInformation parameters);
    [RemoteAttribute]
public ListItem AddItemUsingPath(ListItemCreationInformationUsingPath parameters);
}
[ScriptTypeAttribute("SP.ListBloomFilter")]
public class Microsoft.SharePoint.Client.ListBloomFilter : ClientObject {
    [RemoteAttribute]
public int BloomFilterSize { get; }
    [RemoteAttribute]
public double FalsePositiveRate { get; }
    [RemoteAttribute]
public IList`1<string> HashedValueSet { get; }
    [RemoteAttribute]
public IList`1<int> IndexMap { get; }
    [RemoteAttribute]
public int ItemProcessedCount { get; }
    [RemoteAttribute]
public int K { get; }
    [RemoteAttribute]
public int LastListItemIdProcessed { get; }
    [RemoteAttribute]
public int MaxItemCount { get; }
    [EditorBrowsableAttribute("1")]
public ListBloomFilter(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_BloomFilterSize();
    public double get_FalsePositiveRate();
    public IList`1<string> get_HashedValueSet();
    public IList`1<int> get_IndexMap();
    public int get_ItemProcessedCount();
    public int get_K();
    public int get_LastListItemIdProcessed();
    public int get_MaxItemCount();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ListBloomFilterPropertyNames : object {
    public static string BloomFilterSize;
    public static string FalsePositiveRate;
    public static string HashedValueSet;
    public static string IndexMap;
    public static string ItemProcessedCount;
    public static string K;
    public static string LastListItemIdProcessed;
    public static string MaxItemCount;
}
[ScriptTypeAttribute("SP.ListCollection")]
public class Microsoft.SharePoint.Client.ListCollection : ClientObjectCollection`1<List> {
    [RemoteAttribute]
public ListCollectionPosition ListCollectionPosition { get; }
    [EditorBrowsableAttribute("1")]
public ListCollection(ClientRuntimeContext context, ObjectPath objectPath);
    public ListCollectionPosition get_ListCollectionPosition();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public List GetByTitle(string title);
    [RemoteAttribute]
public List GetById(Guid id);
    [RemoteAttribute]
public List Add(ListCreationInformation parameters);
    [RemoteAttribute]
public List EnsureSitePagesLibrary();
    [RemoteAttribute]
public List EnsureClientRenderedSitePagesLibrary();
    [RemoteAttribute]
public List EnsureSiteAssetsLibrary();
}
[ScriptTypeAttribute("SP.ListCollectionPosition")]
public class Microsoft.SharePoint.Client.ListCollectionPosition : ClientValueObject {
    private string m_pagingInfo;
    [RemoteAttribute]
public string PagingInfo { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_PagingInfo();
    public void set_PagingInfo(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ListCollectionPropertyNames : object {
    public static string ListCollectionPosition;
}
[ScriptTypeAttribute("SP.ListCreationInformation")]
public class Microsoft.SharePoint.Client.ListCreationInformation : ClientValueObject {
    private string m_customSchemaXml;
    private IDictionary`2<string, string> m_dataSourceProperties;
    private string m_description;
    private int m_documentTemplateType;
    private ListTemplate m_listTemplate;
    private QuickLaunchOptions m_quickLaunchOption;
    private Guid m_templateFeatureId;
    private int m_templateType;
    private string m_title;
    private string m_url;
    [RemoteAttribute]
public string CustomSchemaXml { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, string> DataSourceProperties { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public int DocumentTemplateType { get; public set; }
    [RemoteAttribute]
public ListTemplate ListTemplate { get; public set; }
    [RemoteAttribute]
public QuickLaunchOptions QuickLaunchOption { get; public set; }
    [RemoteAttribute]
public Guid TemplateFeatureId { get; public set; }
    [RemoteAttribute]
public int TemplateType { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_CustomSchemaXml();
    public void set_CustomSchemaXml(string value);
    public IDictionary`2<string, string> get_DataSourceProperties();
    public void set_DataSourceProperties(IDictionary`2<string, string> value);
    public string get_Description();
    public void set_Description(string value);
    public int get_DocumentTemplateType();
    public void set_DocumentTemplateType(int value);
    public ListTemplate get_ListTemplate();
    public void set_ListTemplate(ListTemplate value);
    public QuickLaunchOptions get_QuickLaunchOption();
    public void set_QuickLaunchOption(QuickLaunchOptions value);
    public Guid get_TemplateFeatureId();
    public void set_TemplateFeatureId(Guid value);
    public int get_TemplateType();
    public void set_TemplateType(int value);
    public string get_Title();
    public void set_Title(string value);
    public string get_Url();
    public void set_Url(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ListDataSource")]
public class Microsoft.SharePoint.Client.ListDataSource : ClientValueObject {
    private IDictionary`2<string, string> m_properties;
    [RemoteAttribute]
public IDictionary`2<string, string> Properties { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IDictionary`2<string, string> get_Properties();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ListDataValidationExceptionValue")]
public class Microsoft.SharePoint.Client.ListDataValidationExceptionValue : ClientValueObject {
    private IList`1<ListDataValidationFailure> m_fieldFailures;
    private ListDataValidationFailure m_itemFailure;
    [RemoteAttribute]
public IList`1<ListDataValidationFailure> FieldFailures { get; }
    [RemoteAttribute]
public ListDataValidationFailure ItemFailure { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<ListDataValidationFailure> get_FieldFailures();
    public ListDataValidationFailure get_ItemFailure();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ListDataValidationFailure")]
public class Microsoft.SharePoint.Client.ListDataValidationFailure : ClientValueObject {
    private string m_displayName;
    private string m_message;
    private string m_name;
    private ListDataValidationFailureReason m_reason;
    private ListDataValidationType m_validationType;
    [RemoteAttribute]
public string DisplayName { get; }
    [RemoteAttribute]
public string Message { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public ListDataValidationFailureReason Reason { get; }
    [RemoteAttribute]
public ListDataValidationType ValidationType { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DisplayName();
    public string get_Message();
    public string get_Name();
    public ListDataValidationFailureReason get_Reason();
    public ListDataValidationType get_ValidationType();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.ListDataValidationFailureReason : Enum {
    public int value__;
    public static ListDataValidationFailureReason DataFailure;
    public static ListDataValidationFailureReason FormulaError;
}
public enum Microsoft.SharePoint.Client.ListDataValidationType : Enum {
    public int value__;
    public static ListDataValidationType UserFormulaField;
    public static ListDataValidationType UserFormulaItem;
    public static ListDataValidationType RequiredField;
    public static ListDataValidationType ChoiceField;
    public static ListDataValidationType MinMaxField;
    public static ListDataValidationType TextField;
}
public enum Microsoft.SharePoint.Client.ListExperience : Enum {
    public int value__;
    public static ListExperience Auto;
    public static ListExperience NewExperience;
    public static ListExperience ClassicExperience;
}
[ScriptTypeAttribute("Microsoft.SharePoint.ListHome.ListHomeItem")]
public class Microsoft.SharePoint.Client.ListHomeItem : ClientValueObject {
    private string m_color;
    private string m_icon;
    private bool m_isDefaultDocumentLibrary;
    private bool m_isDocLib;
    private string m_listId;
    private string m_listUrl;
    private string m_siteAcronym;
    private string m_siteColor;
    private string m_siteIconUrl;
    private string m_siteId;
    private string m_siteTitle;
    private string m_siteUrl;
    private string m_title;
    private string m_webId;
    private string m_webTemplateConfiguration;
    [RemoteAttribute]
public string color { get; public set; }
    [RemoteAttribute]
public string icon { get; public set; }
    [RemoteAttribute]
public bool isDefaultDocumentLibrary { get; public set; }
    [RemoteAttribute]
public bool isDocLib { get; public set; }
    [RemoteAttribute]
public string listId { get; public set; }
    [RemoteAttribute]
public string listUrl { get; public set; }
    [RemoteAttribute]
public string siteAcronym { get; public set; }
    [RemoteAttribute]
public string siteColor { get; public set; }
    [RemoteAttribute]
public string siteIconUrl { get; public set; }
    [RemoteAttribute]
public string siteId { get; public set; }
    [RemoteAttribute]
public string siteTitle { get; public set; }
    [RemoteAttribute]
public string siteUrl { get; public set; }
    [RemoteAttribute]
public string title { get; public set; }
    [RemoteAttribute]
public string webId { get; public set; }
    [RemoteAttribute]
public string webTemplateConfiguration { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_color();
    public void set_color(string value);
    public string get_icon();
    public void set_icon(string value);
    public bool get_isDefaultDocumentLibrary();
    public void set_isDefaultDocumentLibrary(bool value);
    public bool get_isDocLib();
    public void set_isDocLib(bool value);
    public string get_listId();
    public void set_listId(string value);
    public string get_listUrl();
    public void set_listUrl(string value);
    public string get_siteAcronym();
    public void set_siteAcronym(string value);
    public string get_siteColor();
    public void set_siteColor(string value);
    public string get_siteIconUrl();
    public void set_siteIconUrl(string value);
    public string get_siteId();
    public void set_siteId(string value);
    public string get_siteTitle();
    public void set_siteTitle(string value);
    public string get_siteUrl();
    public void set_siteUrl(string value);
    public string get_title();
    public void set_title(string value);
    public string get_webId();
    public void set_webId(string value);
    public string get_webTemplateConfiguration();
    public void set_webTemplateConfiguration(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ListHomeItem2")]
public class Microsoft.SharePoint.Client.ListHomeItem2 : ClientObject {
    [RemoteAttribute]
public string color { get; public set; }
    [RemoteAttribute]
public string createdByName { get; public set; }
    [RemoteAttribute]
public string createdByUpn { get; public set; }
    [RemoteAttribute]
public string createdDate { get; public set; }
    [RemoteAttribute]
public string icon { get; public set; }
    [RemoteAttribute]
public string lastModifiedDate { get; public set; }
    [RemoteAttribute]
public string lastViewDate { get; public set; }
    [RemoteAttribute]
public string lastviewDateTime { get; public set; }
    [RemoteAttribute]
public string listId { get; public set; }
    [RemoteAttribute]
public string listTitle { get; public set; }
    [RemoteAttribute]
public string listUrl { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<CountByDate> listViewCounts { get; public set; }
    [RemoteAttribute]
public bool shouldRemove { get; public set; }
    [RemoteAttribute]
public string siteColor { get; public set; }
    [RemoteAttribute]
public string siteId { get; public set; }
    [RemoteAttribute]
public string siteTitle { get; public set; }
    [RemoteAttribute]
public string siteUrl { get; public set; }
    [RemoteAttribute]
public string TemplateTypeId { get; public set; }
    [RemoteAttribute]
public string webId { get; public set; }
    [RemoteAttribute]
public string webTemplateConfiguration { get; public set; }
    [EditorBrowsableAttribute("1")]
public ListHomeItem2(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_color();
    public void set_color(string value);
    public string get_createdByName();
    public void set_createdByName(string value);
    public string get_createdByUpn();
    public void set_createdByUpn(string value);
    public string get_createdDate();
    public void set_createdDate(string value);
    public string get_icon();
    public void set_icon(string value);
    public string get_lastModifiedDate();
    public void set_lastModifiedDate(string value);
    public string get_lastViewDate();
    public void set_lastViewDate(string value);
    public string get_lastviewDateTime();
    public void set_lastviewDateTime(string value);
    public string get_listId();
    public void set_listId(string value);
    public string get_listTitle();
    public void set_listTitle(string value);
    public string get_listUrl();
    public void set_listUrl(string value);
    public IEnumerable`1<CountByDate> get_listViewCounts();
    public void set_listViewCounts(IEnumerable`1<CountByDate> value);
    public bool get_shouldRemove();
    public void set_shouldRemove(bool value);
    public string get_siteColor();
    public void set_siteColor(string value);
    public string get_siteId();
    public void set_siteId(string value);
    public string get_siteTitle();
    public void set_siteTitle(string value);
    public string get_siteUrl();
    public void set_siteUrl(string value);
    public string get_TemplateTypeId();
    public void set_TemplateTypeId(string value);
    public string get_webId();
    public void set_webId(string value);
    public string get_webTemplateConfiguration();
    public void set_webTemplateConfiguration(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ListHomeItem2PropertyNames : object {
    public static string color;
    public static string createdByName;
    public static string createdByUpn;
    public static string createdDate;
    public static string icon;
    public static string lastModifiedDate;
    public static string lastViewDate;
    public static string lastviewDateTime;
    public static string listId;
    public static string listTitle;
    public static string listUrl;
    public static string listViewCounts;
    public static string shouldRemove;
    public static string siteColor;
    public static string siteId;
    public static string siteTitle;
    public static string siteUrl;
    public static string TemplateTypeId;
    public static string webId;
    public static string webTemplateConfiguration;
}
[ScriptTypeAttribute("SP.ListHomeItemCollection")]
public static class Microsoft.SharePoint.Client.ListHomeItemCollection : object {
    [RemoteAttribute]
public static ClientResult`1<Stream> GetListHomeItems(ClientRuntimeContext context, int sortBy);
    [RemoteAttribute]
public static ClientResult`1<Stream> GetListHomeItemsWithPageContextInfo(ClientRuntimeContext context, int sortBy);
    [RemoteAttribute]
public static ClientObjectList`1<ListHomeItem2> GetListHomePersonalLists(ClientRuntimeContext context, int sortBy, string templateTypeId);
    [RemoteAttribute]
public static void RemoveRecentLists(ClientRuntimeContext context, string recentListsJson);
    [RemoteAttribute]
public static ClientResult`1<string> GetRecommendLists(ClientRuntimeContext context);
    [RemoteAttribute]
public static void RemoveRecommendLists(ClientRuntimeContext context, string recommendListsJson);
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("SP.ListItem")]
public class Microsoft.SharePoint.Client.ListItem : SecurableObject {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; public set; }
    [RemoteAttribute]
public AttachmentCollection AttachmentFiles { get; }
    [RemoteAttribute]
public bool CommentsDisabled { get; }
    [RemoteAttribute]
public CommentsDisabledScope CommentsDisabledScope { get; }
    [RemoteAttribute]
public ListItemComplianceInfo ComplianceInfo { get; }
    [RemoteAttribute]
public ContentType ContentType { get; }
    [RemoteAttribute]
public string DisplayName { get; }
    [RemoteAttribute]
public DlpPolicyTip GetDlpPolicyTip { get; }
    [RemoteAttribute]
public BasePermissions EffectiveBasePermissions { get; }
    [RemoteAttribute]
public BasePermissions EffectiveBasePermissionsForUI { get; }
    [RemoteAttribute]
public FieldStringValues FieldValuesAsHtml { get; }
    [RemoteAttribute]
public FieldStringValues FieldValuesAsText { get; }
    [RemoteAttribute]
public FieldStringValues FieldValuesForEdit { get; }
    [RemoteAttribute]
public File File { get; }
    [RemoteAttribute]
public FileSystemObjectType FileSystemObjectType { get; }
    [RemoteAttribute]
public Folder Folder { get; }
    [RemoteAttribute]
public string IconOverlay { get; public set; }
    [RemoteAttribute]
public int Id { get; }
    [RemoteAttribute]
public List ParentList { get; }
    [RemoteAttribute]
public PropertyValues Properties { get; }
    [RemoteAttribute]
public string ServerRedirectedEmbedUri { get; }
    [RemoteAttribute]
public string ServerRedirectedEmbedUrl { get; }
    [RemoteAttribute]
public string Client_Title { get; }
    [RemoteAttribute]
public ListItemVersionCollection Versions { get; }
    [EditorBrowsableAttribute("1")]
public ListItem(ClientRuntimeContext context, ObjectPath objectPath);
    internal void InitFromCreationInformation(ListItemCreationInformation creation);
    internal void InitFromCreationInformationUsingPath(ListItemCreationInformationUsingPath creation);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    [RemoteAttribute]
public void set_Item(string fieldName, object value);
    public AttachmentCollection get_AttachmentFiles();
    public bool get_CommentsDisabled();
    public CommentsDisabledScope get_CommentsDisabledScope();
    public ListItemComplianceInfo get_ComplianceInfo();
    public ContentType get_ContentType();
    public string get_DisplayName();
    public DlpPolicyTip get_GetDlpPolicyTip();
    public BasePermissions get_EffectiveBasePermissions();
    public BasePermissions get_EffectiveBasePermissionsForUI();
    public FieldStringValues get_FieldValuesAsHtml();
    public FieldStringValues get_FieldValuesAsText();
    public FieldStringValues get_FieldValuesForEdit();
    public File get_File();
    public FileSystemObjectType get_FileSystemObjectType();
    public Folder get_Folder();
    public string get_IconOverlay();
    public void set_IconOverlay(string value);
    public int get_Id();
    public List get_ParentList();
    public PropertyValues get_Properties();
    public string get_ServerRedirectedEmbedUri();
    public string get_ServerRedirectedEmbedUrl();
    public string get_Client_Title();
    public ListItemVersionCollection get_Versions();
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
public ClientResult`1<BasePermissions> GetUserEffectivePermissions(string userName);
    [RemoteAttribute]
public void SetCommentsDisabled(bool value);
    [RemoteAttribute]
public void UpdateEx(ListItemUpdateParameters parameters);
    [RemoteAttribute]
public virtual void Update();
    [RemoteAttribute]
public void SystemUpdate();
    [RemoteAttribute]
public void UpdateOverwriteVersion();
    [RemoteAttribute]
public virtual void DeleteObject();
    [RemoteAttribute]
public void DeleteWithParameters(ListItemDeleteParameters parameters);
    [RemoteAttribute]
public ListItemVersionCollection GetVersions(GetListItemVersionsParameters getVersionsParams);
    [RemoteAttribute]
public ClientResult`1<Guid> Recycle();
    [RemoteAttribute]
public ClientResult`1<Guid> RecycleWithParameters(ListItemDeleteParameters parameters);
    [RemoteAttribute]
public ClientResult`1<PolicyTipUserActionResult> OverridePolicyTip(PolicyTipUserAction userAction, string justification);
    [RemoteAttribute]
public ClientResult`1<string> GetWOPIFrameUrl(SPWOPIFrameAction action);
    [RemoteAttribute]
public ChangeCollection GetChanges(ChangeQuery query);
    [RemoteAttribute]
public void SetComplianceTagWithMetaInfo(string complianceTag, bool blockDelete, bool blockEdit, DateTime complianceTagWrittenTime, string userEmailAddress, bool isTagSuperLock, bool isRecordUnlockedAsDefault);
    [RemoteAttribute]
public void SetComplianceTagWithExplicitMetasUpdate(string complianceTag, int complianceFlags, DateTime complianceTagWrittenTime, string userEmailAddress);
    [RemoteAttribute]
public void SetComplianceTag(string complianceTag, bool isTagPolicyHold, bool isTagPolicyRecord, bool isEventBasedTag, bool isTagSuperLock, bool isUnlockedAsDefault);
    [RemoteAttribute]
public void SetComplianceTagWithHold(string complianceTag);
    [RemoteAttribute]
public void SetComplianceTagWithRecord(string complianceTag);
    [RemoteAttribute]
public void SetComplianceTagWithNoHold(string complianceTag);
    [RemoteAttribute]
internal void SetFieldValue(string fieldName, object value);
    [RemoteAttribute]
public void ParseAndSetFieldValue(string fieldName, string value);
    [RemoteAttribute]
public IList`1<ListItemFormUpdateValue> ValidateUpdateListItem(IList`1<ListItemFormUpdateValue> formValues, bool bNewDocumentUpdate, string checkInComment, bool datesInUTC, bool numberInInvariantCulture, string sharedLockId);
    [RemoteAttribute]
public ClientResult`1<ListItemUpdateResults> ValidateUpdateFetchListItem(IList`1<ListItemFormUpdateValue> formValues, bool bNewDocumentUpdate, string checkInComment, bool datesInUTC, bool numberInInvariantCulture, string View, string RootFolder);
    [RemoteAttribute]
public ClientResult`1<ListItemUpdateResults> ValidateUpdateFetchListItemInFolder(IList`1<ListItemFormUpdateValue> formValues, bool bNewDocumentUpdate, string checkInComment, bool datesInUTC, bool numberInInvariantCulture, string rootFolder);
    [RemoteAttribute]
public void MediaServiceUpdate(MediaServiceUpdateParameters parameters);
    [RemoteAttribute]
public void MediaServiceUpdateV2(MediaServiceUpdateParameters parameters, bool eventFiringEnabled);
}
[ScriptTypeAttribute("SP.ListItemCollection")]
public class Microsoft.SharePoint.Client.ListItemCollection : ClientObjectCollection`1<ListItem> {
    [RemoteAttribute]
public ListItemCollectionPosition ListItemCollectionPosition { get; }
    [EditorBrowsableAttribute("1")]
public ListItemCollection(ClientRuntimeContext context, ObjectPath objectPath);
    public ListItem GetById(string id);
    public ListItemCollectionPosition get_ListItemCollectionPosition();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ListItem GetById(int id);
    [RemoteAttribute]
internal ListItem GetByStringId(string sId);
}
[ScriptTypeAttribute("SP.ListItemCollectionPosition")]
public class Microsoft.SharePoint.Client.ListItemCollectionPosition : ClientValueObject {
    private string m_pagingInfo;
    [RemoteAttribute]
public string PagingInfo { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_PagingInfo();
    public void set_PagingInfo(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ListItemCollectionPropertyNames : object {
    public static string ListItemCollectionPosition;
}
[ScriptTypeAttribute("SP.ListItemComplianceInfo")]
public class Microsoft.SharePoint.Client.ListItemComplianceInfo : ClientValueObject {
    private string m_complianceTag;
    private bool m_tagPolicyEventBased;
    private bool m_tagPolicyHold;
    private bool m_tagPolicyRecord;
    [RemoteAttribute]
public string ComplianceTag { get; public set; }
    [RemoteAttribute]
public bool TagPolicyEventBased { get; public set; }
    [RemoteAttribute]
public bool TagPolicyHold { get; public set; }
    [RemoteAttribute]
public bool TagPolicyRecord { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ComplianceTag();
    public void set_ComplianceTag(string value);
    public bool get_TagPolicyEventBased();
    public void set_TagPolicyEventBased(bool value);
    public bool get_TagPolicyHold();
    public void set_TagPolicyHold(bool value);
    public bool get_TagPolicyRecord();
    public void set_TagPolicyRecord(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ListItemCreationInformation")]
public class Microsoft.SharePoint.Client.ListItemCreationInformation : ClientValueObject {
    private string m_folderUrl;
    private string m_leafName;
    private FileSystemObjectType m_underlyingObjectType;
    [RemoteAttribute]
public string FolderUrl { get; public set; }
    [RemoteAttribute]
public string LeafName { get; public set; }
    [RemoteAttribute]
public FileSystemObjectType UnderlyingObjectType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_FolderUrl();
    public void set_FolderUrl(string value);
    public string get_LeafName();
    public void set_LeafName(string value);
    public FileSystemObjectType get_UnderlyingObjectType();
    public void set_UnderlyingObjectType(FileSystemObjectType value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ListItemCreationInformationUsingPath")]
public class Microsoft.SharePoint.Client.ListItemCreationInformationUsingPath : ClientValueObject {
    private ResourcePath m_folderPath;
    private ResourcePath m_leafName;
    private FileSystemObjectType m_underlyingObjectType;
    [RemoteAttribute]
public ResourcePath FolderPath { get; public set; }
    [RemoteAttribute]
public ResourcePath LeafName { get; public set; }
    [RemoteAttribute]
public FileSystemObjectType UnderlyingObjectType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public ResourcePath get_FolderPath();
    public void set_FolderPath(ResourcePath value);
    public ResourcePath get_LeafName();
    public void set_LeafName(ResourcePath value);
    public FileSystemObjectType get_UnderlyingObjectType();
    public void set_UnderlyingObjectType(FileSystemObjectType value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ListItemDeleteParameters")]
public class Microsoft.SharePoint.Client.ListItemDeleteParameters : ClientValueObject {
    private bool m_bypassSharedLock;
    [RemoteAttribute]
public bool BypassSharedLock { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_BypassSharedLock();
    public void set_BypassSharedLock(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ListItemEntityCollection")]
public class Microsoft.SharePoint.Client.ListItemEntityCollection : ClientObjectCollection`1<ListItem> {
    [EditorBrowsableAttribute("1")]
public ListItemEntityCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.ListItemFormUpdateValue")]
public class Microsoft.SharePoint.Client.ListItemFormUpdateValue : ClientValueObject {
    private int m_errorCode;
    private string m_errorMessage;
    private string m_fieldName;
    private string m_fieldValue;
    private bool m_hasException;
    private int m_itemId;
    [RemoteAttribute]
public int ErrorCode { get; public set; }
    [RemoteAttribute]
public string ErrorMessage { get; public set; }
    [RemoteAttribute]
public string FieldName { get; public set; }
    [RemoteAttribute]
public string FieldValue { get; public set; }
    [RemoteAttribute]
public bool HasException { get; public set; }
    [RemoteAttribute]
public int ItemId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_ErrorCode();
    public void set_ErrorCode(int value);
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    public string get_FieldName();
    public void set_FieldName(string value);
    public string get_FieldValue();
    public void set_FieldValue(string value);
    public bool get_HasException();
    public void set_HasException(bool value);
    public int get_ItemId();
    public void set_ItemId(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ListItemObjectPropertyNames : object {
    public static string AttachmentFiles;
    public static string ContentType;
    public static string GetDlpPolicyTip;
    public static string FieldValuesAsHtml;
    public static string FieldValuesAsText;
    public static string FieldValuesForEdit;
    public static string File;
    public static string Folder;
    public static string ParentList;
    public static string Properties;
    public static string Versions;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ListItemPropertyNames : object {
    public static string CommentsDisabled;
    public static string CommentsDisabledScope;
    public static string ComplianceInfo;
    public static string DisplayName;
    public static string EffectiveBasePermissions;
    public static string EffectiveBasePermissionsForUI;
    public static string FileSystemObjectType;
    public static string IconOverlay;
    public static string Id;
    public static string ServerRedirectedEmbedUri;
    public static string ServerRedirectedEmbedUrl;
    public static string Client_Title;
}
[ScriptTypeAttribute("SP.ListItemUpdateParameters")]
public class Microsoft.SharePoint.Client.ListItemUpdateParameters : ClientValueObject {
    private bool m_bypassQuotaCheck;
    private bool m_bypassSharedLock;
    [RemoteAttribute]
public bool BypassQuotaCheck { get; public set; }
    [RemoteAttribute]
public bool BypassSharedLock { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_BypassQuotaCheck();
    public void set_BypassQuotaCheck(bool value);
    public bool get_BypassSharedLock();
    public void set_BypassSharedLock(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ListItemUpdateResults")]
public class Microsoft.SharePoint.Client.ListItemUpdateResults : ClientValueObject {
    private string m_updatedData;
    private IList`1<ListItemFormUpdateValue> m_updateResults;
    [RemoteAttribute]
public string UpdatedData { get; public set; }
    [RemoteAttribute]
public IList`1<ListItemFormUpdateValue> UpdateResults { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_UpdatedData();
    public void set_UpdatedData(string value);
    public IList`1<ListItemFormUpdateValue> get_UpdateResults();
    public void set_UpdateResults(IList`1<ListItemFormUpdateValue> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.ListItemUrlType : Enum {
    public int value__;
    public static ListItemUrlType DirectUrl;
    public static ListItemUrlType OfficeClientUrl;
    public static ListItemUrlType OfficeOnlineViewUrl;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("SP.ListItemVersion")]
public class Microsoft.SharePoint.Client.ListItemVersion : ClientObject {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; }
    [RemoteAttribute]
public IEnumerable`1<SPListItemVersionChange> Changes { get; }
    [RemoteAttribute]
public DateTime Created { get; }
    [RemoteAttribute]
public User CreatedBy { get; }
    [RemoteAttribute]
public FieldCollection Fields { get; }
    [RemoteAttribute]
public FileVersion FileVersion { get; }
    [RemoteAttribute]
public bool IsCurrentVersion { get; }
    [RemoteAttribute]
public int VersionId { get; }
    [RemoteAttribute]
public string VersionLabel { get; }
    [EditorBrowsableAttribute("1")]
public ListItemVersion(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    public IEnumerable`1<SPListItemVersionChange> get_Changes();
    public DateTime get_Created();
    public User get_CreatedBy();
    public FieldCollection get_Fields();
    public FileVersion get_FileVersion();
    public bool get_IsCurrentVersion();
    public int get_VersionId();
    public string get_VersionLabel();
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public void Recycle();
}
[ScriptTypeAttribute("SP.ListItemVersionCollection")]
public class Microsoft.SharePoint.Client.ListItemVersionCollection : ClientObjectCollection`1<ListItemVersion> {
    [RemoteAttribute]
public ListItemVersionCollectionPosition ListItemVersionCollectionPosition { get; }
    [EditorBrowsableAttribute("1")]
public ListItemVersionCollection(ClientRuntimeContext context, ObjectPath objectPath);
    public ListItemVersionCollectionPosition get_ListItemVersionCollectionPosition();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ListItemVersion GetById(int versionId);
}
[ScriptTypeAttribute("SP.ListItemVersionCollectionPosition")]
public class Microsoft.SharePoint.Client.ListItemVersionCollectionPosition : ClientValueObject {
    private string m_pagingInfo;
    [RemoteAttribute]
public string PagingInfo { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_PagingInfo();
    public void set_PagingInfo(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ListItemVersionCollectionPropertyNames : object {
    public static string ListItemVersionCollectionPosition;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ListItemVersionObjectPropertyNames : object {
    public static string CreatedBy;
    public static string Fields;
    public static string FileVersion;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ListItemVersionPropertyNames : object {
    public static string Changes;
    public static string Created;
    public static string IsCurrentVersion;
    public static string VersionId;
    public static string VersionLabel;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ListObjectPropertyNames : object {
    public static string Author;
    public static string ContentTypes;
    public static string CreatablesInfo;
    public static string DefaultView;
    public static string DescriptionResource;
    public static string EventReceivers;
    public static string Fields;
    public static string Forms;
    public static string InformationRightsManagementSettings;
    public static string Items;
    public static string ParentWeb;
    public static string RootFolder;
    public static string TitleResource;
    public static string UserCustomActions;
    public static string VersionPolicies;
    public static string Views;
    public static string WorkflowAssociations;
}
public enum Microsoft.SharePoint.Client.ListPageRenderType : Enum {
    public int value__;
    public static ListPageRenderType Undefined;
    public static ListPageRenderType MultipeWePart;
    public static ListPageRenderType JSLinkCustomization;
    public static ListPageRenderType XslLinkCustomization;
    public static ListPageRenderType NoSPList;
    public static ListPageRenderType HasBusinessDataField;
    public static ListPageRenderType HasTaskOutcomeField;
    public static ListPageRenderType HasPublishingfield;
    public static ListPageRenderType HasGeolocationField;
    public static ListPageRenderType HasCustomActionWithCode;
    public static ListPageRenderType HasMetadataNavFeature;
    public static ListPageRenderType SpecialViewType;
    public static ListPageRenderType ListTypeNoSupportForModernMode;
    public static ListPageRenderType AnonymousUser;
    public static ListPageRenderType ListSettingOff;
    public static ListPageRenderType SiteSettingOff;
    public static ListPageRenderType WebSettingOff;
    public static ListPageRenderType TenantSettingOff;
    public static ListPageRenderType CustomizedForm;
    public static ListPageRenderType DocLibNewForm;
    public static ListPageRenderType UnsupportedFieldTypeInForm;
    public static ListPageRenderType InvalidFieldTypeInForm;
    public static ListPageRenderType InvalidControModeInForm;
    public static ListPageRenderType CustomizedPage;
    public static ListPageRenderType ListTemplateNotSupported;
    public static ListPageRenderType WikiPage;
    public static ListPageRenderType DropOffLibrary;
    public static ListPageRenderType IsUnghosted;
    public static ListPageRenderType Modern;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ListPropertyNames : object {
    public static string AdditionalUXProperties;
    public static string AllowContentTypes;
    public static string AllowDeletion;
    public static string BaseTemplate;
    public static string BaseType;
    public static string BrowserFileHandling;
    public static string Color;
    public static string ContentTypesEnabled;
    public static string CrawlNonDefaultViews;
    public static string Created;
    public static string CurrentChangeToken;
    public static string CustomActionElements;
    public static string DataSource;
    public static string DefaultContentApprovalWorkflowId;
    public static string DefaultDisplayFormUrl;
    public static string DefaultEditFormUrl;
    public static string DefaultItemOpenInBrowser;
    public static string DefaultItemOpenUseListSetting;
    public static string DefaultNewFormUrl;
    public static string DefaultViewPath;
    public static string DefaultViewUrl;
    public static string Description;
    public static string Direction;
    public static string DisableCommenting;
    public static string DisableGridEditing;
    public static string DocumentTemplateUrl;
    public static string DraftVersionVisibility;
    public static string EffectiveBasePermissions;
    public static string EffectiveBasePermissionsForUI;
    public static string EnableAssignToEmail;
    public static string EnableAttachments;
    public static string EnabledQueryableColumnsDateTime;
    public static string EnableFolderCreation;
    public static string EnableMinorVersions;
    public static string EnableModeration;
    public static string EnableRequestSignOff;
    public static string EnableVersioning;
    public static string EntityTypeName;
    public static string ExcludeFromOfflineClient;
    public static string ExemptFromBlockDownloadOfNonViewableFiles;
    public static string FileSavePostProcessingEnabled;
    public static string ForceCheckout;
    public static string HasContentAssemblyTemplates;
    public static string HasCopyMoveRules;
    public static string HasExternalDataSource;
    public static string HasFolderColoringFields;
    public static string HasListBoundContentAssemblyTemplates;
    public static string Hidden;
    public static string HighPriorityMediaProcessing;
    public static string Icon;
    public static string Id;
    public static string ImagePath;
    public static string ImageUrl;
    public static string DefaultSensitivityLabelForLibrary;
    public static string SensitivityLabelToEncryptOnDownloadForLibrary;
    public static string IrmEnabled;
    public static string IrmExpire;
    public static string IrmReject;
    public static string IsApplicationList;
    public static string IsCatalog;
    public static string IsContributorOwnerEnabled;
    public static string IsDefaultDocumentLibrary;
    public static string IsEnterpriseGalleryLibrary;
    public static string IsPredictionModelApplied;
    public static string IsPrivate;
    public static string IsSiteAssetsLibrary;
    public static string IsSystemList;
    public static string ItemCount;
    public static string LastItemDeletedDate;
    public static string LastItemModifiedDate;
    public static string LastItemUserModifiedDate;
    public static string ListExperienceOptions;
    public static string ListFormCustomized;
    public static string ListItemEntityTypeFullName;
    public static string ListSchemaVersion;
    public static string MajorVersionLimit;
    public static string MajorWithMinorVersionsLimit;
    public static string MultipleDataList;
    public static string NoCrawl;
    public static string OnQuickLaunch;
    public static string PageRenderType;
    public static string ParentWebPath;
    public static string ParentWebUrl;
    public static string ParserDisabled;
    public static string ReadSecurity;
    public static string SchemaXml;
    public static string ServerTemplateCanCreateFolders;
    public static string ShowHiddenFieldsInModernForm;
    public static string TemplateFeatureId;
    public static string TemplateTypeId;
    public static string Title;
    public static string ValidationFormula;
    public static string ValidationMessage;
    public static string WriteSecurity;
}
[ScriptTypeAttribute("SP.ListTemplate")]
public class Microsoft.SharePoint.Client.ListTemplate : ClientObject {
    [RemoteAttribute]
public bool AllowsFolderCreation { get; }
    [RemoteAttribute]
public BaseType BaseType { get; }
    [RemoteAttribute]
public string Description { get; }
    [RemoteAttribute]
public Guid FeatureId { get; }
    [RemoteAttribute]
public bool Hidden { get; }
    [RemoteAttribute]
public string ImageUrl { get; }
    [RemoteAttribute]
public string InternalName { get; }
    [RemoteAttribute]
public bool IsCustomTemplate { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public bool OnQuickLaunch { get; }
    [RemoteAttribute]
public int ListTemplateTypeKind { get; }
    [RemoteAttribute]
public bool Unique { get; }
    [EditorBrowsableAttribute("1")]
public ListTemplate(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_AllowsFolderCreation();
    public BaseType get_BaseType();
    public string get_Description();
    public Guid get_FeatureId();
    public bool get_Hidden();
    public string get_ImageUrl();
    public string get_InternalName();
    public bool get_IsCustomTemplate();
    public string get_Name();
    public bool get_OnQuickLaunch();
    public int get_ListTemplateTypeKind();
    public bool get_Unique();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ClientResult`1<Stream> GetGlobalSchemaXml();
}
[ScriptTypeAttribute("SP.ListTemplateCollection")]
public class Microsoft.SharePoint.Client.ListTemplateCollection : ClientObjectCollection`1<ListTemplate> {
    [EditorBrowsableAttribute("1")]
public ListTemplateCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public ListTemplate GetByName(string name);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ListTemplatePropertyNames : object {
    public static string AllowsFolderCreation;
    public static string BaseType;
    public static string Description;
    public static string FeatureId;
    public static string Hidden;
    public static string ImageUrl;
    public static string InternalName;
    public static string IsCustomTemplate;
    public static string Name;
    public static string OnQuickLaunch;
    public static string ListTemplateTypeKind;
    public static string Unique;
}
public enum Microsoft.SharePoint.Client.ListTemplateType : Enum {
    public int value__;
    public static ListTemplateType InvalidType;
    public static ListTemplateType NoListTemplate;
    public static ListTemplateType GenericList;
    public static ListTemplateType DocumentLibrary;
    public static ListTemplateType Survey;
    public static ListTemplateType Links;
    public static ListTemplateType Announcements;
    public static ListTemplateType Contacts;
    public static ListTemplateType Events;
    public static ListTemplateType Tasks;
    public static ListTemplateType DiscussionBoard;
    public static ListTemplateType PictureLibrary;
    public static ListTemplateType DataSources;
    public static ListTemplateType WebTemplateCatalog;
    public static ListTemplateType UserInformation;
    public static ListTemplateType WebPartCatalog;
    public static ListTemplateType ListTemplateCatalog;
    public static ListTemplateType XMLForm;
    public static ListTemplateType MasterPageCatalog;
    public static ListTemplateType NoCodeWorkflows;
    public static ListTemplateType WorkflowProcess;
    public static ListTemplateType WebPageLibrary;
    public static ListTemplateType CustomGrid;
    public static ListTemplateType SolutionCatalog;
    public static ListTemplateType NoCodePublic;
    public static ListTemplateType ThemeCatalog;
    public static ListTemplateType DesignCatalog;
    public static ListTemplateType AppDataCatalog;
    public static ListTemplateType AppFilesCatalog;
    public static ListTemplateType DataConnectionLibrary;
    public static ListTemplateType WorkflowHistory;
    public static ListTemplateType GanttTasks;
    public static ListTemplateType HelpLibrary;
    public static ListTemplateType AccessRequest;
    public static ListTemplateType PromotedLinks;
    public static ListTemplateType TasksWithTimelineAndHierarchy;
    public static ListTemplateType MaintenanceLogs;
    public static ListTemplateType Meetings;
    public static ListTemplateType Agenda;
    public static ListTemplateType MeetingUser;
    public static ListTemplateType Decision;
    public static ListTemplateType MeetingObjective;
    public static ListTemplateType TextBox;
    public static ListTemplateType ThingsToBring;
    public static ListTemplateType HomePageLibrary;
    public static ListTemplateType Posts;
    public static ListTemplateType Comments;
    public static ListTemplateType Categories;
    public static ListTemplateType Facility;
    public static ListTemplateType Whereabouts;
    public static ListTemplateType CallTrack;
    public static ListTemplateType Circulation;
    public static ListTemplateType Timecard;
    public static ListTemplateType Holidays;
    public static ListTemplateType IMEDic;
    public static ListTemplateType ExternalList;
    public static ListTemplateType MySiteDocumentLibrary;
    public static ListTemplateType IssueTracking;
    public static ListTemplateType AdminTasks;
    public static ListTemplateType HealthRules;
    public static ListTemplateType HealthReports;
    public static ListTemplateType DeveloperSiteDraftApps;
    public static ListTemplateType AccessApp;
    public static ListTemplateType AlchemyMobileForm;
    public static ListTemplateType AlchemyApprovalWorkflow;
    public static ListTemplateType SharingLinks;
    public static ListTemplateType HashtagStore;
    public static ListTemplateType RecipesTable;
    public static ListTemplateType FormulasTable;
    public static ListTemplateType WebTemplateExtensionsList;
    public static ListTemplateType TemplatesTable;
    public static ListTemplateType ItemReferenceCollection;
    public static ListTemplateType ItemReferenceReference;
    public static ListTemplateType ItemReferenceReferenceCollection;
    public static ListTemplateType ContentCenterPrimeLibrary;
    public static ListTemplateType ContentCenterSampleLibrary;
    public static ListTemplateType ContentCenterModelLibrary;
    public static ListTemplateType RecordCenterRecordLibrary;
    public static ListTemplateType ModernTemplateLibrary;
    public static ListTemplateType SnippetLibrary;
    public static ListTemplateType FieldLibrary;
    public static ListTemplateType AgreementLibrary;
}
[ScriptTypeAttribute("SP.LockFileData")]
public class Microsoft.SharePoint.Client.LockFileData : ClientValueObject {
    private DateTime m_lockExpireTimeStamp;
    private string m_lockId;
    [RemoteAttribute]
public DateTime lockExpireTimeStamp { get; public set; }
    [RemoteAttribute]
public string lockId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public DateTime get_lockExpireTimeStamp();
    public void set_lockExpireTimeStamp(DateTime value);
    public string get_lockId();
    public void set_lockId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.LogoAlignment : Enum {
    public int value__;
    public static LogoAlignment Left;
    public static LogoAlignment Middle;
    public static LogoAlignment Right;
}
[ScriptTypeAttribute("SP.MachineLearningSampleMeta")]
public class Microsoft.SharePoint.Client.MachineLearningSampleMeta : ClientValueObject {
    private string m_extractedText;
    [RemoteAttribute]
public string ExtractedText { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ExtractedText();
    public void set_ExtractedText(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.MediaServiceUpdateParameters")]
public class Microsoft.SharePoint.Client.MediaServiceUpdateParameters : ClientValueObject {
    private SPAIPLabelExtractionStatus m_aIPLabelExtractionStatus;
    private string m_chiSquareDistribution;
    private ClassificationResult m_classificationResult;
    private int m_contentVersion;
    private string m_entropy;
    private string m_eTag;
    private bool m_isLowPriorityRequest;
    private bool m_isMediaServiceRequest;
    private MachineLearningSampleMeta m_machineLearningSampleMeta;
    private int m_mediaLengthInSeconds;
    private string m_mediaServiceAutoKeyPoints;
    private string m_mediaServiceAutoTags;
    private string m_mediaServiceDateTaken;
    private string m_mediaServiceDocTags;
    private string m_mediaServiceEventHashCode;
    private string m_mediaServiceFastMetadata;
    private string m_mediaServiceGenerationTime;
    private int m_mediaServiceImageHeight;
    private string m_mediaServiceImageTags;
    private int m_mediaServiceImageWidth;
    private string m_mediaServiceKeyPoints;
    private string m_mediaServiceLocation;
    private string m_mediaServiceMetadata;
    private string m_mediaServiceObjectDetectorVersions;
    private string m_mediaServiceOCR;
    private string m_mediaServicePhotoCategory;
    private string m_mediaServiceProtectionKey;
    private string m_mediaServiceSearchProperties;
    private string m_mediaServiceSystemTags;
    private string m_mediaServiceTranscript;
    private string m_monteCarloApproximation;
    private string m_sensitivityLabel;
    private SPSensivityLabelAssignmentMethod m_sensitivityLabelAssignmentMethod;
    private bool m_skipSearchReindex;
    private string m_virusInfo;
    private string m_virusStatus;
    private string m_xTenantLabelInfo;
    [RemoteAttribute]
public SPAIPLabelExtractionStatus AIPLabelExtractionStatus { get; public set; }
    [RemoteAttribute]
public string ChiSquareDistribution { get; public set; }
    [RemoteAttribute]
public ClassificationResult ClassificationResult { get; public set; }
    [RemoteAttribute]
public int ContentVersion { get; public set; }
    [RemoteAttribute]
public string Entropy { get; public set; }
    [RemoteAttribute]
public string ETag { get; public set; }
    [RemoteAttribute]
public bool IsLowPriorityRequest { get; public set; }
    [RemoteAttribute]
public bool IsMediaServiceRequest { get; public set; }
    [RemoteAttribute]
public MachineLearningSampleMeta MachineLearningSampleMeta { get; public set; }
    [RemoteAttribute]
public int MediaLengthInSeconds { get; public set; }
    [RemoteAttribute]
public string MediaServiceAutoKeyPoints { get; public set; }
    [RemoteAttribute]
public string MediaServiceAutoTags { get; public set; }
    [RemoteAttribute]
public string MediaServiceDateTaken { get; public set; }
    [RemoteAttribute]
public string MediaServiceDocTags { get; public set; }
    [RemoteAttribute]
public string MediaServiceEventHashCode { get; public set; }
    [RemoteAttribute]
public string MediaServiceFastMetadata { get; public set; }
    [RemoteAttribute]
public string MediaServiceGenerationTime { get; public set; }
    [RemoteAttribute]
public int MediaServiceImageHeight { get; public set; }
    [RemoteAttribute]
public string MediaServiceImageTags { get; public set; }
    [RemoteAttribute]
public int MediaServiceImageWidth { get; public set; }
    [RemoteAttribute]
public string MediaServiceKeyPoints { get; public set; }
    [RemoteAttribute]
public string MediaServiceLocation { get; public set; }
    [RemoteAttribute]
public string MediaServiceMetadata { get; public set; }
    [RemoteAttribute]
public string MediaServiceObjectDetectorVersions { get; public set; }
    [RemoteAttribute]
public string MediaServiceOCR { get; public set; }
    [RemoteAttribute]
public string MediaServicePhotoCategory { get; public set; }
    [RemoteAttribute]
public string MediaServiceProtectionKey { get; public set; }
    [RemoteAttribute]
public string MediaServiceSearchProperties { get; public set; }
    [RemoteAttribute]
public string MediaServiceSystemTags { get; public set; }
    [RemoteAttribute]
public string MediaServiceTranscript { get; public set; }
    [RemoteAttribute]
public string MonteCarloApproximation { get; public set; }
    [RemoteAttribute]
public string SensitivityLabel { get; public set; }
    [RemoteAttribute]
public SPSensivityLabelAssignmentMethod SensitivityLabelAssignmentMethod { get; public set; }
    [RemoteAttribute]
public bool SkipSearchReindex { get; public set; }
    [RemoteAttribute]
public string VirusInfo { get; public set; }
    [RemoteAttribute]
public string VirusStatus { get; public set; }
    [RemoteAttribute]
public string XTenantLabelInfo { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public SPAIPLabelExtractionStatus get_AIPLabelExtractionStatus();
    public void set_AIPLabelExtractionStatus(SPAIPLabelExtractionStatus value);
    public string get_ChiSquareDistribution();
    public void set_ChiSquareDistribution(string value);
    public ClassificationResult get_ClassificationResult();
    public void set_ClassificationResult(ClassificationResult value);
    public int get_ContentVersion();
    public void set_ContentVersion(int value);
    public string get_Entropy();
    public void set_Entropy(string value);
    public string get_ETag();
    public void set_ETag(string value);
    public bool get_IsLowPriorityRequest();
    public void set_IsLowPriorityRequest(bool value);
    public bool get_IsMediaServiceRequest();
    public void set_IsMediaServiceRequest(bool value);
    public MachineLearningSampleMeta get_MachineLearningSampleMeta();
    public void set_MachineLearningSampleMeta(MachineLearningSampleMeta value);
    public int get_MediaLengthInSeconds();
    public void set_MediaLengthInSeconds(int value);
    public string get_MediaServiceAutoKeyPoints();
    public void set_MediaServiceAutoKeyPoints(string value);
    public string get_MediaServiceAutoTags();
    public void set_MediaServiceAutoTags(string value);
    public string get_MediaServiceDateTaken();
    public void set_MediaServiceDateTaken(string value);
    public string get_MediaServiceDocTags();
    public void set_MediaServiceDocTags(string value);
    public string get_MediaServiceEventHashCode();
    public void set_MediaServiceEventHashCode(string value);
    public string get_MediaServiceFastMetadata();
    public void set_MediaServiceFastMetadata(string value);
    public string get_MediaServiceGenerationTime();
    public void set_MediaServiceGenerationTime(string value);
    public int get_MediaServiceImageHeight();
    public void set_MediaServiceImageHeight(int value);
    public string get_MediaServiceImageTags();
    public void set_MediaServiceImageTags(string value);
    public int get_MediaServiceImageWidth();
    public void set_MediaServiceImageWidth(int value);
    public string get_MediaServiceKeyPoints();
    public void set_MediaServiceKeyPoints(string value);
    public string get_MediaServiceLocation();
    public void set_MediaServiceLocation(string value);
    public string get_MediaServiceMetadata();
    public void set_MediaServiceMetadata(string value);
    public string get_MediaServiceObjectDetectorVersions();
    public void set_MediaServiceObjectDetectorVersions(string value);
    public string get_MediaServiceOCR();
    public void set_MediaServiceOCR(string value);
    public string get_MediaServicePhotoCategory();
    public void set_MediaServicePhotoCategory(string value);
    public string get_MediaServiceProtectionKey();
    public void set_MediaServiceProtectionKey(string value);
    public string get_MediaServiceSearchProperties();
    public void set_MediaServiceSearchProperties(string value);
    public string get_MediaServiceSystemTags();
    public void set_MediaServiceSystemTags(string value);
    public string get_MediaServiceTranscript();
    public void set_MediaServiceTranscript(string value);
    public string get_MonteCarloApproximation();
    public void set_MonteCarloApproximation(string value);
    public string get_SensitivityLabel();
    public void set_SensitivityLabel(string value);
    public SPSensivityLabelAssignmentMethod get_SensitivityLabelAssignmentMethod();
    public void set_SensitivityLabelAssignmentMethod(SPSensivityLabelAssignmentMethod value);
    public bool get_SkipSearchReindex();
    public void set_SkipSearchReindex(bool value);
    public string get_VirusInfo();
    public void set_VirusInfo(string value);
    public string get_VirusStatus();
    public void set_VirusStatus(string value);
    public string get_XTenantLabelInfo();
    public void set_XTenantLabelInfo(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.MicroService.MicroServiceManager")]
public class Microsoft.SharePoint.Client.MicroServiceManager : ClientObject {
    public MicroServiceManager(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public MicroServiceManager(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public ClientResult`1<Guid> AddMicroserviceWorkItem(Byte[] payLoad, int minutes, MicroServiceWorkItemProperties properties);
    [RemoteAttribute]
public ClientResult`1<bool> DeleteMicroserviceWorkItem(Guid workItemId);
    [RemoteAttribute]
public ClientResult`1<bool> DeleteMicroserviceWorkItemByContentDbId(Guid contentDatabaseId, Guid siteId, Guid workItemId);
}
[ScriptTypeAttribute("SP.MicroService.MicroServiceUtilities")]
public static class Microsoft.SharePoint.Client.MicroServiceUtilities : object {
}
[ScriptTypeAttribute("SP.MicroService.MicroServiceWorkItemProperties")]
public class Microsoft.SharePoint.Client.MicroServiceWorkItemProperties : ClientValueObject {
    private string m_apiPath;
    private IDictionary`2<string, object> m_customProperties;
    private IDictionary`2<string, string> m_httpHeaders;
    private string m_microServiceName;
    private RequestType m_requestType;
    [RemoteAttribute]
public string ApiPath { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, object> CustomProperties { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, string> HttpHeaders { get; public set; }
    [RemoteAttribute]
public string MicroServiceName { get; public set; }
    [RemoteAttribute]
public RequestType RequestType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ApiPath();
    public void set_ApiPath(string value);
    public IDictionary`2<string, object> get_CustomProperties();
    public void set_CustomProperties(IDictionary`2<string, object> value);
    public IDictionary`2<string, string> get_HttpHeaders();
    public void set_HttpHeaders(IDictionary`2<string, string> value);
    public string get_MicroServiceName();
    public void set_MicroServiceName(string value);
    public RequestType get_RequestType();
    public void set_RequestType(RequestType value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.MigrationJobState : Enum {
    public int value__;
    public static MigrationJobState None;
    public static MigrationJobState Queued;
    public static MigrationJobState Processing;
}
public enum Microsoft.SharePoint.Client.MigrationNameConflictBehavior : Enum {
    public int value__;
    public static MigrationNameConflictBehavior Fail;
    public static MigrationNameConflictBehavior Replace;
    public static MigrationNameConflictBehavior Rename;
}
[ScriptTypeAttribute("SP.ModernizeHomepageResult")]
public class Microsoft.SharePoint.Client.ModernizeHomepageResult : ClientObject {
    [RemoteAttribute]
public bool CanModernizeHomepage { get; }
    [RemoteAttribute]
public string Reason { get; }
    [EditorBrowsableAttribute("1")]
public ModernizeHomepageResult(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_CanModernizeHomepage();
    public string get_Reason();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ModernizeHomepageResultPropertyNames : object {
    public static string CanModernizeHomepage;
    public static string Reason;
}
[ScriptTypeAttribute("SP.MountedFolderInfo")]
public class Microsoft.SharePoint.Client.MountedFolderInfo : ClientObject {
    [RemoteAttribute]
public string FolderUrl { get; }
    [RemoteAttribute]
public bool HasEditPermission { get; }
    [RemoteAttribute]
public int ItemId { get; }
    [RemoteAttribute]
public ListTemplateType ListTemplateType { get; }
    [RemoteAttribute]
public string ListViewUrl { get; }
    [RemoteAttribute]
public string WebUrl { get; }
    [EditorBrowsableAttribute("1")]
public MountedFolderInfo(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_FolderUrl();
    public bool get_HasEditPermission();
    public int get_ItemId();
    public ListTemplateType get_ListTemplateType();
    public string get_ListViewUrl();
    public string get_WebUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.MountedFolderInfoPropertyNames : object {
    public static string FolderUrl;
    public static string HasEditPermission;
    public static string ItemId;
    public static string ListTemplateType;
    public static string ListViewUrl;
    public static string WebUrl;
}
[ScriptTypeAttribute("SP.MountPoint")]
public static class Microsoft.SharePoint.Client.MountPoint : object {
    [RemoteAttribute]
public static void CreateMountPoint(ClientRuntimeContext context, Folder folder, string name, Guid targetSiteId, Guid targetWebId, Guid targetUniqueId);
    [RemoteAttribute]
public static MountedFolderInfo GetMountedFolderInfo(ClientRuntimeContext context, Guid targetSiteId, Guid targetWebId, Guid targetUniqueId);
    [RemoteAttribute]
public static IEnumerable`1<string> GetMountedFolderUrls(ClientRuntimeContext context, List list);
}
[ScriptTypeAttribute("SP.MountPointInfo")]
public class Microsoft.SharePoint.Client.MountPointInfo : ClientObject {
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public string RedirectUrl { get; }
    [EditorBrowsableAttribute("1")]
public MountPointInfo(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Name();
    public string get_RedirectUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.MountPointInfoPropertyNames : object {
    public static string Name;
    public static string RedirectUrl;
}
[ScriptTypeAttribute("SP.MoveCopyOptions")]
public class Microsoft.SharePoint.Client.MoveCopyOptions : ClientValueObject {
    private bool m_keepBoth;
    private bool m_resetAuthorAndCreatedOnCopy;
    private bool m_retainEditorAndModifiedOnMove;
    private bool m_shouldBypassSharedLocks;
    [RemoteAttribute]
public bool KeepBoth { get; public set; }
    [RemoteAttribute]
public bool ResetAuthorAndCreatedOnCopy { get; public set; }
    [RemoteAttribute]
public bool RetainEditorAndModifiedOnMove { get; public set; }
    [RemoteAttribute]
public bool ShouldBypassSharedLocks { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_KeepBoth();
    public void set_KeepBoth(bool value);
    public bool get_ResetAuthorAndCreatedOnCopy();
    public void set_ResetAuthorAndCreatedOnCopy(bool value);
    public bool get_RetainEditorAndModifiedOnMove();
    public void set_RetainEditorAndModifiedOnMove(bool value);
    public bool get_ShouldBypassSharedLocks();
    public void set_ShouldBypassSharedLocks(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.MoveCopyUtil")]
public static class Microsoft.SharePoint.Client.MoveCopyUtil : object {
    [RemoteAttribute]
public static void MoveFile(ClientRuntimeContext context, string srcUrl, string destUrl, bool overwrite, MoveCopyOptions options);
    [RemoteAttribute]
public static void MoveFileByPath(ClientRuntimeContext context, ResourcePath srcPath, ResourcePath destPath, bool overwrite, MoveCopyOptions options);
    [RemoteAttribute]
public static void CopyFile(ClientRuntimeContext context, string srcUrl, string destUrl, bool overwrite, MoveCopyOptions options);
    [RemoteAttribute]
public static void CopyFileByPath(ClientRuntimeContext context, ResourcePath srcPath, ResourcePath destPath, bool overwrite, MoveCopyOptions options);
    [RemoteAttribute]
public static void MoveFolder(ClientRuntimeContext context, string srcUrl, string destUrl, MoveCopyOptions options);
    [RemoteAttribute]
public static void MoveFolderByPath(ClientRuntimeContext context, ResourcePath srcPath, ResourcePath destPath, MoveCopyOptions options);
    [RemoteAttribute]
public static ClientResult`1<Guid> CopyFolder(ClientRuntimeContext context, string srcUrl, string destUrl, MoveCopyOptions options);
    [RemoteAttribute]
public static ClientResult`1<Guid> CopyFolderByPath(ClientRuntimeContext context, ResourcePath srcPath, ResourcePath destPath, MoveCopyOptions options);
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.MoveOperations : Enum {
    public int value__;
    public static MoveOperations None;
    public static MoveOperations Overwrite;
    public static MoveOperations AllowBrokenThickets;
    public static MoveOperations BypassApprovePermission;
    public static MoveOperations BypassSharedLock;
    public static MoveOperations RetainEditorAndModifiedOnMove;
    public static MoveOperations BypassRenameActivity;
    public static MoveOperations SuppressChangeDirtyEvent;
}
[ScriptTypeAttribute("SP.MultiGeoCopyParameters")]
public class Microsoft.SharePoint.Client.MultiGeoCopyParameters : ClientValueObject {
    private Byte[] m_binaryPayload;
    private Guid m_jobId;
    private int m_userId;
    [RemoteAttribute]
public Byte[] binaryPayload { get; public set; }
    [RemoteAttribute]
public Guid jobId { get; public set; }
    [RemoteAttribute]
public int userId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Byte[] get_binaryPayload();
    public void set_binaryPayload(Byte[] value);
    public Guid get_jobId();
    public void set_jobId(Guid value);
    public int get_userId();
    public void set_userId(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Navigation")]
public class Microsoft.SharePoint.Client.Navigation : ClientObject {
    [RemoteAttribute]
public NavigationNodeCollection QuickLaunch { get; }
    [RemoteAttribute]
public NavigationNodeCollection TopNavigationBar { get; }
    [RemoteAttribute]
public bool UseShared { get; public set; }
    [EditorBrowsableAttribute("1")]
public Navigation(ClientRuntimeContext context, ObjectPath objectPath);
    public NavigationNodeCollection get_QuickLaunch();
    public NavigationNodeCollection get_TopNavigationBar();
    public bool get_UseShared();
    public void set_UseShared(bool value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public NavigationNode GetNodeById(int id);
}
[ScriptTypeAttribute("SP.NavigationNode")]
public class Microsoft.SharePoint.Client.NavigationNode : ClientObject {
    [RemoteAttribute]
public IList`1<Guid> AudienceIds { get; public set; }
    [RemoteAttribute]
public NavigationNodeCollection Children { get; }
    [RemoteAttribute]
public int CurrentLCID { get; }
    [RemoteAttribute]
public int Id { get; }
    [RemoteAttribute]
public bool IsDocLib { get; }
    [RemoteAttribute]
public bool IsExternal { get; }
    [RemoteAttribute]
public bool IsVisible { get; public set; }
    [RemoteAttribute]
public ListTemplateType ListTemplateType { get; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public UserResource TitleResource { get; }
    [RemoteAttribute]
public string Url { get; public set; }
    [EditorBrowsableAttribute("1")]
public NavigationNode(ClientRuntimeContext context, ObjectPath objectPath);
    internal void InitFromCreationInformation(NavigationNodeCreationInformation creation);
    public IList`1<Guid> get_AudienceIds();
    public void set_AudienceIds(IList`1<Guid> value);
    public NavigationNodeCollection get_Children();
    public int get_CurrentLCID();
    public int get_Id();
    public bool get_IsDocLib();
    public bool get_IsExternal();
    public bool get_IsVisible();
    public void set_IsVisible(bool value);
    public ListTemplateType get_ListTemplateType();
    public string get_Title();
    public void set_Title(string value);
    public UserResource get_TitleResource();
    public string get_Url();
    public void set_Url(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("SP.NavigationNodeCollection")]
public class Microsoft.SharePoint.Client.NavigationNodeCollection : ClientObjectCollection`1<NavigationNode> {
    [EditorBrowsableAttribute("1")]
public NavigationNodeCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public NavigationNode Add(NavigationNodeCreationInformation parameters);
}
[ScriptTypeAttribute("SP.NavigationNodeCreationInformation")]
public class Microsoft.SharePoint.Client.NavigationNodeCreationInformation : ClientValueObject {
    private bool m_asLastNode;
    private bool m_isExternal;
    private NavigationNode m_previousNode;
    private string m_title;
    private string m_url;
    [RemoteAttribute]
public bool AsLastNode { get; public set; }
    [RemoteAttribute]
public bool IsExternal { get; public set; }
    [RemoteAttribute]
public NavigationNode PreviousNode { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_AsLastNode();
    public void set_AsLastNode(bool value);
    public bool get_IsExternal();
    public void set_IsExternal(bool value);
    public NavigationNode get_PreviousNode();
    public void set_PreviousNode(NavigationNode value);
    public string get_Title();
    public void set_Title(string value);
    public string get_Url();
    public void set_Url(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.NavigationNodeObjectPropertyNames : object {
    public static string Children;
    public static string TitleResource;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.NavigationNodePropertyNames : object {
    public static string AudienceIds;
    public static string CurrentLCID;
    public static string Id;
    public static string IsDocLib;
    public static string IsExternal;
    public static string IsVisible;
    public static string ListTemplateType;
    public static string Title;
    public static string Url;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.NavigationObjectPropertyNames : object {
    public static string QuickLaunch;
    public static string TopNavigationBar;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.NavigationPropertyNames : object {
    public static string UseShared;
}
[ScriptTypeAttribute("SP.NewsCollection")]
public static class Microsoft.SharePoint.Client.NewsCollection : object {
    [RemoteAttribute]
public static ClientResult`1<ItemsList> MultiSiteNews(ClientRuntimeContext context, string multiSiteJson, int start, int count, bool filterByAudience, string languageOverride);
    [RemoteAttribute]
public static ClientResult`1<ItemsList> HubNews(ClientRuntimeContext context, Guid departmentId, int start, int count, bool filterByAudience, string languageOverride);
    [RemoteAttribute]
public static ClientResult`1<ItemsList> MultiHubNews(ClientRuntimeContext context, string multiHubJson, int start, int count, bool filterByAudience, string languageOverride);
}
[ScriptTypeAttribute("SP.OAuth.NativeClient")]
public class Microsoft.SharePoint.Client.OAuth.NativeClient : ClientObject {
    public NativeClient(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public NativeClient(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public void Authenticate();
}
[ScriptTypeAttribute("SP.ObjectSharingInformation")]
public class Microsoft.SharePoint.Client.ObjectSharingInformation : ClientObject {
    [RemoteAttribute]
public string AnonymousEditLink { get; }
    [RemoteAttribute]
public string AnonymousViewLink { get; }
    [RemoteAttribute]
public bool CanBeShared { get; }
    [RemoteAttribute]
public bool CanBeUnshared { get; }
    [RemoteAttribute]
public bool CanManagePermissions { get; }
    [RemoteAttribute]
public bool HasPendingAccessRequests { get; }
    [RemoteAttribute]
public bool HasPermissionLevels { get; }
    [RemoteAttribute]
public bool IsFolder { get; }
    [RemoteAttribute]
public bool IsSharedWithCurrentUser { get; }
    [RemoteAttribute]
public bool IsSharedWithGuest { get; }
    [RemoteAttribute]
public bool IsSharedWithMany { get; }
    [RemoteAttribute]
public bool IsSharedWithSecurityGroup { get; }
    [RemoteAttribute]
public string PendingAccessRequestsLink { get; }
    [RemoteAttribute]
public ObjectSharingInformationUserCollection SharedWithUsersCollection { get; }
    [RemoteAttribute]
public IEnumerable`1<SharingLinkInfo> SharingLinks { get; }
    [RemoteAttribute]
public ulong TotalFileCount { get; }
    [EditorBrowsableAttribute("1")]
public ObjectSharingInformation(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_AnonymousEditLink();
    public string get_AnonymousViewLink();
    public bool get_CanBeShared();
    public bool get_CanBeUnshared();
    public bool get_CanManagePermissions();
    public bool get_HasPendingAccessRequests();
    public bool get_HasPermissionLevels();
    public bool get_IsFolder();
    public bool get_IsSharedWithCurrentUser();
    public bool get_IsSharedWithGuest();
    public bool get_IsSharedWithMany();
    public bool get_IsSharedWithSecurityGroup();
    public string get_PendingAccessRequestsLink();
    public ObjectSharingInformationUserCollection get_SharedWithUsersCollection();
    public IEnumerable`1<SharingLinkInfo> get_SharingLinks();
    public ulong get_TotalFileCount();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ClientObjectList`1<ObjectSharingInformationUser> GetSharedWithUsers();
    [RemoteAttribute]
public static ObjectSharingInformation GetListItemSharingInformation(ClientRuntimeContext context, Guid listID, int itemID, bool excludeCurrentUser, bool excludeSiteAdmin, bool excludeSecurityGroups, bool retrieveAnonymousLinks, bool retrieveUserInfoDetails, bool checkForAccessRequests);
    [RemoteAttribute]
public static ObjectSharingInformation GetWebSharingInformation(ClientRuntimeContext context, bool excludeCurrentUser, bool excludeSiteAdmin, bool excludeSecurityGroups, bool retrieveAnonymousLinks, bool retrieveUserInfoDetails, bool checkForAccessRequests);
    [RemoteAttribute]
public static ObjectSharingInformation GetObjectSharingInformation(ClientRuntimeContext context, SecurableObject securableObject, bool excludeCurrentUser, bool excludeSiteAdmin, bool excludeSecurityGroups, bool retrieveAnonymousLinks, bool retrieveUserInfoDetails, bool checkForAccessRequests, bool retrievePermissionLevels);
    [RemoteAttribute]
public static ObjectSharingInformation GetObjectSharingInformationByUrl(ClientRuntimeContext context, string objectUrl, bool excludeCurrentUser, bool excludeSiteAdmin, bool excludeSecurityGroups, bool retrieveAnonymousLinks, bool retrieveUserInfoDetails, bool checkForAccessRequests, bool retrievePermissionLevels);
    [RemoteAttribute]
public static ObjectSharingInformation GetObjectSharingInformation2(ClientRuntimeContext context, SecurableObject securableObject, bool excludeCurrentUser, bool excludeSiteAdmin, bool excludeSecurityGroups, bool retrieveAnonymousLinks, bool retrieveUserInfoDetails, bool checkForAccessRequests, bool retrievePermissionLevels, bool forceRetrievePermissionLevels);
    [RemoteAttribute]
public static ClientResult`1<UserSharingCapabilities> CanCurrentUserShare(ClientRuntimeContext context, string docId);
    [RemoteAttribute]
public static ClientResult`1<UserSharingCapabilities> CanCurrentUserShareRemote(ClientRuntimeContext context, string docId);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ObjectSharingInformationObjectPropertyNames : object {
    public static string SharedWithUsersCollection;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ObjectSharingInformationPropertyNames : object {
    public static string AnonymousEditLink;
    public static string AnonymousViewLink;
    public static string CanBeShared;
    public static string CanBeUnshared;
    public static string CanManagePermissions;
    public static string HasPendingAccessRequests;
    public static string HasPermissionLevels;
    public static string IsFolder;
    public static string IsSharedWithCurrentUser;
    public static string IsSharedWithGuest;
    public static string IsSharedWithMany;
    public static string IsSharedWithSecurityGroup;
    public static string PendingAccessRequestsLink;
    public static string SharingLinks;
    public static string TotalFileCount;
}
[ScriptTypeAttribute("SP.ObjectSharingInformationUser")]
public class Microsoft.SharePoint.Client.ObjectSharingInformationUser : ClientObject {
    [RemoteAttribute]
public string CustomRoleNames { get; }
    [RemoteAttribute]
public string Department { get; }
    [RemoteAttribute]
public string Email { get; }
    [RemoteAttribute]
public bool HasEditPermission { get; }
    [RemoteAttribute]
public bool HasReviewPermission { get; }
    [RemoteAttribute]
public bool HasViewPermission { get; }
    [RemoteAttribute]
public int Id { get; }
    [RemoteAttribute]
public bool IsDomainGroup { get; }
    [RemoteAttribute]
public bool IsExternalUser { get; }
    [RemoteAttribute]
public bool IsMemberOfGroup { get; }
    [RemoteAttribute]
public bool IsSiteAdmin { get; }
    [RemoteAttribute]
public string JobTitle { get; }
    [RemoteAttribute]
public string LoginName { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public string Picture { get; }
    [RemoteAttribute]
public Principal Principal { get; }
    [RemoteAttribute]
public string SipAddress { get; }
    [RemoteAttribute]
public User User { get; }
    [EditorBrowsableAttribute("1")]
public ObjectSharingInformationUser(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_CustomRoleNames();
    public string get_Department();
    public string get_Email();
    public bool get_HasEditPermission();
    public bool get_HasReviewPermission();
    public bool get_HasViewPermission();
    public int get_Id();
    public bool get_IsDomainGroup();
    public bool get_IsExternalUser();
    public bool get_IsMemberOfGroup();
    public bool get_IsSiteAdmin();
    public string get_JobTitle();
    public string get_LoginName();
    public string get_Name();
    public string get_Picture();
    public Principal get_Principal();
    public string get_SipAddress();
    public User get_User();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ObjectSharingInformationUserCollection")]
public class Microsoft.SharePoint.Client.ObjectSharingInformationUserCollection : ClientObjectCollection`1<ObjectSharingInformationUser> {
    [EditorBrowsableAttribute("1")]
public ObjectSharingInformationUserCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ObjectSharingInformationUserObjectPropertyNames : object {
    public static string Principal;
    public static string User;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ObjectSharingInformationUserPropertyNames : object {
    public static string CustomRoleNames;
    public static string Department;
    public static string Email;
    public static string HasEditPermission;
    public static string HasReviewPermission;
    public static string HasViewPermission;
    public static string Id;
    public static string IsDomainGroup;
    public static string IsExternalUser;
    public static string IsMemberOfGroup;
    public static string IsSiteAdmin;
    public static string JobTitle;
    public static string LoginName;
    public static string Name;
    public static string Picture;
    public static string SipAddress;
}
[ScriptTypeAttribute("SP.ObjectSharingSettings")]
public class Microsoft.SharePoint.Client.ObjectSharingSettings : ClientObject {
    [RemoteAttribute]
public bool AccessRequestMode { get; }
    [RemoteAttribute]
public bool BlockPeoplePickerAndSharing { get; }
    [RemoteAttribute]
public bool CanCurrentUserManageOrganizationReadonlyLink { get; }
    [RemoteAttribute]
public bool CanCurrentUserManageOrganizationReadWriteLink { get; }
    [RemoteAttribute]
public bool CanCurrentUserManageReadonlyLink { get; }
    [RemoteAttribute]
public bool CanCurrentUserManageReadWriteLink { get; }
    [RemoteAttribute]
public bool CanCurrentUserRetrieveOrganizationReadonlyLink { get; }
    [RemoteAttribute]
public bool CanCurrentUserRetrieveOrganizationReadWriteLink { get; }
    [RemoteAttribute]
public bool CanCurrentUserRetrieveReadonlyLink { get; }
    [RemoteAttribute]
public bool CanCurrentUserRetrieveReadWriteLink { get; }
    [RemoteAttribute]
public bool CanCurrentUserShareExternally { get; }
    [RemoteAttribute]
public bool CanCurrentUserShareInternally { get; }
    [RemoteAttribute]
public bool CanCurrentUserShareToExistingGuests { get; }
    [RemoteAttribute]
public bool CanSendEmail { get; }
    [RemoteAttribute]
public bool CanSendLink { get; }
    [RemoteAttribute]
public bool CanShareFolder { get; }
    [RemoteAttribute]
public Role DefaultShareLinkPermission { get; }
    [RemoteAttribute]
public SharingLinkKind DefaultShareLinkType { get; }
    [RemoteAttribute]
public bool EnforceIBSegmentFiltering { get; }
    [RemoteAttribute]
public bool EnforceSPOSearch { get; }
    [RemoteAttribute]
public IDictionary`2<string, string> GroupsList { get; }
    [RemoteAttribute]
public bool HasEditRole { get; }
    [RemoteAttribute]
public bool HasReadRole { get; }
    [RemoteAttribute]
public string InheritingWebLink { get; }
    [RemoteAttribute]
public bool IsGuestUser { get; }
    [RemoteAttribute]
public bool IsPictureLibrary { get; }
    [RemoteAttribute]
public bool IsUserSiteAdmin { get; }
    [RemoteAttribute]
public string ItemId { get; }
    [RemoteAttribute]
public string ItemName { get; }
    [RemoteAttribute]
public string ItemUrl { get; }
    [RemoteAttribute]
public Guid ListId { get; }
    [RemoteAttribute]
public ObjectSharingInformation ObjectSharingInformation { get; }
    [RemoteAttribute]
public bool PermissionsOnlyMode { get; }
    [RemoteAttribute]
public int RequiredAnonymousLinkExpirationInDays { get; }
    [RemoteAttribute]
public IDictionary`2<string, string> Roles { get; }
    [RemoteAttribute]
public bool ShareByEmailEnabled { get; }
    [RemoteAttribute]
public SharePointSharingSettings SharePointSettings { get; }
    [RemoteAttribute]
public SharingPermissionInformationCollection SharingPermissions { get; }
    [RemoteAttribute]
public bool ShowExternalSharingWarning { get; }
    [RemoteAttribute]
public IDictionary`2<string, string> SimplifiedRoles { get; }
    [RemoteAttribute]
public string SiteIBMode { get; }
    [RemoteAttribute]
public String[] SiteIBSegmentIDs { get; }
    [RemoteAttribute]
public bool SupportsAclPropagation { get; }
    [RemoteAttribute]
public string WebUrl { get; }
    [EditorBrowsableAttribute("1")]
public ObjectSharingSettings(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_AccessRequestMode();
    public bool get_BlockPeoplePickerAndSharing();
    public bool get_CanCurrentUserManageOrganizationReadonlyLink();
    public bool get_CanCurrentUserManageOrganizationReadWriteLink();
    public bool get_CanCurrentUserManageReadonlyLink();
    public bool get_CanCurrentUserManageReadWriteLink();
    public bool get_CanCurrentUserRetrieveOrganizationReadonlyLink();
    public bool get_CanCurrentUserRetrieveOrganizationReadWriteLink();
    public bool get_CanCurrentUserRetrieveReadonlyLink();
    public bool get_CanCurrentUserRetrieveReadWriteLink();
    public bool get_CanCurrentUserShareExternally();
    public bool get_CanCurrentUserShareInternally();
    public bool get_CanCurrentUserShareToExistingGuests();
    public bool get_CanSendEmail();
    public bool get_CanSendLink();
    public bool get_CanShareFolder();
    public Role get_DefaultShareLinkPermission();
    public SharingLinkKind get_DefaultShareLinkType();
    public bool get_EnforceIBSegmentFiltering();
    public bool get_EnforceSPOSearch();
    public IDictionary`2<string, string> get_GroupsList();
    public bool get_HasEditRole();
    public bool get_HasReadRole();
    public string get_InheritingWebLink();
    public bool get_IsGuestUser();
    public bool get_IsPictureLibrary();
    public bool get_IsUserSiteAdmin();
    public string get_ItemId();
    public string get_ItemName();
    public string get_ItemUrl();
    public Guid get_ListId();
    public ObjectSharingInformation get_ObjectSharingInformation();
    public bool get_PermissionsOnlyMode();
    public int get_RequiredAnonymousLinkExpirationInDays();
    public IDictionary`2<string, string> get_Roles();
    public bool get_ShareByEmailEnabled();
    public SharePointSharingSettings get_SharePointSettings();
    public SharingPermissionInformationCollection get_SharingPermissions();
    public bool get_ShowExternalSharingWarning();
    public IDictionary`2<string, string> get_SimplifiedRoles();
    public string get_SiteIBMode();
    public String[] get_SiteIBSegmentIDs();
    public bool get_SupportsAclPropagation();
    public string get_WebUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ObjectSharingSettingsObjectPropertyNames : object {
    public static string ObjectSharingInformation;
    public static string SharePointSettings;
    public static string SharingPermissions;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ObjectSharingSettingsPropertyNames : object {
    public static string AccessRequestMode;
    public static string BlockPeoplePickerAndSharing;
    public static string CanCurrentUserManageOrganizationReadonlyLink;
    public static string CanCurrentUserManageOrganizationReadWriteLink;
    public static string CanCurrentUserManageReadonlyLink;
    public static string CanCurrentUserManageReadWriteLink;
    public static string CanCurrentUserRetrieveOrganizationReadonlyLink;
    public static string CanCurrentUserRetrieveOrganizationReadWriteLink;
    public static string CanCurrentUserRetrieveReadonlyLink;
    public static string CanCurrentUserRetrieveReadWriteLink;
    public static string CanCurrentUserShareExternally;
    public static string CanCurrentUserShareInternally;
    public static string CanCurrentUserShareToExistingGuests;
    public static string CanSendEmail;
    public static string CanSendLink;
    public static string CanShareFolder;
    public static string DefaultShareLinkPermission;
    public static string DefaultShareLinkType;
    public static string EnforceIBSegmentFiltering;
    public static string EnforceSPOSearch;
    public static string GroupsList;
    public static string HasEditRole;
    public static string HasReadRole;
    public static string InheritingWebLink;
    public static string IsGuestUser;
    public static string IsPictureLibrary;
    public static string IsUserSiteAdmin;
    public static string ItemId;
    public static string ItemName;
    public static string ItemUrl;
    public static string ListId;
    public static string PermissionsOnlyMode;
    public static string RequiredAnonymousLinkExpirationInDays;
    public static string Roles;
    public static string ShareByEmailEnabled;
    public static string ShowExternalSharingWarning;
    public static string SimplifiedRoles;
    public static string SiteIBMode;
    public static string SiteIBSegmentIDs;
    public static string SupportsAclPropagation;
    public static string WebUrl;
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.OpenWebOptions : Enum {
    public int value__;
    public static OpenWebOptions None;
    public static OpenWebOptions InitNavigationCache;
    public static OpenWebOptions InitExtendedWebProperties;
}
[ScriptTypeAttribute("SP.OpenWebParameters")]
public class Microsoft.SharePoint.Client.OpenWebParameters : ClientObject {
    [EditorBrowsableAttribute("1")]
public OpenWebParameters(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.OrganizationNews")]
public class Microsoft.SharePoint.Client.OrganizationNews : ClientObject {
    public OrganizationNews(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public OrganizationNews(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static ClientResult`1<OrganizationNewsSiteReference> GetSiteReference(ClientRuntimeContext context, string orgNewsSiteUrl, bool validate);
}
[ScriptTypeAttribute("SP.OrganizationNewsSiteReference")]
public class Microsoft.SharePoint.Client.OrganizationNewsSiteReference : PortalAndOrgNewsSiteReference {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
public enum Microsoft.SharePoint.Client.OutputFileFormat : Enum {
    public int value__;
    public static OutputFileFormat Docx;
    public static OutputFileFormat Pdf;
}
[ScriptTypeAttribute("SP.PageInstrumentation.ClickManager")]
public static class Microsoft.SharePoint.Client.PageInstrumentation.ClickManager : object {
    [RemoteAttribute]
public static void RecordClick(ClientRuntimeContext context, string pageCorrelationId, string clickType, string clickData, DateTime clickUTCTime);
}
[ScriptTypeAttribute("SP.PageInstrumentation.PageImpressionClient")]
public class Microsoft.SharePoint.Client.PageInstrumentation.PageImpressionClient : ClientValueObject {
    private string m_basePageCorrelationId;
    private IDictionary`2<string, string> m_clientIdToClickInfoMap;
    [RemoteAttribute]
public string BasePageCorrelationId { get; }
    [RemoteAttribute]
public IDictionary`2<string, string> ClientIdToClickInfoMap { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_BasePageCorrelationId();
    public IDictionary`2<string, string> get_ClientIdToClickInfoMap();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.PageType : Enum {
    public int value__;
    public static PageType Invalid;
    public static PageType DefaultView;
    public static PageType NormalView;
    public static PageType DialogView;
    public static PageType View;
    public static PageType DisplayForm;
    public static PageType DisplayFormDialog;
    public static PageType EditForm;
    public static PageType EditFormDialog;
    public static PageType NewForm;
    public static PageType NewFormDialog;
    public static PageType SolutionForm;
    public static PageType PAGE_MAXITEMS;
}
public enum Microsoft.SharePoint.Client.PermissionKind : Enum {
    public int value__;
    public static PermissionKind EmptyMask;
    public static PermissionKind ViewListItems;
    public static PermissionKind AddListItems;
    public static PermissionKind EditListItems;
    public static PermissionKind DeleteListItems;
    public static PermissionKind ApproveItems;
    public static PermissionKind OpenItems;
    public static PermissionKind ViewVersions;
    public static PermissionKind DeleteVersions;
    public static PermissionKind CancelCheckout;
    public static PermissionKind ManagePersonalViews;
    public static PermissionKind ManageLists;
    public static PermissionKind ViewFormPages;
    public static PermissionKind AnonymousSearchAccessList;
    public static PermissionKind Open;
    public static PermissionKind ViewPages;
    public static PermissionKind AddAndCustomizePages;
    public static PermissionKind ApplyThemeAndBorder;
    public static PermissionKind ApplyStyleSheets;
    public static PermissionKind ViewUsageData;
    public static PermissionKind CreateSSCSite;
    public static PermissionKind ManageSubwebs;
    public static PermissionKind CreateGroups;
    public static PermissionKind ManagePermissions;
    public static PermissionKind BrowseDirectories;
    public static PermissionKind BrowseUserInfo;
    public static PermissionKind AddDelPrivateWebParts;
    public static PermissionKind UpdatePersonalWebParts;
    public static PermissionKind ManageWeb;
    public static PermissionKind AnonymousSearchAccessWebLists;
    public static PermissionKind UseClientIntegration;
    public static PermissionKind UseRemoteAPIs;
    public static PermissionKind ManageAlerts;
    public static PermissionKind CreateAlerts;
    public static PermissionKind EditMyUserInfo;
    public static PermissionKind EnumeratePermissions;
    public static PermissionKind FullMask;
}
[ScriptTypeAttribute("SP.PersonalListsProxy")]
public static class Microsoft.SharePoint.Client.PersonalListsProxy : object {
    [RemoteAttribute]
public static ClientResult`1<Stream> GetPersonalListsProxy(ClientRuntimeContext context, int sortBy, string templateTypeId);
}
[ScriptTypeAttribute("SP.PickerSettings")]
public class Microsoft.SharePoint.Client.PickerSettings : ClientObject {
    [RemoteAttribute]
public bool AllowEmailAddresses { get; }
    [RemoteAttribute]
public bool AllowOnlyEmailAddresses { get; }
    [RemoteAttribute]
public string PrincipalAccountType { get; }
    [RemoteAttribute]
public PrincipalSource PrincipalSource { get; }
    [RemoteAttribute]
public PeoplePickerQuerySettings QuerySettings { get; }
    [RemoteAttribute]
public bool UseSubstrateSearch { get; }
    [RemoteAttribute]
public int VisibleSuggestions { get; }
    [EditorBrowsableAttribute("1")]
public PickerSettings(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_AllowEmailAddresses();
    public bool get_AllowOnlyEmailAddresses();
    public string get_PrincipalAccountType();
    public PrincipalSource get_PrincipalSource();
    public PeoplePickerQuerySettings get_QuerySettings();
    public bool get_UseSubstrateSearch();
    public int get_VisibleSuggestions();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.PickerSettingsPropertyNames : object {
    public static string AllowEmailAddresses;
    public static string AllowOnlyEmailAddresses;
    public static string PrincipalAccountType;
    public static string PrincipalSource;
    public static string QuerySettings;
    public static string UseSubstrateSearch;
    public static string VisibleSuggestions;
}
[ScriptTypeAttribute("SP.PinnedItems")]
public static class Microsoft.SharePoint.Client.PinnedItems : object {
    [RemoteAttribute]
public static ClientResult`1<FavoriteListHomeItem[]> GetItemsBy(ClientRuntimeContext context, string siteId, string listId);
    [RemoteAttribute]
public static ClientResult`1<FavoriteListHomeItem> AddItem(ClientRuntimeContext context, FavoriteListHomeItem pinnedItem);
    [RemoteAttribute]
public static ClientResult`1<FavoriteListHomeItem> UpdateItem(ClientRuntimeContext context, FavoriteListHomeItem pinnedItem);
    [RemoteAttribute]
public static ClientResult`1<FavoriteListHomeItem> RemoveItem(ClientRuntimeContext context, string siteId, string listId, string webId);
    [RemoteAttribute]
public static void ReorderList(ClientRuntimeContext context, FavoriteListHomeItem itemToReorder, FavoriteListHomeItem itemBefore, FavoriteListHomeItem itemAfter);
}
[ScriptTypeAttribute("SP.PivotItem")]
public class Microsoft.SharePoint.Client.PivotItem : ClientValueObject {
    private String[] m_audiences;
    private string m_name;
    [RemoteAttribute]
public String[] Audiences { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public String[] get_Audiences();
    public void set_Audiences(String[] value);
    public string get_Name();
    public void set_Name(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Placeholder")]
public class Microsoft.SharePoint.Client.Placeholder : ClientValueObject {
    private string m_dataType;
    private int m_endPosition;
    private string m_id;
    private string m_name;
    private string m_paragraphId;
    private string m_questionTitle;
    private string m_source;
    private int m_startPosition;
    [RemoteAttribute]
public string DataType { get; public set; }
    [RemoteAttribute]
public int EndPosition { get; public set; }
    [RemoteAttribute]
public string Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string ParagraphId { get; public set; }
    [RemoteAttribute]
public string QuestionTitle { get; public set; }
    [RemoteAttribute]
public string Source { get; public set; }
    [RemoteAttribute]
public int StartPosition { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DataType();
    public void set_DataType(string value);
    public int get_EndPosition();
    public void set_EndPosition(int value);
    public string get_Id();
    public void set_Id(string value);
    public string get_Name();
    public void set_Name(string value);
    public string get_ParagraphId();
    public void set_ParagraphId(string value);
    public string get_QuestionTitle();
    public void set_QuestionTitle(string value);
    public string get_Source();
    public void set_Source(string value);
    public int get_StartPosition();
    public void set_StartPosition(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.PlaceholderV2")]
public class Microsoft.SharePoint.Client.PlaceholderV2 : ClientValueObject {
    private string m_additionalFieldsData;
    private string m_columnId;
    private string m_columnInternalName;
    private string m_dataType;
    private string m_fieldLibraryMappedId;
    private string m_fieldLibraryMappedVersion;
    private string m_id;
    private bool m_isColumnMappingActive;
    private bool m_isMandatory;
    private string m_name;
    private string m_questionTitle;
    private string m_source;
    [RemoteAttribute]
public string AdditionalFieldsData { get; public set; }
    [RemoteAttribute]
public string ColumnId { get; public set; }
    [RemoteAttribute]
public string ColumnInternalName { get; public set; }
    [RemoteAttribute]
public string DataType { get; public set; }
    [RemoteAttribute]
public string FieldLibraryMappedId { get; public set; }
    [RemoteAttribute]
public string FieldLibraryMappedVersion { get; public set; }
    [RemoteAttribute]
public string Id { get; public set; }
    [RemoteAttribute]
public bool IsColumnMappingActive { get; public set; }
    [RemoteAttribute]
public bool IsMandatory { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string QuestionTitle { get; public set; }
    [RemoteAttribute]
public string Source { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AdditionalFieldsData();
    public void set_AdditionalFieldsData(string value);
    public string get_ColumnId();
    public void set_ColumnId(string value);
    public string get_ColumnInternalName();
    public void set_ColumnInternalName(string value);
    public string get_DataType();
    public void set_DataType(string value);
    public string get_FieldLibraryMappedId();
    public void set_FieldLibraryMappedId(string value);
    public string get_FieldLibraryMappedVersion();
    public void set_FieldLibraryMappedVersion(string value);
    public string get_Id();
    public void set_Id(string value);
    public bool get_IsColumnMappingActive();
    public void set_IsColumnMappingActive(bool value);
    public bool get_IsMandatory();
    public void set_IsMandatory(bool value);
    public string get_Name();
    public void set_Name(string value);
    public string get_QuestionTitle();
    public void set_QuestionTitle(string value);
    public string get_Source();
    public void set_Source(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.PolicyTipUserAction : Enum {
    public int value__;
    public static PolicyTipUserAction Override;
    public static PolicyTipUserAction ReportFalsePositive;
}
public enum Microsoft.SharePoint.Client.PolicyTipUserActionResult : Enum {
    public int value__;
    public static PolicyTipUserActionResult None;
    public static PolicyTipUserActionResult FalsePositiveReported;
    public static PolicyTipUserActionResult Overridden;
    public static PolicyTipUserActionResult FalsePositiveReportedAndOverridden;
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.PortalAndOrgNews.TargetedSiteFlags : Enum {
    public int value__;
    public static TargetedSiteFlags None;
    public static TargetedSiteFlags IsVivaBackend;
    public static TargetedSiteFlags IsVivaHomeOptedOut;
    public static TargetedSiteFlags IsInDraftMode;
    public static TargetedSiteFlags IsTargetedForFrontlineWorker;
    public static TargetedSiteFlags IsTargetedForInformationWorker;
    public static TargetedSiteFlags IsGoBackToConnectionsButtonDisabled;
}
[ScriptTypeAttribute("SP.PortalAndOrgNewsSiteReference")]
public class Microsoft.SharePoint.Client.PortalAndOrgNewsSiteReference : ClientValueObject {
    private bool m_isInDraftMode;
    private bool m_isVivaBackend;
    private Guid m_siteId;
    private Guid m_webId;
    [RemoteAttribute]
public bool IsInDraftMode { get; public set; }
    [RemoteAttribute]
public bool IsVivaBackend { get; public set; }
    [RemoteAttribute]
public Guid SiteId { get; public set; }
    [RemoteAttribute]
public Guid WebId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_IsInDraftMode();
    public void set_IsInDraftMode(bool value);
    public bool get_IsVivaBackend();
    public void set_IsVivaBackend(bool value);
    public Guid get_SiteId();
    public void set_SiteId(Guid value);
    public Guid get_WebId();
    public void set_WebId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Principal")]
public class Microsoft.SharePoint.Client.Principal : ClientObject {
    [RemoteAttribute]
public int Id { get; }
    [RemoteAttribute]
public bool IsHiddenInUI { get; }
    [RemoteAttribute]
public string LoginName { get; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public PrincipalType PrincipalType { get; }
    [EditorBrowsableAttribute("1")]
public Principal(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_Id();
    public bool get_IsHiddenInUI();
    public string get_LoginName();
    public string get_Title();
    public void set_Title(string value);
    public PrincipalType get_PrincipalType();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.PrincipalPropertyNames : object {
    public static string Id;
    public static string IsHiddenInUI;
    public static string LoginName;
    public static string Title;
    public static string PrincipalType;
}
[DefaultMemberAttribute("Item")]
[ScriptTypeAttribute("SP.PropertyValues")]
public class Microsoft.SharePoint.Client.PropertyValues : ClientObject {
    public Dictionary`2<string, object> FieldValues { get; }
    public object Item { get; public set; }
    [EditorBrowsableAttribute("1")]
public PropertyValues(ClientRuntimeContext context, ObjectPath objectPath);
    public Dictionary`2<string, object> get_FieldValues();
    [PseudoRemoteAttribute]
public object get_Item(string fieldName);
    [RemoteAttribute]
public void set_Item(string fieldName, object value);
    protected virtual void InitNonPropertyFieldFromJson(string peekedName, JsonReader reader);
    [PseudoRemoteAttribute]
internal object GetFieldValue(string fieldName);
    public virtual void RefreshLoad();
    protected virtual void LoadExpandoFields();
    [RemoteAttribute]
internal virtual void SetFieldValue(string fieldName, object value);
}
[ScriptTypeAttribute("SP.ProvisionedMigrationContainersInfo")]
public class Microsoft.SharePoint.Client.ProvisionedMigrationContainersInfo : ClientValueObject {
    private string m_dataContainerUri;
    private Byte[] m_encryptionKey;
    private string m_metadataContainerUri;
    [RemoteAttribute]
public string DataContainerUri { get; public set; }
    [RemoteAttribute]
public Byte[] EncryptionKey { get; public set; }
    [RemoteAttribute]
public string MetadataContainerUri { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DataContainerUri();
    public void set_DataContainerUri(string value);
    public Byte[] get_EncryptionKey();
    public void set_EncryptionKey(Byte[] value);
    public string get_MetadataContainerUri();
    public void set_MetadataContainerUri(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ProvisionedMigrationQueueInfo")]
public class Microsoft.SharePoint.Client.ProvisionedMigrationQueueInfo : ClientValueObject {
    private string m_jobQueueUri;
    [RemoteAttribute]
public string JobQueueUri { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_JobQueueUri();
    public void set_JobQueueUri(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ProvisionedTemporaryAzureContainerInfo")]
public class Microsoft.SharePoint.Client.ProvisionedTemporaryAzureContainerInfo : ClientValueObject {
    private Byte[] m_encryptionKey;
    private string m_uri;
    [RemoteAttribute]
public Byte[] EncryptionKey { get; public set; }
    [RemoteAttribute]
public string Uri { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Byte[] get_EncryptionKey();
    public void set_EncryptionKey(Byte[] value);
    public string get_Uri();
    public void set_Uri(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.PublishModernTemplatePayload")]
public class Microsoft.SharePoint.Client.PublishModernTemplatePayload : ClientValueObject {
    private bool m_disableSearchAndApprovals;
    private IEnumerable`1<PlaceholderV2> m_placeholders;
    private IEnumerable`1<Snippet> m_snippets;
    private string m_url;
    [RemoteAttribute]
public bool DisableSearchAndApprovals { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<PlaceholderV2> Placeholders { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<Snippet> Snippets { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_DisableSearchAndApprovals();
    public void set_DisableSearchAndApprovals(bool value);
    public IEnumerable`1<PlaceholderV2> get_Placeholders();
    public void set_Placeholders(IEnumerable`1<PlaceholderV2> value);
    public IEnumerable`1<Snippet> get_Snippets();
    public void set_Snippets(IEnumerable`1<Snippet> value);
    public string get_Url();
    public void set_Url(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.PublishSnippetPayload")]
public class Microsoft.SharePoint.Client.PublishSnippetPayload : ClientValueObject {
    private IEnumerable`1<PlaceholderV2> m_placeholders;
    private string m_url;
    [RemoteAttribute]
public IEnumerable`1<PlaceholderV2> Placeholders { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IEnumerable`1<PlaceholderV2> get_Placeholders();
    public void set_Placeholders(IEnumerable`1<PlaceholderV2> value);
    public string get_Url();
    public void set_Url(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.PublishTemplateV2Payload")]
public class Microsoft.SharePoint.Client.PublishTemplateV2Payload : ClientValueObject {
    private string m_destinationListContentTypeId;
    private string m_destinationSiteContentTypeId;
    private IEnumerable`1<PlaceholderV2> m_placeholders;
    private IEnumerable`1<Snippet> m_snippets;
    private string m_url;
    [RemoteAttribute]
public string DestinationListContentTypeId { get; public set; }
    [RemoteAttribute]
public string DestinationSiteContentTypeId { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<PlaceholderV2> Placeholders { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<Snippet> Snippets { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DestinationListContentTypeId();
    public void set_DestinationListContentTypeId(string value);
    public string get_DestinationSiteContentTypeId();
    public void set_DestinationSiteContentTypeId(string value);
    public IEnumerable`1<PlaceholderV2> get_Placeholders();
    public void set_Placeholders(IEnumerable`1<PlaceholderV2> value);
    public IEnumerable`1<Snippet> get_Snippets();
    public void set_Snippets(IEnumerable`1<Snippet> value);
    public string get_Url();
    public void set_Url(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.PushNotificationSubscriber")]
public class Microsoft.SharePoint.Client.PushNotificationSubscriber : ClientObject {
    [RemoteAttribute]
public string CustomArgs { get; public set; }
    [RemoteAttribute]
public Guid DeviceAppInstanceId { get; }
    [RemoteAttribute]
public DateTime LastModifiedTimeStamp { get; }
    [RemoteAttribute]
public DateTime RegistrationTimeStamp { get; }
    [RemoteAttribute]
public string ServiceToken { get; public set; }
    [RemoteAttribute]
public string SubscriberType { get; public set; }
    [RemoteAttribute]
public User User { get; }
    [EditorBrowsableAttribute("1")]
public PushNotificationSubscriber(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_CustomArgs();
    public void set_CustomArgs(string value);
    public Guid get_DeviceAppInstanceId();
    public DateTime get_LastModifiedTimeStamp();
    public DateTime get_RegistrationTimeStamp();
    public string get_ServiceToken();
    public void set_ServiceToken(string value);
    public string get_SubscriberType();
    public void set_SubscriberType(string value);
    public User get_User();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update();
}
[ScriptTypeAttribute("SP.PushNotificationSubscriberCollection")]
public class Microsoft.SharePoint.Client.PushNotificationSubscriberCollection : ClientObjectCollection`1<PushNotificationSubscriber> {
    [EditorBrowsableAttribute("1")]
public PushNotificationSubscriberCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public PushNotificationSubscriber GetByStoreId(string id);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.PushNotificationSubscriberObjectPropertyNames : object {
    public static string User;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.PushNotificationSubscriberPropertyNames : object {
    public static string CustomArgs;
    public static string DeviceAppInstanceId;
    public static string LastModifiedTimeStamp;
    public static string RegistrationTimeStamp;
    public static string ServiceToken;
    public static string SubscriberType;
}
[ScriptTypeAttribute("SP.QuickAccessItemCollection")]
public static class Microsoft.SharePoint.Client.QuickAccessItemCollection : object {
    [RemoteAttribute]
public static ClientResult`1<string> GetQuickAccessItems(ClientRuntimeContext context);
    [RemoteAttribute]
public static ClientResult`1<string> GetSubstrateQuickAccessItems(ClientRuntimeContext context);
}
public enum Microsoft.SharePoint.Client.QuickLaunchOptions : Enum {
    public int value__;
    public static QuickLaunchOptions Off;
    public static QuickLaunchOptions On;
    public static QuickLaunchOptions DefaultValue;
}
[ScriptTypeAttribute("SP.RecentFileCollection")]
public static class Microsoft.SharePoint.Client.RecentFileCollection : object {
    [RemoteAttribute]
public static ClientResult`1<string> GetRecentFiles(ClientRuntimeContext context, int top);
    [RemoteAttribute]
public static ClientResult`1<string> DeltaSync(ClientRuntimeContext context, int top, string startDateTime, string skipToken);
    [RemoteAttribute]
public static ClientResult`1<string> GetRecommendations(ClientRuntimeContext context, int top);
}
[ScriptTypeAttribute("SP.RecentList")]
public class Microsoft.SharePoint.Client.RecentList : ClientObject {
    [RemoteAttribute]
public string color { get; public set; }
    [RemoteAttribute]
public string createdByName { get; public set; }
    [RemoteAttribute]
public string createdByUpn { get; public set; }
    [RemoteAttribute]
public string createdDate { get; public set; }
    [RemoteAttribute]
public string icon { get; public set; }
    [RemoteAttribute]
public string lastModifiedDate { get; public set; }
    [RemoteAttribute]
public int lastViewDate { get; public set; }
    [RemoteAttribute]
public string lastviewDateTime { get; public set; }
    [RemoteAttribute]
public string listId { get; public set; }
    [RemoteAttribute]
public string listTitle { get; public set; }
    [RemoteAttribute]
public string listUrl { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<CountByDate> listViewCounts { get; public set; }
    [RemoteAttribute]
public bool shouldRemove { get; public set; }
    [RemoteAttribute]
public string siteColor { get; public set; }
    [RemoteAttribute]
public string siteId { get; public set; }
    [RemoteAttribute]
public string siteTitle { get; public set; }
    [RemoteAttribute]
public string siteUrl { get; public set; }
    [RemoteAttribute]
public string templateTypeId { get; public set; }
    [RemoteAttribute]
public string webId { get; public set; }
    [RemoteAttribute]
public string webTemplateConfiguration { get; public set; }
    [EditorBrowsableAttribute("1")]
public RecentList(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_color();
    public void set_color(string value);
    public string get_createdByName();
    public void set_createdByName(string value);
    public string get_createdByUpn();
    public void set_createdByUpn(string value);
    public string get_createdDate();
    public void set_createdDate(string value);
    public string get_icon();
    public void set_icon(string value);
    public string get_lastModifiedDate();
    public void set_lastModifiedDate(string value);
    public int get_lastViewDate();
    public void set_lastViewDate(int value);
    public string get_lastviewDateTime();
    public void set_lastviewDateTime(string value);
    public string get_listId();
    public void set_listId(string value);
    public string get_listTitle();
    public void set_listTitle(string value);
    public string get_listUrl();
    public void set_listUrl(string value);
    public IEnumerable`1<CountByDate> get_listViewCounts();
    public void set_listViewCounts(IEnumerable`1<CountByDate> value);
    public bool get_shouldRemove();
    public void set_shouldRemove(bool value);
    public string get_siteColor();
    public void set_siteColor(string value);
    public string get_siteId();
    public void set_siteId(string value);
    public string get_siteTitle();
    public void set_siteTitle(string value);
    public string get_siteUrl();
    public void set_siteUrl(string value);
    public string get_templateTypeId();
    public void set_templateTypeId(string value);
    public string get_webId();
    public void set_webId(string value);
    public string get_webTemplateConfiguration();
    public void set_webTemplateConfiguration(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RecentListCollection")]
public static class Microsoft.SharePoint.Client.RecentListCollection : object {
    [RemoteAttribute]
public static void UpdateRecentLists(ClientRuntimeContext context, string recentListsJson);
    [RemoteAttribute]
public static void UpdateRecentListsRemote(ClientRuntimeContext context, string recentListsJson);
    [RemoteAttribute]
public static ClientObjectList`1<RecentList> GetRecentLists(ClientRuntimeContext context, int sortBy, string templateTypeId);
    [RemoteAttribute]
public static ClientResult`1<Stream> GetRecentListsWithPageContextInfo(ClientRuntimeContext context, int sortBy, string templateTypeId);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RecentListPropertyNames : object {
    public static string color;
    public static string createdByName;
    public static string createdByUpn;
    public static string createdDate;
    public static string icon;
    public static string lastModifiedDate;
    public static string lastViewDate;
    public static string lastviewDateTime;
    public static string listId;
    public static string listTitle;
    public static string listUrl;
    public static string listViewCounts;
    public static string shouldRemove;
    public static string siteColor;
    public static string siteId;
    public static string siteTitle;
    public static string siteUrl;
    public static string templateTypeId;
    public static string webId;
    public static string webTemplateConfiguration;
}
[ScriptTypeAttribute("SP.RecentListProxy")]
public static class Microsoft.SharePoint.Client.RecentListProxy : object {
    [RemoteAttribute]
public static ClientResult`1<Stream> GetRecentListsProxy(ClientRuntimeContext context, int sortBy, string templateTypeId);
}
[ScriptTypeAttribute("SP.RecipientLimitsInfo")]
public class Microsoft.SharePoint.Client.RecipientLimitsInfo : ClientValueObject {
    private int m_aliasOnly;
    private int m_emailOnly;
    private int m_mixedRecipients;
    private int m_objectIdOnly;
    [RemoteAttribute]
public int AliasOnly { get; public set; }
    [RemoteAttribute]
public int EmailOnly { get; public set; }
    [RemoteAttribute]
public int MixedRecipients { get; public set; }
    [RemoteAttribute]
public int ObjectIdOnly { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_AliasOnly();
    public void set_AliasOnly(int value);
    public int get_EmailOnly();
    public void set_EmailOnly(int value);
    public int get_MixedRecipients();
    public void set_MixedRecipients(int value);
    public int get_ObjectIdOnly();
    public void set_ObjectIdOnly(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RecommendationCollection")]
public static class Microsoft.SharePoint.Client.RecommendationCollection : object {
    [RemoteAttribute]
public static ClientResult`1<string> GetRecommendations(ClientRuntimeContext context, int top);
    [RemoteAttribute]
public static ClientResult`1<string> Dismissed(ClientRuntimeContext context, string recommendationId);
    [RemoteAttribute]
public static ClientResult`1<string> Events(ClientRuntimeContext context, string eventDetails);
}
[ScriptTypeAttribute("SP.RecycleBinItem")]
public class Microsoft.SharePoint.Client.RecycleBinItem : ClientObject {
    [RemoteAttribute]
public User Author { get; }
    [RemoteAttribute]
public string AuthorEmail { get; }
    [RemoteAttribute]
public string AuthorName { get; }
    [RemoteAttribute]
public User DeletedBy { get; }
    [RemoteAttribute]
public string DeletedByEmail { get; }
    [RemoteAttribute]
public string DeletedByName { get; }
    [RemoteAttribute]
public DateTime DeletedDate { get; }
    [RemoteAttribute]
public string DeletedDateLocalFormatted { get; }
    [RemoteAttribute]
public string DirName { get; }
    [RemoteAttribute]
public ResourcePath DirNamePath { get; }
    [RemoteAttribute]
public Guid UniqueId { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public RecycleBinItemState ItemState { get; }
    [RemoteAttribute]
public RecycleBinItemType ItemType { get; }
    [RemoteAttribute]
public string LeafName { get; }
    [RemoteAttribute]
public ResourcePath LeafNamePath { get; }
    [RemoteAttribute]
public long Size { get; }
    [RemoteAttribute]
public string Title { get; }
    [EditorBrowsableAttribute("1")]
public RecycleBinItem(ClientRuntimeContext context, ObjectPath objectPath);
    public User get_Author();
    public string get_AuthorEmail();
    public string get_AuthorName();
    public User get_DeletedBy();
    public string get_DeletedByEmail();
    public string get_DeletedByName();
    public DateTime get_DeletedDate();
    public string get_DeletedDateLocalFormatted();
    public string get_DirName();
    public ResourcePath get_DirNamePath();
    public Guid get_UniqueId();
    public Guid get_Id();
    public RecycleBinItemState get_ItemState();
    public RecycleBinItemType get_ItemType();
    public string get_LeafName();
    public ResourcePath get_LeafNamePath();
    public long get_Size();
    public string get_Title();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void MoveToSecondStage();
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public void Restore();
}
[ScriptTypeAttribute("SP.RecycleBinItemCollection")]
public class Microsoft.SharePoint.Client.RecycleBinItemCollection : ClientObjectCollection`1<RecycleBinItem> {
    [EditorBrowsableAttribute("1")]
public RecycleBinItemCollection(ClientRuntimeContext context, ObjectPath objectPath);
    private void EmptyCollectionData();
    [RemoteAttribute]
public RecycleBinItem GetById(Guid id);
    [RemoteAttribute]
public void MoveAllToSecondStage();
    [RemoteAttribute]
public void DeleteAll();
    [RemoteAttribute]
public void RestoreAll();
    [RemoteAttribute]
public void DeleteAllSecondStageItems();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RecycleBinItemObjectPropertyNames : object {
    public static string Author;
    public static string DeletedBy;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RecycleBinItemPropertyNames : object {
    public static string AuthorEmail;
    public static string AuthorName;
    public static string DeletedByEmail;
    public static string DeletedByName;
    public static string DeletedDate;
    public static string DeletedDateLocalFormatted;
    public static string DirName;
    public static string DirNamePath;
    public static string UniqueId;
    public static string Id;
    public static string ItemState;
    public static string ItemType;
    public static string LeafName;
    public static string LeafNamePath;
    public static string Size;
    public static string Title;
}
public enum Microsoft.SharePoint.Client.RecycleBinItemState : Enum {
    public int value__;
    public static RecycleBinItemState None;
    public static RecycleBinItemState FirstStageRecycleBin;
    public static RecycleBinItemState SecondStageRecycleBin;
}
public enum Microsoft.SharePoint.Client.RecycleBinItemType : Enum {
    public int value__;
    public static RecycleBinItemType None;
    public static RecycleBinItemType File;
    public static RecycleBinItemType FileVersion;
    public static RecycleBinItemType ListItem;
    public static RecycleBinItemType List;
    public static RecycleBinItemType Folder;
    public static RecycleBinItemType FolderWithLists;
    public static RecycleBinItemType Attachment;
    public static RecycleBinItemType ListItemVersion;
    public static RecycleBinItemType CascadeParent;
    public static RecycleBinItemType Web;
    public static RecycleBinItemType App;
}
public enum Microsoft.SharePoint.Client.RecycleBinOrderBy : Enum {
    public int value__;
    public static RecycleBinOrderBy Min;
    public static RecycleBinOrderBy DefaultOrderBy;
    public static RecycleBinOrderBy Title;
    public static RecycleBinOrderBy DirName;
    public static RecycleBinOrderBy Author;
    public static RecycleBinOrderBy DeletedDate;
    public static RecycleBinOrderBy Size;
    public static RecycleBinOrderBy DeletedBy;
    public static RecycleBinOrderBy None;
    public static RecycleBinOrderBy Max;
}
[ScriptTypeAttribute("SP.RecycleBinQueryInformation")]
public class Microsoft.SharePoint.Client.RecycleBinQueryInformation : ClientValueObject {
    private bool m_isAscending;
    private RecycleBinItemState m_itemState;
    private RecycleBinOrderBy m_orderBy;
    private string m_pagingInfo;
    private int m_rowLimit;
    private bool m_showOnlyMyItems;
    [RemoteAttribute]
public bool IsAscending { get; public set; }
    [RemoteAttribute]
public RecycleBinItemState ItemState { get; public set; }
    [RemoteAttribute]
public RecycleBinOrderBy OrderBy { get; public set; }
    [RemoteAttribute]
public string PagingInfo { get; public set; }
    [RemoteAttribute]
public int RowLimit { get; public set; }
    [RemoteAttribute]
public bool ShowOnlyMyItems { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_IsAscending();
    public void set_IsAscending(bool value);
    public RecycleBinItemState get_ItemState();
    public void set_ItemState(RecycleBinItemState value);
    public RecycleBinOrderBy get_OrderBy();
    public void set_OrderBy(RecycleBinOrderBy value);
    public string get_PagingInfo();
    public void set_PagingInfo(string value);
    public int get_RowLimit();
    public void set_RowLimit(int value);
    public bool get_ShowOnlyMyItems();
    public void set_ShowOnlyMyItems(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RegionalSettings")]
public class Microsoft.SharePoint.Client.RegionalSettings : ClientObject {
    [RemoteAttribute]
public short AdjustHijriDays { get; public set; }
    [RemoteAttribute]
public short AlternateCalendarType { get; public set; }
    [RemoteAttribute]
public string AM { get; }
    [RemoteAttribute]
public short CalendarType { get; public set; }
    [RemoteAttribute]
public short Collation { get; public set; }
    [RemoteAttribute]
public UInt32 CollationLCID { get; }
    [RemoteAttribute]
public UInt32 DateFormat { get; }
    [RemoteAttribute]
public string DateSeparator { get; }
    [RemoteAttribute]
public string DecimalSeparator { get; }
    [RemoteAttribute]
public string DigitGrouping { get; }
    [RemoteAttribute]
public UInt32 FirstDayOfWeek { get; public set; }
    [RemoteAttribute]
public short FirstWeekOfYear { get; public set; }
    [RemoteAttribute]
public LanguageCollection InstalledLanguages { get; }
    [RemoteAttribute]
public bool IsEastAsia { get; }
    [RemoteAttribute]
public bool IsRightToLeft { get; }
    [RemoteAttribute]
public bool IsUIRightToLeft { get; }
    [RemoteAttribute]
public string ListSeparator { get; }
    [RemoteAttribute]
public UInt32 LocaleId { get; public set; }
    [RemoteAttribute]
public string NegativeSign { get; }
    [RemoteAttribute]
public UInt32 NegNumberMode { get; }
    [RemoteAttribute]
public string PM { get; }
    [RemoteAttribute]
public string PositiveSign { get; }
    [RemoteAttribute]
public bool ShowWeeks { get; public set; }
    [RemoteAttribute]
public string ThousandSeparator { get; }
    [RemoteAttribute]
public bool Time24 { get; public set; }
    [RemoteAttribute]
public UInt32 TimeMarkerPosition { get; }
    [RemoteAttribute]
public string TimeSeparator { get; }
    [RemoteAttribute]
public TimeZone TimeZone { get; public set; }
    [RemoteAttribute]
public TimeZoneCollection TimeZones { get; }
    [RemoteAttribute]
public short WorkDayEndHour { get; public set; }
    [RemoteAttribute]
public short WorkDays { get; public set; }
    [RemoteAttribute]
public short WorkDayStartHour { get; public set; }
    [EditorBrowsableAttribute("1")]
public RegionalSettings(ClientRuntimeContext context, ObjectPath objectPath);
    public short get_AdjustHijriDays();
    public void set_AdjustHijriDays(short value);
    public short get_AlternateCalendarType();
    public void set_AlternateCalendarType(short value);
    public string get_AM();
    public short get_CalendarType();
    public void set_CalendarType(short value);
    public short get_Collation();
    public void set_Collation(short value);
    public UInt32 get_CollationLCID();
    public UInt32 get_DateFormat();
    public string get_DateSeparator();
    public string get_DecimalSeparator();
    public string get_DigitGrouping();
    public UInt32 get_FirstDayOfWeek();
    public void set_FirstDayOfWeek(UInt32 value);
    public short get_FirstWeekOfYear();
    public void set_FirstWeekOfYear(short value);
    public LanguageCollection get_InstalledLanguages();
    public bool get_IsEastAsia();
    public bool get_IsRightToLeft();
    public bool get_IsUIRightToLeft();
    public string get_ListSeparator();
    public UInt32 get_LocaleId();
    public void set_LocaleId(UInt32 value);
    public string get_NegativeSign();
    public UInt32 get_NegNumberMode();
    public string get_PM();
    public string get_PositiveSign();
    public bool get_ShowWeeks();
    public void set_ShowWeeks(bool value);
    public string get_ThousandSeparator();
    public bool get_Time24();
    public void set_Time24(bool value);
    public UInt32 get_TimeMarkerPosition();
    public string get_TimeSeparator();
    public TimeZone get_TimeZone();
    public void set_TimeZone(TimeZone value);
    public TimeZoneCollection get_TimeZones();
    public short get_WorkDayEndHour();
    public void set_WorkDayEndHour(short value);
    public short get_WorkDays();
    public void set_WorkDays(short value);
    public short get_WorkDayStartHour();
    public void set_WorkDayStartHour(short value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RegionalSettingsObjectPropertyNames : object {
    public static string InstalledLanguages;
    public static string TimeZone;
    public static string TimeZones;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RegionalSettingsPropertyNames : object {
    public static string AdjustHijriDays;
    public static string AlternateCalendarType;
    public static string AM;
    public static string CalendarType;
    public static string Collation;
    public static string CollationLCID;
    public static string DateFormat;
    public static string DateSeparator;
    public static string DecimalSeparator;
    public static string DigitGrouping;
    public static string FirstDayOfWeek;
    public static string FirstWeekOfYear;
    public static string IsEastAsia;
    public static string IsRightToLeft;
    public static string IsUIRightToLeft;
    public static string ListSeparator;
    public static string LocaleId;
    public static string NegativeSign;
    public static string NegNumberMode;
    public static string PM;
    public static string PositiveSign;
    public static string ShowWeeks;
    public static string ThousandSeparator;
    public static string Time24;
    public static string TimeMarkerPosition;
    public static string TimeSeparator;
    public static string WorkDayEndHour;
    public static string WorkDays;
    public static string WorkDayStartHour;
}
[ScriptTypeAttribute("SP.RelatedField")]
public class Microsoft.SharePoint.Client.RelatedField : ClientObject {
    [RemoteAttribute]
public Guid FieldId { get; }
    [RemoteAttribute]
public Guid ListId { get; }
    [RemoteAttribute]
public List LookupList { get; }
    [RemoteAttribute]
public RelationshipDeleteBehaviorType RelationshipDeleteBehavior { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public RelatedField(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_FieldId();
    public Guid get_ListId();
    public List get_LookupList();
    public RelationshipDeleteBehaviorType get_RelationshipDeleteBehavior();
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RelatedFieldCollection")]
public class Microsoft.SharePoint.Client.RelatedFieldCollection : ClientObjectCollection`1<RelatedField> {
    [EditorBrowsableAttribute("1")]
public RelatedFieldCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RelatedFieldObjectPropertyNames : object {
    public static string LookupList;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RelatedFieldPropertyNames : object {
    public static string FieldId;
    public static string ListId;
    public static string RelationshipDeleteBehavior;
    public static string WebId;
}
[ScriptTypeAttribute("SP.RelatedItem")]
public class Microsoft.SharePoint.Client.RelatedItem : ClientValueObject {
    private string m_iconUrl;
    private int m_itemId;
    private string m_listId;
    private string m_title;
    private string m_url;
    private string m_webId;
    [RemoteAttribute]
public string IconUrl { get; public set; }
    [RemoteAttribute]
public int ItemId { get; public set; }
    [RemoteAttribute]
public string ListId { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [RemoteAttribute]
public string WebId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_IconUrl();
    public void set_IconUrl(string value);
    public int get_ItemId();
    public void set_ItemId(int value);
    public string get_ListId();
    public void set_ListId(string value);
    public string get_Title();
    public void set_Title(string value);
    public string get_Url();
    public void set_Url(string value);
    public string get_WebId();
    public void set_WebId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RelatedItemManager")]
public class Microsoft.SharePoint.Client.RelatedItemManager : ClientObject {
    [EditorBrowsableAttribute("1")]
public RelatedItemManager(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static ClientResult`1<RelatedItem[]> GetRelatedItems(ClientRuntimeContext context, string SourceListName, int SourceItemID);
    [RemoteAttribute]
public static ClientResult`1<RelatedItem[]> GetPageOneRelatedItems(ClientRuntimeContext context, string SourceListName, int SourceItemID);
    [RemoteAttribute]
public static void AddSingleLink(ClientRuntimeContext context, string SourceListName, int SourceItemID, string SourceWebUrl, string TargetListName, int TargetItemID, string TargetWebUrl, bool TryAddReverseLink);
    [RemoteAttribute]
public static void AddSingleLinkToUrl(ClientRuntimeContext context, string SourceListName, int SourceItemID, string TargetItemUrl, bool TryAddReverseLink);
    [RemoteAttribute]
public static void AddSingleLinkFromUrl(ClientRuntimeContext context, string SourceItemUrl, string TargetListName, int TargetItemID, bool TryAddReverseLink);
    [RemoteAttribute]
public static void DeleteSingleLink(ClientRuntimeContext context, string SourceListName, int SourceItemID, string SourceWebUrl, string TargetListName, int TargetItemID, string TargetWebUrl, bool TryDeleteReverseLink);
}
public enum Microsoft.SharePoint.Client.RelationshipDeleteBehaviorType : Enum {
    public int value__;
    public static RelationshipDeleteBehaviorType None;
    public static RelationshipDeleteBehaviorType Cascade;
    public static RelationshipDeleteBehaviorType Restrict;
}
[ScriptTypeAttribute("SP.RemoteWeb")]
public class Microsoft.SharePoint.Client.RemoteWeb : ClientObject {
    [RemoteAttribute]
public bool CanSendEmail { get; }
    [RemoteAttribute]
public bool ShareByEmailEnabled { get; }
    [RemoteAttribute]
public bool ShareByLinkEnabled { get; }
    [RemoteAttribute]
public Web Web { get; }
    public RemoteWeb(ClientRuntimeContext context, string requestUrl);
    [EditorBrowsableAttribute("1")]
public RemoteWeb(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_CanSendEmail();
    public bool get_ShareByEmailEnabled();
    public bool get_ShareByLinkEnabled();
    public Web get_Web();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public File GetFileByServerRelativeUrl(string serverRelativeFileUrl);
    [RemoteAttribute]
public File GetFileByServerRelativePath(ResourcePath serverRelatvieFilePath);
    [RemoteAttribute]
public File GetFileByUrl(string fileUrl);
    [RemoteAttribute]
public List GetListById(Guid listGuid);
    [RemoteAttribute]
public List GetListByServerRelativeUrl(string serverRelativeUrl);
    [RemoteAttribute]
public Folder GetFolderByServerRelativeUrl(string serverRelativeUrl);
    [RemoteAttribute]
public Group GetGroupById(int groupId);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RemoteWebObjectPropertyNames : object {
    public static string Web;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RemoteWebPropertyNames : object {
    public static string CanSendEmail;
    public static string ShareByEmailEnabled;
    public static string ShareByLinkEnabled;
}
[ScriptTypeAttribute("SP.RenderListContextMenuDataParameters")]
public class Microsoft.SharePoint.Client.RenderListContextMenuDataParameters : ClientValueObject {
    private string m_cascDelWarnMessage;
    private string m_customAction;
    private string m_field;
    private string m_iD;
    private string m_inplaceFullListSearch;
    private string m_inplaceSearchQuery;
    private string m_isCSR;
    private string m_isXslView;
    private string m_itemId;
    private string m_listViewPageUrl;
    private string m_overrideScope;
    private string m_rootFolder;
    private string m_view;
    private string m_viewCount;
    [RemoteAttribute]
public string CascDelWarnMessage { get; public set; }
    [RemoteAttribute]
public string CustomAction { get; public set; }
    [RemoteAttribute]
public string Field { get; public set; }
    [RemoteAttribute]
public string ID { get; public set; }
    [RemoteAttribute]
public string InplaceFullListSearch { get; public set; }
    [RemoteAttribute]
public string InplaceSearchQuery { get; public set; }
    [RemoteAttribute]
public string IsCSR { get; public set; }
    [RemoteAttribute]
public string IsXslView { get; public set; }
    [RemoteAttribute]
public string ItemId { get; public set; }
    [RemoteAttribute]
public string ListViewPageUrl { get; public set; }
    [RemoteAttribute]
public string OverrideScope { get; public set; }
    [RemoteAttribute]
public string RootFolder { get; public set; }
    [RemoteAttribute]
public string View { get; public set; }
    [RemoteAttribute]
public string ViewCount { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_CascDelWarnMessage();
    public void set_CascDelWarnMessage(string value);
    public string get_CustomAction();
    public void set_CustomAction(string value);
    public string get_Field();
    public void set_Field(string value);
    public string get_ID();
    public void set_ID(string value);
    public string get_InplaceFullListSearch();
    public void set_InplaceFullListSearch(string value);
    public string get_InplaceSearchQuery();
    public void set_InplaceSearchQuery(string value);
    public string get_IsCSR();
    public void set_IsCSR(string value);
    public string get_IsXslView();
    public void set_IsXslView(string value);
    public string get_ItemId();
    public void set_ItemId(string value);
    public string get_ListViewPageUrl();
    public void set_ListViewPageUrl(string value);
    public string get_OverrideScope();
    public void set_OverrideScope(string value);
    public string get_RootFolder();
    public void set_RootFolder(string value);
    public string get_View();
    public void set_View(string value);
    public string get_ViewCount();
    public void set_ViewCount(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.RenderListDataOptions : Enum {
    public int value__;
    public static RenderListDataOptions None;
    public static RenderListDataOptions ContextInfo;
    public static RenderListDataOptions ListData;
    public static RenderListDataOptions ListSchema;
    public static RenderListDataOptions MenuView;
    public static RenderListDataOptions ListContentType;
    public static RenderListDataOptions FileSystemItemId;
    public static RenderListDataOptions ClientFormSchema;
    public static RenderListDataOptions QuickLaunch;
    public static RenderListDataOptions Spotlight;
    public static RenderListDataOptions Visualization;
    public static RenderListDataOptions ViewMetadata;
    public static RenderListDataOptions DisableAutoHyperlink;
    public static RenderListDataOptions EnableMediaTAUrls;
    public static RenderListDataOptions ParentInfo;
    public static RenderListDataOptions PageContextInfo;
    public static RenderListDataOptions ClientSideComponentManifest;
    public static RenderListDataOptions ListAvailableContentTypes;
    public static RenderListDataOptions FolderContentTypeOrder;
    public static RenderListDataOptions GridInitInfo;
    public static RenderListDataOptions SiteUrlAsMediaTASPItemHost;
    public static RenderListDataOptions AddToOneDrive;
    public static RenderListDataOptions SPFXCustomActions;
    public static RenderListDataOptions CustomActions;
    public static RenderListDataOptions PreAuthorizedDownloadUrl;
    public static RenderListDataOptions DownloadUrlNoAuth;
}
[ScriptTypeAttribute("SP.RenderListDataOverrideParameters")]
public class Microsoft.SharePoint.Client.RenderListDataOverrideParameters : ClientValueObject {
    private string m_cascDelWarnMessage;
    private string m_customAction;
    private string m_drillDown;
    private string m_field;
    private string m_fieldInternalName;
    private string m_filter;
    private string m_filterData;
    private string m_filterData1;
    private string m_filterData10;
    private string m_filterData2;
    private string m_filterData3;
    private string m_filterData4;
    private string m_filterData5;
    private string m_filterData6;
    private string m_filterData7;
    private string m_filterData8;
    private string m_filterData9;
    private string m_filterField;
    private string m_filterField1;
    private string m_filterField10;
    private string m_filterField2;
    private string m_filterField3;
    private string m_filterField4;
    private string m_filterField5;
    private string m_filterField6;
    private string m_filterField7;
    private string m_filterField8;
    private string m_filterField9;
    private string m_filterFields;
    private string m_filterFields1;
    private string m_filterFields10;
    private string m_filterFields2;
    private string m_filterFields3;
    private string m_filterFields4;
    private string m_filterFields5;
    private string m_filterFields6;
    private string m_filterFields7;
    private string m_filterFields8;
    private string m_filterFields9;
    private string m_filterLookupId;
    private string m_filterLookupId1;
    private string m_filterLookupId10;
    private string m_filterLookupId2;
    private string m_filterLookupId3;
    private string m_filterLookupId4;
    private string m_filterLookupId5;
    private string m_filterLookupId6;
    private string m_filterLookupId7;
    private string m_filterLookupId8;
    private string m_filterLookupId9;
    private string m_filterOp;
    private string m_filterOp1;
    private string m_filterOp10;
    private string m_filterOp2;
    private string m_filterOp3;
    private string m_filterOp4;
    private string m_filterOp5;
    private string m_filterOp6;
    private string m_filterOp7;
    private string m_filterOp8;
    private string m_filterOp9;
    private string m_filterValue;
    private string m_filterValue1;
    private string m_filterValue10;
    private string m_filterValue2;
    private string m_filterValue3;
    private string m_filterValue4;
    private string m_filterValue5;
    private string m_filterValue6;
    private string m_filterValue7;
    private string m_filterValue8;
    private string m_filterValue9;
    private string m_filterValues;
    private string m_filterValues1;
    private string m_filterValues10;
    private string m_filterValues2;
    private string m_filterValues3;
    private string m_filterValues4;
    private string m_filterValues5;
    private string m_filterValues6;
    private string m_filterValues7;
    private string m_filterValues8;
    private string m_filterValues9;
    private string m_groupString;
    private string m_hasOverrideSelectCommand;
    private string m_iD;
    private string m_inplaceFullListSearch;
    private string m_inplaceSearchQuery;
    private string m_isCSR;
    private string m_isGroupRender;
    private string m_isXslView;
    private string m_listViewPageUrl;
    private string m_overrideRowLimit;
    private string m_overrideScope;
    private string m_overrideSelectCommand;
    private string m_pageFirstRow;
    private string m_pageLastRow;
    private IDictionary`2<string, string> m_queryParams;
    private string m_rootFolder;
    private string m_rootFolderUniqueId;
    private string m_sortDir;
    private string m_sortDir1;
    private string m_sortDir10;
    private string m_sortDir2;
    private string m_sortDir3;
    private string m_sortDir4;
    private string m_sortDir5;
    private string m_sortDir6;
    private string m_sortDir7;
    private string m_sortDir8;
    private string m_sortDir9;
    private string m_sortField;
    private string m_sortField1;
    private string m_sortField10;
    private string m_sortField2;
    private string m_sortField3;
    private string m_sortField4;
    private string m_sortField5;
    private string m_sortField6;
    private string m_sortField7;
    private string m_sortField8;
    private string m_sortField9;
    private string m_sortFields;
    private string m_sortFieldValues;
    private string m_view;
    private string m_viewCount;
    private string m_viewId;
    private string m_viewPath;
    private string m_webPartId;
    [RemoteAttribute]
public string CascDelWarnMessage { get; public set; }
    [RemoteAttribute]
public string CustomAction { get; public set; }
    [RemoteAttribute]
public string DrillDown { get; public set; }
    [RemoteAttribute]
public string Field { get; public set; }
    [RemoteAttribute]
public string FieldInternalName { get; public set; }
    [RemoteAttribute]
public string Filter { get; public set; }
    [RemoteAttribute]
public string FilterData { get; public set; }
    [RemoteAttribute]
public string FilterData1 { get; public set; }
    [RemoteAttribute]
public string FilterData10 { get; public set; }
    [RemoteAttribute]
public string FilterData2 { get; public set; }
    [RemoteAttribute]
public string FilterData3 { get; public set; }
    [RemoteAttribute]
public string FilterData4 { get; public set; }
    [RemoteAttribute]
public string FilterData5 { get; public set; }
    [RemoteAttribute]
public string FilterData6 { get; public set; }
    [RemoteAttribute]
public string FilterData7 { get; public set; }
    [RemoteAttribute]
public string FilterData8 { get; public set; }
    [RemoteAttribute]
public string FilterData9 { get; public set; }
    [RemoteAttribute]
public string FilterField { get; public set; }
    [RemoteAttribute]
public string FilterField1 { get; public set; }
    [RemoteAttribute]
public string FilterField10 { get; public set; }
    [RemoteAttribute]
public string FilterField2 { get; public set; }
    [RemoteAttribute]
public string FilterField3 { get; public set; }
    [RemoteAttribute]
public string FilterField4 { get; public set; }
    [RemoteAttribute]
public string FilterField5 { get; public set; }
    [RemoteAttribute]
public string FilterField6 { get; public set; }
    [RemoteAttribute]
public string FilterField7 { get; public set; }
    [RemoteAttribute]
public string FilterField8 { get; public set; }
    [RemoteAttribute]
public string FilterField9 { get; public set; }
    [RemoteAttribute]
public string FilterFields { get; public set; }
    [RemoteAttribute]
public string FilterFields1 { get; public set; }
    [RemoteAttribute]
public string FilterFields10 { get; public set; }
    [RemoteAttribute]
public string FilterFields2 { get; public set; }
    [RemoteAttribute]
public string FilterFields3 { get; public set; }
    [RemoteAttribute]
public string FilterFields4 { get; public set; }
    [RemoteAttribute]
public string FilterFields5 { get; public set; }
    [RemoteAttribute]
public string FilterFields6 { get; public set; }
    [RemoteAttribute]
public string FilterFields7 { get; public set; }
    [RemoteAttribute]
public string FilterFields8 { get; public set; }
    [RemoteAttribute]
public string FilterFields9 { get; public set; }
    [RemoteAttribute]
public string FilterLookupId { get; public set; }
    [RemoteAttribute]
public string FilterLookupId1 { get; public set; }
    [RemoteAttribute]
public string FilterLookupId10 { get; public set; }
    [RemoteAttribute]
public string FilterLookupId2 { get; public set; }
    [RemoteAttribute]
public string FilterLookupId3 { get; public set; }
    [RemoteAttribute]
public string FilterLookupId4 { get; public set; }
    [RemoteAttribute]
public string FilterLookupId5 { get; public set; }
    [RemoteAttribute]
public string FilterLookupId6 { get; public set; }
    [RemoteAttribute]
public string FilterLookupId7 { get; public set; }
    [RemoteAttribute]
public string FilterLookupId8 { get; public set; }
    [RemoteAttribute]
public string FilterLookupId9 { get; public set; }
    [RemoteAttribute]
public string FilterOp { get; public set; }
    [RemoteAttribute]
public string FilterOp1 { get; public set; }
    [RemoteAttribute]
public string FilterOp10 { get; public set; }
    [RemoteAttribute]
public string FilterOp2 { get; public set; }
    [RemoteAttribute]
public string FilterOp3 { get; public set; }
    [RemoteAttribute]
public string FilterOp4 { get; public set; }
    [RemoteAttribute]
public string FilterOp5 { get; public set; }
    [RemoteAttribute]
public string FilterOp6 { get; public set; }
    [RemoteAttribute]
public string FilterOp7 { get; public set; }
    [RemoteAttribute]
public string FilterOp8 { get; public set; }
    [RemoteAttribute]
public string FilterOp9 { get; public set; }
    [RemoteAttribute]
public string FilterValue { get; public set; }
    [RemoteAttribute]
public string FilterValue1 { get; public set; }
    [RemoteAttribute]
public string FilterValue10 { get; public set; }
    [RemoteAttribute]
public string FilterValue2 { get; public set; }
    [RemoteAttribute]
public string FilterValue3 { get; public set; }
    [RemoteAttribute]
public string FilterValue4 { get; public set; }
    [RemoteAttribute]
public string FilterValue5 { get; public set; }
    [RemoteAttribute]
public string FilterValue6 { get; public set; }
    [RemoteAttribute]
public string FilterValue7 { get; public set; }
    [RemoteAttribute]
public string FilterValue8 { get; public set; }
    [RemoteAttribute]
public string FilterValue9 { get; public set; }
    [RemoteAttribute]
public string FilterValues { get; public set; }
    [RemoteAttribute]
public string FilterValues1 { get; public set; }
    [RemoteAttribute]
public string FilterValues10 { get; public set; }
    [RemoteAttribute]
public string FilterValues2 { get; public set; }
    [RemoteAttribute]
public string FilterValues3 { get; public set; }
    [RemoteAttribute]
public string FilterValues4 { get; public set; }
    [RemoteAttribute]
public string FilterValues5 { get; public set; }
    [RemoteAttribute]
public string FilterValues6 { get; public set; }
    [RemoteAttribute]
public string FilterValues7 { get; public set; }
    [RemoteAttribute]
public string FilterValues8 { get; public set; }
    [RemoteAttribute]
public string FilterValues9 { get; public set; }
    [RemoteAttribute]
public string GroupString { get; public set; }
    [RemoteAttribute]
public string HasOverrideSelectCommand { get; public set; }
    [RemoteAttribute]
public string ID { get; public set; }
    [RemoteAttribute]
public string InplaceFullListSearch { get; public set; }
    [RemoteAttribute]
public string InplaceSearchQuery { get; public set; }
    [RemoteAttribute]
public string IsCSR { get; public set; }
    [RemoteAttribute]
public string IsGroupRender { get; public set; }
    [RemoteAttribute]
public string IsXslView { get; public set; }
    [RemoteAttribute]
public string ListViewPageUrl { get; public set; }
    [RemoteAttribute]
public string OverrideRowLimit { get; public set; }
    [RemoteAttribute]
public string OverrideScope { get; public set; }
    [RemoteAttribute]
public string OverrideSelectCommand { get; public set; }
    [RemoteAttribute]
public string PageFirstRow { get; public set; }
    [RemoteAttribute]
public string PageLastRow { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, string> QueryParams { get; public set; }
    [RemoteAttribute]
public string RootFolder { get; public set; }
    [RemoteAttribute]
public string RootFolderUniqueId { get; public set; }
    [RemoteAttribute]
public string SortDir { get; public set; }
    [RemoteAttribute]
public string SortDir1 { get; public set; }
    [RemoteAttribute]
public string SortDir10 { get; public set; }
    [RemoteAttribute]
public string SortDir2 { get; public set; }
    [RemoteAttribute]
public string SortDir3 { get; public set; }
    [RemoteAttribute]
public string SortDir4 { get; public set; }
    [RemoteAttribute]
public string SortDir5 { get; public set; }
    [RemoteAttribute]
public string SortDir6 { get; public set; }
    [RemoteAttribute]
public string SortDir7 { get; public set; }
    [RemoteAttribute]
public string SortDir8 { get; public set; }
    [RemoteAttribute]
public string SortDir9 { get; public set; }
    [RemoteAttribute]
public string SortField { get; public set; }
    [RemoteAttribute]
public string SortField1 { get; public set; }
    [RemoteAttribute]
public string SortField10 { get; public set; }
    [RemoteAttribute]
public string SortField2 { get; public set; }
    [RemoteAttribute]
public string SortField3 { get; public set; }
    [RemoteAttribute]
public string SortField4 { get; public set; }
    [RemoteAttribute]
public string SortField5 { get; public set; }
    [RemoteAttribute]
public string SortField6 { get; public set; }
    [RemoteAttribute]
public string SortField7 { get; public set; }
    [RemoteAttribute]
public string SortField8 { get; public set; }
    [RemoteAttribute]
public string SortField9 { get; public set; }
    [RemoteAttribute]
public string SortFields { get; public set; }
    [RemoteAttribute]
public string SortFieldValues { get; public set; }
    [RemoteAttribute]
public string View { get; public set; }
    [RemoteAttribute]
public string ViewCount { get; public set; }
    [RemoteAttribute]
public string ViewId { get; public set; }
    [RemoteAttribute]
public string ViewPath { get; public set; }
    [RemoteAttribute]
public string WebPartId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_CascDelWarnMessage();
    public void set_CascDelWarnMessage(string value);
    public string get_CustomAction();
    public void set_CustomAction(string value);
    public string get_DrillDown();
    public void set_DrillDown(string value);
    public string get_Field();
    public void set_Field(string value);
    public string get_FieldInternalName();
    public void set_FieldInternalName(string value);
    public string get_Filter();
    public void set_Filter(string value);
    public string get_FilterData();
    public void set_FilterData(string value);
    public string get_FilterData1();
    public void set_FilterData1(string value);
    public string get_FilterData10();
    public void set_FilterData10(string value);
    public string get_FilterData2();
    public void set_FilterData2(string value);
    public string get_FilterData3();
    public void set_FilterData3(string value);
    public string get_FilterData4();
    public void set_FilterData4(string value);
    public string get_FilterData5();
    public void set_FilterData5(string value);
    public string get_FilterData6();
    public void set_FilterData6(string value);
    public string get_FilterData7();
    public void set_FilterData7(string value);
    public string get_FilterData8();
    public void set_FilterData8(string value);
    public string get_FilterData9();
    public void set_FilterData9(string value);
    public string get_FilterField();
    public void set_FilterField(string value);
    public string get_FilterField1();
    public void set_FilterField1(string value);
    public string get_FilterField10();
    public void set_FilterField10(string value);
    public string get_FilterField2();
    public void set_FilterField2(string value);
    public string get_FilterField3();
    public void set_FilterField3(string value);
    public string get_FilterField4();
    public void set_FilterField4(string value);
    public string get_FilterField5();
    public void set_FilterField5(string value);
    public string get_FilterField6();
    public void set_FilterField6(string value);
    public string get_FilterField7();
    public void set_FilterField7(string value);
    public string get_FilterField8();
    public void set_FilterField8(string value);
    public string get_FilterField9();
    public void set_FilterField9(string value);
    public string get_FilterFields();
    public void set_FilterFields(string value);
    public string get_FilterFields1();
    public void set_FilterFields1(string value);
    public string get_FilterFields10();
    public void set_FilterFields10(string value);
    public string get_FilterFields2();
    public void set_FilterFields2(string value);
    public string get_FilterFields3();
    public void set_FilterFields3(string value);
    public string get_FilterFields4();
    public void set_FilterFields4(string value);
    public string get_FilterFields5();
    public void set_FilterFields5(string value);
    public string get_FilterFields6();
    public void set_FilterFields6(string value);
    public string get_FilterFields7();
    public void set_FilterFields7(string value);
    public string get_FilterFields8();
    public void set_FilterFields8(string value);
    public string get_FilterFields9();
    public void set_FilterFields9(string value);
    public string get_FilterLookupId();
    public void set_FilterLookupId(string value);
    public string get_FilterLookupId1();
    public void set_FilterLookupId1(string value);
    public string get_FilterLookupId10();
    public void set_FilterLookupId10(string value);
    public string get_FilterLookupId2();
    public void set_FilterLookupId2(string value);
    public string get_FilterLookupId3();
    public void set_FilterLookupId3(string value);
    public string get_FilterLookupId4();
    public void set_FilterLookupId4(string value);
    public string get_FilterLookupId5();
    public void set_FilterLookupId5(string value);
    public string get_FilterLookupId6();
    public void set_FilterLookupId6(string value);
    public string get_FilterLookupId7();
    public void set_FilterLookupId7(string value);
    public string get_FilterLookupId8();
    public void set_FilterLookupId8(string value);
    public string get_FilterLookupId9();
    public void set_FilterLookupId9(string value);
    public string get_FilterOp();
    public void set_FilterOp(string value);
    public string get_FilterOp1();
    public void set_FilterOp1(string value);
    public string get_FilterOp10();
    public void set_FilterOp10(string value);
    public string get_FilterOp2();
    public void set_FilterOp2(string value);
    public string get_FilterOp3();
    public void set_FilterOp3(string value);
    public string get_FilterOp4();
    public void set_FilterOp4(string value);
    public string get_FilterOp5();
    public void set_FilterOp5(string value);
    public string get_FilterOp6();
    public void set_FilterOp6(string value);
    public string get_FilterOp7();
    public void set_FilterOp7(string value);
    public string get_FilterOp8();
    public void set_FilterOp8(string value);
    public string get_FilterOp9();
    public void set_FilterOp9(string value);
    public string get_FilterValue();
    public void set_FilterValue(string value);
    public string get_FilterValue1();
    public void set_FilterValue1(string value);
    public string get_FilterValue10();
    public void set_FilterValue10(string value);
    public string get_FilterValue2();
    public void set_FilterValue2(string value);
    public string get_FilterValue3();
    public void set_FilterValue3(string value);
    public string get_FilterValue4();
    public void set_FilterValue4(string value);
    public string get_FilterValue5();
    public void set_FilterValue5(string value);
    public string get_FilterValue6();
    public void set_FilterValue6(string value);
    public string get_FilterValue7();
    public void set_FilterValue7(string value);
    public string get_FilterValue8();
    public void set_FilterValue8(string value);
    public string get_FilterValue9();
    public void set_FilterValue9(string value);
    public string get_FilterValues();
    public void set_FilterValues(string value);
    public string get_FilterValues1();
    public void set_FilterValues1(string value);
    public string get_FilterValues10();
    public void set_FilterValues10(string value);
    public string get_FilterValues2();
    public void set_FilterValues2(string value);
    public string get_FilterValues3();
    public void set_FilterValues3(string value);
    public string get_FilterValues4();
    public void set_FilterValues4(string value);
    public string get_FilterValues5();
    public void set_FilterValues5(string value);
    public string get_FilterValues6();
    public void set_FilterValues6(string value);
    public string get_FilterValues7();
    public void set_FilterValues7(string value);
    public string get_FilterValues8();
    public void set_FilterValues8(string value);
    public string get_FilterValues9();
    public void set_FilterValues9(string value);
    public string get_GroupString();
    public void set_GroupString(string value);
    public string get_HasOverrideSelectCommand();
    public void set_HasOverrideSelectCommand(string value);
    public string get_ID();
    public void set_ID(string value);
    public string get_InplaceFullListSearch();
    public void set_InplaceFullListSearch(string value);
    public string get_InplaceSearchQuery();
    public void set_InplaceSearchQuery(string value);
    public string get_IsCSR();
    public void set_IsCSR(string value);
    public string get_IsGroupRender();
    public void set_IsGroupRender(string value);
    public string get_IsXslView();
    public void set_IsXslView(string value);
    public string get_ListViewPageUrl();
    public void set_ListViewPageUrl(string value);
    public string get_OverrideRowLimit();
    public void set_OverrideRowLimit(string value);
    public string get_OverrideScope();
    public void set_OverrideScope(string value);
    public string get_OverrideSelectCommand();
    public void set_OverrideSelectCommand(string value);
    public string get_PageFirstRow();
    public void set_PageFirstRow(string value);
    public string get_PageLastRow();
    public void set_PageLastRow(string value);
    public IDictionary`2<string, string> get_QueryParams();
    public void set_QueryParams(IDictionary`2<string, string> value);
    public string get_RootFolder();
    public void set_RootFolder(string value);
    public string get_RootFolderUniqueId();
    public void set_RootFolderUniqueId(string value);
    public string get_SortDir();
    public void set_SortDir(string value);
    public string get_SortDir1();
    public void set_SortDir1(string value);
    public string get_SortDir10();
    public void set_SortDir10(string value);
    public string get_SortDir2();
    public void set_SortDir2(string value);
    public string get_SortDir3();
    public void set_SortDir3(string value);
    public string get_SortDir4();
    public void set_SortDir4(string value);
    public string get_SortDir5();
    public void set_SortDir5(string value);
    public string get_SortDir6();
    public void set_SortDir6(string value);
    public string get_SortDir7();
    public void set_SortDir7(string value);
    public string get_SortDir8();
    public void set_SortDir8(string value);
    public string get_SortDir9();
    public void set_SortDir9(string value);
    public string get_SortField();
    public void set_SortField(string value);
    public string get_SortField1();
    public void set_SortField1(string value);
    public string get_SortField10();
    public void set_SortField10(string value);
    public string get_SortField2();
    public void set_SortField2(string value);
    public string get_SortField3();
    public void set_SortField3(string value);
    public string get_SortField4();
    public void set_SortField4(string value);
    public string get_SortField5();
    public void set_SortField5(string value);
    public string get_SortField6();
    public void set_SortField6(string value);
    public string get_SortField7();
    public void set_SortField7(string value);
    public string get_SortField8();
    public void set_SortField8(string value);
    public string get_SortField9();
    public void set_SortField9(string value);
    public string get_SortFields();
    public void set_SortFields(string value);
    public string get_SortFieldValues();
    public void set_SortFieldValues(string value);
    public string get_View();
    public void set_View(string value);
    public string get_ViewCount();
    public void set_ViewCount(string value);
    public string get_ViewId();
    public void set_ViewId(string value);
    public string get_ViewPath();
    public void set_ViewPath(string value);
    public string get_WebPartId();
    public void set_WebPartId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RenderListDataParameters")]
public class Microsoft.SharePoint.Client.RenderListDataParameters : ClientValueObject {
    private bool m_addAllFields;
    private bool m_addAllViewFields;
    private bool m_addRegionalSettings;
    private bool m_addRequiredFields;
    private bool m_allowMultipleValueFilterForTaxonomyFields;
    private bool m_audienceTarget;
    private bool m_datesInUtc;
    private bool m_expandGroups;
    private bool m_expandUserField;
    private bool m_filterOutChannelFoldersInDefaultDocLib;
    private bool m_firstGroupOnly;
    private string m_folderServerRelativeUrl;
    private string m_imageFieldsToTryRewriteToCdnUrls;
    private bool m_mergeDefaultView;
    private bool m_modernListBoot;
    private bool m_originalDate;
    private string m_overrideViewXml;
    private string m_paging;
    private RenderListDataOptions m_renderOptions;
    private bool m_renderURLFieldInJSON;
    private bool m_replaceGroup;
    private bool m_requireFolderColoringFields;
    private bool m_showStubFile;
    private string m_viewXml;
    [RemoteAttribute]
public bool AddAllFields { get; public set; }
    [RemoteAttribute]
public bool AddAllViewFields { get; public set; }
    [RemoteAttribute]
public bool AddRegionalSettings { get; public set; }
    [RemoteAttribute]
public bool AddRequiredFields { get; public set; }
    [RemoteAttribute]
public bool AllowMultipleValueFilterForTaxonomyFields { get; public set; }
    [RemoteAttribute]
public bool AudienceTarget { get; public set; }
    [RemoteAttribute]
public bool DatesInUtc { get; public set; }
    [RemoteAttribute]
public bool ExpandGroups { get; public set; }
    [RemoteAttribute]
public bool ExpandUserField { get; public set; }
    [RemoteAttribute]
public bool FilterOutChannelFoldersInDefaultDocLib { get; public set; }
    [RemoteAttribute]
public bool FirstGroupOnly { get; public set; }
    [RemoteAttribute]
public string FolderServerRelativeUrl { get; public set; }
    [RemoteAttribute]
public string ImageFieldsToTryRewriteToCdnUrls { get; public set; }
    [RemoteAttribute]
public bool MergeDefaultView { get; public set; }
    [RemoteAttribute]
public bool ModernListBoot { get; public set; }
    [RemoteAttribute]
public bool OriginalDate { get; public set; }
    [RemoteAttribute]
public string OverrideViewXml { get; public set; }
    [RemoteAttribute]
public string Paging { get; public set; }
    [RemoteAttribute]
public RenderListDataOptions RenderOptions { get; public set; }
    [RemoteAttribute]
public bool RenderURLFieldInJSON { get; public set; }
    [RemoteAttribute]
public bool ReplaceGroup { get; public set; }
    [RemoteAttribute]
public bool RequireFolderColoringFields { get; public set; }
    [RemoteAttribute]
public bool ShowStubFile { get; public set; }
    [RemoteAttribute]
public string ViewXml { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_AddAllFields();
    public void set_AddAllFields(bool value);
    public bool get_AddAllViewFields();
    public void set_AddAllViewFields(bool value);
    public bool get_AddRegionalSettings();
    public void set_AddRegionalSettings(bool value);
    public bool get_AddRequiredFields();
    public void set_AddRequiredFields(bool value);
    public bool get_AllowMultipleValueFilterForTaxonomyFields();
    public void set_AllowMultipleValueFilterForTaxonomyFields(bool value);
    public bool get_AudienceTarget();
    public void set_AudienceTarget(bool value);
    public bool get_DatesInUtc();
    public void set_DatesInUtc(bool value);
    public bool get_ExpandGroups();
    public void set_ExpandGroups(bool value);
    public bool get_ExpandUserField();
    public void set_ExpandUserField(bool value);
    public bool get_FilterOutChannelFoldersInDefaultDocLib();
    public void set_FilterOutChannelFoldersInDefaultDocLib(bool value);
    public bool get_FirstGroupOnly();
    public void set_FirstGroupOnly(bool value);
    public string get_FolderServerRelativeUrl();
    public void set_FolderServerRelativeUrl(string value);
    public string get_ImageFieldsToTryRewriteToCdnUrls();
    public void set_ImageFieldsToTryRewriteToCdnUrls(string value);
    public bool get_MergeDefaultView();
    public void set_MergeDefaultView(bool value);
    public bool get_ModernListBoot();
    public void set_ModernListBoot(bool value);
    public bool get_OriginalDate();
    public void set_OriginalDate(bool value);
    public string get_OverrideViewXml();
    public void set_OverrideViewXml(string value);
    public string get_Paging();
    public void set_Paging(string value);
    public RenderListDataOptions get_RenderOptions();
    public void set_RenderOptions(RenderListDataOptions value);
    public bool get_RenderURLFieldInJSON();
    public void set_RenderURLFieldInJSON(bool value);
    public bool get_ReplaceGroup();
    public void set_ReplaceGroup(bool value);
    public bool get_RequireFolderColoringFields();
    public void set_RequireFolderColoringFields(bool value);
    public bool get_ShowStubFile();
    public void set_ShowStubFile(bool value);
    public string get_ViewXml();
    public void set_ViewXml(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RenderListFilterDataParameters")]
public class Microsoft.SharePoint.Client.RenderListFilterDataParameters : ClientValueObject {
    private bool m_excludeFieldFilteringHtml;
    private string m_fieldInternalName;
    private string m_overrideScope;
    private string m_processQStringToCAML;
    private string m_viewId;
    private string m_viewXml;
    [RemoteAttribute]
public bool ExcludeFieldFilteringHtml { get; public set; }
    [RemoteAttribute]
public string FieldInternalName { get; public set; }
    [RemoteAttribute]
public string OverrideScope { get; public set; }
    [RemoteAttribute]
public string ProcessQStringToCAML { get; public set; }
    [RemoteAttribute]
public string ViewId { get; public set; }
    [RemoteAttribute]
public string ViewXml { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_ExcludeFieldFilteringHtml();
    public void set_ExcludeFieldFilteringHtml(bool value);
    public string get_FieldInternalName();
    public void set_FieldInternalName(string value);
    public string get_OverrideScope();
    public void set_OverrideScope(string value);
    public string get_ProcessQStringToCAML();
    public void set_ProcessQStringToCAML(string value);
    public string get_ViewId();
    public void set_ViewId(string value);
    public string get_ViewXml();
    public void set_ViewXml(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.RenderListFormDataOptions : Enum {
    public int value__;
    public static RenderListFormDataOptions None;
    public static RenderListFormDataOptions ExcludeListSchema;
    public static RenderListFormDataOptions IncludeAttachments;
    public static RenderListFormDataOptions IncludeListViewData;
    public static RenderListFormDataOptions IncludeAppendOnlyData;
    public static RenderListFormDataOptions ListSchemaGroupedByContentType;
    public static RenderListFormDataOptions IncludeSiteAssetsThumbnailMetadata;
}
[ScriptTypeAttribute("Microsoft.SharePoint.CampaignAnalytics.ReportResponse")]
public class Microsoft.SharePoint.Client.ReportResponse : ClientValueObject {
    private IList`1<VinciAnalyticsReportTableElement> m_dimensions;
    private IList`1<VinciAnalyticsReportTableElement> m_metrics;
    private VinciAnalyticsReportTableRow[] m_rows;
    [RemoteAttribute]
public IList`1<VinciAnalyticsReportTableElement> dimensions { get; public set; }
    [RemoteAttribute]
public IList`1<VinciAnalyticsReportTableElement> metrics { get; public set; }
    [RemoteAttribute]
public VinciAnalyticsReportTableRow[] rows { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<VinciAnalyticsReportTableElement> get_dimensions();
    public void set_dimensions(IList`1<VinciAnalyticsReportTableElement> value);
    public IList`1<VinciAnalyticsReportTableElement> get_metrics();
    public void set_metrics(IList`1<VinciAnalyticsReportTableElement> value);
    public VinciAnalyticsReportTableRow[] get_rows();
    public void set_rows(VinciAnalyticsReportTableRow[] value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RequestContext")]
internal class Microsoft.SharePoint.Client.RequestContext : ClientObject {
    [RemoteAttribute]
public List List { get; }
    [RemoteAttribute]
public Site Site { get; }
    [RemoteAttribute]
public Web Web { get; }
    [EditorBrowsableAttribute("1")]
public RequestContext(ClientRuntimeContext context, ObjectPath objectPath);
    public List get_List();
    public Site get_Site();
    public Web get_Web();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public RequestContext GetRemoteContext();
    [RemoteAttribute]
public static RequestContext GetCurrent(ClientRuntimeContext Context);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RequestContextObjectPropertyNames : object {
    public static string List;
    public static string Site;
    public static string Web;
}
public class Microsoft.SharePoint.Client.RequestForwarder : object {
    private static string KEY_Url;
    private HttpContext m_context;
    private ExternalApplicationRequestToken m_requestToken;
    private HttpWebRequest m_webRequest;
    private static String[] s_headersToCopy;
    private static int BufferLen;
    public string Url { get; }
    public ExternalApplicationRequestToken RequestToken { get; }
    public HttpWebRequest WebRequest { get; }
    public RequestForwarder(HttpContext context);
    private static RequestForwarder();
    public string get_Url();
    public ExternalApplicationRequestToken get_RequestToken();
    public HttpWebRequest get_WebRequest();
    public void ProcessRequest();
    private void CopyHeaders(HttpWebResponse response, HttpResponse httpResponse);
    private void CopyHeaders(HttpRequest httpRequest, HttpWebRequest request);
    private void TransferStream(Stream input, Stream output);
}
internal static class Microsoft.SharePoint.Client.RequestResourceConstants : object {
    internal static string List;
    internal static string UserInfoList;
    internal static string WebProperties;
    internal static string Features;
    internal static string NavigationStructure;
    internal static string View;
    internal static string HeaderName;
    internal static string ListUrl;
    internal static string WebId;
    internal static string SiteId;
    internal static string DocId;
    internal static string FetchViews;
    internal static string IncludeStorageMetrics;
}
public class Microsoft.SharePoint.Client.RequestResources : object {
    private Guid m_listId;
    private Guid m_viewId;
    private bool m_userInfoList;
    private bool m_webProperties;
    private bool m_features;
    private bool m_navigationStructure;
    public Guid ListId { get; public set; }
    public bool UserInformationList { get; public set; }
    public bool WebProperties { get; public set; }
    public bool Features { get; public set; }
    public bool NavigationStructure { get; public set; }
    public Guid ViewId { get; public set; }
    public Guid get_ListId();
    public void set_ListId(Guid value);
    public bool get_UserInformationList();
    public void set_UserInformationList(bool value);
    public bool get_WebProperties();
    public void set_WebProperties(bool value);
    public bool get_Features();
    public void set_Features(bool value);
    public bool get_NavigationStructure();
    public void set_NavigationStructure(bool value);
    public Guid get_ViewId();
    public void set_ViewId(Guid value);
    internal string ToHttpHeaderValue();
}
public enum Microsoft.SharePoint.Client.RequestType : Enum {
    public int value__;
    public static RequestType GET;
    public static RequestType POST;
    public static RequestType PUT;
    public static RequestType DELETE;
}
[ScriptTypeAttribute("SP.RequestUserContext")]
public class Microsoft.SharePoint.Client.RequestUserContext : ClientObject {
    [RemoteAttribute]
public User User { get; }
    [EditorBrowsableAttribute("1")]
public RequestUserContext(ClientRuntimeContext context, ObjectPath objectPath);
    public User get_User();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public static RequestUserContext GetCurrent(ClientRuntimeContext Context);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RequestUserContextObjectPropertyNames : object {
    public static string User;
}
[ScriptTypeAttribute("SP.RequestVariable")]
public class Microsoft.SharePoint.Client.RequestVariable : ClientObject {
    [RemoteAttribute]
public string Value { get; }
    public RequestVariable(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public RequestVariable(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Value();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Append(string value);
    [RemoteAttribute]
public void Set(string value);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RequestVariablePropertyNames : object {
    public static string Value;
}
[ScriptTypeAttribute("SP.ResourcePath")]
public class Microsoft.SharePoint.Client.ResourcePath : ClientValueObject {
    private string m_decodedUrl;
    [RemoteAttribute]
public string DecodedUrl { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public static ResourcePath FromDecodedUrl(string decodedUrl);
    public string get_DecodedUrl();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ResourceVisualization")]
public class Microsoft.SharePoint.Client.ResourceVisualization : ClientValueObject {
    private string m_acronym;
    private string m_color;
    private string m_previewImageUrl;
    [RemoteAttribute]
public string Acronym { get; public set; }
    [RemoteAttribute]
public string Color { get; public set; }
    [RemoteAttribute]
public string PreviewImageUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Acronym();
    public void set_Acronym(string value);
    public string get_Color();
    public void set_Color(string value);
    public string get_PreviewImageUrl();
    public void set_PreviewImageUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ExtensionAttribute]
[ScriptTypeAttribute("SP.ReviewAPIController")]
public static class Microsoft.SharePoint.Client.ReviewAPIController : object {
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<ReviewWorkFlowResponseDTO> CreateReview(Web web, CreateReviewRequestDTO createReviewRequestDTO);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<ReviewWorkFlowResponseDTO> UpdateReview(Web web, UpdateReviewRequestDTO updateReviewRequestDTO);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<AgreementAttributeDTO> GetAgreementDetails(Web web, AgreementAttributeRequestDTO agreementAttributeRequestDTO);
}
[ExtensionAttribute]
[ScriptTypeAttribute("SP.ReviewConfigController")]
public static class Microsoft.SharePoint.Client.ReviewConfigController : object {
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<string> ProvisionAgreementReviewerConfigurationLibrary(Web web);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<ReviewConfigurationResponse> GetReviewerConfigurationByCategoryId(Web web, IDictionary`2<string, string> properties);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<ReviewConfigurationResponse> AddReviewerConfiguration(Web web, ReviewConfigurationPayload reviewConfigurationPayload);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<ReviewConfigurationResponse> UpdateReviewerConfiguration(Web web, ReviewConfigurationPayload reviewConfigurationPayload);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<ReviewDeletionConfigurationResponse> DeleteReviewerConfigurationByCategoryId(Web web, IDictionary`2<string, string> properties);
}
[ScriptTypeAttribute("SP.ReviewConfigurationPayload")]
public class Microsoft.SharePoint.Client.ReviewConfigurationPayload : ClientValueObject {
    private string m_categoryId;
    private String[] m_reviewers;
    private string m_reviewType;
    [RemoteAttribute]
public string CategoryId { get; public set; }
    [RemoteAttribute]
public String[] Reviewers { get; public set; }
    [RemoteAttribute]
public string ReviewType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_CategoryId();
    public void set_CategoryId(string value);
    public String[] get_Reviewers();
    public void set_Reviewers(String[] value);
    public string get_ReviewType();
    public void set_ReviewType(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ReviewConfigurationResponse")]
public class Microsoft.SharePoint.Client.ReviewConfigurationResponse : ClientValueObject {
    private string m_action;
    private string m_contractCategory;
    private string m_contractCategoryId;
    private UserDTO[] m_reviewers;
    private string m_reviewType;
    [RemoteAttribute]
public string Action { get; public set; }
    [RemoteAttribute]
public string ContractCategory { get; public set; }
    [RemoteAttribute]
public string ContractCategoryId { get; public set; }
    [RemoteAttribute]
public UserDTO[] Reviewers { get; public set; }
    [RemoteAttribute]
public string ReviewType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Action();
    public void set_Action(string value);
    public string get_ContractCategory();
    public void set_ContractCategory(string value);
    public string get_ContractCategoryId();
    public void set_ContractCategoryId(string value);
    public UserDTO[] get_Reviewers();
    public void set_Reviewers(UserDTO[] value);
    public string get_ReviewType();
    public void set_ReviewType(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ReviewDeletionConfigurationResponse")]
public class Microsoft.SharePoint.Client.ReviewDeletionConfigurationResponse : ClientValueObject {
    private string m_action;
    private string m_contractCategoryId;
    private string m_message;
    [RemoteAttribute]
public string Action { get; public set; }
    [RemoteAttribute]
public string ContractCategoryId { get; public set; }
    [RemoteAttribute]
public string Message { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Action();
    public void set_Action(string value);
    public string get_ContractCategoryId();
    public void set_ContractCategoryId(string value);
    public string get_Message();
    public void set_Message(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ReviewerInfo")]
public class Microsoft.SharePoint.Client.ReviewerInfo : ClientValueObject {
    private string m_email;
    private string m_name;
    private int m_reviewerId;
    [RemoteAttribute]
public string Email { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public int ReviewerId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Email();
    public void set_Email(string value);
    public string get_Name();
    public void set_Name(string value);
    public int get_ReviewerId();
    public void set_ReviewerId(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ReviewWorkFlowResponseDTO")]
public class Microsoft.SharePoint.Client.ReviewWorkFlowResponseDTO : ClientValueObject {
    private string m_action;
    private string m_status;
    [RemoteAttribute]
public string Action { get; public set; }
    [RemoteAttribute]
public string Status { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Action();
    public void set_Action(string value);
    public string get_Status();
    public void set_Status(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RoleAssignment")]
public class Microsoft.SharePoint.Client.RoleAssignment : ClientObject {
    [RemoteAttribute]
public Principal Member { get; }
    [RemoteAttribute]
public int PrincipalId { get; }
    [RemoteAttribute]
public RoleDefinitionBindingCollection RoleDefinitionBindings { get; }
    [EditorBrowsableAttribute("1")]
public RoleAssignment(ClientRuntimeContext context, ObjectPath objectPath);
    public Principal get_Member();
    public int get_PrincipalId();
    public RoleDefinitionBindingCollection get_RoleDefinitionBindings();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void ImportRoleDefinitionBindings(RoleDefinitionBindingCollection roleDefinitionBindings);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("SP.RoleAssignmentCollection")]
public class Microsoft.SharePoint.Client.RoleAssignmentCollection : ClientObjectCollection`1<RoleAssignment> {
    [RemoteAttribute]
public GroupCollection Groups { get; }
    [EditorBrowsableAttribute("1")]
public RoleAssignmentCollection(ClientRuntimeContext context, ObjectPath objectPath);
    public GroupCollection get_Groups();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public RoleAssignment GetByPrincipal(Principal principalToFind);
    [RemoteAttribute]
public RoleAssignment GetByPrincipalId(int principalId);
    [RemoteAttribute]
public RoleAssignment Add(Principal principal, RoleDefinitionBindingCollection roleBindings);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RoleAssignmentCollectionObjectPropertyNames : object {
    public static string Groups;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RoleAssignmentObjectPropertyNames : object {
    public static string Member;
    public static string RoleDefinitionBindings;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RoleAssignmentPropertyNames : object {
    public static string PrincipalId;
}
[ScriptTypeAttribute("SP.RoleDefinition")]
public class Microsoft.SharePoint.Client.RoleDefinition : ClientObject {
    [RemoteAttribute]
public BasePermissions BasePermissions { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public bool Hidden { get; }
    [RemoteAttribute]
public int Id { get; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public int Order { get; public set; }
    [RemoteAttribute]
public RoleType RoleTypeKind { get; }
    [EditorBrowsableAttribute("1")]
public RoleDefinition(ClientRuntimeContext context, ObjectPath objectPath);
    internal void InitFromCreationInformation(RoleDefinitionCreationInformation creation);
    public BasePermissions get_BasePermissions();
    public void set_BasePermissions(BasePermissions value);
    public string get_Description();
    public void set_Description(string value);
    public bool get_Hidden();
    public int get_Id();
    public string get_Name();
    public void set_Name(string value);
    public int get_Order();
    public void set_Order(int value);
    public RoleType get_RoleTypeKind();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("SP.RoleDefinitionBindingCollection")]
public class Microsoft.SharePoint.Client.RoleDefinitionBindingCollection : ClientObjectCollection`1<RoleDefinition> {
    public RoleDefinitionBindingCollection(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public RoleDefinitionBindingCollection(ClientRuntimeContext context, ObjectPath objectPath);
    private void OnRemoveAll();
    [RemoteAttribute]
public void Add(RoleDefinition roleDefinition);
    [RemoteAttribute]
public void Remove(RoleDefinition roleDefinition);
    [RemoteAttribute]
public void RemoveAll();
}
[ScriptTypeAttribute("SP.RoleDefinitionCollection")]
public class Microsoft.SharePoint.Client.RoleDefinitionCollection : ClientObjectCollection`1<RoleDefinition> {
    [EditorBrowsableAttribute("1")]
public RoleDefinitionCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public RoleDefinition GetByName(string name);
    [RemoteAttribute]
public RoleDefinition Add(RoleDefinitionCreationInformation parameters);
    [RemoteAttribute]
public void RecreateMissingDefaultRoleDefinitions();
    [RemoteAttribute]
public RoleDefinition GetById(int id);
    [RemoteAttribute]
public RoleDefinition GetByType(RoleType roleType);
}
[ScriptTypeAttribute("SP.RoleDefinitionCreationInformation")]
public class Microsoft.SharePoint.Client.RoleDefinitionCreationInformation : ClientValueObject {
    private BasePermissions m_basePermissions;
    private string m_description;
    private string m_name;
    private int m_order;
    [RemoteAttribute]
public BasePermissions BasePermissions { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public int Order { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public BasePermissions get_BasePermissions();
    public void set_BasePermissions(BasePermissions value);
    public string get_Description();
    public void set_Description(string value);
    public string get_Name();
    public void set_Name(string value);
    public int get_Order();
    public void set_Order(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.RoleDefinitionPropertyNames : object {
    public static string BasePermissions;
    public static string Description;
    public static string Hidden;
    public static string Id;
    public static string Name;
    public static string Order;
    public static string RoleTypeKind;
}
public enum Microsoft.SharePoint.Client.RoleType : Enum {
    public int value__;
    public static RoleType None;
    public static RoleType Guest;
    public static RoleType Reader;
    public static RoleType Contributor;
    public static RoleType WebDesigner;
    public static RoleType Administrator;
    public static RoleType Editor;
    public static RoleType Reviewer;
    public static RoleType RestrictedReader;
    public static RoleType RestrictedGuest;
    public static RoleType System;
}
public enum Microsoft.SharePoint.Client.RuleOverrideOptions : Enum {
    public int value__;
    public static RuleOverrideOptions None;
    public static RuleOverrideOptions Allow;
    public static RuleOverrideOptions AllowWithJustification;
}
[ScriptTypeAttribute("SP.RulesAssignmentModel")]
public class Microsoft.SharePoint.Client.RulesAssignmentModel : ClientValueObject {
    private Guid m_categoryTermGuid;
    private IEnumerable`1<int> m_ruleIdList;
    [RemoteAttribute]
public Guid CategoryTermGuid { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<int> RuleIdList { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_CategoryTermGuid();
    public void set_CategoryTermGuid(Guid value);
    public IEnumerable`1<int> get_RuleIdList();
    public void set_RuleIdList(IEnumerable`1<int> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RulesAssignmentModelResponse")]
public class Microsoft.SharePoint.Client.RulesAssignmentModelResponse : ClientValueObject {
    private Guid m_categoryTermGuid;
    private IEnumerable`1<RulesDefinition> m_rules;
    [RemoteAttribute]
public Guid CategoryTermGuid { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<RulesDefinition> Rules { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_CategoryTermGuid();
    public void set_CategoryTermGuid(Guid value);
    public IEnumerable`1<RulesDefinition> get_Rules();
    public void set_Rules(IEnumerable`1<RulesDefinition> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ExtensionAttribute]
[ScriptTypeAttribute("SP.RulesController")]
public static class Microsoft.SharePoint.Client.RulesController : object {
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<RulesDefinition> AddAgreementRules(Web web, IList`1<RulesDefinition> rulesDefinitions);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<RulesDefinition> EditAgreementRules(Web web, IList`1<RulesDefinition> rulesDefinitions);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<RulesDefinition> GetAgreementRules(Web web, IDictionary`2<string, string> properties);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<RulesDefinitionGroup> GetAgreementRulesGroupedByRuleGroup(Web web, IDictionary`2<string, string> properties);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<string> ProvisionAgreementRulesLibrary(Web web);
}
[ScriptTypeAttribute("SP.RulesDefinition")]
public class Microsoft.SharePoint.Client.RulesDefinition : ClientValueObject {
    private string m_actionForInvalidRules;
    private string m_categoryID;
    private ReviewerInfo m_createdByUser;
    private string m_createdDateTime;
    private bool m_isActive;
    private bool m_isManual;
    private ReviewerInfo m_modifiedByUser;
    private string m_modifiedDateTime;
    private IEnumerable`1<RulesProperties> m_properties;
    private RulesRisk m_risk;
    private string m_ruleGroup;
    private int m_ruleId;
    private string m_ruleStatement;
    [RemoteAttribute]
public string ActionForInvalidRules { get; public set; }
    [RemoteAttribute]
public string CategoryID { get; public set; }
    [RemoteAttribute]
public ReviewerInfo CreatedByUser { get; public set; }
    [RemoteAttribute]
public string CreatedDateTime { get; public set; }
    [RemoteAttribute]
public bool IsActive { get; public set; }
    [RemoteAttribute]
public bool IsManual { get; public set; }
    [RemoteAttribute]
public ReviewerInfo ModifiedByUser { get; public set; }
    [RemoteAttribute]
public string ModifiedDateTime { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<RulesProperties> Properties { get; public set; }
    [RemoteAttribute]
public RulesRisk Risk { get; public set; }
    [RemoteAttribute]
public string RuleGroup { get; public set; }
    [RemoteAttribute]
public int RuleId { get; public set; }
    [RemoteAttribute]
public string RuleStatement { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ActionForInvalidRules();
    public void set_ActionForInvalidRules(string value);
    public string get_CategoryID();
    public void set_CategoryID(string value);
    public ReviewerInfo get_CreatedByUser();
    public void set_CreatedByUser(ReviewerInfo value);
    public string get_CreatedDateTime();
    public void set_CreatedDateTime(string value);
    public bool get_IsActive();
    public void set_IsActive(bool value);
    public bool get_IsManual();
    public void set_IsManual(bool value);
    public ReviewerInfo get_ModifiedByUser();
    public void set_ModifiedByUser(ReviewerInfo value);
    public string get_ModifiedDateTime();
    public void set_ModifiedDateTime(string value);
    public IEnumerable`1<RulesProperties> get_Properties();
    public void set_Properties(IEnumerable`1<RulesProperties> value);
    public RulesRisk get_Risk();
    public void set_Risk(RulesRisk value);
    public string get_RuleGroup();
    public void set_RuleGroup(string value);
    public int get_RuleId();
    public void set_RuleId(int value);
    public string get_RuleStatement();
    public void set_RuleStatement(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RulesDefinitionGroup")]
public class Microsoft.SharePoint.Client.RulesDefinitionGroup : ClientValueObject {
    private IList`1<RulesDefinition> m_ruleDefinitionsList;
    private string m_ruleGroup;
    [RemoteAttribute]
public IList`1<RulesDefinition> RuleDefinitionsList { get; public set; }
    [RemoteAttribute]
public string RuleGroup { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<RulesDefinition> get_RuleDefinitionsList();
    public void set_RuleDefinitionsList(IList`1<RulesDefinition> value);
    public string get_RuleGroup();
    public void set_RuleGroup(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RulesProperties")]
public class Microsoft.SharePoint.Client.RulesProperties : ClientValueObject {
    private string m_rulesKey;
    private string m_rulesValue;
    [RemoteAttribute]
public string RulesKey { get; public set; }
    [RemoteAttribute]
public string RulesValue { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_RulesKey();
    public void set_RulesKey(string value);
    public string get_RulesValue();
    public void set_RulesValue(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.RulesRisk : Enum {
    public int value__;
    public static RulesRisk Default;
    public static RulesRisk Low;
    public static RulesRisk Medium;
    public static RulesRisk High;
}
public enum Microsoft.SharePoint.Client.RulesValidationAction : Enum {
    public int value__;
    public static RulesValidationAction Invalidated;
    public static RulesValidationAction Validated;
}
[ExtensionAttribute]
[ScriptTypeAttribute("SP.RulesValidationController")]
public static class Microsoft.SharePoint.Client.RulesValidationController : object {
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<RulesValidationEntryResponse> AddAgreementRulesValidationEntries(Web web, IList`1<RulesValidationEntryRequest> rulesValidationEntriesRequest, IDictionary`2<string, string> queryParam);
    [ExtensionAttribute]
[RemoteAttribute]
public static IList`1<RulesValidationEntryResponse> GetAgreementRulesValidationEntries(Web web, IDictionary`2<string, string> queryParam);
    [ExtensionAttribute]
[RemoteAttribute]
public static ClientResult`1<string> ResetAgreementRulesValidationEntries(Web web, IDictionary`2<string, string> queryParam);
}
[ScriptTypeAttribute("SP.RulesValidationEntryRequest")]
public class Microsoft.SharePoint.Client.RulesValidationEntryRequest : ClientValueObject {
    private RulesValidationAction m_action;
    private string m_aISuggestionText;
    private string m_businessJustification;
    private DateTime m_lastUpdatedDateTime;
    private int m_reviewerId;
    private string m_ruleId;
    [RemoteAttribute]
public RulesValidationAction Action { get; public set; }
    [RemoteAttribute]
public string AISuggestionText { get; public set; }
    [RemoteAttribute]
public string BusinessJustification { get; public set; }
    [RemoteAttribute]
public DateTime LastUpdatedDateTime { get; public set; }
    [RemoteAttribute]
public int ReviewerId { get; public set; }
    [RemoteAttribute]
public string RuleId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public RulesValidationAction get_Action();
    public void set_Action(RulesValidationAction value);
    public string get_AISuggestionText();
    public void set_AISuggestionText(string value);
    public string get_BusinessJustification();
    public void set_BusinessJustification(string value);
    public DateTime get_LastUpdatedDateTime();
    public void set_LastUpdatedDateTime(DateTime value);
    public int get_ReviewerId();
    public void set_ReviewerId(int value);
    public string get_RuleId();
    public void set_RuleId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.RulesValidationEntryResponse")]
public class Microsoft.SharePoint.Client.RulesValidationEntryResponse : ClientValueObject {
    private RulesValidationAction m_action;
    private string m_aISuggestionText;
    private string m_businessJustification;
    private DateTime m_lastUpdatedDateTime;
    private ReviewerInfo m_reviewer;
    private RulesDefinition m_rule;
    [RemoteAttribute]
public RulesValidationAction Action { get; public set; }
    [RemoteAttribute]
public string AISuggestionText { get; public set; }
    [RemoteAttribute]
public string BusinessJustification { get; public set; }
    [RemoteAttribute]
public DateTime LastUpdatedDateTime { get; public set; }
    [RemoteAttribute]
public ReviewerInfo Reviewer { get; public set; }
    [RemoteAttribute]
public RulesDefinition Rule { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public RulesValidationAction get_Action();
    public void set_Action(RulesValidationAction value);
    public string get_AISuggestionText();
    public void set_AISuggestionText(string value);
    public string get_BusinessJustification();
    public void set_BusinessJustification(string value);
    public DateTime get_LastUpdatedDateTime();
    public void set_LastUpdatedDateTime(DateTime value);
    public ReviewerInfo get_Reviewer();
    public void set_Reviewer(ReviewerInfo value);
    public RulesDefinition get_Rule();
    public void set_Rule(RulesDefinition value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.SandboxedCodeActivationCapabilities : Enum {
    public int value__;
    public static SandboxedCodeActivationCapabilities Check;
    public static SandboxedCodeActivationCapabilities Disabled;
    public static SandboxedCodeActivationCapabilities Enabled;
}
[ScriptTypeAttribute("SP.ScriptSafeDomain")]
public class Microsoft.SharePoint.Client.ScriptSafeDomain : ClientObject {
    [EditorBrowsableAttribute("1")]
public ScriptSafeDomain(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("SP.ScriptSafeDomainEntityData")]
public class Microsoft.SharePoint.Client.ScriptSafeDomainEntityData : ClientValueObject {
    private string m_domainName;
    [RemoteAttribute]
public string DomainName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DomainName();
    public void set_DomainName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.ScriptSafeExternalEmbedding : Enum {
    public int value__;
    public static ScriptSafeExternalEmbedding None;
    public static ScriptSafeExternalEmbedding AllowedDomains;
    public static ScriptSafeExternalEmbedding All;
}
public class Microsoft.SharePoint.Client.ScriptTypeFactory : object {
    public sealed virtual IFromJson CreateObjectFromScriptType(string scriptType, ClientRuntimeContext context);
}
public enum Microsoft.SharePoint.Client.SearchBoxInNavBarType : Enum {
    public int value__;
    public static SearchBoxInNavBarType Inherit;
    public static SearchBoxInNavBarType AllPages;
    public static SearchBoxInNavBarType ModernOnly;
    public static SearchBoxInNavBarType Hidden;
}
public enum Microsoft.SharePoint.Client.SearchScopeType : Enum {
    public int value__;
    public static SearchScopeType DefaultScope;
    public static SearchScopeType Tenant;
    public static SearchScopeType Hub;
    public static SearchScopeType Site;
}
[ScriptTypeAttribute("SP.SecurableObject")]
public class Microsoft.SharePoint.Client.SecurableObject : ClientObject {
    [RemoteAttribute]
public SecurableObject FirstUniqueAncestorSecurableObject { get; }
    [RemoteAttribute]
public bool HasUniqueRoleAssignments { get; }
    [RemoteAttribute]
public RoleAssignmentCollection RoleAssignments { get; }
    [EditorBrowsableAttribute("1")]
public SecurableObject(ClientRuntimeContext context, ObjectPath objectPath);
    public SecurableObject get_FirstUniqueAncestorSecurableObject();
    public bool get_HasUniqueRoleAssignments();
    public RoleAssignmentCollection get_RoleAssignments();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public virtual void ResetRoleInheritance();
    [RemoteAttribute]
public virtual void BreakRoleInheritance(bool copyRoleAssignments, bool clearSubscopes);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SecurableObjectObjectPropertyNames : object {
    public static string FirstUniqueAncestorSecurableObject;
    public static string RoleAssignments;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SecurableObjectPropertyNames : object {
    public static string HasUniqueRoleAssignments;
}
[ScriptTypeAttribute("SP.SensitivityLabelInfo")]
public class Microsoft.SharePoint.Client.SensitivityLabelInfo : ClientValueObject {
    private string m_displayName;
    private string m_id;
    private string m_membersCanShare;
    [RemoteAttribute]
public string DisplayName { get; }
    [RemoteAttribute]
public string Id { get; }
    [RemoteAttribute]
public string MembersCanShare { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DisplayName();
    public string get_Id();
    public string get_MembersCanShare();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.SensitivityLabelWorkItemType : Enum {
    public int value__;
    public static SensitivityLabelWorkItemType InteractiveAutolabel;
    public static SensitivityLabelWorkItemType NonInteractiveAutolabel;
}
[ScriptTypeAttribute("SP.ServerSettings")]
public static class Microsoft.SharePoint.Client.ServerSettings : object {
    [RemoteAttribute]
public static ClientObjectList`1<AlternateUrl> GetAlternateUrls(ClientRuntimeContext context);
    [RemoteAttribute]
public static ClientResult`1<Language[]> GetGlobalInstalledLanguages(ClientRuntimeContext context, int compatibilityLevel);
    [RemoteAttribute]
public static ClientResult`1<bool> IsSharePointOnline(ClientRuntimeContext context);
}
[ScriptTypeAttribute("SP.SharedWithMeItemCollection")]
public static class Microsoft.SharePoint.Client.SharedWithMeItemCollection : object {
    [RemoteAttribute]
public static ClientResult`1<string> GetSharedWithMeItems(ClientRuntimeContext context, int top, string skiptoken, bool includeSharingHistory);
    [RemoteAttribute]
public static ClientResult`1<string> RemoveFromSharedWithMe(ClientRuntimeContext context, string spoIds, IList`1<string> itemIds, IList`1<string> workingSetIds);
    [RemoteAttribute]
public static ClientResult`1<string> RestoreToSharedWithMe(ClientRuntimeContext context, string spoIds, IList`1<string> itemIds, IList`1<string> workingSetIds);
    [RemoteAttribute]
public static ClientResult`1<string> GetSharedWithMeExternalItems(ClientRuntimeContext context, int top);
    [RemoteAttribute]
public static ClientResult`1<string> GetCalendarEvents(ClientRuntimeContext context);
}
[ScriptTypeAttribute("SP.SharedWithUser")]
public class Microsoft.SharePoint.Client.SharedWithUser : ClientValueObject {
    private string m_email;
    private string m_name;
    [RemoteAttribute]
public string Email { get; }
    [RemoteAttribute]
public string Name { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Email();
    public string get_Name();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SharedWithUserCollection")]
public class Microsoft.SharePoint.Client.SharedWithUserCollection : ClientValueObjectCollection`1<SharedWithUser> {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[ScriptTypeAttribute("SP.SharePointIds")]
public class Microsoft.SharePoint.Client.SharePointIds : ClientValueObject {
    private string m_hubSiteId;
    private string m_siteId;
    private string m_siteUrl;
    private string m_webId;
    [RemoteAttribute]
public string HubSiteId { get; public set; }
    [RemoteAttribute]
public string SiteId { get; public set; }
    [RemoteAttribute]
public string SiteUrl { get; public set; }
    [RemoteAttribute]
public string WebId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_HubSiteId();
    public void set_HubSiteId(string value);
    public string get_SiteId();
    public void set_SiteId(string value);
    public string get_SiteUrl();
    public void set_SiteUrl(string value);
    public string get_WebId();
    public void set_WebId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SharePointSharingSettings")]
public class Microsoft.SharePoint.Client.SharePointSharingSettings : ClientObject {
    [RemoteAttribute]
public string AddToGroupModeName { get; }
    [RemoteAttribute]
public IEnumerable`1<string> GroupNameLines { get; }
    [RemoteAttribute]
public IEnumerable`1<string> GroupRoleDefinitionNamesLines { get; }
    [RemoteAttribute]
public bool IsMobileView { get; }
    [RemoteAttribute]
public bool PanelGivePermissionsVisible { get; }
    [RemoteAttribute]
public bool PanelShowHideMoreOptionsVisible { get; }
    [RemoteAttribute]
public bool PanelSimplifiedRoleSelectorVisible { get; }
    [RemoteAttribute]
public PickerSettings PickerProperties { get; }
    [RemoteAttribute]
public IEnumerable`1<string> RequiredScriptFileLinks { get; }
    [RemoteAttribute]
public IEnumerable`1<string> RoleDefinitionNameLines { get; }
    [RemoteAttribute]
public string SelectedGroup { get; }
    [RemoteAttribute]
public bool SharedWithEnabled { get; }
    [RemoteAttribute]
public string SharingCssLink { get; }
    [RemoteAttribute]
public bool TabbedDialogEnabled { get; }
    [RemoteAttribute]
public int TabToShow { get; }
    [RemoteAttribute]
public string txtEmailSubjectText { get; }
    [RemoteAttribute]
public string UserDisplayUrl { get; }
    [EditorBrowsableAttribute("1")]
public SharePointSharingSettings(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_AddToGroupModeName();
    public IEnumerable`1<string> get_GroupNameLines();
    public IEnumerable`1<string> get_GroupRoleDefinitionNamesLines();
    public bool get_IsMobileView();
    public bool get_PanelGivePermissionsVisible();
    public bool get_PanelShowHideMoreOptionsVisible();
    public bool get_PanelSimplifiedRoleSelectorVisible();
    public PickerSettings get_PickerProperties();
    public IEnumerable`1<string> get_RequiredScriptFileLinks();
    public IEnumerable`1<string> get_RoleDefinitionNameLines();
    public string get_SelectedGroup();
    public bool get_SharedWithEnabled();
    public string get_SharingCssLink();
    public bool get_TabbedDialogEnabled();
    public int get_TabToShow();
    public string get_txtEmailSubjectText();
    public string get_UserDisplayUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SharePointSharingSettingsObjectPropertyNames : object {
    public static string PickerProperties;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SharePointSharingSettingsPropertyNames : object {
    public static string AddToGroupModeName;
    public static string GroupNameLines;
    public static string GroupRoleDefinitionNamesLines;
    public static string IsMobileView;
    public static string PanelGivePermissionsVisible;
    public static string PanelShowHideMoreOptionsVisible;
    public static string PanelSimplifiedRoleSelectorVisible;
    public static string RequiredScriptFileLinks;
    public static string RoleDefinitionNameLines;
    public static string SelectedGroup;
    public static string SharedWithEnabled;
    public static string SharingCssLink;
    public static string TabbedDialogEnabled;
    public static string TabToShow;
    public static string txtEmailSubjectText;
    public static string UserDisplayUrl;
}
public enum Microsoft.SharePoint.Client.Sharing.BlockDownloadLinksFileType : Enum {
    public int value__;
    public static BlockDownloadLinksFileType WebPreviewableFiles;
    public static BlockDownloadLinksFileType ServerRenderedFilesOnly;
}
[ScriptTypeAttribute("SP.Sharing.DocumentSharingManager")]
public static class Microsoft.SharePoint.Client.Sharing.DocumentSharingManager : object {
    [RemoteAttribute]
public static RoleDefinition GetRoleDefinition(ClientRuntimeContext context, Role role);
    [RemoteAttribute]
public static ClientResult`1<bool> IsDocumentSharingEnabled(ClientRuntimeContext context, List list);
    [RemoteAttribute]
public static ClientResult`1<bool> CanMemberShare(ClientRuntimeContext context, List list);
    [RemoteAttribute]
public static IList`1<UserSharingResult> UpdateDocumentSharingInfo(ClientRuntimeContext context, string resourceAddress, IList`1<UserRoleAssignment> userRoleAssignments, bool validateExistingPermissions, bool additiveMode, bool sendServerManagedNotification, string customMessage, bool includeAnonymousLinksInNotification, bool propagateAcl);
    [RemoteAttribute]
public static IEnumerable`1<SharedWithMeViewItemRemovalResult> RemoveItemsFromSharedWithMeView(ClientRuntimeContext context, IList`1<string> itemUrls);
    [RemoteAttribute]
public static IEnumerable`1<SharedWithMeViewItemRemovalResult> RemoveItemsFromSharedWithMeViewByPath(ClientRuntimeContext context, IList`1<ResourcePath> itemPaths);
}
public enum Microsoft.SharePoint.Client.Sharing.RemoveItemsFromSharedWithMeViewErrorCode : Enum {
    public int value__;
    public static RemoveItemsFromSharedWithMeViewErrorCode Success;
    public static RemoveItemsFromSharedWithMeViewErrorCode InvalidListItem;
    public static RemoveItemsFromSharedWithMeViewErrorCode InvalidItemSharing;
    public static RemoveItemsFromSharedWithMeViewErrorCode UnableToRemoveItem;
}
public enum Microsoft.SharePoint.Client.Sharing.Role : Enum {
    public int value__;
    public static Role None;
    public static Role View;
    public static Role Edit;
    public static Role Owner;
    public static Role LimitedView;
    public static Role LimitedEdit;
    public static Role Review;
    public static Role RestrictedView;
    public static Role Submit;
    public static Role ManageList;
}
public enum Microsoft.SharePoint.Client.Sharing.SharedObjectType : Enum {
    public int value__;
    public static SharedObjectType Unknown;
    public static SharedObjectType File;
    public static SharedObjectType Folder;
    public static SharedObjectType Item;
    public static SharedObjectType List;
    public static SharedObjectType Web;
    public static SharedObjectType Max;
}
[ScriptTypeAttribute("SP.Sharing.SharedWithMeViewItemRemovalResult")]
public class Microsoft.SharePoint.Client.Sharing.SharedWithMeViewItemRemovalResult : ClientValueObject {
    private RemoveItemsFromSharedWithMeViewErrorCode m_errorCode;
    private string m_errorMessage;
    private bool m_success;
    [RemoteAttribute]
public RemoveItemsFromSharedWithMeViewErrorCode ErrorCode { get; }
    [RemoteAttribute]
public string ErrorMessage { get; }
    [RemoteAttribute]
public bool Success { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public RemoveItemsFromSharedWithMeViewErrorCode get_ErrorCode();
    public string get_ErrorMessage();
    public bool get_Success();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.Sharing.SharingDomainRestrictionMode : Enum {
    public int value__;
    public static SharingDomainRestrictionMode None;
    public static SharingDomainRestrictionMode AllowList;
    public static SharingDomainRestrictionMode BlockList;
}
internal enum Microsoft.SharePoint.Client.Sharing.SharingEntityResultReason : Enum {
    public int value__;
    public static SharingEntityResultReason None;
    public static SharingEntityResultReason Success;
    public static SharingEntityResultReason Resolved;
    public static SharingEntityResultReason ResolveEntityFailed;
    public static SharingEntityResultReason ExternalInviteeNotAllowed;
    public static SharingEntityResultReason ExistingExternalUserNotAllowedOrgLink;
    public static SharingEntityResultReason SharingToBlockedUserOnODB;
    public static SharingEntityResultReason EntityCouldNotBeResolved;
    public static SharingEntityResultReason AccountDisabled;
    public static SharingEntityResultReason SharingToBlockedDomain;
    public static SharingEntityResultReason SharingToUnresolvedEntity;
    public static SharingEntityResultReason SharingSettingPolicy;
    public static SharingEntityResultReason SharingToInvalidEmail;
    public static SharingEntityResultReason ExternalSharingNotSupportedforLoop;
    public static SharingEntityResultReason ClaimNotAllowed;
    public static SharingEntityResultReason ClientPeoplePickerEmailBlockedForODBByAdmin;
    public static SharingEntityResultReason ResolvedButNoShareResult_CheckRecipientState;
    public static SharingEntityResultReason ExternalSharingNotSupportedforAMSRCTToken;
    public static SharingEntityResultReason SharingToGuestUserNotCurrentlyOnSharedChannelNotAllowed;
    public static SharingEntityResultReason InvitationBlockedByAADB2BCollaborationSettings;
    public static SharingEntityResultReason SharingToBlockedBySiteRAC;
}
internal enum Microsoft.SharePoint.Client.Sharing.SharingLinkExpressOptions : Enum {
    public int value__;
    public static SharingLinkExpressOptions AddressBarLink;
}
public enum Microsoft.SharePoint.Client.Sharing.SharingScope : Enum {
    public int value__;
    public static SharingScope Uninitialized;
    public static SharingScope Anyone;
    public static SharingScope Organization;
    public static SharingScope SpecificPeople;
}
internal enum Microsoft.SharePoint.Client.Sharing.SharingSettingPolicyType : Enum {
    public int value__;
    public static SharingSettingPolicyType None;
    public static SharingSettingPolicyType GeneralPolicy;
    public static SharingSettingPolicyType CollaborationType;
    public static SharingSettingPolicyType TenantDoesNotAllowExternalSharing;
    public static SharingSettingPolicyType TenantOnlyAllowsExistingUserSharing;
    public static SharingSettingPolicyType TenantOnlyAllowsAuthUserSharing;
    public static SharingSettingPolicyType SiteDoesNotAllowExternalSharing;
    public static SharingSettingPolicyType SiteOnlyAllowsExistingUserSharing;
    public static SharingSettingPolicyType SiteOnlyAllowsAuthUserSharing;
    public static SharingSettingPolicyType AllMySitesDoesNotAllowExternalSharing;
    public static SharingSettingPolicyType AllMySitesOnlyAllowsExistingUserSharing;
    public static SharingSettingPolicyType AllMySitesOnlyAllowsAuthUserSharing;
    public static SharingSettingPolicyType FluidComponentsNotAllowedExternalSharing;
    public static SharingSettingPolicyType RCTAMSCallerDoesNotAllowSharing;
    public static SharingSettingPolicyType TenantFolderAnonymousLinkPermission;
    public static SharingSettingPolicyType TenantFileAnonymousLinkPermission;
    public static SharingSettingPolicyType SharerNotInWhoCanShareGroup;
    public static SharingSettingPolicyType SharerNotInGuestSharingGroup;
    public static SharingSettingPolicyType ShareeNotInWhoCanBeSharedWithList;
    public static SharingSettingPolicyType TenantSPListAnonymousLinkPermission;
    public static SharingSettingPolicyType TenantLevelNotInAllowDomainList;
    public static SharingSettingPolicyType TenantLevelInDenyDomainList;
    public static SharingSettingPolicyType SiteLevelNotInAllowDomainList;
    public static SharingSettingPolicyType SiteLevelInDenyDomainList;
    public static SharingSettingPolicyType AADB2BLevelInvitationDomainBlocked;
    public static SharingSettingPolicyType AADB2BLevelGuestInviteBlocked;
    public static SharingSettingPolicyType DLPPolicy;
    public static SharingSettingPolicyType InformationBarrierPolicy;
    public static SharingSettingPolicyType SiteInformationBarrier;
    public static SharingSettingPolicyType TenantInformationBarrier;
    public static SharingSettingPolicyType UserInformationBarrier;
    public static SharingSettingPolicyType SiteIBImplicitMode;
    public static SharingSettingPolicyType SiteIBOwnerModeratedMode;
    public static SharingSettingPolicyType SiteIBModeNotOpen;
    public static SharingSettingPolicyType InformationBarrierDiscoverable;
    public static SharingSettingPolicyType ExclusionList;
    public static SharingSettingPolicyType SubmitOnlyLinksSupportedOnFolderOnly;
    public static SharingSettingPolicyType SubmitOnlyLinksDisabled;
    public static SharingSettingPolicyType UnresolvedAndInternalByVerifiedDomainName;
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.Sharing.SharingVariant : Enum {
    public int value__;
    public static SharingVariant None;
    public static SharingVariant AddressBarLink;
    public static SharingVariant PasswordProtected;
    public static SharingVariant TrackLinkUsers;
    public static SharingVariant Embeddable;
    public static SharingVariant Ephemeral;
    public static SharingVariant RestrictToExistingRelationships;
}
[ScriptTypeAttribute("SP.Sharing.UserRoleAssignment")]
public class Microsoft.SharePoint.Client.Sharing.UserRoleAssignment : ClientValueObject {
    private Role m_role;
    private string m_userId;
    [RemoteAttribute]
public Role Role { get; public set; }
    [RemoteAttribute]
public string UserId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Role get_Role();
    public void set_Role(Role value);
    public string get_UserId();
    public void set_UserId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Sharing.UserSharingResult")]
public class Microsoft.SharePoint.Client.Sharing.UserSharingResult : ClientValueObject {
    private IEnumerable`1<Role> m_allowedRoles;
    private Role m_currentRole;
    private string m_displayName;
    private string m_email;
    private DateTime m_expirationDateTimeOnACE;
    private string m_invitationLink;
    private bool m_isUserKnown;
    private string m_message;
    private string m_otherMails;
    private bool m_status;
    private string m_user;
    [RemoteAttribute]
public IEnumerable`1<Role> AllowedRoles { get; }
    [RemoteAttribute]
public Role CurrentRole { get; }
    [RemoteAttribute]
public string DisplayName { get; }
    [RemoteAttribute]
public string Email { get; }
    [RemoteAttribute]
public DateTime ExpirationDateTimeOnACE { get; }
    [RemoteAttribute]
public string InvitationLink { get; }
    [RemoteAttribute]
public bool IsUserKnown { get; }
    [RemoteAttribute]
public string Message { get; }
    [RemoteAttribute]
public string OtherMails { get; }
    [RemoteAttribute]
public bool Status { get; }
    [RemoteAttribute]
public string User { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IEnumerable`1<Role> get_AllowedRoles();
    public Role get_CurrentRole();
    public string get_DisplayName();
    public string get_Email();
    public DateTime get_ExpirationDateTimeOnACE();
    public string get_InvitationLink();
    public bool get_IsUserKnown();
    public string get_Message();
    public string get_OtherMails();
    public bool get_Status();
    public string get_User();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Sharing.WebSharingManager")]
public static class Microsoft.SharePoint.Client.Sharing.WebSharingManager : object {
    [RemoteAttribute]
public static ClientResult`1<bool> CanMemberShare(ClientRuntimeContext context, Web web);
    [RemoteAttribute]
public static IList`1<UserSharingResult> UpdateWebSharingInformation(ClientRuntimeContext context, Web web, IList`1<UserRoleAssignment> userRoleAssignments, bool sendServerManagedNotification, string customMessage, bool additivePermission, bool allowExternalSharing);
}
[ScriptTypeAttribute("SP.SharingLinkData")]
public class Microsoft.SharePoint.Client.SharingLinkData : ClientValueObject {
    private bool m_blocksDownload;
    private string m_description;
    private bool m_embeddable;
    private string m_expiration;
    private bool m_hasExternalGuestInvitees;
    private bool m_isAddressBarLink;
    private bool m_isAnonymous;
    private bool m_isCreateOnlyLink;
    private bool m_isFormsLink;
    private bool m_isManageListLink;
    private bool m_isOriginatedFromSharingFlow;
    private bool m_isReviewLink;
    private bool m_isSharingLink;
    private bool m_isWritable;
    private SharingLinkKind m_linkKind;
    private SharedObjectType m_objectType;
    private Guid m_objectUniqueId;
    private bool m_requiresPassword;
    private bool m_restrictedShareMembership;
    private bool m_restrictToExistingRelationships;
    private Guid m_shareId;
    private bool m_trackLinkUsers;
    [RemoteAttribute]
public bool BlocksDownload { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public bool Embeddable { get; }
    [RemoteAttribute]
public string Expiration { get; public set; }
    [RemoteAttribute]
public bool HasExternalGuestInvitees { get; public set; }
    [RemoteAttribute]
public bool IsAddressBarLink { get; public set; }
    [RemoteAttribute]
public bool IsAnonymous { get; public set; }
    [RemoteAttribute]
public bool IsCreateOnlyLink { get; public set; }
    [RemoteAttribute]
public bool IsFormsLink { get; public set; }
    [RemoteAttribute]
public bool IsManageListLink { get; public set; }
    [RemoteAttribute]
public bool IsOriginatedFromSharingFlow { get; public set; }
    [RemoteAttribute]
public bool IsReviewLink { get; public set; }
    [RemoteAttribute]
public bool IsSharingLink { get; public set; }
    [RemoteAttribute]
public bool IsWritable { get; public set; }
    [RemoteAttribute]
public SharingLinkKind LinkKind { get; public set; }
    [RemoteAttribute]
public SharedObjectType ObjectType { get; public set; }
    [RemoteAttribute]
public Guid ObjectUniqueId { get; public set; }
    [RemoteAttribute]
public bool RequiresPassword { get; public set; }
    [RemoteAttribute]
public bool RestrictedShareMembership { get; public set; }
    [RemoteAttribute]
public bool RestrictToExistingRelationships { get; }
    [RemoteAttribute]
public Guid ShareId { get; public set; }
    [RemoteAttribute]
public bool TrackLinkUsers { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_BlocksDownload();
    public void set_BlocksDownload(bool value);
    public string get_Description();
    public void set_Description(string value);
    public bool get_Embeddable();
    public string get_Expiration();
    public void set_Expiration(string value);
    public bool get_HasExternalGuestInvitees();
    public void set_HasExternalGuestInvitees(bool value);
    public bool get_IsAddressBarLink();
    public void set_IsAddressBarLink(bool value);
    public bool get_IsAnonymous();
    public void set_IsAnonymous(bool value);
    public bool get_IsCreateOnlyLink();
    public void set_IsCreateOnlyLink(bool value);
    public bool get_IsFormsLink();
    public void set_IsFormsLink(bool value);
    public bool get_IsManageListLink();
    public void set_IsManageListLink(bool value);
    public bool get_IsOriginatedFromSharingFlow();
    public void set_IsOriginatedFromSharingFlow(bool value);
    public bool get_IsReviewLink();
    public void set_IsReviewLink(bool value);
    public bool get_IsSharingLink();
    public void set_IsSharingLink(bool value);
    public bool get_IsWritable();
    public void set_IsWritable(bool value);
    public SharingLinkKind get_LinkKind();
    public void set_LinkKind(SharingLinkKind value);
    public SharedObjectType get_ObjectType();
    public void set_ObjectType(SharedObjectType value);
    public Guid get_ObjectUniqueId();
    public void set_ObjectUniqueId(Guid value);
    public bool get_RequiresPassword();
    public void set_RequiresPassword(bool value);
    public bool get_RestrictedShareMembership();
    public void set_RestrictedShareMembership(bool value);
    public bool get_RestrictToExistingRelationships();
    public Guid get_ShareId();
    public void set_ShareId(Guid value);
    public bool get_TrackLinkUsers();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SharingLinkInfo")]
public class Microsoft.SharePoint.Client.SharingLinkInfo : ClientValueObject {
    private bool m_allowsAnonymousAccess;
    private string m_applicationId;
    private bool m_blocksDownload;
    private string m_created;
    private string m_description;
    private bool m_embeddable;
    private string m_expiration;
    private bool m_hasExternalGuestInvitees;
    private bool m_isActive;
    private bool m_isAddressBarLink;
    private bool m_isCreateOnlyLink;
    private bool m_isDefault;
    private bool m_isEditLink;
    private bool m_isEphemeral;
    private bool m_isFormsLink;
    private bool m_isManageListLink;
    private bool m_isReviewLink;
    private bool m_isUnhealthy;
    private string m_lastModified;
    private bool m_limitUseToApplication;
    private SharingLinkKind m_linkKind;
    private string m_meetingId;
    private string m_passwordLastModified;
    private bool m_requiresPassword;
    private bool m_restrictedShareMembership;
    private bool m_restrictToExistingRelationships;
    private SharingScope m_scope;
    private Guid m_shareId;
    private string m_shareTokenString;
    private SharingLinkStatus m_sharingLinkStatus;
    private bool m_trackLinkUsers;
    private string m_url;
    [RemoteAttribute]
public bool AllowsAnonymousAccess { get; }
    [RemoteAttribute]
public string ApplicationId { get; }
    [RemoteAttribute]
public bool BlocksDownload { get; }
    [RemoteAttribute]
public string Created { get; }
    [RemoteAttribute]
public string Description { get; }
    [RemoteAttribute]
public bool Embeddable { get; }
    [RemoteAttribute]
public string Expiration { get; }
    [RemoteAttribute]
public bool HasExternalGuestInvitees { get; }
    [RemoteAttribute]
public bool IsActive { get; }
    [RemoteAttribute]
public bool IsAddressBarLink { get; }
    [RemoteAttribute]
public bool IsCreateOnlyLink { get; }
    [RemoteAttribute]
public bool IsDefault { get; }
    [RemoteAttribute]
public bool IsEditLink { get; }
    [RemoteAttribute]
public bool IsEphemeral { get; }
    [RemoteAttribute]
public bool IsFormsLink { get; }
    [RemoteAttribute]
public bool IsManageListLink { get; }
    [RemoteAttribute]
public bool IsReviewLink { get; }
    [RemoteAttribute]
public bool IsUnhealthy { get; }
    [RemoteAttribute]
public string LastModified { get; }
    [RemoteAttribute]
public bool LimitUseToApplication { get; }
    [RemoteAttribute]
public SharingLinkKind LinkKind { get; }
    [RemoteAttribute]
public string MeetingId { get; }
    [RemoteAttribute]
public string PasswordLastModified { get; }
    [RemoteAttribute]
public bool RequiresPassword { get; }
    [RemoteAttribute]
public bool RestrictedShareMembership { get; }
    [RemoteAttribute]
public bool RestrictToExistingRelationships { get; }
    [RemoteAttribute]
public SharingScope Scope { get; }
    [RemoteAttribute]
public Guid ShareId { get; }
    [RemoteAttribute]
public string ShareTokenString { get; }
    [RemoteAttribute]
public SharingLinkStatus SharingLinkStatus { get; }
    [RemoteAttribute]
public bool TrackLinkUsers { get; }
    [RemoteAttribute]
public string Url { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_AllowsAnonymousAccess();
    public string get_ApplicationId();
    public bool get_BlocksDownload();
    public string get_Created();
    public string get_Description();
    public bool get_Embeddable();
    public string get_Expiration();
    public bool get_HasExternalGuestInvitees();
    public bool get_IsActive();
    public bool get_IsAddressBarLink();
    public bool get_IsCreateOnlyLink();
    public bool get_IsDefault();
    public bool get_IsEditLink();
    public bool get_IsEphemeral();
    public bool get_IsFormsLink();
    public bool get_IsManageListLink();
    public bool get_IsReviewLink();
    public bool get_IsUnhealthy();
    public string get_LastModified();
    public bool get_LimitUseToApplication();
    public SharingLinkKind get_LinkKind();
    public string get_MeetingId();
    public string get_PasswordLastModified();
    public bool get_RequiresPassword();
    public bool get_RestrictedShareMembership();
    public bool get_RestrictToExistingRelationships();
    public SharingScope get_Scope();
    public Guid get_ShareId();
    public string get_ShareTokenString();
    public SharingLinkStatus get_SharingLinkStatus();
    public bool get_TrackLinkUsers();
    public string get_Url();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.SharingLinkKind : Enum {
    public int value__;
    public static SharingLinkKind Uninitialized;
    public static SharingLinkKind Direct;
    public static SharingLinkKind OrganizationView;
    public static SharingLinkKind OrganizationEdit;
    public static SharingLinkKind AnonymousView;
    public static SharingLinkKind AnonymousEdit;
    public static SharingLinkKind Flexible;
}
public enum Microsoft.SharePoint.Client.SharingLinkStatus : Enum {
    public int value__;
    public static SharingLinkStatus Uninitialized;
    public static SharingLinkStatus Created;
    public static SharingLinkStatus Updated;
}
public enum Microsoft.SharePoint.Client.SharingOperationStatusCode : Enum {
    public int value__;
    public static SharingOperationStatusCode CompletedSuccessfully;
    public static SharingOperationStatusCode AccessRequestsQueued;
    public static SharingOperationStatusCode NoResolvedUsers;
    public static SharingOperationStatusCode AccessDenied;
    public static SharingOperationStatusCode CrossSiteRequestNotSupported;
    public static SharingOperationStatusCode UnknowError;
    public static SharingOperationStatusCode EmailBodyTooLong;
    public static SharingOperationStatusCode ListUniqueScopesExceeded;
    public static SharingOperationStatusCode CapabilityDisabled;
    public static SharingOperationStatusCode ObjectNotSupported;
    public static SharingOperationStatusCode NestedGroupsNotSupported;
    public static SharingOperationStatusCode QuotaExceeded;
    public static SharingOperationStatusCode InvalidValue;
    public static SharingOperationStatusCode UserDoesNotExist;
    public static SharingOperationStatusCode TooManyChildItemsWithUniqueScopes;
    public static SharingOperationStatusCode OperationCancelled;
    public static SharingOperationStatusCode SharingBufferExceeded;
    public static SharingOperationStatusCode InvalidObjectStatus;
    public static SharingOperationStatusCode MountPointSharingNotAllowed;
    public static SharingOperationStatusCode RequestThrottled;
    public static SharingOperationStatusCode FileNotFound;
    public static SharingOperationStatusCode ForceCheckoutEditLink;
    public static SharingOperationStatusCode ShareByLinkDisabled;
    public static SharingOperationStatusCode NotSupportedByWOPI;
    public static SharingOperationStatusCode ListItemNotFound;
    public static SharingOperationStatusCode ParentListIsPrivate;
    public static SharingOperationStatusCode DocLibIsCatalog;
    public static SharingOperationStatusCode IRMIsEnabled;
    public static SharingOperationStatusCode NonClaimsWebapp;
    public static SharingOperationStatusCode ParentListIsNull;
    public static SharingOperationStatusCode RoledefinitionNotFound;
    public static SharingOperationStatusCode ObjectNotShareableByLink;
    public static SharingOperationStatusCode AccessDeniedToAnonGuest;
    public static SharingOperationStatusCode AccessDeniedNotEnoughPermissions;
    public static SharingOperationStatusCode DocumentIsProtectedByDLP;
    public static SharingOperationStatusCode AnonymousEditLinkNotAllowedByTenant;
    public static SharingOperationStatusCode UserBlockedByWhoCanShareSettings;
    public static SharingOperationStatusCode ShareDoesNotExist;
    public static SharingOperationStatusCode ExternalInviteeNotAllowed;
    public static SharingOperationStatusCode SecurableNotFound;
    public static SharingOperationStatusCode UserIsInBlockedSecurityGroupForODB;
    public static SharingOperationStatusCode ExternalInvitationFailed;
    public static SharingOperationStatusCode DuplicateValuesInSharingList;
    public static SharingOperationStatusCode LimitedAccessLockdownModeEnabled;
    public static SharingOperationStatusCode AddressBarLinkNotUpdateable;
    public static SharingOperationStatusCode AnonymousLinkBlockedBySiteIB;
    public static SharingOperationStatusCode ListNotFound;
    public static SharingOperationStatusCode WebNotFound;
    public static SharingOperationStatusCode ListNotShareableByLink;
    public static SharingOperationStatusCode WebNotShareableByLink;
    public static SharingOperationStatusCode AnonymousLinkDisallowedFileType;
    public static SharingOperationStatusCode ExternalInvitationFailedUnexpected;
    public static SharingOperationStatusCode AnyoneLinkDisabledForFileType;
    public static SharingOperationStatusCode StubFileSharingNotAllowed;
    public static SharingOperationStatusCode SharingBlockedBySiteIBMode;
    public static SharingOperationStatusCode SharingBlockedByVirusCheckStatus;
    public static SharingOperationStatusCode UpdateSPShareFailed;
    public static SharingOperationStatusCode InvitationNotSent;
    public static SharingOperationStatusCode ClaimNotAllowed;
    public static SharingOperationStatusCode SharingAnonymousLink;
    public static SharingOperationStatusCode SharingToBlockedDomain;
    public static SharingOperationStatusCode SharingToInvalidEmail;
    public static SharingOperationStatusCode SharingToUnresolvedEntity;
    public static SharingOperationStatusCode SharingToBlockedUserOnODB;
    public static SharingOperationStatusCode InvalidPermissionLevel;
    public static SharingOperationStatusCode MembersCannotShareNonListItem;
    public static SharingOperationStatusCode SharingWebBlockedForChannelSite;
    public static SharingOperationStatusCode ExternalInviteeNotAllowedForFluidComponent;
    public static SharingOperationStatusCode NumInvitationsOverlimit;
    public static SharingOperationStatusCode NumUsersOverlimit;
    public static SharingOperationStatusCode ObjectLocked;
    public static SharingOperationStatusCode NavParameterExceedsLengthLimit;
    public static SharingOperationStatusCode NavParameterIsNotBase64UrlEncoded;
    public static SharingOperationStatusCode SharingBlockedBySiteLockDown;
    public static SharingOperationStatusCode SharingUnsupportedCspContainerSite;
    public static SharingOperationStatusCode SharingToNonOIdRecipient;
    public static SharingOperationStatusCode AllRecipientsFailed;
    public static SharingOperationStatusCode PartialSuccess;
    public static SharingOperationStatusCode ExternalSharingNotAllowedViaAMSRCT;
    public static SharingOperationStatusCode LinkTypeNotAllowedViaAMSRCT;
    public static SharingOperationStatusCode SharingToGuestUserNotCurrentlyOnSharedChannelNotAllowed;
    public static SharingOperationStatusCode InvitationBlockedByAADB2BCollaborationSettings;
    public static SharingOperationStatusCode SharingToBlockedUser;
    public static SharingOperationStatusCode SharingToBlockedBySiteRAC;
    public static SharingOperationStatusCode ItemVersionConflict;
    public static SharingOperationStatusCode CreateSPShareFailed;
}
[ScriptTypeAttribute("SP.SharingPermissionInformation")]
public class Microsoft.SharePoint.Client.SharingPermissionInformation : ClientObject {
    [RemoteAttribute]
public bool IsDefaultPermission { get; }
    [RemoteAttribute]
public string PermissionDescription { get; }
    [RemoteAttribute]
public string PermissionId { get; }
    [RemoteAttribute]
public SharingPermissionKind PermissionKind { get; }
    [RemoteAttribute]
public string PermissionName { get; }
    [RemoteAttribute]
public RoleType PermissionRoleType { get; }
    [EditorBrowsableAttribute("1")]
public SharingPermissionInformation(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_IsDefaultPermission();
    public string get_PermissionDescription();
    public string get_PermissionId();
    public SharingPermissionKind get_PermissionKind();
    public string get_PermissionName();
    public RoleType get_PermissionRoleType();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SharingPermissionInformationCollection")]
public class Microsoft.SharePoint.Client.SharingPermissionInformationCollection : ClientObjectCollection`1<SharingPermissionInformation> {
    [EditorBrowsableAttribute("1")]
public SharingPermissionInformationCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SharingPermissionInformationPropertyNames : object {
    public static string IsDefaultPermission;
    public static string PermissionDescription;
    public static string PermissionId;
    public static string PermissionKind;
    public static string PermissionName;
    public static string PermissionRoleType;
}
public enum Microsoft.SharePoint.Client.SharingPermissionKind : Enum {
    public int value__;
    public static SharingPermissionKind Group;
    public static SharingPermissionKind Role;
}
[ScriptTypeAttribute("SP.SharingResult")]
public class Microsoft.SharePoint.Client.SharingResult : ClientObject {
    [RemoteAttribute]
public string ErrorMessage { get; }
    [RemoteAttribute]
public GroupCollection GroupsSharedWith { get; }
    [RemoteAttribute]
public Group GroupUsersAddedTo { get; }
    [RemoteAttribute]
public string IconUrl { get; }
    [RemoteAttribute]
public IList`1<SPInvitationCreationResult> InvitedUsers { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public string PermissionsPageRelativeUrl { get; }
    [RemoteAttribute]
public SharingOperationStatusCode StatusCode { get; }
    [RemoteAttribute]
public IList`1<UserSharingResult> UniquelyPermissionedUsers { get; }
    [RemoteAttribute]
public string Url { get; }
    [RemoteAttribute]
public IList`1<UserSharingResult> UsersAddedToGroup { get; }
    [RemoteAttribute]
public SharingUserCollection UsersWithAccessRequests { get; }
    [EditorBrowsableAttribute("1")]
public SharingResult(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_ErrorMessage();
    public GroupCollection get_GroupsSharedWith();
    public Group get_GroupUsersAddedTo();
    public string get_IconUrl();
    public IList`1<SPInvitationCreationResult> get_InvitedUsers();
    public string get_Name();
    public string get_PermissionsPageRelativeUrl();
    public SharingOperationStatusCode get_StatusCode();
    public IList`1<UserSharingResult> get_UniquelyPermissionedUsers();
    public string get_Url();
    public IList`1<UserSharingResult> get_UsersAddedToGroup();
    public SharingUserCollection get_UsersWithAccessRequests();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SharingResultObjectPropertyNames : object {
    public static string GroupsSharedWith;
    public static string GroupUsersAddedTo;
    public static string UsersWithAccessRequests;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SharingResultPropertyNames : object {
    public static string ErrorMessage;
    public static string IconUrl;
    public static string InvitedUsers;
    public static string Name;
    public static string PermissionsPageRelativeUrl;
    public static string StatusCode;
    public static string UniquelyPermissionedUsers;
    public static string Url;
    public static string UsersAddedToGroup;
}
public enum Microsoft.SharePoint.Client.SharingState : Enum {
    public int value__;
    public static SharingState Unspecified;
    public static SharingState On;
    public static SharingState Off;
}
[ScriptTypeAttribute("SP.SharingUserCollection")]
public class Microsoft.SharePoint.Client.SharingUserCollection : ClientObjectCollection`1<User> {
    [EditorBrowsableAttribute("1")]
public SharingUserCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
public enum Microsoft.SharePoint.Client.ShowInFiltersPaneStatus : Enum {
    public int value__;
    public static ShowInFiltersPaneStatus Auto;
    public static ShowInFiltersPaneStatus Pinned;
    public static ShowInFiltersPaneStatus Removed;
}
[ScriptTypeAttribute("SP.Site")]
public class Microsoft.SharePoint.Client.Site : ClientObject {
    [RemoteAttribute]
public bool AllowCreateDeclarativeWorkflow { get; public set; }
    [RemoteAttribute]
public bool AllowDesigner { get; public set; }
    [RemoteAttribute]
public HTMLFieldSecuritySetting AllowedExternalDomains { get; }
    [RemoteAttribute]
public ScriptSafeExternalEmbedding AllowExternalEmbeddingWrapper { get; public set; }
    [RemoteAttribute]
public bool AllowMasterPageEditing { get; public set; }
    [RemoteAttribute]
public bool AllowRevertFromTemplate { get; public set; }
    [RemoteAttribute]
public bool AllowSaveDeclarativeWorkflowAsTemplate { get; public set; }
    [RemoteAttribute]
public bool AllowSavePublishDeclarativeWorkflow { get; public set; }
    [RemoteAttribute]
public bool AllowSelfServiceUpgrade { get; public set; }
    [RemoteAttribute]
public bool AllowSelfServiceUpgradeEvaluation { get; public set; }
    [RemoteAttribute]
public Audit Audit { get; }
    [RemoteAttribute]
public int AuditLogTrimmingRetention { get; public set; }
    [RemoteAttribute]
public bool CanSyncHubSitePermissions { get; public set; }
    [RemoteAttribute]
public bool CanUpgrade { get; }
    [RemoteAttribute]
public Guid ChannelGroupId { get; }
    [RemoteAttribute]
public string Classification { get; public set; }
    [RemoteAttribute]
public bool CommentsOnSitePagesDisabled { get; public set; }
    [RemoteAttribute]
public int CompatibilityLevel { get; }
    [RemoteAttribute]
public string ComplianceAttribute { get; public set; }
    [RemoteAttribute]
public ChangeToken CurrentChangeToken { get; }
    [RemoteAttribute]
public CustomizedFormsPageCollection CustomizedFormsPages { get; }
    [RemoteAttribute]
public SPScriptSafeDomainsCollection CustomScriptSafeDomains { get; }
    [RemoteAttribute]
public bool DisableAppViews { get; public set; }
    [RemoteAttribute]
public bool DisableCompanyWideSharingLinks { get; public set; }
    [RemoteAttribute]
public bool DisableFlows { get; public set; }
    [RemoteAttribute]
public EventReceiverDefinitionCollection EventReceivers { get; }
    [RemoteAttribute]
public bool ExternalSharingTipsEnabled { get; }
    [RemoteAttribute]
public int ExternalUserExpirationInDays { get; }
    [RemoteAttribute]
public FeatureCollection Features { get; }
    [RemoteAttribute]
public string GeoLocation { get; }
    [RemoteAttribute]
public Guid GroupId { get; }
    [RemoteAttribute]
public Guid HubSiteId { get; }
    [RemoteAttribute]
public Group HubSiteSynchronizableVisitorGroup { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string SensitivityLabelId { get; public set; }
    [RemoteAttribute]
public Guid SensitivityLabel { get; public set; }
    [RemoteAttribute]
public bool IsHubSite { get; }
    [RemoteAttribute]
public bool IsRestrictContentOrgWideSearchPolicyEnforcedOnSite { get; }
    [RemoteAttribute]
public bool IsRestrictedAccessControlPolicyEnforcedOnSite { get; }
    [RemoteAttribute]
public string LockIssue { get; }
    [RemoteAttribute]
public UInt32 MaxItemsPerThrottledOperation { get; }
    [RemoteAttribute]
public bool MediaTranscriptionDisabled { get; public set; }
    [RemoteAttribute]
public bool NeedsB2BUpgrade { get; public set; }
    [RemoteAttribute]
public User Owner { get; public set; }
    [RemoteAttribute]
public ResourcePath ResourcePath { get; }
    [RemoteAttribute]
public string PrimaryUri { get; }
    [RemoteAttribute]
public bool ReadOnly { get; }
    [RemoteAttribute]
public RecycleBinItemCollection RecycleBin { get; }
    [RemoteAttribute]
public Guid RelatedGroupId { get; }
    [RemoteAttribute]
public string RequiredDesignerVersion { get; }
    [RemoteAttribute]
public IList`1<string> RestrictedAccessControlGroupsEnforcedOnSite { get; }
    [RemoteAttribute]
public Web RootWeb { get; }
    [RemoteAttribute]
public SandboxedCodeActivationCapabilities SandboxedCodeActivationCapability { get; public set; }
    [RemoteAttribute]
public SearchBoxInNavBarType SearchBoxInNavBar { get; public set; }
    [RemoteAttribute]
public string SearchBoxPlaceholderText { get; public set; }
    [RemoteAttribute]
public User SecondaryContact { get; public set; }
    [RemoteAttribute]
public SensitivityLabelInfo SensitivityLabelInfo { get; }
    [RemoteAttribute]
public ResourcePath ServerRelativePath { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [RemoteAttribute]
public bool ShareByEmailEnabled { get; public set; }
    [RemoteAttribute]
public bool ShareByLinkEnabled { get; }
    [RemoteAttribute]
public bool ShowPeoplePickerSuggestionsForGuestUsers { get; public set; }
    [RemoteAttribute]
public bool ShowUrlStructure { get; public set; }
    [RemoteAttribute]
public bool SitePolicyEnabled { get; }
    [RemoteAttribute]
public bool SocialBarOnSitePagesDisabled { get; public set; }
    [RemoteAttribute]
public string StatusBarLink { get; public set; }
    [RemoteAttribute]
public string StatusBarText { get; public set; }
    [RemoteAttribute]
public bool ThicketSupportDisabled { get; }
    [RemoteAttribute]
public bool TrimAuditLog { get; public set; }
    [RemoteAttribute]
public bool UIVersionConfigurationEnabled { get; public set; }
    [RemoteAttribute]
public UpgradeInfo UpgradeInfo { get; }
    [RemoteAttribute]
public DateTime UpgradeReminderDate { get; }
    [RemoteAttribute]
public bool UpgradeScheduled { get; public set; }
    [RemoteAttribute]
public DateTime UpgradeScheduledDate { get; public set; }
    [RemoteAttribute]
public bool Upgrading { get; }
    [RemoteAttribute]
public string Url { get; }
    [RemoteAttribute]
public UsageInfo Usage { get; }
    [RemoteAttribute]
public UserCustomActionCollection UserCustomActions { get; }
    [RemoteAttribute]
public SiteVersionPolicyManager VersionPolicyForNewLibrariesTemplate { get; }
    [RemoteAttribute]
public bool WriteLocked { get; }
    [EditorBrowsableAttribute("1")]
public Site(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_AllowCreateDeclarativeWorkflow();
    public void set_AllowCreateDeclarativeWorkflow(bool value);
    public bool get_AllowDesigner();
    public void set_AllowDesigner(bool value);
    public HTMLFieldSecuritySetting get_AllowedExternalDomains();
    public ScriptSafeExternalEmbedding get_AllowExternalEmbeddingWrapper();
    public void set_AllowExternalEmbeddingWrapper(ScriptSafeExternalEmbedding value);
    public bool get_AllowMasterPageEditing();
    public void set_AllowMasterPageEditing(bool value);
    public bool get_AllowRevertFromTemplate();
    public void set_AllowRevertFromTemplate(bool value);
    public bool get_AllowSaveDeclarativeWorkflowAsTemplate();
    public void set_AllowSaveDeclarativeWorkflowAsTemplate(bool value);
    public bool get_AllowSavePublishDeclarativeWorkflow();
    public void set_AllowSavePublishDeclarativeWorkflow(bool value);
    public bool get_AllowSelfServiceUpgrade();
    public void set_AllowSelfServiceUpgrade(bool value);
    public bool get_AllowSelfServiceUpgradeEvaluation();
    public void set_AllowSelfServiceUpgradeEvaluation(bool value);
    public Audit get_Audit();
    public int get_AuditLogTrimmingRetention();
    public void set_AuditLogTrimmingRetention(int value);
    public bool get_CanSyncHubSitePermissions();
    public void set_CanSyncHubSitePermissions(bool value);
    public bool get_CanUpgrade();
    public Guid get_ChannelGroupId();
    public string get_Classification();
    public void set_Classification(string value);
    public bool get_CommentsOnSitePagesDisabled();
    public void set_CommentsOnSitePagesDisabled(bool value);
    public int get_CompatibilityLevel();
    public string get_ComplianceAttribute();
    public void set_ComplianceAttribute(string value);
    public ChangeToken get_CurrentChangeToken();
    public CustomizedFormsPageCollection get_CustomizedFormsPages();
    public SPScriptSafeDomainsCollection get_CustomScriptSafeDomains();
    public bool get_DisableAppViews();
    public void set_DisableAppViews(bool value);
    public bool get_DisableCompanyWideSharingLinks();
    public void set_DisableCompanyWideSharingLinks(bool value);
    public bool get_DisableFlows();
    public void set_DisableFlows(bool value);
    public EventReceiverDefinitionCollection get_EventReceivers();
    public bool get_ExternalSharingTipsEnabled();
    public int get_ExternalUserExpirationInDays();
    public FeatureCollection get_Features();
    public string get_GeoLocation();
    public Guid get_GroupId();
    public Guid get_HubSiteId();
    public Group get_HubSiteSynchronizableVisitorGroup();
    public Guid get_Id();
    public string get_SensitivityLabelId();
    public void set_SensitivityLabelId(string value);
    public Guid get_SensitivityLabel();
    public void set_SensitivityLabel(Guid value);
    public bool get_IsHubSite();
    public bool get_IsRestrictContentOrgWideSearchPolicyEnforcedOnSite();
    public bool get_IsRestrictedAccessControlPolicyEnforcedOnSite();
    public string get_LockIssue();
    public UInt32 get_MaxItemsPerThrottledOperation();
    public bool get_MediaTranscriptionDisabled();
    public void set_MediaTranscriptionDisabled(bool value);
    public bool get_NeedsB2BUpgrade();
    public void set_NeedsB2BUpgrade(bool value);
    public User get_Owner();
    public void set_Owner(User value);
    public ResourcePath get_ResourcePath();
    public string get_PrimaryUri();
    public bool get_ReadOnly();
    public RecycleBinItemCollection get_RecycleBin();
    public Guid get_RelatedGroupId();
    public string get_RequiredDesignerVersion();
    public IList`1<string> get_RestrictedAccessControlGroupsEnforcedOnSite();
    public Web get_RootWeb();
    public SandboxedCodeActivationCapabilities get_SandboxedCodeActivationCapability();
    public void set_SandboxedCodeActivationCapability(SandboxedCodeActivationCapabilities value);
    public SearchBoxInNavBarType get_SearchBoxInNavBar();
    public void set_SearchBoxInNavBar(SearchBoxInNavBarType value);
    public string get_SearchBoxPlaceholderText();
    public void set_SearchBoxPlaceholderText(string value);
    public User get_SecondaryContact();
    public void set_SecondaryContact(User value);
    public SensitivityLabelInfo get_SensitivityLabelInfo();
    public ResourcePath get_ServerRelativePath();
    public string get_ServerRelativeUrl();
    public bool get_ShareByEmailEnabled();
    public void set_ShareByEmailEnabled(bool value);
    public bool get_ShareByLinkEnabled();
    public bool get_ShowPeoplePickerSuggestionsForGuestUsers();
    public void set_ShowPeoplePickerSuggestionsForGuestUsers(bool value);
    public bool get_ShowUrlStructure();
    public void set_ShowUrlStructure(bool value);
    public bool get_SitePolicyEnabled();
    public bool get_SocialBarOnSitePagesDisabled();
    public void set_SocialBarOnSitePagesDisabled(bool value);
    public string get_StatusBarLink();
    public void set_StatusBarLink(string value);
    public string get_StatusBarText();
    public void set_StatusBarText(string value);
    public bool get_ThicketSupportDisabled();
    public bool get_TrimAuditLog();
    public void set_TrimAuditLog(bool value);
    public bool get_UIVersionConfigurationEnabled();
    public void set_UIVersionConfigurationEnabled(bool value);
    public UpgradeInfo get_UpgradeInfo();
    public DateTime get_UpgradeReminderDate();
    public bool get_UpgradeScheduled();
    public void set_UpgradeScheduled(bool value);
    public DateTime get_UpgradeScheduledDate();
    public void set_UpgradeScheduledDate(DateTime value);
    public bool get_Upgrading();
    public string get_Url();
    public UsageInfo get_Usage();
    public UserCustomActionCollection get_UserCustomActions();
    public SiteVersionPolicyManager get_VersionPolicyForNewLibrariesTemplate();
    public bool get_WriteLocked();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void StartDeleteFileVersions(int deleteOlderThanDays);
    [RemoteAttribute]
public void StartDeleteFileVersionsByMode(FileVersionBatchDeleteParameters batchDeleteParameters);
    [RemoteAttribute]
public void CancelDeleteFileVersions();
    [RemoteAttribute]
public ClientResult`1<string> GetProgressForDeleteFileVersions();
    [RemoteAttribute]
public void StartSetVersionPolicyForDocLibs(bool enableAutoTrim, int majorVersionLimit, int majorWithMinorVersionsLimit, int expireAfterDays);
    [RemoteAttribute]
public void CancelSetVersionPolicyForDocLibs();
    [RemoteAttribute]
public ClientResult`1<string> GetProgressForSetVersionPolicyForDocLibs();
    [RemoteAttribute]
public void StartFileVersionExpirationReport(string reportFileUrl);
    [RemoteAttribute]
public ClientResult`1<string> GetProgressForFileVersionExpirationReport(string reportFileUrl);
    [RemoteAttribute]
public void StartExpireFileVersionsBySchedule(ResourcePath scheduleFilePath);
    [RemoteAttribute]
public ClientResult`1<string> GetProgressForExpireFileVersionsBySchedule(ResourcePath scheduleFilePath);
    [RemoteAttribute]
public ClientResult`1<CustomerKeyStatusInfo> OnboardTenantForBringYourOwnKey(CustomerKeyInfo keyInfo);
    [RemoteAttribute]
public ClientResult`1<CustomerKeyStatusInfo> RollTenantBringYourOwnKey(CustomerKeyVaultKeyType keyType, CustomerKeyVaultInfo keyVaultInfo);
    [RemoteAttribute]
public ClientResult`1<CustomerKeyStatusInfo> GetBringYourOwnKeyTenantStatus();
    [RemoteAttribute]
public ClientResult`1<CustomerKeyStatusInfo> GetBringYourOwnKeySiteStatus();
    [RemoteAttribute]
public ClientResult`1<CustomerKeyStatusInfo> RecoverTenantForBringYourOwnKey(CustomerKeyInfo keyInfo);
    [RemoteAttribute]
public ClientResult`1<CustomerRecoveryKeyMode> GetBringYourOwnKeyRecoveryKeyMode();
    [RemoteAttribute]
public void UpdateClientObjectModelUseRemoteAPIsPermissionSetting(bool requireUseRemoteAPIs);
    [RemoteAttribute]
public ClientResult`1<bool> NeedsUpgradeByTypeFromSpoShell(bool versionUpgrade, bool recursive);
    [RemoteAttribute]
public ClientResult`1<bool> NeedsUpgradeByType(bool versionUpgrade, bool recursive);
    [RemoteAttribute]
public SiteHealthSummary RunHealthCheck(Guid ruleId, bool bRepair, bool bRunAlways);
    [RemoteAttribute]
public void CreatePreviewSPSite(bool upgrade, bool sendemail);
    [RemoteAttribute]
public void RunUpgradeSiteSession(bool versionUpgrade, bool queueOnly, bool sendEmail);
    [RemoteAttribute]
public ClientResult`1<bool> DeleteMigrationJob(Guid id);
    [RemoteAttribute]
public SPMigrationJobStatusCollection GetMigrationStatus();
    [RemoteAttribute]
public ClientResult`1<MigrationJobState> GetMigrationJobStatus(Guid id);
    [RemoteAttribute]
public ClientResult`1<Guid> CreateMigrationJob(Guid gWebId, string azureContainerSourceUri, string azureContainerManifestUri, string azureQueueReportUri);
    [RemoteAttribute]
public ClientResult`1<Guid> CreateMigrationJobEncrypted(Guid gWebId, string azureContainerSourceUri, string azureContainerManifestUri, string azureQueueReportUri, EncryptionOption options);
    [RemoteAttribute]
public ClientResult`1<Guid> CreateMigrationIngestionJob(Guid gWebId, string azureContainerSourceUri, string azureContainerManifestUri, string azureQueueReportUri, IngestionTaskKey ingestionTaskKey);
    [RemoteAttribute]
public ClientResult`1<CopyMigrationInfo> CreateCopyJob(String[] exportObjectUris, string destinationUri, CopyMigrationOptions options);
    [RemoteAttribute]
public IList`1<CopyMigrationInfo> CreateCopyJobs(String[] exportObjectUris, string destinationUri, CopyMigrationOptions options);
    [RemoteAttribute]
public ClientResult`1<AsyncReadJobInfo> CreateSPAsyncReadJob(string url, AsyncReadOptions readOptions, EncryptionOption encryptionOption, string azureContainerManifestUri, string azureQueueReportUri);
    [RemoteAttribute]
public ClientResult`1<AsyncReadJobInfo> CreateSPAsyncReadJobWithMultiUrl(String[] urls, AsyncReadOptions readOptions, EncryptionOption encryptionOption, string azureContainerManifestUri, string azureQueueReportUri);
    [RemoteAttribute]
public ClientResult`1<CopyJobProgress> GetCopyJobProgress(CopyMigrationInfo copyJobInfo);
    [RemoteAttribute]
public ClientResult`1<ProvisionedTemporaryAzureContainerInfo> ProvisionTemporaryAzureContainer();
    [RemoteAttribute]
public ClientResult`1<ProvisionedMigrationContainersInfo> ProvisionMigrationContainers();
    [RemoteAttribute]
public ClientResult`1<ProvisionedMigrationQueueInfo> ProvisionMigrationQueue();
    [RemoteAttribute]
public ClientResult`1<bool> SetIsContributorOwnerEnabledPropertyForDefaultDocLib(bool propertyValue, bool forceDocLibActivation, bool deleteIfDocLibAlreadyExists);
    [RemoteAttribute]
public RecycleBinItemCollection GetRecycleBinItems(string pagingInfo, int rowLimit, bool isAscending, RecycleBinOrderBy orderBy, RecycleBinItemState itemState);
    [RemoteAttribute]
public ChangeCollection GetChanges(ChangeQuery query);
    [RemoteAttribute]
public void ProcessStorageMetricsChanges();
    [RemoteAttribute]
public Web OpenWebById(Guid gWebId);
    [RemoteAttribute]
public ClientResult`1<ResourcePath> GetWebPath(Guid siteId, Guid webId);
    [RemoteAttribute]
public Web OpenWeb(string strUrl);
    [RemoteAttribute]
public Web OpenWebUsingPath(ResourcePath path);
    [RemoteAttribute]
public void ExtendUpgradeReminderDate();
    [RemoteAttribute]
public ClientResult`1<EnqueueJobInformation> EnqueueApplySensitivityLabelWork(AutoLabellingWorkInformation workItemInformation);
    [RemoteAttribute]
public WebTemplateCollection GetWebTemplates(UInt32 LCID, int overrideCompatLevel);
    [RemoteAttribute]
public ListTemplateCollection GetCustomListTemplates(Web web);
    [RemoteAttribute]
public List GetCatalog(int typeCatalog);
    [RemoteAttribute]
public static ClientResult`1<string> GetUrlById(ClientRuntimeContext context, Guid id, bool stopRedirect);
    [RemoteAttribute]
public static ClientResult`1<string> GetUrlByIdForWeb(ClientRuntimeContext context, Guid id, bool stopRedirect, Guid webId);
    [RemoteAttribute]
public virtual void Invalidate();
    [RemoteAttribute]
public static ClientResult`1<bool> Exists(ClientRuntimeContext context, string url);
}
[ScriptTypeAttribute("SP.SiteHealth.SiteHealthResult")]
public class Microsoft.SharePoint.Client.SiteHealth.SiteHealthResult : ClientValueObject {
    private string m_messageAsText;
    private string m_ruleHelpLink;
    private Guid m_ruleId;
    private bool m_ruleIsRepairable;
    private string m_ruleName;
    private SiteHealthStatusType m_status;
    private DateTime m_timeStamp;
    [RemoteAttribute]
public string MessageAsText { get; }
    [RemoteAttribute]
public string RuleHelpLink { get; }
    [RemoteAttribute]
public Guid RuleId { get; }
    [RemoteAttribute]
public bool RuleIsRepairable { get; }
    [RemoteAttribute]
public string RuleName { get; }
    [RemoteAttribute]
public SiteHealthStatusType Status { get; public set; }
    [RemoteAttribute]
public DateTime TimeStamp { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_MessageAsText();
    public string get_RuleHelpLink();
    public Guid get_RuleId();
    public bool get_RuleIsRepairable();
    public string get_RuleName();
    public SiteHealthStatusType get_Status();
    public void set_Status(SiteHealthStatusType value);
    public DateTime get_TimeStamp();
    public void set_TimeStamp(DateTime value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.SiteHealth.SiteHealthStatusType : Enum {
    public int value__;
    public static SiteHealthStatusType Passed;
    public static SiteHealthStatusType FailedWarning;
    public static SiteHealthStatusType FailedError;
}
[ScriptTypeAttribute("SP.SiteHealth.SiteHealthSummary")]
public class Microsoft.SharePoint.Client.SiteHealth.SiteHealthSummary : ClientObject {
    [RemoteAttribute]
public int FailedErrorCount { get; }
    [RemoteAttribute]
public int FailedWarningCount { get; }
    [RemoteAttribute]
public int PassedCount { get; }
    [RemoteAttribute]
public IList`1<SiteHealthResult> Results { get; }
    [EditorBrowsableAttribute("1")]
public SiteHealthSummary(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_FailedErrorCount();
    public int get_FailedWarningCount();
    public int get_PassedCount();
    public IList`1<SiteHealthResult> get_Results();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SiteHealth.SiteHealthSummaryPropertyNames : object {
    public static string FailedErrorCount;
    public static string FailedWarningCount;
    public static string PassedCount;
    public static string Results;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SiteObjectPropertyNames : object {
    public static string Audit;
    public static string CustomScriptSafeDomains;
    public static string EventReceivers;
    public static string Features;
    public static string HubSiteSynchronizableVisitorGroup;
    public static string Owner;
    public static string RecycleBin;
    public static string RootWeb;
    public static string SecondaryContact;
    public static string UserCustomActions;
    public static string VersionPolicyForNewLibrariesTemplate;
}
public enum Microsoft.SharePoint.Client.SitePageCreationMode : Enum {
    public int value__;
    public static SitePageCreationMode CheckedOut;
    public static SitePageCreationMode CheckedIn;
    public static SitePageCreationMode CheckedInAndLocked;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SitePropertyNames : object {
    public static string AllowCreateDeclarativeWorkflow;
    public static string AllowDesigner;
    public static string AllowedExternalDomains;
    public static string AllowExternalEmbeddingWrapper;
    public static string AllowMasterPageEditing;
    public static string AllowRevertFromTemplate;
    public static string AllowSaveDeclarativeWorkflowAsTemplate;
    public static string AllowSavePublishDeclarativeWorkflow;
    public static string AllowSelfServiceUpgrade;
    public static string AllowSelfServiceUpgradeEvaluation;
    public static string AuditLogTrimmingRetention;
    public static string CanSyncHubSitePermissions;
    public static string CanUpgrade;
    public static string ChannelGroupId;
    public static string Classification;
    public static string CommentsOnSitePagesDisabled;
    public static string CompatibilityLevel;
    public static string ComplianceAttribute;
    public static string CurrentChangeToken;
    public static string CustomizedFormsPages;
    public static string DisableAppViews;
    public static string DisableCompanyWideSharingLinks;
    public static string DisableFlows;
    public static string ExternalSharingTipsEnabled;
    public static string ExternalUserExpirationInDays;
    public static string GeoLocation;
    public static string GroupId;
    public static string HubSiteId;
    public static string Id;
    public static string SensitivityLabelId;
    public static string SensitivityLabel;
    public static string IsHubSite;
    public static string IsRestrictContentOrgWideSearchPolicyEnforcedOnSite;
    public static string IsRestrictedAccessControlPolicyEnforcedOnSite;
    public static string LockIssue;
    public static string MaxItemsPerThrottledOperation;
    public static string MediaTranscriptionDisabled;
    public static string NeedsB2BUpgrade;
    public static string ResourcePath;
    public static string PrimaryUri;
    public static string ReadOnly;
    public static string RelatedGroupId;
    public static string RequiredDesignerVersion;
    public static string RestrictedAccessControlGroupsEnforcedOnSite;
    public static string SandboxedCodeActivationCapability;
    public static string SearchBoxInNavBar;
    public static string SearchBoxPlaceholderText;
    public static string SensitivityLabelInfo;
    public static string ServerRelativePath;
    public static string ServerRelativeUrl;
    public static string ShareByEmailEnabled;
    public static string ShareByLinkEnabled;
    public static string ShowPeoplePickerSuggestionsForGuestUsers;
    public static string ShowUrlStructure;
    public static string SitePolicyEnabled;
    public static string SocialBarOnSitePagesDisabled;
    public static string StatusBarLink;
    public static string StatusBarText;
    public static string ThicketSupportDisabled;
    public static string TrimAuditLog;
    public static string UIVersionConfigurationEnabled;
    public static string UpgradeInfo;
    public static string UpgradeReminderDate;
    public static string UpgradeScheduled;
    public static string UpgradeScheduledDate;
    public static string Upgrading;
    public static string Url;
    public static string Usage;
    public static string WriteLocked;
}
[ScriptTypeAttribute("SP.SiteTemplate")]
public class Microsoft.SharePoint.Client.SiteTemplate : ClientValueObject {
    private string m_name;
    [RemoteAttribute]
public string Name { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Name();
    public void set_Name(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SiteThemes")]
public class Microsoft.SharePoint.Client.SiteThemes : ClientValueObject {
    private IList`1<ThemeData> m_themeData;
    [RemoteAttribute]
public IList`1<ThemeData> themeData { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<ThemeData> get_themeData();
    public void set_themeData(IList`1<ThemeData> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SiteUrl")]
public class Microsoft.SharePoint.Client.SiteUrl : ClientObject {
    [EditorBrowsableAttribute("1")]
public SiteUrl(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.SiteVersionPolicyManager")]
public class Microsoft.SharePoint.Client.SiteVersionPolicyManager : ClientObject {
    [RemoteAttribute]
public int MajorVersionLimit { get; }
    [RemoteAttribute]
public VersionPolicyManager VersionPolicies { get; }
    [EditorBrowsableAttribute("1")]
public SiteVersionPolicyManager(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_MajorVersionLimit();
    public VersionPolicyManager get_VersionPolicies();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void InheritTenantSettings();
    [RemoteAttribute]
public void SetAutoExpiration();
    [RemoteAttribute]
public void SetExpireAfter(int majorVersionLimit, int expireAfterDays);
    [RemoteAttribute]
public void SetNoExpiration(int majorVersionLimit);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SiteVersionPolicyManagerObjectPropertyNames : object {
    public static string VersionPolicies;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SiteVersionPolicyManagerPropertyNames : object {
    public static string MajorVersionLimit;
}
[ScriptTypeAttribute("SP.SmartCache")]
public static class Microsoft.SharePoint.Client.SmartCache : object {
    [RemoteAttribute]
public static void Update(ClientRuntimeContext context, string smartCacheJson);
}
[ScriptTypeAttribute("SP.SmartTemplateContentType")]
public class Microsoft.SharePoint.Client.SmartTemplateContentType : ClientValueObject {
    private string m_id;
    private string m_name;
    private string m_publishStatus;
    [RemoteAttribute]
public string Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string PublishStatus { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Id();
    public void set_Id(string value);
    public string get_Name();
    public void set_Name(string value);
    public string get_PublishStatus();
    public void set_PublishStatus(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Snippet")]
public class Microsoft.SharePoint.Client.Snippet : ClientValueObject {
    private string m_id;
    private string m_name;
    private IEnumerable`1<PlaceholderV2> m_placeholders;
    private string m_snippetLibraryMappedId;
    private string m_snippetLibraryMappedVersion;
    [RemoteAttribute]
public string Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<PlaceholderV2> Placeholders { get; public set; }
    [RemoteAttribute]
public string SnippetLibraryMappedId { get; public set; }
    [RemoteAttribute]
public string SnippetLibraryMappedVersion { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Id();
    public void set_Id(string value);
    public string get_Name();
    public void set_Name(string value);
    public IEnumerable`1<PlaceholderV2> get_Placeholders();
    public void set_Placeholders(IEnumerable`1<PlaceholderV2> value);
    public string get_SnippetLibraryMappedId();
    public void set_SnippetLibraryMappedId(string value);
    public string get_SnippetLibraryMappedVersion();
    public void set_SnippetLibraryMappedVersion(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SPAgreementsSite")]
public class Microsoft.SharePoint.Client.SPAgreementsSite : ClientValueObject {
    private string m_description;
    private string m_groupId;
    private DateTime m_lastModifiedDateTime;
    private ResourceVisualization m_resourceVisualization;
    private SharePointIds m_sharePointIds;
    private SiteTemplate m_template;
    private string m_title;
    private string m_webUrl;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string GroupId { get; public set; }
    [RemoteAttribute]
public DateTime LastModifiedDateTime { get; public set; }
    [RemoteAttribute]
public ResourceVisualization ResourceVisualization { get; public set; }
    [RemoteAttribute]
public SharePointIds SharePointIds { get; public set; }
    [RemoteAttribute]
public SiteTemplate Template { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string WebUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public string get_GroupId();
    public void set_GroupId(string value);
    public DateTime get_LastModifiedDateTime();
    public void set_LastModifiedDateTime(DateTime value);
    public ResourceVisualization get_ResourceVisualization();
    public void set_ResourceVisualization(ResourceVisualization value);
    public SharePointIds get_SharePointIds();
    public void set_SharePointIds(SharePointIds value);
    public SiteTemplate get_Template();
    public void set_Template(SiteTemplate value);
    public string get_Title();
    public void set_Title(string value);
    public string get_WebUrl();
    public void set_WebUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.SPAgreementState : Enum {
    public int value__;
    public static SPAgreementState None;
    public static SPAgreementState Draft;
    public static SPAgreementState Published;
    public static SPAgreementState InReview;
    public static SPAgreementState Reviewed;
    public static SPAgreementState InApproval;
    public static SPAgreementState Approved;
    public static SPAgreementState InESign;
    public static SPAgreementState ESigned;
    public static SPAgreementState Executed;
    public static SPAgreementState Terminated;
    public static SPAgreementState Amended;
    public static SPAgreementState Expired;
}
public enum Microsoft.SharePoint.Client.SPAIPLabelExtractionStatus : Enum {
    public int value__;
    public static SPAIPLabelExtractionStatus None;
    public static SPAIPLabelExtractionStatus Extracted;
    public static SPAIPLabelExtractionStatus NotExtracted;
    public static SPAIPLabelExtractionStatus Error;
}
public enum Microsoft.SharePoint.Client.SPChangeActivityType : Enum {
    public int value__;
    public static SPChangeActivityType NoActivity;
    public static SPChangeActivityType Hashtag;
    public static SPChangeActivityType Spotlight;
    public static SPChangeActivityType Comment;
}
internal static class Microsoft.SharePoint.Client.SPClientUtility : object {
    private static XmlNamespaceManager s_nsmgr;
    internal static XmlNamespaceManager ODataNamespaceManager { get; }
    internal static XmlDocument LoadXml(TextReader reader);
    internal static XmlNamespaceManager get_ODataNamespaceManager();
}
[ScriptTypeAttribute("SP.SPDataLeakagePreventionStatusInfo")]
public class Microsoft.SharePoint.Client.SPDataLeakagePreventionStatusInfo : ClientObject {
    [RemoteAttribute]
public bool ContainsConfidentialInfo { get; }
    [RemoteAttribute]
public string ContainsConfidentialInfoLearnMoreUrl { get; }
    [RemoteAttribute]
public bool ExternalSharingTipsEnabled { get; }
    [RemoteAttribute]
public string ExternalSharingTipsLearnMoreUrl { get; }
    [EditorBrowsableAttribute("1")]
public SPDataLeakagePreventionStatusInfo(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_ContainsConfidentialInfo();
    public string get_ContainsConfidentialInfoLearnMoreUrl();
    public bool get_ExternalSharingTipsEnabled();
    public string get_ExternalSharingTipsLearnMoreUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SPDataLeakagePreventionStatusInfoPropertyNames : object {
    public static string ContainsConfidentialInfo;
    public static string ContainsConfidentialInfoLearnMoreUrl;
    public static string ExternalSharingTipsEnabled;
    public static string ExternalSharingTipsLearnMoreUrl;
}
public enum Microsoft.SharePoint.Client.SpecialFolderType : Enum {
    public int value__;
    public static SpecialFolderType Attachment;
    public static SpecialFolderType Photos;
    public static SpecialFolderType CameraRoll;
    public static SpecialFolderType Music;
    public static SpecialFolderType Apps;
    public static SpecialFolderType AppRoot;
    public static SpecialFolderType Desktop;
    public static SpecialFolderType Documents;
    public static SpecialFolderType ScreenShots;
    public static SpecialFolderType Templates;
    public static SpecialFolderType OfficeScripts;
    public static SpecialFolderType Recordings;
    public static SpecialFolderType Meetings;
    public static SpecialFolderType Storyline;
    public static SpecialFolderType Downloads;
    public static SpecialFolderType Videos;
    public static SpecialFolderType Playlists;
    public static SpecialFolderType Remix;
    public static SpecialFolderType SavedPictures;
    public static SpecialFolderType CameraImports;
    public static SpecialFolderType SamsungGallery;
    public static SpecialFolderType SDCard;
    public static SpecialFolderType SamsungCloudDrive;
    public static SpecialFolderType Albums;
    public static SpecialFolderType Public;
    public static SpecialFolderType Imports;
    public static SpecialFolderType VideoClips;
    public static SpecialFolderType CopilotUploads;
    public static SpecialFolderType Uploads;
}
public enum Microsoft.SharePoint.Client.SPEffectiveInformationRightsManagementSettingsSource : Enum {
    public int value__;
    public static SPEffectiveInformationRightsManagementSettingsSource None;
    public static SPEffectiveInformationRightsManagementSettingsSource File;
    public static SPEffectiveInformationRightsManagementSettingsSource List;
    public static SPEffectiveInformationRightsManagementSettingsSource Rule;
}
[ScriptTypeAttribute("SP.SPHSite")]
public class Microsoft.SharePoint.Client.SPHSite : ClientObject {
    public SPHSite(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public SPHSite(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static ClientResult`1<SPHSiteReference> GetSPHSiteXGeo(ClientRuntimeContext context);
    [RemoteAttribute]
public static ClientResult`1<HomeSitesDetails> GetXgeoHomeSiteDetail(ClientRuntimeContext context, Guid siteId, string siteUrl);
    [RemoteAttribute]
public ClientResult`1<TargetedSiteDetails> AddHomeSite(string siteUrl, int order, Guid[] audiences, bool vivaConnectionsDefaultStart, bool isInDraftMode);
    [RemoteAttribute]
public ClientResult`1<Guid> SetSPHSite(string siteUrl, bool vivaConnectionsDefaultStart, bool isInDraftMode);
    [RemoteAttribute]
public static ClientResult`1<PortalAndOrgNewsSiteReference> GetSiteReferenceXgeo(ClientRuntimeContext context, string siteUrl);
    [RemoteAttribute]
public static ClientResult`1<string> GetSiteTitleXgeo(ClientRuntimeContext context, string siteUrl);
    [RemoteAttribute]
public static ClientResult`1<Guid> AddOrgNewsSite(ClientRuntimeContext context, string siteUrl);
    [RemoteAttribute]
public static ClientResult`1<bool> IsModernSiteWithHorizontalNav(ClientRuntimeContext context, string siteUrl);
    [RemoteAttribute]
public static ClientResult`1<bool> IsValidHomeSite(ClientRuntimeContext context, string siteUrl);
    [RemoteAttribute]
public static ClientResult`1<bool> AddSPHomeNavNode(ClientRuntimeContext context, Guid siteId);
    [RemoteAttribute]
public static ClientResult`1<bool> IsCommSite(ClientRuntimeContext context, string siteUrl);
    [RemoteAttribute]
public static void RemoveDashboardFeature(ClientRuntimeContext context, string siteUrl);
    [RemoteAttribute]
public static void AssertSiteInSubscription(ClientRuntimeContext context, string url, Guid contextSubscriptionId);
    [RemoteAttribute]
public static ClientResult`1<HomeSiteReference> ValidateHomeSiteCandidate(ClientRuntimeContext context, string siteUrl);
    [RemoteAttribute]
public static IList`1<TargetedSiteDetails> GetTargetedSitesDetailsCurrentUserCanEditXGeo(ClientRuntimeContext context, IList`1<Guid> siteIds, bool stopRedirect);
}
[ScriptTypeAttribute("SP.SPHSiteReference")]
public class Microsoft.SharePoint.Client.SPHSiteReference : PortalAndOrgNewsSiteReference {
    private string m_logoUrl;
    private string m_title;
    private string m_url;
    [RemoteAttribute]
public string LogoUrl { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_LogoUrl();
    public void set_LogoUrl(string value);
    public string get_Title();
    public void set_Title(string value);
    public string get_Url();
    public void set_Url(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SPImageItem")]
public class Microsoft.SharePoint.Client.SPImageItem : ClientValueObject {
    private string m_name;
    private string m_serverRelativeUrl;
    private Guid m_uniqueId;
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [RemoteAttribute]
public Guid UniqueId { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Name();
    public string get_ServerRelativeUrl();
    public Guid get_UniqueId();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SPInvitationCreationResult")]
public class Microsoft.SharePoint.Client.SPInvitationCreationResult : ClientValueObject {
    private string m_email;
    private string m_error;
    private string m_invitationLink;
    private bool m_succeeded;
    [RemoteAttribute]
public string Email { get; }
    [RemoteAttribute]
public string Error { get; }
    [RemoteAttribute]
public string InvitationLink { get; }
    [RemoteAttribute]
public bool Succeeded { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Email();
    public string get_Error();
    public string get_InvitationLink();
    public bool get_Succeeded();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.LargeOperation.SPLargeOperation")]
public class Microsoft.SharePoint.Client.SPLargeOperation : ClientObject {
    [RemoteAttribute]
public string OperationType { get; }
    [RemoteAttribute]
public double ProgressPercentage { get; }
    [RemoteAttribute]
public string ResourceLocation { get; }
    [RemoteAttribute]
public string Status { get; }
    [EditorBrowsableAttribute("1")]
public SPLargeOperation(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_OperationType();
    public double get_ProgressPercentage();
    public string get_ResourceLocation();
    public string get_Status();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SPLargeOperationPropertyNames : object {
    public static string OperationType;
    public static string ProgressPercentage;
    public static string ResourceLocation;
    public static string Status;
}
[ScriptTypeAttribute("SP.SPListItemVersionChange")]
public class Microsoft.SharePoint.Client.SPListItemVersionChange : ClientValueObject {
    private string m_fieldTitle;
    private string m_newValue;
    private string m_previousValue;
    [RemoteAttribute]
public string FieldTitle { get; }
    [RemoteAttribute]
public string NewValue { get; }
    [RemoteAttribute]
public string PreviousValue { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_FieldTitle();
    public string get_NewValue();
    public string get_PreviousValue();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SPListRule")]
public class Microsoft.SharePoint.Client.SPListRule : ClientValueObject {
    private string m_actionParams;
    private int m_actionType;
    private string m_condition;
    private DateTime m_createDate;
    private Guid m_iD;
    private bool m_isActive;
    private SPRuleUserInfo m_lastModifiedBy;
    private DateTime m_lastModifiedDate;
    private string m_outcome;
    private string m_owner;
    private Guid m_ruleTemplateId;
    private string m_title;
    private int m_triggerType;
    [RemoteAttribute]
public string ActionParams { get; }
    [RemoteAttribute]
public int ActionType { get; }
    [RemoteAttribute]
public string Condition { get; }
    [RemoteAttribute]
public DateTime CreateDate { get; }
    [RemoteAttribute]
public Guid ID { get; }
    [RemoteAttribute]
public bool IsActive { get; }
    [RemoteAttribute]
public SPRuleUserInfo LastModifiedBy { get; }
    [RemoteAttribute]
public DateTime LastModifiedDate { get; }
    [RemoteAttribute]
public string Outcome { get; }
    [RemoteAttribute]
public string Owner { get; }
    [RemoteAttribute]
public Guid RuleTemplateId { get; }
    [RemoteAttribute]
public string Title { get; }
    [RemoteAttribute]
public int TriggerType { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ActionParams();
    public int get_ActionType();
    public string get_Condition();
    public DateTime get_CreateDate();
    public Guid get_ID();
    public bool get_IsActive();
    public SPRuleUserInfo get_LastModifiedBy();
    public DateTime get_LastModifiedDate();
    public string get_Outcome();
    public string get_Owner();
    public Guid get_RuleTemplateId();
    public string get_Title();
    public int get_TriggerType();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SPMigrationJobStatus")]
public class Microsoft.SharePoint.Client.SPMigrationJobStatus : ClientObject {
    [RemoteAttribute]
public Guid JobId { get; public set; }
    [RemoteAttribute]
public MigrationJobState JobState { get; public set; }
    [EditorBrowsableAttribute("1")]
public SPMigrationJobStatus(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_JobId();
    public void set_JobId(Guid value);
    public MigrationJobState get_JobState();
    public void set_JobState(MigrationJobState value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SPMigrationJobStatusCollection")]
public class Microsoft.SharePoint.Client.SPMigrationJobStatusCollection : ClientObjectCollection`1<SPMigrationJobStatus> {
    [EditorBrowsableAttribute("1")]
public SPMigrationJobStatusCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SPMigrationJobStatusPropertyNames : object {
    public static string JobId;
    public static string JobState;
}
[ScriptTypeAttribute("SP.SPMoveAndShareFileInfo")]
internal class Microsoft.SharePoint.Client.SPMoveAndShareFileInfo : ClientValueObject {
    private IList`1<int> m_itemPermissionableUserIds;
    [RemoteAttribute]
public IList`1<int> ItemPermissionableUserIds { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<int> get_ItemPermissionableUserIds();
    public void set_ItemPermissionableUserIds(IList`1<int> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.SPNavigationFlags : Enum {
    public int value__;
    public static SPNavigationFlags None;
    public static SPNavigationFlags OpenInNewWindow;
    public static SPNavigationFlags IsOpenInNewWindowSet;
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.SPOpenBinaryOptions : Enum {
    public int value__;
    public static SPOpenBinaryOptions None;
    public static SPOpenBinaryOptions Unprotected;
    public static SPOpenBinaryOptions SkipVirusScan;
    public static SPOpenBinaryOptions MinimizeProcessing;
    public static SPOpenBinaryOptions GetAsZipWithAltStreamsIfAvailable;
    public static SPOpenBinaryOptions ForceAVScanIfPreviouslyUnscanned;
    public static SPOpenBinaryOptions GetAsZipStreamBundleFriendly;
    public static SPOpenBinaryOptions SkipDisallowInfectedFileDownloadCheck;
    public static SPOpenBinaryOptions UseBlobManagerBindFailureHResult;
}
[ScriptTypeAttribute("SP.SPPlaylist")]
public static class Microsoft.SharePoint.Client.SPPlaylist : object {
    [RemoteAttribute]
public static void Subscribe(ClientRuntimeContext context, string listId);
    [RemoteAttribute]
public static void Unsubscribe(ClientRuntimeContext context, string listId);
    [RemoteAttribute]
public static SPPlaylist_Subscriber GetSubscriberInfo(ClientRuntimeContext context, string listId);
}
[ScriptTypeAttribute("SP.SPPlaylist_Subscriber")]
public class Microsoft.SharePoint.Client.SPPlaylist_Subscriber : ClientObject {
    [RemoteAttribute]
public bool isUserSubscribed { get; public set; }
    public SPPlaylist_Subscriber(ClientRuntimeContext context);
    [EditorBrowsableAttribute("1")]
public SPPlaylist_Subscriber(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_isUserSubscribed();
    public void set_isUserSubscribed(bool value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.SPPlaylist_SubscriberPropertyNames : object {
    public static string isUserSubscribed;
}
[ScriptTypeAttribute("SP.SPResourceEntry")]
public class Microsoft.SharePoint.Client.SPResourceEntry : ClientValueObject {
    private int m_lCID;
    private string m_value;
    [RemoteAttribute]
public int LCID { get; public set; }
    [RemoteAttribute]
public string Value { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_LCID();
    public void set_LCID(int value);
    public string get_Value();
    public void set_Value(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.SPResourceLCIDSource : Enum {
    public int value__;
    public static SPResourceLCIDSource Invalid;
    public static SPResourceLCIDSource Web;
    public static SPResourceLCIDSource User;
}
[ScriptTypeAttribute("SP.SPRuleAction")]
public class Microsoft.SharePoint.Client.SPRuleAction : ClientValueObject {
    private IDictionary`2<string, string> m_actionParams;
    private int m_actionType;
    [RemoteAttribute]
public IDictionary`2<string, string> ActionParams { get; public set; }
    [RemoteAttribute]
public int ActionType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IDictionary`2<string, string> get_ActionParams();
    public void set_ActionParams(IDictionary`2<string, string> value);
    public int get_ActionType();
    public void set_ActionType(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SPRuleUserInfo")]
public class Microsoft.SharePoint.Client.SPRuleUserInfo : ClientValueObject {
    private string m_name;
    private int m_userId;
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public int UserId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Name();
    public void set_Name(string value);
    public int get_UserId();
    public void set_UserId(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.SPScriptSafeDomainsCollection")]
public class Microsoft.SharePoint.Client.SPScriptSafeDomainsCollection : ClientObjectCollection`1<ScriptSafeDomain> {
    [EditorBrowsableAttribute("1")]
public SPScriptSafeDomainsCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public ScriptSafeDomain Create(ScriptSafeDomainEntityData parameters);
    [RemoteAttribute]
public ScriptSafeDomain GetByDomainName(string domainName);
}
public enum Microsoft.SharePoint.Client.SPSensivityLabelAssignmentMethod : Enum {
    public int value__;
    public static SPSensivityLabelAssignmentMethod None;
    public static SPSensivityLabelAssignmentMethod Standard;
    public static SPSensivityLabelAssignmentMethod Privileged;
    public static SPSensivityLabelAssignmentMethod Auto;
}
public enum Microsoft.SharePoint.Client.SPSiteMoveState : Enum {
    public int value__;
    public static SPSiteMoveState NotStarted;
    public static SPSiteMoveState InProgress;
    public static SPSiteMoveState Complete;
}
public enum Microsoft.SharePoint.Client.SPTeamsChannelType : Enum {
    public int value__;
    public static SPTeamsChannelType None;
    public static SPTeamsChannelType PrivateChannel;
    public static SPTeamsChannelType SharedChannel;
    public static SPTeamsChannelType StandardChannel;
}
public enum Microsoft.SharePoint.Client.SPVariantThemeType : Enum {
    public int value__;
    public static SPVariantThemeType None;
    public static SPVariantThemeType Neutral;
    public static SPVariantThemeType Soft;
    public static SPVariantThemeType Strong;
}
public enum Microsoft.SharePoint.Client.SPVirusCheckStatus : Enum {
    public byte value__;
    public static SPVirusCheckStatus Clean;
    public static SPVirusCheckStatus Infected;
    public static SPVirusCheckStatus InfectedCleanable;
    public static SPVirusCheckStatus Cleaned;
    public static SPVirusCheckStatus CleanFailed;
    public static SPVirusCheckStatus Deleted;
    public static SPVirusCheckStatus Timeout;
}
[ScriptTypeAttribute("SP.StorageMetrics")]
public class Microsoft.SharePoint.Client.StorageMetrics : ClientObject {
    [RemoteAttribute]
public long AdditionalFileStreamSize { get; }
    [RemoteAttribute]
public DateTime LastModified { get; }
    [RemoteAttribute]
public long TotalFileCount { get; }
    [RemoteAttribute]
public long TotalFileStreamSize { get; }
    [RemoteAttribute]
public long TotalSize { get; }
    [EditorBrowsableAttribute("1")]
public StorageMetrics(ClientRuntimeContext context, ObjectPath objectPath);
    public long get_AdditionalFileStreamSize();
    public DateTime get_LastModified();
    public long get_TotalFileCount();
    public long get_TotalFileStreamSize();
    public long get_TotalSize();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.StorageMetricsPropertyNames : object {
    public static string AdditionalFileStreamSize;
    public static string LastModified;
    public static string TotalFileCount;
    public static string TotalFileStreamSize;
    public static string TotalSize;
}
[ScriptTypeAttribute("SP.SubwebQuery")]
public class Microsoft.SharePoint.Client.SubwebQuery : ClientValueObject {
    private int m_configurationFilter;
    private int m_webTemplateFilter;
    [RemoteAttribute]
public int ConfigurationFilter { get; public set; }
    [RemoteAttribute]
public int WebTemplateFilter { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_ConfigurationFilter();
    public void set_ConfigurationFilter(int value);
    public int get_WebTemplateFilter();
    public void set_WebTemplateFilter(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.TargetedSiteDetails")]
public class Microsoft.SharePoint.Client.TargetedSiteDetails : ClientValueObject {
    private IList`1<Audience> m_audiences;
    private bool m_isInDraftMode;
    private bool m_isVivaBackendSite;
    private Guid m_siteId;
    private TargetedLicenseType m_targetedLicenseType;
    private string m_title;
    private string m_url;
    private bool m_vivaConnectionsDefaultStart;
    private Guid m_webId;
    [RemoteAttribute]
public IList`1<Audience> Audiences { get; public set; }
    [RemoteAttribute]
public bool IsInDraftMode { get; public set; }
    [RemoteAttribute]
public bool IsVivaBackendSite { get; public set; }
    [RemoteAttribute]
public Guid SiteId { get; public set; }
    [RemoteAttribute]
public TargetedLicenseType TargetedLicenseType { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [RemoteAttribute]
public bool VivaConnectionsDefaultStart { get; public set; }
    [RemoteAttribute]
public Guid WebId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<Audience> get_Audiences();
    public void set_Audiences(IList`1<Audience> value);
    public bool get_IsInDraftMode();
    public void set_IsInDraftMode(bool value);
    public bool get_IsVivaBackendSite();
    public void set_IsVivaBackendSite(bool value);
    public Guid get_SiteId();
    public void set_SiteId(Guid value);
    public TargetedLicenseType get_TargetedLicenseType();
    public void set_TargetedLicenseType(TargetedLicenseType value);
    public string get_Title();
    public void set_Title(string value);
    public string get_Url();
    public void set_Url(string value);
    public bool get_VivaConnectionsDefaultStart();
    public void set_VivaConnectionsDefaultStart(bool value);
    public Guid get_WebId();
    public void set_WebId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.TeamChannel")]
public class Microsoft.SharePoint.Client.TeamChannel : ClientObject {
    [RemoteAttribute]
public Guid folderId { get; }
    [RemoteAttribute]
public int groupId { get; }
    [EditorBrowsableAttribute("1")]
public TeamChannel(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_folderId();
    public int get_groupId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.TeamChannelManager")]
public static class Microsoft.SharePoint.Client.TeamChannelManager : object {
    [RemoteAttribute]
public static ClientResult`1<bool> StampLWGIdOnPrivateChannelSite(ClientRuntimeContext context, Guid idLWG);
    [RemoteAttribute]
public static ClientResult`1<bool> UnstampLWGIdOnPrivateChannelSite(ClientRuntimeContext context);
    [RemoteAttribute]
public static TeamChannel AddTeamChannel(ClientRuntimeContext context, ResourcePath parentFolderPath, ResourcePath newFolderPath, string teamChannelUrl, bool privateChannel, int privateChannelGroupOwner);
    [RemoteAttribute]
public static ClientResult`1<bool> PromoteToTeamChannelById(ClientRuntimeContext context, Guid folderId, string teamChannelUrl, string channelName);
    [RemoteAttribute]
public static ClientResult`1<bool> PromoteToTeamChannelByPath(ClientRuntimeContext context, ResourcePath folderPath, string teamChannelUrl, string channelName);
    [RemoteAttribute]
public static ClientResult`1<bool> DemoteTeamChannelByPath(ClientRuntimeContext context, ResourcePath folderPath);
    [RemoteAttribute]
public static ClientResult`1<bool> DemoteTeamChannelById(ClientRuntimeContext context, Guid folderId);
    [RemoteAttribute]
public static ClientResult`1<bool> ArchiveTeamChannelByPath(ClientRuntimeContext context, ResourcePath folderPath);
    [RemoteAttribute]
public static ClientResult`1<bool> ArchiveTeamChannelById(ClientRuntimeContext context, Guid folderId);
    [RemoteAttribute]
public static ClientResult`1<bool> UnarchiveTeamChannelByPath(ClientRuntimeContext context, ResourcePath folderPath);
    [RemoteAttribute]
public static ClientResult`1<bool> UnarchiveTeamChannelById(ClientRuntimeContext context, Guid folderId);
    [RemoteAttribute]
public static void SaveConversations(ClientRuntimeContext context, string listUrl, int listItemId, string updatedConversationsObject);
    [RemoteAttribute]
public static ClientResult`1<string> GetConversations(ClientRuntimeContext context, string listUrl, int listItemId);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.TeamChannelPropertyNames : object {
    public static string folderId;
    public static string groupId;
}
[ScriptTypeAttribute("SP.TeamSiteData")]
public class Microsoft.SharePoint.Client.TeamSiteData : ClientObject {
    [RemoteAttribute]
public UInt32 ErrorTag { get; public set; }
    [RemoteAttribute]
public SPVariantThemeType HeaderEmphasis { get; public set; }
    [RemoteAttribute]
public Guid HubSiteId { get; public set; }
    [RemoteAttribute]
public string SiteUrl { get; public set; }
    [RemoteAttribute]
public Guid TenantInstanceId { get; public set; }
    [RemoteAttribute]
public string ThemeToken { get; public set; }
    [EditorBrowsableAttribute("1")]
public TeamSiteData(ClientRuntimeContext context, ObjectPath objectPath);
    public UInt32 get_ErrorTag();
    public void set_ErrorTag(UInt32 value);
    public SPVariantThemeType get_HeaderEmphasis();
    public void set_HeaderEmphasis(SPVariantThemeType value);
    public Guid get_HubSiteId();
    public void set_HubSiteId(Guid value);
    public string get_SiteUrl();
    public void set_SiteUrl(string value);
    public Guid get_TenantInstanceId();
    public void set_TenantInstanceId(Guid value);
    public string get_ThemeToken();
    public void set_ThemeToken(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.TeamSiteDataPropertyNames : object {
    public static string ErrorTag;
    public static string HeaderEmphasis;
    public static string HubSiteId;
    public static string SiteUrl;
    public static string TenantInstanceId;
    public static string ThemeToken;
}
public enum Microsoft.SharePoint.Client.TemplateFileType : Enum {
    public int value__;
    public static TemplateFileType Invalid;
    public static TemplateFileType StandardPage;
    public static TemplateFileType WikiPage;
    public static TemplateFileType FormPage;
    public static TemplateFileType ClientSidePage;
}
[ScriptTypeAttribute("SP.TemplateMetaData")]
public class Microsoft.SharePoint.Client.TemplateMetaData : ClientValueObject {
    private IEnumerable`1<Placeholder> m_placeholders;
    private string m_serverRedirectedEmbedUrl;
    [RemoteAttribute]
public IEnumerable`1<Placeholder> Placeholders { get; public set; }
    [RemoteAttribute]
public string ServerRedirectedEmbedUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IEnumerable`1<Placeholder> get_Placeholders();
    public void set_Placeholders(IEnumerable`1<Placeholder> value);
    public string get_ServerRedirectedEmbedUrl();
    public void set_ServerRedirectedEmbedUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.TemplatizationMetaData")]
public class Microsoft.SharePoint.Client.TemplatizationMetaData : ClientValueObject {
    private ContentAssemblyFileInfo m_fileInfo;
    private bool m_isTemplateViewDefault;
    private IList`1<ColumnTypeInfo> m_placeholderColumnTypeInfo;
    private IEnumerable`1<PlaceholderV2> m_placeholders;
    [RemoteAttribute]
public ContentAssemblyFileInfo FileInfo { get; public set; }
    [RemoteAttribute]
public bool IsTemplateViewDefault { get; public set; }
    [RemoteAttribute]
public IList`1<ColumnTypeInfo> PlaceholderColumnTypeInfo { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<PlaceholderV2> Placeholders { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public ContentAssemblyFileInfo get_FileInfo();
    public void set_FileInfo(ContentAssemblyFileInfo value);
    public bool get_IsTemplateViewDefault();
    public void set_IsTemplateViewDefault(bool value);
    public IList`1<ColumnTypeInfo> get_PlaceholderColumnTypeInfo();
    public void set_PlaceholderColumnTypeInfo(IList`1<ColumnTypeInfo> value);
    public IEnumerable`1<PlaceholderV2> get_Placeholders();
    public void set_Placeholders(IEnumerable`1<PlaceholderV2> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.TemporaryFolderFileInfo")]
public class Microsoft.SharePoint.Client.TemporaryFolderFileInfo : ClientValueObject {
    private string m_dummyFileUrl;
    private string m_serverRedirectedEmbedUrl;
    private string m_temporaryFileUrl;
    [RemoteAttribute]
public string DummyFileUrl { get; public set; }
    [RemoteAttribute]
public string ServerRedirectedEmbedUrl { get; public set; }
    [RemoteAttribute]
public string TemporaryFileUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DummyFileUrl();
    public void set_DummyFileUrl(string value);
    public string get_ServerRedirectedEmbedUrl();
    public void set_ServerRedirectedEmbedUrl(string value);
    public string get_TemporaryFileUrl();
    public void set_TemporaryFileUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.TenantAppInformation")]
public class Microsoft.SharePoint.Client.TenantAppInformation : ClientValueObject {
    private string m_appPrincipalId;
    private string m_appWebFullUrl;
    private DateTime m_creationTime;
    private string m_iconAbsoluteUrl;
    private string m_iconFallbackAbsoluteUrl;
    private Guid m_id;
    private string m_launchUrl;
    private Byte[] m_packageFingerprint;
    private Guid m_productId;
    private string m_remoteAppUrl;
    private AppInstanceStatus m_status;
    private string m_title;
    [RemoteAttribute]
public string AppPrincipalId { get; }
    [RemoteAttribute]
public string AppWebFullUrl { get; }
    [RemoteAttribute]
public DateTime CreationTime { get; }
    [RemoteAttribute]
public string IconAbsoluteUrl { get; }
    [RemoteAttribute]
public string IconFallbackAbsoluteUrl { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string LaunchUrl { get; }
    [RemoteAttribute]
public Byte[] PackageFingerprint { get; }
    [RemoteAttribute]
public Guid ProductId { get; }
    [RemoteAttribute]
public string RemoteAppUrl { get; }
    [RemoteAttribute]
public AppInstanceStatus Status { get; }
    [RemoteAttribute]
public string Title { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AppPrincipalId();
    public string get_AppWebFullUrl();
    public DateTime get_CreationTime();
    public string get_IconAbsoluteUrl();
    public string get_IconFallbackAbsoluteUrl();
    public Guid get_Id();
    public string get_LaunchUrl();
    public Byte[] get_PackageFingerprint();
    public Guid get_ProductId();
    public string get_RemoteAppUrl();
    public AppInstanceStatus get_Status();
    public string get_Title();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.TenantAppInstance")]
public class Microsoft.SharePoint.Client.TenantAppInstance : ClientObject {
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public Guid SiteId { get; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public TenantAppInstance(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_Id();
    public Guid get_SiteId();
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.TenantAppInstancePropertyNames : object {
    public static string Id;
    public static string SiteId;
    public static string WebId;
}
[ScriptTypeAttribute("SP.TenantAppUtility")]
public static class Microsoft.SharePoint.Client.TenantAppUtility : object {
    [RemoteAttribute]
public static IList`1<TenantAppInformation> GetTenantAppInformationCollection(ClientRuntimeContext context, Web web, int lcid);
    [RemoteAttribute]
public static AppIconInfo GetAppIcon(ClientRuntimeContext context, Web web, Guid appInstanceId, Byte[] packageFingerprint);
    [RemoteAttribute]
public static TenantAppInstance GetTenantAppInstance(ClientRuntimeContext context, Web web, Guid appInstance);
    [RemoteAttribute]
public static AppDetails GetAppDetails(ClientRuntimeContext context, Web web, TenantAppInstance tenantAppInstance);
    [RemoteAttribute]
public static ClientArrayResult`1<string> GetAppPermissionDescriptions(ClientRuntimeContext context, Web web, TenantAppInstance tenantAppInstance);
}
[ScriptTypeAttribute("SP.TenantSettings")]
public class Microsoft.SharePoint.Client.TenantSettings : ClientObject {
    [RemoteAttribute]
public string CorporateCatalogUrl { get; }
    [EditorBrowsableAttribute("1")]
public TenantSettings(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_CorporateCatalogUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void SetCorporateCatalog(string url);
    [RemoteAttribute]
public void ClearCorporateCatalog();
    [RemoteAttribute]
public ClientResult`1<string> GetDataAccessGovernanceReportConfig();
    [RemoteAttribute]
public static TenantSettings GetCurrent(ClientRuntimeContext Context);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.TenantSettingsPropertyNames : object {
    public static string CorporateCatalogUrl;
}
[ScriptTypeAttribute("SP.TenantThemes")]
public class Microsoft.SharePoint.Client.TenantThemes : ClientValueObject {
    private bool m_hideDefaultThemes;
    private IList`1<ThemeData> m_themeData;
    [RemoteAttribute]
public bool hideDefaultThemes { get; public set; }
    [RemoteAttribute]
public IList`1<ThemeData> themeData { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_hideDefaultThemes();
    public void set_hideDefaultThemes(bool value);
    public IList`1<ThemeData> get_themeData();
    public void set_themeData(IList`1<ThemeData> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ThemeData")]
public class Microsoft.SharePoint.Client.ThemeData : ClientValueObject {
    private int m_id;
    private bool m_isVisible;
    private string m_name;
    private ThemeSource m_source;
    private string m_themeJson;
    [RemoteAttribute]
public int id { get; public set; }
    [RemoteAttribute]
public bool isVisible { get; public set; }
    [RemoteAttribute]
public string name { get; public set; }
    [RemoteAttribute]
public ThemeSource source { get; public set; }
    [RemoteAttribute]
public string themeJson { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_id();
    public void set_id(int value);
    public bool get_isVisible();
    public void set_isVisible(bool value);
    public string get_name();
    public void set_name(string value);
    public ThemeSource get_source();
    public void set_source(ThemeSource value);
    public string get_themeJson();
    public void set_themeJson(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ThemeInfo")]
public class Microsoft.SharePoint.Client.ThemeInfo : ClientObject {
    [RemoteAttribute]
public string AccessibleDescription { get; }
    [RemoteAttribute]
public string ThemeBackgroundImageUri { get; }
    [EditorBrowsableAttribute("1")]
public ThemeInfo(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_AccessibleDescription();
    public string get_ThemeBackgroundImageUri();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ClientResult`1<string> GetThemeShadeByName(string name);
    [RemoteAttribute]
public ClientResult`1<string> GetThemeFontByName(string name, UInt32 lcid);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ThemeInfoPropertyNames : object {
    public static string AccessibleDescription;
    public static string ThemeBackgroundImageUri;
}
public enum Microsoft.SharePoint.Client.ThemeSource : Enum {
    public int value__;
    public static ThemeSource PowerShellOrRest;
    public static ThemeSource BrandCenter;
}
[ScriptTypeAttribute("SP.TimeZone")]
public class Microsoft.SharePoint.Client.TimeZone : ClientObject {
    [RemoteAttribute]
public string Description { get; }
    [RemoteAttribute]
public int Id { get; }
    [RemoteAttribute]
public TimeZoneInformation Information { get; }
    [EditorBrowsableAttribute("1")]
public TimeZone(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Description();
    public int get_Id();
    public TimeZoneInformation get_Information();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void SetId(int id);
    [RemoteAttribute]
public ClientResult`1<DateTime> LocalTimeToUTC(DateTime date);
    [RemoteAttribute]
public ClientResult`1<DateTime> UTCToLocalTime(DateTime date);
}
[ScriptTypeAttribute("SP.TimeZoneCollection")]
public class Microsoft.SharePoint.Client.TimeZoneCollection : ClientObjectCollection`1<TimeZone> {
    [EditorBrowsableAttribute("1")]
public TimeZoneCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public TimeZone GetById(int id);
}
[ScriptTypeAttribute("SP.TimeZoneInformation")]
public class Microsoft.SharePoint.Client.TimeZoneInformation : ClientValueObject {
    private int m_bias;
    private int m_daylightBias;
    private int m_standardBias;
    [RemoteAttribute]
public int Bias { get; }
    [RemoteAttribute]
public int DaylightBias { get; }
    [RemoteAttribute]
public int StandardBias { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_Bias();
    public int get_DaylightBias();
    public int get_StandardBias();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.TimeZonePropertyNames : object {
    public static string Description;
    public static string Id;
    public static string Information;
}
[ScriptTypeAttribute("SP.UpdateAgreementESignConfigPayload")]
public class Microsoft.SharePoint.Client.UpdateAgreementESignConfigPayload : ClientValueObject {
    private string m_agreementId;
    private string m_agreementUrl;
    private string m_documentId;
    private string m_eSignStatus;
    private string m_requestorEmail;
    private String[] m_signersEmail;
    [RemoteAttribute]
public string AgreementId { get; public set; }
    [RemoteAttribute]
public string AgreementUrl { get; public set; }
    [RemoteAttribute]
public string DocumentId { get; public set; }
    [RemoteAttribute]
public string eSignStatus { get; public set; }
    [RemoteAttribute]
public string RequestorEmail { get; public set; }
    [RemoteAttribute]
public String[] SignersEmail { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AgreementId();
    public void set_AgreementId(string value);
    public string get_AgreementUrl();
    public void set_AgreementUrl(string value);
    public string get_DocumentId();
    public void set_DocumentId(string value);
    public string get_eSignStatus();
    public void set_eSignStatus(string value);
    public string get_RequestorEmail();
    public void set_RequestorEmail(string value);
    public String[] get_SignersEmail();
    public void set_SignersEmail(String[] value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.UpdateAgreementMetaDataPayload")]
public class Microsoft.SharePoint.Client.UpdateAgreementMetaDataPayload : ClientValueObject {
    private string m_fileUrl;
    private bool m_markAsTerminationLetter;
    [RemoteAttribute]
public string FileUrl { get; public set; }
    [RemoteAttribute]
public bool MarkAsTerminationLetter { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_FileUrl();
    public void set_FileUrl(string value);
    public bool get_MarkAsTerminationLetter();
    public void set_MarkAsTerminationLetter(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.UpdateAgreementStatePayload")]
public class Microsoft.SharePoint.Client.UpdateAgreementStatePayload : ClientValueObject {
    private string m_agreementUrl;
    private SPAgreementState m_currentState;
    private SPAgreementState m_nextState;
    [RemoteAttribute]
public string AgreementUrl { get; public set; }
    [RemoteAttribute]
public SPAgreementState CurrentState { get; public set; }
    [RemoteAttribute]
public SPAgreementState NextState { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AgreementUrl();
    public void set_AgreementUrl(string value);
    public SPAgreementState get_CurrentState();
    public void set_CurrentState(SPAgreementState value);
    public SPAgreementState get_NextState();
    public void set_NextState(SPAgreementState value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.UpdateReviewRequestDTO")]
public class Microsoft.SharePoint.Client.UpdateReviewRequestDTO : ClientValueObject {
    private string m_action;
    private string m_comments;
    private string m_documentUri;
    private string m_reviewerEmailOrUPN;
    [RemoteAttribute]
public string Action { get; public set; }
    [RemoteAttribute]
public string Comments { get; public set; }
    [RemoteAttribute]
public string DocumentUri { get; public set; }
    [RemoteAttribute]
public string ReviewerEmailOrUPN { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Action();
    public void set_Action(string value);
    public string get_Comments();
    public void set_Comments(string value);
    public string get_DocumentUri();
    public void set_DocumentUri(string value);
    public string get_ReviewerEmailOrUPN();
    public void set_ReviewerEmailOrUPN(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.UpdateTemplateInfo")]
public class Microsoft.SharePoint.Client.UpdateTemplateInfo : ClientValueObject {
    private string m_newName;
    private int m_operation;
    private IEnumerable`1<Placeholder> m_placeholders;
    [RemoteAttribute]
public string NewName { get; public set; }
    [RemoteAttribute]
public int Operation { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<Placeholder> Placeholders { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_NewName();
    public void set_NewName(string value);
    public int get_Operation();
    public void set_Operation(int value);
    public IEnumerable`1<Placeholder> get_Placeholders();
    public void set_Placeholders(IEnumerable`1<Placeholder> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.UpdateTemplateInfoV2")]
public class Microsoft.SharePoint.Client.UpdateTemplateInfoV2 : ClientValueObject {
    private IEnumerable`1<string> m_deletedPlaceholderColumnIds;
    private string m_newName;
    private int m_operation;
    private IEnumerable`1<PlaceholderV2> m_placeholders;
    private bool m_setTemplateViewAsDefaultView;
    private string m_url;
    [RemoteAttribute]
public IEnumerable`1<string> DeletedPlaceholderColumnIds { get; public set; }
    [RemoteAttribute]
public string NewName { get; public set; }
    [RemoteAttribute]
public int Operation { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<PlaceholderV2> Placeholders { get; public set; }
    [RemoteAttribute]
public bool SetTemplateViewAsDefaultView { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IEnumerable`1<string> get_DeletedPlaceholderColumnIds();
    public void set_DeletedPlaceholderColumnIds(IEnumerable`1<string> value);
    public string get_NewName();
    public void set_NewName(string value);
    public int get_Operation();
    public void set_Operation(int value);
    public IEnumerable`1<PlaceholderV2> get_Placeholders();
    public void set_Placeholders(IEnumerable`1<PlaceholderV2> value);
    public bool get_SetTemplateViewAsDefaultView();
    public void set_SetTemplateViewAsDefaultView(bool value);
    public string get_Url();
    public void set_Url(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.UpdateUploadedAgreementMetadataPayload")]
public class Microsoft.SharePoint.Client.UpdateUploadedAgreementMetadataPayload : ClientValueObject {
    private string m_agreementNumber;
    private string m_agreementUrl;
    private string m_category;
    private string m_country;
    private bool m_isDraft;
    private bool m_isExistingAgreement;
    private string m_language;
    private string m_state;
    [RemoteAttribute]
public string AgreementNumber { get; public set; }
    [RemoteAttribute]
public string AgreementUrl { get; public set; }
    [RemoteAttribute]
public string Category { get; public set; }
    [RemoteAttribute]
public string Country { get; public set; }
    [RemoteAttribute]
public bool IsDraft { get; public set; }
    [RemoteAttribute]
public bool IsExistingAgreement { get; public set; }
    [RemoteAttribute]
public string Language { get; public set; }
    [RemoteAttribute]
public string State { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AgreementNumber();
    public void set_AgreementNumber(string value);
    public string get_AgreementUrl();
    public void set_AgreementUrl(string value);
    public string get_Category();
    public void set_Category(string value);
    public string get_Country();
    public void set_Country(string value);
    public bool get_IsDraft();
    public void set_IsDraft(bool value);
    public bool get_IsExistingAgreement();
    public void set_IsExistingAgreement(bool value);
    public string get_Language();
    public void set_Language(string value);
    public string get_State();
    public void set_State(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.UpgradeInfo")]
public class Microsoft.SharePoint.Client.UpgradeInfo : ClientValueObject {
    private string m_errorFile;
    private int m_errors;
    private DateTime m_lastUpdated;
    private string m_logFile;
    private DateTime m_requestDate;
    private int m_retryCount;
    private DateTime m_startTime;
    private UpgradeStatus m_status;
    private UpgradeType m_upgradeType;
    private int m_warnings;
    [RemoteAttribute]
public string ErrorFile { get; }
    [RemoteAttribute]
public int Errors { get; }
    [RemoteAttribute]
public DateTime LastUpdated { get; }
    [RemoteAttribute]
public string LogFile { get; }
    [RemoteAttribute]
public DateTime RequestDate { get; }
    [RemoteAttribute]
public int RetryCount { get; }
    [RemoteAttribute]
public DateTime StartTime { get; }
    [RemoteAttribute]
public UpgradeStatus Status { get; }
    [RemoteAttribute]
public UpgradeType UpgradeType { get; }
    [RemoteAttribute]
public int Warnings { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ErrorFile();
    public int get_Errors();
    public DateTime get_LastUpdated();
    public string get_LogFile();
    public DateTime get_RequestDate();
    public int get_RetryCount();
    public DateTime get_StartTime();
    public UpgradeStatus get_Status();
    public UpgradeType get_UpgradeType();
    public int get_Warnings();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.UpgradeStatus : Enum {
    public int value__;
    public static UpgradeStatus None;
    public static UpgradeStatus InProgress;
    public static UpgradeStatus Failed;
    public static UpgradeStatus Completed;
}
public enum Microsoft.SharePoint.Client.UpgradeType : Enum {
    public int value__;
    public static UpgradeType BuildUpgrade;
    public static UpgradeType VersionUpgrade;
}
public enum Microsoft.SharePoint.Client.UrlFieldFormatType : Enum {
    public int value__;
    public static UrlFieldFormatType Hyperlink;
    public static UrlFieldFormatType Image;
}
public enum Microsoft.SharePoint.Client.UrlTarget : Enum {
    public int value__;
    public static UrlTarget NewWindow;
    public static UrlTarget CurrentWindow;
}
public enum Microsoft.SharePoint.Client.UrlZone : Enum {
    public int value__;
    public static UrlZone DefaultZone;
    public static UrlZone Intranet;
    public static UrlZone Internet;
    public static UrlZone Custom;
    public static UrlZone Extranet;
}
[ScriptTypeAttribute("SP.UsageInfo")]
public class Microsoft.SharePoint.Client.UsageInfo : ClientValueObject {
    private long m_bandwidth;
    private long m_discussionStorage;
    private long m_hits;
    private long m_storage;
    private double m_storagePercentageUsed;
    private long m_visits;
    [RemoteAttribute]
public long Bandwidth { get; }
    [RemoteAttribute]
public long DiscussionStorage { get; }
    [RemoteAttribute]
public long Hits { get; }
    [RemoteAttribute]
public long Storage { get; }
    [RemoteAttribute]
public double StoragePercentageUsed { get; }
    [RemoteAttribute]
public long Visits { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public long get_Bandwidth();
    public long get_DiscussionStorage();
    public long get_Hits();
    public long get_Storage();
    public double get_StoragePercentageUsed();
    public long get_Visits();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.User")]
public class Microsoft.SharePoint.Client.User : Principal {
    [RemoteAttribute]
public UserIdInfo AadObjectId { get; }
    [RemoteAttribute]
public AlertCollection Alerts { get; }
    [RemoteAttribute]
public string Email { get; public set; }
    [RemoteAttribute]
public string EmailWithFallback { get; }
    [RemoteAttribute]
public string Expiration { get; public set; }
    [RemoteAttribute]
public GroupCollection Groups { get; }
    [RemoteAttribute]
public string HexCid { get; }
    [RemoteAttribute]
public bool IsEmailAuthenticationGuestUser { get; }
    [RemoteAttribute]
public bool IsShareByEmailGuestUser { get; }
    [RemoteAttribute]
public bool IsSiteAdmin { get; public set; }
    [RemoteAttribute]
public UserIdInfo UserId { get; }
    [RemoteAttribute]
public string UserPrincipalName { get; }
    [EditorBrowsableAttribute("1")]
public User(ClientRuntimeContext context, ObjectPath objectPath);
    internal void InitFromCreationInformation(UserCreationInformation creation);
    public UserIdInfo get_AadObjectId();
    public AlertCollection get_Alerts();
    public string get_Email();
    public void set_Email(string value);
    public string get_EmailWithFallback();
    public string get_Expiration();
    public void set_Expiration(string value);
    public GroupCollection get_Groups();
    public string get_HexCid();
    public bool get_IsEmailAuthenticationGuestUser();
    public bool get_IsShareByEmailGuestUser();
    public bool get_IsSiteAdmin();
    public void set_IsSiteAdmin(bool value);
    public UserIdInfo get_UserId();
    public string get_UserPrincipalName();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public void Expire();
}
[ScriptTypeAttribute("SP.UserCollection")]
public class Microsoft.SharePoint.Client.UserCollection : ClientObjectCollection`1<User> {
    [EditorBrowsableAttribute("1")]
public UserCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public User GetByLoginName(string loginName);
    [RemoteAttribute]
public User GetByObjectId(Guid objectId);
    [RemoteAttribute]
public User GetById(int id);
    [RemoteAttribute]
public User GetByEmail(string emailAddress);
    [RemoteAttribute]
public User GetByPuid(string puid);
    [RemoteAttribute]
public void RemoveByLoginName(string loginName);
    [RemoteAttribute]
public void RemoveById(int id);
    [RemoteAttribute]
public void Remove(User user);
    [RemoteAttribute]
public User Add(UserCreationInformation parameters);
    [RemoteAttribute]
public User AddUser(User user);
}
[ScriptTypeAttribute("SP.UserCreationInformation")]
public class Microsoft.SharePoint.Client.UserCreationInformation : ClientValueObject {
    private string m_email;
    private string m_loginName;
    private string m_title;
    [RemoteAttribute]
public string Email { get; public set; }
    [RemoteAttribute]
public string LoginName { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Email();
    public void set_Email(string value);
    public string get_LoginName();
    public void set_LoginName(string value);
    public string get_Title();
    public void set_Title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.UserCustomAction")]
public class Microsoft.SharePoint.Client.UserCustomAction : ClientObject {
    [RemoteAttribute]
public Guid ClientSideComponentId { get; public set; }
    [RemoteAttribute]
public string ClientSideComponentProperties { get; public set; }
    [RemoteAttribute]
public string CommandUIExtension { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public UserResource DescriptionResource { get; }
    [RemoteAttribute]
public string Group { get; public set; }
    [RemoteAttribute]
public string HostProperties { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string ImageUrl { get; public set; }
    [RemoteAttribute]
public string Location { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public string RegistrationId { get; public set; }
    [RemoteAttribute]
public UserCustomActionRegistrationType RegistrationType { get; public set; }
    [RemoteAttribute]
public BasePermissions Rights { get; public set; }
    [RemoteAttribute]
public UserCustomActionScope Scope { get; }
    [RemoteAttribute]
public string ScriptBlock { get; public set; }
    [RemoteAttribute]
public string ScriptSrc { get; public set; }
    [RemoteAttribute]
public int Sequence { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public UserResource TitleResource { get; }
    [RemoteAttribute]
public string Url { get; public set; }
    [RemoteAttribute]
public string VersionOfUserCustomAction { get; }
    [EditorBrowsableAttribute("1")]
public UserCustomAction(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_ClientSideComponentId();
    public void set_ClientSideComponentId(Guid value);
    public string get_ClientSideComponentProperties();
    public void set_ClientSideComponentProperties(string value);
    public string get_CommandUIExtension();
    public void set_CommandUIExtension(string value);
    public string get_Description();
    public void set_Description(string value);
    public UserResource get_DescriptionResource();
    public string get_Group();
    public void set_Group(string value);
    public string get_HostProperties();
    public void set_HostProperties(string value);
    public Guid get_Id();
    public string get_ImageUrl();
    public void set_ImageUrl(string value);
    public string get_Location();
    public void set_Location(string value);
    public string get_Name();
    public void set_Name(string value);
    public string get_RegistrationId();
    public void set_RegistrationId(string value);
    public UserCustomActionRegistrationType get_RegistrationType();
    public void set_RegistrationType(UserCustomActionRegistrationType value);
    public BasePermissions get_Rights();
    public void set_Rights(BasePermissions value);
    public UserCustomActionScope get_Scope();
    public string get_ScriptBlock();
    public void set_ScriptBlock(string value);
    public string get_ScriptSrc();
    public void set_ScriptSrc(string value);
    public int get_Sequence();
    public void set_Sequence(int value);
    public string get_Title();
    public void set_Title(string value);
    public UserResource get_TitleResource();
    public string get_Url();
    public void set_Url(string value);
    public string get_VersionOfUserCustomAction();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public virtual void Update();
    [RemoteAttribute]
public virtual void DeleteObject();
}
[ScriptTypeAttribute("SP.UserCustomActionCollection")]
public class Microsoft.SharePoint.Client.UserCustomActionCollection : ClientObjectCollection`1<UserCustomAction> {
    [EditorBrowsableAttribute("1")]
public UserCustomActionCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public UserCustomAction GetById(Guid id);
    [RemoteAttribute]
public void Clear();
    [RemoteAttribute]
public UserCustomAction Add();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.UserCustomActionObjectPropertyNames : object {
    public static string DescriptionResource;
    public static string TitleResource;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.UserCustomActionPropertyNames : object {
    public static string ClientSideComponentId;
    public static string ClientSideComponentProperties;
    public static string CommandUIExtension;
    public static string Description;
    public static string Group;
    public static string HostProperties;
    public static string Id;
    public static string ImageUrl;
    public static string Location;
    public static string Name;
    public static string RegistrationId;
    public static string RegistrationType;
    public static string Rights;
    public static string Scope;
    public static string ScriptBlock;
    public static string ScriptSrc;
    public static string Sequence;
    public static string Title;
    public static string Url;
    public static string VersionOfUserCustomAction;
}
public enum Microsoft.SharePoint.Client.UserCustomActionRegistrationType : Enum {
    public int value__;
    public static UserCustomActionRegistrationType None;
    public static UserCustomActionRegistrationType List;
    public static UserCustomActionRegistrationType ContentType;
    public static UserCustomActionRegistrationType ProgId;
    public static UserCustomActionRegistrationType FileType;
}
public enum Microsoft.SharePoint.Client.UserCustomActionScope : Enum {
    public int value__;
    public static UserCustomActionScope Unknown;
    public static UserCustomActionScope Site;
    public static UserCustomActionScope Web;
    public static UserCustomActionScope List;
}
[ScriptTypeAttribute("SP.UserDTO")]
public class Microsoft.SharePoint.Client.UserDTO : ClientValueObject {
    private string m_email;
    private string m_loginName;
    [RemoteAttribute]
public string Email { get; public set; }
    [RemoteAttribute]
public string LoginName { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Email();
    public void set_Email(string value);
    public string get_LoginName();
    public void set_LoginName(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.UserIdInfo")]
public class Microsoft.SharePoint.Client.UserIdInfo : ClientValueObject {
    private string m_nameId;
    private string m_nameIdIssuer;
    [RemoteAttribute]
public string NameId { get; }
    [RemoteAttribute]
public string NameIdIssuer { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_NameId();
    public string get_NameIdIssuer();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.UserObjectPropertyNames : object {
    public static string Alerts;
    public static string Groups;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.UserPropertyNames : object {
    public static string AadObjectId;
    public static string Email;
    public static string EmailWithFallback;
    public static string Expiration;
    public static string HexCid;
    public static string IsEmailAuthenticationGuestUser;
    public static string IsShareByEmailGuestUser;
    public static string IsSiteAdmin;
    public static string UserId;
    public static string UserPrincipalName;
}
[ScriptTypeAttribute("SP.UserResource")]
public class Microsoft.SharePoint.Client.UserResource : ClientObject {
    [EditorBrowsableAttribute("1")]
public UserResource(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public ClientResult`1<string> GetValueForUICulture(string cultureName);
    [RemoteAttribute]
public void SetValueForUICulture(string cultureName, string value);
    [RemoteAttribute]
public IList`1<SPResourceEntry> GetResourceEntries();
}
public enum Microsoft.SharePoint.Client.UserResourceScope : Enum {
    public int value__;
    public static UserResourceScope Web;
    public static UserResourceScope List;
}
public enum Microsoft.SharePoint.Client.UserResourceType : Enum {
    public int value__;
    public static UserResourceType SingleLine;
    public static UserResourceType MultiLine;
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.UserSharingCapabilities : Enum {
    public int value__;
    public static UserSharingCapabilities None;
    public static UserSharingCapabilities CanShareInternally;
    public static UserSharingCapabilities CanShareExternally;
    public static UserSharingCapabilities CanUseAnonymousReadonlyLink;
    public static UserSharingCapabilities CanUseReadonlyLink;
    public static UserSharingCapabilities CanManageAnonymousReadonlyLink;
    public static UserSharingCapabilities CanManageReadonlyLink;
    public static UserSharingCapabilities CanUseAnonymousReadWriteLink;
    public static UserSharingCapabilities CanUseReadWriteLink;
    public static UserSharingCapabilities CanManageAnonymousReadWriteLink;
    public static UserSharingCapabilities CanManageReadWriteLink;
    public static UserSharingCapabilities CanUseOrganizationReadonlyLink;
    public static UserSharingCapabilities CanManageOrganizationReadonlyLink;
    public static UserSharingCapabilities CanUseOrganizationReadWriteLink;
    public static UserSharingCapabilities CanManageOrganizationReadWriteLink;
    public static UserSharingCapabilities CanUsePeopleSharingReadonlyLink;
    public static UserSharingCapabilities CanManagePeopleSharingReadonlyLink;
    public static UserSharingCapabilities CanUsePeopleSharingReadWriteLink;
    public static UserSharingCapabilities CanManagePeopleSharingReadWriteLink;
    public static UserSharingCapabilities CanUseAnonymousManageListLink;
    public static UserSharingCapabilities CanUseManageListLink;
    public static UserSharingCapabilities CanManageAnonymousManageListLink;
    public static UserSharingCapabilities CanManageManageListLink;
    public static UserSharingCapabilities CanUseOrganizationManageListLink;
    public static UserSharingCapabilities CanManageOrganizationManageListLink;
    public static UserSharingCapabilities CanUsePeopleSharingManageListLink;
    public static UserSharingCapabilities CanManagePeopleSharingManageListLink;
    public static UserSharingCapabilities CanDeleteAnonymousReadonlyLink;
    public static UserSharingCapabilities CanDeleteReadonlyLink;
    public static UserSharingCapabilities CanDeleteAnonymousReadWriteLink;
    public static UserSharingCapabilities CanDeleteReadWriteLink;
    public static UserSharingCapabilities CanDeleteAnonymousManageListLink;
    public static UserSharingCapabilities CanDeleteManageListLink;
    public static UserSharingCapabilities CanDeleteOrganizationReadonlyLink;
    public static UserSharingCapabilities CanDeleteOrganizationReadWriteLink;
    public static UserSharingCapabilities CanDeleteOrganizationManageListLink;
    public static UserSharingCapabilities CanDeletePeopleSharingReadonlyLink;
    public static UserSharingCapabilities CanDeletePeopleSharingReadWriteLink;
    public static UserSharingCapabilities CanDeletePeopleSharingManageListLink;
    public static UserSharingCapabilities CanShareToExistingGuests;
}
public enum Microsoft.SharePoint.Client.Utilities.ArchiveStatusType : Enum {
    public int value__;
    public static ArchiveStatusType NotArchived;
    public static ArchiveStatusType FullyArchived;
    public static ArchiveStatusType RecentlyArchived;
    public static ArchiveStatusType Reactivating;
}
[ScriptTypeAttribute("SP.Utilities.AutofillColumnInfo")]
public class Microsoft.SharePoint.Client.Utilities.AutofillColumnInfo : ClientValueObject {
    private string m_columnDataType;
    private string m_columnName;
    private bool m_isEnabled;
    private string m_prompt;
    [RemoteAttribute]
public string ColumnDataType { get; public set; }
    [RemoteAttribute]
public string columnName { get; public set; }
    [RemoteAttribute]
public bool isEnabled { get; public set; }
    [RemoteAttribute]
public string prompt { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ColumnDataType();
    public void set_ColumnDataType(string value);
    public string get_columnName();
    public void set_columnName(string value);
    public bool get_isEnabled();
    public void set_isEnabled(bool value);
    public string get_prompt();
    public void set_prompt(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.Utilities.DateTimeFormat : Enum {
    public int value__;
    public static DateTimeFormat DateTime;
    public static DateTimeFormat DateOnly;
    public static DateTimeFormat TimeOnly;
    public static DateTimeFormat ISO8601;
    public static DateTimeFormat MonthDayOnly;
    public static DateTimeFormat MonthYearOnly;
    public static DateTimeFormat LongDate;
    public static DateTimeFormat UnknownFormat;
}
[ScriptTypeAttribute("SP.Utilities.EmailProperties")]
public class Microsoft.SharePoint.Client.Utilities.EmailProperties : ClientValueObject {
    private IDictionary`2<string, string> m_additionalHeaders;
    private IEnumerable`1<string> m_bCC;
    private string m_body;
    private IEnumerable`1<string> m_cC;
    private string m_from;
    private string m_subject;
    private IEnumerable`1<string> m_to;
    [RemoteAttribute]
public IDictionary`2<string, string> AdditionalHeaders { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<string> BCC { get; public set; }
    [RemoteAttribute]
public string Body { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<string> CC { get; public set; }
    [RemoteAttribute]
public string From { get; public set; }
    [RemoteAttribute]
public string Subject { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<string> To { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IDictionary`2<string, string> get_AdditionalHeaders();
    public void set_AdditionalHeaders(IDictionary`2<string, string> value);
    public IEnumerable`1<string> get_BCC();
    public void set_BCC(IEnumerable`1<string> value);
    public string get_Body();
    public void set_Body(string value);
    public IEnumerable`1<string> get_CC();
    public void set_CC(IEnumerable`1<string> value);
    public string get_From();
    public void set_From(string value);
    public string get_Subject();
    public void set_Subject(string value);
    public IEnumerable`1<string> get_To();
    public void set_To(IEnumerable`1<string> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Utilities.FileHandlerWopiProperties")]
public class Microsoft.SharePoint.Client.Utilities.FileHandlerWopiProperties : ClientObject {
    [RemoteAttribute]
public string FileGetUrl { get; }
    [RemoteAttribute]
public string FileId { get; }
    [RemoteAttribute]
public string FilePutUrl { get; }
    [RemoteAttribute]
public string ResourceId { get; }
    [EditorBrowsableAttribute("1")]
public FileHandlerWopiProperties(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_FileGetUrl();
    public string get_FileId();
    public string get_FilePutUrl();
    public string get_ResourceId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Utilities.FileHandlerWopiPropertiesPropertyNames : object {
    public static string FileGetUrl;
    public static string FileId;
    public static string FilePutUrl;
    public static string ResourceId;
}
public class Microsoft.SharePoint.Client.Utilities.HttpUtility : object {
    private static int bufferSize;
    private static UInt16[] HTMLCharMap1;
    private static UInt16[] HTMLCharMap2;
    internal static String[] HTMLData;
    private static UInt16[] ScriptCharMap;
    private static String[] ScriptEncodedChars;
    private static String[] s_crgstrUrlHexValue;
    private static HttpUtility();
    public static string HtmlEncode(string valueToEncode);
    public static void HtmlEncode(string valueToEncode, TextWriter output);
    public static string EcmaScriptStringLiteralEncode(string scriptLiteralToEncode);
    public static void EcmaScriptStringLiteralEncode(string scriptLiteralToEncode, TextWriter output);
    public static void HtmlUrlAttributeEncode(string urlAttributeToEncode, TextWriter output);
    public static string HtmlUrlAttributeEncode(string urlAttributeToEncode);
    public static string UrlKeyValueEncode(string keyToEncode, string valueToEncode);
    public static void UrlKeyValueEncode(string keyToEncode, string valueToEncode, TextWriter output);
    public static string UrlKeyValueEncode(string keyOrValueToEncode);
    public static string UrlKeyValueEncode(Guid guidKeyOrValueToEncode);
    public static string UrlKeyValueEncode(int keyOrValueToEncode);
    public static void UrlKeyValueEncode(string keyOrValueToEncode, TextWriter output);
    public static string UrlKeyValueDecode(string keyOrValueToDecode);
    public static string UrlPathEncode(string urlToEncode, bool allowHashParameter);
    public static string UrlPathEncode(string urlToEncode, bool allowHashParameter, bool encodeUnicodeCharacters);
    public static string UrlPathEncode(string urlToEncode, bool allowHashParameter, bool encodeUnicodeCharacters, bool rfcCompliant);
    internal static string UrlPathEncode(string urlToEncode, bool allowHashParameter, bool encodeUnicodeCharacters, Boolean& invalidUnicode, bool encodeQueryParams);
    internal static string UrlPathEncode(string urlToEncode, bool allowHashParameter, bool encodeUnicodeCharacters, Boolean& invalidUnicode, bool rfcCompliant, bool encodeQueryParams);
    public static void UrlPathEncode(string urlToEncode, bool allowHashParameter, TextWriter output);
    public static void UrlPathEncode(string urlToEncode, bool allowHashParameter, bool encodeUnicodeCharacters, TextWriter output);
    private static void UrlPathEncode(string urlToEncode, bool allowHashParameter, bool encodeUnicodeCharacters, TextWriter output, Boolean& invalidUnicode, bool rfcCompliant, bool encodeQueryParams);
    private static string UrlDecodeHelper(string stringToDecode, int length, bool decodePlus);
    private static string UrlEncodeUnicodeChar(char ch, char chNext, Boolean& fUsedNextChar);
    private static void UrlEncodeUnicodeChar(TextWriter output, char ch, char chNext, Boolean& fUsedNextChar);
    private static void UrlEncodeUnicodeChar(TextWriter output, char ch, char chNext, Boolean& fInvalidUnicode, Boolean& fUsedNextChar);
    private static bool IsHexEscapedChar(string str, int nIndex, int nPathLength);
    private static int FromHexNoCheck(char digit);
    private static bool IsHexDigit(char digit);
}
public enum Microsoft.SharePoint.Client.Utilities.IconSize : Enum {
    public int value__;
    public static IconSize Size16;
    public static IconSize Size32;
    public static IconSize Size256;
}
[ScriptTypeAttribute("SP.Utilities.JsonTheme")]
public class Microsoft.SharePoint.Client.Utilities.JsonTheme : ClientValueObject {
    private string m_name;
    private string m_themeJson;
    [RemoteAttribute]
public string name { get; public set; }
    [RemoteAttribute]
public string themeJson { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_name();
    public void set_name(string value);
    public string get_themeJson();
    public void set_themeJson(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Utilities.LLMColumnInfo")]
public class Microsoft.SharePoint.Client.Utilities.LLMColumnInfo : ClientValueObject {
    private bool m_isEnabled;
    private string m_prompt;
    [RemoteAttribute]
public bool IsEnabled { get; }
    [RemoteAttribute]
public string Prompt { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_IsEnabled();
    public string get_Prompt();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.Utilities.LogAppErrorResult : Enum {
    public int value__;
    public static LogAppErrorResult Success;
    public static LogAppErrorResult ErrorsThrottled;
    public static LogAppErrorResult AccessDenied;
}
[ScriptTypeAttribute("SP.Utilities.PrincipalInfo")]
public class Microsoft.SharePoint.Client.Utilities.PrincipalInfo : ClientValueObject {
    private string m_department;
    private string m_displayName;
    private string m_email;
    private string m_jobTitle;
    private string m_loginName;
    private string m_mobile;
    private int m_principalId;
    private PrincipalType m_principalType;
    private string m_sIPAddress;
    [RemoteAttribute]
public string Department { get; }
    [RemoteAttribute]
public string DisplayName { get; }
    [RemoteAttribute]
public string Email { get; }
    [RemoteAttribute]
public string JobTitle { get; }
    [RemoteAttribute]
public string LoginName { get; }
    [RemoteAttribute]
public string Mobile { get; }
    [RemoteAttribute]
public int PrincipalId { get; }
    [RemoteAttribute]
public PrincipalType PrincipalType { get; }
    [RemoteAttribute]
public string SIPAddress { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Department();
    public string get_DisplayName();
    public string get_Email();
    public string get_JobTitle();
    public string get_LoginName();
    public string get_Mobile();
    public int get_PrincipalId();
    public PrincipalType get_PrincipalType();
    public string get_SIPAddress();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.Utilities.PrincipalSource : Enum {
    public int value__;
    public static PrincipalSource None;
    public static PrincipalSource UserInfoList;
    public static PrincipalSource Windows;
    public static PrincipalSource MembershipProvider;
    public static PrincipalSource RoleProvider;
    public static PrincipalSource All;
}
[FlagsAttribute]
public enum Microsoft.SharePoint.Client.Utilities.PrincipalType : Enum {
    public int value__;
    public static PrincipalType None;
    public static PrincipalType User;
    public static PrincipalType DistributionList;
    public static PrincipalType SecurityGroup;
    public static PrincipalType SharePointGroup;
    public static PrincipalType ConsumerGroup;
    public static PrincipalType All;
    public static PrincipalType AppConsentPrincipal;
    public static PrincipalType ReservedForFutureUse;
}
[ScriptTypeAttribute("SP.Utilities.SPSocialSwitch")]
public static class Microsoft.SharePoint.Client.Utilities.SPSocialSwitch : object {
    [RemoteAttribute]
public static ClientResult`1<bool> IsFollowingFeatureEnabled(ClientRuntimeContext context);
}
public enum Microsoft.SharePoint.Client.Utilities.SPWOPIFrameAction : Enum {
    public int value__;
    public static SPWOPIFrameAction View;
    public static SPWOPIFrameAction Edit;
    public static SPWOPIFrameAction MobileView;
    public static SPWOPIFrameAction InteractivePreview;
    public static SPWOPIFrameAction Syndicate;
    public static SPWOPIFrameAction LegacyWebService;
}
[ScriptTypeAttribute("SP.Utilities.ThemingOptions")]
public class Microsoft.SharePoint.Client.Utilities.ThemingOptions : ClientValueObject {
    private bool m_hideDefaultThemes;
    private JsonTheme[] m_themePreviews;
    [RemoteAttribute]
public bool hideDefaultThemes { get; public set; }
    [RemoteAttribute]
public JsonTheme[] themePreviews { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_hideDefaultThemes();
    public void set_hideDefaultThemes(bool value);
    public JsonTheme[] get_themePreviews();
    public void set_themePreviews(JsonTheme[] value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Utilities.UploadStatus")]
public class Microsoft.SharePoint.Client.Utilities.UploadStatus : ClientObject {
    [RemoteAttribute]
public string ExpectedContentRange { get; }
    [RemoteAttribute]
public DateTime ExpirationDateTime { get; public set; }
    [RemoteAttribute]
public Guid UploadId { get; public set; }
    [EditorBrowsableAttribute("1")]
public UploadStatus(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_ExpectedContentRange();
    public DateTime get_ExpirationDateTime();
    public void set_ExpirationDateTime(DateTime value);
    public Guid get_UploadId();
    public void set_UploadId(Guid value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Utilities.UploadStatusPropertyNames : object {
    public static string ExpectedContentRange;
    public static string ExpirationDateTime;
    public static string UploadId;
}
internal static class Microsoft.SharePoint.Client.Utilities.UrlUtility : object {
    private static Boolean[] s_LegalUrlChars;
    private static String[] s_strReservedWebNames;
    private static int s_idxCreateOnlyReservedNames;
    private static String[] s_rgstrAllowedProtocols;
    public static String[] AllowedProtocols { get; }
    private static UrlUtility();
    public static bool IsUrlFull(string url);
    public static bool IsUrlRelative(string url);
    public static bool IsProtocolAllowed(string fullOrRelativeUrl);
    public static String[] get_AllowedProtocols();
    public static bool IsProtocolAllowed(string fullOrRelativeUrl, bool allowRelativeUrl);
    public static bool IsValidAbsoluteWebUrl(string url);
    public static string CombineUrl(string baseUrlPath, string additionalNodes);
    internal static string CombineUrl(String[] segments);
    private static string ExtractSegment(String[] segments, int index);
    internal static bool IsLegalCharInUrl(char ch, bool fAllowSlash, bool fAllowPoundPercent);
    internal static bool IsLegalCharInUrl(char ch, bool fAllowSlash, bool fAllowPoundPercent, bool fAllowColon);
    public static string ReplaceUnsafeCharsInUrlFragment(string urlProposed, bool allowSlash, char replacementChar);
    public static bool ContainsReservedWebNames(string strUrl, bool bCreate);
}
[ScriptTypeAttribute("SP.Utilities.Utility")]
public static class Microsoft.SharePoint.Client.Utilities.Utility : object {
    [RemoteAttribute]
public static ClientResult`1<bool> TenantHasSyntexLicenseV1(ClientRuntimeContext context, Web web, bool useCachedValues);
    [RemoteAttribute]
public static ClientResult`1<bool> ContentCenterExperienceEnabled(ClientRuntimeContext context, Web web, bool useCachedValues);
    [RemoteAttribute]
public static ClientObjectList`1<ListItem> LocalizeWebPartGallery(ClientRuntimeContext context, ListItemCollection items);
    [RemoteAttribute]
public static ClientResult`1<AppLicenseCollection> GetAppLicenseInformation(ClientRuntimeContext context, Guid productId);
    [RemoteAttribute]
public static void ImportAppLicense(ClientRuntimeContext context, string licenseTokenToImport, string contentMarket, string billingMarket, string appName, string iconUrl, string providerName, int appSubtype);
    [RemoteAttribute]
public static ClientResult`1<Guid> GetAppLicenseDeploymentId(ClientRuntimeContext context);
    [RemoteAttribute]
public static ClientResult`1<LogAppErrorResult> LogCustomAppError(ClientRuntimeContext context, string error);
    [RemoteAttribute]
public static ClientResult`1<LogAppErrorResult> LogCustomRemoteAppError(ClientRuntimeContext context, Guid productId, string error);
    [RemoteAttribute]
public static ListItem CreateNewDiscussionReply(ClientRuntimeContext context, ListItem parent);
    [RemoteAttribute]
public static void MarkDiscussionAsFeatured(ClientRuntimeContext context, string listID, string topicIDs);
    [RemoteAttribute]
public static void UnmarkDiscussionAsFeatured(ClientRuntimeContext context, string listID, string topicIDs);
    [RemoteAttribute]
public static ClientResult`1<string> GetLocalizedString(ClientRuntimeContext context, string source, string defaultResourceFile, int language);
    [RemoteAttribute]
public static ListItem CreateNewDiscussion(ClientRuntimeContext context, List list, string title);
    [RemoteAttribute]
public static ClientResult`1<string> GetCurrentUserEmailAddresses(ClientRuntimeContext context);
    [RemoteAttribute]
public static ClientResult`1<string> CreateEmailBodyForInvitation(ClientRuntimeContext context, string pageAddress);
    [RemoteAttribute]
public static ClientResult`1<string> GetPeoplePickerURL(ClientRuntimeContext context, Web web, FieldUser fieldUser);
    [RemoteAttribute]
public static ClientResult`1<bool> IsEmailServerSet(ClientRuntimeContext context, Web web);
    [RemoteAttribute]
public static ClientResult`1<string> GetLowerCaseString(ClientRuntimeContext context, string sourceValue, int lcid);
    [RemoteAttribute]
public static IList`1<string> GetUserPermissionLevels(ClientRuntimeContext context);
    [RemoteAttribute]
public static void SendEmail(ClientRuntimeContext context, EmailProperties properties);
    [RemoteAttribute]
public static ClientResult`1<string> FormatDateTime(ClientRuntimeContext context, Web web, DateTime datetime, DateTimeFormat format);
    [RemoteAttribute]
public static ClientResult`1<bool> IsUserLicensedForEntityInContext(ClientRuntimeContext context, string licensableEntity);
    [RemoteAttribute]
public static File CreateWikiPageInContextWeb(ClientRuntimeContext context, WikiPageCreationInformation parameters);
    [RemoteAttribute]
public static IList`1<PrincipalInfo> SearchPrincipals(ClientRuntimeContext context, Web web, string input, PrincipalType scopes, PrincipalSource sources, UserCollection usersContainer, int maxCount);
    [RemoteAttribute]
public static ClientResult`1<PrincipalInfo> ResolvePrincipal(ClientRuntimeContext context, Web web, string input, PrincipalType scopes, PrincipalSource sources, UserCollection usersContainer, bool inputIsEmailOnly);
}
[ScriptTypeAttribute("SP.Utilities.WebAppExtUrlPair")]
public class Microsoft.SharePoint.Client.Utilities.WebAppExtUrlPair : ClientValueObject {
    private string m_ext;
    private string m_wacUrl;
    [RemoteAttribute]
public string Ext { get; public set; }
    [RemoteAttribute]
public string WacUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Ext();
    public void set_Ext(string value);
    public string get_WacUrl();
    public void set_WacUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Utilities.WebAppUrlsByAction")]
public class Microsoft.SharePoint.Client.Utilities.WebAppUrlsByAction : ClientValueObject {
    private string m_action;
    private IList`1<WebAppExtUrlPair> m_urlsByExt;
    [RemoteAttribute]
public string Action { get; public set; }
    [RemoteAttribute]
public IList`1<WebAppExtUrlPair> UrlsByExt { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Action();
    public void set_Action(string value);
    public IList`1<WebAppExtUrlPair> get_UrlsByExt();
    public void set_UrlsByExt(IList`1<WebAppExtUrlPair> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Utilities.WikiPageCreationInformation")]
public class Microsoft.SharePoint.Client.Utilities.WikiPageCreationInformation : ClientValueObject {
    private string m_serverRelativeUrl;
    private string m_wikiHtmlContent;
    [RemoteAttribute]
public string ServerRelativeUrl { get; public set; }
    [RemoteAttribute]
public string WikiHtmlContent { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ServerRelativeUrl();
    public void set_ServerRelativeUrl(string value);
    public string get_WikiHtmlContent();
    public void set_WikiHtmlContent(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Utilities.WopiHostUtility")]
public static class Microsoft.SharePoint.Client.Utilities.WopiHostUtility : object {
    [RemoteAttribute]
public static ClientResult`1<string> GenerateFileBundle(ClientRuntimeContext context);
    [RemoteAttribute]
public static IList`1<WopiWebAppProperties> GetWebApplicationUrls(ClientRuntimeContext context, string appNames, string actions);
    [RemoteAttribute]
public static WopiProperties GetWopiTargetPropertiesByUrl(ClientRuntimeContext context, string fileUrl, SPWOPIFrameAction requestedAction);
    [RemoteAttribute]
public static FileHandlerWopiProperties GetFileHandlerWopiTargetPropertiesByUrl(ClientRuntimeContext context, string fileUrl, string appId);
    [RemoteAttribute]
public static IList`1<string> GetWopiOrigins(ClientRuntimeContext context);
}
[ScriptTypeAttribute("SP.Utilities.WopiProperties")]
public class Microsoft.SharePoint.Client.Utilities.WopiProperties : ClientObject {
    [RemoteAttribute]
public string AccessToken { get; }
    [RemoteAttribute]
public long AccessTokenTtl { get; }
    [RemoteAttribute]
public string AppIconUrl { get; }
    [RemoteAttribute]
public string ErrorMessageToDisplay { get; }
    [RemoteAttribute]
public string RedirectUrl { get; }
    [RemoteAttribute]
public string WebApplicationUrl { get; }
    [EditorBrowsableAttribute("1")]
public WopiProperties(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_AccessToken();
    public long get_AccessTokenTtl();
    public string get_AppIconUrl();
    public string get_ErrorMessageToDisplay();
    public string get_RedirectUrl();
    public string get_WebApplicationUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Utilities.WopiPropertiesPropertyNames : object {
    public static string AccessToken;
    public static string AccessTokenTtl;
    public static string AppIconUrl;
    public static string ErrorMessageToDisplay;
    public static string RedirectUrl;
    public static string WebApplicationUrl;
}
[ScriptTypeAttribute("SP.Utilities.WopiWebAppProperties")]
public class Microsoft.SharePoint.Client.Utilities.WopiWebAppProperties : ClientValueObject {
    private string m_app;
    private string m_bootstrapperUrl;
    private IList`1<WebAppUrlsByAction> m_listByAction;
    [RemoteAttribute]
public string App { get; public set; }
    [RemoteAttribute]
public string BootstrapperUrl { get; public set; }
    [RemoteAttribute]
public IList`1<WebAppUrlsByAction> ListByAction { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_App();
    public void set_App(string value);
    public string get_BootstrapperUrl();
    public void set_BootstrapperUrl(string value);
    public IList`1<WebAppUrlsByAction> get_ListByAction();
    public void set_ListByAction(IList`1<WebAppUrlsByAction> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.ValidationActionType : Enum {
    public int value__;
    public static ValidationActionType Add;
    public static ValidationActionType Edit;
}
[ScriptTypeAttribute("SP.VersionPolicyManager")]
public class Microsoft.SharePoint.Client.VersionPolicyManager : ClientObject {
    [RemoteAttribute]
public int DefaultExpireAfterDays { get; public set; }
    [RemoteAttribute]
public VersionPolicyTrimMode DefaultTrimMode { get; public set; }
    [EditorBrowsableAttribute("1")]
public VersionPolicyManager(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_DefaultExpireAfterDays();
    public void set_DefaultExpireAfterDays(int value);
    public VersionPolicyTrimMode get_DefaultTrimMode();
    public void set_DefaultTrimMode(VersionPolicyTrimMode value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.VersionPolicyManagerPropertyNames : object {
    public static string DefaultExpireAfterDays;
    public static string DefaultTrimMode;
}
public enum Microsoft.SharePoint.Client.VersionPolicyTrimMode : Enum {
    public int value__;
    public static VersionPolicyTrimMode NoExpiration;
    public static VersionPolicyTrimMode ExpireAfter;
    public static VersionPolicyTrimMode AutoExpiration;
    public static VersionPolicyTrimMode Other;
}
[ScriptTypeAttribute("SP.View")]
public class Microsoft.SharePoint.Client.View : ClientObject {
    [RemoteAttribute]
public string Aggregations { get; public set; }
    [RemoteAttribute]
public string AggregationsStatus { get; public set; }
    [RemoteAttribute]
public string AssociatedContentTypeId { get; public set; }
    [RemoteAttribute]
public string BaseViewId { get; }
    [RemoteAttribute]
public string CalendarViewStyles { get; public set; }
    [RemoteAttribute]
public string ColumnWidth { get; public set; }
    [RemoteAttribute]
public ContentTypeId ContentTypeId { get; public set; }
    [RemoteAttribute]
public string CustomFormatter { get; public set; }
    [RemoteAttribute]
public bool DefaultView { get; public set; }
    [RemoteAttribute]
public bool DefaultViewForContentType { get; public set; }
    [RemoteAttribute]
public bool EditorModified { get; public set; }
    [RemoteAttribute]
public string Formats { get; public set; }
    [RemoteAttribute]
public GridInitInfoType GridInitInfo { get; }
    [RemoteAttribute]
public string GridLayout { get; public set; }
    [RemoteAttribute]
public bool Hidden { get; public set; }
    [RemoteAttribute]
public string HtmlSchemaXml { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string ImageUrl { get; }
    [RemoteAttribute]
public bool IncludeRootFolder { get; public set; }
    [RemoteAttribute]
public string ViewJoins { get; public set; }
    [RemoteAttribute]
public string JSLink { get; public set; }
    [RemoteAttribute]
public string ListViewXml { get; public set; }
    [RemoteAttribute]
public string Method { get; public set; }
    [RemoteAttribute]
public bool MobileDefaultView { get; public set; }
    [RemoteAttribute]
public bool MobileView { get; public set; }
    [RemoteAttribute]
public string ModerationType { get; }
    [RemoteAttribute]
public string NewDocumentTemplates { get; public set; }
    [RemoteAttribute]
public bool OrderedView { get; }
    [RemoteAttribute]
public bool Paged { get; public set; }
    [RemoteAttribute]
public ListPageRenderType PageRenderType { get; }
    [RemoteAttribute]
public bool PersonalView { get; }
    [RemoteAttribute]
public string ViewProjectedFields { get; public set; }
    [RemoteAttribute]
public string ViewQuery { get; public set; }
    [RemoteAttribute]
public bool ReadOnlyView { get; }
    [RemoteAttribute]
public bool RequiresClientIntegration { get; }
    [RemoteAttribute]
public UInt32 RowLimit { get; public set; }
    [RemoteAttribute]
public ViewScope Scope { get; public set; }
    [RemoteAttribute]
public ResourcePath ServerRelativePath { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [RemoteAttribute]
public string StyleId { get; }
    [RemoteAttribute]
public bool TabularView { get; public set; }
    [RemoteAttribute]
public bool Threaded { get; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string Toolbar { get; public set; }
    [RemoteAttribute]
public string ToolbarTemplateName { get; }
    [RemoteAttribute]
public string ViewType { get; }
    [RemoteAttribute]
public string ViewData { get; public set; }
    [RemoteAttribute]
public ViewFieldCollection ViewFields { get; }
    [RemoteAttribute]
public string ViewType2 { get; public set; }
    [RemoteAttribute]
public Visualization VisualizationInfo { get; public set; }
    [EditorBrowsableAttribute("1")]
public View(ClientRuntimeContext context, ObjectPath objectPath);
    internal void InitFromCreationInformation(ViewCreationInformation creation);
    public string get_Aggregations();
    public void set_Aggregations(string value);
    public string get_AggregationsStatus();
    public void set_AggregationsStatus(string value);
    public string get_AssociatedContentTypeId();
    public void set_AssociatedContentTypeId(string value);
    public string get_BaseViewId();
    public string get_CalendarViewStyles();
    public void set_CalendarViewStyles(string value);
    public string get_ColumnWidth();
    public void set_ColumnWidth(string value);
    public ContentTypeId get_ContentTypeId();
    public void set_ContentTypeId(ContentTypeId value);
    public string get_CustomFormatter();
    public void set_CustomFormatter(string value);
    public bool get_DefaultView();
    public void set_DefaultView(bool value);
    public bool get_DefaultViewForContentType();
    public void set_DefaultViewForContentType(bool value);
    public bool get_EditorModified();
    public void set_EditorModified(bool value);
    public string get_Formats();
    public void set_Formats(string value);
    public GridInitInfoType get_GridInitInfo();
    public string get_GridLayout();
    public void set_GridLayout(string value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public string get_HtmlSchemaXml();
    public Guid get_Id();
    public string get_ImageUrl();
    public bool get_IncludeRootFolder();
    public void set_IncludeRootFolder(bool value);
    public string get_ViewJoins();
    public void set_ViewJoins(string value);
    public string get_JSLink();
    public void set_JSLink(string value);
    public string get_ListViewXml();
    public void set_ListViewXml(string value);
    public string get_Method();
    public void set_Method(string value);
    public bool get_MobileDefaultView();
    public void set_MobileDefaultView(bool value);
    public bool get_MobileView();
    public void set_MobileView(bool value);
    public string get_ModerationType();
    public string get_NewDocumentTemplates();
    public void set_NewDocumentTemplates(string value);
    public bool get_OrderedView();
    public bool get_Paged();
    public void set_Paged(bool value);
    public ListPageRenderType get_PageRenderType();
    public bool get_PersonalView();
    public string get_ViewProjectedFields();
    public void set_ViewProjectedFields(string value);
    public string get_ViewQuery();
    public void set_ViewQuery(string value);
    public bool get_ReadOnlyView();
    public bool get_RequiresClientIntegration();
    public UInt32 get_RowLimit();
    public void set_RowLimit(UInt32 value);
    public ViewScope get_Scope();
    public void set_Scope(ViewScope value);
    public ResourcePath get_ServerRelativePath();
    public string get_ServerRelativeUrl();
    public string get_StyleId();
    public bool get_TabularView();
    public void set_TabularView(bool value);
    public bool get_Threaded();
    public string get_Title();
    public void set_Title(string value);
    public string get_Toolbar();
    public void set_Toolbar(string value);
    public string get_ToolbarTemplateName();
    public string get_ViewType();
    public string get_ViewData();
    public void set_ViewData(string value);
    public ViewFieldCollection get_ViewFields();
    public string get_ViewType2();
    public void set_ViewType2(string value);
    public Visualization get_VisualizationInfo();
    public void set_VisualizationInfo(Visualization value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ClientResult`1<string> RenderAsHtml();
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("SP.ViewCollection")]
public class Microsoft.SharePoint.Client.ViewCollection : ClientObjectCollection`1<View> {
    [EditorBrowsableAttribute("1")]
public ViewCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public View GetByTitle(string strTitle);
    [RemoteAttribute]
public View GetById(Guid guidId);
    [RemoteAttribute]
public View Add(ViewCreationInformation parameters);
}
[ScriptTypeAttribute("SP.ViewCreationInformation")]
public class Microsoft.SharePoint.Client.ViewCreationInformation : ClientValueObject {
    private string m_associatedContentTypeId;
    private int m_baseViewId;
    private string m_calendarViewStyles;
    private string m_columnWidth;
    private bool m_paged;
    private bool m_personalView;
    private string m_query;
    private UInt32 m_rowLimit;
    private bool m_setAsDefaultView;
    private string m_title;
    private string m_viewData;
    private String[] m_viewFields;
    private ViewType m_viewTypeKind;
    private string m_viewType2;
    [RemoteAttribute]
public string AssociatedContentTypeId { get; public set; }
    [RemoteAttribute]
public int baseViewId { get; public set; }
    [RemoteAttribute]
public string CalendarViewStyles { get; public set; }
    [RemoteAttribute]
public string ColumnWidth { get; public set; }
    [RemoteAttribute]
public bool Paged { get; public set; }
    [RemoteAttribute]
public bool PersonalView { get; public set; }
    [RemoteAttribute]
public string Query { get; public set; }
    [RemoteAttribute]
public UInt32 RowLimit { get; public set; }
    [RemoteAttribute]
public bool SetAsDefaultView { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string ViewData { get; public set; }
    [RemoteAttribute]
public String[] ViewFields { get; public set; }
    [RemoteAttribute]
public ViewType ViewTypeKind { get; public set; }
    [RemoteAttribute]
public string ViewType2 { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AssociatedContentTypeId();
    public void set_AssociatedContentTypeId(string value);
    public int get_baseViewId();
    public void set_baseViewId(int value);
    public string get_CalendarViewStyles();
    public void set_CalendarViewStyles(string value);
    public string get_ColumnWidth();
    public void set_ColumnWidth(string value);
    public bool get_Paged();
    public void set_Paged(bool value);
    public bool get_PersonalView();
    public void set_PersonalView(bool value);
    public string get_Query();
    public void set_Query(string value);
    public UInt32 get_RowLimit();
    public void set_RowLimit(UInt32 value);
    public bool get_SetAsDefaultView();
    public void set_SetAsDefaultView(bool value);
    public string get_Title();
    public void set_Title(string value);
    public string get_ViewData();
    public void set_ViewData(string value);
    public String[] get_ViewFields();
    public void set_ViewFields(String[] value);
    public ViewType get_ViewTypeKind();
    public void set_ViewTypeKind(ViewType value);
    public string get_ViewType2();
    public void set_ViewType2(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.ViewFieldCollection")]
public class Microsoft.SharePoint.Client.ViewFieldCollection : ClientObjectCollection`1<string> {
    [RemoteAttribute]
public string SchemaXml { get; }
    [EditorBrowsableAttribute("1")]
public ViewFieldCollection(ClientRuntimeContext context, ObjectPath objectPath);
    private void OnAdd(string fieldName);
    private void OnRemove(string fieldName);
    private void OnRemoveAll();
    public string get_SchemaXml();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void MoveFieldTo(string field, int index);
    [RemoteAttribute]
public void Add(string strField);
    [RemoteAttribute]
public void Remove(string strField);
    [RemoteAttribute]
public void RemoveAll();
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ViewFieldCollectionPropertyNames : object {
    public static string SchemaXml;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ViewObjectPropertyNames : object {
    public static string ViewFields;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.ViewPropertyNames : object {
    public static string Aggregations;
    public static string AggregationsStatus;
    public static string AssociatedContentTypeId;
    public static string BaseViewId;
    public static string CalendarViewStyles;
    public static string ColumnWidth;
    public static string ContentTypeId;
    public static string CustomFormatter;
    public static string DefaultView;
    public static string DefaultViewForContentType;
    public static string EditorModified;
    public static string Formats;
    public static string GridInitInfo;
    public static string GridLayout;
    public static string Hidden;
    public static string HtmlSchemaXml;
    public static string Id;
    public static string ImageUrl;
    public static string IncludeRootFolder;
    public static string ViewJoins;
    public static string JSLink;
    public static string ListViewXml;
    public static string Method;
    public static string MobileDefaultView;
    public static string MobileView;
    public static string ModerationType;
    public static string NewDocumentTemplates;
    public static string OrderedView;
    public static string Paged;
    public static string PageRenderType;
    public static string PersonalView;
    public static string ViewProjectedFields;
    public static string ViewQuery;
    public static string ReadOnlyView;
    public static string RequiresClientIntegration;
    public static string RowLimit;
    public static string Scope;
    public static string ServerRelativePath;
    public static string ServerRelativeUrl;
    public static string StyleId;
    public static string TabularView;
    public static string Threaded;
    public static string Title;
    public static string Toolbar;
    public static string ToolbarTemplateName;
    public static string ViewType;
    public static string ViewData;
    public static string ViewType2;
    public static string VisualizationInfo;
}
public enum Microsoft.SharePoint.Client.ViewScope : Enum {
    public int value__;
    public static ViewScope DefaultValue;
    public static ViewScope Recursive;
    public static ViewScope RecursiveAll;
    public static ViewScope FilesOnly;
}
public enum Microsoft.SharePoint.Client.ViewType : Enum {
    public int value__;
    public static ViewType None;
    public static ViewType Html;
    public static ViewType Grid;
    public static ViewType Calendar;
    public static ViewType Recurrence;
    public static ViewType Chart;
    public static ViewType Gantt;
}
[ScriptTypeAttribute("Microsoft.SharePoint.CampaignAnalytics.VinciAnalyticsDimensionsRequest")]
public class Microsoft.SharePoint.Client.VinciAnalyticsDimensionsRequest : ClientValueObject {
    private string m_campaignId;
    [RemoteAttribute]
public string campaignId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_campaignId();
    public void set_campaignId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.CampaignAnalytics.VinciAnalyticsReportRequest")]
public class Microsoft.SharePoint.Client.VinciAnalyticsReportRequest : ClientValueObject {
    private string m_campaignId;
    private string m_communicationId;
    private IList`1<VinciAnalyticsReportTableElement> m_dimensions;
    private IList`1<VinciAnalyticsReportTableElement> m_metrics;
    [RemoteAttribute]
public string campaignId { get; public set; }
    [RemoteAttribute]
public string communicationId { get; public set; }
    [RemoteAttribute]
public IList`1<VinciAnalyticsReportTableElement> dimensions { get; public set; }
    [RemoteAttribute]
public IList`1<VinciAnalyticsReportTableElement> metrics { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_campaignId();
    public void set_campaignId(string value);
    public string get_communicationId();
    public void set_communicationId(string value);
    public IList`1<VinciAnalyticsReportTableElement> get_dimensions();
    public void set_dimensions(IList`1<VinciAnalyticsReportTableElement> value);
    public IList`1<VinciAnalyticsReportTableElement> get_metrics();
    public void set_metrics(IList`1<VinciAnalyticsReportTableElement> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.CampaignAnalytics.VinciAnalyticsReportTableElement")]
public class Microsoft.SharePoint.Client.VinciAnalyticsReportTableElement : ClientValueObject {
    private string m_name;
    [RemoteAttribute]
public string name { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_name();
    public void set_name(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.CampaignAnalytics.VinciAnalyticsReportTableRow")]
public class Microsoft.SharePoint.Client.VinciAnalyticsReportTableRow : ClientValueObject {
    private string m_dimensionReport;
    private string m_metricReport;
    [RemoteAttribute]
public string dimensionReport { get; public set; }
    [RemoteAttribute]
public string metricReport { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_dimensionReport();
    public void set_dimensionReport(string value);
    public string get_metricReport();
    public void set_metricReport(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Visualization")]
public class Microsoft.SharePoint.Client.Visualization : ClientValueObject {
    private VisualizationStyleSet m_defaultScreen;
    private VisualizationStyleSet m_detailView;
    private VisualizationStyleSet m_mediumScreen;
    private VisualizationStyleSet m_smallScreen;
    private VisualizationAppInfo m_visualizationAppInfo;
    private VisualizationType m_visualizationType;
    [RemoteAttribute]
public VisualizationStyleSet DefaultScreen { get; public set; }
    [RemoteAttribute]
public VisualizationStyleSet DetailView { get; public set; }
    [RemoteAttribute]
public VisualizationStyleSet MediumScreen { get; public set; }
    [RemoteAttribute]
public VisualizationStyleSet SmallScreen { get; public set; }
    [RemoteAttribute]
public VisualizationAppInfo VisualizationAppInfo { get; public set; }
    [RemoteAttribute]
public VisualizationType VisualizationType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public VisualizationStyleSet get_DefaultScreen();
    public void set_DefaultScreen(VisualizationStyleSet value);
    public VisualizationStyleSet get_DetailView();
    public void set_DetailView(VisualizationStyleSet value);
    public VisualizationStyleSet get_MediumScreen();
    public void set_MediumScreen(VisualizationStyleSet value);
    public VisualizationStyleSet get_SmallScreen();
    public void set_SmallScreen(VisualizationStyleSet value);
    public VisualizationAppInfo get_VisualizationAppInfo();
    public void set_VisualizationAppInfo(VisualizationAppInfo value);
    public VisualizationType get_VisualizationType();
    public void set_VisualizationType(VisualizationType value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.VisualizationAppInfo")]
public class Microsoft.SharePoint.Client.VisualizationAppInfo : ClientValueObject {
    private string m_designUri;
    private Guid m_id;
    private string m_runtimeUri;
    [RemoteAttribute]
public string DesignUri { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string RuntimeUri { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_DesignUri();
    public void set_DesignUri(string value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_RuntimeUri();
    public void set_RuntimeUri(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.VisualizationAppMappedViewCollection")]
public class Microsoft.SharePoint.Client.VisualizationAppMappedViewCollection : ClientObjectCollection`1<View> {
    [EditorBrowsableAttribute("1")]
public VisualizationAppMappedViewCollection(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("SP.VisualizationAppSynchronizationResult")]
public class Microsoft.SharePoint.Client.VisualizationAppSynchronizationResult : ClientObject {
    [RemoteAttribute]
public VisualizationAppMappedViewCollection AppMappedViews { get; }
    [RemoteAttribute]
public string SynchronizationData { get; }
    [RemoteAttribute]
public VisualizationAppSynchronizationStatus SynchronizationStatus { get; }
    [EditorBrowsableAttribute("1")]
public VisualizationAppSynchronizationResult(ClientRuntimeContext context, ObjectPath objectPath);
    public VisualizationAppMappedViewCollection get_AppMappedViews();
    public string get_SynchronizationData();
    public VisualizationAppSynchronizationStatus get_SynchronizationStatus();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.VisualizationAppSynchronizationResultObjectPropertyNames : object {
    public static string AppMappedViews;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.VisualizationAppSynchronizationResultPropertyNames : object {
    public static string SynchronizationData;
    public static string SynchronizationStatus;
}
public enum Microsoft.SharePoint.Client.VisualizationAppSynchronizationStatus : Enum {
    public int value__;
    public static VisualizationAppSynchronizationStatus Success;
    public static VisualizationAppSynchronizationStatus NotFound;
    public static VisualizationAppSynchronizationStatus Forbidden;
    public static VisualizationAppSynchronizationStatus TimeOut;
    public static VisualizationAppSynchronizationStatus UnexpectedError;
    public static VisualizationAppSynchronizationStatus BadRequest;
    public static VisualizationAppSynchronizationStatus Suspended;
    public static VisualizationAppSynchronizationStatus JobFinish;
}
public enum Microsoft.SharePoint.Client.VisualizationAppTarget : Enum {
    public int value__;
    public static VisualizationAppTarget RichClient;
    public static VisualizationAppTarget Browser;
}
[ScriptTypeAttribute("SP.VisualizationField")]
public class Microsoft.SharePoint.Client.VisualizationField : ClientValueObject {
    private string m_internalName;
    private string m_style;
    [RemoteAttribute]
public string InternalName { get; public set; }
    [RemoteAttribute]
public string Style { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_InternalName();
    public void set_InternalName(string value);
    public string get_Style();
    public void set_Style(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.VisualizationStyleSet")]
public class Microsoft.SharePoint.Client.VisualizationStyleSet : ClientValueObject {
    private string m_aspectRatio;
    private string m_backgroundColor;
    private IList`1<VisualizationField> m_fields;
    private string m_minHeight;
    [RemoteAttribute]
public string AspectRatio { get; public set; }
    [RemoteAttribute]
public string BackgroundColor { get; public set; }
    [RemoteAttribute]
public IList`1<VisualizationField> Fields { get; public set; }
    [RemoteAttribute]
public string MinHeight { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AspectRatio();
    public void set_AspectRatio(string value);
    public string get_BackgroundColor();
    public void set_BackgroundColor(string value);
    public IList`1<VisualizationField> get_Fields();
    public void set_Fields(IList`1<VisualizationField> value);
    public string get_MinHeight();
    public void set_MinHeight(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Client.VisualizationType : Enum {
    public int value__;
    public static VisualizationType Standard;
    public static VisualizationType Custom;
    public static VisualizationType VisualizationApp;
}
[ScriptTypeAttribute("SP.VivaConnectionsLicense")]
public class Microsoft.SharePoint.Client.VivaConnectionsLicense : ClientValueObject {
    private bool m_isTenantEnabled;
    private bool m_isUserEnabled;
    [RemoteAttribute]
public bool IsTenantEnabled { get; }
    [RemoteAttribute]
public bool IsUserEnabled { get; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_IsTenantEnabled();
    public bool get_IsUserEnabled();
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.VivaConnectionsUrlConfiguration")]
public class Microsoft.SharePoint.Client.VivaConnectionsUrlConfiguration : ClientValueObject {
    private string m_contentUrl;
    private string m_dashboardNotConfiguredWarning;
    private string m_globalNavNotConfiguredWarning;
    private string m_notHomeSiteUrlWarning;
    private string m_searchUrl;
    [RemoteAttribute]
public string ContentUrl { get; public set; }
    [RemoteAttribute]
public string DashboardNotConfiguredWarning { get; public set; }
    [RemoteAttribute]
public string GlobalNavNotConfiguredWarning { get; public set; }
    [RemoteAttribute]
public string NotHomeSiteUrlWarning { get; public set; }
    [RemoteAttribute]
public string SearchUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ContentUrl();
    public void set_ContentUrl(string value);
    public string get_DashboardNotConfiguredWarning();
    public void set_DashboardNotConfiguredWarning(string value);
    public string get_GlobalNavNotConfiguredWarning();
    public void set_GlobalNavNotConfiguredWarning(string value);
    public string get_NotHomeSiteUrlWarning();
    public void set_NotHomeSiteUrlWarning(string value);
    public string get_SearchUrl();
    public void set_SearchUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Web")]
public class Microsoft.SharePoint.Client.Web : SecurableObject {
    [RemoteAttribute]
public string AccessRequestListUrl { get; }
    [RemoteAttribute]
public string AccessRequestSiteDescription { get; }
    [RemoteAttribute]
public string Acronym { get; }
    [RemoteAttribute]
public AlertCollection Alerts { get; }
    [RemoteAttribute]
public bool AllowAutomaticASPXPageIndexing { get; public set; }
    [RemoteAttribute]
public bool AllowCreateDeclarativeWorkflowForCurrentUser { get; }
    [RemoteAttribute]
public bool AllowDesignerForCurrentUser { get; }
    [RemoteAttribute]
public bool AllowMasterPageEditingForCurrentUser { get; }
    [RemoteAttribute]
public bool AllowRevertFromTemplateForCurrentUser { get; }
    [RemoteAttribute]
public bool AllowRssFeeds { get; }
    [RemoteAttribute]
public bool AllowSaveDeclarativeWorkflowAsTemplateForCurrentUser { get; }
    [RemoteAttribute]
public bool AllowSavePublishDeclarativeWorkflowForCurrentUser { get; }
    [RemoteAttribute]
public PropertyValues AllProperties { get; }
    [RemoteAttribute]
public string AlternateCssUrl { get; public set; }
    [RemoteAttribute]
public Guid AppInstanceId { get; }
    [RemoteAttribute]
public AppTileCollection AppTiles { get; }
    [RemoteAttribute]
public Group AssociatedMemberGroup { get; public set; }
    [RemoteAttribute]
public Group AssociatedOwnerGroup { get; public set; }
    [RemoteAttribute]
public Group AssociatedVisitorGroup { get; public set; }
    [RemoteAttribute]
public User Author { get; }
    [RemoteAttribute]
public ContentTypeCollection AvailableContentTypes { get; }
    [RemoteAttribute]
public FieldCollection AvailableFields { get; }
    [RemoteAttribute]
public ModernizeHomepageResult CanModernizeHomepage { get; }
    [RemoteAttribute]
public string ClassicWelcomePage { get; public set; }
    [RemoteAttribute]
public bool CommentsOnSitePagesDisabled { get; public set; }
    [RemoteAttribute]
public short Configuration { get; }
    [RemoteAttribute]
public bool ContainsConfidentialInfo { get; public set; }
    [RemoteAttribute]
public ContentTypeCollection ContentTypes { get; }
    [RemoteAttribute]
public DateTime Created { get; }
    [RemoteAttribute]
public ChangeToken CurrentChangeToken { get; }
    [RemoteAttribute]
public User CurrentUser { get; }
    [RemoteAttribute]
public string CustomMasterUrl { get; public set; }
    [RemoteAttribute]
public bool CustomSiteActionsDisabled { get; public set; }
    [RemoteAttribute]
public SPDataLeakagePreventionStatusInfo DataLeakagePreventionStatusInfo { get; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public string DescriptionForExistingLanguage { get; public set; }
    [RemoteAttribute]
public UserResource DescriptionResource { get; }
    [RemoteAttribute]
public IEnumerable`1<SPResourceEntry> DescriptionTranslations { get; public set; }
    [RemoteAttribute]
public string DesignerDownloadUrlForCurrentUser { get; }
    [RemoteAttribute]
public Guid DesignPackageId { get; public set; }
    [RemoteAttribute]
public bool DisableAppViews { get; public set; }
    [RemoteAttribute]
public bool DisableFlows { get; public set; }
    [RemoteAttribute]
public bool DisableRecommendedItems { get; public set; }
    [RemoteAttribute]
public bool DocumentLibraryCalloutOfficeWebAppPreviewersDisabled { get; }
    [RemoteAttribute]
public BasePermissions EffectiveBasePermissions { get; }
    [RemoteAttribute]
public bool EnableMinimalDownload { get; public set; }
    [RemoteAttribute]
public EventReceiverDefinitionCollection EventReceivers { get; }
    [RemoteAttribute]
public bool ExcludeFromOfflineClient { get; public set; }
    [RemoteAttribute]
public FeatureCollection Features { get; }
    [RemoteAttribute]
public FieldCollection Fields { get; }
    [RemoteAttribute]
public FolderCollection Folders { get; }
    [RemoteAttribute]
public FooterVariantThemeType FooterEmphasis { get; public set; }
    [RemoteAttribute]
public bool FooterEnabled { get; public set; }
    [RemoteAttribute]
public FooterLayoutType FooterLayout { get; public set; }
    [RemoteAttribute]
public bool HasWebTemplateExtension { get; public set; }
    [RemoteAttribute]
public SPVariantThemeType HeaderEmphasis { get; public set; }
    [RemoteAttribute]
public HeaderLayoutType HeaderLayout { get; public set; }
    [RemoteAttribute]
public bool HideTitleInHeader { get; public set; }
    [RemoteAttribute]
public bool HorizontalQuickLaunch { get; public set; }
    [RemoteAttribute]
public HostedAppsManager HostedApps { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool IsEduClass { get; }
    [RemoteAttribute]
public bool IsEduClassProvisionChecked { get; }
    [RemoteAttribute]
public bool IsEduClassProvisionPending { get; }
    [RemoteAttribute]
public bool IsHomepageModernized { get; }
    [RemoteAttribute]
public bool IsMultilingual { get; public set; }
    [RemoteAttribute]
public bool IsProvisioningComplete { get; }
    [RemoteAttribute]
public bool IsRevertHomepageLinkHidden { get; public set; }
    [RemoteAttribute]
public UInt32 Language { get; }
    [RemoteAttribute]
public DateTime LastItemModifiedDate { get; }
    [RemoteAttribute]
public DateTime LastItemUserModifiedDate { get; }
    [RemoteAttribute]
public ListCollection Lists { get; }
    [RemoteAttribute]
public ListTemplateCollection ListTemplates { get; }
    [RemoteAttribute]
public LogoAlignment LogoAlignment { get; public set; }
    [RemoteAttribute]
public string MasterUrl { get; public set; }
    [RemoteAttribute]
public bool MegaMenuEnabled { get; public set; }
    [RemoteAttribute]
public bool MembersCanShare { get; public set; }
    [RemoteAttribute]
public bool NavAudienceTargetingEnabled { get; public set; }
    [RemoteAttribute]
public Navigation Navigation { get; }
    [RemoteAttribute]
public bool NextStepsFirstRunEnabled { get; public set; }
    [RemoteAttribute]
public bool NoCrawl { get; public set; }
    [RemoteAttribute]
public bool NotificationsInOneDriveForBusinessEnabled { get; }
    [RemoteAttribute]
public bool NotificationsInSharePointEnabled { get; }
    [RemoteAttribute]
public bool ObjectCacheEnabled { get; public set; }
    [RemoteAttribute]
public bool OverwriteTranslationsOnChange { get; public set; }
    [RemoteAttribute]
public WebInformation ParentWeb { get; }
    [RemoteAttribute]
public ResourcePath ResourcePath { get; }
    [RemoteAttribute]
public bool PreviewFeaturesEnabled { get; }
    [RemoteAttribute]
public string PrimaryColor { get; public set; }
    [RemoteAttribute]
public PushNotificationSubscriberCollection PushNotificationSubscribers { get; }
    [RemoteAttribute]
public bool QuickLaunchEnabled { get; public set; }
    [RemoteAttribute]
public RecycleBinItemCollection RecycleBin { get; }
    [RemoteAttribute]
public bool RecycleBinEnabled { get; }
    [RemoteAttribute]
public RegionalSettings RegionalSettings { get; }
    [RemoteAttribute]
public string RelatedHubSiteIds { get; }
    [RemoteAttribute]
public string RequestAccessEmail { get; public set; }
    [RemoteAttribute]
public RoleDefinitionCollection RoleDefinitions { get; }
    [RemoteAttribute]
public Folder RootFolder { get; }
    [RemoteAttribute]
public bool SaveSiteAsTemplateEnabled { get; public set; }
    [RemoteAttribute]
public SearchBoxInNavBarType SearchBoxInNavBar { get; public set; }
    [RemoteAttribute]
public string SearchBoxPlaceholderText { get; public set; }
    [RemoteAttribute]
public SearchScopeType SearchScope { get; public set; }
    [RemoteAttribute]
public ResourcePath ServerRelativePath { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; public set; }
    [RemoteAttribute]
public bool ShowUrlStructureForCurrentUser { get; }
    [RemoteAttribute]
public SiteCollectionCorporateCatalogAccessor SiteCollectionAppCatalog { get; }
    [RemoteAttribute]
public GroupCollection SiteGroups { get; }
    [RemoteAttribute]
public string SiteLogoDescription { get; public set; }
    [RemoteAttribute]
public string SiteLogoUrl { get; public set; }
    [RemoteAttribute]
public List SiteUserInfoList { get; }
    [RemoteAttribute]
public UserCollection SiteUsers { get; }
    [RemoteAttribute]
public IEnumerable`1<int> SupportedUILanguageIds { get; public set; }
    [RemoteAttribute]
public bool SyndicationEnabled { get; public set; }
    [RemoteAttribute]
public SharingState TenantAdminMembersCanShare { get; }
    [RemoteAttribute]
public TenantCorporateCatalogAccessor TenantAppCatalog { get; }
    [RemoteAttribute]
public bool TenantTagPolicyEnabled { get; }
    [RemoteAttribute]
public string ThemedCssFolderUrl { get; public set; }
    [RemoteAttribute]
public ThemeInfo ThemeInfo { get; }
    [RemoteAttribute]
public bool ThirdPartyMdmEnabled { get; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string TitleForExistingLanguage { get; public set; }
    [RemoteAttribute]
public UserResource TitleResource { get; }
    [RemoteAttribute]
public IEnumerable`1<SPResourceEntry> TitleTranslations { get; public set; }
    [RemoteAttribute]
public bool TreeViewEnabled { get; public set; }
    [RemoteAttribute]
public int UIVersion { get; public set; }
    [RemoteAttribute]
public bool UIVersionConfigurationEnabled { get; public set; }
    [RemoteAttribute]
public string Url { get; }
    [RemoteAttribute]
public bool UseAccessRequestDefault { get; }
    [RemoteAttribute]
public UserCustomActionCollection UserCustomActions { get; }
    [RemoteAttribute]
public WebCollection Webs { get; }
    [RemoteAttribute]
public string WebTemplate { get; }
    [RemoteAttribute]
public string WebTemplateConfiguration { get; }
    [RemoteAttribute]
public bool WebTemplatesGalleryFirstRunEnabled { get; public set; }
    [RemoteAttribute]
public string WelcomePage { get; }
    [RemoteAttribute]
public WorkflowAssociationCollection WorkflowAssociations { get; }
    [RemoteAttribute]
public WorkflowTemplateCollection WorkflowTemplates { get; }
    [EditorBrowsableAttribute("1")]
public Web(ClientRuntimeContext context, ObjectPath objectPath);
    internal void InitFromCreationInformation(WebCreationInformation creation);
    public static Uri WebUrlFromPageUrlDirect(ClientContext context, Uri pageFullUrl);
    public static Uri WebUrlFromFolderUrlDirect(ClientContext context, Uri folderFullUrl);
    private static string TryExtractODataError(WebException webEx);
    public string get_AccessRequestListUrl();
    public string get_AccessRequestSiteDescription();
    public string get_Acronym();
    public AlertCollection get_Alerts();
    public bool get_AllowAutomaticASPXPageIndexing();
    public void set_AllowAutomaticASPXPageIndexing(bool value);
    public bool get_AllowCreateDeclarativeWorkflowForCurrentUser();
    public bool get_AllowDesignerForCurrentUser();
    public bool get_AllowMasterPageEditingForCurrentUser();
    public bool get_AllowRevertFromTemplateForCurrentUser();
    public bool get_AllowRssFeeds();
    public bool get_AllowSaveDeclarativeWorkflowAsTemplateForCurrentUser();
    public bool get_AllowSavePublishDeclarativeWorkflowForCurrentUser();
    public PropertyValues get_AllProperties();
    public string get_AlternateCssUrl();
    public void set_AlternateCssUrl(string value);
    public Guid get_AppInstanceId();
    public AppTileCollection get_AppTiles();
    public Group get_AssociatedMemberGroup();
    public void set_AssociatedMemberGroup(Group value);
    public Group get_AssociatedOwnerGroup();
    public void set_AssociatedOwnerGroup(Group value);
    public Group get_AssociatedVisitorGroup();
    public void set_AssociatedVisitorGroup(Group value);
    public User get_Author();
    public ContentTypeCollection get_AvailableContentTypes();
    public FieldCollection get_AvailableFields();
    public ModernizeHomepageResult get_CanModernizeHomepage();
    public string get_ClassicWelcomePage();
    public void set_ClassicWelcomePage(string value);
    public bool get_CommentsOnSitePagesDisabled();
    public void set_CommentsOnSitePagesDisabled(bool value);
    public short get_Configuration();
    public bool get_ContainsConfidentialInfo();
    public void set_ContainsConfidentialInfo(bool value);
    public ContentTypeCollection get_ContentTypes();
    public DateTime get_Created();
    public ChangeToken get_CurrentChangeToken();
    public User get_CurrentUser();
    public string get_CustomMasterUrl();
    public void set_CustomMasterUrl(string value);
    public bool get_CustomSiteActionsDisabled();
    public void set_CustomSiteActionsDisabled(bool value);
    public SPDataLeakagePreventionStatusInfo get_DataLeakagePreventionStatusInfo();
    public string get_Description();
    public void set_Description(string value);
    public string get_DescriptionForExistingLanguage();
    public void set_DescriptionForExistingLanguage(string value);
    public UserResource get_DescriptionResource();
    public IEnumerable`1<SPResourceEntry> get_DescriptionTranslations();
    public void set_DescriptionTranslations(IEnumerable`1<SPResourceEntry> value);
    public string get_DesignerDownloadUrlForCurrentUser();
    public Guid get_DesignPackageId();
    public void set_DesignPackageId(Guid value);
    public bool get_DisableAppViews();
    public void set_DisableAppViews(bool value);
    public bool get_DisableFlows();
    public void set_DisableFlows(bool value);
    public bool get_DisableRecommendedItems();
    public void set_DisableRecommendedItems(bool value);
    public bool get_DocumentLibraryCalloutOfficeWebAppPreviewersDisabled();
    public BasePermissions get_EffectiveBasePermissions();
    public bool get_EnableMinimalDownload();
    public void set_EnableMinimalDownload(bool value);
    public EventReceiverDefinitionCollection get_EventReceivers();
    public bool get_ExcludeFromOfflineClient();
    public void set_ExcludeFromOfflineClient(bool value);
    public FeatureCollection get_Features();
    public FieldCollection get_Fields();
    public FolderCollection get_Folders();
    public FooterVariantThemeType get_FooterEmphasis();
    public void set_FooterEmphasis(FooterVariantThemeType value);
    public bool get_FooterEnabled();
    public void set_FooterEnabled(bool value);
    public FooterLayoutType get_FooterLayout();
    public void set_FooterLayout(FooterLayoutType value);
    public bool get_HasWebTemplateExtension();
    public void set_HasWebTemplateExtension(bool value);
    public SPVariantThemeType get_HeaderEmphasis();
    public void set_HeaderEmphasis(SPVariantThemeType value);
    public HeaderLayoutType get_HeaderLayout();
    public void set_HeaderLayout(HeaderLayoutType value);
    public bool get_HideTitleInHeader();
    public void set_HideTitleInHeader(bool value);
    public bool get_HorizontalQuickLaunch();
    public void set_HorizontalQuickLaunch(bool value);
    public HostedAppsManager get_HostedApps();
    public Guid get_Id();
    public bool get_IsEduClass();
    public bool get_IsEduClassProvisionChecked();
    public bool get_IsEduClassProvisionPending();
    public bool get_IsHomepageModernized();
    public bool get_IsMultilingual();
    public void set_IsMultilingual(bool value);
    public bool get_IsProvisioningComplete();
    public bool get_IsRevertHomepageLinkHidden();
    public void set_IsRevertHomepageLinkHidden(bool value);
    public UInt32 get_Language();
    public DateTime get_LastItemModifiedDate();
    public DateTime get_LastItemUserModifiedDate();
    public ListCollection get_Lists();
    public ListTemplateCollection get_ListTemplates();
    public LogoAlignment get_LogoAlignment();
    public void set_LogoAlignment(LogoAlignment value);
    public string get_MasterUrl();
    public void set_MasterUrl(string value);
    public bool get_MegaMenuEnabled();
    public void set_MegaMenuEnabled(bool value);
    public bool get_MembersCanShare();
    public void set_MembersCanShare(bool value);
    public bool get_NavAudienceTargetingEnabled();
    public void set_NavAudienceTargetingEnabled(bool value);
    public Navigation get_Navigation();
    public bool get_NextStepsFirstRunEnabled();
    public void set_NextStepsFirstRunEnabled(bool value);
    public bool get_NoCrawl();
    public void set_NoCrawl(bool value);
    public bool get_NotificationsInOneDriveForBusinessEnabled();
    public bool get_NotificationsInSharePointEnabled();
    public bool get_ObjectCacheEnabled();
    public void set_ObjectCacheEnabled(bool value);
    public bool get_OverwriteTranslationsOnChange();
    public void set_OverwriteTranslationsOnChange(bool value);
    public WebInformation get_ParentWeb();
    public ResourcePath get_ResourcePath();
    public bool get_PreviewFeaturesEnabled();
    public string get_PrimaryColor();
    public void set_PrimaryColor(string value);
    public PushNotificationSubscriberCollection get_PushNotificationSubscribers();
    public bool get_QuickLaunchEnabled();
    public void set_QuickLaunchEnabled(bool value);
    public RecycleBinItemCollection get_RecycleBin();
    public bool get_RecycleBinEnabled();
    public RegionalSettings get_RegionalSettings();
    public string get_RelatedHubSiteIds();
    public string get_RequestAccessEmail();
    public void set_RequestAccessEmail(string value);
    public RoleDefinitionCollection get_RoleDefinitions();
    public Folder get_RootFolder();
    public bool get_SaveSiteAsTemplateEnabled();
    public void set_SaveSiteAsTemplateEnabled(bool value);
    public SearchBoxInNavBarType get_SearchBoxInNavBar();
    public void set_SearchBoxInNavBar(SearchBoxInNavBarType value);
    public string get_SearchBoxPlaceholderText();
    public void set_SearchBoxPlaceholderText(string value);
    public SearchScopeType get_SearchScope();
    public void set_SearchScope(SearchScopeType value);
    public ResourcePath get_ServerRelativePath();
    public string get_ServerRelativeUrl();
    public void set_ServerRelativeUrl(string value);
    public bool get_ShowUrlStructureForCurrentUser();
    public SiteCollectionCorporateCatalogAccessor get_SiteCollectionAppCatalog();
    public GroupCollection get_SiteGroups();
    public string get_SiteLogoDescription();
    public void set_SiteLogoDescription(string value);
    public string get_SiteLogoUrl();
    public void set_SiteLogoUrl(string value);
    public List get_SiteUserInfoList();
    public UserCollection get_SiteUsers();
    public IEnumerable`1<int> get_SupportedUILanguageIds();
    public void set_SupportedUILanguageIds(IEnumerable`1<int> value);
    public bool get_SyndicationEnabled();
    public void set_SyndicationEnabled(bool value);
    public SharingState get_TenantAdminMembersCanShare();
    public TenantCorporateCatalogAccessor get_TenantAppCatalog();
    public bool get_TenantTagPolicyEnabled();
    public string get_ThemedCssFolderUrl();
    public void set_ThemedCssFolderUrl(string value);
    public ThemeInfo get_ThemeInfo();
    public bool get_ThirdPartyMdmEnabled();
    public string get_Title();
    public void set_Title(string value);
    public string get_TitleForExistingLanguage();
    public void set_TitleForExistingLanguage(string value);
    public UserResource get_TitleResource();
    public IEnumerable`1<SPResourceEntry> get_TitleTranslations();
    public void set_TitleTranslations(IEnumerable`1<SPResourceEntry> value);
    public bool get_TreeViewEnabled();
    public void set_TreeViewEnabled(bool value);
    public int get_UIVersion();
    public void set_UIVersion(int value);
    public bool get_UIVersionConfigurationEnabled();
    public void set_UIVersionConfigurationEnabled(bool value);
    public string get_Url();
    public bool get_UseAccessRequestDefault();
    public UserCustomActionCollection get_UserCustomActions();
    public WebCollection get_Webs();
    public string get_WebTemplate();
    public string get_WebTemplateConfiguration();
    public bool get_WebTemplatesGalleryFirstRunEnabled();
    public void set_WebTemplatesGalleryFirstRunEnabled(bool value);
    public string get_WelcomePage();
    public WorkflowAssociationCollection get_WorkflowAssociations();
    public WorkflowTemplateCollection get_WorkflowTemplates();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public ClientResult`1<bool> DoesUserHavePermissions(BasePermissions permissionMask);
    [RemoteAttribute]
public ClientResult`1<BasePermissions> GetUserEffectivePermissions(string userName);
    [RemoteAttribute]
public void CreateDefaultAssociatedGroups(string userLogin, string userLogin2, string groupNameSeed);
    [RemoteAttribute]
public SPLargeOperation GetListOperation(Guid listId, Guid operationId);
    [RemoteAttribute]
public User GetSiteUserIncludingDeletedByPuid(string puid);
    [RemoteAttribute]
public User GetUserById(int userId);
    [RemoteAttribute]
public ClientResult`1<bool> EnsureTenantAppCatalog(string callerId);
    [RemoteAttribute]
public StorageEntity GetStorageEntity(string key);
    [RemoteAttribute]
public void SetStorageEntity(string key, string value, string description, string comments);
    [RemoteAttribute]
public void RemoveStorageEntity(string key);
    [RemoteAttribute]
public static SharingResult ShareObject(ClientRuntimeContext context, string url, string peoplePickerInput, string roleValue, int groupId, bool propagateAcl, bool sendEmail, bool includeAnonymousLinkInEmail, string emailSubject, string emailBody, bool useSimplifiedRoles);
    [RemoteAttribute]
public static SharingResult ForwardObjectLink(ClientRuntimeContext context, string url, string peoplePickerInput, string emailSubject, string emailBody);
    [RemoteAttribute]
public static SharingResult UnshareObject(ClientRuntimeContext context, string url);
    [RemoteAttribute]
public static ObjectSharingSettings GetObjectSharingSettings(ClientRuntimeContext context, string objectUrl, int groupId, bool useSimplifiedRoles);
    [RemoteAttribute]
public static ClientResult`1<string> CreateAnonymousLink(ClientRuntimeContext context, string url, bool isEditLink);
    [RemoteAttribute]
public static ClientResult`1<string> CreateAnonymousLinkWithExpiration(ClientRuntimeContext context, string url, bool isEditLink, string expirationString);
    [RemoteAttribute]
public static void DeleteAllAnonymousLinksForObject(ClientRuntimeContext context, string url);
    [RemoteAttribute]
public static void DeleteAnonymousLinkForObject(ClientRuntimeContext context, string url, bool isEditLink, bool removeAssociatedSharingLinkGroup);
    [RemoteAttribute]
public static ClientResult`1<string> CreateOrganizationSharingLink(ClientRuntimeContext context, string url, bool isEditLink);
    [RemoteAttribute]
public static void DestroyOrganizationSharingLink(ClientRuntimeContext context, string url, bool isEditLink, bool removeAssociatedSharingLinkGroup);
    [RemoteAttribute]
public static ClientResult`1<SharingLinkKind> GetSharingLinkKind(ClientRuntimeContext context, string fileUrl);
    [RemoteAttribute]
public ClientResult`1<SharingLinkData> GetSharingLinkData(string linkUrl);
    [RemoteAttribute]
public ClientResult`1<string> MapToIcon(string fileName, string progId, IconSize size);
    [RemoteAttribute]
public static ClientResult`1<string> GetWebUrlFromPageUrl(ClientRuntimeContext context, string pageFullUrl);
    [RemoteAttribute]
public PushNotificationSubscriber RegisterPushNotificationSubscriber(Guid deviceAppInstanceId, string serviceToken);
    [RemoteAttribute]
public void UnregisterPushNotificationSubscriber(Guid deviceAppInstanceId);
    [RemoteAttribute]
public PushNotificationSubscriberCollection GetPushNotificationSubscribersByArgs(string customArgs);
    [RemoteAttribute]
public PushNotificationSubscriberCollection GetPushNotificationSubscribersByUser(string userName);
    [RemoteAttribute]
public ClientResult`1<bool> DoesPushNotificationSubscriberExist(Guid deviceAppInstanceId);
    [RemoteAttribute]
public PushNotificationSubscriber GetPushNotificationSubscriber(Guid deviceAppInstanceId);
    [RemoteAttribute]
public RecycleBinItemCollection GetRecycleBinItems(string pagingInfo, int rowLimit, bool isAscending, RecycleBinOrderBy orderBy, RecycleBinItemState itemState);
    [RemoteAttribute]
public RecycleBinItemCollection GetRecycleBinItemsByQueryInfo(RecycleBinQueryInformation queryInfo);
    [RemoteAttribute]
public ChangeCollection GetChanges(ChangeQuery query);
    [RemoteAttribute]
public List GetListUsingPath(ResourcePath path);
    [RemoteAttribute]
public ListItem GetListItem(string strUrl);
    [RemoteAttribute]
public ListItem GetListItemUsingPath(ResourcePath path);
    [RemoteAttribute]
public ListItem GetListItemByResourceId(string resourceId);
    [RemoteAttribute]
public Entity GetEntity(string namespace, string name);
    [RemoteAttribute]
public AppBdcCatalog GetAppBdcCatalogForAppInstance(Guid appInstanceId);
    [RemoteAttribute]
public AppBdcCatalog GetAppBdcCatalog();
    [RemoteAttribute]
public WebCollection GetSubwebsForCurrentUser(SubwebQuery query);
    [RemoteAttribute]
public ClientResult`1<Stream> GetSPAppContextAsStream();
    [RemoteAttribute]
public ListCollection GetLists(GetListsParameters getListsParams);
    [RemoteAttribute]
public WebTemplateCollection GetAvailableWebTemplates(UInt32 lcid, bool doIncludeCrossLanguage);
    [RemoteAttribute]
public List GetCatalog(int typeCatalog);
    [RemoteAttribute]
public File GetFileByLinkingUrl(string linkingUrl);
    [RemoteAttribute]
public File GetFileByGuestUrl(string guestUrl);
    [RemoteAttribute]
public File GetFileByGuestUrlEnsureAccess(string guestUrl, bool ensureAccess);
    [RemoteAttribute]
public File GetFileByWOPIFrameUrl(string wopiFrameUrl);
    [RemoteAttribute]
public File GetFileByStreamFrameUrl(string streamFrameUrl);
    [RemoteAttribute]
public File GetFileByUrl(string fileUrl);
    [RemoteAttribute]
public Folder GetFolderByServerRelativeUrl(string serverRelativeUrl);
    [RemoteAttribute]
public Folder GetFolderByServerRelativePath(ResourcePath serverRelativePath);
    [RemoteAttribute]
public List GetList(string strUrl);
    [RemoteAttribute]
public List GetListByTitle(string title);
    [RemoteAttribute]
public ClientResult`1<string> CreateSitePage(string pageMetaData);
    [RemoteAttribute]
public ClientResult`1<string> GetSitePageCopyToStatus(Guid workItemId);
    [RemoteAttribute]
public ClientResult`1<string> GetSitePageMoveStatus(Guid workItemId);
    [RemoteAttribute]
public void ApplyWebTemplate(string webTemplate);
    [RemoteAttribute]
public void DeleteObject();
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public View GetViewFromUrl(string listUrl);
    [RemoteAttribute]
public View GetViewFromPath(ResourcePath listPath);
    [RemoteAttribute]
public File GetFileByServerRelativeUrl(string serverRelativeUrl);
    [RemoteAttribute]
public File GetFileByServerRelativePath(ResourcePath serverRelativePath);
    [RemoteAttribute]
public static IList`1<DocumentLibraryInformation> GetDocumentLibraries(ClientRuntimeContext context, string webFullUrl);
    [RemoteAttribute]
public static IList`1<DocumentLibraryInformation> GetDocumentAndMediaLibraries(ClientRuntimeContext context, string webFullUrl, bool includePageLibraries);
    [RemoteAttribute]
public static ClientResult`1<DocumentLibraryInformation> DefaultDocumentLibraryUrl(ClientRuntimeContext context, string webUrl);
    [RemoteAttribute]
public List DefaultDocumentLibrary();
    [RemoteAttribute]
public File GetFileById(Guid uniqueId);
    [RemoteAttribute]
public Folder GetFolderById(Guid uniqueId);
    [RemoteAttribute]
public ClientResult`1<Stream> PageContextInfo(bool includeODBSettings, bool emitNavigationInfo);
    [RemoteAttribute]
public ClientResult`1<Stream> PageContextCore();
    [RemoteAttribute]
public AppInstance GetAppInstanceById(Guid appInstanceId);
    [RemoteAttribute]
public ClientObjectList`1<AppInstance> GetAppInstancesByProductId(Guid productId);
    [RemoteAttribute]
public AppInstance LoadAndInstallAppInSpecifiedLocale(Stream appPackageStream, int installationLocaleLCID);
    [RemoteAttribute]
public AppInstance LoadApp(Stream appPackageStream, int installationLocaleLCID);
    [RemoteAttribute]
public ClientResult`1<Guid> AddPlaceholderUser(string listId, string placeholderText);
    [RemoteAttribute]
public AppInstance LoadAndInstallApp(Stream appPackageStream);
    [RemoteAttribute]
public void SetAccessRequestSiteDescriptionAndUpdate(string description);
    [RemoteAttribute]
public void SetUseAccessRequestDefaultAndUpdate(bool useAccessRequestDefault);
    [RemoteAttribute]
public void IncrementSiteClientTag();
    [RemoteAttribute]
public void AddSupportedUILanguage(int lcid);
    [RemoteAttribute]
public void RemoveSupportedUILanguage(int lcid);
    [RemoteAttribute]
public User EnsureUser(string logonName);
    [RemoteAttribute]
public User EnsureUserByObjectId(Guid objectId, Guid tenantId, PrincipalType principalType);
    [RemoteAttribute]
public void ApplyTheme(string colorPaletteUrl, string fontSchemeUrl, string backgroundImageUrl, bool shareGenerated);
}
[ScriptTypeAttribute("SP.WebCollection")]
public class Microsoft.SharePoint.Client.WebCollection : ClientObjectCollection`1<Web> {
    [EditorBrowsableAttribute("1")]
public WebCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public Web Add(WebCreationInformation parameters);
}
[ScriptTypeAttribute("SP.WebCreationInformation")]
public class Microsoft.SharePoint.Client.WebCreationInformation : ClientValueObject {
    private string m_description;
    private int m_language;
    private string m_title;
    private string m_url;
    private bool m_useSamePermissionsAsParentSite;
    private string m_webTemplate;
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public int Language { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [RemoteAttribute]
public bool UseSamePermissionsAsParentSite { get; public set; }
    [RemoteAttribute]
public string WebTemplate { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Description();
    public void set_Description(string value);
    public int get_Language();
    public void set_Language(int value);
    public string get_Title();
    public void set_Title(string value);
    public string get_Url();
    public void set_Url(string value);
    public bool get_UseSamePermissionsAsParentSite();
    public void set_UseSamePermissionsAsParentSite(bool value);
    public string get_WebTemplate();
    public void set_WebTemplate(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.WebInformation")]
public class Microsoft.SharePoint.Client.WebInformation : ClientObject {
    [RemoteAttribute]
public short Configuration { get; }
    [RemoteAttribute]
public DateTime Created { get; }
    [RemoteAttribute]
public string Description { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public UInt32 Language { get; }
    [RemoteAttribute]
public DateTime LastItemModifiedDate { get; }
    [RemoteAttribute]
public DateTime LastItemUserModifiedDate { get; }
    [RemoteAttribute]
public string ServerRelativeUrl { get; }
    [RemoteAttribute]
public string Title { get; }
    [RemoteAttribute]
public string WebTemplate { get; }
    [RemoteAttribute]
public int WebTemplateId { get; }
    [EditorBrowsableAttribute("1")]
public WebInformation(ClientRuntimeContext context, ObjectPath objectPath);
    public short get_Configuration();
    public DateTime get_Created();
    public string get_Description();
    public Guid get_Id();
    public UInt32 get_Language();
    public DateTime get_LastItemModifiedDate();
    public DateTime get_LastItemUserModifiedDate();
    public string get_ServerRelativeUrl();
    public string get_Title();
    public string get_WebTemplate();
    public int get_WebTemplateId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.WebInformationPropertyNames : object {
    public static string Configuration;
    public static string Created;
    public static string Description;
    public static string Id;
    public static string Language;
    public static string LastItemModifiedDate;
    public static string LastItemUserModifiedDate;
    public static string ServerRelativeUrl;
    public static string Title;
    public static string WebTemplate;
    public static string WebTemplateId;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.WebObjectPropertyNames : object {
    public static string Alerts;
    public static string AllProperties;
    public static string AppTiles;
    public static string AssociatedMemberGroup;
    public static string AssociatedOwnerGroup;
    public static string AssociatedVisitorGroup;
    public static string Author;
    public static string AvailableContentTypes;
    public static string AvailableFields;
    public static string CanModernizeHomepage;
    public static string ContentTypes;
    public static string CurrentUser;
    public static string DataLeakagePreventionStatusInfo;
    public static string DescriptionResource;
    public static string EventReceivers;
    public static string Features;
    public static string Fields;
    public static string Folders;
    public static string HostedApps;
    public static string Lists;
    public static string ListTemplates;
    public static string Navigation;
    public static string ParentWeb;
    public static string PushNotificationSubscribers;
    public static string RecycleBin;
    public static string RegionalSettings;
    public static string RoleDefinitions;
    public static string RootFolder;
    public static string SiteCollectionAppCatalog;
    public static string SiteGroups;
    public static string SiteUserInfoList;
    public static string SiteUsers;
    public static string TenantAppCatalog;
    public static string ThemeInfo;
    public static string TitleResource;
    public static string UserCustomActions;
    public static string Webs;
    public static string WorkflowAssociations;
    public static string WorkflowTemplates;
}
[ScriptTypeAttribute("SP.WebParts.LimitedWebPartManager")]
public class Microsoft.SharePoint.Client.WebParts.LimitedWebPartManager : ClientObject {
    [RemoteAttribute]
public bool HasPersonalizedParts { get; }
    [RemoteAttribute]
public bool HasWebPartConnections { get; }
    [RemoteAttribute]
public PersonalizationScope Scope { get; }
    [RemoteAttribute]
public WebPartDefinitionCollection WebParts { get; }
    [EditorBrowsableAttribute("1")]
public LimitedWebPartManager(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_HasPersonalizedParts();
    public bool get_HasWebPartConnections();
    public PersonalizationScope get_Scope();
    public WebPartDefinitionCollection get_WebParts();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public WebPartDefinition AddWebPart(WebPart webPart, string zoneId, int zoneIndex);
    [RemoteAttribute]
public ClientResult`1<string> ExportWebPart(Guid webPartId);
    [RemoteAttribute]
public WebPartDefinition ImportWebPart(string webPartXml);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.WebParts.LimitedWebPartManagerObjectPropertyNames : object {
    public static string WebParts;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.WebParts.LimitedWebPartManagerPropertyNames : object {
    public static string HasPersonalizedParts;
    public static string HasWebPartConnections;
    public static string Scope;
}
public enum Microsoft.SharePoint.Client.WebParts.PersonalizationScope : Enum {
    public int value__;
    public static PersonalizationScope User;
    public static PersonalizationScope Shared;
}
[ScriptTypeAttribute("SP.WebParts.TileData")]
public class Microsoft.SharePoint.Client.WebParts.TileData : ClientValueObject {
    private IEnumerable`1<string> m_backgroundCollageImageLocations;
    private string m_backgroundImageLocation;
    private bool m_backgroundImageRendersAsIcon;
    private string m_bodyText;
    private string m_description;
    private bool m_hoverDisabled;
    private int m_iD;
    private bool m_isWide;
    private string m_linkLocation;
    private int m_tileOrder;
    private string m_title;
    private bool m_transparentOverlay;
    [RemoteAttribute]
public IEnumerable`1<string> BackgroundCollageImageLocations { get; public set; }
    [RemoteAttribute]
public string BackgroundImageLocation { get; public set; }
    [RemoteAttribute]
public bool BackgroundImageRendersAsIcon { get; public set; }
    [RemoteAttribute]
public string BodyText { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public bool HoverDisabled { get; public set; }
    [RemoteAttribute]
public int ID { get; public set; }
    [RemoteAttribute]
public bool IsWide { get; public set; }
    [RemoteAttribute]
public string LinkLocation { get; public set; }
    [RemoteAttribute]
public int TileOrder { get; public set; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public bool TransparentOverlay { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IEnumerable`1<string> get_BackgroundCollageImageLocations();
    public void set_BackgroundCollageImageLocations(IEnumerable`1<string> value);
    public string get_BackgroundImageLocation();
    public void set_BackgroundImageLocation(string value);
    public bool get_BackgroundImageRendersAsIcon();
    public void set_BackgroundImageRendersAsIcon(bool value);
    public string get_BodyText();
    public void set_BodyText(string value);
    public string get_Description();
    public void set_Description(string value);
    public bool get_HoverDisabled();
    public void set_HoverDisabled(bool value);
    public int get_ID();
    public void set_ID(int value);
    public bool get_IsWide();
    public void set_IsWide(bool value);
    public string get_LinkLocation();
    public void set_LinkLocation(string value);
    public int get_TileOrder();
    public void set_TileOrder(int value);
    public string get_Title();
    public void set_Title(string value);
    public bool get_TransparentOverlay();
    public void set_TransparentOverlay(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.WebParts.WebPart")]
public class Microsoft.SharePoint.Client.WebParts.WebPart : ClientObject {
    [RemoteAttribute]
public WebPartExportMode ExportMode { get; public set; }
    [RemoteAttribute]
public bool Hidden { get; public set; }
    [RemoteAttribute]
public bool IsClosed { get; }
    [RemoteAttribute]
public PropertyValues Properties { get; }
    [RemoteAttribute]
public string Subtitle { get; }
    [RemoteAttribute]
public string Title { get; public set; }
    [RemoteAttribute]
public string TitleUrl { get; public set; }
    [RemoteAttribute]
public int ZoneIndex { get; }
    [EditorBrowsableAttribute("1")]
public WebPart(ClientRuntimeContext context, ObjectPath objectPath);
    public WebPartExportMode get_ExportMode();
    public void set_ExportMode(WebPartExportMode value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public bool get_IsClosed();
    public PropertyValues get_Properties();
    public string get_Subtitle();
    public string get_Title();
    public void set_Title(string value);
    public string get_TitleUrl();
    public void set_TitleUrl(string value);
    public int get_ZoneIndex();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.WebParts.WebPartDefinition")]
public class Microsoft.SharePoint.Client.WebParts.WebPartDefinition : ClientObject {
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public WebPart WebPart { get; }
    [RemoteAttribute]
public string ZoneId { get; }
    [EditorBrowsableAttribute("1")]
public WebPartDefinition(ClientRuntimeContext context, ObjectPath objectPath);
    public Guid get_Id();
    public WebPart get_WebPart();
    public string get_ZoneId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void SaveWebPartChanges();
    [RemoteAttribute]
public void CloseWebPart();
    [RemoteAttribute]
public void OpenWebPart();
    [RemoteAttribute]
public void DeleteWebPart();
    [RemoteAttribute]
public void MoveWebPartTo(string zoneID, int zoneIndex);
}
[ScriptTypeAttribute("SP.WebParts.WebPartDefinitionCollection")]
public class Microsoft.SharePoint.Client.WebParts.WebPartDefinitionCollection : ClientObjectCollection`1<WebPartDefinition> {
    [EditorBrowsableAttribute("1")]
public WebPartDefinitionCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public WebPartDefinition GetById(Guid id);
    [RemoteAttribute]
public WebPartDefinition GetByControlId(string controlId);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.WebParts.WebPartDefinitionObjectPropertyNames : object {
    public static string WebPart;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.WebParts.WebPartDefinitionPropertyNames : object {
    public static string Id;
    public static string ZoneId;
}
public enum Microsoft.SharePoint.Client.WebParts.WebPartExportMode : Enum {
    public int value__;
    public static WebPartExportMode None;
    public static WebPartExportMode All;
    public static WebPartExportMode NonSensitiveData;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.WebParts.WebPartObjectPropertyNames : object {
    public static string Properties;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.WebParts.WebPartPropertyNames : object {
    public static string ExportMode;
    public static string Hidden;
    public static string IsClosed;
    public static string Subtitle;
    public static string Title;
    public static string TitleUrl;
    public static string ZoneIndex;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.WebPropertyNames : object {
    public static string AccessRequestListUrl;
    public static string AccessRequestSiteDescription;
    public static string Acronym;
    public static string AllowAutomaticASPXPageIndexing;
    public static string AllowCreateDeclarativeWorkflowForCurrentUser;
    public static string AllowDesignerForCurrentUser;
    public static string AllowMasterPageEditingForCurrentUser;
    public static string AllowRevertFromTemplateForCurrentUser;
    public static string AllowRssFeeds;
    public static string AllowSaveDeclarativeWorkflowAsTemplateForCurrentUser;
    public static string AllowSavePublishDeclarativeWorkflowForCurrentUser;
    public static string AlternateCssUrl;
    public static string AppInstanceId;
    public static string ClassicWelcomePage;
    public static string CommentsOnSitePagesDisabled;
    public static string Configuration;
    public static string ContainsConfidentialInfo;
    public static string Created;
    public static string CurrentChangeToken;
    public static string CustomMasterUrl;
    public static string CustomSiteActionsDisabled;
    public static string Description;
    public static string DescriptionForExistingLanguage;
    public static string DescriptionTranslations;
    public static string DesignerDownloadUrlForCurrentUser;
    public static string DesignPackageId;
    public static string DisableAppViews;
    public static string DisableFlows;
    public static string DisableRecommendedItems;
    public static string DocumentLibraryCalloutOfficeWebAppPreviewersDisabled;
    public static string EffectiveBasePermissions;
    public static string EnableMinimalDownload;
    public static string ExcludeFromOfflineClient;
    public static string FooterEmphasis;
    public static string FooterEnabled;
    public static string FooterLayout;
    public static string HasWebTemplateExtension;
    public static string HeaderEmphasis;
    public static string HeaderLayout;
    public static string HideTitleInHeader;
    public static string HorizontalQuickLaunch;
    public static string Id;
    public static string IsEduClass;
    public static string IsEduClassProvisionChecked;
    public static string IsEduClassProvisionPending;
    public static string IsHomepageModernized;
    public static string IsMultilingual;
    public static string IsProvisioningComplete;
    public static string IsRevertHomepageLinkHidden;
    public static string Language;
    public static string LastItemModifiedDate;
    public static string LastItemUserModifiedDate;
    public static string LogoAlignment;
    public static string MasterUrl;
    public static string MegaMenuEnabled;
    public static string MembersCanShare;
    public static string NavAudienceTargetingEnabled;
    public static string NextStepsFirstRunEnabled;
    public static string NoCrawl;
    public static string NotificationsInOneDriveForBusinessEnabled;
    public static string NotificationsInSharePointEnabled;
    public static string ObjectCacheEnabled;
    public static string OverwriteTranslationsOnChange;
    public static string ResourcePath;
    public static string PreviewFeaturesEnabled;
    public static string PrimaryColor;
    public static string QuickLaunchEnabled;
    public static string RecycleBinEnabled;
    public static string RelatedHubSiteIds;
    public static string RequestAccessEmail;
    public static string SaveSiteAsTemplateEnabled;
    public static string SearchBoxInNavBar;
    public static string SearchBoxPlaceholderText;
    public static string SearchScope;
    public static string ServerRelativePath;
    public static string ServerRelativeUrl;
    public static string ShowUrlStructureForCurrentUser;
    public static string SiteLogoDescription;
    public static string SiteLogoUrl;
    public static string SupportedUILanguageIds;
    public static string SyndicationEnabled;
    public static string TenantAdminMembersCanShare;
    public static string TenantTagPolicyEnabled;
    public static string ThemedCssFolderUrl;
    public static string ThirdPartyMdmEnabled;
    public static string Title;
    public static string TitleForExistingLanguage;
    public static string TitleTranslations;
    public static string TreeViewEnabled;
    public static string UIVersion;
    public static string UIVersionConfigurationEnabled;
    public static string Url;
    public static string UseAccessRequestDefault;
    public static string WebTemplate;
    public static string WebTemplateConfiguration;
    public static string WebTemplatesGalleryFirstRunEnabled;
    public static string WelcomePage;
}
[ScriptTypeAttribute("SP.WebProxy")]
public static class Microsoft.SharePoint.Client.WebProxy : object {
    [RemoteAttribute]
public static ClientResult`1<WebResponseInfo> Invoke(ClientRuntimeContext context, WebRequestInfo requestInfo);
}
[ScriptTypeAttribute("SP.WebRequestInfo")]
public class Microsoft.SharePoint.Client.WebRequestInfo : ClientValueObject {
    private string m_body;
    private IDictionary`2<string, string> m_headers;
    private string m_method;
    private string m_url;
    [RemoteAttribute]
public string Body { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, string> Headers { get; public set; }
    [RemoteAttribute]
public string Method { get; public set; }
    [RemoteAttribute]
public string Url { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Body();
    public void set_Body(string value);
    public IDictionary`2<string, string> get_Headers();
    public void set_Headers(IDictionary`2<string, string> value);
    public string get_Method();
    public void set_Method(string value);
    public string get_Url();
    public void set_Url(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.WebResponseInfo")]
public class Microsoft.SharePoint.Client.WebResponseInfo : ClientValueObject {
    private string m_body;
    private IDictionary`2<string, string> m_headers;
    private int m_statusCode;
    [RemoteAttribute]
public string Body { get; public set; }
    [RemoteAttribute]
public IDictionary`2<string, string> Headers { get; public set; }
    [RemoteAttribute]
public int StatusCode { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Body();
    public void set_Body(string value);
    public IDictionary`2<string, string> get_Headers();
    public void set_Headers(IDictionary`2<string, string> value);
    public int get_StatusCode();
    public void set_StatusCode(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.WebTemplate")]
public class Microsoft.SharePoint.Client.WebTemplate : ClientObject {
    [RemoteAttribute]
public string Description { get; }
    [RemoteAttribute]
public string DisplayCategory { get; }
    [RemoteAttribute]
public int Id { get; }
    [RemoteAttribute]
public string ImageUrl { get; }
    [RemoteAttribute]
public bool IsHidden { get; }
    [RemoteAttribute]
public bool IsRootWebOnly { get; }
    [RemoteAttribute]
public bool IsSubWebOnly { get; }
    [RemoteAttribute]
public UInt32 Lcid { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public string Title { get; }
    [EditorBrowsableAttribute("1")]
public WebTemplate(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Description();
    public string get_DisplayCategory();
    public int get_Id();
    public string get_ImageUrl();
    public bool get_IsHidden();
    public bool get_IsRootWebOnly();
    public bool get_IsSubWebOnly();
    public UInt32 get_Lcid();
    public string get_Name();
    public string get_Title();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.WebTemplateCollection")]
public class Microsoft.SharePoint.Client.WebTemplateCollection : ClientObjectCollection`1<WebTemplate> {
    [EditorBrowsableAttribute("1")]
public WebTemplateCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public WebTemplate GetByName(string name);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.WebTemplatePropertyNames : object {
    public static string Description;
    public static string DisplayCategory;
    public static string Id;
    public static string ImageUrl;
    public static string IsHidden;
    public static string IsRootWebOnly;
    public static string IsSubWebOnly;
    public static string Lcid;
    public static string Name;
    public static string Title;
}
[ScriptTypeAttribute("SP.Workflow.WorkflowAssociation")]
public class Microsoft.SharePoint.Client.Workflow.WorkflowAssociation : ClientObject {
    [RemoteAttribute]
public bool AllowManual { get; public set; }
    [RemoteAttribute]
public string AssociationData { get; public set; }
    [RemoteAttribute]
public bool AutoStartChange { get; public set; }
    [RemoteAttribute]
public bool AutoStartCreate { get; public set; }
    [RemoteAttribute]
public Guid BaseId { get; }
    [RemoteAttribute]
public DateTime Created { get; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public bool Enabled { get; public set; }
    [RemoteAttribute]
public string HistoryListTitle { get; public set; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public string InstantiationUrl { get; }
    [RemoteAttribute]
public string InternalName { get; }
    [RemoteAttribute]
public bool IsDeclarative { get; }
    [RemoteAttribute]
public Guid ListId { get; }
    [RemoteAttribute]
public DateTime Modified { get; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public int RunningInstances { get; }
    [RemoteAttribute]
public string TaskListTitle { get; public set; }
    [RemoteAttribute]
public Guid WebId { get; }
    [EditorBrowsableAttribute("1")]
public WorkflowAssociation(ClientRuntimeContext context, ObjectPath objectPath);
    internal void InitFromCreationInformation(WorkflowAssociationCreationInformation creation);
    public bool get_AllowManual();
    public void set_AllowManual(bool value);
    public string get_AssociationData();
    public void set_AssociationData(string value);
    public bool get_AutoStartChange();
    public void set_AutoStartChange(bool value);
    public bool get_AutoStartCreate();
    public void set_AutoStartCreate(bool value);
    public Guid get_BaseId();
    public DateTime get_Created();
    public string get_Description();
    public void set_Description(string value);
    public bool get_Enabled();
    public void set_Enabled(bool value);
    public string get_HistoryListTitle();
    public void set_HistoryListTitle(string value);
    public Guid get_Id();
    public string get_InstantiationUrl();
    public string get_InternalName();
    public bool get_IsDeclarative();
    public Guid get_ListId();
    public DateTime get_Modified();
    public string get_Name();
    public void set_Name(string value);
    public int get_RunningInstances();
    public string get_TaskListTitle();
    public void set_TaskListTitle(string value);
    public Guid get_WebId();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
    [RemoteAttribute]
public void Update();
    [RemoteAttribute]
public void DeleteObject();
}
[ScriptTypeAttribute("SP.Workflow.WorkflowAssociationCollection")]
public class Microsoft.SharePoint.Client.Workflow.WorkflowAssociationCollection : ClientObjectCollection`1<WorkflowAssociation> {
    [EditorBrowsableAttribute("1")]
public WorkflowAssociationCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public virtual WorkflowAssociation GetById(Guid associationId);
    [RemoteAttribute]
public WorkflowAssociation Add(WorkflowAssociationCreationInformation parameters);
    [RemoteAttribute]
public WorkflowAssociation GetByName(string name);
}
[ScriptTypeAttribute("SP.Workflow.WorkflowAssociationCreationInformation")]
public class Microsoft.SharePoint.Client.Workflow.WorkflowAssociationCreationInformation : ClientValueObject {
    private string m_contentTypeAssociationHistoryListName;
    private string m_contentTypeAssociationTaskListName;
    private List m_historyList;
    private string m_name;
    private List m_taskList;
    private WorkflowTemplate m_template;
    [RemoteAttribute]
public string ContentTypeAssociationHistoryListName { get; public set; }
    [RemoteAttribute]
public string ContentTypeAssociationTaskListName { get; public set; }
    [RemoteAttribute]
public List HistoryList { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public List TaskList { get; public set; }
    [RemoteAttribute]
public WorkflowTemplate Template { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ContentTypeAssociationHistoryListName();
    public void set_ContentTypeAssociationHistoryListName(string value);
    public string get_ContentTypeAssociationTaskListName();
    public void set_ContentTypeAssociationTaskListName(string value);
    public List get_HistoryList();
    public void set_HistoryList(List value);
    public string get_Name();
    public void set_Name(string value);
    public List get_TaskList();
    public void set_TaskList(List value);
    public WorkflowTemplate get_Template();
    public void set_Template(WorkflowTemplate value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Workflow.WorkflowAssociationPropertyNames : object {
    public static string AllowManual;
    public static string AssociationData;
    public static string AutoStartChange;
    public static string AutoStartCreate;
    public static string BaseId;
    public static string Created;
    public static string Description;
    public static string Enabled;
    public static string HistoryListTitle;
    public static string Id;
    public static string InstantiationUrl;
    public static string InternalName;
    public static string IsDeclarative;
    public static string ListId;
    public static string Modified;
    public static string Name;
    public static string RunningInstances;
    public static string TaskListTitle;
    public static string WebId;
}
[ScriptTypeAttribute("SP.Workflow.WorkflowTemplate")]
public class Microsoft.SharePoint.Client.Workflow.WorkflowTemplate : ClientObject {
    [RemoteAttribute]
public bool AllowManual { get; }
    [RemoteAttribute]
public string AssociationUrl { get; }
    [RemoteAttribute]
public bool AutoStartChange { get; }
    [RemoteAttribute]
public bool AutoStartCreate { get; }
    [RemoteAttribute]
public string Description { get; }
    [RemoteAttribute]
public Guid Id { get; }
    [RemoteAttribute]
public bool IsDeclarative { get; }
    [RemoteAttribute]
public string Name { get; }
    [RemoteAttribute]
public BasePermissions PermissionsManual { get; }
    [EditorBrowsableAttribute("1")]
public WorkflowTemplate(ClientRuntimeContext context, ObjectPath objectPath);
    public bool get_AllowManual();
    public string get_AssociationUrl();
    public bool get_AutoStartChange();
    public bool get_AutoStartCreate();
    public string get_Description();
    public Guid get_Id();
    public bool get_IsDeclarative();
    public string get_Name();
    public BasePermissions get_PermissionsManual();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.Workflow.WorkflowTemplateCollection")]
public class Microsoft.SharePoint.Client.Workflow.WorkflowTemplateCollection : ClientObjectCollection`1<WorkflowTemplate> {
    [EditorBrowsableAttribute("1")]
public WorkflowTemplateCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public WorkflowTemplate GetById(Guid templateId);
    [RemoteAttribute]
public WorkflowTemplate GetByName(string name);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Client.Workflow.WorkflowTemplatePropertyNames : object {
    public static string AllowManual;
    public static string AssociationUrl;
    public static string AutoStartChange;
    public static string AutoStartCreate;
    public static string Description;
    public static string Id;
    public static string IsDeclarative;
    public static string Name;
    public static string PermissionsManual;
}
[ScriptTypeAttribute("SP.WorkflowConfigurationCreateRequest")]
public class Microsoft.SharePoint.Client.WorkflowConfigurationCreateRequest : ClientValueObject {
    private String[] m_approvers;
    private string m_categoryID;
    private string m_country;
    private bool m_eSignNeeded;
    private string m_language;
    private String[] m_reviewers;
    private string m_source;
    private string m_type;
    [RemoteAttribute]
public String[] Approvers { get; public set; }
    [RemoteAttribute]
public string CategoryID { get; public set; }
    [RemoteAttribute]
public string Country { get; public set; }
    [RemoteAttribute]
public bool ESignNeeded { get; public set; }
    [RemoteAttribute]
public string Language { get; public set; }
    [RemoteAttribute]
public String[] Reviewers { get; public set; }
    [RemoteAttribute]
public string Source { get; public set; }
    [RemoteAttribute]
public string Type { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public String[] get_Approvers();
    public void set_Approvers(String[] value);
    public string get_CategoryID();
    public void set_CategoryID(string value);
    public string get_Country();
    public void set_Country(string value);
    public bool get_ESignNeeded();
    public void set_ESignNeeded(bool value);
    public string get_Language();
    public void set_Language(string value);
    public String[] get_Reviewers();
    public void set_Reviewers(String[] value);
    public string get_Source();
    public void set_Source(string value);
    public string get_Type();
    public void set_Type(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.WorkflowConfigurationEditRequest")]
public class Microsoft.SharePoint.Client.WorkflowConfigurationEditRequest : ClientValueObject {
    private String[] m_approvers;
    private int m_configurationID;
    private bool m_eSignNeeded;
    private String[] m_reviewers;
    [RemoteAttribute]
public String[] Approvers { get; public set; }
    [RemoteAttribute]
public int ConfigurationID { get; public set; }
    [RemoteAttribute]
public bool ESignNeeded { get; public set; }
    [RemoteAttribute]
public String[] Reviewers { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public String[] get_Approvers();
    public void set_Approvers(String[] value);
    public int get_ConfigurationID();
    public void set_ConfigurationID(int value);
    public bool get_ESignNeeded();
    public void set_ESignNeeded(bool value);
    public String[] get_Reviewers();
    public void set_Reviewers(String[] value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.WorkflowConfigurationResponse")]
public class Microsoft.SharePoint.Client.WorkflowConfigurationResponse : ClientValueObject {
    private IEnumerable`1<ConfiguredUserInfo> m_approvers;
    private string m_categoryID;
    private string m_categoryName;
    private int m_configurationID;
    private string m_country;
    private bool m_eSignNeeded;
    private string m_language;
    private IEnumerable`1<ConfiguredUserInfo> m_reviewers;
    private string m_source;
    private string m_type;
    [RemoteAttribute]
public IEnumerable`1<ConfiguredUserInfo> Approvers { get; public set; }
    [RemoteAttribute]
public string CategoryID { get; public set; }
    [RemoteAttribute]
public string CategoryName { get; public set; }
    [RemoteAttribute]
public int ConfigurationID { get; public set; }
    [RemoteAttribute]
public string Country { get; public set; }
    [RemoteAttribute]
public bool ESignNeeded { get; public set; }
    [RemoteAttribute]
public string Language { get; public set; }
    [RemoteAttribute]
public IEnumerable`1<ConfiguredUserInfo> Reviewers { get; public set; }
    [RemoteAttribute]
public string Source { get; public set; }
    [RemoteAttribute]
public string Type { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IEnumerable`1<ConfiguredUserInfo> get_Approvers();
    public void set_Approvers(IEnumerable`1<ConfiguredUserInfo> value);
    public string get_CategoryID();
    public void set_CategoryID(string value);
    public string get_CategoryName();
    public void set_CategoryName(string value);
    public int get_ConfigurationID();
    public void set_ConfigurationID(int value);
    public string get_Country();
    public void set_Country(string value);
    public bool get_ESignNeeded();
    public void set_ESignNeeded(bool value);
    public string get_Language();
    public void set_Language(string value);
    public IEnumerable`1<ConfiguredUserInfo> get_Reviewers();
    public void set_Reviewers(IEnumerable`1<ConfiguredUserInfo> value);
    public string get_Source();
    public void set_Source(string value);
    public string get_Type();
    public void set_Type(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("SP.WorkflowConfigurationSearchFilters")]
public class Microsoft.SharePoint.Client.WorkflowConfigurationSearchFilters : ClientValueObject {
    private string m_categoryID;
    private string m_country;
    private string m_language;
    private string m_source;
    private string m_type;
    [RemoteAttribute]
public string CategoryID { get; public set; }
    [RemoteAttribute]
public string Country { get; public set; }
    [RemoteAttribute]
public string Language { get; public set; }
    [RemoteAttribute]
public string Source { get; public set; }
    [RemoteAttribute]
public string Type { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_CategoryID();
    public void set_CategoryID(string value);
    public string get_Country();
    public void set_Country(string value);
    public string get_Language();
    public void set_Language(string value);
    public string get_Source();
    public void set_Source(string value);
    public string get_Type();
    public void set_Type(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.ClientSideComponent.DependencyPropertyType : Enum {
    public int value__;
    public static DependencyPropertyType Unknown;
    public static DependencyPropertyType Image;
    public static DependencyPropertyType Document;
    public static DependencyPropertyType List;
    public static DependencyPropertyType Feature;
    public static DependencyPropertyType Link;
    public static DependencyPropertyType SpfxSolution;
    public static DependencyPropertyType Web;
    public static DependencyPropertyType M365Group;
    public static DependencyPropertyType Page;
    public static DependencyPropertyType Folder;
}
[ScriptTypeAttribute("Microsoft.SharePoint.ClientSideComponent.HostedApp")]
public class Microsoft.SharePoint.ClientSideComponent.HostedApp : ClientObject {
    [EditorBrowsableAttribute("1")]
public HostedApp(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("Microsoft.SharePoint.ClientSideComponent.HostedAppAddResponse")]
public class Microsoft.SharePoint.ClientSideComponent.HostedAppAddResponse : ClientObject {
    [RemoteAttribute]
public int itemId { get; }
    [RemoteAttribute]
public string shareLinkUrl { get; }
    [RemoteAttribute]
public string shareWebPath { get; }
    [EditorBrowsableAttribute("1")]
public HostedAppAddResponse(ClientRuntimeContext context, ObjectPath objectPath);
    public int get_itemId();
    public string get_shareLinkUrl();
    public string get_shareWebPath();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.ClientSideComponent.HostedAppAddResponsePropertyNames : object {
    public static string itemId;
    public static string shareLinkUrl;
    public static string shareWebPath;
}
[ScriptTypeAttribute("Microsoft.SharePoint.ClientSideComponent.HostedAppsManager")]
public class Microsoft.SharePoint.ClientSideComponent.HostedAppsManager : ClientObject {
    [EditorBrowsableAttribute("1")]
public HostedAppsManager(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("Microsoft.SharePoint.ClientSideComponent.Spfx3rdPartyCustomPrincipalInfo")]
public class Microsoft.SharePoint.ClientSideComponent.Spfx3rdPartyCustomPrincipalInfo : ClientObject {
    [RemoteAttribute]
public string AppId { get; }
    [RemoteAttribute]
public string AppUri { get; }
    [RemoteAttribute]
public string ClientSecret { get; }
    [EditorBrowsableAttribute("1")]
public Spfx3rdPartyCustomPrincipalInfo(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_AppId();
    public string get_AppUri();
    public string get_ClientSecret();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.ClientSideComponent.Spfx3rdPartyCustomPrincipalInfoPropertyNames : object {
    public static string AppId;
    public static string AppUri;
    public static string ClientSecret;
}
[ScriptTypeAttribute("Microsoft.SharePoint.ClientSideComponent.StorageEntity")]
public class Microsoft.SharePoint.ClientSideComponent.StorageEntity : ClientObject {
    [RemoteAttribute]
public string Comment { get; }
    [RemoteAttribute]
public string Description { get; }
    [RemoteAttribute]
public string Value { get; }
    [EditorBrowsableAttribute("1")]
public StorageEntity(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_Comment();
    public string get_Description();
    public string get_Value();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.ClientSideComponent.StorageEntityPropertyNames : object {
    public static string Comment;
    public static string Description;
    public static string Value;
}
public enum Microsoft.SharePoint.Comments.CommentsDisabledScope : Enum {
    public int value__;
    public static CommentsDisabledScope None;
    public static CommentsDisabledScope Item;
    public static CommentsDisabledScope Web;
    public static CommentsDisabledScope Tenant;
    public static CommentsDisabledScope Site;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Containers.SPActiveContainerCollection")]
public class Microsoft.SharePoint.Containers.SPActiveContainerCollection : ClientValueObject {
    private IList`1<SPActiveContainerProperties> m_containerCollection;
    private string m_pagingToken;
    [RemoteAttribute]
public IList`1<SPActiveContainerProperties> ContainerCollection { get; public set; }
    [RemoteAttribute]
public string PagingToken { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<SPActiveContainerProperties> get_ContainerCollection();
    public void set_ContainerCollection(IList`1<SPActiveContainerProperties> value);
    public string get_PagingToken();
    public void set_PagingToken(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Containers.SPActiveContainerMemberProperties")]
public class Microsoft.SharePoint.Containers.SPActiveContainerMemberProperties : ClientValueObject {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Containers.SPActiveContainerProperties")]
public class Microsoft.SharePoint.Containers.SPActiveContainerProperties : ClientValueObject {
    private string m_applicationName;
    private string m_containerApiUrl;
    private string m_containerId;
    private string m_containerName;
    private string m_containerSiteUrl;
    private Guid m_containerTypeId;
    private string m_createdBy;
    private string m_createdOn;
    private string m_deletedOn;
    private string m_description;
    private IList`1<SPActiveContainerMemberProperties> m_owners;
    private int m_ownersCount;
    private Guid m_owningApplicationId;
    private string m_publisherName;
    private IList`1<SPActiveContainerMemberProperties> m_readers;
    private string m_sensitivityLabel;
    private string m_status;
    private long m_storageUsed;
    private IList`1<SPActiveContainerMemberProperties> m_writers;
    [RemoteAttribute]
public string ApplicationName { get; public set; }
    [RemoteAttribute]
public string ContainerApiUrl { get; public set; }
    [RemoteAttribute]
public string ContainerId { get; public set; }
    [RemoteAttribute]
public string ContainerName { get; public set; }
    [RemoteAttribute]
public string ContainerSiteUrl { get; public set; }
    [RemoteAttribute]
public Guid ContainerTypeId { get; public set; }
    [RemoteAttribute]
public string CreatedBy { get; public set; }
    [RemoteAttribute]
public string CreatedOn { get; public set; }
    [RemoteAttribute]
public string DeletedOn { get; public set; }
    [RemoteAttribute]
public string Description { get; public set; }
    [RemoteAttribute]
public IList`1<SPActiveContainerMemberProperties> Owners { get; public set; }
    [RemoteAttribute]
public int OwnersCount { get; public set; }
    [RemoteAttribute]
public Guid OwningApplicationId { get; public set; }
    [RemoteAttribute]
public string PublisherName { get; public set; }
    [RemoteAttribute]
public IList`1<SPActiveContainerMemberProperties> Readers { get; public set; }
    [RemoteAttribute]
public string SensitivityLabel { get; public set; }
    [RemoteAttribute]
public string Status { get; public set; }
    [RemoteAttribute]
public long StorageUsed { get; public set; }
    [RemoteAttribute]
public IList`1<SPActiveContainerMemberProperties> Writers { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ApplicationName();
    public void set_ApplicationName(string value);
    public string get_ContainerApiUrl();
    public void set_ContainerApiUrl(string value);
    public string get_ContainerId();
    public void set_ContainerId(string value);
    public string get_ContainerName();
    public void set_ContainerName(string value);
    public string get_ContainerSiteUrl();
    public void set_ContainerSiteUrl(string value);
    public Guid get_ContainerTypeId();
    public void set_ContainerTypeId(Guid value);
    public string get_CreatedBy();
    public void set_CreatedBy(string value);
    public string get_CreatedOn();
    public void set_CreatedOn(string value);
    public string get_DeletedOn();
    public void set_DeletedOn(string value);
    public string get_Description();
    public void set_Description(string value);
    public IList`1<SPActiveContainerMemberProperties> get_Owners();
    public void set_Owners(IList`1<SPActiveContainerMemberProperties> value);
    public int get_OwnersCount();
    public void set_OwnersCount(int value);
    public Guid get_OwningApplicationId();
    public void set_OwningApplicationId(Guid value);
    public string get_PublisherName();
    public void set_PublisherName(string value);
    public IList`1<SPActiveContainerMemberProperties> get_Readers();
    public void set_Readers(IList`1<SPActiveContainerMemberProperties> value);
    public string get_SensitivityLabel();
    public void set_SensitivityLabel(string value);
    public string get_Status();
    public void set_Status(string value);
    public long get_StorageUsed();
    public void set_StorageUsed(long value);
    public IList`1<SPActiveContainerMemberProperties> get_Writers();
    public void set_Writers(IList`1<SPActiveContainerMemberProperties> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Deployment.ShortcutInformation")]
public class Microsoft.SharePoint.Deployment.ShortcutInformation : ClientValueObject {
    private int m_addedById;
    private Guid m_id;
    private string m_name;
    private AtoScenario m_scenario;
    private DateTime m_timeCreated;
    private DateTime m_timeLastModified;
    [RemoteAttribute]
public int AddedById { get; public set; }
    [RemoteAttribute]
public Guid Id { get; public set; }
    [RemoteAttribute]
public string Name { get; public set; }
    [RemoteAttribute]
public AtoScenario Scenario { get; public set; }
    [RemoteAttribute]
public DateTime TimeCreated { get; public set; }
    [RemoteAttribute]
public DateTime TimeLastModified { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_AddedById();
    public void set_AddedById(int value);
    public Guid get_Id();
    public void set_Id(Guid value);
    public string get_Name();
    public void set_Name(string value);
    public AtoScenario get_Scenario();
    public void set_Scenario(AtoScenario value);
    public DateTime get_TimeCreated();
    public void set_TimeCreated(DateTime value);
    public DateTime get_TimeLastModified();
    public void set_TimeLastModified(DateTime value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.EmployeeEngagement.NewsSourceType : Enum {
    public int value__;
    public static NewsSourceType CurrentSiteNews;
    public static NewsSourceType CurrentSiteHubNews;
    public static NewsSourceType BoostedAndOrganizationNews;
}
public enum Microsoft.SharePoint.EmployeeEngagement.OOBContentChoice : Enum {
    public int value__;
    public static OOBContentChoice FLW;
    public static OOBContentChoice IW;
}
public enum Microsoft.SharePoint.EmployeeEngagement.VivaExperienceType : Enum {
    public int value__;
    public static VivaExperienceType FallBackToRootSite;
    public static VivaExperienceType BackendSite;
    public static VivaExperienceType HomeSite;
}
[ScriptTypeAttribute("Microsoft.SharePoint.ESign.Models.Requests.AddAuditTrailEntryModel")]
public class Microsoft.SharePoint.ESign.Models.Requests.AddAuditTrailEntryModel : ClientValueObject {
    private string m_action;
    private DateTime m_actionDateTime;
    private Guid m_documentId;
    private bool m_isEntryVisible;
    private string m_location;
    private string m_name;
    [RemoteAttribute]
public string action { get; public set; }
    [RemoteAttribute]
public DateTime actionDateTime { get; public set; }
    [RemoteAttribute]
public Guid documentId { get; public set; }
    [RemoteAttribute]
public bool isEntryVisible { get; public set; }
    [RemoteAttribute]
public string location { get; public set; }
    [RemoteAttribute]
public string name { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_action();
    public void set_action(string value);
    public DateTime get_actionDateTime();
    public void set_actionDateTime(DateTime value);
    public Guid get_documentId();
    public void set_documentId(Guid value);
    public bool get_isEntryVisible();
    public void set_isEntryVisible(bool value);
    public string get_location();
    public void set_location(string value);
    public string get_name();
    public void set_name(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.ESign.Models.Requests.CancelAgreementModel")]
public class Microsoft.SharePoint.ESign.Models.Requests.CancelAgreementModel : ClientValueObject {
    private Guid m_documentId;
    private string m_reason;
    [RemoteAttribute]
public Guid documentId { get; public set; }
    [RemoteAttribute]
public string reason { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_documentId();
    public void set_documentId(Guid value);
    public string get_reason();
    public void set_reason(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.ESign.Models.Requests.CompleteAgreementModel")]
public class Microsoft.SharePoint.ESign.Models.Requests.CompleteAgreementModel : ClientValueObject {
    private Guid m_documentId;
    private string m_originalDocName;
    private string m_targetFolderUri;
    [RemoteAttribute]
public Guid documentId { get; public set; }
    [RemoteAttribute]
public string originalDocName { get; public set; }
    [RemoteAttribute]
public string targetFolderUri { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_documentId();
    public void set_documentId(Guid value);
    public string get_originalDocName();
    public void set_originalDocName(string value);
    public string get_targetFolderUri();
    public void set_targetFolderUri(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.ESign.Models.Requests.CompleteAgreementModelV4")]
public class Microsoft.SharePoint.ESign.Models.Requests.CompleteAgreementModelV4 : ClientValueObject {
    private Guid m_documentId;
    [RemoteAttribute]
public Guid documentId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_documentId();
    public void set_documentId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.ESign.Models.Requests.CreateAgreementModel")]
public class Microsoft.SharePoint.ESign.Models.Requests.CreateAgreementModel : ClientValueObject {
    private Guid m_agreementId;
    private string m_agreementSource;
    private string m_documents;
    private DateTime m_expirationDateTime;
    private string m_formFieldSets;
    private string m_locale;
    private string m_message;
    private string m_name;
    private string m_recipientSets;
    private string m_signingMode;
    [RemoteAttribute]
public Guid agreementId { get; public set; }
    [RemoteAttribute]
public string agreementSource { get; public set; }
    [RemoteAttribute]
public string documents { get; public set; }
    [RemoteAttribute]
public DateTime expirationDateTime { get; public set; }
    [RemoteAttribute]
public string formFieldSets { get; public set; }
    [RemoteAttribute]
public string locale { get; public set; }
    [RemoteAttribute]
public string message { get; public set; }
    [RemoteAttribute]
public string name { get; public set; }
    [RemoteAttribute]
public string recipientSets { get; public set; }
    [RemoteAttribute]
public string signingMode { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_agreementId();
    public void set_agreementId(Guid value);
    public string get_agreementSource();
    public void set_agreementSource(string value);
    public string get_documents();
    public void set_documents(string value);
    public DateTime get_expirationDateTime();
    public void set_expirationDateTime(DateTime value);
    public string get_formFieldSets();
    public void set_formFieldSets(string value);
    public string get_locale();
    public void set_locale(string value);
    public string get_message();
    public void set_message(string value);
    public string get_name();
    public void set_name(string value);
    public string get_recipientSets();
    public void set_recipientSets(string value);
    public string get_signingMode();
    public void set_signingMode(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.ESign.Models.Requests.CreateAgreementModelV2")]
public class Microsoft.SharePoint.ESign.Models.Requests.CreateAgreementModelV2 : ClientValueObject {
    private Guid m_agreementId;
    private string m_agreementSource;
    private string m_documents;
    private DateTime m_expirationDateTime;
    private string m_formFieldSets;
    private string m_locale;
    private string m_message;
    private string m_name;
    private string m_recipientSets;
    private string m_signingMode;
    private string m_targetFolderUri;
    [RemoteAttribute]
public Guid agreementId { get; public set; }
    [RemoteAttribute]
public string agreementSource { get; public set; }
    [RemoteAttribute]
public string documents { get; public set; }
    [RemoteAttribute]
public DateTime expirationDateTime { get; public set; }
    [RemoteAttribute]
public string formFieldSets { get; public set; }
    [RemoteAttribute]
public string locale { get; public set; }
    [RemoteAttribute]
public string message { get; public set; }
    [RemoteAttribute]
public string name { get; public set; }
    [RemoteAttribute]
public string recipientSets { get; public set; }
    [RemoteAttribute]
public string signingMode { get; public set; }
    [RemoteAttribute]
public string targetFolderUri { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_agreementId();
    public void set_agreementId(Guid value);
    public string get_agreementSource();
    public void set_agreementSource(string value);
    public string get_documents();
    public void set_documents(string value);
    public DateTime get_expirationDateTime();
    public void set_expirationDateTime(DateTime value);
    public string get_formFieldSets();
    public void set_formFieldSets(string value);
    public string get_locale();
    public void set_locale(string value);
    public string get_message();
    public void set_message(string value);
    public string get_name();
    public void set_name(string value);
    public string get_recipientSets();
    public void set_recipientSets(string value);
    public string get_signingMode();
    public void set_signingMode(string value);
    public string get_targetFolderUri();
    public void set_targetFolderUri(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.ESign.Models.Requests.DeclineAgreementModel")]
public class Microsoft.SharePoint.ESign.Models.Requests.DeclineAgreementModel : ClientValueObject {
    private Guid m_documentId;
    private string m_reason;
    [RemoteAttribute]
public Guid documentId { get; public set; }
    [RemoteAttribute]
public string reason { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_documentId();
    public void set_documentId(Guid value);
    public string get_reason();
    public void set_reason(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.ESign.Models.Requests.SignAgreementModel")]
public class Microsoft.SharePoint.ESign.Models.Requests.SignAgreementModel : ClientValueObject {
    private string m_agreements;
    private Guid m_documentId;
    private string m_signatureFields;
    [RemoteAttribute]
public string agreements { get; public set; }
    [RemoteAttribute]
public Guid documentId { get; public set; }
    [RemoteAttribute]
public string signatureFields { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_agreements();
    public void set_agreements(string value);
    public Guid get_documentId();
    public void set_documentId(Guid value);
    public string get_signatureFields();
    public void set_signatureFields(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.ESign.Models.Requests.UpdateAuditTrailEntryModel")]
public class Microsoft.SharePoint.ESign.Models.Requests.UpdateAuditTrailEntryModel : ClientValueObject {
    private Guid m_auditTrailEntryId;
    private Guid m_documentId;
    private bool m_shouldRemoveEntry;
    [RemoteAttribute]
public Guid auditTrailEntryId { get; public set; }
    [RemoteAttribute]
public Guid documentId { get; public set; }
    [RemoteAttribute]
public bool shouldRemoveEntry { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_auditTrailEntryId();
    public void set_auditTrailEntryId(Guid value);
    public Guid get_documentId();
    public void set_documentId(Guid value);
    public bool get_shouldRemoveEntry();
    public void set_shouldRemoveEntry(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Groups.GroupSiteRelationship : Enum {
    public int value__;
    public static GroupSiteRelationship Healthy;
    public static GroupSiteRelationship DuplicateSite;
    public static GroupSiteRelationship GroupNotFound;
    public static GroupSiteRelationship Disconnected;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.BaseGptRequestOptions")]
public class Microsoft.SharePoint.Internal.BaseGptRequestOptions : ClientValueObject {
    private double m_frequencyPenalty;
    private int m_maxTokens;
    private double m_presencePenalty;
    private double m_temperature;
    [RemoteAttribute]
public double FrequencyPenalty { get; public set; }
    [RemoteAttribute]
public int MaxTokens { get; public set; }
    [RemoteAttribute]
public double PresencePenalty { get; public set; }
    [RemoteAttribute]
public double Temperature { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public double get_FrequencyPenalty();
    public void set_FrequencyPenalty(double value);
    public int get_MaxTokens();
    public void set_MaxTokens(int value);
    public double get_PresencePenalty();
    public void set_PresencePenalty(double value);
    public double get_Temperature();
    public void set_Temperature(double value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.BaseGptResponse")]
public class Microsoft.SharePoint.Internal.BaseGptResponse : ClientValueObject {
    private int m_created;
    private string m_id;
    private string m_model;
    private string m_objectType;
    [RemoteAttribute]
public int Created { get; public set; }
    [RemoteAttribute]
public string Id { get; public set; }
    [RemoteAttribute]
public string Model { get; public set; }
    [RemoteAttribute]
public string ObjectType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_Created();
    public void set_Created(int value);
    public string get_Id();
    public void set_Id(string value);
    public string get_Model();
    public void set_Model(string value);
    public string get_ObjectType();
    public void set_ObjectType(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.ChatGptRequestOptions")]
public class Microsoft.SharePoint.Internal.ChatGptRequestOptions : BaseGptRequestOptions {
    private IList`1<MessageEntry> m_messages;
    private string m_stop;
    private double m_topP;
    [RemoteAttribute]
public IList`1<MessageEntry> Messages { get; public set; }
    [RemoteAttribute]
public string Stop { get; public set; }
    [RemoteAttribute]
public double TopP { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<MessageEntry> get_Messages();
    public void set_Messages(IList`1<MessageEntry> value);
    public string get_Stop();
    public void set_Stop(string value);
    public double get_TopP();
    public void set_TopP(double value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.ChatGptResponse")]
public class Microsoft.SharePoint.Internal.ChatGptResponse : BaseGptResponse {
    private IList`1<ChatGptResponseChoice> m_choices;
    private GptResponseUsage m_usage;
    [RemoteAttribute]
public IList`1<ChatGptResponseChoice> Choices { get; public set; }
    [RemoteAttribute]
public GptResponseUsage Usage { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<ChatGptResponseChoice> get_Choices();
    public void set_Choices(IList`1<ChatGptResponseChoice> value);
    public GptResponseUsage get_Usage();
    public void set_Usage(GptResponseUsage value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.ChatGptResponseChoice")]
public class Microsoft.SharePoint.Internal.ChatGptResponseChoice : ClientValueObject {
    private string m_finishReason;
    private int m_index;
    private MessageEntry m_message;
    [RemoteAttribute]
public string FinishReason { get; public set; }
    [RemoteAttribute]
public int Index { get; public set; }
    [RemoteAttribute]
public MessageEntry Message { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_FinishReason();
    public void set_FinishReason(string value);
    public int get_Index();
    public void set_Index(int value);
    public MessageEntry get_Message();
    public void set_Message(MessageEntry value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Internal.ChatMessageRole : Enum {
    public int value__;
    public static ChatMessageRole assisant;
    public static ChatMessageRole system;
    public static ChatMessageRole user;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.GptEmbeddingsRequestOptions")]
public class Microsoft.SharePoint.Internal.GptEmbeddingsRequestOptions : ClientValueObject {
    private string m_input;
    [RemoteAttribute]
public string Input { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Input();
    public void set_Input(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.GptEmbeddingsResponse")]
public class Microsoft.SharePoint.Internal.GptEmbeddingsResponse : BaseGptResponse {
    private IList`1<GptEmbeddingsResponseData> m_data;
    private GptResponseUsage m_usage;
    [RemoteAttribute]
public IList`1<GptEmbeddingsResponseData> Data { get; public set; }
    [RemoteAttribute]
public GptResponseUsage Usage { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<GptEmbeddingsResponseData> get_Data();
    public void set_Data(IList`1<GptEmbeddingsResponseData> value);
    public GptResponseUsage get_Usage();
    public void set_Usage(GptResponseUsage value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.GptEmbeddingsResponseData")]
public class Microsoft.SharePoint.Internal.GptEmbeddingsResponseData : ClientValueObject {
    private Single[] m_embedding;
    private int m_index;
    private string m_object;
    [RemoteAttribute]
public Single[] Embedding { get; public set; }
    [RemoteAttribute]
public int Index { get; public set; }
    [RemoteAttribute]
public string Object { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Single[] get_Embedding();
    public void set_Embedding(Single[] value);
    public int get_Index();
    public void set_Index(int value);
    public string get_Object();
    public void set_Object(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.GptRequestOptions")]
public class Microsoft.SharePoint.Internal.GptRequestOptions : BaseGptRequestOptions {
    private int m_bestOf;
    private string m_prompt;
    [RemoteAttribute]
public int BestOf { get; public set; }
    [RemoteAttribute]
public string Prompt { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_BestOf();
    public void set_BestOf(int value);
    public string get_Prompt();
    public void set_Prompt(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.GptResponse")]
public class Microsoft.SharePoint.Internal.GptResponse : BaseGptResponse {
    private IList`1<GptResponseChoice> m_choices;
    private GptResponseUsage m_usage;
    [RemoteAttribute]
public IList`1<GptResponseChoice> Choices { get; public set; }
    [RemoteAttribute]
public GptResponseUsage Usage { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<GptResponseChoice> get_Choices();
    public void set_Choices(IList`1<GptResponseChoice> value);
    public GptResponseUsage get_Usage();
    public void set_Usage(GptResponseUsage value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.GptResponseChoice")]
public class Microsoft.SharePoint.Internal.GptResponseChoice : ClientValueObject {
    private string m_finishReason;
    private int m_index;
    private string m_text;
    [RemoteAttribute]
public string FinishReason { get; public set; }
    [RemoteAttribute]
public int Index { get; public set; }
    [RemoteAttribute]
public string Text { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_FinishReason();
    public void set_FinishReason(string value);
    public int get_Index();
    public void set_Index(int value);
    public string get_Text();
    public void set_Text(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.GptResponseUsage")]
public class Microsoft.SharePoint.Internal.GptResponseUsage : ClientValueObject {
    private int m_completionTokens;
    private int m_promptTokens;
    private int m_totalTokens;
    [RemoteAttribute]
public int CompletionTokens { get; public set; }
    [RemoteAttribute]
public int PromptTokens { get; public set; }
    [RemoteAttribute]
public int TotalTokens { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public int get_CompletionTokens();
    public void set_CompletionTokens(int value);
    public int get_PromptTokens();
    public void set_PromptTokens(int value);
    public int get_TotalTokens();
    public void set_TotalTokens(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Internal.MessageEntry")]
public class Microsoft.SharePoint.Internal.MessageEntry : ClientValueObject {
    private string m_content;
    private string m_role;
    [RemoteAttribute]
public string Content { get; public set; }
    [RemoteAttribute]
public string Role { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_Content();
    public void set_Content(string value);
    public string get_Role();
    public void set_Role(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionAppCatalogAllowedCollection")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionAppCatalogAllowedCollection : ClientObjectCollection`1<SiteCollectionAppCatalogAllowedItem> {
    [EditorBrowsableAttribute("1")]
public SiteCollectionAppCatalogAllowedCollection(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public SiteCollectionAppCatalogAllowedItem Add(string absolutePath);
    [RemoteAttribute]
public void RemoveById(Guid siteId);
    [RemoteAttribute]
public void Remove(string absolutePath);
    [RemoteAttribute]
public SiteCollectionAppCatalogAllowedItem GetById(Guid siteId);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionAppCatalogAllowedItem")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionAppCatalogAllowedItem : ClientObject {
    [RemoteAttribute]
public string AbsoluteUrl { get; }
    [RemoteAttribute]
public string ErrorMessage { get; }
    [RemoteAttribute]
public Guid SiteID { get; }
    [EditorBrowsableAttribute("1")]
public SiteCollectionAppCatalogAllowedItem(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_AbsoluteUrl();
    public string get_ErrorMessage();
    public Guid get_SiteID();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionAppCatalogAllowedItemPropertyNames : object {
    public static string AbsoluteUrl;
    public static string ErrorMessage;
    public static string SiteID;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionCorporateCatalogAccessor")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionCorporateCatalogAccessor : ClientObject {
    [EditorBrowsableAttribute("1")]
public SiteCollectionCorporateCatalogAccessor(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAddinInstanceInfo")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAddinInstanceInfo : ClientValueObject {
    private string m_appIdentifier;
    private Guid m_appInstanceId;
    private string m_appSource;
    private string m_appWebFullUrl;
    private Guid m_appWebId;
    private string m_appWebName;
    private string m_assetId;
    private DateTime m_creationTimeUtc;
    private Guid m_currentSiteId;
    private Guid m_currentWebId;
    private string m_currentWebName;
    private string m_currentWebUrl;
    private string m_installedBy;
    private Guid m_installedSiteId;
    private Guid m_installedWebId;
    private string m_installedWebName;
    private string m_installedWebUrl;
    private string m_launchUrl;
    private DateTime m_licensePurchaseTime;
    private string m_locale;
    private Guid m_productId;
    private string m_purchaserIdentity;
    private string m_status;
    private string m_tenantAppData;
    private DateTime m_tenantAppDataUpdateTime;
    private string m_title;
    [RemoteAttribute]
public string appIdentifier { get; public set; }
    [RemoteAttribute]
public Guid appInstanceId { get; public set; }
    [RemoteAttribute]
public string appSource { get; public set; }
    [RemoteAttribute]
public string appWebFullUrl { get; public set; }
    [RemoteAttribute]
public Guid appWebId { get; public set; }
    [RemoteAttribute]
public string appWebName { get; public set; }
    [RemoteAttribute]
public string assetId { get; public set; }
    [RemoteAttribute]
public DateTime creationTimeUtc { get; public set; }
    [RemoteAttribute]
public Guid currentSiteId { get; public set; }
    [RemoteAttribute]
public Guid currentWebId { get; public set; }
    [RemoteAttribute]
public string currentWebName { get; public set; }
    [RemoteAttribute]
public string currentWebUrl { get; public set; }
    [RemoteAttribute]
public string installedBy { get; public set; }
    [RemoteAttribute]
public Guid installedSiteId { get; public set; }
    [RemoteAttribute]
public Guid installedWebId { get; public set; }
    [RemoteAttribute]
public string installedWebName { get; public set; }
    [RemoteAttribute]
public string installedWebUrl { get; public set; }
    [RemoteAttribute]
public string launchUrl { get; public set; }
    [RemoteAttribute]
public DateTime licensePurchaseTime { get; public set; }
    [RemoteAttribute]
public string locale { get; public set; }
    [RemoteAttribute]
public Guid productId { get; public set; }
    [RemoteAttribute]
public string purchaserIdentity { get; public set; }
    [RemoteAttribute]
public string status { get; public set; }
    [RemoteAttribute]
public string tenantAppData { get; public set; }
    [RemoteAttribute]
public DateTime tenantAppDataUpdateTime { get; public set; }
    [RemoteAttribute]
public string title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_appIdentifier();
    public void set_appIdentifier(string value);
    public Guid get_appInstanceId();
    public void set_appInstanceId(Guid value);
    public string get_appSource();
    public void set_appSource(string value);
    public string get_appWebFullUrl();
    public void set_appWebFullUrl(string value);
    public Guid get_appWebId();
    public void set_appWebId(Guid value);
    public string get_appWebName();
    public void set_appWebName(string value);
    public string get_assetId();
    public void set_assetId(string value);
    public DateTime get_creationTimeUtc();
    public void set_creationTimeUtc(DateTime value);
    public Guid get_currentSiteId();
    public void set_currentSiteId(Guid value);
    public Guid get_currentWebId();
    public void set_currentWebId(Guid value);
    public string get_currentWebName();
    public void set_currentWebName(string value);
    public string get_currentWebUrl();
    public void set_currentWebUrl(string value);
    public string get_installedBy();
    public void set_installedBy(string value);
    public Guid get_installedSiteId();
    public void set_installedSiteId(Guid value);
    public Guid get_installedWebId();
    public void set_installedWebId(Guid value);
    public string get_installedWebName();
    public void set_installedWebName(string value);
    public string get_installedWebUrl();
    public void set_installedWebUrl(string value);
    public string get_launchUrl();
    public void set_launchUrl(string value);
    public DateTime get_licensePurchaseTime();
    public void set_licensePurchaseTime(DateTime value);
    public string get_locale();
    public void set_locale(string value);
    public Guid get_productId();
    public void set_productId(Guid value);
    public string get_purchaserIdentity();
    public void set_purchaserIdentity(string value);
    public string get_status();
    public void set_status(string value);
    public string get_tenantAppData();
    public void set_tenantAppData(string value);
    public DateTime get_tenantAppDataUpdateTime();
    public void set_tenantAppDataUpdateTime(DateTime value);
    public string get_title();
    public void set_title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAddinPermissionFailedInfo")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAddinPermissionFailedInfo : ClientValueObject {
    private string m_appIdentifier;
    private string m_errorMessage;
    private string m_serverRelativeUrl;
    [RemoteAttribute]
public string appIdentifier { get; public set; }
    [RemoteAttribute]
public string errorMessage { get; public set; }
    [RemoteAttribute]
public string serverRelativeUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_appIdentifier();
    public void set_appIdentifier(string value);
    public string get_errorMessage();
    public void set_errorMessage(string value);
    public string get_serverRelativeUrl();
    public void set_serverRelativeUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAddinPermissionInfo")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAddinPermissionInfo : ClientValueObject {
    private string m_absoluteUrl;
    private bool m_allowAppOnly;
    private string m_appIdentifier;
    private string m_serverRelativeUrl;
    private IList`1<SPSiteCollectionScopedPermissionInfo> m_siteCollectionScopedPermissions;
    private IList`1<SPTenantScopedPermissionInfo> m_tenantScopedPermissions;
    [RemoteAttribute]
public string absoluteUrl { get; public set; }
    [RemoteAttribute]
public bool allowAppOnly { get; public set; }
    [RemoteAttribute]
public string appIdentifier { get; public set; }
    [RemoteAttribute]
public string serverRelativeUrl { get; public set; }
    [RemoteAttribute]
public IList`1<SPSiteCollectionScopedPermissionInfo> siteCollectionScopedPermissions { get; public set; }
    [RemoteAttribute]
public IList`1<SPTenantScopedPermissionInfo> tenantScopedPermissions { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_absoluteUrl();
    public void set_absoluteUrl(string value);
    public bool get_allowAppOnly();
    public void set_allowAppOnly(bool value);
    public string get_appIdentifier();
    public void set_appIdentifier(string value);
    public string get_serverRelativeUrl();
    public void set_serverRelativeUrl(string value);
    public IList`1<SPSiteCollectionScopedPermissionInfo> get_siteCollectionScopedPermissions();
    public void set_siteCollectionScopedPermissions(IList`1<SPSiteCollectionScopedPermissionInfo> value);
    public IList`1<SPTenantScopedPermissionInfo> get_tenantScopedPermissions();
    public void set_tenantScopedPermissions(IList`1<SPTenantScopedPermissionInfo> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAddinPermissionRequest")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAddinPermissionRequest : ClientValueObject {
    private IList`1<string> m_appIdentifiers;
    private string m_serverRelativeUrl;
    private string m_url;
    [RemoteAttribute]
public IList`1<string> appIdentifiers { get; public set; }
    [RemoteAttribute]
public string serverRelativeUrl { get; public set; }
    [RemoteAttribute]
public string url { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<string> get_appIdentifiers();
    public void set_appIdentifiers(IList`1<string> value);
    public string get_serverRelativeUrl();
    public void set_serverRelativeUrl(string value);
    public string get_url();
    public void set_url(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAddinPermissionResponse")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAddinPermissionResponse : ClientValueObject {
    private IList`1<SPAddinPermissionInfo> m_addinPermissions;
    private IList`1<SPAddinPermissionFailedInfo> m_failedAddins;
    [RemoteAttribute]
public IList`1<SPAddinPermissionInfo> addinPermissions { get; public set; }
    [RemoteAttribute]
public IList`1<SPAddinPermissionFailedInfo> failedAddins { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<SPAddinPermissionInfo> get_addinPermissions();
    public void set_addinPermissions(IList`1<SPAddinPermissionInfo> value);
    public IList`1<SPAddinPermissionFailedInfo> get_failedAddins();
    public void set_failedAddins(IList`1<SPAddinPermissionFailedInfo> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAddinPrincipalInfo")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAddinPrincipalInfo : ClientValueObject {
    private string m_absoluteUrl;
    private string m_appIdentifier;
    private string m_serverRelativeUrl;
    private string m_title;
    [RemoteAttribute]
public string absoluteUrl { get; public set; }
    [RemoteAttribute]
public string appIdentifier { get; public set; }
    [RemoteAttribute]
public string serverRelativeUrl { get; public set; }
    [RemoteAttribute]
public string title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_absoluteUrl();
    public void set_absoluteUrl(string value);
    public string get_appIdentifier();
    public void set_appIdentifier(string value);
    public string get_serverRelativeUrl();
    public void set_serverRelativeUrl(string value);
    public string get_title();
    public void set_title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAppAddAndDeployResponseInfomation")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAppAddAndDeployResponseInfomation : ClientValueObject {
    private bool m_isFirstTimeDeployed;
    private string m_listId;
    private string m_listItemId;
    private string m_listItemUniqueId;
    [RemoteAttribute]
public bool IsFirstTimeDeployed { get; public set; }
    [RemoteAttribute]
public string ListId { get; public set; }
    [RemoteAttribute]
public string ListItemId { get; public set; }
    [RemoteAttribute]
public string ListItemUniqueId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public bool get_IsFirstTimeDeployed();
    public void set_IsFirstTimeDeployed(bool value);
    public string get_ListId();
    public void set_ListId(string value);
    public string get_ListItemId();
    public void set_ListItemId(string value);
    public string get_ListItemUniqueId();
    public void set_ListItemUniqueId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAvailableAddinsResponse")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPAvailableAddinsResponse : ClientValueObject {
    private IList`1<SPAddinInstanceInfo> m_addins;
    private IList`1<SPErrorWithServerRelativeUrl> m_errorsWithServerRelativeUrl;
    [RemoteAttribute]
public IList`1<SPAddinInstanceInfo> addins { get; public set; }
    [RemoteAttribute]
public IList`1<SPErrorWithServerRelativeUrl> errorsWithServerRelativeUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<SPAddinInstanceInfo> get_addins();
    public void set_addins(IList`1<SPAddinInstanceInfo> value);
    public IList`1<SPErrorWithServerRelativeUrl> get_errorsWithServerRelativeUrl();
    public void set_errorsWithServerRelativeUrl(IList`1<SPErrorWithServerRelativeUrl> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPErrorWithServerRelativeUrl")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPErrorWithServerRelativeUrl : ClientValueObject {
    private string m_errorMessage;
    private string m_serverRelativeUrl;
    [RemoteAttribute]
public string errorMessage { get; public set; }
    [RemoteAttribute]
public string serverRelativeUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_errorMessage();
    public void set_errorMessage(string value);
    public string get_serverRelativeUrl();
    public void set_serverRelativeUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPFailToTriggerUninstallAddinJobResponse")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPFailToTriggerUninstallAddinJobResponse : ClientValueObject {
    private Guid m_appInstanceId;
    private string m_errorMessage;
    private string m_serverRelativeUrl;
    [RemoteAttribute]
public Guid appInstanceId { get; public set; }
    [RemoteAttribute]
public string errorMessage { get; public set; }
    [RemoteAttribute]
public string serverRelativeUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_appInstanceId();
    public void set_appInstanceId(Guid value);
    public string get_errorMessage();
    public void set_errorMessage(string value);
    public string get_serverRelativeUrl();
    public void set_serverRelativeUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPGetAddinPrincipalsResponse")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPGetAddinPrincipalsResponse : ClientValueObject {
    private IList`1<SPAddinPrincipalInfo> m_addinPrincipals;
    private IList`1<SPErrorWithServerRelativeUrl> m_errorsWithServerRelativeUrl;
    [RemoteAttribute]
public IList`1<SPAddinPrincipalInfo> addinPrincipals { get; public set; }
    [RemoteAttribute]
public IList`1<SPErrorWithServerRelativeUrl> errorsWithServerRelativeUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<SPAddinPrincipalInfo> get_addinPrincipals();
    public void set_addinPrincipals(IList`1<SPAddinPrincipalInfo> value);
    public IList`1<SPErrorWithServerRelativeUrl> get_errorsWithServerRelativeUrl();
    public void set_errorsWithServerRelativeUrl(IList`1<SPErrorWithServerRelativeUrl> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPSiteCollectionScopedPermissionInfo")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPSiteCollectionScopedPermissionInfo : ClientValueObject {
    private Guid m_listId;
    private string m_right;
    private Guid m_siteId;
    private Guid m_webId;
    [RemoteAttribute]
public Guid listId { get; public set; }
    [RemoteAttribute]
public string right { get; public set; }
    [RemoteAttribute]
public Guid siteId { get; public set; }
    [RemoteAttribute]
public Guid webId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_listId();
    public void set_listId(Guid value);
    public string get_right();
    public void set_right(string value);
    public Guid get_siteId();
    public void set_siteId(Guid value);
    public Guid get_webId();
    public void set_webId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPStoreAppCreateByIdInformation")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPStoreAppCreateByIdInformation : ClientValueObject {
    private string m_callerId;
    private string m_cMU;
    private bool m_isUpdatingApp;
    private bool m_overwrite;
    private bool m_skipFeatureDeployment;
    private string m_storeAssetId;
    [RemoteAttribute]
public string CallerId { get; public set; }
    [RemoteAttribute]
public string CMU { get; public set; }
    [RemoteAttribute]
public bool isUpdatingApp { get; public set; }
    [RemoteAttribute]
public bool Overwrite { get; public set; }
    [RemoteAttribute]
public bool SkipFeatureDeployment { get; public set; }
    [RemoteAttribute]
public string StoreAssetId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_CallerId();
    public void set_CallerId(string value);
    public string get_CMU();
    public void set_CMU(string value);
    public bool get_isUpdatingApp();
    public void set_isUpdatingApp(bool value);
    public bool get_Overwrite();
    public void set_Overwrite(bool value);
    public bool get_SkipFeatureDeployment();
    public void set_SkipFeatureDeployment(bool value);
    public string get_StoreAssetId();
    public void set_StoreAssetId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPStoreAppRequestInformation")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPStoreAppRequestInformation : ClientValueObject {
    private string m_assetId;
    private string m_billingMarket;
    private string m_contentMarket;
    private Guid m_installationSiteId;
    private Guid m_installationWebId;
    private string m_justification;
    private string m_requestType;
    [RemoteAttribute]
public string AssetId { get; public set; }
    [RemoteAttribute]
public string BillingMarket { get; public set; }
    [RemoteAttribute]
public string ContentMarket { get; public set; }
    [RemoteAttribute]
public Guid InstallationSiteId { get; public set; }
    [RemoteAttribute]
public Guid InstallationWebId { get; public set; }
    [RemoteAttribute]
public string Justification { get; public set; }
    [RemoteAttribute]
public string RequestType { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_AssetId();
    public void set_AssetId(string value);
    public string get_BillingMarket();
    public void set_BillingMarket(string value);
    public string get_ContentMarket();
    public void set_ContentMarket(string value);
    public Guid get_InstallationSiteId();
    public void set_InstallationSiteId(Guid value);
    public Guid get_InstallationWebId();
    public void set_InstallationWebId(Guid value);
    public string get_Justification();
    public void set_Justification(string value);
    public string get_RequestType();
    public void set_RequestType(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPStoreAppResponseInformation")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPStoreAppResponseInformation : ClientValueObject {
    private string m_itemId;
    private string m_listId;
    [RemoteAttribute]
public string ItemId { get; public set; }
    [RemoteAttribute]
public string ListId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_ItemId();
    public void set_ItemId(string value);
    public string get_ListId();
    public void set_ListId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPTenantScopedPermissionInfo")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPTenantScopedPermissionInfo : ClientValueObject {
    private string m_feature;
    private Guid m_id;
    private string m_right;
    private string m_scope;
    [RemoteAttribute]
public string feature { get; public set; }
    [RemoteAttribute]
public Guid id { get; public set; }
    [RemoteAttribute]
public string right { get; public set; }
    [RemoteAttribute]
public string scope { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_feature();
    public void set_feature(string value);
    public Guid get_id();
    public void set_id(Guid value);
    public string get_right();
    public void set_right(string value);
    public string get_scope();
    public void set_scope(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPTriggeredUninstallAddinJobResponse")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPTriggeredUninstallAddinJobResponse : ClientValueObject {
    private string m_absoluteUrl;
    private Guid m_appInstanceId;
    private string m_serverRelativeUrl;
    private Guid m_uninstallJobId;
    [RemoteAttribute]
public string absoluteUrl { get; public set; }
    [RemoteAttribute]
public Guid appInstanceId { get; public set; }
    [RemoteAttribute]
public string serverRelativeUrl { get; public set; }
    [RemoteAttribute]
public Guid uninstallJobId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_absoluteUrl();
    public void set_absoluteUrl(string value);
    public Guid get_appInstanceId();
    public void set_appInstanceId(Guid value);
    public string get_serverRelativeUrl();
    public void set_serverRelativeUrl(string value);
    public Guid get_uninstallJobId();
    public void set_uninstallJobId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPUninstallAddinErrorDetail")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPUninstallAddinErrorDetail : ClientValueObject {
    private Guid m_correlationId;
    private string m_detail;
    private string m_exceptionMessage;
    private string m_source;
    private string m_type;
    [RemoteAttribute]
public Guid correlationId { get; public set; }
    [RemoteAttribute]
public string detail { get; public set; }
    [RemoteAttribute]
public string exceptionMessage { get; public set; }
    [RemoteAttribute]
public string source { get; public set; }
    [RemoteAttribute]
public string type { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_correlationId();
    public void set_correlationId(Guid value);
    public string get_detail();
    public void set_detail(string value);
    public string get_exceptionMessage();
    public void set_exceptionMessage(string value);
    public string get_source();
    public void set_source(string value);
    public string get_type();
    public void set_type(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPUninstallAddinJobDetail")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPUninstallAddinJobDetail : ClientValueObject {
    private string m_absoluteUrl;
    private Guid m_appInstanceId;
    private IList`1<SPUninstallAddinErrorDetail> m_errorDetails;
    private Guid m_jobId;
    private string m_serverRelativeUrl;
    private Guid m_siteId;
    private DateTime m_taskStartTime;
    [RemoteAttribute]
public string absoluteUrl { get; public set; }
    [RemoteAttribute]
public Guid appInstanceId { get; public set; }
    [RemoteAttribute]
public IList`1<SPUninstallAddinErrorDetail> errorDetails { get; public set; }
    [RemoteAttribute]
public Guid jobId { get; public set; }
    [RemoteAttribute]
public string serverRelativeUrl { get; public set; }
    [RemoteAttribute]
public Guid siteId { get; public set; }
    [RemoteAttribute]
public DateTime taskStartTime { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_absoluteUrl();
    public void set_absoluteUrl(string value);
    public Guid get_appInstanceId();
    public void set_appInstanceId(Guid value);
    public IList`1<SPUninstallAddinErrorDetail> get_errorDetails();
    public void set_errorDetails(IList`1<SPUninstallAddinErrorDetail> value);
    public Guid get_jobId();
    public void set_jobId(Guid value);
    public string get_serverRelativeUrl();
    public void set_serverRelativeUrl(string value);
    public Guid get_siteId();
    public void set_siteId(Guid value);
    public DateTime get_taskStartTime();
    public void set_taskStartTime(DateTime value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPUninstallAddinResponse")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SPUninstallAddinResponse : ClientValueObject {
    private IList`1<SPTriggeredUninstallAddinJobResponse> m_executing;
    private IList`1<SPFailToTriggerUninstallAddinJobResponse> m_failed;
    [RemoteAttribute]
public IList`1<SPTriggeredUninstallAddinJobResponse> executing { get; public set; }
    [RemoteAttribute]
public IList`1<SPFailToTriggerUninstallAddinJobResponse> failed { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<SPTriggeredUninstallAddinJobResponse> get_executing();
    public void set_executing(IList`1<SPTriggeredUninstallAddinJobResponse> value);
    public IList`1<SPFailToTriggerUninstallAddinJobResponse> get_failed();
    public void set_failed(IList`1<SPFailToTriggerUninstallAddinJobResponse> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.StoreAppCreationInformation")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.StoreAppCreationInformation : FileCreationInformation {
    private string m_iconUrl;
    private string m_publisher;
    private string m_shortDescription;
    private string m_storeAssetId;
    [RemoteAttribute]
public string IconUrl { get; public set; }
    [RemoteAttribute]
public string Publisher { get; public set; }
    [RemoteAttribute]
public string ShortDescription { get; public set; }
    [RemoteAttribute]
public string StoreAssetId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_IconUrl();
    public void set_IconUrl(string value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public string get_ShortDescription();
    public void set_ShortDescription(string value);
    public string get_StoreAssetId();
    public void set_StoreAssetId(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.TeamsPackageDownload")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.TeamsPackageDownload : ClientObject {
    [EditorBrowsableAttribute("1")]
public TeamsPackageDownload(ClientRuntimeContext context, ObjectPath objectPath);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.TenantCorporateCatalogAccessor")]
public class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.TenantCorporateCatalogAccessor : ClientObject {
    [RemoteAttribute]
public SiteCollectionAppCatalogAllowedCollection SiteCollectionAppCatalogsSites { get; }
    [EditorBrowsableAttribute("1")]
public TenantCorporateCatalogAccessor(ClientRuntimeContext context, ObjectPath objectPath);
    public SiteCollectionAppCatalogAllowedCollection get_SiteCollectionAppCatalogsSites();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.TenantCorporateCatalogAccessorObjectPropertyNames : object {
    public static string SiteCollectionAppCatalogsSites;
}
public enum Microsoft.SharePoint.Navigation.REST.NavigationSource : Enum {
    public int value__;
    public static NavigationSource None;
    public static NavigationSource TopOrHub;
    public static NavigationSource QuickLaunch;
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.Document")]
public class Microsoft.SharePoint.News.DataModel.Document : NavigatableItem {
    private long m_comments;
    private string m_contentClass;
    private string m_contentTypeId;
    private string m_fileExtension;
    private Folder m_folder;
    private DocumentReference m_itemReference;
    private Person m_lastModifiedBy;
    private string m_lastModifiedTime;
    private Library m_library;
    private bool m_liked;
    private long m_likes;
    private bool m_savedForLater;
    private SPOSite m_site;
    private long m_size;
    private string m_staticTeaser;
    private long m_views;
    [RemoteAttribute]
public long comments { get; public set; }
    [RemoteAttribute]
public string contentClass { get; public set; }
    [RemoteAttribute]
public string contentTypeId { get; public set; }
    [RemoteAttribute]
public string fileExtension { get; public set; }
    [RemoteAttribute]
public Folder folder { get; public set; }
    [RemoteAttribute]
public DocumentReference itemReference { get; public set; }
    [RemoteAttribute]
public Person lastModifiedBy { get; public set; }
    [RemoteAttribute]
public string lastModifiedTime { get; public set; }
    [RemoteAttribute]
public Library library { get; public set; }
    [RemoteAttribute]
public bool liked { get; public set; }
    [RemoteAttribute]
public long likes { get; public set; }
    [RemoteAttribute]
public bool savedForLater { get; public set; }
    [RemoteAttribute]
public SPOSite site { get; public set; }
    [RemoteAttribute]
public long size { get; public set; }
    [RemoteAttribute]
public string staticTeaser { get; public set; }
    [RemoteAttribute]
public long views { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public long get_comments();
    public void set_comments(long value);
    public string get_contentClass();
    public void set_contentClass(string value);
    public string get_contentTypeId();
    public void set_contentTypeId(string value);
    public string get_fileExtension();
    public void set_fileExtension(string value);
    public Folder get_folder();
    public void set_folder(Folder value);
    public DocumentReference get_itemReference();
    public void set_itemReference(DocumentReference value);
    public Person get_lastModifiedBy();
    public void set_lastModifiedBy(Person value);
    public string get_lastModifiedTime();
    public void set_lastModifiedTime(string value);
    public Library get_library();
    public void set_library(Library value);
    public bool get_liked();
    public void set_liked(bool value);
    public long get_likes();
    public void set_likes(long value);
    public bool get_savedForLater();
    public void set_savedForLater(bool value);
    public SPOSite get_site();
    public void set_site(SPOSite value);
    public long get_size();
    public void set_size(long value);
    public string get_staticTeaser();
    public void set_staticTeaser(string value);
    public long get_views();
    public void set_views(long value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.DocumentReference")]
public class Microsoft.SharePoint.News.DataModel.DocumentReference : ItemReference {
    private Guid m_uniqueId;
    [RemoteAttribute]
public Guid uniqueId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_uniqueId();
    public void set_uniqueId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.Folder")]
public class Microsoft.SharePoint.News.DataModel.Folder : NavigatableItem {
    private Guid m_folderId;
    [RemoteAttribute]
public Guid folderId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_folderId();
    public void set_folderId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.Item")]
public class Microsoft.SharePoint.News.DataModel.Item : SerializableType {
    private string m_title;
    [RemoteAttribute]
public string title { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_title();
    public void set_title(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.ItemReference")]
public class Microsoft.SharePoint.News.DataModel.ItemReference : SerializableType {
    private string m_exchangeId;
    private Guid m_siteId;
    [RemoteAttribute]
public string exchangeId { get; public set; }
    [RemoteAttribute]
public Guid siteId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_exchangeId();
    public void set_exchangeId(string value);
    public Guid get_siteId();
    public void set_siteId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.ItemsList")]
public class Microsoft.SharePoint.News.DataModel.ItemsList : SerializableType {
    private IList`1<Item> m_items;
    [RemoteAttribute]
public IList`1<Item> items { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public IList`1<Item> get_items();
    public void set_items(IList`1<Item> value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.Library")]
public class Microsoft.SharePoint.News.DataModel.Library : NavigatableItem {
    private Guid m_listId;
    [RemoteAttribute]
public Guid listId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_listId();
    public void set_listId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.NavigatableItem")]
public class Microsoft.SharePoint.News.DataModel.NavigatableItem : Item {
    private string m_id;
    private string m_originalUrl;
    private string m_serverRedirectedUrl;
    private string m_url;
    [RemoteAttribute]
public string id { get; public set; }
    [RemoteAttribute]
public string originalUrl { get; public set; }
    [RemoteAttribute]
public string serverRedirectedUrl { get; public set; }
    [RemoteAttribute]
public string url { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_id();
    public void set_id(string value);
    public string get_originalUrl();
    public void set_originalUrl(string value);
    public string get_serverRedirectedUrl();
    public void set_serverRedirectedUrl(string value);
    public string get_url();
    public void set_url(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.NewsArticle")]
public class Microsoft.SharePoint.News.DataModel.NewsArticle : Document {
    private Person m_author;
    private string m_description;
    private DateTime m_firstPublishedDate;
    private string m_imageUrl;
    private bool m_isAuthoritativeNews;
    private string m_listItemId;
    private NewsSourceType m_newsSourceType;
    private NewsType m_newsType;
    private int m_relativeAuthorRank;
    [RemoteAttribute]
public Person author { get; public set; }
    [RemoteAttribute]
public string description { get; public set; }
    [RemoteAttribute]
public DateTime firstPublishedDate { get; public set; }
    [RemoteAttribute]
public string imageUrl { get; public set; }
    [RemoteAttribute]
public bool isAuthoritativeNews { get; public set; }
    [RemoteAttribute]
public string listItemId { get; public set; }
    [RemoteAttribute]
public NewsSourceType newsSourceType { get; public set; }
    [RemoteAttribute]
public NewsType newsType { get; public set; }
    [RemoteAttribute]
public int relativeAuthorRank { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Person get_author();
    public void set_author(Person value);
    public string get_description();
    public void set_description(string value);
    public DateTime get_firstPublishedDate();
    public void set_firstPublishedDate(DateTime value);
    public string get_imageUrl();
    public void set_imageUrl(string value);
    public bool get_isAuthoritativeNews();
    public void set_isAuthoritativeNews(bool value);
    public string get_listItemId();
    public void set_listItemId(string value);
    public NewsSourceType get_newsSourceType();
    public void set_newsSourceType(NewsSourceType value);
    public NewsType get_newsType();
    public void set_newsType(NewsType value);
    public int get_relativeAuthorRank();
    public void set_relativeAuthorRank(int value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[FlagsAttribute]
public enum Microsoft.SharePoint.News.DataModel.NewsSourceType : Enum {
    public int value__;
    public static NewsSourceType Unknown;
}
public enum Microsoft.SharePoint.News.DataModel.NewsType : Enum {
    public int value__;
    public static NewsType News;
    public static NewsType InternalNewsLink;
    public static NewsType ExternalNewsLink;
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.Person")]
public class Microsoft.SharePoint.News.DataModel.Person : NavigatableItem {
    private string m_accountName;
    private string m_acronym;
    private string m_bannerColor;
    private PersonReference m_itemReference;
    private string m_workEmail;
    [RemoteAttribute]
public string accountName { get; public set; }
    [RemoteAttribute]
public string acronym { get; public set; }
    [RemoteAttribute]
public string bannerColor { get; public set; }
    [RemoteAttribute]
public PersonReference itemReference { get; public set; }
    [RemoteAttribute]
public string workEmail { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_accountName();
    public void set_accountName(string value);
    public string get_acronym();
    public void set_acronym(string value);
    public string get_bannerColor();
    public void set_bannerColor(string value);
    public PersonReference get_itemReference();
    public void set_itemReference(PersonReference value);
    public string get_workEmail();
    public void set_workEmail(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.PersonReference")]
public class Microsoft.SharePoint.News.DataModel.PersonReference : ItemReference {
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.SerializableType")]
public class Microsoft.SharePoint.News.DataModel.SerializableType : ClientValueObject {
    private string m_type;
    [RemoteAttribute]
public string type { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_type();
    public void set_type(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.SPOSite")]
public class Microsoft.SharePoint.News.DataModel.SPOSite : NavigatableItem {
    private string m_acronym;
    private string m_bannerColor;
    private string m_bannerImageUrl;
    private string m_contentTypeId;
    private Guid m_departmentId;
    private bool m_isExternalContent;
    private SPOSiteReference m_itemReference;
    private string m_language;
    private DateTime m_lastModifiedTime;
    private string m_webTemplate;
    [RemoteAttribute]
public string acronym { get; public set; }
    [RemoteAttribute]
public string bannerColor { get; public set; }
    [RemoteAttribute]
public string bannerImageUrl { get; public set; }
    [RemoteAttribute]
public string contentTypeId { get; public set; }
    [RemoteAttribute]
public Guid departmentId { get; public set; }
    [RemoteAttribute]
public bool isExternalContent { get; public set; }
    [RemoteAttribute]
public SPOSiteReference itemReference { get; public set; }
    [RemoteAttribute]
public string language { get; public set; }
    [RemoteAttribute]
public DateTime lastModifiedTime { get; public set; }
    [RemoteAttribute]
public string webTemplate { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_acronym();
    public void set_acronym(string value);
    public string get_bannerColor();
    public void set_bannerColor(string value);
    public string get_bannerImageUrl();
    public void set_bannerImageUrl(string value);
    public string get_contentTypeId();
    public void set_contentTypeId(string value);
    public Guid get_departmentId();
    public void set_departmentId(Guid value);
    public bool get_isExternalContent();
    public void set_isExternalContent(bool value);
    public SPOSiteReference get_itemReference();
    public void set_itemReference(SPOSiteReference value);
    public string get_language();
    public void set_language(string value);
    public DateTime get_lastModifiedTime();
    public void set_lastModifiedTime(DateTime value);
    public string get_webTemplate();
    public void set_webTemplate(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.News.DataModel.SPOSiteReference")]
public class Microsoft.SharePoint.News.DataModel.SPOSiteReference : ItemReference {
    private Guid m_webId;
    [RemoteAttribute]
public Guid webId { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid get_webId();
    public void set_webId(Guid value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[ScriptTypeAttribute("Microsoft.SharePoint.Packaging.AppDetails")]
public class Microsoft.SharePoint.Packaging.AppDetails : ClientObject {
    [RemoteAttribute]
public string EulaUrl { get; }
    [RemoteAttribute]
public string PrivacyUrl { get; }
    [RemoteAttribute]
public string Publisher { get; }
    [RemoteAttribute]
public string ShortDescription { get; }
    [RemoteAttribute]
public string SupportUrl { get; }
    [EditorBrowsableAttribute("1")]
public AppDetails(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_EulaUrl();
    public string get_PrivacyUrl();
    public string get_Publisher();
    public string get_ShortDescription();
    public string get_SupportUrl();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Packaging.AppDetailsPropertyNames : object {
    public static string EulaUrl;
    public static string PrivacyUrl;
    public static string Publisher;
    public static string ShortDescription;
    public static string SupportUrl;
}
[ScriptTypeAttribute("Microsoft.SharePoint.Packaging.AppIconInfo")]
public class Microsoft.SharePoint.Packaging.AppIconInfo : ClientObject {
    [RemoteAttribute]
public Byte[] Content { get; }
    [RemoteAttribute]
public string MimeType { get; }
    [EditorBrowsableAttribute("1")]
public AppIconInfo(ClientRuntimeContext context, ObjectPath objectPath);
    public Byte[] get_Content();
    public string get_MimeType();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.Packaging.AppIconInfoPropertyNames : object {
    public static string Content;
    public static string MimeType;
}
[ScriptTypeAttribute("Microsoft.SharePoint.PortalAndOrgNews.HomeSiteConfigurationParam")]
public class Microsoft.SharePoint.PortalAndOrgNews.HomeSiteConfigurationParam : ClientValueObject {
    private Guid[] m_audiences;
    private bool m_isAudiencesPresent;
    private bool m_isGoBackToConnectionsButtonDisabled;
    private bool m_isInDraftMode;
    private bool m_isInDraftModePresent;
    private bool m_isOrderPresent;
    private bool m_isTargetedLicenseTypePresent;
    private bool m_isVivaBackendSite;
    private bool m_isVivaBackendSitePresent;
    private bool m_isVivaConnectionsDefaultStartPresent;
    private int m_order;
    private TargetedLicenseType m_targetedLicenseType;
    private bool m_vivaConnectionsDefaultStart;
    [RemoteAttribute]
public Guid[] Audiences { get; public set; }
    [RemoteAttribute]
public bool IsAudiencesPresent { get; public set; }
    [RemoteAttribute]
public bool isGoBackToConnectionsButtonDisabled { get; public set; }
    [RemoteAttribute]
public bool isInDraftMode { get; public set; }
    [RemoteAttribute]
public bool IsInDraftModePresent { get; public set; }
    [RemoteAttribute]
public bool IsOrderPresent { get; public set; }
    [RemoteAttribute]
public bool IsTargetedLicenseTypePresent { get; public set; }
    [RemoteAttribute]
public bool IsVivaBackendSite { get; public set; }
    [RemoteAttribute]
public bool IsVivaBackendSitePresent { get; public set; }
    [RemoteAttribute]
public bool IsVivaConnectionsDefaultStartPresent { get; public set; }
    [RemoteAttribute]
public int Order { get; public set; }
    [RemoteAttribute]
public TargetedLicenseType TargetedLicenseType { get; public set; }
    [RemoteAttribute]
public bool vivaConnectionsDefaultStart { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public Guid[] get_Audiences();
    public void set_Audiences(Guid[] value);
    public bool get_IsAudiencesPresent();
    public void set_IsAudiencesPresent(bool value);
    public bool get_isGoBackToConnectionsButtonDisabled();
    public void set_isGoBackToConnectionsButtonDisabled(bool value);
    public bool get_isInDraftMode();
    public void set_isInDraftMode(bool value);
    public bool get_IsInDraftModePresent();
    public void set_IsInDraftModePresent(bool value);
    public bool get_IsOrderPresent();
    public void set_IsOrderPresent(bool value);
    public bool get_IsTargetedLicenseTypePresent();
    public void set_IsTargetedLicenseTypePresent(bool value);
    public bool get_IsVivaBackendSite();
    public void set_IsVivaBackendSite(bool value);
    public bool get_IsVivaBackendSitePresent();
    public void set_IsVivaBackendSitePresent(bool value);
    public bool get_IsVivaConnectionsDefaultStartPresent();
    public void set_IsVivaConnectionsDefaultStartPresent(bool value);
    public int get_Order();
    public void set_Order(int value);
    public TargetedLicenseType get_TargetedLicenseType();
    public void set_TargetedLicenseType(TargetedLicenseType value);
    public bool get_vivaConnectionsDefaultStart();
    public void set_vivaConnectionsDefaultStart(bool value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.PortalAndOrgNews.TargetedLicenseType : Enum {
    public int value__;
    public static TargetedLicenseType None;
    public static TargetedLicenseType FLW;
    public static TargetedLicenseType IW;
}
public enum Microsoft.SharePoint.SmartCache.OperationType : Enum {
    public int value__;
    public static OperationType Update;
    public static OperationType Add;
    public static OperationType Remove;
}
[ScriptTypeAttribute("Microsoft.SharePoint.SmartCache.SmartCacheItem")]
public class Microsoft.SharePoint.SmartCache.SmartCacheItem : ClientObject {
    [RemoteAttribute]
public string accessUrl { get; public set; }
    [RemoteAttribute]
public string containerTitle { get; public set; }
    [RemoteAttribute]
public string contentClass { get; public set; }
    [RemoteAttribute]
public bool isDefaultDocumentLibrary { get; public set; }
    [RemoteAttribute]
public bool isTeamsChannelSite { get; public set; }
    [RemoteAttribute]
public bool isTeamsConnectedSite { get; public set; }
    [RemoteAttribute]
public DateTime lastAccessDateTime { get; public set; }
    [RemoteAttribute]
public Guid listId { get; public set; }
    [RemoteAttribute]
public int listItemId { get; public set; }
    [RemoteAttribute]
public OperationType operation { get; public set; }
    [RemoteAttribute]
public long pinOrder { get; public set; }
    [RemoteAttribute]
public string properties { get; public set; }
    [RemoteAttribute]
public string siteAcronym { get; public set; }
    [RemoteAttribute]
public string siteColor { get; public set; }
    [RemoteAttribute]
public Guid siteId { get; public set; }
    [RemoteAttribute]
public string siteLogoUrl { get; public set; }
    [RemoteAttribute]
public string spoId { get; public set; }
    [RemoteAttribute]
public string title { get; public set; }
    [RemoteAttribute]
public Guid uniqueId { get; public set; }
    [RemoteAttribute]
public Guid webId { get; public set; }
    [RemoteAttribute]
public string webUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public SmartCacheItem(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_accessUrl();
    public void set_accessUrl(string value);
    public string get_containerTitle();
    public void set_containerTitle(string value);
    public string get_contentClass();
    public void set_contentClass(string value);
    public bool get_isDefaultDocumentLibrary();
    public void set_isDefaultDocumentLibrary(bool value);
    public bool get_isTeamsChannelSite();
    public void set_isTeamsChannelSite(bool value);
    public bool get_isTeamsConnectedSite();
    public void set_isTeamsConnectedSite(bool value);
    public DateTime get_lastAccessDateTime();
    public void set_lastAccessDateTime(DateTime value);
    public Guid get_listId();
    public void set_listId(Guid value);
    public int get_listItemId();
    public void set_listItemId(int value);
    public OperationType get_operation();
    public void set_operation(OperationType value);
    public long get_pinOrder();
    public void set_pinOrder(long value);
    public string get_properties();
    public void set_properties(string value);
    public string get_siteAcronym();
    public void set_siteAcronym(string value);
    public string get_siteColor();
    public void set_siteColor(string value);
    public Guid get_siteId();
    public void set_siteId(Guid value);
    public string get_siteLogoUrl();
    public void set_siteLogoUrl(string value);
    public string get_spoId();
    public void set_spoId(string value);
    public string get_title();
    public void set_title(string value);
    public Guid get_uniqueId();
    public void set_uniqueId(Guid value);
    public Guid get_webId();
    public void set_webId(Guid value);
    public string get_webUrl();
    public void set_webUrl(string value);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.SmartCache.SmartCacheItemPropertyNames : object {
    public static string accessUrl;
    public static string containerTitle;
    public static string contentClass;
    public static string isDefaultDocumentLibrary;
    public static string isTeamsChannelSite;
    public static string isTeamsConnectedSite;
    public static string lastAccessDateTime;
    public static string listId;
    public static string listItemId;
    public static string operation;
    public static string pinOrder;
    public static string properties;
    public static string siteAcronym;
    public static string siteColor;
    public static string siteId;
    public static string siteLogoUrl;
    public static string spoId;
    public static string title;
    public static string uniqueId;
    public static string webId;
    public static string webUrl;
}
[ScriptTypeAttribute("Microsoft.SharePoint.SPStart.SPStartUtilitiesProxy")]
public static class Microsoft.SharePoint.SPStart.SPStartUtilitiesProxy : object {
    [RemoteAttribute]
public static ClientResult`1<string> GetSerializedSPStartContext(ClientRuntimeContext context, string mySiteUrl);
}
[ScriptTypeAttribute("Microsoft.SharePoint.TenantCdn.TenantCdnUrl")]
public class Microsoft.SharePoint.TenantCdn.TenantCdnUrl : ClientValueObject {
    private string m_cdnUrl;
    private DateTime m_expirationTimeUtc;
    private bool m_isCdnUrlAvailable;
    private string m_itemUrl;
    [RemoteAttribute]
public string CdnUrl { get; public set; }
    [RemoteAttribute]
public DateTime ExpirationTimeUtc { get; public set; }
    [RemoteAttribute]
public bool IsCdnUrlAvailable { get; public set; }
    [RemoteAttribute]
public string ItemUrl { get; public set; }
    [EditorBrowsableAttribute("1")]
public string TypeId { get; }
    public string get_CdnUrl();
    public void set_CdnUrl(string value);
    public DateTime get_ExpirationTimeUtc();
    public void set_ExpirationTimeUtc(DateTime value);
    public bool get_IsCdnUrlAvailable();
    public void set_IsCdnUrlAvailable(bool value);
    public string get_ItemUrl();
    public void set_ItemUrl(string value);
    public virtual string get_TypeId();
    [EditorBrowsableAttribute("1")]
public virtual void WriteToXml(XmlWriter writer, SerializationContext serializationContext);
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
public enum Microsoft.SharePoint.Utilities.WebTemplateExtensions.SiteScriptStore : Enum {
    public int value__;
    public static SiteScriptStore Tenant;
    public static SiteScriptStore OutOfBox;
}
[ScriptTypeAttribute("Microsoft.SharePoint.WebControls.ModuleLink")]
public class Microsoft.SharePoint.WebControls.ModuleLink : ClientObject {
    [EditorBrowsableAttribute("1")]
public ModuleLink(ClientRuntimeContext context, ObjectPath objectPath);
    [RemoteAttribute]
public static ResourceManifestInformation GetResourceManifestInformation(ClientRuntimeContext context, Web web, string manifestName);
}
[ScriptTypeAttribute("Microsoft.SharePoint.WebControls.ResourceManifestInformation")]
public class Microsoft.SharePoint.WebControls.ResourceManifestInformation : ClientObject {
    [RemoteAttribute]
public string RequireJsScriptBlock { get; }
    [RemoteAttribute]
public IDictionary`2<string, string> ScenarioMapping { get; }
    [EditorBrowsableAttribute("1")]
public ResourceManifestInformation(ClientRuntimeContext context, ObjectPath objectPath);
    public string get_RequireJsScriptBlock();
    public IDictionary`2<string, string> get_ScenarioMapping();
    protected virtual bool InitOnePropertyFromJson(string peekedName, JsonReader reader);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.SharePoint.WebControls.ResourceManifestInformationPropertyNames : object {
    public static string RequireJsScriptBlock;
    public static string ScenarioMapping;
}
