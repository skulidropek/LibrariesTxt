internal static class Microsoft.Data.Tools.Schema.Sql.DesignServices.SingleFileSymbolLocator : object {
    private static HashSet`1<ModelRelationshipClass> _columnRelationshipClasses;
    private static SingleFileSymbolLocator();
    private static HashSet`1<ModelElementClass> GetTableAndChildrenElementClasses();
    public static IList`1<SqlScriptUpdateInfo> ComputeUpdateInformation(SqlColumn column, string newName);
    private static bool IsUnnamedTimestampColumn(SqlColumn column, ColumnDefinition& timestampColumnAST);
    private static bool IsRelevantColumnReference(SqlTable table, IModelRelationshipEntry entry);
    private static void ResolveUserDefinedTypes(SqlSchemaModel model);
    private static void ResolveColumnAndComposingChildren(SqlColumn column);
    private static void ResolvePotentialIncoming(SqlTable table, SqlColumn column, string sourceName);
    private static SqlScriptUpdateInfo AnalyzeScriptForColumn(ISqlModelElement column, string sourceName, string newName, string stringLiteralName, SortedSet`1<SqlIntegerRange> locationRanges);
}
internal class Microsoft.Data.Tools.Schema.Sql.DesignServices.SingleFileTableColumnLocatorSchemaAnalyzer : SqlSchemaAnalyzer {
    private List`1<SqlScriptUpdateItem> _updates;
    private SortedSet`1<SqlIntegerRange> _locationRanges;
    private SqlElementDescriptor _descriptor;
    private SqlElementDescriptorComparer _comparer;
    private string _newColumnName;
    private string _newColumnNameForStringLiteral;
    public IList`1<SqlScriptUpdateItem> Updates { get; }
    public SingleFileTableColumnLocatorSchemaAnalyzer(ModelStore model, SortedSet`1<SqlIntegerRange> locationRanges, string newColumnName, string newColumnNameForStringLiteral, IEnumerable`1<string> identifiers);
    public IList`1<SqlScriptUpdateItem> get_Updates();
    public virtual void VisitFragment(TSqlFragment fragment, SqlElementDescriptor sqlElementDescriptor, SqlElementDescriptorRelevance relevance);
    public virtual void VisitAmbiguousFragment(TSqlFragment fragment, IEnumerable`1<SqlPotentialElementDescriptor> possibilities);
    private bool IsValidReference(TSqlFragment fragment, SqlElementDescriptor sqlElementDescriptor);
    private void ProcessExpression(TSqlFragment fragment, int clrPartsCount);
    private void AddUpdate(TSqlFragment fragment, bool stringLiteral);
}
internal static class Microsoft.Data.Tools.Schema.Sql.SchemaModel.ModelUpdater.SqlScriptUpdaterForTableElementDeletion : object {
    public static IList`1<SqlScriptUpdateItem> DeleteColumn(SqlColumn column);
    public static IList`1<SqlScriptUpdateItem> DeleteConstraint(SqlConstraint constraint);
    public static IList`1<SqlScriptUpdateItem> DeleteInlineIndex(SqlIndex inlineIndex);
    private static List`1<SqlScriptUpdateItem> DeleteElementImpl(ISqlColumnSource table, SqlModelElement sqlModelElement);
    private static SqlScriptUpdateItem DeleteElement(IList`1<TSqlParserToken> tokenStream, TSqlFragment ast, bool isColumnScopedInlineConstraint);
    private static void LocateElementTokenIndexes(IList`1<TSqlParserToken> tokenStream, TSqlFragment ast, bool includeTrailingComma, Int32& startTokenIndex, Int32& endTokenIndex);
    private static void ExpandTokenScopeToIncludeWhiteSpace(IList`1<TSqlParserToken> tokenStream, Int32& startTokenIndex, Int32& endTokenIndex);
    private static void RemoveEmptyLine(IList`1<TSqlParserToken> tokenStream, int startTokenIndex, int endTokenIndex, Int32& endOffset);
    private static bool AreBothNewLines(IList`1<TSqlParserToken> tokenStream, int startTokenIndex, int endTokenIndex);
    private static List`1<SqlScriptUpdateItem> RemoveOrphanCommaOrParentheses(IList`1<TSqlParserToken> tokenStream, TSqlFragment ast, SqlScriptUpdateItem removeColumn, bool allowRemoveLastColumn);
    private static bool IsNonNewLineWhiteSpace(TSqlParserToken token);
    private static bool IsNewLineToken(TSqlParserToken token);
    private static ElementLocationType GetElementLocationType(ISqlColumnSource source, int startOffset, int endOffset);
    private static void GetAstAndStartEndOffset(SqlModelElement element, TSqlFragment& ast, Int32& startOffset, Int32& endOffset);
}
internal class Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.BeforeModelUpdateEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private IEnumerable`1<SqlScriptUpdateInfo> <Updates>k__BackingField;
    public IEnumerable`1<SqlScriptUpdateInfo> Updates { get; private set; }
    public BeforeModelUpdateEventArgs(IEnumerable`1<SqlScriptUpdateInfo> updates);
    [CompilerGeneratedAttribute]
public IEnumerable`1<SqlScriptUpdateInfo> get_Updates();
    [CompilerGeneratedAttribute]
private void set_Updates(IEnumerable`1<SqlScriptUpdateInfo> value);
}
internal class Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.ErrorUpdater : object {
    private SqlSchemaModel _model;
    private IList`1<DataSchemaError> _allErrors;
    private IList`1<SqlValidationProblemInfo> _allProblems;
    public ErrorUpdater(SqlSchemaModel model);
    public void UpdateErrors(SqlScriptUpdateInfo updateInfo, string newScript, StringPositionConverter newScriptPositionConverter);
    private static void UpdateErrorsImpl(SqlScriptUpdateInfo updateInfo, ErrorProxy`1<T> errorProxy, StringPositionConverter oldScriptPositionConverter, StringPositionConverter newScriptPositionConverter);
    private static bool TryGetNextError(ErrorProxy`1<T> errorProxy, StringPositionConverter oldScriptPositionConverter, T& error, Int32& errorOffset);
}
internal class Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.ScriptBuilderDelegate : MulticastDelegate {
    public ScriptBuilderDelegate(object object, IntPtr method);
    public virtual void Invoke(ScriptFragmentGenerator fragmentGenerator);
    public virtual IAsyncResult BeginInvoke(ScriptFragmentGenerator fragmentGenerator, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.ScriptFragmentGenerator : object {
    private static Dictionary`2<TSqlTokenType, string> KeywordNames;
    private StringBuilder _stringBuilderForScript;
    private SqlScriptGeneratorOptions _defaultScriptGeneratorOptions;
    private static ScriptFragmentGenerator();
    public void AppendSpace(int repeat);
    public void AppendNewLine();
    public void AppendIndentationForNewItem();
    public void AppendKeyword(TSqlTokenType tokenType);
    public void AppendDelimiter(TSqlTokenType tokenType);
    public void AppendContextualKeyword(string word);
    public void AppendIdentifier(string value, bool encode);
    public void AppendToken(TSqlParserToken token);
    public void AppendText(string text);
    public string GetScriptFragment();
    public static string GenerateKeyword(TSqlTokenType tokenType);
    public static string GenerateKeyword(string word);
}
internal class Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater : object {
    [CompilerGeneratedAttribute]
private EventHandler`1<BeforeModelUpdateEventArgs> BeforeModelUpdate;
    private SqlSchemaModel _model;
    private IDataSchemaModelController _modelController;
    private SqlScriptUpdater _scriptUpdater;
    private DeleteActions _deleteActions;
    public SqlModelUpdater(SqlSchemaModel model, IDataSchemaModelController modelController, DeleteActions deleteActions);
    [CompilerGeneratedAttribute]
public void add_BeforeModelUpdate(EventHandler`1<BeforeModelUpdateEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_BeforeModelUpdate(EventHandler`1<BeforeModelUpdateEventArgs> value);
    private static void SetDefaultTypeSpecifierProperties(SqlTypeSpecifier typeSpec, SqlDataType sqlType);
    private static bool SameXmlSchema(SqlXmlSchemaCollection newXmlSchema, IModelRelationshipEntry xmlSchemaEntry);
    private static void ValidateColumnIndex(int count, int index);
    private void ValidateIdentifier(IModelElement element, string identifier, string parameterName);
    private static void ValidateIdentifier(TSqlParser parser, string identifier, string parameterName);
    private static void ValidateScalarExpression(TSqlParser parser, string expression);
    private static void ValidateBooleanExpression(TSqlParser parser, string expression);
    private void DeleteConstraints(SqlColumn column);
    private static Tuple`2<int, int> CreateExcludingRangeForDeleteColumn(SqlTable table, int endingOffset);
    private static ColumnDefinition GetColumnAst(SqlTable table, int columnIndex);
    private IList`1<SqlScriptUpdateInfo> NotifyModelUpdate(IList`1<SqlScriptUpdateInfo> updates);
    public IList`1<SqlScriptUpdateInfo> RenameElement(ISqlModelElement element, string newName);
    public IList`1<SqlScriptUpdateInfo> AddExtendedProperty(ISqlExtendedPropertyHost host, string name, string value);
    public IList`1<SqlScriptUpdateInfo> SetExtendedProperty(SqlExtendedProperty extendedProperty, string value);
    public IList`1<SqlScriptUpdateInfo> DeleteExtendedProperty(SqlExtendedProperty extendedProperty);
    public IList`1<SqlScriptUpdateInfo> CreateIndex(SqlTable table, string name);
    public IList`1<SqlScriptUpdateInfo> CreateXmlIndex(SqlTable table, string name, bool isPrimary);
    public IList`1<SqlScriptUpdateInfo> CreateSelectiveXmlIndex(SqlTable table, string name, bool isPrimary);
    public IList`1<SqlScriptUpdateInfo> CreateSpatialIndex(SqlTable table, string name);
    public IList`1<SqlScriptUpdateInfo> CreateFullTextIndex(SqlTable table);
    public IList`1<SqlScriptUpdateInfo> CreateColumnStoreIndex(SqlTable table, string name);
    public IList`1<SqlScriptUpdateInfo> CreateDmlTrigger(SqlTable table, string name);
    public IList`1<SqlScriptUpdateInfo> DeleteTable(SqlTable table);
    public IList`1<SqlScriptUpdateInfo> DeleteView(SqlView view);
    public IList`1<SqlScriptUpdateInfo> DeleteSubroutine(SqlSubroutine subroutine);
    public IList`1<SqlScriptUpdateInfo> DeleteIndex(SqlIndex index);
    public IList`1<SqlScriptUpdateInfo> DeleteXmlIndex(SqlXmlIndex xmlIndex);
    public IList`1<SqlScriptUpdateInfo> DeleteSelectiveXmlIndex(SqlSelectiveXmlIndex selectiveXmlIndex);
    public IList`1<SqlScriptUpdateInfo> DeleteSpatialIndex(SqlSpatialIndex spatialIndex);
    public IList`1<SqlScriptUpdateInfo> DeleteFullTextIndex(SqlFullTextIndex fullTextIndex);
    public IList`1<SqlScriptUpdateInfo> DeleteTrigger(SqlDmlTrigger trigger);
    public IList`1<SqlScriptUpdateInfo> DeleteColumnStoreIndex(SqlColumnStoreIndex columnStoreIndex);
    public IList`1<SqlScriptUpdateInfo> SetIndexIsClustered(SqlIndex index, bool isClustered);
    public IList`1<SqlScriptUpdateInfo> SetIndexIsUnique(SqlIndex index, bool isUnique);
    public IList`1<SqlScriptUpdateInfo> InsertFullTextIndexColumnAt(SqlFullTextIndex fullTextIndex, int index, SqlColumn column);
    public IList`1<SqlScriptUpdateInfo> UpdateIndexColumns(SqlIndex sqlIndex, IEnumerable`1<SqlColumn> columns, IEnumerable`1<bool> sortOrder);
    public IList`1<SqlScriptUpdateInfo> UpdateColumnStoreIndexColumns(SqlColumnStoreIndex sqlColumnStoreIndex, IEnumerable`1<SqlColumn> columns, IEnumerable`1<bool> sortOrder);
    private static TSqlFragment GetLastTableItem(CreateTableStatement tableAst);
    private static SourceCodePosition FindPrimaryPosition(IEnumerable`1<SourceCodePosition> positions);
    private static bool IsXmlType(SqlType sqlType);
    private List`1<ScriptHandle> GetUpdatedHandles(IList`1<SqlScriptUpdateInfo> updates);
    private void UpdatePositions(IList`1<SqlScriptUpdateInfo> updates, Tuple`2<int, int> excludingRange);
    private void UpdatePositionsAndScriptCache(IList`1<SqlScriptUpdateInfo> updates, Tuple`2<int, int> excludingRange, bool updateScriptCache);
    private void UpdatePositionsAndScriptCache(IList`1<SqlScriptUpdateInfo> updates, IList`1<ScriptHandle> handles, Tuple`2<int, int> excludingRange, bool updateScriptCache);
    private void UpdateAnnotationSourcePositions(string filename, int startOffset, int lengthDelta, bool insertBefore, Tuple`2<int, int> excludingRange, StringPositionConverter positionConverter);
    private static void UpdataAnnotationPosition(IModelAnnotation anno, int startOffset, int lengthDelta, bool insertBefore, Tuple`2<int, int> excludingRange, StringPositionConverter positionConverter);
    private static void UpdatePosition(int originalLength, int originalOffset, int startOffset, int delta, bool insertBefore, Tuple`2<int, int> excludingRange, StringPositionConverter positionConverter, Action`1<int> setLength, Action`1<int> setOffset, Action`1<int> setLine, Action`1<int> setColumn);
    private ScriptHandle GetUpdatedHandle(SqlScriptUpdateInfo updateInfo);
    private static void AggregateUpdates(IEnumerable`1<SqlScriptUpdateItem> updates, Int32& startOffset, Int32& lengthDelta, Boolean& insertBefore);
    private static Tuple`2<int, int> CreateExcludingRange(TSqlFragment fragment);
    private void DeleteElement(ISqlModelElement element);
    private static void ResetValidationStatus(IModelElement element);
    private static void ResetValidationStatusImpl(IModelElement element);
    public IList`1<SqlScriptUpdateInfo> DeleteColumn(SqlColumn column);
    public IList`1<SqlScriptUpdateInfo> SetColumnDataType(SqlSimpleColumn column, SqlType newType);
    private static void AdjustNullability(SqlSimpleColumn column, SqlType newType);
    public IList`1<SqlScriptUpdateInfo> SetColumnDataTypeLength(SqlSimpleColumn column, int length, bool isMax);
    public IList`1<SqlScriptUpdateInfo> SetColumnDataTypePrecision(SqlSimpleColumn column, int precision);
    public IList`1<SqlScriptUpdateInfo> SetColumnDataTypeScale(SqlSimpleColumn column, int scale);
    public IList`1<SqlScriptUpdateInfo> RefactorRenameColumnInTableScope(SqlColumn column, string newName);
    public IList`1<SqlScriptUpdateInfo> SetColumnNullable(SqlSimpleColumn column, bool isNullable);
    public IList`1<SqlScriptUpdateInfo> SetColumnIsIdentity(SqlSimpleColumn column, bool isIdentity);
    public IList`1<SqlScriptUpdateInfo> SetColumnIdentitySeed(SqlSimpleColumn column, SqlDecimal seed);
    public IList`1<SqlScriptUpdateInfo> SetColumnIdentityIncrement(SqlSimpleColumn column, SqlDecimal increment);
    public IList`1<SqlScriptUpdateInfo> SetXmlColumnStyle(SqlSimpleColumn column, bool isXmlDocument);
    public IList`1<SqlScriptUpdateInfo> SetXmlColumnXmlSchema(SqlSimpleColumn column, SqlXmlSchemaCollection xmlSchema);
    public IList`1<SqlScriptUpdateInfo> SetColumnIsPersisted(SqlComputedColumn column, bool isPersisted);
    public IList`1<SqlScriptUpdateInfo> SetColumnIsPersistedNullable(SqlComputedColumn column, bool isPersistedNullable);
    public IList`1<SqlScriptUpdateInfo> SetColumnExpressionScript(SqlComputedColumn column, string expression);
    public IList`1<SqlScriptUpdateInfo> DeletePrimaryKeyConstraint(SqlPrimaryKeyConstraint constraint);
    public IList`1<SqlScriptUpdateInfo> SetForeignKeyForeignTable(SqlForeignKeyConstraint constraint, SqlTable referencedTable);
    public IList`1<SqlScriptUpdateInfo> InsertForeignKeyForeignColumnAt(SqlForeignKeyConstraint constraint, SqlColumn column, int index);
    public IList`1<SqlScriptUpdateInfo> InsertForeignKeyColumnAt(SqlForeignKeyConstraint constraint, SqlColumn column, int index);
    public IList`1<SqlScriptUpdateInfo> SetForeignKeyForeignColumn(SqlForeignKeyConstraint constraint, SqlColumn newColumn, int index);
    public IList`1<SqlScriptUpdateInfo> SetForeignKeyColumn(SqlForeignKeyConstraint constraint, SqlColumn newColumn, int index);
    public IList`1<SqlScriptUpdateInfo> DeleteForeignKeyConstraint(SqlForeignKeyConstraint constraint);
    public IList`1<SqlScriptUpdateInfo> DeleteDefaultConstraint(SqlDefaultConstraint constraint);
    public IList`1<SqlScriptUpdateInfo> SetDefaultConstraintExpression(SqlDefaultConstraint constraint, string expression);
    public IList`1<SqlScriptUpdateInfo> DeleteCheckConstraint(SqlCheckConstraint constraint);
    public IList`1<SqlScriptUpdateInfo> DeleteUniqueConstraint(SqlUniqueConstraint constraint);
    public IList`1<SqlScriptUpdateInfo> SetCheckConstraintExpression(SqlCheckConstraint constraint, string expression);
    public IList`1<SqlScriptUpdateInfo> SetPrimaryKeyConstraintIsClustered(SqlPrimaryKeyConstraint primaryKeyConstraint, bool isClustered);
    public IList`1<SqlScriptUpdateInfo> SetUniqueConstraintIsClustered(SqlUniqueConstraint uniqueConstraint, bool isClustered);
    public IList`1<SqlScriptUpdateInfo> AddInlineIndex(SqlTable table, string indexName);
    public IList`1<SqlScriptUpdateInfo> AddCheckConstraint(SqlTable table, string constraintName);
    public IList`1<SqlScriptUpdateInfo> AddInlineAttribute(SqlTable table, string name, Func`3<SqlTable, string, IList`1<SqlScriptUpdateInfo>> scriptUpdateInfoGenerator);
    public IList`1<SqlScriptUpdateInfo> AddPrimaryKeyConstraint(SqlTable table, string constraintName);
    public IList`1<SqlScriptUpdateInfo> AddPrimaryKeyConstraint(SqlTable table, IEnumerable`1<SqlColumn> columns);
    public IList`1<SqlScriptUpdateInfo> AddPrimaryKeyConstraint(SqlTable table, string constraintName, IEnumerable`1<SqlColumn> columns);
    public IList`1<SqlScriptUpdateInfo> UpdatePrimaryKeyColumns(SqlPrimaryKeyConstraint primaryKeyConstraint, IEnumerable`1<SqlColumn> columns, IEnumerable`1<bool> sortOrder);
    public IList`1<SqlScriptUpdateInfo> AddUniqueConstraint(SqlTable table, string constraintName);
    public IList`1<SqlScriptUpdateInfo> UpdateUniqueConstraintColumns(SqlUniqueConstraint uniqueConstraint, IEnumerable`1<SqlColumn> columns, IEnumerable`1<bool> sortOrder);
    public IList`1<SqlScriptUpdateInfo> AddForeignKeyConstraint(SqlTable table, string constraintName);
    public IList`1<SqlScriptUpdateInfo> AddForeignKeyConstraint(SqlTable table, string constraintName, IEnumerable`1<SqlColumn> referencingColumns, SqlTableBase referencedTable, IEnumerable`1<SqlColumn> referencedColumns);
    public IList`1<SqlScriptUpdateInfo> AddDefaultConstraint(SqlSimpleColumn column, string expression);
    public IList`1<SqlScriptUpdateInfo> InsertColumnSetAt(SqlTable table, string columnName, int index);
    public IList`1<SqlScriptUpdateInfo> InsertComputedColumnAt(SqlTable table, string columnName, int index, string expression);
    public IList`1<SqlScriptUpdateInfo> InsertSimpleColumnAt(SqlTable table, string columnName, int index);
}
internal static class Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdaterConstants : object {
    public static string AS;
    public static string ASC;
    public static string BEGIN;
    public static string CHECK;
    public static string CLUSTERED;
    public static string COLUMN;
    public static string COLUMNSTORE;
    public static string CONSTRAINT;
    public static string CREATE;
    public static string DELETE;
    public static string DESC;
    public static string END;
    public static string EXEC;
    public static string FOR;
    public static string FOREIGN;
    public static string GO;
    public static string INDEX;
    public static string INSERT;
    public static string NONCLUSTERED;
    public static string NOT;
    public static string NULL;
    public static string ON;
    public static string PATH;
    public static string PRIMARY;
    public static string REFERENCES;
    public static string SELECTIVE;
    public static string SET;
    public static string TABLE;
    public static string UNIQUE;
    public static string UPDATE;
    public static string WITH;
    public static string SP_ADDEXTENDEDPROPERTY;
    public static string PlaceholderColumnName;
    public static string PlaceholderForeignTableName;
    public static string PlaceholderForeignColumnName;
    public static string PlaceholderUniqueIndexName;
    public static string PlaceholderCatalogName;
    public static string PlaceholderXmlIndexName;
    public static string PlaceholderSelectiveXmlIndexName;
    public static string PlaceholderXPathName;
    public static string PlaceholderXPathLiteral;
    public static string NewLine;
    public static string Return;
    public static char Space;
    public static string InitialCheckConstraintExpression;
    public static int DefaultNCharLength;
    public static string MS_Description;
    public static int Indent;
    public static HashSet`1<SqlDataType> SqlTypesCanHaveLength;
    public static HashSet`1<SqlDataType> SqlTypesCanHaveMaxLength;
    public static HashSet`1<SqlDataType> SqlTypesCanHavePrecision;
    public static HashSet`1<SqlDataType> SqlTypesCanHaveScale;
    public static String[] ExtendedPropertyTypeParameterNames;
    public static String[] ExtendedPropertyNameParameterNames;
    public static Dictionary`2<ModelElementClass, String[]> ExtendedPropertyTypeParameterValues;
    public static Dictionary`2<ModelElementClass, Func`2[]> ExtendedPropertyNameParameterValues;
    private static SqlModelUpdaterConstants();
}
internal class Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdaterException : DataSchemaModelException {
    public SqlModelUpdaterException(string message);
    public SqlModelUpdaterException(string message, Exception innerException);
    private SqlModelUpdaterException(SerializationInfo info, StreamingContext context);
}
internal static class Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdaterUtils : object {
    public static void TraceAndThrow(string errorMessage);
    public static string GetBuiltInTypeName(SqlDataType sqlType);
    public static void InsertIntoCollection(ScriptFragmentGenerator scriptGenerator, int newItemIndex, int existingItemsCount, ScriptBuilderDelegate scriptBuilder, bool multiline, TSqlTokenType delimiter, TSqlTokenType collectionLeftDelimiter, TSqlTokenType collectionRightDelimiter);
    public static bool IsSignificantToken(TSqlParserToken token);
    public static TAstType GetPrimaryAst(ISqlModelElement element);
    public static bool IsColumnDefinition(TSqlFragment fragment);
    public static bool IsConstraintDefinition(TSqlFragment fragment);
    public static int CalculateDefinitionLastTokenOffset(TSqlFragment fragment);
    internal static int CalculateLastTokenOffset(TSqlFragment fragment);
    internal static void FindToken(IList`1<TSqlParserToken> tokenStream, int startIndex, Func`2<TSqlParserToken, bool> match, Int32& tokenIndex, TSqlParserToken& token);
    internal static void FindToken(IList`1<TSqlParserToken> tokenStream, int startIndex, Func`2<TSqlParserToken, bool> match, Func`2<TSqlParserToken, bool> continueCondition, Int32& tokenIndex, TSqlParserToken& token);
    internal static void FindTokenBackward(IList`1<TSqlParserToken> tokenStream, int startIndex, Func`2<TSqlParserToken, bool> match, Int32& tokenIndex, TSqlParserToken& token);
    internal static bool CheckTokenSequence(IList`1<TSqlParserToken> tokenStream, int startIndex, int endIndex, Int32& firstFoundToken, Int32& lastFoundToken, Func`2[] tokens);
    public static ScalarExpression GetExtendedPropertyValueAst(SqlExtendedProperty extendedProperty);
    public static SqlScriptUpdateInfo AppendTextToFile(ISqlModelElement element, string text);
    public static void CheckGoAndGetLastToken(ISqlModelElement element, Boolean& hasGo, TSqlParserToken& lastToken);
    public static bool IsInlineColumnConstraint(SqlColumn column, SqlConstraint constraint);
    public static bool DoesColumnHaveCheckOrForeignKeyOrNullableConstraint(SqlColumn sqlColumn);
    public static bool DoesIndexHaveFilterDefinition(SqlIndex sqlIndex);
    public static bool IsInlinePrimaryKeyColumn(SqlColumn column);
    public static bool IsSpaceToken(TSqlParserToken token);
    public static bool IsNewLineToken(TSqlParserToken token);
    public static void RemoveWhitespaceAroundSourcePosition(SqlScriptUpdateInfo info, TSqlParser parser, string fullScript, ISourceInformation sourceInfo);
    private static void RemoveFollowingWhitespaceAndGo(SqlScriptUpdateInfo info, TSqlParser parser, string fullScript, ISourceInformation sourceInfo);
    private static void RemovePrecedingWhitespace(SqlScriptUpdateInfo info, TSqlParser parser, string fullScript, ISourceInformation sourceInfo);
    internal static IList`1<SqlExtendedProperty> GetExtendedPropertyList(ISqlExtendedPropertyHost propertyHost, string propertyName);
}
internal class Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdateInfo : object {
    private SortedList`2<SqlScriptUpdateItem, SqlScriptUpdateItem> _updates;
    [CompilerGeneratedAttribute]
private string <ScriptCacheIdentifier>k__BackingField;
    public string ScriptCacheIdentifier { get; private set; }
    public IEnumerable`1<SqlScriptUpdateItem> Updates { get; }
    public SqlScriptUpdateInfo(string cacheId);
    [CompilerGeneratedAttribute]
public string get_ScriptCacheIdentifier();
    [CompilerGeneratedAttribute]
private void set_ScriptCacheIdentifier(string value);
    public IEnumerable`1<SqlScriptUpdateItem> get_Updates();
    public void AddUpdate(int startOffset, int startLine, int startColumn, int length, string newText);
    public void AddUpdate(SqlScriptUpdateItem updateItem);
    public void AddUpdates(IEnumerable`1<SqlScriptUpdateItem> updateItems);
}
internal class Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdateItem : object {
    [CompilerGeneratedAttribute]
private int <StartOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartLine>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Length>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewText>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UpdateOrder>k__BackingField;
    public int StartOffset { get; private set; }
    public int StartLine { get; private set; }
    public int StartColumn { get; private set; }
    public int Length { get; private set; }
    public string NewText { get; private set; }
    internal int UpdateOrder { get; internal set; }
    public SqlScriptUpdateItem(int startOffset, int startLine, int startColumn, int length, string newText);
    [CompilerGeneratedAttribute]
public int get_StartOffset();
    [CompilerGeneratedAttribute]
private void set_StartOffset(int value);
    [CompilerGeneratedAttribute]
public int get_StartLine();
    [CompilerGeneratedAttribute]
private void set_StartLine(int value);
    [CompilerGeneratedAttribute]
public int get_StartColumn();
    [CompilerGeneratedAttribute]
private void set_StartColumn(int value);
    [CompilerGeneratedAttribute]
public int get_Length();
    [CompilerGeneratedAttribute]
private void set_Length(int value);
    [CompilerGeneratedAttribute]
public string get_NewText();
    [CompilerGeneratedAttribute]
private void set_NewText(string value);
    [CompilerGeneratedAttribute]
internal int get_UpdateOrder();
    [CompilerGeneratedAttribute]
internal void set_UpdateOrder(int value);
    public sealed virtual int CompareTo(SqlScriptUpdateItem other);
}
internal class Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdater : object {
    private static Dictionary`2<ModelElementClass, GetElementIdentifierAst> _getElementIdentifierAction;
    private SqlScriptGenerator _scriptGenerator;
    private static SqlScriptUpdater();
    public SqlScriptUpdater(SqlDatabaseSchemaProvider dsp);
    private static void InitializeGetElementIdentifierActions();
    private static TAstType GetElementAst(ISqlModelElement element);
    public static IList`1<SqlScriptUpdateInfo> SetColumnNullable(SqlSimpleColumn column, bool isNullable);
    private static void AddScriptUpdateForElement(IList`1<SqlScriptUpdateInfo> scriptUpdateList, ISqlModelElement element, string newText, int startOffset, int startLine, int startColumn, int fragmentLength);
    private static void AddScriptUpdateForElementBeforeToken(IList`1<SqlScriptUpdateInfo> scriptUpdateList, ISqlModelElement element, string newText, TSqlParserToken token);
    private static void AddScriptUpdateForElementBetweenTokens(IList`1<SqlScriptUpdateInfo> scriptUpdateList, ISqlModelElement element, string newText, TSqlParserToken firstToken, TSqlParserToken lastToken);
    private static string GenerateSpaceNotSpaceNull();
    public static IList`1<SqlScriptUpdateInfo> SetColumnIsIdentity(SqlSimpleColumn column, bool isIdentity);
    public static IList`1<SqlScriptUpdateInfo> SetColumnIdentitySeed(SqlSimpleColumn column, SqlDecimal seed);
    public static IList`1<SqlScriptUpdateInfo> SetColumnIdentityIncrement(SqlSimpleColumn column, SqlDecimal increment);
    private static IList`1<SqlScriptUpdateInfo> SetColumnIdentitySeedOrIncrement(SqlSimpleColumn column, SqlDecimal value, bool isValueSeed);
    public IList`1<SqlScriptUpdateInfo> SetColumnDataType(SqlSimpleColumn column, SqlType dataType, Boolean& isNamelessTimestamp);
    public static IList`1<SqlScriptUpdateInfo> SetColumnDataTypeLength(SqlSimpleColumn column, int length, bool isMax);
    public static IList`1<SqlScriptUpdateInfo> SetColumnDataTypePrecision(SqlSimpleColumn column, int precision);
    public static IList`1<SqlScriptUpdateInfo> SetColumnDataTypeScale(SqlSimpleColumn column, int scale);
    public IList`1<SqlScriptUpdateInfo> SetXmlColumnXmlSchema(SqlSimpleColumn column, SqlXmlSchemaCollection xmlSchema);
    internal static IList`1<SqlScriptUpdateInfo> SetCheckConstraintExpression(SqlCheckConstraint checkConstraint, string expression);
    internal static IList`1<SqlScriptUpdateInfo> SetIndexIsClustered(SqlIndex index, bool isClustered);
    internal static IList`1<SqlScriptUpdateInfo> SetIndexIsUnique(SqlIndex index, bool isUnique);
    public static IList`1<SqlScriptUpdateInfo> InsertFullTextIndexColumnAt(SqlFullTextIndex fullTextIndex, int index, SqlColumn column);
    public static IList`1<SqlScriptUpdateInfo> UpdateIndexColumns(SqlIndex sqlIndex, IEnumerable`1<SqlColumn> columns, IEnumerable`1<bool> sortOrder);
    public static IList`1<SqlScriptUpdateInfo> UpdateColumnStoreIndexColumns(SqlColumnStoreIndex sqlColumnStoreIndex, IEnumerable`1<SqlColumn> columns, IEnumerable`1<bool> sortOrder);
    private static List`1<SqlScriptUpdateInfo> UpdateKeyWithImplicitColumn(SqlConstraint constraint, UniqueConstraintDefinition constraintAst, IEnumerable`1<SqlColumn> columns, IEnumerable`1<bool> sortOrder);
    private static void GetScriptFromTokens(ScriptFragmentGenerator sfGen, IList`1<TSqlParserToken> tokenStream, int firstTokenIndex, int lastTokenIndex);
    private static ScriptFragmentGenerator GenerateColumnListInScriptFragmentGenerator(IEnumerable`1<SqlColumn> columns, IEnumerable`1<bool> sortOrder);
    private static List`1<SqlScriptUpdateInfo> UpdateIndexOrKeyColumns(ISqlSpecifiesIndex indexOrKey, IList`1<ColumnWithSortOrder> oldColumnDefinitions, IEnumerable`1<SqlColumn> columns, IEnumerable`1<bool> sortOrder, IList`1<TSqlParserToken> tokenStream);
    private static List`1<SqlScriptUpdateInfo> InsertColumnTokensIntoParanthesis(TSqlFragment firstEntry, TSqlFragment lastEntry, ISqlModelElement statementModelElement, IEnumerable`1<SqlColumn> columns, IEnumerable`1<bool> sortOrder, IList`1<TSqlParserToken> tokenStream);
    private static void GetParenthesesTokens(TSqlFragment firstFragment, TSqlFragment lastFragment, IList`1<TSqlParserToken> tokenStream, Int32& leftParenthesisIndex, Int32& rightParenthesisIndex);
    internal static IList`1<SqlScriptUpdateInfo> SetPrimaryKeyConstraintIsClustered(SqlPrimaryKeyConstraint primaryKeyConstraint, bool isClustered);
    internal static IList`1<SqlScriptUpdateInfo> SetUniqueConstraintIsClustered(SqlUniqueConstraint uniqueConstraint, bool isClustered);
    private static IList`1<SqlScriptUpdateInfo> SetPrimaryKeyOrUniqueConstraintIsClustered(ISqlModelElement constraint, UniqueConstraintDefinition constraintDefinition, bool isClustered);
    internal static IList`1<SqlScriptUpdateInfo> SetColumnExpressionScript(SqlComputedColumn column, string expression);
    public static IList`1<SqlScriptUpdateInfo> SetColumnIsPersisted(SqlComputedColumn column, bool isPersisted);
    internal static IList`1<SqlScriptUpdateInfo> SetColumnIsPersistedNullable(SqlComputedColumn column, bool isPersistedNullable);
    private static void RemoveXmlSchema(ColumnDefinition columnAst, Int32& startOffset, Int32& startLine, Int32& startColumn, Int32& fragmentLength, String& newText);
    private void ReplaceOrInsertXmlSchema(ColumnDefinition columnAst, SqlXmlSchemaCollection xmlSchema, Int32& startOffset, Int32& startLine, Int32& startColumn, Int32& fragmentLength, String& newText);
    public static IList`1<SqlScriptUpdateInfo> SetXmlColumnStyle(SqlSimpleColumn column, bool isXmlDocument);
    private static SqlScriptUpdateItem InsertColumnAtHelper(SqlTable table, int index, ScriptBuilderDelegate columnDefinitionBuilder);
    internal static TSqlFragment[] GetCollatedDefinitionsForTable(TableDefinition tableDef);
    internal static int GetCollatedIndexForDefinition(int index, TSqlFragment[] collatedDefinitions);
    public static IList`1<SqlScriptUpdateInfo> InsertColumnSetAt(SqlTable table, string columnName, int index);
    public static IList`1<SqlScriptUpdateInfo> InsertComputedColumnAt(SqlTable table, string columnName, int index, string expression);
    public static IList`1<SqlScriptUpdateInfo> InsertSimpleColumnAt(SqlTable table, string columnName, int index);
    public static IList`1<SqlScriptUpdateInfo> AddInlineIndex(SqlTable table, string inlineIndexName);
    private static void GenerateInlineIndexScript(ScriptFragmentGenerator sfGen, string inlineIndexName);
    public static IList`1<SqlScriptUpdateInfo> AddCheckConstraint(SqlTable table, string constraintName);
    private static void GenerateCheckConstraintScript(ScriptFragmentGenerator sfGen, string constraintName);
    public static IList`1<SqlScriptUpdateInfo> AddPrimaryKeyConstraint(SqlTable table, string constraintName);
    public static IList`1<SqlScriptUpdateInfo> AddPrimaryKeyConstraint(SqlTable table, IEnumerable`1<SqlColumn> columns);
    public static IList`1<SqlScriptUpdateInfo> AddPrimaryKeyConstraint(SqlTable table, string constraintName, IEnumerable`1<SqlColumn> columns);
    private static void GeneratePrimaryKeyScriptBase(ScriptFragmentGenerator sfGen, string constraintName);
    private static void GenerateHekatonPrimaryKeyConstraintScript(ScriptFragmentGenerator sfGen, string constraintName, IEnumerable`1<SqlColumn> columns);
    private static void GeneratePrimaryKeyConstraintScript(ScriptFragmentGenerator sfGen, string constraintName);
    private static void GeneratePrimaryKeyConstraintScript(ScriptFragmentGenerator sfGen, string constraintName, IEnumerable`1<SqlColumn> columns);
    public static IList`1<SqlScriptUpdateInfo> UpdatePrimaryKeyColumns(SqlPrimaryKeyConstraint primaryKeyConstraint, IEnumerable`1<SqlColumn> columns, IEnumerable`1<bool> sortOrder);
    public static IList`1<SqlScriptUpdateInfo> AddUniqueConstraint(SqlTable table, string constraintName);
    private static void GenerateUniqueConstraintScript(ScriptFragmentGenerator sfGen, string constraintName);
    public static IList`1<SqlScriptUpdateInfo> UpdateUniqueConstraintColumns(SqlUniqueConstraint uniqueConstraint, IEnumerable`1<SqlColumn> columns, IEnumerable`1<bool> sortOrder);
    public static IList`1<SqlScriptUpdateInfo> AddForeignKeyConstraint(SqlTable table, string constraintName);
    internal IList`1<SqlScriptUpdateInfo> AddForeignKeyConstraint(SqlTable table, string constraintName, IEnumerable`1<SqlColumn> referencingColumns, SqlTableBase referencedTable, IEnumerable`1<SqlColumn> referencedColumns);
    private static void GenerateForeignKeyScriptBase(ScriptFragmentGenerator sfGen, string constraintName);
    private static void GenerateForeignKeyScript(ScriptFragmentGenerator sfGen, string constraintName);
    private void GenerateForeignKeyScript(ScriptFragmentGenerator sfGen, string constraintName, IEnumerable`1<SqlColumn> referencingColumns, SqlTableBase referencedTable, IEnumerable`1<SqlColumn> referencedColumns);
    public static IList`1<SqlScriptUpdateInfo> AddDefaultConstraint(SqlSimpleColumn column, string expression);
    private static string GenerateDefaultConstraintScript(string expression);
    private static SqlScriptUpdateInfo CreateScriptUpdateInfo(SqlTable table, ScriptBuilderDelegate constraintDefBuilder);
    public static IList`1<SqlScriptUpdateInfo> SetDefaultConstraintExpression(SqlDefaultConstraint defaultConstraint, string expression);
    public IList`1<SqlScriptUpdateInfo> CreateIndex(SqlTable table, string indexName);
    private string GenerateCreateIndexStatement(SqlTable table, string indexName);
    public IList`1<SqlScriptUpdateInfo> CreateXmlIndex(SqlTable table, string indexName, bool isPrimary);
    private string GenerateCreateXmlIndexStatement(SqlTable table, string indexName, bool isPrimary);
    public IList`1<SqlScriptUpdateInfo> CreateSelectiveXmlIndex(SqlTable table, string indexName, bool isPrimary);
    private string GenerateCreateSelectiveXmlIndexStatement(SqlTable table, string indexName, bool isPrimary);
    public IList`1<SqlScriptUpdateInfo> CreateSpatialIndex(SqlTable table, string indexName);
    private string GenerateCreateSpatialIndexStatement(SqlTable table, string indexName);
    public IList`1<SqlScriptUpdateInfo> CreateFullTextIndex(SqlTable table);
    private string GenerateCreateFullTextIndex(SqlTable table);
    public IList`1<SqlScriptUpdateInfo> CreateColumnStoreIndex(SqlTable table, string indexName);
    private string GenerateCreateColumnStoreIndexStatement(SqlTable table, string indexName);
    public IList`1<SqlScriptUpdateInfo> CreateDmlTrigger(SqlTable table, string dmlTriggerName);
    private string GenerateDmlTriggerStatement(SqlTable table, string dmlTriggerName);
    private void GenerateOnTableSpecForIndex(SqlTable table, ScriptFragmentGenerator sfGen);
    private void GenerateOnTableSpec(SqlTable table, ScriptFragmentGenerator sfGen);
    private void GenerateTriggerNameWithSchema(SqlTable table, string dmlTriggerName, ScriptFragmentGenerator sfGen);
    private static SqlScriptUpdateItem InsertIntoDelimitedParenthesesWrappedList(IList`1<TSqlParserToken> tokenStream, int nextTokenIndex, TSqlFragment[] collection, int index, ScriptBuilderDelegate elementBuilder, bool multiline);
    public static IList`1<SqlScriptUpdateInfo> DeleteColumn(SqlColumn column);
    public static IList`1<SqlScriptUpdateInfo> DeleteIndex(ISqlModelElement index);
    public static IList`1<SqlScriptUpdateInfo> DeleteTrigger(SqlDmlTrigger trigger);
    private static void AppendCollectionWithPlaceholderColumn(ScriptFragmentGenerator sfGen, string placeholderName);
    private string GenerateSchemaQualifiedIdentifier(IModelElement element);
    private static void FindXmlDataTypeTokens(XmlDataTypeReference xmlDataTypeAst, TSqlParserToken& xmlToken, TSqlParserToken& leftParenthesisToken, TSqlParserToken& xmlStyleToken, TSqlParserToken& xmlSchemaBeginToken, TSqlParserToken& xmlSchemaEndToken, TSqlParserToken& rightParenthesisToken);
    private static IList`1<SqlScriptUpdateInfo> SetColumnDataTypeLengthOrPrecision(SqlSimpleColumn column, string lengthOrPrecision);
    private static void GetUpdateInfoForLengthPrecisionScale(SqlDataTypeReference dataTypeAst, Int32& startOffset, Int32& startLine, Int32& startColumn, Int32& fragmentLength);
    private static void PopulatePositionInfoFromToken(TSqlParserToken token, Int32& offset, Int32& line, Int32& column, Int32& length);
    private static void PopulatePositionInfoFromAst(TSqlFragment ast, Int32& offset, Int32& line, Int32& column, Int32& length);
    private string GenerateScriptForDataType(SqlType dataType);
    [ConditionalAttribute("DEBUG")]
private static void DBG_ValidateUpdateItems(IEnumerable`1<SqlScriptUpdateInfo> scriptUpdateList);
    public IList`1<SqlScriptUpdateInfo> AddExtendedProperty(ISqlExtendedPropertyHost host, string name, string value);
    private string GenerateStatementForExtendedProperty(ISqlExtendedPropertyHost host, string name, string value);
    private void AppendNameValuePair(ScriptFragmentGenerator sfGen, string name, string value, bool newLineAndIndent, bool comma);
    public IList`1<SqlScriptUpdateInfo> SetExtendedProperty(SqlExtendedProperty extendedProperty, string value);
    public IList`1<SqlScriptUpdateInfo> SetForeignKeyForeignTable(SqlForeignKeyConstraint constraint, SqlTable referencedTable);
    public static IList`1<SqlScriptUpdateInfo> InsertForeignKeyForeignColumnAt(SqlForeignKeyConstraint constraint, SqlColumn column, int index);
    public static IList`1<SqlScriptUpdateInfo> InsertForeignKeyColumnAt(SqlForeignKeyConstraint constraint, SqlColumn column, int index);
    public static IList`1<SqlScriptUpdateInfo> SetForeignKeyForeignColumn(SqlForeignKeyConstraint constraint, SqlColumn newColumn, int index);
    public static IList`1<SqlScriptUpdateInfo> SetForeignKeyColumn(SqlForeignKeyConstraint constraint, SqlColumn newColumn, int index);
    private static bool DoesForeignKeyKeywordExist(ForeignKeyConstraintDefinition constraintAst);
    private static bool IsConstraintColumnScoped(ForeignKeyConstraintDefinition constraintAst);
    private static SqlScriptUpdateItem ExpandForeignKeyKeyword(SqlForeignKeyConstraint constraint, ForeignKeyConstraintDefinition constraintAst);
    private static SqlScriptUpdateItem ExpandReferencingColumn(SqlForeignKeyConstraint constraint, ForeignKeyConstraintDefinition constraintAst);
    private static SqlScriptUpdateItem ExpandReferencingColumnListForInsert(SqlForeignKeyConstraint constraint, ForeignKeyConstraintDefinition constraintAst, SqlColumn column, int index);
    private static SqlScriptUpdateItem ExpandReferencingColumnListForSet(SqlForeignKeyConstraint constraint, ForeignKeyConstraintDefinition constraintAst, SqlColumn column, int index);
    private static SqlScriptUpdateItem InsertUpdateBeforeReferences(ForeignKeyConstraintDefinition constraintAst, string sourceName, string newText);
    private static SqlScriptUpdateItem ExpandReferencedColumnListForInsert(SqlForeignKeyConstraint constraint, ForeignKeyConstraintDefinition constraintAst, SqlColumn column, int index);
    private static SqlScriptUpdateItem ExpandReferencedColumnListForSet(SqlForeignKeyConstraint constraint, ForeignKeyConstraintDefinition constraintAst, SqlColumn column, int index);
    private static SqlScriptUpdateItem InsertUpdateAfterReferenceTable(ForeignKeyConstraintDefinition constraintAst, string sourceName, string referencedColumnListText);
    private static void GenerateColumnList(ScriptFragmentGenerator sfGen, IList`1<SqlColumn> columns, Action`1<ScriptFragmentGenerator> additionalAppendAction);
    private static string GenerateColumnListWithInsert(IList`1<SqlColumn> columns, SqlColumn columnToBeInserted, int index);
    private static string GenerateColumnListWithSet(IList`1<SqlColumn> columns, SqlColumn columnToBeSet, int index);
    private static void AppendIdentifierLastPart(ScriptFragmentGenerator sfGen, ModelIdentifier name, bool last, Action`1<ScriptFragmentGenerator> additionalAppendAction);
    private static T GetConstraintAst(SqlConstraint constraint);
    private static SqlScriptUpdateItem DeleteModelElementPrimarySource(ISqlModelElement modelElement);
    public static IList`1<SqlScriptUpdateInfo> DeleteExtendedProperty(SqlExtendedProperty extendedProperty);
    private static IList`1<SqlScriptUpdateItem> DeleteConstraintHelper(SqlConstraint constraint);
    public static IList`1<SqlScriptUpdateInfo> DeleteConstraint(SqlConstraint defaultConstraint);
    public static IList`1<SqlScriptUpdateInfo> DeleteTable(SqlTable table);
    public static IList`1<SqlScriptUpdateInfo> DeleteView(SqlView view);
    public static IList`1<SqlScriptUpdateInfo> DeleteSubroutine(SqlSubroutine subroutine);
    private static List`1<SqlScriptUpdateInfo> DeleteCreateAndAlterStatementsForElement(ISqlModelElement element);
    private string GetStringForStringLiteral(string value);
    public static IList`1<SqlScriptUpdateInfo> RenameElement(ISqlModelElement element, string newName);
    private static void VerifyTimestampSpecialCase(ISqlModelElement element, TSqlFragment elementAst);
    private static void RenameTableHierarchicalReferences(Dictionary`2<string, SqlScriptUpdateInfo> scriptUpdateList, SqlTable table, string newName);
    private static void AddUpdateForIdentifierRename(Dictionary`2<string, SqlScriptUpdateInfo> scriptUpdateList, Identifier identifierAst, string newName, ISqlModelElement element);
}
internal class Microsoft.Data.Tools.Schema.Tasks.Sql.DesignServices.SqlDatabaseLocation : ValueType {
    private string _instanceName;
    private string _databaseName;
    private bool _integratedAuth;
    private string _userName;
    private int _hashCode;
    private AuthenticationMethod _authentication;
    public bool Empty { get; }
    public string DatabaseName { get; }
    public string InstanceName { get; }
    public string UserName { get; }
    public bool IntegratedSecurity { get; }
    public AuthenticationMethod Authentication { get; }
    public SqlDatabaseLocation(SqlConnectionStringBuilder connectionString);
    public bool get_Empty();
    public string get_DatabaseName();
    public string get_InstanceName();
    public string get_UserName();
    public bool get_IntegratedSecurity();
    public AuthenticationMethod get_Authentication();
    public static IEqualityComparer`1<SqlDatabaseLocation> CreateComparer();
    internal bool Matches(SqlConnectionStringBuilder connInfo);
}
internal class Microsoft.Data.Tools.Schema.Utilities.Sql.Common.SqlIntegerRange : ValueType {
    private int _begin;
    private int _end;
    public int Begin { get; }
    public int End { get; }
    public SqlIntegerRange(int begin, int end);
    public int get_Begin();
    public int get_End();
}
internal class Microsoft.Data.Tools.Schema.Utilities.Sql.Common.SqlIntegerRangeOverlapComparer : object {
    public sealed virtual int Compare(SqlIntegerRange x, SqlIntegerRange y);
}
public enum Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisModelValidationMode : Enum {
    public int value__;
    public static CodeAnalysisModelValidationMode Full;
    public static CodeAnalysisModelValidationMode None;
}
public class Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult : object {
    private static string CodeAnalysisTask_Column;
    private static string CodeAnalysisTask_Line;
    private static string CodeAnalysisTask_Problem;
    private static string CodeAnalysisTask_ProblemDescription;
    private static string CodeAnalysisTask_Problems;
    private static string CodeAnalysisTask_Rule;
    private static string CodeAnalysisTask_Severity;
    private static string CodeAnalysisTask_SourceFile;
    private List`1<SqlRuleProblem> _problems;
    private List`1<ExtensibilityError> _initializationErrors;
    private List`1<ExtensibilityError> _suppressionErrors;
    private List`1<ExtensibilityError> _analysisErrors;
    [CompilerGeneratedAttribute]
private bool <AnalysisSucceeded>k__BackingField;
    public ReadOnlyCollection`1<SqlRuleProblem> Problems { get; }
    public ReadOnlyCollection`1<ExtensibilityError> AnalysisErrors { get; }
    public ReadOnlyCollection`1<ExtensibilityError> InitializationErrors { get; }
    public ReadOnlyCollection`1<ExtensibilityError> SuppressionErrors { get; }
    public bool AnalysisSucceeded { get; internal set; }
    public ReadOnlyCollection`1<SqlRuleProblem> get_Problems();
    internal void AddProblem(SqlRuleProblem problem);
    internal void AddProblems(IEnumerable`1<SqlRuleProblem> problems);
    public ReadOnlyCollection`1<ExtensibilityError> get_AnalysisErrors();
    internal void AddAnalysisError(ExtensibilityError error);
    public ReadOnlyCollection`1<ExtensibilityError> get_InitializationErrors();
    internal void AddInitializationError(ExtensibilityError error);
    public ReadOnlyCollection`1<ExtensibilityError> get_SuppressionErrors();
    internal void AddSuppressionError(ExtensibilityError error);
    public ReadOnlyCollection`1<ExtensibilityError> GetAllErrors();
    private static void MergeErrors(IList`1<ExtensibilityError> errors, IEnumerable`1<ExtensibilityError> additionalErrors);
    [CompilerGeneratedAttribute]
public bool get_AnalysisSucceeded();
    [CompilerGeneratedAttribute]
internal void set_AnalysisSucceeded(bool value);
    internal void GetTotalErrorCount(Int32& errorCount, Int32& warningCount, Int32& messageCount);
    public void SerializeResultsToXml(string outputFilename);
    public void SerializeResultsToXml(Stream output);
    private void SerializeResultsToXml(Func`2<XmlWriterSettings, XmlWriter> createXmlWriter);
}
public class Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings : object {
    private SortedDictionary`2<string, RuleConfiguration> _rules;
    [CompilerGeneratedAttribute]
private bool <DisableRulesNotInSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Dirty>k__BackingField;
    public bool DisableRulesNotInSettings { get; public set; }
    internal bool Dirty { get; private set; }
    public CodeAnalysisRuleSettings(IEnumerable`1<RuleConfiguration> rules);
    public static CodeAnalysisRuleSettings CreateFromSettingsString(string settingsString, IList`1& errors);
    public string ConvertToSettingsString();
    [CompilerGeneratedAttribute]
public bool get_DisableRulesNotInSettings();
    [CompilerGeneratedAttribute]
public void set_DisableRulesNotInSettings(bool value);
    private void AddRange(IEnumerable`1<RuleConfiguration> rules);
    public void Add(RuleConfiguration item);
    public bool Remove(RuleConfiguration item);
    public sealed virtual IEnumerator`1<RuleConfiguration> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public RuleConfiguration FindConfiguration(string ruleId);
    public bool TryGetRuleConfiguration(string ruleId, RuleConfiguration& config);
    public void ApplySettingsToRules(IEnumerable`1<RuleConfiguration> rules);
    public void EnableRule(string ruleId);
    public void DisableRule(string ruleId);
    public void TreatRuleProblemAsWarning(string ruleId);
    public void TreatRuleProblemAsError(string ruleId);
    public bool IsRuleDisabled(string ruleId);
    public bool IsRuleProblemTreatedAsError(string ruleId);
    [CompilerGeneratedAttribute]
internal bool get_Dirty();
    [CompilerGeneratedAttribute]
private void set_Dirty(bool value);
    private void SetRuleEnabled(string ruleId, bool enabled);
    private void SetRuleSeverity(string ruleId, SqlRuleProblemSeverity severity);
    private bool TryGetRuleAndAssertIfMissing(string ruleId, RuleConfiguration& rule);
}
public class Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService : object {
    private EngineProperties _properties;
    private RuleLoader`1<SqlCodeAnalysisRule> _ruleLoader;
    private CancellationTokenSource _cancellationSource;
    private TSqlModel _model;
    private CodeAnalysisResult _result;
    private RuleEngine _engine;
    private Predicate`1<SqlRuleProblemSuppressionContext> _suppressProblem;
    [CompilerGeneratedAttribute]
private string <ResultsFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeAnalysisSucceededFile>k__BackingField;
    [CompilerGeneratedAttribute]
private CodeAnalysisModelValidationMode <ValidationMode>k__BackingField;
    public string ResultsFile { get; public set; }
    public string CodeAnalysisSucceededFile { get; public set; }
    public CodeAnalysisModelValidationMode ValidationMode { get; public set; }
    public CancellationToken CancellationToken { get; }
    private bool IsCanceled { get; }
    internal CodeAnalysisService(EngineProperties properties);
    [CompilerGeneratedAttribute]
public string get_ResultsFile();
    [CompilerGeneratedAttribute]
public void set_ResultsFile(string value);
    [CompilerGeneratedAttribute]
public string get_CodeAnalysisSucceededFile();
    [CompilerGeneratedAttribute]
public void set_CodeAnalysisSucceededFile(string value);
    [CompilerGeneratedAttribute]
public CodeAnalysisModelValidationMode get_ValidationMode();
    [CompilerGeneratedAttribute]
public void set_ValidationMode(CodeAnalysisModelValidationMode value);
    public IList`1<RuleDescriptor> GetRules();
    public IList`1<ExtensibilityError> GetRuleLoadErrors();
    public void ApplyRuleSettings(CodeAnalysisRuleSettings settings);
    public void SetProblemSuppressor(Predicate`1<SqlRuleProblemSuppressionContext> shouldSuppressProblem);
    public CancellationToken get_CancellationToken();
    public void Cancel();
    public CodeAnalysisResult Analyze(TSqlModel model);
    private bool get_IsCanceled();
    private bool Execute();
    private bool ExecuteStep(Func`1<bool> step);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService/<EnumerateSteps>d__32")]
private IEnumerable`1<Func`1<bool>> EnumerateSteps();
    private bool ExecuteDeleteExistingResultsStep();
    private static void DeleteFileIfNotNull(string filename);
    private bool ExecuteValidateModelIsScriptedStep();
    private bool ExecuteValidateElementStatusStep();
    private bool ExecuteInitializeMessageSuppressionStep();
    private bool SuppressProblemCallback(SqlRuleProblemSuppressionContext context);
    private bool ExecuteLoadEngineStep();
    private bool ExecuteProcessRulesStep();
    private bool ExecuteReportAnalysisResultsStep();
    private bool ExecuteWriteProblemsToXmlStep();
    private bool ExecuteReportSuccessOrFailureStep();
    private bool ProcessErrors(bool isTaskFinished);
    private static void WriteError(string staticCodeAnalysisCategory, ExtensibilityError error, bool treatAsError);
    private void ReportSuppressionError(ExtensibilityError error);
    private void ReportInitializationError(ExtensibilityError error);
    private void ReportAnalysisError(ExtensibilityError error);
    private void ReportInitializationErrors(IEnumerable`1<ExtensibilityError> errors);
    private void ReportAnalysisErrors(IList`1<ExtensibilityError> errors);
}
public class Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceFactory : object {
    public CodeAnalysisService CreateAnalysisService(TSqlModel model);
    public CodeAnalysisService CreateAnalysisService(TSqlModel model, CodeAnalysisServiceSettings settings);
    public CodeAnalysisService CreateAnalysisService(SqlServerVersion version);
    public CodeAnalysisService CreateAnalysisService(SqlServerVersion version, CodeAnalysisServiceSettings settings);
}
public class Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceSettings : object {
    [CompilerGeneratedAttribute]
private CodeAnalysisRuleSettings <RuleSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private Predicate`1<SqlRuleProblemSuppressionContext> <ShouldSuppressProblem>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResultsFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeAnalysisSucceededFile>k__BackingField;
    [CompilerGeneratedAttribute]
private CodeAnalysisModelValidationMode <ValidationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyLookupPath>k__BackingField;
    public CodeAnalysisRuleSettings RuleSettings { get; public set; }
    public Predicate`1<SqlRuleProblemSuppressionContext> ShouldSuppressProblem { get; public set; }
    public string ResultsFile { get; public set; }
    public string CodeAnalysisSucceededFile { get; public set; }
    public CodeAnalysisModelValidationMode ValidationMode { get; public set; }
    public string AssemblyLookupPath { get; public set; }
    [CompilerGeneratedAttribute]
public CodeAnalysisRuleSettings get_RuleSettings();
    [CompilerGeneratedAttribute]
public void set_RuleSettings(CodeAnalysisRuleSettings value);
    [CompilerGeneratedAttribute]
public Predicate`1<SqlRuleProblemSuppressionContext> get_ShouldSuppressProblem();
    [CompilerGeneratedAttribute]
public void set_ShouldSuppressProblem(Predicate`1<SqlRuleProblemSuppressionContext> value);
    [CompilerGeneratedAttribute]
public string get_ResultsFile();
    [CompilerGeneratedAttribute]
public void set_ResultsFile(string value);
    [CompilerGeneratedAttribute]
public string get_CodeAnalysisSucceededFile();
    [CompilerGeneratedAttribute]
public void set_CodeAnalysisSucceededFile(string value);
    [CompilerGeneratedAttribute]
public CodeAnalysisModelValidationMode get_ValidationMode();
    [CompilerGeneratedAttribute]
public void set_ValidationMode(CodeAnalysisModelValidationMode value);
    [CompilerGeneratedAttribute]
public string get_AssemblyLookupPath();
    [CompilerGeneratedAttribute]
public void set_AssemblyLookupPath(string value);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Engine.EngineProperties : CompositionProperties {
    [CompilerGeneratedAttribute]
private string <RuleSettingsString>k__BackingField;
    [CompilerGeneratedAttribute]
private Predicate`1<SqlRuleProblemSuppressionContext> <SuppressProblem>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<bool> <ExecuteCanceled>k__BackingField;
    public string RuleSettingsString { get; public set; }
    public Predicate`1<SqlRuleProblemSuppressionContext> SuppressProblem { get; public set; }
    public Func`1<bool> ExecuteCanceled { get; public set; }
    public EngineProperties(bool useDefaultLocations);
    [CompilerGeneratedAttribute]
public string get_RuleSettingsString();
    [CompilerGeneratedAttribute]
public void set_RuleSettingsString(string value);
    [CompilerGeneratedAttribute]
public Predicate`1<SqlRuleProblemSuppressionContext> get_SuppressProblem();
    [CompilerGeneratedAttribute]
public void set_SuppressProblem(Predicate`1<SqlRuleProblemSuppressionContext> value);
    [CompilerGeneratedAttribute]
public Func`1<bool> get_ExecuteCanceled();
    [CompilerGeneratedAttribute]
public void set_ExecuteCanceled(Func`1<bool> value);
    public bool HasNoExtensionsLookupSet();
    private bool HasCatalogs();
    private bool HasExportProviders();
    public bool ShouldCancelExecution();
    public bool ShouldSuppressProblem(SqlRuleProblemSuppressionContext suppressionContext);
}
internal interface Microsoft.SqlServer.Dac.CodeAnalysis.Engine.IRuleStore {
    public IEnumerable`1<Lazy`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata>> Extensions { get; public set; }
    public abstract virtual IEnumerable`1<Lazy`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata>> get_Extensions();
    public abstract virtual void set_Extensions(IEnumerable`1<Lazy`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata>> value);
    public abstract virtual IList`1<RuleDescriptor> GetRuleDescriptors(IList`1& errors);
}
internal interface Microsoft.SqlServer.Dac.CodeAnalysis.Engine.IRuleStoreFactory`1 {
    public abstract virtual IRuleStore CreateRuleStore(EngineProperties properties, IList`1& errors);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Engine.MefRuleEngineResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ElementsListFormat { get; }
    internal static string InvalidRuleStatusPrefix { get; }
    internal static string MissingSupportedElements { get; }
    internal static string NoSupportedElementsFound { get; }
    internal static string UnsupportedElementsFound { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ElementsListFormat();
    internal static string get_InvalidRuleStatusPrefix();
    internal static string get_MissingSupportedElements();
    internal static string get_NoSupportedElementsFound();
    internal static string get_UnsupportedElementsFound();
}
[DebuggerDisplayAttribute("{RuleId} Scope={Metadata.RuleScope")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleDescriptorImpl : RuleDescriptor {
    private ExtensionDescriptor`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata> _extensionDescriptor;
    public SqlAnalysisRule Rule { get; }
    public ISqlAnalysisRuleMetadata Metadata { get; }
    internal IList`1<ModelTypeClass> SupportedElementTypes { get; }
    internal ExtensionDescriptor`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata> ExtensionDescriptor { get; }
    public RuleDescriptorImpl(ExtensionDescriptor`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata> extensionDescriptor);
    public virtual SqlAnalysisRule get_Rule();
    public virtual ISqlAnalysisRuleMetadata get_Metadata();
    internal virtual IList`1<ModelTypeClass> get_SupportedElementTypes();
    internal virtual ExtensionDescriptor`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata> get_ExtensionDescriptor();
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleEngine : object {
    private EngineProperties _engineProperties;
    private IList`1<RuleDescriptor> _allRuleDescriptions;
    private List`1<RuleDescriptor> _modelRuleDescriptions;
    private List`1<RuleDescriptor> _elementRuleDescriptions;
    private Dictionary`2<ModelTypeClass, ISet`1<RuleDescriptor>> _typeToRulesMap;
    public IList`1<RuleDescriptor> AllRuleDescriptions { get; }
    public IList`1<RuleDescriptor> ModelRuleDescriptions { get; }
    public IList`1<RuleDescriptor> ElementRuleDescriptions { get; }
    public RuleEngine(IList`1<RuleDescriptor> ruleDescriptions, EngineProperties engineProperties);
    public IList`1<RuleDescriptor> get_AllRuleDescriptions();
    public IList`1<RuleDescriptor> get_ModelRuleDescriptions();
    public IList`1<RuleDescriptor> get_ElementRuleDescriptions();
    private void CategorizeRules();
    private Dictionary`2<ModelTypeClass, ISet`1<RuleDescriptor>> MapSchemaTypesToSupportingRules();
    public IList`1<SqlRuleProblem> ExecuteRules(TSqlModel schemaModel, IList`1& errors);
    private IEnumerable`1<SqlRuleProblem> ExecuteModelRules(TSqlModel schemaModel, IList`1<ExtensibilityError> errors);
    private List`1<SqlRuleProblem> ExecuteElementRules(TSqlModel schemaModel, List`1<ExtensibilityError> allErrors);
    private void ExecuteElementRules(TSqlModel schemaModel, List`1<ExtensibilityError> allErrors, IEnumerable`1<TSqlObject> modelElements, ISet`1<RuleDescriptor> rules, List`1<SqlRuleProblem> allProblems);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleEngine/<ExecuteRules>d__18")]
private IEnumerable`1<SqlRuleProblem> ExecuteRules(SqlRuleExecutionContext executionContext, IEnumerable`1<RuleDescriptor> rules, IList`1<ExtensibilityError> allErrors);
    private static void AddToMap(Dictionary`2<ModelTypeClass, ISet`1<RuleDescriptor>> map, ModelTypeClass root, RuleDescriptor ruleThatSupportsType);
    private List`1<SqlRuleProblem> ExecuteSingleRule(RuleDescriptor ruleDescriptor, SqlRuleExecutionContext executionContext, IList`1<ExtensibilityError> errors);
    private List`1<SqlRuleProblem> TryExecuteSingleRule(RuleDescriptor ruleDescriptor, SqlRuleExecutionContext executionContext);
    private static void UpdateProblemSeverity(SqlRuleProblem problem, SqlRuleProblemSeverity ruleMinSeverity);
    private static void InjectMetadata(SqlRuleProblem problem, RuleDescriptor ruleDescriptor);
    private bool IsNotSuppressed(SqlRuleProblem problem, RuleDescriptor ruleDescriptor, SqlRuleExecutionContext executionContext);
    private static bool IsHandledException(Exception ex);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleLoader`1 : object {
    private EngineProperties _engineProperties;
    private List`1<ExtensibilityError> _extensionLoadErrors;
    private IRuleStoreFactory`1<T> _ruleStoreFactory;
    private SortedDictionary`2<string, RuleDescriptor> _ruleDescriptors;
    public RuleLoader`1(EngineProperties engineProperties);
    public static EngineProperties CreateStandardProperties();
    internal void SetRuleStoreFactory(IRuleStoreFactory`1<T> factory);
    private void EnsureRulesLoaded();
    public IList`1<RuleDescriptor> GetAllRules(IList`1& typeLoadErrors);
    public IList`1<ExtensibilityError> GetExtensionLoadErrors();
    public RuleEngine CreateRuleEngine(IList`1& errors);
    private static void AddIfNotNull(List`1<ExtensibilityError> allErrors, IEnumerable`1<ExtensibilityError> loadErrors);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleStore : ExtensionStore`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata> {
    private EngineProperties _properties;
    public RuleStore(IEnumerable`1<Lazy`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata>> rules, EngineProperties properties);
    protected virtual bool ExtensionHasRequiredData(ExtensionDescriptor`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata> extensionDescriptor, List`1<ExtensibilityError> errorList);
    private static string GetFormattedTypeNames(IList`1<ModelTypeClass> types);
    public sealed virtual IList`1<RuleDescriptor> GetRuleDescriptors(IList`1& errors);
    private static ExtensibilityError GetFormattedRuleError(string error, ExtensionDescriptor`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata> ruleDescriptor, Object[] args);
    private static void IncrementDisplayNameCount(string displayName, Dictionary`2<string, int> displayNameCount);
    private static void GenerateWarningForDuplicateRuleNames(Dictionary`2<string, int> displayNameCount, IList`1<ExtensibilityError> errorList);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleStoreFactory`1 : object {
    private static IRuleStoreFactory`1<T> _instance;
    private IExtensionManagerFactory _extensionManagerFactory;
    public static IRuleStoreFactory`1<T> Instance();
    internal void SetExtensionManagerFactory(IExtensionManagerFactory factory);
    public sealed virtual IRuleStore CreateRuleStore(EngineProperties properties, IList`1& errors);
    private ExtensionManager CreateExtensionManager(EngineProperties properties, IList`1& errors);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Engine.SettingsStringProcessor : object {
    private static char EnabledPrefix;
    private static char DisabledPrefix;
    private static char SevErrorPrefix;
    public static string ToSettingsString(IEnumerable`1<RuleConfiguration> rules);
    private static void Append(StringBuilder sb, string fullRuleId, Char[] prefixes);
    public static CodeAnalysisRuleSettings CreateRuleSettingsFromString(string settingString, IList`1& errors);
    public static void UpdateRulesFromSettings(Dictionary`2<string, RuleDescriptor> ruleIdToRuleMap, string settingString, IList`1<ExtensibilityError> errors);
    private static RuleConfiguration GetRule(string ruleSetting, List`1<string> invalidRuleSettings);
    private static void UpdateRule(string ruleSetting, Dictionary`2<string, RuleDescriptor> ruleIdToRuleMap, List`1<string> invalidRuleSettings);
    private static void UpdateRule(string ruleId, Dictionary`2<string, RuleDescriptor> ruleIdToRuleMap, bool enabled, Nullable`1<SqlRuleProblemSeverity> severity);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Engine.SourceCodePositionProvider : object {
    public static bool TryGetSourceInformation(TSqlObject modelElement, SourceInformation& sourceInformation);
    public static bool TryGetSourceInformation(TSqlObject modelElement, TSqlFragment fragment, SourceInformation& sourceInformation);
    private static bool FragmentHasSourceInfo(TSqlFragment fragment);
}
[MetadataAttributeAttribute]
[AttributeUsageAttribute("4")]
public class Microsoft.SqlServer.Dac.CodeAnalysis.ExportCodeAnalysisRuleAttribute : ExportStandardMetadataAttribute {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private SqlRuleScope <RuleScope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    public string Description { get; public set; }
    public SqlRuleScope RuleScope { get; public set; }
    public string Category { get; public set; }
    public ExportCodeAnalysisRuleAttribute(string id, string displayName);
    [CompilerGeneratedAttribute]
public virtual string get_Description();
    [CompilerGeneratedAttribute]
public virtual void set_Description(string value);
    [CompilerGeneratedAttribute]
public sealed virtual SqlRuleScope get_RuleScope();
    [CompilerGeneratedAttribute]
public void set_RuleScope(SqlRuleScope value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
}
internal static class Microsoft.SqlServer.Dac.CodeAnalysis.Internal.RuleUtils : object {
    public static string GetFormattedName(ElementDescriptor descriptor);
    public static bool TryGetModelElementFromPossibilities(IEnumerable`1<PotentialElementDescriptor> potentialDescriptors, TSqlModel model, TSqlObject& sqlElement, ElementDescriptor& sqlElementDescriptor, ElementDescriptorRelevance& relevance);
    internal static bool TryGetTSqlObject(TSqlModel model, ISqlModelElement internalElement, TSqlObject& element);
    public static string GetSchemaObjectName(TSqlModel model, TSqlObject element);
    public static string GetSchemaObjectName(TSqlModel model, ElementDescriptor elementDescriptor);
    public static string GetSchemaObjectName(TSqlModel model, ElementDescriptor elementDescriptor, ElementNameStyle style);
    public static string GetSchemaObjectName(TSqlModel model, TSqlObject element, ElementNameStyle style);
}
internal static class Microsoft.SqlServer.Dac.CodeAnalysis.Internal.TsqlScriptDomUtils : object {
    public static bool IsSubroutineViewOrTrigger(TSqlFragment fragment);
    public static ScalarExpression RemoveParenthesis(ScalarExpression expression);
}
public interface Microsoft.SqlServer.Dac.CodeAnalysis.ISqlAnalysisRuleMetadata {
    public string Description { get; }
    [DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public SqlRuleScope RuleScope { get; }
    public string Category { get; }
    public abstract virtual string get_Description();
    public abstract virtual SqlRuleScope get_RuleScope();
    public abstract virtual string get_Category();
}
public class Microsoft.SqlServer.Dac.CodeAnalysis.ProblemSuppressionException : DacModelException {
    public ProblemSuppressionException(string message);
    public ProblemSuppressionException(string message, Exception innerException);
}
public class Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor : object {
    public static string SuppressionFilename;
    private MessageSuppressionManager _suppressionManager;
    public Predicate`1<SqlRuleProblemSuppressionContext> ShouldSuppressProblem { get; }
    private ProjectProblemSuppressor(MessageSuppressionManager suppressionManager);
    internal static ProjectProblemSuppressor CreateSuppressor(MessageSuppressionFileManager suppressionFileManager);
    public static ProjectProblemSuppressor CreateSuppressor(string projectFolder);
    public static ProjectProblemSuppressor CreateSuppressor(string projectFolder, string suppressionFilename);
    private bool SuppressProblemCallback(SqlRuleProblemSuppressionContext context);
    public Predicate`1<SqlRuleProblemSuppressionContext> get_ShouldSuppressProblem();
    public void ResetSuppressedProblems();
    public void UnsuppressRulesFromFile(string fileName);
    public IList`1<SuppressedProblemInfo> GetSuppressedProblems();
    private static string GetFullId(SuppressedRuleItem suppressedItem);
    public void AddSuppressedProblems(IEnumerable`1<SuppressedProblemInfo> suppressedProblems);
}
[DebuggerDisplayAttribute("id = {RuleId}, enabled ={Enabled}, severity = {Severity}")]
public class Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration : object {
    private string _namespace;
    private string _shortRuleId;
    [CompilerGeneratedAttribute]
private string <RuleId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private SqlRuleProblemSeverity <Severity>k__BackingField;
    public string RuleId { get; private set; }
    public string Namespace { get; }
    public string ShortRuleId { get; }
    public bool Enabled { get; public set; }
    public SqlRuleProblemSeverity Severity { get; public set; }
    public RuleConfiguration(string ruleId);
    public RuleConfiguration(string ruleId, bool enabled, SqlRuleProblemSeverity severity);
    [CompilerGeneratedAttribute]
public string get_RuleId();
    [CompilerGeneratedAttribute]
private void set_RuleId(string value);
    public string get_Namespace();
    public string get_ShortRuleId();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public SqlRuleProblemSeverity get_Severity();
    [CompilerGeneratedAttribute]
public void set_Severity(SqlRuleProblemSeverity value);
}
public abstract class Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor : RuleConfiguration {
    public string DisplayDescription { get; }
    public string DisplayName { get; }
    public SqlAnalysisRule Rule { get; }
    public ISqlAnalysisRuleMetadata Metadata { get; }
    internal IList`1<ModelTypeClass> SupportedElementTypes { get; }
    internal ExtensionDescriptor`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata> ExtensionDescriptor { get; }
    protected RuleDescriptor(string ruleId);
    public string get_DisplayDescription();
    public string get_DisplayName();
    public abstract virtual SqlAnalysisRule get_Rule();
    public abstract virtual ISqlAnalysisRuleMetadata get_Metadata();
    internal abstract virtual IList`1<ModelTypeClass> get_SupportedElementTypes();
    internal abstract virtual ExtensionDescriptor`2<SqlAnalysisRule, ISqlAnalysisRuleMetadata> get_ExtensionDescriptor();
}
public class Microsoft.SqlServer.Dac.CodeAnalysis.RuleException : DacModelException {
    public RuleException(string message);
    public RuleException(string message, Exception innerException);
    private RuleException(SerializationInfo info, StreamingContext context);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.CommonUtilities.ElementNameAstLocatorSchemaAnalyzer : SchemaAnalyzer {
    private bool _check;
    private TSqlObject _targetElement;
    private IModelElement _internalTargetElement;
    private ModelCollationComparer _comparer;
    private bool _includeSchemaName;
    private ElementDescriptor _targetDescriptor;
    [CompilerGeneratedAttribute]
private TSqlFragment <NameAstNode>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlFragment <ElementAstNode>k__BackingField;
    public TSqlFragment NameAstNode { get; private set; }
    public TSqlFragment ElementAstNode { get; private set; }
    public ElementNameAstLocatorSchemaAnalyzer(TSqlObject element, ModelCollationComparer comparer, bool includeSchemaName);
    public ElementNameAstLocatorSchemaAnalyzer(IModelElement internalTargetElement, ModelCollationComparer comparer, bool includeSchemaName);
    [CompilerGeneratedAttribute]
public TSqlFragment get_NameAstNode();
    [CompilerGeneratedAttribute]
private void set_NameAstNode(TSqlFragment value);
    [CompilerGeneratedAttribute]
public TSqlFragment get_ElementAstNode();
    [CompilerGeneratedAttribute]
private void set_ElementAstNode(TSqlFragment value);
    public virtual void IdentifiedElement(TSqlFragment fragment, ElementDescriptor elementDescriptor);
    public virtual void VisitFragment(TSqlFragment fragment, ElementDescriptor elementDescriptor, ElementDescriptorRelevance relevance);
    private bool IsExpectedAst(TSqlFragment fragment);
    private bool EqualNames(ElementDescriptor descriptor, TSqlObject element);
    private bool EqualNames(ElementDescriptor descriptor, IModelElement element);
    private bool EqualNames(ElementDescriptor descriptor, IList`1<string> elementNameParts);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.CommonUtilities.GenericFragmentVisitor`1 : TSqlFragmentVisitor {
    private FragmentHandler<T> _handler;
    public GenericFragmentVisitor`1(FragmentHandler<T> handler);
    public virtual void Visit(TSqlFragment node);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.CommonUtilities.StatementStructuralHelper : object {
    private Dictionary`2<int, StatementInfo> _statementInfo;
    private int _currentLevel;
    private int _offsetOfLastCharacter;
    public StatementStructuralHelper(TSqlStatement statement);
    public ReadOnlyCollection`1<StatementInfo> GetAllStatementInfo();
    public StatementInfo GetStatementInfo(int offset);
    private void AnalyzeStatement(TSqlStatement statement);
    private void AnalyzeStatementBlock(BeginEndBlockStatement statementBlock);
    private void AnalyzeIfStatement(IfStatement ifStatement);
    private void AnalyzeWhileStatement(WhileStatement whileStatement);
    private void AnalyzeTryCatchStatement(TryCatchStatement tryCatchStatement);
    private void AnalyzeStatements(StatementList statementList);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0014", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "DataTypeCompatibility_RuleName", "DataTypeCompatibility_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.DataTypeCompatibilityRule : SqlCodeAnalysisRule {
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.DataTypeCompatibilitySchemaAnalyzer : RuleSchemaAnalyzer {
    private GenericFragmentVisitor`1<WhereClause> _whereClauseVisitor;
    private GenericFragmentVisitor`1<SelectSetVariable> _selectSetVariableVisitor;
    private GenericFragmentVisitor`1<AssignmentSetClause> _assignmentSetClauseItemVisitor;
    private GenericFragmentVisitor`1<TopRowFilter> _topRowFilterVisitor;
    private GenericFragmentVisitor`1<SelectScalarExpression> _selectColumnVisitor;
    private List`1<TSqlFragment> _astNodesContainingTypeInfo;
    private List`1<TSqlFragment> _astNodesToBeTypeChecked;
    private Dictionary`2<int, ElementDescriptor> _offsetToDescriptorMap;
    private Dictionary`2<ElementDescriptor, ColumnDefinition> _localColumnDefinitions;
    private bool _insideProcedureBody;
    public DataTypeCompatibilitySchemaAnalyzer(RuleDescriptor rule, TSqlModel dataSchemaModel, TSqlObject modelElement);
    public virtual void BeginBatch(TSqlBatch batch);
    public virtual void EndBatch(TSqlBatch batch);
    private void RunTypeCompatibilityChecker();
    public virtual void BeginDdlStatement(TSqlFragment fragment);
    public virtual void EndDdlStatement(TSqlFragment fragment);
    public virtual void BeginDmlStatement(TSqlFragment fragment);
    public virtual void IdentifiedElement(TSqlFragment fragment, ElementDescriptor sqlElementDescriptor);
    public virtual void VisitAmbiguousFragment(TSqlFragment fragment, IEnumerable`1<PotentialElementDescriptor> possibilities);
    public virtual void VisitFragment(TSqlFragment fragment, ElementDescriptor sqlElementDescriptor, ElementDescriptorRelevance relevance);
    private void AddFragmentToOffsetDescriptorMap(TSqlFragment fragment, ElementDescriptor sqlElementDescriptor, ElementDescriptorRelevance relevance);
    private void HandleAssignmentSetClauseItem(AssignmentSetClause assignmentSetClauseItem);
    private void HandleSelectSetVariable(SelectSetVariable selectSetVariable);
    private void HandleWhereClause(WhereClause whereClause);
    private void HandleTopRowFilter(TopRowFilter topRowFilter);
    private void HandleSelectColumn(SelectScalarExpression selectColumn);
    private void OnInternalError(object sender, InternalErrorArgs internalErrorArgs);
    private void ReportTypeCastings(ReadOnlyCollection`1<TypeCastingInfo> typeCastings);
    private void ReportTypeCastingProblem(TypeCastingInfo typeCasting);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0008", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "Identity_RuleName", "Identity_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.IdentityRule : SqlCodeAnalysisRule {
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.IdentitySchemaAnalyzer : RuleSchemaAnalyzer {
    private static string IdentityFunciton;
    private bool _checkFragment;
    public IdentitySchemaAnalyzer(RuleDescriptor rule, TSqlModel dataSchemaModel, TSqlObject sqlElement);
    public virtual void BeginDmlStatement(TSqlFragment fragment);
    public virtual void EndDmlStatement(TSqlFragment fragment);
    public virtual void VisitFragment(TSqlFragment fragment, ElementDescriptor sqlElementDescriptor, ElementDescriptorRelevance relevance);
    private void ReportProblem(TSqlFragment identity);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.InternalErrorArgs : EventArgs {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlFragment <AstNode>k__BackingField;
    public string Message { get; private set; }
    public TSqlFragment AstNode { get; private set; }
    public InternalErrorArgs(string message, TSqlFragment astNode);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public TSqlFragment get_AstNode();
    [CompilerGeneratedAttribute]
private void set_AstNode(TSqlFragment value);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0010", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "OldStyleJoinSyntax_RuleName", "OldStyleJoinSyntax_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.OldStyleJoinSyntaxAnalysisRule : SqlCodeAnalysisRule {
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.OldStyleJoinSyntaxSchemaAnalyzer : RuleSchemaAnalyzer {
    private FromClauseVisitor _fromClauseVisitor;
    public OldStyleJoinSyntaxSchemaAnalyzer(RuleDescriptor rule, TSqlModel dataSchemaModel, TSqlObject modelElement);
    public virtual void BeginDdlStatement(TSqlFragment fragment);
    private void ReportProblem(TSqlFragment tableSource);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0013", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "PopulateOutputParameters_RuleName", "PopulateOutputParameters_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.PopulateOutputParametersRule : SqlCodeAnalysisRule {
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.PopulateOutputParametersSchemaAnalyzer : RuleSchemaAnalyzer {
    public PopulateOutputParametersSchemaAnalyzer(RuleDescriptor rule, TSqlModel dataSchemaModel, TSqlObject modelElement);
    public virtual void BeginDdlStatement(TSqlFragment fragment);
    private void ProcessProcedure(ProcedureStatementBody procedureStatementBody);
    private static ReadOnlyCollection`1<Identifier> GetOutputParameters(IList`1<ProcedureParameter> parameters);
    private void ReportProblems(ReadOnlyCollection`1<Identifier> unpopulatedParameters);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.PopulateOutputParametersUtils : object {
    private ModelCollationComparer _comparer;
    public PopulateOutputParametersUtils(ModelCollationComparer comparer);
    public ReadOnlyCollection`1<Identifier> FindUnpopulatedVariables(StatementList statements, IList`1<Identifier> variablesToCheck);
    private Dictionary`2<string, Identifier> CreateVariableNameToIdentifierMap(IList`1<Identifier> identifiers);
    private void RemoveVariablesPopulatedByStatements(IList`1<TSqlStatement> statements, HashSet`1<string> unpopulatedVariables);
    private void RemoveVariablesPopulatedByStatement(TSqlStatement statement, HashSet`1<string> unpopulatedVariables);
    private void RemoveVariablesPopulatedByIfStatement(IfStatement ifStatement, HashSet`1<string> unpopulatedVariables);
    private void RemoveVariablesPopulatedByTryCatchStatements(TryCatchStatement tryCatchStatement, HashSet`1<string> unpopulatedVariables);
    private static void RemoveVariablesPopulatedBySetVariableStatement(SetVariableStatement setVariableStatement, HashSet`1<string> unpopulatedVariables);
    private static void RemoveVariablesPopulatedBySelectStatement(SelectStatement selectStatement, HashSet`1<string> unpopulatedVariables);
    private static ReadOnlyCollection`1<string> GetAssignedVariables(QueryExpression queryExpression);
    private static void RemoveVariablesPopulatedByExecuteStatement(ExecuteStatement executeStatement, HashSet`1<string> unpopulatedVariables);
    private static void RemoveVariablesPopulatedByUpdateStatement(UpdateStatement updateStatement, HashSet`1<string> unpopulatedVariables);
    private void RemoveVariablesPopulatedByTwoBranches(IList`1<TSqlStatement> branch1, IList`1<TSqlStatement> branch2, HashSet`1<string> unpopulatedVariables);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.SelectAsteriskHelperVisitor : TSqlConcreteFragmentVisitor {
    private int _existsBeginOffset;
    private int _existsEndOffset;
    private List`1<SelectStarExpression> _asterisks;
    public ReadOnlyCollection`1<SelectStarExpression> GetAllAsterisks();
    public virtual void Visit(ExistsPredicate node);
    public virtual void Visit(QuerySpecification node);
    private void CheckSelectElement(SelectElement node);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0001", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "SelectAsterisk_RuleName", "SelectAsterisk_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.SelectAsteriskRule : SqlCodeAnalysisRule {
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext ruleExecutionContext);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.SelectAsteriskSchemaAnalyzer : RuleSchemaAnalyzer {
    public SelectAsteriskSchemaAnalyzer(RuleDescriptor rule, TSqlModel dataSchemaModel, TSqlObject modelElement);
    public virtual void BeginDdlStatement(TSqlFragment fragment);
    private void ReportProblem(SelectStarExpression asterisk);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0009", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "SmallVariableLengthTypes_RuleName", "SmallVariableLengthTypes_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.SmallVariableLengthTypesRule : SqlCodeAnalysisRule {
    private static int Threshold;
    private TSqlModel _model;
    private TSqlObject _sqlElement;
    private RuleDescriptor _ruleDescriptor;
    private List`1<SqlRuleProblem> _problems;
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
    private void CheckTableColumns(IList`1<SqlColumn> columns);
    private void CheckFunctionColumns(IList`1<SqlColumn> columns);
    private void CheckColumns(IList`1<SqlColumn> columns);
    private void CheckReturnType(SqlTypeSpecifierBase returnType);
    private void CheckParameters(IList`1<SqlSubroutineParameter> parameters);
    private void CheckUddt(SqlUserDefinedDataType uddt);
    private void CheckDataType(SqlTypeSpecifierBase typeSpecifierBase);
    private void CheckDataType(SqlDataType dataType, ISqlTypeDescriptor typeDescriptor);
    private static void UpdateSourceInfo(ISourceInformation internalSourceInfo, SqlRuleProblem problem);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker : object {
    [CompilerGeneratedAttribute]
private EventHandler`1<InternalErrorArgs> InternalErrorEvent;
    private static TSqlDataTypeInfo _typeInfoForSysname;
    private static Dictionary`2<string, TSqlDataTypeInfo> _systemFunctionTypeInfo;
    private Dictionary`2<ElementDescriptor, TSqlDataTypeInfo> _userDefinedDataTypes;
    private Dictionary`2<ElementDescriptor, TSqlDataTypeInfo> _columnDescriptorToTypeInfoMap;
    private Dictionary`2<ElementDescriptor, Tuple`2<FunctionStatementBody, List`1<TSqlDataTypeInfo>>> _procedureDefinitions;
    private Dictionary`2<Type, TSqlFragmentHandler> _typeInfoCollectors;
    private Dictionary`2<Type, TSqlFragmentHandler> _typeCheckers;
    private TSqlModel _model;
    private TypeEvaluator _typeEvaluator;
    private IList`1<string> _containingElementIdentifiers;
    private TSqlDataTypeInfo _returnTypeInfo;
    private Dictionary`2<int, ElementDescriptor> _offsetToDescriptorMap;
    private Dictionary`2<string, TSqlDataTypeInfo> _variableNameToTypeInfoMap;
    private Dictionary`2<ElementDescriptor, TSqlDataTypeInfo> _localColumnDefinitions;
    private List`1<TypeCastingInfo> _typeCastings;
    private UdtMemberDataTypeResolver _udtMemberDataTypeResolver;
    private string _tvfReturnTableName;
    private static TypeCompatibilityChecker();
    public TypeCompatibilityChecker(TSqlModel model);
    [CompilerGeneratedAttribute]
public void add_InternalErrorEvent(EventHandler`1<InternalErrorArgs> value);
    [CompilerGeneratedAttribute]
public void remove_InternalErrorEvent(EventHandler`1<InternalErrorArgs> value);
    private SqlSchemaModel GetInternalModel();
    private ModelCollationComparer GetInternalComparer();
    public void CheckTypeCompatibility(ReadOnlyCollection`1<TSqlFragment> astNodesContainingTypeInfo, ReadOnlyCollection`1<TSqlFragment> astNodesToBeTypeChecked, Dictionary`2<ElementDescriptor, ColumnDefinition> localColumnDefinitions, Dictionary`2<int, ElementDescriptor> offsetToDescriptorMap, TSqlObject containingElement, ReadOnlyCollection`1& typeCastings);
    private void CollectTypeInfo(ReadOnlyCollection`1<TSqlFragment> fragments);
    private void CollectTypeInfoFromDeclareVariableStatement(TSqlFragment fragment);
    private void CollectTypeInfoFromFunctionBody(TSqlFragment fragment);
    private void CollectTypeInfoFromProcedureBody(TSqlFragment fragment);
    private void CollectParametersTypeInfo(IList`1<ProcedureParameter> parameters);
    private void CollectLocalColumnDefinitions(Dictionary`2<ElementDescriptor, ColumnDefinition> localColumnDefinitions);
    private void TypeCheck(ReadOnlyCollection`1<TSqlFragment> fragments);
    private void CheckWhereClause(TSqlFragment fragment);
    private void CheckIfStatement(TSqlFragment fragment);
    private void CheckWhileStatement(TSqlFragment fragment);
    private void CheckReturnStatement(TSqlFragment fragment);
    private void CheckCreateIndexStatement(TSqlFragment fragment);
    private void CheckProcedureParameter(TSqlFragment fragment);
    private void CheckSetVariableStatement(TSqlFragment fragment);
    private void CheckSelectSetVariable(TSqlFragment fragment);
    private void CheckVariableAssignment(VariableReference variable, TSqlDataTypeInfo fromDataType, TSqlFragment fragmentToReport);
    private void CheckVariableAssignment(VariableReference variable, ScalarExpression expression, AssignmentKind assignmentKind);
    private TSqlDataTypeInfo EvaluateTypeAndAddCastingIssues(TSqlFragment expression);
    private void CheckAssignmentSetClause(TSqlFragment fragment);
    private void CheckTopRowFilter(TSqlFragment fragment);
    private void CheckDeclareVariableElement(TSqlFragment fragment);
    private void CheckSelectColumn(TSqlFragment fragment);
    private void CheckExecuteStatement(TSqlFragment fragment);
    private void CollectParameterInfo(TSqlObject subroutine, IList`1<ExecuteParameter> executeParameterList, ModelCollationComparer comparer, Dictionary`2& parameterNameToTypeMap, ReadOnlyCollection`1& parameterValueInfo);
    private static bool TryGetParameters(TSqlObject subroutine, IEnumerable`1& parameters);
    private static bool TryGetReturnType(TSqlObject element, TSqlDataTypeInfo& returnType);
    private void CheckInsertStatement(TSqlFragment fragment);
    private void CheckInsertFromQueryExpression(ReadOnlyCollection`1<TSqlDataTypeInfo> targetColumnsTypeInfo, QueryExpression source);
    private void CheckMergeStatement(TSqlFragment fragment);
    private ReadOnlyCollection`1<TSqlDataTypeInfo> GetTypeInfoForInsertTarget(InsertStatement insertStatement);
    private static List`1<TSqlDataTypeInfo> GetTypeInfoForAllColumnsOfTable(IModelElement element);
    private void CheckExpressionType(TSqlFragment expression, TSqlDataTypeInfo expectedDataType);
    private void CheckExpressionType(TSqlFragment expression, TSqlDataTypeInfo expectedDataType, TSqlFragment fragmentToReport);
    private void CheckExpressionType(TSqlDataTypeInfo exprDataType, TSqlDataTypeInfo expectedDataType, TSqlFragment fragmentToReport);
    private void AddTypeCastingIssue(TSqlDataTypeInfo fromType, TSqlDataTypeInfo toType, CompatibilityType compatibilityType, TSqlFragment astNode);
    private void RaiseInternalErrorEvent(string message);
    private void RaiseInternalErrorEvent(string message, TSqlFragment astNode);
    private TSqlDataTypeInfo GetTypeInfoForColumn(ColumnReferenceExpression column);
    private TSqlDataTypeInfo GetTypeInfoForColumn(ElementDescriptor columnDescriptor);
    private TSqlDataTypeInfo GetTypeInfoForVariable(string variableName);
    private TSqlDataTypeInfo GetTypeInfoForParserDataType(DataTypeReference dataType);
    private TSqlDataTypeInfo GetTypeInfoForUdtUddt(ElementDescriptor uddtDescriptor);
    private bool TryGetFunctionDefinition(FunctionCall functionCall, FunctionStatementBody& functionBody, List`1& parameterTypes);
    private static bool IsAScalarModule(ElementDescriptor descriptor);
    private ElementDescriptor GetDescriptorFromOffset(int offset);
    private TSqlDataTypeInfo GetTypeInfoForSequenceName(SchemaObjectName name);
    private static SqlElementDescriptor GetInternalDescriptor(ElementDescriptor descriptor);
}
internal static class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityUtils : object {
    public static ActualType CastAndCheckForNull(TSqlFragment fragment);
    public static bool CheckOperandsForUnaryOperator(TSqlFragment expression, List`1<T> operands);
    public static bool CheckOperandsForBinaryOperator(TSqlFragment expression, List`1<T> operands);
    public static bool CheckOperandsForTernaryOperator(TSqlFragment expression, List`1<T> operands);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.LocalizedExportCodeAnalysisRuleAttribute : ExportCodeAnalysisRuleAttribute {
    private string _resourceBaseName;
    private string _displayNameResourceId;
    private string _descriptionResourceId;
    private ResourceManager _resourceManager;
    private string _displayName;
    private string _descriptionValue;
    public string DisplayName { get; }
    public string Description { get; }
    public LocalizedExportCodeAnalysisRuleAttribute(string id, string resourceBaseName, string displayNameResourceId, string descriptionResourceId);
    protected virtual Assembly GetAssembly();
    private void EnsureResourceManagerInitialized();
    private string GetResourceString(string resourceId);
    public virtual string get_DisplayName();
    public virtual string get_Description();
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0012", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "ReservedWordsForTypeName_RuleName", "ReservedWordsForTypeName_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Naming.ReservedWordsForTypeNameAnalysisRule : SqlCodeAnalysisRule {
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Naming.ReservedWordsForTypeNameSchemaAnalyzer : RuleSchemaAnalyzer {
    private ElementDescriptor _targetDescriptor;
    public ReservedWordsForTypeNameSchemaAnalyzer(RuleDescriptor rule, TSqlModel sqlSchemaModel, TSqlObject sqlElement);
    public virtual void IdentifiedElement(TSqlFragment fragment, ElementDescriptor sqlElementDescriptor);
    public virtual void VisitFragment(TSqlFragment fragment, ElementDescriptor sqlElementDescriptor, ElementDescriptorRelevance relevance);
    private void CheckTypeName(string typeName, TSqlFragment astNode);
    private void ReportProblem(string typeName, string keywordType, TSqlFragment typeNameNode);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0011", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "SpecialCharactersInObjectName_RuleName", "SpecialCharactersInObjectName_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Naming.SpecialCharactersInObjectNameRule : SqlCodeAnalysisRule {
    private static Char[] SpecialCharacters;
    private static Dictionary`2<ModelTypeClass, Func`2<TSqlObject, IEnumerable`1<SqlDynamicColumnSource>>> DynamicObjectsLookup;
    private RuleDescriptor _ruleDescriptor;
    private static SpecialCharactersInObjectNameRule();
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
    private void ProcessBodyScriptElements(TSqlModel model, TSqlObject element, IList`1<SqlRuleProblem> problems);
    private void ProcessInternalElement(TSqlModel model, TSqlObject parentElement, IList`1<SqlRuleProblem> problems, SqlModelElement internalSource, TSqlFragment parentAst);
    private void AnalyzeElementAndChildren(TSqlModel model, TSqlObject element, IList`1<SqlRuleProblem> problems);
    private void AnalyzeElement(TSqlModel model, TSqlObject element, IList`1<SqlRuleProblem> problems);
    private static bool HasSpecialCharacters(TSqlObject element, String& name);
    private static bool HasSpecialCharacters(IModelElement element, String& name);
    private static bool HasSpecialCharacters(IList`1<string> nameParts, String& name);
    private static TSqlFragment FindPreciseNameAst(TSqlModel model, TSqlObject element, TSqlFragment parentAst);
    private static TSqlFragment FindAstForName(TSqlModel model, ElementNameAstLocatorSchemaAnalyzer analyzer, TSqlFragment parentAst);
    private static TSqlObject FindTopLevelParent(TSqlObject element);
    private static TSqlFragment GetAst(TSqlObject element);
    private static TSqlFragment GetAst(ISqlModelElement element);
    private SqlRuleProblem CreateProblem(string objectName, TSqlObject element, TSqlFragment astNode);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0016", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "SpPrefixForStoredProcedures_RuleName", "SpPrefixForStoredProcedures_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Naming.SpPrefixForStoredProceduresRule : SqlCodeAnalysisRule {
    private static string SpPrefix;
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.CheckNullableColumnHelper : TSqlConcreteFragmentVisitor {
    private static string IsNull;
    private int _excludeBegin;
    private int _excludeEnd;
    private List`1<ColumnReferenceExpression> _problemColumns;
    private Dictionary`2<int, ElementDescriptor> _columnOffsetToDescriptorMap;
    private Dictionary`2<ElementDescriptor, bool> _columnNullableState;
    private TSqlModel _dataSchemaModel;
    public CheckNullableColumnHelper(TSqlModel dataSchemaModel);
    public ReadOnlyCollection`1<ColumnReferenceExpression> FindNullableColumns(IList`1<TSqlFragment> expressionsToBeChecked, Dictionary`2<int, ElementDescriptor> columnOffsetToDescriptorMap);
    public virtual void ExplicitVisit(ColumnReferenceExpression node);
    public virtual void ExplicitVisit(FunctionCall node);
    public virtual void ExplicitVisit(BooleanIsNullExpression node);
    public virtual void ExplicitVisit(CoalesceExpression node);
    public virtual void ExplicitVisit(QuerySpecification node);
    private bool ColumnIsNullable(ColumnReferenceExpression column);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.ColumnInsideExpressionChecker : TSqlConcreteFragmentVisitor {
    private bool _inExpression;
    private List`1<ColumnReferenceExpression> _problematicColumns;
    public ReadOnlyCollection`1<ColumnReferenceExpression> Check(BooleanExpression expression);
    public virtual void Visit(ColumnReferenceExpression node);
    public virtual void ExplicitVisit(BinaryExpression node);
    public virtual void ExplicitVisit(InPredicate node);
    public virtual void ExplicitVisit(LikePredicate node);
    public virtual void ExplicitVisit(DistinctPredicate node);
    public virtual void ExplicitVisit(BooleanTernaryExpression node);
    public virtual void ExplicitVisit(ParenthesisExpression node);
    public virtual void ExplicitVisit(ScalarSubquery node);
    public virtual void ExplicitVisit(UnaryExpression node);
    public virtual void ExplicitVisit(BooleanBinaryExpression node);
    public virtual void ExplicitVisit(BooleanComparisonExpression node);
    public virtual void ExplicitVisit(BooleanNotExpression node);
    public virtual void ExplicitVisit(BooleanParenthesisExpression node);
    public virtual void ExplicitVisit(SubqueryComparisonPredicate node);
    public virtual void ExplicitVisit(FunctionCall node);
    public virtual void ExplicitVisit(IdentityFunctionCall node);
    public virtual void ExplicitVisit(ExtractFromExpression node);
    public virtual void ExplicitVisit(OdbcConvertSpecification node);
    public virtual void ExplicitVisit(SearchedCaseExpression node);
    public virtual void ExplicitVisit(SimpleCaseExpression node);
    public virtual void ExplicitVisit(CastCall node);
    public virtual void ExplicitVisit(CoalesceExpression node);
    public virtual void ExplicitVisit(ConvertCall node);
    public virtual void ExplicitVisit(ExistsPredicate node);
    public virtual void ExplicitVisit(LeftFunctionCall node);
    public virtual void ExplicitVisit(NullIfExpression node);
    public virtual void ExplicitVisit(OdbcFunctionCall node);
    public virtual void ExplicitVisit(ParameterlessCall node);
    public virtual void ExplicitVisit(PartitionFunctionCall node);
    public virtual void ExplicitVisit(RightFunctionCall node);
    public virtual void ExplicitVisit(DefaultLiteral node);
    public virtual void ExplicitVisit(IdentifierLiteral node);
    public virtual void ExplicitVisit(IntegerLiteral node);
    public virtual void ExplicitVisit(MaxLiteral node);
    public virtual void ExplicitVisit(MoneyLiteral node);
    public virtual void ExplicitVisit(NullLiteral node);
    public virtual void ExplicitVisit(NumericLiteral node);
    public virtual void ExplicitVisit(OdbcLiteral node);
    public virtual void ExplicitVisit(RealLiteral node);
    public virtual void ExplicitVisit(StringLiteral node);
    public virtual void ExplicitVisit(VariableReference node);
    public virtual void ExplicitVisit(GlobalVariableExpression node);
    public virtual void ExplicitVisit(SourceDeclaration node);
    public virtual void ExplicitVisit(BooleanIsNullExpression node);
    public virtual void ExplicitVisit(TSEqualCall node);
    public virtual void ExplicitVisit(UpdateCall node);
    public virtual void ExplicitVisit(UserDefinedTypePropertyAccess node);
    public virtual void ExplicitVisit(EventDeclarationCompareFunctionParameter node);
    public virtual void ExplicitVisit(FullTextPredicate node);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.DeterministicFunctionCallChecker : TSqlConcreteFragmentVisitor {
    private static HashSet`1<string> DeterministicFunctions;
    private List`1<FunctionCall> _deterministicFunctionCalls;
    private bool _currentDeterministicState;
    private static DeterministicFunctionCallChecker();
    public ReadOnlyCollection`1<FunctionCall> FindDeterministicFunctionCalls(BooleanExpression expression);
    public virtual void ExplicitVisit(FunctionCall node);
    public virtual void Visit(ColumnReferenceExpression node);
    public virtual void Visit(ScalarSubquery node);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0015", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "ExtractDeterministicFunctionCall_RuleName", "ExtractDeterministicFunctionCall_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.ExtractDeterministicFunctionCallRule : SqlCodeAnalysisRule {
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.ExtractDeterministicFunctionCallSchemaAnalyzer : RuleSchemaAnalyzer {
    private GenericFragmentVisitor`1<WhereClause> _whereClauseVisitor;
    private DeterministicFunctionCallChecker _deterministicFunctionCallChecker;
    private HashSet`1<FunctionCall> _deterministicFunctionCalls;
    public ExtractDeterministicFunctionCallSchemaAnalyzer(RuleDescriptor rule, TSqlModel dataSchemaModel, TSqlObject modelElement);
    public virtual void BeginDdlStatement(TSqlFragment fragment);
    private void HandleWhereClause(WhereClause whereClause);
    private void ReportProblem(string functionName, FunctionCall functionCall);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0005", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "LikePercent_RuleName", "LikePercent_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.LikePercentRule : SqlCodeAnalysisRule {
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.LikePercentSchemaAnalyzer : RuleSchemaAnalyzer {
    private static string PatternStartingWithPercent;
    private GenericFragmentVisitor`1<LikePredicate> _likePredicateVisitor;
    public LikePercentSchemaAnalyzer(RuleDescriptor rule, TSqlModel dataSchemaModel, TSqlObject modelElement);
    public virtual void BeginDdlStatement(TSqlFragment fragment);
    private void HandleLikePredicate(LikePredicate likePredicate);
    private void ReportProblem(Literal pattern);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0006", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "MoveColumnToOneside_RuleName", "MoveColumnToOneside_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.MoveColumnToOneSideRule : SqlCodeAnalysisRule {
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.MoveColumnToOneSideSchemaAnalyzer : RuleSchemaAnalyzer {
    private GenericFragmentVisitor`1<WhereClause> _whereClauseVisitor;
    private ColumnInsideExpressionChecker _columnInsideExpressionChecker;
    public MoveColumnToOneSideSchemaAnalyzer(RuleDescriptor rule, TSqlModel dataSchemaModel, TSqlObject modelElement);
    public virtual void BeginDdlStatement(TSqlFragment fragment);
    private void HandleWhereClause(WhereClause whereClause);
    private void ReportProblem(ColumnReferenceExpression column);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0004", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "NonIndexedColumnFromInPredicate_RuleName", "NonIndexedColumnFromInPredicate_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.NonIndexedColumnFromInPredicateRule : SqlCodeAnalysisRule {
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.NonIndexedColumnFromInPredicateSchemaAnalyzer : RuleSchemaAnalyzer {
    private bool _lookForDefinition;
    private HashSet`1<int> _columnOffsets;
    private GenericFragmentVisitor`1<InPredicate> _inPredicateVisitor;
    public NonIndexedColumnFromInPredicateSchemaAnalyzer(RuleDescriptor rule, TSqlModel dataSchemaModel, TSqlObject modelElement);
    public virtual void BeginDdlStatement(TSqlFragment fragment);
    public virtual void EndDdlStatement(TSqlFragment fragment);
    public virtual void VisitFragment(TSqlFragment fragment, ElementDescriptor sqlElementDescriptor, ElementDescriptorRelevance relevance);
    public virtual void VisitAmbiguousFragment(TSqlFragment fragment, IEnumerable`1<PotentialElementDescriptor> possibilities);
    private void CheckColumnForProblem(TSqlFragment fragment, ColumnReferenceExpression column, TSqlObject columnElement);
    private void HandleInPredicate(InPredicate inPredicate);
    private static bool ColumnHasIndex(TSqlObject columnElement);
    private static bool IndexIncludesColumn(TSqlObject specifiesIndex, TSqlObject columnElement);
    private void ReportProblem(ColumnReferenceExpression column);
}
[LocalizedExportCodeAnalysisRuleAttribute("Microsoft.Rules.Data.SR0007", "Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString", "NullableColumn_RuleName", "NullableColumn_ProblemDescription")]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.NullableColumnRule : SqlCodeAnalysisRule {
    public virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext context);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.NullableColumnSchemaAnalyzer : RuleSchemaAnalyzer {
    private GenericFragmentVisitor`1<WhereClause> _whereClauseVisitor;
    private CheckNullableColumnHelper _checkNullableColumnHelper;
    private HashSet`1<TSqlFragment> _predicatesWaitingForCheck;
    private Dictionary`2<int, ElementDescriptor> _columnOffsetToDescriptorMap;
    public NullableColumnSchemaAnalyzer(RuleDescriptor rule, TSqlModel dataSchemaModel, TSqlObject modelElement);
    public virtual void BeginDdlStatement(TSqlFragment fragment);
    public virtual void EndDdlStatement(TSqlFragment fragment);
    public virtual void VisitFragment(TSqlFragment fragment, ElementDescriptor sqlElementDescriptor, ElementDescriptorRelevance relevance);
    public virtual void VisitAmbiguousFragment(TSqlFragment fragment, IEnumerable`1<PotentialElementDescriptor> possibilities);
    private void HandleWhereClause(WhereClause whereClause);
    private void ReportProblem(ColumnReferenceExpression column);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string DataTypeCompatibility_ProblemDescription { get; }
    internal static string DataTypeCompatibility_ProblemDescription_CompatibleCasting { get; }
    internal static string DataTypeCompatibility_ProblemDescription_DataLossCasting { get; }
    internal static string DataTypeCompatibility_ProblemDescription_ExplicitConversionReqruied { get; }
    internal static string DataTypeCompatibility_ProblemDescription_IncompatibleCasting { get; }
    internal static string DataTypeCompatibility_ProblemDescription_IncorrectDataType { get; }
    internal static string DataTypeCompatibility_RuleName { get; }
    internal static string ExtractDeterministicFunctionCall_ProblemDescription { get; }
    internal static string ExtractDeterministicFunctionCall_RuleName { get; }
    internal static string Identity_ProblemDescription { get; }
    internal static string Identity_RuleName { get; }
    internal static string LikePercent_ProblemDescription { get; }
    internal static string LikePercent_RuleName { get; }
    internal static string MoveColumnToOneside_ProblemDescription { get; }
    internal static string MoveColumnToOneside_RuleName { get; }
    internal static string NonIndexedColumnFromInPredicate_ProblemDescription { get; }
    internal static string NonIndexedColumnFromInPredicate_RuleName { get; }
    internal static string NullableColumn_ProblemDescription { get; }
    internal static string NullableColumn_RuleName { get; }
    internal static string OldStyleJoinSyntax_ProblemDescription { get; }
    internal static string OldStyleJoinSyntax_RuleName { get; }
    internal static string PopulateOutputParameters_ProblemDescription { get; }
    internal static string PopulateOutputParameters_RuleName { get; }
    internal static string ReservedWordsForTypeName_FutureKeyword { get; }
    internal static string ReservedWordsForTypeName_Keyword { get; }
    internal static string ReservedWordsForTypeName_OdbcKeyword { get; }
    internal static string ReservedWordsForTypeName_ProblemDescription { get; }
    internal static string ReservedWordsForTypeName_RuleName { get; }
    internal static string SelectAsterisk_ProblemDescription { get; }
    internal static string SelectAsterisk_RuleName { get; }
    internal static string SmallVariableLengthTypes_OneElement { get; }
    internal static string SmallVariableLengthTypes_ProblemDescription { get; }
    internal static string SmallVariableLengthTypes_RuleName { get; }
    internal static string SmallVariableLengthTypes_TwoOrMoreElements { get; }
    internal static string SpecialCharactersInObjectName_ProblemDescription { get; }
    internal static string SpecialCharactersInObjectName_RuleName { get; }
    internal static string SpPrefixForStoredProcedures_ProblemDescription { get; }
    internal static string SpPrefixForStoredProcedures_RuleName { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_DataTypeCompatibility_ProblemDescription();
    internal static string get_DataTypeCompatibility_ProblemDescription_CompatibleCasting();
    internal static string get_DataTypeCompatibility_ProblemDescription_DataLossCasting();
    internal static string get_DataTypeCompatibility_ProblemDescription_ExplicitConversionReqruied();
    internal static string get_DataTypeCompatibility_ProblemDescription_IncompatibleCasting();
    internal static string get_DataTypeCompatibility_ProblemDescription_IncorrectDataType();
    internal static string get_DataTypeCompatibility_RuleName();
    internal static string get_ExtractDeterministicFunctionCall_ProblemDescription();
    internal static string get_ExtractDeterministicFunctionCall_RuleName();
    internal static string get_Identity_ProblemDescription();
    internal static string get_Identity_RuleName();
    internal static string get_LikePercent_ProblemDescription();
    internal static string get_LikePercent_RuleName();
    internal static string get_MoveColumnToOneside_ProblemDescription();
    internal static string get_MoveColumnToOneside_RuleName();
    internal static string get_NonIndexedColumnFromInPredicate_ProblemDescription();
    internal static string get_NonIndexedColumnFromInPredicate_RuleName();
    internal static string get_NullableColumn_ProblemDescription();
    internal static string get_NullableColumn_RuleName();
    internal static string get_OldStyleJoinSyntax_ProblemDescription();
    internal static string get_OldStyleJoinSyntax_RuleName();
    internal static string get_PopulateOutputParameters_ProblemDescription();
    internal static string get_PopulateOutputParameters_RuleName();
    internal static string get_ReservedWordsForTypeName_FutureKeyword();
    internal static string get_ReservedWordsForTypeName_Keyword();
    internal static string get_ReservedWordsForTypeName_OdbcKeyword();
    internal static string get_ReservedWordsForTypeName_ProblemDescription();
    internal static string get_ReservedWordsForTypeName_RuleName();
    internal static string get_SelectAsterisk_ProblemDescription();
    internal static string get_SelectAsterisk_RuleName();
    internal static string get_SmallVariableLengthTypes_OneElement();
    internal static string get_SmallVariableLengthTypes_ProblemDescription();
    internal static string get_SmallVariableLengthTypes_RuleName();
    internal static string get_SmallVariableLengthTypes_TwoOrMoreElements();
    internal static string get_SpecialCharactersInObjectName_ProblemDescription();
    internal static string get_SpecialCharactersInObjectName_RuleName();
    internal static string get_SpPrefixForStoredProcedures_ProblemDescription();
    internal static string get_SpPrefixForStoredProcedures_RuleName();
}
internal abstract class Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer : SchemaAnalyzer {
    private List`1<SqlRuleProblem> _problems;
    private RuleDescriptor _rule;
    private TSqlModel _schemaModel;
    private TSqlObject _element;
    public ReadOnlyCollection`1<SqlRuleProblem> Problems { get; }
    protected TSqlModel SchemaModel { get; }
    protected RuleDescriptor Rule { get; }
    protected TSqlObject ModelElement { get; }
    protected RuleSchemaAnalyzer(RuleDescriptor rule, TSqlModel schemaModel, TSqlObject element);
    public virtual void BeginBatch(TSqlBatch batch);
    public virtual void EndBatch(TSqlBatch batch);
    public virtual void BeginDmlStatement(TSqlFragment fragment);
    public virtual void EndDmlStatement(TSqlFragment fragment);
    public virtual void BeginDdlStatement(TSqlFragment fragment);
    public virtual void EndDdlStatement(TSqlFragment fragment);
    public virtual void IdentifiedElement(TSqlFragment fragment, ElementDescriptor elementDescriptor);
    public virtual void VisitFragment(TSqlFragment fragment, ElementDescriptor sqlElementDescriptor, ElementDescriptorRelevance relevance);
    public virtual void VisitAmbiguousFragment(TSqlFragment fragment, IEnumerable`1<PotentialElementDescriptor> possibilities);
    public ReadOnlyCollection`1<SqlRuleProblem> get_Problems();
    public void AnalyzeScriptForSqlRule(TSqlFragment sqlFragment, List`1<SqlRuleProblem> problems);
    public static bool TryGetModelElementFromPossibilities(IEnumerable`1<PotentialElementDescriptor> possibilities, TSqlModel model, TSqlObject& element, ElementDescriptor& elementDescriptor, ElementDescriptorRelevance& relevance);
    protected void AddProblem(SqlRuleProblem problem);
    protected void ClearProblems();
    protected TSqlModel get_SchemaModel();
    protected RuleDescriptor get_Rule();
    protected TSqlObject get_ModelElement();
    [ConditionalAttribute("Debug")]
private static void DebugWriteLine(string msg);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string CodeAnalysis_ModelIsNotScriptBacked { get; }
    internal static string CodeAnalysisTask_Error { get; }
    internal static string CodeAnalysisTask_InvalidElement { get; }
    internal static string CodeAnalysisTask_MultipleProblemsFound { get; }
    internal static string CodeAnalysisTask_NoProblemsFound { get; }
    internal static string CodeAnalysisTask_OneProblemFound { get; }
    internal static string CodeAnalysisTask_ProblemFormat { get; }
    internal static string CodeAnalysisTask_ResultsSavedIn { get; }
    internal static string SqlCodeAnalysisTask_Unknown { get; }
    internal static string SqlCodeAnalysisTask_Warning { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_CodeAnalysis_ModelIsNotScriptBacked();
    internal static string get_CodeAnalysisTask_Error();
    internal static string get_CodeAnalysisTask_InvalidElement();
    internal static string get_CodeAnalysisTask_MultipleProblemsFound();
    internal static string get_CodeAnalysisTask_NoProblemsFound();
    internal static string get_CodeAnalysisTask_OneProblemFound();
    internal static string get_CodeAnalysisTask_ProblemFormat();
    internal static string get_CodeAnalysisTask_ResultsSavedIn();
    internal static string get_SqlCodeAnalysisTask_Unknown();
    internal static string get_SqlCodeAnalysisTask_Warning();
}
public abstract class Microsoft.SqlServer.Dac.CodeAnalysis.SqlAnalysisRule : object {
    [CompilerGeneratedAttribute]
private IList`1<ModelTypeClass> <SupportedElementTypes>k__BackingField;
    public IList`1<ModelTypeClass> SupportedElementTypes { get; protected set; }
    [CompilerGeneratedAttribute]
public IList`1<ModelTypeClass> get_SupportedElementTypes();
    [CompilerGeneratedAttribute]
protected void set_SupportedElementTypes(IList`1<ModelTypeClass> value);
    public abstract virtual IList`1<SqlRuleProblem> Analyze(SqlRuleExecutionContext ruleExecutionContext);
}
internal class Microsoft.SqlServer.Dac.CodeAnalysis.SqlCodeAnalysisConstants : object {
    internal static string StaticCodeAnalysisProblemCategory;
    internal static string StaticCodeAnalysisExecutionErrorCategory;
    internal static string StaticCodeAnalysisRuleLoadingErrorCategory;
    internal static string StaticCodeAnalysisMessageSuppressionErrorCategory;
    public static string Microsoft;
    public static string Namespace;
    public static string ResourceBaseName;
    public static string DataTypeCompatibility_RuleName;
    public static string CategoryDesign;
    public static string CategoryNaming;
    public static string CategoryPerformance;
    public static string DataTypeCompatibility_ProblemDescription;
    public static string Identity_RuleName;
    public static string Identity_ProblemDescription;
    public static string OldStyleJoinSyntax_RuleName;
    public static string OldStyleJoinSyntax_ProblemDescription;
    public static string PopulateOutputParameters_RuleName;
    public static string PopulateOutputParameters_ProblemDescription;
    public static string SelectAsterisk_RuleName;
    public static string SelectAsterisk_ProblemDescription;
    public static string ReservedWordsForTypeName_RuleName;
    public static string ReservedWordsForTypeName_ProblemDescription;
    public static string SpPrefixForStoredProcedures_RuleName;
    public static string SpPrefixForStoredProcedures_ProblemDescription;
    public static string ExtractDeterministicFunctionCall_RuleName;
    public static string ExtractDeterministicFunctionCall_ProblemDescription;
    public static string LikePercent_RuleName;
    public static string LikePercent_ProblemDescription;
    public static string MoveColumnToOneside_RuleName;
    public static string MoveColumnToOneside_ProblemDescription;
    public static string NonIndexedColumnFromInPredicate_RuleName;
    public static string NonIndexedColumnFromInPredicate_ProblemDescription;
    public static string NullableColumn_RuleName;
    public static string NullableColumn_ProblemDescription;
    public static string SpecialCharactersInObjectName_RuleName;
    public static string SpecialCharactersInObjectName_ProblemDescription;
    public static string SmallVariableLengthTypes_RuleName;
    public static string SmallVariableLengthTypes_ProblemDescription;
    public static string HasNoSelectAsteriskRuleId;
    public static string HasNoSelectAsteriskFullRuleId;
    public static string HasPrefixRuleId;
    public static string HasPrefixFullRuleId;
    public static string DataTypeRuleId;
    public static string DataTypeFullRuleId;
    public static string IndexSeekWhenInPredicateRuleId;
    public static string IndexSeekWhenInPredicateFullRuleId;
    public static string LikePredicateRuleId;
    public static string LikePredicateFullRuleId;
    public static string MoveColumnToOneSideRuleId;
    public static string MoveColumnToOneSideFullRuleId;
    public static string NullableColumnRuleId;
    public static string NullableColumnFullRuleId;
    public static string UseIdentityWithCautionRuleId;
    public static string UseIdentityWithCautionFullRuleId;
    public static string AvoidVarTypesOfLengthOneOrTwoRuleId;
    public static string AvoidVarTypesOfLengthOneOrTwoFullRuleId;
    public static string AvoidOldStyleJoinSyntaxRuleId;
    public static string AvoidOldStyleJoinSyntaxFullRuleId;
    public static string AvoidSpecialCharactersInObjectNameRuleId;
    public static string AvoidSpecialCharactersInObjectNameFullRuleId;
    public static string AvoidReservedWordsForTypeNameRuledId;
    public static string AvoidReservedWordsForTypeNameFullRuleId;
    public static string PopulateOutputParametersInAllCodePathsRuleId;
    public static string PopulateOutputParametersInAllCodePathsFullRuleId;
    public static string MaintainDataTypeCompatibilityRuleId;
    public static string MaintainDataTypeCompatibilityFullRuleId;
    public static string ExtractDeterministicFunctionCallFromWherePredicateRuleId;
    public static string ExtractDeterministicFunctionCallFromWherePredicateFullRuleId;
    public static string AvoidSpPrefixForStoredProceduresRuleId;
    public static string AvoidSpPrefixForStoredProceduresFullRuleId;
}
public abstract class Microsoft.SqlServer.Dac.CodeAnalysis.SqlCodeAnalysisRule : SqlAnalysisRule {
}
public class Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext : object {
    private TSqlFragment _scriptFragment;
    [CompilerGeneratedAttribute]
private TSqlModel <SchemaModel>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlObject <ModelElement>k__BackingField;
    [CompilerGeneratedAttribute]
private RuleDescriptor <RuleDescriptor>k__BackingField;
    public TSqlModel SchemaModel { get; private set; }
    public TSqlObject ModelElement { get; private set; }
    public RuleDescriptor RuleDescriptor { get; internal set; }
    public TSqlFragment ScriptFragment { get; }
    internal SqlRuleExecutionContext(TSqlModel schemaModel, TSqlObject modelElement);
    [CompilerGeneratedAttribute]
public TSqlModel get_SchemaModel();
    [CompilerGeneratedAttribute]
private void set_SchemaModel(TSqlModel value);
    [CompilerGeneratedAttribute]
public TSqlObject get_ModelElement();
    [CompilerGeneratedAttribute]
private void set_ModelElement(TSqlObject value);
    [CompilerGeneratedAttribute]
public RuleDescriptor get_RuleDescriptor();
    [CompilerGeneratedAttribute]
internal void set_RuleDescriptor(RuleDescriptor value);
    public TSqlFragment get_ScriptFragment();
}
public class Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem : object {
    [CompilerGeneratedAttribute]
private RuleDescriptor <Rule>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlObject <ModelElement>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlFragment <Fragment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private SqlRuleProblemSeverity <Severity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartLine>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartColumn>k__BackingField;
    internal RuleDescriptor Rule { get; internal set; }
    public string RuleId { get; }
    public string ShortRuleId { get; }
    public TSqlObject ModelElement { get; private set; }
    public TSqlFragment Fragment { get; private set; }
    public string Description { get; private set; }
    public SqlRuleProblemSeverity Severity { get; public set; }
    public string ErrorMessageString { get; }
    public string ShortErrorMessage { get; }
    public string SourceName { get; private set; }
    public int StartLine { get; private set; }
    public int StartColumn { get; private set; }
    public SqlRuleProblem(string description, TSqlObject modelElement);
    public SqlRuleProblem(string description, TSqlObject modelElement, TSqlFragment fragment);
    [CompilerGeneratedAttribute]
internal RuleDescriptor get_Rule();
    [CompilerGeneratedAttribute]
internal void set_Rule(RuleDescriptor value);
    public string get_RuleId();
    public string get_ShortRuleId();
    [CompilerGeneratedAttribute]
public TSqlObject get_ModelElement();
    [CompilerGeneratedAttribute]
private void set_ModelElement(TSqlObject value);
    [CompilerGeneratedAttribute]
public TSqlFragment get_Fragment();
    [CompilerGeneratedAttribute]
private void set_Fragment(TSqlFragment value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
public SqlRuleProblemSeverity get_Severity();
    [CompilerGeneratedAttribute]
public void set_Severity(SqlRuleProblemSeverity value);
    public string get_ErrorMessageString();
    public string get_ShortErrorMessage();
    [CompilerGeneratedAttribute]
public string get_SourceName();
    [CompilerGeneratedAttribute]
private void set_SourceName(string value);
    [CompilerGeneratedAttribute]
public int get_StartLine();
    [CompilerGeneratedAttribute]
private void set_StartLine(int value);
    [CompilerGeneratedAttribute]
public int get_StartColumn();
    [CompilerGeneratedAttribute]
private void set_StartColumn(int value);
    public void SetSourceInformation(SourceInformation sourceInformation);
}
public enum Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSeverity : Enum {
    public int value__;
    public static SqlRuleProblemSeverity Unknown;
    public static SqlRuleProblemSeverity Warning;
    public static SqlRuleProblemSeverity Error;
}
public class Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSuppressionContext : object {
    [CompilerGeneratedAttribute]
private TSqlObject <ModelElement>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlModel <SchemaModel>k__BackingField;
    [CompilerGeneratedAttribute]
private SqlRuleProblem <Problem>k__BackingField;
    [CompilerGeneratedAttribute]
private RuleDescriptor <Rule>k__BackingField;
    public TSqlObject ModelElement { get; private set; }
    public TSqlModel SchemaModel { get; private set; }
    public SqlRuleProblem Problem { get; private set; }
    public RuleDescriptor Rule { get; private set; }
    public SqlRuleProblemSuppressionContext(RuleDescriptor rule, SqlRuleProblem problem, TSqlModel schemaModel);
    [CompilerGeneratedAttribute]
public TSqlObject get_ModelElement();
    [CompilerGeneratedAttribute]
private void set_ModelElement(TSqlObject value);
    [CompilerGeneratedAttribute]
public TSqlModel get_SchemaModel();
    [CompilerGeneratedAttribute]
private void set_SchemaModel(TSqlModel value);
    [CompilerGeneratedAttribute]
public SqlRuleProblem get_Problem();
    [CompilerGeneratedAttribute]
private void set_Problem(SqlRuleProblem value);
    [CompilerGeneratedAttribute]
public RuleDescriptor get_Rule();
    [CompilerGeneratedAttribute]
private void set_Rule(RuleDescriptor value);
}
public enum Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleScope : Enum {
    public int value__;
    public static SqlRuleScope Element;
    public static SqlRuleScope Model;
}
public class Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo : object {
    [CompilerGeneratedAttribute]
private string <SourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private RuleConfiguration <Rule>k__BackingField;
    public string SourceName { get; private set; }
    public RuleConfiguration Rule { get; private set; }
    public SuppressedProblemInfo(string sourceName, RuleConfiguration rule);
    [CompilerGeneratedAttribute]
public string get_SourceName();
    [CompilerGeneratedAttribute]
private void set_SourceName(string value);
    [CompilerGeneratedAttribute]
public RuleConfiguration get_Rule();
    [CompilerGeneratedAttribute]
private void set_Rule(RuleConfiguration value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal static class Microsoft.SqlServer.Dac.Compare.DacExtractTargetUtils : object {
    internal static DacExtractTargetInternal ConvertExtractTargetToInternal(DacExtractTarget extractTarget);
}
public class Microsoft.SqlServer.Dac.Compare.DacSchemaComparisonMessage : DacMessage {
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    public Exception Exception { get; public set; }
    internal DacSchemaComparisonMessage(string message, Exception exception);
    internal DacSchemaComparisonMessage(DataSchemaError original);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
    public virtual string ToString();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ComparisonResultStateDoesNotAllowPublish { get; }
    internal static string ComparisonResultStateDoesNotAllowScriptGeneration { get; }
    internal static string InvalidConnectionString { get; }
    internal static string InvalidDifferenceNode { get; }
    internal static string InvalidUpdateAction { get; }
    internal static string OperationFailedDueToAnUnexpectedException { get; }
    internal static string OperationFailedDueToException0 { get; }
    internal static string OperationFailedDueToSourceDrift { get; }
    internal static string OperationFailedDueToSourceModelErrors { get; }
    internal static string OperationFailedDueToTargetDrift { get; }
    internal static string OperationFailedDueToTargetModelErrors { get; }
    internal static string Path0DoesntContainValidScmpFile { get; }
    internal static string SchemaComparisonOnlySupportsDacpacAndDatabase { get; }
    internal static string UnableToDeserializeScmpFile { get; }
    internal static string UpdateScriptsForDacpacsRequireDbName { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ComparisonResultStateDoesNotAllowPublish();
    internal static string get_ComparisonResultStateDoesNotAllowScriptGeneration();
    internal static string get_InvalidConnectionString();
    internal static string get_InvalidDifferenceNode();
    internal static string get_InvalidUpdateAction();
    internal static string get_OperationFailedDueToAnUnexpectedException();
    internal static string get_OperationFailedDueToException0();
    internal static string get_OperationFailedDueToSourceDrift();
    internal static string get_OperationFailedDueToSourceModelErrors();
    internal static string get_OperationFailedDueToTargetDrift();
    internal static string get_OperationFailedDueToTargetModelErrors();
    internal static string get_Path0DoesntContainValidScmpFile();
    internal static string get_SchemaComparisonOnlySupportsDacpacAndDatabase();
    internal static string get_UnableToDeserializeScmpFile();
    internal static string get_UpdateScriptsForDacpacsRequireDbName();
}
public class Microsoft.SqlServer.Dac.Compare.SchemaCompareDacpacEndpoint : SchemaCompareEndpoint {
    public string FilePath { get; }
    public SchemaCompareDacpacEndpoint(string dacpacFilePath);
    internal SchemaCompareDacpacEndpoint(SchemaCompareParticipantForDacpac dacpacParticipant);
    public string get_FilePath();
}
public class Microsoft.SqlServer.Dac.Compare.SchemaCompareDatabaseEndpoint : SchemaCompareEndpoint {
    public string DatabaseName { get; }
    public SchemaCompareDatabaseEndpoint(string connectionString);
    public SchemaCompareDatabaseEndpoint(string connectionString, SecureString password);
    public SchemaCompareDatabaseEndpoint(string connectionString, IUniversalAuthProvider authProvider);
    internal SchemaCompareDatabaseEndpoint(SqlConnectionFactory connectionFactory);
    internal SchemaCompareDatabaseEndpoint(SchemaCompareParticipantForDatabase databaseParticipant);
    public string get_DatabaseName();
}
public abstract class Microsoft.SqlServer.Dac.Compare.SchemaCompareEndpoint : object {
    [CompilerGeneratedAttribute]
private SchemaCompareParticipant <Participant>k__BackingField;
    internal SchemaCompareParticipant Participant { get; internal set; }
    [CompilerGeneratedAttribute]
internal SchemaCompareParticipant get_Participant();
    [CompilerGeneratedAttribute]
internal void set_Participant(SchemaCompareParticipant value);
}
public class Microsoft.SqlServer.Dac.Compare.SchemaCompareProjectEndpoint : SchemaCompareEndpoint {
    public string ProjectFilePath { get; }
    public SchemaCompareProjectEndpoint(string projectFilePath, String[] targetScripts, string dsp, DacExtractTarget extractTarget);
    internal SchemaCompareProjectEndpoint(string projectFilePath, String[] targetScripts, string dsp, DacExtractTarget extractTarget, bool refreshModelBeforeCompare);
    internal SchemaCompareProjectEndpoint(SchemaCompareParticipantForProject projectParticipant);
    public string get_ProjectFilePath();
}
public class Microsoft.SqlServer.Dac.Compare.SchemaComparePublishProjectResult : object {
    [CompilerGeneratedAttribute]
private String[] <ChangedFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <AddedFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <DeletedFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    public String[] ChangedFiles { get; public set; }
    public String[] AddedFiles { get; public set; }
    public String[] DeletedFiles { get; public set; }
    public bool Success { get; public set; }
    public string ErrorMessage { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_ChangedFiles();
    [CompilerGeneratedAttribute]
public void set_ChangedFiles(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_AddedFiles();
    [CompilerGeneratedAttribute]
public void set_AddedFiles(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_DeletedFiles();
    [CompilerGeneratedAttribute]
public void set_DeletedFiles(String[] value);
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
public void set_Success(bool value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
}
public class Microsoft.SqlServer.Dac.Compare.SchemaComparePublishResult : object {
    [CompilerGeneratedAttribute]
private string <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MasterScript>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<DacSchemaComparisonMessage> <Errors>k__BackingField;
    public string Script { get; internal set; }
    public string MasterScript { get; internal set; }
    public bool Success { get; internal set; }
    public IEnumerable`1<DacSchemaComparisonMessage> Errors { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Script();
    [CompilerGeneratedAttribute]
internal void set_Script(string value);
    [CompilerGeneratedAttribute]
public string get_MasterScript();
    [CompilerGeneratedAttribute]
internal void set_MasterScript(string value);
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
internal void set_Success(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<DacSchemaComparisonMessage> get_Errors();
    [CompilerGeneratedAttribute]
internal void set_Errors(IEnumerable`1<DacSchemaComparisonMessage> value);
}
public class Microsoft.SqlServer.Dac.Compare.SchemaCompareScriptGenerationResult : object {
    [CompilerGeneratedAttribute]
private string <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MasterScript>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    public string Script { get; internal set; }
    public string MasterScript { get; internal set; }
    public bool Success { get; internal set; }
    public string Message { get; internal set; }
    public Exception Exception { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Script();
    [CompilerGeneratedAttribute]
internal void set_Script(string value);
    [CompilerGeneratedAttribute]
public string get_MasterScript();
    [CompilerGeneratedAttribute]
internal void set_MasterScript(string value);
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
internal void set_Success(bool value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
internal void set_Message(string value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
internal void set_Exception(Exception value);
}
public class Microsoft.SqlServer.Dac.Compare.SchemaComparison : object {
    private SchemaCompareDataModel _dataModel;
    private SchemaCompareEndpoint _sourceEndpoint;
    private SchemaCompareEndpoint _targetEndpoint;
    private DacDeployOptions _deployOptions;
    private List`1<SchemaComparisonExcludedObjectId> _excludedSourceObjects;
    private List`1<SchemaComparisonExcludedObjectId> _excludedTargetObjects;
    public SchemaCompareEndpoint Source { get; }
    public SchemaCompareEndpoint Target { get; }
    public IList`1<SchemaComparisonExcludedObjectId> ExcludedSourceObjects { get; }
    public IList`1<SchemaComparisonExcludedObjectId> ExcludedTargetObjects { get; }
    public DacDeployOptions Options { get; public set; }
    internal SchemaCompareDataModel DataModel { get; }
    public SchemaComparison(string scmpFilePath);
    private static SchemaComparison();
    public SchemaComparison(SchemaCompareEndpoint source, SchemaCompareEndpoint target);
    private static SchemaCompareEndpoint GetSchemaCompareEndpoint(ISchemaCompareParticipant participant);
    public SchemaCompareEndpoint get_Source();
    public SchemaCompareEndpoint get_Target();
    public IList`1<SchemaComparisonExcludedObjectId> get_ExcludedSourceObjects();
    public IList`1<SchemaComparisonExcludedObjectId> get_ExcludedTargetObjects();
    public DacDeployOptions get_Options();
    public void set_Options(DacDeployOptions value);
    internal SchemaCompareDataModel get_DataModel();
    public SchemaComparisonResult Compare();
    public SchemaComparisonResult Compare(CancellationToken cancellationToken);
    public void SaveToFile(string filePath, bool overwrite);
    public void SaveToStream(Stream stream);
    private void SetOptions(SchemaCompareDataModel dataModel);
    private SchemaCompareDataModel GetDataModelCopyForComparison();
    private static List`1<SchemaComparisonExcludedObjectId> GetExcludedObjectIds(IEnumerable`1<SchemaCompareElementId> excludedElements);
    private static List`1<SchemaCompareElementId> GetExcludedElementIds(IEnumerable`1<SchemaComparisonExcludedObjectId> excludedObjects);
}
public class Microsoft.SqlServer.Dac.Compare.SchemaComparisonExcludedObjectId : object {
    private string _typeName;
    private ObjectIdentifier _objectId;
    private string _parentTypeName;
    private ObjectIdentifier _parentObjectId;
    public string TypeName { get; }
    public ObjectIdentifier Identifier { get; }
    public string ParentTypeName { get; }
    public ObjectIdentifier ParentIdentifier { get; }
    public SchemaComparisonExcludedObjectId(ModelTypeClass typeClass, ObjectIdentifier identifier);
    public SchemaComparisonExcludedObjectId(ModelTypeClass typeClass, ObjectIdentifier identifier, ModelTypeClass parentTypeClass, ObjectIdentifier parentIdentifier);
    public SchemaComparisonExcludedObjectId(string typeName, ObjectIdentifier identifier);
    public SchemaComparisonExcludedObjectId(string typeName, ObjectIdentifier identifier, string parentTypeName, ObjectIdentifier parentIdentifier);
    private static string GetTypeName(ModelTypeClass typeClass);
    public string get_TypeName();
    public ObjectIdentifier get_Identifier();
    public string get_ParentTypeName();
    public ObjectIdentifier get_ParentIdentifier();
}
public class Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult : object {
    private SchemaCompareDataModel _dataModel;
    private List`1<SchemaDifference> _differences;
    private SqlSchemaModelObjectService _sourceModelService;
    private SqlSchemaModelObjectService _targetModelService;
    private TSqlModel _sourceModel;
    private TSqlModel _targetModel;
    private IDataSchemaModelController _sourceReadOnlyController;
    private IDataSchemaModelController _targetReadOnlyController;
    private static string GO;
    public bool IsValid { get; }
    public bool IsEqual { get; }
    public TSqlModel SourceModel { get; }
    public TSqlModel TargetModel { get; }
    public IEnumerable`1<SchemaDifference> Differences { get; }
    internal SchemaCompareDataModel DataModel { get; }
    internal SqlSchemaModelObjectService SourceModelService { get; }
    internal SqlSchemaModelObjectService TargetModelService { get; }
    internal SchemaComparisonResult(SchemaCompareDataModel dataModel);
    private void BuildDiffTree(List`1<SchemaDifference> differences, SchemaCompareDataModel dataModel);
    private static bool IncludeInTree(SchemaDiffEntry diff);
    public bool get_IsValid();
    public bool get_IsEqual();
    public TSqlModel get_SourceModel();
    public TSqlModel get_TargetModel();
    public IEnumerable`1<SchemaDifference> get_Differences();
    internal SchemaCompareDataModel get_DataModel();
    public bool Include(SchemaDifference node);
    public bool Exclude(SchemaDifference node);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult/<GetErrors>d__26")]
public IEnumerable`1<DacSchemaComparisonMessage> GetErrors();
    public SchemaCompareScriptGenerationResult GenerateScript(string databaseName);
    public SchemaCompareScriptGenerationResult GenerateScript(string databaseName, CancellationToken cancellationToken);
    public IEnumerable`1<SchemaDifference> GetExcludeDependencies(SchemaDifference node);
    public IEnumerable`1<SchemaDifference> GetIncludeDependencies(SchemaDifference node);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult/<GetDependencies>d__31")]
private IEnumerable`1<SchemaDifference> GetDependencies(SchemaDifference node, SchemaNodeAction action);
    private static string ReadFileText(string scriptPath);
    [ObsoleteAttribute("PublishChangesToTarget is deprecated, please use PublishChangesToDatabase instead.")]
public SchemaComparePublishResult PublishChangesToTarget();
    [ObsoleteAttribute("PublishChangesToTarget is deprecated, please use PublishChangesToDatabase instead.")]
public SchemaComparePublishResult PublishChangesToTarget(CancellationToken cancellationToken);
    public SchemaComparePublishResult PublishChangesToDatabase();
    public SchemaComparePublishResult PublishChangesToDatabase(CancellationToken cancellationToken);
    public SchemaComparePublishProjectResult PublishChangesToProject(string projectFolder, DacExtractTarget folderStructure);
    private void ChangeProjectElement(SchemaDifference diff, SqlSchemaModelObjectService sourceService, SqlSchemaModel schemaModel, SqlSchemaModelObjectService targetService, HashSet`1<string> changedFiles, HashSet`1<string> addedFiles, HashSet`1<string> deletedFiles, string projectFolder);
    public string GetDiffEntrySourceScript(SchemaDifference diff);
    public string GetDiffEntryTargetScript(SchemaDifference diff);
    private string GetDiffEntryScript(SchemaDifference diff, SourceOrTarget side);
    private static void AddProjectElement(string projectFolder, DacExtractTarget folderStructure, TSqlObject sourceObject, SqlSchemaModel schemaModel, SqlSchemaModelObjectService sourceService, SchemaDifference diff, HashSet`1<string> addedFiles, HashSet`1<string> changedFiles, string targetFile);
    private static string GetAggregatedScript(SchemaDifference diff, SqlSchemaModelObjectService sourceService, bool getSourceScript);
    private static void DeleteProjectElement(SchemaDifference diff, SqlSchemaModelObjectService targetService, HashSet`1<string> deletedFiles, HashSet`1<string> changedFiles);
    private static string BuildTargetPath(string targetProjectFolder, DacExtractTarget folderStructure, TSqlObject sourceObject, SqlSchemaModel schemaModel);
    private static string GetMessageFromFlags(OperationResultFlags resultFlags);
    internal SqlSchemaModelObjectService get_SourceModelService();
    internal SqlSchemaModelObjectService get_TargetModelService();
}
public class Microsoft.SqlServer.Dac.Compare.SchemaDifference : object {
    private SchemaComparisonResult _comparisonResult;
    private SchemaDiffEntry _diffEntry;
    private SchemaDifference _parent;
    private List`1<SchemaDifference> _children;
    private SchemaDifferenceType _diffType;
    private SchemaUpdateAction _updateAction;
    internal SchemaDiffEntry DiffEntry { get; }
    public SchemaDifferenceType DifferenceType { get; }
    public SchemaUpdateAction UpdateAction { get; }
    public bool Included { get; }
    public bool IsExcludable { get; }
    public SchemaDifference Parent { get; }
    public IEnumerable`1<SchemaDifference> Children { get; }
    public TSqlObject SourceObject { get; }
    public TSqlObject TargetObject { get; }
    public string Name { get; }
    internal SchemaDifference(SchemaComparisonResult comparisonResult, SchemaDiffEntry diffEntry);
    private static void BuildTree(SchemaComparisonResult comparisonResult, SchemaDifference currentNode);
    private static void ProcessDiffEntryChildNode(SchemaComparisonResult comparisonResult, SchemaDifference parentNode, SchemaDiffEntry currentEntry);
    internal SchemaDiffEntry get_DiffEntry();
    public SchemaDifferenceType get_DifferenceType();
    public SchemaUpdateAction get_UpdateAction();
    public bool get_Included();
    public bool get_IsExcludable();
    public SchemaDifference get_Parent();
    public IEnumerable`1<SchemaDifference> get_Children();
    public TSqlObject get_SourceObject();
    public TSqlObject get_TargetObject();
    public string get_Name();
    private TSqlObject GetSourceObject(SchemaDiffEntry entry);
    private TSqlObject GetTargetObject(SchemaDiffEntry entry);
    private static SchemaDifferenceType GetDifferenceType(SchemaDiffEntryType entryType);
    private static SchemaUpdateAction GetUpdateAction(SchemaUpdateType updateType);
}
public enum Microsoft.SqlServer.Dac.Compare.SchemaDifferenceType : Enum {
    public int value__;
    public static SchemaDifferenceType Object;
    public static SchemaDifferenceType Property;
}
internal enum Microsoft.SqlServer.Dac.Compare.SchemaNodeAction : Enum {
    public int value__;
    public static SchemaNodeAction Include;
    public static SchemaNodeAction Exclude;
}
public enum Microsoft.SqlServer.Dac.Compare.SchemaUpdateAction : Enum {
    public int value__;
    public static SchemaUpdateAction Delete;
    public static SchemaUpdateAction Change;
    public static SchemaUpdateAction Add;
}
[ExtensionAttribute]
public static class Microsoft.SqlServer.Dac.DacPackageExtensions : object {
    [ExtensionAttribute]
public static void UpdateModel(DacPackage dacPackage, TSqlModel newModel, PackageMetadata packageMetadata);
    public static void BuildPackage(string packageFilePath, TSqlModel model, PackageMetadata packageMetadata);
    public static void BuildPackage(string packageFilePath, TSqlModel model, PackageMetadata packageMetadata, PackageOptions packageOptions);
    public static void BuildPackage(Stream stream, TSqlModel model, PackageMetadata packageMetadata);
    public static void BuildPackage(Stream stream, TSqlModel model, PackageMetadata packageMetadata, PackageOptions packageOptions);
}
public class Microsoft.SqlServer.Dac.Deployment.AlterElementStep : DeploymentScriptDomStep {
    private SqlSchemaModelObjectService _sourceService;
    private SqlSchemaModelObjectService _targetService;
    public TSqlObject SourceElement { get; }
    public TSqlObject TargetElement { get; }
    internal AlterElementStep(AlterElementStep internalStep, SqlSchemaModelObjectService sourceService, SqlSchemaModelObjectService targetService);
    public TSqlObject get_SourceElement();
    public TSqlObject get_TargetElement();
}
public class Microsoft.SqlServer.Dac.Deployment.BeginPostDeploymentScriptStep : EmptyStep {
    internal BeginPostDeploymentScriptStep(BeginPostDeploymentScriptStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.BeginPreDeploymentScriptStep : EmptyStep {
    internal BeginPreDeploymentScriptStep(BeginPreDeploymentScriptStep internalStep);
}
public abstract class Microsoft.SqlServer.Dac.Deployment.BuildContributor : object {
    internal void Execute(BuildContributorContext ctx, IList`1<ExtensibilityError> messages);
    protected virtual void OnExecute(BuildContributorContext context, IList`1<ExtensibilityError> messages);
}
public class Microsoft.SqlServer.Dac.Deployment.BuildContributorContext : object {
    private Dictionary`2<string, object> _buildProps;
    private ReadOnlyDictionary`2<string, object> _roBuildProps;
    private Dictionary`2<string, string> _args;
    private TSqlModel _buildModel;
    private List`1<ITaskItem> _extensionItems;
    public IDictionary`2<string, object> BuildProperties { get; }
    public IDictionary`2<string, string> Arguments { get; }
    public TSqlModel Model { get; }
    public IList`1<ITaskItem> ExtensionFiles { get; }
    public BuildContributorContext(Dictionary`2<string, object> buildProperties, Dictionary`2<string, string> arguments, TSqlModel buildModel, ITaskItem[] extensionFiles);
    public IDictionary`2<string, object> get_BuildProperties();
    public IDictionary`2<string, string> get_Arguments();
    public TSqlModel get_Model();
    public IList`1<ITaskItem> get_ExtensionFiles();
}
public class Microsoft.SqlServer.Dac.Deployment.BuildFailedException : Exception {
    public BuildFailedException(string message);
    public BuildFailedException(string message, Exception innerException);
}
public class Microsoft.SqlServer.Dac.Deployment.ContributorArgumentConfiguration : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Name { get; public set; }
    public string Value { get; public set; }
    public ContributorArgumentConfiguration(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
internal abstract class Microsoft.SqlServer.Dac.Deployment.ContributorConfigurationSetupService : object {
    public IDictionary`2<string, string> Properties { get; }
    public IDictionary`2<string, string> SqlCmdVariables { get; }
    public abstract virtual IEnumerable`1<DeploymentContributorConfigurationStream> EnumerateInputs();
    public abstract virtual IDictionary`2<string, string> get_Properties();
    public abstract virtual IDictionary`2<string, string> get_SqlCmdVariables();
    public abstract virtual Stream OpenNewOutput(string fileName, IDictionary`2<string, string> metadata);
    public abstract virtual void CopyInputToOutput(DeploymentContributorConfigurationStream input);
}
public class Microsoft.SqlServer.Dac.Deployment.CreateElementStep : DeploymentScriptDomStep {
    private SqlSchemaModelObjectService _sourceService;
    public TSqlObject SourceElement { get; }
    internal CreateElementStep(CreateElementStep internalStep, SqlSchemaModelObjectService sourceService);
    public TSqlObject get_SourceElement();
}
public class Microsoft.SqlServer.Dac.Deployment.DacBulkCopyStep : DeploymentStepInternal {
    internal DacBulkCopyStep(DacBulkCopyStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.DacDeleteFromTablesStep : DeploymentScriptDomStep {
    internal DacDeleteFromTablesStep(DacDeleteFromTablesStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.DacDisableForeignKeysStep : DeploymentScriptDomStep {
    internal DacDisableForeignKeysStep(DacDisableForeignKeysStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.DacDropSystemVersioningStep : DeploymentScriptDomStep {
    internal DacDropSystemVersioningStep(DacDropSystemVersioningStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.DacDropTemporalSchemaBoundElementStep : DeploymentScriptDomStep {
    internal DacDropTemporalSchemaBoundElementStep(DacDropTemporalSchemaBoundElementStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.DacRestoreConstraintsStep : DeploymentScriptDomStep {
    internal DacRestoreConstraintsStep(DacRestoreConstraintsStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.DacRestoreSystemVersioningStep : DeploymentScriptDomStep {
    internal DacRestoreSystemVersioningStep(DacRestoreSystemVersioningStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.DacSaveConstraintsStep : DeploymentScriptDomStep {
    internal DacSaveConstraintsStep(DacSaveConstraintsStep internalStep);
}
public abstract class Microsoft.SqlServer.Dac.Deployment.DeploymentContributor : object {
    private CancellationTokenSource _cancellationSource;
    [CompilerGeneratedAttribute]
private EventHandler`1<DeploymentContributorEventArgs> Message;
    protected bool Canceled { get; }
    protected CancellationToken CancellationToken { get; }
    [CompilerGeneratedAttribute]
internal void add_Message(EventHandler`1<DeploymentContributorEventArgs> value);
    [CompilerGeneratedAttribute]
internal void remove_Message(EventHandler`1<DeploymentContributorEventArgs> value);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    protected bool get_Canceled();
    protected CancellationToken get_CancellationToken();
    protected void PublishMessage(ExtensibilityError message);
    protected virtual void OnEstablishDeploymentConfiguration(DeploymentContributorConfigurationSetup setup);
    protected virtual void OnApplyDeploymentConfiguration(DeploymentContributorContext context, ICollection`1<DeploymentContributorConfigurationStream> configurationStreams);
    public void Cancel();
    internal void EstablishDeploymentConfiguration(DeploymentContributorConfigurationSetup setup);
    internal void ApplyDeploymentConfiguration(DeploymentContributorContext ctx, ICollection`1<DeploymentContributorConfigurationStream> configurationFiles);
}
public class Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationSetup : object {
    private ContributorConfigurationSetupService _configurationSetupService;
    public IDictionary`2<string, string> Properties { get; }
    public IDictionary`2<string, string> SqlCmdVariables { get; }
    internal DeploymentContributorConfigurationSetup(ContributorConfigurationSetupService configurationSetupService);
    public IEnumerable`1<DeploymentContributorConfigurationStream> EnumerateInputs();
    public IDictionary`2<string, string> get_Properties();
    public IDictionary`2<string, string> get_SqlCmdVariables();
    public Stream OpenNewOutput(string fileName, IDictionary`2<string, string> metadata);
    public void CopyInputToOutput(DeploymentContributorConfigurationStream stream);
}
public class Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream : object {
    private Func`1<Stream> _streamGetter;
    private string _filename;
    public string Filename { get; }
    internal DeploymentContributorConfigurationStream(Func`1<Stream> streamGetter, string filename);
    public DeploymentContributorConfigurationStream(string filePath);
    public string get_Filename();
    public Stream GetStream();
}
public class Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext : object {
    private IContributorContextService _contextService;
    public Dictionary`2<string, string> Arguments { get; }
    public SqlDeploymentOptions Options { get; }
    public bool IsAzureSource { get; }
    public bool IsAzureTarget { get; }
    public TSqlModel Source { get; }
    public TSqlModel Target { get; }
    internal DeploymentContributorContext(IContributorContextService contextService);
    public Dictionary`2<string, string> get_Arguments();
    public SqlDeploymentOptions get_Options();
    public bool get_IsAzureSource();
    public bool get_IsAzureTarget();
    public TSqlModel get_Source();
    public TSqlModel get_Target();
}
internal class Microsoft.SqlServer.Dac.Deployment.DeploymentContributorEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private ExtensibilityError <Message>k__BackingField;
    internal ExtensibilityError Message { get; private set; }
    public DeploymentContributorEventArgs(ExtensibilityError message);
    [CompilerGeneratedAttribute]
internal ExtensibilityError get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(ExtensibilityError value);
}
public class Microsoft.SqlServer.Dac.Deployment.DeploymentContributorInformation : object {
    [CompilerGeneratedAttribute]
private string <ExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <Version>k__BackingField;
    public string ExtensionId { get; public set; }
    public Version Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ExtensionId();
    [CompilerGeneratedAttribute]
public void set_ExtensionId(string value);
    [CompilerGeneratedAttribute]
public Version get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Version value);
}
public class Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException : DacModelException {
    public DeploymentFailedException(string message);
    public DeploymentFailedException(string message, Exception innerException);
}
public abstract class Microsoft.SqlServer.Dac.Deployment.DeploymentPlan : object {
    public int StepCount { get; }
    public DeploymentStep Head { get; }
    public DeploymentStep Tail { get; }
    public abstract virtual int get_StepCount();
    public abstract virtual DeploymentStep get_Head();
    public abstract virtual DeploymentStep get_Tail();
    public abstract virtual void AddFirst(DeploymentStep newStep);
    public abstract virtual void AddBefore(DeploymentStep step, DeploymentStep newStep);
    public abstract virtual void AddAfter(DeploymentStep step, DeploymentStep newStep);
    public abstract virtual void AddLast(DeploymentStep newStep);
    public abstract virtual void AddLast(IEnumerable`1<DeploymentStep> steps);
    public abstract virtual void Remove(DeploymentStep step);
}
public abstract class Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributor : DeploymentContributor {
    protected abstract virtual void OnExecute(DeploymentPlanContributorContext context);
    internal void Execute(DeploymentPlanContributorContext ctx);
}
public class Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributorContext : DeploymentContributorContext {
    private IPlanContributorContextService _planContextService;
    public ModelComparisonResult ComparisonResult { get; }
    public DeploymentPlanHandle PlanHandle { get; }
    public string DeploymentMasterPath { get; }
    public string DeploymentScriptPath { get; }
    internal DeploymentPlanContributorContext(IPlanContributorContextService planContextService);
    public ModelComparisonResult get_ComparisonResult();
    public DeploymentPlanHandle get_PlanHandle();
    public string get_DeploymentMasterPath();
    public string get_DeploymentScriptPath();
}
public abstract class Microsoft.SqlServer.Dac.Deployment.DeploymentPlanExecutor : DeploymentPlanContributor {
}
public class Microsoft.SqlServer.Dac.Deployment.DeploymentPlanHandle : object {
    private DeploymentPlan _plan;
    public DeploymentStep Head { get; }
    public DeploymentStep Tail { get; }
    internal DeploymentPlan Plan { get; }
    internal DeploymentPlanHandle(DeploymentPlan plan);
    public DeploymentStep get_Head();
    public DeploymentStep get_Tail();
    internal DeploymentPlan get_Plan();
}
public abstract class Microsoft.SqlServer.Dac.Deployment.DeploymentPlanModifier : DeploymentPlanContributor {
    protected void AddBefore(DeploymentPlanHandle handle, DeploymentStep step, DeploymentStep newStep);
    protected void AddAfter(DeploymentPlanHandle handle, DeploymentStep step, DeploymentStep newStep);
    protected void Remove(DeploymentPlanHandle handle, DeploymentStep step);
}
public class Microsoft.SqlServer.Dac.Deployment.DeploymentScriptDomStep : DeploymentStepInternal {
    public string Message { get; }
    public bool IsMessageInFirstBatch { get; }
    public TSqlFragment Script { get; }
    public SqlScriptGenerator ScriptGenerator { get; }
    internal DeploymentScriptDomStep(DeploymentScriptDomStep internalStep);
    public string get_Message();
    public bool get_IsMessageInFirstBatch();
    public TSqlFragment get_Script();
    public SqlScriptGenerator get_ScriptGenerator();
}
public class Microsoft.SqlServer.Dac.Deployment.DeploymentScriptStep : DeploymentStepInternal {
    public DeploymentScriptStep(string text);
    public DeploymentScriptStep(IEnumerable`1<string> batches);
    internal DeploymentScriptStep(DeploymentScriptStep deploymentScriptStep);
}
public abstract class Microsoft.SqlServer.Dac.Deployment.DeploymentStep : object {
    [CompilerGeneratedAttribute]
private LinkedListNode`1<DeploymentStep> <Container>k__BackingField;
    internal LinkedListNode`1<DeploymentStep> Container { get; internal set; }
    public DeploymentStep Next { get; }
    public DeploymentStep Previous { get; }
    [CompilerGeneratedAttribute]
internal LinkedListNode`1<DeploymentStep> get_Container();
    [CompilerGeneratedAttribute]
internal void set_Container(LinkedListNode`1<DeploymentStep> value);
    public DeploymentStep get_Next();
    public DeploymentStep get_Previous();
    public virtual string ToString();
    public abstract virtual IList`1<string> GenerateTSQL();
    public void GenerateBatchScript(TextWriter tw);
}
public class Microsoft.SqlServer.Dac.Deployment.DeploymentStepInternal : DeploymentStep {
    [CompilerGeneratedAttribute]
private DeploymentStep <WrappedStep>k__BackingField;
    internal DeploymentStep WrappedStep { get; private set; }
    internal DeploymentStepInternal(DeploymentStep internalStep);
    [CompilerGeneratedAttribute]
internal DeploymentStep get_WrappedStep();
    [CompilerGeneratedAttribute]
private void set_WrappedStep(DeploymentStep value);
    public virtual IList`1<string> GenerateTSQL();
    public virtual string ToString();
    internal static TSqlObject GetSqlObject(SqlSchemaModelObjectService service, IModelElement element);
}
public class Microsoft.SqlServer.Dac.Deployment.DropElementStep : DeploymentScriptDomStep {
    private SqlSchemaModelObjectService _targetService;
    public TSqlObject TargetElement { get; }
    internal DropElementStep(DropElementStep internalStep, SqlSchemaModelObjectService targetService);
    public TSqlObject get_TargetElement();
}
public class Microsoft.SqlServer.Dac.Deployment.EmptyStep : DeploymentStepInternal {
    internal EmptyStep(EmptyStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.EndPostDeploymentScriptStep : EmptyStep {
    internal EndPostDeploymentScriptStep(EndPostDeploymentScriptStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.EndPreDeploymentScriptStep : EmptyStep {
    internal EndPreDeploymentScriptStep(EndPreDeploymentScriptStep internalStep);
}
[MetadataAttributeAttribute]
[AttributeUsageAttribute("4")]
public class Microsoft.SqlServer.Dac.Deployment.ExportBuildContributorAttribute : ExportStandardMetadataAttribute {
    public ExportBuildContributorAttribute(string id, string version);
    public ExportBuildContributorAttribute(Type implementingType, string version);
    private void TrySetVersion(string version);
}
[MetadataAttributeAttribute]
[AttributeUsageAttribute("4")]
public class Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanExecutorAttribute : ExportStandardMetadataAttribute {
    public ExportDeploymentPlanExecutorAttribute(string id, string version);
    public ExportDeploymentPlanExecutorAttribute(Type implementingType, string version);
    private void TrySetVersion(string version);
}
[MetadataAttributeAttribute]
[AttributeUsageAttribute("4")]
public class Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanModifierAttribute : ExportStandardMetadataAttribute {
    public ExportDeploymentPlanModifierAttribute(string id, string version);
    public ExportDeploymentPlanModifierAttribute(Type implementingType, string version);
    private void TrySetVersion(string version);
}
internal interface Microsoft.SqlServer.Dac.Deployment.IContributorContextService {
    public Dictionary`2<string, string> Arguments { get; }
    public bool IsAzureSource { get; }
    public bool IsAzureTarget { get; }
    public TSqlModel Source { get; }
    public TSqlModel Target { get; }
    public SqlDeploymentOptions Options { get; }
    public abstract virtual Dictionary`2<string, string> get_Arguments();
    public abstract virtual bool get_IsAzureSource();
    public abstract virtual bool get_IsAzureTarget();
    public abstract virtual TSqlModel get_Source();
    public abstract virtual TSqlModel get_Target();
    public abstract virtual SqlDeploymentOptions get_Options();
}
internal class Microsoft.SqlServer.Dac.Deployment.Internal.ContributorLoader`1 : object {
    private List`1<ExtensibilityError> _extensionLoadErrors;
    private ExtensionManager _extensionManager;
    private Dictionary`2<string, ExtensionDescriptor`2<T, IStandardMetadata>> _contributorDescriptors;
    public ContributorLoader`1(CompositionProperties compositionProperties);
    public static ContributorLoader`1<T> CreateLoader();
    private ExtensionManager CreateNonSharedExtensionManager(CompositionProperties properties);
    private void LoadContributors();
    public Dictionary`2<string, ExtensionDescriptor`2<T, IStandardMetadata>> GetMatchingExtensions(IEnumerable`1<ContributorInfo> requiredContributors, List`1& typeLoadErrors);
    public IList`1<ExtensionDescriptor`2<T, IStandardMetadata>> GetAllExtensions(List`1& typeLoadErrors);
    public IList`1<ContributorInfo> LoadSupportedContributorIds(IEnumerable`1<ContributorInfo> expectedContributors, Dictionary`2& loadedContributors, List`1& loadErrors);
}
internal class Microsoft.SqlServer.Dac.Deployment.Internal.DacContributorConfigurationSetupService : ContributorConfigurationSetupService {
    private string _contributorId;
    private DeploymentContributorConfigurationSetup _internalConfigurationSetup;
    public IDictionary`2<string, string> Properties { get; }
    public IDictionary`2<string, string> SqlCmdVariables { get; }
    public DacContributorConfigurationSetupService(string contributorId, DeploymentContributorConfigurationSetup internalConfigurationSetup);
    public virtual IEnumerable`1<DeploymentContributorConfigurationStream> EnumerateInputs();
    public virtual IDictionary`2<string, string> get_Properties();
    public virtual IDictionary`2<string, string> get_SqlCmdVariables();
    public virtual Stream OpenNewOutput(string fileName, IDictionary`2<string, string> metadata);
    public virtual void CopyInputToOutput(DeploymentContributorConfigurationStream input);
}
internal class Microsoft.SqlServer.Dac.Deployment.Internal.DacContributorContextService : object {
    private DeploymentContributorContext _internalContext;
    private TSqlModel _source;
    private SqlSchemaModelObjectService _sourceService;
    private TSqlModel _target;
    private SqlSchemaModelObjectService _targetService;
    private SqlDeploymentOptions _options;
    public Dictionary`2<string, string> Arguments { get; }
    public CancellationToken CancelToken { get; }
    public bool IsCanceled { get; }
    public bool IsAzureSource { get; }
    public bool IsAzureTarget { get; }
    protected SqlSchemaModelObjectService SourceService { get; }
    public TSqlModel Source { get; }
    protected SqlSchemaModelObjectService TargetService { get; }
    public TSqlModel Target { get; }
    public SqlDeploymentOptions Options { get; }
    public DacContributorContextService(DeploymentContributorContext internalContext);
    public sealed virtual Dictionary`2<string, string> get_Arguments();
    public CancellationToken get_CancelToken();
    public bool get_IsCanceled();
    public sealed virtual bool get_IsAzureSource();
    public sealed virtual bool get_IsAzureTarget();
    protected SqlSchemaModelObjectService get_SourceService();
    public sealed virtual TSqlModel get_Source();
    protected SqlSchemaModelObjectService get_TargetService();
    public sealed virtual TSqlModel get_Target();
    public sealed virtual SqlDeploymentOptions get_Options();
}
internal class Microsoft.SqlServer.Dac.Deployment.Internal.DacModelComparisonChangeDefinitionService : ModelComparisonChangeDefinitionService {
    private ModelComparisonChangeDefinition _internalDefinition;
    private SqlSchemaModelObjectService _targetSchemaModelObjectService;
    public TSqlObject TargetObject { get; }
    public DacModelComparisonChangeDefinitionService(ModelComparisonChangeDefinition internalDefinition, SqlSchemaModelObjectService targetSchemaModelObjectService);
    public virtual TSqlObject get_TargetObject();
}
internal class Microsoft.SqlServer.Dac.Deployment.Internal.DacModelComparisonResultService : ModelComparisonResultService {
    private ModelComparisonResult _internalResult;
    private SqlSchemaModelObjectService _sourceModelService;
    private SqlSchemaModelObjectService _targetModelService;
    private IDictionary`2<TSqlObject, TSqlObject> _elementsEqual;
    private Dictionary`2<IList`1<TSqlObject>, IList`1<TSqlObject>> _elementGroupsEqual;
    private IList`1<TSqlObject> _elementsToAdd;
    private IList`1<TSqlObject> _elementsToDrop;
    private Dictionary`2<TSqlObject, ModelComparisonChangeDefinition> _elementsChanged;
    private IList`1<TSqlObject> _elementsPropertyChanged;
    private IList`1<TSqlObject> _elementsRelationshipEntryChanged;
    private IList`1<TSqlObject> _elementsComposingChildrenChanged;
    private IList`1<TSqlObject> _elementsHierarchicalChildrenChanged;
    public bool IsEqual { get; }
    public IDictionary`2<TSqlObject, TSqlObject> ElementsEqual { get; }
    public IDictionary`2<IList`1<TSqlObject>, IList`1<TSqlObject>> ElementGroupsEqual { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsToAdd { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsToDrop { get; }
    public IDictionary`2<TSqlObject, ModelComparisonChangeDefinition> ElementsChanged { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsPropertyChanged { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsRelationshipEntryChanged { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsComposingChildrenChanged { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsHierarchicalChildrenChanged { get; }
    public DacModelComparisonResultService(ModelComparisonResult internalResult, SqlSchemaModelObjectService sourceModelService, SqlSchemaModelObjectService targetModelService);
    public virtual bool get_IsEqual();
    public virtual IDictionary`2<TSqlObject, TSqlObject> get_ElementsEqual();
    private Dictionary`2<TSqlObject, TSqlObject> CopyToTSqlObjectMap(IDictionary`2<IModelElement, IModelElement> elementMap);
    public virtual IDictionary`2<IList`1<TSqlObject>, IList`1<TSqlObject>> get_ElementGroupsEqual();
    private static List`1<TSqlObject> CopyToTSqlObjectList(IEnumerable`1<IModelElement> internalElements, SqlSchemaModelObjectService modelService);
    public virtual ReadOnlyCollection`1<TSqlObject> get_ElementsToAdd();
    public virtual ReadOnlyCollection`1<TSqlObject> get_ElementsToDrop();
    public virtual IDictionary`2<TSqlObject, ModelComparisonChangeDefinition> get_ElementsChanged();
    public virtual ReadOnlyCollection`1<TSqlObject> get_ElementsPropertyChanged();
    public virtual ReadOnlyCollection`1<TSqlObject> get_ElementsRelationshipEntryChanged();
    public virtual ReadOnlyCollection`1<TSqlObject> get_ElementsComposingChildrenChanged();
    public virtual ReadOnlyCollection`1<TSqlObject> get_ElementsHierarchicalChildrenChanged();
}
internal class Microsoft.SqlServer.Dac.Deployment.Internal.DacPlanContributorContextService : DacContributorContextService {
    private DeploymentPlanContributorContext _internalContext;
    private ModelComparisonResult _modelComparisonResult;
    private DeploymentPlanHandle _planHandle;
    public ModelComparisonResult ComparisonResult { get; }
    public DeploymentPlanHandle PlanHandle { get; }
    public string DeploymentMasterPath { get; }
    public string DeploymentScriptPath { get; }
    public DacPlanContributorContextService(DeploymentPlanContributorContext internalContext);
    public sealed virtual ModelComparisonResult get_ComparisonResult();
    public sealed virtual DeploymentPlanHandle get_PlanHandle();
    public sealed virtual string get_DeploymentMasterPath();
    public sealed virtual string get_DeploymentScriptPath();
}
internal class Microsoft.SqlServer.Dac.Deployment.Internal.DacSqlDeploymentOptionsService : SqlDeploymentOptionsService {
    private SqlDeploymentOptions _options;
    public bool AllowDropBlockingAssemblies { get; }
    public bool AllowExternalLanguagePaths { get; }
    public bool AllowExternalLibraryPaths { get; }
    public bool AllowIncompatiblePlatform { get; }
    public bool BackupDatabaseBeforeChanges { get; }
    public bool IgnoreIndexesStatisticsOnEnclaveEnabledColumns { get; }
    public bool BlockOnPossibleDataLoss { get; }
    public bool BlockWhenDriftDetected { get; }
    public bool CommentOutSetVarDeclarations { get; }
    public bool CompareUsingTargetCollation { get; }
    public bool CreateNewDatabase { get; }
    public bool DeployDatabaseInSingleUserMode { get; }
    public bool DisableAndReenableDdlTriggers { get; }
    public bool DoNotAlterChangeDataCaptureObjects { get; }
    public bool DoNotAlterReplicatedObjects { get; }
    public bool DropConstraintsNotInSource { get; }
    public bool DropDmlTriggersNotInSource { get; }
    public bool DropExtendedPropertiesNotInSource { get; }
    public bool AllowTableRecreation { get; }
    public bool DropIndexesNotInSource { get; }
    public bool DropObjectsNotInSource { get; }
    public bool DropPermissionsNotInSource { get; }
    public bool DropRoleMembersNotInSource { get; }
    public bool DoNotDropDatabaseWorkloadGroups { get; }
    public bool DoNotDropWorkloadClassifiers { get; }
    public bool IgnoreDatabaseWorkloadGroups { get; }
    public bool IgnoreWorkloadClassifiers { get; }
    public bool DropStatisticsNotInSource { get; }
    public bool GenerateSmartDefaults { get; }
    public bool HashObjectNamesInLogs { get; }
    public bool IgnoreAnsiNulls { get; }
    public bool IgnoreAuthorizer { get; }
    public bool IgnoreColumnCollation { get; }
    public bool IgnoreColumnOrder { get; }
    public bool IgnoreComments { get; }
    public bool IgnoreCryptographicProviderFilePath { get; }
    public bool IgnoreDdlTriggerOrder { get; }
    public bool IgnoreDdlTriggerState { get; }
    public bool IgnoreDefaultSchema { get; }
    public bool IgnoreDmlTriggerOrder { get; }
    public bool IgnoreDmlTriggerState { get; }
    public bool IgnoreExtendedProperties { get; }
    public bool IgnoreFileAndLogFilePath { get; }
    public bool IgnoreFilegroupPlacement { get; }
    public bool IgnoreFileSize { get; }
    public bool IgnoreFillFactor { get; }
    public bool IgnoreFullTextCatalogFilePath { get; }
    public bool IgnoreIdentitySeed { get; }
    public bool IgnoreIncrement { get; }
    public bool IgnoreIndexOptions { get; }
    public bool IgnoreIndexPadding { get; }
    public bool IgnoreKeywordCasing { get; }
    public bool IgnoreLockHintsOnIndexes { get; }
    public bool IgnoreLoginSids { get; }
    public bool IgnoreNotForReplication { get; }
    public bool IgnoreObjectPlacementOnPartitionScheme { get; }
    public bool IgnorePartitionSchemes { get; }
    public bool DoNotEvaluateSqlCmdVariables { get; }
    public bool IgnoreTablePartitionOptions { get; }
    public bool IgnorePermissions { get; }
    public bool IgnoreQuotedIdentifiers { get; }
    public bool IgnoreRoleMembership { get; }
    public bool IgnoreRouteLifetime { get; }
    public bool IgnoreSemicolonBetweenStatements { get; }
    public bool IgnoreSensitivityClassifications { get; }
    public bool IgnoreTableOptions { get; }
    public bool IgnoreUserSettingsObjects { get; }
    public bool IgnoreWhitespace { get; }
    public bool IgnoreWithNocheckOnCheckConstraints { get; }
    public bool IgnoreWithNocheckOnForeignKeys { get; }
    public bool IncludeCompositeObjects { get; }
    public bool IncludeTransactionalScripts { get; }
    public bool IsAlwaysEncryptedParameterizationEnabled { get; }
    public bool NoAlterStatementsToChangeClrTypes { get; }
    public bool PopulateFilesOnFileGroups { get; }
    public bool PreserveIdentityLastValues { get; }
    public bool PerformIndexOperationsOnline { get; }
    public bool RegisterDataTierApplication { get; }
    public bool RestoreSequenceCurrentValue { get; }
    public bool ScriptDatabaseCollation { get; }
    public bool ScriptDatabaseCompatibility { get; }
    public bool ScriptDatabaseOptions { get; }
    public bool ScriptDeployStateChecks { get; }
    public bool ScriptFileSize { get; }
    public bool ScriptNewConstraintValidation { get; }
    public bool ScriptRefreshModule { get; }
    public string TargetConnectionString { get; }
    public Nullable`1<bool> TargetDatabaseExists { get; }
    public string TargetDatabaseName { get; }
    public bool TargetingServerless { get; }
    public bool TreatVerificationErrorsAsWarnings { get; }
    public bool UnmodifiableObjectWarnings { get; }
    public bool VerifyCollationCompatibility { get; }
    public bool VerifyDeployment { get; }
    public IDictionary`2<string, string> SqlCommandVariableValues { get; }
    internal DacSqlDeploymentOptionsService(SqlDeploymentOptions sqlDeploymentOptions);
    public virtual bool get_AllowDropBlockingAssemblies();
    public virtual bool get_AllowExternalLanguagePaths();
    public virtual bool get_AllowExternalLibraryPaths();
    public virtual bool get_AllowIncompatiblePlatform();
    public virtual bool get_BackupDatabaseBeforeChanges();
    public virtual bool get_IgnoreIndexesStatisticsOnEnclaveEnabledColumns();
    public virtual bool get_BlockOnPossibleDataLoss();
    public virtual bool get_BlockWhenDriftDetected();
    public virtual bool get_CommentOutSetVarDeclarations();
    public virtual bool get_CompareUsingTargetCollation();
    public virtual bool get_CreateNewDatabase();
    public virtual bool get_DeployDatabaseInSingleUserMode();
    public virtual bool get_DisableAndReenableDdlTriggers();
    public virtual bool get_DoNotAlterChangeDataCaptureObjects();
    public virtual bool get_DoNotAlterReplicatedObjects();
    public virtual bool get_DropConstraintsNotInSource();
    public virtual bool get_DropDmlTriggersNotInSource();
    public virtual bool get_DropExtendedPropertiesNotInSource();
    public virtual bool get_AllowTableRecreation();
    public virtual bool get_DropIndexesNotInSource();
    public virtual bool get_DropObjectsNotInSource();
    public virtual bool get_DropPermissionsNotInSource();
    public virtual bool get_DropRoleMembersNotInSource();
    public virtual bool get_DoNotDropDatabaseWorkloadGroups();
    public virtual bool get_DoNotDropWorkloadClassifiers();
    public virtual bool get_IgnoreDatabaseWorkloadGroups();
    public virtual bool get_IgnoreWorkloadClassifiers();
    public virtual bool get_DropStatisticsNotInSource();
    public virtual bool get_GenerateSmartDefaults();
    public virtual bool get_HashObjectNamesInLogs();
    public virtual bool get_IgnoreAnsiNulls();
    public virtual bool get_IgnoreAuthorizer();
    public virtual bool get_IgnoreColumnCollation();
    public virtual bool get_IgnoreColumnOrder();
    public virtual bool get_IgnoreComments();
    public virtual bool get_IgnoreCryptographicProviderFilePath();
    public virtual bool get_IgnoreDdlTriggerOrder();
    public virtual bool get_IgnoreDdlTriggerState();
    public virtual bool get_IgnoreDefaultSchema();
    public virtual bool get_IgnoreDmlTriggerOrder();
    public virtual bool get_IgnoreDmlTriggerState();
    public virtual bool get_IgnoreExtendedProperties();
    public virtual bool get_IgnoreFileAndLogFilePath();
    public virtual bool get_IgnoreFilegroupPlacement();
    public virtual bool get_IgnoreFileSize();
    public virtual bool get_IgnoreFillFactor();
    public virtual bool get_IgnoreFullTextCatalogFilePath();
    public virtual bool get_IgnoreIdentitySeed();
    public virtual bool get_IgnoreIncrement();
    public virtual bool get_IgnoreIndexOptions();
    public virtual bool get_IgnoreIndexPadding();
    public virtual bool get_IgnoreKeywordCasing();
    public virtual bool get_IgnoreLockHintsOnIndexes();
    public virtual bool get_IgnoreLoginSids();
    public virtual bool get_IgnoreNotForReplication();
    public virtual bool get_IgnoreObjectPlacementOnPartitionScheme();
    public virtual bool get_IgnorePartitionSchemes();
    public virtual bool get_DoNotEvaluateSqlCmdVariables();
    public virtual bool get_IgnoreTablePartitionOptions();
    public virtual bool get_IgnorePermissions();
    public virtual bool get_IgnoreQuotedIdentifiers();
    public virtual bool get_IgnoreRoleMembership();
    public virtual bool get_IgnoreRouteLifetime();
    public virtual bool get_IgnoreSemicolonBetweenStatements();
    public virtual bool get_IgnoreSensitivityClassifications();
    public virtual bool get_IgnoreTableOptions();
    public virtual bool get_IgnoreUserSettingsObjects();
    public virtual bool get_IgnoreWhitespace();
    public virtual bool get_IgnoreWithNocheckOnCheckConstraints();
    public virtual bool get_IgnoreWithNocheckOnForeignKeys();
    public virtual bool get_IncludeCompositeObjects();
    public virtual bool get_IncludeTransactionalScripts();
    public virtual bool get_IsAlwaysEncryptedParameterizationEnabled();
    public virtual bool get_NoAlterStatementsToChangeClrTypes();
    public virtual bool get_PopulateFilesOnFileGroups();
    public virtual bool get_PreserveIdentityLastValues();
    public virtual bool get_PerformIndexOperationsOnline();
    public virtual bool get_RegisterDataTierApplication();
    public virtual bool get_RestoreSequenceCurrentValue();
    public virtual bool get_ScriptDatabaseCollation();
    public virtual bool get_ScriptDatabaseCompatibility();
    public virtual bool get_ScriptDatabaseOptions();
    public virtual bool get_ScriptDeployStateChecks();
    public virtual bool get_ScriptFileSize();
    public virtual bool get_ScriptNewConstraintValidation();
    public virtual bool get_ScriptRefreshModule();
    public virtual string get_TargetConnectionString();
    public virtual Nullable`1<bool> get_TargetDatabaseExists();
    public virtual string get_TargetDatabaseName();
    public virtual bool get_TargetingServerless();
    public virtual bool get_TreatVerificationErrorsAsWarnings();
    public virtual bool get_UnmodifiableObjectWarnings();
    public virtual bool get_VerifyCollationCompatibility();
    public virtual bool get_VerifyDeployment();
    public virtual IDictionary`2<string, string> get_SqlCommandVariableValues();
}
internal static class Microsoft.SqlServer.Dac.Deployment.Internal.DeploymentStepFactory : object {
    private static Dictionary`2<Type, GetPublicDeploymentStep> _deploymentStepsInternalToPublicMapping;
    internal static Dictionary`2<Type, GetPublicDeploymentStep> DeploymentStepsInternalToPublicMapping { get; }
    internal static Dictionary`2<Type, GetPublicDeploymentStep> get_DeploymentStepsInternalToPublicMapping();
    internal static DeploymentStep CreateDeploymentStep(DeploymentStep internalDeploymentStep, SqlSchemaModelObjectService sourceService, SqlSchemaModelObjectService targetService);
}
internal abstract class Microsoft.SqlServer.Dac.Deployment.Internal.InternalDeploymentContributorHelper`1 : object {
    private object _lockObject;
    private ContributorLoader`1<T> _contributorLoader;
    private Dictionary`2<string, T> _enabledContributors;
    [CompilerGeneratedAttribute]
private Action`1<DataSchemaError> <PublishMessage>k__BackingField;
    protected Action`1<DataSchemaError> PublishMessage { get; private set; }
    protected Dictionary`2<string, T> EnabledContributors { get; }
    protected InternalDeploymentContributorHelper`1(Action`1<DataSchemaError> publishMessage, ContributorLoader`1<T> contributorLoader);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    [CompilerGeneratedAttribute]
protected Action`1<DataSchemaError> get_PublishMessage();
    [CompilerGeneratedAttribute]
private void set_PublishMessage(Action`1<DataSchemaError> value);
    protected void EnsureEnabledContributorsLoaded();
    protected void PublishLoadErrors(List`1<ExtensibilityError> loadErrors);
    protected Dictionary`2<string, T> get_EnabledContributors();
    protected bool AreEnabledContributorsLoaded();
    internal IList`1<ContributorInfo> OnQuerySupportedContributorIds(IEnumerable`1<ContributorInfo> expectedContributors);
    private IList`1<ContributorInfo> TryQuerySupportedContributorIds(IEnumerable`1<ContributorInfo> expectedContributors);
    internal void OnCanceled();
    internal void OnEstablishDeploymentConfiguration(DeploymentContributorConfigurationSetup internalSetup);
    internal void OnApplyDeploymentConfiguration(DeploymentContributorContext context, IList`1<DeploymentContributorConfigurationStream> configurationStreams);
    protected void ProcessContributorMethodCall(string contributorId, T contributor, Action`1<T> contributorMethodCall);
    private void MessageHandler(object sender, DeploymentContributorEventArgs args);
}
internal class Microsoft.SqlServer.Dac.Deployment.Internal.InternalDeploymentPlanContributorHelper`1 : InternalDeploymentContributorHelper`1<T> {
    public InternalDeploymentPlanContributorHelper`1(Action`1<DataSchemaError> publishMessage, ContributorLoader`1<T> contributorLoader);
    internal void OnExecute(DeploymentPlanContributorContext context);
}
[DatabaseSchemaProviderCompatibilityAttribute("Microsoft.Data.Tools.Schema.Sql.SqlDatabaseSchemaProvider")]
internal class Microsoft.SqlServer.Dac.Deployment.Internal.InternalDeploymentPlanExecutor : DeploymentPlanExecutor {
    private InternalDeploymentPlanContributorHelper`1<DeploymentPlanExecutor> _deploymentPlanContributorHelper;
    internal ContributorSource Source { get; }
    protected virtual void Dispose(bool disposing);
    internal virtual ContributorSource get_Source();
    protected virtual IList`1<ContributorInfo> OnQuerySupportedContributorIds(IEnumerable`1<ContributorInfo> expectedContributors);
    protected virtual void OnCanceled();
    protected virtual void OnExecute(DeploymentPlanContributorContext context);
    protected virtual void OnEstablishDeploymentConfiguration(DeploymentContributorConfigurationSetup setup);
    protected virtual void OnApplyDeploymentConfiguration(DeploymentContributorContext context, IList`1<DeploymentContributorConfigurationStream> configurationStreams);
    [CompilerGeneratedAttribute]
private void <.ctor>b__1_0(DataSchemaError message);
}
[DatabaseSchemaProviderCompatibilityAttribute("Microsoft.Data.Tools.Schema.Sql.SqlDatabaseSchemaProvider")]
internal class Microsoft.SqlServer.Dac.Deployment.Internal.InternalDeploymentPlanModifier : DeploymentPlanModifier {
    private InternalDeploymentPlanContributorHelper`1<DeploymentPlanModifier> _deploymentPlanContributorHelper;
    internal ContributorSource Source { get; }
    internal virtual ContributorSource get_Source();
    protected virtual void Dispose(bool disposing);
    protected virtual IList`1<ContributorInfo> OnQuerySupportedContributorIds(IEnumerable`1<ContributorInfo> expectedContributors);
    protected virtual void OnCanceled();
    protected virtual void OnExecute(DeploymentPlanContributorContext context);
    protected virtual void OnEstablishDeploymentConfiguration(DeploymentContributorConfigurationSetup setup);
    protected virtual void OnApplyDeploymentConfiguration(DeploymentContributorContext context, IList`1<DeploymentContributorConfigurationStream> configurationStreams);
    [CompilerGeneratedAttribute]
private void <.ctor>b__1_0(DataSchemaError message);
}
internal class Microsoft.SqlServer.Dac.Deployment.Internal.InternalDeploymentPlanRelay : DeploymentPlan {
    private DeploymentPlan _internalPlan;
    private LinkedList`1<DeploymentStep> _plan;
    private Dictionary`2<DeploymentStep, DeploymentStep> _publicToInternalStepMap;
    private SqlSchemaModelObjectService _sourceService;
    private SqlSchemaModelObjectService _targetService;
    public int StepCount { get; }
    public DeploymentStep Head { get; }
    public DeploymentStep Tail { get; }
    public InternalDeploymentPlanRelay(DeploymentPlan internalPlan, SqlSchemaModelObjectService sourceService, SqlSchemaModelObjectService targetService);
    private void CopyInternalStepsToPlan();
    private void AddPublicToInternalMapping(DeploymentStep publicStep, DeploymentStep internalStep);
    public virtual int get_StepCount();
    public virtual DeploymentStep get_Head();
    public virtual DeploymentStep get_Tail();
    public virtual void AddFirst(DeploymentStep newStep);
    public virtual void AddBefore(DeploymentStep step, DeploymentStep newStep);
    public virtual void AddAfter(DeploymentStep step, DeploymentStep newStep);
    public virtual void AddLast(DeploymentStep newStep);
    public virtual void AddLast(IEnumerable`1<DeploymentStep> steps);
    public virtual void Remove(DeploymentStep step);
    private static void ValidateAddedStep(DeploymentStep newStep);
    private static void ValidateSiblingStep(DeploymentStep step);
    private static LinkedListNode`1<DeploymentStep> CreateNode(DeploymentStep step);
    private InternalStep CreateInternalStep(DeploymentStep publicStep);
    private DeploymentStep CreatePublicStep(DeploymentStep internalStep);
    private DeploymentStep FindInternalStep(DeploymentStep publicStep);
}
internal interface Microsoft.SqlServer.Dac.Deployment.IPlanContributorContextService {
    public ModelComparisonResult ComparisonResult { get; }
    public DeploymentPlanHandle PlanHandle { get; }
    public string DeploymentMasterPath { get; }
    public string DeploymentScriptPath { get; }
    public abstract virtual ModelComparisonResult get_ComparisonResult();
    public abstract virtual DeploymentPlanHandle get_PlanHandle();
    public abstract virtual string get_DeploymentMasterPath();
    public abstract virtual string get_DeploymentScriptPath();
}
public class Microsoft.SqlServer.Dac.Deployment.ModelComparisonChangeDefinition : object {
    private ModelComparisonChangeDefinitionService _definitionService;
    public TSqlObject TargetObject { get; }
    internal ModelComparisonChangeDefinition(ModelComparisonChangeDefinitionService definitionService);
    public TSqlObject get_TargetObject();
}
internal abstract class Microsoft.SqlServer.Dac.Deployment.ModelComparisonChangeDefinitionService : object {
    public TSqlObject TargetObject { get; }
    public abstract virtual TSqlObject get_TargetObject();
}
public class Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult : object {
    private ModelComparisonResultService _resultService;
    public bool IsEqual { get; }
    public IDictionary`2<TSqlObject, TSqlObject> ElementsEqual { get; }
    public IDictionary`2<IList`1<TSqlObject>, IList`1<TSqlObject>> ElementGroupsEqual { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsToAdd { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsToDrop { get; }
    public IDictionary`2<TSqlObject, ModelComparisonChangeDefinition> ElementsChanged { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsPropertyChanged { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsRelationshipEntryChanged { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsComposingChildrenChanged { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsHierarchicalChildrenChanged { get; }
    internal ModelComparisonResult(ModelComparisonResultService resultService);
    public bool get_IsEqual();
    public IDictionary`2<TSqlObject, TSqlObject> get_ElementsEqual();
    public IDictionary`2<IList`1<TSqlObject>, IList`1<TSqlObject>> get_ElementGroupsEqual();
    public ReadOnlyCollection`1<TSqlObject> get_ElementsToAdd();
    public ReadOnlyCollection`1<TSqlObject> get_ElementsToDrop();
    public IDictionary`2<TSqlObject, ModelComparisonChangeDefinition> get_ElementsChanged();
    public ReadOnlyCollection`1<TSqlObject> get_ElementsPropertyChanged();
    public ReadOnlyCollection`1<TSqlObject> get_ElementsRelationshipEntryChanged();
    public ReadOnlyCollection`1<TSqlObject> get_ElementsComposingChildrenChanged();
    public ReadOnlyCollection`1<TSqlObject> get_ElementsHierarchicalChildrenChanged();
}
internal abstract class Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService : object {
    public bool IsEqual { get; }
    public IDictionary`2<TSqlObject, TSqlObject> ElementsEqual { get; }
    public IDictionary`2<IList`1<TSqlObject>, IList`1<TSqlObject>> ElementGroupsEqual { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsToAdd { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsToDrop { get; }
    public IDictionary`2<TSqlObject, ModelComparisonChangeDefinition> ElementsChanged { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsPropertyChanged { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsRelationshipEntryChanged { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsComposingChildrenChanged { get; }
    public ReadOnlyCollection`1<TSqlObject> ElementsHierarchicalChildrenChanged { get; }
    public abstract virtual bool get_IsEqual();
    public abstract virtual IDictionary`2<TSqlObject, TSqlObject> get_ElementsEqual();
    public abstract virtual IDictionary`2<IList`1<TSqlObject>, IList`1<TSqlObject>> get_ElementGroupsEqual();
    public abstract virtual ReadOnlyCollection`1<TSqlObject> get_ElementsToAdd();
    public abstract virtual ReadOnlyCollection`1<TSqlObject> get_ElementsToDrop();
    public abstract virtual IDictionary`2<TSqlObject, ModelComparisonChangeDefinition> get_ElementsChanged();
    public abstract virtual ReadOnlyCollection`1<TSqlObject> get_ElementsPropertyChanged();
    public abstract virtual ReadOnlyCollection`1<TSqlObject> get_ElementsRelationshipEntryChanged();
    public abstract virtual ReadOnlyCollection`1<TSqlObject> get_ElementsComposingChildrenChanged();
    public abstract virtual ReadOnlyCollection`1<TSqlObject> get_ElementsHierarchicalChildrenChanged();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.SqlServer.Dac.Deployment.SchemaDeploymentResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string DeployPlan_StepDoesNotHaveInternalMapping { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_DeployPlan_StepDoesNotHaveInternalMapping();
}
public class Microsoft.SqlServer.Dac.Deployment.SqlAddSystemVersioningStep : DeploymentScriptDomStep {
    internal SqlAddSystemVersioningStep(SqlAddSystemVersioningStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlBeginAltersStep : EmptyStep {
    internal SqlBeginAltersStep(SqlBeginAltersStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlBeginDropsStep : EmptyStep {
    internal SqlBeginDropsStep(SqlBeginDropsStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlBeginPreservationStep : EmptyStep {
    internal SqlBeginPreservationStep(SqlBeginPreservationStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlBeginTransactionStep : DeploymentScriptStep {
    internal SqlBeginTransactionStep(SqlBeginTransactionStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlChangeDatabaseStep : DeploymentScriptDomStep {
    public string DatabaseName { get; }
    internal SqlChangeDatabaseStep(SqlChangeDatabaseStep internalStep);
    public string get_DatabaseName();
}
public class Microsoft.SqlServer.Dac.Deployment.SqlColumnEncryptionMigrationStep : AlterElementStep {
    private SqlSchemaModelObjectService _sourceService;
    private SqlSchemaModelObjectService _targetService;
    public TSqlObject SourceTable { get; }
    public TSqlObject TargetTable { get; }
    internal SqlColumnEncryptionMigrationStep(SqlColumnEncryptionMigrationStep internalStep, SqlSchemaModelObjectService sourceService, SqlSchemaModelObjectService targetService);
    public TSqlObject get_SourceTable();
    public TSqlObject get_TargetTable();
}
public class Microsoft.SqlServer.Dac.Deployment.SqlColumnEncryptionRenameToOriginalStep : AlterElementStep {
    private SqlSchemaModelObjectService _sourceService;
    private SqlSchemaModelObjectService _targetService;
    public TSqlObject SourceTable { get; }
    public TSqlObject TargetTable { get; }
    internal SqlColumnEncryptionRenameToOriginalStep(SqlColumnEncryptionRenameToOriginalStep internalStep, SqlSchemaModelObjectService sourceService, SqlSchemaModelObjectService targetService);
    public TSqlObject get_SourceTable();
    public TSqlObject get_TargetTable();
}
public class Microsoft.SqlServer.Dac.Deployment.SqlColumnEncryptionSPRefreshStep : DeploymentScriptDomStep {
    internal SqlColumnEncryptionSPRefreshStep(SqlColumnEncryptionSPRefreshStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlCreateDatabaseStep : DeploymentScriptDomStep {
    internal SqlCreateDatabaseStep(SqlCreateDatabaseStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlCreateTableAsSelectStep : AlterElementStep {
    private SqlSchemaModelObjectService _sourceService;
    private SqlSchemaModelObjectService _targetService;
    public TSqlObject SourceTable { get; }
    public TSqlObject TargetTable { get; }
    internal SqlCreateTableAsSelectStep(SqlCreateTableAsSelectStep internalStep, SqlSchemaModelObjectService sourceService, SqlSchemaModelObjectService targetService);
    public TSqlObject get_SourceTable();
    public TSqlObject get_TargetTable();
}
public class Microsoft.SqlServer.Dac.Deployment.SqlCreateTrackingTableStep : DeploymentScriptDomStep {
    internal SqlCreateTrackingTableStep(SqlCreateTrackingTableStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions : object {
    private SqlDeploymentOptionsService _deploymentOptionsService;
    public bool AllowDropBlockingAssemblies { get; }
    public bool AllowIncompatiblePlatform { get; }
    public bool BackupDatabaseBeforeChanges { get; }
    public bool IgnoreIndexesStatisticsOnEnclaveEnabledColumns { get; }
    public bool BlockOnPossibleDataLoss { get; }
    public bool BlockWhenDriftDetected { get; }
    public bool CommentOutSetVarDeclarations { get; }
    public bool CompareUsingTargetCollation { get; }
    public bool CreateNewDatabase { get; }
    public bool DeployDatabaseInSingleUserMode { get; }
    public bool DisableAndReenableDdlTriggers { get; }
    public bool DoNotAlterChangeDataCaptureObjects { get; }
    public bool DoNotAlterReplicatedObjects { get; }
    public bool DropConstraintsNotInSource { get; }
    public bool DropDmlTriggersNotInSource { get; }
    public bool DropExtendedPropertiesNotInSource { get; }
    public bool AllowTableRecreation { get; }
    public bool DropIndexesNotInSource { get; }
    public bool DropObjectsNotInSource { get; }
    public bool DropPermissionsNotInSource { get; }
    public bool DropRoleMembersNotInSource { get; }
    public bool DropStatisticsNotInSource { get; }
    public bool GenerateSmartDefaults { get; }
    public bool HashObjectNamesInLogs { get; }
    public bool IgnoreAnsiNulls { get; }
    public bool IgnoreAuthorizer { get; }
    public bool IgnoreColumnCollation { get; }
    public bool IgnoreColumnOrder { get; }
    public bool IgnoreComments { get; }
    public bool IgnoreCryptographicProviderFilePath { get; }
    public bool IgnoreDdlTriggerOrder { get; }
    public bool IgnoreDdlTriggerState { get; }
    public bool IgnoreDefaultSchema { get; }
    public bool IgnoreDmlTriggerOrder { get; }
    public bool IgnoreDmlTriggerState { get; }
    public bool IgnoreExtendedProperties { get; }
    public bool IgnoreFileAndLogFilePath { get; }
    public bool IgnoreFilegroupPlacement { get; }
    public bool IgnoreFileSize { get; }
    public bool IgnoreFillFactor { get; }
    public bool IgnoreFullTextCatalogFilePath { get; }
    public bool IgnoreIdentitySeed { get; }
    public bool IgnoreIncrement { get; }
    public bool IgnoreIndexOptions { get; }
    public bool IgnoreIndexPadding { get; }
    public bool IgnoreKeywordCasing { get; }
    public bool IgnoreLockHintsOnIndexes { get; }
    public bool IgnoreLoginSids { get; }
    public bool IgnoreNotForReplication { get; }
    public bool IgnoreObjectPlacementOnPartitionScheme { get; }
    public bool DoNotEvaluateSqlCmdVariables { get; }
    public bool IgnorePartitionSchemes { get; }
    public bool IgnoreTablePartitionOptions { get; }
    public bool IgnorePermissions { get; }
    public bool IgnoreQuotedIdentifiers { get; }
    public bool IgnoreRoleMembership { get; }
    public bool IgnoreRouteLifetime { get; }
    public bool IgnoreSemicolonBetweenStatements { get; }
    public bool IgnoreSensitivityClassifications { get; }
    public bool IgnoreTableOptions { get; }
    public bool IgnoreUserSettingsObjects { get; }
    public bool IgnoreWhitespace { get; }
    public bool IgnoreWithNocheckOnCheckConstraints { get; }
    public bool IgnoreWithNocheckOnForeignKeys { get; }
    public bool IncludeCompositeObjects { get; }
    public bool IncludeTransactionalScripts { get; }
    public bool IsAlwaysEncryptedParameterizationEnabled { get; }
    public bool NoAlterStatementsToChangeClrTypes { get; }
    public bool PopulateFilesOnFileGroups { get; }
    public bool PreserveIdentityLastValues { get; }
    public bool PerformIndexOperationsOnline { get; }
    public bool RegisterDataTierApplication { get; }
    public bool RestoreSequenceCurrentValue { get; }
    public bool ScriptDatabaseCollation { get; }
    public bool ScriptDatabaseCompatibility { get; }
    public bool ScriptDatabaseOptions { get; }
    public bool ScriptDeployStateChecks { get; }
    public bool ScriptFileSize { get; }
    public bool ScriptNewConstraintValidation { get; }
    public bool ScriptRefreshModule { get; }
    public string TargetConnectionString { get; }
    public Nullable`1<bool> TargetDatabaseExists { get; }
    public string TargetDatabaseName { get; }
    public bool TargetingServerless { get; }
    public bool TreatVerificationErrorsAsWarnings { get; }
    public bool UnmodifiableObjectWarnings { get; }
    public bool VerifyCollationCompatibility { get; }
    public bool VerifyDeployment { get; }
    public IDictionary`2<string, string> SqlCommandVariableValues { get; }
    public bool IgnoreWorkloadClassifiers { get; }
    public bool IgnoreDatabaseWorkloadGroups { get; }
    internal SqlDeploymentOptions(SqlDeploymentOptionsService deploymentOptionsService);
    public bool get_AllowDropBlockingAssemblies();
    public bool get_AllowIncompatiblePlatform();
    public bool get_BackupDatabaseBeforeChanges();
    public bool get_IgnoreIndexesStatisticsOnEnclaveEnabledColumns();
    public bool get_BlockOnPossibleDataLoss();
    public bool get_BlockWhenDriftDetected();
    public bool get_CommentOutSetVarDeclarations();
    public bool get_CompareUsingTargetCollation();
    public bool get_CreateNewDatabase();
    public bool get_DeployDatabaseInSingleUserMode();
    public bool get_DisableAndReenableDdlTriggers();
    public bool get_DoNotAlterChangeDataCaptureObjects();
    public bool get_DoNotAlterReplicatedObjects();
    public bool get_DropConstraintsNotInSource();
    public bool get_DropDmlTriggersNotInSource();
    public bool get_DropExtendedPropertiesNotInSource();
    public bool get_AllowTableRecreation();
    public bool get_DropIndexesNotInSource();
    public bool get_DropObjectsNotInSource();
    public bool get_DropPermissionsNotInSource();
    public bool get_DropRoleMembersNotInSource();
    public bool get_DropStatisticsNotInSource();
    public bool get_GenerateSmartDefaults();
    public bool get_HashObjectNamesInLogs();
    public bool get_IgnoreAnsiNulls();
    public bool get_IgnoreAuthorizer();
    public bool get_IgnoreColumnCollation();
    public bool get_IgnoreColumnOrder();
    public bool get_IgnoreComments();
    public bool get_IgnoreCryptographicProviderFilePath();
    public bool get_IgnoreDdlTriggerOrder();
    public bool get_IgnoreDdlTriggerState();
    public bool get_IgnoreDefaultSchema();
    public bool get_IgnoreDmlTriggerOrder();
    public bool get_IgnoreDmlTriggerState();
    public bool get_IgnoreExtendedProperties();
    public bool get_IgnoreFileAndLogFilePath();
    public bool get_IgnoreFilegroupPlacement();
    public bool get_IgnoreFileSize();
    public bool get_IgnoreFillFactor();
    public bool get_IgnoreFullTextCatalogFilePath();
    public bool get_IgnoreIdentitySeed();
    public bool get_IgnoreIncrement();
    public bool get_IgnoreIndexOptions();
    public bool get_IgnoreIndexPadding();
    public bool get_IgnoreKeywordCasing();
    public bool get_IgnoreLockHintsOnIndexes();
    public bool get_IgnoreLoginSids();
    public bool get_IgnoreNotForReplication();
    public bool get_IgnoreObjectPlacementOnPartitionScheme();
    public bool get_DoNotEvaluateSqlCmdVariables();
    public bool get_IgnorePartitionSchemes();
    public bool get_IgnoreTablePartitionOptions();
    public bool get_IgnorePermissions();
    public bool get_IgnoreQuotedIdentifiers();
    public bool get_IgnoreRoleMembership();
    public bool get_IgnoreRouteLifetime();
    public bool get_IgnoreSemicolonBetweenStatements();
    public bool get_IgnoreSensitivityClassifications();
    public bool get_IgnoreTableOptions();
    public bool get_IgnoreUserSettingsObjects();
    public bool get_IgnoreWhitespace();
    public bool get_IgnoreWithNocheckOnCheckConstraints();
    public bool get_IgnoreWithNocheckOnForeignKeys();
    public bool get_IncludeCompositeObjects();
    public bool get_IncludeTransactionalScripts();
    public bool get_IsAlwaysEncryptedParameterizationEnabled();
    public bool get_NoAlterStatementsToChangeClrTypes();
    public bool get_PopulateFilesOnFileGroups();
    public bool get_PreserveIdentityLastValues();
    public bool get_PerformIndexOperationsOnline();
    public bool get_RegisterDataTierApplication();
    public bool get_RestoreSequenceCurrentValue();
    public bool get_ScriptDatabaseCollation();
    public bool get_ScriptDatabaseCompatibility();
    public bool get_ScriptDatabaseOptions();
    public bool get_ScriptDeployStateChecks();
    public bool get_ScriptFileSize();
    public bool get_ScriptNewConstraintValidation();
    public bool get_ScriptRefreshModule();
    public string get_TargetConnectionString();
    public Nullable`1<bool> get_TargetDatabaseExists();
    public string get_TargetDatabaseName();
    public bool get_TargetingServerless();
    public bool get_TreatVerificationErrorsAsWarnings();
    public bool get_UnmodifiableObjectWarnings();
    public bool get_VerifyCollationCompatibility();
    public bool get_VerifyDeployment();
    public IDictionary`2<string, string> get_SqlCommandVariableValues();
    public bool get_IgnoreWorkloadClassifiers();
    public bool get_IgnoreDatabaseWorkloadGroups();
}
internal abstract class Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService : object {
    public bool AllowDropBlockingAssemblies { get; }
    public bool AllowExternalLanguagePaths { get; }
    public bool AllowExternalLibraryPaths { get; }
    public bool AllowIncompatiblePlatform { get; }
    public bool BackupDatabaseBeforeChanges { get; }
    public bool IgnoreIndexesStatisticsOnEnclaveEnabledColumns { get; }
    public bool BlockOnPossibleDataLoss { get; }
    public bool BlockWhenDriftDetected { get; }
    public bool CommentOutSetVarDeclarations { get; }
    public bool CompareUsingTargetCollation { get; }
    public bool CreateNewDatabase { get; }
    public bool DeployDatabaseInSingleUserMode { get; }
    public bool DoNotEvaluateSqlCmdVariables { get; }
    public bool DisableAndReenableDdlTriggers { get; }
    public bool DoNotAlterChangeDataCaptureObjects { get; }
    public bool DoNotAlterReplicatedObjects { get; }
    public bool DropConstraintsNotInSource { get; }
    public bool DropDmlTriggersNotInSource { get; }
    public bool DropExtendedPropertiesNotInSource { get; }
    public bool AllowTableRecreation { get; }
    public bool DropIndexesNotInSource { get; }
    public bool DropObjectsNotInSource { get; }
    public bool DoNotDropDatabaseWorkloadGroups { get; }
    public bool DoNotDropWorkloadClassifiers { get; }
    public bool IgnoreDatabaseWorkloadGroups { get; }
    public bool IgnoreWorkloadClassifiers { get; }
    public bool DropPermissionsNotInSource { get; }
    public bool DropRoleMembersNotInSource { get; }
    public bool DropStatisticsNotInSource { get; }
    public bool GenerateSmartDefaults { get; }
    public bool HashObjectNamesInLogs { get; }
    public bool IgnoreAnsiNulls { get; }
    public bool IgnoreAuthorizer { get; }
    public bool IgnoreColumnCollation { get; }
    public bool IgnoreColumnOrder { get; }
    public bool IgnoreComments { get; }
    public bool IgnoreCryptographicProviderFilePath { get; }
    public bool IgnoreDdlTriggerOrder { get; }
    public bool IgnoreDdlTriggerState { get; }
    public bool IgnoreDefaultSchema { get; }
    public bool IgnoreDmlTriggerOrder { get; }
    public bool IgnoreDmlTriggerState { get; }
    public bool IgnoreExtendedProperties { get; }
    public bool IgnoreFileAndLogFilePath { get; }
    public bool IgnoreFilegroupPlacement { get; }
    public bool IgnoreFileSize { get; }
    public bool IgnoreFillFactor { get; }
    public bool IgnoreFullTextCatalogFilePath { get; }
    public bool IgnoreIdentitySeed { get; }
    public bool IgnoreIncrement { get; }
    public bool IgnoreIndexOptions { get; }
    public bool IgnoreIndexPadding { get; }
    public bool IgnoreKeywordCasing { get; }
    public bool IgnoreLockHintsOnIndexes { get; }
    public bool IgnoreLoginSids { get; }
    public bool IgnoreNotForReplication { get; }
    public bool IgnoreObjectPlacementOnPartitionScheme { get; }
    public bool IgnorePartitionSchemes { get; }
    public bool IgnoreTablePartitionOptions { get; }
    public bool IgnorePermissions { get; }
    public bool IgnoreQuotedIdentifiers { get; }
    public bool IgnoreRoleMembership { get; }
    public bool IgnoreRouteLifetime { get; }
    public bool IgnoreSemicolonBetweenStatements { get; }
    public bool IgnoreSensitivityClassifications { get; }
    public bool IgnoreTableOptions { get; }
    public bool IgnoreUserSettingsObjects { get; }
    public bool IgnoreWhitespace { get; }
    public bool IgnoreWithNocheckOnCheckConstraints { get; }
    public bool IgnoreWithNocheckOnForeignKeys { get; }
    public bool IncludeCompositeObjects { get; }
    public bool IncludeTransactionalScripts { get; }
    public bool IsAlwaysEncryptedParameterizationEnabled { get; }
    public bool NoAlterStatementsToChangeClrTypes { get; }
    public bool PopulateFilesOnFileGroups { get; }
    public bool PreserveIdentityLastValues { get; }
    public bool PerformIndexOperationsOnline { get; }
    public bool RegisterDataTierApplication { get; }
    public bool RestoreSequenceCurrentValue { get; }
    public bool ScriptDatabaseCollation { get; }
    public bool ScriptDatabaseCompatibility { get; }
    public bool ScriptDatabaseOptions { get; }
    public bool ScriptDeployStateChecks { get; }
    public bool ScriptFileSize { get; }
    public bool ScriptNewConstraintValidation { get; }
    public bool ScriptRefreshModule { get; }
    public string TargetConnectionString { get; }
    public Nullable`1<bool> TargetDatabaseExists { get; }
    public string TargetDatabaseName { get; }
    public bool TargetingServerless { get; }
    public bool TreatVerificationErrorsAsWarnings { get; }
    public bool UnmodifiableObjectWarnings { get; }
    public bool VerifyCollationCompatibility { get; }
    public bool VerifyDeployment { get; }
    public IDictionary`2<string, string> SqlCommandVariableValues { get; }
    public abstract virtual bool get_AllowDropBlockingAssemblies();
    public abstract virtual bool get_AllowExternalLanguagePaths();
    public abstract virtual bool get_AllowExternalLibraryPaths();
    public abstract virtual bool get_AllowIncompatiblePlatform();
    public abstract virtual bool get_BackupDatabaseBeforeChanges();
    public abstract virtual bool get_IgnoreIndexesStatisticsOnEnclaveEnabledColumns();
    public abstract virtual bool get_BlockOnPossibleDataLoss();
    public abstract virtual bool get_BlockWhenDriftDetected();
    public abstract virtual bool get_CommentOutSetVarDeclarations();
    public abstract virtual bool get_CompareUsingTargetCollation();
    public abstract virtual bool get_CreateNewDatabase();
    public abstract virtual bool get_DeployDatabaseInSingleUserMode();
    public abstract virtual bool get_DoNotEvaluateSqlCmdVariables();
    public abstract virtual bool get_DisableAndReenableDdlTriggers();
    public abstract virtual bool get_DoNotAlterChangeDataCaptureObjects();
    public abstract virtual bool get_DoNotAlterReplicatedObjects();
    public abstract virtual bool get_DropConstraintsNotInSource();
    public abstract virtual bool get_DropDmlTriggersNotInSource();
    public abstract virtual bool get_DropExtendedPropertiesNotInSource();
    public abstract virtual bool get_AllowTableRecreation();
    public abstract virtual bool get_DropIndexesNotInSource();
    public abstract virtual bool get_DropObjectsNotInSource();
    public abstract virtual bool get_DoNotDropDatabaseWorkloadGroups();
    public abstract virtual bool get_DoNotDropWorkloadClassifiers();
    public abstract virtual bool get_IgnoreDatabaseWorkloadGroups();
    public abstract virtual bool get_IgnoreWorkloadClassifiers();
    public abstract virtual bool get_DropPermissionsNotInSource();
    public abstract virtual bool get_DropRoleMembersNotInSource();
    public abstract virtual bool get_DropStatisticsNotInSource();
    public abstract virtual bool get_GenerateSmartDefaults();
    public abstract virtual bool get_HashObjectNamesInLogs();
    public abstract virtual bool get_IgnoreAnsiNulls();
    public abstract virtual bool get_IgnoreAuthorizer();
    public abstract virtual bool get_IgnoreColumnCollation();
    public abstract virtual bool get_IgnoreColumnOrder();
    public abstract virtual bool get_IgnoreComments();
    public abstract virtual bool get_IgnoreCryptographicProviderFilePath();
    public abstract virtual bool get_IgnoreDdlTriggerOrder();
    public abstract virtual bool get_IgnoreDdlTriggerState();
    public abstract virtual bool get_IgnoreDefaultSchema();
    public abstract virtual bool get_IgnoreDmlTriggerOrder();
    public abstract virtual bool get_IgnoreDmlTriggerState();
    public abstract virtual bool get_IgnoreExtendedProperties();
    public abstract virtual bool get_IgnoreFileAndLogFilePath();
    public abstract virtual bool get_IgnoreFilegroupPlacement();
    public abstract virtual bool get_IgnoreFileSize();
    public abstract virtual bool get_IgnoreFillFactor();
    public abstract virtual bool get_IgnoreFullTextCatalogFilePath();
    public abstract virtual bool get_IgnoreIdentitySeed();
    public abstract virtual bool get_IgnoreIncrement();
    public abstract virtual bool get_IgnoreIndexOptions();
    public abstract virtual bool get_IgnoreIndexPadding();
    public abstract virtual bool get_IgnoreKeywordCasing();
    public abstract virtual bool get_IgnoreLockHintsOnIndexes();
    public abstract virtual bool get_IgnoreLoginSids();
    public abstract virtual bool get_IgnoreNotForReplication();
    public abstract virtual bool get_IgnoreObjectPlacementOnPartitionScheme();
    public abstract virtual bool get_IgnorePartitionSchemes();
    public abstract virtual bool get_IgnoreTablePartitionOptions();
    public abstract virtual bool get_IgnorePermissions();
    public abstract virtual bool get_IgnoreQuotedIdentifiers();
    public abstract virtual bool get_IgnoreRoleMembership();
    public abstract virtual bool get_IgnoreRouteLifetime();
    public abstract virtual bool get_IgnoreSemicolonBetweenStatements();
    public abstract virtual bool get_IgnoreSensitivityClassifications();
    public abstract virtual bool get_IgnoreTableOptions();
    public abstract virtual bool get_IgnoreUserSettingsObjects();
    public abstract virtual bool get_IgnoreWhitespace();
    public abstract virtual bool get_IgnoreWithNocheckOnCheckConstraints();
    public abstract virtual bool get_IgnoreWithNocheckOnForeignKeys();
    public abstract virtual bool get_IncludeCompositeObjects();
    public abstract virtual bool get_IncludeTransactionalScripts();
    public abstract virtual bool get_IsAlwaysEncryptedParameterizationEnabled();
    public abstract virtual bool get_NoAlterStatementsToChangeClrTypes();
    public abstract virtual bool get_PopulateFilesOnFileGroups();
    public abstract virtual bool get_PreserveIdentityLastValues();
    public abstract virtual bool get_PerformIndexOperationsOnline();
    public abstract virtual bool get_RegisterDataTierApplication();
    public abstract virtual bool get_RestoreSequenceCurrentValue();
    public abstract virtual bool get_ScriptDatabaseCollation();
    public abstract virtual bool get_ScriptDatabaseCompatibility();
    public abstract virtual bool get_ScriptDatabaseOptions();
    public abstract virtual bool get_ScriptDeployStateChecks();
    public abstract virtual bool get_ScriptFileSize();
    public abstract virtual bool get_ScriptNewConstraintValidation();
    public abstract virtual bool get_ScriptRefreshModule();
    public abstract virtual string get_TargetConnectionString();
    public abstract virtual Nullable`1<bool> get_TargetDatabaseExists();
    public abstract virtual string get_TargetDatabaseName();
    public abstract virtual bool get_TargetingServerless();
    public abstract virtual bool get_TreatVerificationErrorsAsWarnings();
    public abstract virtual bool get_UnmodifiableObjectWarnings();
    public abstract virtual bool get_VerifyCollationCompatibility();
    public abstract virtual bool get_VerifyDeployment();
    public abstract virtual IDictionary`2<string, string> get_SqlCommandVariableValues();
}
public class Microsoft.SqlServer.Dac.Deployment.SqlDisableDatabaseChangeTrackingStep : AlterElementStep {
    internal SqlDisableDatabaseChangeTrackingStep(SqlDisableDatabaseChangeTrackingStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlDropDatabaseStep : DeploymentScriptDomStep {
    internal SqlDropDatabaseStep(SqlDropDatabaseStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlDropSystemVersioningStep : DeploymentScriptDomStep {
    internal SqlDropSystemVersioningStep(SqlDropSystemVersioningStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlDropTrackingTableStep : DeploymentScriptDomStep {
    internal SqlDropTrackingTableStep(SqlDropTrackingTableStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlEnableDatabaseChangeTrackingStep : AlterElementStep {
    internal SqlEnableDatabaseChangeTrackingStep(SqlEnableDatabaseChangeTrackingStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlEndAltersStep : EmptyStep {
    internal SqlEndAltersStep(SqlEndAltersStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlEndDropsStep : EmptyStep {
    internal SqlEndDropsStep(SqlEndDropsStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlEndPreservationStep : EmptyStep {
    internal SqlEndPreservationStep(SqlEndPreservationStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlEndTransactionStep : DeploymentScriptStep {
    internal SqlEndTransactionStep(SqlEndTransactionStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlFinalizeDatabaseAccessStep : DeploymentScriptDomStep {
    internal SqlFinalizeDatabaseAccessStep(SqlFinalizeDatabaseAccessStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlMoveSchemaStep : DeploymentScriptDomStep {
    private SqlSchemaModelObjectService _targetService;
    public TSqlObject MovedElement { get; }
    public string NewSchema { get; }
    public string PreviousName { get; }
    internal SqlMoveSchemaStep(SqlMoveSchemaStep internalStep, SqlSchemaModelObjectService targetService);
    public TSqlObject get_MovedElement();
    public string get_NewSchema();
    public string get_PreviousName();
}
public class Microsoft.SqlServer.Dac.Deployment.SqlPrintStep : DeploymentScriptDomStep {
    internal SqlPrintStep(SqlPrintStep internalStep);
}
public class Microsoft.SqlServer.Dac.Deployment.SqlRenameStep : DeploymentScriptDomStep {
    private SqlSchemaModelObjectService _targetService;
    public TSqlObject RenamedElement { get; }
    public string OldName { get; }
    public string NewName { get; }
    internal SqlRenameStep(SqlRenameStep internalStep, SqlSchemaModelObjectService targetService);
    public TSqlObject get_RenamedElement();
    public string get_OldName();
    public string get_NewName();
}
public class Microsoft.SqlServer.Dac.Deployment.SqlTableMigrationStep : AlterElementStep {
    private SqlSchemaModelObjectService _sourceService;
    private SqlSchemaModelObjectService _targetService;
    public TSqlObject SourceTable { get; }
    public TSqlObject TargetTable { get; }
    internal SqlTableMigrationStep(SqlTableMigrationStep internalStep, SqlSchemaModelObjectService sourceService, SqlSchemaModelObjectService targetService);
    public TSqlObject get_SourceTable();
    public TSqlObject get_TargetTable();
}
public static class Microsoft.SqlServer.Dac.Model.Aggregate : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <InvariantToDuplicates>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <InvariantToNulls>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NullIfEmpty>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxByteSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ReturnType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass InvariantToDuplicates { get; internal set; }
    public static ModelPropertyClass InvariantToNulls { get; internal set; }
    public static ModelPropertyClass NullIfEmpty { get; internal set; }
    public static ModelPropertyClass ClassName { get; internal set; }
    public static ModelPropertyClass Format { get; internal set; }
    public static ModelPropertyClass MaxByteSize { get; internal set; }
    public static ModelRelationshipClass ReturnType { get; internal set; }
    public static ModelRelationshipClass Assembly { get; internal set; }
    public static ModelRelationshipClass Parameters { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_InvariantToDuplicates();
    [CompilerGeneratedAttribute]
internal static void set_InvariantToDuplicates(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_InvariantToNulls();
    [CompilerGeneratedAttribute]
internal static void set_InvariantToNulls(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NullIfEmpty();
    [CompilerGeneratedAttribute]
internal static void set_NullIfEmpty(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ClassName();
    [CompilerGeneratedAttribute]
internal static void set_ClassName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Format();
    [CompilerGeneratedAttribute]
internal static void set_Format(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxByteSize();
    [CompilerGeneratedAttribute]
internal static void set_MaxByteSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ReturnType();
    [CompilerGeneratedAttribute]
internal static void set_ReturnType(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Assembly();
    [CompilerGeneratedAttribute]
internal static void set_Assembly(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Parameters();
    [CompilerGeneratedAttribute]
internal static void set_Parameters(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ApplicationRole : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DefaultSchema>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Password { get; internal set; }
    public static ModelRelationshipClass DefaultSchema { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Password();
    [CompilerGeneratedAttribute]
internal static void set_Password(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DefaultSchema();
    [CompilerGeneratedAttribute]
internal static void set_DefaultSchema(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Assembly : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Visible>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PermissionSet>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AssemblySources>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ReferencedAssemblies>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Visible { get; internal set; }
    public static ModelPropertyClass PermissionSet { get; internal set; }
    public static ModelRelationshipClass AssemblySources { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    public static ModelRelationshipClass ReferencedAssemblies { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Visible();
    [CompilerGeneratedAttribute]
internal static void set_Visible(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PermissionSet();
    [CompilerGeneratedAttribute]
internal static void set_PermissionSet(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AssemblySources();
    [CompilerGeneratedAttribute]
internal static void set_AssemblySources(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ReferencedAssemblies();
    [CompilerGeneratedAttribute]
internal static void set_ReferencedAssemblies(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.AssemblyPermissionSet : Enum {
    public int value__;
    public static AssemblyPermissionSet Unknown;
    public static AssemblyPermissionSet Safe;
    public static AssemblyPermissionSet ExternalAccess;
    public static AssemblyPermissionSet Unsafe;
}
public static class Microsoft.SqlServer.Dac.Model.AssemblySource : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Source>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Source { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Source();
    [CompilerGeneratedAttribute]
internal static void set_Source(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.AsymmetricKey : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptedWithPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Algorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CreationDisposition>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecutableFile>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <File>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ProviderKeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Provider>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Password { get; internal set; }
    public static ModelPropertyClass EncryptedWithPassword { get; internal set; }
    public static ModelPropertyClass Algorithm { get; internal set; }
    public static ModelPropertyClass CreationDisposition { get; internal set; }
    public static ModelPropertyClass ExecutableFile { get; internal set; }
    public static ModelPropertyClass File { get; internal set; }
    public static ModelPropertyClass ProviderKeyName { get; internal set; }
    public static ModelRelationshipClass Assembly { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    public static ModelRelationshipClass Provider { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Password();
    [CompilerGeneratedAttribute]
internal static void set_Password(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptedWithPassword();
    [CompilerGeneratedAttribute]
internal static void set_EncryptedWithPassword(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Algorithm();
    [CompilerGeneratedAttribute]
internal static void set_Algorithm(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CreationDisposition();
    [CompilerGeneratedAttribute]
internal static void set_CreationDisposition(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecutableFile();
    [CompilerGeneratedAttribute]
internal static void set_ExecutableFile(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_File();
    [CompilerGeneratedAttribute]
internal static void set_File(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ProviderKeyName();
    [CompilerGeneratedAttribute]
internal static void set_ProviderKeyName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Assembly();
    [CompilerGeneratedAttribute]
internal static void set_Assembly(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Provider();
    [CompilerGeneratedAttribute]
internal static void set_Provider(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.AsymmetricKeyAlgorithm : Enum {
    public int value__;
    public static AsymmetricKeyAlgorithm Unknown;
    public static AsymmetricKeyAlgorithm Rsa512;
    public static AsymmetricKeyAlgorithm Rsa1024;
    public static AsymmetricKeyAlgorithm Rsa2048;
    public static AsymmetricKeyAlgorithm Rsa3072;
    public static AsymmetricKeyAlgorithm Rsa4096;
}
public static class Microsoft.SqlServer.Dac.Model.AuditAction : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Action>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Action { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Action();
    [CompilerGeneratedAttribute]
internal static void set_Action(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.AuditActionGroup : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ActionGroup>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ActionGroup { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ActionGroup();
    [CompilerGeneratedAttribute]
internal static void set_ActionGroup(ModelPropertyClass value);
}
public enum Microsoft.SqlServer.Dac.Model.AuditActionGroupType : Enum {
    public int value__;
    public static AuditActionGroupType None;
    public static AuditActionGroupType SuccessfulLogin;
    public static AuditActionGroupType Logout;
    public static AuditActionGroupType ServerStateChange;
    public static AuditActionGroupType FailedLogin;
    public static AuditActionGroupType LoginChangePassword;
    public static AuditActionGroupType ServerRoleMemberChange;
    public static AuditActionGroupType ServerPrincipalImpersonation;
    public static AuditActionGroupType ServerObjectOwnershipChange;
    public static AuditActionGroupType DatabaseMirroringLogin;
    public static AuditActionGroupType BrokerLogin;
    public static AuditActionGroupType ServerPermissionChange;
    public static AuditActionGroupType ServerObjectPermissionChange;
    public static AuditActionGroupType ServerOperation;
    public static AuditActionGroupType TraceChange;
    public static AuditActionGroupType ServerObjectChange;
    public static AuditActionGroupType ServerPrincipalChange;
    public static AuditActionGroupType DatabasePermissionChange;
    public static AuditActionGroupType SchemaObjectPermissionChange;
    public static AuditActionGroupType DatabaseRoleMemberChange;
    public static AuditActionGroupType ApplicationRoleChangePassword;
    public static AuditActionGroupType SchemaObjectAccess;
    public static AuditActionGroupType BackupRestore;
    public static AuditActionGroupType Dbcc;
    public static AuditActionGroupType AuditChange;
    public static AuditActionGroupType DatabaseChange;
    public static AuditActionGroupType DatabaseObjectChange;
    public static AuditActionGroupType DatabasePrincipalChange;
    public static AuditActionGroupType SchemaObjectChange;
    public static AuditActionGroupType DatabasePrincipalImpersonation;
    public static AuditActionGroupType DatabaseObjectOwnershipChange;
    public static AuditActionGroupType DatabaseOwnershipChange;
    public static AuditActionGroupType SchemaObjectOwnershipChange;
    public static AuditActionGroupType DatabaseObjectPermissionChange;
    public static AuditActionGroupType DatabaseOperation;
    public static AuditActionGroupType DatabaseObjectAccess;
    public static AuditActionGroupType SuccessfulDatabaseAuthenticationGroup;
    public static AuditActionGroupType FailedDatabaseAuthenticationGroup;
    public static AuditActionGroupType DatabaseLogoutGroup;
    public static AuditActionGroupType UserChangePasswordGroup;
    public static AuditActionGroupType UserDefinedAuditGroup;
    public static AuditActionGroupType TransactionBegin;
    public static AuditActionGroupType TransactionCommit;
    public static AuditActionGroupType TransactionRollback;
    public static AuditActionGroupType StatementRollback;
    public static AuditActionGroupType TransactionGroup;
}
public static class Microsoft.SqlServer.Dac.Model.AuditActionSpecification : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AuditsDatabase>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AuditActions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Principals>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <SecuredObject>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AuditsDatabase { get; internal set; }
    public static ModelRelationshipClass AuditActions { get; internal set; }
    public static ModelRelationshipClass Principals { get; internal set; }
    public static ModelRelationshipClass SecuredObject { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AuditsDatabase();
    [CompilerGeneratedAttribute]
internal static void set_AuditsDatabase(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AuditActions();
    [CompilerGeneratedAttribute]
internal static void set_AuditActions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Principals();
    [CompilerGeneratedAttribute]
internal static void set_Principals(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_SecuredObject();
    [CompilerGeneratedAttribute]
internal static void set_SecuredObject(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.AuditTarget : Enum {
    public int value__;
    public static AuditTarget File;
    public static AuditTarget ApplicationLog;
    public static AuditTarget SecurityLog;
    public static AuditTarget Url;
    public static AuditTarget ExternalMonitor;
}
[FlagsAttribute]
public enum Microsoft.SqlServer.Dac.Model.AuthenticationModes : Enum {
    public int value__;
    public static AuthenticationModes None;
    public static AuthenticationModes Basic;
    public static AuthenticationModes Digest;
    public static AuthenticationModes Integrated;
    public static AuthenticationModes Ntlm;
    public static AuthenticationModes Kerberos;
    public static AuthenticationModes Negotiate;
}
public enum Microsoft.SqlServer.Dac.Model.AuthenticationType : Enum {
    public int value__;
    public static AuthenticationType None;
    public static AuthenticationType InstanceAuthentication;
    public static AuthenticationType DatabaseAuthentication;
    public static AuthenticationType WindowsAuthentication;
    public static AuthenticationType ExternalAuthenticationProvider;
}
public static class Microsoft.SqlServer.Dac.Model.BrokerPriority : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RemoteServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PriorityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ContractName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <LocalServiceName>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass RemoteServiceName { get; internal set; }
    public static ModelPropertyClass PriorityLevel { get; internal set; }
    public static ModelRelationshipClass ContractName { get; internal set; }
    public static ModelRelationshipClass LocalServiceName { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RemoteServiceName();
    [CompilerGeneratedAttribute]
internal static void set_RemoteServiceName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PriorityLevel();
    [CompilerGeneratedAttribute]
internal static void set_PriorityLevel(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ContractName();
    [CompilerGeneratedAttribute]
internal static void set_ContractName(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_LocalServiceName();
    [CompilerGeneratedAttribute]
internal static void set_LocalServiceName(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.BuiltInServerRole : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
}
public enum Microsoft.SqlServer.Dac.Model.CatalogCollation : Enum {
    public int value__;
    public static CatalogCollation Database_Default;
    public static CatalogCollation Latin1_General_100_CI_AS_KS_WS_SC;
    public static CatalogCollation SQL_Latin1_General_CP1_CI_AS;
}
public static class Microsoft.SqlServer.Dac.Model.Certificate : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ActiveForBeginDialog>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptedWithPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptionPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExpiryDate>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <StartDate>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PrivateKeyFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExistingKeysFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsExistingKeyFileExecutable>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PrivateKeyDecryptionPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PrivateKeyEncryptionPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExistingKeysAssembly>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ActiveForBeginDialog { get; internal set; }
    public static ModelPropertyClass EncryptedWithPassword { get; internal set; }
    public static ModelPropertyClass EncryptionPassword { get; internal set; }
    public static ModelPropertyClass ExpiryDate { get; internal set; }
    public static ModelPropertyClass StartDate { get; internal set; }
    public static ModelPropertyClass Subject { get; internal set; }
    public static ModelPropertyClass PrivateKeyFilePath { get; internal set; }
    public static ModelPropertyClass ExistingKeysFilePath { get; internal set; }
    public static ModelPropertyClass IsExistingKeyFileExecutable { get; internal set; }
    public static ModelPropertyClass PrivateKeyDecryptionPassword { get; internal set; }
    public static ModelPropertyClass PrivateKeyEncryptionPassword { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    public static ModelRelationshipClass ExistingKeysAssembly { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ActiveForBeginDialog();
    [CompilerGeneratedAttribute]
internal static void set_ActiveForBeginDialog(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptedWithPassword();
    [CompilerGeneratedAttribute]
internal static void set_EncryptedWithPassword(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptionPassword();
    [CompilerGeneratedAttribute]
internal static void set_EncryptionPassword(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExpiryDate();
    [CompilerGeneratedAttribute]
internal static void set_ExpiryDate(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_StartDate();
    [CompilerGeneratedAttribute]
internal static void set_StartDate(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Subject();
    [CompilerGeneratedAttribute]
internal static void set_Subject(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PrivateKeyFilePath();
    [CompilerGeneratedAttribute]
internal static void set_PrivateKeyFilePath(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExistingKeysFilePath();
    [CompilerGeneratedAttribute]
internal static void set_ExistingKeysFilePath(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsExistingKeyFileExecutable();
    [CompilerGeneratedAttribute]
internal static void set_IsExistingKeyFileExecutable(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PrivateKeyDecryptionPassword();
    [CompilerGeneratedAttribute]
internal static void set_PrivateKeyDecryptionPassword(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PrivateKeyEncryptionPassword();
    [CompilerGeneratedAttribute]
internal static void set_PrivateKeyEncryptionPassword(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExistingKeysAssembly();
    [CompilerGeneratedAttribute]
internal static void set_ExistingKeysAssembly(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.ChangeTrackingOption : Enum {
    public int value__;
    public static ChangeTrackingOption Unknown;
    public static ChangeTrackingOption Auto;
    public static ChangeTrackingOption Manual;
    public static ChangeTrackingOption Off;
}
public enum Microsoft.SqlServer.Dac.Model.CharacterSet : Enum {
    public int value__;
    public static CharacterSet Unknown;
    public static CharacterSet Sql;
    public static CharacterSet Xml;
}
public static class Microsoft.SqlServer.Dac.Model.CheckConstraint : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NotForReplication>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExpressionDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Host>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Expression { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass NotForReplication { get; internal set; }
    public static ModelRelationshipClass ExpressionDependencies { get; internal set; }
    public static ModelRelationshipClass Host { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Expression();
    [CompilerGeneratedAttribute]
internal static void set_Expression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NotForReplication();
    [CompilerGeneratedAttribute]
internal static void set_NotForReplication(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExpressionDependencies();
    [CompilerGeneratedAttribute]
internal static void set_ExpressionDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Host();
    [CompilerGeneratedAttribute]
internal static void set_Host(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ClrTableOption : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <OrderColumns>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ClassName { get; internal set; }
    public static ModelRelationshipClass OrderColumns { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ClassName();
    [CompilerGeneratedAttribute]
internal static void set_ClassName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_OrderColumns();
    [CompilerGeneratedAttribute]
internal static void set_OrderColumns(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ClrTypeMethod : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ReturnType>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Name { get; internal set; }
    public static ModelRelationshipClass Parameters { get; internal set; }
    public static ModelRelationshipClass ReturnType { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Name();
    [CompilerGeneratedAttribute]
internal static void set_Name(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Parameters();
    [CompilerGeneratedAttribute]
internal static void set_Parameters(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ReturnType();
    [CompilerGeneratedAttribute]
internal static void set_ReturnType(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ClrTypeMethodParameter : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsOutput>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataType>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Name { get; internal set; }
    public static ModelPropertyClass IsOutput { get; internal set; }
    public static ModelRelationshipClass DataType { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Name();
    [CompilerGeneratedAttribute]
internal static void set_Name(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsOutput();
    [CompilerGeneratedAttribute]
internal static void set_IsOutput(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataType();
    [CompilerGeneratedAttribute]
internal static void set_DataType(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ClrTypeProperty : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ClrType>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Name { get; internal set; }
    public static ModelRelationshipClass ClrType { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Name();
    [CompilerGeneratedAttribute]
internal static void set_Name(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ClrType();
    [CompilerGeneratedAttribute]
internal static void set_ClrType(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Column : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelMetadataClass <ColumnType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Collation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsIdentityNotForReplication>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Nullable>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsRowGuidCol>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Sparse>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Persisted>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PersistedNullable>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Scale>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Precision>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Length>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsMax>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <XmlStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptionAlgorithmName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptionType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <GeneratedAlwaysType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <GraphType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IdentityIncrement>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IdentitySeed>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsFileStream>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsHidden>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsPseudoColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaskingFunction>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SensitivityInformationType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SensitivityInformationTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SensitivityLabel>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SensitivityLabelId>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SensitivityRank>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExpressionDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlSchemaCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ColumnEncryptionKey>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelMetadataClass ColumnType { get; internal set; }
    public static ModelPropertyClass Collation { get; internal set; }
    public static ModelPropertyClass IsIdentityNotForReplication { get; internal set; }
    public static ModelPropertyClass Nullable { get; internal set; }
    public static ModelPropertyClass IsRowGuidCol { get; internal set; }
    public static ModelPropertyClass Sparse { get; internal set; }
    public static ModelPropertyClass Expression { get; internal set; }
    public static ModelPropertyClass Persisted { get; internal set; }
    public static ModelPropertyClass PersistedNullable { get; internal set; }
    public static ModelPropertyClass Scale { get; internal set; }
    public static ModelPropertyClass Precision { get; internal set; }
    public static ModelPropertyClass Length { get; internal set; }
    public static ModelPropertyClass IsMax { get; internal set; }
    public static ModelPropertyClass XmlStyle { get; internal set; }
    public static ModelPropertyClass EncryptionAlgorithmName { get; internal set; }
    public static ModelPropertyClass EncryptionType { get; internal set; }
    public static ModelPropertyClass GeneratedAlwaysType { get; internal set; }
    public static ModelPropertyClass GraphType { get; internal set; }
    public static ModelPropertyClass IdentityIncrement { get; internal set; }
    public static ModelPropertyClass IdentitySeed { get; internal set; }
    public static ModelPropertyClass IsFileStream { get; internal set; }
    public static ModelPropertyClass IsHidden { get; internal set; }
    public static ModelPropertyClass IsIdentity { get; internal set; }
    public static ModelPropertyClass IsPseudoColumn { get; internal set; }
    public static ModelPropertyClass MaskingFunction { get; internal set; }
    public static ModelPropertyClass SensitivityInformationType { get; internal set; }
    public static ModelPropertyClass SensitivityInformationTypeId { get; internal set; }
    public static ModelPropertyClass SensitivityLabel { get; internal set; }
    public static ModelPropertyClass SensitivityLabelId { get; internal set; }
    public static ModelPropertyClass SensitivityRank { get; internal set; }
    public static ModelRelationshipClass ExpressionDependencies { get; internal set; }
    public static ModelRelationshipClass XmlSchemaCollection { get; internal set; }
    public static ModelRelationshipClass DataType { get; internal set; }
    public static ModelRelationshipClass ColumnEncryptionKey { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelMetadataClass get_ColumnType();
    [CompilerGeneratedAttribute]
internal static void set_ColumnType(ModelMetadataClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Collation();
    [CompilerGeneratedAttribute]
internal static void set_Collation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsIdentityNotForReplication();
    [CompilerGeneratedAttribute]
internal static void set_IsIdentityNotForReplication(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Nullable();
    [CompilerGeneratedAttribute]
internal static void set_Nullable(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsRowGuidCol();
    [CompilerGeneratedAttribute]
internal static void set_IsRowGuidCol(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Sparse();
    [CompilerGeneratedAttribute]
internal static void set_Sparse(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Expression();
    [CompilerGeneratedAttribute]
internal static void set_Expression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Persisted();
    [CompilerGeneratedAttribute]
internal static void set_Persisted(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PersistedNullable();
    [CompilerGeneratedAttribute]
internal static void set_PersistedNullable(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Scale();
    [CompilerGeneratedAttribute]
internal static void set_Scale(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Precision();
    [CompilerGeneratedAttribute]
internal static void set_Precision(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Length();
    [CompilerGeneratedAttribute]
internal static void set_Length(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsMax();
    [CompilerGeneratedAttribute]
internal static void set_IsMax(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_XmlStyle();
    [CompilerGeneratedAttribute]
internal static void set_XmlStyle(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptionAlgorithmName();
    [CompilerGeneratedAttribute]
internal static void set_EncryptionAlgorithmName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptionType();
    [CompilerGeneratedAttribute]
internal static void set_EncryptionType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_GeneratedAlwaysType();
    [CompilerGeneratedAttribute]
internal static void set_GeneratedAlwaysType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_GraphType();
    [CompilerGeneratedAttribute]
internal static void set_GraphType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IdentityIncrement();
    [CompilerGeneratedAttribute]
internal static void set_IdentityIncrement(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IdentitySeed();
    [CompilerGeneratedAttribute]
internal static void set_IdentitySeed(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsFileStream();
    [CompilerGeneratedAttribute]
internal static void set_IsFileStream(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsHidden();
    [CompilerGeneratedAttribute]
internal static void set_IsHidden(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsIdentity();
    [CompilerGeneratedAttribute]
internal static void set_IsIdentity(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsPseudoColumn();
    [CompilerGeneratedAttribute]
internal static void set_IsPseudoColumn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaskingFunction();
    [CompilerGeneratedAttribute]
internal static void set_MaskingFunction(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SensitivityInformationType();
    [CompilerGeneratedAttribute]
internal static void set_SensitivityInformationType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SensitivityInformationTypeId();
    [CompilerGeneratedAttribute]
internal static void set_SensitivityInformationTypeId(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SensitivityLabel();
    [CompilerGeneratedAttribute]
internal static void set_SensitivityLabel(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SensitivityLabelId();
    [CompilerGeneratedAttribute]
internal static void set_SensitivityLabelId(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SensitivityRank();
    [CompilerGeneratedAttribute]
internal static void set_SensitivityRank(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExpressionDependencies();
    [CompilerGeneratedAttribute]
internal static void set_ExpressionDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlSchemaCollection();
    [CompilerGeneratedAttribute]
internal static void set_XmlSchemaCollection(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataType();
    [CompilerGeneratedAttribute]
internal static void set_DataType(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ColumnEncryptionKey();
    [CompilerGeneratedAttribute]
internal static void set_ColumnEncryptionKey(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ColumnEncryptionKey : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ColumnEncryptionKeyValue>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelRelationshipClass ColumnEncryptionKeyValue { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ColumnEncryptionKeyValue();
    [CompilerGeneratedAttribute]
internal static void set_ColumnEncryptionKeyValue(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ColumnEncryptionKeyValue : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptedValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptionAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ColumnMasterKey>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass EncryptedValue { get; internal set; }
    public static ModelPropertyClass EncryptionAlgorithm { get; internal set; }
    public static ModelRelationshipClass ColumnMasterKey { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptedValue();
    [CompilerGeneratedAttribute]
internal static void set_EncryptedValue(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptionAlgorithm();
    [CompilerGeneratedAttribute]
internal static void set_EncryptionAlgorithm(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ColumnMasterKey();
    [CompilerGeneratedAttribute]
internal static void set_ColumnMasterKey(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.ColumnGeneratedAlwaysType : Enum {
    public int value__;
    public static ColumnGeneratedAlwaysType None;
    public static ColumnGeneratedAlwaysType GeneratedAlwaysAsRowStart;
    public static ColumnGeneratedAlwaysType GeneratedAlwaysAsRowEnd;
    public static ColumnGeneratedAlwaysType GeneratedAlwaysAsTransactionIdStart;
    public static ColumnGeneratedAlwaysType GeneratedAlwaysAsTransactionIdEnd;
    public static ColumnGeneratedAlwaysType GeneratedAlwaysAsSequenceNumberStart;
    public static ColumnGeneratedAlwaysType GeneratedAlwaysAsSequenceNumberEnd;
}
public static class Microsoft.SqlServer.Dac.Model.ColumnMasterKey : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowEnclaveComputations>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <KeyPath>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <KeyStoreProviderName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Signature>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AllowEnclaveComputations { get; internal set; }
    public static ModelPropertyClass KeyPath { get; internal set; }
    public static ModelPropertyClass KeyStoreProviderName { get; internal set; }
    public static ModelPropertyClass Signature { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowEnclaveComputations();
    [CompilerGeneratedAttribute]
internal static void set_AllowEnclaveComputations(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_KeyPath();
    [CompilerGeneratedAttribute]
internal static void set_KeyPath(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_KeyStoreProviderName();
    [CompilerGeneratedAttribute]
internal static void set_KeyStoreProviderName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Signature();
    [CompilerGeneratedAttribute]
internal static void set_Signature(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ColumnStoreIndex : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Clustered>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FilterPredicate>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CompressionDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BodyDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataCompressionOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <IndexedObject>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <OrderedColumns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlCompressionOptions>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass Clustered { get; internal set; }
    public static ModelPropertyClass FilterPredicate { get; internal set; }
    public static ModelPropertyClass CompressionDelay { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass BodyDependencies { get; internal set; }
    public static ModelRelationshipClass DataCompressionOptions { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    public static ModelRelationshipClass IndexedObject { get; internal set; }
    public static ModelRelationshipClass OrderedColumns { get; internal set; }
    public static ModelRelationshipClass PartitionColumn { get; internal set; }
    public static ModelRelationshipClass PartitionScheme { get; internal set; }
    public static ModelRelationshipClass XmlCompressionOptions { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Clustered();
    [CompilerGeneratedAttribute]
internal static void set_Clustered(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FilterPredicate();
    [CompilerGeneratedAttribute]
internal static void set_FilterPredicate(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CompressionDelay();
    [CompilerGeneratedAttribute]
internal static void set_CompressionDelay(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BodyDependencies();
    [CompilerGeneratedAttribute]
internal static void set_BodyDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_DataCompressionOptions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_IndexedObject();
    [CompilerGeneratedAttribute]
internal static void set_IndexedObject(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_OrderedColumns();
    [CompilerGeneratedAttribute]
internal static void set_OrderedColumns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionColumn();
    [CompilerGeneratedAttribute]
internal static void set_PartitionColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_PartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_XmlCompressionOptions(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.ColumnType : Enum {
    public int value__;
    public static ColumnType Column;
    public static ColumnType ComputedColumn;
    public static ColumnType ColumnSet;
}
public enum Microsoft.SqlServer.Dac.Model.CompressionLevel : Enum {
    public int value__;
    public static CompressionLevel None;
    public static CompressionLevel Row;
    public static CompressionLevel Page;
    public static CompressionLevel ColumnStore;
    public static CompressionLevel ColumnStoreArchive;
}
public enum Microsoft.SqlServer.Dac.Model.Containment : Enum {
    public int value__;
    public static Containment None;
    public static Containment Partial;
}
public static class Microsoft.SqlServer.Dac.Model.Contract : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Messages>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelRelationshipClass Messages { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Messages();
    [CompilerGeneratedAttribute]
internal static void set_Messages(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
}
internal class Microsoft.SqlServer.Dac.Model.CreateProcedureStatementWithCommentedScriptBody : ElementWithCommentedScriptBody`1<CreateProcedureStatement> {
    public CreateProcedureStatementWithCommentedScriptBody(string script, SqlPlatforms sqlPlatform, TSqlParserLookup tSqlParserRepository);
    public virtual TSqlScript GetTSqlScriptWithCommentedScriptBody();
}
internal class Microsoft.SqlServer.Dac.Model.CreateViewStatementWithCommentedScriptBody : ElementWithCommentedScriptBody`1<CreateViewStatement> {
    public CreateViewStatementWithCommentedScriptBody(string script, SqlPlatforms sqlPlatform, TSqlParserLookup tSqlParserRepository);
    public virtual TSqlScript GetTSqlScriptWithCommentedScriptBody();
}
public static class Microsoft.SqlServer.Dac.Model.Credential : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Secret>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <CryptographicProvider>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Identity { get; internal set; }
    public static ModelPropertyClass Secret { get; internal set; }
    public static ModelRelationshipClass CryptographicProvider { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Identity();
    [CompilerGeneratedAttribute]
internal static void set_Identity(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Secret();
    [CompilerGeneratedAttribute]
internal static void set_Secret(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_CryptographicProvider();
    [CompilerGeneratedAttribute]
internal static void set_CryptographicProvider(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.CryptographicProvider : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DllPath>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Enabled>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass DllPath { get; internal set; }
    public static ModelPropertyClass Enabled { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DllPath();
    [CompilerGeneratedAttribute]
internal static void set_DllPath(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Enabled();
    [CompilerGeneratedAttribute]
internal static void set_Enabled(ModelPropertyClass value);
}
[FlagsAttribute]
public enum Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes : Enum {
    public int value__;
    public static DacExternalQueryScopes None;
    public static DacExternalQueryScopes UserDefined;
    public static DacExternalQueryScopes BuiltIn;
    public static DacExternalQueryScopes SameDatabase;
    public static DacExternalQueryScopes System;
    public static DacExternalQueryScopes DifferentDatabaseSameServer;
    public static DacExternalQueryScopes DifferentDatabaseDifferentServer;
    public static DacExternalQueryScopes Default;
    public static DacExternalQueryScopes All;
}
public class Microsoft.SqlServer.Dac.Model.DacModelError : object {
    [CompilerGeneratedAttribute]
private ModelErrorType <ErrorType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Line>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Column>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelErrorSeverity <Severity>k__BackingField;
    public ModelErrorType ErrorType { get; private set; }
    public int ErrorCode { get; private set; }
    public int Line { get; private set; }
    public int Column { get; private set; }
    public string Prefix { get; private set; }
    public string Message { get; private set; }
    public string SourceName { get; private set; }
    public string SourceType { get; private set; }
    public ModelErrorSeverity Severity { get; private set; }
    private DacModelError(DataSchemaError schemaError, string sourceName, ModelErrorType errorType, string sourceType);
    internal DacModelError(string message, string sourceName, string sourceType, ModelErrorType errorType, int errorCode, ErrorSeverity severity);
    [CompilerGeneratedAttribute]
public ModelErrorType get_ErrorType();
    [CompilerGeneratedAttribute]
private void set_ErrorType(ModelErrorType value);
    [CompilerGeneratedAttribute]
public int get_ErrorCode();
    [CompilerGeneratedAttribute]
private void set_ErrorCode(int value);
    [CompilerGeneratedAttribute]
public int get_Line();
    [CompilerGeneratedAttribute]
private void set_Line(int value);
    [CompilerGeneratedAttribute]
public int get_Column();
    [CompilerGeneratedAttribute]
private void set_Column(int value);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
private void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_SourceName();
    [CompilerGeneratedAttribute]
private void set_SourceName(string value);
    [CompilerGeneratedAttribute]
public string get_SourceType();
    [CompilerGeneratedAttribute]
private void set_SourceType(string value);
    [CompilerGeneratedAttribute]
public ModelErrorSeverity get_Severity();
    [CompilerGeneratedAttribute]
private void set_Severity(ModelErrorSeverity value);
    internal static DacModelError CreateDacModelError(DataSchemaError dataSchemaError, string sourceName, string sourceType);
    private static ModelErrorSeverity GetModelErrorSeverity(ErrorSeverity severity);
}
public class Microsoft.SqlServer.Dac.Model.DacModelException : Exception {
    private static ICollection`1<DacModelMessage> EmptyMessageList;
    private ICollection`1<DacModelMessage> _messages;
    public ICollection`1<DacModelMessage> Messages { get; }
    public DacModelException(string message);
    public DacModelException(string message, Exception innerException);
    protected DacModelException(SerializationInfo info, StreamingContext context);
    private DacModelException(string message, ICollection`1<DacModelMessage> messages, Exception innerException);
    private static DacModelException();
    public ICollection`1<DacModelMessage> get_Messages();
    internal static DacModelException Create(string message, Object[] args);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    internal static DacModelException Create(Exception innerException, string message, Object[] args);
    internal static DacModelException Create(string message, IList`1<DacModelMessage> messages, Exception innerException);
}
public class Microsoft.SqlServer.Dac.Model.DacModelMessage : DacMessage {
    internal DacModelMessage(DataSchemaError error);
    internal static IList`1<DacModelMessage> MapModelErrors(IEnumerable`1<DataSchemaError> errors);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.SqlServer.Dac.Model.DacModelResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string AddObjectsErrorAddingObjects { get; }
    internal static string AddObjectsModelErrorsExist { get; }
    internal static string AstNotRetrieved { get; }
    internal static string AstNotSupportedError { get; }
    internal static string AutoGeneratedCommentedScriptBodyText { get; }
    internal static string ConvertObject_SourceNameDifferentFromObjectSource { get; }
    internal static string ConvertObject_SourceNameExists { get; }
    internal static string ConvertObject_WhitespaceNotAllowed { get; }
    internal static string DacpacLoadReferenceError { get; }
    internal static string DeleteObjectsErrorDeletingObjects { get; }
    internal static string DeleteObjectsModelErrorsExist { get; }
    internal static string ErrorScriptNameValidation { get; }
    internal static string GetObjectsTopLevelTypesRequiredError { get; }
    internal static string InconsistentPropertyTypes { get; }
    internal static string InternalPropertyMappingInvalid { get; }
    internal static string InternalPropertyTypeMismatchErrorMessage { get; }
    internal static string InternalRelationshipMappingInvalid { get; }
    internal static string InternalTypeMappingInvalid { get; }
    internal static string InvalidContextObjectErrorMessage { get; }
    internal static string InvalidContextObjectForDefaultErrorMessage { get; }
    internal static string InvalidMetadataContextErrorMessage { get; }
    internal static string InvalidMetadataTypeErrorMessage { get; }
    internal static string InvalidModelElementErrorMessage { get; }
    internal static string InvalidNavigationPathRelationship { get; }
    internal static string InvalidPropertyContextErrorMessage { get; }
    internal static string InvalidPropertyTypeErrorMessage { get; }
    internal static string InvalidRelationshipContextErrorMessage { get; }
    internal static string InvalidTypeErrorMessage { get; }
    internal static string InvalidTypeNameErrorMessage { get; }
    internal static string LoadScriptBackedModelFailed { get; }
    internal static string MetadataDoesNotMapEnumErrorMessage { get; }
    internal static string MetadataNotSupportedOnTypeErrorMessage { get; }
    internal static string MissingMetadataMappingErrorMessage { get; }
    internal static string MissingPropertyMappingErrorMessage { get; }
    internal static string MissingReference { get; }
    internal static string MissingReference_NoPackagePath { get; }
    internal static string MissingRelationshipMappingErrorMessage { get; }
    internal static string ModelDisposedError { get; }
    internal static string ModelErrorsExist { get; }
    internal static string MoreThanOneObjectMatchedId { get; }
    internal static string NoValidEnumForMetadata { get; }
    internal static string PropertiesNotSupportedForRelationshipError { get; }
    internal static string PropertyNotSupportedOnRelationshipErrorMessage { get; }
    internal static string PropertyNotSupportedOnTypeErrorMessage { get; }
    internal static string PublicContributorThrewExceptionMessage { get; }
    internal static string RelationshipNotSupportedOnTypeErrorMessage { get; }
    internal static string SaveModelErrorsExist { get; }
    internal static string ScriptNotRetrieved { get; }
    internal static string ScriptNotSupportedError { get; }
    internal static string ServiceDisposedError { get; }
    internal static string UpdateModelErr { get; }
    internal static string UpdateModelErr_PackageContainsData { get; }
    internal static string UpdateModelErr_UnsupportedDacpacVersion { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_AddObjectsErrorAddingObjects();
    internal static string get_AddObjectsModelErrorsExist();
    internal static string get_AstNotRetrieved();
    internal static string get_AstNotSupportedError();
    internal static string get_AutoGeneratedCommentedScriptBodyText();
    internal static string get_ConvertObject_SourceNameDifferentFromObjectSource();
    internal static string get_ConvertObject_SourceNameExists();
    internal static string get_ConvertObject_WhitespaceNotAllowed();
    internal static string get_DacpacLoadReferenceError();
    internal static string get_DeleteObjectsErrorDeletingObjects();
    internal static string get_DeleteObjectsModelErrorsExist();
    internal static string get_ErrorScriptNameValidation();
    internal static string get_GetObjectsTopLevelTypesRequiredError();
    internal static string get_InconsistentPropertyTypes();
    internal static string get_InternalPropertyMappingInvalid();
    internal static string get_InternalPropertyTypeMismatchErrorMessage();
    internal static string get_InternalRelationshipMappingInvalid();
    internal static string get_InternalTypeMappingInvalid();
    internal static string get_InvalidContextObjectErrorMessage();
    internal static string get_InvalidContextObjectForDefaultErrorMessage();
    internal static string get_InvalidMetadataContextErrorMessage();
    internal static string get_InvalidMetadataTypeErrorMessage();
    internal static string get_InvalidModelElementErrorMessage();
    internal static string get_InvalidNavigationPathRelationship();
    internal static string get_InvalidPropertyContextErrorMessage();
    internal static string get_InvalidPropertyTypeErrorMessage();
    internal static string get_InvalidRelationshipContextErrorMessage();
    internal static string get_InvalidTypeErrorMessage();
    internal static string get_InvalidTypeNameErrorMessage();
    internal static string get_LoadScriptBackedModelFailed();
    internal static string get_MetadataDoesNotMapEnumErrorMessage();
    internal static string get_MetadataNotSupportedOnTypeErrorMessage();
    internal static string get_MissingMetadataMappingErrorMessage();
    internal static string get_MissingPropertyMappingErrorMessage();
    internal static string get_MissingReference();
    internal static string get_MissingReference_NoPackagePath();
    internal static string get_MissingRelationshipMappingErrorMessage();
    internal static string get_ModelDisposedError();
    internal static string get_ModelErrorsExist();
    internal static string get_MoreThanOneObjectMatchedId();
    internal static string get_NoValidEnumForMetadata();
    internal static string get_PropertiesNotSupportedForRelationshipError();
    internal static string get_PropertyNotSupportedOnRelationshipErrorMessage();
    internal static string get_PropertyNotSupportedOnTypeErrorMessage();
    internal static string get_PublicContributorThrewExceptionMessage();
    internal static string get_RelationshipNotSupportedOnTypeErrorMessage();
    internal static string get_SaveModelErrorsExist();
    internal static string get_ScriptNotRetrieved();
    internal static string get_ScriptNotSupportedError();
    internal static string get_ServiceDisposedError();
    internal static string get_UpdateModelErr();
    internal static string get_UpdateModelErr_PackageContainsData();
    internal static string get_UpdateModelErr_UnsupportedDacpacVersion();
}
[FlagsAttribute]
public enum Microsoft.SqlServer.Dac.Model.DacQueryScopes : Enum {
    public int value__;
    public static DacQueryScopes None;
    public static DacQueryScopes UserDefined;
    public static DacQueryScopes BuiltIn;
    public static DacQueryScopes SameDatabase;
    public static DacQueryScopes System;
    public static DacQueryScopes Default;
    public static DacQueryScopes All;
}
public enum Microsoft.SqlServer.Dac.Model.DatabaseAuditAction : Enum {
    public int value__;
    public static DatabaseAuditAction Select;
    public static DatabaseAuditAction Update;
    public static DatabaseAuditAction Insert;
    public static DatabaseAuditAction Delete;
    public static DatabaseAuditAction Execute;
    public static DatabaseAuditAction Receive;
    public static DatabaseAuditAction References;
}
public static class Microsoft.SqlServer.Dac.Model.DatabaseAuditSpecification : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithState>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AuditActionGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AuditActions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ServerAudit>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass WithState { get; internal set; }
    public static ModelRelationshipClass AuditActionGroups { get; internal set; }
    public static ModelRelationshipClass AuditActions { get; internal set; }
    public static ModelRelationshipClass ServerAudit { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithState();
    [CompilerGeneratedAttribute]
internal static void set_WithState(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AuditActionGroups();
    [CompilerGeneratedAttribute]
internal static void set_AuditActionGroups(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AuditActions();
    [CompilerGeneratedAttribute]
internal static void set_AuditActions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ServerAudit();
    [CompilerGeneratedAttribute]
internal static void set_ServerAudit(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.DatabaseCredential : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Secret>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Identity { get; internal set; }
    public static ModelPropertyClass Secret { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Identity();
    [CompilerGeneratedAttribute]
internal static void set_Identity(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Secret();
    [CompilerGeneratedAttribute]
internal static void set_Secret(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiNullsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsCaller>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QuotedIdentifierOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsSelf>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TriggerType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BodyDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Login>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <User>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AnsiNullsOn { get; internal set; }
    public static ModelPropertyClass ExecuteAsCaller { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass WithEncryption { get; internal set; }
    public static ModelPropertyClass ExecuteAsOwner { get; internal set; }
    public static ModelPropertyClass QuotedIdentifierOn { get; internal set; }
    public static ModelPropertyClass ExecuteAsSelf { get; internal set; }
    public static ModelPropertyClass TriggerType { get; internal set; }
    public static ModelPropertyClass ClassName { get; internal set; }
    public static ModelPropertyClass MethodName { get; internal set; }
    public static ModelRelationshipClass Assembly { get; internal set; }
    public static ModelRelationshipClass BodyDependencies { get; internal set; }
    public static ModelRelationshipClass EventGroup { get; internal set; }
    public static ModelRelationshipClass EventType { get; internal set; }
    public static ModelRelationshipClass Login { get; internal set; }
    public static ModelRelationshipClass User { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiNullsOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiNullsOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsCaller();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsCaller(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithEncryption();
    [CompilerGeneratedAttribute]
internal static void set_WithEncryption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsOwner();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsOwner(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QuotedIdentifierOn();
    [CompilerGeneratedAttribute]
internal static void set_QuotedIdentifierOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsSelf();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsSelf(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TriggerType();
    [CompilerGeneratedAttribute]
internal static void set_TriggerType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ClassName();
    [CompilerGeneratedAttribute]
internal static void set_ClassName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MethodName();
    [CompilerGeneratedAttribute]
internal static void set_MethodName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Assembly();
    [CompilerGeneratedAttribute]
internal static void set_Assembly(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BodyDependencies();
    [CompilerGeneratedAttribute]
internal static void set_BodyDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventGroup();
    [CompilerGeneratedAttribute]
internal static void set_EventGroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventType();
    [CompilerGeneratedAttribute]
internal static void set_EventType(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Login();
    [CompilerGeneratedAttribute]
internal static void set_Login(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_User();
    [CompilerGeneratedAttribute]
internal static void set_User(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.DatabaseEncryptionKey : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Algorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Certificate>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AsymmetricKey>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Algorithm { get; internal set; }
    public static ModelRelationshipClass Certificate { get; internal set; }
    public static ModelRelationshipClass AsymmetricKey { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Algorithm();
    [CompilerGeneratedAttribute]
internal static void set_Algorithm(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Certificate();
    [CompilerGeneratedAttribute]
internal static void set_Certificate(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AsymmetricKey();
    [CompilerGeneratedAttribute]
internal static void set_AsymmetricKey(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.DatabaseEventNotification : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithFanIn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BrokerService>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BrokerInstanceSpecifier>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventType>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass WithFanIn { get; internal set; }
    public static ModelPropertyClass BrokerService { get; internal set; }
    public static ModelPropertyClass BrokerInstanceSpecifier { get; internal set; }
    public static ModelRelationshipClass EventGroup { get; internal set; }
    public static ModelRelationshipClass EventType { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithFanIn();
    [CompilerGeneratedAttribute]
internal static void set_WithFanIn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BrokerService();
    [CompilerGeneratedAttribute]
internal static void set_BrokerService(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BrokerInstanceSpecifier();
    [CompilerGeneratedAttribute]
internal static void set_BrokerInstanceSpecifier(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventGroup();
    [CompilerGeneratedAttribute]
internal static void set_EventGroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventType();
    [CompilerGeneratedAttribute]
internal static void set_EventType(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.DatabaseEventSession : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <StartupState>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TrackCausality>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxDispatchLatency>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxEventSizeUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxMemoryUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EventRetentionMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxEventSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MemoryPartitionMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SessionScope>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventDefinitions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventTargets>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass StartupState { get; internal set; }
    public static ModelPropertyClass TrackCausality { get; internal set; }
    public static ModelPropertyClass MaxDispatchLatency { get; internal set; }
    public static ModelPropertyClass MaxEventSizeUnit { get; internal set; }
    public static ModelPropertyClass MaxMemoryUnit { get; internal set; }
    public static ModelPropertyClass EventRetentionMode { get; internal set; }
    public static ModelPropertyClass MaxEventSize { get; internal set; }
    public static ModelPropertyClass MaxMemory { get; internal set; }
    public static ModelPropertyClass MemoryPartitionMode { get; internal set; }
    public static ModelPropertyClass SessionScope { get; internal set; }
    public static ModelRelationshipClass EventDefinitions { get; internal set; }
    public static ModelRelationshipClass EventTargets { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_StartupState();
    [CompilerGeneratedAttribute]
internal static void set_StartupState(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TrackCausality();
    [CompilerGeneratedAttribute]
internal static void set_TrackCausality(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxDispatchLatency();
    [CompilerGeneratedAttribute]
internal static void set_MaxDispatchLatency(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxEventSizeUnit();
    [CompilerGeneratedAttribute]
internal static void set_MaxEventSizeUnit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxMemoryUnit();
    [CompilerGeneratedAttribute]
internal static void set_MaxMemoryUnit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EventRetentionMode();
    [CompilerGeneratedAttribute]
internal static void set_EventRetentionMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxEventSize();
    [CompilerGeneratedAttribute]
internal static void set_MaxEventSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxMemory();
    [CompilerGeneratedAttribute]
internal static void set_MaxMemory(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MemoryPartitionMode();
    [CompilerGeneratedAttribute]
internal static void set_MemoryPartitionMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SessionScope();
    [CompilerGeneratedAttribute]
internal static void set_SessionScope(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventDefinitions();
    [CompilerGeneratedAttribute]
internal static void set_EventDefinitions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventTargets();
    [CompilerGeneratedAttribute]
internal static void set_EventTargets(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.DatabaseMirroringLanguageSpecifier : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WindowsAuthenticationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UseCertificateFirst>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptionAlgorithmPart1>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptionAlgorithmPart2>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptionMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RoleType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AuthenticationCertificate>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass WindowsAuthenticationMode { get; internal set; }
    public static ModelPropertyClass UseCertificateFirst { get; internal set; }
    public static ModelPropertyClass EncryptionAlgorithmPart1 { get; internal set; }
    public static ModelPropertyClass EncryptionAlgorithmPart2 { get; internal set; }
    public static ModelPropertyClass EncryptionMode { get; internal set; }
    public static ModelPropertyClass RoleType { get; internal set; }
    public static ModelRelationshipClass AuthenticationCertificate { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WindowsAuthenticationMode();
    [CompilerGeneratedAttribute]
internal static void set_WindowsAuthenticationMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UseCertificateFirst();
    [CompilerGeneratedAttribute]
internal static void set_UseCertificateFirst(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptionAlgorithmPart1();
    [CompilerGeneratedAttribute]
internal static void set_EncryptionAlgorithmPart1(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptionAlgorithmPart2();
    [CompilerGeneratedAttribute]
internal static void set_EncryptionAlgorithmPart2(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptionMode();
    [CompilerGeneratedAttribute]
internal static void set_EncryptionMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RoleType();
    [CompilerGeneratedAttribute]
internal static void set_RoleType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AuthenticationCertificate();
    [CompilerGeneratedAttribute]
internal static void set_AuthenticationCertificate(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.DatabaseMirroringRole : Enum {
    public int value__;
    public static DatabaseMirroringRole Unknown;
    public static DatabaseMirroringRole Witness;
    public static DatabaseMirroringRole Partner;
    public static DatabaseMirroringRole All;
}
public static class Microsoft.SqlServer.Dac.Model.DatabaseOptions : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CompatibilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowSnapshotIsolation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiNullDefaultOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiNullsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiPaddingOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiWarningsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ArithAbortOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AutoClose>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AutoCreateStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AutoCreateStatisticsIncremental>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AutoShrink>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AutoUpdateStatisticsAsync>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AutoUpdateStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <HonorBrokerPriority>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ChangeTrackingAutoCleanup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ChangeTrackingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ConcatNullYieldsNull>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CursorCloseOnCommit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CursorDefaultGlobalScope>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DateCorrelationOptimizationOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DBChainingOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FullTextEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NestedTriggersOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NumericRoundAbortOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DatabaseStateOffline>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QuotedIdentifierOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TransactionIsolationReadCommittedSnapshot>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RecursiveTriggersOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SupplementalLoggingOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TornPageProtectionOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TransformNoiseWords>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Trustworthy>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <VardecimalStorageFormatOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UserAccessOption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DelayedDurabilityMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MemoryOptimizedElevateToSnapshot>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DataRetentionEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CatalogCollation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ChangeTrackingRetentionPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ChangeTrackingRetentionUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Collation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Containment>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DefaultFullTextLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DefaultLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DWCompatibilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileStreamDirectoryName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsLedgerOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LegacyCardinalityEstimation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LegacyCardinalityEstimationForSecondary>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxDop>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxDopForSecondary>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NonTransactedFileStreamAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PageVerifyMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ParameterizationOption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ParameterSniffing>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ParameterSniffingForSecondary>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueryOptimizerHotfixes>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueryOptimizerHotfixesForSecondary>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueryStoreCaptureMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueryStoreDesiredState>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueryStoreFlushInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueryStoreIntervalLength>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueryStoreMaxPlansPerQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueryStoreMaxStorageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueryStoreStaleQueryThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RecoveryMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RemoteDataEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ServiceBrokerOption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TargetRecoveryTimePeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TargetRecoveryTimeUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TemporalHistoryRetentionEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TwoDigitYearCutoff>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DefaultFilegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DefaultFileStreamFilegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <GenericDatabaseScopedConfigurationOptions>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass CompatibilityLevel { get; internal set; }
    public static ModelPropertyClass AllowSnapshotIsolation { get; internal set; }
    public static ModelPropertyClass AnsiNullDefaultOn { get; internal set; }
    public static ModelPropertyClass AnsiNullsOn { get; internal set; }
    public static ModelPropertyClass AnsiPaddingOn { get; internal set; }
    public static ModelPropertyClass AnsiWarningsOn { get; internal set; }
    public static ModelPropertyClass ArithAbortOn { get; internal set; }
    public static ModelPropertyClass AutoClose { get; internal set; }
    public static ModelPropertyClass AutoCreateStatistics { get; internal set; }
    public static ModelPropertyClass AutoCreateStatisticsIncremental { get; internal set; }
    public static ModelPropertyClass AutoShrink { get; internal set; }
    public static ModelPropertyClass AutoUpdateStatisticsAsync { get; internal set; }
    public static ModelPropertyClass AutoUpdateStatistics { get; internal set; }
    public static ModelPropertyClass HonorBrokerPriority { get; internal set; }
    public static ModelPropertyClass ChangeTrackingAutoCleanup { get; internal set; }
    public static ModelPropertyClass ChangeTrackingEnabled { get; internal set; }
    public static ModelPropertyClass ConcatNullYieldsNull { get; internal set; }
    public static ModelPropertyClass CursorCloseOnCommit { get; internal set; }
    public static ModelPropertyClass CursorDefaultGlobalScope { get; internal set; }
    public static ModelPropertyClass DateCorrelationOptimizationOn { get; internal set; }
    public static ModelPropertyClass DBChainingOn { get; internal set; }
    public static ModelPropertyClass WithEncryption { get; internal set; }
    public static ModelPropertyClass FullTextEnabled { get; internal set; }
    public static ModelPropertyClass NestedTriggersOn { get; internal set; }
    public static ModelPropertyClass NumericRoundAbortOn { get; internal set; }
    public static ModelPropertyClass DatabaseStateOffline { get; internal set; }
    public static ModelPropertyClass QuotedIdentifierOn { get; internal set; }
    public static ModelPropertyClass TransactionIsolationReadCommittedSnapshot { get; internal set; }
    public static ModelPropertyClass ReadOnly { get; internal set; }
    public static ModelPropertyClass RecursiveTriggersOn { get; internal set; }
    public static ModelPropertyClass SupplementalLoggingOn { get; internal set; }
    public static ModelPropertyClass TornPageProtectionOn { get; internal set; }
    public static ModelPropertyClass TransformNoiseWords { get; internal set; }
    public static ModelPropertyClass Trustworthy { get; internal set; }
    public static ModelPropertyClass VardecimalStorageFormatOn { get; internal set; }
    public static ModelPropertyClass UserAccessOption { get; internal set; }
    public static ModelPropertyClass DelayedDurabilityMode { get; internal set; }
    public static ModelPropertyClass MemoryOptimizedElevateToSnapshot { get; internal set; }
    public static ModelPropertyClass DataRetentionEnabled { get; internal set; }
    public static ModelPropertyClass CatalogCollation { get; internal set; }
    public static ModelPropertyClass ChangeTrackingRetentionPeriod { get; internal set; }
    public static ModelPropertyClass ChangeTrackingRetentionUnit { get; internal set; }
    public static ModelPropertyClass Collation { get; internal set; }
    public static ModelPropertyClass Containment { get; internal set; }
    public static ModelPropertyClass DefaultFullTextLanguage { get; internal set; }
    public static ModelPropertyClass DefaultLanguage { get; internal set; }
    public static ModelPropertyClass DWCompatibilityLevel { get; internal set; }
    public static ModelPropertyClass FileStreamDirectoryName { get; internal set; }
    public static ModelPropertyClass IsLedgerOn { get; internal set; }
    public static ModelPropertyClass LegacyCardinalityEstimation { get; internal set; }
    public static ModelPropertyClass LegacyCardinalityEstimationForSecondary { get; internal set; }
    public static ModelPropertyClass MaxDop { get; internal set; }
    public static ModelPropertyClass MaxDopForSecondary { get; internal set; }
    public static ModelPropertyClass NonTransactedFileStreamAccess { get; internal set; }
    public static ModelPropertyClass PageVerifyMode { get; internal set; }
    public static ModelPropertyClass ParameterizationOption { get; internal set; }
    public static ModelPropertyClass ParameterSniffing { get; internal set; }
    public static ModelPropertyClass ParameterSniffingForSecondary { get; internal set; }
    public static ModelPropertyClass QueryOptimizerHotfixes { get; internal set; }
    public static ModelPropertyClass QueryOptimizerHotfixesForSecondary { get; internal set; }
    public static ModelPropertyClass QueryStoreCaptureMode { get; internal set; }
    public static ModelPropertyClass QueryStoreDesiredState { get; internal set; }
    public static ModelPropertyClass QueryStoreFlushInterval { get; internal set; }
    public static ModelPropertyClass QueryStoreIntervalLength { get; internal set; }
    public static ModelPropertyClass QueryStoreMaxPlansPerQuery { get; internal set; }
    public static ModelPropertyClass QueryStoreMaxStorageSize { get; internal set; }
    public static ModelPropertyClass QueryStoreStaleQueryThreshold { get; internal set; }
    public static ModelPropertyClass RecoveryMode { get; internal set; }
    public static ModelPropertyClass RemoteDataEnabled { get; internal set; }
    public static ModelPropertyClass ServiceBrokerOption { get; internal set; }
    public static ModelPropertyClass TargetRecoveryTimePeriod { get; internal set; }
    public static ModelPropertyClass TargetRecoveryTimeUnit { get; internal set; }
    public static ModelPropertyClass TemporalHistoryRetentionEnabled { get; internal set; }
    public static ModelPropertyClass TwoDigitYearCutoff { get; internal set; }
    public static ModelRelationshipClass DefaultFilegroup { get; internal set; }
    public static ModelRelationshipClass DefaultFileStreamFilegroup { get; internal set; }
    public static ModelRelationshipClass GenericDatabaseScopedConfigurationOptions { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CompatibilityLevel();
    [CompilerGeneratedAttribute]
internal static void set_CompatibilityLevel(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowSnapshotIsolation();
    [CompilerGeneratedAttribute]
internal static void set_AllowSnapshotIsolation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiNullDefaultOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiNullDefaultOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiNullsOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiNullsOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiPaddingOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiPaddingOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiWarningsOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiWarningsOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ArithAbortOn();
    [CompilerGeneratedAttribute]
internal static void set_ArithAbortOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AutoClose();
    [CompilerGeneratedAttribute]
internal static void set_AutoClose(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AutoCreateStatistics();
    [CompilerGeneratedAttribute]
internal static void set_AutoCreateStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AutoCreateStatisticsIncremental();
    [CompilerGeneratedAttribute]
internal static void set_AutoCreateStatisticsIncremental(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AutoShrink();
    [CompilerGeneratedAttribute]
internal static void set_AutoShrink(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AutoUpdateStatisticsAsync();
    [CompilerGeneratedAttribute]
internal static void set_AutoUpdateStatisticsAsync(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AutoUpdateStatistics();
    [CompilerGeneratedAttribute]
internal static void set_AutoUpdateStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_HonorBrokerPriority();
    [CompilerGeneratedAttribute]
internal static void set_HonorBrokerPriority(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ChangeTrackingAutoCleanup();
    [CompilerGeneratedAttribute]
internal static void set_ChangeTrackingAutoCleanup(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ChangeTrackingEnabled();
    [CompilerGeneratedAttribute]
internal static void set_ChangeTrackingEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ConcatNullYieldsNull();
    [CompilerGeneratedAttribute]
internal static void set_ConcatNullYieldsNull(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CursorCloseOnCommit();
    [CompilerGeneratedAttribute]
internal static void set_CursorCloseOnCommit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CursorDefaultGlobalScope();
    [CompilerGeneratedAttribute]
internal static void set_CursorDefaultGlobalScope(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DateCorrelationOptimizationOn();
    [CompilerGeneratedAttribute]
internal static void set_DateCorrelationOptimizationOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DBChainingOn();
    [CompilerGeneratedAttribute]
internal static void set_DBChainingOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithEncryption();
    [CompilerGeneratedAttribute]
internal static void set_WithEncryption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FullTextEnabled();
    [CompilerGeneratedAttribute]
internal static void set_FullTextEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NestedTriggersOn();
    [CompilerGeneratedAttribute]
internal static void set_NestedTriggersOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NumericRoundAbortOn();
    [CompilerGeneratedAttribute]
internal static void set_NumericRoundAbortOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DatabaseStateOffline();
    [CompilerGeneratedAttribute]
internal static void set_DatabaseStateOffline(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QuotedIdentifierOn();
    [CompilerGeneratedAttribute]
internal static void set_QuotedIdentifierOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TransactionIsolationReadCommittedSnapshot();
    [CompilerGeneratedAttribute]
internal static void set_TransactionIsolationReadCommittedSnapshot(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ReadOnly();
    [CompilerGeneratedAttribute]
internal static void set_ReadOnly(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RecursiveTriggersOn();
    [CompilerGeneratedAttribute]
internal static void set_RecursiveTriggersOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SupplementalLoggingOn();
    [CompilerGeneratedAttribute]
internal static void set_SupplementalLoggingOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TornPageProtectionOn();
    [CompilerGeneratedAttribute]
internal static void set_TornPageProtectionOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TransformNoiseWords();
    [CompilerGeneratedAttribute]
internal static void set_TransformNoiseWords(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Trustworthy();
    [CompilerGeneratedAttribute]
internal static void set_Trustworthy(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_VardecimalStorageFormatOn();
    [CompilerGeneratedAttribute]
internal static void set_VardecimalStorageFormatOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UserAccessOption();
    [CompilerGeneratedAttribute]
internal static void set_UserAccessOption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DelayedDurabilityMode();
    [CompilerGeneratedAttribute]
internal static void set_DelayedDurabilityMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MemoryOptimizedElevateToSnapshot();
    [CompilerGeneratedAttribute]
internal static void set_MemoryOptimizedElevateToSnapshot(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DataRetentionEnabled();
    [CompilerGeneratedAttribute]
internal static void set_DataRetentionEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CatalogCollation();
    [CompilerGeneratedAttribute]
internal static void set_CatalogCollation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ChangeTrackingRetentionPeriod();
    [CompilerGeneratedAttribute]
internal static void set_ChangeTrackingRetentionPeriod(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ChangeTrackingRetentionUnit();
    [CompilerGeneratedAttribute]
internal static void set_ChangeTrackingRetentionUnit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Collation();
    [CompilerGeneratedAttribute]
internal static void set_Collation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Containment();
    [CompilerGeneratedAttribute]
internal static void set_Containment(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DefaultFullTextLanguage();
    [CompilerGeneratedAttribute]
internal static void set_DefaultFullTextLanguage(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DefaultLanguage();
    [CompilerGeneratedAttribute]
internal static void set_DefaultLanguage(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DWCompatibilityLevel();
    [CompilerGeneratedAttribute]
internal static void set_DWCompatibilityLevel(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileStreamDirectoryName();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamDirectoryName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsLedgerOn();
    [CompilerGeneratedAttribute]
internal static void set_IsLedgerOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LegacyCardinalityEstimation();
    [CompilerGeneratedAttribute]
internal static void set_LegacyCardinalityEstimation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LegacyCardinalityEstimationForSecondary();
    [CompilerGeneratedAttribute]
internal static void set_LegacyCardinalityEstimationForSecondary(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxDop();
    [CompilerGeneratedAttribute]
internal static void set_MaxDop(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxDopForSecondary();
    [CompilerGeneratedAttribute]
internal static void set_MaxDopForSecondary(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NonTransactedFileStreamAccess();
    [CompilerGeneratedAttribute]
internal static void set_NonTransactedFileStreamAccess(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PageVerifyMode();
    [CompilerGeneratedAttribute]
internal static void set_PageVerifyMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ParameterizationOption();
    [CompilerGeneratedAttribute]
internal static void set_ParameterizationOption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ParameterSniffing();
    [CompilerGeneratedAttribute]
internal static void set_ParameterSniffing(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ParameterSniffingForSecondary();
    [CompilerGeneratedAttribute]
internal static void set_ParameterSniffingForSecondary(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueryOptimizerHotfixes();
    [CompilerGeneratedAttribute]
internal static void set_QueryOptimizerHotfixes(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueryOptimizerHotfixesForSecondary();
    [CompilerGeneratedAttribute]
internal static void set_QueryOptimizerHotfixesForSecondary(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueryStoreCaptureMode();
    [CompilerGeneratedAttribute]
internal static void set_QueryStoreCaptureMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueryStoreDesiredState();
    [CompilerGeneratedAttribute]
internal static void set_QueryStoreDesiredState(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueryStoreFlushInterval();
    [CompilerGeneratedAttribute]
internal static void set_QueryStoreFlushInterval(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueryStoreIntervalLength();
    [CompilerGeneratedAttribute]
internal static void set_QueryStoreIntervalLength(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueryStoreMaxPlansPerQuery();
    [CompilerGeneratedAttribute]
internal static void set_QueryStoreMaxPlansPerQuery(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueryStoreMaxStorageSize();
    [CompilerGeneratedAttribute]
internal static void set_QueryStoreMaxStorageSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueryStoreStaleQueryThreshold();
    [CompilerGeneratedAttribute]
internal static void set_QueryStoreStaleQueryThreshold(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RecoveryMode();
    [CompilerGeneratedAttribute]
internal static void set_RecoveryMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RemoteDataEnabled();
    [CompilerGeneratedAttribute]
internal static void set_RemoteDataEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ServiceBrokerOption();
    [CompilerGeneratedAttribute]
internal static void set_ServiceBrokerOption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TargetRecoveryTimePeriod();
    [CompilerGeneratedAttribute]
internal static void set_TargetRecoveryTimePeriod(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TargetRecoveryTimeUnit();
    [CompilerGeneratedAttribute]
internal static void set_TargetRecoveryTimeUnit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TemporalHistoryRetentionEnabled();
    [CompilerGeneratedAttribute]
internal static void set_TemporalHistoryRetentionEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TwoDigitYearCutoff();
    [CompilerGeneratedAttribute]
internal static void set_TwoDigitYearCutoff(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DefaultFilegroup();
    [CompilerGeneratedAttribute]
internal static void set_DefaultFilegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DefaultFileStreamFilegroup();
    [CompilerGeneratedAttribute]
internal static void set_DefaultFileStreamFilegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_GenericDatabaseScopedConfigurationOptions();
    [CompilerGeneratedAttribute]
internal static void set_GenericDatabaseScopedConfigurationOptions(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.DataCompressionOption : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CompressionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PartitionNumber>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass CompressionLevel { get; internal set; }
    public static ModelPropertyClass PartitionNumber { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CompressionLevel();
    [CompilerGeneratedAttribute]
internal static void set_CompressionLevel(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PartitionNumber();
    [CompilerGeneratedAttribute]
internal static void set_PartitionNumber(ModelPropertyClass value);
}
public enum Microsoft.SqlServer.Dac.Model.DataSourceType : Enum {
    public int value__;
    public static DataSourceType Hadoop;
    public static DataSourceType RDBMS;
    public static DataSourceType ShardMapManager;
    public static DataSourceType BlobStorage;
    public static DataSourceType ExternalGenerics;
}
public static class Microsoft.SqlServer.Dac.Model.DataType : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UddtNullable>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UddtIsMax>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UddtLength>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UddtPrecision>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UddtScale>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SqlDataType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Type>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass UddtNullable { get; internal set; }
    public static ModelPropertyClass UddtIsMax { get; internal set; }
    public static ModelPropertyClass UddtLength { get; internal set; }
    public static ModelPropertyClass UddtPrecision { get; internal set; }
    public static ModelPropertyClass UddtScale { get; internal set; }
    public static ModelPropertyClass SqlDataType { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    public static ModelRelationshipClass Type { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UddtNullable();
    [CompilerGeneratedAttribute]
internal static void set_UddtNullable(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UddtIsMax();
    [CompilerGeneratedAttribute]
internal static void set_UddtIsMax(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UddtLength();
    [CompilerGeneratedAttribute]
internal static void set_UddtLength(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UddtPrecision();
    [CompilerGeneratedAttribute]
internal static void set_UddtPrecision(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UddtScale();
    [CompilerGeneratedAttribute]
internal static void set_UddtScale(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SqlDataType();
    [CompilerGeneratedAttribute]
internal static void set_SqlDataType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Type();
    [CompilerGeneratedAttribute]
internal static void set_Type(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Default : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BoundObjects>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Expression { get; internal set; }
    public static ModelRelationshipClass BoundObjects { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Expression();
    [CompilerGeneratedAttribute]
internal static void set_Expression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BoundObjects();
    [CompilerGeneratedAttribute]
internal static void set_BoundObjects(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.DefaultConstraint : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithValues>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <TargetColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExpressionDependencies>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Expression { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass WithValues { get; internal set; }
    public static ModelRelationshipClass Host { get; internal set; }
    public static ModelRelationshipClass TargetColumn { get; internal set; }
    public static ModelRelationshipClass ExpressionDependencies { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Expression();
    [CompilerGeneratedAttribute]
internal static void set_Expression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithValues();
    [CompilerGeneratedAttribute]
internal static void set_WithValues(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Host();
    [CompilerGeneratedAttribute]
internal static void set_Host(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_TargetColumn();
    [CompilerGeneratedAttribute]
internal static void set_TargetColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExpressionDependencies();
    [CompilerGeneratedAttribute]
internal static void set_ExpressionDependencies(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.Degree : Enum {
    public int value__;
    public static Degree None;
    public static Degree Low;
    public static Degree Medium;
    public static Degree High;
    public static Degree Normal;
    public static Degree Above_Normal;
    public static Degree Below_Normal;
}
public enum Microsoft.SqlServer.Dac.Model.DelayedDurabilityMode : Enum {
    public int value__;
    public static DelayedDurabilityMode Disabled;
    public static DelayedDurabilityMode Allowed;
    public static DelayedDurabilityMode Forced;
}
public abstract class Microsoft.SqlServer.Dac.Model.DisplayServices : object {
    public abstract virtual string GetEscapedNameString(string name);
    public abstract virtual string GetElementName(TSqlObject element, ElementNameStyle style);
    public abstract virtual string GetDisplayName(ObjectIdentifier identifier, EscapeStyle escapeStyle, bool fullName);
}
public static class Microsoft.SqlServer.Dac.Model.DmlTrigger : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiNullsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsCaller>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NotForReplication>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QuotedIdentifierOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsSelf>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithAppend>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TriggerType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DeleteOrderRestriction>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <InsertOrderRestriction>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsDeleteTrigger>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsInsertTrigger>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsNativeCompiled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsSchemaBound>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsUpdateTrigger>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UpdateOrderRestriction>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <TriggerObject>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BodyDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Login>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <User>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AnsiNullsOn { get; internal set; }
    public static ModelPropertyClass ExecuteAsCaller { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass WithEncryption { get; internal set; }
    public static ModelPropertyClass NotForReplication { get; internal set; }
    public static ModelPropertyClass ExecuteAsOwner { get; internal set; }
    public static ModelPropertyClass QuotedIdentifierOn { get; internal set; }
    public static ModelPropertyClass ExecuteAsSelf { get; internal set; }
    public static ModelPropertyClass WithAppend { get; internal set; }
    public static ModelPropertyClass TriggerType { get; internal set; }
    public static ModelPropertyClass ClassName { get; internal set; }
    public static ModelPropertyClass DeleteOrderRestriction { get; internal set; }
    public static ModelPropertyClass InsertOrderRestriction { get; internal set; }
    public static ModelPropertyClass IsDeleteTrigger { get; internal set; }
    public static ModelPropertyClass IsInsertTrigger { get; internal set; }
    public static ModelPropertyClass IsNativeCompiled { get; internal set; }
    public static ModelPropertyClass IsSchemaBound { get; internal set; }
    public static ModelPropertyClass IsUpdateTrigger { get; internal set; }
    public static ModelPropertyClass MethodName { get; internal set; }
    public static ModelPropertyClass UpdateOrderRestriction { get; internal set; }
    public static ModelRelationshipClass TriggerObject { get; internal set; }
    public static ModelRelationshipClass Assembly { get; internal set; }
    public static ModelRelationshipClass BodyDependencies { get; internal set; }
    public static ModelRelationshipClass Login { get; internal set; }
    public static ModelRelationshipClass User { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiNullsOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiNullsOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsCaller();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsCaller(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithEncryption();
    [CompilerGeneratedAttribute]
internal static void set_WithEncryption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NotForReplication();
    [CompilerGeneratedAttribute]
internal static void set_NotForReplication(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsOwner();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsOwner(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QuotedIdentifierOn();
    [CompilerGeneratedAttribute]
internal static void set_QuotedIdentifierOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsSelf();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsSelf(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithAppend();
    [CompilerGeneratedAttribute]
internal static void set_WithAppend(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TriggerType();
    [CompilerGeneratedAttribute]
internal static void set_TriggerType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ClassName();
    [CompilerGeneratedAttribute]
internal static void set_ClassName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DeleteOrderRestriction();
    [CompilerGeneratedAttribute]
internal static void set_DeleteOrderRestriction(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_InsertOrderRestriction();
    [CompilerGeneratedAttribute]
internal static void set_InsertOrderRestriction(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsDeleteTrigger();
    [CompilerGeneratedAttribute]
internal static void set_IsDeleteTrigger(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsInsertTrigger();
    [CompilerGeneratedAttribute]
internal static void set_IsInsertTrigger(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsNativeCompiled();
    [CompilerGeneratedAttribute]
internal static void set_IsNativeCompiled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsSchemaBound();
    [CompilerGeneratedAttribute]
internal static void set_IsSchemaBound(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsUpdateTrigger();
    [CompilerGeneratedAttribute]
internal static void set_IsUpdateTrigger(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MethodName();
    [CompilerGeneratedAttribute]
internal static void set_MethodName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UpdateOrderRestriction();
    [CompilerGeneratedAttribute]
internal static void set_UpdateOrderRestriction(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_TriggerObject();
    [CompilerGeneratedAttribute]
internal static void set_TriggerObject(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Assembly();
    [CompilerGeneratedAttribute]
internal static void set_Assembly(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BodyDependencies();
    [CompilerGeneratedAttribute]
internal static void set_BodyDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Login();
    [CompilerGeneratedAttribute]
internal static void set_Login(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_User();
    [CompilerGeneratedAttribute]
internal static void set_User(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.Durability : Enum {
    public int value__;
    public static Durability SchemaAndData;
    public static Durability SchemaOnly;
}
public static class Microsoft.SqlServer.Dac.Model.EdgeConstraint : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DeleteAction>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Clauses>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass DeleteAction { get; internal set; }
    public static ModelRelationshipClass Host { get; internal set; }
    public static ModelRelationshipClass Clauses { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DeleteAction();
    [CompilerGeneratedAttribute]
internal static void set_DeleteAction(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Host();
    [CompilerGeneratedAttribute]
internal static void set_Host(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Clauses();
    [CompilerGeneratedAttribute]
internal static void set_Clauses(ModelRelationshipClass value);
}
internal abstract class Microsoft.SqlServer.Dac.Model.ElementDescriptor : object {
    public bool IsEmpty { get; }
    public bool HasUsableName { get; }
    public bool IgnoreName { get; }
    public ModelTypeClass TypeClass { get; }
    public ReadOnlyCollection`1<string> Identifiers { get; }
    public ReadOnlyCollection`1<string> ExternalReferenceParts { get; }
    public abstract virtual bool get_IsEmpty();
    public abstract virtual bool get_HasUsableName();
    public abstract virtual bool get_IgnoreName();
    public abstract virtual ModelTypeClass get_TypeClass();
    public abstract virtual ReadOnlyCollection`1<string> get_Identifiers();
    public abstract virtual ReadOnlyCollection`1<string> get_ExternalReferenceParts();
    public abstract virtual TSqlObject GetModelElement(TSqlModel model);
}
internal enum Microsoft.SqlServer.Dac.Model.ElementDescriptorRelevance : Enum {
    public int value__;
    public static ElementDescriptorRelevance None;
    public static ElementDescriptorRelevance ContainerId;
    public static ElementDescriptorRelevance SelfId;
}
public enum Microsoft.SqlServer.Dac.Model.ElementNameStyle : Enum {
    public int value__;
    public static ElementNameStyle Unknown;
    public static ElementNameStyle SimpleName;
    public static ElementNameStyle EscapedSimpleName;
    public static ElementNameStyle FullyQualifiedName;
    public static ElementNameStyle EscapedFullyQualifiedName;
}
internal abstract class Microsoft.SqlServer.Dac.Model.ElementWithCommentedScriptBody`1 : object {
    protected string AutoGeneratedCommentedScriptBodyText;
    [CompilerGeneratedAttribute]
private string <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private SqlPlatforms <SqlPlatform>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlParserLookup <TSqlParserRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlFragment <ParsedFragment>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Statement>k__BackingField;
    protected string Script { get; private set; }
    private SqlPlatforms SqlPlatform { get; private set; }
    private TSqlParserLookup TSqlParserRepository { get; private set; }
    protected TSqlFragment ParsedFragment { get; private set; }
    protected T Statement { get; private set; }
    protected ElementWithCommentedScriptBody`1(string script, SqlPlatforms sqlPlatform, TSqlParserLookup tSqlParserRepository);
    [CompilerGeneratedAttribute]
protected string get_Script();
    [CompilerGeneratedAttribute]
private void set_Script(string value);
    [CompilerGeneratedAttribute]
private SqlPlatforms get_SqlPlatform();
    [CompilerGeneratedAttribute]
private void set_SqlPlatform(SqlPlatforms value);
    [CompilerGeneratedAttribute]
private TSqlParserLookup get_TSqlParserRepository();
    [CompilerGeneratedAttribute]
private void set_TSqlParserRepository(TSqlParserLookup value);
    [CompilerGeneratedAttribute]
protected TSqlFragment get_ParsedFragment();
    [CompilerGeneratedAttribute]
private void set_ParsedFragment(TSqlFragment value);
    [CompilerGeneratedAttribute]
protected T get_Statement();
    [CompilerGeneratedAttribute]
private void set_Statement(T value);
    private TSqlFragment GetParsedFragment();
    private T ExtractSingleTSqlStatement();
    public abstract virtual TSqlScript GetTSqlScriptWithCommentedScriptBody();
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.SqlServer.Dac.Model.EmptyList`1 : object {
    private static Lazy`1<EmptyList`1<T>> ModelList;
    private IEnumerable`1<T> _emptylist;
    public static EmptyList`1<T> Instance { get; }
    public T Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    private static EmptyList`1();
    public static EmptyList`1<T> get_Instance();
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(T item);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public enum Microsoft.SqlServer.Dac.Model.EncryptionMode : Enum {
    public int value__;
    public static EncryptionMode Unknown;
    public static EncryptionMode Disabled;
    public static EncryptionMode Supported;
    public static EncryptionMode Required;
}
public static class Microsoft.SqlServer.Dac.Model.Endpoint : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Payload>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <State>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PayloadSpecifier>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ProtocolSpecifier>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Payload { get; internal set; }
    public static ModelPropertyClass Protocol { get; internal set; }
    public static ModelPropertyClass State { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    public static ModelRelationshipClass PayloadSpecifier { get; internal set; }
    public static ModelRelationshipClass ProtocolSpecifier { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Payload();
    [CompilerGeneratedAttribute]
internal static void set_Payload(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Protocol();
    [CompilerGeneratedAttribute]
internal static void set_Protocol(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_State();
    [CompilerGeneratedAttribute]
internal static void set_State(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PayloadSpecifier();
    [CompilerGeneratedAttribute]
internal static void set_PayloadSpecifier(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ProtocolSpecifier();
    [CompilerGeneratedAttribute]
internal static void set_ProtocolSpecifier(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ErrorMessage : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithLog>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MessageNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MessageText>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Severity>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass WithLog { get; internal set; }
    public static ModelPropertyClass Language { get; internal set; }
    public static ModelPropertyClass MessageNumber { get; internal set; }
    public static ModelPropertyClass MessageText { get; internal set; }
    public static ModelPropertyClass Severity { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithLog();
    [CompilerGeneratedAttribute]
internal static void set_WithLog(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Language();
    [CompilerGeneratedAttribute]
internal static void set_Language(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MessageNumber();
    [CompilerGeneratedAttribute]
internal static void set_MessageNumber(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MessageText();
    [CompilerGeneratedAttribute]
internal static void set_MessageText(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Severity();
    [CompilerGeneratedAttribute]
internal static void set_Severity(ModelPropertyClass value);
}
public enum Microsoft.SqlServer.Dac.Model.EscapeStyle : Enum {
    public int value__;
    public static EscapeStyle Escape;
    public static EscapeStyle DontEscape;
    public static EscapeStyle EscapeIfNecessary;
}
public static class Microsoft.SqlServer.Dac.Model.EventGroup : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Group>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Group { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Group();
    [CompilerGeneratedAttribute]
internal static void set_Group(ModelPropertyClass value);
}
public enum Microsoft.SqlServer.Dac.Model.EventGroupType : Enum {
    public int value__;
    public static EventGroupType Unknown;
    public static EventGroupType DdlApplicationRoleEvents;
    public static EventGroupType DdlAssemblyEvents;
    public static EventGroupType DdlAuthorizationDatabaseEvents;
    public static EventGroupType DdlAvailabilityGroupEvents;
    public static EventGroupType DdlCertificateEvents;
    public static EventGroupType DdlContractEvents;
    public static EventGroupType DdlDatabaseAuditEvents;
    public static EventGroupType DdlDatabaseLevelEvents;
    public static EventGroupType DdlDatabaseSecurityEvents;
    public static EventGroupType DdlEventNotificationEvents;
    public static EventGroupType DdlFunctionEvents;
    public static EventGroupType DdlGdrDatabaseEvents;
    public static EventGroupType DdlIndexEvents;
    public static EventGroupType DdlMessageTypeEvents;
    public static EventGroupType DdlPartitionEvents;
    public static EventGroupType DdlPartitionFunctionEvents;
    public static EventGroupType DdlPartitionSchemeEvents;
    public static EventGroupType DdlProcedureEvents;
    public static EventGroupType DdlQueueEvents;
    public static EventGroupType DdlRemoteServiceBindingEvents;
    public static EventGroupType DdlRoleEvents;
    public static EventGroupType DdlRouteEvents;
    public static EventGroupType DdlSchemaEvents;
    public static EventGroupType DdlSecurityPolicyEvents;
    public static EventGroupType DdlColumnMasterKeyEvents;
    public static EventGroupType DdlColumnEncryptionKeyEvents;
    public static EventGroupType DdlExternalResourcePoolEvents;
    public static EventGroupType DdlExternalLibraryEvents;
    public static EventGroupType DdlSensitivityEvents;
    public static EventGroupType DdlExternalLanguageEvents;
    public static EventGroupType DdlServiceEvents;
    public static EventGroupType DdlSsbEvents;
    public static EventGroupType DdlStatisticsEvents;
    public static EventGroupType DdlSynonymEvents;
    public static EventGroupType DdlTableEvents;
    public static EventGroupType DdlTableViewEvents;
    public static EventGroupType DdlTriggerEvents;
    public static EventGroupType DdlTypeEvents;
    public static EventGroupType DdlUserEvents;
    public static EventGroupType DdlViewEvents;
    public static EventGroupType DdlXmlSchemaCollectionEvents;
    public static EventGroupType DdlAuthorizationServerEvents;
    public static EventGroupType DdlEndpointEvents;
    public static EventGroupType DdlEvents;
    public static EventGroupType DdlGdrServerEvents;
    public static EventGroupType DdlLoginEvents;
    public static EventGroupType DdlServerLevelEvents;
    public static EventGroupType DdlServerSecurityEvents;
    public static EventGroupType DdlAsymmetricKeyEvents;
    public static EventGroupType DdlBrokerPriorityEvents;
    public static EventGroupType DdlCryptoSignatureEvents;
    public static EventGroupType DdlDatabaseAuditSpecificationEvents;
    public static EventGroupType DdlDatabaseEncryptionKeyEvents;
    public static EventGroupType DdlDefaultEvents;
    public static EventGroupType DdlExtendedPropertyEvents;
    public static EventGroupType DdlFullTextCatalogEvents;
    public static EventGroupType DdlFullTextStopListEvents;
    public static EventGroupType DdlMasterKeyEvents;
    public static EventGroupType DdlPlanGuideEvents;
    public static EventGroupType DdlRuleEvents;
    public static EventGroupType DdlSearchPropertyListEvents;
    public static EventGroupType DdlSequenceEvents;
    public static EventGroupType DdlSymmetricKeyEvents;
    public static EventGroupType DdlCredentialEvents;
    public static EventGroupType DdlDatabaseEvents;
    public static EventGroupType DdlCryptographicProviderEvents;
    public static EventGroupType DdlEventSessionEvents;
    public static EventGroupType DdlExtendedProcedureEvents;
    public static EventGroupType DdlLinkedServerEvents;
    public static EventGroupType DdlLinkedServerLoginEvents;
    public static EventGroupType DdlMessageEvents;
    public static EventGroupType DdlRemoteServerEvents;
    public static EventGroupType DdlResourceGovernorEvents;
    public static EventGroupType DdlResourcePool;
    public static EventGroupType DdlServerAuditEvents;
    public static EventGroupType DdlServerAuditSpecificationEvents;
    public static EventGroupType DdlServiceMasterKeyEvents;
    public static EventGroupType DdlWorkloadGroup;
    public static EventGroupType TrcClr;
    public static EventGroupType TrcDatabase;
    public static EventGroupType TrcDeprecation;
    public static EventGroupType TrcErrorsAndWarnings;
    public static EventGroupType TrcFullText;
    public static EventGroupType TrcLocks;
    public static EventGroupType TrcObjects;
    public static EventGroupType TrcOledb;
    public static EventGroupType TrcPerformance;
    public static EventGroupType TrcQueryNotifications;
    public static EventGroupType TrcSecurityAudit;
    public static EventGroupType TrcServer;
    public static EventGroupType TrcStoredProcedures;
    public static EventGroupType TrcTSql;
    public static EventGroupType TrcUserConfigurable;
    public static EventGroupType TrcAllEvents;
}
public enum Microsoft.SqlServer.Dac.Model.EventRetentionMode : Enum {
    public int value__;
    public static EventRetentionMode AllowSingleEventLoss;
    public static EventRetentionMode AllowMultipleEventLoss;
    public static EventRetentionMode NoEventLoss;
}
public static class Microsoft.SqlServer.Dac.Model.EventSession : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <StartupState>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TrackCausality>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxDispatchLatency>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxEventSizeUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxMemoryUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EventRetentionMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxEventSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MemoryPartitionMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SessionScope>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventDefinitions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventTargets>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass StartupState { get; internal set; }
    public static ModelPropertyClass TrackCausality { get; internal set; }
    public static ModelPropertyClass MaxDispatchLatency { get; internal set; }
    public static ModelPropertyClass MaxEventSizeUnit { get; internal set; }
    public static ModelPropertyClass MaxMemoryUnit { get; internal set; }
    public static ModelPropertyClass EventRetentionMode { get; internal set; }
    public static ModelPropertyClass MaxEventSize { get; internal set; }
    public static ModelPropertyClass MaxMemory { get; internal set; }
    public static ModelPropertyClass MemoryPartitionMode { get; internal set; }
    public static ModelPropertyClass SessionScope { get; internal set; }
    public static ModelRelationshipClass EventDefinitions { get; internal set; }
    public static ModelRelationshipClass EventTargets { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_StartupState();
    [CompilerGeneratedAttribute]
internal static void set_StartupState(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TrackCausality();
    [CompilerGeneratedAttribute]
internal static void set_TrackCausality(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxDispatchLatency();
    [CompilerGeneratedAttribute]
internal static void set_MaxDispatchLatency(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxEventSizeUnit();
    [CompilerGeneratedAttribute]
internal static void set_MaxEventSizeUnit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxMemoryUnit();
    [CompilerGeneratedAttribute]
internal static void set_MaxMemoryUnit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EventRetentionMode();
    [CompilerGeneratedAttribute]
internal static void set_EventRetentionMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxEventSize();
    [CompilerGeneratedAttribute]
internal static void set_MaxEventSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxMemory();
    [CompilerGeneratedAttribute]
internal static void set_MaxMemory(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MemoryPartitionMode();
    [CompilerGeneratedAttribute]
internal static void set_MemoryPartitionMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SessionScope();
    [CompilerGeneratedAttribute]
internal static void set_SessionScope(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventDefinitions();
    [CompilerGeneratedAttribute]
internal static void set_EventDefinitions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventTargets();
    [CompilerGeneratedAttribute]
internal static void set_EventTargets(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.EventSessionAction : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EventModuleGuid>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EventPackageName>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ActionName { get; internal set; }
    public static ModelPropertyClass EventModuleGuid { get; internal set; }
    public static ModelPropertyClass EventPackageName { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ActionName();
    [CompilerGeneratedAttribute]
internal static void set_ActionName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EventModuleGuid();
    [CompilerGeneratedAttribute]
internal static void set_EventModuleGuid(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EventPackageName();
    [CompilerGeneratedAttribute]
internal static void set_EventPackageName(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.EventSessionDefinitions : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WhereExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EventModuleGuid>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EventName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EventPackageName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Actions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AttributeSettings>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass WhereExpression { get; internal set; }
    public static ModelPropertyClass EventModuleGuid { get; internal set; }
    public static ModelPropertyClass EventName { get; internal set; }
    public static ModelPropertyClass EventPackageName { get; internal set; }
    public static ModelRelationshipClass Actions { get; internal set; }
    public static ModelRelationshipClass AttributeSettings { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WhereExpression();
    [CompilerGeneratedAttribute]
internal static void set_WhereExpression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EventModuleGuid();
    [CompilerGeneratedAttribute]
internal static void set_EventModuleGuid(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EventName();
    [CompilerGeneratedAttribute]
internal static void set_EventName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EventPackageName();
    [CompilerGeneratedAttribute]
internal static void set_EventPackageName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Actions();
    [CompilerGeneratedAttribute]
internal static void set_Actions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AttributeSettings();
    [CompilerGeneratedAttribute]
internal static void set_AttributeSettings(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.EventSessionScope : Enum {
    public int value__;
    public static EventSessionScope Server;
    public static EventSessionScope Database;
}
public static class Microsoft.SqlServer.Dac.Model.EventSessionSetting : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SettingValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SettingName>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass SettingValue { get; internal set; }
    public static ModelPropertyClass SettingName { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SettingValue();
    [CompilerGeneratedAttribute]
internal static void set_SettingValue(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SettingName();
    [CompilerGeneratedAttribute]
internal static void set_SettingName(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.EventSessionTarget : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EventModuleGuid>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EventPackageName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TargetName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ParameterSettings>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass EventModuleGuid { get; internal set; }
    public static ModelPropertyClass EventPackageName { get; internal set; }
    public static ModelPropertyClass TargetName { get; internal set; }
    public static ModelRelationshipClass ParameterSettings { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EventModuleGuid();
    [CompilerGeneratedAttribute]
internal static void set_EventModuleGuid(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EventPackageName();
    [CompilerGeneratedAttribute]
internal static void set_EventPackageName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TargetName();
    [CompilerGeneratedAttribute]
internal static void set_TargetName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ParameterSettings();
    [CompilerGeneratedAttribute]
internal static void set_ParameterSettings(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.EventType : Enum {
    public int value__;
    public static EventType Unknown;
    public static EventType AddRoleMember;
    public static EventType AlterApplicationRole;
    public static EventType AlterAssembly;
    public static EventType AlterAuthorizationDatabase;
    public static EventType AlterAvailabilityGroup;
    public static EventType AlterCertificate;
    public static EventType AlterColumnEncryptionKey;
    public static EventType AlterDatabaseAudit;
    public static EventType AlterFunction;
    public static EventType AlterIndex;
    public static EventType AlterMessageType;
    public static EventType AlterPartitionFunction;
    public static EventType AlterPartitionScheme;
    public static EventType AlterProcedure;
    public static EventType AlterQueue;
    public static EventType AlterRemoteServiceBinding;
    public static EventType AlterRole;
    public static EventType AlterRoute;
    public static EventType AlterSchema;
    public static EventType AlterSecurityPolicy;
    public static EventType AlterService;
    public static EventType AlterTable;
    public static EventType AlterTrigger;
    public static EventType AlterUser;
    public static EventType AlterView;
    public static EventType AlterXmlSchemaCollection;
    public static EventType CreateApplicationRole;
    public static EventType CreateAssembly;
    public static EventType CreateAvailabilityGroup;
    public static EventType CreateCertificate;
    public static EventType CreateContract;
    public static EventType CreateColumnEncryptionKey;
    public static EventType CreateColumnMasterKey;
    public static EventType CreateDatabaseAudit;
    public static EventType CreateEventNotification;
    public static EventType CreateFunction;
    public static EventType CreateIndex;
    public static EventType CreateMessageType;
    public static EventType CreatePartitionFunction;
    public static EventType CreatePartitionScheme;
    public static EventType CreateProcedure;
    public static EventType CreateQueue;
    public static EventType CreateRemoteServiceBinding;
    public static EventType CreateRole;
    public static EventType CreateRoute;
    public static EventType CreateSchema;
    public static EventType CreateSecurityPolicy;
    public static EventType CreateService;
    public static EventType CreateStatistics;
    public static EventType CreateSynonym;
    public static EventType CreateTable;
    public static EventType CreateTrigger;
    public static EventType CreateType;
    public static EventType CreateUser;
    public static EventType CreateView;
    public static EventType CreateXmlIndex;
    public static EventType CreateXmlSchemaCollection;
    public static EventType DenyDatabase;
    public static EventType DropApplicationRole;
    public static EventType DropAvailabilityGroup;
    public static EventType DropAssembly;
    public static EventType DropCertificate;
    public static EventType DropColumnEncryptionKey;
    public static EventType AlterDatabaseScopedConfiguration;
    public static EventType CreateExternalResourcePool;
    public static EventType AlterExternalResourcePool;
    public static EventType DropExternalResourcePool;
    public static EventType CreateExternalLibrary;
    public static EventType AlterExternalLibrary;
    public static EventType DropExternalLibrary;
    public static EventType AddSensitivityClassification;
    public static EventType DropSensitivityClassification;
    public static EventType CreateExternalLanguage;
    public static EventType AlterExternalLanguage;
    public static EventType DropExternalLanguage;
    public static EventType DropColumnMasterKey;
    public static EventType DropContract;
    public static EventType DropDatabaseAudit;
    public static EventType DropEventNotification;
    public static EventType DropFunction;
    public static EventType DropIndex;
    public static EventType DropMessageType;
    public static EventType DropPartitionFunction;
    public static EventType DropPartitionScheme;
    public static EventType DropProcedure;
    public static EventType DropQueue;
    public static EventType DropRemoteServiceBinding;
    public static EventType DropRole;
    public static EventType DropRoleMember;
    public static EventType DropRoute;
    public static EventType DropSchema;
    public static EventType DropSecurityPolicy;
    public static EventType DropService;
    public static EventType DropStatistics;
    public static EventType DropSynonym;
    public static EventType DropTable;
    public static EventType DropTrigger;
    public static EventType DropType;
    public static EventType DropUser;
    public static EventType DropView;
    public static EventType DropXmlSchemaCollection;
    public static EventType GrantDatabase;
    public static EventType RevokeDatabase;
    public static EventType UpdateStatistics;
    public static EventType AddServerRoleMember;
    public static EventType AlterAuthorizationServer;
    public static EventType AlterDatabase;
    public static EventType AlterEndpoint;
    public static EventType AlterLogin;
    public static EventType CreateDatabase;
    public static EventType CreateEndpoint;
    public static EventType CreateLogin;
    public static EventType DenyServer;
    public static EventType DropDatabase;
    public static EventType DropEndpoint;
    public static EventType DropLogin;
    public static EventType DropServerRoleMember;
    public static EventType GrantServer;
    public static EventType RevokeServer;
    public static EventType AddSignature;
    public static EventType AddSignatureSchemaObject;
    public static EventType AlterAsymmetricKey;
    public static EventType AlterBrokerPriority;
    public static EventType AlterDatabaseAuditSpecification;
    public static EventType AlterDatabaseEncryptionKey;
    public static EventType AlterExtendedProperty;
    public static EventType AlterFullTextCatalog;
    public static EventType AlterFullTextIndex;
    public static EventType AlterFullTextStopList;
    public static EventType AlterMasterKey;
    public static EventType AlterPlanGuide;
    public static EventType AlterSymmetricKey;
    public static EventType BindDefault;
    public static EventType BindRule;
    public static EventType CreateAsymmetricKey;
    public static EventType CreateBrokerPriority;
    public static EventType CreateDatabaseAuditSpecification;
    public static EventType CreateDatabaseEncryptionKey;
    public static EventType CreateDefault;
    public static EventType CreateExtendedProperty;
    public static EventType CreateFullTextCatalog;
    public static EventType CreateFullTextIndex;
    public static EventType CreateFullTextStopList;
    public static EventType CreateMasterKey;
    public static EventType CreatePlanGuide;
    public static EventType CreateRule;
    public static EventType CreateSpatialIndex;
    public static EventType CreateSymmetricKey;
    public static EventType DropAsymmetricKey;
    public static EventType DropBrokerPriority;
    public static EventType DropDatabaseAuditSpecification;
    public static EventType DropDatabaseEncryptionKey;
    public static EventType DropDefault;
    public static EventType DropExtendedProperty;
    public static EventType DropFullTextCatalog;
    public static EventType DropFullTextIndex;
    public static EventType DropFullTextStopList;
    public static EventType DropMasterKey;
    public static EventType DropPlanGuide;
    public static EventType DropRule;
    public static EventType DropSignature;
    public static EventType DropSignatureSchemaObject;
    public static EventType DropSymmetricKey;
    public static EventType Rename;
    public static EventType UnbindDefault;
    public static EventType UnbindRule;
    public static EventType AlterCredential;
    public static EventType AlterCryptographicProvider;
    public static EventType AlterEventSession;
    public static EventType AlterInstance;
    public static EventType AlterLinkedServer;
    public static EventType AlterMessage;
    public static EventType AlterRemoteServer;
    public static EventType AlterResourceGovernorConfig;
    public static EventType AlterResourcePool;
    public static EventType AlterServerAudit;
    public static EventType AlterServerAuditSpecification;
    public static EventType AlterServiceMasterKey;
    public static EventType AlterWorkloadGroup;
    public static EventType CreateCredential;
    public static EventType CreateCryptographicProvider;
    public static EventType CreateEventSession;
    public static EventType CreateExtendedProcedure;
    public static EventType CreateLinkedServer;
    public static EventType CreateLinkedServerLogin;
    public static EventType CreateMessage;
    public static EventType CreateRemoteServer;
    public static EventType CreateResourcePool;
    public static EventType CreateServerAudit;
    public static EventType CreateServerAuditSpecification;
    public static EventType CreateWorkloadGroup;
    public static EventType DropCredential;
    public static EventType DropCryptographicProvider;
    public static EventType DropEventSession;
    public static EventType DropExtendedProcedure;
    public static EventType DropLinkedServer;
    public static EventType DropLinkedServerLogin;
    public static EventType DropMessage;
    public static EventType DropRemoteServer;
    public static EventType DropResourcePool;
    public static EventType DropServerAudit;
    public static EventType DropServerAuditSpecification;
    public static EventType DropWorkloadGroup;
    public static EventType AssemblyLoad;
    public static EventType AuditAddDbUserEvent;
    public static EventType AuditAddLoginEvent;
    public static EventType AuditAddLoginToServerRoleEvent;
    public static EventType AuditAddMemberToDbRoleEvent;
    public static EventType AuditAddRoleEvent;
    public static EventType AuditAppRoleChangePasswordEvent;
    public static EventType AuditBackupRestoreEvent;
    public static EventType AuditChangeAuditEvent;
    public static EventType AuditChangeDatabaseOwner;
    public static EventType AuditDatabaseManagementEvent;
    public static EventType AuditDatabaseObjectAccessEvent;
    public static EventType AuditDatabaseObjectGdrEvent;
    public static EventType AuditDatabaseObjectManagementEvent;
    public static EventType AuditDatabaseObjectTakeOwnershipEvent;
    public static EventType AuditDatabaseOperationEvent;
    public static EventType AuditDatabasePrincipalImpersonationEvent;
    public static EventType AuditDatabasePrincipalManagementEvent;
    public static EventType AuditDatabaseScopeGdrEvent;
    public static EventType AuditDbccEvent;
    public static EventType AuditLogin;
    public static EventType AuditLoginChangePasswordEvent;
    public static EventType AuditLoginChangePropertyEvent;
    public static EventType AuditLoginFailed;
    public static EventType AuditLoginGdrEvent;
    public static EventType AuditLogout;
    public static EventType AuditSchemaObjectAccessEvent;
    public static EventType AuditSchemaObjectGdrEvent;
    public static EventType AuditSchemaObjectManagementEvent;
    public static EventType AuditSchemaObjectTakeOwnershipEvent;
    public static EventType AuditServerAlterTraceEvent;
    public static EventType AuditServerObjectGdrEvent;
    public static EventType AuditServerObjectManagementEvent;
    public static EventType AuditServerObjectTakeOwnershipEvent;
    public static EventType AuditServerOperationEvent;
    public static EventType AuditServerPrincipalImpersonationEvent;
    public static EventType AuditServerPrincipalManagementEvent;
    public static EventType AuditServerScopeGdrEvent;
    public static EventType BlockedProcessReport;
    public static EventType BrokerQueueDisabled;
    public static EventType DataFileAutoGrow;
    public static EventType DataFileAutoShrink;
    public static EventType DatabaseMirroringStateChange;
    public static EventType DeadlockGraph;
    public static EventType DeprecationAnnouncement;
    public static EventType DeprecationFinalSupport;
    public static EventType ErrorLog;
    public static EventType EventLog;
    public static EventType Exception;
    public static EventType ExchangeSpillEvent;
    public static EventType ExecutionWarnings;
    public static EventType FtCrawlAborted;
    public static EventType FtCrawlStarted;
    public static EventType FtCrawlStopped;
    public static EventType HashWarning;
    public static EventType LockDeadlock;
    public static EventType LockDeadlockChain;
    public static EventType LockEscalation;
    public static EventType LogFileAutoGrow;
    public static EventType LogFileAutoShrink;
    public static EventType MissingColumnStatistics;
    public static EventType MissingJoinPredicate;
    public static EventType MountTape;
    public static EventType ObjectAltered;
    public static EventType ObjectCreated;
    public static EventType ObjectDeleted;
    public static EventType OledbCallEvent;
    public static EventType OledbDataReadEvent;
    public static EventType OledbErrors;
    public static EventType OledbProviderInformation;
    public static EventType OledbQueryInterfaceEvent;
    public static EventType QnDynamics;
    public static EventType QnParameterTable;
    public static EventType QnSubscription;
    public static EventType QnTemplate;
    public static EventType QueueActivation;
    public static EventType ServerMemoryChange;
    public static EventType ShowPlanAllForQueryCompile;
    public static EventType ShowPlanXmlForQueryCompile;
    public static EventType ShowPlanXml;
    public static EventType ShowPlanXmlStatisticsProfile;
    public static EventType SortWarnings;
    public static EventType SpCacheInsert;
    public static EventType SpCacheMiss;
    public static EventType SpCacheRemove;
    public static EventType SpRecompile;
    public static EventType SqlStmtRecompile;
    public static EventType TraceFileClose;
    public static EventType UserErrorMessage;
    public static EventType UserConfigurable0;
    public static EventType UserConfigurable1;
    public static EventType UserConfigurable2;
    public static EventType UserConfigurable3;
    public static EventType UserConfigurable4;
    public static EventType UserConfigurable5;
    public static EventType UserConfigurable6;
    public static EventType UserConfigurable7;
    public static EventType UserConfigurable8;
    public static EventType UserConfigurable9;
    public static EventType XQueryStaticType;
    public static EventType AuditFullText;
    public static EventType BitmapWarning;
    public static EventType CpuThresholdExceeded;
    public static EventType DatabaseSuspectDataPage;
    public static EventType CreateSequence;
    public static EventType AlterSequence;
    public static EventType DropSequence;
    public static EventType CreateServerRole;
    public static EventType AlterServerRole;
    public static EventType DropServerRole;
    public static EventType AlterServerConfiguration;
    public static EventType CreateSearchPropertyList;
    public static EventType AlterSearchPropertyList;
    public static EventType DropSearchPropertyList;
}
public static class Microsoft.SqlServer.Dac.Model.EventTypeSpecifier : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EventType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Order>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass EventType { get; internal set; }
    public static ModelPropertyClass Order { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EventType();
    [CompilerGeneratedAttribute]
internal static void set_EventType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Order();
    [CompilerGeneratedAttribute]
internal static void set_Order(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ExtendedProcedure : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExeccuteAsCaller>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsSelf>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Login>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <User>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ExeccuteAsCaller { get; internal set; }
    public static ModelPropertyClass WithEncryption { get; internal set; }
    public static ModelPropertyClass ExecuteAsOwner { get; internal set; }
    public static ModelPropertyClass ExecuteAsSelf { get; internal set; }
    public static ModelRelationshipClass Login { get; internal set; }
    public static ModelRelationshipClass Parameters { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    public static ModelRelationshipClass User { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExeccuteAsCaller();
    [CompilerGeneratedAttribute]
internal static void set_ExeccuteAsCaller(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithEncryption();
    [CompilerGeneratedAttribute]
internal static void set_WithEncryption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsOwner();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsOwner(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsSelf();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsSelf(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Login();
    [CompilerGeneratedAttribute]
internal static void set_Login(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Parameters();
    [CompilerGeneratedAttribute]
internal static void set_Parameters(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_User();
    [CompilerGeneratedAttribute]
internal static void set_User(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ExtendedProperty : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Host>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Value { get; internal set; }
    public static ModelRelationshipClass Host { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Value();
    [CompilerGeneratedAttribute]
internal static void set_Value(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Host();
    [CompilerGeneratedAttribute]
internal static void set_Host(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ExternalDataSource : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ConnectionOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DatabaseName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DataSourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PushdownOption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ResourceManagerLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ShardMapName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Credential>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ConnectionOptions { get; internal set; }
    public static ModelPropertyClass DatabaseName { get; internal set; }
    public static ModelPropertyClass DataSourceType { get; internal set; }
    public static ModelPropertyClass Location { get; internal set; }
    public static ModelPropertyClass PushdownOption { get; internal set; }
    public static ModelPropertyClass ResourceManagerLocation { get; internal set; }
    public static ModelPropertyClass ShardMapName { get; internal set; }
    public static ModelRelationshipClass Credential { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ConnectionOptions();
    [CompilerGeneratedAttribute]
internal static void set_ConnectionOptions(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DatabaseName();
    [CompilerGeneratedAttribute]
internal static void set_DatabaseName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DataSourceType();
    [CompilerGeneratedAttribute]
internal static void set_DataSourceType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Location();
    [CompilerGeneratedAttribute]
internal static void set_Location(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PushdownOption();
    [CompilerGeneratedAttribute]
internal static void set_PushdownOption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ResourceManagerLocation();
    [CompilerGeneratedAttribute]
internal static void set_ResourceManagerLocation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ShardMapName();
    [CompilerGeneratedAttribute]
internal static void set_ShardMapName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Credential();
    [CompilerGeneratedAttribute]
internal static void set_Credential(ModelRelationshipClass value);
}
internal class Microsoft.SqlServer.Dac.Model.ExternalDefinitionMetadataContext : ModelMetadataContext {
    [CompilerGeneratedAttribute]
private IList`1<Tuple`2<ModelElementClass, int>> <TypeToEnumMappings>k__BackingField;
    internal IList`1<Tuple`2<ModelElementClass, int>> TypeToEnumMappings { get; private set; }
    public ExternalDefinitionMetadataContext(Tuple`2[] typeToEnumValueTuples);
    public ExternalDefinitionMetadataContext(IList`1<Tuple`2<ModelElementClass, int>> typeToEnumValueTuples);
    private void Init(IList`1<Tuple`2<ModelElementClass, int>> typeToEnumValueTuples);
    [CompilerGeneratedAttribute]
internal IList`1<Tuple`2<ModelElementClass, int>> get_TypeToEnumMappings();
    [CompilerGeneratedAttribute]
private void set_TypeToEnumMappings(IList`1<Tuple`2<ModelElementClass, int>> value);
    public virtual T GetValue(IModelElement element);
    private int GetEnumValueForElement(IModelElement element);
}
public static class Microsoft.SqlServer.Dac.Model.ExternalFileFormat : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DataCompression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DateFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FieldTerminator>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FirstRow>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FormatType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ParserVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SerDeMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <StringDelimiter>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UseTypeDefault>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass DataCompression { get; internal set; }
    public static ModelPropertyClass DateFormat { get; internal set; }
    public static ModelPropertyClass Encoding { get; internal set; }
    public static ModelPropertyClass FieldTerminator { get; internal set; }
    public static ModelPropertyClass FirstRow { get; internal set; }
    public static ModelPropertyClass FormatType { get; internal set; }
    public static ModelPropertyClass ParserVersion { get; internal set; }
    public static ModelPropertyClass SerDeMethod { get; internal set; }
    public static ModelPropertyClass StringDelimiter { get; internal set; }
    public static ModelPropertyClass UseTypeDefault { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DataCompression();
    [CompilerGeneratedAttribute]
internal static void set_DataCompression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DateFormat();
    [CompilerGeneratedAttribute]
internal static void set_DateFormat(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Encoding();
    [CompilerGeneratedAttribute]
internal static void set_Encoding(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FieldTerminator();
    [CompilerGeneratedAttribute]
internal static void set_FieldTerminator(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FirstRow();
    [CompilerGeneratedAttribute]
internal static void set_FirstRow(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FormatType();
    [CompilerGeneratedAttribute]
internal static void set_FormatType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ParserVersion();
    [CompilerGeneratedAttribute]
internal static void set_ParserVersion(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SerDeMethod();
    [CompilerGeneratedAttribute]
internal static void set_SerDeMethod(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_StringDelimiter();
    [CompilerGeneratedAttribute]
internal static void set_StringDelimiter(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UseTypeDefault();
    [CompilerGeneratedAttribute]
internal static void set_UseTypeDefault(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ExternalLanguage : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LanguageName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExternalLanguageFiles>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass LanguageName { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    public static ModelRelationshipClass ExternalLanguageFiles { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LanguageName();
    [CompilerGeneratedAttribute]
internal static void set_LanguageName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExternalLanguageFiles();
    [CompilerGeneratedAttribute]
internal static void set_ExternalLanguageFiles(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ExternalLanguageFile : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Platform>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EnvironmentVariables>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Content { get; internal set; }
    public static ModelPropertyClass FileName { get; internal set; }
    public static ModelPropertyClass Path { get; internal set; }
    public static ModelPropertyClass Parameters { get; internal set; }
    public static ModelPropertyClass Platform { get; internal set; }
    public static ModelPropertyClass EnvironmentVariables { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Content();
    [CompilerGeneratedAttribute]
internal static void set_Content(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileName();
    [CompilerGeneratedAttribute]
internal static void set_FileName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Path();
    [CompilerGeneratedAttribute]
internal static void set_Path(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Parameters();
    [CompilerGeneratedAttribute]
internal static void set_Parameters(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Platform();
    [CompilerGeneratedAttribute]
internal static void set_Platform(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EnvironmentVariables();
    [CompilerGeneratedAttribute]
internal static void set_EnvironmentVariables(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ExternalLibrary : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LibraryName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExternalLibraryFiles>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Language { get; internal set; }
    public static ModelPropertyClass LibraryName { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    public static ModelRelationshipClass ExternalLibraryFiles { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Language();
    [CompilerGeneratedAttribute]
internal static void set_Language(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LibraryName();
    [CompilerGeneratedAttribute]
internal static void set_LibraryName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExternalLibraryFiles();
    [CompilerGeneratedAttribute]
internal static void set_ExternalLibraryFiles(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ExternalLibraryFile : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Platform>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Path>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Content { get; internal set; }
    public static ModelPropertyClass Platform { get; internal set; }
    public static ModelPropertyClass Path { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Content();
    [CompilerGeneratedAttribute]
internal static void set_Content(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Platform();
    [CompilerGeneratedAttribute]
internal static void set_Platform(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Path();
    [CompilerGeneratedAttribute]
internal static void set_Path(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ExternalStream : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <InputOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <OutputOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataSourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileFormatName>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass InputOptions { get; internal set; }
    public static ModelPropertyClass Location { get; internal set; }
    public static ModelPropertyClass OutputOptions { get; internal set; }
    public static ModelRelationshipClass DataSourceName { get; internal set; }
    public static ModelRelationshipClass FileFormatName { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_InputOptions();
    [CompilerGeneratedAttribute]
internal static void set_InputOptions(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Location();
    [CompilerGeneratedAttribute]
internal static void set_Location(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_OutputOptions();
    [CompilerGeneratedAttribute]
internal static void set_OutputOptions(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataSourceName();
    [CompilerGeneratedAttribute]
internal static void set_DataSourceName(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileFormatName();
    [CompilerGeneratedAttribute]
internal static void set_FileFormatName(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ExternalStreamingJob : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Statement>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Statement { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Statement();
    [CompilerGeneratedAttribute]
internal static void set_Statement(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ExternalTable : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DistributionPolicyType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExternalObjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExternalSchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsAnsiNullsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsFileStreamNull>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsQuotedIdentifierOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsTableLockOnBulkLoad>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LockEscalation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RejectedRowLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RejectSampleValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RejectType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RejectValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TableOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataCompressionOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataSourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileFormatName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileStreamFilegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileStreamPartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ShardingColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlCompressionOptions>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass DistributionPolicyType { get; internal set; }
    public static ModelPropertyClass ExternalObjectName { get; internal set; }
    public static ModelPropertyClass ExternalSchemaName { get; internal set; }
    public static ModelPropertyClass IsAnsiNullsOn { get; internal set; }
    public static ModelPropertyClass IsFileStreamNull { get; internal set; }
    public static ModelPropertyClass IsQuotedIdentifierOn { get; internal set; }
    public static ModelPropertyClass IsTableLockOnBulkLoad { get; internal set; }
    public static ModelPropertyClass Location { get; internal set; }
    public static ModelPropertyClass LockEscalation { get; internal set; }
    public static ModelPropertyClass RejectedRowLocation { get; internal set; }
    public static ModelPropertyClass RejectSampleValue { get; internal set; }
    public static ModelPropertyClass RejectType { get; internal set; }
    public static ModelPropertyClass RejectValue { get; internal set; }
    public static ModelPropertyClass TableOptions { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass DataCompressionOptions { get; internal set; }
    public static ModelRelationshipClass DataSourceName { get; internal set; }
    public static ModelRelationshipClass FileFormatName { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    public static ModelRelationshipClass FileStreamFilegroup { get; internal set; }
    public static ModelRelationshipClass FileStreamPartitionScheme { get; internal set; }
    public static ModelRelationshipClass PartitionColumn { get; internal set; }
    public static ModelRelationshipClass PartitionScheme { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    public static ModelRelationshipClass ShardingColumn { get; internal set; }
    public static ModelRelationshipClass XmlCompressionOptions { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DistributionPolicyType();
    [CompilerGeneratedAttribute]
internal static void set_DistributionPolicyType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExternalObjectName();
    [CompilerGeneratedAttribute]
internal static void set_ExternalObjectName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExternalSchemaName();
    [CompilerGeneratedAttribute]
internal static void set_ExternalSchemaName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsAnsiNullsOn();
    [CompilerGeneratedAttribute]
internal static void set_IsAnsiNullsOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsFileStreamNull();
    [CompilerGeneratedAttribute]
internal static void set_IsFileStreamNull(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsQuotedIdentifierOn();
    [CompilerGeneratedAttribute]
internal static void set_IsQuotedIdentifierOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsTableLockOnBulkLoad();
    [CompilerGeneratedAttribute]
internal static void set_IsTableLockOnBulkLoad(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Location();
    [CompilerGeneratedAttribute]
internal static void set_Location(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LockEscalation();
    [CompilerGeneratedAttribute]
internal static void set_LockEscalation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RejectedRowLocation();
    [CompilerGeneratedAttribute]
internal static void set_RejectedRowLocation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RejectSampleValue();
    [CompilerGeneratedAttribute]
internal static void set_RejectSampleValue(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RejectType();
    [CompilerGeneratedAttribute]
internal static void set_RejectType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RejectValue();
    [CompilerGeneratedAttribute]
internal static void set_RejectValue(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TableOptions();
    [CompilerGeneratedAttribute]
internal static void set_TableOptions(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_DataCompressionOptions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataSourceName();
    [CompilerGeneratedAttribute]
internal static void set_DataSourceName(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileFormatName();
    [CompilerGeneratedAttribute]
internal static void set_FileFormatName(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileStreamFilegroup();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamFilegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileStreamPartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamPartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionColumn();
    [CompilerGeneratedAttribute]
internal static void set_PartitionColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_PartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ShardingColumn();
    [CompilerGeneratedAttribute]
internal static void set_ShardingColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_XmlCompressionOptions(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.FailureAction : Enum {
    public int value__;
    public static FailureAction Continue;
    public static FailureAction Shutdown;
    public static FailureAction FailOperation;
}
public enum Microsoft.SqlServer.Dac.Model.FileFormatType : Enum {
    public int value__;
    public static FileFormatType DelimitedText;
    public static FileFormatType RcFile;
    public static FileFormatType Orc;
    public static FileFormatType Parquet;
    public static FileFormatType JSON;
    public static FileFormatType Delta;
}
public static class Microsoft.SqlServer.Dac.Model.Filegroup : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ContainsFileStream>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ContainsMemoryOptimizedData>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ContainsFileStream { get; internal set; }
    public static ModelPropertyClass ReadOnly { get; internal set; }
    public static ModelPropertyClass ContainsMemoryOptimizedData { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ContainsFileStream();
    [CompilerGeneratedAttribute]
internal static void set_ContainsFileStream(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ReadOnly();
    [CompilerGeneratedAttribute]
internal static void set_ReadOnly(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ContainsMemoryOptimizedData();
    [CompilerGeneratedAttribute]
internal static void set_ContainsMemoryOptimizedData(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.FileTable : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiNullsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileStreamNull>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QuotedIdentifierOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TableLockOnBulkLoad>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileTableNamespaceEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileTableCollateFilename>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileTableDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LockEscalation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataCompressionOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileStreamFilegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileStreamPartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlCompressionOptions>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AnsiNullsOn { get; internal set; }
    public static ModelPropertyClass FileStreamNull { get; internal set; }
    public static ModelPropertyClass QuotedIdentifierOn { get; internal set; }
    public static ModelPropertyClass TableLockOnBulkLoad { get; internal set; }
    public static ModelPropertyClass FileTableNamespaceEnabled { get; internal set; }
    public static ModelPropertyClass FileTableCollateFilename { get; internal set; }
    public static ModelPropertyClass FileTableDirectory { get; internal set; }
    public static ModelPropertyClass LockEscalation { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass DataCompressionOptions { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    public static ModelRelationshipClass FileStreamFilegroup { get; internal set; }
    public static ModelRelationshipClass FileStreamPartitionScheme { get; internal set; }
    public static ModelRelationshipClass PartitionColumn { get; internal set; }
    public static ModelRelationshipClass PartitionScheme { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    public static ModelRelationshipClass XmlCompressionOptions { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiNullsOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiNullsOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileStreamNull();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamNull(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QuotedIdentifierOn();
    [CompilerGeneratedAttribute]
internal static void set_QuotedIdentifierOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TableLockOnBulkLoad();
    [CompilerGeneratedAttribute]
internal static void set_TableLockOnBulkLoad(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileTableNamespaceEnabled();
    [CompilerGeneratedAttribute]
internal static void set_FileTableNamespaceEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileTableCollateFilename();
    [CompilerGeneratedAttribute]
internal static void set_FileTableCollateFilename(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileTableDirectory();
    [CompilerGeneratedAttribute]
internal static void set_FileTableDirectory(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LockEscalation();
    [CompilerGeneratedAttribute]
internal static void set_LockEscalation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_DataCompressionOptions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileStreamFilegroup();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamFilegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileStreamPartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamPartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionColumn();
    [CompilerGeneratedAttribute]
internal static void set_PartitionColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_PartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_XmlCompressionOptions(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.ForeignKeyAction : Enum {
    public int value__;
    public static ForeignKeyAction NoAction;
    public static ForeignKeyAction Cascade;
    public static ForeignKeyAction SetNull;
    public static ForeignKeyAction SetDefault;
}
public static class Microsoft.SqlServer.Dac.Model.ForeignKeyConstraint : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NotForReplication>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DeleteAction>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UpdateAction>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ForeignColumns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ForeignTable>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass NotForReplication { get; internal set; }
    public static ModelPropertyClass DeleteAction { get; internal set; }
    public static ModelPropertyClass UpdateAction { get; internal set; }
    public static ModelRelationshipClass Host { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass ForeignColumns { get; internal set; }
    public static ModelRelationshipClass ForeignTable { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NotForReplication();
    [CompilerGeneratedAttribute]
internal static void set_NotForReplication(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DeleteAction();
    [CompilerGeneratedAttribute]
internal static void set_DeleteAction(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UpdateAction();
    [CompilerGeneratedAttribute]
internal static void set_UpdateAction(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Host();
    [CompilerGeneratedAttribute]
internal static void set_Host(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ForeignColumns();
    [CompilerGeneratedAttribute]
internal static void set_ForeignColumns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ForeignTable();
    [CompilerGeneratedAttribute]
internal static void set_ForeignTable(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.FullTextCatalog : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AccentSensitivity>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AccentSensitivity { get; internal set; }
    public static ModelPropertyClass IsDefault { get; internal set; }
    public static ModelPropertyClass Path { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AccentSensitivity();
    [CompilerGeneratedAttribute]
internal static void set_AccentSensitivity(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsDefault();
    [CompilerGeneratedAttribute]
internal static void set_IsDefault(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Path();
    [CompilerGeneratedAttribute]
internal static void set_Path(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.FullTextIndex : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ChangeTracking>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UseSystemStopList>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Replicated>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <StopListOff>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <UniqueIndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Catalog>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <IndexedObject>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <SearchPropertyList>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <StopList>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ChangeTracking { get; internal set; }
    public static ModelPropertyClass UseSystemStopList { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass Replicated { get; internal set; }
    public static ModelPropertyClass StopListOff { get; internal set; }
    public static ModelRelationshipClass UniqueIndexName { get; internal set; }
    public static ModelRelationshipClass Catalog { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    public static ModelRelationshipClass IndexedObject { get; internal set; }
    public static ModelRelationshipClass SearchPropertyList { get; internal set; }
    public static ModelRelationshipClass StopList { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ChangeTracking();
    [CompilerGeneratedAttribute]
internal static void set_ChangeTracking(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UseSystemStopList();
    [CompilerGeneratedAttribute]
internal static void set_UseSystemStopList(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Replicated();
    [CompilerGeneratedAttribute]
internal static void set_Replicated(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_StopListOff();
    [CompilerGeneratedAttribute]
internal static void set_StopListOff(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_UniqueIndexName();
    [CompilerGeneratedAttribute]
internal static void set_UniqueIndexName(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Catalog();
    [CompilerGeneratedAttribute]
internal static void set_Catalog(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_IndexedObject();
    [CompilerGeneratedAttribute]
internal static void set_IndexedObject(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_SearchPropertyList();
    [CompilerGeneratedAttribute]
internal static void set_SearchPropertyList(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_StopList();
    [CompilerGeneratedAttribute]
internal static void set_StopList(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.FullTextIndexColumnSpecifier : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PartOfStatisticalSemantics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LanguageId>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Column>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <TypeColumn>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass PartOfStatisticalSemantics { get; internal set; }
    public static ModelPropertyClass LanguageId { get; internal set; }
    public static ModelRelationshipClass Column { get; internal set; }
    public static ModelRelationshipClass TypeColumn { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PartOfStatisticalSemantics();
    [CompilerGeneratedAttribute]
internal static void set_PartOfStatisticalSemantics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LanguageId();
    [CompilerGeneratedAttribute]
internal static void set_LanguageId(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Column();
    [CompilerGeneratedAttribute]
internal static void set_Column(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_TypeColumn();
    [CompilerGeneratedAttribute]
internal static void set_TypeColumn(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.FullTextStopList : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.FunctionType : Enum {
    public int value__;
    public static FunctionType InlineTableValuedFunction;
    public static FunctionType MultiStatementTableValuedFunction;
}
[FlagsAttribute]
public enum Microsoft.SqlServer.Dac.Model.HttpPorts : Enum {
    public int value__;
    public static HttpPorts None;
    public static HttpPorts Clear;
    public static HttpPorts Ssl;
}
public static class Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CompressionEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ListeningOnAllNoneReservedSites>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ListeningOnAllSites>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AuthenticationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AuthenticationRealm>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ClearPort>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DefaultLogonDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Ports>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SslPort>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Website>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass CompressionEnabled { get; internal set; }
    public static ModelPropertyClass ListeningOnAllNoneReservedSites { get; internal set; }
    public static ModelPropertyClass ListeningOnAllSites { get; internal set; }
    public static ModelPropertyClass AuthenticationMode { get; internal set; }
    public static ModelPropertyClass AuthenticationRealm { get; internal set; }
    public static ModelPropertyClass ClearPort { get; internal set; }
    public static ModelPropertyClass DefaultLogonDomain { get; internal set; }
    public static ModelPropertyClass Path { get; internal set; }
    public static ModelPropertyClass Ports { get; internal set; }
    public static ModelPropertyClass SslPort { get; internal set; }
    public static ModelPropertyClass Website { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CompressionEnabled();
    [CompilerGeneratedAttribute]
internal static void set_CompressionEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ListeningOnAllNoneReservedSites();
    [CompilerGeneratedAttribute]
internal static void set_ListeningOnAllNoneReservedSites(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ListeningOnAllSites();
    [CompilerGeneratedAttribute]
internal static void set_ListeningOnAllSites(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AuthenticationMode();
    [CompilerGeneratedAttribute]
internal static void set_AuthenticationMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AuthenticationRealm();
    [CompilerGeneratedAttribute]
internal static void set_AuthenticationRealm(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ClearPort();
    [CompilerGeneratedAttribute]
internal static void set_ClearPort(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DefaultLogonDomain();
    [CompilerGeneratedAttribute]
internal static void set_DefaultLogonDomain(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Path();
    [CompilerGeneratedAttribute]
internal static void set_Path(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Ports();
    [CompilerGeneratedAttribute]
internal static void set_Ports(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SslPort();
    [CompilerGeneratedAttribute]
internal static void set_SslPort(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Website();
    [CompilerGeneratedAttribute]
internal static void set_Website(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Index : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowPageLocks>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowRowLocks>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IgnoreDuplicateKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RecomputeStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IncrementalStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Clustered>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileStreamNull>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithPadIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Online>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Unique>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FilterPredicate>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <OptimizeForSequentialKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AutoCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BucketCount>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FillFactor>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BodyDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataCompressionOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileStreamFilegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileStreamPartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <IncludedColumns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <IndexedObject>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlCompressionOptions>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AllowPageLocks { get; internal set; }
    public static ModelPropertyClass AllowRowLocks { get; internal set; }
    public static ModelPropertyClass IgnoreDuplicateKey { get; internal set; }
    public static ModelPropertyClass RecomputeStatistics { get; internal set; }
    public static ModelPropertyClass IncrementalStatistics { get; internal set; }
    public static ModelPropertyClass Clustered { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass FileStreamNull { get; internal set; }
    public static ModelPropertyClass WithPadIndex { get; internal set; }
    public static ModelPropertyClass Online { get; internal set; }
    public static ModelPropertyClass Unique { get; internal set; }
    public static ModelPropertyClass FilterPredicate { get; internal set; }
    public static ModelPropertyClass Hash { get; internal set; }
    public static ModelPropertyClass OptimizeForSequentialKey { get; internal set; }
    public static ModelPropertyClass AutoCreated { get; internal set; }
    public static ModelPropertyClass BucketCount { get; internal set; }
    public static ModelPropertyClass FillFactor { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass BodyDependencies { get; internal set; }
    public static ModelRelationshipClass DataCompressionOptions { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    public static ModelRelationshipClass FileStreamFilegroup { get; internal set; }
    public static ModelRelationshipClass FileStreamPartitionScheme { get; internal set; }
    public static ModelRelationshipClass IncludedColumns { get; internal set; }
    public static ModelRelationshipClass IndexedObject { get; internal set; }
    public static ModelRelationshipClass PartitionColumn { get; internal set; }
    public static ModelRelationshipClass PartitionScheme { get; internal set; }
    public static ModelRelationshipClass XmlCompressionOptions { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowPageLocks();
    [CompilerGeneratedAttribute]
internal static void set_AllowPageLocks(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowRowLocks();
    [CompilerGeneratedAttribute]
internal static void set_AllowRowLocks(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IgnoreDuplicateKey();
    [CompilerGeneratedAttribute]
internal static void set_IgnoreDuplicateKey(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RecomputeStatistics();
    [CompilerGeneratedAttribute]
internal static void set_RecomputeStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IncrementalStatistics();
    [CompilerGeneratedAttribute]
internal static void set_IncrementalStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Clustered();
    [CompilerGeneratedAttribute]
internal static void set_Clustered(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileStreamNull();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamNull(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithPadIndex();
    [CompilerGeneratedAttribute]
internal static void set_WithPadIndex(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Online();
    [CompilerGeneratedAttribute]
internal static void set_Online(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Unique();
    [CompilerGeneratedAttribute]
internal static void set_Unique(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FilterPredicate();
    [CompilerGeneratedAttribute]
internal static void set_FilterPredicate(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Hash();
    [CompilerGeneratedAttribute]
internal static void set_Hash(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_OptimizeForSequentialKey();
    [CompilerGeneratedAttribute]
internal static void set_OptimizeForSequentialKey(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AutoCreated();
    [CompilerGeneratedAttribute]
internal static void set_AutoCreated(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BucketCount();
    [CompilerGeneratedAttribute]
internal static void set_BucketCount(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FillFactor();
    [CompilerGeneratedAttribute]
internal static void set_FillFactor(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BodyDependencies();
    [CompilerGeneratedAttribute]
internal static void set_BodyDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_DataCompressionOptions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileStreamFilegroup();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamFilegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileStreamPartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamPartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_IncludedColumns();
    [CompilerGeneratedAttribute]
internal static void set_IncludedColumns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_IndexedObject();
    [CompilerGeneratedAttribute]
internal static void set_IndexedObject(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionColumn();
    [CompilerGeneratedAttribute]
internal static void set_PartitionColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_PartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_XmlCompressionOptions(ModelRelationshipClass value);
}
internal class Microsoft.SqlServer.Dac.Model.InternalModelUtils : object {
    public static void CalculateVersionsForPlatform(TSqlPlatforms platform, SqlServerVersion& version, Int32& engineVersion);
    public static void CalculateVersionsForPlatform(SqlPlatforms platform, SqlServerVersion& version, Int32& engineVersion);
    internal static EngineVersion GetEngineVersionSetting(SqlServerVersion version, int engineVersion);
    public static bool IsInlineConstraintOrIndex(IModelElement element);
    public static bool TryGetSingleReferencedElementInfo(ModelRelationshipClass relationshipClass, IModelElement referencingElement, IModelElement& referencedElement, ModelIdentifier& referencedElementName);
    public static bool TryGetReferencedElementInfo(IModelRelationshipEntry relationshipEntry, IModelElement& referencedElement, ModelIdentifier& referencedElementName);
    private static IModelElement LookupReferencedElementUsingId(IModelRelationshipEntry relEntry, ModelIdentifier id);
    private static ModelIdentifier QueryReferencedElementName(IModelRelationshipEntry relationshipEntry);
    internal static ExtensibilityError CreatExtensibilityError(DataSchemaError error);
}
internal class Microsoft.SqlServer.Dac.Model.InternalRelationshipInstanceInfo : object {
    [CompilerGeneratedAttribute]
private ModelRelationshipClass <Relationship>k__BackingField;
    [CompilerGeneratedAttribute]
private IModelElement <FromElement>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelIdentifier <FromElementName>k__BackingField;
    [CompilerGeneratedAttribute]
private IModelElement <ReferencedElement>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelIdentifier <ReferencedElementName>k__BackingField;
    [CompilerGeneratedAttribute]
private IModelElement <PropertyLookupContext>k__BackingField;
    internal ModelRelationshipClass Relationship { get; private set; }
    internal IModelElement FromElement { get; private set; }
    internal ModelIdentifier FromElementName { get; private set; }
    internal IModelElement ReferencedElement { get; private set; }
    internal ModelIdentifier ReferencedElementName { get; private set; }
    internal IModelElement PropertyLookupContext { get; private set; }
    internal InternalRelationshipInstanceInfo(ModelRelationshipClass relationship, IModelElement fromElement, IModelElement referencedElement, ModelIdentifier referencedElementName, IModelElement propertyLookupContext);
    [CompilerGeneratedAttribute]
internal ModelRelationshipClass get_Relationship();
    [CompilerGeneratedAttribute]
private void set_Relationship(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
internal IModelElement get_FromElement();
    [CompilerGeneratedAttribute]
private void set_FromElement(IModelElement value);
    [CompilerGeneratedAttribute]
internal ModelIdentifier get_FromElementName();
    [CompilerGeneratedAttribute]
private void set_FromElementName(ModelIdentifier value);
    [CompilerGeneratedAttribute]
internal IModelElement get_ReferencedElement();
    [CompilerGeneratedAttribute]
private void set_ReferencedElement(IModelElement value);
    [CompilerGeneratedAttribute]
internal ModelIdentifier get_ReferencedElementName();
    [CompilerGeneratedAttribute]
private void set_ReferencedElementName(ModelIdentifier value);
    [CompilerGeneratedAttribute]
internal IModelElement get_PropertyLookupContext();
    [CompilerGeneratedAttribute]
private void set_PropertyLookupContext(IModelElement value);
}
public static class Microsoft.SqlServer.Dac.Model.LinkedServer : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CollationCompatible>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DataAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LazySchemaValidationEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RemoteProcTransactionPromotionEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RpcEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RpcOutEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ProviderName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Catalog>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CollationName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ConnectTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DataSource>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsDistributor>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsPublisher>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsSubscriber>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ProductName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ProviderString>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueryTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UseRemoteCollation>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass CollationCompatible { get; internal set; }
    public static ModelPropertyClass DataAccess { get; internal set; }
    public static ModelPropertyClass LazySchemaValidationEnabled { get; internal set; }
    public static ModelPropertyClass RemoteProcTransactionPromotionEnabled { get; internal set; }
    public static ModelPropertyClass RpcEnabled { get; internal set; }
    public static ModelPropertyClass RpcOutEnabled { get; internal set; }
    public static ModelPropertyClass ProviderName { get; internal set; }
    public static ModelPropertyClass Catalog { get; internal set; }
    public static ModelPropertyClass CollationName { get; internal set; }
    public static ModelPropertyClass ConnectTimeout { get; internal set; }
    public static ModelPropertyClass DataSource { get; internal set; }
    public static ModelPropertyClass IsDistributor { get; internal set; }
    public static ModelPropertyClass IsPublisher { get; internal set; }
    public static ModelPropertyClass IsSubscriber { get; internal set; }
    public static ModelPropertyClass Location { get; internal set; }
    public static ModelPropertyClass ProductName { get; internal set; }
    public static ModelPropertyClass ProviderString { get; internal set; }
    public static ModelPropertyClass QueryTimeout { get; internal set; }
    public static ModelPropertyClass UseRemoteCollation { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CollationCompatible();
    [CompilerGeneratedAttribute]
internal static void set_CollationCompatible(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DataAccess();
    [CompilerGeneratedAttribute]
internal static void set_DataAccess(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LazySchemaValidationEnabled();
    [CompilerGeneratedAttribute]
internal static void set_LazySchemaValidationEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RemoteProcTransactionPromotionEnabled();
    [CompilerGeneratedAttribute]
internal static void set_RemoteProcTransactionPromotionEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RpcEnabled();
    [CompilerGeneratedAttribute]
internal static void set_RpcEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RpcOutEnabled();
    [CompilerGeneratedAttribute]
internal static void set_RpcOutEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ProviderName();
    [CompilerGeneratedAttribute]
internal static void set_ProviderName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Catalog();
    [CompilerGeneratedAttribute]
internal static void set_Catalog(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CollationName();
    [CompilerGeneratedAttribute]
internal static void set_CollationName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ConnectTimeout();
    [CompilerGeneratedAttribute]
internal static void set_ConnectTimeout(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DataSource();
    [CompilerGeneratedAttribute]
internal static void set_DataSource(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsDistributor();
    [CompilerGeneratedAttribute]
internal static void set_IsDistributor(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsPublisher();
    [CompilerGeneratedAttribute]
internal static void set_IsPublisher(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsSubscriber();
    [CompilerGeneratedAttribute]
internal static void set_IsSubscriber(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Location();
    [CompilerGeneratedAttribute]
internal static void set_Location(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ProductName();
    [CompilerGeneratedAttribute]
internal static void set_ProductName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ProviderString();
    [CompilerGeneratedAttribute]
internal static void set_ProviderString(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueryTimeout();
    [CompilerGeneratedAttribute]
internal static void set_QueryTimeout(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UseRemoteCollation();
    [CompilerGeneratedAttribute]
internal static void set_UseRemoteCollation(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.LinkedServerLogin : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UseSelf>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LinkedServerLoginName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LinkedServerPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <LinkedServer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <LocalLogin>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass UseSelf { get; internal set; }
    public static ModelPropertyClass LinkedServerLoginName { get; internal set; }
    public static ModelPropertyClass LinkedServerPassword { get; internal set; }
    public static ModelRelationshipClass LinkedServer { get; internal set; }
    public static ModelRelationshipClass LocalLogin { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UseSelf();
    [CompilerGeneratedAttribute]
internal static void set_UseSelf(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LinkedServerLoginName();
    [CompilerGeneratedAttribute]
internal static void set_LinkedServerLoginName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LinkedServerPassword();
    [CompilerGeneratedAttribute]
internal static void set_LinkedServerPassword(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_LinkedServer();
    [CompilerGeneratedAttribute]
internal static void set_LinkedServer(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_LocalLogin();
    [CompilerGeneratedAttribute]
internal static void set_LocalLogin(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.LockEscalationMethod : Enum {
    public int value__;
    public static LockEscalationMethod Table;
    public static LockEscalationMethod Disable;
    public static LockEscalationMethod Auto;
}
public static class Microsoft.SqlServer.Dac.Model.Login : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CheckExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CheckPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MappedToWindowsLogin>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PasswordHashed>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PasswordMustChange>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DefaultDatabase>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DefaultLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptionOption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsMappedToExternalLogin>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Sid>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AsymmetricKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Certificate>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Credential>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass CheckExpiration { get; internal set; }
    public static ModelPropertyClass CheckPolicy { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass MappedToWindowsLogin { get; internal set; }
    public static ModelPropertyClass PasswordHashed { get; internal set; }
    public static ModelPropertyClass PasswordMustChange { get; internal set; }
    public static ModelPropertyClass DefaultDatabase { get; internal set; }
    public static ModelPropertyClass DefaultLanguage { get; internal set; }
    public static ModelPropertyClass EncryptionOption { get; internal set; }
    public static ModelPropertyClass IsMappedToExternalLogin { get; internal set; }
    public static ModelPropertyClass Password { get; internal set; }
    public static ModelPropertyClass Sid { get; internal set; }
    public static ModelRelationshipClass AsymmetricKey { get; internal set; }
    public static ModelRelationshipClass Certificate { get; internal set; }
    public static ModelRelationshipClass Credential { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CheckExpiration();
    [CompilerGeneratedAttribute]
internal static void set_CheckExpiration(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CheckPolicy();
    [CompilerGeneratedAttribute]
internal static void set_CheckPolicy(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MappedToWindowsLogin();
    [CompilerGeneratedAttribute]
internal static void set_MappedToWindowsLogin(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PasswordHashed();
    [CompilerGeneratedAttribute]
internal static void set_PasswordHashed(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PasswordMustChange();
    [CompilerGeneratedAttribute]
internal static void set_PasswordMustChange(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DefaultDatabase();
    [CompilerGeneratedAttribute]
internal static void set_DefaultDatabase(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DefaultLanguage();
    [CompilerGeneratedAttribute]
internal static void set_DefaultLanguage(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptionOption();
    [CompilerGeneratedAttribute]
internal static void set_EncryptionOption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsMappedToExternalLogin();
    [CompilerGeneratedAttribute]
internal static void set_IsMappedToExternalLogin(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Password();
    [CompilerGeneratedAttribute]
internal static void set_Password(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Sid();
    [CompilerGeneratedAttribute]
internal static void set_Sid(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AsymmetricKey();
    [CompilerGeneratedAttribute]
internal static void set_AsymmetricKey(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Certificate();
    [CompilerGeneratedAttribute]
internal static void set_Certificate(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Credential();
    [CompilerGeneratedAttribute]
internal static void set_Credential(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.LoginEncryptionOption : Enum {
    public int value__;
    public static LoginEncryptionOption Encrypt;
    public static LoginEncryptionOption AlreadyEncrypted;
    public static LoginEncryptionOption AlreadyEncryptedOld;
}
public static class Microsoft.SqlServer.Dac.Model.MasterKey : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Password>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Password { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Password();
    [CompilerGeneratedAttribute]
internal static void set_Password(ModelPropertyClass value);
}
public enum Microsoft.SqlServer.Dac.Model.MemoryPartitionMode : Enum {
    public int value__;
    public static MemoryPartitionMode None;
    public static MemoryPartitionMode PerNode;
    public static MemoryPartitionMode PerCpu;
}
public enum Microsoft.SqlServer.Dac.Model.MemoryUnit : Enum {
    public int value__;
    public static MemoryUnit Unspecified;
    public static MemoryUnit Percent;
    public static MemoryUnit Bytes;
    public static MemoryUnit KB;
    public static MemoryUnit MB;
    public static MemoryUnit GB;
    public static MemoryUnit TB;
    public static MemoryUnit PB;
    public static MemoryUnit EB;
}
public enum Microsoft.SqlServer.Dac.Model.MessageSentBy : Enum {
    public int value__;
    public static MessageSentBy Unknown;
    public static MessageSentBy Initiator;
    public static MessageSentBy Target;
    public static MessageSentBy Any;
}
public static class Microsoft.SqlServer.Dac.Model.MessageType : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ValidationMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlSchemaCollection>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ValidationMethod { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    public static ModelRelationshipClass XmlSchemaCollection { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ValidationMethod();
    [CompilerGeneratedAttribute]
internal static void set_ValidationMethod(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlSchemaCollection();
    [CompilerGeneratedAttribute]
internal static void set_XmlSchemaCollection(ModelRelationshipClass value);
}
internal class Microsoft.SqlServer.Dac.Model.ModelAnnotationPropertyContext : ModelPropertyContext {
    private ModelAnnotationClass _annotationClass;
    private Predicate`1<IModelAnnotation> _matchesFilter;
    private Func`2<IModelAnnotation, object> _getValue;
    public ModelAnnotationPropertyContext(ModelAnnotationClass annotationClass, Predicate`1<IModelAnnotation> matchesFilter, Func`2<IModelAnnotation, object> getValue);
    public virtual object GetDefaultValue(TSqlPlatforms tSqlPlatforms);
    public virtual T GetValue(IModelElement element);
}
public abstract class Microsoft.SqlServer.Dac.Model.ModelCollationComparer : object {
    public abstract virtual bool Equals(string x, string y);
    public abstract virtual bool Equals(IList`1<string> x, IList`1<string> y);
    public abstract virtual bool Equals(ObjectIdentifier x, ObjectIdentifier y);
    public abstract virtual int GetHashCode(ObjectIdentifier obj);
    public abstract virtual int GetHashCode(IList`1<string> obj);
    public abstract virtual int GetHashCode(string obj);
    public abstract virtual int Compare(string x, string y);
    public abstract virtual int Compare(IList`1<string> x, IList`1<string> y);
    public abstract virtual int Compare(ObjectIdentifier x, ObjectIdentifier y);
}
public enum Microsoft.SqlServer.Dac.Model.ModelErrorSeverity : Enum {
    public int value__;
    public static ModelErrorSeverity Unknown;
    public static ModelErrorSeverity Error;
    public static ModelErrorSeverity Warning;
}
public enum Microsoft.SqlServer.Dac.Model.ModelErrorType : Enum {
    public int value__;
    public static ModelErrorType ParserError;
    public static ModelErrorType InterpreterError;
    public static ModelErrorType ModelValidationError;
}
public class Microsoft.SqlServer.Dac.Model.ModelExtractOptions : object {
    [CompilerGeneratedAttribute]
private bool <ExtractReferencedServerScopedElements>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExtractApplicationScopedObjectsOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreExtendedProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnorePermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreUserLoginMappings>k__BackingField;
    [CompilerGeneratedAttribute]
private DacSchemaModelStorageType <Storage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <VerifyExtraction>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LoadAsScriptBackedModel>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExtractUsageProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HashObjectNamesInLogs>k__BackingField;
    public bool ExtractReferencedServerScopedElements { get; public set; }
    public bool ExtractApplicationScopedObjectsOnly { get; public set; }
    public bool IgnoreExtendedProperties { get; public set; }
    public bool IgnorePermissions { get; public set; }
    public bool IgnoreUserLoginMappings { get; public set; }
    public DacSchemaModelStorageType Storage { get; public set; }
    public bool VerifyExtraction { get; public set; }
    public bool LoadAsScriptBackedModel { get; public set; }
    public bool ExtractUsageProperties { get; public set; }
    public bool HashObjectNamesInLogs { get; public set; }
    internal void CopyTo(DacExtractOptions extractOptions);
    [CompilerGeneratedAttribute]
public bool get_ExtractReferencedServerScopedElements();
    [CompilerGeneratedAttribute]
public void set_ExtractReferencedServerScopedElements(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExtractApplicationScopedObjectsOnly();
    [CompilerGeneratedAttribute]
public void set_ExtractApplicationScopedObjectsOnly(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreExtendedProperties();
    [CompilerGeneratedAttribute]
public void set_IgnoreExtendedProperties(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnorePermissions();
    [CompilerGeneratedAttribute]
public void set_IgnorePermissions(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreUserLoginMappings();
    [CompilerGeneratedAttribute]
public void set_IgnoreUserLoginMappings(bool value);
    [CompilerGeneratedAttribute]
public DacSchemaModelStorageType get_Storage();
    [CompilerGeneratedAttribute]
public void set_Storage(DacSchemaModelStorageType value);
    [CompilerGeneratedAttribute]
public bool get_VerifyExtraction();
    [CompilerGeneratedAttribute]
public void set_VerifyExtraction(bool value);
    [CompilerGeneratedAttribute]
public bool get_LoadAsScriptBackedModel();
    [CompilerGeneratedAttribute]
public void set_LoadAsScriptBackedModel(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExtractUsageProperties();
    [CompilerGeneratedAttribute]
public void set_ExtractUsageProperties(bool value);
    [CompilerGeneratedAttribute]
public bool get_HashObjectNamesInLogs();
    [CompilerGeneratedAttribute]
public void set_HashObjectNamesInLogs(bool value);
}
public class Microsoft.SqlServer.Dac.Model.ModelLoadOptions : object {
    [CompilerGeneratedAttribute]
private DacSchemaModelStorageType <ModelStorageType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LoadAsScriptBackedModel>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowOnModelErrors>k__BackingField;
    public DacSchemaModelStorageType ModelStorageType { get; public set; }
    public bool LoadAsScriptBackedModel { get; public set; }
    public bool ThrowOnModelErrors { get; public set; }
    public ModelLoadOptions(DacSchemaModelStorageType modelStorageType, bool loadAsScriptBackedModel);
    public ModelLoadOptions(DacSchemaModelStorageType modelStorageType, bool loadAsScriptBackedModel, bool throwOnModelErrors);
    [CompilerGeneratedAttribute]
public DacSchemaModelStorageType get_ModelStorageType();
    [CompilerGeneratedAttribute]
public void set_ModelStorageType(DacSchemaModelStorageType value);
    [CompilerGeneratedAttribute]
public bool get_LoadAsScriptBackedModel();
    [CompilerGeneratedAttribute]
public void set_LoadAsScriptBackedModel(bool value);
    [CompilerGeneratedAttribute]
public bool get_ThrowOnModelErrors();
    [CompilerGeneratedAttribute]
public void set_ThrowOnModelErrors(bool value);
}
public class Microsoft.SqlServer.Dac.Model.ModelMetadataClass : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DataType>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelTypeClass <OwningType>k__BackingField;
    [CompilerGeneratedAttribute]
private object <ContextObject>k__BackingField;
    public string Name { get; public set; }
    public Type DataType { get; private set; }
    public ModelTypeClass OwningType { get; private set; }
    internal object ContextObject { get; internal set; }
    internal ModelMetadataClass(ModelTypeClass owningType, string name, Type dataType, object contextObject);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Type get_DataType();
    [CompilerGeneratedAttribute]
private void set_DataType(Type value);
    public T GetValue(TSqlObject instance);
    [CompilerGeneratedAttribute]
public ModelTypeClass get_OwningType();
    [CompilerGeneratedAttribute]
private void set_OwningType(ModelTypeClass value);
    [CompilerGeneratedAttribute]
internal object get_ContextObject();
    [CompilerGeneratedAttribute]
internal void set_ContextObject(object value);
}
internal abstract class Microsoft.SqlServer.Dac.Model.ModelMetadataContext : object {
    public abstract virtual T GetValue(IModelElement element);
}
public class Microsoft.SqlServer.Dac.Model.ModelPropertyClass : object {
    private Func`2<TSqlPlatforms, object> _getDefaultValue;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DataType>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlPlatforms <SupportedPlatforms>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelTypeClass <OwningType>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelRelationshipClass <OwningRelationship>k__BackingField;
    [CompilerGeneratedAttribute]
private object <ContextObject>k__BackingField;
    public string Name { get; public set; }
    public Type DataType { get; private set; }
    public TSqlPlatforms SupportedPlatforms { get; private set; }
    public ModelTypeClass OwningType { get; private set; }
    public ModelRelationshipClass OwningRelationship { get; private set; }
    internal object ContextObject { get; internal set; }
    private ModelPropertyClass(string name, Type dataType, TSqlPlatforms supportedPlatforms, Func`2<TSqlPlatforms, object> getDefaultValue, object contextObject);
    internal ModelPropertyClass(ModelTypeClass owningType, string name, Type dataType, TSqlPlatforms supportedPlatforms, Func`2<TSqlPlatforms, object> getDefaultValue, object contextObject);
    internal ModelPropertyClass(ModelRelationshipClass owningRelationship, string name, Type dataType, TSqlPlatforms supportedPlatforms, Func`2<TSqlPlatforms, object> getDefaultValue, object contextObject);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Type get_DataType();
    [CompilerGeneratedAttribute]
private void set_DataType(Type value);
    [CompilerGeneratedAttribute]
public TSqlPlatforms get_SupportedPlatforms();
    [CompilerGeneratedAttribute]
private void set_SupportedPlatforms(TSqlPlatforms value);
    public T GetValue(TSqlObject instance);
    public T GetDefaultValue(SqlServerVersion version);
    public object GetDefaultValue(SqlServerVersion version);
    public bool IsDefaultValue(TSqlObject instance, SqlServerVersion version);
    public T GetDefaultValue(SqlServerVersion version, int engineVersion);
    public object GetDefaultValue(SqlServerVersion version, int engineVersion);
    public bool IsDefaultValue(TSqlObject instance, SqlServerVersion version, int engineVersion);
    [CompilerGeneratedAttribute]
public ModelTypeClass get_OwningType();
    [CompilerGeneratedAttribute]
private void set_OwningType(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public ModelRelationshipClass get_OwningRelationship();
    [CompilerGeneratedAttribute]
private void set_OwningRelationship(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
internal object get_ContextObject();
    [CompilerGeneratedAttribute]
internal void set_ContextObject(object value);
    private static TSqlPlatforms GetTSqlPlatforms(SqlServerVersion version, int engineVersion);
}
internal abstract class Microsoft.SqlServer.Dac.Model.ModelPropertyContext : object {
    public abstract virtual object GetDefaultValue(TSqlPlatforms tSqlPlatforms);
    public abstract virtual T GetValue(IModelElement element);
}
public class Microsoft.SqlServer.Dac.Model.ModelRelationshipClass : object {
    private Dictionary`2<string, ModelPropertyClass> _propertyClassMap;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private RelationshipType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelTypeClass <FromObjectClass>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlPlatforms <SupportedPlatforms>k__BackingField;
    [CompilerGeneratedAttribute]
private object <ContextObject>k__BackingField;
    public string Name { get; private set; }
    public RelationshipType Type { get; private set; }
    public ModelTypeClass FromObjectClass { get; private set; }
    public TSqlPlatforms SupportedPlatforms { get; private set; }
    public ICollection`1<ModelPropertyClass> Properties { get; }
    internal object ContextObject { get; internal set; }
    internal ModelRelationshipClass(string name, TSqlModelSchema model, RelationshipType type, ModelTypeClass fromObjectClass, TSqlPlatforms supportedPlatforms);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public RelationshipType get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(RelationshipType value);
    [CompilerGeneratedAttribute]
public ModelTypeClass get_FromObjectClass();
    [CompilerGeneratedAttribute]
private void set_FromObjectClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public TSqlPlatforms get_SupportedPlatforms();
    [CompilerGeneratedAttribute]
private void set_SupportedPlatforms(TSqlPlatforms value);
    public ICollection`1<ModelPropertyClass> get_Properties();
    internal void AddProperty(string name, Type dataType, TSqlPlatforms supportedPlatforms, Func`2<TSqlPlatforms, object> getDefaultValue, object context);
    internal void AddProperty(ModelPropertyClass modelPropertyClass);
    [CompilerGeneratedAttribute]
internal object get_ContextObject();
    [CompilerGeneratedAttribute]
internal void set_ContextObject(object value);
}
internal abstract class Microsoft.SqlServer.Dac.Model.ModelRelationshipContext : object {
    public abstract virtual IEnumerable`1<InternalRelationshipInstanceInfo> GetReferencedRelationshipInstances(IModelElement fromElement);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance : object {
    private TSqlObjectService _objectService;
    [CompilerGeneratedAttribute]
private ModelRelationshipClass <Relationship>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlObject <FromObject>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlObject <Object>k__BackingField;
    [CompilerGeneratedAttribute]
private ObjectIdentifier <ObjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private object <PropertyContext>k__BackingField;
    public ModelRelationshipClass Relationship { get; private set; }
    public TSqlObject FromObject { get; private set; }
    public TSqlObject Object { get; private set; }
    public ObjectIdentifier ObjectName { get; private set; }
    internal object PropertyContext { get; private set; }
    public object Item { get; }
    internal ModelRelationshipInstance(TSqlObjectService objectService, ModelRelationshipClass relationship, TSqlObject fromObject, TSqlObject referencedObject, ObjectIdentifier referencedObjectName, object propertyContext);
    [CompilerGeneratedAttribute]
public ModelRelationshipClass get_Relationship();
    [CompilerGeneratedAttribute]
private void set_Relationship(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public TSqlObject get_FromObject();
    [CompilerGeneratedAttribute]
private void set_FromObject(TSqlObject value);
    [CompilerGeneratedAttribute]
public TSqlObject get_Object();
    [CompilerGeneratedAttribute]
private void set_Object(TSqlObject value);
    [CompilerGeneratedAttribute]
public ObjectIdentifier get_ObjectName();
    [CompilerGeneratedAttribute]
private void set_ObjectName(ObjectIdentifier value);
    [CompilerGeneratedAttribute]
internal object get_PropertyContext();
    [CompilerGeneratedAttribute]
private void set_PropertyContext(object value);
    public T GetProperty(ModelPropertyClass property);
    public object GetProperty(ModelPropertyClass property);
    public object get_Item(ModelPropertyClass property);
    private void VerifyPropertyOwner(ModelPropertyClass property);
}
public static class Microsoft.SqlServer.Dac.Model.ModelSchema : object {
    public static TSqlModelSchema SchemaInstance;
    public static ModelTypeClass Column;
    public static ModelTypeClass ColumnEncryptionKey;
    public static ModelTypeClass ColumnEncryptionKeyValue;
    public static ModelTypeClass ColumnMasterKey;
    public static ModelTypeClass TableValuedFunction;
    public static ModelTypeClass ScalarFunction;
    public static ModelTypeClass ClrTableOption;
    public static ModelTypeClass Aggregate;
    public static ModelTypeClass ApplicationRole;
    public static ModelTypeClass Index;
    public static ModelTypeClass Assembly;
    public static ModelTypeClass AssemblySource;
    public static ModelTypeClass AsymmetricKey;
    public static ModelTypeClass AuditAction;
    public static ModelTypeClass AuditActionGroup;
    public static ModelTypeClass AuditActionSpecification;
    public static ModelTypeClass BrokerPriority;
    public static ModelTypeClass BuiltInServerRole;
    public static ModelTypeClass DataType;
    public static ModelTypeClass Certificate;
    public static ModelTypeClass CheckConstraint;
    public static ModelTypeClass ClrTypeMethod;
    public static ModelTypeClass ClrTypeMethodParameter;
    public static ModelTypeClass ClrTypeProperty;
    public static ModelTypeClass ColumnStoreIndex;
    public static ModelTypeClass Contract;
    public static ModelTypeClass Credential;
    public static ModelTypeClass DatabaseCredential;
    public static ModelTypeClass CryptographicProvider;
    public static ModelTypeClass DatabaseAuditSpecification;
    public static ModelTypeClass DatabaseDdlTrigger;
    public static ModelTypeClass DatabaseEncryptionKey;
    public static ModelTypeClass DatabaseEventNotification;
    public static ModelTypeClass DatabaseMirroringLanguageSpecifier;
    public static ModelTypeClass DatabaseOptions;
    public static ModelTypeClass DataCompressionOption;
    public static ModelTypeClass Default;
    public static ModelTypeClass DefaultConstraint;
    public static ModelTypeClass DmlTrigger;
    public static ModelTypeClass Endpoint;
    public static ModelTypeClass ErrorMessage;
    public static ModelTypeClass EventGroup;
    public static ModelTypeClass EventSession;
    public static ModelTypeClass DatabaseEventSession;
    public static ModelTypeClass EventSessionAction;
    public static ModelTypeClass EventSessionDefinitions;
    public static ModelTypeClass EventSessionSetting;
    public static ModelTypeClass EventSessionTarget;
    public static ModelTypeClass EventTypeSpecifier;
    public static ModelTypeClass ExtendedProcedure;
    public static ModelTypeClass ExtendedProperty;
    public static ModelTypeClass ExternalDataSource;
    public static ModelTypeClass ExternalFileFormat;
    public static ModelTypeClass ExternalTable;
    public static ModelTypeClass ExternalStream;
    public static ModelTypeClass ExternalStreamingJob;
    public static ModelTypeClass SqlFile;
    public static ModelTypeClass Filegroup;
    public static ModelTypeClass ForeignKeyConstraint;
    public static ModelTypeClass EdgeConstraint;
    public static ModelTypeClass FullTextCatalog;
    public static ModelTypeClass FullTextIndex;
    public static ModelTypeClass FullTextIndexColumnSpecifier;
    public static ModelTypeClass FullTextStopList;
    public static ModelTypeClass HttpProtocolSpecifier;
    public static ModelTypeClass LinkedServer;
    public static ModelTypeClass LinkedServerLogin;
    public static ModelTypeClass Login;
    public static ModelTypeClass MasterKey;
    public static ModelTypeClass MessageType;
    public static ModelTypeClass PartitionSpecification;
    public static ModelTypeClass PartitionFunction;
    public static ModelTypeClass PartitionScheme;
    public static ModelTypeClass PartitionValue;
    public static ModelTypeClass Permission;
    public static ModelTypeClass PrimaryKeyConstraint;
    public static ModelTypeClass Procedure;
    public static ModelTypeClass Queue;
    public static ModelTypeClass QueueEventNotification;
    public static ModelTypeClass RemoteServiceBinding;
    public static ModelTypeClass ResourceGovernor;
    public static ModelTypeClass ResourcePool;
    public static ModelTypeClass Role;
    public static ModelTypeClass RoleMembership;
    public static ModelTypeClass Route;
    public static ModelTypeClass Rule;
    public static ModelTypeClass Schema;
    public static ModelTypeClass SearchProperty;
    public static ModelTypeClass SearchPropertyList;
    public static ModelTypeClass SecurityPolicy;
    public static ModelTypeClass SecurityPredicate;
    public static ModelTypeClass Sequence;
    public static ModelTypeClass ServerAudit;
    public static ModelTypeClass ServerAuditSpecification;
    public static ModelTypeClass ServerDdlTrigger;
    public static ModelTypeClass ServerEventNotification;
    public static ModelTypeClass ServerOptions;
    public static ModelTypeClass ServerRoleMembership;
    public static ModelTypeClass Service;
    public static ModelTypeClass ServiceBrokerLanguageSpecifier;
    public static ModelTypeClass Signature;
    public static ModelTypeClass SignatureEncryptionMechanism;
    public static ModelTypeClass SoapLanguageSpecifier;
    public static ModelTypeClass SoapMethodSpecification;
    public static ModelTypeClass SpatialIndex;
    public static ModelTypeClass Statistics;
    public static ModelTypeClass Parameter;
    public static ModelTypeClass SymmetricKey;
    public static ModelTypeClass SymmetricKeyPassword;
    public static ModelTypeClass Synonym;
    public static ModelTypeClass Table;
    public static ModelTypeClass FileTable;
    public static ModelTypeClass TableType;
    public static ModelTypeClass TableTypeCheckConstraint;
    public static ModelTypeClass TableTypeColumn;
    public static ModelTypeClass TableTypeDefaultConstraint;
    public static ModelTypeClass TableTypeIndex;
    public static ModelTypeClass TableTypePrimaryKeyConstraint;
    public static ModelTypeClass TableTypeUniqueConstraint;
    public static ModelTypeClass TcpProtocolSpecifier;
    public static ModelTypeClass UniqueConstraint;
    public static ModelTypeClass User;
    public static ModelTypeClass UserDefinedServerRole;
    public static ModelTypeClass UserDefinedType;
    public static ModelTypeClass View;
    public static ModelTypeClass WorkloadGroup;
    public static ModelTypeClass WorkloadGroupDw;
    public static ModelTypeClass WorkloadClassifier;
    public static ModelTypeClass XmlIndex;
    public static ModelTypeClass SelectiveXmlIndex;
    public static ModelTypeClass XmlNamespace;
    public static ModelTypeClass PromotedNodePathForXQueryType;
    public static ModelTypeClass PromotedNodePathForSqlType;
    public static ModelTypeClass XmlSchemaCollection;
    public static ModelTypeClass ExternalLibrary;
    public static ModelTypeClass ExternalLibraryFile;
    public static ModelTypeClass ExternalLanguage;
    public static ModelTypeClass ExternalLanguageFile;
    private static ModelSchema();
    private static void Init();
    internal static void InitializeModelSchema();
    internal static ReadOnlyCollection`1<ModelTypeClass> GetViewSubroutineAndTriggerClasses();
    internal static ReadOnlyCollection`1<ModelTypeClass> GetSubroutineClasses();
    internal static ReadOnlyCollection`1<ModelTypeClass> GetColumnSourceClasses();
}
[DebuggerDisplayAttribute("{Name}")]
public class Microsoft.SqlServer.Dac.Model.ModelTypeClass : object {
    private Dictionary`2<string, ModelRelationshipClass> _relationshipClassMap;
    private Dictionary`2<string, ModelPropertyClass> _propertyClassMap;
    private Dictionary`2<string, ModelMetadataClass> _metadataClassMap;
    private IEnumerable`1<Type> _origins;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private TSqlPlatforms <SupportedPlatforms>k__BackingField;
    public string Name { get; private set; }
    public TSqlPlatforms SupportedPlatforms { get; private set; }
    public ICollection`1<ModelPropertyClass> Properties { get; }
    public ICollection`1<ModelRelationshipClass> Relationships { get; }
    public ICollection`1<ModelMetadataClass> Metadata { get; }
    internal IEnumerable`1<Type> Origins { get; }
    internal IDictionary`2<string, ModelRelationshipClass> RelationshipMap { get; }
    private IDictionary`2<string, ModelPropertyClass> PropertyMap { get; }
    internal ModelTypeClass(string name, TSqlModelSchema model, bool registerType, Tuple`2[] origins);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public TSqlPlatforms get_SupportedPlatforms();
    [CompilerGeneratedAttribute]
private void set_SupportedPlatforms(TSqlPlatforms value);
    public ICollection`1<ModelPropertyClass> get_Properties();
    public ICollection`1<ModelRelationshipClass> get_Relationships();
    public ICollection`1<ModelMetadataClass> get_Metadata();
    internal IEnumerable`1<Type> get_Origins();
    internal IDictionary`2<string, ModelRelationshipClass> get_RelationshipMap();
    private IDictionary`2<string, ModelPropertyClass> get_PropertyMap();
    internal void AddProperty(string name, Type dataType, TSqlPlatforms supportedPlatforms, Func`2<TSqlPlatforms, object> getDefaultValue, object context);
    internal void AddProperty(ModelPropertyClass modelPropertyClass);
    internal void AddRelationship(ModelRelationshipClass modelRelationshipClass);
    internal void AddMetadata(ModelMetadataClass modelMetadataClass);
}
internal class Microsoft.SqlServer.Dac.Model.NavigatingPropertyContext : ModelPropertyContext {
    private SimpleModelPropertyContext _referencedElementPropertyContext;
    private Tuple`2[] _navigatingRelationshipTuples;
    public NavigatingPropertyContext(SimpleModelPropertyContext referencedElementPropertyContext, Tuple`2[] navigatingRelationshipTuples);
    public virtual object GetDefaultValue(TSqlPlatforms tSqlPlatforms);
    public virtual T GetValue(IModelElement element);
    private Tuple`2<ModelElementClass, ModelRelationshipClass> GetTypeSpecificRelationshipMapping(IModelElement element);
}
public enum Microsoft.SqlServer.Dac.Model.NonTransactedFileStreamAccess : Enum {
    public int value__;
    public static NonTransactedFileStreamAccess Off;
    public static NonTransactedFileStreamAccess ReadOnly;
    public static NonTransactedFileStreamAccess Full;
}
public class Microsoft.SqlServer.Dac.Model.ObjectIdentifier : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Parts>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ExternalParts>k__BackingField;
    internal int Id { get; internal set; }
    public IList`1<string> Parts { get; public set; }
    public bool HasName { get; }
    public IList`1<string> ExternalParts { get; public set; }
    public bool HasExternalParts { get; }
    public ObjectIdentifier(String[] parts);
    public ObjectIdentifier(IList`1<string> parts);
    public ObjectIdentifier(IEnumerable`1<string> parts);
    public ObjectIdentifier(IList`1<string> externalParts, IList`1<string> parts);
    [CompilerGeneratedAttribute]
internal int get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(int value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Parts();
    [CompilerGeneratedAttribute]
public void set_Parts(IList`1<string> value);
    public bool get_HasName();
    [CompilerGeneratedAttribute]
public IList`1<string> get_ExternalParts();
    [CompilerGeneratedAttribute]
public void set_ExternalParts(IList`1<string> value);
    public bool get_HasExternalParts();
    public virtual string ToString();
    private static void PrintParts(IList`1<string> parts, StringBuilder builder);
}
public enum Microsoft.SqlServer.Dac.Model.OrderRestriction : Enum {
    public int value__;
    public static OrderRestriction None;
    public static OrderRestriction IsFirst;
    public static OrderRestriction IsLast;
}
public enum Microsoft.SqlServer.Dac.Model.PageVerifyMode : Enum {
    public int value__;
    public static PageVerifyMode Unknown;
    public static PageVerifyMode Checksum;
    public static PageVerifyMode TornPageDetection;
    public static PageVerifyMode None;
}
public static class Microsoft.SqlServer.Dac.Model.Parameter : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DefaultExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Varying>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Scale>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Precision>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Length>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsMax>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <XmlStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsNullable>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsOutput>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlSchemaCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataType>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass DefaultExpression { get; internal set; }
    public static ModelPropertyClass ReadOnly { get; internal set; }
    public static ModelPropertyClass Varying { get; internal set; }
    public static ModelPropertyClass Scale { get; internal set; }
    public static ModelPropertyClass Precision { get; internal set; }
    public static ModelPropertyClass Length { get; internal set; }
    public static ModelPropertyClass IsMax { get; internal set; }
    public static ModelPropertyClass XmlStyle { get; internal set; }
    public static ModelPropertyClass IsNullable { get; internal set; }
    public static ModelPropertyClass IsOutput { get; internal set; }
    public static ModelRelationshipClass XmlSchemaCollection { get; internal set; }
    public static ModelRelationshipClass DataType { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DefaultExpression();
    [CompilerGeneratedAttribute]
internal static void set_DefaultExpression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ReadOnly();
    [CompilerGeneratedAttribute]
internal static void set_ReadOnly(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Varying();
    [CompilerGeneratedAttribute]
internal static void set_Varying(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Scale();
    [CompilerGeneratedAttribute]
internal static void set_Scale(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Precision();
    [CompilerGeneratedAttribute]
internal static void set_Precision(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Length();
    [CompilerGeneratedAttribute]
internal static void set_Length(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsMax();
    [CompilerGeneratedAttribute]
internal static void set_IsMax(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_XmlStyle();
    [CompilerGeneratedAttribute]
internal static void set_XmlStyle(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsNullable();
    [CompilerGeneratedAttribute]
internal static void set_IsNullable(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsOutput();
    [CompilerGeneratedAttribute]
internal static void set_IsOutput(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlSchemaCollection();
    [CompilerGeneratedAttribute]
internal static void set_XmlSchemaCollection(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataType();
    [CompilerGeneratedAttribute]
internal static void set_DataType(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.ParameterizationOption : Enum {
    public int value__;
    public static ParameterizationOption Unknown;
    public static ParameterizationOption Simple;
    public static ParameterizationOption Forced;
}
public static class Microsoft.SqlServer.Dac.Model.PartitionFunction : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ParameterType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BoundaryValues>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Range { get; internal set; }
    public static ModelRelationshipClass ParameterType { get; internal set; }
    public static ModelRelationshipClass BoundaryValues { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Range();
    [CompilerGeneratedAttribute]
internal static void set_Range(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ParameterType();
    [CompilerGeneratedAttribute]
internal static void set_ParameterType(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BoundaryValues();
    [CompilerGeneratedAttribute]
internal static void set_BoundaryValues(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.PartitionRange : Enum {
    public int value__;
    public static PartitionRange Unknown;
    public static PartitionRange Left;
    public static PartitionRange Right;
}
public static class Microsoft.SqlServer.Dac.Model.PartitionScheme : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllToOneFilegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroups>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionFunction>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AllToOneFilegroup { get; internal set; }
    public static ModelRelationshipClass Filegroups { get; internal set; }
    public static ModelRelationshipClass PartitionFunction { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllToOneFilegroup();
    [CompilerGeneratedAttribute]
internal static void set_AllToOneFilegroup(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroups();
    [CompilerGeneratedAttribute]
internal static void set_Filegroups(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionFunction();
    [CompilerGeneratedAttribute]
internal static void set_PartitionFunction(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.PartitionSpecification : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BoundaryValues>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Range { get; internal set; }
    public static ModelRelationshipClass BoundaryValues { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Range();
    [CompilerGeneratedAttribute]
internal static void set_Range(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BoundaryValues();
    [CompilerGeneratedAttribute]
internal static void set_BoundaryValues(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.PartitionValue : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExpressionDependencies>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Expression { get; internal set; }
    public static ModelRelationshipClass ExpressionDependencies { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Expression();
    [CompilerGeneratedAttribute]
internal static void set_Expression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExpressionDependencies();
    [CompilerGeneratedAttribute]
internal static void set_ExpressionDependencies(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.Payload : Enum {
    public int value__;
    public static Payload Unknown;
    public static Payload Soap;
    public static Payload TSql;
    public static Payload ServiceBroker;
    public static Payload DatabaseMirroring;
}
public static class Microsoft.SqlServer.Dac.Model.Permission : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithAllPrivileges>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithGrantOption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PermissionType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PermissionAction>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExcludedColumns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Grantee>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Grantor>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <RevokedGrantOptionColumns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <SecuredObject>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass WithAllPrivileges { get; internal set; }
    public static ModelPropertyClass WithGrantOption { get; internal set; }
    public static ModelPropertyClass PermissionType { get; internal set; }
    public static ModelPropertyClass PermissionAction { get; internal set; }
    public static ModelRelationshipClass ExcludedColumns { get; internal set; }
    public static ModelRelationshipClass Grantee { get; internal set; }
    public static ModelRelationshipClass Grantor { get; internal set; }
    public static ModelRelationshipClass RevokedGrantOptionColumns { get; internal set; }
    public static ModelRelationshipClass SecuredObject { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithAllPrivileges();
    [CompilerGeneratedAttribute]
internal static void set_WithAllPrivileges(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithGrantOption();
    [CompilerGeneratedAttribute]
internal static void set_WithGrantOption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PermissionType();
    [CompilerGeneratedAttribute]
internal static void set_PermissionType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PermissionAction();
    [CompilerGeneratedAttribute]
internal static void set_PermissionAction(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExcludedColumns();
    [CompilerGeneratedAttribute]
internal static void set_ExcludedColumns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Grantee();
    [CompilerGeneratedAttribute]
internal static void set_Grantee(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Grantor();
    [CompilerGeneratedAttribute]
internal static void set_Grantor(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_RevokedGrantOptionColumns();
    [CompilerGeneratedAttribute]
internal static void set_RevokedGrantOptionColumns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_SecuredObject();
    [CompilerGeneratedAttribute]
internal static void set_SecuredObject(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.PermissionAction : Enum {
    public int value__;
    public static PermissionAction Grant;
    public static PermissionAction Deny;
}
public enum Microsoft.SqlServer.Dac.Model.PermissionType : Enum {
    public int value__;
    public static PermissionType Unknown;
    public static PermissionType Insert;
    public static PermissionType Select;
    public static PermissionType Update;
    public static PermissionType Delete;
    public static PermissionType References;
    public static PermissionType CreateDatabase;
    public static PermissionType CreateDefault;
    public static PermissionType CreateFunction;
    public static PermissionType CreateProcedure;
    public static PermissionType CreateRule;
    public static PermissionType CreateTable;
    public static PermissionType CreateView;
    public static PermissionType BackupDatabase;
    public static PermissionType BackupLog;
    public static PermissionType AdministerBulkOperations;
    public static PermissionType Alter;
    public static PermissionType AlterAnyApplicationRole;
    public static PermissionType AlterAnyAssembly;
    public static PermissionType AlterAnyAsymmetricKey;
    public static PermissionType AlterAnyCertificate;
    public static PermissionType AlterAnyConnection;
    public static PermissionType AlterAnyContract;
    public static PermissionType AlterAnyCredential;
    public static PermissionType AlterAnyDatabase;
    public static PermissionType AlterAnyDatabaseDdlTrigger;
    public static PermissionType AlterAnyDatabaseEventNotification;
    public static PermissionType AlterAnyDataspace;
    public static PermissionType AlterAnyEndpoint;
    public static PermissionType AlterAnyEventNotification;
    public static PermissionType AlterAnyFulltextCatalog;
    public static PermissionType AlterAnyLinkedServer;
    public static PermissionType AlterAnyLogin;
    public static PermissionType AlterAnyMessageType;
    public static PermissionType AlterAnyRemoteServiceBinding;
    public static PermissionType AlterAnyRole;
    public static PermissionType AlterAnyRoute;
    public static PermissionType AlterAnySchema;
    public static PermissionType AlterAnyService;
    public static PermissionType AlterAnySymmetricKey;
    public static PermissionType AlterAnyUser;
    public static PermissionType AlterResources;
    public static PermissionType AlterServerState;
    public static PermissionType AlterSettings;
    public static PermissionType AlterTrace;
    public static PermissionType Authenticate;
    public static PermissionType AuthenticateServer;
    public static PermissionType Checkpoint;
    public static PermissionType Connect;
    public static PermissionType ConnectReplication;
    public static PermissionType ConnectSql;
    public static PermissionType Control;
    public static PermissionType ControlServer;
    public static PermissionType CreateAggregate;
    public static PermissionType CreateAnyDatabase;
    public static PermissionType CreateAssembly;
    public static PermissionType CreateAsymmetricKey;
    public static PermissionType CreateCertificate;
    public static PermissionType CreateContract;
    public static PermissionType CreateDatabaseDdlEventNotification;
    public static PermissionType CreateDdlEventNotification;
    public static PermissionType CreateEndpoint;
    public static PermissionType CreateFulltextCatalog;
    public static PermissionType CreateMessageType;
    public static PermissionType CreateQueue;
    public static PermissionType CreateRemoteServiceBinding;
    public static PermissionType CreateRole;
    public static PermissionType CreateRoute;
    public static PermissionType CreateSchema;
    public static PermissionType CreateService;
    public static PermissionType CreateSymmetricKey;
    public static PermissionType CreateSynonym;
    public static PermissionType CreateTraceEventNotification;
    public static PermissionType CreateType;
    public static PermissionType CreateXmlSchemaCollection;
    public static PermissionType Execute;
    public static PermissionType ExternalAccessAssembly;
    public static PermissionType Impersonate;
    public static PermissionType Receive;
    public static PermissionType Send;
    public static PermissionType Showplan;
    public static PermissionType Shutdown;
    public static PermissionType SubscribeQueryNotifications;
    public static PermissionType TakeOwnership;
    public static PermissionType UnsafeAssembly;
    public static PermissionType ViewAnyDatabase;
    public static PermissionType ViewAnyDefinition;
    public static PermissionType ViewChangeTracking;
    public static PermissionType ViewDatabaseState;
    public static PermissionType ViewDefinition;
    public static PermissionType ViewServerState;
    public static PermissionType All;
    public static PermissionType AlterAnyDatabaseAudit;
    public static PermissionType AlterAnyServerAudit;
    public static PermissionType CreateSequence;
    public static PermissionType AlterAnyServerRole;
    public static PermissionType CreateServerRole;
    public static PermissionType CreateAvailabilityGroup;
    public static PermissionType AlterAnyAvailabilityGroup;
    public static PermissionType AlterAnyDatabaseEventSession;
    public static PermissionType ConnectAnyDatabase;
    public static PermissionType ImpersonateAnyLogin;
    public static PermissionType SelectAllUserSecurables;
    public static PermissionType AlterAnySecurityPolicy;
    public static PermissionType AlterAnyColumnEncryptionKey;
    public static PermissionType AlterAnyColumnMasterKey;
    public static PermissionType Unmask;
    public static PermissionType AlterAnyMask;
    public static PermissionType ViewAnyColumnMasterKeyDefinition;
    public static PermissionType ViewAnyColumnEncryptionKeyDefinition;
    public static PermissionType AlterAnyExternalDataSource;
    public static PermissionType AlterAnyExternalFileFormat;
    public static PermissionType AlterAnyDatabaseScopedConfiguration;
    public static PermissionType AlterAnySensitivityClassification;
    public static PermissionType ViewAnySensitivityClassification;
    public static PermissionType KillDatabaseConnection;
    public static PermissionType ExecuteAnyExternalScript;
    public static PermissionType AdministerDatabaseBulkOperations;
    public static PermissionType OwnershipChaining;
    public static PermissionType AlterAnyExternalLanguage;
    public static PermissionType AlterAnyExternalLibrary;
    public static PermissionType AlterAnyExternalStream;
    public static PermissionType AlterAnyExternalJob;
    public static PermissionType CreateUser;
    public static PermissionType ViewDatabaseSecurityState;
    public static PermissionType ViewDatabasePerformanceState;
    public static PermissionType ViewSecurityDefinition;
    public static PermissionType ViewCryptographicallySecuredDefinition;
    public static PermissionType EnableLedger;
    public static PermissionType AlterLedger;
    public static PermissionType ViewLedgerContent;
    public static PermissionType ExecuteAnyExternalEndpoint;
    public static PermissionType CreateLogin;
    public static PermissionType ViewAnySecurityDefinition;
    public static PermissionType ViewServerSecurityState;
    public static PermissionType ViewServerPerformanceState;
    public static PermissionType AlterAnyEventSession;
    public static PermissionType ViewAnyCryptographicallySecuredDefinition;
    public static PermissionType CreateExternalLanguage;
    public static PermissionType CreateExternalLibrary;
    public static PermissionType AlterAnyDatabaseEventSessionAddEvent;
    public static PermissionType AlterAnyDatabaseEventSessionAddTarget;
    public static PermissionType AlterAnyDatabaseEventSessionDisable;
    public static PermissionType AlterAnyDatabaseEventSessionDropEvent;
    public static PermissionType AlterAnyDatabaseEventSessionDropTarget;
    public static PermissionType AlterAnyDatabaseEventSessionEnable;
    public static PermissionType AlterAnyDatabaseEventSessionOption;
    public static PermissionType AlterAnyEventSessionAddEvent;
    public static PermissionType AlterAnyEventSessionAddTarget;
    public static PermissionType AlterAnyEventSessionDisable;
    public static PermissionType AlterAnyEventSessionDropEvent;
    public static PermissionType AlterAnyEventSessionDropTarget;
    public static PermissionType AlterAnyEventSessionEnable;
    public static PermissionType AlterAnyEventSessionOption;
    public static PermissionType CreateAnyDatabaseEventSession;
    public static PermissionType CreateAnyEventSession;
    public static PermissionType DropAnyDatabaseEventSession;
    public static PermissionType DropAnyEventSession;
    public static PermissionType ViewAnyErrorLog;
    public static PermissionType ViewDatabaseSecurityAudit;
    public static PermissionType ViewServerSecurityAudit;
    public static PermissionType AlterLedgerConfiguration;
    public static PermissionType ViewAnyPerformanceDefinition;
    public static PermissionType ViewPerformanceDefinition;
    public static PermissionType ExecuteExternalScript;
    public static PermissionType AlterAnyExternalMirror;
}
internal abstract class Microsoft.SqlServer.Dac.Model.PotentialElementDescriptor : ElementDescriptor {
    public ElementDescriptorRelevance Relevance { get; }
    public abstract virtual ElementDescriptorRelevance get_Relevance();
}
public static class Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowPageLocks>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowRowLocks>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IgnoreDuplicateKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RecomputeStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Clustered>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileStreamNull>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithPadIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <OptimizeForSequentialKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AutoCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BucketCount>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DoIncrementalStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FillFactor>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Online>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataCompressionOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileStreamFilegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileStreamPartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlCompressionOptions>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AllowPageLocks { get; internal set; }
    public static ModelPropertyClass AllowRowLocks { get; internal set; }
    public static ModelPropertyClass IgnoreDuplicateKey { get; internal set; }
    public static ModelPropertyClass RecomputeStatistics { get; internal set; }
    public static ModelPropertyClass Clustered { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass FileStreamNull { get; internal set; }
    public static ModelPropertyClass WithPadIndex { get; internal set; }
    public static ModelPropertyClass Hash { get; internal set; }
    public static ModelPropertyClass OptimizeForSequentialKey { get; internal set; }
    public static ModelPropertyClass AutoCreated { get; internal set; }
    public static ModelPropertyClass BucketCount { get; internal set; }
    public static ModelPropertyClass DoIncrementalStatistics { get; internal set; }
    public static ModelPropertyClass FillFactor { get; internal set; }
    public static ModelPropertyClass Online { get; internal set; }
    public static ModelRelationshipClass Host { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass DataCompressionOptions { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    public static ModelRelationshipClass FileStreamFilegroup { get; internal set; }
    public static ModelRelationshipClass FileStreamPartitionScheme { get; internal set; }
    public static ModelRelationshipClass PartitionColumn { get; internal set; }
    public static ModelRelationshipClass PartitionScheme { get; internal set; }
    public static ModelRelationshipClass XmlCompressionOptions { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowPageLocks();
    [CompilerGeneratedAttribute]
internal static void set_AllowPageLocks(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowRowLocks();
    [CompilerGeneratedAttribute]
internal static void set_AllowRowLocks(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IgnoreDuplicateKey();
    [CompilerGeneratedAttribute]
internal static void set_IgnoreDuplicateKey(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RecomputeStatistics();
    [CompilerGeneratedAttribute]
internal static void set_RecomputeStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Clustered();
    [CompilerGeneratedAttribute]
internal static void set_Clustered(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileStreamNull();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamNull(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithPadIndex();
    [CompilerGeneratedAttribute]
internal static void set_WithPadIndex(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Hash();
    [CompilerGeneratedAttribute]
internal static void set_Hash(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_OptimizeForSequentialKey();
    [CompilerGeneratedAttribute]
internal static void set_OptimizeForSequentialKey(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AutoCreated();
    [CompilerGeneratedAttribute]
internal static void set_AutoCreated(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BucketCount();
    [CompilerGeneratedAttribute]
internal static void set_BucketCount(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DoIncrementalStatistics();
    [CompilerGeneratedAttribute]
internal static void set_DoIncrementalStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FillFactor();
    [CompilerGeneratedAttribute]
internal static void set_FillFactor(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Online();
    [CompilerGeneratedAttribute]
internal static void set_Online(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Host();
    [CompilerGeneratedAttribute]
internal static void set_Host(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_DataCompressionOptions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileStreamFilegroup();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamFilegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileStreamPartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamPartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionColumn();
    [CompilerGeneratedAttribute]
internal static void set_PartitionColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_PartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_XmlCompressionOptions(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Procedure : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiNullsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsCaller>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ForReplication>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QuotedIdentifierOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithRecompile>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsSelf>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithNativeCompilation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithSchemaBinding>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsReplicated>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ParentProcedure>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BodyDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Login>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <User>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AnsiNullsOn { get; internal set; }
    public static ModelPropertyClass ExecuteAsCaller { get; internal set; }
    public static ModelPropertyClass WithEncryption { get; internal set; }
    public static ModelPropertyClass ForReplication { get; internal set; }
    public static ModelPropertyClass ExecuteAsOwner { get; internal set; }
    public static ModelPropertyClass QuotedIdentifierOn { get; internal set; }
    public static ModelPropertyClass WithRecompile { get; internal set; }
    public static ModelPropertyClass ExecuteAsSelf { get; internal set; }
    public static ModelPropertyClass WithNativeCompilation { get; internal set; }
    public static ModelPropertyClass WithSchemaBinding { get; internal set; }
    public static ModelPropertyClass ClassName { get; internal set; }
    public static ModelPropertyClass IsReplicated { get; internal set; }
    public static ModelPropertyClass MethodName { get; internal set; }
    public static ModelRelationshipClass ParentProcedure { get; internal set; }
    public static ModelRelationshipClass Assembly { get; internal set; }
    public static ModelRelationshipClass BodyDependencies { get; internal set; }
    public static ModelRelationshipClass Login { get; internal set; }
    public static ModelRelationshipClass Parameters { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    public static ModelRelationshipClass User { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiNullsOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiNullsOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsCaller();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsCaller(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithEncryption();
    [CompilerGeneratedAttribute]
internal static void set_WithEncryption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ForReplication();
    [CompilerGeneratedAttribute]
internal static void set_ForReplication(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsOwner();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsOwner(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QuotedIdentifierOn();
    [CompilerGeneratedAttribute]
internal static void set_QuotedIdentifierOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithRecompile();
    [CompilerGeneratedAttribute]
internal static void set_WithRecompile(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsSelf();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsSelf(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithNativeCompilation();
    [CompilerGeneratedAttribute]
internal static void set_WithNativeCompilation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithSchemaBinding();
    [CompilerGeneratedAttribute]
internal static void set_WithSchemaBinding(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ClassName();
    [CompilerGeneratedAttribute]
internal static void set_ClassName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsReplicated();
    [CompilerGeneratedAttribute]
internal static void set_IsReplicated(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MethodName();
    [CompilerGeneratedAttribute]
internal static void set_MethodName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ParentProcedure();
    [CompilerGeneratedAttribute]
internal static void set_ParentProcedure(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Assembly();
    [CompilerGeneratedAttribute]
internal static void set_Assembly(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BodyDependencies();
    [CompilerGeneratedAttribute]
internal static void set_BodyDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Login();
    [CompilerGeneratedAttribute]
internal static void set_Login(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Parameters();
    [CompilerGeneratedAttribute]
internal static void set_Parameters(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_User();
    [CompilerGeneratedAttribute]
internal static void set_User(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.PromotedNodePathForSqlType : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Scale>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Precision>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Length>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsMax>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsSingleton>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NodePath>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataType>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Scale { get; internal set; }
    public static ModelPropertyClass Precision { get; internal set; }
    public static ModelPropertyClass Length { get; internal set; }
    public static ModelPropertyClass IsMax { get; internal set; }
    public static ModelPropertyClass IsSingleton { get; internal set; }
    public static ModelPropertyClass NodePath { get; internal set; }
    public static ModelRelationshipClass DataType { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Scale();
    [CompilerGeneratedAttribute]
internal static void set_Scale(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Precision();
    [CompilerGeneratedAttribute]
internal static void set_Precision(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Length();
    [CompilerGeneratedAttribute]
internal static void set_Length(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsMax();
    [CompilerGeneratedAttribute]
internal static void set_IsMax(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsSingleton();
    [CompilerGeneratedAttribute]
internal static void set_IsSingleton(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NodePath();
    [CompilerGeneratedAttribute]
internal static void set_NodePath(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataType();
    [CompilerGeneratedAttribute]
internal static void set_DataType(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.PromotedNodePathForXQueryType : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsSingleton>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxLength>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NodePath>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Type>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass IsSingleton { get; internal set; }
    public static ModelPropertyClass MaxLength { get; internal set; }
    public static ModelPropertyClass NodePath { get; internal set; }
    public static ModelPropertyClass Type { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsSingleton();
    [CompilerGeneratedAttribute]
internal static void set_IsSingleton(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxLength();
    [CompilerGeneratedAttribute]
internal static void set_MaxLength(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NodePath();
    [CompilerGeneratedAttribute]
internal static void set_NodePath(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Type();
    [CompilerGeneratedAttribute]
internal static void set_Type(ModelPropertyClass value);
}
public enum Microsoft.SqlServer.Dac.Model.Protocol : Enum {
    public int value__;
    public static Protocol Unknown;
    public static Protocol Http;
    public static Protocol Tcp;
}
public enum Microsoft.SqlServer.Dac.Model.QueryStoreCaptureMode : Enum {
    public int value__;
    public static QueryStoreCaptureMode All;
    public static QueryStoreCaptureMode Auto;
    public static QueryStoreCaptureMode None;
}
public enum Microsoft.SqlServer.Dac.Model.QueryStoreDesiredState : Enum {
    public int value__;
    public static QueryStoreDesiredState Off;
    public static QueryStoreDesiredState ReadOnly;
    public static QueryStoreDesiredState ReadWrite;
}
public static class Microsoft.SqlServer.Dac.Model.Queue : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ActivationStatusOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ActivationExecuteAsCaller>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ActivationExecuteAsOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PoisonMessageHandlingStatusOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RetentionOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ActivationExecuteAsSelf>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <StatusOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ActivationMaxQueueReaders>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ActivationProcedure>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Login>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <User>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ActivationStatusOn { get; internal set; }
    public static ModelPropertyClass ActivationExecuteAsCaller { get; internal set; }
    public static ModelPropertyClass ActivationExecuteAsOwner { get; internal set; }
    public static ModelPropertyClass PoisonMessageHandlingStatusOn { get; internal set; }
    public static ModelPropertyClass RetentionOn { get; internal set; }
    public static ModelPropertyClass ActivationExecuteAsSelf { get; internal set; }
    public static ModelPropertyClass StatusOn { get; internal set; }
    public static ModelPropertyClass ActivationMaxQueueReaders { get; internal set; }
    public static ModelRelationshipClass ActivationProcedure { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    public static ModelRelationshipClass Login { get; internal set; }
    public static ModelRelationshipClass PartitionColumn { get; internal set; }
    public static ModelRelationshipClass PartitionScheme { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    public static ModelRelationshipClass User { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ActivationStatusOn();
    [CompilerGeneratedAttribute]
internal static void set_ActivationStatusOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ActivationExecuteAsCaller();
    [CompilerGeneratedAttribute]
internal static void set_ActivationExecuteAsCaller(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ActivationExecuteAsOwner();
    [CompilerGeneratedAttribute]
internal static void set_ActivationExecuteAsOwner(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PoisonMessageHandlingStatusOn();
    [CompilerGeneratedAttribute]
internal static void set_PoisonMessageHandlingStatusOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RetentionOn();
    [CompilerGeneratedAttribute]
internal static void set_RetentionOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ActivationExecuteAsSelf();
    [CompilerGeneratedAttribute]
internal static void set_ActivationExecuteAsSelf(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_StatusOn();
    [CompilerGeneratedAttribute]
internal static void set_StatusOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ActivationMaxQueueReaders();
    [CompilerGeneratedAttribute]
internal static void set_ActivationMaxQueueReaders(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ActivationProcedure();
    [CompilerGeneratedAttribute]
internal static void set_ActivationProcedure(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Login();
    [CompilerGeneratedAttribute]
internal static void set_Login(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionColumn();
    [CompilerGeneratedAttribute]
internal static void set_PartitionColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_PartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_User();
    [CompilerGeneratedAttribute]
internal static void set_User(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.QueueEventNotification : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithFanIn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BrokerService>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BrokerInstanceSpecifier>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Queue>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass WithFanIn { get; internal set; }
    public static ModelPropertyClass BrokerService { get; internal set; }
    public static ModelPropertyClass BrokerInstanceSpecifier { get; internal set; }
    public static ModelRelationshipClass EventGroup { get; internal set; }
    public static ModelRelationshipClass EventType { get; internal set; }
    public static ModelRelationshipClass Queue { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithFanIn();
    [CompilerGeneratedAttribute]
internal static void set_WithFanIn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BrokerService();
    [CompilerGeneratedAttribute]
internal static void set_BrokerService(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BrokerInstanceSpecifier();
    [CompilerGeneratedAttribute]
internal static void set_BrokerInstanceSpecifier(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventGroup();
    [CompilerGeneratedAttribute]
internal static void set_EventGroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventType();
    [CompilerGeneratedAttribute]
internal static void set_EventType(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Queue();
    [CompilerGeneratedAttribute]
internal static void set_Queue(ModelRelationshipClass value);
}
internal class Microsoft.SqlServer.Dac.Model.ReadOnlyCollectionWrapper`1 : object {
    private ICollection`1<T> _wrappedCollection;
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ReadOnlyCollectionWrapper`1(ICollection`1<T> wrappedCollection);
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(T item);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public enum Microsoft.SqlServer.Dac.Model.RecoveryMode : Enum {
    public int value__;
    public static RecoveryMode Unknown;
    public static RecoveryMode Simple;
    public static RecoveryMode BulkLogged;
    public static RecoveryMode Full;
}
public enum Microsoft.SqlServer.Dac.Model.RejectType : Enum {
    public int value__;
    public static RejectType Value;
    public static RejectType Percentage;
}
public enum Microsoft.SqlServer.Dac.Model.RelationshipType : Enum {
    public int value__;
    public static RelationshipType Composing;
    public static RelationshipType Hierarchical;
    public static RelationshipType Peer;
}
public static class Microsoft.SqlServer.Dac.Model.RemoteServiceBinding : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Anonymous>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <User>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Anonymous { get; internal set; }
    public static ModelPropertyClass Service { get; internal set; }
    public static ModelRelationshipClass User { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Anonymous();
    [CompilerGeneratedAttribute]
internal static void set_Anonymous(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Service();
    [CompilerGeneratedAttribute]
internal static void set_Service(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_User();
    [CompilerGeneratedAttribute]
internal static void set_User(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ResourceGovernor : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ClassifierFunction>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Enabled { get; internal set; }
    public static ModelRelationshipClass ClassifierFunction { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Enabled();
    [CompilerGeneratedAttribute]
internal static void set_Enabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ClassifierFunction();
    [CompilerGeneratedAttribute]
internal static void set_ClassifierFunction(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ResourcePool : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CapCpuPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxCpuPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxIopsPerVolume>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxMemoryPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MinCpuPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MinIopsPerVolume>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MinMemoryPercent>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass CapCpuPercent { get; internal set; }
    public static ModelPropertyClass MaxCpuPercent { get; internal set; }
    public static ModelPropertyClass MaxIopsPerVolume { get; internal set; }
    public static ModelPropertyClass MaxMemoryPercent { get; internal set; }
    public static ModelPropertyClass MinCpuPercent { get; internal set; }
    public static ModelPropertyClass MinIopsPerVolume { get; internal set; }
    public static ModelPropertyClass MinMemoryPercent { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CapCpuPercent();
    [CompilerGeneratedAttribute]
internal static void set_CapCpuPercent(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxCpuPercent();
    [CompilerGeneratedAttribute]
internal static void set_MaxCpuPercent(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxIopsPerVolume();
    [CompilerGeneratedAttribute]
internal static void set_MaxIopsPerVolume(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxMemoryPercent();
    [CompilerGeneratedAttribute]
internal static void set_MaxMemoryPercent(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MinCpuPercent();
    [CompilerGeneratedAttribute]
internal static void set_MinCpuPercent(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MinIopsPerVolume();
    [CompilerGeneratedAttribute]
internal static void set_MinIopsPerVolume(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MinMemoryPercent();
    [CompilerGeneratedAttribute]
internal static void set_MinMemoryPercent(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Role : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.RoleMembership : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Role>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelRelationshipClass Member { get; internal set; }
    public static ModelRelationshipClass Role { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Member();
    [CompilerGeneratedAttribute]
internal static void set_Member(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Role();
    [CompilerGeneratedAttribute]
internal static void set_Role(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Route : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BrokerInstance>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Lifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MirrorAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass BrokerInstance { get; internal set; }
    public static ModelPropertyClass ServiceName { get; internal set; }
    public static ModelPropertyClass Address { get; internal set; }
    public static ModelPropertyClass Lifetime { get; internal set; }
    public static ModelPropertyClass MirrorAddress { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BrokerInstance();
    [CompilerGeneratedAttribute]
internal static void set_BrokerInstance(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ServiceName();
    [CompilerGeneratedAttribute]
internal static void set_ServiceName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Address();
    [CompilerGeneratedAttribute]
internal static void set_Address(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Lifetime();
    [CompilerGeneratedAttribute]
internal static void set_Lifetime(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MirrorAddress();
    [CompilerGeneratedAttribute]
internal static void set_MirrorAddress(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Rule : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ShouldGenerateCreateRuleStatement>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BoundObjects>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Expression { get; internal set; }
    public static ModelPropertyClass ShouldGenerateCreateRuleStatement { get; internal set; }
    public static ModelRelationshipClass BoundObjects { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Expression();
    [CompilerGeneratedAttribute]
internal static void set_Expression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ShouldGenerateCreateRuleStatement();
    [CompilerGeneratedAttribute]
internal static void set_ShouldGenerateCreateRuleStatement(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BoundObjects();
    [CompilerGeneratedAttribute]
internal static void set_BoundObjects(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.SamplingStyle : Enum {
    public int value__;
    public static SamplingStyle Automatic;
    public static SamplingStyle Fullscan;
    public static SamplingStyle SamplePercentRows;
    public static SamplingStyle SampleAbsoluteRows;
}
public static class Microsoft.SqlServer.Dac.Model.ScalarFunction : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ReturnsNullOnNullInput>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiNullsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CalledOnNullInput>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsCaller>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QuotedIdentifierOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithSchemaBinding>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsSelf>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DataAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FillRowMethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Deterministic>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Precise>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SystemDataAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsInline>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsInlineable>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsNativeCompiled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsReplicated>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ReturnType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BodyDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Login>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <User>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ReturnsNullOnNullInput { get; internal set; }
    public static ModelPropertyClass AnsiNullsOn { get; internal set; }
    public static ModelPropertyClass CalledOnNullInput { get; internal set; }
    public static ModelPropertyClass ExecuteAsCaller { get; internal set; }
    public static ModelPropertyClass WithEncryption { get; internal set; }
    public static ModelPropertyClass ExecuteAsOwner { get; internal set; }
    public static ModelPropertyClass QuotedIdentifierOn { get; internal set; }
    public static ModelPropertyClass WithSchemaBinding { get; internal set; }
    public static ModelPropertyClass ExecuteAsSelf { get; internal set; }
    public static ModelPropertyClass ClassName { get; internal set; }
    public static ModelPropertyClass DataAccess { get; internal set; }
    public static ModelPropertyClass FillRowMethodName { get; internal set; }
    public static ModelPropertyClass Deterministic { get; internal set; }
    public static ModelPropertyClass Precise { get; internal set; }
    public static ModelPropertyClass MethodName { get; internal set; }
    public static ModelPropertyClass SystemDataAccess { get; internal set; }
    public static ModelPropertyClass IsInline { get; internal set; }
    public static ModelPropertyClass IsInlineable { get; internal set; }
    public static ModelPropertyClass IsNativeCompiled { get; internal set; }
    public static ModelPropertyClass IsReplicated { get; internal set; }
    public static ModelRelationshipClass Assembly { get; internal set; }
    public static ModelRelationshipClass ReturnType { get; internal set; }
    public static ModelRelationshipClass BodyDependencies { get; internal set; }
    public static ModelRelationshipClass Login { get; internal set; }
    public static ModelRelationshipClass Parameters { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    public static ModelRelationshipClass User { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ReturnsNullOnNullInput();
    [CompilerGeneratedAttribute]
internal static void set_ReturnsNullOnNullInput(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiNullsOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiNullsOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CalledOnNullInput();
    [CompilerGeneratedAttribute]
internal static void set_CalledOnNullInput(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsCaller();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsCaller(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithEncryption();
    [CompilerGeneratedAttribute]
internal static void set_WithEncryption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsOwner();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsOwner(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QuotedIdentifierOn();
    [CompilerGeneratedAttribute]
internal static void set_QuotedIdentifierOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithSchemaBinding();
    [CompilerGeneratedAttribute]
internal static void set_WithSchemaBinding(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsSelf();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsSelf(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ClassName();
    [CompilerGeneratedAttribute]
internal static void set_ClassName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DataAccess();
    [CompilerGeneratedAttribute]
internal static void set_DataAccess(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FillRowMethodName();
    [CompilerGeneratedAttribute]
internal static void set_FillRowMethodName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Deterministic();
    [CompilerGeneratedAttribute]
internal static void set_Deterministic(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Precise();
    [CompilerGeneratedAttribute]
internal static void set_Precise(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MethodName();
    [CompilerGeneratedAttribute]
internal static void set_MethodName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SystemDataAccess();
    [CompilerGeneratedAttribute]
internal static void set_SystemDataAccess(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsInline();
    [CompilerGeneratedAttribute]
internal static void set_IsInline(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsInlineable();
    [CompilerGeneratedAttribute]
internal static void set_IsInlineable(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsNativeCompiled();
    [CompilerGeneratedAttribute]
internal static void set_IsNativeCompiled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsReplicated();
    [CompilerGeneratedAttribute]
internal static void set_IsReplicated(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Assembly();
    [CompilerGeneratedAttribute]
internal static void set_Assembly(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ReturnType();
    [CompilerGeneratedAttribute]
internal static void set_ReturnType(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BodyDependencies();
    [CompilerGeneratedAttribute]
internal static void set_BodyDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Login();
    [CompilerGeneratedAttribute]
internal static void set_Login(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Parameters();
    [CompilerGeneratedAttribute]
internal static void set_Parameters(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_User();
    [CompilerGeneratedAttribute]
internal static void set_User(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Schema : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
}
internal class Microsoft.SqlServer.Dac.Model.SchemaAnalysisService : object {
    private InternalAnalyzer _internalAnalyzer;
    private SchemaAnalysisService(SchemaAnalyzer publicAnalyzer);
    public static SchemaAnalysisService CreateAnalysisService(SchemaAnalyzer publicAnalyzer);
    public IList`1<ExtensibilityError> AnalyzeScript(TSqlModel model, TSqlFragment sqlFragment);
    private static void CreateInterpreterAndInterpret(TSqlModel model, Action`1<SqlInterpreter> interpret);
    private static SqlSchemaModel GetInternalModel(TSqlModel model);
}
internal abstract class Microsoft.SqlServer.Dac.Model.SchemaAnalyzer : object {
    public virtual void BeginBatch(TSqlBatch batch);
    public virtual void EndBatch(TSqlBatch batch);
    public virtual void BeginDdlStatement(TSqlFragment fragment);
    public virtual void EndDdlStatement(TSqlFragment fragment);
    public virtual void IdentifiedElement(TSqlFragment fragment, ElementDescriptor elementDescriptor);
    public virtual void BeginDmlStatement(TSqlFragment fragment);
    public virtual void EndDmlStatement(TSqlFragment fragment);
    public virtual void VisitFragment(TSqlFragment fragment, ElementDescriptor elementDescriptor, ElementDescriptorRelevance relevance);
    public virtual void VisitAmbiguousFragment(TSqlFragment fragment, IEnumerable`1<PotentialElementDescriptor> possibilities);
    public virtual void IdentifiedSupportingStatement(TSqlFragment fragment, ElementDescriptor elementDescriptor);
    internal virtual void IdentifiedError(ElementDescriptor descriptor, ExtensibilityError error);
    public void AnalyzeScript(TSqlModel model, TSqlFragment sqlFragment);
}
internal class Microsoft.SqlServer.Dac.Model.ScriptPropertyContext : SimpleModelPropertyContext {
    public ScriptPropertyContext(SimpleModelPropertyContext clone);
    public ScriptPropertyContext(Tuple`2[] propertyTuples);
    public virtual object GetDefaultValue(TSqlPlatforms tSqlPlatforms);
    public virtual T GetValue(IModelElement element);
}
public static class Microsoft.SqlServer.Dac.Model.SearchProperty : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PropertySetGuid>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <SearchPropertyList>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Description { get; internal set; }
    public static ModelPropertyClass Identifier { get; internal set; }
    public static ModelPropertyClass PropertySetGuid { get; internal set; }
    public static ModelRelationshipClass SearchPropertyList { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Description();
    [CompilerGeneratedAttribute]
internal static void set_Description(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Identifier();
    [CompilerGeneratedAttribute]
internal static void set_Identifier(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PropertySetGuid();
    [CompilerGeneratedAttribute]
internal static void set_PropertySetGuid(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_SearchPropertyList();
    [CompilerGeneratedAttribute]
internal static void set_SearchPropertyList(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.SearchPropertyList : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.SecondaryXmlIndexType : Enum {
    public int value__;
    public static SecondaryXmlIndexType Unknown;
    public static SecondaryXmlIndexType Path;
    public static SecondaryXmlIndexType Property;
    public static SecondaryXmlIndexType Value;
}
public static class Microsoft.SqlServer.Dac.Model.SecurityPolicy : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsSchemaBound>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NotForReplication>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Predicates>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Enabled { get; internal set; }
    public static ModelPropertyClass IsSchemaBound { get; internal set; }
    public static ModelPropertyClass NotForReplication { get; internal set; }
    public static ModelRelationshipClass Predicates { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Enabled();
    [CompilerGeneratedAttribute]
internal static void set_Enabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsSchemaBound();
    [CompilerGeneratedAttribute]
internal static void set_IsSchemaBound(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NotForReplication();
    [CompilerGeneratedAttribute]
internal static void set_NotForReplication(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Predicates();
    [CompilerGeneratedAttribute]
internal static void set_Predicates(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.SecurityPredicate : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BodyScript>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PredicateType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BodyDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <TargetObject>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass BodyScript { get; internal set; }
    public static ModelPropertyClass Operation { get; internal set; }
    public static ModelPropertyClass PredicateType { get; internal set; }
    public static ModelRelationshipClass BodyDependencies { get; internal set; }
    public static ModelRelationshipClass TargetObject { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BodyScript();
    [CompilerGeneratedAttribute]
internal static void set_BodyScript(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Operation();
    [CompilerGeneratedAttribute]
internal static void set_Operation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PredicateType();
    [CompilerGeneratedAttribute]
internal static void set_PredicateType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BodyDependencies();
    [CompilerGeneratedAttribute]
internal static void set_BodyDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_TargetObject();
    [CompilerGeneratedAttribute]
internal static void set_TargetObject(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.SecurityPredicateOperation : Enum {
    public int value__;
    public static SecurityPredicateOperation All;
    public static SecurityPredicateOperation AfterInsert;
    public static SecurityPredicateOperation AfterUpdate;
    public static SecurityPredicateOperation BeforeUpdate;
    public static SecurityPredicateOperation BeforeDelete;
}
public enum Microsoft.SqlServer.Dac.Model.SecurityPredicateType : Enum {
    public int value__;
    public static SecurityPredicateType Filter;
    public static SecurityPredicateType Block;
}
public static class Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithPadIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowRowLocks>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowPageLocks>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IgnoreDuplicateKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RecomputeStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DoIncrementalStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FillFactor>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsPrimary>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PrimarySelectiveXmlIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PrimaryPromotedPath>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Column>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <IndexedObject>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PromotedPaths>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlNamespaces>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass WithPadIndex { get; internal set; }
    public static ModelPropertyClass AllowRowLocks { get; internal set; }
    public static ModelPropertyClass AllowPageLocks { get; internal set; }
    public static ModelPropertyClass IgnoreDuplicateKey { get; internal set; }
    public static ModelPropertyClass RecomputeStatistics { get; internal set; }
    public static ModelPropertyClass DoIncrementalStatistics { get; internal set; }
    public static ModelPropertyClass FillFactor { get; internal set; }
    public static ModelPropertyClass IsPrimary { get; internal set; }
    public static ModelRelationshipClass PrimarySelectiveXmlIndex { get; internal set; }
    public static ModelRelationshipClass PrimaryPromotedPath { get; internal set; }
    public static ModelRelationshipClass Column { get; internal set; }
    public static ModelRelationshipClass IndexedObject { get; internal set; }
    public static ModelRelationshipClass PromotedPaths { get; internal set; }
    public static ModelRelationshipClass XmlNamespaces { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithPadIndex();
    [CompilerGeneratedAttribute]
internal static void set_WithPadIndex(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowRowLocks();
    [CompilerGeneratedAttribute]
internal static void set_AllowRowLocks(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowPageLocks();
    [CompilerGeneratedAttribute]
internal static void set_AllowPageLocks(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IgnoreDuplicateKey();
    [CompilerGeneratedAttribute]
internal static void set_IgnoreDuplicateKey(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RecomputeStatistics();
    [CompilerGeneratedAttribute]
internal static void set_RecomputeStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DoIncrementalStatistics();
    [CompilerGeneratedAttribute]
internal static void set_DoIncrementalStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FillFactor();
    [CompilerGeneratedAttribute]
internal static void set_FillFactor(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsPrimary();
    [CompilerGeneratedAttribute]
internal static void set_IsPrimary(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PrimarySelectiveXmlIndex();
    [CompilerGeneratedAttribute]
internal static void set_PrimarySelectiveXmlIndex(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PrimaryPromotedPath();
    [CompilerGeneratedAttribute]
internal static void set_PrimaryPromotedPath(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Column();
    [CompilerGeneratedAttribute]
internal static void set_Column(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_IndexedObject();
    [CompilerGeneratedAttribute]
internal static void set_IndexedObject(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PromotedPaths();
    [CompilerGeneratedAttribute]
internal static void set_PromotedPaths(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlNamespaces();
    [CompilerGeneratedAttribute]
internal static void set_XmlNamespaces(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Sequence : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NoMaxValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NoMinValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IncrementValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CacheSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsCached>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsCycling>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MinValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <StartValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass NoMaxValue { get; internal set; }
    public static ModelPropertyClass NoMinValue { get; internal set; }
    public static ModelPropertyClass IncrementValue { get; internal set; }
    public static ModelPropertyClass CacheSize { get; internal set; }
    public static ModelPropertyClass IsCached { get; internal set; }
    public static ModelPropertyClass IsCycling { get; internal set; }
    public static ModelPropertyClass MaxValue { get; internal set; }
    public static ModelPropertyClass MinValue { get; internal set; }
    public static ModelPropertyClass StartValue { get; internal set; }
    public static ModelRelationshipClass DataType { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NoMaxValue();
    [CompilerGeneratedAttribute]
internal static void set_NoMaxValue(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NoMinValue();
    [CompilerGeneratedAttribute]
internal static void set_NoMinValue(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IncrementValue();
    [CompilerGeneratedAttribute]
internal static void set_IncrementValue(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CacheSize();
    [CompilerGeneratedAttribute]
internal static void set_CacheSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsCached();
    [CompilerGeneratedAttribute]
internal static void set_IsCached(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsCycling();
    [CompilerGeneratedAttribute]
internal static void set_IsCycling(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxValue();
    [CompilerGeneratedAttribute]
internal static void set_MaxValue(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MinValue();
    [CompilerGeneratedAttribute]
internal static void set_MinValue(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_StartValue();
    [CompilerGeneratedAttribute]
internal static void set_StartValue(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataType();
    [CompilerGeneratedAttribute]
internal static void set_DataType(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ServerAudit : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ReserveDiskSpace>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UnlimitedFileSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UnlimitedMaxRolloverFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <OnFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PredicateExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AuditGuid>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AuditTarget>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsOperatorAudit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxRolloverFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxSizeUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueueDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RetentionDays>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass ReserveDiskSpace { get; internal set; }
    public static ModelPropertyClass UnlimitedFileSize { get; internal set; }
    public static ModelPropertyClass UnlimitedMaxRolloverFiles { get; internal set; }
    public static ModelPropertyClass OnFailure { get; internal set; }
    public static ModelPropertyClass PredicateExpression { get; internal set; }
    public static ModelPropertyClass AuditGuid { get; internal set; }
    public static ModelPropertyClass AuditTarget { get; internal set; }
    public static ModelPropertyClass FilePath { get; internal set; }
    public static ModelPropertyClass IsOperatorAudit { get; internal set; }
    public static ModelPropertyClass MaxFiles { get; internal set; }
    public static ModelPropertyClass MaxRolloverFiles { get; internal set; }
    public static ModelPropertyClass MaxSize { get; internal set; }
    public static ModelPropertyClass MaxSizeUnit { get; internal set; }
    public static ModelPropertyClass Path { get; internal set; }
    public static ModelPropertyClass QueueDelay { get; internal set; }
    public static ModelPropertyClass RetentionDays { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ReserveDiskSpace();
    [CompilerGeneratedAttribute]
internal static void set_ReserveDiskSpace(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UnlimitedFileSize();
    [CompilerGeneratedAttribute]
internal static void set_UnlimitedFileSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UnlimitedMaxRolloverFiles();
    [CompilerGeneratedAttribute]
internal static void set_UnlimitedMaxRolloverFiles(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_OnFailure();
    [CompilerGeneratedAttribute]
internal static void set_OnFailure(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PredicateExpression();
    [CompilerGeneratedAttribute]
internal static void set_PredicateExpression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AuditGuid();
    [CompilerGeneratedAttribute]
internal static void set_AuditGuid(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AuditTarget();
    [CompilerGeneratedAttribute]
internal static void set_AuditTarget(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FilePath();
    [CompilerGeneratedAttribute]
internal static void set_FilePath(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsOperatorAudit();
    [CompilerGeneratedAttribute]
internal static void set_IsOperatorAudit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxFiles();
    [CompilerGeneratedAttribute]
internal static void set_MaxFiles(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxRolloverFiles();
    [CompilerGeneratedAttribute]
internal static void set_MaxRolloverFiles(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxSize();
    [CompilerGeneratedAttribute]
internal static void set_MaxSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxSizeUnit();
    [CompilerGeneratedAttribute]
internal static void set_MaxSizeUnit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Path();
    [CompilerGeneratedAttribute]
internal static void set_Path(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueueDelay();
    [CompilerGeneratedAttribute]
internal static void set_QueueDelay(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RetentionDays();
    [CompilerGeneratedAttribute]
internal static void set_RetentionDays(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ServerAuditSpecification : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <StateOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AuditActionGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ServerAudit>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass StateOn { get; internal set; }
    public static ModelRelationshipClass AuditActionGroups { get; internal set; }
    public static ModelRelationshipClass ServerAudit { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_StateOn();
    [CompilerGeneratedAttribute]
internal static void set_StateOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AuditActionGroups();
    [CompilerGeneratedAttribute]
internal static void set_AuditActionGroups(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ServerAudit();
    [CompilerGeneratedAttribute]
internal static void set_ServerAudit(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ServerDdlTrigger : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiNullsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsCaller>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QuotedIdentifierOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsSelf>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TriggerType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsLogon>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BodyDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Login>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <User>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AnsiNullsOn { get; internal set; }
    public static ModelPropertyClass ExecuteAsCaller { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass WithEncryption { get; internal set; }
    public static ModelPropertyClass ExecuteAsOwner { get; internal set; }
    public static ModelPropertyClass QuotedIdentifierOn { get; internal set; }
    public static ModelPropertyClass ExecuteAsSelf { get; internal set; }
    public static ModelPropertyClass TriggerType { get; internal set; }
    public static ModelPropertyClass ClassName { get; internal set; }
    public static ModelPropertyClass IsLogon { get; internal set; }
    public static ModelPropertyClass MethodName { get; internal set; }
    public static ModelRelationshipClass Assembly { get; internal set; }
    public static ModelRelationshipClass BodyDependencies { get; internal set; }
    public static ModelRelationshipClass EventGroup { get; internal set; }
    public static ModelRelationshipClass EventType { get; internal set; }
    public static ModelRelationshipClass Login { get; internal set; }
    public static ModelRelationshipClass User { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiNullsOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiNullsOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsCaller();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsCaller(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithEncryption();
    [CompilerGeneratedAttribute]
internal static void set_WithEncryption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsOwner();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsOwner(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QuotedIdentifierOn();
    [CompilerGeneratedAttribute]
internal static void set_QuotedIdentifierOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsSelf();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsSelf(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TriggerType();
    [CompilerGeneratedAttribute]
internal static void set_TriggerType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ClassName();
    [CompilerGeneratedAttribute]
internal static void set_ClassName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsLogon();
    [CompilerGeneratedAttribute]
internal static void set_IsLogon(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MethodName();
    [CompilerGeneratedAttribute]
internal static void set_MethodName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Assembly();
    [CompilerGeneratedAttribute]
internal static void set_Assembly(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BodyDependencies();
    [CompilerGeneratedAttribute]
internal static void set_BodyDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventGroup();
    [CompilerGeneratedAttribute]
internal static void set_EventGroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventType();
    [CompilerGeneratedAttribute]
internal static void set_EventType(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Login();
    [CompilerGeneratedAttribute]
internal static void set_Login(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_User();
    [CompilerGeneratedAttribute]
internal static void set_User(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ServerEventNotification : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithFanIn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BrokerService>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BrokerInstanceSpecifier>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EventType>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass WithFanIn { get; internal set; }
    public static ModelPropertyClass BrokerService { get; internal set; }
    public static ModelPropertyClass BrokerInstanceSpecifier { get; internal set; }
    public static ModelRelationshipClass EventGroup { get; internal set; }
    public static ModelRelationshipClass EventType { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithFanIn();
    [CompilerGeneratedAttribute]
internal static void set_WithFanIn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BrokerService();
    [CompilerGeneratedAttribute]
internal static void set_BrokerService(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BrokerInstanceSpecifier();
    [CompilerGeneratedAttribute]
internal static void set_BrokerInstanceSpecifier(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventGroup();
    [CompilerGeneratedAttribute]
internal static void set_EventGroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EventType();
    [CompilerGeneratedAttribute]
internal static void set_EventType(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ServerOptions : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
}
public static class Microsoft.SqlServer.Dac.Model.ServerRoleMembership : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Role>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelRelationshipClass Member { get; internal set; }
    public static ModelRelationshipClass Role { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Member();
    [CompilerGeneratedAttribute]
internal static void set_Member(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Role();
    [CompilerGeneratedAttribute]
internal static void set_Role(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Service : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UseDefaultContract>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Contracts>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Queue>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass UseDefaultContract { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    public static ModelRelationshipClass Contracts { get; internal set; }
    public static ModelRelationshipClass Queue { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UseDefaultContract();
    [CompilerGeneratedAttribute]
internal static void set_UseDefaultContract(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Contracts();
    [CompilerGeneratedAttribute]
internal static void set_Contracts(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Queue();
    [CompilerGeneratedAttribute]
internal static void set_Queue(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.ServiceBrokerEncryptionAlgorithm : Enum {
    public int value__;
    public static ServiceBrokerEncryptionAlgorithm Unknown;
    public static ServiceBrokerEncryptionAlgorithm Aes;
    public static ServiceBrokerEncryptionAlgorithm RC4;
}
public static class Microsoft.SqlServer.Dac.Model.ServiceBrokerLanguageSpecifier : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WindowsAuthenticationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UseCertificateFirst>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MessageForwardingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptionAlgorithmPart1>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptionAlgorithmPart2>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EncryptionMode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MessageForwardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AuthenticationCertificate>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass WindowsAuthenticationMode { get; internal set; }
    public static ModelPropertyClass UseCertificateFirst { get; internal set; }
    public static ModelPropertyClass MessageForwardingEnabled { get; internal set; }
    public static ModelPropertyClass EncryptionAlgorithmPart1 { get; internal set; }
    public static ModelPropertyClass EncryptionAlgorithmPart2 { get; internal set; }
    public static ModelPropertyClass EncryptionMode { get; internal set; }
    public static ModelPropertyClass MessageForwardSize { get; internal set; }
    public static ModelRelationshipClass AuthenticationCertificate { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WindowsAuthenticationMode();
    [CompilerGeneratedAttribute]
internal static void set_WindowsAuthenticationMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UseCertificateFirst();
    [CompilerGeneratedAttribute]
internal static void set_UseCertificateFirst(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MessageForwardingEnabled();
    [CompilerGeneratedAttribute]
internal static void set_MessageForwardingEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptionAlgorithmPart1();
    [CompilerGeneratedAttribute]
internal static void set_EncryptionAlgorithmPart1(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptionAlgorithmPart2();
    [CompilerGeneratedAttribute]
internal static void set_EncryptionAlgorithmPart2(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EncryptionMode();
    [CompilerGeneratedAttribute]
internal static void set_EncryptionMode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MessageForwardSize();
    [CompilerGeneratedAttribute]
internal static void set_MessageForwardSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AuthenticationCertificate();
    [CompilerGeneratedAttribute]
internal static void set_AuthenticationCertificate(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.ServiceBrokerOption : Enum {
    public int value__;
    public static ServiceBrokerOption Unknown;
    public static ServiceBrokerOption EnableBroker;
    public static ServiceBrokerOption DisableBroker;
    public static ServiceBrokerOption NewBroker;
    public static ServiceBrokerOption ErrorBrokerConversations;
}
public static class Microsoft.SqlServer.Dac.Model.Signature : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsCounterSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <EncryptionMechanism>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <SignedObject>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass IsCounterSignature { get; internal set; }
    public static ModelRelationshipClass EncryptionMechanism { get; internal set; }
    public static ModelRelationshipClass SignedObject { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsCounterSignature();
    [CompilerGeneratedAttribute]
internal static void set_IsCounterSignature(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_EncryptionMechanism();
    [CompilerGeneratedAttribute]
internal static void set_EncryptionMechanism(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_SignedObject();
    [CompilerGeneratedAttribute]
internal static void set_SignedObject(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.SignatureEncryptionMechanism : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SignedBlob>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AsymmetricKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Certificate>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Password { get; internal set; }
    public static ModelPropertyClass SignedBlob { get; internal set; }
    public static ModelRelationshipClass AsymmetricKey { get; internal set; }
    public static ModelRelationshipClass Certificate { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Password();
    [CompilerGeneratedAttribute]
internal static void set_Password(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SignedBlob();
    [CompilerGeneratedAttribute]
internal static void set_SignedBlob(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AsymmetricKey();
    [CompilerGeneratedAttribute]
internal static void set_AsymmetricKey(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Certificate();
    [CompilerGeneratedAttribute]
internal static void set_Certificate(ModelRelationshipClass value);
}
internal class Microsoft.SqlServer.Dac.Model.SimpleModelPropertyContext : ModelPropertyContext {
    [CompilerGeneratedAttribute]
private IList`1<Tuple`2<ModelElementClass, ModelPropertyClass>> <Properties>k__BackingField;
    internal IList`1<Tuple`2<ModelElementClass, ModelPropertyClass>> Properties { get; private set; }
    public SimpleModelPropertyContext(Tuple`2[] propertyTuples);
    public SimpleModelPropertyContext(IList`1<Tuple`2<ModelElementClass, ModelPropertyClass>> propertyTuples);
    private void Init(IList`1<Tuple`2<ModelElementClass, ModelPropertyClass>> propertyTuples);
    [CompilerGeneratedAttribute]
internal IList`1<Tuple`2<ModelElementClass, ModelPropertyClass>> get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(IList`1<Tuple`2<ModelElementClass, ModelPropertyClass>> value);
    public virtual object GetDefaultValue(TSqlPlatforms tSqlPlatforms);
    public virtual T GetValue(IModelElement element);
    private ModelPropertyClass GetTypeSpecificProperty(IModelElement element);
}
internal class Microsoft.SqlServer.Dac.Model.SimpleModelRelationshipContext : ModelRelationshipContext {
    [CompilerGeneratedAttribute]
private ModelRelationshipClass <PublicRelationship>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ModelRelationshipClass> <InternalRelationshipClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ModelRelationshipClass> <CollapsedRelationshipClasses>k__BackingField;
    internal ModelRelationshipClass PublicRelationship { get; private set; }
    internal IList`1<ModelRelationshipClass> InternalRelationshipClasses { get; private set; }
    internal IList`1<ModelRelationshipClass> CollapsedRelationshipClasses { get; internal set; }
    public SimpleModelRelationshipContext(ModelRelationshipClass relationship, ModelRelationshipClass[] internalRelationshipClasses);
    [CompilerGeneratedAttribute]
internal ModelRelationshipClass get_PublicRelationship();
    [CompilerGeneratedAttribute]
private void set_PublicRelationship(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
internal IList`1<ModelRelationshipClass> get_InternalRelationshipClasses();
    [CompilerGeneratedAttribute]
private void set_InternalRelationshipClasses(IList`1<ModelRelationshipClass> value);
    [CompilerGeneratedAttribute]
internal IList`1<ModelRelationshipClass> get_CollapsedRelationshipClasses();
    [CompilerGeneratedAttribute]
internal void set_CollapsedRelationshipClasses(IList`1<ModelRelationshipClass> value);
    private void Init(IList`1<ModelRelationshipClass> internalRelationshipClasses);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.Model.SimpleModelRelationshipContext/<GetReferencedRelationshipInstances>d__14")]
public virtual IEnumerable`1<InternalRelationshipInstanceInfo> GetReferencedRelationshipInstances(IModelElement fromElement);
    private static ModelRelationshipClass GetRelationshipForReferencedElement(IModelElement fromElement, IList`1<ModelRelationshipClass> relationshipClasses);
}
public enum Microsoft.SqlServer.Dac.Model.SoapFormat : Enum {
    public int value__;
    public static SoapFormat Unknown;
    public static SoapFormat AllResults;
    public static SoapFormat RowsetsOnly;
    public static SoapFormat None;
}
public static class Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BatchesEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SessionsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SessionTimeoutNever>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CharacterSet>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DatabaseName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <HeaderLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsDefaultDatabase>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsDefaultNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsDefaultWsdlSpName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LoginType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SchemaType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SessionTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WsdlSpName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <WebMethods>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass BatchesEnabled { get; internal set; }
    public static ModelPropertyClass SessionsEnabled { get; internal set; }
    public static ModelPropertyClass SessionTimeoutNever { get; internal set; }
    public static ModelPropertyClass CharacterSet { get; internal set; }
    public static ModelPropertyClass DatabaseName { get; internal set; }
    public static ModelPropertyClass HeaderLimit { get; internal set; }
    public static ModelPropertyClass IsDefaultDatabase { get; internal set; }
    public static ModelPropertyClass IsDefaultNamespace { get; internal set; }
    public static ModelPropertyClass IsDefaultWsdlSpName { get; internal set; }
    public static ModelPropertyClass LoginType { get; internal set; }
    public static ModelPropertyClass Namespace { get; internal set; }
    public static ModelPropertyClass SchemaType { get; internal set; }
    public static ModelPropertyClass SessionTimeout { get; internal set; }
    public static ModelPropertyClass WsdlSpName { get; internal set; }
    public static ModelRelationshipClass WebMethods { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BatchesEnabled();
    [CompilerGeneratedAttribute]
internal static void set_BatchesEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SessionsEnabled();
    [CompilerGeneratedAttribute]
internal static void set_SessionsEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SessionTimeoutNever();
    [CompilerGeneratedAttribute]
internal static void set_SessionTimeoutNever(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CharacterSet();
    [CompilerGeneratedAttribute]
internal static void set_CharacterSet(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DatabaseName();
    [CompilerGeneratedAttribute]
internal static void set_DatabaseName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_HeaderLimit();
    [CompilerGeneratedAttribute]
internal static void set_HeaderLimit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsDefaultDatabase();
    [CompilerGeneratedAttribute]
internal static void set_IsDefaultDatabase(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsDefaultNamespace();
    [CompilerGeneratedAttribute]
internal static void set_IsDefaultNamespace(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsDefaultWsdlSpName();
    [CompilerGeneratedAttribute]
internal static void set_IsDefaultWsdlSpName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LoginType();
    [CompilerGeneratedAttribute]
internal static void set_LoginType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Namespace();
    [CompilerGeneratedAttribute]
internal static void set_Namespace(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SchemaType();
    [CompilerGeneratedAttribute]
internal static void set_SchemaType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SessionTimeout();
    [CompilerGeneratedAttribute]
internal static void set_SessionTimeout(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WsdlSpName();
    [CompilerGeneratedAttribute]
internal static void set_WsdlSpName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_WebMethods();
    [CompilerGeneratedAttribute]
internal static void set_WebMethods(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.SoapLoginType : Enum {
    public int value__;
    public static SoapLoginType Unknown;
    public static SoapLoginType Mixed;
    public static SoapLoginType Windows;
}
public static class Microsoft.SqlServer.Dac.Model.SoapMethodSpecification : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SchemaType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WebMethodAlias>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WebMethodNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <RelatedMethod>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass SchemaType { get; internal set; }
    public static ModelPropertyClass Format { get; internal set; }
    public static ModelPropertyClass WebMethodAlias { get; internal set; }
    public static ModelPropertyClass WebMethodNamespace { get; internal set; }
    public static ModelRelationshipClass RelatedMethod { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SchemaType();
    [CompilerGeneratedAttribute]
internal static void set_SchemaType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Format();
    [CompilerGeneratedAttribute]
internal static void set_Format(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WebMethodAlias();
    [CompilerGeneratedAttribute]
internal static void set_WebMethodAlias(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WebMethodNamespace();
    [CompilerGeneratedAttribute]
internal static void set_WebMethodNamespace(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_RelatedMethod();
    [CompilerGeneratedAttribute]
internal static void set_RelatedMethod(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.SoapSchema : Enum {
    public int value__;
    public static SoapSchema Unknown;
    public static SoapSchema None;
    public static SoapSchema Standard;
    public static SoapSchema Default;
}
public static class Microsoft.SqlServer.Dac.Model.SpatialIndex : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowPageLocks>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowRowLocks>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IgnoreDuplicateKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RecomputeStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <GridLevel1Density>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <GridLevel2Density>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <GridLevel3Density>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <GridLevel4Density>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithPadIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CellsPerObject>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DataCompression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DoIncrementalStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FillFactor>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Tessellation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <XMax>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <XMin>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <YMax>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <YMin>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Column>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <IndexedObject>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionScheme>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AllowPageLocks { get; internal set; }
    public static ModelPropertyClass AllowRowLocks { get; internal set; }
    public static ModelPropertyClass IgnoreDuplicateKey { get; internal set; }
    public static ModelPropertyClass RecomputeStatistics { get; internal set; }
    public static ModelPropertyClass GridLevel1Density { get; internal set; }
    public static ModelPropertyClass GridLevel2Density { get; internal set; }
    public static ModelPropertyClass GridLevel3Density { get; internal set; }
    public static ModelPropertyClass GridLevel4Density { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass WithPadIndex { get; internal set; }
    public static ModelPropertyClass CellsPerObject { get; internal set; }
    public static ModelPropertyClass DataCompression { get; internal set; }
    public static ModelPropertyClass DoIncrementalStatistics { get; internal set; }
    public static ModelPropertyClass FillFactor { get; internal set; }
    public static ModelPropertyClass Tessellation { get; internal set; }
    public static ModelPropertyClass XMax { get; internal set; }
    public static ModelPropertyClass XMin { get; internal set; }
    public static ModelPropertyClass YMax { get; internal set; }
    public static ModelPropertyClass YMin { get; internal set; }
    public static ModelRelationshipClass Column { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    public static ModelRelationshipClass IndexedObject { get; internal set; }
    public static ModelRelationshipClass PartitionColumn { get; internal set; }
    public static ModelRelationshipClass PartitionScheme { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowPageLocks();
    [CompilerGeneratedAttribute]
internal static void set_AllowPageLocks(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowRowLocks();
    [CompilerGeneratedAttribute]
internal static void set_AllowRowLocks(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IgnoreDuplicateKey();
    [CompilerGeneratedAttribute]
internal static void set_IgnoreDuplicateKey(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RecomputeStatistics();
    [CompilerGeneratedAttribute]
internal static void set_RecomputeStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_GridLevel1Density();
    [CompilerGeneratedAttribute]
internal static void set_GridLevel1Density(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_GridLevel2Density();
    [CompilerGeneratedAttribute]
internal static void set_GridLevel2Density(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_GridLevel3Density();
    [CompilerGeneratedAttribute]
internal static void set_GridLevel3Density(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_GridLevel4Density();
    [CompilerGeneratedAttribute]
internal static void set_GridLevel4Density(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithPadIndex();
    [CompilerGeneratedAttribute]
internal static void set_WithPadIndex(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CellsPerObject();
    [CompilerGeneratedAttribute]
internal static void set_CellsPerObject(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DataCompression();
    [CompilerGeneratedAttribute]
internal static void set_DataCompression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DoIncrementalStatistics();
    [CompilerGeneratedAttribute]
internal static void set_DoIncrementalStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FillFactor();
    [CompilerGeneratedAttribute]
internal static void set_FillFactor(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Tessellation();
    [CompilerGeneratedAttribute]
internal static void set_Tessellation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_XMax();
    [CompilerGeneratedAttribute]
internal static void set_XMax(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_XMin();
    [CompilerGeneratedAttribute]
internal static void set_XMin(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_YMax();
    [CompilerGeneratedAttribute]
internal static void set_YMax(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_YMin();
    [CompilerGeneratedAttribute]
internal static void set_YMin(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Column();
    [CompilerGeneratedAttribute]
internal static void set_Column(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_IndexedObject();
    [CompilerGeneratedAttribute]
internal static void set_IndexedObject(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionColumn();
    [CompilerGeneratedAttribute]
internal static void set_PartitionColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_PartitionScheme(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.SqlDataType : Enum {
    public int value__;
    public static SqlDataType Unknown;
    public static SqlDataType BigInt;
    public static SqlDataType Int;
    public static SqlDataType SmallInt;
    public static SqlDataType TinyInt;
    public static SqlDataType Bit;
    public static SqlDataType Decimal;
    public static SqlDataType Numeric;
    public static SqlDataType Money;
    public static SqlDataType SmallMoney;
    public static SqlDataType Float;
    public static SqlDataType Real;
    public static SqlDataType DateTime;
    public static SqlDataType SmallDateTime;
    public static SqlDataType Char;
    public static SqlDataType VarChar;
    public static SqlDataType Text;
    public static SqlDataType NChar;
    public static SqlDataType NVarChar;
    public static SqlDataType NText;
    public static SqlDataType Binary;
    public static SqlDataType VarBinary;
    public static SqlDataType Image;
    public static SqlDataType Cursor;
    public static SqlDataType Variant;
    public static SqlDataType Table;
    public static SqlDataType Timestamp;
    public static SqlDataType UniqueIdentifier;
    public static SqlDataType Xml;
    public static SqlDataType Date;
    public static SqlDataType Time;
    public static SqlDataType DateTime2;
    public static SqlDataType DateTimeOffset;
    public static SqlDataType Rowversion;
    public static SqlDataType Json;
    public static SqlDataType Vector;
}
internal class Microsoft.SqlServer.Dac.Model.SqlDisplayServices : DisplayServices {
    private UserInteractionServices _uiServices;
    private SqlSchemaModelObjectService _objectService;
    internal SqlDisplayServices(UserInteractionServices uiServices, SqlSchemaModelObjectService objectService);
    public virtual string GetEscapedNameString(string name);
    public virtual string GetElementName(TSqlObject element, ElementNameStyle style);
    public virtual string GetDisplayName(ObjectIdentifier name, EscapeStyle escapeStyle, bool fullName);
}
internal class Microsoft.SqlServer.Dac.Model.SqlElementDescriptor : ElementDescriptor {
    private SqlElementDescriptor _internalDescriptor;
    public bool IsEmpty { get; }
    public bool HasUsableName { get; }
    public bool IgnoreName { get; }
    public ModelTypeClass TypeClass { get; }
    public ReadOnlyCollection`1<string> Identifiers { get; }
    public ReadOnlyCollection`1<string> ExternalReferenceParts { get; }
    public SqlElementDescriptor(SqlElementDescriptor internalDescriptor);
    internal SqlElementDescriptor GetInternalDescriptor();
    public virtual bool get_IsEmpty();
    public virtual bool get_HasUsableName();
    public virtual bool get_IgnoreName();
    public virtual ModelTypeClass get_TypeClass();
    public virtual ReadOnlyCollection`1<string> get_Identifiers();
    public virtual ReadOnlyCollection`1<string> get_ExternalReferenceParts();
    public virtual TSqlObject GetModelElement(TSqlModel model);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public static class Microsoft.SqlServer.Dac.Model.SqlFile : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Offline>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Unlimited>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileGrowth>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileGrowthUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsLogFile>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxSizeUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SizeUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Offline { get; internal set; }
    public static ModelPropertyClass Unlimited { get; internal set; }
    public static ModelPropertyClass FileGrowth { get; internal set; }
    public static ModelPropertyClass FileGrowthUnit { get; internal set; }
    public static ModelPropertyClass FileName { get; internal set; }
    public static ModelPropertyClass IsLogFile { get; internal set; }
    public static ModelPropertyClass MaxSize { get; internal set; }
    public static ModelPropertyClass MaxSizeUnit { get; internal set; }
    public static ModelPropertyClass Size { get; internal set; }
    public static ModelPropertyClass SizeUnit { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Offline();
    [CompilerGeneratedAttribute]
internal static void set_Offline(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Unlimited();
    [CompilerGeneratedAttribute]
internal static void set_Unlimited(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileGrowth();
    [CompilerGeneratedAttribute]
internal static void set_FileGrowth(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileGrowthUnit();
    [CompilerGeneratedAttribute]
internal static void set_FileGrowthUnit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileName();
    [CompilerGeneratedAttribute]
internal static void set_FileName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsLogFile();
    [CompilerGeneratedAttribute]
internal static void set_IsLogFile(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxSize();
    [CompilerGeneratedAttribute]
internal static void set_MaxSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxSizeUnit();
    [CompilerGeneratedAttribute]
internal static void set_MaxSizeUnit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Size();
    [CompilerGeneratedAttribute]
internal static void set_Size(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SizeUnit();
    [CompilerGeneratedAttribute]
internal static void set_SizeUnit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
}
internal class Microsoft.SqlServer.Dac.Model.SqlModelCollationComparer : ModelCollationComparer {
    private ModelCollationComparer _comparer;
    internal SqlModelCollationComparer(DataSchemaModel internalModel);
    public virtual bool Equals(string x, string y);
    public virtual int GetHashCode(string obj);
    public virtual bool Equals(IList`1<string> x, IList`1<string> y);
    public virtual bool Equals(ObjectIdentifier x, ObjectIdentifier y);
    public virtual int GetHashCode(IList`1<string> obj);
    public virtual int GetHashCode(ObjectIdentifier obj);
    public virtual int Compare(string x, string y);
    public virtual int Compare(IList`1<string> x, IList`1<string> y);
    public virtual int Compare(ObjectIdentifier x, ObjectIdentifier y);
}
internal class Microsoft.SqlServer.Dac.Model.SqlPotentialElementDescriptor : PotentialElementDescriptor {
    private SqlPotentialElementDescriptor _internalDescriptor;
    private SqlElementDescriptor _helperDescriptor;
    public ElementDescriptorRelevance Relevance { get; }
    public bool IsEmpty { get; }
    public bool HasUsableName { get; }
    public bool IgnoreName { get; }
    public ModelTypeClass TypeClass { get; }
    public ReadOnlyCollection`1<string> Identifiers { get; }
    public ReadOnlyCollection`1<string> ExternalReferenceParts { get; }
    public SqlPotentialElementDescriptor(SqlPotentialElementDescriptor internalDescriptor);
    internal SqlPotentialElementDescriptor GetInternalDescriptor();
    public virtual ElementDescriptorRelevance get_Relevance();
    public virtual bool get_IsEmpty();
    public virtual bool get_HasUsableName();
    public virtual bool get_IgnoreName();
    public virtual ModelTypeClass get_TypeClass();
    public virtual ReadOnlyCollection`1<string> get_Identifiers();
    public virtual ReadOnlyCollection`1<string> get_ExternalReferenceParts();
    public virtual TSqlObject GetModelElement(TSqlModel model);
}
internal class Microsoft.SqlServer.Dac.Model.SqlSchemaModelCreator : object {
    public static DataSchemaModel CreateEmptyModel(SqlServerVersion modelTargetVersion, TSqlModelOptions modelCreationOptions);
    private static SqlPlatforms CalculateTargetPlatform(SqlServerVersion modelTargetVersion, TSqlModelOptions modelCreationOptions);
    public static TSqlModelOptions CopyModelOptions(TSqlModel model);
    private static int GetCompatibilityLevel(SqlPlatforms modelTargetPlatform);
    internal static ModelCollation GetCollationToUse(string collationString, SqlPlatforms targetPlatform);
}
internal class Microsoft.SqlServer.Dac.Model.SqlSchemaModelLoader : object {
    [CompilerGeneratedAttribute]
private DataSchemaModel <Model>k__BackingField;
    public DataSchemaModel Model { get; private set; }
    public SqlSchemaModelLoader(Stream dacpacStream, DacSchemaModelStorageType modelStorageType);
    public SqlSchemaModelLoader(string fileName, DacSchemaModelStorageType modelStorageType);
    [CompilerGeneratedAttribute]
public DataSchemaModel get_Model();
    [CompilerGeneratedAttribute]
private void set_Model(DataSchemaModel value);
    private void LoadFromDacpac(IPackageSource packageSource, string fileNameIfPresent);
    private static IPackageSource TryGetSupportedPackageSource(string fileName, DacSchemaModelStorageType modelStorageType);
    private static IPackageSource TryGetSupportedPackageSource(Stream dacpacStream, DacSchemaModelStorageType modelStorageType);
    private static DataSchemaModel TryLoadLegacyDacpac(IPackageSource packageSource, ErrorManager errorManager);
    private static DataSchemaModel LoadModel(IPackageSource packageSource, ErrorManager errorManager, DataSchemaModelHeader& modelHeader);
}
internal class Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService : TSqlObjectService {
    private static CreateTableInlineConstraintsMode InlineConstraintsMode;
    private static string UniqueScriptCacheIdPart;
    private static string UnknownScriptCacheId;
    private bool _isScriptBacked;
    private bool _throwOnModelErrors;
    private DataSchemaModel _model;
    private SqlModelBuilder _modelBuilder;
    private SqlScriptGenerator _scriptGenerator;
    private TSqlModelSchema _modelSchema;
    private SqlModelCollationComparer _comparer;
    private TSqlParserLookup _quotedIdOnParserRepository;
    private TSqlParserLookup _quotedIdOffParserRepository;
    [CompilerGeneratedAttribute]
private SqlServerVersion <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EngineVersion>k__BackingField;
    internal ModelBuilder ModelBuilder { get; }
    internal DataSchemaModel DataSchemaModel { get; }
    public bool IsScriptBacked { get; }
    public SqlServerVersion Version { get; protected set; }
    public int EngineVersion { get; protected set; }
    internal SqlSchemaModelObjectService(TSqlModelSchema modelSchema, DataSchemaModel model);
    public SqlSchemaModelObjectService(DataSchemaModel model);
    private SqlModelBuilder CreateModelBuilder();
    private void CreateParserRepository();
    private SqlScriptGenerator CreateScriptGenerator();
    internal static SqlDatabaseOptions GetDatabaseOptions(DataSchemaModel store);
    internal void SetScriptBacked(bool isScriptBacked);
    internal void SetThrowOnModelErrors(bool throwOnModelErrors);
    internal ModelBuilder get_ModelBuilder();
    internal DataSchemaModel get_DataSchemaModel();
    private TSqlParserLookup GetParserRepository(bool quotedIdentifiersOn);
    internal bool TryGetObject(IModelElement modelElement, TSqlObject& sqlObject);
    public virtual bool get_IsScriptBacked();
    public virtual TSqlObject GetObject(ModelTypeClass type, ObjectIdentifier id, DacQueryScopes queryScopes);
    private void VerifyTopLevelTypes(ModelTypeClass[] types);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService/<GetObjects>d__30")]
public virtual IEnumerable`1<TSqlObject> GetObjects(ModelTypeClass[] types, DacQueryScopes queryScopes);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService/<GetObjects>d__31")]
public virtual IEnumerable`1<TSqlObject> GetObjects(string sourceName, ModelTypeClass[] types);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService/<GetObjects>d__32")]
public virtual IEnumerable`1<TSqlObject> GetObjects(ModelTypeClass type, ObjectIdentifier id, DacQueryScopes queryScopes);
    public virtual IEnumerable`1<DacModelError> GetModelErrors();
    public virtual IEnumerable`1<ModelRelationshipInstance> GetReferencedRelationshipInstances(TSqlObject tSqlObject, DacExternalQueryScopes queryScopes);
    public virtual IEnumerable`1<ModelRelationshipInstance> GetReferencedRelationshipInstances(TSqlObject tSqlObject, ModelRelationshipClass relationshipType, DacExternalQueryScopes queryScopes);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService/<GetReferencedRelationshipInstances>d__36")]
private IEnumerable`1<ModelRelationshipInstance> GetReferencedRelationshipInstances(TSqlObject tSqlObject, IEnumerable`1<ModelRelationshipClass> relationshipClasses, DacExternalQueryScopes queryScopes);
    private bool ShouldReturnReferencedRelationshipInstance(IModelElement referencedElement, ScopeFilter scopeFilter, TSqlObject& referencedObject, ObjectIdentifier& referencedObjectId);
    public virtual IEnumerable`1<ModelRelationshipInstance> GetReferencingRelationshipInstances(TSqlObject tSqlObject, ModelRelationshipClass relationshipType, DacQueryScopes queryScopes);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService/<GetReferencingRelationshipInstances>d__39")]
public virtual IEnumerable`1<ModelRelationshipInstance> GetReferencingRelationshipInstances(TSqlObject tSqlObject, DacQueryScopes queryScopes);
    private bool TryFindCollapsedRelationshipInfo(IModelRelationshipEntry referencingEntry, ModelRelationshipClass& publicRelationship, IModelElement& referencingElement);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService/<GetObjectsInternal>d__41")]
private IEnumerable`1<IModelElement> GetObjectsInternal(ModelTypeClass type, ObjectIdentifier id, DacQueryScopes queryScopes);
    internal ModelIdentifier GetModelIdForNamedObjectId(ObjectIdentifier id);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService/<GetObjectsInternal>d__43")]
private IEnumerable`1<IModelElement> GetObjectsInternal(ModelTypeClass type, DacQueryScopes queryScopes);
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService/<GetObjectsByInternalId>d__44")]
private IEnumerable`1<IModelElement> GetObjectsByInternalId(ModelTypeClass type, int id, ScopeFilter filter);
    private void VerifyNotDisposed();
    private bool IsDisposed();
    public sealed virtual void Dispose();
    public virtual T GetMetadata(object contextObject, ModelMetadataClass metadata);
    public virtual T GetProperty(object contextObject, ModelPropertyClass property);
    private static IModelElement GetAsValidIModelElement(object contextObject);
    public virtual ObjectIdentifier CreateIdentifier(object contextObject);
    private static ObjectIdentifier CreateIdentifier(ModelIdentifier internalIdentifier);
    [CompilerGeneratedAttribute]
public virtual SqlServerVersion get_Version();
    [CompilerGeneratedAttribute]
protected virtual void set_Version(SqlServerVersion value);
    [CompilerGeneratedAttribute]
public virtual int get_EngineVersion();
    [CompilerGeneratedAttribute]
protected virtual void set_EngineVersion(int value);
    public virtual bool IsToplevelObject(TSqlObject tSqlObject);
    public virtual bool TryGetAst(TSqlObject tSqlObject, TSqlScript& ast);
    public virtual bool TryGetScript(TSqlObject tSqlObject, String& script);
    public virtual void AddObjects(string inputScript);
    public virtual void AddObjects(string inputScript, TSqlObjectOptions options);
    public virtual void AddObjects(TSqlScript inputScriptAst);
    public virtual void AddObjects(TSqlScript inputScriptAst, TSqlObjectOptions options);
    public virtual void AddOrUpdateObjects(string inputScript, string sourceName, TSqlObjectOptions options);
    public virtual void AddOrUpdateObjects(TSqlScript inputScriptAst, string sourceName, TSqlObjectOptions options);
    private static void ThrowIfSourceNameInvalid(string sourceName, string methodName);
    private void DoAddOrUpdateObjects(TSqlScript inputScriptAst, string sourceName, TSqlObjectOptions options);
    private void DoAddOrUpdateObjects(string inputScript, string sourceName, TSqlObjectOptions options);
    private string DoAddOrUpdateObjectsNoValidation(string inputScript, string sourceName, TSqlObjectOptions options);
    private static string CreateCacheIdentifier(string sourceName);
    private static string GetSourceNameFromCacheId(string identifier);
    public virtual void DeleteObjects(string sourceName);
    public virtual void BuildPackage(Func`1<Stream> streamGetter, PackageMetadata packageMetadata, PackageOptions packageOptions);
    private void ValidateAndThrowOnErrors(bool treatWarningsAsErrors, IEnumerable`1<string> ignoreValidationErrors);
    private static void ExecutePackageOperationWithErrorHandling(Action dacPackageOperation);
    public virtual void UpdateModel(DacPackage dacPackage, PackageMetadata packageMetadata);
    private static DacMetadata GetUpdatedMetadata(SqlPackage package, PackageMetadata packageMetadata);
    private void SaveContributorData(PackageOptions packageOptions, SqlPackage package, DacOrigin dacOrigin);
    private SqlDeploymentProjectBuilder CreateSqlDeploymentProjectBuilder(SqlPackage package, PackageOptions packageOptions);
    private static void ProcessDeploymentContributorConfiguration(SqlDeploymentProjectBuilder projectBuilder, string filePath, string flag);
    public virtual IList`1<DacModelMessage> Validate();
    public virtual IEnumerable`1<DacModelError> CheckVersionCompatibility(SqlServerVersion targetVersion, CancellationToken cancelToken);
    private IEnumerable`1<DacModelError> ValidateModelForExportToAzure(CancellationToken token);
    private DacModelError CreateDacModelError(DataSchemaError dataSchemaError);
    public virtual SourceInformation GetSourceInformation(TSqlObject tSqlObject);
    internal static SourceInformation GetSourceInformationInternal(ISourceInformation elementSource);
    private static ISourceInformation GetPrimarySourceInformation(TSqlObject tSqlObject);
    private string TryGetElementName(IModelElement element);
    private string TryGetElementType(IModelElement element);
    public virtual TSqlFragment GetOriginalSourceFragment(TSqlObject tSqlObject);
    public virtual DisplayServices GetDisplayServices();
    public virtual ModelCollationComparer GetCollationComparer();
    public virtual int GetInvalidElementCount();
    private IList`1<DataSchemaError> GetModelValidationErrors(IEnumerable`1<string> ignoreValidationErrors);
    private static List`1<SqlValidationRule> RemoveIgnoredValidationRules(List`1<SqlValidationRule> list, IEnumerable`1<string> ignoreValidationErrors);
    private void ThrowIfModelErrorsExist(string errorMessage);
    private static Dictionary`2<string, string> CreateScriptCacheMetadata(TSqlObjectOptions options);
    private bool TryGetAstInternal(ISqlModelElement element, TSqlScript& ast);
    private SqlScriptDomGenerator ConstructSqlScriptDomGenerator();
    private bool IsScriptable(TSqlObject tSqlObject);
    private bool IsScriptable(ISqlModelElement element);
    public virtual TSqlObject ConvertToScriptedObject(TSqlObject tSqlObject, string sourceName);
    private void ThrowIfSourceNameIsNotAllowed(TSqlObject tSqlObject, string sourceName);
    private void ConvertToScriptedObject(TSqlObject tSqlObject, string sourceName, string elementScript);
    public virtual void ConvertToScriptedModel(CancellationToken cancelToken);
    private void CollectObjectsToBeRecreated(Dictionary`2<string, Tuple`2<TSqlObject, string>> sourceNameToScriptedObjects, CancellationToken cancelToken);
    private string GetUniqueSourceName(TSqlObject tSqlObject, Dictionary`2<string, Tuple`2<TSqlObject, string>> sourceNameToScriptedObjects);
    private void DropAndRecreateElements(Dictionary`2<string, Tuple`2<TSqlObject, string>> sourceNameToScriptedObjects, CancellationToken cancelToken);
    private void DoAddOrUpdateSubstitutedObject(ISqlModelElement element, string sourceName, TSqlObjectOptions options, string script, string cacheIdentifier);
    private static TSqlObjectOptions GetTSqlObjectOptions(ISqlModelElement element);
    [CompilerGeneratedAttribute]
private void <CreateModelBuilder>b__14_0(SqlModelBuilderConstructor ctorSetter);
    [CompilerGeneratedAttribute]
private TSqlParserLookup <CreateParserRepository>b__15_0(bool quotedIdentifiersOn);
    [CompilerGeneratedAttribute]
private DacModelError <GetModelErrors>b__33_0(DataSchemaError e);
    [CompilerGeneratedAttribute]
private DacModelError <ValidateModelForExportToAzure>b__87_2(DataSchemaError e);
}
public enum Microsoft.SqlServer.Dac.Model.SqlServerVersion : Enum {
    public int value__;
    public static SqlServerVersion Sql90;
    public static SqlServerVersion Sql100;
    public static SqlServerVersion SqlAzure;
    public static SqlServerVersion Sql110;
    public static SqlServerVersion Sql120;
    public static SqlServerVersion Sql130;
    public static SqlServerVersion Sql140;
    public static SqlServerVersion Sql150;
    public static SqlServerVersion Sql160;
    public static SqlServerVersion SqlDw;
    public static SqlServerVersion SqlServerless;
    public static SqlServerVersion SqlDwUnified;
    public static SqlServerVersion SqlDbFabric;
}
public enum Microsoft.SqlServer.Dac.Model.State : Enum {
    public int value__;
    public static State Unknown;
    public static State Disabled;
    public static State Started;
    public static State Stopped;
}
public static class Microsoft.SqlServer.Dac.Model.Statistics : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <StatsStream>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FilterPredicate>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AutoDrop>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Incremental>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NoRecompute>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SampleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SamplingStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <OnObject>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExpressionDependencies>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass StatsStream { get; internal set; }
    public static ModelPropertyClass FilterPredicate { get; internal set; }
    public static ModelPropertyClass AutoDrop { get; internal set; }
    public static ModelPropertyClass Incremental { get; internal set; }
    public static ModelPropertyClass NoRecompute { get; internal set; }
    public static ModelPropertyClass SampleSize { get; internal set; }
    public static ModelPropertyClass SamplingStyle { get; internal set; }
    public static ModelRelationshipClass OnObject { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass ExpressionDependencies { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_StatsStream();
    [CompilerGeneratedAttribute]
internal static void set_StatsStream(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FilterPredicate();
    [CompilerGeneratedAttribute]
internal static void set_FilterPredicate(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AutoDrop();
    [CompilerGeneratedAttribute]
internal static void set_AutoDrop(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Incremental();
    [CompilerGeneratedAttribute]
internal static void set_Incremental(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NoRecompute();
    [CompilerGeneratedAttribute]
internal static void set_NoRecompute(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SampleSize();
    [CompilerGeneratedAttribute]
internal static void set_SampleSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SamplingStyle();
    [CompilerGeneratedAttribute]
internal static void set_SamplingStyle(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_OnObject();
    [CompilerGeneratedAttribute]
internal static void set_OnObject(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExpressionDependencies();
    [CompilerGeneratedAttribute]
internal static void set_ExpressionDependencies(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.SymmetricKey : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Algorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CreationDisposition>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IdentityValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <KeySource>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ProviderKeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AsymmetricKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Certificates>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Passwords>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <SymmetricKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Provider>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Algorithm { get; internal set; }
    public static ModelPropertyClass CreationDisposition { get; internal set; }
    public static ModelPropertyClass IdentityValue { get; internal set; }
    public static ModelPropertyClass KeySource { get; internal set; }
    public static ModelPropertyClass ProviderKeyName { get; internal set; }
    public static ModelRelationshipClass AsymmetricKeys { get; internal set; }
    public static ModelRelationshipClass Certificates { get; internal set; }
    public static ModelRelationshipClass Passwords { get; internal set; }
    public static ModelRelationshipClass SymmetricKeys { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    public static ModelRelationshipClass Provider { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Algorithm();
    [CompilerGeneratedAttribute]
internal static void set_Algorithm(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CreationDisposition();
    [CompilerGeneratedAttribute]
internal static void set_CreationDisposition(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IdentityValue();
    [CompilerGeneratedAttribute]
internal static void set_IdentityValue(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_KeySource();
    [CompilerGeneratedAttribute]
internal static void set_KeySource(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ProviderKeyName();
    [CompilerGeneratedAttribute]
internal static void set_ProviderKeyName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AsymmetricKeys();
    [CompilerGeneratedAttribute]
internal static void set_AsymmetricKeys(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Certificates();
    [CompilerGeneratedAttribute]
internal static void set_Certificates(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Passwords();
    [CompilerGeneratedAttribute]
internal static void set_Passwords(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_SymmetricKeys();
    [CompilerGeneratedAttribute]
internal static void set_SymmetricKeys(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Provider();
    [CompilerGeneratedAttribute]
internal static void set_Provider(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.SymmetricKeyAlgorithm : Enum {
    public int value__;
    public static SymmetricKeyAlgorithm Unknown;
    public static SymmetricKeyAlgorithm Des;
    public static SymmetricKeyAlgorithm TripleDes;
    public static SymmetricKeyAlgorithm RC2;
    public static SymmetricKeyAlgorithm RC4;
    public static SymmetricKeyAlgorithm DesX;
    public static SymmetricKeyAlgorithm Aes128;
    public static SymmetricKeyAlgorithm Aes192;
    public static SymmetricKeyAlgorithm Aes256;
    public static SymmetricKeyAlgorithm RC4128;
}
public enum Microsoft.SqlServer.Dac.Model.SymmetricKeyCreationDisposition : Enum {
    public int value__;
    public static SymmetricKeyCreationDisposition Unknown;
    public static SymmetricKeyCreationDisposition CreateNew;
    public static SymmetricKeyCreationDisposition OpenExisting;
}
public static class Microsoft.SqlServer.Dac.Model.SymmetricKeyPassword : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Password>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Password { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Password();
    [CompilerGeneratedAttribute]
internal static void set_Password(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Synonym : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ForObjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ForObject>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ForObjectName { get; internal set; }
    public static ModelRelationshipClass ForObject { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ForObjectName();
    [CompilerGeneratedAttribute]
internal static void set_ForObjectName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ForObject();
    [CompilerGeneratedAttribute]
internal static void set_ForObject(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.Table : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiNullsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ChangeDataCaptureEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ChangeTrackingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileStreamNull>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LargeValueTypesOutOfRow>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QuotedIdentifierOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TableLockOnBulkLoad>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TrackColumnsUpdated>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <VardecimalStorageFormatEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MemoryOptimized>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DistributionPolicyType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RowCount>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DataSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IndexSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DataPages>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UsedPages>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Durability>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsAutoGeneratedHistoryTable>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsDroppedLedgerTable>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsEdge>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsNode>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsReplicated>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LedgerHistoryTableName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LedgerHistoryTableSchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LedgerType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LedgerViewName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LedgerViewOperationTypeColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LedgerViewOperationTypeDescColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LedgerViewSchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LedgerViewSequenceNumberColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LedgerViewTransactionIdColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LockEscalation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueryScript>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RemoteDataEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RetentionUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RetentionValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <TextInRowSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DistributionColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataCompressionOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataRetention>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DynamicObjects>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FilegroupForTextImage>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileStreamFilegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileStreamPartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionSpecification>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <QueryDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <TemporalSystemVersioningHistoryTable>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlCompressionOptions>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AnsiNullsOn { get; internal set; }
    public static ModelPropertyClass ChangeDataCaptureEnabled { get; internal set; }
    public static ModelPropertyClass ChangeTrackingEnabled { get; internal set; }
    public static ModelPropertyClass FileStreamNull { get; internal set; }
    public static ModelPropertyClass LargeValueTypesOutOfRow { get; internal set; }
    public static ModelPropertyClass QuotedIdentifierOn { get; internal set; }
    public static ModelPropertyClass TableLockOnBulkLoad { get; internal set; }
    public static ModelPropertyClass TrackColumnsUpdated { get; internal set; }
    public static ModelPropertyClass VardecimalStorageFormatEnabled { get; internal set; }
    public static ModelPropertyClass MemoryOptimized { get; internal set; }
    public static ModelPropertyClass DistributionPolicyType { get; internal set; }
    public static ModelPropertyClass RowCount { get; internal set; }
    public static ModelPropertyClass DataSize { get; internal set; }
    public static ModelPropertyClass IndexSize { get; internal set; }
    public static ModelPropertyClass DataPages { get; internal set; }
    public static ModelPropertyClass UsedPages { get; internal set; }
    public static ModelPropertyClass Durability { get; internal set; }
    public static ModelPropertyClass IsAutoGeneratedHistoryTable { get; internal set; }
    public static ModelPropertyClass IsDroppedLedgerTable { get; internal set; }
    public static ModelPropertyClass IsEdge { get; internal set; }
    public static ModelPropertyClass IsNode { get; internal set; }
    public static ModelPropertyClass IsReplicated { get; internal set; }
    public static ModelPropertyClass LedgerHistoryTableName { get; internal set; }
    public static ModelPropertyClass LedgerHistoryTableSchemaName { get; internal set; }
    public static ModelPropertyClass LedgerType { get; internal set; }
    public static ModelPropertyClass LedgerViewName { get; internal set; }
    public static ModelPropertyClass LedgerViewOperationTypeColumnName { get; internal set; }
    public static ModelPropertyClass LedgerViewOperationTypeDescColumnName { get; internal set; }
    public static ModelPropertyClass LedgerViewSchemaName { get; internal set; }
    public static ModelPropertyClass LedgerViewSequenceNumberColumnName { get; internal set; }
    public static ModelPropertyClass LedgerViewTransactionIdColumnName { get; internal set; }
    public static ModelPropertyClass LockEscalation { get; internal set; }
    public static ModelPropertyClass QueryScript { get; internal set; }
    public static ModelPropertyClass RemoteDataEnabled { get; internal set; }
    public static ModelPropertyClass RetentionUnit { get; internal set; }
    public static ModelPropertyClass RetentionValue { get; internal set; }
    public static ModelPropertyClass TextInRowSize { get; internal set; }
    public static ModelRelationshipClass DistributionColumn { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass DataCompressionOptions { get; internal set; }
    public static ModelRelationshipClass DataRetention { get; internal set; }
    public static ModelRelationshipClass DynamicObjects { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    public static ModelRelationshipClass FilegroupForTextImage { get; internal set; }
    public static ModelRelationshipClass FileStreamFilegroup { get; internal set; }
    public static ModelRelationshipClass FileStreamPartitionScheme { get; internal set; }
    public static ModelRelationshipClass PartitionColumn { get; internal set; }
    public static ModelRelationshipClass PartitionScheme { get; internal set; }
    public static ModelRelationshipClass PartitionSpecification { get; internal set; }
    public static ModelRelationshipClass QueryDependencies { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    public static ModelRelationshipClass TemporalSystemVersioningHistoryTable { get; internal set; }
    public static ModelRelationshipClass XmlCompressionOptions { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiNullsOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiNullsOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ChangeDataCaptureEnabled();
    [CompilerGeneratedAttribute]
internal static void set_ChangeDataCaptureEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ChangeTrackingEnabled();
    [CompilerGeneratedAttribute]
internal static void set_ChangeTrackingEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileStreamNull();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamNull(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LargeValueTypesOutOfRow();
    [CompilerGeneratedAttribute]
internal static void set_LargeValueTypesOutOfRow(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QuotedIdentifierOn();
    [CompilerGeneratedAttribute]
internal static void set_QuotedIdentifierOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TableLockOnBulkLoad();
    [CompilerGeneratedAttribute]
internal static void set_TableLockOnBulkLoad(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TrackColumnsUpdated();
    [CompilerGeneratedAttribute]
internal static void set_TrackColumnsUpdated(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_VardecimalStorageFormatEnabled();
    [CompilerGeneratedAttribute]
internal static void set_VardecimalStorageFormatEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MemoryOptimized();
    [CompilerGeneratedAttribute]
internal static void set_MemoryOptimized(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DistributionPolicyType();
    [CompilerGeneratedAttribute]
internal static void set_DistributionPolicyType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RowCount();
    [CompilerGeneratedAttribute]
internal static void set_RowCount(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DataSize();
    [CompilerGeneratedAttribute]
internal static void set_DataSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IndexSize();
    [CompilerGeneratedAttribute]
internal static void set_IndexSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DataPages();
    [CompilerGeneratedAttribute]
internal static void set_DataPages(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UsedPages();
    [CompilerGeneratedAttribute]
internal static void set_UsedPages(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Durability();
    [CompilerGeneratedAttribute]
internal static void set_Durability(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsAutoGeneratedHistoryTable();
    [CompilerGeneratedAttribute]
internal static void set_IsAutoGeneratedHistoryTable(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsDroppedLedgerTable();
    [CompilerGeneratedAttribute]
internal static void set_IsDroppedLedgerTable(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsEdge();
    [CompilerGeneratedAttribute]
internal static void set_IsEdge(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsNode();
    [CompilerGeneratedAttribute]
internal static void set_IsNode(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsReplicated();
    [CompilerGeneratedAttribute]
internal static void set_IsReplicated(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LedgerHistoryTableName();
    [CompilerGeneratedAttribute]
internal static void set_LedgerHistoryTableName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LedgerHistoryTableSchemaName();
    [CompilerGeneratedAttribute]
internal static void set_LedgerHistoryTableSchemaName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LedgerType();
    [CompilerGeneratedAttribute]
internal static void set_LedgerType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LedgerViewName();
    [CompilerGeneratedAttribute]
internal static void set_LedgerViewName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LedgerViewOperationTypeColumnName();
    [CompilerGeneratedAttribute]
internal static void set_LedgerViewOperationTypeColumnName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LedgerViewOperationTypeDescColumnName();
    [CompilerGeneratedAttribute]
internal static void set_LedgerViewOperationTypeDescColumnName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LedgerViewSchemaName();
    [CompilerGeneratedAttribute]
internal static void set_LedgerViewSchemaName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LedgerViewSequenceNumberColumnName();
    [CompilerGeneratedAttribute]
internal static void set_LedgerViewSequenceNumberColumnName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LedgerViewTransactionIdColumnName();
    [CompilerGeneratedAttribute]
internal static void set_LedgerViewTransactionIdColumnName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LockEscalation();
    [CompilerGeneratedAttribute]
internal static void set_LockEscalation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueryScript();
    [CompilerGeneratedAttribute]
internal static void set_QueryScript(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RemoteDataEnabled();
    [CompilerGeneratedAttribute]
internal static void set_RemoteDataEnabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RetentionUnit();
    [CompilerGeneratedAttribute]
internal static void set_RetentionUnit(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RetentionValue();
    [CompilerGeneratedAttribute]
internal static void set_RetentionValue(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_TextInRowSize();
    [CompilerGeneratedAttribute]
internal static void set_TextInRowSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DistributionColumn();
    [CompilerGeneratedAttribute]
internal static void set_DistributionColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_DataCompressionOptions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataRetention();
    [CompilerGeneratedAttribute]
internal static void set_DataRetention(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DynamicObjects();
    [CompilerGeneratedAttribute]
internal static void set_DynamicObjects(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FilegroupForTextImage();
    [CompilerGeneratedAttribute]
internal static void set_FilegroupForTextImage(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileStreamFilegroup();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamFilegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileStreamPartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamPartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionColumn();
    [CompilerGeneratedAttribute]
internal static void set_PartitionColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_PartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionSpecification();
    [CompilerGeneratedAttribute]
internal static void set_PartitionSpecification(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_QueryDependencies();
    [CompilerGeneratedAttribute]
internal static void set_QueryDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_TemporalSystemVersioningHistoryTable();
    [CompilerGeneratedAttribute]
internal static void set_TemporalSystemVersioningHistoryTable(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_XmlCompressionOptions(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.TableDistributionPolicyType : Enum {
    public int value__;
    public static TableDistributionPolicyType None;
    public static TableDistributionPolicyType Replicate;
    public static TableDistributionPolicyType RoundRobin;
    public static TableDistributionPolicyType Hash;
}
public static class Microsoft.SqlServer.Dac.Model.TableType : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MemoryOptimized>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Constraints>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Indexes>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass MemoryOptimized { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass Constraints { get; internal set; }
    public static ModelRelationshipClass Indexes { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MemoryOptimized();
    [CompilerGeneratedAttribute]
internal static void set_MemoryOptimized(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Constraints();
    [CompilerGeneratedAttribute]
internal static void set_Constraints(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Indexes();
    [CompilerGeneratedAttribute]
internal static void set_Indexes(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.TableTypeCheckConstraint : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExpressionDependencies>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Expression { get; internal set; }
    public static ModelRelationshipClass ExpressionDependencies { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Expression();
    [CompilerGeneratedAttribute]
internal static void set_Expression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExpressionDependencies();
    [CompilerGeneratedAttribute]
internal static void set_ExpressionDependencies(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.TableTypeColumn : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelMetadataClass <TableTypeColumnType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Collation>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IdentityIncrement>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IdentitySeed>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Nullable>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsRowGuidCol>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Persisted>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <PersistedNullable>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Scale>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Precision>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Length>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsMax>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <XmlStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExpressionDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlSchemaCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataType>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelMetadataClass TableTypeColumnType { get; internal set; }
    public static ModelPropertyClass Collation { get; internal set; }
    public static ModelPropertyClass IdentityIncrement { get; internal set; }
    public static ModelPropertyClass IdentitySeed { get; internal set; }
    public static ModelPropertyClass IsIdentity { get; internal set; }
    public static ModelPropertyClass Nullable { get; internal set; }
    public static ModelPropertyClass IsRowGuidCol { get; internal set; }
    public static ModelPropertyClass Expression { get; internal set; }
    public static ModelPropertyClass Persisted { get; internal set; }
    public static ModelPropertyClass PersistedNullable { get; internal set; }
    public static ModelPropertyClass Scale { get; internal set; }
    public static ModelPropertyClass Precision { get; internal set; }
    public static ModelPropertyClass Length { get; internal set; }
    public static ModelPropertyClass IsMax { get; internal set; }
    public static ModelPropertyClass XmlStyle { get; internal set; }
    public static ModelRelationshipClass ExpressionDependencies { get; internal set; }
    public static ModelRelationshipClass XmlSchemaCollection { get; internal set; }
    public static ModelRelationshipClass DataType { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelMetadataClass get_TableTypeColumnType();
    [CompilerGeneratedAttribute]
internal static void set_TableTypeColumnType(ModelMetadataClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Collation();
    [CompilerGeneratedAttribute]
internal static void set_Collation(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IdentityIncrement();
    [CompilerGeneratedAttribute]
internal static void set_IdentityIncrement(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IdentitySeed();
    [CompilerGeneratedAttribute]
internal static void set_IdentitySeed(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsIdentity();
    [CompilerGeneratedAttribute]
internal static void set_IsIdentity(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Nullable();
    [CompilerGeneratedAttribute]
internal static void set_Nullable(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsRowGuidCol();
    [CompilerGeneratedAttribute]
internal static void set_IsRowGuidCol(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Expression();
    [CompilerGeneratedAttribute]
internal static void set_Expression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Persisted();
    [CompilerGeneratedAttribute]
internal static void set_Persisted(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_PersistedNullable();
    [CompilerGeneratedAttribute]
internal static void set_PersistedNullable(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Scale();
    [CompilerGeneratedAttribute]
internal static void set_Scale(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Precision();
    [CompilerGeneratedAttribute]
internal static void set_Precision(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Length();
    [CompilerGeneratedAttribute]
internal static void set_Length(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsMax();
    [CompilerGeneratedAttribute]
internal static void set_IsMax(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_XmlStyle();
    [CompilerGeneratedAttribute]
internal static void set_XmlStyle(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExpressionDependencies();
    [CompilerGeneratedAttribute]
internal static void set_ExpressionDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlSchemaCollection();
    [CompilerGeneratedAttribute]
internal static void set_XmlSchemaCollection(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataType();
    [CompilerGeneratedAttribute]
internal static void set_DataType(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.TableTypeColumnType : Enum {
    public int value__;
    public static TableTypeColumnType Column;
    public static TableTypeColumnType ComputedColumn;
}
public static class Microsoft.SqlServer.Dac.Model.TableTypeDefaultConstraint : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <TargetColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExpressionDependencies>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Expression { get; internal set; }
    public static ModelRelationshipClass TargetColumn { get; internal set; }
    public static ModelRelationshipClass ExpressionDependencies { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Expression();
    [CompilerGeneratedAttribute]
internal static void set_Expression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_TargetColumn();
    [CompilerGeneratedAttribute]
internal static void set_TargetColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExpressionDependencies();
    [CompilerGeneratedAttribute]
internal static void set_ExpressionDependencies(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.TableTypeIndex : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BucketCount>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsUnique>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Hash { get; internal set; }
    public static ModelPropertyClass BucketCount { get; internal set; }
    public static ModelPropertyClass IsDisabled { get; internal set; }
    public static ModelPropertyClass IsUnique { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Hash();
    [CompilerGeneratedAttribute]
internal static void set_Hash(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BucketCount();
    [CompilerGeneratedAttribute]
internal static void set_BucketCount(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsDisabled();
    [CompilerGeneratedAttribute]
internal static void set_IsDisabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsUnique();
    [CompilerGeneratedAttribute]
internal static void set_IsUnique(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.TableTypePrimaryKeyConstraint : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IgnoreDuplicateKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Clustered>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BucketCount>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass IgnoreDuplicateKey { get; internal set; }
    public static ModelPropertyClass Clustered { get; internal set; }
    public static ModelPropertyClass Hash { get; internal set; }
    public static ModelPropertyClass BucketCount { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IgnoreDuplicateKey();
    [CompilerGeneratedAttribute]
internal static void set_IgnoreDuplicateKey(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Clustered();
    [CompilerGeneratedAttribute]
internal static void set_Clustered(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Hash();
    [CompilerGeneratedAttribute]
internal static void set_Hash(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BucketCount();
    [CompilerGeneratedAttribute]
internal static void set_BucketCount(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.TableTypeUniqueConstraint : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IgnoreDuplicateKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Clustered>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BucketCount>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass IgnoreDuplicateKey { get; internal set; }
    public static ModelPropertyClass Clustered { get; internal set; }
    public static ModelPropertyClass Hash { get; internal set; }
    public static ModelPropertyClass BucketCount { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IgnoreDuplicateKey();
    [CompilerGeneratedAttribute]
internal static void set_IgnoreDuplicateKey(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Clustered();
    [CompilerGeneratedAttribute]
internal static void set_Clustered(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Hash();
    [CompilerGeneratedAttribute]
internal static void set_Hash(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BucketCount();
    [CompilerGeneratedAttribute]
internal static void set_BucketCount(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.TableValuedFunction : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelMetadataClass <FunctionType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ReturnsNullOnNullInput>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiNullsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CalledOnNullInput>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsCaller>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QuotedIdentifierOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithSchemaBinding>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ExecuteAsSelf>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ReturnTableVariableName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DataAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FillRowMethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Deterministic>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Precise>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SystemDataAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsNativeCompiled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsReplicated>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <TableOption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ReturnType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BodyDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Login>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <User>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelMetadataClass FunctionType { get; internal set; }
    public static ModelPropertyClass ReturnsNullOnNullInput { get; internal set; }
    public static ModelPropertyClass AnsiNullsOn { get; internal set; }
    public static ModelPropertyClass CalledOnNullInput { get; internal set; }
    public static ModelPropertyClass ExecuteAsCaller { get; internal set; }
    public static ModelPropertyClass WithEncryption { get; internal set; }
    public static ModelPropertyClass ExecuteAsOwner { get; internal set; }
    public static ModelPropertyClass QuotedIdentifierOn { get; internal set; }
    public static ModelPropertyClass WithSchemaBinding { get; internal set; }
    public static ModelPropertyClass ExecuteAsSelf { get; internal set; }
    public static ModelPropertyClass ReturnTableVariableName { get; internal set; }
    public static ModelPropertyClass ClassName { get; internal set; }
    public static ModelPropertyClass DataAccess { get; internal set; }
    public static ModelPropertyClass FillRowMethodName { get; internal set; }
    public static ModelPropertyClass Deterministic { get; internal set; }
    public static ModelPropertyClass Precise { get; internal set; }
    public static ModelPropertyClass MethodName { get; internal set; }
    public static ModelPropertyClass SystemDataAccess { get; internal set; }
    public static ModelPropertyClass IsNativeCompiled { get; internal set; }
    public static ModelPropertyClass IsReplicated { get; internal set; }
    public static ModelRelationshipClass Assembly { get; internal set; }
    public static ModelRelationshipClass TableOption { get; internal set; }
    public static ModelRelationshipClass ReturnType { get; internal set; }
    public static ModelRelationshipClass BodyDependencies { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass Login { get; internal set; }
    public static ModelRelationshipClass Parameters { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    public static ModelRelationshipClass User { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelMetadataClass get_FunctionType();
    [CompilerGeneratedAttribute]
internal static void set_FunctionType(ModelMetadataClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ReturnsNullOnNullInput();
    [CompilerGeneratedAttribute]
internal static void set_ReturnsNullOnNullInput(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiNullsOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiNullsOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CalledOnNullInput();
    [CompilerGeneratedAttribute]
internal static void set_CalledOnNullInput(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsCaller();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsCaller(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithEncryption();
    [CompilerGeneratedAttribute]
internal static void set_WithEncryption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsOwner();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsOwner(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QuotedIdentifierOn();
    [CompilerGeneratedAttribute]
internal static void set_QuotedIdentifierOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithSchemaBinding();
    [CompilerGeneratedAttribute]
internal static void set_WithSchemaBinding(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ExecuteAsSelf();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteAsSelf(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ReturnTableVariableName();
    [CompilerGeneratedAttribute]
internal static void set_ReturnTableVariableName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ClassName();
    [CompilerGeneratedAttribute]
internal static void set_ClassName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DataAccess();
    [CompilerGeneratedAttribute]
internal static void set_DataAccess(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FillRowMethodName();
    [CompilerGeneratedAttribute]
internal static void set_FillRowMethodName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Deterministic();
    [CompilerGeneratedAttribute]
internal static void set_Deterministic(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Precise();
    [CompilerGeneratedAttribute]
internal static void set_Precise(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MethodName();
    [CompilerGeneratedAttribute]
internal static void set_MethodName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SystemDataAccess();
    [CompilerGeneratedAttribute]
internal static void set_SystemDataAccess(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsNativeCompiled();
    [CompilerGeneratedAttribute]
internal static void set_IsNativeCompiled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsReplicated();
    [CompilerGeneratedAttribute]
internal static void set_IsReplicated(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Assembly();
    [CompilerGeneratedAttribute]
internal static void set_Assembly(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_TableOption();
    [CompilerGeneratedAttribute]
internal static void set_TableOption(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ReturnType();
    [CompilerGeneratedAttribute]
internal static void set_ReturnType(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BodyDependencies();
    [CompilerGeneratedAttribute]
internal static void set_BodyDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Login();
    [CompilerGeneratedAttribute]
internal static void set_Login(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Parameters();
    [CompilerGeneratedAttribute]
internal static void set_Parameters(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_User();
    [CompilerGeneratedAttribute]
internal static void set_User(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.TcpProtocolSpecifier : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ListeningOnAllIPs>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ListenerIPv4>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ListenerIPv6>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ListenerPort>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ListeningOnAllIPs { get; internal set; }
    public static ModelPropertyClass ListenerIPv4 { get; internal set; }
    public static ModelPropertyClass ListenerIPv6 { get; internal set; }
    public static ModelPropertyClass ListenerPort { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ListeningOnAllIPs();
    [CompilerGeneratedAttribute]
internal static void set_ListeningOnAllIPs(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ListenerIPv4();
    [CompilerGeneratedAttribute]
internal static void set_ListenerIPv4(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ListenerIPv6();
    [CompilerGeneratedAttribute]
internal static void set_ListenerIPv6(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ListenerPort();
    [CompilerGeneratedAttribute]
internal static void set_ListenerPort(ModelPropertyClass value);
}
public enum Microsoft.SqlServer.Dac.Model.Tessellation : Enum {
    public int value__;
    public static Tessellation None;
    public static Tessellation Geometry;
    public static Tessellation Geography;
    public static Tessellation AutoGeometry;
    public static Tessellation AutoGeography;
}
public enum Microsoft.SqlServer.Dac.Model.TimeUnit : Enum {
    public int value__;
    public static TimeUnit Unknown;
    public static TimeUnit Seconds;
    public static TimeUnit Days;
    public static TimeUnit Hours;
    public static TimeUnit Minutes;
}
public enum Microsoft.SqlServer.Dac.Model.TriggerType : Enum {
    public int value__;
    public static TriggerType Unknown;
    public static TriggerType For;
    public static TriggerType After;
    public static TriggerType InsteadOf;
}
public class Microsoft.SqlServer.Dac.Model.TSqlModel : object {
    private TSqlObjectService _service;
    private IDisposable _disposable;
    public SqlServerVersion Version { get; }
    public int EngineVersion { get; }
    public bool IsScriptBacked { get; }
    public DisplayServices DisplayServices { get; }
    public ModelCollationComparer CollationComparer { get; }
    private TSqlModel(string fileName, ModelLoadOptions options, CancellationToken cancelToken);
    public TSqlModel(string fileName);
    public TSqlModel(string fileName, DacSchemaModelStorageType modelStorageType);
    public TSqlModel(string fileName, DacSchemaModelStorageType modelStorageType, CancellationToken cancellationToken);
    public TSqlModel(SqlServerVersion modelTargetVersion, TSqlModelOptions modelCreationOptions);
    internal TSqlModel(TSqlObjectService service);
    internal TSqlModel(DataSchemaModel model);
    public static TSqlModel LoadFromDacpac(Stream dacpacStream, ModelLoadOptions options);
    public static TSqlModel LoadFromDacpac(Stream dacpacStream, ModelLoadOptions options, CancellationToken cancellationToken);
    public static TSqlModel LoadFromDacpac(string fileName, ModelLoadOptions options, CancellationToken cancellationToken);
    public static TSqlModel LoadFromDacpac(string fileName, ModelLoadOptions options);
    public static TSqlModel LoadFromDatabase(string connectionString, ModelExtractOptions options, Nullable`1<CancellationToken> cancellationToken);
    public static TSqlModel LoadFromDatabaseWithAuthProvider(string connectionString, IUniversalAuthProvider authProvider, ModelExtractOptions options, Nullable`1<CancellationToken> cancellationToken);
    public static TSqlModel LoadFromDatabase(string connectionString, SecureString password, ModelExtractOptions options, Nullable`1<CancellationToken> cancellationToken);
    private static TSqlModel LoadFromDatabase(string connectionString, SecureString password, ModelExtractOptions options, IUniversalAuthProvider authProvider, Nullable`1<CancellationToken> cancellationToken);
    internal void UpdateModel(DacPackage dacPackage, PackageMetadata packageMetadata);
    internal TSqlObjectService GetObjectService();
    public TSqlObject GetObject(ModelTypeClass objectType, ObjectIdentifier id, DacQueryScopes queryScopes);
    public IEnumerable`1<TSqlObject> GetObjects(DacQueryScopes queryScopes, ModelTypeClass[] typeFilters);
    public IEnumerable`1<TSqlObject> GetObjects(ModelTypeClass objectType, ObjectIdentifier id, DacQueryScopes queryScopes);
    public IEnumerable`1<TSqlObject> GetObjects(string sourceName, ModelTypeClass[] typeFilters);
    public IEnumerable`1<DacModelError> GetModelErrors();
    public void AddObjects(string inputScript);
    public void AddObjects(string inputScript, TSqlObjectOptions options);
    public void AddObjects(TSqlScript inputScript);
    public void AddObjects(TSqlScript inputScript, TSqlObjectOptions options);
    public void AddOrUpdateObjects(string inputScript, string sourceName, TSqlObjectOptions options);
    public void AddOrUpdateObjects(TSqlScript inputScript, string sourceName, TSqlObjectOptions options);
    public void DeleteObjects(string sourceName);
    public TSqlObject ConvertToScriptedObject(TSqlObject tSqlObject, string sourceName);
    internal void BuildPackage(string packageFilePath, PackageMetadata packageMetadata, PackageOptions packageOptions);
    internal void BuildPackage(Stream packageFileStream, PackageMetadata packageMetadata, PackageOptions packageOptions);
    public IList`1<DacModelMessage> Validate();
    public IEnumerable`1<DacModelError> CheckVersionCompatibility(SqlServerVersion targetVersion, CancellationToken cancelToken);
    public SqlServerVersion get_Version();
    public int get_EngineVersion();
    public bool get_IsScriptBacked();
    public TSqlModelOptions CopyModelOptions();
    public DisplayServices get_DisplayServices();
    public ModelCollationComparer get_CollationComparer();
    private void VerifyNotDisposed();
    private bool IsDisposed();
    public sealed virtual void Dispose();
}
public class Microsoft.SqlServer.Dac.Model.TSqlModelOptions : object {
    [CompilerGeneratedAttribute]
private string <Collation>k__BackingField;
    [CompilerGeneratedAttribute]
private DacSchemaModelStorageType <StorageType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowSnapshotIsolation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TransactionIsolationReadCommittedSnapshot>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <MemoryOptimizedElevateToSnapshot>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AnsiNullDefaultOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AnsiNullsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AnsiPaddingOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AnsiWarningsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ArithAbortOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoClose>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoCreateStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoCreateStatisticsIncremental>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoShrink>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoUpdateStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoUpdateStatisticsAsync>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CatalogCollation> <CatalogCollation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ChangeTrackingAutoCleanup>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ChangeTrackingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ChangeTrackingRetentionPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeUnit> <ChangeTrackingRetentionUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CompatibilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ConcatNullYieldsNull>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Containment> <Containment>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CursorCloseOnCommit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CursorDefaultGlobalScope>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DatabaseStateOffline>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DateCorrelationOptimizationOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultFullTextLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DBChainingOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DbScopedConfigLegacyCardinalityEstimation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DbScopedConfigLegacyCardinalityEstimationSecondary>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DbScopedConfigMaxDOP>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DbScopedConfigMaxDOPSecondary>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DbScopedConfigParameterSniffing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DbScopedConfigParameterSniffingSecondary>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DbScopedConfigQueryOptimizerHotfixes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DbScopedConfigQueryOptimizerHotfixesSecondary>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DbScopedConfigDWCompatibilityLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileStreamDirectoryName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FullTextEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HonorBrokerPriority>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <NestedTriggersOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NonTransactedFileStreamAccess> <NonTransactedFileStreamAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <NumericRoundAbortOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PageVerifyMode> <PageVerifyMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ParameterizationOption> <ParameterizationOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<QueryStoreCaptureMode> <QueryStoreCaptureMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<QueryStoreDesiredState> <QueryStoreDesiredState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <QueryStoreFlushInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <QueryStoreIntervalLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <QueryStoreMaxStorageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <QueryStoreMaxPlansPerQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <QueryStoreStaleQueryThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <QuotedIdentifierOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RecoveryMode> <RecoveryMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DelayedDurabilityMode> <DelayedDurabilityMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RecursiveTriggersOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ServiceBrokerOption> <ServiceBrokerOption>k__BackingField;
    [CompilerGeneratedAttribute]
private EngineVersion <EngineVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SupplementalLoggingOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TargetRecoveryTimePeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeUnit> <TargetRecoveryTimeUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TornPageProtectionOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TransformNoiseWords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Trustworthy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <TwoDigitYearCutoff>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <VardecimalStorageFormatOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<UserAccessOption> <UserAccessOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <WithEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DataRetentionEnabled>k__BackingField;
    public string Collation { get; public set; }
    public DacSchemaModelStorageType StorageType { get; public set; }
    public Nullable`1<bool> AllowSnapshotIsolation { get; public set; }
    public Nullable`1<bool> TransactionIsolationReadCommittedSnapshot { get; public set; }
    public Nullable`1<bool> MemoryOptimizedElevateToSnapshot { get; public set; }
    public Nullable`1<bool> AnsiNullDefaultOn { get; public set; }
    public Nullable`1<bool> AnsiNullsOn { get; public set; }
    public Nullable`1<bool> AnsiPaddingOn { get; public set; }
    public Nullable`1<bool> AnsiWarningsOn { get; public set; }
    public Nullable`1<bool> ArithAbortOn { get; public set; }
    public Nullable`1<bool> AutoClose { get; public set; }
    public Nullable`1<bool> AutoCreateStatistics { get; public set; }
    public Nullable`1<bool> AutoCreateStatisticsIncremental { get; public set; }
    public Nullable`1<bool> AutoShrink { get; public set; }
    public Nullable`1<bool> AutoUpdateStatistics { get; public set; }
    public Nullable`1<bool> AutoUpdateStatisticsAsync { get; public set; }
    public Nullable`1<CatalogCollation> CatalogCollation { get; public set; }
    public Nullable`1<bool> ChangeTrackingAutoCleanup { get; public set; }
    public Nullable`1<bool> ChangeTrackingEnabled { get; public set; }
    public Nullable`1<int> ChangeTrackingRetentionPeriod { get; public set; }
    public Nullable`1<TimeUnit> ChangeTrackingRetentionUnit { get; public set; }
    public Nullable`1<int> CompatibilityLevel { get; public set; }
    public Nullable`1<bool> ConcatNullYieldsNull { get; public set; }
    public Nullable`1<Containment> Containment { get; public set; }
    public Nullable`1<bool> CursorCloseOnCommit { get; public set; }
    public Nullable`1<bool> CursorDefaultGlobalScope { get; public set; }
    public Nullable`1<bool> DatabaseStateOffline { get; public set; }
    public Nullable`1<bool> DateCorrelationOptimizationOn { get; public set; }
    public string DefaultFullTextLanguage { get; public set; }
    public string DefaultLanguage { get; public set; }
    public Nullable`1<bool> DBChainingOn { get; public set; }
    public Nullable`1<bool> DbScopedConfigLegacyCardinalityEstimation { get; public set; }
    public Nullable`1<bool> DbScopedConfigLegacyCardinalityEstimationSecondary { get; public set; }
    public Nullable`1<int> DbScopedConfigMaxDOP { get; public set; }
    public Nullable`1<int> DbScopedConfigMaxDOPSecondary { get; public set; }
    public Nullable`1<bool> DbScopedConfigParameterSniffing { get; public set; }
    public Nullable`1<bool> DbScopedConfigParameterSniffingSecondary { get; public set; }
    public Nullable`1<bool> DbScopedConfigQueryOptimizerHotfixes { get; public set; }
    public Nullable`1<bool> DbScopedConfigQueryOptimizerHotfixesSecondary { get; public set; }
    public Nullable`1<int> DbScopedConfigDWCompatibilityLevel { get; public set; }
    public string FileStreamDirectoryName { get; public set; }
    public Nullable`1<bool> FullTextEnabled { get; public set; }
    public Nullable`1<bool> HonorBrokerPriority { get; public set; }
    public Nullable`1<bool> NestedTriggersOn { get; public set; }
    public Nullable`1<NonTransactedFileStreamAccess> NonTransactedFileStreamAccess { get; public set; }
    public Nullable`1<bool> NumericRoundAbortOn { get; public set; }
    public Nullable`1<PageVerifyMode> PageVerifyMode { get; public set; }
    public Nullable`1<ParameterizationOption> ParameterizationOption { get; public set; }
    public Nullable`1<QueryStoreCaptureMode> QueryStoreCaptureMode { get; public set; }
    public Nullable`1<QueryStoreDesiredState> QueryStoreDesiredState { get; public set; }
    public Nullable`1<int> QueryStoreFlushInterval { get; public set; }
    public Nullable`1<int> QueryStoreIntervalLength { get; public set; }
    public Nullable`1<int> QueryStoreMaxStorageSize { get; public set; }
    public Nullable`1<int> QueryStoreMaxPlansPerQuery { get; public set; }
    public Nullable`1<int> QueryStoreStaleQueryThreshold { get; public set; }
    public Nullable`1<bool> QuotedIdentifierOn { get; public set; }
    public Nullable`1<bool> ReadOnly { get; public set; }
    public Nullable`1<RecoveryMode> RecoveryMode { get; public set; }
    public Nullable`1<DelayedDurabilityMode> DelayedDurabilityMode { get; public set; }
    public Nullable`1<bool> RecursiveTriggersOn { get; public set; }
    public Nullable`1<ServiceBrokerOption> ServiceBrokerOption { get; public set; }
    public EngineVersion EngineVersion { get; public set; }
    public Nullable`1<bool> SupplementalLoggingOn { get; public set; }
    public Nullable`1<int> TargetRecoveryTimePeriod { get; public set; }
    public Nullable`1<TimeUnit> TargetRecoveryTimeUnit { get; public set; }
    public Nullable`1<bool> TornPageProtectionOn { get; public set; }
    public Nullable`1<bool> TransformNoiseWords { get; public set; }
    public Nullable`1<bool> Trustworthy { get; public set; }
    public Nullable`1<short> TwoDigitYearCutoff { get; public set; }
    public Nullable`1<bool> VardecimalStorageFormatOn { get; public set; }
    public Nullable`1<UserAccessOption> UserAccessOption { get; public set; }
    public Nullable`1<bool> WithEncryption { get; public set; }
    public Nullable`1<bool> DataRetentionEnabled { get; public set; }
    internal TSqlModelOptions(TSqlModelOptions options);
    [CompilerGeneratedAttribute]
public string get_Collation();
    [CompilerGeneratedAttribute]
public void set_Collation(string value);
    [CompilerGeneratedAttribute]
public DacSchemaModelStorageType get_StorageType();
    [CompilerGeneratedAttribute]
public void set_StorageType(DacSchemaModelStorageType value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowSnapshotIsolation();
    [CompilerGeneratedAttribute]
public void set_AllowSnapshotIsolation(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_TransactionIsolationReadCommittedSnapshot();
    [CompilerGeneratedAttribute]
public void set_TransactionIsolationReadCommittedSnapshot(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_MemoryOptimizedElevateToSnapshot();
    [CompilerGeneratedAttribute]
public void set_MemoryOptimizedElevateToSnapshot(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AnsiNullDefaultOn();
    [CompilerGeneratedAttribute]
public void set_AnsiNullDefaultOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AnsiNullsOn();
    [CompilerGeneratedAttribute]
public void set_AnsiNullsOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AnsiPaddingOn();
    [CompilerGeneratedAttribute]
public void set_AnsiPaddingOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AnsiWarningsOn();
    [CompilerGeneratedAttribute]
public void set_AnsiWarningsOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ArithAbortOn();
    [CompilerGeneratedAttribute]
public void set_ArithAbortOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AutoClose();
    [CompilerGeneratedAttribute]
public void set_AutoClose(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AutoCreateStatistics();
    [CompilerGeneratedAttribute]
public void set_AutoCreateStatistics(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AutoCreateStatisticsIncremental();
    [CompilerGeneratedAttribute]
public void set_AutoCreateStatisticsIncremental(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AutoShrink();
    [CompilerGeneratedAttribute]
public void set_AutoShrink(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AutoUpdateStatistics();
    [CompilerGeneratedAttribute]
public void set_AutoUpdateStatistics(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AutoUpdateStatisticsAsync();
    [CompilerGeneratedAttribute]
public void set_AutoUpdateStatisticsAsync(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<CatalogCollation> get_CatalogCollation();
    [CompilerGeneratedAttribute]
public void set_CatalogCollation(Nullable`1<CatalogCollation> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ChangeTrackingAutoCleanup();
    [CompilerGeneratedAttribute]
public void set_ChangeTrackingAutoCleanup(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ChangeTrackingEnabled();
    [CompilerGeneratedAttribute]
public void set_ChangeTrackingEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ChangeTrackingRetentionPeriod();
    [CompilerGeneratedAttribute]
public void set_ChangeTrackingRetentionPeriod(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeUnit> get_ChangeTrackingRetentionUnit();
    [CompilerGeneratedAttribute]
public void set_ChangeTrackingRetentionUnit(Nullable`1<TimeUnit> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CompatibilityLevel();
    [CompilerGeneratedAttribute]
public void set_CompatibilityLevel(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ConcatNullYieldsNull();
    [CompilerGeneratedAttribute]
public void set_ConcatNullYieldsNull(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Containment> get_Containment();
    [CompilerGeneratedAttribute]
public void set_Containment(Nullable`1<Containment> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CursorCloseOnCommit();
    [CompilerGeneratedAttribute]
public void set_CursorCloseOnCommit(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CursorDefaultGlobalScope();
    [CompilerGeneratedAttribute]
public void set_CursorDefaultGlobalScope(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DatabaseStateOffline();
    [CompilerGeneratedAttribute]
public void set_DatabaseStateOffline(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DateCorrelationOptimizationOn();
    [CompilerGeneratedAttribute]
public void set_DateCorrelationOptimizationOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_DefaultFullTextLanguage();
    [CompilerGeneratedAttribute]
public void set_DefaultFullTextLanguage(string value);
    [CompilerGeneratedAttribute]
public string get_DefaultLanguage();
    [CompilerGeneratedAttribute]
public void set_DefaultLanguage(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DBChainingOn();
    [CompilerGeneratedAttribute]
public void set_DBChainingOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DbScopedConfigLegacyCardinalityEstimation();
    [CompilerGeneratedAttribute]
public void set_DbScopedConfigLegacyCardinalityEstimation(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DbScopedConfigLegacyCardinalityEstimationSecondary();
    [CompilerGeneratedAttribute]
public void set_DbScopedConfigLegacyCardinalityEstimationSecondary(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DbScopedConfigMaxDOP();
    [CompilerGeneratedAttribute]
public void set_DbScopedConfigMaxDOP(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DbScopedConfigMaxDOPSecondary();
    [CompilerGeneratedAttribute]
public void set_DbScopedConfigMaxDOPSecondary(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DbScopedConfigParameterSniffing();
    [CompilerGeneratedAttribute]
public void set_DbScopedConfigParameterSniffing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DbScopedConfigParameterSniffingSecondary();
    [CompilerGeneratedAttribute]
public void set_DbScopedConfigParameterSniffingSecondary(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DbScopedConfigQueryOptimizerHotfixes();
    [CompilerGeneratedAttribute]
public void set_DbScopedConfigQueryOptimizerHotfixes(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DbScopedConfigQueryOptimizerHotfixesSecondary();
    [CompilerGeneratedAttribute]
public void set_DbScopedConfigQueryOptimizerHotfixesSecondary(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DbScopedConfigDWCompatibilityLevel();
    [CompilerGeneratedAttribute]
public void set_DbScopedConfigDWCompatibilityLevel(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_FileStreamDirectoryName();
    [CompilerGeneratedAttribute]
public void set_FileStreamDirectoryName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_FullTextEnabled();
    [CompilerGeneratedAttribute]
public void set_FullTextEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_HonorBrokerPriority();
    [CompilerGeneratedAttribute]
public void set_HonorBrokerPriority(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_NestedTriggersOn();
    [CompilerGeneratedAttribute]
public void set_NestedTriggersOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<NonTransactedFileStreamAccess> get_NonTransactedFileStreamAccess();
    [CompilerGeneratedAttribute]
public void set_NonTransactedFileStreamAccess(Nullable`1<NonTransactedFileStreamAccess> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_NumericRoundAbortOn();
    [CompilerGeneratedAttribute]
public void set_NumericRoundAbortOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<PageVerifyMode> get_PageVerifyMode();
    [CompilerGeneratedAttribute]
public void set_PageVerifyMode(Nullable`1<PageVerifyMode> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ParameterizationOption> get_ParameterizationOption();
    [CompilerGeneratedAttribute]
public void set_ParameterizationOption(Nullable`1<ParameterizationOption> value);
    [CompilerGeneratedAttribute]
public Nullable`1<QueryStoreCaptureMode> get_QueryStoreCaptureMode();
    [CompilerGeneratedAttribute]
public void set_QueryStoreCaptureMode(Nullable`1<QueryStoreCaptureMode> value);
    [CompilerGeneratedAttribute]
public Nullable`1<QueryStoreDesiredState> get_QueryStoreDesiredState();
    [CompilerGeneratedAttribute]
public void set_QueryStoreDesiredState(Nullable`1<QueryStoreDesiredState> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_QueryStoreFlushInterval();
    [CompilerGeneratedAttribute]
public void set_QueryStoreFlushInterval(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_QueryStoreIntervalLength();
    [CompilerGeneratedAttribute]
public void set_QueryStoreIntervalLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_QueryStoreMaxStorageSize();
    [CompilerGeneratedAttribute]
public void set_QueryStoreMaxStorageSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_QueryStoreMaxPlansPerQuery();
    [CompilerGeneratedAttribute]
public void set_QueryStoreMaxPlansPerQuery(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_QueryStoreStaleQueryThreshold();
    [CompilerGeneratedAttribute]
public void set_QueryStoreStaleQueryThreshold(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_QuotedIdentifierOn();
    [CompilerGeneratedAttribute]
public void set_QuotedIdentifierOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnly();
    [CompilerGeneratedAttribute]
public void set_ReadOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<RecoveryMode> get_RecoveryMode();
    [CompilerGeneratedAttribute]
public void set_RecoveryMode(Nullable`1<RecoveryMode> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DelayedDurabilityMode> get_DelayedDurabilityMode();
    [CompilerGeneratedAttribute]
public void set_DelayedDurabilityMode(Nullable`1<DelayedDurabilityMode> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RecursiveTriggersOn();
    [CompilerGeneratedAttribute]
public void set_RecursiveTriggersOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ServiceBrokerOption> get_ServiceBrokerOption();
    [CompilerGeneratedAttribute]
public void set_ServiceBrokerOption(Nullable`1<ServiceBrokerOption> value);
    [CompilerGeneratedAttribute]
public EngineVersion get_EngineVersion();
    [CompilerGeneratedAttribute]
public void set_EngineVersion(EngineVersion value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SupplementalLoggingOn();
    [CompilerGeneratedAttribute]
public void set_SupplementalLoggingOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_TargetRecoveryTimePeriod();
    [CompilerGeneratedAttribute]
public void set_TargetRecoveryTimePeriod(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeUnit> get_TargetRecoveryTimeUnit();
    [CompilerGeneratedAttribute]
public void set_TargetRecoveryTimeUnit(Nullable`1<TimeUnit> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_TornPageProtectionOn();
    [CompilerGeneratedAttribute]
public void set_TornPageProtectionOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_TransformNoiseWords();
    [CompilerGeneratedAttribute]
public void set_TransformNoiseWords(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Trustworthy();
    [CompilerGeneratedAttribute]
public void set_Trustworthy(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_TwoDigitYearCutoff();
    [CompilerGeneratedAttribute]
public void set_TwoDigitYearCutoff(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_VardecimalStorageFormatOn();
    [CompilerGeneratedAttribute]
public void set_VardecimalStorageFormatOn(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<UserAccessOption> get_UserAccessOption();
    [CompilerGeneratedAttribute]
public void set_UserAccessOption(Nullable`1<UserAccessOption> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_WithEncryption();
    [CompilerGeneratedAttribute]
public void set_WithEncryption(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DataRetentionEnabled();
    [CompilerGeneratedAttribute]
public void set_DataRetentionEnabled(Nullable`1<bool> value);
    private static void Copy(TSqlModelOptions original, TSqlModelOptions copy);
}
public class Microsoft.SqlServer.Dac.Model.TSqlModelSchema : object {
    private Dictionary`2<string, ModelTypeClass> _allTypes;
    private Dictionary`2<string, ModelTypeClass> _topLevelTypes;
    private Dictionary`2<Type, ModelTypeClass> _reverseTypeLookup;
    private Dictionary`2<string, ModelTypeClass> _nonTopLevelTypes;
    private Dictionary`2<Type, ModelTypeClass> _nonTopLevelReverseTypeLookup;
    private Dictionary`2<ModelRelationshipClass, ModelRelationshipClass> _reverseRelationshipLookup;
    private Dictionary`2<ModelRelationshipClass, IList`1<ModelRelationshipClass>> _collapsedRelationshipLookup;
    public IEnumerable`1<ModelTypeClass> TopLevelTypes { get; }
    internal IEnumerable`1<ModelTypeClass> NonTopLevelTypes { get; }
    public IEnumerable`1<ModelTypeClass> AllTypes { get; }
    public IEnumerable`1<ModelTypeClass> get_TopLevelTypes();
    internal IEnumerable`1<ModelTypeClass> get_NonTopLevelTypes();
    public IEnumerable`1<ModelTypeClass> get_AllTypes();
    internal void AddType(ModelTypeClass type);
    internal void AddNonTopLevelType(ModelTypeClass type);
    internal void AddRelationshipMapping(ModelRelationshipClass publicRelationship, IList`1<ModelRelationshipClass> internalRelationshipClasses, IList`1<ModelRelationshipClass> collapsedRelationshipClasses);
    internal bool TryGetTopLevelTypeByName(string name, ModelTypeClass& type);
    internal bool TryGetModelTypeClassFromOrigin(Type originType, ModelTypeClass& type);
    internal bool TryGetPublicRelationship(ModelRelationshipClass internalRelationship, ModelRelationshipClass& publicRelationship);
    internal bool TryGetPublicRelationshipForCollapsedReference(ModelRelationshipClass internalRelationship, IList`1& allPublicRelationships);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.SqlServer.Dac.Model.TSqlObject : object {
    private TSqlObjectService _objectService;
    private object _contextObject;
    private TSqlScript _generatedAst;
    [CompilerGeneratedAttribute]
private ObjectIdentifier <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelTypeClass <ObjectType>k__BackingField;
    public ObjectIdentifier Name { get; private set; }
    public ModelTypeClass ObjectType { get; private set; }
    public object Item { get; }
    internal object ContextObject { get; }
    internal TSqlObject(TSqlObjectService objectService, ModelTypeClass typeClass, object contextObject);
    [CompilerGeneratedAttribute]
public ObjectIdentifier get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(ObjectIdentifier value);
    [CompilerGeneratedAttribute]
public ModelTypeClass get_ObjectType();
    [CompilerGeneratedAttribute]
private void set_ObjectType(ModelTypeClass value);
    public bool TryGetAst(TSqlScript& objectAst);
    public TSqlScript GetAst();
    public bool TryGetScript(String& objectScript);
    public string GetScript();
    internal TSqlFragment GetSourceFragment();
    public T GetProperty(ModelPropertyClass property);
    public object GetProperty(ModelPropertyClass property);
    private void VerifyPropertyOwner(ModelPropertyClass property);
    public object get_Item(ModelPropertyClass property);
    public T GetMetadata(ModelMetadataClass metadata);
    private void VerifyMetadataOwner(ModelMetadataClass metadata);
    public object GetMetadata(ModelMetadataClass metadata);
    public TSqlObject GetParent();
    public TSqlObject GetParent(DacQueryScopes queryScopes);
    public IEnumerable`1<TSqlObject> GetChildren();
    [IteratorStateMachineAttribute("Microsoft.SqlServer.Dac.Model.TSqlObject/<GetChildren>d__28")]
public IEnumerable`1<TSqlObject> GetChildren(DacQueryScopes queryScopes);
    public IEnumerable`1<TSqlObject> GetReferenced();
    public IEnumerable`1<TSqlObject> GetReferenced(DacQueryScopes queryScopes);
    public IEnumerable`1<TSqlObject> GetReferenced(ModelRelationshipClass relationshipType);
    public IEnumerable`1<TSqlObject> GetReferenced(ModelRelationshipClass relationshipType, DacQueryScopes queryScopes);
    private static IEnumerable`1<TSqlObject> GetReferencedElements(IEnumerable`1<ModelRelationshipInstance> referencedRelationshipInstances);
    public IEnumerable`1<ModelRelationshipInstance> GetReferencedRelationshipInstances();
    public IEnumerable`1<ModelRelationshipInstance> GetReferencedRelationshipInstances(DacQueryScopes queryScopes);
    public IEnumerable`1<ModelRelationshipInstance> GetReferencedRelationshipInstances(ModelRelationshipClass relationshipType);
    public IEnumerable`1<ModelRelationshipInstance> GetReferencedRelationshipInstances(ModelRelationshipClass relationshipType, DacQueryScopes queryScopes);
    public IEnumerable`1<ModelRelationshipInstance> GetReferencedRelationshipInstances(DacExternalQueryScopes queryScopes);
    public IEnumerable`1<ModelRelationshipInstance> GetReferencedRelationshipInstances(ModelRelationshipClass relationshipType, DacExternalQueryScopes queryScopes);
    private void VerifyRelationshipOwner(ModelRelationshipClass relationship);
    public IEnumerable`1<TSqlObject> GetReferencing();
    public IEnumerable`1<TSqlObject> GetReferencing(DacQueryScopes queryScopes);
    public IEnumerable`1<TSqlObject> GetReferencing(ModelRelationshipClass relationshipType);
    public IEnumerable`1<TSqlObject> GetReferencing(ModelRelationshipClass relationshipType, DacQueryScopes queryScopes);
    private static IEnumerable`1<TSqlObject> GetReferencingElements(IEnumerable`1<ModelRelationshipInstance> referencedRelationshipInstances);
    public IEnumerable`1<ModelRelationshipInstance> GetReferencingRelationshipInstances();
    public IEnumerable`1<ModelRelationshipInstance> GetReferencingRelationshipInstances(DacQueryScopes queryScopes);
    public IEnumerable`1<ModelRelationshipInstance> GetReferencingRelationshipInstances(ModelRelationshipClass relationshipType);
    public IEnumerable`1<ModelRelationshipInstance> GetReferencingRelationshipInstances(ModelRelationshipClass relationshipType, DacQueryScopes queryScopes);
    public SourceInformation GetSourceInformation();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    internal object get_ContextObject();
    internal void UpdateContextObject(object contextObject);
}
public class Microsoft.SqlServer.Dac.Model.TSqlObjectOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <QuotedIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AnsiNulls>k__BackingField;
    public Nullable`1<bool> QuotedIdentifier { get; public set; }
    public Nullable`1<bool> AnsiNulls { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_QuotedIdentifier();
    [CompilerGeneratedAttribute]
public void set_QuotedIdentifier(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AnsiNulls();
    [CompilerGeneratedAttribute]
public void set_AnsiNulls(Nullable`1<bool> value);
}
internal abstract class Microsoft.SqlServer.Dac.Model.TSqlObjectService : object {
    public bool IsScriptBacked { get; }
    public SqlServerVersion Version { get; protected set; }
    public int EngineVersion { get; protected set; }
    public abstract virtual bool get_IsScriptBacked();
    public abstract virtual TSqlObject GetObject(ModelTypeClass type, ObjectIdentifier id, DacQueryScopes queryScopes);
    public abstract virtual IEnumerable`1<TSqlObject> GetObjects(ModelTypeClass[] types, DacQueryScopes queryScopes);
    public abstract virtual IEnumerable`1<TSqlObject> GetObjects(ModelTypeClass type, ObjectIdentifier id, DacQueryScopes queryScopes);
    public abstract virtual IEnumerable`1<TSqlObject> GetObjects(string sourceName, ModelTypeClass[] types);
    public abstract virtual IEnumerable`1<ModelRelationshipInstance> GetReferencedRelationshipInstances(TSqlObject tSqlObject, DacExternalQueryScopes queryScopes);
    public abstract virtual IEnumerable`1<ModelRelationshipInstance> GetReferencedRelationshipInstances(TSqlObject tSqlObject, ModelRelationshipClass relationshipType, DacExternalQueryScopes queryScopes);
    public abstract virtual IEnumerable`1<ModelRelationshipInstance> GetReferencingRelationshipInstances(TSqlObject tSqlObject, DacQueryScopes queryScopes);
    public abstract virtual IEnumerable`1<ModelRelationshipInstance> GetReferencingRelationshipInstances(TSqlObject tSqlObject, ModelRelationshipClass relationshipType, DacQueryScopes queryScopes);
    public abstract virtual T GetMetadata(object contextObject, ModelMetadataClass metadata);
    public abstract virtual T GetProperty(object obj, ModelPropertyClass property);
    public abstract virtual ObjectIdentifier CreateIdentifier(object contextObject);
    public abstract virtual SqlServerVersion get_Version();
    protected abstract virtual void set_Version(SqlServerVersion value);
    public abstract virtual int get_EngineVersion();
    protected abstract virtual void set_EngineVersion(int value);
    public abstract virtual bool IsToplevelObject(TSqlObject tSqlObject);
    public abstract virtual bool TryGetAst(TSqlObject tSqlObject, TSqlScript& ast);
    public abstract virtual bool TryGetScript(TSqlObject tSqlObject, String& script);
    public abstract virtual void AddObjects(string inputScript);
    public abstract virtual void AddObjects(string inputScript, TSqlObjectOptions options);
    public abstract virtual void AddObjects(TSqlScript inputScriptAst);
    public abstract virtual void AddObjects(TSqlScript inputScriptAst, TSqlObjectOptions options);
    public abstract virtual void AddOrUpdateObjects(string inputScript, string sourceName, TSqlObjectOptions options);
    public abstract virtual void AddOrUpdateObjects(TSqlScript inputScriptAst, string sourceName, TSqlObjectOptions options);
    public abstract virtual void DeleteObjects(string sourceName);
    public abstract virtual void BuildPackage(Func`1<Stream> streamGetter, PackageMetadata packageMetadata, PackageOptions packageOptions);
    public abstract virtual void UpdateModel(DacPackage dacPackage, PackageMetadata packageMetadata);
    public abstract virtual int GetInvalidElementCount();
    public abstract virtual IList`1<DacModelMessage> Validate();
    public abstract virtual IEnumerable`1<DacModelError> CheckVersionCompatibility(SqlServerVersion targetVersion, CancellationToken cancelToken);
    public abstract virtual IEnumerable`1<DacModelError> GetModelErrors();
    public abstract virtual SourceInformation GetSourceInformation(TSqlObject tSqlObject);
    public abstract virtual TSqlFragment GetOriginalSourceFragment(TSqlObject tSqlObject);
    public abstract virtual DisplayServices GetDisplayServices();
    public abstract virtual ModelCollationComparer GetCollationComparer();
    public abstract virtual void ConvertToScriptedModel(CancellationToken cancelToken);
    public abstract virtual TSqlObject ConvertToScriptedObject(TSqlObject tSqlObject, string sourceName);
}
[FlagsAttribute]
public enum Microsoft.SqlServer.Dac.Model.TSqlPlatforms : Enum {
    public int value__;
    public static TSqlPlatforms Sql90;
    public static TSqlPlatforms Sql100;
    public static TSqlPlatforms SqlAzure;
    public static TSqlPlatforms Sql110;
    public static TSqlPlatforms Sql120;
    public static TSqlPlatforms Sql130;
    public static TSqlPlatforms Sql140;
    public static TSqlPlatforms Sql150;
    public static TSqlPlatforms Sql160;
    public static TSqlPlatforms SqlAzureV12;
    public static TSqlPlatforms SqlDbFabric;
    public static TSqlPlatforms SqlDw;
    public static TSqlPlatforms SqlServerless;
    public static TSqlPlatforms SqlDwUnified;
    public static TSqlPlatforms OnPremises;
    public static TSqlPlatforms Cloud;
    public static TSqlPlatforms AllDw;
    public static TSqlPlatforms All;
}
public static class Microsoft.SqlServer.Dac.Model.UniqueConstraint : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowPageLocks>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowRowLocks>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IgnoreDuplicateKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RecomputeStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Clustered>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FileStreamNull>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithPadIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <OptimizeForSequentialKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AutoCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <BucketCount>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DoIncrementalStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FillFactor>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Online>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataCompressionOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileStreamFilegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <FileStreamPartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlCompressionOptions>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AllowPageLocks { get; internal set; }
    public static ModelPropertyClass AllowRowLocks { get; internal set; }
    public static ModelPropertyClass IgnoreDuplicateKey { get; internal set; }
    public static ModelPropertyClass RecomputeStatistics { get; internal set; }
    public static ModelPropertyClass Clustered { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass FileStreamNull { get; internal set; }
    public static ModelPropertyClass WithPadIndex { get; internal set; }
    public static ModelPropertyClass Hash { get; internal set; }
    public static ModelPropertyClass OptimizeForSequentialKey { get; internal set; }
    public static ModelPropertyClass AutoCreated { get; internal set; }
    public static ModelPropertyClass BucketCount { get; internal set; }
    public static ModelPropertyClass DoIncrementalStatistics { get; internal set; }
    public static ModelPropertyClass FillFactor { get; internal set; }
    public static ModelPropertyClass Online { get; internal set; }
    public static ModelRelationshipClass Host { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass DataCompressionOptions { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    public static ModelRelationshipClass FileStreamFilegroup { get; internal set; }
    public static ModelRelationshipClass FileStreamPartitionScheme { get; internal set; }
    public static ModelRelationshipClass PartitionColumn { get; internal set; }
    public static ModelRelationshipClass PartitionScheme { get; internal set; }
    public static ModelRelationshipClass XmlCompressionOptions { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowPageLocks();
    [CompilerGeneratedAttribute]
internal static void set_AllowPageLocks(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowRowLocks();
    [CompilerGeneratedAttribute]
internal static void set_AllowRowLocks(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IgnoreDuplicateKey();
    [CompilerGeneratedAttribute]
internal static void set_IgnoreDuplicateKey(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RecomputeStatistics();
    [CompilerGeneratedAttribute]
internal static void set_RecomputeStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Clustered();
    [CompilerGeneratedAttribute]
internal static void set_Clustered(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FileStreamNull();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamNull(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithPadIndex();
    [CompilerGeneratedAttribute]
internal static void set_WithPadIndex(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Hash();
    [CompilerGeneratedAttribute]
internal static void set_Hash(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_OptimizeForSequentialKey();
    [CompilerGeneratedAttribute]
internal static void set_OptimizeForSequentialKey(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AutoCreated();
    [CompilerGeneratedAttribute]
internal static void set_AutoCreated(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_BucketCount();
    [CompilerGeneratedAttribute]
internal static void set_BucketCount(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DoIncrementalStatistics();
    [CompilerGeneratedAttribute]
internal static void set_DoIncrementalStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FillFactor();
    [CompilerGeneratedAttribute]
internal static void set_FillFactor(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Online();
    [CompilerGeneratedAttribute]
internal static void set_Online(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Host();
    [CompilerGeneratedAttribute]
internal static void set_Host(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_DataCompressionOptions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileStreamFilegroup();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamFilegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_FileStreamPartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_FileStreamPartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionColumn();
    [CompilerGeneratedAttribute]
internal static void set_PartitionColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_PartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_XmlCompressionOptions(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.User : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithoutLogin>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AuthenticationType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DefaultLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Sid>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <UserType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <AsymmetricKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Certificate>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DefaultSchema>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Login>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass WithoutLogin { get; internal set; }
    public static ModelPropertyClass AuthenticationType { get; internal set; }
    public static ModelPropertyClass DefaultLanguage { get; internal set; }
    public static ModelPropertyClass Password { get; internal set; }
    public static ModelPropertyClass Sid { get; internal set; }
    public static ModelPropertyClass UserType { get; internal set; }
    public static ModelRelationshipClass AsymmetricKey { get; internal set; }
    public static ModelRelationshipClass Certificate { get; internal set; }
    public static ModelRelationshipClass DefaultSchema { get; internal set; }
    public static ModelRelationshipClass Login { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithoutLogin();
    [CompilerGeneratedAttribute]
internal static void set_WithoutLogin(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AuthenticationType();
    [CompilerGeneratedAttribute]
internal static void set_AuthenticationType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DefaultLanguage();
    [CompilerGeneratedAttribute]
internal static void set_DefaultLanguage(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Password();
    [CompilerGeneratedAttribute]
internal static void set_Password(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Sid();
    [CompilerGeneratedAttribute]
internal static void set_Sid(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_UserType();
    [CompilerGeneratedAttribute]
internal static void set_UserType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_AsymmetricKey();
    [CompilerGeneratedAttribute]
internal static void set_AsymmetricKey(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Certificate();
    [CompilerGeneratedAttribute]
internal static void set_Certificate(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DefaultSchema();
    [CompilerGeneratedAttribute]
internal static void set_DefaultSchema(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Login();
    [CompilerGeneratedAttribute]
internal static void set_Login(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.UserAccessOption : Enum {
    public int value__;
    public static UserAccessOption Multiple;
    public static UserAccessOption Restricted;
    public static UserAccessOption Single;
}
public static class Microsoft.SqlServer.Dac.Model.UserDefinedServerRole : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Authorizer>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelRelationshipClass Authorizer { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Authorizer();
    [CompilerGeneratedAttribute]
internal static void set_Authorizer(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.UserDefinedType : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ByteOrdered>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FixedLength>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxByteSize>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ValidationMethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Methods>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass ByteOrdered { get; internal set; }
    public static ModelPropertyClass FixedLength { get; internal set; }
    public static ModelPropertyClass ClassName { get; internal set; }
    public static ModelPropertyClass Format { get; internal set; }
    public static ModelPropertyClass MaxByteSize { get; internal set; }
    public static ModelPropertyClass ValidationMethodName { get; internal set; }
    public static ModelRelationshipClass Assembly { get; internal set; }
    public static ModelRelationshipClass Methods { get; internal set; }
    public static ModelRelationshipClass Properties { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ByteOrdered();
    [CompilerGeneratedAttribute]
internal static void set_ByteOrdered(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FixedLength();
    [CompilerGeneratedAttribute]
internal static void set_FixedLength(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ClassName();
    [CompilerGeneratedAttribute]
internal static void set_ClassName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Format();
    [CompilerGeneratedAttribute]
internal static void set_Format(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxByteSize();
    [CompilerGeneratedAttribute]
internal static void set_MaxByteSize(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ValidationMethodName();
    [CompilerGeneratedAttribute]
internal static void set_ValidationMethodName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Assembly();
    [CompilerGeneratedAttribute]
internal static void set_Assembly(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Methods();
    [CompilerGeneratedAttribute]
internal static void set_Methods(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Properties();
    [CompilerGeneratedAttribute]
internal static void set_Properties(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.UserType : Enum {
    public int value__;
    public static UserType None;
    public static UserType ExternalUser;
    public static UserType ExternalGroup;
}
public enum Microsoft.SqlServer.Dac.Model.ValidationMethod : Enum {
    public int value__;
    public static ValidationMethod Unknown;
    public static ValidationMethod None;
    public static ValidationMethod Empty;
    public static ValidationMethod WellFormedXml;
    public static ValidationMethod ValidXml;
}
public static class Microsoft.SqlServer.Dac.Model.View : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AnsiNullsOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithViewMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QuotedIdentifierOn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Replicated>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithSchemaBinding>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithCheckOption>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SelectStatement>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DistributionPolicyType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <ForAppend>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsDroppedLedgerView>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <LedgerViewType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <BodyDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DistributionColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DatabaseScopedCredentialName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ExternalDataSourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AnsiNullsOn { get; internal set; }
    public static ModelPropertyClass WithEncryption { get; internal set; }
    public static ModelPropertyClass WithViewMetadata { get; internal set; }
    public static ModelPropertyClass QuotedIdentifierOn { get; internal set; }
    public static ModelPropertyClass Replicated { get; internal set; }
    public static ModelPropertyClass WithSchemaBinding { get; internal set; }
    public static ModelPropertyClass WithCheckOption { get; internal set; }
    public static ModelPropertyClass SelectStatement { get; internal set; }
    public static ModelPropertyClass DistributionPolicyType { get; internal set; }
    public static ModelPropertyClass ForAppend { get; internal set; }
    public static ModelPropertyClass IsDroppedLedgerView { get; internal set; }
    public static ModelPropertyClass LedgerViewType { get; internal set; }
    public static ModelRelationshipClass BodyDependencies { get; internal set; }
    public static ModelRelationshipClass DistributionColumn { get; internal set; }
    public static ModelRelationshipClass Columns { get; internal set; }
    public static ModelRelationshipClass DatabaseScopedCredentialName { get; internal set; }
    public static ModelRelationshipClass ExternalDataSourceName { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AnsiNullsOn();
    [CompilerGeneratedAttribute]
internal static void set_AnsiNullsOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithEncryption();
    [CompilerGeneratedAttribute]
internal static void set_WithEncryption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithViewMetadata();
    [CompilerGeneratedAttribute]
internal static void set_WithViewMetadata(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QuotedIdentifierOn();
    [CompilerGeneratedAttribute]
internal static void set_QuotedIdentifierOn(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Replicated();
    [CompilerGeneratedAttribute]
internal static void set_Replicated(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithSchemaBinding();
    [CompilerGeneratedAttribute]
internal static void set_WithSchemaBinding(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithCheckOption();
    [CompilerGeneratedAttribute]
internal static void set_WithCheckOption(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SelectStatement();
    [CompilerGeneratedAttribute]
internal static void set_SelectStatement(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DistributionPolicyType();
    [CompilerGeneratedAttribute]
internal static void set_DistributionPolicyType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_ForAppend();
    [CompilerGeneratedAttribute]
internal static void set_ForAppend(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsDroppedLedgerView();
    [CompilerGeneratedAttribute]
internal static void set_IsDroppedLedgerView(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_LedgerViewType();
    [CompilerGeneratedAttribute]
internal static void set_LedgerViewType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_BodyDependencies();
    [CompilerGeneratedAttribute]
internal static void set_BodyDependencies(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DistributionColumn();
    [CompilerGeneratedAttribute]
internal static void set_DistributionColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Columns();
    [CompilerGeneratedAttribute]
internal static void set_Columns(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DatabaseScopedCredentialName();
    [CompilerGeneratedAttribute]
internal static void set_DatabaseScopedCredentialName(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ExternalDataSourceName();
    [CompilerGeneratedAttribute]
internal static void set_ExternalDataSourceName(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.WorkloadClassifier : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Importance>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MemberName>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WlmContext>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WlmLabel>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <WorkloadGroup>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass EndTime { get; internal set; }
    public static ModelPropertyClass Importance { get; internal set; }
    public static ModelPropertyClass MemberName { get; internal set; }
    public static ModelPropertyClass StartTime { get; internal set; }
    public static ModelPropertyClass WlmContext { get; internal set; }
    public static ModelPropertyClass WlmLabel { get; internal set; }
    public static ModelRelationshipClass WorkloadGroup { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_EndTime();
    [CompilerGeneratedAttribute]
internal static void set_EndTime(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Importance();
    [CompilerGeneratedAttribute]
internal static void set_Importance(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MemberName();
    [CompilerGeneratedAttribute]
internal static void set_MemberName(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_StartTime();
    [CompilerGeneratedAttribute]
internal static void set_StartTime(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WlmContext();
    [CompilerGeneratedAttribute]
internal static void set_WlmContext(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WlmLabel();
    [CompilerGeneratedAttribute]
internal static void set_WlmLabel(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_WorkloadGroup();
    [CompilerGeneratedAttribute]
internal static void set_WorkloadGroup(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.WorkloadGroup : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <GroupMaxRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Importance>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MaxDop>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RequestMaxCpuTimeSec>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RequestMaxMemoryGrantPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RequestMemoryGrantTimeoutSec>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <ResourcePool>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass GroupMaxRequests { get; internal set; }
    public static ModelPropertyClass Importance { get; internal set; }
    public static ModelPropertyClass MaxDop { get; internal set; }
    public static ModelPropertyClass RequestMaxCpuTimeSec { get; internal set; }
    public static ModelPropertyClass RequestMaxMemoryGrantPercent { get; internal set; }
    public static ModelPropertyClass RequestMemoryGrantTimeoutSec { get; internal set; }
    public static ModelRelationshipClass ResourcePool { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_GroupMaxRequests();
    [CompilerGeneratedAttribute]
internal static void set_GroupMaxRequests(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Importance();
    [CompilerGeneratedAttribute]
internal static void set_Importance(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MaxDop();
    [CompilerGeneratedAttribute]
internal static void set_MaxDop(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RequestMaxCpuTimeSec();
    [CompilerGeneratedAttribute]
internal static void set_RequestMaxCpuTimeSec(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RequestMaxMemoryGrantPercent();
    [CompilerGeneratedAttribute]
internal static void set_RequestMaxMemoryGrantPercent(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RequestMemoryGrantTimeoutSec();
    [CompilerGeneratedAttribute]
internal static void set_RequestMemoryGrantTimeoutSec(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_ResourcePool();
    [CompilerGeneratedAttribute]
internal static void set_ResourcePool(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.WorkloadGroupDw : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <CapPercentageResource>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Importance>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <MinPercentageResource>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <QueryExecutionTimeoutSec>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RequestMaxResourceGrantPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RequestMinResourceGrantPercent>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass CapPercentageResource { get; internal set; }
    public static ModelPropertyClass Importance { get; internal set; }
    public static ModelPropertyClass MinPercentageResource { get; internal set; }
    public static ModelPropertyClass QueryExecutionTimeoutSec { get; internal set; }
    public static ModelPropertyClass RequestMaxResourceGrantPercent { get; internal set; }
    public static ModelPropertyClass RequestMinResourceGrantPercent { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_CapPercentageResource();
    [CompilerGeneratedAttribute]
internal static void set_CapPercentageResource(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Importance();
    [CompilerGeneratedAttribute]
internal static void set_Importance(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_MinPercentageResource();
    [CompilerGeneratedAttribute]
internal static void set_MinPercentageResource(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_QueryExecutionTimeoutSec();
    [CompilerGeneratedAttribute]
internal static void set_QueryExecutionTimeoutSec(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RequestMaxResourceGrantPercent();
    [CompilerGeneratedAttribute]
internal static void set_RequestMaxResourceGrantPercent(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RequestMinResourceGrantPercent();
    [CompilerGeneratedAttribute]
internal static void set_RequestMinResourceGrantPercent(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.XmlIndex : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowPageLocks>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <AllowRowLocks>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IgnoreDuplicateKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <RecomputeStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <WithPadIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <SecondaryXmlIndexType>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <DoIncrementalStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <FillFactor>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <IsPrimary>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PrimaryXmlIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Column>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <DataCompressionOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Filegroup>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <IndexedObject>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <PartitionScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <XmlCompressionOptions>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass AllowPageLocks { get; internal set; }
    public static ModelPropertyClass AllowRowLocks { get; internal set; }
    public static ModelPropertyClass IgnoreDuplicateKey { get; internal set; }
    public static ModelPropertyClass RecomputeStatistics { get; internal set; }
    public static ModelPropertyClass Disabled { get; internal set; }
    public static ModelPropertyClass WithPadIndex { get; internal set; }
    public static ModelPropertyClass SecondaryXmlIndexType { get; internal set; }
    public static ModelPropertyClass DoIncrementalStatistics { get; internal set; }
    public static ModelPropertyClass FillFactor { get; internal set; }
    public static ModelPropertyClass IsPrimary { get; internal set; }
    public static ModelRelationshipClass PrimaryXmlIndex { get; internal set; }
    public static ModelRelationshipClass Column { get; internal set; }
    public static ModelRelationshipClass DataCompressionOptions { get; internal set; }
    public static ModelRelationshipClass Filegroup { get; internal set; }
    public static ModelRelationshipClass IndexedObject { get; internal set; }
    public static ModelRelationshipClass PartitionColumn { get; internal set; }
    public static ModelRelationshipClass PartitionScheme { get; internal set; }
    public static ModelRelationshipClass XmlCompressionOptions { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowPageLocks();
    [CompilerGeneratedAttribute]
internal static void set_AllowPageLocks(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_AllowRowLocks();
    [CompilerGeneratedAttribute]
internal static void set_AllowRowLocks(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IgnoreDuplicateKey();
    [CompilerGeneratedAttribute]
internal static void set_IgnoreDuplicateKey(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_RecomputeStatistics();
    [CompilerGeneratedAttribute]
internal static void set_RecomputeStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Disabled();
    [CompilerGeneratedAttribute]
internal static void set_Disabled(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_WithPadIndex();
    [CompilerGeneratedAttribute]
internal static void set_WithPadIndex(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_SecondaryXmlIndexType();
    [CompilerGeneratedAttribute]
internal static void set_SecondaryXmlIndexType(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_DoIncrementalStatistics();
    [CompilerGeneratedAttribute]
internal static void set_DoIncrementalStatistics(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_FillFactor();
    [CompilerGeneratedAttribute]
internal static void set_FillFactor(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_IsPrimary();
    [CompilerGeneratedAttribute]
internal static void set_IsPrimary(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PrimaryXmlIndex();
    [CompilerGeneratedAttribute]
internal static void set_PrimaryXmlIndex(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Column();
    [CompilerGeneratedAttribute]
internal static void set_Column(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_DataCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_DataCompressionOptions(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Filegroup();
    [CompilerGeneratedAttribute]
internal static void set_Filegroup(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_IndexedObject();
    [CompilerGeneratedAttribute]
internal static void set_IndexedObject(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionColumn();
    [CompilerGeneratedAttribute]
internal static void set_PartitionColumn(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_PartitionScheme();
    [CompilerGeneratedAttribute]
internal static void set_PartitionScheme(ModelRelationshipClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_XmlCompressionOptions();
    [CompilerGeneratedAttribute]
internal static void set_XmlCompressionOptions(ModelRelationshipClass value);
}
public static class Microsoft.SqlServer.Dac.Model.XmlNamespace : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <NamespaceUri>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Prefix>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass NamespaceUri { get; internal set; }
    public static ModelPropertyClass Prefix { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_NamespaceUri();
    [CompilerGeneratedAttribute]
internal static void set_NamespaceUri(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Prefix();
    [CompilerGeneratedAttribute]
internal static void set_Prefix(ModelPropertyClass value);
}
public static class Microsoft.SqlServer.Dac.Model.XmlSchemaCollection : object {
    [CompilerGeneratedAttribute]
private static ModelTypeClass <TypeClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelPropertyClass <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private static ModelRelationshipClass <Schema>k__BackingField;
    public static ModelTypeClass TypeClass { get; internal set; }
    public static ModelPropertyClass Expression { get; internal set; }
    public static ModelRelationshipClass Schema { get; internal set; }
    [CompilerGeneratedAttribute]
public static ModelTypeClass get_TypeClass();
    [CompilerGeneratedAttribute]
internal static void set_TypeClass(ModelTypeClass value);
    [CompilerGeneratedAttribute]
public static ModelPropertyClass get_Expression();
    [CompilerGeneratedAttribute]
internal static void set_Expression(ModelPropertyClass value);
    [CompilerGeneratedAttribute]
public static ModelRelationshipClass get_Schema();
    [CompilerGeneratedAttribute]
internal static void set_Schema(ModelRelationshipClass value);
}
public enum Microsoft.SqlServer.Dac.Model.XmlStyle : Enum {
    public int value__;
    public static XmlStyle Unknown;
    public static XmlStyle Content;
    public static XmlStyle Document;
}
public class Microsoft.SqlServer.Dac.PackageMetadata : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public string Name { get; public set; }
    public string Version { get; public set; }
    public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
public class Microsoft.SqlServer.Dac.PackageOptions : object {
    private ReadOnlyCollection`1<DeploymentContributorInformation> _deploymentContributors;
    private ReadOnlyDictionary`2<string, string> _contributorArguments;
    private ReadOnlyCollection`1<DeploymentContributorConfigurationStream> _deploymentContributorConfigurationStreams;
    [CompilerGeneratedAttribute]
private bool <TreatWarningsAsErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <IgnoreValidationErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefactorLogPath>k__BackingField;
    public bool TreatWarningsAsErrors { get; public set; }
    public IEnumerable`1<string> IgnoreValidationErrors { get; public set; }
    public string RefactorLogPath { get; public set; }
    public IList`1<DeploymentContributorInformation> DeploymentContributors { get; public set; }
    public IDictionary`2<string, string> ContributorArguments { get; public set; }
    public IList`1<DeploymentContributorConfigurationStream> DeploymentContributorConfigurationStreams { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_TreatWarningsAsErrors();
    [CompilerGeneratedAttribute]
public void set_TreatWarningsAsErrors(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_IgnoreValidationErrors();
    [CompilerGeneratedAttribute]
public void set_IgnoreValidationErrors(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_RefactorLogPath();
    [CompilerGeneratedAttribute]
public void set_RefactorLogPath(string value);
    public IList`1<DeploymentContributorInformation> get_DeploymentContributors();
    public void set_DeploymentContributors(IList`1<DeploymentContributorInformation> value);
    public IDictionary`2<string, string> get_ContributorArguments();
    public void set_ContributorArguments(IDictionary`2<string, string> value);
    public IList`1<DeploymentContributorConfigurationStream> get_DeploymentContributorConfigurationStreams();
    public void set_DeploymentContributorConfigurationStreams(IList`1<DeploymentContributorConfigurationStream> value);
}
public class Microsoft.SqlServer.Dac.SourceInformation : object {
    [CompilerGeneratedAttribute]
private string <SourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartLine>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartColumn>k__BackingField;
    public string SourceName { get; private set; }
    public int StartLine { get; private set; }
    public int StartColumn { get; private set; }
    public SourceInformation(string sourceName, int startLine, int startColumn);
    [CompilerGeneratedAttribute]
public string get_SourceName();
    [CompilerGeneratedAttribute]
private void set_SourceName(string value);
    [CompilerGeneratedAttribute]
public int get_StartLine();
    [CompilerGeneratedAttribute]
private void set_StartLine(int value);
    [CompilerGeneratedAttribute]
public int get_StartColumn();
    [CompilerGeneratedAttribute]
private void set_StartColumn(int value);
}
public static class Microsoft.SqlServer.Dac.TSqlModelUtils : object {
    public static bool TryGetFragmentForAnalysis(TSqlObject tSqlObject, TSqlFragment& fragment);
    public static TSqlPlatformCompatibility CalculatePlatformCompatibility(SqlServerVersion version);
}
