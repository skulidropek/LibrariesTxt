public class Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException : DmfException {
    private string interfaceName;
    private string objectTypeName;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string Interface { get; }
    public string ObjectType { get; }
    public AdapterAlreadyExistsException(string message);
    public AdapterAlreadyExistsException(string message, Exception innerException);
    public AdapterAlreadyExistsException(string interfaceName, string typeName);
    private AdapterAlreadyExistsException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    protected virtual void Init();
    public string get_Interface();
    public string get_ObjectType();
}
public class Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException : DmfException {
    private string adapter;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string Adapter { get; }
    public AdapterWrongNumberOfArgumentsException(string message, Exception innerException);
    public AdapterWrongNumberOfArgumentsException(string adapter);
    private AdapterWrongNumberOfArgumentsException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    public string get_Adapter();
}
public class Microsoft.SqlServer.Management.Dmf.AssemblyAlreadyRegisteredException : DmfException {
    private string assembly;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string Assembly { get; }
    public AssemblyAlreadyRegisteredException(string message, Exception innerException);
    public AssemblyAlreadyRegisteredException(string assemblyName);
    private AssemblyAlreadyRegisteredException(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    public string get_Assembly();
}
[FlagsAttribute]
public enum Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode : Enum {
    public int value__;
    public static AutomatedPolicyEvaluationMode None;
    public static AutomatedPolicyEvaluationMode Enforce;
    public static AutomatedPolicyEvaluationMode CheckOnChanges;
    public static AutomatedPolicyEvaluationMode CheckOnSchedule;
}
public class Microsoft.SqlServer.Management.Dmf.BadEventDataException : DmfException {
    public DmfExceptionType DmfExceptionType { get; }
    public BadEventDataException(string message, Exception innerException);
    public BadEventDataException(string message);
    private BadEventDataException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
}
public class Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException : DmfException {
    private string reason;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string Reason { get; }
    public BadExpressionTreeException(string message, Exception innerException);
    private BadExpressionTreeException(SerializationInfo info, StreamingContext context);
    public BadExpressionTreeException(string reason);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    public string get_Reason();
}
internal static class Microsoft.SqlServer.Management.Dmf.Common.AssemblyVersionInfo : object {
    public static string VersionString;
    public static int MajorVersion;
}
[CompilerGeneratedAttribute]
internal class Microsoft.SqlServer.Management.Dmf.Common.ExceptionTemplatesSR : object {
    public static CultureInfo Culture { get; public set; }
    public static string CannotMoveToElement { get; }
    public static string ExpressionNodeNotConfigurableGeneric { get; }
    public static CultureInfo get_Culture();
    public static void set_Culture(CultureInfo value);
    public static string get_CannotMoveToElement();
    public static string get_ExpressionNodeNotConfigurableGeneric();
    public static string AdapterAlreadyExists(string interface, string object);
    public static string AdapterHasTooManyArguments(string name);
    public static string AssemblyAlreadyRegistered(string name);
    public static string BadExpressionTree(string reason);
    public static string CannotConvertToType(string inputString, string typeName);
    public static string ConfigValueMismatch(string propertyName, string configValue, string runValue);
    public static string ConversionNotSupported(string obj, string type);
    public static string ExpressionNodeNotConfigurable(string subtype);
    public static string ExpressionNodeNotConfigurableOperators(string propertyName, string expression);
    public static string ExpressionTypeMistmatch(string typeLeft, string typeRight);
    public static string FailedOperation(string opName, string objType, string objName);
    public static string FunctionNotASmoObject(string functionName, string targetType);
    public static string FunctionWrongArgumentsNumber(string function, int argsReceived, int argsExpected);
    public static string FunctionWrongArgumentType(string function, string typeReceived, string typeExpected);
    public static string FunctionWrongReturnType(string function, string typeReceived, string typeExpected);
    public static string InvalidInOperator(string operator);
    public static string InvalidOperand(string type, string operand);
    public static string MissingProperty(string name);
    public static string MissingTypeFacetAssociation(string typeName, string facet);
    public static string NonConfigurableReadOnlyProperty(string propertyName);
    public static string NonRetrievableProperty(string name);
    public static string NoTargetSetEnabled(string objectSetName);
    public static string NotSupported(string host_type, string host_name, string object_type, string object_name);
    public static string NullFacet(string facet);
    public static string ObjectAlreadyExists(string object, string name);
    public static string ObjectDoesntExist(string object, string name);
    public static string OperatorNotApplicable(string operator, string type);
    public static string StringPropertyTooLong(string propertyName, int maxLength, int currentLength);
    public static string TargetSetCountMismatch(string objectSetName, string facetName);
    public static string UnexpectedElement(string nameRead, string nameExpected);
    public static string UnexpectedName(string typeRead, string nameRead, string typeExpected, string nameExpected);
    public static string UnexpectedType(string typeRead, string nameRead, string typeExpected);
    public static string UnsupportedConstantType(string node, string typeName);
    public static string UnsupportedObjectType(string type, string host);
    public static string UnsupportedTargetSetForFacet(string targetSetSkeleton, string objectSetName, string facetName);
    public static string ValidationFailed(string objectType, string objectName);
}
[ExtensionAttribute]
internal static class Microsoft.SqlServer.Management.Dmf.Common.NetCoreHelpers : object {
    [ExtensionAttribute]
public static Assembly GetAssembly(Type type);
    public static Assembly LoadAssembly(string assemblyName);
    public static IntPtr ConvertSecureStringToBSTR(SecureString ss);
    [ExtensionAttribute]
public static int StringCompare(string firstString, string secondString, bool ignoreCase, CultureInfo culture);
    [ExtensionAttribute]
public static string StringToUpper(string str, CultureInfo culture);
    public static CultureInfo GetNewCultureInfo(int lcid);
    public static void ZeroFreeBSTR(IntPtr ps);
}
public class Microsoft.SqlServer.Management.Dmf.Common.Utils : object {
    public static void CheckConfigurationProperty(string property, T configValue, T runValue);
}
public class Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException : DmfException {
    private string type1;
    private string name1;
    private string type2;
    private string name2;
    private string mode;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string Mode { get; }
    public string Type1 { get; }
    public string Name1 { get; }
    public string Type2 { get; }
    public string Name2 { get; }
    public ConflictingPropertyValuesException(string message);
    public ConflictingPropertyValuesException(string message, Exception innerException);
    public ConflictingPropertyValuesException(string mode, string type1, string name1, string type2, string name2);
    private ConflictingPropertyValuesException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    protected virtual void Init();
    public string get_Mode();
    public string get_Type1();
    public string get_Name1();
    public string get_Type2();
    public string get_Name2();
}
public class Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException : DmfException {
    private string typeName;
    private string host;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string TypeName { get; }
    public string Host { get; }
    public ConversionNotSupportedException(string message);
    public ConversionNotSupportedException(string message, Exception innerException);
    private ConversionNotSupportedException(SerializationInfo info, StreamingContext context);
    public ConversionNotSupportedException(string host, string typeName);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    public string get_TypeName();
    public string get_Host();
}
public static class Microsoft.SqlServer.Management.Dmf.DmfConstants : object {
    public static string MICROSOFT_SQLSERVER_PUBLIC_KEY;
}
public class Microsoft.SqlServer.Management.Dmf.DmfException : SqlServerManagementException {
    private static int INIT_BUFFER_SIZE;
    private static string prodVer;
    protected static string ProdVer { get; }
    public DmfExceptionType DmfExceptionType { get; }
    public string HelpLink { get; }
    public DmfException(string message);
    public DmfException(string message, Exception innerException);
    protected DmfException(SerializationInfo info, StreamingContext context);
    private static DmfException();
    protected virtual void Init();
    protected static string get_ProdVer();
    protected internal DmfException SetHelpContext(string resource);
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_HelpLink();
}
public enum Microsoft.SqlServer.Management.Dmf.DmfExceptionType : Enum {
    public int value__;
    public static DmfExceptionType DmfException;
    public static DmfExceptionType AssemblyAlreadyRegistered;
    public static DmfExceptionType AdapterAlreadyExists;
    public static DmfExceptionType AdapterWrongNumberOfArguments;
    public static DmfExceptionType ExpressionTypeMistmatch;
    public static DmfExceptionType OperatorNotApplicable;
    public static DmfExceptionType FunctionWrongArgumentType;
    public static DmfExceptionType FunctionWrongArgumentsNumber;
    public static DmfExceptionType NullFacet;
    public static DmfExceptionType ExpressionSerialization;
    public static DmfExceptionType TypeConversion;
    public static DmfExceptionType UnsupportedType;
    public static DmfExceptionType BadExpressionTree;
    public static DmfExceptionType UnsupportedObjectType;
    public static DmfExceptionType ExpressionNodeNotConfigurable;
    public static DmfExceptionType ConversionNotSupported;
    public static DmfExceptionType InvalidOperand;
    public static DmfExceptionType InvalidInOperator;
    public static DmfExceptionType DmfSecurity;
    public static DmfExceptionType ObjectValidation;
    public static DmfExceptionType ConflictingPropertyValues;
    public static DmfExceptionType ObjectAlreadyExists;
    public static DmfExceptionType MissingObject;
    public static DmfExceptionType PolicyEvaluation;
    public static DmfExceptionType MissingJobSchedule;
    public static DmfExceptionType BadEventData;
    public static DmfExceptionType FailedOperation;
    public static DmfExceptionType ExpressionNodeNotConfigurableOperator;
    public static DmfExceptionType NonConfigurableReadOnlyProperty;
    public static DmfExceptionType MissingProperty;
    public static DmfExceptionType NonRetrievableProperty;
    public static DmfExceptionType MissingTypeFacetAssociation;
    public static DmfExceptionType FunctionWrongReturnType;
    public static DmfExceptionType FunctionNoServer;
    public static DmfExceptionType FunctionNotASmoObject;
    public static DmfExceptionType FunctionBadDatePart;
    public static DmfExceptionType FunctionTooManyColumns;
    public static DmfExceptionType StringPropertyTooLong;
    public static DmfExceptionType TargetSetCountMismatch;
    public static DmfExceptionType UnsupportedTargetSetForFacet;
    public static DmfExceptionType NoTargetSetEnabled;
    public static DmfExceptionType RestartPending;
}
public class Microsoft.SqlServer.Management.Dmf.ExpressionNodeConfigurationException : DmfException {
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public ExpressionNodeConfigurationException(string message);
    public ExpressionNodeConfigurationException(string message, Exception innerException);
    private ExpressionNodeConfigurationException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
}
public class Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableException : DmfException {
    private string subtype;
    public string Subtype { get; }
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public ExpressionNodeNotConfigurableException(string subtype);
    public ExpressionNodeNotConfigurableException(string message, Exception innerException);
    private ExpressionNodeNotConfigurableException(SerializationInfo info, StreamingContext context);
    public string get_Subtype();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
}
public class Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException : DmfException {
    private string propertyName;
    private string expression;
    public string PropertyName { get; }
    public string Expression { get; }
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public ExpressionNodeNotConfigurableOperatorException(string message);
    public ExpressionNodeNotConfigurableOperatorException(string propertyName, string expression);
    public ExpressionNodeNotConfigurableOperatorException(string message, Exception innerException);
    private ExpressionNodeNotConfigurableOperatorException(SerializationInfo info, StreamingContext context);
    public string get_PropertyName();
    public string get_Expression();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
}
public class Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException : DmfException {
    private ReaderActionType actionType;
    private string typeExpected;
    private string nameExpected;
    private string typeRead;
    private string nameRead;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public ReaderActionType ActionType { get; }
    public string TypeExpected { get; }
    public string NameExpected { get; }
    public string TypeRead { get; }
    public string NameRead { get; }
    public ExpressionSerializationException(string message);
    public ExpressionSerializationException(string message, Exception innerException);
    private ExpressionSerializationException(SerializationInfo info, StreamingContext context);
    public ExpressionSerializationException(string nameRead, string nameExpected);
    public ExpressionSerializationException(string typeRead, string nameRead, string typeExpected, string nameExpected);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    public ReaderActionType get_ActionType();
    public string get_TypeExpected();
    public string get_NameExpected();
    public string get_TypeRead();
    public string get_NameRead();
}
public class Microsoft.SqlServer.Management.Dmf.ExpressionTypeMistmatchException : DmfException {
    private string typeLeft;
    private string typeRight;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string TypeLeft { get; }
    public string TypeRight { get; }
    public ExpressionTypeMistmatchException(string message);
    public ExpressionTypeMistmatchException(string message, Exception innerException);
    public ExpressionTypeMistmatchException(string typeLeft, string typeRight);
    private ExpressionTypeMistmatchException(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    protected virtual void Init();
    public string get_TypeLeft();
    public string get_TypeRight();
}
public class Microsoft.SqlServer.Management.Dmf.FailedOperationException : DmfException {
    private string operation;
    private string failedObjectName;
    private string failedObjectType;
    public string Operation { get; public set; }
    public string FailedObjectName { get; public set; }
    public string FailedObjectType { get; public set; }
    public string Message { get; }
    public DmfExceptionType DmfExceptionType { get; }
    public FailedOperationException(string message);
    public FailedOperationException(string message, Exception innerException);
    private FailedOperationException(SerializationInfo info, StreamingContext context);
    public FailedOperationException(string operation, string failedObjectName, string failedObjectType, Exception innerException);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_Operation();
    public void set_Operation(string value);
    public string get_FailedObjectName();
    public void set_FailedObjectName(string value);
    public string get_FailedObjectType();
    public void set_FailedObjectType(string value);
    public virtual string get_Message();
    public virtual DmfExceptionType get_DmfExceptionType();
}
public class Microsoft.SqlServer.Management.Dmf.FunctionBadDatePartException : DmfException {
    public DmfExceptionType DmfExceptionType { get; }
    public FunctionBadDatePartException(string message, Exception innerException);
    public FunctionBadDatePartException(string message);
    private FunctionBadDatePartException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
}
public class Microsoft.SqlServer.Management.Dmf.FunctionNoServerException : DmfException {
    public DmfExceptionType DmfExceptionType { get; }
    public FunctionNoServerException(string message, Exception innerException);
    public FunctionNoServerException(string message);
    private FunctionNoServerException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
}
public class Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException : DmfException {
    private string functionName;
    private string targetType;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string FunctionName { get; }
    public string TargetType { get; }
    public FunctionNotASmoObjectException(string message);
    public FunctionNotASmoObjectException(string message, Exception innerException);
    public FunctionNotASmoObjectException(string functionName, string targetType);
    private FunctionNotASmoObjectException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    protected virtual void Init();
    public string get_FunctionName();
    public string get_TargetType();
}
public class Microsoft.SqlServer.Management.Dmf.FunctionTooManyColumnsException : DmfException {
    public DmfExceptionType DmfExceptionType { get; }
    public FunctionTooManyColumnsException(string message, Exception innerException);
    public FunctionTooManyColumnsException(string message);
    private FunctionTooManyColumnsException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
}
public class Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException : DmfException {
    private string functionName;
    private int receivedCount;
    private int expectedCount;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string FunctionName { get; }
    public int ReceivedCount { get; }
    public int ExpectedCount { get; }
    public FunctionWrongArgumentsNumberException(string message);
    public FunctionWrongArgumentsNumberException(string message, Exception innerException);
    public FunctionWrongArgumentsNumberException(string functionName, int receivedCount, int expectedCount);
    private FunctionWrongArgumentsNumberException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    protected virtual void Init();
    public string get_FunctionName();
    public int get_ReceivedCount();
    public int get_ExpectedCount();
}
public class Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException : DmfException {
    private string functionName;
    private string receivedType;
    private string expectedType;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string FunctionName { get; }
    public string ReceivedType { get; }
    public string ExpectedType { get; }
    public FunctionWrongArgumentTypeException(string message);
    public FunctionWrongArgumentTypeException(string message, Exception innerException);
    public FunctionWrongArgumentTypeException(string functionName, string receivedType, string expectedType);
    private FunctionWrongArgumentTypeException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    protected virtual void Init();
    public string get_FunctionName();
    public string get_ReceivedType();
    public string get_ExpectedType();
}
public class Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException : DmfException {
    private string functionName;
    private string receivedType;
    private string expectedType;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string FunctionName { get; }
    public string ReceivedType { get; }
    public string ExpectedType { get; }
    public FunctionWrongReturnTypeException(string message);
    public FunctionWrongReturnTypeException(string message, Exception innerException);
    public FunctionWrongReturnTypeException(string functionName, string receivedType, string expectedType);
    private FunctionWrongReturnTypeException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    protected virtual void Init();
    public string get_FunctionName();
    public string get_ReceivedType();
    public string get_ExpectedType();
}
public enum Microsoft.SqlServer.Management.Dmf.ImportPolicyEnabledState : Enum {
    public int value__;
    public static ImportPolicyEnabledState Unchanged;
    public static ImportPolicyEnabledState Enable;
    public static ImportPolicyEnabledState Disable;
}
public class Microsoft.SqlServer.Management.Dmf.InvalidInOperatorException : DmfException {
    private string opType;
    private string operatorTypeValue;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string OperatorType { get; public set; }
    public InvalidInOperatorException(string message, Exception innerException);
    public InvalidInOperatorException(string opType);
    private InvalidInOperatorException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    public string get_OperatorType();
    public void set_OperatorType(string value);
}
public class Microsoft.SqlServer.Management.Dmf.InvalidOperandException : DmfException {
    private string nodeType;
    private string operand;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string NodeType { get; }
    public string Type { get; }
    public InvalidOperandException(string message);
    public InvalidOperandException(string message, Exception innerException);
    public InvalidOperandException(string nodeType, string operand);
    private InvalidOperandException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    protected virtual void Init();
    public string get_NodeType();
    public string get_Type();
}
public class Microsoft.SqlServer.Management.Dmf.MissingJobScheduleException : DmfException {
    public DmfExceptionType DmfExceptionType { get; }
    public MissingJobScheduleException(string message);
    public MissingJobScheduleException(string message, Exception innerException);
    private MissingJobScheduleException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
}
public class Microsoft.SqlServer.Management.Dmf.MissingObjectException : DmfException {
    private string objectType;
    private string objectName;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string ObjectType { get; }
    public string ObjectName { get; }
    public MissingObjectException(string message);
    public MissingObjectException(string message, Exception innerException);
    public MissingObjectException(string objectType, string objectName);
    private MissingObjectException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    protected virtual void Init();
    public virtual string get_Message();
    public string get_ObjectType();
    public string get_ObjectName();
}
public class Microsoft.SqlServer.Management.Dmf.MissingPropertyException : DmfException {
    private string propertyName;
    public string PropertyName { get; internal set; }
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public MissingPropertyException(string propertyName);
    public MissingPropertyException(string message, Exception innerException);
    private MissingPropertyException(SerializationInfo info, StreamingContext context);
    internal void set_PropertyName(string value);
    public string get_PropertyName();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
}
public class Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException : DmfException {
    private string typeName;
    private string facet;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string TypeName { get; }
    public string Facet { get; }
    public MissingTypeFacetAssociationException(string message);
    public MissingTypeFacetAssociationException(string message, Exception innerException);
    private MissingTypeFacetAssociationException(SerializationInfo info, StreamingContext context);
    public MissingTypeFacetAssociationException(string typeName, string facet);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    public string get_TypeName();
    public string get_Facet();
}
public class Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException : DmfException {
    private string propertyName;
    public string PropertyName { get; internal set; }
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public NonConfigurableReadOnlyPropertyException(string propertyName);
    public NonConfigurableReadOnlyPropertyException(string message, Exception innerException);
    public NonConfigurableReadOnlyPropertyException(string message, string propertyName, Exception innerException);
    private NonConfigurableReadOnlyPropertyException(SerializationInfo info, StreamingContext context);
    internal void set_PropertyName(string value);
    public string get_PropertyName();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
}
public class Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException : DmfException {
    private string propertyName;
    public string PropertyName { get; internal set; }
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public NonRetrievablePropertyException(string propertyName);
    public NonRetrievablePropertyException(string propertyName, Exception innerException);
    private NonRetrievablePropertyException(SerializationInfo info, StreamingContext context);
    internal void set_PropertyName(string value);
    public string get_PropertyName();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
}
public class Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException : DmfException {
    private string objectSetName;
    public string Message { get; }
    public DmfExceptionType DmfExceptionType { get; }
    public string ObjectSetName { get; }
    public NoTargetSetEnabledException(string objectSetName);
    public NoTargetSetEnabledException(string message, Exception innerException);
    private NoTargetSetEnabledException(SerializationInfo info, StreamingContext context);
    public virtual string get_Message();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public string get_ObjectSetName();
}
public class Microsoft.SqlServer.Management.Dmf.NullFacetException : DmfException {
    private string facet;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string Facet { get; }
    public NullFacetException(string facet);
    public NullFacetException(string message, Exception innerException);
    private NullFacetException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    public string get_Facet();
}
public class Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException : DmfException {
    private string objectType;
    private string objectName;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string ObjectType { get; }
    public string ObjectName { get; }
    public ObjectAlreadyExistsException(string message);
    public ObjectAlreadyExistsException(string message, Exception innerException);
    public ObjectAlreadyExistsException(string objectType, string objectName);
    private ObjectAlreadyExistsException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    protected virtual void Init();
    public virtual string get_Message();
    public string get_ObjectType();
    public string get_ObjectName();
}
public class Microsoft.SqlServer.Management.Dmf.ObjectValidationException : DmfException {
    private string objectType;
    private string objectName;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string ObjectType { get; }
    public string ObjectName { get; }
    public ObjectValidationException(string message);
    public ObjectValidationException(string message, Exception innerException);
    public ObjectValidationException(string objectType, string objectName, Exception innerException);
    public ObjectValidationException(string objectType, string objectName);
    private ObjectValidationException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    protected virtual void Init();
    public virtual string get_Message();
    public string get_ObjectType();
    public string get_ObjectName();
}
public class Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException : DmfException {
    private string operatorName;
    private string type;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string Operator { get; }
    public string Type { get; }
    public OperatorNotApplicableException(string message);
    public OperatorNotApplicableException(string message, Exception innerException);
    public OperatorNotApplicableException(string operatorName, string typeName);
    private OperatorNotApplicableException(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    protected virtual void Init();
    public string get_Operator();
    public string get_Type();
}
[FlagsAttribute]
public enum Microsoft.SqlServer.Management.Dmf.PolicyEffectiveState : Enum {
    public int value__;
    public static PolicyEffectiveState None;
    public static PolicyEffectiveState Enabled;
    public static PolicyEffectiveState InFilter;
    public static PolicyEffectiveState InCategory;
}
public class Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException : DmfException {
    public DmfExceptionType DmfExceptionType { get; }
    public PolicyEvaluationException(string message, Exception innerException);
    public PolicyEvaluationException(string message);
    private PolicyEvaluationException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
}
public enum Microsoft.SqlServer.Management.Dmf.PostConfigurationAction : Enum {
    public int value__;
    public static PostConfigurationAction None;
    public static PostConfigurationAction RestartService;
}
[AttributeUsageAttribute("32767")]
public class Microsoft.SqlServer.Management.Dmf.PostConfigurationActionAttribute : Attribute {
    private PostConfigurationAction postConfigurationAction;
    public PostConfigurationAction PostConfigurationAction { get; }
    public PostConfigurationActionAttribute(PostConfigurationAction postConfigurationAction);
    public PostConfigurationAction get_PostConfigurationAction();
}
public class Microsoft.SqlServer.Management.Dmf.RestartPendingException : DmfException {
    public RestartPendingException(string message);
    public RestartPendingException(string message, Exception innerException);
    protected RestartPendingException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Microsoft.SqlServer.Management.Dmf.RestartPendingException`1 : RestartPendingException {
    private T configValue;
    private T runValue;
    private string propertyName;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public T ConfigValue { get; public set; }
    public T RunValue { get; public set; }
    public string PropertyName { get; }
    public RestartPendingException`1(string message);
    public RestartPendingException`1(string message, Exception innerException);
    public RestartPendingException`1(string propertyName, T configValue, T runValue);
    private RestartPendingException`1(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    protected virtual void Init();
    public T get_ConfigValue();
    public void set_ConfigValue(T value);
    public T get_RunValue();
    public void set_RunValue(T value);
    public string get_PropertyName();
}
public class Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException : DmfException {
    private string propertyName;
    private int maxLength;
    private int currentLength;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string PropertyName { get; }
    public int MaxLength { get; }
    public int CurrentLength { get; }
    public StringPropertyTooLongException(string message);
    public StringPropertyTooLongException(string message, Exception innerException);
    public StringPropertyTooLongException(string propertyName, int maxLength, int currentLength);
    private StringPropertyTooLongException(SerializationInfo info, StreamingContext context);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    protected virtual void Init();
    public string get_PropertyName();
    public int get_MaxLength();
    public int get_CurrentLength();
}
public class Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException : DmfException {
    private string objectSetName;
    private string facetName;
    public string Message { get; }
    public DmfExceptionType DmfExceptionType { get; }
    public string ObjectSetName { get; }
    public string FacetName { get; }
    public TargetSetCountMismatchException(string message);
    public TargetSetCountMismatchException(string message, Exception innerException);
    public TargetSetCountMismatchException(string objectSetName, string facetName);
    private TargetSetCountMismatchException(SerializationInfo info, StreamingContext context);
    public virtual string get_Message();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public string get_ObjectSetName();
    public string get_FacetName();
}
public class Microsoft.SqlServer.Management.Dmf.TypeConversionException : DmfException {
    private string inputString;
    private string typeName;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string InputString { get; }
    public string TypeName { get; }
    public TypeConversionException(string message);
    public TypeConversionException(string message, Exception innerException);
    private TypeConversionException(SerializationInfo info, StreamingContext context);
    public TypeConversionException(string inputString, string typeName, Exception innerException);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    public string get_InputString();
    public string get_TypeName();
}
public class Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException : DmfException {
    private string typeName;
    private string host;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string TypeName { get; }
    public string Host { get; }
    public UnsupportedObjectTypeException(string message);
    public UnsupportedObjectTypeException(string message, Exception innerException);
    private UnsupportedObjectTypeException(SerializationInfo info, StreamingContext context);
    public UnsupportedObjectTypeException(string typeName, string host);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    public string get_TypeName();
    public string get_Host();
}
public class Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException : DmfException {
    private string targetSetSkeleton;
    private string objectSetName;
    private string facetName;
    public string Message { get; }
    public DmfExceptionType DmfExceptionType { get; }
    public string TargetSetSkeleton { get; }
    public string ObjectSetName { get; }
    public string FacetName { get; }
    public UnsupportedTargetSetForFacetException(string message);
    public UnsupportedTargetSetForFacetException(string message, Exception innerException);
    public UnsupportedTargetSetForFacetException(string targetSetSkeleton, string objectSetName, string facetName);
    private UnsupportedTargetSetForFacetException(SerializationInfo info, StreamingContext context);
    public virtual string get_Message();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual DmfExceptionType get_DmfExceptionType();
    public string get_TargetSetSkeleton();
    public string get_ObjectSetName();
    public string get_FacetName();
}
public class Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException : DmfException {
    private string node;
    private string typeName;
    public DmfExceptionType DmfExceptionType { get; }
    public string Message { get; }
    public string NodeType { get; }
    public string TypeName { get; }
    public UnsupportedTypeException(string message);
    public UnsupportedTypeException(string message, Exception innerException);
    private UnsupportedTypeException(SerializationInfo info, StreamingContext context);
    public UnsupportedTypeException(string node, string typeName);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    protected virtual void Init();
    public virtual DmfExceptionType get_DmfExceptionType();
    public virtual string get_Message();
    public string get_NodeType();
    public string get_TypeName();
}
[AttributeUsageAttribute("32767")]
public class Microsoft.SqlServer.Management.Facets.EvaluationModeAttribute : Attribute {
    private AutomatedPolicyEvaluationMode evaluationModes;
    public AutomatedPolicyEvaluationMode EvaluationModes { get; }
    public AutomatedPolicyEvaluationMode AutomatedPolicyEvaluationMode { get; public set; }
    public EvaluationModeAttribute(AutomatedPolicyEvaluationMode evaluationModes);
    public AutomatedPolicyEvaluationMode get_EvaluationModes();
    public AutomatedPolicyEvaluationMode get_AutomatedPolicyEvaluationMode();
    public void set_AutomatedPolicyEvaluationMode(AutomatedPolicyEvaluationMode value);
}
public interface Microsoft.SqlServer.Management.Facets.IDmfAdapter {
}
public interface Microsoft.SqlServer.Management.Facets.IDmfObjectInfo {
    public string ObjectPath { get; }
    public string RootPath { get; }
    public abstract virtual string get_ObjectPath();
    public abstract virtual string get_RootPath();
}
[AttributeUsageAttribute("32767")]
public class Microsoft.SqlServer.Management.Facets.PropertySourceSubObjectTypeAttribute : Attribute {
    private Type type;
    public Type SourceType { get; }
    public PropertySourceSubObjectTypeAttribute(Type sourceType);
    public Type get_SourceType();
}
[AttributeUsageAttribute("32767")]
public class Microsoft.SqlServer.Management.Facets.StateChangeEventAttribute : Attribute {
    private string eventName;
    private string targetType;
    private string targetTypeAlias;
    public string EventName { get; }
    public string TargetType { get; }
    public string TargetTypeAlias { get; }
    public StateChangeEventAttribute(string eventName, string targetType);
    public StateChangeEventAttribute(string eventName, string targetType, string targetTypeAlias);
    public string get_EventName();
    public string get_TargetType();
    public string get_TargetTypeAlias();
}
