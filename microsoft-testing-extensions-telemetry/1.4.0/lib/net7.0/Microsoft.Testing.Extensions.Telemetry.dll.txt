[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[ExtensionAttribute]
public static class Microsoft.Testing.Extensions.AppInsightsTelemetryProviderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void AddAppInsightsTelemetryProvider(ITestApplicationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Testing.Extensions.Telemetry.AppInsightsProvider : object {
    public static string SessionIdEnvVar;
    private static string CurrentReporterId;
    private string _currentSessionId;
    private bool _isCi;
    private IEnvironment _environment;
    private ITestApplicationCancellationTokenSource _testApplicationCancellationTokenSource;
    private ITask _task;
    private IClock _clock;
    private ITelemetryInformation _telemetryInformation;
    private ITelemetryClientFactory _telemetryClientFactory;
    private bool _isDevelopmentRepository;
    private ILogger`1<AppInsightsProvider> _logger;
    [NullableAttribute("2")]
private Task _telemetryTask;
    private CancellationTokenSource _flushTimeoutOrStop;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Channel`1<ValueTuple`2<string, IDictionary`2<string, object>>> _payloads;
    [NullableAttribute("2")]
private ITelemetryClient _client;
    private bool _isDisposed;
    public AppInsightsProvider(IEnvironment environment, ITestApplicationCancellationTokenSource testApplicationCancellationTokenSource, ITask task, ILoggerFactory loggerFactory, IClock clock, IConfiguration configuration, ITelemetryInformation telemetryInformation, ITelemetryClientFactory telemetryClientFactory, string sessionId);
    private static AppInsightsProvider();
    [AsyncStateMachineAttribute("Microsoft.Testing.Extensions.Telemetry.AppInsightsProvider/<IngestLoopAsync>d__18")]
private Task IngestLoopAsync();
    private static double ToUnixTimeNanoseconds(DateTimeOffset value);
    [AsyncStateMachineAttribute("Microsoft.Testing.Extensions.Telemetry.AppInsightsProvider/<LogEventAsync>d__20")]
public sealed virtual Task LogEventAsync(string eventName, IDictionary`2<string, object> paramsMap);
    [AsyncStateMachineAttribute("Microsoft.Testing.Extensions.Telemetry.AppInsightsProvider/<DisposeAsync>d__21")]
public sealed virtual ValueTask DisposeAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Testing.Extensions.Telemetry.AppInsightTelemetryClient : object {
    private static string InstrumentationKey;
    private static string TelemetryServiceEndpoint;
    private TelemetryConfiguration _config;
    private TelemetryClient _telemetryClient;
    public AppInsightTelemetryClient(string currentSessionId, string osVersion);
    public sealed virtual void TrackEvent(string eventName, Dictionary`2<string, string> properties, Dictionary`2<string, double> metrics);
}
internal class Microsoft.Testing.Extensions.Telemetry.AppInsightTelemetryClientFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual ITelemetryClient Create(string currentSessionId, string osVersion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Testing.Extensions.Telemetry.CIEnvironmentDetectorForTelemetry : object {
    private static String[] BooleanVariables;
    private static String[][] AllNotNullVariables;
    private static String[] IfNonNullVariables;
    private static CIEnvironmentDetectorForTelemetry();
    public static bool IsCIEnvironment();
}
[NullableContextAttribute("1")]
internal interface Microsoft.Testing.Extensions.Telemetry.ITelemetryClient {
    public abstract virtual void TrackEvent(string eventName, Dictionary`2<string, string> properties, Dictionary`2<string, double> metrics);
}
[NullableContextAttribute("1")]
internal interface Microsoft.Testing.Extensions.Telemetry.ITelemetryClientFactory {
    public abstract virtual ITelemetryClient Create(string currentSessionId, string osVersion);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.Testing.Extensions.Telemetry.Resources.ExtensionResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string AddAppInsightsTelemetryProviderInvalidBuilder { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_AddAppInsightsTelemetryProviderInvalidBuilder();
}
public static class Microsoft.Testing.Extensions.Telemetry.TestingPlatformBuilderHook : object {
    [NullableContextAttribute("1")]
public static void AddExtensions(ITestApplicationBuilder testApplicationBuilder, String[] _);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
