[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.CollectorDataEntry : object {
    private List`1<IDataAttachment> _attachments;
    private string _agentName;
    private string _agentDisplayName;
    private bool _isFromRemoteAgent;
    private Uri _uri;
    private string _collectorDisplayName;
    public IList`1<IDataAttachment> Attachments { get; }
    public CollectorDataEntry(Uri uri, string collectorDisplayName, string agentName, string agentDisplayName, bool isFromRemoteAgent, IList`1<IDataAttachment> attachments);
    public IList`1<IDataAttachment> get_Attachments();
    public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
    internal void AddAttachment(IDataAttachment attachment);
    internal CollectorDataEntry Clone(string resultsDirectory, bool useAbsolutePaths);
}
[NullableContextAttribute("1")]
internal interface Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.IDataAttachment {
    public string Description { get; }
    public abstract virtual string get_Description();
}
[NullableContextAttribute("1")]
internal interface Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.ITestAggregation {
    public Dictionary`2<Guid, TestLink> TestLinks { get; }
    public abstract virtual Dictionary`2<Guid, TestLink> get_TestLinks();
}
[NullableContextAttribute("1")]
internal interface Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.ITestElement {
    public TestId Id { get; }
    public string Name { get; public set; }
    public string Owner { get; public set; }
    public string Storage { get; public set; }
    public string Adapter { get; }
    public int Priority { get; public set; }
    public bool IsRunnable { get; }
    public TestExecId ExecutionId { get; public set; }
    public TestExecId ParentExecutionId { get; public set; }
    public TestListCategoryId CategoryId { get; public set; }
    public TestCategoryItemCollection TestCategories { get; }
    public WorkItemCollection WorkItems { get; public set; }
    public TestType TestType { get; }
    public abstract virtual TestId get_Id();
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Owner();
    public abstract virtual void set_Owner(string value);
    public abstract virtual string get_Storage();
    public abstract virtual void set_Storage(string value);
    public abstract virtual string get_Adapter();
    public abstract virtual int get_Priority();
    public abstract virtual void set_Priority(int value);
    public abstract virtual bool get_IsRunnable();
    public abstract virtual TestExecId get_ExecutionId();
    public abstract virtual void set_ExecutionId(TestExecId value);
    public abstract virtual TestExecId get_ParentExecutionId();
    public abstract virtual void set_ParentExecutionId(TestExecId value);
    public abstract virtual TestListCategoryId get_CategoryId();
    public abstract virtual void set_CategoryId(TestListCategoryId value);
    public abstract virtual TestCategoryItemCollection get_TestCategories();
    public abstract virtual WorkItemCollection get_WorkItems();
    public abstract virtual void set_WorkItems(WorkItemCollection value);
    public abstract virtual TestType get_TestType();
}
[NullableContextAttribute("1")]
internal interface Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.ITestResult {
    public TestResultId Id { get; }
    [NullableAttribute("2")]
public string ResultType { get; public set; }
    public string StdOut { get; public set; }
    public string StdErr { get; public set; }
    public string DebugTrace { get; public set; }
    public string TestResultsDirectory { get; }
    public string RelativeTestResultsDirectory { get; }
    public string ErrorMessage { get; public set; }
    public string ErrorStackTrace { get; public set; }
    public string ComputerName { get; }
    public String[] TextMessages { get; public set; }
    public int DataRowInfo { get; public set; }
    public DateTime StartTime { get; public set; }
    public DateTime EndTime { get; public set; }
    public TimeSpan Duration { get; public set; }
    public TestOutcome Outcome { get; public set; }
    public abstract virtual TestResultId get_Id();
    [NullableContextAttribute("2")]
public abstract virtual string get_ResultType();
    [NullableContextAttribute("2")]
public abstract virtual void set_ResultType(string value);
    public abstract virtual string get_StdOut();
    public abstract virtual void set_StdOut(string value);
    public abstract virtual string get_StdErr();
    public abstract virtual void set_StdErr(string value);
    public abstract virtual string get_DebugTrace();
    public abstract virtual void set_DebugTrace(string value);
    public abstract virtual string get_TestResultsDirectory();
    public abstract virtual string get_RelativeTestResultsDirectory();
    public abstract virtual string get_ErrorMessage();
    public abstract virtual void set_ErrorMessage(string value);
    public abstract virtual string get_ErrorStackTrace();
    public abstract virtual void set_ErrorStackTrace(string value);
    public abstract virtual string get_ComputerName();
    public abstract virtual String[] get_TextMessages();
    public abstract virtual void set_TextMessages(String[] value);
    public abstract virtual int get_DataRowInfo();
    public abstract virtual void set_DataRowInfo(int value);
    public abstract virtual DateTime get_StartTime();
    public abstract virtual void set_StartTime(DateTime value);
    public abstract virtual DateTime get_EndTime();
    public abstract virtual void set_EndTime(DateTime value);
    public abstract virtual TimeSpan get_Duration();
    public abstract virtual void set_Duration(TimeSpan value);
    public abstract virtual TestOutcome get_Outcome();
    public abstract virtual void set_Outcome(TestOutcome value);
}
[NullableContextAttribute("1")]
internal interface Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.ITestResultAggregation {
    public List`1<ITestResult> InnerResults { get; }
    public abstract virtual List`1<ITestResult> get_InnerResults();
}
[NullableContextAttribute("1")]
internal interface Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.IXmlTestStore {
    public abstract virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.OrderedTestElement : TestElementAggregation {
    private string Microsoft.TestPlatform.Extensions.TrxLogger.XML.IXmlTestStoreCustom.ElementName { get; }
    [NullableAttribute("2")]
private string Microsoft.TestPlatform.Extensions.TrxLogger.XML.IXmlTestStoreCustom.NamespaceUri { get; }
    public TestType TestType { get; }
    public OrderedTestElement(Guid id, string name, string adapter);
    private sealed virtual override string Microsoft.TestPlatform.Extensions.TrxLogger.XML.IXmlTestStoreCustom.get_ElementName();
    [NullableContextAttribute("2")]
private sealed virtual override string Microsoft.TestPlatform.Extensions.TrxLogger.XML.IXmlTestStoreCustom.get_NamespaceUri();
    public virtual TestType get_TestType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.RunInfo : object {
    [StoreXmlSimpleFieldAttribute("Text", "Mono.Cecil.CustomAttributeArgument")]
private string _text;
    [NullableAttribute("2")]
private Exception _exception;
    [StoreXmlSimpleFieldAttribute("@computerName", "Mono.Cecil.CustomAttributeArgument")]
private string _computer;
    [StoreXmlSimpleFieldAttribute("@outcome")]
private TestOutcome _outcome;
    [StoreXmlSimpleFieldAttribute("@timestamp")]
private DateTime _timestamp;
    public RunInfo(string textMessage, Exception ex, string computer, TestOutcome outcome);
    public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestCategoryItem : object {
    [StoreXmlSimpleFieldAttribute]
private string _category;
    public string TestCategory { get; }
    [NullableContextAttribute("2")]
public TestCategoryItem(string category);
    public string get_TestCategory();
    private static string StripIllegalChars(string category);
    [NullableContextAttribute("2")]
public virtual bool Equals(object other);
    public virtual int GetHashCode();
    public virtual string ToString();
    public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestCategoryItemCollection : EqtBaseCollection`1<TestCategoryItem> {
    public TestCategoryItemCollection(String[] items);
    public void Add(string item);
    public virtual void Add(TestCategoryItem item);
    public virtual string ToString();
    public String[] ToArray();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestElement : object {
    protected static int DefaultPriority;
    protected TestId _id;
    protected string _name;
    protected string _owner;
    protected string _storage;
    protected string _adapter;
    protected int _priority;
    protected bool _isRunnable;
    protected TestExecId _executionId;
    protected TestExecId _parentExecutionId;
    protected TestCategoryItemCollection _testCategories;
    protected WorkItemCollection _workItems;
    protected TestListCategoryId _catId;
    public TestId Id { get; }
    public string Name { get; public set; }
    public string Owner { get; public set; }
    public int Priority { get; public set; }
    public string Storage { get; public set; }
    public TestExecId ExecutionId { get; public set; }
    public TestExecId ParentExecutionId { get; public set; }
    public bool IsRunnable { get; }
    public TestListCategoryId CategoryId { get; public set; }
    public TestCategoryItemCollection TestCategories { get; public set; }
    public WorkItemCollection WorkItems { get; public set; }
    public string Adapter { get; }
    public TestType TestType { get; }
    public TestElement(Guid id, string name, string adapter);
    public sealed virtual TestId get_Id();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual string get_Owner();
    public sealed virtual void set_Owner(string value);
    public sealed virtual int get_Priority();
    public sealed virtual void set_Priority(int value);
    public sealed virtual string get_Storage();
    public sealed virtual void set_Storage(string value);
    public sealed virtual TestExecId get_ExecutionId();
    public sealed virtual void set_ExecutionId(TestExecId value);
    public sealed virtual TestExecId get_ParentExecutionId();
    public sealed virtual void set_ParentExecutionId(TestExecId value);
    public sealed virtual bool get_IsRunnable();
    public sealed virtual TestListCategoryId get_CategoryId();
    public sealed virtual void set_CategoryId(TestListCategoryId value);
    public sealed virtual TestCategoryItemCollection get_TestCategories();
    public void set_TestCategories(TestCategoryItemCollection value);
    public sealed virtual WorkItemCollection get_WorkItems();
    public sealed virtual void set_WorkItems(WorkItemCollection value);
    public sealed virtual string get_Adapter();
    public abstract virtual TestType get_TestType();
    public virtual string ToString();
    [NullableContextAttribute("2")]
public virtual bool Equals(object other);
    public virtual int GetHashCode();
    public virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestElementAggregation : TestElement {
    protected Dictionary`2<Guid, TestLink> _testLinks;
    public Dictionary`2<Guid, TestLink> TestLinks { get; }
    public TestElementAggregation(Guid id, string name, string adapter);
    public sealed virtual Dictionary`2<Guid, TestLink> get_TestLinks();
    public virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestEntry : object {
    private TestId _testId;
    private TestListCategoryId _categoryId;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<TestEntry> _testEntries;
    [CompilerGeneratedAttribute]
private Guid <ExecutionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ParentExecutionId>k__BackingField;
    public Guid ExecutionId { get; public set; }
    public Guid ParentExecutionId { get; public set; }
    public List`1<TestEntry> TestEntries { get; }
    public TestEntry(TestId testId, TestListCategoryId catId);
    [CompilerGeneratedAttribute]
public Guid get_ExecutionId();
    [CompilerGeneratedAttribute]
public void set_ExecutionId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ParentExecutionId();
    [CompilerGeneratedAttribute]
public void set_ParentExecutionId(Guid value);
    public List`1<TestEntry> get_TestEntries();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestExecId : object {
    [CompilerGeneratedAttribute]
private static TestExecId <Empty>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    public static TestExecId Empty { get; }
    public Guid Id { get; }
    public TestExecId(Guid id);
    private static TestExecId();
    [CompilerGeneratedAttribute]
public static TestExecId get_Empty();
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestId : object {
    internal static string IdLocationKey;
    private static string DefaultIdLocation;
    [CompilerGeneratedAttribute]
private static TestId <Empty>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    public static TestId Empty { get; }
    public Guid Id { get; }
    public TestId(Guid id);
    private static TestId();
    [CompilerGeneratedAttribute]
public static TestId get_Empty();
    [CompilerGeneratedAttribute]
public Guid get_Id();
    private sealed virtual override void Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.IXmlTestStore.Save(XmlElement element, XmlTestStoreParameters parameters);
    private static void GetIdLocation(XmlTestStoreParameters parameters, String& idLocation);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(TestId other);
    [NullableContextAttribute("2")]
private bool ValueEquals(TestId other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object other);
    public virtual int GetHashCode();
    [NullableContextAttribute("2")]
public static bool op_Equality(TestId left, TestId right);
    [NullableContextAttribute("2")]
public static bool op_Inequality(TestId left, TestId right);
    [NullableContextAttribute("2")]
public sealed virtual int CompareTo(TestId other);
    [NullableContextAttribute("2")]
public sealed virtual int CompareTo(object other);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestLink : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Storage>k__BackingField;
    public Guid Id { get; }
    public string Name { get; }
    public string Storage { get; }
    public TestLink(Guid id, string name, string storage);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Storage();
    [NullableContextAttribute("2")]
public virtual bool Equals(object other);
    public bool IsSame(TestLink other);
    public virtual int GetHashCode();
    public virtual string ToString();
    public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestListCategory : object {
    [NullableAttribute("2")]
private static TestListCategory s_uncategorizedResults;
    [NullableAttribute("2")]
private static TestListCategory s_allResults;
    private static object ReservedCategoryLock;
    [StoreXmlSimpleFieldAttribute("@name")]
private string _name;
    private TestListCategoryId _parentCategoryId;
    [CompilerGeneratedAttribute]
private TestListCategoryId <Id>k__BackingField;
    public static TestListCategory UncategorizedResults { get; }
    public static TestListCategory AllResults { get; }
    public TestListCategoryId Id { get; }
    public TestListCategoryId ParentCategoryId { get; public set; }
    public TestListCategory(string name, TestListCategoryId parentCategoryId);
    private TestListCategory(string name, TestListCategoryId id, TestListCategoryId parentId);
    private static TestListCategory();
    public static TestListCategory get_UncategorizedResults();
    public static TestListCategory get_AllResults();
    [CompilerGeneratedAttribute]
public TestListCategoryId get_Id();
    public TestListCategoryId get_ParentCategoryId();
    public void set_ParentCategoryId(TestListCategoryId value);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestListCategoryId : object {
    [CompilerGeneratedAttribute]
private static TestListCategoryId <Root>k__BackingField;
    [CompilerGeneratedAttribute]
private static TestListCategoryId <Uncategorized>k__BackingField;
    [CompilerGeneratedAttribute]
private static TestListCategoryId <Categories>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private static TestListCategoryId <AllItems>k__BackingField;
    public static TestListCategoryId Root { get; }
    public static TestListCategoryId Empty { get; }
    public static TestListCategoryId Uncategorized { get; }
    public static TestListCategoryId Categories { get; }
    public Guid Id { get; }
    public static TestListCategoryId AllItems { get; }
    public TestListCategoryId(Guid id);
    private static TestListCategoryId();
    [CompilerGeneratedAttribute]
public static TestListCategoryId get_Root();
    public static TestListCategoryId get_Empty();
    [CompilerGeneratedAttribute]
public static TestListCategoryId get_Uncategorized();
    [CompilerGeneratedAttribute]
public static TestListCategoryId get_Categories();
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public static TestListCategoryId get_AllItems();
    [NullableContextAttribute("2")]
public virtual bool Equals(object other);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestMethod : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    public string Name { get; }
    public string ClassName { get; }
    public bool IsValid { get; public set; }
    public TestMethod(string name, string className);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
internal enum Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestOutcome : Enum {
    public int value__;
    public static TestOutcome Error;
    public static TestOutcome Failed;
    public static TestOutcome Timeout;
    public static TestOutcome Aborted;
    public static TestOutcome Inconclusive;
    public static TestOutcome PassedButRunAborted;
    public static TestOutcome NotRunnable;
    public static TestOutcome NotExecuted;
    public static TestOutcome Disconnected;
    public static TestOutcome Warning;
    public static TestOutcome Passed;
    public static TestOutcome Completed;
    public static TestOutcome InProgress;
    public static TestOutcome Pending;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestResult : object {
    private string _resultName;
    [NullableAttribute("2")]
private string _stdOut;
    [NullableAttribute("2")]
private string _stdErr;
    [NullableAttribute("2")]
private string _debugTrace;
    private TimeSpan _duration;
    private TestType _testType;
    [NullableAttribute("2")]
private TestRun _testRun;
    [NullableAttribute("2")]
private TestResultErrorInfo _errorInfo;
    private TestListCategoryId _categoryId;
    private ArrayList _textMessages;
    private TrxFileHelper _trxFileHelper;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private SortedList`2<string, object> _resultFiles;
    private List`1<CollectorDataEntry> _collectorDataEntries;
    [CompilerGeneratedAttribute]
private DateTime <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ComputerName>k__BackingField;
    [CompilerGeneratedAttribute]
private TestOutcome <Outcome>k__BackingField;
    [CompilerGeneratedAttribute]
private TestResultId <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelativeTestResultsDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DataRowInfo>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ResultType>k__BackingField;
    public DateTime EndTime { get; public set; }
    public DateTime StartTime { get; public set; }
    public TimeSpan Duration { get; public set; }
    public string ComputerName { get; }
    public TestOutcome Outcome { get; public set; }
    public TestResultId Id { get; internal set; }
    public string ErrorMessage { get; public set; }
    public string ErrorStackTrace { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] TextMessages { get; public set; }
    public string StdOut { get; public set; }
    public string StdErr { get; public set; }
    public string DebugTrace { get; public set; }
    public string TestResultsDirectory { get; }
    public string RelativeTestResultsDirectory { get; }
    public int DataRowInfo { get; public set; }
    [NullableAttribute("2")]
public string ResultType { get; public set; }
    public TestResult(Guid runId, Guid testId, Guid executionId, Guid parentExecutionId, string resultName, string computerName, TestOutcome outcome, TestType testType, TestListCategoryId testCategoryId, TrxFileHelper trxFileHelper);
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_EndTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EndTime(DateTime value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StartTime(DateTime value);
    public sealed virtual TimeSpan get_Duration();
    public sealed virtual void set_Duration(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ComputerName();
    [CompilerGeneratedAttribute]
public sealed virtual TestOutcome get_Outcome();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Outcome(TestOutcome value);
    [CompilerGeneratedAttribute]
public sealed virtual TestResultId get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(TestResultId value);
    public sealed virtual string get_ErrorMessage();
    public sealed virtual void set_ErrorMessage(string value);
    public sealed virtual string get_ErrorStackTrace();
    public sealed virtual void set_ErrorStackTrace(string value);
    public sealed virtual String[] get_TextMessages();
    public sealed virtual void set_TextMessages(String[] value);
    public sealed virtual string get_StdOut();
    public sealed virtual void set_StdOut(string value);
    public sealed virtual string get_StdErr();
    public sealed virtual void set_StdErr(string value);
    public sealed virtual string get_DebugTrace();
    public sealed virtual void set_DebugTrace(string value);
    public sealed virtual string get_TestResultsDirectory();
    [CompilerGeneratedAttribute]
public sealed virtual string get_RelativeTestResultsDirectory();
    [CompilerGeneratedAttribute]
public sealed virtual int get_DataRowInfo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DataRowInfo(int value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_ResultType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_ResultType(string value);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public void AddTextMessage(string text);
    internal virtual void SetTestRun(TestRun testRun);
    internal void AddResultFiles(IEnumerable`1<string> resultFileList);
    internal void AddCollectorDataEntries(IEnumerable`1<CollectorDataEntry> collectorDataEntryList);
    public virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestResultAggregation : TestResult {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected List`1<ITestResult> _innerResults;
    public List`1<ITestResult> InnerResults { get; }
    public TestResultAggregation(Guid runId, Guid testId, Guid executionId, Guid parentExecutionId, string resultName, string computerName, TestOutcome outcome, TestType testType, TestListCategoryId testCategoryId, TrxFileHelper trxFileHelper);
    public sealed virtual List`1<ITestResult> get_InnerResults();
    public virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestResultErrorInfo : object {
    [StoreXmlSimpleFieldAttribute("Message", "Mono.Cecil.CustomAttributeArgument")]
private string _message;
    [StoreXmlSimpleFieldAttribute("StackTrace", "Mono.Cecil.CustomAttributeArgument")]
private string _stackTrace;
    public string Message { get; public set; }
    public string StackTrace { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    public string get_StackTrace();
    public void set_StackTrace(string value);
    [NullableContextAttribute("1")]
public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestResultId : object {
    private Guid _runId;
    [CompilerGeneratedAttribute]
private Guid <ExecutionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ParentExecutionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <TestId>k__BackingField;
    public Guid ExecutionId { get; }
    public Guid ParentExecutionId { get; }
    public Guid TestId { get; }
    public TestResultId(Guid runId, Guid executionId, Guid parentExecutionId, Guid testId);
    [CompilerGeneratedAttribute]
public Guid get_ExecutionId();
    [CompilerGeneratedAttribute]
public Guid get_ParentExecutionId();
    [CompilerGeneratedAttribute]
public Guid get_TestId();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestRun : object {
    [StoreXmlSimpleFieldAttribute("@id")]
private Guid _id;
    [StoreXmlSimpleFieldAttribute("@name")]
private string _name;
    [StoreXmlSimpleFieldAttribute("@runUser", "Mono.Cecil.CustomAttributeArgument")]
private string _runUser;
    [NullableAttribute("2")]
private TestRunConfiguration _runConfig;
    [StoreXmlSimpleFieldAttribute("Times/@creation")]
private DateTime _created;
    [StoreXmlSimpleFieldAttribute("Times/@queuing")]
private DateTime _queued;
    [StoreXmlSimpleFieldAttribute("Times/@start")]
private DateTime _started;
    [StoreXmlSimpleFieldAttribute("Times/@finish")]
private DateTime _finished;
    [NullableAttribute("2")]
internal TestRunConfiguration RunConfiguration { get; internal set; }
    internal DateTime Started { get; internal set; }
    internal DateTime Finished { get; internal set; }
    internal string Name { get; internal set; }
    internal Guid Id { get; }
    internal TestRun(Guid runId);
    [NullableContextAttribute("2")]
internal TestRunConfiguration get_RunConfiguration();
    [NullableContextAttribute("2")]
internal void set_RunConfiguration(TestRunConfiguration value);
    internal DateTime get_Started();
    internal void set_Started(DateTime value);
    internal DateTime get_Finished();
    internal void set_Finished(DateTime value);
    internal string get_Name();
    internal void set_Name(string value);
    internal Guid get_Id();
    internal string GetResultFilesDirectory(TestResult result);
    internal string GetResultsDirectory();
    private static string FormatDateTimeForRunName(DateTime timeStamp);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestRunConfiguration : object {
    internal static string DeploymentInDirectorySuffix;
    private TestRunConfigurationId _id;
    private TrxFileHelper _trxFileHelper;
    [StoreXmlSimpleFieldAttribute("@name")]
private string _name;
    private string _runDeploymentRoot;
    public string ElementName { get; }
    public string NamespaceUri { get; }
    public string RunDeploymentInDirectory { get; }
    internal string RunDeploymentRootDirectory { get; internal set; }
    internal TestRunConfiguration(string name, TrxFileHelper trxFileHelper);
    private static TestRunConfiguration();
    public sealed virtual string get_ElementName();
    public sealed virtual string get_NamespaceUri();
    public string get_RunDeploymentInDirectory();
    internal string get_RunDeploymentRootDirectory();
    internal void set_RunDeploymentRootDirectory(string value);
    public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestRunConfigurationId : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    public Guid Id { get; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestRunSummary : object {
    [StoreXmlSimpleFieldAttribute("Counters/@total")]
private int _totalTests;
    [StoreXmlSimpleFieldAttribute("Counters/@executed")]
private int _executedTests;
    [StoreXmlSimpleFieldAttribute("Counters/@passed")]
private int _passedTests;
    [StoreXmlSimpleFieldAttribute("Counters/@failed")]
private int _failedTests;
    [StoreXmlSimpleFieldAttribute("Counters/@error")]
private int _errorTests;
    [StoreXmlSimpleFieldAttribute("Counters/@timeout")]
private int _timeoutTests;
    [StoreXmlSimpleFieldAttribute("Counters/@aborted")]
private int _abortedTests;
    [StoreXmlSimpleFieldAttribute("Counters/@inconclusive")]
private int _inconclusiveTests;
    [StoreXmlSimpleFieldAttribute("Counters/@passedButRunAborted")]
private int _passedButRunAborted;
    [StoreXmlSimpleFieldAttribute("Counters/@notRunnable")]
private int _notRunnable;
    [StoreXmlSimpleFieldAttribute("Counters/@notExecuted")]
private int _notExecuted;
    [StoreXmlSimpleFieldAttribute("Counters/@disconnected")]
private int _disconnected;
    [StoreXmlSimpleFieldAttribute("Counters/@warning")]
private int _warning;
    [StoreXmlSimpleFieldAttribute("Counters/@completed")]
private int _completed;
    [StoreXmlSimpleFieldAttribute("Counters/@inProgress")]
private int _inProgress;
    [StoreXmlSimpleFieldAttribute("Counters/@pending")]
private int _pending;
    [StoreXmlSimpleFieldAttribute("@outcome")]
private TestOutcome _outcome;
    [StoreXmlSimpleFieldAttribute("Output/StdOut", "Mono.Cecil.CustomAttributeArgument")]
private string _stdOut;
    private List`1<RunInfo> _runLevelErrorsAndWarnings;
    private List`1<CollectorDataEntry> _collectorDataEntries;
    private IList`1<string> _resultFiles;
    public TestRunSummary(int total, int executed, int pass, int fail, TestOutcome outcome, List`1<RunInfo> runMessages, string stdOut, IList`1<string> resultFiles, List`1<CollectorDataEntry> dataCollectors);
    public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.TestType : object {
    [StoreXmlSimpleFieldAttribute(".")]
private Guid _typeId;
    public Guid Id { get; }
    public TestType(Guid id);
    public Guid get_Id();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.UnitTestElement : TestElement {
    [NullableAttribute("2")]
private string _codeBase;
    [CompilerGeneratedAttribute]
private TestMethod <TestMethod>k__BackingField;
    private string Microsoft.TestPlatform.Extensions.TrxLogger.XML.IXmlTestStoreCustom.ElementName { get; }
    [NullableAttribute("2")]
private string Microsoft.TestPlatform.Extensions.TrxLogger.XML.IXmlTestStoreCustom.NamespaceUri { get; }
    public TestType TestType { get; }
    public TestMethod TestMethod { get; }
    [NullableAttribute("2")]
public string CodeBase { get; public set; }
    public UnitTestElement(Guid id, string name, string adapter, TestMethod testMethod);
    private sealed virtual override string Microsoft.TestPlatform.Extensions.TrxLogger.XML.IXmlTestStoreCustom.get_ElementName();
    [NullableContextAttribute("2")]
private sealed virtual override string Microsoft.TestPlatform.Extensions.TrxLogger.XML.IXmlTestStoreCustom.get_NamespaceUri();
    public virtual TestType get_TestType();
    [CompilerGeneratedAttribute]
public TestMethod get_TestMethod();
    [NullableContextAttribute("2")]
public string get_CodeBase();
    [NullableContextAttribute("2")]
public void set_CodeBase(string value);
    public virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.UnitTestResult : TestResultAggregation {
    [NullableContextAttribute("1")]
public UnitTestResult(Guid runId, Guid testId, Guid executionId, Guid parentExecutionId, string resultName, string computerName, TestOutcome outcome, TestType testType, TestListCategoryId testCategoryId, TrxFileHelper trxFileHelper);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.UriDataAttachment : object {
    private TrxFileHelper _trxFileHelper;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    public string Description { get; private set; }
    public Uri Uri { get; private set; }
    public UriDataAttachment(string description, Uri uri, TrxFileHelper trxFileHelper);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
private void set_Uri(Uri value);
    public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
    internal UriDataAttachment Clone(string baseDirectory, bool useAbsoluteUri);
}
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.WorkItem : object {
    [StoreXmlFieldAttribute]
private int _id;
    public int Id { get; }
    public WorkItem(int workitemId);
    public int get_Id();
    [NullableContextAttribute("2")]
public virtual bool Equals(object other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public sealed virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.WorkItemCollection : EqtBaseCollection`1<WorkItem> {
    public WorkItemCollection(Int32[] items);
    public void Add(int item);
    public virtual void Add(WorkItem item);
    public virtual string ToString();
    public Int32[] ToArray();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.ObjectModel.XmlTestStoreParameters : Dictionary`2<string, object> {
    public static XmlTestStoreParameters GetParameters();
    public bool Contains(string parameter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.TestPlatform.Extensions.TrxLogger.Utility.Constants : object {
    public static string ExtensionUri;
    public static string FriendlyName;
    public static string DataCollectorUriPrefix;
    public static string LogFileNameKey;
    public static string LogFilePrefixKey;
    public static string OrderedTestElementName;
    public static string UnitTestElementName;
    public static string ExecutionIdPropertyIdentifier;
    public static string ParentExecutionIdPropertyIdentifier;
    public static string TestTypePropertyIdentifier;
    public static string ParentDataDrivenResultType;
    public static string InnerDataDrivenResultType;
    public static string TmiTestIdPropertyIdentifier;
    public static string MstestAdapterString;
    public static Guid OrderedTestTypeGuid;
    public static TestType OrderedTestType;
    public static Guid UnitTestTypeGuid;
    public static TestType UnitTestType;
    public static TestProperty ExecutionIdProperty;
    public static TestProperty ParentExecIdProperty;
    public static TestProperty TestTypeProperty;
    private static Constants();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.Utility.Converter : object {
    private TrxFileHelper _trxFileHelper;
    private IFileHelper _fileHelper;
    public Converter(IFileHelper fileHelper, TrxFileHelper trxFileHelper);
    public static ITestElement ToTestElement(Guid testId, Guid executionId, Guid parentExecutionId, string testName, TestType testType, TestCase rockSteadyTestCase);
    public ITestResult ToTestResult(Guid testId, Guid executionId, Guid parentExecutionId, string testName, string trxFileDirectory, TestType testType, TestListCategoryId testCategoryId, TestOutcome testOutcome, TestRun testRun, TestResult rockSteadyTestResult);
    public static TestOutcome ToOutcome(TestOutcome rockSteadyOutcome);
    public List`1<CollectorDataEntry> ToCollectionEntries(IEnumerable`1<AttachmentSet> attachmentSets, TestRun testRun, string trxFileDirectory);
    public IList`1<string> ToResultFiles(IEnumerable`1<AttachmentSet> attachmentSets, TestRun testRun, string trxFileDirectory, List`1<string> errorMessages);
    private static void UpdateResultMessages(TestResult unitTestResult, TestResult testResult);
    public static List`1<string> GetCustomPropertyValueFromTestCase(TestCase testCase, string categoryId);
    public static Guid GetTestId(TestCase rockSteadyTestCase);
    public Guid GetParentExecutionId(TestResult testResult);
    public static Guid GetExecutionId(TestResult testResult);
    public static TestType GetTestType(TestResult testResult);
    private void UpdateTestResultAttachments(TestResult rockSteadyTestResult, TestResult testResult, TestRun testRun, string trxFileDirectory, bool addAttachments);
    private CollectorDataEntry ToCollectorEntry(AttachmentSet attachmentSet, Guid testResultExecutionId, TestRun testRun, string trxFileDirectory);
    private IList`1<string> ToResultFiles(AttachmentSet attachmentSet, Guid testResultExecutionId, TestRun testRun, string trxFileDirectory);
    private void CopyFile(string sourceFile, string targetFile);
    private static int GetPriority(TestCase rockSteadyTestCase);
    private static string GetOwner(TestCase rockSteadyTestCase);
    private static string GetTestClassName(string testName, string fullyQualifiedName, string source);
    private static TestElement CreateTestElement(Guid testId, string name, string fullyQualifiedName, string adapter, string source, TestType testType);
    private TestResult CreateTestResult(Guid runId, Guid testId, Guid executionId, Guid parentExecutionId, string resultName, TestOutcome outcome, TestType testType, TestListCategoryId testCategoryId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.Utility.EqtAssert : object {
    public static void IsTrue(bool expression, string comment);
    public static void ParameterNotNull(object parameter, string parameterName);
    public static void StringNotNullOrEmpty(string parameter, string parameterName);
    [NullableContextAttribute("2")]
[ConditionalAttribute("DEBUG")]
private static void AssertParameterNameNotNullOrEmpty(string parameterName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.Utility.EqtBaseCollection`1 : object {
    protected Hashtable _container;
    [NullableAttribute("2")]
private string _childElementName;
    public int Count { get; }
    public bool IsReadOnly { get; }
    private string ChildElementName { get; }
    protected EqtBaseCollection`1(IEqualityComparer comparer);
    protected EqtBaseCollection`1(EqtBaseCollection`1<T> other);
    public virtual void Add(T item);
    public virtual bool Contains(T item);
    public virtual bool Remove(T item);
    public virtual void Clear();
    public virtual object Clone();
    public virtual int get_Count();
    public virtual void CopyTo(T[] array, int index);
    public sealed virtual bool get_IsReadOnly();
    public virtual IEnumerator GetEnumerator();
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
    public virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
    private string get_ChildElementName();
}
internal class Microsoft.TestPlatform.Extensions.TrxLogger.Utility.TestRunDirectories : object {
    [NullableContextAttribute("1")]
public static string GetRelativeTestResultsDirectory(Guid testExecutionId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.Utility.TrxFileHelper : object {
    private static string RelativeDirectorySeparator;
    private static HashSet`1<char> InvalidFileNameChars;
    private static Regex ReservedFileNamesRegex;
    private Func`1<DateTime> _timeProvider;
    private static TrxFileHelper();
    public TrxFileHelper(Func`1<DateTime> timeProvider);
    public static string ReplaceInvalidFileNameChars(string fileName);
    public static string GetNextIterationFileName(string parentDirectoryName, string originalFileName, bool checkMatchingDirectory);
    public string GetNextTimestampFileName(string directoryName, string fileName, string timestampFormat);
    public static string MakePathRelative(string path, string basePath);
    private static bool IsReservedFileName(string fileName);
    private static string GetNextIterationNameHelper(string baseDirectoryName, string originalName, IterationHelper helper);
}
[NullableContextAttribute("1")]
internal interface Microsoft.TestPlatform.Extensions.TrxLogger.XML.IXmlTestStoreCustom {
    public string ElementName { get; }
    [NullableAttribute("2")]
public string NamespaceUri { get; }
    public abstract virtual string get_ElementName();
    [NullableContextAttribute("2")]
public abstract virtual string get_NamespaceUri();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("256")]
internal abstract class Microsoft.TestPlatform.Extensions.TrxLogger.XML.StoreXmlAttribute : Attribute {
    public string Location;
    public StoreXmlAttribute(string location);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("256")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.XML.StoreXmlFieldAttribute : StoreXmlAttribute {
    public bool CreateDefaultInstance;
    internal static bool CreateDefaultInstanceDefault;
    public StoreXmlFieldAttribute(string location, bool createDefaultInstance);
    public StoreXmlFieldAttribute(string location);
    private static StoreXmlFieldAttribute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("256")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.XML.StoreXmlSimpleFieldAttribute : StoreXmlAttribute {
    [NullableAttribute("2")]
public object DefaultValue;
    public StoreXmlSimpleFieldAttribute(string location);
    public StoreXmlSimpleFieldAttribute(object defaultValue);
    public StoreXmlSimpleFieldAttribute(string location, object defaultValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.XML.XmlFilePersistence : XmlPersistence {
    public static string RootObjectType;
    public static string DirectoryPath;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.TrxLogger.XML.XmlPersistence : object {
    private static string DateTimePersistenceFormat;
    private static string DateTimeUtcPersistenceFormat;
    private static string DefaultNamespacePrefixEquivalent;
    private static string EmptyGuidString;
    private static Type BoolType;
    private static Type ByteArrayType;
    private static Type DateTimeType;
    private static Dictionary`2<Type, IEnumerable`1<FieldPersistenceInfo>> TypeToPersistenceInfoCache;
    private static Dictionary`2<string, string> QueryCache;
    private string _prefix;
    private string _namespaceUri;
    private XmlNamespaceManager _xmlNamespaceManager;
    private static XmlPersistence();
    public XmlElement CreateRootElement(string name);
    private XmlElement CreateRootElement(string name, string namespaceUri);
    public void SaveSingleFields(XmlElement parentXml, object instance, XmlTestStoreParameters parameters);
    [NullableContextAttribute("2")]
public void SaveSingleFields(XmlElement parentXml, object instance, Type requestedType, XmlTestStoreParameters parameters);
    [NullableContextAttribute("2")]
public void SaveObject(object objectToSave, XmlElement parentXml, string location, XmlTestStoreParameters parameters);
    public static void SaveObject(object objectToSave, XmlNode nodeToSaveAt, XmlTestStoreParameters parameters);
    [NullableContextAttribute("2")]
public static void SaveObject(object objectToSave, XmlNode nodeToSaveAt, XmlTestStoreParameters parameters, object defaultValue);
    public void SaveSimpleField(XmlElement xml, string location, object value, object defaultValue);
    public void SaveGuid(XmlElement xml, string location, Guid guid);
    public void SaveHashtable(Hashtable ht, XmlElement element, string location, string keyLocation, string valueLocation, string itemElementName, XmlTestStoreParameters parameters);
    public void SaveStringDictionary(StringDictionary dict, XmlElement element, string location, string keyLocation, string valueLocation, string itemElementName, XmlTestStoreParameters parameters);
    public void SaveIEnumerable(IEnumerable list, XmlElement element, string listXmlElement, string itemLocation, string itemElementName, XmlTestStoreParameters parameters);
    public void SaveList(IList`1<V> list, XmlElement element, string listXmlElement, string itemLocation, string itemElementName, XmlTestStoreParameters parameters);
    public void SaveCounters(XmlElement xml, string location, Int32[] counters);
    internal static void SaveUsingReflection(XmlElement element, object instance, Type requestedType, XmlTestStoreParameters parameters);
    private static IEnumerable`1<FieldPersistenceInfo> GetFieldInfos(Type type);
    private static IEnumerable`1<FieldPersistenceInfo> ReflectFields(Type type);
    private static string DateTimeToString(DateTime dateTime);
    private static string GetFieldLocation(FieldInfo fieldInfo);
    private static string GetDefaultFieldLocation(FieldInfo fieldInfo);
    private static bool ImplementsIXmlTestStore(Type type);
    private static T GetAttribute(FieldInfo fieldInfo);
    [NullableContextAttribute("2")]
private static void SaveSimpleData(object value, XmlNode nodeToSaveAt, object defaultValue);
    public XmlNode EnsureLocationExists(XmlElement xml, string location);
    [NullableContextAttribute("2")]
private static string RemoveInvalidXmlChar(string str);
    private static string ReplaceInvalidCharacterWithUniCodeEscapeSequence(Match match);
    private XmlNode EnsureLocationExists(XmlElement xml, string location, string nameSpaceUri);
    private string GetNamespaceUriOrDefault(string nameSpaceUri);
    private XmlElement CreateElement(XmlElement xml, string name);
    private XmlElement CreateElement(XmlElement xml, string name, string elementNamespaceUri);
    private XmlElement CreateElement(XmlElement parent, string name, object instance);
    private NewElementCreateData GetElementCreateData(object persistee);
    private XmlNode LocationToXmlNode(XmlElement element, string location);
    private string ProcessXPathQuery(string queryIn);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.VisualStudio.TestPlatform.Extensions.TrxLogger.Resources.TrxResource : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Common_CannotBeLessThanZero { get; }
    internal static string Common_CannotBeNullOrEmpty { get; }
    internal static string Common_CannotGetNextIterationName { get; }
    internal static string Common_CannotGetNextTimestampFileName { get; }
    internal static string Common_DeploymentItem { get; }
    internal static string Common_DeploymentItemWithOutputDirectory { get; }
    internal static string Common_MissingRunConfigInRun { get; }
    internal static string Common_MissingRunDeploymentRootInRunConfig { get; }
    internal static string Common_MissingRunInResult { get; }
    internal static string Common_NothingLeftAfterReplaciingBadCharsInName { get; }
    internal static string Common_NullInMessages { get; }
    internal static string Common_TestRunName { get; }
    internal static string FailureToAttach { get; }
    internal static string MessageForSkippedTests { get; }
    internal static string PrefixAndNameProvidedError { get; }
    internal static string TestOutcomeAborted { get; }
    internal static string TestOutcomeCompleted { get; }
    internal static string TestOutcomeDisconnected { get; }
    internal static string TestOutcomeError { get; }
    internal static string TestOutcomeFailed { get; }
    internal static string TestOutcomeInconclusive { get; }
    internal static string TestOutcomeInProgress { get; }
    internal static string TestOutcomeNotExecuted { get; }
    internal static string TestOutcomeNotRunnable { get; }
    internal static string TestOutcomePassed { get; }
    internal static string TestOutcomePassedButRunAborted { get; }
    internal static string TestOutcomePending { get; }
    internal static string TestOutcomeTimeout { get; }
    internal static string TestOutcomeWarning { get; }
    internal static string TrxLoggerResultsFile { get; }
    internal static string TrxLoggerResultsFileOverwriteWarning { get; }
    internal static string TS_AllResults { get; }
    internal static string TS_UncategorizedResults { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Common_CannotBeLessThanZero();
    internal static string get_Common_CannotBeNullOrEmpty();
    internal static string get_Common_CannotGetNextIterationName();
    internal static string get_Common_CannotGetNextTimestampFileName();
    internal static string get_Common_DeploymentItem();
    internal static string get_Common_DeploymentItemWithOutputDirectory();
    internal static string get_Common_MissingRunConfigInRun();
    internal static string get_Common_MissingRunDeploymentRootInRunConfig();
    internal static string get_Common_MissingRunInResult();
    internal static string get_Common_NothingLeftAfterReplaciingBadCharsInName();
    internal static string get_Common_NullInMessages();
    internal static string get_Common_TestRunName();
    internal static string get_FailureToAttach();
    internal static string get_MessageForSkippedTests();
    internal static string get_PrefixAndNameProvidedError();
    internal static string get_TestOutcomeAborted();
    internal static string get_TestOutcomeCompleted();
    internal static string get_TestOutcomeDisconnected();
    internal static string get_TestOutcomeError();
    internal static string get_TestOutcomeFailed();
    internal static string get_TestOutcomeInconclusive();
    internal static string get_TestOutcomeInProgress();
    internal static string get_TestOutcomeNotExecuted();
    internal static string get_TestOutcomeNotRunnable();
    internal static string get_TestOutcomePassed();
    internal static string get_TestOutcomePassedButRunAborted();
    internal static string get_TestOutcomePending();
    internal static string get_TestOutcomeTimeout();
    internal static string get_TestOutcomeWarning();
    internal static string get_TrxLoggerResultsFile();
    internal static string get_TrxLoggerResultsFileOverwriteWarning();
    internal static string get_TS_AllResults();
    internal static string get_TS_UncategorizedResults();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.VisualStudio.TestPlatform.Extensions.TrxLogger.StringUtils : object {
    [ExtensionAttribute]
public static bool IsNullOrEmpty(string value);
    [ExtensionAttribute]
public static bool IsNullOrWhiteSpace(string value);
}
internal static class Microsoft.VisualStudio.TestPlatform.Extensions.TrxLogger.TPDebug : object {
    [ConditionalAttribute("DEBUG")]
public static void Assert(bool b);
    [NullableContextAttribute("1")]
[ConditionalAttribute("DEBUG")]
public static void Assert(bool b, string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[FriendlyNameAttribute("Trx")]
[ExtensionUriAttribute("logger://Microsoft/TestPlatform/TrxLogger/v1")]
public class Microsoft.VisualStudio.TestPlatform.Extensions.TrxLogger.TrxLogger : object {
    [NullableAttribute("2")]
private string _trxFilePath;
    private Converter _converter;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<Guid, ITestResult> _results;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<Guid, ITestElement> _testElements;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<Guid, TestEntry> _entries;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<Guid, ITestResult> _innerResults;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<Guid, TestEntry> _innerTestEntries;
    private TrxFileHelper _trxFileHelper;
    [NullableAttribute("2")]
private StringBuilder _runLevelStdOut;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<RunInfo> _runLevelErrorsAndWarnings;
    private string _trxFileExtension;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, string> _parametersDictionary;
    [NullableAttribute("2")]
private string _testResultsDirPath;
    [CompilerGeneratedAttribute]
private bool <IsInitialized>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <TestRunStartTime>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TestRun <LoggerTestRun>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalTestCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PassedTestCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FailedTestCount>k__BackingField;
    [CompilerGeneratedAttribute]
private TestOutcome <TestResultOutcome>k__BackingField;
    [MemberNotNullWhenAttribute("True", "Mono.Cecil.CustomAttributeArgument[]")]
private bool IsInitialized { get; private set; }
    internal DateTime TestRunStartTime { get; private set; }
    [NullableAttribute("2")]
internal TestRun LoggerTestRun { get; private set; }
    internal int TotalTestCount { get; private set; }
    internal int PassedTestCount { get; private set; }
    internal int FailedTestCount { get; private set; }
    internal int TestResultCount { get; }
    internal int UnitTestElementCount { get; }
    internal int TestEntryCount { get; }
    internal TestOutcome TestResultOutcome { get; private set; }
    protected TrxLogger(IFileHelper fileHelper);
    internal TrxLogger(IFileHelper fileHelper, TrxFileHelper trxFileHelper);
    [CompilerGeneratedAttribute]
[MemberNotNullWhenAttribute("True", "Mono.Cecil.CustomAttributeArgument[]")]
private bool get_IsInitialized();
    [CompilerGeneratedAttribute]
[MemberNotNullWhenAttribute("True", "Mono.Cecil.CustomAttributeArgument[]")]
private void set_IsInitialized(bool value);
    [MemberNotNullAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public sealed virtual void Initialize(TestLoggerEvents events, string testResultsDirPath);
    [MemberNotNullAttribute("_parametersDictionary")]
public sealed virtual void Initialize(TestLoggerEvents events, Dictionary`2<string, string> parameters);
    internal string GetRunLevelInformationalMessage();
    internal List`1<RunInfo> GetRunLevelErrorsAndWarnings();
    [CompilerGeneratedAttribute]
internal DateTime get_TestRunStartTime();
    [CompilerGeneratedAttribute]
private void set_TestRunStartTime(DateTime value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal TestRun get_LoggerTestRun();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_LoggerTestRun(TestRun value);
    [CompilerGeneratedAttribute]
internal int get_TotalTestCount();
    [CompilerGeneratedAttribute]
private void set_TotalTestCount(int value);
    [CompilerGeneratedAttribute]
internal int get_PassedTestCount();
    [CompilerGeneratedAttribute]
private void set_PassedTestCount(int value);
    [CompilerGeneratedAttribute]
internal int get_FailedTestCount();
    [CompilerGeneratedAttribute]
private void set_FailedTestCount(int value);
    internal int get_TestResultCount();
    internal int get_UnitTestElementCount();
    internal int get_TestEntryCount();
    [CompilerGeneratedAttribute]
internal TestOutcome get_TestResultOutcome();
    [CompilerGeneratedAttribute]
private void set_TestResultOutcome(TestOutcome value);
    internal void TestMessageHandler(object sender, TestRunMessageEventArgs e);
    internal void TestResultHandler(object sender, TestResultEventArgs e);
    internal void TestRunCompleteHandler(object sender, TestRunCompleteEventArgs e);
    internal virtual void PopulateTrxFile(string trxFileName, XmlElement rootElement);
    private void AddRunLevelInformationalMessage(string message);
    private void HandleSkippedTest(TestResult rsTestResult);
    private void ReserveTrxFilePath();
    private string AcquireTrxFileNamePath(Boolean& shouldOverwrite);
    private string SetDefaultTrxFilePath();
    [MemberNotNullAttribute("LoggerTestRun")]
private void CreateTestRun();
    [NullableContextAttribute("2")]
private ITestResult GetTestResult(Guid executionId);
    [NullableContextAttribute("2")]
private ITestElement GetTestElement(Guid testId);
    private ITestElement GetOrCreateTestElement(Guid executionId, Guid parentExecutionId, TestType testType, ITestElement parentTestElement, TestResult rockSteadyTestResult);
    private static void UpdateTestLinks(ITestElement testElement, ITestElement parentTestElement);
    private ITestResult CreateTestResult(Guid executionId, Guid parentExecutionId, TestType testType, ITestElement testElement, ITestElement parentTestElement, ITestResult parentTestResult, TestResult rocksteadyTestResult);
    private void UpdateTestEntries(Guid executionId, Guid parentExecutionId, ITestElement testElement, ITestElement parentTestElement);
    [NullableContextAttribute("2")]
private TestEntry GetTestEntry(Guid executionId);
    private TestOutcome ChangeTestOutcomeIfNecessary(TestOutcome outcome);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Microsoft.VisualStudio.TestPlatform.TestExtensionTypesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type[] <Types>k__BackingField;
    public Type[] Types { get; }
    public TestExtensionTypesAttribute(Type[] types);
    [CompilerGeneratedAttribute]
public Type[] get_Types();
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
