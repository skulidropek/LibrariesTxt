[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Microsoft.VisualStudio.TestTools.UITest.Extension.IE.AddEventListenerCallback : MulticastDelegate {
    public AddEventListenerCallback(object object, IntPtr method);
    public virtual void Invoke(object eventTarget, IDOMEvent eventObj);
    public virtual IAsyncResult BeginInvoke(object eventTarget, IDOMEvent eventObj, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal static class Microsoft.VisualStudio.TestTools.UITest.Extension.IE.BrowserConstants : object {
    internal static string TagNameApplet;
    internal static string TagNameArea;
    internal static string TagNameMap;
    internal static string TagNameBase;
    internal static string TagNameBasefont;
    internal static string TagNameBr;
    internal static string TagNameColgroup;
    internal static string TagNameCol;
    internal static string TagNameDiv;
    internal static string TagNameEmbed;
    internal static string TagNameIFrame;
    internal static string TagNameFrame;
    internal static string TagNameFrameSet;
    internal static string TagNameMeta;
    internal static string TagNameNoscript;
    internal static string TagNameScript;
    internal static string TagNameObject;
    internal static string TagNameParam;
    internal static string TagNameHead;
    internal static string TagNameHR;
    internal static string TagNameTitle;
    internal static string TagNameStyle;
    internal static string TagNameSection;
    internal static string TagNameNav;
    internal static string TagNameArticle;
    internal static string TagNameAside;
    internal static string TagNameHGroup;
    internal static string TagNameHeader;
    internal static string TagNameFooter;
    internal static string TagNameFigure;
    internal static string TagNameFigCaption;
    internal static string TagNameMark;
    internal static string TagNameText;
    internal static string TagNameBody;
    internal static string TagNameImg;
    internal static string TagNameLabel;
    internal static string TagNameInput;
    internal static string TagNameAnchor;
    internal static string TagNameButton;
    internal static string TagNameTable;
    internal static string TagNameTableBody;
    internal static string TagNameTableFoot;
    internal static string TagNameTableRow;
    internal static string TagNameTableHeader;
    internal static string TagNameTableData;
    internal static string TagNameTableHead;
    internal static string TagNameTextArea;
    internal static string TagNameSelect;
    internal static string TagNameOption;
    internal static string TagNameOptGroup;
    internal static string TagNameEmptyText;
    internal static string TagNameComment;
    internal static string TagNameTopHtml;
    internal static string TagNameVideo;
    internal static string TagNameAudio;
    internal static string TagNameProgress;
    internal static string TagNameAbbr;
    internal static string TagNameAcronym;
    internal static string TagNameAddress;
    internal static string TagNameSubscript;
    internal static string TagNameSuperscript;
    internal static string TagNameB;
    internal static string TagNameBdo;
    internal static string TagNameBig;
    internal static string TagNameBlockQuote;
    internal static string TagNameCaption;
    internal static string TagNameCenter;
    internal static string TagNameCite;
    internal static string TagNameCode;
    internal static string TagNameDd;
    internal static string TagNameDel;
    internal static string TagNameEm;
    internal static string TagNameStrong;
    internal static string TagNameSamp;
    internal static string TagNameKbd;
    internal static string TagNameVar;
    internal static string TagNameDl;
    internal static string TagNameDt;
    internal static string TagNameFont;
    internal static string TagNameH1;
    internal static string TagNameH2;
    internal static string TagNameH3;
    internal static string TagNameH4;
    internal static string TagNameH5;
    internal static string TagNameH6;
    internal static string TagNameI;
    internal static string TagNameIns;
    internal static string TagNameIsIndex;
    internal static string TagNameLegend;
    internal static string TagNameLi;
    internal static string TagNameOl;
    internal static string TagNameP;
    internal static string TagNamePre;
    internal static string TagNameQ;
    internal static string TagNameS;
    internal static string TagNameSmall;
    internal static string TagNameSpan;
    internal static string TagNameStrike;
    internal static string TagNameU;
    internal static string TagNameUL;
    internal static string TagNameDir;
    internal static string TagNameDfn;
    internal static string TagNameMenu;
    internal static string TagNameXmp;
    internal static string TagNameNoBr;
    internal static string TagAttributeAlt;
    internal static string AttributeUseMap;
    internal static string ContentEditable;
    internal static string NoScrolling;
    internal static string TypeValueInputButton;
    internal static string TypeValueResetButton;
    internal static string TypeValueSubmitButton;
    internal static string TypeValueImageButton;
    internal static string TypeValueTextBox;
    internal static string TypeValueSearch;
    internal static string TypeValueEmail;
    internal static string TypeValueTelephone;
    internal static string TypeValueNumber;
    internal static string TypeValueURL;
    internal static string TypeValuePasswordBox;
    internal static string TypeValueCheckBox;
    internal static string TypeValueRadioButton;
    internal static string TypeFileInput;
    internal static string TypeSliderInput;
    internal static string TypeMultiline;
    internal static string TypeSingleline;
    internal static string ClassGenericHtml;
    internal static string ClassText;
    internal static string ClassBody;
    internal static string ClassLabel;
    internal static string ClassCheckbox;
    internal static string ClassHyperlink;
    internal static string ClassImage;
    internal static string ClassInputButton;
    internal static string ClassRadioButton;
    internal static string ClassTextbox;
    internal static string ClassSelect;
    internal static string ClassOption;
    internal static string ClassTable;
    internal static string ClassTableRow;
    internal static string ClassTableCell;
    internal static string ClassFrame;
    internal static string ClassFileInput;
    internal static string ClassSliderInput;
    internal static string ClassPane;
    internal static string ClassFrameSet;
    internal static string ClassVideo;
    internal static string ClassAudio;
    internal static string ClassProgressBar;
    internal static string SearchCondition;
    internal static string SecondaryPlaceHolder;
    internal static string PrimaryPlaceHolder;
    internal static string DocumentComplete;
    internal static string DocumentLoading;
    internal static string DocumentInteractive;
    internal static string NavigationInProgress;
    internal static string NavigationComplete;
    internal static int NoDocument;
    internal static int RootDocument;
    internal static int MaxDescendantsCount;
    internal static string ScrollBar;
    internal static string AltKey;
    internal static string DocumentFragment;
    internal static string OverFlowVisible;
    internal static string OverFlowScroll;
    internal static string OverFlowAuto;
    internal static string PositionAbsolute;
    internal static string PositionRelative;
    internal static string rightToLeft;
    internal static string SupportedClassName;
    internal static int ERROR_EVENT_REGISTRATION;
    internal static UInt32 E_INVALIDARG;
    internal static string ControlsFound;
    internal static string HResult;
    internal static string FindAll;
    internal static int BreakIntervalForWaitForReady;
    internal static int BreakIntervalForSearch;
    internal static int singlePassTimeout;
    internal static int NavigationPollInterval;
    internal static int NavigationPollRetryCount;
    internal static string Visible;
    internal static string Hidden;
    internal static string Inherit;
    internal static string Collapse;
    internal static string Auto;
    internal static string None;
}
internal class Microsoft.VisualStudio.TestTools.UITest.Extension.IE.BrowserDocumentEventHandler : object {
    private bool sinkInIEProcess;
    private IECommunicator eventNotifyElement;
    private IHTMLDocument htmlDocument;
    private int htmlDocumentId;
    private IConnectionPointContainer connectionPointContainer;
    private IConnectionPoint connectionPoint;
    private int eventHandle;
    private bool disposed;
    private static int DISPID_READYSTATE;
    private static Mutex lockAccess;
    private static string currentState;
    private static AutoResetEvent accessComplete;
    private static Dictionary`2<string, tagREADYSTATE> DocumentStateMapping;
    internal BrowserDocumentEventHandler(IHTMLDocument document, int documentId, IECommunicator notifyElement, bool inIEProcess);
    private static BrowserDocumentEventHandler();
    public sealed virtual void Dispose();
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
private void RegisterEventSink();
    private void UpdateDocumentState();
    internal void RemoveEventSink();
    private sealed virtual override void Microsoft.VisualStudio.OLE.Interop.IPropertyNotifySink.OnChanged(int DISPID);
    private sealed virtual override void Microsoft.VisualStudio.OLE.Interop.IPropertyNotifySink.OnRequestEdit(int DISPID);
    private static tagREADYSTATE GetDomDocumentState(IHTMLDocument domDocument);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
internal static tagREADYSTATE GetReadyState(IHTMLDocument mshtmlDocument);
    private static Dictionary`2<string, tagREADYSTATE> InitializeDocumentStateMapping();
}
internal class Microsoft.VisualStudio.TestTools.UITest.Extension.IE.BrowserWebControlEventHandler : object {
    private bool sinkInIEProcess;
    private IWebBrowser2 iewebCtrl;
    private IECommunicator notifyElement;
    private IConnectionPointContainer connectionPointContainer;
    private IConnectionPoint connectionPoint;
    private int eventHandle;
    private bool disposed;
    private double progressPercentage;
    private static Dictionary`2<string, string> IgnoredUrlSchemes;
    internal BrowserWebControlEventHandler(IWebBrowser2 iwebCtrl, IECommunicator eventTarget, bool inIEProcess);
    private static BrowserWebControlEventHandler();
    public sealed virtual void Dispose();
    public sealed virtual void NavigateComplete2(object pDisp, Object& URL);
    public sealed virtual void BeforeNavigate2(object pDisp, Object& URL, Object& Flags, Object& TargetFrameName, Object& PostData, Object& Headers, Boolean& Cancel);
    public sealed virtual void DownloadBegin();
    public sealed virtual void DownloadComplete();
    public sealed virtual void DocumentComplete(object pDisp, Object& URL);
    public sealed virtual void ProgressChange(int Progress, int ProgressMax);
    public sealed virtual void ClientToHostWindow(Int32& CX, Int32& CY);
    public sealed virtual void CommandStateChange(int Command, bool Enable);
    public sealed virtual void FileDownload(Boolean& Cancel);
    public sealed virtual void NavigateError(object pDisp, Object& URL, Object& Frame, Object& StatusCode, Boolean& Cancel);
    public sealed virtual void NewWindow2(Object& ppDisp, Boolean& Cancel);
    public sealed virtual void NewWindow3(Object& ppDisp, Boolean& Cancel, UInt32 dwFlags, string bstrUrlContext, string bstrUrl);
    public sealed virtual void OnFullScreen(bool FullScreen);
    public sealed virtual void OnMenuBar(bool MenuBar);
    public sealed virtual void OnQuit();
    public sealed virtual void OnStatusBar(bool StatusBar);
    public sealed virtual void OnTheaterMode(bool TheaterMode);
    public sealed virtual void OnToolBar(bool ToolBar);
    public sealed virtual void OnVisible(bool Visible);
    public sealed virtual void PrintTemplateInstantiation(object pDisp);
    public sealed virtual void PrintTemplateTeardown(object pDisp);
    public sealed virtual void PrivacyImpactedStateChange(bool bImpacted);
    public sealed virtual void PropertyChange(string szProperty);
    public sealed virtual void SetSecureLockIcon(int SecureLockIcon);
    public sealed virtual void StatusTextChange(string Text);
    public sealed virtual void TitleChange(string Text);
    public sealed virtual void UpdatePageStatus(object pDisp, Object& nPage, Object& fDone);
    public sealed virtual void WindowClosing(bool IsChildWindow, Boolean& Cancel);
    public sealed virtual void WindowSetHeight(int Height);
    public sealed virtual void WindowSetLeft(int Left);
    public sealed virtual void WindowSetResizable(bool Resizable);
    public sealed virtual void WindowSetTop(int Top);
    public sealed virtual void WindowSetWidth(int Width);
    private void NotifyEvent(WebControlEventType eventType, object eventParameterValues);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
internal void RegisterSink();
    internal void RemoveEventSink();
    private int GetDocumentIdentifier(object frameElement);
    internal static bool IsValidNavigateUrl(string navigateUrl);
    private static Dictionary`2<string, string> InitializeUrlSchemes();
}
public class Microsoft.VisualStudio.TestTools.UITest.Extension.IE.DispatchObject : object {
    private Type currentTypeObject;
    private AddEventListenerCallback callback;
    private static string DispIdZero;
    public Type UnderlyingSystemType { get; }
    public DispatchObject(AddEventListenerCallback callback);
    public sealed virtual FieldInfo GetField(string name, BindingFlags bindingAttr);
    public sealed virtual FieldInfo[] GetFields(BindingFlags bindingAttr);
    public sealed virtual MemberInfo[] GetMember(string name, BindingFlags bindingAttr);
    public sealed virtual MemberInfo[] GetMembers(BindingFlags bindingAttr);
    public sealed virtual MethodInfo GetMethod(string name, BindingFlags bindingAttr);
    public sealed virtual MethodInfo GetMethod(string name, BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers);
    public sealed virtual MethodInfo[] GetMethods(BindingFlags bindingAttr);
    public sealed virtual PropertyInfo[] GetProperties(BindingFlags bindingAttr);
    public sealed virtual PropertyInfo GetProperty(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers);
    public sealed virtual PropertyInfo GetProperty(string name, BindingFlags bindingAttr);
    public sealed virtual object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters);
    public sealed virtual Type get_UnderlyingSystemType();
}
[ComVisibleAttribute("True")]
[GuidAttribute("1C7F57B0-124D-4A99-8E1C-110886B437B6")]
[ClassInterfaceAttribute("0")]
[ComDefaultInterfaceAttribute("Microsoft.VisualStudio.TestTools.UITest.Extension.IE.IDomAttachEventCallback")]
public class Microsoft.VisualStudio.TestTools.UITest.Extension.IE.DomAttachEventCallback : object {
    private DispatchObject addEventListenerHandler;
    private static Dictionary`2<string, string> addEventListenerEvents;
    private IECommunicator notifyElement;
    private IHTMLElement domElement;
    private List`1<string> domEventNames;
    private bool disposed;
    private bool callBackInIEProcess;
    private bool cancelBubbleUp;
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal DomAttachEventCallback(IHTMLElement domNode, String[] eventNames, IECommunicator notifyNode);
    internal DomAttachEventCallback(IHTMLElement domNode, String[] eventNames, IECommunicator notifyNode, bool inIEProcess, bool cancelBubble);
    private static DomAttachEventCallback();
    [DispIdAttribute("0")]
public sealed virtual void DomEvent(IHTMLEventObj eventParameter);
    public void AddEventListenerHandler(object eventTarget, IDOMEvent eventParameter);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
public sealed virtual void Dispose();
    private void Notify(DomEventParameter eventObject);
    private void Initialize(IHTMLElement domNode, String[] eventNames, IECommunicator notifyNode, bool inProcess, bool cancelBubble);
    private void AddEventListener(IHTMLElement domElement, string eventName);
    private void RemoveEventListener(IHTMLElement domElement, string eventName);
    private static DomEventParameter CreateEventObject(IHTMLEventObj mshtmlEventObject);
    private static DomEventParameter CreateEventObject(IDOMEvent mshtmlEventObject);
}
internal static class Microsoft.VisualStudio.TestTools.UITest.Extension.IE.DomEventName : object {
    internal static string Change;
    internal static string Click;
    internal static string FocusIn;
    internal static string FocusOut;
    internal static string KeyDown;
    internal static string KeyPress;
    internal static string KeyUp;
    internal static string PropertyChange;
    internal static string Input;
    internal static string MouseMove;
    internal static string MouseOver;
    internal static string MouseDown;
    internal static string Play;
    internal static string Pause;
    internal static string Seeked;
    internal static string VolumeChange;
    internal static string OnChange;
    internal static string OnClick;
    internal static string OnFocusIn;
    internal static string OnFocusOut;
    internal static string OnKeyDown;
    internal static string OnKeyPress;
    internal static string OnKeyUp;
    internal static string OnPropertyChange;
    internal static string OnMouseMove;
    internal static string OnMouseOver;
    internal static string OnMouseDown;
    internal static string OnMouseUp;
    private static Dictionary`2<string, string> domEventDictionary;
    private static DomEventName();
    [SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
internal static string GetEventNameInCorrectCase(string eventName);
    private static Dictionary`2<string, string> InitializeDomEvents();
}
internal class Microsoft.VisualStudio.TestTools.UITest.Extension.IE.DomEventParameter : object {
    private List`1<object> eventParameters;
    public string EventName { get; internal set; }
    public int KeyCode { get; internal set; }
    public int MouseButton { get; internal set; }
    public string PropertyName { get; internal set; }
    internal Object[] EventParameters { get; }
    internal DomEventParameter(Object[] eventParameterValues);
    public sealed virtual string get_EventName();
    internal void set_EventName(string value);
    public sealed virtual int get_KeyCode();
    internal void set_KeyCode(int value);
    public sealed virtual int get_MouseButton();
    internal void set_MouseButton(int value);
    public sealed virtual string get_PropertyName();
    internal void set_PropertyName(string value);
    private void Initialize();
    private void UpdateParameterValue(int paramIndex, object paramValue);
    private T GetParamValue(int paramIndex);
    internal Object[] get_EventParameters();
}
internal static class Microsoft.VisualStudio.TestTools.UITest.Extension.IE.EventNotifyManager : object {
    private static object queueLockNode;
    private static bool notificationThreadActive;
    private static Queue`1<IEventNotificationHelper> notifyQueue;
    private static EventNotifyManager();
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
private static void NotificationEngine(object dummy);
    internal static void EnqueueNotification(IECommunicator notifyTarget, Object[] eventParameterValues);
    private static void Enqueue(IEventNotificationHelper notifyData);
}
[ComVisibleAttribute("True")]
[GuidAttribute("E852BA4B-2E20-4a24-8913-8D0019E581FB")]
[InterfaceTypeAttribute("2")]
public interface Microsoft.VisualStudio.TestTools.UITest.Extension.IE.IDomAttachEventCallback {
    [DispIdAttribute("0")]
public abstract virtual void DomEvent(IHTMLEventObj eventParameter);
}
[ComVisibleAttribute("True")]
[ClassInterfaceAttribute("0")]
[ComDefaultInterfaceAttribute("Microsoft.VisualStudio.TestTools.UITest.Extension.IE.Communication.Interop.IEventHelper")]
[GuidAttribute("4422752E-BF61-4FE9-89A6-95508A88870F")]
public class Microsoft.VisualStudio.TestTools.UITest.Extension.IE.IEEventHelper : object {
    [CompilerGeneratedAttribute]
private static IECommunicator <WebEventProxyNode>k__BackingField;
    private IHTMLWindow3 windowElement3;
    private static object scriptLanguage;
    private static IECommunicator WebEventProxyNode { get; private set; }
    private static IEEventHelper();
    public sealed virtual object CreateWebControlEventSink(IECommunicator notifyElement, object webControl);
    public sealed virtual object CreateDocumentEventSink(IECommunicator notifyElement, object documentNode, int documentId);
    public sealed virtual object CreateEventCallback(IECommunicator notifyElement, object domNode, String[] eventNames, int cancelBubble);
    public sealed virtual void InitializeTimerTracking(object domDocument);
    public sealed virtual void LogMessage(string message);
    public sealed virtual int SetTimer(int functionCode, Object& codeExpression, object delay);
    public sealed virtual int TimerTrackingStatus();
    internal static void ValidateEventParamLength(int length, int minimumLength);
    public static IWebBrowser2 FindBrowserControl(IHTMLDocument2 parentDocument, Predicate`1<IWebBrowser2> predicate);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
[SuppressMessageAttribute("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
public static ToInterface CastAs(FromInterface baseObject);
    [SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
internal static void RemoveEventSink(int eventHandle, IConnectionPoint connectionPoint);
    [CompilerGeneratedAttribute]
private static IECommunicator get_WebEventProxyNode();
    [CompilerGeneratedAttribute]
private static void set_WebEventProxyNode(IECommunicator value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("305104BA-98B5-11CF-BB82-00AA00BDCE0B")]
[TypeIdentifierAttribute]
public interface mshtml.IDOMEvent {
    [DispIdAttribute("1008")]
public string type { get; }
    [DispIdAttribute("1014")]
public bool cancelBubble { get; public set; }
    public void _VtblGap1_7();
    [DispIdAttribute("1008")]
public abstract virtual string get_type();
    public void _VtblGap2_5();
    [DispIdAttribute("1014")]
public abstract virtual void set_cancelBubble(bool p);
    [DispIdAttribute("1014")]
public abstract virtual bool get_cancelBubble();
}
[CompilerGeneratedAttribute]
[GuidAttribute("305106D6-98B5-11CF-BB82-00AA00BDCE0B")]
[TypeIdentifierAttribute]
public interface mshtml.IDOMKeyboardEvent {
    [DispIdAttribute("1160")]
public int keyCode { get; }
    public void _VtblGap1_9();
    [DispIdAttribute("1160")]
public abstract virtual int get_keyCode();
}
[CompilerGeneratedAttribute]
[GuidAttribute("305106CE-98B5-11CF-BB82-00AA00BDCE0B")]
[TypeIdentifierAttribute]
public interface mshtml.IDOMMouseEvent {
    [DispIdAttribute("1059")]
public ushort button { get; }
    public void _VtblGap1_8();
    [DispIdAttribute("1059")]
public abstract virtual ushort get_button();
}
[CompilerGeneratedAttribute]
[GuidAttribute("305104B9-98B5-11CF-BB82-00AA00BDCE0B")]
[TypeIdentifierAttribute]
public interface mshtml.IEventTarget {
    [DispIdAttribute("-2147417602")]
public abstract virtual void addEventListener(string type, object listener, bool useCapture);
    [DispIdAttribute("-2147417601")]
public abstract virtual void removeEventListener(string type, object listener, bool useCapture);
}
[CompilerGeneratedAttribute]
[GuidAttribute("626FC520-A41E-11CF-A731-00A0C9082637")]
[TypeIdentifierAttribute]
public interface mshtml.IHTMLDocument {
}
[CompilerGeneratedAttribute]
[GuidAttribute("332C4425-26CB-11D0-B483-00C04FD90119")]
[TypeIdentifierAttribute]
public interface mshtml.IHTMLDocument2 {
    [DispIdAttribute("1018")]
public string readyState { get; }
    [DispIdAttribute("1034")]
public IHTMLWindow2 parentWindow { get; }
    public void _VtblGap1_15();
    [DispIdAttribute("1018")]
public abstract virtual string get_readyState();
    public void _VtblGap2_85();
    [DispIdAttribute("1034")]
public abstract virtual IHTMLWindow2 get_parentWindow();
}
[CompilerGeneratedAttribute]
[GuidAttribute("3050F1FF-98B5-11CF-BB82-00AA00BDCE0B")]
[TypeIdentifierAttribute]
public interface mshtml.IHTMLElement {
}
[CompilerGeneratedAttribute]
[GuidAttribute("3050F434-98B5-11CF-BB82-00AA00BDCE0B")]
[TypeIdentifierAttribute]
public interface mshtml.IHTMLElement2 {
    public void _VtblGap1_59();
    [DispIdAttribute("-2147417605")]
public abstract virtual bool attachEvent(string event, object pdisp);
    [DispIdAttribute("-2147417604")]
public abstract virtual void detachEvent(string event, object pdisp);
}
[CompilerGeneratedAttribute]
[GuidAttribute("3050F32D-98B5-11CF-BB82-00AA00BDCE0B")]
[TypeIdentifierAttribute]
public interface mshtml.IHTMLEventObj {
    [DispIdAttribute("1008")]
public bool cancelBubble { get; public set; }
    [DispIdAttribute("1011")]
public int keyCode { get; public set; }
    [DispIdAttribute("1012")]
public int button { get; }
    [DispIdAttribute("1013")]
public string type { get; }
    public void _VtblGap1_6();
    [DispIdAttribute("1008")]
public abstract virtual void set_cancelBubble(bool p);
    [DispIdAttribute("1008")]
public abstract virtual bool get_cancelBubble();
    public void _VtblGap2_2();
    [DispIdAttribute("1011")]
public abstract virtual void set_keyCode(int p);
    [DispIdAttribute("1011")]
public abstract virtual int get_keyCode();
    [DispIdAttribute("1012")]
public abstract virtual int get_button();
    [DispIdAttribute("1013")]
public abstract virtual string get_type();
}
[CompilerGeneratedAttribute]
[GuidAttribute("3050F48B-98B5-11CF-BB82-00AA00BDCE0B")]
[TypeIdentifierAttribute]
public interface mshtml.IHTMLEventObj2 {
    [DispIdAttribute("1027")]
public string propertyName { get; public set; }
    public void _VtblGap1_3();
    [DispIdAttribute("1027")]
public abstract virtual void set_propertyName(string p);
    [DispIdAttribute("1027")]
public abstract virtual string get_propertyName();
}
[CompilerGeneratedAttribute]
[GuidAttribute("3050F313-98B5-11CF-BB82-00AA00BDCE0B")]
[TypeIdentifierAttribute]
public interface mshtml.IHTMLFrameElement {
}
[CompilerGeneratedAttribute]
[GuidAttribute("332C4426-26CB-11D0-B483-00C04FD90119")]
[DefaultMemberAttribute("item")]
[TypeIdentifierAttribute]
public interface mshtml.IHTMLFramesCollection2 {
    [DispIdAttribute("0")]
public abstract virtual object item(Object& pvarIndex);
}
[CompilerGeneratedAttribute]
[GuidAttribute("3050F4D0-98B5-11CF-BB82-00AA00BDCE0B")]
[TypeIdentifierAttribute]
public interface mshtml.IHTMLUniqueName {
    [DispIdAttribute("-2147417058")]
public int uniqueNumber { get; }
    [DispIdAttribute("-2147417058")]
public abstract virtual int get_uniqueNumber();
}
[CompilerGeneratedAttribute]
[GuidAttribute("332C4427-26CB-11D0-B483-00C04FD90119")]
[DefaultMemberAttribute("item")]
[TypeIdentifierAttribute]
public interface mshtml.IHTMLWindow2 {
    [DispIdAttribute("0")]
public abstract virtual object item(Object& pvarIndex);
}
[CompilerGeneratedAttribute]
[GuidAttribute("3050F4AE-98B5-11CF-BB82-00AA00BDCE0B")]
[TypeIdentifierAttribute]
public interface mshtml.IHTMLWindow3 {
    public void _VtblGap1_4();
    [DispIdAttribute("1103")]
public abstract virtual int setTimeout(Object& expression, int msec, Object& language);
    [DispIdAttribute("1162")]
public abstract virtual int setInterval(Object& expression, int msec, Object& language);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
