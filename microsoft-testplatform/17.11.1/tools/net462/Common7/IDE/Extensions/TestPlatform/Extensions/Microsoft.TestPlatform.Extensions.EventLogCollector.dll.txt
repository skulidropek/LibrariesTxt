[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Microsoft.TestPlatform.Extensions.EventLogCollector.CollectorNameValueConfigurationManager : object {
    private static string SettingNameAttributeName;
    private static string SettingValueAttributeName;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, string> <NameValuePairs>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IDictionary`2<string, string> NameValuePairs { get; }
    [NullableAttribute("2")]
public string Item { get; public set; }
    [NullableContextAttribute("2")]
public CollectorNameValueConfigurationManager(XmlElement configurationElement);
    [CompilerGeneratedAttribute]
internal IDictionary`2<string, string> get_NameValuePairs();
    public string get_Item(string name);
    public void set_Item(string name, string value);
}
internal class Microsoft.TestPlatform.Extensions.EventLogCollector.EventLogCollectorException : Exception {
    [NullableContextAttribute("2")]
public EventLogCollectorException(string localizedMessage, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.TestPlatform.Extensions.EventLogCollector.EventLogConstants : object {
    public static string SettingEventLogs;
    public static string SettingEventSources;
    public static string SettingEntryTypes;
    public static string SettingMaxEntries;
    public static int DefaultMaxEntries;
    public static int TypeColumnMaxLength;
    public static int SourceColumnMaxLength;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.EventLogCollector.EventLogContainer : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ISet`1<string> _eventSources;
    private ISet`1<EventLogEntryType> _entryTypes;
    private int _maxLogEntries;
    private DataCollectionLogger _dataCollectionLogger;
    private DataCollectionContext _dataCollectionContext;
    private bool _isDisposed;
    [CompilerGeneratedAttribute]
private List`1<EventLogEntry> <EventLogEntries>k__BackingField;
    [CompilerGeneratedAttribute]
private EventLog <EventLog>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NextEntryIndexToCollect>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LimitReached>k__BackingField;
    public List`1<EventLogEntry> EventLogEntries { get; }
    public EventLog EventLog { get; }
    internal int NextEntryIndexToCollect { get; internal set; }
    internal bool LimitReached { get; internal set; }
    public EventLogContainer(string eventLogName, ISet`1<string> eventSources, ISet`1<EventLogEntryType> entryTypes, int maxLogEntries, DataCollectionLogger dataCollectionLogger, DataCollectionContext dataCollectionContext);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<EventLogEntry> get_EventLogEntries();
    [CompilerGeneratedAttribute]
public sealed virtual EventLog get_EventLog();
    [CompilerGeneratedAttribute]
internal int get_NextEntryIndexToCollect();
    [CompilerGeneratedAttribute]
internal void set_NextEntryIndexToCollect(int value);
    [CompilerGeneratedAttribute]
internal bool get_LimitReached();
    [CompilerGeneratedAttribute]
internal void set_LimitReached(bool value);
    public sealed virtual void Dispose();
    [NullableContextAttribute("2")]
public sealed virtual void OnEventLogEntryWritten(object source, EntryWrittenEventArgs e);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataCollectorTypeUriAttribute("datacollector://Microsoft/EventLog/2.0")]
[DataCollectorFriendlyNameAttribute("Event Log")]
public class Microsoft.TestPlatform.Extensions.EventLogCollector.EventLogDataCollector : DataCollector {
    private static string EventLogFileName;
    private static string DefaultUri;
    private EventHandler`1<SessionStartEventArgs> _sessionStartEventHandler;
    private EventHandler`1<SessionEndEventArgs> _sessionEndEventHandler;
    private EventHandler`1<TestCaseStartEventArgs> _testCaseStartEventHandler;
    private EventHandler`1<TestCaseEndEventArgs> _testCaseEndEventHandler;
    private List`1<string> _eventLogDirectories;
    [NullableAttribute("2")]
private DataCollectionEvents _events;
    [NullableAttribute("2")]
private DataCollectionSink _dataSink;
    [NullableAttribute("2")]
private DataCollectionContext _dataCollectorContext;
    [NullableAttribute("2")]
private DataCollectionLogger _logger;
    private IFileHelper _fileHelper;
    private IDictionary`2<string, IEventLogContainer> _eventLogContainerMap;
    private bool _isDisposed;
    [CompilerGeneratedAttribute]
private int <MaxEntries>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ISet`1<string> <EventSources>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ISet`1<EventLogEntryType> <EntryTypes>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ISet`1<string> <EventLogNames>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<DataCollectionContext, EventLogSessionContext> <ContextMap>k__BackingField;
    internal int MaxEntries { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ISet`1<string> EventSources { get; private set; }
    [NullableAttribute("2")]
internal ISet`1<EventLogEntryType> EntryTypes { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ISet`1<string> EventLogNames { get; private set; }
    internal Dictionary`2<DataCollectionContext, EventLogSessionContext> ContextMap { get; }
    internal EventLogDataCollector(IFileHelper fileHelper);
    [CompilerGeneratedAttribute]
internal int get_MaxEntries();
    [CompilerGeneratedAttribute]
private void set_MaxEntries(int value);
    [CompilerGeneratedAttribute]
internal ISet`1<string> get_EventSources();
    [CompilerGeneratedAttribute]
private void set_EventSources(ISet`1<string> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal ISet`1<EventLogEntryType> get_EntryTypes();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_EntryTypes(ISet`1<EventLogEntryType> value);
    [CompilerGeneratedAttribute]
internal ISet`1<string> get_EventLogNames();
    [CompilerGeneratedAttribute]
private void set_EventLogNames(ISet`1<string> value);
    [CompilerGeneratedAttribute]
internal Dictionary`2<DataCollectionContext, EventLogSessionContext> get_ContextMap();
    [MemberNotNullAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void Initialize(XmlElement configurationElement, DataCollectionEvents events, DataCollectionSink dataSink, DataCollectionLogger logger, DataCollectionEnvironmentContext dataCollectionEnvironmentContext);
    internal string WriteEventLogs(List`1<EventLogEntry> eventLogEntries, int maxLogEntries, DataCollectionContext dataCollectionContext, TimeSpan requestedDuration, DateTime timeRequestReceived);
    protected virtual void Dispose(bool disposing);
    private static ISet`1<string> ParseCommaSeparatedList(string commaSeparatedList);
    private void OnSessionStart(object sender, SessionStartEventArgs e);
    private void OnSessionEnd(object sender, SessionEndEventArgs e);
    private void OnTestCaseStart(object sender, TestCaseStartEventArgs e);
    private void OnTestCaseEnd(object sender, TestCaseEndEventArgs e);
    private void RemoveTempEventLogDirs(List`1<string> tempDirs);
    private void StartCollectionForContext(DataCollectionContext dataCollectionContext);
    private void WriteCollectedEventLogEntries(DataCollectionContext dataCollectionContext, bool isSessionEnd, TimeSpan requestedDuration, DateTime timeRequestReceived);
    [MemberNotNullAttribute("EventLogNames")]
private void ConfigureEventLogNames(CollectorNameValueConfigurationManager collectorNameValueConfigurationManager, DataCollectionContext dataCollectorContext);
    private void ConfigureEventSources(CollectorNameValueConfigurationManager collectorNameValueConfigurationManager);
    [MemberNotNullAttribute("EntryTypes")]
private void ConfigureEntryTypes(CollectorNameValueConfigurationManager collectorNameValueConfigurationManager);
    private void ConfigureMaxEntries(CollectorNameValueConfigurationManager collectorNameValueConfigurationManager);
    private EventLogSessionContext GetEventLogSessionContext(DataCollectionContext dataCollectionContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.Extensions.EventLogCollector.EventLogSessionContext : object {
    private IDictionary`2<string, IEventLogContainer> _eventLogContainerMap;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <EventLogContainerStartIndexMap>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, int> <EventLogContainerEndIndexMap>k__BackingField;
    internal Dictionary`2<string, int> EventLogContainerStartIndexMap { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal Dictionary`2<string, int> EventLogContainerEndIndexMap { get; private set; }
    public EventLogSessionContext(IDictionary`2<string, IEventLogContainer> eventLogContainerMap);
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, int> get_EventLogContainerStartIndexMap();
    [CompilerGeneratedAttribute]
private void set_EventLogContainerStartIndexMap(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, int> get_EventLogContainerEndIndexMap();
    [CompilerGeneratedAttribute]
private void set_EventLogContainerEndIndexMap(Dictionary`2<string, int> value);
    [MemberNotNullAttribute("EventLogContainerEndIndexMap")]
public void CreateEventLogContainerEndIndexMap();
    [MemberNotNullAttribute("EventLogContainerStartIndexMap")]
public void CreateEventLogContainerStartIndexMap();
}
internal static class Microsoft.TestPlatform.Extensions.EventLogCollector.EventLogXmlWriter : object {
    [NullableContextAttribute("1")]
public static void WriteEventLogEntriesToXmlFile(string xmlFilePath, List`1<EventLogEntry> eventLogEntries, IFileHelper fileHelper);
}
[NullableContextAttribute("1")]
internal interface Microsoft.TestPlatform.Extensions.EventLogCollector.IEventLogContainer {
    public EventLog EventLog { get; }
    public List`1<EventLogEntry> EventLogEntries { get; }
    public abstract virtual EventLog get_EventLog();
    public abstract virtual List`1<EventLogEntry> get_EventLogEntries();
    [NullableContextAttribute("2")]
public abstract virtual void OnEventLogEntryWritten(object source, EntryWrittenEventArgs e);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.TestPlatform.Extensions.EventLogCollector.Resources.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string CleanupException { get; }
    internal static string ContextNotFoundException { get; }
    internal static string EventsLostError { get; }
    internal static string EventsLostWarning { get; }
    internal static string ReadError { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_CleanupException();
    internal static string get_ContextNotFoundException();
    internal static string get_EventsLostError();
    internal static string get_EventsLostWarning();
    internal static string get_ReadError();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.TestPlatform.Extensions.EventLogCollector.StringUtils : object {
    [ExtensionAttribute]
public static bool IsNullOrEmpty(string value);
    [ExtensionAttribute]
public static bool IsNullOrWhiteSpace(string value);
}
internal static class Microsoft.TestPlatform.Extensions.EventLogCollector.TPDebug : object {
    [ConditionalAttribute("DEBUG")]
public static void Assert(bool b);
    [NullableContextAttribute("1")]
[ConditionalAttribute("DEBUG")]
public static void Assert(bool b, string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
internal class Microsoft.VisualStudio.TestPlatform.TestExtensionTypesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type[] <Types>k__BackingField;
    public Type[] Types { get; }
    public TestExtensionTypesAttribute(Type[] types);
    [CompilerGeneratedAttribute]
public Type[] get_Types();
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
