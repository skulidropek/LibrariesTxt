public enum UIAutomationClient.AutomationElementMode : Enum {
    public int value__;
    public static AutomationElementMode AutomationElementMode_None;
    public static AutomationElementMode AutomationElementMode_Full;
}
[CoClassAttribute("UIAutomationClient.CUIAutomationClass")]
[GuidAttribute("30CBE57D-D9D0-452A-AB13-7AC5AC4825EE")]
public interface UIAutomationClient.CUIAutomation {
}
[CoClassAttribute("UIAutomationClient.CUIAutomation8Class")]
[GuidAttribute("34723AFF-0C9D-49D0-9896-7AB52DF8CD8A")]
public interface UIAutomationClient.CUIAutomation8 {
}
[GuidAttribute("E22AD333-B25F-460C-83D0-0581107395C9")]
[ClassInterfaceAttribute("0")]
[TypeLibTypeAttribute("2")]
public class UIAutomationClient.CUIAutomation8Class : object {
    [DispIdAttribute("1610678283")]
public IUIAutomationTreeWalker ControlViewWalker { get; }
    [DispIdAttribute("1610678284")]
public IUIAutomationTreeWalker ContentViewWalker { get; }
    [DispIdAttribute("1610678285")]
public IUIAutomationTreeWalker RawViewWalker { get; }
    [DispIdAttribute("1610678286")]
public IUIAutomationCondition RawViewCondition { get; }
    [DispIdAttribute("1610678287")]
public IUIAutomationCondition ControlViewCondition { get; }
    [DispIdAttribute("1610678288")]
public IUIAutomationCondition ContentViewCondition { get; }
    [DispIdAttribute("1610678317")]
public IUIAutomationProxyFactoryMapping ProxyFactoryMapping { get; }
    [DispIdAttribute("1610678323")]
public object ReservedNotSupportedValue { get; }
    [DispIdAttribute("1610678324")]
public object ReservedMixedAttributeValue { get; }
    [DispIdAttribute("1610743808")]
public int AutoSetFocus { get; public set; }
    [DispIdAttribute("1610743810")]
public UInt32 ConnectionTimeout { get; public set; }
    [DispIdAttribute("1610743812")]
public UInt32 TransactionTimeout { get; public set; }
    public virtual override int CompareElements(IUIAutomationElement el1, IUIAutomationElement el2);
    public virtual override int CompareRuntimeIds(Int32[] runtimeId1, Int32[] runtimeId2);
    public virtual override IUIAutomationElement GetRootElement();
    public virtual override IUIAutomationElement ElementFromHandle(IntPtr hwnd);
    public virtual override IUIAutomationElement ElementFromPoint(tagPOINT pt);
    public virtual override IUIAutomationElement GetFocusedElement();
    public virtual override IUIAutomationElement GetRootElementBuildCache(IUIAutomationCacheRequest cacheRequest);
    public virtual override IUIAutomationElement ElementFromHandleBuildCache(IntPtr hwnd, IUIAutomationCacheRequest cacheRequest);
    public virtual override IUIAutomationElement ElementFromPointBuildCache(tagPOINT pt, IUIAutomationCacheRequest cacheRequest);
    public virtual override IUIAutomationElement GetFocusedElementBuildCache(IUIAutomationCacheRequest cacheRequest);
    public virtual override IUIAutomationTreeWalker CreateTreeWalker(IUIAutomationCondition pCondition);
    public virtual override IUIAutomationTreeWalker get_ControlViewWalker();
    public virtual override IUIAutomationTreeWalker get_ContentViewWalker();
    public virtual override IUIAutomationTreeWalker get_RawViewWalker();
    public virtual override IUIAutomationCondition get_RawViewCondition();
    public virtual override IUIAutomationCondition get_ControlViewCondition();
    public virtual override IUIAutomationCondition get_ContentViewCondition();
    public virtual override IUIAutomationCacheRequest CreateCacheRequest();
    public virtual override IUIAutomationCondition CreateTrueCondition();
    public virtual override IUIAutomationCondition CreateFalseCondition();
    public virtual override IUIAutomationCondition CreatePropertyCondition(int propertyId, object value);
    public virtual override IUIAutomationCondition CreatePropertyConditionEx(int propertyId, object value, PropertyConditionFlags flags);
    public virtual override IUIAutomationCondition CreateAndCondition(IUIAutomationCondition condition1, IUIAutomationCondition condition2);
    public virtual override IUIAutomationCondition CreateAndConditionFromArray(IUIAutomationCondition[] conditions);
    public virtual override IUIAutomationCondition CreateAndConditionFromNativeArray(IUIAutomationCondition& conditions, int conditionCount);
    public virtual override IUIAutomationCondition CreateOrCondition(IUIAutomationCondition condition1, IUIAutomationCondition condition2);
    public virtual override IUIAutomationCondition CreateOrConditionFromArray(IUIAutomationCondition[] conditions);
    public virtual override IUIAutomationCondition CreateOrConditionFromNativeArray(IUIAutomationCondition& conditions, int conditionCount);
    public virtual override IUIAutomationCondition CreateNotCondition(IUIAutomationCondition condition);
    public virtual override void AddAutomationEventHandler(int eventId, IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationEventHandler handler);
    public virtual override void RemoveAutomationEventHandler(int eventId, IUIAutomationElement element, IUIAutomationEventHandler handler);
    public virtual override void AddPropertyChangedEventHandlerNativeArray(IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationPropertyChangedEventHandler handler, Int32& propertyArray, int propertyCount);
    public virtual override void AddPropertyChangedEventHandler(IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationPropertyChangedEventHandler handler, Int32[] propertyArray);
    public virtual override void RemovePropertyChangedEventHandler(IUIAutomationElement element, IUIAutomationPropertyChangedEventHandler handler);
    public virtual override void AddStructureChangedEventHandler(IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationStructureChangedEventHandler handler);
    public virtual override void RemoveStructureChangedEventHandler(IUIAutomationElement element, IUIAutomationStructureChangedEventHandler handler);
    public virtual override void AddFocusChangedEventHandler(IUIAutomationCacheRequest cacheRequest, IUIAutomationFocusChangedEventHandler handler);
    public virtual override void RemoveFocusChangedEventHandler(IUIAutomationFocusChangedEventHandler handler);
    public virtual override void RemoveAllEventHandlers();
    public virtual override Int32[] IntNativeArrayToSafeArray(Int32& array, int arrayCount);
    public virtual override int IntSafeArrayToNativeArray(Int32[] intArray, IntPtr array);
    public virtual override object RectToVariant(tagRECT rc);
    public virtual override tagRECT VariantToRect(object var);
    public virtual override int SafeArrayToRectNativeArray(Double[] rects, IntPtr rectArray);
    public virtual override IUIAutomationProxyFactoryEntry CreateProxyFactoryEntry(IUIAutomationProxyFactory factory);
    public virtual override IUIAutomationProxyFactoryMapping get_ProxyFactoryMapping();
    public virtual override string GetPropertyProgrammaticName(int property);
    public virtual override string GetPatternProgrammaticName(int pattern);
    public virtual override void PollForPotentialSupportedPatterns(IUIAutomationElement pElement, Int32[]& patternIds, String[]& patternNames);
    public virtual override void PollForPotentialSupportedProperties(IUIAutomationElement pElement, Int32[]& propertyIds, String[]& propertyNames);
    public virtual override int CheckNotSupported(object value);
    public virtual override object get_ReservedNotSupportedValue();
    public virtual override object get_ReservedMixedAttributeValue();
    public virtual override IUIAutomationElement ElementFromIAccessible(IAccessible accessible, int childId);
    public virtual override IUIAutomationElement ElementFromIAccessibleBuildCache(IAccessible accessible, int childId, IUIAutomationCacheRequest cacheRequest);
    public virtual override int get_AutoSetFocus();
    public virtual override void set_AutoSetFocus(int AutoSetFocus);
    public virtual override UInt32 get_ConnectionTimeout();
    public virtual override void set_ConnectionTimeout(UInt32 timeout);
    public virtual override UInt32 get_TransactionTimeout();
    public virtual override void set_TransactionTimeout(UInt32 timeout);
}
[GuidAttribute("FF48DBA4-60EF-4201-AA87-54103EEF594E")]
[TypeLibTypeAttribute("2")]
[ClassInterfaceAttribute("0")]
[ComConversionLossAttribute]
public class UIAutomationClient.CUIAutomationClass : object {
    [DispIdAttribute("1610678283")]
public IUIAutomationTreeWalker ControlViewWalker { get; }
    [DispIdAttribute("1610678284")]
public IUIAutomationTreeWalker ContentViewWalker { get; }
    [DispIdAttribute("1610678285")]
public IUIAutomationTreeWalker RawViewWalker { get; }
    [DispIdAttribute("1610678286")]
public IUIAutomationCondition RawViewCondition { get; }
    [DispIdAttribute("1610678287")]
public IUIAutomationCondition ControlViewCondition { get; }
    [DispIdAttribute("1610678288")]
public IUIAutomationCondition ContentViewCondition { get; }
    [DispIdAttribute("1610678317")]
public IUIAutomationProxyFactoryMapping ProxyFactoryMapping { get; }
    [DispIdAttribute("1610678323")]
public object ReservedNotSupportedValue { get; }
    [DispIdAttribute("1610678324")]
public object ReservedMixedAttributeValue { get; }
    public virtual override int CompareElements(IUIAutomationElement el1, IUIAutomationElement el2);
    public virtual override int CompareRuntimeIds(Int32[] runtimeId1, Int32[] runtimeId2);
    public virtual override IUIAutomationElement GetRootElement();
    public virtual override IUIAutomationElement ElementFromHandle(IntPtr hwnd);
    public virtual override IUIAutomationElement ElementFromPoint(tagPOINT pt);
    public virtual override IUIAutomationElement GetFocusedElement();
    public virtual override IUIAutomationElement GetRootElementBuildCache(IUIAutomationCacheRequest cacheRequest);
    public virtual override IUIAutomationElement ElementFromHandleBuildCache(IntPtr hwnd, IUIAutomationCacheRequest cacheRequest);
    public virtual override IUIAutomationElement ElementFromPointBuildCache(tagPOINT pt, IUIAutomationCacheRequest cacheRequest);
    public virtual override IUIAutomationElement GetFocusedElementBuildCache(IUIAutomationCacheRequest cacheRequest);
    public virtual override IUIAutomationTreeWalker CreateTreeWalker(IUIAutomationCondition pCondition);
    public virtual override IUIAutomationTreeWalker get_ControlViewWalker();
    public virtual override IUIAutomationTreeWalker get_ContentViewWalker();
    public virtual override IUIAutomationTreeWalker get_RawViewWalker();
    public virtual override IUIAutomationCondition get_RawViewCondition();
    public virtual override IUIAutomationCondition get_ControlViewCondition();
    public virtual override IUIAutomationCondition get_ContentViewCondition();
    public virtual override IUIAutomationCacheRequest CreateCacheRequest();
    public virtual override IUIAutomationCondition CreateTrueCondition();
    public virtual override IUIAutomationCondition CreateFalseCondition();
    public virtual override IUIAutomationCondition CreatePropertyCondition(int propertyId, object value);
    public virtual override IUIAutomationCondition CreatePropertyConditionEx(int propertyId, object value, PropertyConditionFlags flags);
    public virtual override IUIAutomationCondition CreateAndCondition(IUIAutomationCondition condition1, IUIAutomationCondition condition2);
    public virtual override IUIAutomationCondition CreateAndConditionFromArray(IUIAutomationCondition[] conditions);
    public virtual override IUIAutomationCondition CreateAndConditionFromNativeArray(IUIAutomationCondition& conditions, int conditionCount);
    public virtual override IUIAutomationCondition CreateOrCondition(IUIAutomationCondition condition1, IUIAutomationCondition condition2);
    public virtual override IUIAutomationCondition CreateOrConditionFromArray(IUIAutomationCondition[] conditions);
    public virtual override IUIAutomationCondition CreateOrConditionFromNativeArray(IUIAutomationCondition& conditions, int conditionCount);
    public virtual override IUIAutomationCondition CreateNotCondition(IUIAutomationCondition condition);
    public virtual override void AddAutomationEventHandler(int eventId, IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationEventHandler handler);
    public virtual override void RemoveAutomationEventHandler(int eventId, IUIAutomationElement element, IUIAutomationEventHandler handler);
    public virtual override void AddPropertyChangedEventHandlerNativeArray(IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationPropertyChangedEventHandler handler, Int32& propertyArray, int propertyCount);
    public virtual override void AddPropertyChangedEventHandler(IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationPropertyChangedEventHandler handler, Int32[] propertyArray);
    public virtual override void RemovePropertyChangedEventHandler(IUIAutomationElement element, IUIAutomationPropertyChangedEventHandler handler);
    public virtual override void AddStructureChangedEventHandler(IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationStructureChangedEventHandler handler);
    public virtual override void RemoveStructureChangedEventHandler(IUIAutomationElement element, IUIAutomationStructureChangedEventHandler handler);
    public virtual override void AddFocusChangedEventHandler(IUIAutomationCacheRequest cacheRequest, IUIAutomationFocusChangedEventHandler handler);
    public virtual override void RemoveFocusChangedEventHandler(IUIAutomationFocusChangedEventHandler handler);
    public virtual override void RemoveAllEventHandlers();
    public virtual override Int32[] IntNativeArrayToSafeArray(Int32& array, int arrayCount);
    public virtual override int IntSafeArrayToNativeArray(Int32[] intArray, IntPtr array);
    public virtual override object RectToVariant(tagRECT rc);
    public virtual override tagRECT VariantToRect(object var);
    public virtual override int SafeArrayToRectNativeArray(Double[] rects, IntPtr rectArray);
    public virtual override IUIAutomationProxyFactoryEntry CreateProxyFactoryEntry(IUIAutomationProxyFactory factory);
    public virtual override IUIAutomationProxyFactoryMapping get_ProxyFactoryMapping();
    public virtual override string GetPropertyProgrammaticName(int property);
    public virtual override string GetPatternProgrammaticName(int pattern);
    public virtual override void PollForPotentialSupportedPatterns(IUIAutomationElement pElement, Int32[]& patternIds, String[]& patternNames);
    public virtual override void PollForPotentialSupportedProperties(IUIAutomationElement pElement, Int32[]& propertyIds, String[]& propertyNames);
    public virtual override int CheckNotSupported(object value);
    public virtual override object get_ReservedNotSupportedValue();
    public virtual override object get_ReservedMixedAttributeValue();
    public virtual override IUIAutomationElement ElementFromIAccessible(IAccessible accessible, int childId);
    public virtual override IUIAutomationElement ElementFromIAccessibleBuildCache(IAccessible accessible, int childId, IUIAutomationCacheRequest cacheRequest);
}
public enum UIAutomationClient.DockPosition : Enum {
    public int value__;
    public static DockPosition DockPosition_Top;
    public static DockPosition DockPosition_Left;
    public static DockPosition DockPosition_Bottom;
    public static DockPosition DockPosition_Right;
    public static DockPosition DockPosition_Fill;
    public static DockPosition DockPosition_None;
}
public enum UIAutomationClient.ExpandCollapseState : Enum {
    public int value__;
    public static ExpandCollapseState ExpandCollapseState_Collapsed;
    public static ExpandCollapseState ExpandCollapseState_Expanded;
    public static ExpandCollapseState ExpandCollapseState_PartiallyExpanded;
    public static ExpandCollapseState ExpandCollapseState_LeafNode;
}
public class UIAutomationClient.ExtendedProperty : ValueType {
    public string PropertyName;
    public string PropertyValue;
}
[GuidAttribute("618736E0-3C3D-11CF-810C-00AA00389B71")]
[TypeLibTypeAttribute("4176")]
public interface UIAutomationClient.IAccessible {
    [DispIdAttribute("-5000")]
public object accParent { get; }
    [DispIdAttribute("-5001")]
public int accChildCount { get; }
    [DispIdAttribute("-5002")]
public object accChild { get; }
    [DispIdAttribute("-5003")]
public string accName { get; public set; }
    [DispIdAttribute("-5004")]
public string accValue { get; public set; }
    [DispIdAttribute("-5005")]
public string accDescription { get; }
    [DispIdAttribute("-5006")]
public object accRole { get; }
    [DispIdAttribute("-5007")]
public object accState { get; }
    [DispIdAttribute("-5008")]
public string accHelp { get; }
    [DispIdAttribute("-5009")]
public int accHelpTopic { get; }
    [DispIdAttribute("-5010")]
public string accKeyboardShortcut { get; }
    [DispIdAttribute("-5011")]
public object accFocus { get; }
    [DispIdAttribute("-5012")]
public object accSelection { get; }
    [DispIdAttribute("-5013")]
public string accDefaultAction { get; }
    [DispIdAttribute("-5000")]
[TypeLibFuncAttribute("64")]
public abstract virtual object get_accParent();
    [TypeLibFuncAttribute("64")]
[DispIdAttribute("-5001")]
public abstract virtual int get_accChildCount();
    [TypeLibFuncAttribute("64")]
[DispIdAttribute("-5002")]
public abstract virtual object get_accChild(object varChild);
    [TypeLibFuncAttribute("64")]
[DispIdAttribute("-5003")]
public abstract virtual string get_accName(object varChild);
    [DispIdAttribute("-5004")]
[TypeLibFuncAttribute("64")]
public abstract virtual string get_accValue(object varChild);
    [TypeLibFuncAttribute("64")]
[DispIdAttribute("-5005")]
public abstract virtual string get_accDescription(object varChild);
    [TypeLibFuncAttribute("64")]
[DispIdAttribute("-5006")]
public abstract virtual object get_accRole(object varChild);
    [DispIdAttribute("-5007")]
[TypeLibFuncAttribute("64")]
public abstract virtual object get_accState(object varChild);
    [DispIdAttribute("-5008")]
[TypeLibFuncAttribute("64")]
public abstract virtual string get_accHelp(object varChild);
    [TypeLibFuncAttribute("64")]
[DispIdAttribute("-5009")]
public abstract virtual int get_accHelpTopic(String& pszHelpFile, object varChild);
    [TypeLibFuncAttribute("64")]
[DispIdAttribute("-5010")]
public abstract virtual string get_accKeyboardShortcut(object varChild);
    [TypeLibFuncAttribute("64")]
[DispIdAttribute("-5011")]
public abstract virtual object get_accFocus();
    [DispIdAttribute("-5012")]
[TypeLibFuncAttribute("64")]
public abstract virtual object get_accSelection();
    [DispIdAttribute("-5013")]
[TypeLibFuncAttribute("64")]
public abstract virtual string get_accDefaultAction(object varChild);
    [TypeLibFuncAttribute("64")]
[DispIdAttribute("-5014")]
public abstract virtual void accSelect(int flagsSelect, object varChild);
    [DispIdAttribute("-5015")]
[TypeLibFuncAttribute("64")]
public abstract virtual void accLocation(Int32& pxLeft, Int32& pyTop, Int32& pcxWidth, Int32& pcyHeight, object varChild);
    [TypeLibFuncAttribute("64")]
[DispIdAttribute("-5016")]
public abstract virtual object accNavigate(int navDir, object varStart);
    [TypeLibFuncAttribute("64")]
[DispIdAttribute("-5017")]
public abstract virtual object accHitTest(int xLeft, int yTop);
    [DispIdAttribute("-5018")]
[TypeLibFuncAttribute("64")]
public abstract virtual void accDoDefaultAction(object varChild);
    [DispIdAttribute("-5003")]
[TypeLibFuncAttribute("64")]
public abstract virtual void set_accName(object varChild, string pszName);
    [TypeLibFuncAttribute("64")]
[DispIdAttribute("-5004")]
public abstract virtual void set_accValue(object varChild, string pszValue);
}
[GuidAttribute("D6DD68D1-86FD-4332-8666-9ABEDEA2D24C")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IRawElementProviderSimple {
    [DispIdAttribute("1610678272")]
public ProviderOptions ProviderOptions { get; }
    [DispIdAttribute("1610678275")]
public IRawElementProviderSimple HostRawElementProvider { get; }
    public abstract virtual ProviderOptions get_ProviderOptions();
    public abstract virtual object GetPatternProvider(int patternId);
    public abstract virtual object GetPropertyValue(int propertyId);
    public abstract virtual IRawElementProviderSimple get_HostRawElementProvider();
}
[ComConversionLossAttribute]
[GuidAttribute("30CBE57D-D9D0-452A-AB13-7AC5AC4825EE")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomation {
    [DispIdAttribute("1610678283")]
public IUIAutomationTreeWalker ControlViewWalker { get; }
    [DispIdAttribute("1610678284")]
public IUIAutomationTreeWalker ContentViewWalker { get; }
    [DispIdAttribute("1610678285")]
public IUIAutomationTreeWalker RawViewWalker { get; }
    [DispIdAttribute("1610678286")]
public IUIAutomationCondition RawViewCondition { get; }
    [DispIdAttribute("1610678287")]
public IUIAutomationCondition ControlViewCondition { get; }
    [DispIdAttribute("1610678288")]
public IUIAutomationCondition ContentViewCondition { get; }
    [DispIdAttribute("1610678317")]
public IUIAutomationProxyFactoryMapping ProxyFactoryMapping { get; }
    [DispIdAttribute("1610678323")]
public object ReservedNotSupportedValue { get; }
    [DispIdAttribute("1610678324")]
public object ReservedMixedAttributeValue { get; }
    public abstract virtual int CompareElements(IUIAutomationElement el1, IUIAutomationElement el2);
    public abstract virtual int CompareRuntimeIds(Int32[] runtimeId1, Int32[] runtimeId2);
    public abstract virtual IUIAutomationElement GetRootElement();
    public abstract virtual IUIAutomationElement ElementFromHandle(IntPtr hwnd);
    public abstract virtual IUIAutomationElement ElementFromPoint(tagPOINT pt);
    public abstract virtual IUIAutomationElement GetFocusedElement();
    public abstract virtual IUIAutomationElement GetRootElementBuildCache(IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement ElementFromHandleBuildCache(IntPtr hwnd, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement ElementFromPointBuildCache(tagPOINT pt, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement GetFocusedElementBuildCache(IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationTreeWalker CreateTreeWalker(IUIAutomationCondition pCondition);
    public abstract virtual IUIAutomationTreeWalker get_ControlViewWalker();
    public abstract virtual IUIAutomationTreeWalker get_ContentViewWalker();
    public abstract virtual IUIAutomationTreeWalker get_RawViewWalker();
    public abstract virtual IUIAutomationCondition get_RawViewCondition();
    public abstract virtual IUIAutomationCondition get_ControlViewCondition();
    public abstract virtual IUIAutomationCondition get_ContentViewCondition();
    public abstract virtual IUIAutomationCacheRequest CreateCacheRequest();
    public abstract virtual IUIAutomationCondition CreateTrueCondition();
    public abstract virtual IUIAutomationCondition CreateFalseCondition();
    public abstract virtual IUIAutomationCondition CreatePropertyCondition(int propertyId, object value);
    public abstract virtual IUIAutomationCondition CreatePropertyConditionEx(int propertyId, object value, PropertyConditionFlags flags);
    public abstract virtual IUIAutomationCondition CreateAndCondition(IUIAutomationCondition condition1, IUIAutomationCondition condition2);
    public abstract virtual IUIAutomationCondition CreateAndConditionFromArray(IUIAutomationCondition[] conditions);
    public abstract virtual IUIAutomationCondition CreateAndConditionFromNativeArray(IUIAutomationCondition& conditions, int conditionCount);
    public abstract virtual IUIAutomationCondition CreateOrCondition(IUIAutomationCondition condition1, IUIAutomationCondition condition2);
    public abstract virtual IUIAutomationCondition CreateOrConditionFromArray(IUIAutomationCondition[] conditions);
    public abstract virtual IUIAutomationCondition CreateOrConditionFromNativeArray(IUIAutomationCondition& conditions, int conditionCount);
    public abstract virtual IUIAutomationCondition CreateNotCondition(IUIAutomationCondition condition);
    public abstract virtual void AddAutomationEventHandler(int eventId, IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationEventHandler handler);
    public abstract virtual void RemoveAutomationEventHandler(int eventId, IUIAutomationElement element, IUIAutomationEventHandler handler);
    public abstract virtual void AddPropertyChangedEventHandlerNativeArray(IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationPropertyChangedEventHandler handler, Int32& propertyArray, int propertyCount);
    public abstract virtual void AddPropertyChangedEventHandler(IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationPropertyChangedEventHandler handler, Int32[] propertyArray);
    public abstract virtual void RemovePropertyChangedEventHandler(IUIAutomationElement element, IUIAutomationPropertyChangedEventHandler handler);
    public abstract virtual void AddStructureChangedEventHandler(IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationStructureChangedEventHandler handler);
    public abstract virtual void RemoveStructureChangedEventHandler(IUIAutomationElement element, IUIAutomationStructureChangedEventHandler handler);
    public abstract virtual void AddFocusChangedEventHandler(IUIAutomationCacheRequest cacheRequest, IUIAutomationFocusChangedEventHandler handler);
    public abstract virtual void RemoveFocusChangedEventHandler(IUIAutomationFocusChangedEventHandler handler);
    public abstract virtual void RemoveAllEventHandlers();
    public abstract virtual Int32[] IntNativeArrayToSafeArray(Int32& array, int arrayCount);
    public abstract virtual int IntSafeArrayToNativeArray(Int32[] intArray, IntPtr array);
    public abstract virtual object RectToVariant(tagRECT rc);
    public abstract virtual tagRECT VariantToRect(object var);
    public abstract virtual int SafeArrayToRectNativeArray(Double[] rects, IntPtr rectArray);
    public abstract virtual IUIAutomationProxyFactoryEntry CreateProxyFactoryEntry(IUIAutomationProxyFactory factory);
    public abstract virtual IUIAutomationProxyFactoryMapping get_ProxyFactoryMapping();
    public abstract virtual string GetPropertyProgrammaticName(int property);
    public abstract virtual string GetPatternProgrammaticName(int pattern);
    public abstract virtual void PollForPotentialSupportedPatterns(IUIAutomationElement pElement, Int32[]& patternIds, String[]& patternNames);
    public abstract virtual void PollForPotentialSupportedProperties(IUIAutomationElement pElement, Int32[]& propertyIds, String[]& propertyNames);
    public abstract virtual int CheckNotSupported(object value);
    public abstract virtual object get_ReservedNotSupportedValue();
    public abstract virtual object get_ReservedMixedAttributeValue();
    public abstract virtual IUIAutomationElement ElementFromIAccessible(IAccessible accessible, int childId);
    public abstract virtual IUIAutomationElement ElementFromIAccessibleBuildCache(IAccessible accessible, int childId, IUIAutomationCacheRequest cacheRequest);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("34723AFF-0C9D-49D0-9896-7AB52DF8CD8A")]
public interface UIAutomationClient.IUIAutomation2 {
    [DispIdAttribute("1610678283")]
public IUIAutomationTreeWalker ControlViewWalker { get; }
    [DispIdAttribute("1610678284")]
public IUIAutomationTreeWalker ContentViewWalker { get; }
    [DispIdAttribute("1610678285")]
public IUIAutomationTreeWalker RawViewWalker { get; }
    [DispIdAttribute("1610678286")]
public IUIAutomationCondition RawViewCondition { get; }
    [DispIdAttribute("1610678287")]
public IUIAutomationCondition ControlViewCondition { get; }
    [DispIdAttribute("1610678288")]
public IUIAutomationCondition ContentViewCondition { get; }
    [DispIdAttribute("1610678317")]
public IUIAutomationProxyFactoryMapping ProxyFactoryMapping { get; }
    [DispIdAttribute("1610678323")]
public object ReservedNotSupportedValue { get; }
    [DispIdAttribute("1610678324")]
public object ReservedMixedAttributeValue { get; }
    [DispIdAttribute("1610743808")]
public int AutoSetFocus { get; public set; }
    [DispIdAttribute("1610743810")]
public UInt32 ConnectionTimeout { get; public set; }
    [DispIdAttribute("1610743812")]
public UInt32 TransactionTimeout { get; public set; }
    public abstract virtual int CompareElements(IUIAutomationElement el1, IUIAutomationElement el2);
    public abstract virtual int CompareRuntimeIds(Int32[] runtimeId1, Int32[] runtimeId2);
    public abstract virtual IUIAutomationElement GetRootElement();
    public abstract virtual IUIAutomationElement ElementFromHandle(IntPtr hwnd);
    public abstract virtual IUIAutomationElement ElementFromPoint(tagPOINT pt);
    public abstract virtual IUIAutomationElement GetFocusedElement();
    public abstract virtual IUIAutomationElement GetRootElementBuildCache(IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement ElementFromHandleBuildCache(IntPtr hwnd, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement ElementFromPointBuildCache(tagPOINT pt, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement GetFocusedElementBuildCache(IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationTreeWalker CreateTreeWalker(IUIAutomationCondition pCondition);
    public abstract virtual IUIAutomationTreeWalker get_ControlViewWalker();
    public abstract virtual IUIAutomationTreeWalker get_ContentViewWalker();
    public abstract virtual IUIAutomationTreeWalker get_RawViewWalker();
    public abstract virtual IUIAutomationCondition get_RawViewCondition();
    public abstract virtual IUIAutomationCondition get_ControlViewCondition();
    public abstract virtual IUIAutomationCondition get_ContentViewCondition();
    public abstract virtual IUIAutomationCacheRequest CreateCacheRequest();
    public abstract virtual IUIAutomationCondition CreateTrueCondition();
    public abstract virtual IUIAutomationCondition CreateFalseCondition();
    public abstract virtual IUIAutomationCondition CreatePropertyCondition(int propertyId, object value);
    public abstract virtual IUIAutomationCondition CreatePropertyConditionEx(int propertyId, object value, PropertyConditionFlags flags);
    public abstract virtual IUIAutomationCondition CreateAndCondition(IUIAutomationCondition condition1, IUIAutomationCondition condition2);
    public abstract virtual IUIAutomationCondition CreateAndConditionFromArray(IUIAutomationCondition[] conditions);
    public abstract virtual IUIAutomationCondition CreateAndConditionFromNativeArray(IUIAutomationCondition& conditions, int conditionCount);
    public abstract virtual IUIAutomationCondition CreateOrCondition(IUIAutomationCondition condition1, IUIAutomationCondition condition2);
    public abstract virtual IUIAutomationCondition CreateOrConditionFromArray(IUIAutomationCondition[] conditions);
    public abstract virtual IUIAutomationCondition CreateOrConditionFromNativeArray(IUIAutomationCondition& conditions, int conditionCount);
    public abstract virtual IUIAutomationCondition CreateNotCondition(IUIAutomationCondition condition);
    public abstract virtual void AddAutomationEventHandler(int eventId, IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationEventHandler handler);
    public abstract virtual void RemoveAutomationEventHandler(int eventId, IUIAutomationElement element, IUIAutomationEventHandler handler);
    public abstract virtual void AddPropertyChangedEventHandlerNativeArray(IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationPropertyChangedEventHandler handler, Int32& propertyArray, int propertyCount);
    public abstract virtual void AddPropertyChangedEventHandler(IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationPropertyChangedEventHandler handler, Int32[] propertyArray);
    public abstract virtual void RemovePropertyChangedEventHandler(IUIAutomationElement element, IUIAutomationPropertyChangedEventHandler handler);
    public abstract virtual void AddStructureChangedEventHandler(IUIAutomationElement element, TreeScope scope, IUIAutomationCacheRequest cacheRequest, IUIAutomationStructureChangedEventHandler handler);
    public abstract virtual void RemoveStructureChangedEventHandler(IUIAutomationElement element, IUIAutomationStructureChangedEventHandler handler);
    public abstract virtual void AddFocusChangedEventHandler(IUIAutomationCacheRequest cacheRequest, IUIAutomationFocusChangedEventHandler handler);
    public abstract virtual void RemoveFocusChangedEventHandler(IUIAutomationFocusChangedEventHandler handler);
    public abstract virtual void RemoveAllEventHandlers();
    public abstract virtual Int32[] IntNativeArrayToSafeArray(Int32& array, int arrayCount);
    public abstract virtual int IntSafeArrayToNativeArray(Int32[] intArray, IntPtr array);
    public abstract virtual object RectToVariant(tagRECT rc);
    public abstract virtual tagRECT VariantToRect(object var);
    public abstract virtual int SafeArrayToRectNativeArray(Double[] rects, IntPtr rectArray);
    public abstract virtual IUIAutomationProxyFactoryEntry CreateProxyFactoryEntry(IUIAutomationProxyFactory factory);
    public abstract virtual IUIAutomationProxyFactoryMapping get_ProxyFactoryMapping();
    public abstract virtual string GetPropertyProgrammaticName(int property);
    public abstract virtual string GetPatternProgrammaticName(int pattern);
    public abstract virtual void PollForPotentialSupportedPatterns(IUIAutomationElement pElement, Int32[]& patternIds, String[]& patternNames);
    public abstract virtual void PollForPotentialSupportedProperties(IUIAutomationElement pElement, Int32[]& propertyIds, String[]& propertyNames);
    public abstract virtual int CheckNotSupported(object value);
    public abstract virtual object get_ReservedNotSupportedValue();
    public abstract virtual object get_ReservedMixedAttributeValue();
    public abstract virtual IUIAutomationElement ElementFromIAccessible(IAccessible accessible, int childId);
    public abstract virtual IUIAutomationElement ElementFromIAccessibleBuildCache(IAccessible accessible, int childId, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual int get_AutoSetFocus();
    public abstract virtual void set_AutoSetFocus(int AutoSetFocus);
    public abstract virtual UInt32 get_ConnectionTimeout();
    public abstract virtual void set_ConnectionTimeout(UInt32 timeout);
    public abstract virtual UInt32 get_TransactionTimeout();
    public abstract virtual void set_TransactionTimeout(UInt32 timeout);
}
[ComConversionLossAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("A7D0AF36-B912-45FE-9855-091DDC174AEC")]
public interface UIAutomationClient.IUIAutomationAndCondition {
    [DispIdAttribute("1610743808")]
public int ChildCount { get; }
    public abstract virtual int get_ChildCount();
    public abstract virtual void GetChildrenAsNativeArray(IntPtr childArray, Int32& childArrayCount);
    public abstract virtual IUIAutomationCondition[] GetChildren();
}
[GuidAttribute("9A175B21-339E-41B1-8E8B-623F6B681098")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationAnnotationPattern {
    [DispIdAttribute("1610678272")]
public int CurrentAnnotationTypeId { get; }
    [DispIdAttribute("1610678273")]
public string CurrentAnnotationTypeName { get; }
    [DispIdAttribute("1610678274")]
public string CurrentAuthor { get; }
    [DispIdAttribute("1610678275")]
public string CurrentDateTime { get; }
    [DispIdAttribute("1610678276")]
public IUIAutomationElement CurrentTarget { get; }
    [DispIdAttribute("1610678277")]
public int CachedAnnotationTypeId { get; }
    [DispIdAttribute("1610678278")]
public string CachedAnnotationTypeName { get; }
    [DispIdAttribute("1610678279")]
public string CachedAuthor { get; }
    [DispIdAttribute("1610678280")]
public string CachedDateTime { get; }
    [DispIdAttribute("1610678281")]
public IUIAutomationElement CachedTarget { get; }
    public abstract virtual int get_CurrentAnnotationTypeId();
    public abstract virtual string get_CurrentAnnotationTypeName();
    public abstract virtual string get_CurrentAuthor();
    public abstract virtual string get_CurrentDateTime();
    public abstract virtual IUIAutomationElement get_CurrentTarget();
    public abstract virtual int get_CachedAnnotationTypeId();
    public abstract virtual string get_CachedAnnotationTypeName();
    public abstract virtual string get_CachedAuthor();
    public abstract virtual string get_CachedDateTime();
    public abstract virtual IUIAutomationElement get_CachedTarget();
}
[GuidAttribute("1B4E1F2E-75EB-4D0B-8952-5A69988E2307")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationBoolCondition {
    [DispIdAttribute("1610743808")]
public int BooleanValue { get; }
    public abstract virtual int get_BooleanValue();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("B32A92B5-BC25-4078-9C08-D7EE95C48E03")]
public interface UIAutomationClient.IUIAutomationCacheRequest {
    [DispIdAttribute("1610678275")]
public TreeScope TreeScope { get; public set; }
    [DispIdAttribute("1610678277")]
public IUIAutomationCondition TreeFilter { get; public set; }
    [DispIdAttribute("1610678279")]
public AutomationElementMode AutomationElementMode { get; public set; }
    public abstract virtual void AddProperty(int propertyId);
    public abstract virtual void AddPattern(int patternId);
    public abstract virtual IUIAutomationCacheRequest Clone();
    public abstract virtual TreeScope get_TreeScope();
    public abstract virtual void set_TreeScope(TreeScope scope);
    public abstract virtual IUIAutomationCondition get_TreeFilter();
    public abstract virtual void set_TreeFilter(IUIAutomationCondition filter);
    public abstract virtual AutomationElementMode get_AutomationElementMode();
    public abstract virtual void set_AutomationElementMode(AutomationElementMode mode);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("352FFBA8-0973-437C-A61F-F64CAFD81DF9")]
public interface UIAutomationClient.IUIAutomationCondition {
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("FDE5EF97-1464-48F6-90BF-43D0948E86EC")]
public interface UIAutomationClient.IUIAutomationDockPattern {
    [DispIdAttribute("1610678273")]
public DockPosition CurrentDockPosition { get; }
    [DispIdAttribute("1610678274")]
public DockPosition CachedDockPosition { get; }
    public abstract virtual void SetDockPosition(DockPosition dockPos);
    public abstract virtual DockPosition get_CurrentDockPosition();
    public abstract virtual DockPosition get_CachedDockPosition();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("1DC7B570-1F54-4BAD-BCDA-D36A722FB7BD")]
public interface UIAutomationClient.IUIAutomationDragPattern {
    [DispIdAttribute("1610678272")]
public int CurrentIsGrabbed { get; }
    [DispIdAttribute("1610678273")]
public int CachedIsGrabbed { get; }
    [DispIdAttribute("1610678274")]
public string CurrentDropEffect { get; }
    [DispIdAttribute("1610678275")]
public string CachedDropEffect { get; }
    [DispIdAttribute("1610678276")]
public String[] CurrentDropEffects { get; }
    [DispIdAttribute("1610678277")]
public String[] CachedDropEffects { get; }
    public abstract virtual int get_CurrentIsGrabbed();
    public abstract virtual int get_CachedIsGrabbed();
    public abstract virtual string get_CurrentDropEffect();
    public abstract virtual string get_CachedDropEffect();
    public abstract virtual String[] get_CurrentDropEffects();
    public abstract virtual String[] get_CachedDropEffects();
    public abstract virtual IUIAutomationElementArray GetCurrentGrabbedItems();
    public abstract virtual IUIAutomationElementArray GetCachedGrabbedItems();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("69A095F7-EEE4-430E-A46B-FB73B1AE39A5")]
public interface UIAutomationClient.IUIAutomationDropTargetPattern {
    [DispIdAttribute("1610678272")]
public string CurrentDropTargetEffect { get; }
    [DispIdAttribute("1610678273")]
public string CachedDropTargetEffect { get; }
    [DispIdAttribute("1610678274")]
public String[] CurrentDropTargetEffects { get; }
    [DispIdAttribute("1610678275")]
public String[] CachedDropTargetEffects { get; }
    public abstract virtual string get_CurrentDropTargetEffect();
    public abstract virtual string get_CachedDropTargetEffect();
    public abstract virtual String[] get_CurrentDropTargetEffects();
    public abstract virtual String[] get_CachedDropTargetEffects();
}
[GuidAttribute("D22108AA-8AC5-49A5-837B-37BBB3D7591E")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationElement {
    [DispIdAttribute("1610678289")]
public int CurrentProcessId { get; }
    [DispIdAttribute("1610678290")]
public int CurrentControlType { get; }
    [DispIdAttribute("1610678291")]
public string CurrentLocalizedControlType { get; }
    [DispIdAttribute("1610678292")]
public string CurrentName { get; }
    [DispIdAttribute("1610678293")]
public string CurrentAcceleratorKey { get; }
    [DispIdAttribute("1610678294")]
public string CurrentAccessKey { get; }
    [DispIdAttribute("1610678295")]
public int CurrentHasKeyboardFocus { get; }
    [DispIdAttribute("1610678296")]
public int CurrentIsKeyboardFocusable { get; }
    [DispIdAttribute("1610678297")]
public int CurrentIsEnabled { get; }
    [DispIdAttribute("1610678298")]
public string CurrentAutomationId { get; }
    [DispIdAttribute("1610678299")]
public string CurrentClassName { get; }
    [DispIdAttribute("1610678300")]
public string CurrentHelpText { get; }
    [DispIdAttribute("1610678301")]
public int CurrentCulture { get; }
    [DispIdAttribute("1610678302")]
public int CurrentIsControlElement { get; }
    [DispIdAttribute("1610678303")]
public int CurrentIsContentElement { get; }
    [DispIdAttribute("1610678304")]
public int CurrentIsPassword { get; }
    [DispIdAttribute("1610678305")]
public IntPtr CurrentNativeWindowHandle { get; }
    [DispIdAttribute("1610678306")]
public string CurrentItemType { get; }
    [DispIdAttribute("1610678307")]
public int CurrentIsOffscreen { get; }
    [DispIdAttribute("1610678308")]
public OrientationType CurrentOrientation { get; }
    [DispIdAttribute("1610678309")]
public string CurrentFrameworkId { get; }
    [DispIdAttribute("1610678310")]
public int CurrentIsRequiredForForm { get; }
    [DispIdAttribute("1610678311")]
public string CurrentItemStatus { get; }
    [DispIdAttribute("1610678312")]
public tagRECT CurrentBoundingRectangle { get; }
    [DispIdAttribute("1610678313")]
public IUIAutomationElement CurrentLabeledBy { get; }
    [DispIdAttribute("1610678314")]
public string CurrentAriaRole { get; }
    [DispIdAttribute("1610678315")]
public string CurrentAriaProperties { get; }
    [DispIdAttribute("1610678316")]
public int CurrentIsDataValidForForm { get; }
    [DispIdAttribute("1610678317")]
public IUIAutomationElementArray CurrentControllerFor { get; }
    [DispIdAttribute("1610678318")]
public IUIAutomationElementArray CurrentDescribedBy { get; }
    [DispIdAttribute("1610678319")]
public IUIAutomationElementArray CurrentFlowsTo { get; }
    [DispIdAttribute("1610678320")]
public string CurrentProviderDescription { get; }
    [DispIdAttribute("1610678321")]
public int CachedProcessId { get; }
    [DispIdAttribute("1610678322")]
public int CachedControlType { get; }
    [DispIdAttribute("1610678323")]
public string CachedLocalizedControlType { get; }
    [DispIdAttribute("1610678324")]
public string CachedName { get; }
    [DispIdAttribute("1610678325")]
public string CachedAcceleratorKey { get; }
    [DispIdAttribute("1610678326")]
public string CachedAccessKey { get; }
    [DispIdAttribute("1610678327")]
public int CachedHasKeyboardFocus { get; }
    [DispIdAttribute("1610678328")]
public int CachedIsKeyboardFocusable { get; }
    [DispIdAttribute("1610678329")]
public int CachedIsEnabled { get; }
    [DispIdAttribute("1610678330")]
public string CachedAutomationId { get; }
    [DispIdAttribute("1610678331")]
public string CachedClassName { get; }
    [DispIdAttribute("1610678332")]
public string CachedHelpText { get; }
    [DispIdAttribute("1610678333")]
public int CachedCulture { get; }
    [DispIdAttribute("1610678334")]
public int CachedIsControlElement { get; }
    [DispIdAttribute("1610678335")]
public int CachedIsContentElement { get; }
    [DispIdAttribute("1610678336")]
public int CachedIsPassword { get; }
    [DispIdAttribute("1610678337")]
public IntPtr CachedNativeWindowHandle { get; }
    [DispIdAttribute("1610678338")]
public string CachedItemType { get; }
    [DispIdAttribute("1610678339")]
public int CachedIsOffscreen { get; }
    [DispIdAttribute("1610678340")]
public OrientationType CachedOrientation { get; }
    [DispIdAttribute("1610678341")]
public string CachedFrameworkId { get; }
    [DispIdAttribute("1610678342")]
public int CachedIsRequiredForForm { get; }
    [DispIdAttribute("1610678343")]
public string CachedItemStatus { get; }
    [DispIdAttribute("1610678344")]
public tagRECT CachedBoundingRectangle { get; }
    [DispIdAttribute("1610678345")]
public IUIAutomationElement CachedLabeledBy { get; }
    [DispIdAttribute("1610678346")]
public string CachedAriaRole { get; }
    [DispIdAttribute("1610678347")]
public string CachedAriaProperties { get; }
    [DispIdAttribute("1610678348")]
public int CachedIsDataValidForForm { get; }
    [DispIdAttribute("1610678349")]
public IUIAutomationElementArray CachedControllerFor { get; }
    [DispIdAttribute("1610678350")]
public IUIAutomationElementArray CachedDescribedBy { get; }
    [DispIdAttribute("1610678351")]
public IUIAutomationElementArray CachedFlowsTo { get; }
    [DispIdAttribute("1610678352")]
public string CachedProviderDescription { get; }
    public abstract virtual void SetFocus();
    public abstract virtual Int32[] GetRuntimeId();
    public abstract virtual IUIAutomationElement FindFirst(TreeScope scope, IUIAutomationCondition condition);
    public abstract virtual IUIAutomationElementArray FindAll(TreeScope scope, IUIAutomationCondition condition);
    public abstract virtual IUIAutomationElement FindFirstBuildCache(TreeScope scope, IUIAutomationCondition condition, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElementArray FindAllBuildCache(TreeScope scope, IUIAutomationCondition condition, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement BuildUpdatedCache(IUIAutomationCacheRequest cacheRequest);
    public abstract virtual object GetCurrentPropertyValue(int propertyId);
    public abstract virtual object GetCurrentPropertyValueEx(int propertyId, int ignoreDefaultValue);
    public abstract virtual object GetCachedPropertyValue(int propertyId);
    public abstract virtual object GetCachedPropertyValueEx(int propertyId, int ignoreDefaultValue);
    public abstract virtual IntPtr GetCurrentPatternAs(int patternId, Guid& riid);
    public abstract virtual IntPtr GetCachedPatternAs(int patternId, Guid& riid);
    public abstract virtual object GetCurrentPattern(int patternId);
    public abstract virtual object GetCachedPattern(int patternId);
    public abstract virtual IUIAutomationElement GetCachedParent();
    public abstract virtual IUIAutomationElementArray GetCachedChildren();
    public abstract virtual int get_CurrentProcessId();
    public abstract virtual int get_CurrentControlType();
    public abstract virtual string get_CurrentLocalizedControlType();
    public abstract virtual string get_CurrentName();
    public abstract virtual string get_CurrentAcceleratorKey();
    public abstract virtual string get_CurrentAccessKey();
    public abstract virtual int get_CurrentHasKeyboardFocus();
    public abstract virtual int get_CurrentIsKeyboardFocusable();
    public abstract virtual int get_CurrentIsEnabled();
    public abstract virtual string get_CurrentAutomationId();
    public abstract virtual string get_CurrentClassName();
    public abstract virtual string get_CurrentHelpText();
    public abstract virtual int get_CurrentCulture();
    public abstract virtual int get_CurrentIsControlElement();
    public abstract virtual int get_CurrentIsContentElement();
    public abstract virtual int get_CurrentIsPassword();
    public abstract virtual IntPtr get_CurrentNativeWindowHandle();
    public abstract virtual string get_CurrentItemType();
    public abstract virtual int get_CurrentIsOffscreen();
    public abstract virtual OrientationType get_CurrentOrientation();
    public abstract virtual string get_CurrentFrameworkId();
    public abstract virtual int get_CurrentIsRequiredForForm();
    public abstract virtual string get_CurrentItemStatus();
    public abstract virtual tagRECT get_CurrentBoundingRectangle();
    public abstract virtual IUIAutomationElement get_CurrentLabeledBy();
    public abstract virtual string get_CurrentAriaRole();
    public abstract virtual string get_CurrentAriaProperties();
    public abstract virtual int get_CurrentIsDataValidForForm();
    public abstract virtual IUIAutomationElementArray get_CurrentControllerFor();
    public abstract virtual IUIAutomationElementArray get_CurrentDescribedBy();
    public abstract virtual IUIAutomationElementArray get_CurrentFlowsTo();
    public abstract virtual string get_CurrentProviderDescription();
    public abstract virtual int get_CachedProcessId();
    public abstract virtual int get_CachedControlType();
    public abstract virtual string get_CachedLocalizedControlType();
    public abstract virtual string get_CachedName();
    public abstract virtual string get_CachedAcceleratorKey();
    public abstract virtual string get_CachedAccessKey();
    public abstract virtual int get_CachedHasKeyboardFocus();
    public abstract virtual int get_CachedIsKeyboardFocusable();
    public abstract virtual int get_CachedIsEnabled();
    public abstract virtual string get_CachedAutomationId();
    public abstract virtual string get_CachedClassName();
    public abstract virtual string get_CachedHelpText();
    public abstract virtual int get_CachedCulture();
    public abstract virtual int get_CachedIsControlElement();
    public abstract virtual int get_CachedIsContentElement();
    public abstract virtual int get_CachedIsPassword();
    public abstract virtual IntPtr get_CachedNativeWindowHandle();
    public abstract virtual string get_CachedItemType();
    public abstract virtual int get_CachedIsOffscreen();
    public abstract virtual OrientationType get_CachedOrientation();
    public abstract virtual string get_CachedFrameworkId();
    public abstract virtual int get_CachedIsRequiredForForm();
    public abstract virtual string get_CachedItemStatus();
    public abstract virtual tagRECT get_CachedBoundingRectangle();
    public abstract virtual IUIAutomationElement get_CachedLabeledBy();
    public abstract virtual string get_CachedAriaRole();
    public abstract virtual string get_CachedAriaProperties();
    public abstract virtual int get_CachedIsDataValidForForm();
    public abstract virtual IUIAutomationElementArray get_CachedControllerFor();
    public abstract virtual IUIAutomationElementArray get_CachedDescribedBy();
    public abstract virtual IUIAutomationElementArray get_CachedFlowsTo();
    public abstract virtual string get_CachedProviderDescription();
    public abstract virtual int GetClickablePoint(tagPOINT& clickable);
}
[GuidAttribute("6749C683-F70D-4487-A698-5F79D55290D6")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationElement2 {
    [DispIdAttribute("1610678289")]
public int CurrentProcessId { get; }
    [DispIdAttribute("1610678290")]
public int CurrentControlType { get; }
    [DispIdAttribute("1610678291")]
public string CurrentLocalizedControlType { get; }
    [DispIdAttribute("1610678292")]
public string CurrentName { get; }
    [DispIdAttribute("1610678293")]
public string CurrentAcceleratorKey { get; }
    [DispIdAttribute("1610678294")]
public string CurrentAccessKey { get; }
    [DispIdAttribute("1610678295")]
public int CurrentHasKeyboardFocus { get; }
    [DispIdAttribute("1610678296")]
public int CurrentIsKeyboardFocusable { get; }
    [DispIdAttribute("1610678297")]
public int CurrentIsEnabled { get; }
    [DispIdAttribute("1610678298")]
public string CurrentAutomationId { get; }
    [DispIdAttribute("1610678299")]
public string CurrentClassName { get; }
    [DispIdAttribute("1610678300")]
public string CurrentHelpText { get; }
    [DispIdAttribute("1610678301")]
public int CurrentCulture { get; }
    [DispIdAttribute("1610678302")]
public int CurrentIsControlElement { get; }
    [DispIdAttribute("1610678303")]
public int CurrentIsContentElement { get; }
    [DispIdAttribute("1610678304")]
public int CurrentIsPassword { get; }
    [DispIdAttribute("1610678305")]
public IntPtr CurrentNativeWindowHandle { get; }
    [DispIdAttribute("1610678306")]
public string CurrentItemType { get; }
    [DispIdAttribute("1610678307")]
public int CurrentIsOffscreen { get; }
    [DispIdAttribute("1610678308")]
public OrientationType CurrentOrientation { get; }
    [DispIdAttribute("1610678309")]
public string CurrentFrameworkId { get; }
    [DispIdAttribute("1610678310")]
public int CurrentIsRequiredForForm { get; }
    [DispIdAttribute("1610678311")]
public string CurrentItemStatus { get; }
    [DispIdAttribute("1610678312")]
public tagRECT CurrentBoundingRectangle { get; }
    [DispIdAttribute("1610678313")]
public IUIAutomationElement CurrentLabeledBy { get; }
    [DispIdAttribute("1610678314")]
public string CurrentAriaRole { get; }
    [DispIdAttribute("1610678315")]
public string CurrentAriaProperties { get; }
    [DispIdAttribute("1610678316")]
public int CurrentIsDataValidForForm { get; }
    [DispIdAttribute("1610678317")]
public IUIAutomationElementArray CurrentControllerFor { get; }
    [DispIdAttribute("1610678318")]
public IUIAutomationElementArray CurrentDescribedBy { get; }
    [DispIdAttribute("1610678319")]
public IUIAutomationElementArray CurrentFlowsTo { get; }
    [DispIdAttribute("1610678320")]
public string CurrentProviderDescription { get; }
    [DispIdAttribute("1610678321")]
public int CachedProcessId { get; }
    [DispIdAttribute("1610678322")]
public int CachedControlType { get; }
    [DispIdAttribute("1610678323")]
public string CachedLocalizedControlType { get; }
    [DispIdAttribute("1610678324")]
public string CachedName { get; }
    [DispIdAttribute("1610678325")]
public string CachedAcceleratorKey { get; }
    [DispIdAttribute("1610678326")]
public string CachedAccessKey { get; }
    [DispIdAttribute("1610678327")]
public int CachedHasKeyboardFocus { get; }
    [DispIdAttribute("1610678328")]
public int CachedIsKeyboardFocusable { get; }
    [DispIdAttribute("1610678329")]
public int CachedIsEnabled { get; }
    [DispIdAttribute("1610678330")]
public string CachedAutomationId { get; }
    [DispIdAttribute("1610678331")]
public string CachedClassName { get; }
    [DispIdAttribute("1610678332")]
public string CachedHelpText { get; }
    [DispIdAttribute("1610678333")]
public int CachedCulture { get; }
    [DispIdAttribute("1610678334")]
public int CachedIsControlElement { get; }
    [DispIdAttribute("1610678335")]
public int CachedIsContentElement { get; }
    [DispIdAttribute("1610678336")]
public int CachedIsPassword { get; }
    [DispIdAttribute("1610678337")]
public IntPtr CachedNativeWindowHandle { get; }
    [DispIdAttribute("1610678338")]
public string CachedItemType { get; }
    [DispIdAttribute("1610678339")]
public int CachedIsOffscreen { get; }
    [DispIdAttribute("1610678340")]
public OrientationType CachedOrientation { get; }
    [DispIdAttribute("1610678341")]
public string CachedFrameworkId { get; }
    [DispIdAttribute("1610678342")]
public int CachedIsRequiredForForm { get; }
    [DispIdAttribute("1610678343")]
public string CachedItemStatus { get; }
    [DispIdAttribute("1610678344")]
public tagRECT CachedBoundingRectangle { get; }
    [DispIdAttribute("1610678345")]
public IUIAutomationElement CachedLabeledBy { get; }
    [DispIdAttribute("1610678346")]
public string CachedAriaRole { get; }
    [DispIdAttribute("1610678347")]
public string CachedAriaProperties { get; }
    [DispIdAttribute("1610678348")]
public int CachedIsDataValidForForm { get; }
    [DispIdAttribute("1610678349")]
public IUIAutomationElementArray CachedControllerFor { get; }
    [DispIdAttribute("1610678350")]
public IUIAutomationElementArray CachedDescribedBy { get; }
    [DispIdAttribute("1610678351")]
public IUIAutomationElementArray CachedFlowsTo { get; }
    [DispIdAttribute("1610678352")]
public string CachedProviderDescription { get; }
    [DispIdAttribute("1610743808")]
public int CurrentOptimizeForVisualContent { get; }
    [DispIdAttribute("1610743809")]
public int CachedOptimizeForVisualContent { get; }
    [DispIdAttribute("1610743810")]
public LiveSetting CurrentLiveSetting { get; }
    [DispIdAttribute("1610743811")]
public LiveSetting CachedLiveSetting { get; }
    [DispIdAttribute("1610743812")]
public IUIAutomationElementArray CurrentFlowsFrom { get; }
    [DispIdAttribute("1610743813")]
public IUIAutomationElementArray CachedFlowsFrom { get; }
    public abstract virtual void SetFocus();
    public abstract virtual Int32[] GetRuntimeId();
    public abstract virtual IUIAutomationElement FindFirst(TreeScope scope, IUIAutomationCondition condition);
    public abstract virtual IUIAutomationElementArray FindAll(TreeScope scope, IUIAutomationCondition condition);
    public abstract virtual IUIAutomationElement FindFirstBuildCache(TreeScope scope, IUIAutomationCondition condition, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElementArray FindAllBuildCache(TreeScope scope, IUIAutomationCondition condition, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement BuildUpdatedCache(IUIAutomationCacheRequest cacheRequest);
    public abstract virtual object GetCurrentPropertyValue(int propertyId);
    public abstract virtual object GetCurrentPropertyValueEx(int propertyId, int ignoreDefaultValue);
    public abstract virtual object GetCachedPropertyValue(int propertyId);
    public abstract virtual object GetCachedPropertyValueEx(int propertyId, int ignoreDefaultValue);
    public abstract virtual IntPtr GetCurrentPatternAs(int patternId, Guid& riid);
    public abstract virtual IntPtr GetCachedPatternAs(int patternId, Guid& riid);
    public abstract virtual object GetCurrentPattern(int patternId);
    public abstract virtual object GetCachedPattern(int patternId);
    public abstract virtual IUIAutomationElement GetCachedParent();
    public abstract virtual IUIAutomationElementArray GetCachedChildren();
    public abstract virtual int get_CurrentProcessId();
    public abstract virtual int get_CurrentControlType();
    public abstract virtual string get_CurrentLocalizedControlType();
    public abstract virtual string get_CurrentName();
    public abstract virtual string get_CurrentAcceleratorKey();
    public abstract virtual string get_CurrentAccessKey();
    public abstract virtual int get_CurrentHasKeyboardFocus();
    public abstract virtual int get_CurrentIsKeyboardFocusable();
    public abstract virtual int get_CurrentIsEnabled();
    public abstract virtual string get_CurrentAutomationId();
    public abstract virtual string get_CurrentClassName();
    public abstract virtual string get_CurrentHelpText();
    public abstract virtual int get_CurrentCulture();
    public abstract virtual int get_CurrentIsControlElement();
    public abstract virtual int get_CurrentIsContentElement();
    public abstract virtual int get_CurrentIsPassword();
    public abstract virtual IntPtr get_CurrentNativeWindowHandle();
    public abstract virtual string get_CurrentItemType();
    public abstract virtual int get_CurrentIsOffscreen();
    public abstract virtual OrientationType get_CurrentOrientation();
    public abstract virtual string get_CurrentFrameworkId();
    public abstract virtual int get_CurrentIsRequiredForForm();
    public abstract virtual string get_CurrentItemStatus();
    public abstract virtual tagRECT get_CurrentBoundingRectangle();
    public abstract virtual IUIAutomationElement get_CurrentLabeledBy();
    public abstract virtual string get_CurrentAriaRole();
    public abstract virtual string get_CurrentAriaProperties();
    public abstract virtual int get_CurrentIsDataValidForForm();
    public abstract virtual IUIAutomationElementArray get_CurrentControllerFor();
    public abstract virtual IUIAutomationElementArray get_CurrentDescribedBy();
    public abstract virtual IUIAutomationElementArray get_CurrentFlowsTo();
    public abstract virtual string get_CurrentProviderDescription();
    public abstract virtual int get_CachedProcessId();
    public abstract virtual int get_CachedControlType();
    public abstract virtual string get_CachedLocalizedControlType();
    public abstract virtual string get_CachedName();
    public abstract virtual string get_CachedAcceleratorKey();
    public abstract virtual string get_CachedAccessKey();
    public abstract virtual int get_CachedHasKeyboardFocus();
    public abstract virtual int get_CachedIsKeyboardFocusable();
    public abstract virtual int get_CachedIsEnabled();
    public abstract virtual string get_CachedAutomationId();
    public abstract virtual string get_CachedClassName();
    public abstract virtual string get_CachedHelpText();
    public abstract virtual int get_CachedCulture();
    public abstract virtual int get_CachedIsControlElement();
    public abstract virtual int get_CachedIsContentElement();
    public abstract virtual int get_CachedIsPassword();
    public abstract virtual IntPtr get_CachedNativeWindowHandle();
    public abstract virtual string get_CachedItemType();
    public abstract virtual int get_CachedIsOffscreen();
    public abstract virtual OrientationType get_CachedOrientation();
    public abstract virtual string get_CachedFrameworkId();
    public abstract virtual int get_CachedIsRequiredForForm();
    public abstract virtual string get_CachedItemStatus();
    public abstract virtual tagRECT get_CachedBoundingRectangle();
    public abstract virtual IUIAutomationElement get_CachedLabeledBy();
    public abstract virtual string get_CachedAriaRole();
    public abstract virtual string get_CachedAriaProperties();
    public abstract virtual int get_CachedIsDataValidForForm();
    public abstract virtual IUIAutomationElementArray get_CachedControllerFor();
    public abstract virtual IUIAutomationElementArray get_CachedDescribedBy();
    public abstract virtual IUIAutomationElementArray get_CachedFlowsTo();
    public abstract virtual string get_CachedProviderDescription();
    public abstract virtual int GetClickablePoint(tagPOINT& clickable);
    public abstract virtual int get_CurrentOptimizeForVisualContent();
    public abstract virtual int get_CachedOptimizeForVisualContent();
    public abstract virtual LiveSetting get_CurrentLiveSetting();
    public abstract virtual LiveSetting get_CachedLiveSetting();
    public abstract virtual IUIAutomationElementArray get_CurrentFlowsFrom();
    public abstract virtual IUIAutomationElementArray get_CachedFlowsFrom();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("14314595-B4BC-4055-95F2-58F2E42C9855")]
public interface UIAutomationClient.IUIAutomationElementArray {
    [DispIdAttribute("1610678272")]
public int Length { get; }
    public abstract virtual int get_Length();
    public abstract virtual IUIAutomationElement GetElement(int index);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("146C3C17-F12E-4E22-8C27-F894B9B79C69")]
[TypeLibTypeAttribute("256")]
public interface UIAutomationClient.IUIAutomationEventHandler {
    public abstract virtual void HandleAutomationEvent(IUIAutomationElement sender, int eventId);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("619BE086-1F4E-4EE4-BAFA-210128738730")]
public interface UIAutomationClient.IUIAutomationExpandCollapsePattern {
    [DispIdAttribute("1610678274")]
public ExpandCollapseState CurrentExpandCollapseState { get; }
    [DispIdAttribute("1610678275")]
public ExpandCollapseState CachedExpandCollapseState { get; }
    public abstract virtual void Expand();
    public abstract virtual void Collapse();
    public abstract virtual ExpandCollapseState get_CurrentExpandCollapseState();
    public abstract virtual ExpandCollapseState get_CachedExpandCollapseState();
}
[GuidAttribute("C270F6B5-5C69-4290-9745-7A7F97169468")]
[TypeLibTypeAttribute("256")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationFocusChangedEventHandler {
    public abstract virtual void HandleFocusChangedEvent(IUIAutomationElement sender);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("78F8EF57-66C3-4E09-BD7C-E79B2004894D")]
public interface UIAutomationClient.IUIAutomationGridItemPattern {
    [DispIdAttribute("1610678272")]
public IUIAutomationElement CurrentContainingGrid { get; }
    [DispIdAttribute("1610678273")]
public int CurrentRow { get; }
    [DispIdAttribute("1610678274")]
public int CurrentColumn { get; }
    [DispIdAttribute("1610678275")]
public int CurrentRowSpan { get; }
    [DispIdAttribute("1610678276")]
public int CurrentColumnSpan { get; }
    [DispIdAttribute("1610678277")]
public IUIAutomationElement CachedContainingGrid { get; }
    [DispIdAttribute("1610678278")]
public int CachedRow { get; }
    [DispIdAttribute("1610678279")]
public int CachedColumn { get; }
    [DispIdAttribute("1610678280")]
public int CachedRowSpan { get; }
    [DispIdAttribute("1610678281")]
public int CachedColumnSpan { get; }
    public abstract virtual IUIAutomationElement get_CurrentContainingGrid();
    public abstract virtual int get_CurrentRow();
    public abstract virtual int get_CurrentColumn();
    public abstract virtual int get_CurrentRowSpan();
    public abstract virtual int get_CurrentColumnSpan();
    public abstract virtual IUIAutomationElement get_CachedContainingGrid();
    public abstract virtual int get_CachedRow();
    public abstract virtual int get_CachedColumn();
    public abstract virtual int get_CachedRowSpan();
    public abstract virtual int get_CachedColumnSpan();
}
[GuidAttribute("414C3CDC-856B-4F5B-8538-3131C6302550")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationGridPattern {
    [DispIdAttribute("1610678273")]
public int CurrentRowCount { get; }
    [DispIdAttribute("1610678274")]
public int CurrentColumnCount { get; }
    [DispIdAttribute("1610678275")]
public int CachedRowCount { get; }
    [DispIdAttribute("1610678276")]
public int CachedColumnCount { get; }
    public abstract virtual IUIAutomationElement GetItem(int row, int column);
    public abstract virtual int get_CurrentRowCount();
    public abstract virtual int get_CurrentColumnCount();
    public abstract virtual int get_CachedRowCount();
    public abstract virtual int get_CachedColumnCount();
}
[GuidAttribute("FB377FBE-8EA6-46D5-9C73-6499642D3059")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationInvokePattern {
    public abstract virtual void Invoke();
}
[GuidAttribute("C690FDB2-27A8-423C-812D-429773C9084E")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationItemContainerPattern {
    public abstract virtual IUIAutomationElement FindItemByProperty(IUIAutomationElement pStartAfter, int propertyId, object value);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("828055AD-355B-4435-86D5-3B51C14A9B1B")]
public interface UIAutomationClient.IUIAutomationLegacyIAccessiblePattern {
    [DispIdAttribute("1610678275")]
public int CurrentChildId { get; }
    [DispIdAttribute("1610678276")]
public string CurrentName { get; }
    [DispIdAttribute("1610678277")]
public string CurrentValue { get; }
    [DispIdAttribute("1610678278")]
public string CurrentDescription { get; }
    [DispIdAttribute("1610678279")]
public UInt32 CurrentRole { get; }
    [DispIdAttribute("1610678280")]
public UInt32 CurrentState { get; }
    [DispIdAttribute("1610678281")]
public string CurrentHelp { get; }
    [DispIdAttribute("1610678282")]
public string CurrentKeyboardShortcut { get; }
    [DispIdAttribute("1610678284")]
public string CurrentDefaultAction { get; }
    [DispIdAttribute("1610678285")]
public int CachedChildId { get; }
    [DispIdAttribute("1610678286")]
public string CachedName { get; }
    [DispIdAttribute("1610678287")]
public string CachedValue { get; }
    [DispIdAttribute("1610678288")]
public string CachedDescription { get; }
    [DispIdAttribute("1610678289")]
public UInt32 CachedRole { get; }
    [DispIdAttribute("1610678290")]
public UInt32 CachedState { get; }
    [DispIdAttribute("1610678291")]
public string CachedHelp { get; }
    [DispIdAttribute("1610678292")]
public string CachedKeyboardShortcut { get; }
    [DispIdAttribute("1610678294")]
public string CachedDefaultAction { get; }
    public abstract virtual void Select(int flagsSelect);
    public abstract virtual void DoDefaultAction();
    public abstract virtual void SetValue(string szValue);
    public abstract virtual int get_CurrentChildId();
    public abstract virtual string get_CurrentName();
    public abstract virtual string get_CurrentValue();
    public abstract virtual string get_CurrentDescription();
    public abstract virtual UInt32 get_CurrentRole();
    public abstract virtual UInt32 get_CurrentState();
    public abstract virtual string get_CurrentHelp();
    public abstract virtual string get_CurrentKeyboardShortcut();
    public abstract virtual IUIAutomationElementArray GetCurrentSelection();
    public abstract virtual string get_CurrentDefaultAction();
    public abstract virtual int get_CachedChildId();
    public abstract virtual string get_CachedName();
    public abstract virtual string get_CachedValue();
    public abstract virtual string get_CachedDescription();
    public abstract virtual UInt32 get_CachedRole();
    public abstract virtual UInt32 get_CachedState();
    public abstract virtual string get_CachedHelp();
    public abstract virtual string get_CachedKeyboardShortcut();
    public abstract virtual IUIAutomationElementArray GetCachedSelection();
    public abstract virtual string get_CachedDefaultAction();
    public abstract virtual IAccessible GetIAccessible();
}
[GuidAttribute("8D253C91-1DC5-4BB5-B18F-ADE16FA495E8")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationMultipleViewPattern {
    [DispIdAttribute("1610678274")]
public int CurrentCurrentView { get; }
    [DispIdAttribute("1610678276")]
public int CachedCurrentView { get; }
    public abstract virtual string GetViewName(int view);
    public abstract virtual void SetCurrentView(int view);
    public abstract virtual int get_CurrentCurrentView();
    public abstract virtual Int32[] GetCurrentSupportedViews();
    public abstract virtual int get_CachedCurrentView();
    public abstract virtual Int32[] GetCachedSupportedViews();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("F528B657-847B-498C-8896-D52B565407A1")]
public interface UIAutomationClient.IUIAutomationNotCondition {
    public abstract virtual IUIAutomationCondition GetChild();
}
[GuidAttribute("71C284B3-C14D-4D14-981E-19751B0D756D")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationObjectModelPattern {
    public abstract virtual object GetUnderlyingObjectModel();
}
[ComConversionLossAttribute]
[GuidAttribute("8753F032-3DB1-47B5-A1FC-6E34A266C712")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationOrCondition {
    [DispIdAttribute("1610743808")]
public int ChildCount { get; }
    public abstract virtual int get_ChildCount();
    public abstract virtual void GetChildrenAsNativeArray(IntPtr childArray, Int32& childArrayCount);
    public abstract virtual IUIAutomationCondition[] GetChildren();
}
[TypeLibTypeAttribute("256")]
[GuidAttribute("40CD37D4-C756-4B0C-8C6F-BDDFEEB13B50")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationPropertyChangedEventHandler {
    public abstract virtual void HandlePropertyChangedEvent(IUIAutomationElement sender, int propertyId, object newValue);
}
[GuidAttribute("99EBF2CB-5578-4267-9AD4-AFD6EA77E94B")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationPropertyCondition {
    [DispIdAttribute("1610743808")]
public int propertyId { get; }
    [DispIdAttribute("1610743809")]
public object PropertyValue { get; }
    [DispIdAttribute("1610743810")]
public PropertyConditionFlags PropertyConditionFlags { get; }
    public abstract virtual int get_propertyId();
    public abstract virtual object get_PropertyValue();
    public abstract virtual PropertyConditionFlags get_PropertyConditionFlags();
}
[GuidAttribute("85B94ECD-849D-42B6-B94D-D6DB23FDF5A4")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationProxyFactory {
    [DispIdAttribute("1610678273")]
public string ProxyFactoryId { get; }
    public abstract virtual IRawElementProviderSimple CreateProvider(IntPtr hwnd, int idObject, int idChild);
    public abstract virtual string get_ProxyFactoryId();
}
[GuidAttribute("D50E472E-B64B-490C-BCA1-D30696F9F289")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationProxyFactoryEntry {
    [DispIdAttribute("1610678272")]
public IUIAutomationProxyFactory ProxyFactory { get; }
    [DispIdAttribute("1610678273")]
public string ClassName { get; public set; }
    [DispIdAttribute("1610678274")]
public string ImageName { get; public set; }
    [DispIdAttribute("1610678275")]
public int AllowSubstringMatch { get; public set; }
    [DispIdAttribute("1610678276")]
public int CanCheckBaseClass { get; public set; }
    [DispIdAttribute("1610678277")]
public int NeedsAdviseEvents { get; public set; }
    public abstract virtual IUIAutomationProxyFactory get_ProxyFactory();
    public abstract virtual string get_ClassName();
    public abstract virtual string get_ImageName();
    public abstract virtual int get_AllowSubstringMatch();
    public abstract virtual int get_CanCheckBaseClass();
    public abstract virtual int get_NeedsAdviseEvents();
    public abstract virtual void set_ClassName(string ClassName);
    public abstract virtual void set_ImageName(string ImageName);
    public abstract virtual void set_AllowSubstringMatch(int AllowSubstringMatch);
    public abstract virtual void set_CanCheckBaseClass(int CanCheckBaseClass);
    public abstract virtual void set_NeedsAdviseEvents(int adviseEvents);
    public abstract virtual void SetWinEventsForAutomationEvent(int eventId, int propertyId, UInt32[] winEvents);
    public abstract virtual UInt32[] GetWinEventsForAutomationEvent(int eventId, int propertyId);
}
[GuidAttribute("09E31E18-872D-4873-93D1-1E541EC133FD")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationProxyFactoryMapping {
    [DispIdAttribute("1610678272")]
public UInt32 count { get; }
    public abstract virtual UInt32 get_count();
    public abstract virtual IUIAutomationProxyFactoryEntry[] GetTable();
    public abstract virtual IUIAutomationProxyFactoryEntry GetEntry(UInt32 index);
    public abstract virtual void SetTable(IUIAutomationProxyFactoryEntry[] factoryList);
    public abstract virtual void InsertEntries(UInt32 before, IUIAutomationProxyFactoryEntry[] factoryList);
    public abstract virtual void InsertEntry(UInt32 before, IUIAutomationProxyFactoryEntry factory);
    public abstract virtual void RemoveEntry(UInt32 index);
    public abstract virtual void ClearTable();
    public abstract virtual void RestoreDefaultTable();
}
[GuidAttribute("59213F4F-7346-49E5-B120-80555987A148")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationRangeValuePattern {
    [DispIdAttribute("1610678273")]
public double CurrentValue { get; }
    [DispIdAttribute("1610678274")]
public int CurrentIsReadOnly { get; }
    [DispIdAttribute("1610678275")]
public double CurrentMaximum { get; }
    [DispIdAttribute("1610678276")]
public double CurrentMinimum { get; }
    [DispIdAttribute("1610678277")]
public double CurrentLargeChange { get; }
    [DispIdAttribute("1610678278")]
public double CurrentSmallChange { get; }
    [DispIdAttribute("1610678279")]
public double CachedValue { get; }
    [DispIdAttribute("1610678280")]
public int CachedIsReadOnly { get; }
    [DispIdAttribute("1610678281")]
public double CachedMaximum { get; }
    [DispIdAttribute("1610678282")]
public double CachedMinimum { get; }
    [DispIdAttribute("1610678283")]
public double CachedLargeChange { get; }
    [DispIdAttribute("1610678284")]
public double CachedSmallChange { get; }
    public abstract virtual void SetValue(double val);
    public abstract virtual double get_CurrentValue();
    public abstract virtual int get_CurrentIsReadOnly();
    public abstract virtual double get_CurrentMaximum();
    public abstract virtual double get_CurrentMinimum();
    public abstract virtual double get_CurrentLargeChange();
    public abstract virtual double get_CurrentSmallChange();
    public abstract virtual double get_CachedValue();
    public abstract virtual int get_CachedIsReadOnly();
    public abstract virtual double get_CachedMaximum();
    public abstract virtual double get_CachedMinimum();
    public abstract virtual double get_CachedLargeChange();
    public abstract virtual double get_CachedSmallChange();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("B488300F-D015-4F19-9C29-BB595E3645EF")]
public interface UIAutomationClient.IUIAutomationScrollItemPattern {
    public abstract virtual void ScrollIntoView();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("88F4D42A-E881-459D-A77C-73BBBB7E02DC")]
public interface UIAutomationClient.IUIAutomationScrollPattern {
    [DispIdAttribute("1610678274")]
public double CurrentHorizontalScrollPercent { get; }
    [DispIdAttribute("1610678275")]
public double CurrentVerticalScrollPercent { get; }
    [DispIdAttribute("1610678276")]
public double CurrentHorizontalViewSize { get; }
    [DispIdAttribute("1610678277")]
public double CurrentVerticalViewSize { get; }
    [DispIdAttribute("1610678278")]
public int CurrentHorizontallyScrollable { get; }
    [DispIdAttribute("1610678279")]
public int CurrentVerticallyScrollable { get; }
    [DispIdAttribute("1610678280")]
public double CachedHorizontalScrollPercent { get; }
    [DispIdAttribute("1610678281")]
public double CachedVerticalScrollPercent { get; }
    [DispIdAttribute("1610678282")]
public double CachedHorizontalViewSize { get; }
    [DispIdAttribute("1610678283")]
public double CachedVerticalViewSize { get; }
    [DispIdAttribute("1610678284")]
public int CachedHorizontallyScrollable { get; }
    [DispIdAttribute("1610678285")]
public int CachedVerticallyScrollable { get; }
    public abstract virtual void Scroll(ScrollAmount horizontalAmount, ScrollAmount verticalAmount);
    public abstract virtual void SetScrollPercent(double horizontalPercent, double verticalPercent);
    public abstract virtual double get_CurrentHorizontalScrollPercent();
    public abstract virtual double get_CurrentVerticalScrollPercent();
    public abstract virtual double get_CurrentHorizontalViewSize();
    public abstract virtual double get_CurrentVerticalViewSize();
    public abstract virtual int get_CurrentHorizontallyScrollable();
    public abstract virtual int get_CurrentVerticallyScrollable();
    public abstract virtual double get_CachedHorizontalScrollPercent();
    public abstract virtual double get_CachedVerticalScrollPercent();
    public abstract virtual double get_CachedHorizontalViewSize();
    public abstract virtual double get_CachedVerticalViewSize();
    public abstract virtual int get_CachedHorizontallyScrollable();
    public abstract virtual int get_CachedVerticallyScrollable();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("A8EFA66A-0FDA-421A-9194-38021F3578EA")]
public interface UIAutomationClient.IUIAutomationSelectionItemPattern {
    [DispIdAttribute("1610678275")]
public int CurrentIsSelected { get; }
    [DispIdAttribute("1610678276")]
public IUIAutomationElement CurrentSelectionContainer { get; }
    [DispIdAttribute("1610678277")]
public int CachedIsSelected { get; }
    [DispIdAttribute("1610678278")]
public IUIAutomationElement CachedSelectionContainer { get; }
    public abstract virtual void Select();
    public abstract virtual void AddToSelection();
    public abstract virtual void RemoveFromSelection();
    public abstract virtual int get_CurrentIsSelected();
    public abstract virtual IUIAutomationElement get_CurrentSelectionContainer();
    public abstract virtual int get_CachedIsSelected();
    public abstract virtual IUIAutomationElement get_CachedSelectionContainer();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("5ED5202E-B2AC-47A6-B638-4B0BF140D78E")]
public interface UIAutomationClient.IUIAutomationSelectionPattern {
    [DispIdAttribute("1610678273")]
public int CurrentCanSelectMultiple { get; }
    [DispIdAttribute("1610678274")]
public int CurrentIsSelectionRequired { get; }
    [DispIdAttribute("1610678276")]
public int CachedCanSelectMultiple { get; }
    [DispIdAttribute("1610678277")]
public int CachedIsSelectionRequired { get; }
    public abstract virtual IUIAutomationElementArray GetCurrentSelection();
    public abstract virtual int get_CurrentCanSelectMultiple();
    public abstract virtual int get_CurrentIsSelectionRequired();
    public abstract virtual IUIAutomationElementArray GetCachedSelection();
    public abstract virtual int get_CachedCanSelectMultiple();
    public abstract virtual int get_CachedIsSelectionRequired();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("7D4FB86C-8D34-40E1-8E83-62C15204E335")]
public interface UIAutomationClient.IUIAutomationSpreadsheetItemPattern {
    [DispIdAttribute("1610678272")]
public string CurrentFormula { get; }
    [DispIdAttribute("1610678275")]
public string CachedFormula { get; }
    public abstract virtual string get_CurrentFormula();
    public abstract virtual IUIAutomationElementArray GetCurrentAnnotationObjects();
    public abstract virtual Int32[] GetCurrentAnnotationTypes();
    public abstract virtual string get_CachedFormula();
    public abstract virtual IUIAutomationElementArray GetCachedAnnotationObjects();
    public abstract virtual Int32[] GetCachedAnnotationTypes();
}
[GuidAttribute("7517A7C8-FAAE-4DE9-9F08-29B91E8595C1")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationSpreadsheetPattern {
    public abstract virtual IUIAutomationElement GetItemByName(string name);
}
[GuidAttribute("E81D1B4E-11C5-42F8-9754-E7036C79F054")]
[InterfaceTypeAttribute("1")]
[TypeLibTypeAttribute("256")]
public interface UIAutomationClient.IUIAutomationStructureChangedEventHandler {
    public abstract virtual void HandleStructureChangedEvent(IUIAutomationElement sender, StructureChangeType changeType, Int32[] runtimeId);
}
[GuidAttribute("85B5F0A2-BD79-484A-AD2B-388C9838D5FB")]
[InterfaceTypeAttribute("1")]
[ComConversionLossAttribute]
public interface UIAutomationClient.IUIAutomationStylesPattern {
    [DispIdAttribute("1610678272")]
public int CurrentStyleId { get; }
    [DispIdAttribute("1610678273")]
public string CurrentStyleName { get; }
    [DispIdAttribute("1610678274")]
public int CurrentFillColor { get; }
    [DispIdAttribute("1610678275")]
public string CurrentFillPatternStyle { get; }
    [DispIdAttribute("1610678276")]
public string CurrentShape { get; }
    [DispIdAttribute("1610678277")]
public int CurrentFillPatternColor { get; }
    [DispIdAttribute("1610678278")]
public string CurrentExtendedProperties { get; }
    [DispIdAttribute("1610678280")]
public int CachedStyleId { get; }
    [DispIdAttribute("1610678281")]
public string CachedStyleName { get; }
    [DispIdAttribute("1610678282")]
public int CachedFillColor { get; }
    [DispIdAttribute("1610678283")]
public string CachedFillPatternStyle { get; }
    [DispIdAttribute("1610678284")]
public string CachedShape { get; }
    [DispIdAttribute("1610678285")]
public int CachedFillPatternColor { get; }
    [DispIdAttribute("1610678286")]
public string CachedExtendedProperties { get; }
    public abstract virtual int get_CurrentStyleId();
    public abstract virtual string get_CurrentStyleName();
    public abstract virtual int get_CurrentFillColor();
    public abstract virtual string get_CurrentFillPatternStyle();
    public abstract virtual string get_CurrentShape();
    public abstract virtual int get_CurrentFillPatternColor();
    public abstract virtual string get_CurrentExtendedProperties();
    public abstract virtual void GetCurrentExtendedPropertiesAsArray(IntPtr propertyArray, Int32& propertyCount);
    public abstract virtual int get_CachedStyleId();
    public abstract virtual string get_CachedStyleName();
    public abstract virtual int get_CachedFillColor();
    public abstract virtual string get_CachedFillPatternStyle();
    public abstract virtual string get_CachedShape();
    public abstract virtual int get_CachedFillPatternColor();
    public abstract virtual string get_CachedExtendedProperties();
    public abstract virtual void GetCachedExtendedPropertiesAsArray(IntPtr propertyArray, Int32& propertyCount);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("2233BE0B-AFB7-448B-9FDA-3B378AA5EAE1")]
public interface UIAutomationClient.IUIAutomationSynchronizedInputPattern {
    public abstract virtual void StartListening(SynchronizedInputType inputType);
    public abstract virtual void Cancel();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("0B964EB3-EF2E-4464-9C79-61D61737A27E")]
public interface UIAutomationClient.IUIAutomationTableItemPattern {
    public abstract virtual IUIAutomationElementArray GetCurrentRowHeaderItems();
    public abstract virtual IUIAutomationElementArray GetCurrentColumnHeaderItems();
    public abstract virtual IUIAutomationElementArray GetCachedRowHeaderItems();
    public abstract virtual IUIAutomationElementArray GetCachedColumnHeaderItems();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("620E691C-EA96-4710-A850-754B24CE2417")]
public interface UIAutomationClient.IUIAutomationTablePattern {
    [DispIdAttribute("1610678274")]
public RowOrColumnMajor CurrentRowOrColumnMajor { get; }
    [DispIdAttribute("1610678277")]
public RowOrColumnMajor CachedRowOrColumnMajor { get; }
    public abstract virtual IUIAutomationElementArray GetCurrentRowHeaders();
    public abstract virtual IUIAutomationElementArray GetCurrentColumnHeaders();
    public abstract virtual RowOrColumnMajor get_CurrentRowOrColumnMajor();
    public abstract virtual IUIAutomationElementArray GetCachedRowHeaders();
    public abstract virtual IUIAutomationElementArray GetCachedColumnHeaders();
    public abstract virtual RowOrColumnMajor get_CachedRowOrColumnMajor();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("6552B038-AE05-40C8-ABFD-AA08352AAB86")]
public interface UIAutomationClient.IUIAutomationTextChildPattern {
    [DispIdAttribute("1610678272")]
public IUIAutomationElement TextContainer { get; }
    [DispIdAttribute("1610678273")]
public IUIAutomationTextRange TextRange { get; }
    public abstract virtual IUIAutomationElement get_TextContainer();
    public abstract virtual IUIAutomationTextRange get_TextRange();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("32EBA289-3583-42C9-9C59-3B6D9A1E9B6A")]
public interface UIAutomationClient.IUIAutomationTextPattern {
    [DispIdAttribute("1610678276")]
public IUIAutomationTextRange DocumentRange { get; }
    [DispIdAttribute("1610678277")]
public SupportedTextSelection SupportedTextSelection { get; }
    public abstract virtual IUIAutomationTextRange RangeFromPoint(tagPOINT pt);
    public abstract virtual IUIAutomationTextRange RangeFromChild(IUIAutomationElement child);
    public abstract virtual IUIAutomationTextRangeArray GetSelection();
    public abstract virtual IUIAutomationTextRangeArray GetVisibleRanges();
    public abstract virtual IUIAutomationTextRange get_DocumentRange();
    public abstract virtual SupportedTextSelection get_SupportedTextSelection();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("506A921A-FCC9-409F-B23B-37EB74106872")]
public interface UIAutomationClient.IUIAutomationTextPattern2 {
    [DispIdAttribute("1610678276")]
public IUIAutomationTextRange DocumentRange { get; }
    [DispIdAttribute("1610678277")]
public SupportedTextSelection SupportedTextSelection { get; }
    public abstract virtual IUIAutomationTextRange RangeFromPoint(tagPOINT pt);
    public abstract virtual IUIAutomationTextRange RangeFromChild(IUIAutomationElement child);
    public abstract virtual IUIAutomationTextRangeArray GetSelection();
    public abstract virtual IUIAutomationTextRangeArray GetVisibleRanges();
    public abstract virtual IUIAutomationTextRange get_DocumentRange();
    public abstract virtual SupportedTextSelection get_SupportedTextSelection();
    public abstract virtual IUIAutomationTextRange RangeFromAnnotation(IUIAutomationElement annotation);
    public abstract virtual IUIAutomationTextRange GetCaretRange(Int32& isActive);
}
[GuidAttribute("A543CC6A-F4AE-494B-8239-C814481187A8")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationTextRange {
    public abstract virtual IUIAutomationTextRange Clone();
    public abstract virtual int Compare(IUIAutomationTextRange range);
    public abstract virtual int CompareEndpoints(TextPatternRangeEndpoint srcEndPoint, IUIAutomationTextRange range, TextPatternRangeEndpoint targetEndPoint);
    public abstract virtual void ExpandToEnclosingUnit(TextUnit TextUnit);
    public abstract virtual IUIAutomationTextRange FindAttribute(int attr, object val, int backward);
    public abstract virtual IUIAutomationTextRange FindText(string text, int backward, int ignoreCase);
    public abstract virtual object GetAttributeValue(int attr);
    public abstract virtual Double[] GetBoundingRectangles();
    public abstract virtual IUIAutomationElement GetEnclosingElement();
    public abstract virtual string GetText(int maxLength);
    public abstract virtual int Move(TextUnit unit, int count);
    public abstract virtual int MoveEndpointByUnit(TextPatternRangeEndpoint endpoint, TextUnit unit, int count);
    public abstract virtual void MoveEndpointByRange(TextPatternRangeEndpoint srcEndPoint, IUIAutomationTextRange range, TextPatternRangeEndpoint targetEndPoint);
    public abstract virtual void Select();
    public abstract virtual void AddToSelection();
    public abstract virtual void RemoveFromSelection();
    public abstract virtual void ScrollIntoView(int alignToTop);
    public abstract virtual IUIAutomationElementArray GetChildren();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CE4AE76A-E717-4C98-81EA-47371D028EB6")]
public interface UIAutomationClient.IUIAutomationTextRangeArray {
    [DispIdAttribute("1610678272")]
public int Length { get; }
    public abstract virtual int get_Length();
    public abstract virtual IUIAutomationTextRange GetElement(int index);
}
[GuidAttribute("94CF8058-9B8D-4AB9-8BFD-4CD0A33C8C70")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationTogglePattern {
    [DispIdAttribute("1610678273")]
public ToggleState CurrentToggleState { get; }
    [DispIdAttribute("1610678274")]
public ToggleState CachedToggleState { get; }
    public abstract virtual void Toggle();
    public abstract virtual ToggleState get_CurrentToggleState();
    public abstract virtual ToggleState get_CachedToggleState();
}
[GuidAttribute("A9B55844-A55D-4EF0-926D-569C16FF89BB")]
[InterfaceTypeAttribute("1")]
public interface UIAutomationClient.IUIAutomationTransformPattern {
    [DispIdAttribute("1610678275")]
public int CurrentCanMove { get; }
    [DispIdAttribute("1610678276")]
public int CurrentCanResize { get; }
    [DispIdAttribute("1610678277")]
public int CurrentCanRotate { get; }
    [DispIdAttribute("1610678278")]
public int CachedCanMove { get; }
    [DispIdAttribute("1610678279")]
public int CachedCanResize { get; }
    [DispIdAttribute("1610678280")]
public int CachedCanRotate { get; }
    public abstract virtual void Move(double x, double y);
    public abstract virtual void Resize(double width, double height);
    public abstract virtual void Rotate(double degrees);
    public abstract virtual int get_CurrentCanMove();
    public abstract virtual int get_CurrentCanResize();
    public abstract virtual int get_CurrentCanRotate();
    public abstract virtual int get_CachedCanMove();
    public abstract virtual int get_CachedCanResize();
    public abstract virtual int get_CachedCanRotate();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("6D74D017-6ECB-4381-B38B-3C17A48FF1C2")]
public interface UIAutomationClient.IUIAutomationTransformPattern2 {
    [DispIdAttribute("1610678275")]
public int CurrentCanMove { get; }
    [DispIdAttribute("1610678276")]
public int CurrentCanResize { get; }
    [DispIdAttribute("1610678277")]
public int CurrentCanRotate { get; }
    [DispIdAttribute("1610678278")]
public int CachedCanMove { get; }
    [DispIdAttribute("1610678279")]
public int CachedCanResize { get; }
    [DispIdAttribute("1610678280")]
public int CachedCanRotate { get; }
    [DispIdAttribute("1610743810")]
public int CurrentCanZoom { get; }
    [DispIdAttribute("1610743811")]
public int CachedCanZoom { get; }
    [DispIdAttribute("1610743812")]
public double CurrentZoomLevel { get; }
    [DispIdAttribute("1610743813")]
public double CachedZoomLevel { get; }
    [DispIdAttribute("1610743814")]
public double CurrentZoomMinimum { get; }
    [DispIdAttribute("1610743815")]
public double CachedZoomMinimum { get; }
    [DispIdAttribute("1610743816")]
public double CurrentZoomMaximum { get; }
    [DispIdAttribute("1610743817")]
public double CachedZoomMaximum { get; }
    public abstract virtual void Move(double x, double y);
    public abstract virtual void Resize(double width, double height);
    public abstract virtual void Rotate(double degrees);
    public abstract virtual int get_CurrentCanMove();
    public abstract virtual int get_CurrentCanResize();
    public abstract virtual int get_CurrentCanRotate();
    public abstract virtual int get_CachedCanMove();
    public abstract virtual int get_CachedCanResize();
    public abstract virtual int get_CachedCanRotate();
    public abstract virtual void Zoom(double Zoom);
    public abstract virtual void ZoomByUnit(ZoomUnit ZoomUnit);
    public abstract virtual int get_CurrentCanZoom();
    public abstract virtual int get_CachedCanZoom();
    public abstract virtual double get_CurrentZoomLevel();
    public abstract virtual double get_CachedZoomLevel();
    public abstract virtual double get_CurrentZoomMinimum();
    public abstract virtual double get_CachedZoomMinimum();
    public abstract virtual double get_CurrentZoomMaximum();
    public abstract virtual double get_CachedZoomMaximum();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("4042C624-389C-4AFC-A630-9DF854A541FC")]
public interface UIAutomationClient.IUIAutomationTreeWalker {
    [DispIdAttribute("1610678284")]
public IUIAutomationCondition condition { get; }
    public abstract virtual IUIAutomationElement GetParentElement(IUIAutomationElement element);
    public abstract virtual IUIAutomationElement GetFirstChildElement(IUIAutomationElement element);
    public abstract virtual IUIAutomationElement GetLastChildElement(IUIAutomationElement element);
    public abstract virtual IUIAutomationElement GetNextSiblingElement(IUIAutomationElement element);
    public abstract virtual IUIAutomationElement GetPreviousSiblingElement(IUIAutomationElement element);
    public abstract virtual IUIAutomationElement NormalizeElement(IUIAutomationElement element);
    public abstract virtual IUIAutomationElement GetParentElementBuildCache(IUIAutomationElement element, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement GetFirstChildElementBuildCache(IUIAutomationElement element, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement GetLastChildElementBuildCache(IUIAutomationElement element, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement GetNextSiblingElementBuildCache(IUIAutomationElement element, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement GetPreviousSiblingElementBuildCache(IUIAutomationElement element, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationElement NormalizeElementBuildCache(IUIAutomationElement element, IUIAutomationCacheRequest cacheRequest);
    public abstract virtual IUIAutomationCondition get_condition();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("A94CD8B1-0844-4CD6-9D2D-640537AB39E9")]
public interface UIAutomationClient.IUIAutomationValuePattern {
    [DispIdAttribute("1610678273")]
public string CurrentValue { get; }
    [DispIdAttribute("1610678274")]
public int CurrentIsReadOnly { get; }
    [DispIdAttribute("1610678275")]
public string CachedValue { get; }
    [DispIdAttribute("1610678276")]
public int CachedIsReadOnly { get; }
    public abstract virtual void SetValue(string val);
    public abstract virtual string get_CurrentValue();
    public abstract virtual int get_CurrentIsReadOnly();
    public abstract virtual string get_CachedValue();
    public abstract virtual int get_CachedIsReadOnly();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("6BA3D7A6-04CF-4F11-8793-A8D1CDE9969F")]
public interface UIAutomationClient.IUIAutomationVirtualizedItemPattern {
    public abstract virtual void Realize();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("0FAEF453-9208-43EF-BBB2-3B485177864F")]
public interface UIAutomationClient.IUIAutomationWindowPattern {
    [DispIdAttribute("1610678275")]
public int CurrentCanMaximize { get; }
    [DispIdAttribute("1610678276")]
public int CurrentCanMinimize { get; }
    [DispIdAttribute("1610678277")]
public int CurrentIsModal { get; }
    [DispIdAttribute("1610678278")]
public int CurrentIsTopmost { get; }
    [DispIdAttribute("1610678279")]
public WindowVisualState CurrentWindowVisualState { get; }
    [DispIdAttribute("1610678280")]
public WindowInteractionState CurrentWindowInteractionState { get; }
    [DispIdAttribute("1610678281")]
public int CachedCanMaximize { get; }
    [DispIdAttribute("1610678282")]
public int CachedCanMinimize { get; }
    [DispIdAttribute("1610678283")]
public int CachedIsModal { get; }
    [DispIdAttribute("1610678284")]
public int CachedIsTopmost { get; }
    [DispIdAttribute("1610678285")]
public WindowVisualState CachedWindowVisualState { get; }
    [DispIdAttribute("1610678286")]
public WindowInteractionState CachedWindowInteractionState { get; }
    public abstract virtual void Close();
    public abstract virtual int WaitForInputIdle(int milliseconds);
    public abstract virtual void SetWindowVisualState(WindowVisualState state);
    public abstract virtual int get_CurrentCanMaximize();
    public abstract virtual int get_CurrentCanMinimize();
    public abstract virtual int get_CurrentIsModal();
    public abstract virtual int get_CurrentIsTopmost();
    public abstract virtual WindowVisualState get_CurrentWindowVisualState();
    public abstract virtual WindowInteractionState get_CurrentWindowInteractionState();
    public abstract virtual int get_CachedCanMaximize();
    public abstract virtual int get_CachedCanMinimize();
    public abstract virtual int get_CachedIsModal();
    public abstract virtual int get_CachedIsTopmost();
    public abstract virtual WindowVisualState get_CachedWindowVisualState();
    public abstract virtual WindowInteractionState get_CachedWindowInteractionState();
}
public enum UIAutomationClient.LiveSetting : Enum {
    public int value__;
    public static LiveSetting Off;
    public static LiveSetting Polite;
    public static LiveSetting Assertive;
}
public enum UIAutomationClient.OrientationType : Enum {
    public int value__;
    public static OrientationType OrientationType_None;
    public static OrientationType OrientationType_Horizontal;
    public static OrientationType OrientationType_Vertical;
}
public enum UIAutomationClient.PropertyConditionFlags : Enum {
    public int value__;
    public static PropertyConditionFlags PropertyConditionFlags_None;
    public static PropertyConditionFlags PropertyConditionFlags_IgnoreCase;
}
public enum UIAutomationClient.ProviderOptions : Enum {
    public int value__;
    public static ProviderOptions ProviderOptions_ClientSideProvider;
    public static ProviderOptions ProviderOptions_ServerSideProvider;
    public static ProviderOptions ProviderOptions_NonClientAreaProvider;
    public static ProviderOptions ProviderOptions_OverrideProvider;
    public static ProviderOptions ProviderOptions_ProviderOwnsSetFocus;
    public static ProviderOptions ProviderOptions_UseComThreading;
    public static ProviderOptions ProviderOptions_RefuseNonClientSupport;
    public static ProviderOptions ProviderOptions_HasNativeIAccessible;
    public static ProviderOptions ProviderOptions_UseClientCoordinates;
}
public enum UIAutomationClient.RowOrColumnMajor : Enum {
    public int value__;
    public static RowOrColumnMajor RowOrColumnMajor_RowMajor;
    public static RowOrColumnMajor RowOrColumnMajor_ColumnMajor;
    public static RowOrColumnMajor RowOrColumnMajor_Indeterminate;
}
public enum UIAutomationClient.ScrollAmount : Enum {
    public int value__;
    public static ScrollAmount ScrollAmount_LargeDecrement;
    public static ScrollAmount ScrollAmount_SmallDecrement;
    public static ScrollAmount ScrollAmount_NoAmount;
    public static ScrollAmount ScrollAmount_LargeIncrement;
    public static ScrollAmount ScrollAmount_SmallIncrement;
}
public enum UIAutomationClient.StructureChangeType : Enum {
    public int value__;
    public static StructureChangeType StructureChangeType_ChildAdded;
    public static StructureChangeType StructureChangeType_ChildRemoved;
    public static StructureChangeType StructureChangeType_ChildrenInvalidated;
    public static StructureChangeType StructureChangeType_ChildrenBulkAdded;
    public static StructureChangeType StructureChangeType_ChildrenBulkRemoved;
    public static StructureChangeType StructureChangeType_ChildrenReordered;
}
public enum UIAutomationClient.SupportedTextSelection : Enum {
    public int value__;
    public static SupportedTextSelection SupportedTextSelection_None;
    public static SupportedTextSelection SupportedTextSelection_Single;
    public static SupportedTextSelection SupportedTextSelection_Multiple;
}
public enum UIAutomationClient.SynchronizedInputType : Enum {
    public int value__;
    public static SynchronizedInputType SynchronizedInputType_KeyUp;
    public static SynchronizedInputType SynchronizedInputType_KeyDown;
    public static SynchronizedInputType SynchronizedInputType_LeftMouseUp;
    public static SynchronizedInputType SynchronizedInputType_LeftMouseDown;
    public static SynchronizedInputType SynchronizedInputType_RightMouseUp;
    public static SynchronizedInputType SynchronizedInputType_RightMouseDown;
}
public class UIAutomationClient.tagPOINT : ValueType {
    public int x;
    public int y;
}
public class UIAutomationClient.tagRECT : ValueType {
    public int left;
    public int top;
    public int right;
    public int bottom;
}
public enum UIAutomationClient.TextPatternRangeEndpoint : Enum {
    public int value__;
    public static TextPatternRangeEndpoint TextPatternRangeEndpoint_Start;
    public static TextPatternRangeEndpoint TextPatternRangeEndpoint_End;
}
public enum UIAutomationClient.TextUnit : Enum {
    public int value__;
    public static TextUnit TextUnit_Character;
    public static TextUnit TextUnit_Format;
    public static TextUnit TextUnit_Word;
    public static TextUnit TextUnit_Line;
    public static TextUnit TextUnit_Paragraph;
    public static TextUnit TextUnit_Page;
    public static TextUnit TextUnit_Document;
}
public enum UIAutomationClient.ToggleState : Enum {
    public int value__;
    public static ToggleState ToggleState_Off;
    public static ToggleState ToggleState_On;
    public static ToggleState ToggleState_Indeterminate;
}
public enum UIAutomationClient.TreeScope : Enum {
    public int value__;
    public static TreeScope TreeScope_Element;
    public static TreeScope TreeScope_Children;
    public static TreeScope TreeScope_Descendants;
    public static TreeScope TreeScope_Parent;
    public static TreeScope TreeScope_Ancestors;
    public static TreeScope TreeScope_Subtree;
}
public static class UIAutomationClient.UIA_AnnotationTypes : object {
    public static int AnnotationType_Unknown;
    public static int AnnotationType_SpellingError;
    public static int AnnotationType_GrammarError;
    public static int AnnotationType_Comment;
    public static int AnnotationType_FormulaError;
    public static int AnnotationType_TrackChanges;
    public static int AnnotationType_Header;
    public static int AnnotationType_Footer;
    public static int AnnotationType_Highlighted;
}
public static class UIAutomationClient.UIA_ControlTypeIds : object {
    public static int UIA_ButtonControlTypeId;
    public static int UIA_CalendarControlTypeId;
    public static int UIA_CheckBoxControlTypeId;
    public static int UIA_ComboBoxControlTypeId;
    public static int UIA_EditControlTypeId;
    public static int UIA_HyperlinkControlTypeId;
    public static int UIA_ImageControlTypeId;
    public static int UIA_ListItemControlTypeId;
    public static int UIA_ListControlTypeId;
    public static int UIA_MenuControlTypeId;
    public static int UIA_MenuBarControlTypeId;
    public static int UIA_MenuItemControlTypeId;
    public static int UIA_ProgressBarControlTypeId;
    public static int UIA_RadioButtonControlTypeId;
    public static int UIA_ScrollBarControlTypeId;
    public static int UIA_SliderControlTypeId;
    public static int UIA_SpinnerControlTypeId;
    public static int UIA_StatusBarControlTypeId;
    public static int UIA_TabControlTypeId;
    public static int UIA_TabItemControlTypeId;
    public static int UIA_TextControlTypeId;
    public static int UIA_ToolBarControlTypeId;
    public static int UIA_ToolTipControlTypeId;
    public static int UIA_TreeControlTypeId;
    public static int UIA_TreeItemControlTypeId;
    public static int UIA_CustomControlTypeId;
    public static int UIA_GroupControlTypeId;
    public static int UIA_ThumbControlTypeId;
    public static int UIA_DataGridControlTypeId;
    public static int UIA_DataItemControlTypeId;
    public static int UIA_DocumentControlTypeId;
    public static int UIA_SplitButtonControlTypeId;
    public static int UIA_WindowControlTypeId;
    public static int UIA_PaneControlTypeId;
    public static int UIA_HeaderControlTypeId;
    public static int UIA_HeaderItemControlTypeId;
    public static int UIA_TableControlTypeId;
    public static int UIA_TitleBarControlTypeId;
    public static int UIA_SeparatorControlTypeId;
    public static int UIA_SemanticZoomControlTypeId;
}
public static class UIAutomationClient.UIA_EventIds : object {
    public static int UIA_ToolTipOpenedEventId;
    public static int UIA_ToolTipClosedEventId;
    public static int UIA_StructureChangedEventId;
    public static int UIA_MenuOpenedEventId;
    public static int UIA_AutomationPropertyChangedEventId;
    public static int UIA_AutomationFocusChangedEventId;
    public static int UIA_AsyncContentLoadedEventId;
    public static int UIA_MenuClosedEventId;
    public static int UIA_LayoutInvalidatedEventId;
    public static int UIA_Invoke_InvokedEventId;
    public static int UIA_SelectionItem_ElementAddedToSelectionEventId;
    public static int UIA_SelectionItem_ElementRemovedFromSelectionEventId;
    public static int UIA_SelectionItem_ElementSelectedEventId;
    public static int UIA_Selection_InvalidatedEventId;
    public static int UIA_Text_TextSelectionChangedEventId;
    public static int UIA_Text_TextChangedEventId;
    public static int UIA_Window_WindowOpenedEventId;
    public static int UIA_Window_WindowClosedEventId;
    public static int UIA_MenuModeStartEventId;
    public static int UIA_MenuModeEndEventId;
    public static int UIA_InputReachedTargetEventId;
    public static int UIA_InputReachedOtherElementEventId;
    public static int UIA_InputDiscardedEventId;
    public static int UIA_SystemAlertEventId;
    public static int UIA_LiveRegionChangedEventId;
    public static int UIA_HostedFragmentRootsInvalidatedEventId;
    public static int UIA_Drag_DragStartEventId;
    public static int UIA_Drag_DragCancelEventId;
    public static int UIA_Drag_DragCompleteEventId;
    public static int UIA_DropTarget_DragEnterEventId;
    public static int UIA_DropTarget_DragLeaveEventId;
    public static int UIA_DropTarget_DroppedEventId;
}
public static class UIAutomationClient.UIA_PatternIds : object {
    public static int UIA_InvokePatternId;
    public static int UIA_SelectionPatternId;
    public static int UIA_ValuePatternId;
    public static int UIA_RangeValuePatternId;
    public static int UIA_ScrollPatternId;
    public static int UIA_ExpandCollapsePatternId;
    public static int UIA_GridPatternId;
    public static int UIA_GridItemPatternId;
    public static int UIA_MultipleViewPatternId;
    public static int UIA_WindowPatternId;
    public static int UIA_SelectionItemPatternId;
    public static int UIA_DockPatternId;
    public static int UIA_TablePatternId;
    public static int UIA_TableItemPatternId;
    public static int UIA_TextPatternId;
    public static int UIA_TogglePatternId;
    public static int UIA_TransformPatternId;
    public static int UIA_ScrollItemPatternId;
    public static int UIA_LegacyIAccessiblePatternId;
    public static int UIA_ItemContainerPatternId;
    public static int UIA_VirtualizedItemPatternId;
    public static int UIA_SynchronizedInputPatternId;
    public static int UIA_ObjectModelPatternId;
    public static int UIA_AnnotationPatternId;
    public static int UIA_TextPattern2Id;
    public static int UIA_StylesPatternId;
    public static int UIA_SpreadsheetPatternId;
    public static int UIA_SpreadsheetItemPatternId;
    public static int UIA_TransformPattern2Id;
    public static int UIA_TextChildPatternId;
    public static int UIA_DragPatternId;
    public static int UIA_DropTargetPatternId;
}
public static class UIAutomationClient.UIA_PropertyIds : object {
    public static int UIA_RuntimeIdPropertyId;
    public static int UIA_BoundingRectanglePropertyId;
    public static int UIA_ProcessIdPropertyId;
    public static int UIA_ControlTypePropertyId;
    public static int UIA_LocalizedControlTypePropertyId;
    public static int UIA_NamePropertyId;
    public static int UIA_AcceleratorKeyPropertyId;
    public static int UIA_AccessKeyPropertyId;
    public static int UIA_HasKeyboardFocusPropertyId;
    public static int UIA_IsKeyboardFocusablePropertyId;
    public static int UIA_IsEnabledPropertyId;
    public static int UIA_AutomationIdPropertyId;
    public static int UIA_ClassNamePropertyId;
    public static int UIA_HelpTextPropertyId;
    public static int UIA_ClickablePointPropertyId;
    public static int UIA_CulturePropertyId;
    public static int UIA_IsControlElementPropertyId;
    public static int UIA_IsContentElementPropertyId;
    public static int UIA_LabeledByPropertyId;
    public static int UIA_IsPasswordPropertyId;
    public static int UIA_NativeWindowHandlePropertyId;
    public static int UIA_ItemTypePropertyId;
    public static int UIA_IsOffscreenPropertyId;
    public static int UIA_OrientationPropertyId;
    public static int UIA_FrameworkIdPropertyId;
    public static int UIA_IsRequiredForFormPropertyId;
    public static int UIA_ItemStatusPropertyId;
    public static int UIA_IsDockPatternAvailablePropertyId;
    public static int UIA_IsExpandCollapsePatternAvailablePropertyId;
    public static int UIA_IsGridItemPatternAvailablePropertyId;
    public static int UIA_IsGridPatternAvailablePropertyId;
    public static int UIA_IsInvokePatternAvailablePropertyId;
    public static int UIA_IsMultipleViewPatternAvailablePropertyId;
    public static int UIA_IsRangeValuePatternAvailablePropertyId;
    public static int UIA_IsScrollPatternAvailablePropertyId;
    public static int UIA_IsScrollItemPatternAvailablePropertyId;
    public static int UIA_IsSelectionItemPatternAvailablePropertyId;
    public static int UIA_IsSelectionPatternAvailablePropertyId;
    public static int UIA_IsTablePatternAvailablePropertyId;
    public static int UIA_IsTableItemPatternAvailablePropertyId;
    public static int UIA_IsTextPatternAvailablePropertyId;
    public static int UIA_IsTogglePatternAvailablePropertyId;
    public static int UIA_IsTransformPatternAvailablePropertyId;
    public static int UIA_IsValuePatternAvailablePropertyId;
    public static int UIA_IsWindowPatternAvailablePropertyId;
    public static int UIA_ValueValuePropertyId;
    public static int UIA_ValueIsReadOnlyPropertyId;
    public static int UIA_RangeValueValuePropertyId;
    public static int UIA_RangeValueIsReadOnlyPropertyId;
    public static int UIA_RangeValueMinimumPropertyId;
    public static int UIA_RangeValueMaximumPropertyId;
    public static int UIA_RangeValueLargeChangePropertyId;
    public static int UIA_RangeValueSmallChangePropertyId;
    public static int UIA_ScrollHorizontalScrollPercentPropertyId;
    public static int UIA_ScrollHorizontalViewSizePropertyId;
    public static int UIA_ScrollVerticalScrollPercentPropertyId;
    public static int UIA_ScrollVerticalViewSizePropertyId;
    public static int UIA_ScrollHorizontallyScrollablePropertyId;
    public static int UIA_ScrollVerticallyScrollablePropertyId;
    public static int UIA_SelectionSelectionPropertyId;
    public static int UIA_SelectionCanSelectMultiplePropertyId;
    public static int UIA_SelectionIsSelectionRequiredPropertyId;
    public static int UIA_GridRowCountPropertyId;
    public static int UIA_GridColumnCountPropertyId;
    public static int UIA_GridItemRowPropertyId;
    public static int UIA_GridItemColumnPropertyId;
    public static int UIA_GridItemRowSpanPropertyId;
    public static int UIA_GridItemColumnSpanPropertyId;
    public static int UIA_GridItemContainingGridPropertyId;
    public static int UIA_DockDockPositionPropertyId;
    public static int UIA_ExpandCollapseExpandCollapseStatePropertyId;
    public static int UIA_MultipleViewCurrentViewPropertyId;
    public static int UIA_MultipleViewSupportedViewsPropertyId;
    public static int UIA_WindowCanMaximizePropertyId;
    public static int UIA_WindowCanMinimizePropertyId;
    public static int UIA_WindowWindowVisualStatePropertyId;
    public static int UIA_WindowWindowInteractionStatePropertyId;
    public static int UIA_WindowIsModalPropertyId;
    public static int UIA_WindowIsTopmostPropertyId;
    public static int UIA_SelectionItemIsSelectedPropertyId;
    public static int UIA_SelectionItemSelectionContainerPropertyId;
    public static int UIA_TableRowHeadersPropertyId;
    public static int UIA_TableColumnHeadersPropertyId;
    public static int UIA_TableRowOrColumnMajorPropertyId;
    public static int UIA_TableItemRowHeaderItemsPropertyId;
    public static int UIA_TableItemColumnHeaderItemsPropertyId;
    public static int UIA_ToggleToggleStatePropertyId;
    public static int UIA_TransformCanMovePropertyId;
    public static int UIA_TransformCanResizePropertyId;
    public static int UIA_TransformCanRotatePropertyId;
    public static int UIA_IsLegacyIAccessiblePatternAvailablePropertyId;
    public static int UIA_LegacyIAccessibleChildIdPropertyId;
    public static int UIA_LegacyIAccessibleNamePropertyId;
    public static int UIA_LegacyIAccessibleValuePropertyId;
    public static int UIA_LegacyIAccessibleDescriptionPropertyId;
    public static int UIA_LegacyIAccessibleRolePropertyId;
    public static int UIA_LegacyIAccessibleStatePropertyId;
    public static int UIA_LegacyIAccessibleHelpPropertyId;
    public static int UIA_LegacyIAccessibleKeyboardShortcutPropertyId;
    public static int UIA_LegacyIAccessibleSelectionPropertyId;
    public static int UIA_LegacyIAccessibleDefaultActionPropertyId;
    public static int UIA_AriaRolePropertyId;
    public static int UIA_AriaPropertiesPropertyId;
    public static int UIA_IsDataValidForFormPropertyId;
    public static int UIA_ControllerForPropertyId;
    public static int UIA_DescribedByPropertyId;
    public static int UIA_FlowsToPropertyId;
    public static int UIA_ProviderDescriptionPropertyId;
    public static int UIA_IsItemContainerPatternAvailablePropertyId;
    public static int UIA_IsVirtualizedItemPatternAvailablePropertyId;
    public static int UIA_IsSynchronizedInputPatternAvailablePropertyId;
    public static int UIA_OptimizeForVisualContentPropertyId;
    public static int UIA_IsObjectModelPatternAvailablePropertyId;
    public static int UIA_AnnotationAnnotationTypeIdPropertyId;
    public static int UIA_AnnotationAnnotationTypeNamePropertyId;
    public static int UIA_AnnotationAuthorPropertyId;
    public static int UIA_AnnotationDateTimePropertyId;
    public static int UIA_AnnotationTargetPropertyId;
    public static int UIA_IsAnnotationPatternAvailablePropertyId;
    public static int UIA_IsTextPattern2AvailablePropertyId;
    public static int UIA_StylesStyleIdPropertyId;
    public static int UIA_StylesStyleNamePropertyId;
    public static int UIA_StylesFillColorPropertyId;
    public static int UIA_StylesFillPatternStylePropertyId;
    public static int UIA_StylesShapePropertyId;
    public static int UIA_StylesFillPatternColorPropertyId;
    public static int UIA_StylesExtendedPropertiesPropertyId;
    public static int UIA_IsStylesPatternAvailablePropertyId;
    public static int UIA_IsSpreadsheetPatternAvailablePropertyId;
    public static int UIA_SpreadsheetItemFormulaPropertyId;
    public static int UIA_SpreadsheetItemAnnotationObjectsPropertyId;
    public static int UIA_SpreadsheetItemAnnotationTypesPropertyId;
    public static int UIA_IsSpreadsheetItemPatternAvailablePropertyId;
    public static int UIA_Transform2CanZoomPropertyId;
    public static int UIA_IsTransformPattern2AvailablePropertyId;
    public static int UIA_LiveSettingPropertyId;
    public static int UIA_IsTextChildPatternAvailablePropertyId;
    public static int UIA_IsDragPatternAvailablePropertyId;
    public static int UIA_DragIsGrabbedPropertyId;
    public static int UIA_DragDropEffectPropertyId;
    public static int UIA_DragDropEffectsPropertyId;
    public static int UIA_IsDropTargetPatternAvailablePropertyId;
    public static int UIA_DropTargetDropTargetEffectPropertyId;
    public static int UIA_DropTargetDropTargetEffectsPropertyId;
    public static int UIA_DragGrabbedItemsPropertyId;
    public static int UIA_Transform2ZoomLevelPropertyId;
    public static int UIA_Transform2ZoomMinimumPropertyId;
    public static int UIA_Transform2ZoomMaximumPropertyId;
    public static int UIA_FlowsFromPropertyId;
}
public static class UIAutomationClient.UIA_StyleIds : object {
    public static int StyleId_Custom;
    public static int StyleId_Heading1;
    public static int StyleId_Heading2;
    public static int StyleId_Heading3;
    public static int StyleId_Heading4;
    public static int StyleId_Heading5;
    public static int StyleId_Heading6;
    public static int StyleId_Heading7;
    public static int StyleId_Heading8;
    public static int StyleId_Heading9;
    public static int StyleId_Title;
    public static int StyleId_Subtitle;
    public static int StyleId_Normal;
    public static int StyleId_Emphasis;
    public static int StyleId_Quote;
}
public static class UIAutomationClient.UIA_TextAttributeIds : object {
    public static int UIA_AnimationStyleAttributeId;
    public static int UIA_BackgroundColorAttributeId;
    public static int UIA_BulletStyleAttributeId;
    public static int UIA_CapStyleAttributeId;
    public static int UIA_CultureAttributeId;
    public static int UIA_FontNameAttributeId;
    public static int UIA_FontSizeAttributeId;
    public static int UIA_FontWeightAttributeId;
    public static int UIA_ForegroundColorAttributeId;
    public static int UIA_HorizontalTextAlignmentAttributeId;
    public static int UIA_IndentationFirstLineAttributeId;
    public static int UIA_IndentationLeadingAttributeId;
    public static int UIA_IndentationTrailingAttributeId;
    public static int UIA_IsHiddenAttributeId;
    public static int UIA_IsItalicAttributeId;
    public static int UIA_IsReadOnlyAttributeId;
    public static int UIA_IsSubscriptAttributeId;
    public static int UIA_IsSuperscriptAttributeId;
    public static int UIA_MarginBottomAttributeId;
    public static int UIA_MarginLeadingAttributeId;
    public static int UIA_MarginTopAttributeId;
    public static int UIA_MarginTrailingAttributeId;
    public static int UIA_OutlineStylesAttributeId;
    public static int UIA_OverlineColorAttributeId;
    public static int UIA_OverlineStyleAttributeId;
    public static int UIA_StrikethroughColorAttributeId;
    public static int UIA_StrikethroughStyleAttributeId;
    public static int UIA_TabsAttributeId;
    public static int UIA_TextFlowDirectionsAttributeId;
    public static int UIA_UnderlineColorAttributeId;
    public static int UIA_UnderlineStyleAttributeId;
    public static int UIA_AnnotationTypesAttributeId;
    public static int UIA_AnnotationObjectsAttributeId;
    public static int UIA_StyleNameAttributeId;
    public static int UIA_StyleIdAttributeId;
    public static int UIA_LinkAttributeId;
    public static int UIA_IsActiveAttributeId;
    public static int UIA_SelectionActiveEndAttributeId;
    public static int UIA_CaretPositionAttributeId;
    public static int UIA_CaretBidiModeAttributeId;
}
public enum UIAutomationClient.WindowInteractionState : Enum {
    public int value__;
    public static WindowInteractionState WindowInteractionState_Running;
    public static WindowInteractionState WindowInteractionState_Closing;
    public static WindowInteractionState WindowInteractionState_ReadyForUserInteraction;
    public static WindowInteractionState WindowInteractionState_BlockedByModalWindow;
    public static WindowInteractionState WindowInteractionState_NotResponding;
}
public enum UIAutomationClient.WindowVisualState : Enum {
    public int value__;
    public static WindowVisualState WindowVisualState_Normal;
    public static WindowVisualState WindowVisualState_Maximized;
    public static WindowVisualState WindowVisualState_Minimized;
}
public enum UIAutomationClient.ZoomUnit : Enum {
    public int value__;
    public static ZoomUnit ZoomUnit_NoAmount;
    public static ZoomUnit ZoomUnit_LargeDecrement;
    public static ZoomUnit ZoomUnit_SmallDecrement;
    public static ZoomUnit ZoomUnit_LargeIncrement;
    public static ZoomUnit ZoomUnit_SmallIncrement;
}
