[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters : object {
    [NullableAttribute("1")]
internal static ConsoleParameters Default;
    [NullableAttribute("1")]
private IFileHelper _fileHelper;
    private string _logFilePath;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, string> <EnvironmentVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InheritEnvironmentVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private TraceLevel <TraceLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PortNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ParentProcessId>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, string> EnvironmentVariables { get; public set; }
    public bool InheritEnvironmentVariables { get; public set; }
    public TraceLevel TraceLevel { get; public set; }
    public string LogFilePath { get; public set; }
    internal int PortNumber { get; internal set; }
    internal int ParentProcessId { get; internal set; }
    [NullableContextAttribute("1")]
public ConsoleParameters(IFileHelper fileHelper);
    private static ConsoleParameters();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_EnvironmentVariables();
    [CompilerGeneratedAttribute]
public void set_EnvironmentVariables(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public bool get_InheritEnvironmentVariables();
    [CompilerGeneratedAttribute]
public void set_InheritEnvironmentVariables(bool value);
    [CompilerGeneratedAttribute]
public TraceLevel get_TraceLevel();
    [CompilerGeneratedAttribute]
public void set_TraceLevel(TraceLevel value);
    public string get_LogFilePath();
    public void set_LogFilePath(string value);
    [CompilerGeneratedAttribute]
internal int get_PortNumber();
    [CompilerGeneratedAttribute]
internal void set_PortNumber(int value);
    [CompilerGeneratedAttribute]
internal int get_ParentProcessId();
    [CompilerGeneratedAttribute]
internal void set_ParentProcessId(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.TestPlatform.VsTestConsole.TranslationLayer.DiscoveryEventsHandleConverter : object {
    private ITestDiscoveryEventsHandler _testDiscoveryEventsHandler;
    public DiscoveryEventsHandleConverter(ITestDiscoveryEventsHandler testDiscoveryEventsHandler);
    public sealed virtual void HandleRawMessage(string rawMessage);
    [NullableContextAttribute("2")]
public sealed virtual void HandleLogMessage(TestMessageLevel level, string message);
    public sealed virtual void HandleDiscoveryComplete(DiscoveryCompleteEventArgs discoveryCompleteEventArgs, IEnumerable`1<TestCase> lastChunk);
    public sealed virtual void HandleDiscoveredTests(IEnumerable`1<TestCase> discoveredTestCases);
}
[NullableContextAttribute("1")]
internal interface Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IProcessManager {
    public abstract virtual void StartProcess(ConsoleParameters consoleParameters);
    public abstract virtual bool IsProcessInitialized();
    public abstract virtual void ShutdownProcess();
    [CompilerGeneratedAttribute]
public abstract virtual void add_ProcessExited(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ProcessExited(EventHandler value);
}
[NullableContextAttribute("1")]
internal interface Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITranslationLayerRequestSender {
    public abstract virtual int InitializeCommunication();
    public abstract virtual bool WaitForRequestHandlerConnection(int connectionTimeout);
    public abstract virtual void Close();
    public abstract virtual void InitializeExtensions(IEnumerable`1<string> pathToAdditionalExtensions);
    [NullableContextAttribute("2")]
public abstract virtual void DiscoverTests(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    public abstract virtual void StartTestRun(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    public abstract virtual void StartTestRun(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    public abstract virtual void StartTestRunWithCustomHost(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    public abstract virtual void StartTestRunWithCustomHost(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [NullableContextAttribute("2")]
public abstract virtual TestSessionInfo StartTestSession(IList`1<string> sources, string runSettings, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler, ITestHostLauncher testHostLauncher);
    [NullableContextAttribute("2")]
public abstract virtual bool StopTestSession(TestSessionInfo testSessionInfo, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    public abstract virtual void EndSession();
    public abstract virtual void CancelTestRun();
    public abstract virtual void AbortTestRun();
    public abstract virtual void OnProcessExited();
    public abstract virtual void CancelDiscovery();
}
[NullableContextAttribute("1")]
internal interface Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITranslationLayerRequestSenderAsync {
    public abstract virtual Task`1<int> InitializeCommunicationAsync(int clientConnectionTimeout);
    public abstract virtual Task DiscoverTestsAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    public abstract virtual Task StartTestRunAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    public abstract virtual Task StartTestRunAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    public abstract virtual Task StartTestRunWithCustomHostAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    public abstract virtual Task StartTestRunWithCustomHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<TestSessionInfo> StartTestSessionAsync(IList`1<string> sources, string runSettings, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler, ITestHostLauncher testHostLauncher);
    public abstract virtual Task`1<bool> StopTestSessionAsync(TestSessionInfo testSessionInfo, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    public abstract virtual Task ProcessTestRunAttachmentsAsync(IEnumerable`1<AttachmentSet> attachments, IEnumerable`1<InvokedDataCollector> invokedDataCollectors, string runSettings, bool collectMetrics, ITestRunAttachmentsProcessingEventsHandler testRunAttachmentsProcessingCompleteEventsHandler, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper {
    public abstract virtual void StartSession();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual ITestSession StartTestSession(IList`1<string> sources, string runSettings, ITestSessionEventsHandler eventsHandler);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual ITestSession StartTestSession(IList`1<string> sources, string runSettings, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual ITestSession StartTestSession(IList`1<string> sources, string runSettings, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler, ITestHostLauncher testHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual bool StopTestSession(TestSessionInfo testSessionInfo, ITestSessionEventsHandler eventsHandler);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual bool StopTestSession(TestSessionInfo testSessionInfo, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    public abstract virtual void InitializeExtensions(IEnumerable`1<string> pathToAdditionalExtensions);
    public abstract virtual void DiscoverTests(IEnumerable`1<string> sources, string discoverySettings, ITestDiscoveryEventsHandler discoveryEventsHandler);
    public abstract virtual void DiscoverTests(IEnumerable`1<string> sources, string discoverySettings, TestPlatformOptions options, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    [NullableContextAttribute("2")]
public abstract virtual void DiscoverTests(IEnumerable`1<string> sources, string discoverySettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    public abstract virtual void CancelDiscovery();
    public abstract virtual void RunTests(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    public abstract virtual void RunTests(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [NullableContextAttribute("2")]
public abstract virtual void RunTests(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler);
    public abstract virtual void RunTests(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    public abstract virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    public abstract virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [NullableContextAttribute("2")]
public abstract virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler);
    public abstract virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    public abstract virtual void CancelTestRun();
    public abstract virtual void AbortTestRun();
    public abstract virtual void EndSession();
}
[NullableContextAttribute("1")]
public interface Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync {
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task StartSessionAsync();
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task`1<ITestSession> StartTestSessionAsync(IList`1<string> sources, string runSettings, ITestSessionEventsHandler eventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task`1<ITestSession> StartTestSessionAsync(IList`1<string> sources, string runSettings, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task`1<ITestSession> StartTestSessionAsync(IList`1<string> sources, string runSettings, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler, ITestHostLauncher testHostLauncher);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task`1<bool> StopTestSessionAsync(TestSessionInfo testSessionInfo, ITestSessionEventsHandler eventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task`1<bool> StopTestSessionAsync(TestSessionInfo testSessionInfo, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task InitializeExtensionsAsync(IEnumerable`1<string> pathToAdditionalExtensions);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task DiscoverTestsAsync(IEnumerable`1<string> sources, string discoverySettings, ITestDiscoveryEventsHandler discoveryEventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task DiscoverTestsAsync(IEnumerable`1<string> sources, string discoverySettings, TestPlatformOptions options, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task DiscoverTestsAsync(IEnumerable`1<string> sources, string discoverySettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual void CancelDiscovery();
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual void CancelTestRun();
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual void AbortTestRun();
    public abstract virtual Task ProcessTestRunAttachmentsAsync(IEnumerable`1<AttachmentSet> attachments, string processingSettings, bool isLastBatch, bool collectMetrics, ITestRunAttachmentsProcessingEventsHandler eventsHandler, CancellationToken cancellationToken);
    public abstract virtual Task ProcessTestRunAttachmentsAsync(IEnumerable`1<AttachmentSet> attachments, IEnumerable`1<InvokedDataCollector> invokedDataCollectors, string processingSettings, bool isLastBatch, bool collectMetrics, ITestRunAttachmentsProcessingEventsHandler eventsHandler, CancellationToken cancellationToken);
    [ObsoleteAttribute("The async APIs don't work, use the sync API instead.")]
public abstract virtual void EndSession();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public class Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession : object {
    private bool _disposed;
    private ITestSessionEventsHandler _eventsHandler;
    private IVsTestConsoleWrapper _consoleWrapper;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TestSessionInfo <TestSessionInfo>k__BackingField;
    [NullableAttribute("2")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public TestSessionInfo TestSessionInfo { get; private set; }
    public TestSession(TestSessionInfo testSessionInfo, ITestSessionEventsHandler eventsHandler, IVsTestConsoleWrapper consoleWrapper);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual TestSessionInfo get_TestSessionInfo();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_TestSessionInfo(TestSessionInfo value);
    protected virtual override void Finalize();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void AbortTestRun();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void CancelDiscovery();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void CancelTestRun();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void DiscoverTests(IEnumerable`1<string> sources, string discoverySettings, ITestDiscoveryEventsHandler discoveryEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void DiscoverTests(IEnumerable`1<string> sources, string discoverySettings, TestPlatformOptions options, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void RunTests(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void RunTests(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void RunTests(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual bool StopTestSession();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual bool StopTestSession(ITestSessionEventsHandler eventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual bool StopTestSession(TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<DiscoverTestsAsync>d__31")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task DiscoverTestsAsync(IEnumerable`1<string> sources, string discoverySettings, ITestDiscoveryEventsHandler discoveryEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<DiscoverTestsAsync>d__32")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task DiscoverTestsAsync(IEnumerable`1<string> sources, string discoverySettings, TestPlatformOptions options, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<RunTestsAsync>d__33")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<RunTestsAsync>d__34")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<RunTestsAsync>d__35")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<RunTestsAsync>d__36")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<RunTestsAsync>d__37")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<RunTestsAsync>d__38")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<RunTestsWithCustomTestHostAsync>d__39")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<RunTestsWithCustomTestHostAsync>d__40")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<RunTestsWithCustomTestHostAsync>d__41")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<RunTestsWithCustomTestHostAsync>d__42")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<RunTestsWithCustomTestHostAsync>d__43")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<RunTestsWithCustomTestHostAsync>d__44")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<StopTestSessionAsync>d__45")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task`1<bool> StopTestSessionAsync();
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<StopTestSessionAsync>d__46")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task`1<bool> StopTestSessionAsync(ITestSessionEventsHandler eventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession/<StopTestSessionAsync>d__47")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task`1<bool> StopTestSessionAsync(TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TransationLayerException : Exception {
    public TransationLayerException(string message);
    public TransationLayerException(string message, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleProcessManager : object {
    private static string PortArgument;
    private static string ParentProcessidArgument;
    private static string DiagArgument;
    private static int Endsessiontimeout;
    private string _vstestConsolePath;
    private object _syncObject;
    private bool _isNetCoreRunner;
    [NullableAttribute("2")]
private string _dotnetExePath;
    private ManualResetEvent _processExitedEvent;
    [NullableAttribute("2")]
private Process _process;
    private bool _vstestConsoleStarted;
    private bool _vstestConsoleExited;
    private bool _isDisposed;
    [CompilerGeneratedAttribute]
private IFileHelper <FileHelper>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private EventHandler ProcessExited;
    internal IFileHelper FileHelper { get; internal set; }
    public VsTestConsoleProcessManager(string vstestConsolePath);
    public VsTestConsoleProcessManager(string vstestConsolePath, string dotnetExePath);
    [CompilerGeneratedAttribute]
internal IFileHelper get_FileHelper();
    [CompilerGeneratedAttribute]
internal void set_FileHelper(IFileHelper value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void add_ProcessExited(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void remove_ProcessExited(EventHandler value);
    public sealed virtual bool IsProcessInitialized();
    public sealed virtual void StartProcess(ConsoleParameters consoleParameters);
    public sealed virtual void ShutdownProcess();
    private void SafelyTerminateProcess();
    private void Process_Exited(object sender, EventArgs e);
    private void Process_ErrorDataReceived(object sender, DataReceivedEventArgs e);
    private void Process_OutputDataReceived(object sender, DataReceivedEventArgs e);
    internal String[] BuildArguments(ConsoleParameters parameters);
    private string GetConsoleRunner();
    private static string GetEscapeSequencedPath(string path);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender : object {
    private static int MinimumProtocolVersionWithTestSessionSupport;
    private ICommunicationManager _communicationManager;
    private IDataSerializer _dataSerializer;
    private ITestPlatformEventSource _testPlatformEventSource;
    private ManualResetEvent _handShakeComplete;
    private bool _handShakeSuccessful;
    private int _protocolVersion;
    [NullableAttribute("2")]
private CancellationTokenSource _processExitCancellationTokenSource;
    internal VsTestConsoleRequestSender(ICommunicationManager communicationManager, IDataSerializer dataSerializer, ITestPlatformEventSource testPlatformEventSource);
    public sealed virtual int InitializeCommunication();
    public sealed virtual bool WaitForRequestHandlerConnection(int clientConnectionTimeout);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<InitializeCommunicationAsync>d__12")]
public sealed virtual Task`1<int> InitializeCommunicationAsync(int clientConnectionTimeout);
    public sealed virtual void InitializeExtensions(IEnumerable`1<string> pathToAdditionalExtensions);
    [NullableContextAttribute("2")]
public sealed virtual void DiscoverTests(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestDiscoveryEventsHandler2 eventHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<DiscoverTestsAsync>d__15")]
public sealed virtual Task DiscoverTestsAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestDiscoveryEventsHandler2 eventHandler);
    public sealed virtual void StartTestRun(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<StartTestRunAsync>d__17")]
public sealed virtual Task StartTestRunAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    public sealed virtual void StartTestRun(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<StartTestRunAsync>d__19")]
public sealed virtual Task StartTestRunAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    public sealed virtual void StartTestRunWithCustomHost(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<StartTestRunWithCustomHostAsync>d__21")]
public sealed virtual Task StartTestRunWithCustomHostAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customHostLauncher);
    public sealed virtual void StartTestRunWithCustomHost(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<StartTestRunWithCustomHostAsync>d__23")]
public sealed virtual Task StartTestRunWithCustomHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler runEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customHostLauncher);
    [NullableContextAttribute("2")]
public sealed virtual TestSessionInfo StartTestSession(IList`1<string> sources, string runSettings, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler, ITestHostLauncher testHostLauncher);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<StartTestSessionAsync>d__25")]
public sealed virtual Task`1<TestSessionInfo> StartTestSessionAsync(IList`1<string> sources, string runSettings, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler, ITestHostLauncher testHostLauncher);
    [NullableContextAttribute("2")]
public sealed virtual bool StopTestSession(TestSessionInfo testSessionInfo, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<StopTestSessionAsync>d__27")]
public sealed virtual Task`1<bool> StopTestSessionAsync(TestSessionInfo testSessionInfo, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    public sealed virtual void CancelTestRun();
    public sealed virtual void AbortTestRun();
    public sealed virtual void CancelDiscovery();
    public sealed virtual void OnProcessExited();
    public sealed virtual void Close();
    public sealed virtual void EndSession();
    public sealed virtual Task ProcessTestRunAttachmentsAsync(IEnumerable`1<AttachmentSet> attachments, IEnumerable`1<InvokedDataCollector> invokedDataCollectors, string runSettings, bool collectMetrics, ITestRunAttachmentsProcessingEventsHandler testSessionEventsHandler, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    private bool HandShakeWithVsTestConsole();
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<HandShakeWithVsTestConsoleAsync>d__37")]
private Task`1<bool> HandShakeWithVsTestConsoleAsync();
    [NullableContextAttribute("2")]
private void SendMessageAndListenAndReportTestCases(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestDiscoveryEventsHandler2 eventHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<SendMessageAndListenAndReportTestCasesAsync>d__39")]
private Task SendMessageAndListenAndReportTestCasesAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestDiscoveryEventsHandler2 eventHandler);
    private void SendMessageAndListenAndReportTestResults(string messageType, object payload, ITestRunEventsHandler eventHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<SendMessageAndListenAndReportTestResultsAsync>d__41")]
private Task SendMessageAndListenAndReportTestResultsAsync(string messageType, object payload, ITestRunEventsHandler eventHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<SendMessageAndListenAndReportAttachmentsProcessingResultAsync>d__42")]
private Task SendMessageAndListenAndReportAttachmentsProcessingResultAsync(IEnumerable`1<AttachmentSet> attachments, IEnumerable`1<InvokedDataCollector> invokedDataCollectors, string runSettings, bool collectMetrics, ITestRunAttachmentsProcessingEventsHandler eventHandler, CancellationToken cancellationToken);
    private Message TryReceiveMessage();
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleRequestSender/<TryReceiveMessageAsync>d__44")]
private Task`1<Message> TryReceiveMessageAsync();
    private void HandleCustomHostLaunch(ITestHostLauncher customHostLauncher, Message message);
    private void AttachDebuggerToProcess(ITestHostLauncher customHostLauncher, Message message);
    private void HandleTelemetryEvent(ITelemetryEventsHandler telemetryEventsHandler, Message message);
    [CompilerGeneratedAttribute]
private void <InitializeCommunication>b__10_0();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private Task <InitializeCommunicationAsync>b__12_0();
    [CompilerGeneratedAttribute]
private void <SendMessageAndListenAndReportAttachmentsProcessingResultAsync>b__42_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper : object {
    private IProcessManager _vstestConsoleProcessManager;
    private ITranslationLayerRequestSender _requestSender;
    private IProcessHelper _processHelper;
    private bool _sessionStarted;
    private IEnumerable`1<string> _pathToAdditionalExtensions;
    private ConsoleParameters _consoleParameters;
    private ITestPlatformEventSource _testPlatformEventSource;
    public VsTestConsoleWrapper(string vstestConsolePath);
    public VsTestConsoleWrapper(string vstestConsolePath, ConsoleParameters consoleParameters);
    internal VsTestConsoleWrapper(string vstestConsolePath, string dotnetExePath, ConsoleParameters consoleParameters);
    internal VsTestConsoleWrapper(ITranslationLayerRequestSender requestSender, IProcessManager processManager, ConsoleParameters consoleParameters, ITestPlatformEventSource testPlatformEventSource, IProcessHelper processHelper);
    public sealed virtual void StartSession();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual ITestSession StartTestSession(IList`1<string> sources, string runSettings, ITestSessionEventsHandler eventsHandler);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual ITestSession StartTestSession(IList`1<string> sources, string runSettings, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual ITestSession StartTestSession(IList`1<string> sources, string runSettings, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler, ITestHostLauncher testHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual bool StopTestSession(TestSessionInfo testSessionInfo, ITestSessionEventsHandler eventsHandler);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual bool StopTestSession(TestSessionInfo testSessionInfo, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    public sealed virtual void InitializeExtensions(IEnumerable`1<string> pathToAdditionalExtensions);
    public sealed virtual void DiscoverTests(IEnumerable`1<string> sources, string discoverySettings, ITestDiscoveryEventsHandler discoveryEventsHandler);
    public sealed virtual void DiscoverTests(IEnumerable`1<string> sources, string discoverySettings, TestPlatformOptions options, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    [NullableContextAttribute("2")]
public sealed virtual void DiscoverTests(IEnumerable`1<string> sources, string discoverySettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    public sealed virtual void CancelDiscovery();
    public sealed virtual void RunTests(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    public sealed virtual void RunTests(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [NullableContextAttribute("2")]
public sealed virtual void RunTests(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler);
    public sealed virtual void RunTests(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    public sealed virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    public sealed virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [NullableContextAttribute("2")]
public sealed virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler);
    public sealed virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    public sealed virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    public sealed virtual void CancelTestRun();
    public sealed virtual void AbortTestRun();
    public sealed virtual void EndSession();
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<StartSessionAsync>d__41")]
public sealed virtual Task StartSessionAsync();
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<StartTestSessionAsync>d__42")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task`1<ITestSession> StartTestSessionAsync(IList`1<string> sources, string runSettings, ITestSessionEventsHandler eventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<StartTestSessionAsync>d__43")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task`1<ITestSession> StartTestSessionAsync(IList`1<string> sources, string runSettings, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<StartTestSessionAsync>d__44")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task`1<ITestSession> StartTestSessionAsync(IList`1<string> sources, string runSettings, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler, ITestHostLauncher testHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<StopTestSessionAsync>d__45")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task`1<bool> StopTestSessionAsync(TestSessionInfo testSessionInfo, ITestSessionEventsHandler eventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<StopTestSessionAsync>d__46")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public sealed virtual Task`1<bool> StopTestSessionAsync(TestSessionInfo testSessionInfo, TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<InitializeExtensionsAsync>d__47")]
public sealed virtual Task InitializeExtensionsAsync(IEnumerable`1<string> pathToAdditionalExtensions);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<DiscoverTestsAsync>d__48")]
public sealed virtual Task DiscoverTestsAsync(IEnumerable`1<string> sources, string discoverySettings, ITestDiscoveryEventsHandler discoveryEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<DiscoverTestsAsync>d__49")]
public sealed virtual Task DiscoverTestsAsync(IEnumerable`1<string> sources, string discoverySettings, TestPlatformOptions options, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<DiscoverTestsAsync>d__50")]
public sealed virtual Task DiscoverTestsAsync(IEnumerable`1<string> sources, string discoverySettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsAsync>d__51")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsAsync>d__52")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsAsync>d__53")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsAsync>d__54")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsAsync>d__55")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsAsync>d__56")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsAsync>d__57")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsAsync>d__58")]
public sealed virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsWithCustomTestHostAsync>d__59")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsWithCustomTestHostAsync>d__60")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsWithCustomTestHostAsync>d__61")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsWithCustomTestHostAsync>d__62")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsWithCustomTestHostAsync>d__63")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsWithCustomTestHostAsync>d__64")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsWithCustomTestHostAsync>d__65")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<RunTestsWithCustomTestHostAsync>d__66")]
public sealed virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, TestSessionInfo testSessionInfo, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<ProcessTestRunAttachmentsAsync>d__67")]
public sealed virtual Task ProcessTestRunAttachmentsAsync(IEnumerable`1<AttachmentSet> attachments, IEnumerable`1<InvokedDataCollector> invokedDataCollectors, string processingSettings, bool isLastBatch, bool collectMetrics, ITestRunAttachmentsProcessingEventsHandler testSessionEventsHandler, CancellationToken cancellationToken);
    public sealed virtual Task ProcessTestRunAttachmentsAsync(IEnumerable`1<AttachmentSet> attachments, string processingSettings, bool isLastBatch, bool collectMetrics, ITestRunAttachmentsProcessingEventsHandler testSessionEventsHandler, CancellationToken cancellationToken);
    private void EnsureInitialized();
    [AsyncStateMachineAttribute("Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper/<EnsureInitializedAsync>d__70")]
private Task EnsureInitializedAsync();
    private bool WaitForConnection();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__10_0(object sender, EventArgs args);
}
[NullableContextAttribute("1")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public interface Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession {
    [NullableAttribute("2")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public TestSessionInfo TestSessionInfo { get; }
    [NullableContextAttribute("2")]
public abstract virtual TestSessionInfo get_TestSessionInfo();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void DiscoverTests(IEnumerable`1<string> sources, string discoverySettings, ITestDiscoveryEventsHandler discoveryEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void DiscoverTests(IEnumerable`1<string> sources, string discoverySettings, TestPlatformOptions options, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void CancelDiscovery();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void RunTests(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void RunTests(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void RunTests(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void RunTests(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void RunTestsWithCustomTestHost(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual bool StopTestSession();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual bool StopTestSession(ITestSessionEventsHandler eventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual bool StopTestSession(TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void CancelTestRun();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void AbortTestRun();
}
[NullableContextAttribute("1")]
[ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public interface Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync {
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task DiscoverTestsAsync(IEnumerable`1<string> sources, string discoverySettings, ITestDiscoveryEventsHandler discoveryEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task DiscoverTestsAsync(IEnumerable`1<string> sources, string discoverySettings, TestPlatformOptions options, ITestDiscoveryEventsHandler2 discoveryEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void CancelDiscovery();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task RunTestsAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<string> sources, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task RunTestsWithCustomTestHostAsync(IEnumerable`1<TestCase> testCases, string runSettings, TestPlatformOptions options, ITestRunEventsHandler testRunEventsHandler, ITelemetryEventsHandler telemetryEventsHandler, ITestHostLauncher customTestHostLauncher);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task`1<bool> StopTestSessionAsync();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task`1<bool> StopTestSessionAsync(ITestSessionEventsHandler eventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual Task`1<bool> StopTestSessionAsync(TestPlatformOptions options, ITestSessionEventsHandler eventsHandler);
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void CancelTestRun();
    [ObsoleteAttribute("This API is not final yet and is subject to changes.", "False")]
public abstract virtual void AbortTestRun();
}
internal class Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.NoOpTelemetryEventsHandler : object {
    [NullableContextAttribute("1")]
public sealed virtual void HandleTelemetryEvent(TelemetryEvent telemetryEvent);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.InternalResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string CannotFindConsoleRunner { get; }
    internal static string ProcessStartWin32Failure { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_CannotFindConsoleRunner();
    internal static string get_ProcessStartWin32Failure();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public class Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
public static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
public static CultureInfo Culture { get; public set; }
    public static string AbortedStartTestSession { get; }
    public static string AbortedStopTestSession { get; }
    public static string AbortedTestRunAttachmentsProcessing { get; }
    public static string AbortedTestsDiscovery { get; }
    public static string AbortedTestsRun { get; }
    public static string FailedToReceiveMessage { get; }
    public static string InvalidFilePath { get; }
    public static string VsTestProcessExitedAbnormally { get; }
    public static ResourceManager get_ResourceManager();
    public static CultureInfo get_Culture();
    public static void set_Culture(CultureInfo value);
    public static string get_AbortedStartTestSession();
    public static string get_AbortedStopTestSession();
    public static string get_AbortedTestRunAttachmentsProcessing();
    public static string get_AbortedTestsDiscovery();
    public static string get_AbortedTestsRun();
    public static string get_FailedToReceiveMessage();
    public static string get_InvalidFilePath();
    public static string get_VsTestProcessExitedAbnormally();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
