[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class Microsoft.VisualStudio.TestTools.UITesting.AutoWaitCursor : object {
    private Cursor oldCursor;
    private sealed virtual override void System.IDisposable.Dispose();
    protected virtual void Dispose(bool disposing);
}
[AttributeUsageAttribute("4")]
public class Microsoft.VisualStudio.TestTools.UITesting.CodedUITestAttribute : TestClassExtensionAttribute {
    private static Uri m_uri;
    [CompilerGeneratedAttribute]
private CodedUITestType <CodedUITestType>k__BackingField;
    internal CodedUITestType CodedUITestType { get; internal set; }
    public Uri ExtensionId { get; }
    public CodedUITestAttribute(CodedUITestType codedUITestType);
    private static CodedUITestAttribute();
    [CompilerGeneratedAttribute]
internal CodedUITestType get_CodedUITestType();
    [CompilerGeneratedAttribute]
internal void set_CodedUITestType(CodedUITestType value);
    public virtual Uri get_ExtensionId();
    public virtual TestExtensionExecution GetExecution();
    public virtual object GetClientSide();
}
internal class Microsoft.VisualStudio.TestTools.UITesting.CodedUITestExtensionClientSide : TestTypeExtensionClientSide {
    public string ExtensionName { get; }
    public virtual string get_ExtensionName();
    public virtual object GetUI();
}
internal class Microsoft.VisualStudio.TestTools.UITesting.CodedUITestExtensionExecution : TestExtensionExecution {
    private static UInt32 sqmId;
    private static string LinkForSupportedPlatforms;
    private String[] assemblyNames;
    private static CodedUITestExtensionExecution();
    public virtual void Initialize(TestExecution execution);
    private void BeforeAssemblyInitialize(object sender, BeforeAssemblyInitializeEventArgs e);
    private void AfterAssemblyInitialize(object sender, AfterAssemblyInitializeEventArgs e);
    private void BeforeAssemblyCleanup(object sender, BeforeAssemblyCleanupEventArgs e);
    private void AfterAssemblyCleanup(object sender, AfterAssemblyCleanupEventArgs e);
    private void BeforeClassInitialize(object sender, BeforeClassInitializeEventArgs e);
    private void AfterClassInitialize(object sender, AfterClassInitializeEventArgs e);
    private void BeforeClassCleanup(object sender, BeforeClassCleanupEventArgs e);
    private void AfterClassCleanup(object sender, AfterClassCleanupEventArgs e);
    private void BeforeTestInitialize(object sender, BeforeTestInitializeEventArgs e);
    private void AfterTestInitialize(object sender, AfterTestInitializeEventArgs e);
    private void BeforeTestCleanup(object sender, BeforeTestCleanupEventArgs e);
    private void AfterTestCleanup(object sender, AfterTestCleanupEventArgs e);
    private void OnTestStopping(object sender, OnTestStoppingEventArgs e);
    public virtual ITestMethodInvoker CreateTestMethodInvoker(TestMethodInvokerContext context);
    public virtual void Dispose();
    private void InitAssemblyResolver();
    [SuppressMessageAttribute("Microsoft.Reliability", "CA2001")]
[SuppressMessageAttribute("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]
private Assembly OnResolve(object senderAppDomain, ResolveEventArgs args);
    private void InitializeBrowserWindow();
    private void ThrowIfPlatformNotSupported();
}
internal class Microsoft.VisualStudio.TestTools.UITesting.CodedUITestInvoker : object {
    private TestMethodInvokerContext m_context;
    public CodedUITestInvoker(TestMethodInvokerContext context);
    public sealed virtual TestMethodInvokerResult Invoke(Object[] parameters);
}
internal class Microsoft.VisualStudio.TestTools.UITesting.CodedUITestServiceUtility : object {
    public static UITest GetUITestFromXML(string uiTestString);
    public static string GetXMLOfUITest(UITest uiTest);
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.TestTools.UITesting.CodedUITestType : Enum {
    public int value__;
    public static CodedUITestType Desktop;
}
internal interface Microsoft.VisualStudio.TestTools.UITesting.ICodedUITestService {
    public abstract virtual string GetUIMap();
    public abstract virtual void GetVSUISettings(Int32& locale, Byte[]& vsIconData, Dictionary`2& brushes, String& environmentFont, Double& fontSize, IVsUIShell5& shell);
    public abstract virtual void ShowF1Help(string context);
    public abstract virtual void SaveUIMap(string uiTest);
    public abstract virtual void UIClosed();
    public abstract virtual string GetUITestFileName();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.VisualStudio.TestTools.UITesting.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string CodedUITestPackageLoadError { get; }
    internal static string Iteration { get; }
    internal static string Process64BitError { get; }
    internal static string ScreenShotFailure { get; }
    internal static string ScreenShotMessage { get; }
    internal static string WinBlueRequired { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_CodedUITestPackageLoadError();
    internal static string get_Iteration();
    internal static string get_Process64BitError();
    internal static string get_ScreenShotFailure();
    internal static string get_ScreenShotMessage();
    internal static string get_WinBlueRequired();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
