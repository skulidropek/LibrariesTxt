public class Microsoft.VisualStudio.TestTools.Resources.EqtMessage : object {
    private Object[] m_array;
    private string m_name;
    private ResourceManager m_rm;
    private Type m_type;
    private static Dictionary`2<Type, ResourceManager> m_resourceManagers;
    public ResourceManager ResourceManager { get; }
    public string Name { get; }
    public Object[] Params { get; }
    internal EqtMessage(EqtMessage copy);
    public EqtMessage(string name, Type type, ResourceManager resourceManager, Object[] array);
    private static EqtMessage();
    public static string op_Implicit(EqtMessage eqtMessage);
    public ResourceManager get_ResourceManager();
    public string get_Name();
    public Object[] get_Params();
    public virtual string ToString();
    public string Localize();
}
internal class Microsoft.VisualStudio.TestTools.Resources.Messages : object {
    internal static ResourceManager ResourceManager;
    public static EqtMessage AbortEmptyTestRunDialog_Name { get; }
    public static EqtMessage AddIns_MagellanCCViewer_FailedToShowToolWindow { get; }
    public static EqtMessage AspNetDevServer_InvalidName { get; }
    public static EqtMessage AspUT_CommunicationSetupTimeout { get; }
    public static EqtMessage AspUT_CommunicationCleanupTimeout { get; }
    public static EqtMessage AspUT_InvalidWebServerType { get; }
    public static EqtMessage AspUT_LoadTestExecutionNotSupported { get; }
    public static EqtMessage AspUT_NoPathToWeb { get; }
    public static EqtMessage AspUT_NoUrlToTest { get; }
    public static EqtMessage AspUT_TestTimeout { get; }
    public static EqtMessage AspUT_DefaultWebRoot { get; }
    public static EqtMessage AspUT_BadCredentials { get; }
    public static EqtMessage BaseTable_Transaction_Unexpected { get; }
    public static EqtMessage BuildCoverageTable_LoadCoverage_BuildNotSpecified { get; }
    public static EqtMessage CancelPublishing_AccessDenied { get; }
    public static EqtMessage CancelPublishing_GeneralFailure { get; }
    public static EqtMessage CatIdCollisionDialog_Name { get; }
    public static EqtMessage CatIdCollisionDialog_Option_Abort { get; }
    public static EqtMessage CatIdCollisionDialog_Option_Ignore { get; }
    public static EqtMessage CatIdCollisionDialog_Option_None { get; }
    public static EqtMessage CatIdCollisionDialog_Option_Retry { get; }
    public static EqtMessage CatIdCollisionDialog_Option_Yes { get; }
    public static EqtMessage CatRunConfigCollisionDialog_Option_No { get; }
    public static EqtMessage CatRunConfigCollisionDialog_Option_None { get; }
    public static EqtMessage CatRunConfigCollisionDialog_Option_Yes { get; }
    public static EqtMessage Linking_TestResultLinkTypeLocalizedName { get; }
    public static EqtMessage Linking_UriDoesNotMapToArtifact { get; }
    public static EqtMessage Linking_InvalidTeamFoundationServerAndProject { get; }
    public static EqtMessage Linking_NoTestResultSpecifiedToLink { get; }
    public static EqtMessage Linking_MessageTitle { get; }
    public static EqtMessage CloseManualTestDialog_Name { get; }
    public static EqtMessage CloseManualTestDialog_Option_OK { get; }
    public static EqtMessage CMI_No_Processors { get; }
    public static EqtMessage CodeCov_AspProjectDoesNotExist { get; }
    public static EqtMessage CodeCov_BinaryFileDoesNotExist { get; }
    public static EqtMessage CodeCov_BlocksCoveredGridCaption { get; }
    public static EqtMessage CodeCov_BlocksCoveredPercGridCaption { get; }
    public static EqtMessage CodeCov_BlocksNotCoveredGridCaption { get; }
    public static EqtMessage CodeCov_BlocksNotCoveredPercGridCaption { get; }
    public static EqtMessage CodeCov_BrokenSourceFileLink { get; }
    public static EqtMessage CodeCov_BrowseForBinaryDialogCaption { get; }
    public static EqtMessage CodeCov_CannotFindSymbols { get; }
    public static EqtMessage CodeCov_ChooseKeyFileDialogCaption { get; }
    public static EqtMessage CodeCov_CorruptCovFiles { get; }
    public static EqtMessage CodeCov_FailedToCreateToolWindow { get; }
    public static EqtMessage CodeCov_CannotOpenToolWindow { get; }
    public static EqtMessage CodeCov_GlobalClasses { get; }
    public static EqtMessage CodeCov_GlobalFunctions { get; }
    public static EqtMessage CodeCov_HierarchyElementError { get; }
    public static EqtMessage CodeCov_HierarchyGridCaption { get; }
    public static EqtMessage CodeCov_InPlaceInstrumentationRestoreBatchFileCaption { get; }
    public static EqtMessage CodeCov_InstrumentationCannotFindVSKey { get; }
    public static EqtMessage CodeCov_BinaryFileCannotBeNullOrEmpty { get; }
    public static EqtMessage CodeCov_PdbFileCannotBeNullOrEmpty { get; }
    public static EqtMessage CodeCov_KeyFileCannotBeNull { get; }
    public static EqtMessage CodeCov_OutputDirectoryCannotBeNull { get; }
    public static EqtMessage CodeCov_JumpToNextReachedEnd { get; }
    public static EqtMessage CodeCov_JumpToPreviousReachedBeginning { get; }
    public static EqtMessage CodeCov_KeyFileCannotBeEmpty { get; }
    public static EqtMessage CodeCov_LessThanTwoProvidersForMerging { get; }
    public static EqtMessage CodeCov_LinesCoveredGridCaption { get; }
    public static EqtMessage CodeCov_LinesCoveredPercGridCaption { get; }
    public static EqtMessage CodeCov_LinesNotCoveredGridCaption { get; }
    public static EqtMessage CodeCov_LinesNotCoveredPercGridCaption { get; }
    public static EqtMessage CodeCov_LinesPartiallyCoveredGridCaption { get; }
    public static EqtMessage CodeCov_LinesPartiallyCoveredPercGridCaption { get; }
    public static EqtMessage CodeCov_Merge { get; }
    public static EqtMessage CodeCov_MergedResultMissing { get; }
    public static EqtMessage CodeCov_MergedResults { get; }
    public static EqtMessage CodeCov_MessageCaption { get; }
    public static EqtMessage CodeCov_MissingAspProject { get; }
    public static EqtMessage CodeCov_EmptyBinaryFile { get; }
    public static EqtMessage CodeCov_NoResults { get; }
    public static EqtMessage CodeCov_NotTouchedArea { get; }
    public static EqtMessage CodeCov_OpenCoverageFileCaption { get; }
    public static EqtMessage CodeCov_PartiallyTouchedArea { get; }
    public static EqtMessage CodeCov_Pending { get; }
    public static EqtMessage CodeCov_deployment { get; }
    public static EqtMessage CodeCov_SaveAsXml { get; }
    public static EqtMessage CodeCov_SelectMoreThanOneProvider { get; }
    public static EqtMessage CodeCov_SourceFileMissing { get; }
    public static EqtMessage CodeCov_TestRunPending { get; }
    public static EqtMessage CodeCov_StatisticsNoData { get; }
    public static EqtMessage CodeCov_StatisticsNoCoverageFiles { get; }
    public static EqtMessage CodeCov_ToolWindowCaption { get; }
    public static EqtMessage CodeCov_TouchedArea { get; }
    public static EqtMessage CodeGen_AccessorFileFailed { get; }
    public static EqtMessage CodeGen_AccessorSentinel { get; }
    public static EqtMessage CodeGen_CppInvalidRankSpecifier { get; }
    public static EqtMessage CodeGen_CppNoBaseTemplates { get; }
    public static EqtMessage CodeGen_CppNoInteriorPointers { get; }
    public static EqtMessage CodeGen_CppNoMemberSelectionOperator { get; }
    public static EqtMessage CodeGen_CPPOnlySupportsSafe { get; }
    public static EqtMessage CodeGen_CPPTargetNotManaged { get; }
    public static EqtMessage CodeGen_OperatorsMustBePublic { get; }
    public static EqtMessage CodeGen_NonCLSCompliantException { get; }
    public static EqtMessage CodeGen_NoNativeTypes { get; }
    public static EqtMessage CodeGen_CSharpVBNoValueByRef { get; }
    public static EqtMessage CodeGen_CSharpVBNoRefByValue { get; }
    public static EqtMessage CodeGen_CSharpVBNoRefByValueByRef { get; }
    public static EqtMessage CodeGen_InteriorPointerNotSupported { get; }
    public static EqtMessage CodeGen_CSharpNoOperatorOverloadedByInstance { get; }
    public static EqtMessage CodeGen_FinalizersNotSupported { get; }
    public static EqtMessage CodeGen_TrueAndFalseNotSupported { get; }
    public static EqtMessage CodeGen_PopulatingTree { get; }
    public static EqtMessage CodeGen_PrivateAccessorHeader { get; }
    public static EqtMessage CodeGen_PrivateAccessorInheritanceNotPreservedAcrossAssemblies { get; }
    public static EqtMessage CodeGen_AssignPropertyValueTODOComment { get; }
    public static EqtMessage CodeGen_BasesLabel { get; }
    public static EqtMessage CodeGen_CanNotVerifyVoidMethods { get; }
    public static EqtMessage CodeGen_CanNotVerifyWriteOnlyProperties { get; }
    public static EqtMessage CodeGen_DefaultTestFailure { get; }
    public static EqtMessage CodeGen_GenericsTestFailure { get; }
    public static EqtMessage CodeGen_DialogError { get; }
    public static EqtMessage CodeGen_DialogWarning { get; }
    public static EqtMessage CodeGen_DoneGenerating { get; }
    public static EqtMessage CodeGen_CancelGenerating { get; }
    public static EqtMessage CodeGen_ErrorMessageTitle { get; }
    public static EqtMessage CodeGen_ErrorNotificationTitle { get; }
    public static EqtMessage CodeGen_FileHeader { get; }
    public static EqtMessage CodeGen_IdentifierTooLong { get; }
    public static EqtMessage CodeGen_ManuallyUpdateWebRef { get; }
    public static EqtMessage CodeGen_MembersLabel { get; }
    public static EqtMessage CodeGen_UrlToTestComment { get; }
    public static EqtMessage CodeGen_MissingFileName { get; }
    public static EqtMessage CodeGen_NoDerivingFromDelegate { get; }
    public static EqtMessage CodeGen_NoGenericAccessorMembers { get; }
    public static EqtMessage CodeGen_NoGenericAccessors { get; }
    public static EqtMessage CodeGen_NoPrivateDelegateParameters { get; }
    public static EqtMessage CodeGen_NoPrivateOperators { get; }
    public static EqtMessage CodeGen_NoProject { get; }
    public static EqtMessage CodeGen_NoTrueOrFalseOperators { get; }
    public static EqtMessage CodeGen_NoUnsafeAccessors { get; }
    public static EqtMessage CodeGen_PageComment { get; }
    public static EqtMessage CodeGen_ParameterCantMatchFunction { get; }
    public static EqtMessage CodeGen_ParameterInitTODOComment { get; }
    public static EqtMessage CodeGen_QueryFailureUnknown { get; }
    public static EqtMessage CodeGen_QueryFailureCurrentlyDebugging { get; }
    public static EqtMessage CodeGen_QueryFailureNoCodeModel { get; }
    public static EqtMessage CodeGen_QueryFailureNoProject { get; }
    public static EqtMessage CodeGen_QueryFailureNoSolution { get; }
    public static EqtMessage CodeGen_QueryFailureUnsupportedProjectType { get; }
    public static EqtMessage CodeGen_QueryFailureUnsupportedCppProjectType { get; }
    public static EqtMessage CodeGen_QueryFailureUnsupportedTestProjectType { get; }
    public static EqtMessage CodeGen_QueryUnknownError { get; }
    public static EqtMessage CodeGen_QueryFailureVisible { get; }
    public static EqtMessage CodeGen_SurrogatePairInFileName { get; }
    public static EqtMessage CodeGen_TestAlreadyExists { get; }
    public static EqtMessage CodeGen_TestContextDoc { get; }
    public static EqtMessage CodeGen_TestClassRegionName { get; }
    public static EqtMessage CodeGen_ToDoWebClientHelper { get; }
    public static EqtMessage CodeGen_ToDoInstantiateConcreteClass { get; }
    public static EqtMessage CodeGen_UnsafeNotSupported { get; }
    public static EqtMessage CodeGen_UnsupportedLanguage { get; }
    public static EqtMessage CodeGen_VBNoPointers { get; }
    public static EqtMessage CodeGen_VBNoConversionOperatorsOverloadedByInstance { get; }
    public static EqtMessage CodeGen_VerifyTarget { get; }
    public static EqtMessage CodeGen_WebReferenceAddError { get; }
    public static EqtMessage CodeGen_WrongDynamicType { get; }
    public static EqtMessage CodeGen_MustSaveSolution { get; }
    public static EqtMessage CodeGen_NeedUrlToTest { get; }
    public static EqtMessage CodeGen_ProgressWindowFailed { get; }
    public static EqtMessage CodeGen_SyntaxErrors { get; }
    public static EqtMessage CommandLine_Aborted { get; }
    public static EqtMessage CommandLine_AgentConfigUtil_FailedToOpenVSRegistryKey { get; }
    public static EqtMessage CommandLine_AgentConfigUtil_FailedToOpenOrCreateAgentRegistryKey { get; }
    public static EqtMessage CommandLine_Completed { get; }
    public static EqtMessage CommandLine_DefaultCommandLineRunConfigurationName { get; }
    public static EqtMessage CommandLine_DetailError { get; }
    public static EqtMessage CommandLine_Fail { get; }
    public static EqtMessage CommandLine_GeneralErrorOnBuildFlavor { get; }
    public static EqtMessage CommandLine_GeneralErrorOnBuildVerification { get; }
    public static EqtMessage CommandLine_GeneralErrorOnCustomSearchPathRoot { get; }
    public static EqtMessage CommandLine_GeneralErrorOnPlatform { get; }
    public static EqtMessage CommandLine_GeneralErrorOnTeamProject { get; }
    public static EqtMessage CommandLine_GeneralErrorOnPublishing { get; }
    public static EqtMessage CommandLine_GeneralErrorOnResultsFileRoot { get; }
    public static EqtMessage CommandLine_GeneralErrorOnSpecifyingPublishBuild { get; }
    public static EqtMessage CommandLine_HelpHeader1 { get; }
    public static EqtMessage CommandLine_HelpHeader2 { get; }
    public static EqtMessage CommandLine_HelpHeader { get; }
    public static EqtMessage CommandLine_HelpHeaderCoreFeaturesOnly { get; }
    public static EqtMessage CommandLine_HelpOptionsHeader { get; }
    public static EqtMessage CommandLine_HelpSwitchesRequireTFCHeader { get; }
    public static EqtMessage CommandLine_HelpHelp { get; }
    public static EqtMessage CommandLine_HelpNoLabel { get; }
    public static EqtMessage CommandLine_HelpTestContainer { get; }
    public static EqtMessage CommandLine_HelpMetadata { get; }
    public static EqtMessage CommandLine_HelpNoIsolation { get; }
    public static EqtMessage CommandLine_HelpNoResults { get; }
    public static EqtMessage CommandLine_HelpUseStandardError { get; }
    public static EqtMessage CommandLine_HelpTestSettings { get; }
    public static EqtMessage CommandLine_HelpResultsFile { get; }
    public static EqtMessage CommandLine_HelpMinPriority { get; }
    public static EqtMessage CommandLine_HelpMaxPriority { get; }
    public static EqtMessage CommandLine_HelpTestCategory { get; }
    public static EqtMessage CommandLine_InvalidTestCategoryMultipleOperators { get; }
    public static EqtMessage CommandLine_InvalidTestCategoryNoCommas { get; }
    public static EqtMessage CommandLine_InvalidTestCategoryEmpty { get; }
    public static EqtMessage CommandLine_InvalidTestCategoryContainsNot { get; }
    public static EqtMessage CommandLine_HelpTestList { get; }
    public static EqtMessage CommandLine_HelpTestName { get; }
    public static EqtMessage CommandLine_HelpUnique { get; }
    public static EqtMessage CommandLine_HelpDetail { get; }
    public static EqtMessage CommandLine_HelpPublish { get; }
    public static EqtMessage CommandLine_HelpPublishBuildVerification { get; }
    public static EqtMessage CommandLine_HelpPublishResultsFile { get; }
    public static EqtMessage CommandLine_HelpPublishBuild { get; }
    public static EqtMessage CommandLine_HelpPublishTeamProject { get; }
    public static EqtMessage CommandLine_HelpTestConfigId { get; }
    public static EqtMessage CommandLine_HelpTestConfigName { get; }
    public static EqtMessage CommandLine_HelpPublishPlatform { get; }
    public static EqtMessage CommandLine_HelpPublishFlavor { get; }
    public static EqtMessage CommandLine_HelpPublishRunTitle { get; }
    public static EqtMessage CommandLine_TeamFoundationClientNotInstalled { get; }
    public static EqtMessage CommandLine_Deprecated { get; }
    public static EqtMessage CommandLine_SearchPathsForTests { get; }
    public static EqtMessage CommandLine_SearchPathsForRunConfig { get; }
    public static EqtMessage CommandLine_AbortingRun { get; }
    public static EqtMessage CommandLine_RemoteRunNotSupported { get; }
    public static EqtMessage CommandLine_CodeCoverageNotSupported { get; }
    public static EqtMessage CommandLine_LoadMetadataFileWarningForRunConfigConflict { get; }
    public static EqtMessage CommandLine_LoadMetadataFileWarningForTestConflict { get; }
    public static EqtMessage CommandLine_LoadMetadataFileFailedMostLikelyDueToMissingTestType { get; }
    public static EqtMessage CommandLine_MissingArgument { get; }
    public static EqtMessage CommandLine_MissingPublish { get; }
    public static EqtMessage CommandLine_InvalidConfigurationId { get; }
    public static EqtMessage CommandLine_MissingBuildUriForPublish { get; }
    public static EqtMessage CommandLine_MissingBuildVerificationPublish { get; }
    public static EqtMessage CommandLine_MissingPlatformForPublish { get; }
    public static EqtMessage CommandLine_MissingFlavorForPublish { get; }
    public static EqtMessage CommandLine_MissingTeamProjectForPublish { get; }
    public static EqtMessage CommandLine_MissingOptions { get; }
    public static EqtMessage CommandLine_MissingOutputFileName { get; }
    public static EqtMessage CommandLine_MissingSearchPathRoot { get; }
    public static EqtMessage CommandLine_MissingPathToResultsFileRoot { get; }
    public static EqtMessage CommandLine_MissingResultFile { get; }
    public static EqtMessage CommandLine_MissingTeamFoundationServer { get; }
    public static EqtMessage CommandLine_PublishFailedToStart { get; }
    public static EqtMessage CommandLine_NoTestsToExecute { get; }
    public static EqtMessage CommandLine_NoTestsLoadingOptions { get; }
    public static EqtMessage CommandLine_UnexpectedErrorMissingFile { get; }
    public static EqtMessage CommandLine_Pass { get; }
    public static EqtMessage CommandLine_PublishResultsFileNotExist { get; }
    public static EqtMessage CommandLine_NoResultsToPublish { get; }
    public static EqtMessage CommandLine_ResultTotalCount { get; }
    public static EqtMessage CommandLine_ResultsFileLogged { get; }
    public static EqtMessage CommandLine_ResultsFileFormat { get; }
    public static EqtMessage CommandLine_ResultsRequiredToPublish { get; }
    public static EqtMessage CommandLine_RunConfigurationConflict { get; }
    public static EqtMessage CommandLine_RunError { get; }
    public static EqtMessage CommandLine_StartExecution { get; }
    public static EqtMessage CommandLine_ResultSummaryDelimiter { get; }
    public static EqtMessage CommandLine_SummaryResultsCloseBracket { get; }
    public static EqtMessage CommandLine_SummaryResultsOpenBracket { get; }
    public static EqtMessage CommandLine_TestIsNotRunnableGenericReason { get; }
    public static EqtMessage CommandLine_TestResultsHeaderResults { get; }
    public static EqtMessage CommandLine_TestResultsHeaderTestCases { get; }
    public static EqtMessage CommandLine_HeaderUnderlineCharacter { get; }
    public static EqtMessage CommandLine_TestRunAborted { get; }
    public static EqtMessage CommandLine_TestRunFailed { get; }
    public static EqtMessage CommandLine_FinalTestResults { get; }
    public static EqtMessage CommandLine_SummaryTitle { get; }
    public static EqtMessage CommandLine_TestRunNameDelimiter { get; }
    public static EqtMessage CommandLine_TestRunPassed { get; }
    public static EqtMessage CommandLine_TypeHelpForSyntax { get; }
    public static EqtMessage CommandLine_RunConfigurationUsed { get; }
    public static EqtMessage CommandLine_TaskNeedsToBeExecutedUnderMSBuild { get; }
    public static EqtMessage CommandLine_TaskRequiresVSTTSKU { get; }
    public static EqtMessage Common_InvalidVersion { get; }
    public static EqtMessage Common_DontPrompt { get; }
    public static EqtMessage Common_AlwaysPrompt { get; }
    public static EqtMessage Common_NonClsException { get; }
    public static EqtMessage Common_MultipleTestsNotAllowed { get; }
    public static EqtMessage Common_CannotBeLessThanZero { get; }
    public static EqtMessage Common_CannotBeNullOrEmpty { get; }
    public static EqtMessage Common_MustBeGreaterThanZero { get; }
    public static EqtMessage Common_ArrayNotLongEnough { get; }
    public static EqtMessage Common_ArgumentFileNameOnly { get; }
    public static EqtMessage Common_DeploymentItemOutputDirectoryCannotBeNull { get; }
    public static EqtMessage Common_DeploymentItemPathCannotBeNullOrEmpty { get; }
    public static EqtMessage Common_DeploymentItemOriginRunConfig { get; }
    public static EqtMessage Common_Description { get; }
    public static EqtMessage Common_EmptyPath { get; }
    public static EqtMessage Common_GuidCannotBeEmpty { get; }
    public static EqtMessage Common_HostProcessPlatformMustBeMSILOrX86 { get; }
    public static EqtMessage Common_MissingRunInResult { get; }
    public static EqtMessage Common_MissingRunConfigInRun { get; }
    public static EqtMessage Common_MissingRunDeploymentRootInRunConfig { get; }
    public static EqtMessage Common_MultipleValueStringShouldNotContainBinaryZero { get; }
    public static EqtMessage Common_NewNameValuePair { get; }
    public static EqtMessage Common_No { get; }
    public static EqtMessage Common_NullInMessages { get; }
    public static EqtMessage Common_ObjectString { get; }
    public static EqtMessage Common_TcmInformation_TestCaseIdMustBePositive { get; }
    public static EqtMessage Common_TcmInformation_TestRunIdMustBePositive { get; }
    public static EqtMessage Common_TcmInformation_TestResultIdMustBePositive { get; }
    public static EqtMessage Common_TestOutcomeAborted { get; }
    public static EqtMessage Common_TestOutcomeCompleted { get; }
    public static EqtMessage Common_TestOutcomeDisconnected { get; }
    public static EqtMessage Common_TestOutcomeTimeout { get; }
    public static EqtMessage Common_TestOutcomeError { get; }
    public static EqtMessage Common_TestOutcomeFailed { get; }
    public static EqtMessage Common_TestOutcomeInconclusive { get; }
    public static EqtMessage Common_TestOutcomeInProgress { get; }
    public static EqtMessage Common_TestOutcomeNotExecuted { get; }
    public static EqtMessage Common_TestOutcomeNotRunnable { get; }
    public static EqtMessage Common_TestOutcomePassed { get; }
    public static EqtMessage Common_TestOutcomePassedButRunAborted { get; }
    public static EqtMessage Common_TestOutcomePending { get; }
    public static EqtMessage Common_TestOutcomeWarning { get; }
    public static EqtMessage Common_TestRunConfig_DataCollection_EmptyAssemblyQualifiedName { get; }
    public static EqtMessage Common_TestSettings_DefaultName { get; }
    public static EqtMessage Common_Yes { get; }
    public static EqtMessage Common_EqtTraceReachedMaxEventLogEntries { get; }
    public static EqtMessage Common_FileAggregatorAlreadyShutdown { get; }
    public static EqtMessage Common_RemoteRunCannotContainManualTests { get; }
    public static EqtMessage Common_TestRunCannotContainDisabledTests { get; }
    public static EqtMessage Common_CommandLineExecutionCannotContainManualTests { get; }
    public static EqtMessage Common_UnknownTestNotRunnableReason { get; }
    public static EqtMessage Common_ResultMessage_Level { get; }
    public static EqtMessage Common_ResultMessage_Timestamp { get; }
    public static EqtMessage Common_ResultMessage_Message { get; }
    public static EqtMessage Common_ResultMessage_DataCollector { get; }
    public static EqtMessage Common_ResultMessage_Agent { get; }
    public static EqtMessage Common_SingleInstance_CouldNotStartApplication { get; }
    public static EqtMessage ConsoleProcess_ControllerService_StartingAsInteractiveProcess { get; }
    public static EqtMessage ConsoleProcess_AgentService_StartingAsInteractiveProcess { get; }
    public static EqtMessage ConsoleProcess_PressEnterToExit { get; }
    public static EqtMessage EAP_CanNotRegisterWithService { get; }
    public static EqtMessage EAS_PortSettingDoesNotExist { get; }
    public static EqtMessage EAS_ServiceDescription { get; }
    public static EqtMessage EAS_AgentServiceAlreadyRunning { get; }
    public static EqtMessage ECS_ControllerServiceStoppedExecutingTest { get; }
    public static EqtMessage ECS_AgentCopy_Aborted { get; }
    public static EqtMessage ECS_Listener_CopyLogTimeout { get; }
    public static EqtMessage ECS_PortSettingDoesNotExist { get; }
    public static EqtMessage ECS_ServiceDescription { get; }
    public static EqtMessage ECS_SpooledJob_ResultFileReadError { get; }
    public static EqtMessage ECS_NoAgentsMatchedSelectionCriteria { get; }
    public static EqtMessage ECS_NoAgentsOnline { get; }
    public static EqtMessage Execution_ServiceShuttingDown { get; }
    public static EqtMessage Executon_CouldNotGetControllerName { get; }
    public static EqtMessage Executon_CouldNotGetTfsName { get; }
    public static EqtMessage Execution_Administrators { get; }
    public static EqtMessage Execution_VSTTControllerAdminGroupDescription { get; }
    public static EqtMessage Execution_AbortedTestRun { get; }
    public static EqtMessage Execution_AbortedTestRun_AgentRestarted { get; }
    public static EqtMessage Execution_UserAbortedTestRun { get; }
    public static EqtMessage Execution_AgentProcessInvalidStartParams { get; }
    public static EqtMessage Execution_AccessDenied { get; }
    public static EqtMessage Execution_AgentProcessInvalidExecutionKey { get; }
    public static EqtMessage Execution_ReverseConnectionToAgentTimedOut { get; }
    public static EqtMessage Execution_CanNotDeleteTempFilesDuringTest { get; }
    public static EqtMessage Execution_Deployment_Bat_Copyright { get; }
    public static EqtMessage Execution_Deployment_Bat_Header { get; }
    public static EqtMessage Execution_Deployment_Bat_UserCommands { get; }
    public static EqtMessage Execution_FileNotOpen { get; }
    public static EqtMessage Execution_OperationNotAllowedWhileRunningTest { get; }
    public static EqtMessage Execution_PermissionDeniedNotAuthenticated { get; }
    public static EqtMessage Execution_PermissionDeniedNotRunOwnerOrAdmin { get; }
    public static EqtMessage Execution_Synchronized_Test_Controller_Timeout { get; }
    public static EqtMessage Execution_DebuggerOperationTimeout { get; }
    public static EqtMessage Execution_Unknown_Exception { get; }
    public static EqtMessage Execution_InvalidCallNoRunOnAgent { get; }
    public static EqtMessage Execution_CollectorDataRequestTimedout { get; }
    public static EqtMessage Execution_DiscoveryCacheDisposed { get; }
    public static EqtMessage GetRunPath_GeneralFailure { get; }
    public static EqtMessage GetRunInformation_GeneralFailure { get; }
    public static EqtMessage GetRunIdFromExecId_GeneralFailure { get; }
    public static EqtMessage OperationalStore_OsServiceHelper_ConfigurationsTable_BuildConfigNotFound { get; }
    public static EqtMessage OperationalStore_OsServiceHelper_ConfigurationsTable_BuildPlatformFlavorNotFound { get; }
    public static EqtMessage RemoteTestRunNotSupportedDialog_Name { get; }
    public static EqtMessage RemoteTestRunNotSupportedDialog_Description { get; }
    public static EqtMessage RemoteTestRunNotSupportedDialog_Option_OK { get; }
    public static EqtMessage DeleteOldRunsDialog_Name { get; }
    public static EqtMessage DeleteOldRunsDialog_Description { get; }
    public static EqtMessage DeleteOldRunsDialog_Option_None { get; }
    public static EqtMessage DeleteOldRunsDialog_Option_Ok { get; }
    public static EqtMessage CodeCoverageNotSupportedDialog_Name { get; }
    public static EqtMessage CodeCoverageNotSupportedDialog_Description { get; }
    public static EqtMessage CodeCoverageNotSupportedDialog_Option_OK { get; }
    public static EqtMessage NonCoreTestExecution_NoLicenseShort { get; }
    public static EqtMessage WebLoadTestExecution_NoLicenseShort { get; }
    public static EqtMessage RemoteLoadTestExecution_NoLicenseShort { get; }
    public static EqtMessage RigUtility_FirewallDescription { get; }
    public static EqtMessage AgentConfiguration_ConfigurationUtility_FirewallDescription { get; }
    public static EqtMessage ControllerConfiguration_FirewallDescription { get; }
    public static EqtMessage AgentInstaller_ControllerConfiguration_FirewallDescription { get; }
    public static EqtMessage ControllerConfiguration_ServiceDisplayName { get; }
    public static EqtMessage ControllerConfiguration_ServiceDescription { get; }
    public static EqtMessage AgentConfiguration_ServiceDisplayName { get; }
    public static EqtMessage AgentConfiguration_ServiceDescription { get; }
    public static EqtMessage LabAgent_ServiceDisplayName { get; }
    public static EqtMessage LabAgent_ServiceDescription { get; }
    public static EqtMessage LabNetworkAgent_ServiceDisplayName { get; }
    public static EqtMessage LabNetworkAgent_ServiceDescription { get; }
    public static EqtMessage RigUtility_AgentServiceUsersGroupDescription { get; }
    public static EqtMessage RigUtility_CommandLine_Help_Header { get; }
    public static EqtMessage RigUtility_CommandLine_Help_Flags { get; }
    public static EqtMessage RigUtility_CommandLine_Help_Controller { get; }
    public static EqtMessage RigUtility_CommandLine_Help_AgentService { get; }
    public static EqtMessage RigUtility_CommandLine_Help_Footer { get; }
    public static EqtMessage RigUtility_ControllerNotSpecified { get; }
    public static EqtMessage RigUtility_UtilityExiting { get; }
    public static EqtMessage RigUtility_RemovingRegistryValues { get; }
    public static EqtMessage RigUtility_ControllerLoginForm { get; }
    public static EqtMessage RigUtility_EnterAgentUserInfo { get; }
    public static EqtMessage RigUtility_ASUserPassword { get; }
    public static EqtMessage RigUtility_ASUserName { get; }
    public static EqtMessage RigUtility_UserPassword { get; }
    public static EqtMessage RigUtility_UserName { get; }
    public static EqtMessage RigUtility_ASExplanation { get; }
    public static EqtMessage RigUtility_OK { get; }
    public static EqtMessage RigUtility_CANCEL { get; }
    public static EqtMessage FindLinkHelperDialog_Name { get; }
    public static EqtMessage FindLinkHelperDialog_Option_Abort { get; }
    public static EqtMessage FindLinkHelperDialog_Option_Ignore { get; }
    public static EqtMessage FindLinkHelperDialog_Option_None { get; }
    public static EqtMessage FindLinkHelperDialog_Option_Retry { get; }
    public static EqtMessage ConfirmDeleteRunDialog_Name { get; }
    public static EqtMessage ConfirmDeleteRunDialog_Option_Ok { get; }
    public static EqtMessage ConfirmDeleteRunDialog_Option_None { get; }
    public static EqtMessage ConfirmDeleteMultipleRunsDialog_Name { get; }
    public static EqtMessage ConfirmDeleteMultipleRunsDialog_Option_Ok { get; }
    public static EqtMessage ConfirmDeleteMultipleRunsDialog_Option_None { get; }
    public static EqtMessage ConfirmRemovePublishedRunDialog_Name { get; }
    public static EqtMessage ConfirmRemovePublishedRunDialog_Option_Ok { get; }
    public static EqtMessage ConfirmRemovePublishedRunDialog_Option_None { get; }
    public static EqtMessage ConfirmCancelPublishRunDialog_Name { get; }
    public static EqtMessage ConfirmCancelPublishRunDialog_Option_Ok { get; }
    public static EqtMessage ConfirmCancelPublishRunDialog_Option_None { get; }
    public static EqtMessage CreateWorkItem_PublishResultDialog_Title { get; }
    public static EqtMessage CreateWorkItem_PublishResultDialog_Text { get; }
    public static EqtMessage CreateWorkItem_PublishInProgressResultDialog_Title { get; }
    public static EqtMessage CreateWorkItem_PublishResultDialog_Option_Name { get; }
    public static EqtMessage CreateWorkItem_PublishResultDialog_Option_Yes { get; }
    public static EqtMessage CreateWorkItem_PublishResultDialog_Option_No { get; }
    public static EqtMessage CreateWorkItem_PublishResultDialog_Option_None { get; }
    public static EqtMessage CreateTestRun_ContinueRunWithoutMissingTests_Title { get; }
    public static EqtMessage CreateTestRun_ContinueRunWithoutMissingTests_Text { get; }
    public static EqtMessage CreateTestRun_ContinueRunWithoutMissingTests_Option_Name { get; }
    public static EqtMessage CreateTestRun_ContinueRunWithoutMissingTests_Option_Yes { get; }
    public static EqtMessage CreateTestRun_ContinueRunWithoutMissingTests_Option_No { get; }
    public static EqtMessage ConfirmExcludeFromGroupDialog_Name { get; }
    public static EqtMessage TestsDirty_DontAskDialog_Title { get; }
    public static EqtMessage TestsDirty_DontAskDialog_Text { get; }
    public static EqtMessage TestsDirty_DontAskDialog_DontRefresh { get; }
    public static EqtMessage TestsDirty_DontAskDialog_Name { get; }
    public static EqtMessage ConfirmExcludeFromGroupDialog_Option_Ok { get; }
    public static EqtMessage ConfirmExcludeFromGroupDialog_Option_None { get; }
    public static EqtMessage GenericTest_SeveralTestsPerStorage { get; }
    public static EqtMessage GT_CannotSetReadOnlyProperty { get; }
    public static EqtMessage GT_CommonResults { get; }
    public static EqtMessage GT_InnerResults { get; }
    public static EqtMessage GT_InnerTestName { get; }
    public static EqtMessage GT_InnerTestResult { get; }
    public static EqtMessage GT_InnerErrorMessage { get; }
    public static EqtMessage GT_InnerDetailedResults { get; }
    public static EqtMessage GT_SummaryFile { get; }
    public static EqtMessage GT_NotApplicable { get; }
    public static EqtMessage GTA_CannotStartTestAfterTestRunStop { get; }
    public static EqtMessage GTA_SummaryFileSchemaError { get; }
    public static EqtMessage GTA_SummaryXmlContainsBadResult { get; }
    public static EqtMessage GTA_UnexpectedSummaryXmlFormat { get; }
    public static EqtMessage IdCollisionDialog_Name { get; }
    public static EqtMessage IdCollisionDialog_Option_Abort { get; }
    public static EqtMessage IdCollisionDialog_Option_Ignore { get; }
    public static EqtMessage IdCollisionDialog_Option_None { get; }
    public static EqtMessage IdCollisionDialog_Option_Retry { get; }
    public static EqtMessage TestIdCollisionDialog_Name { get; }
    public static EqtMessage TestIdCollisionDialog_Option_Abort { get; }
    public static EqtMessage TestIdCollisionDialog_Option_None { get; }
    public static EqtMessage TestIdCollisionDialog_Option_Retry { get; }
    public static EqtMessage ImportTestListDialog_Name { get; }
    public static EqtMessage ImportTestListDialog_Option_Ignore { get; }
    public static EqtMessage ImportTestListDialog_Option_Retry { get; }
    public static EqtMessage ImportTestListDialog_Option_None { get; }
    public static EqtMessage ImportTestListDialog_Option_Abort { get; }
    public static EqtMessage ManualTestAbortedDialog_Name { get; }
    public static EqtMessage ManualTestAbortedDialog_Option_None { get; }
    public static EqtMessage ManualTestAbortedDialog_Option_OK { get; }
    public static EqtMessage ManualTestStartedDialog_Name { get; }
    public static EqtMessage ManualTestStartedDialog_Option_None { get; }
    public static EqtMessage ManualTestStartedDialog_Option_OK { get; }
    public static EqtMessage ManualTest_FailedToLoadResult { get; }
    public static EqtMessage ManualTest_FailedToLaunchWebBrowser { get; }
    public static EqtMessage ManualTest_FailedToOpenExecutionWindow { get; }
    public static EqtMessage ManualTest_InvalidResult { get; }
    public static EqtMessage ManualTest_NotManualTestInstance { get; }
    public static EqtMessage ManualTest_NotProcessedYet { get; }
    public static EqtMessage ManualTest_TestRunAborted { get; }
    public static EqtMessage ManualTest_TimeoutNotSupported { get; }
    public static EqtMessage ManualTest_SavePropertyDialog_Name { get; }
    public static EqtMessage ManualTest_SavePropertyDialog_Option_OK { get; }
    public static EqtMessage ManualTest_WordNotInstalled { get; }
    public static EqtMessage ManualTest_WordNotInstalledDialog_Name { get; }
    public static EqtMessage ManualTest_WordNotInstalledDialog_Description { get; }
    public static EqtMessage ManualTest_WordNotInstalledDialog_Option_OK { get; }
    public static EqtMessage Office_FailedToGetWordProperty { get; }
    public static EqtMessage Office_FailedToSetWordProperty { get; }
    public static EqtMessage Office_WordBusy { get; }
    public static EqtMessage TestName_Seperator { get; }
    public static EqtMessage OrderedTest_InvalidResultToMerge { get; }
    public static EqtMessage PropertyGrid_Custom { get; }
    public static EqtMessage Reconnect_InvalidTestRun { get; }
    public static EqtMessage RemoveManualTestDialog_Name { get; }
    public static EqtMessage RemoveManualTestDialog_Option_Yes { get; }
    public static EqtMessage RemoveManualTestDialog_Option_No { get; }
    public static EqtMessage RemoveRun_AccessDenied { get; }
    public static EqtMessage RemoveRun_GeneralFailure { get; }
    public static EqtMessage Result_MultipleResultsInOneFileNotSupported { get; }
    public static EqtMessage WatsonMainPleaRegular { get; }
    public static EqtMessage WatsonMainIntroBold { get; }
    public static EqtMessage WatsonMainIntroRegular { get; }
    public static EqtMessage WatsonMainPleaBold { get; }
    public static EqtMessage WatsonReportBeingPrepared { get; }
    public static EqtMessage WatsonReportException { get; }
    public static EqtMessage WatsonReportReady { get; }
    public static EqtMessage RigAdmin_NotAllTheAgentsAreReady { get; }
    public static EqtMessage RigAdmin_AgentAttrbiuteNameMustBeSpecified { get; }
    public static EqtMessage RigAdmin_AgentNameContainsInvalidChars { get; }
    public static EqtMessage RigAdmin_AgentNameMustBeSpecified { get; }
    public static EqtMessage RigAdmin_AgentStateNotResponding { get; }
    public static EqtMessage RigAdmin_AgentStateOffline { get; }
    public static EqtMessage RigAdmin_AgentStateReady { get; }
    public static EqtMessage RigAdmin_AgentStateRunningTest { get; }
    public static EqtMessage RigAdmin_AgentStateUnknown { get; }
    public static EqtMessage RigAdmin_CannotDeleteTempFileWhileLocalRunInProgress { get; }
    public static EqtMessage RigAdmin_RestartRigWhileTestsAreRunning { get; }
    public static EqtMessage AgentIPConfig_EndRangeValueLessThanStartRangeValue { get; }
    public static EqtMessage RigAdmin_AgentPropertiesDialog_FieldName_Weighting { get; }
    public static EqtMessage RigAdmin_AgentPropertiesDialog_FieldName_BaseIP { get; }
    public static EqtMessage RigAdmin_AgentPropertiesDialog_FieldName_SubnetMask { get; }
    public static EqtMessage RigAdmin_AgentPropertiesDialog_FieldName_StartIPRange { get; }
    public static EqtMessage RigAdmin_AgentPropertiesDialog_FieldName_EndIPRange { get; }
    public static EqtMessage RigAdmin_LocalInProcessController { get; }
    public static EqtMessage RigAdmin_MessageBoxCaption { get; }
    public static EqtMessage RigAdmin_Offline { get; }
    public static EqtMessage RigAdmin_Online { get; }
    public static EqtMessage RigAdmin_RemoveAgentCaption { get; }
    public static EqtMessage RigAdmin_ValidationError { get; }
    public static EqtMessage RunConfig_DefaultName { get; }
    public static EqtMessage RunConfig_Invalid { get; }
    public static EqtMessage RunConfig_DebuggingRemoteAndCodeCoverageNotSupportedDialog_Name { get; }
    public static EqtMessage RunConfig_DebuggingRemoteAndCodeCoverageNotSupported { get; }
    public static EqtMessage RunConfig_DeploymentSolutionRootPrefix { get; }
    public static EqtMessage RunConfig_EmptyCollectionSetNameError { get; }
    public static EqtMessage RunConfig_EmptyControllerNameError { get; }
    public static EqtMessage RunConfig_EmptyDeploymentDirectoryError { get; }
    public static EqtMessage RunConfig_RelativeDeploymentDirectoryError { get; }
    public static EqtMessage DeploymentItemOutsideSolutionRootDialog_Name { get; }
    public static EqtMessage RunConfig_DeploymentItemOutsideSolutionRootDialog_Title { get; }
    public static EqtMessage RunConfig_EmptyRunConfigNameError { get; }
    public static EqtMessage RunConfig_EmptyTestRunBaseNameError { get; }
    public static EqtMessage RunConfig_FailedToCreateRegistry { get; }
    public static EqtMessage RunConfig_NotRunConfigEditor { get; }
    public static EqtMessage RunConfig_Reload { get; }
    public static EqtMessage RunConfig_RemoteRunDeployment { get; }
    public static EqtMessage RunConfig_ErrorDisableDeployment { get; }
    public static EqtMessage SI_CannotChangeExtension { get; }
    public static EqtMessage SI_SolutionNotOpen { get; }
    public static EqtMessage StartTestRunWithManualTests { get; }
    public static EqtMessage StartTestRunWithManualTestsDialog_Name { get; }
    public static EqtMessage TCM_AbortEmptyTestRun { get; }
    public static EqtMessage TCM_AbortRemoteTestRunWithManualTest { get; }
    public static EqtMessage TCM_AddorImportMetadataFileMessageBoxCaption { get; }
    public static EqtMessage TCM_AgentRestrictions_DisabledPerTest { get; }
    public static EqtMessage TCM_AgentRestrictions_RunLevel { get; }
    public static EqtMessage TCM_AgentRestrictionsNullName { get; }
    public static EqtMessage TCM_AgentRestrictionsSummaryCaption { get; }
    public static EqtMessage TCM_BuildError { get; }
    public static EqtMessage TCM_CannotOpenTestManagerInNonTestSKU { get; }
    public static EqtMessage TCM_CreateRunError { get; }
    public static EqtMessage TCM_FailedToCreateTestManagerToolWindow { get; }
    public static EqtMessage TCM_FailedToCreateResultToolWindow { get; }
    public static EqtMessage TCM_FailedToCreateRunDetailsToolWindow { get; }
    public static EqtMessage TCM_FailedToShowRunDetailsToolWindow { get; }
    public static EqtMessage TCM_FailedToCreateTestViewToolWindow { get; }
    public static EqtMessage TCM_FailedToCreateTestRunToolWindow { get; }
    public static EqtMessage TCM_FailedToGetDebugInfoForProject { get; }
    public static EqtMessage TCM_FailedToStartProjectUnderDebugger { get; }
    public static EqtMessage TCM_MetadataFileAlreadyExists { get; }
    public static EqtMessage TCM_MSDEV { get; }
    public static EqtMessage TCM_NoTestsRunSelectSingleRun { get; }
    public static EqtMessage TCM_NoTestsToRun { get; }
    public static EqtMessage TCM_OpenMetadataFile_InProjectWarning { get; }
    public static EqtMessage TCM_MetadataReload { get; }
    public static EqtMessage TCM_RemoveManualTestsFromRemoteRun { get; }
    public static EqtMessage TCM_RemoveManualTestsFromRemoteRun_Title { get; }
    public static EqtMessage TCM_RemoveManualTestsFromRemoteRun_AlwaysPrompt { get; }
    public static EqtMessage TCM_RemoveManualTestsFromRemoteRun_AlwaysRemove { get; }
    public static EqtMessage TCM_SelectedTestLists { get; }
    public static EqtMessage TCM_VSCloseLocalRunInProgressWillBeAborted { get; }
    public static EqtMessage TCM_SolutionCloseLocalRunInProgressWillBeAborted { get; }
    public static EqtMessage TCM_CategoryTreeComboBox_SelectedValue_ArgumentException { get; }
    public static EqtMessage TCM_MetadataFileFactory_CreateEditorInstance_nullDocumentPath { get; }
    public static EqtMessage TCM_TmiDataManager_CannotFilterByColumnType { get; }
    public static EqtMessage TCM_ToolWindowCheckboxAccessibilityText { get; }
    public static EqtMessage TCM_ToolWindowIconAccessibilityTextBrokenLink { get; }
    public static EqtMessage TCM_ToolWindowIconAccessibilityNonRunnable { get; }
    public static EqtMessage TCM_UnknownResultTestType { get; }
    public static EqtMessage TE_IllegalTestListCharacters { get; }
    public static EqtMessage TE_IllegalTestListNameHeader { get; }
    public static EqtMessage TestProject_CorruptedTemplateFile { get; }
    public static EqtMessage TestProject_DuplicateProjectName { get; }
    public static EqtMessage TestProject_IllegalProjectName { get; }
    public static EqtMessage TestProject_IllegalSolutionName { get; }
    public static EqtMessage TestProject_InvalidFileName { get; }
    public static EqtMessage TestProject_LanguageNotInstalled { get; }
    public static EqtMessage TestProject_MissingTemplateFile { get; }
    public static EqtMessage TestProject_WrongFolder { get; }
    public static EqtMessage TestSuite_AutoSuiteTestTypeName { get; }
    public static EqtMessage TestSuite_InitializeNotCalled { get; }
    public static EqtMessage TestSuite_InnerTests { get; }
    public static EqtMessage TestSuite_ManualSuiteTestTypeName { get; }
    public static EqtMessage TestSuite_MissingLinkType { get; }
    public static EqtMessage TFS_InvalidBisRegistration { get; }
    public static EqtMessage TMI_AddCategoryIdToCategoryDetailedEventArgsNotSupported { get; }
    public static EqtMessage TMI_AddOrUpdateInvalidCategory { get; }
    public static EqtMessage TMI_AddOrUpdateInvalidRunConfiguration { get; }
    public static EqtMessage TMI_CannotStartMoreThanOneLocalRun { get; }
    public static EqtMessage TMI_CantReadElementTag { get; }
    public static EqtMessage TMI_CantReadKeyTag { get; }
    public static EqtMessage TMI_CantReadKeyVal { get; }
    public static EqtMessage TMI_CantReadValueTag { get; }
    public static EqtMessage TMI_CantReadValueVal { get; }
    public static EqtMessage TMI_CantUseTestsAndCategoriesStorageTypeHere { get; }
    public static EqtMessage TMI_CleanCommunicationsForLocalRunFailure { get; }
    public static EqtMessage TMI_ControllerDied { get; }
    public static EqtMessage TMI_DebuggerCallbackNotRegistered { get; }
    public static EqtMessage TMI_DeploymentDisableDeploymentOverridenDueToRemoteRun { get; }
    public static EqtMessage TMI_DeploymentDisableDeploymentOverridenDueToCodeCoverageEnabled { get; }
    public static EqtMessage TMI_DeploymentDisableDeploymentOverridenDueToUsingSmartDeviceHost { get; }
    public static EqtMessage TMI_DeploymentUnexpectedError { get; }
    public static EqtMessage TMI_ExpectedTypeAttributeNotFound { get; }
    public static EqtMessage TMI_IdNotSet { get; }
    public static EqtMessage TMI_InvalidArrayLength { get; }
    public static EqtMessage TMI_LocalProcessDied { get; }
    public static EqtMessage TMI_MissingDeploymentRootInRunConfig { get; }
    public static EqtMessage TMI_MissingRelativePathRootInRunConfig { get; }
    public static EqtMessage TMI_RegisterForRunEventsNotSupportedForEmbeddedRun { get; }
    public static EqtMessage TMI_RegisterForRunEventsNotSupportedForLocalRun { get; }
    public static EqtMessage TMI_ResultsMustBelongToTheSameRun { get; }
    public static EqtMessage TMI_SetupCommunicationsForLocalRunFailure { get; }
    public static EqtMessage TMI_StorageNotSet { get; }
    public static EqtMessage TMI_TestNotFoundAtOriginalLocation { get; }
    public static EqtMessage TMI_TestTypeInfoCollectionTestTypeUnknown { get; }
    public static EqtMessage TMI_TypeLoadErrorCaption { get; }
    public static EqtMessage TMI_XMLCantReadElementName { get; }
    public static EqtMessage TMI_XMLCantReadElementValue { get; }
    public static EqtMessage TMI_XMLExpectingTypeFoundNothing { get; }
    public static EqtMessage TMI_Disposed { get; }
    public static EqtMessage TMI_CannotGetHostProcessLocation { get; }
    public static EqtMessage TMI_FilterOperationNotAllowedForMethodSignature { get; }
    public static EqtMessage TMI_KeepBothInIdVetoingHandler { get; }
    public static EqtMessage TMI_PublishServerUnableDetectCurrentUser { get; }
    public static EqtMessage TMI_PublishServerNoFilesCopied { get; }
    public static EqtMessage TMI_PartialTestRun { get; }
    public static EqtMessage TMI_TestListIsReadOnly { get; }
    public static EqtMessage TMI_TestListCannotModifyTests { get; }
    public static EqtMessage TMI_TestListCannotModifyCategories { get; }
    public static EqtMessage TMI_TestListIsInvalid { get; }
    public static EqtMessage TMI_TestListIsNotChild { get; }
    public static EqtMessage TUIP_GenericTestInvalidResult { get; }
    public static EqtMessage TUIP_MultipleTestsNotSupported { get; }
    public static EqtMessage TUIP_OrderedTestInvalidResult { get; }
    public static EqtMessage TUIP_ResultsCommonResults { get; }
    public static EqtMessage TUIP_ResultsDebugTrace { get; }
    public static EqtMessage TUIP_ResultsCollectorData { get; }
    public static EqtMessage TUIP_ResultsDataCollectorMessages { get; }
    public static EqtMessage TUIP_ResultsErrorMessage { get; }
    public static EqtMessage TUIP_ResultsErrorStackTrace { get; }
    public static EqtMessage TUIP_ResultsForIncompleteTest { get; }
    public static EqtMessage TUIP_ResultsForNotExecutedTest { get; }
    public static EqtMessage TUIP_ResultsStderror { get; }
    public static EqtMessage TUIP_ResultsStdout { get; }
    public static EqtMessage TUIP_ResultsTextMessages { get; }
    public static EqtMessage TUIP_UnitTestInvalidResult { get; }
    public static EqtMessage TUIP_UnitTestOpenError { get; }
    public static EqtMessage TUIP_UnitTestPermissionTitle { get; }
    public static EqtMessage TUIP_UnitTestDenyAceDetected { get; }
    public static EqtMessage TUIP_NoTestsInStorage { get; }
    public static EqtMessage TUIP_TestRunNameNotAvailable { get; }
    public static EqtMessage TUIP_RetargetingIsUnsupported { get; }
    public static EqtMessage UTA_CleanupStackTrace { get; }
    public static EqtMessage UTA_EmptyDataTableName { get; }
    public static EqtMessage UTA_EndOfInnerExceptionTrace { get; }
    public static EqtMessage UTA_InvalidNumberOfPermutetionObjects { get; }
    public static EqtMessage UTA_MethodHasWrongSignatureResolution_Public { get; }
    public static EqtMessage UTA_MethodHasWrongSignatureResolution_NotPublic { get; }
    public static EqtMessage UTA_MethodHasWrongSignatureResolution_Static { get; }
    public static EqtMessage UTA_MethodHasWrongSignatureResolution_NotStatic { get; }
    public static EqtMessage UTA_TimerResultsHeading { get; }
    public static EqtMessage UTA_TestAborted { get; }
    public static EqtMessage UnitTest_ResultViewer_ResultExistsProviderNull { get; }
    public static EqtMessage Utility_ProcessNameWhenCannotGetIt { get; }
    public static EqtMessage UT_ReadOnlyPropertyCannotBeSet { get; }
    public static EqtMessage VSIP_DontAskCheckBoxNotAddedToForm { get; }
    public static EqtMessage VSIP_FileChooserTooManyFiles { get; }
    public static EqtMessage VSIP_HierarchyWrapper_ProjectDisabled { get; }
    public static EqtMessage VSIP_InvalidFlags { get; }
    public static EqtMessage VSIP_MultiplePhysicalViewsNotSupported { get; }
    public static EqtMessage VSIP_OnlyOpenOrSilentFlag { get; }
    public static EqtMessage VSIP_TimedOutWaitingForDebugger { get; }
    public static EqtMessage VSIP_EditorWindowPane_InitNew_ArgumentException { get; }
    public static EqtMessage VSIP_HierarchyOutputCollection_HierarchyOutputCollectionFactory_EqtHierarchyEnumerationException { get; }
    public static EqtMessage VSTCM_TestsCannotBeAddedBuildInProgressError { get; }
    public static EqtMessage Publish_AccessDenied { get; }
    public static EqtMessage Publish_GetRunIdsGeneralError { get; }
    public static EqtMessage Publish_GetBuildUrisGeneralError { get; }
    public static EqtMessage Publish_RunHasAlreadyBeenPublished { get; }
    public static EqtMessage PublishOperation_InProgress { get; }
    public static EqtMessage Publish_GeneralFailure { get; }
    public static EqtMessage TCMUI_ConnectionStringContainsSensitiveData { get; }
    public static EqtMessage TCMUI_PublishFailedToInitialize { get; }
    public static EqtMessage TCMUI_CreateMetadataCancelled { get; }
    public static EqtMessage TCMUI_TestRunContainsDisabledTests { get; }
    public static EqtMessage TCMUI_MustSaveSolution { get; }
    public static EqtMessage TCMUI_CantSaveTestLists { get; }
    public static EqtMessage TCMUI_TestListEditorNotSupported { get; }
    public static EqtMessage TCMUI_CodeCoverageNotSupported { get; }
    public static EqtMessage Common_DisposingReaderWriterFailedToAcquireReaderLock { get; }
    public static EqtMessage Common_DisposingReaderWriterFailedToAcquireWriterLock { get; }
    public static EqtMessage Common_DisposingReaderWriterFailedToUpgradeWriterLock { get; }
    public static EqtMessage Common_DisposingReaderWriterRedundantDispose { get; }
    public static EqtMessage Common_InsufficentMemoryException { get; }
    public static EqtMessage ConfirmOldFormatConversion_Title { get; }
    public static EqtMessage ConfirmOldFormatConversion_Name { get; }
    public static EqtMessage ConfirmOldFormatConversion_AlwaysPrompt { get; }
    public static EqtMessage ConfirmOldFormatConversion_NeverPrompt { get; }
    public static EqtMessage Common_ConversionUnsupported { get; }
    public static EqtMessage Common_TruncatedOutput { get; }
    public static EqtMessage OldFormatConversionConvertFilesToBeAddedDialogTitle { get; }
    public static EqtMessage OldFormatConversionConvertAllDialogTitle { get; }
    public static EqtMessage FileFormatUserCancelled { get; }
    public static EqtMessage FileFormatConversionSuccess { get; }
    public static EqtMessage FileFormatConversionFilesNotEditable { get; }
    public static EqtMessage FileFormatConversionFilesAreReadOnly { get; }
    public static EqtMessage FileFormatConversionCannotCheckOutFiles { get; }
    public static EqtMessage FileFormatConversionCannotQuerySaveFiles { get; }
    public static EqtMessage FirewallExceptionDisabled { get; }
    public static EqtMessage FirewallExceptionDisabled_CollectionController { get; }
    public static EqtMessage FirewallServiceNotRunning { get; }
    public static EqtMessage FFU_UpgradeCompleted { get; }
    public static EqtMessage FFU_UpgradeNotNeeded { get; }
    public static EqtMessage TrxFileConversionError { get; }
    public static EqtMessage TestProject_UpgradeFailedDueToReferences { get; }
    public static EqtMessage Execution_Agent_DataCollectors_SystemInfo_InitializationException { get; }
    public static EqtMessage Execution_Agent_DataCollectors_SystemInfo_Timeout { get; }
    public static EqtMessage Execution_Agent_DataCollectors_SystemInfo_IEInfoReadErrorText { get; }
    public static EqtMessage Execution_Agent_DataCollectors_SystemInfo_MemoryInfoReadErrorText { get; }
    public static EqtMessage Execution_Agent_DataCollectors_SystemInfo_ScreenColorDepthReadErrorText { get; }
    public static EqtMessage Execution_Agent_AgentProcessManager_NoDataCollectionAgent { get; }
    public static EqtMessage Execution_Common_XmlDataAttachment_RootElementMissing { get; }
    public static EqtMessage Execution_Common_WrongDataCollectionContextType { get; }
    public static EqtMessage Execution_TimedOutIntializeAgentPlugins { get; }
    public static EqtMessage Execution_TimedOutIntializeExecutionAgents { get; }
    public static EqtMessage Execution_RunStoppedOrAbortedWhileInitializingCollectors { get; }
    public static EqtMessage Execution_RunStoppedOrAbortedWhileInitializingExecutionAgents { get; }
    public static EqtMessage Execution_FailedToStartCollectionSessionRun { get; }
    public static EqtMessage TCM_NoImpactedTestsToRun { get; }
    public static EqtMessage TCM_NoRecommendedImpactedTestsToRun { get; }
    public static EqtMessage Common_TestRunConfig_Load_UnrecognizedType { get; }
    public static EqtMessage Common_TestSettings_Collector_NoConfigurationRequired { get; }
    public static EqtMessage Common_TestSettings_Load_DefaultCollectorEditor { get; }
    public static EqtMessage Common_TestSettings_Load_UnrecognizedType { get; }
    public static EqtMessage Common_TestSettings_DataCollection_EmptyCollectorUri { get; }
    public static EqtMessage Common_TestSettings_DataCollection_EmptyAssemblyQualifiedName { get; }
    public static EqtMessage Common_TestSettings_DataCollection_AgentRule_MissingName { get; }
    public static EqtMessage Common_TestSettings_DataCollection_NetworkEmulationProfile_MissingName { get; }
    public static EqtMessage Common_TestSettings_SetTestEnvironment_ControllerNullEnvironmentNotNull { get; }
    public static EqtMessage Common_AgentReservation_ExecutionRunNoExecutionRule { get; }
    public static EqtMessage Common_AgentReservation_UsingEnvironments_ExecutionRuleNoOnlineAgents { get; }
    public static EqtMessage Common_AgentReservation_NotUsingEnvironments_ExecutionRuleNoOnlineAgents { get; }
    public static EqtMessage TestSettingsDialog_CollectionOnlyAgentsDialogPage_FilterReason { get; }
    public static EqtMessage TestSettings_GenericCollectorConfigEditor_Caption { get; }
    public static EqtMessage TestSettings_GenericCollectorConfigEditor_Description { get; }
    public static EqtMessage TestSettings_CodeCoverageCollectorConfigEditor_Caption { get; }
    public static EqtMessage TestSettings_CodeCoverageCollectorConfigEditor_Description { get; }
    public static EqtMessage Execution_WaitingForDataExchangeServiceToStart { get; }
    public static EqtMessage Execution_DataExchangeServiceDidNotStart { get; }
    public static EqtMessage TestSettings_Hosts_SmartDevice_DeploymentNeedsToBeEnabled { get; }
    public static EqtMessage Common_TestRunnerEmptyTestsToRun { get; }
    public static EqtMessage Common_ReadOnlyDictionary_NotSupported { get; }
    public static EqtMessage TestSettings_KeyValueAssociation_Error_SelectedValueOutOfRange { get; }
    public static EqtMessage TestSettings_TestEnvironmentNotSet { get; }
    public static EqtMessage Execution_Controller_AddFailed_MissingTestEnvironmentName { get; }
    public static EqtMessage Execution_Controller_AddFailed_MissingMachineRoleName { get; }
    public static EqtMessage Execution_Controller_AddFailed_MissingAgentName { get; }
    public static EqtMessage Execution_Controller_AddFailed_MissingLabServerUri { get; }
    public static EqtMessage Execution_Controller_AddFailed_MissingLabEnvironmentUri { get; }
    public static EqtMessage Execution_Controller_AddAgent_MissingAgentName { get; }
    public static EqtMessage Execution_Controller_RemoveAgent_MissingAgentName { get; }
    public static EqtMessage Execution_Controller_SetAgentProperties_MissingAgentName { get; }
    public static EqtMessage Execution_Controller_DefaultTestEnvironmentCannotbeUpdated { get; }
    public static EqtMessage Execution_Controller_DefaultTestEnvironmentDoesNotExist { get; }
    public static EqtMessage Execution_Controller_DefaultMachineRoleDoesNotExist { get; }
    public static EqtMessage Execution_Controller_CannotChangeTfsUriWhenAgentsAreRunningTests { get; }
    public static EqtMessage Execution_Controller_AddFailed_DefaultTestEnvironmentMustNotHaveMoreThanOneMachineRoles { get; }
    public static EqtMessage Execution_Controller_Controller_NotRegistered_WithAnyTeamFoundationServer { get; }
    public static EqtMessage Execution_Controller_TeamProjectCannotBeUpdated { get; }
    public static EqtMessage Execution_Controller_SessionJoiningAnotherTestRun { get; }
    public static EqtMessage Execution_AgentService_WaitingForFencingToBeComplete { get; }
    public static EqtMessage Execution_AgentService_DetectedFencingIsComplete { get; }
    public static EqtMessage HostAdapters_AspNet_AgentSide_WebTestAdapter_FailedToGetWebSites { get; }
    public static EqtMessage CodeGen_GenericParameterHelperTypeNotFound { get; }
    public static EqtMessage CodeGen_TargetMethodNotSupported { get; }
    public static EqtMessage CollectedFilesResultViewer_TestFilesSectionName { get; }
    public static EqtMessage DataCollectionSink_CanNotReadStream { get; }
    public static EqtMessage Common_TestControllerRegisteredWithTFS { get; }
    public static EqtMessage TestSettings_TestControllerRegisteredWithTFS { get; }
    public static EqtMessage Execution_PermissionDenied { get; }
    public static EqtMessage DontIncludeContentTypeParameters { get; }
    public static EqtMessage Common_TcmInformation_TestIterationIdMustBeNonnegative { get; }
    public static EqtMessage TUIP_UnitTestAssemblyPermissionTitle { get; }
    public static EqtMessage ArgumentExceptionMessage { get; }
    public static EqtMessage ControllerVersionNotSupported { get; }
    public static EqtMessage VSIP_NetFrameworkTestProjectNotSupported { get; }
    public static EqtMessage VSIP_TestProjectHasNotSupportedTestType { get; }
    public static EqtMessage VSIP_TestProjectRetargetNeedConfigUpdate { get; }
    public static EqtMessage VSIP_TestProjectTestTypeAdditionNotSupported { get; }
    public static EqtMessage TMI_RemoteExecutionNotSupportedForFramework35Run { get; }
    public static EqtMessage TMI_LocalExecutionWithNoIsolationNotSupportedForFramework35Run { get; }
    public static EqtMessage TMI_HostedTestsNotSupportedForFramework35Run { get; }
    public static EqtMessage TMI_CustomTestTypesNotSupportedForFramework35Run { get; }
    public static EqtMessage TMI_TCMRunNotSupportedForFramework35Run { get; }
    public static EqtMessage TMI_TestRunCanNotTargetMultipleFramework { get; }
    public static EqtMessage IncompatibleEnvironmentAndLabArguments { get; }
    public static EqtMessage ArgumentExceptionGenericError { get; }
    public static EqtMessage Execution_TestMachineConfigurationChanged { get; }
    public static EqtMessage FailedToAddCredentialsToCredentialManager { get; }
    public static EqtMessage TestProject_AddCuitInDev10UnitTestProject { get; }
    public static EqtMessage TCM_NoCodedWebTestsToRun { get; }
    public static EqtMessage MsTestPublish_NotSupported { get; }
    private static Messages();
    public static EqtMessage get_AbortEmptyTestRunDialog_Name();
    public static EqtMessage AddIns_MagellanCCViewer_FailedToLoadPackage(object param0);
    public static EqtMessage get_AddIns_MagellanCCViewer_FailedToShowToolWindow();
    public static EqtMessage AspNetDevServer_DuplicateName(object param0);
    public static EqtMessage get_AspNetDevServer_InvalidName();
    public static EqtMessage AspUT_AspNetConnectionFailed(object param0, object param1);
    public static EqtMessage AspUT_AspNetConnectionLost(object param0, object param1);
    public static EqtMessage AspUT_AspNetConnectionTimedOut(object param0);
    public static EqtMessage AspUT_CommunicationChannelPortAssignmentFailed(object param0);
    public static EqtMessage AspUT_CommunicationSetupFailed(object param0);
    public static EqtMessage get_AspUT_CommunicationSetupTimeout();
    public static EqtMessage get_AspUT_CommunicationCleanupTimeout();
    public static EqtMessage AspUT_GeneralFailure(object param0);
    public static EqtMessage AspUT_IISExecutionRequiresAdmin(object param0);
    public static EqtMessage AspUT_InvalidUrlToTest(object param0, object param1);
    public static EqtMessage AspUT_InvalidUrlToTestScheme(object param0);
    public static EqtMessage get_AspUT_InvalidWebServerType();
    public static EqtMessage get_AspUT_LoadTestExecutionNotSupported();
    public static EqtMessage get_AspUT_NoPathToWeb();
    public static EqtMessage get_AspUT_NoUrlToTest();
    public static EqtMessage AspUT_PlatformNotSupported(object param0);
    public static EqtMessage AspUT_RequiresFullTrust(object param0);
    public static EqtMessage AspUT_ResponseFileNameFormat(object param0);
    public static EqtMessage AspUT_TestExecutionIncomplete(object param0, object param1, object param2);
    public static EqtMessage get_AspUT_TestTimeout();
    public static EqtMessage AspUT_WebAlreadyConfigured(object param0);
    public static EqtMessage AspUT_WebConfigNotFound(object param0);
    public static EqtMessage AspUT_WebSiteNotConfiguredForTesting(object param0, object param1);
    public static EqtMessage AspUT_ResponseFileNote(object param0);
    public static EqtMessage AspUT_WebSiteRequestError(object param0, object param1);
    public static EqtMessage AspUT_MissingPathToWebInRunConfig(object param0);
    public static EqtMessage AspUT_MissingPathToWebInTest(object param0);
    public static EqtMessage AspUT_BadPathToWebFromUrl(object param0);
    public static EqtMessage get_AspUT_DefaultWebRoot();
    public static EqtMessage AspUT_WebConfigConfigureFailed(object param0);
    public static EqtMessage AspUT_WebConfigUnconfigureFailed(object param0);
    public static EqtMessage get_AspUT_BadCredentials();
    public static EqtMessage BaseTable_Connect_Unexpected(object param0);
    public static EqtMessage get_BaseTable_Transaction_Unexpected();
    public static EqtMessage BaseTable_Transaction_UnexpectedWithInner(object param0);
    public static EqtMessage BaseTable_Transaction_BrokenConnection(object param0);
    public static EqtMessage Build_DownloadSourceDoesNotExist(object param0);
    public static EqtMessage Build_DownloadSourcePermissionDenied(object param0);
    public static EqtMessage get_BuildCoverageTable_LoadCoverage_BuildNotSpecified();
    public static EqtMessage BuildCoverageTable_Read_Unexpected(object param0, object param1);
    public static EqtMessage BuildCoverageTable_Write_Unexpected(object param0, object param1);
    public static EqtMessage BuildTable_ReadRuns_Unexpected(object param0, object param1);
    public static EqtMessage BuildTable_ReadBuilds_Unexpected(object param0);
    public static EqtMessage BuildTable_ReadBuilds_UnexpectedWithBuild(object param0, object param1);
    public static EqtMessage get_CancelPublishing_AccessDenied();
    public static EqtMessage get_CancelPublishing_GeneralFailure();
    public static EqtMessage get_CatIdCollisionDialog_Name();
    public static EqtMessage get_CatIdCollisionDialog_Option_Abort();
    public static EqtMessage get_CatIdCollisionDialog_Option_Ignore();
    public static EqtMessage get_CatIdCollisionDialog_Option_None();
    public static EqtMessage get_CatIdCollisionDialog_Option_Retry();
    public static EqtMessage get_CatIdCollisionDialog_Option_Yes();
    public static EqtMessage get_CatRunConfigCollisionDialog_Option_No();
    public static EqtMessage get_CatRunConfigCollisionDialog_Option_None();
    public static EqtMessage get_CatRunConfigCollisionDialog_Option_Yes();
    public static EqtMessage CheckinPolicy_CouldNotLoadMetadataFile(object param0);
    public static EqtMessage CheckinPolicy_InvalidTrxData(object param0);
    public static EqtMessage CheckinPolicy_UnableToLoadResults(object param0);
    public static EqtMessage get_Linking_TestResultLinkTypeLocalizedName();
    public static EqtMessage get_Linking_UriDoesNotMapToArtifact();
    public static EqtMessage get_Linking_InvalidTeamFoundationServerAndProject();
    public static EqtMessage get_Linking_NoTestResultSpecifiedToLink();
    public static EqtMessage get_Linking_MessageTitle();
    public static EqtMessage get_CloseManualTestDialog_Name();
    public static EqtMessage get_CloseManualTestDialog_Option_OK();
    public static EqtMessage CMI_DuplicateTestID(object param0);
    public static EqtMessage CMI_InvalidAttributeValue(object param0, object param1);
    public static EqtMessage CMI_NoOutputPath(object param0);
    public static EqtMessage get_CMI_No_Processors();
    public static EqtMessage CMI_Registration_BadFormat(object param0, object param1, object param2);
    public static EqtMessage CMI_Registration_CantLoadCMProcessor(object param0, object param1, object param2);
    public static EqtMessage CMI_Registration_InvalidGuid(object param0);
    public static EqtMessage CMI_Registration_NoCMProcessors(object param0, object param1);
    public static EqtMessage CMI_Registration_NoProcessor(object param0, object param1);
    public static EqtMessage CodeCov_IncompatibleProvider(object param0, object param1);
    public static EqtMessage CodeCov_InvalidProvider(object param0, object param1);
    public static EqtMessage CodeCov_InternalMergingWarnings(object param0, object param1);
    public static EqtMessage CodeCov_AnalysisEngineThrew(object param0);
    public static EqtMessage get_CodeCov_AspProjectDoesNotExist();
    public static EqtMessage get_CodeCov_BinaryFileDoesNotExist();
    public static EqtMessage CodeCov_SpecifiedBinaryFileDoesNotExist(object param0);
    public static EqtMessage get_CodeCov_BlocksCoveredGridCaption();
    public static EqtMessage get_CodeCov_BlocksCoveredPercGridCaption();
    public static EqtMessage get_CodeCov_BlocksNotCoveredGridCaption();
    public static EqtMessage get_CodeCov_BlocksNotCoveredPercGridCaption();
    public static EqtMessage get_CodeCov_BrokenSourceFileLink();
    public static EqtMessage get_CodeCov_BrowseForBinaryDialogCaption();
    public static EqtMessage CodeCov_CannotFindAspNetPageLocation(object param0);
    public static EqtMessage CodeCov_CannotFindBinaryDuringInstrumentation(object param0);
    public static EqtMessage CodeCov_CannotFindBinaryInInstrumentation(object param0);
    public static EqtMessage CodeCov_CannotFindKeyFileInInstrumentation(object param0);
    public static EqtMessage get_CodeCov_CannotFindSymbols();
    public static EqtMessage CodeCov_CannotFindSymbolsForFile(object param0);
    public static EqtMessage CodeCov_CannotFindVsInstrumenter(object param0, object param1);
    public static EqtMessage CodeCov_CannotInitializeSelectedAspNetProject(object param0, object param1);
    public static EqtMessage CodeCov_CannotMerge(object param0);
    public static EqtMessage CodeCov_CannotNavigateInsideFile(object param0, object param1, object param2);
    public static EqtMessage CodeCov_CannotReadWholeKeyFile(object param0);
    public static EqtMessage CodeCov_CannotStartExecutable(object param0);
    public static EqtMessage get_CodeCov_ChooseKeyFileDialogCaption();
    public static EqtMessage CodeCov_CollectionThrewException(object param0);
    public static EqtMessage get_CodeCov_CorruptCovFiles();
    public static EqtMessage CodeCov_CovFileAlreadyOpen(object param0);
    public static EqtMessage CodeCov_ExceptionThrown(object param0);
    public static EqtMessage CodeCov_ExceptionThrownInCollection(object param0);
    public static EqtMessage CodeCov_ExceptionThrownInInstrumentation(object param0);
    public static EqtMessage get_CodeCov_FailedToCreateToolWindow();
    public static EqtMessage get_CodeCov_CannotOpenToolWindow();
    public static EqtMessage get_CodeCov_GlobalClasses();
    public static EqtMessage get_CodeCov_GlobalFunctions();
    public static EqtMessage get_CodeCov_HierarchyElementError();
    public static EqtMessage get_CodeCov_HierarchyGridCaption();
    public static EqtMessage CodeCov_InPlaceInstrumentationBinaryChanged(object param0, object param1);
    public static EqtMessage CodeCov_InPlaceInstrumentationBinaryRestoreFailed(object param0, object param1);
    public static EqtMessage CodeCov_InPlaceInstrumentationCannotAccessPath(object param0, object param1);
    public static EqtMessage CodeCov_InPlaceInstrumentationCannotBackupBinary(object param0, object param1, object param2);
    public static EqtMessage CodeCov_InPlaceInstrumentationCannotCreateBackupDirectory(object param0, object param1, object param2);
    public static EqtMessage CodeCov_InPlaceInstrumentationCannotFindOriginalFile(object param0, object param1);
    public static EqtMessage CodeCov_InPlaceInstrumentationDirectoryRestoreFailed(object param0, object param1);
    public static EqtMessage CodeCov_InPlaceInstrumentationInvalidPath(object param0);
    public static EqtMessage CodeCov_UnableToRestoreBinary(object param0);
    public static EqtMessage get_CodeCov_InPlaceInstrumentationRestoreBatchFileCaption();
    public static EqtMessage CodeCov_InPlaceInstrumentationRestoreBatchFileCreationFailed(object param0, object param1, object param2);
    public static EqtMessage get_CodeCov_InstrumentationCannotFindVSKey();
    public static EqtMessage CodeCov_InstrumentationError(object param0, object param1);
    public static EqtMessage CodeCov_InstrumentationErrorExitCodeNotZero(object param0, object param1);
    public static EqtMessage CodeCov_InstrumentationListenerFailed(object param0);
    public static EqtMessage CodeCov_InstrumentationNameConflict(object param0);
    public static EqtMessage CodeCov_InstrumentationTimeout(object param0);
    public static EqtMessage CodeCov_InstrumentationWarning(object param0, object param1);
    public static EqtMessage CodeCov_InvalidCoverageType(object param0);
    public static EqtMessage CodeCov_InvalidRegistryEntryForVsInstr(object param0);
    public static EqtMessage get_CodeCov_BinaryFileCannotBeNullOrEmpty();
    public static EqtMessage get_CodeCov_PdbFileCannotBeNullOrEmpty();
    public static EqtMessage get_CodeCov_KeyFileCannotBeNull();
    public static EqtMessage get_CodeCov_OutputDirectoryCannotBeNull();
    public static EqtMessage CodeCov_OutputDirectoryIsRooted(object param0);
    public static EqtMessage CodeCov_ItemContainsInvalidCharacters(object param0, object param1, object param2, object param3);
    public static EqtMessage get_CodeCov_JumpToNextReachedEnd();
    public static EqtMessage get_CodeCov_JumpToPreviousReachedBeginning();
    public static EqtMessage get_CodeCov_KeyFileCannotBeEmpty();
    public static EqtMessage get_CodeCov_LessThanTwoProvidersForMerging();
    public static EqtMessage get_CodeCov_LinesCoveredGridCaption();
    public static EqtMessage get_CodeCov_LinesCoveredPercGridCaption();
    public static EqtMessage get_CodeCov_LinesNotCoveredGridCaption();
    public static EqtMessage get_CodeCov_LinesNotCoveredPercGridCaption();
    public static EqtMessage get_CodeCov_LinesPartiallyCoveredGridCaption();
    public static EqtMessage get_CodeCov_LinesPartiallyCoveredPercGridCaption();
    public static EqtMessage get_CodeCov_Merge();
    public static EqtMessage get_CodeCov_MergedResultMissing();
    public static EqtMessage get_CodeCov_MergedResults();
    public static EqtMessage get_CodeCov_MessageCaption();
    public static EqtMessage get_CodeCov_MissingAspProject();
    public static EqtMessage CodeCov_WrongAspNetProject(object param0, object param1);
    public static EqtMessage get_CodeCov_EmptyBinaryFile();
    public static EqtMessage CodeCov_WrongBinaryFile(object param0, object param1);
    public static EqtMessage CodeCov_MissingFile(object param0);
    public static EqtMessage CodeCov_NoCoverageDateForRunInProgress(object param0);
    public static EqtMessage get_CodeCov_NoResults();
    public static EqtMessage CodeCov_NotExistingKeyFileResetToEmpty(object param0);
    public static EqtMessage get_CodeCov_NotTouchedArea();
    public static EqtMessage get_CodeCov_OpenCoverageFileCaption();
    public static EqtMessage get_CodeCov_PartiallyTouchedArea();
    public static EqtMessage get_CodeCov_Pending();
    public static EqtMessage CodeCov_PostInstrument_CannotCopy(object param0, object param1, object param2);
    public static EqtMessage CodeCov_PostInstrument_CannotFindSymbols(object param0);
    public static EqtMessage CodeCov_PostInstrument_CannotInitialize(object param0);
    public static EqtMessage CodeCov_PostInstrument_CannotInitialize_Exception(object param0, object param1);
    public static EqtMessage CodeCov_PostInstrument_Error(object param0);
    public static EqtMessage CodeCov_PostInstrument_NonExistentBinary(object param0);
    public static EqtMessage CodeCov_PostInstrument_Warning(object param0);
    public static EqtMessage CodeCov_ResigningKeyFileDoesNotExist(object param0);
    public static EqtMessage CodeCov_ResignKeyFileTooBig(object param0);
    public static EqtMessage CodeCov_ResignKeyFileTooBigNoSigning(object param0, object param1);
    public static EqtMessage CodeCov_ResolveInstrumentationNameConflict(object param0, object param1, object param2);
    public static EqtMessage get_CodeCov_deployment();
    public static EqtMessage get_CodeCov_SaveAsXml();
    public static EqtMessage get_CodeCov_SelectMoreThanOneProvider();
    public static EqtMessage get_CodeCov_SourceFileMissing();
    public static EqtMessage get_CodeCov_TestRunPending();
    public static EqtMessage get_CodeCov_StatisticsNoData();
    public static EqtMessage get_CodeCov_StatisticsNoCoverageFiles();
    public static EqtMessage CodeCov_SymbolsFileSelected(object param0);
    public static EqtMessage CodeCov_TextMarkersException(object param0);
    public static EqtMessage get_CodeCov_ToolWindowCaption();
    public static EqtMessage get_CodeCov_TouchedArea();
    public static EqtMessage CodeCov_UnableToResignBinary(object param0, object param1, object param2);
    public static EqtMessage CodeCov_UnableToReadPublicKey(object param0, object param1);
    public static EqtMessage CodeCov_BinaryNotStrongName(object param0);
    public static EqtMessage CodeCov_UnableToReadBinaryPublicKey(object param0);
    public static EqtMessage CodeCov_DifferentPublicKey(object param0, object param1);
    public static EqtMessage CodeCov_UnaccessibleRegistryEntryForVsInstr(object param0);
    public static EqtMessage CodeCov_InvalidArtifactType(object param0, object param1);
    public static EqtMessage CodeCov_RemoveProvider(object param0);
    public static EqtMessage CodeCov_ExceptionThrownInFileDelete(object param0, object param1);
    public static EqtMessage CodeGen_AccessorCreatedFor(object param0);
    public static EqtMessage get_CodeGen_AccessorFileFailed();
    public static EqtMessage get_CodeGen_AccessorSentinel();
    public static EqtMessage get_CodeGen_CppInvalidRankSpecifier();
    public static EqtMessage CodeGen_CppInvalidTypeName(object param0);
    public static EqtMessage get_CodeGen_CppNoBaseTemplates();
    public static EqtMessage get_CodeGen_CppNoInteriorPointers();
    public static EqtMessage get_CodeGen_CppNoMemberSelectionOperator();
    public static EqtMessage CodeGen_CppNoRefByValAccessors(object param0);
    public static EqtMessage get_CodeGen_CPPOnlySupportsSafe();
    public static EqtMessage get_CodeGen_CPPTargetNotManaged();
    public static EqtMessage get_CodeGen_OperatorsMustBePublic();
    public static EqtMessage get_CodeGen_NonCLSCompliantException();
    public static EqtMessage CodeGen_CouldNotCreateAccessor(object param0);
    public static EqtMessage CodeGen_CouldNotResolveType(object param0);
    public static EqtMessage CodeGen_CouldNotResolveCppType(object param0);
    public static EqtMessage get_CodeGen_NoNativeTypes();
    public static EqtMessage get_CodeGen_CSharpVBNoValueByRef();
    public static EqtMessage get_CodeGen_CSharpVBNoRefByValue();
    public static EqtMessage get_CodeGen_CSharpVBNoRefByValueByRef();
    public static EqtMessage get_CodeGen_InteriorPointerNotSupported();
    public static EqtMessage get_CodeGen_CSharpNoOperatorOverloadedByInstance();
    public static EqtMessage get_CodeGen_FinalizersNotSupported();
    public static EqtMessage get_CodeGen_TrueAndFalseNotSupported();
    public static EqtMessage get_CodeGen_PopulatingTree();
    public static EqtMessage get_CodeGen_PrivateAccessorHeader();
    public static EqtMessage CodeGen_PrivateAccessorNotFound(object param0);
    public static EqtMessage get_CodeGen_PrivateAccessorInheritanceNotPreservedAcrossAssemblies();
    public static EqtMessage get_CodeGen_AssignPropertyValueTODOComment();
    public static EqtMessage get_CodeGen_BasesLabel();
    public static EqtMessage get_CodeGen_CanNotVerifyVoidMethods();
    public static EqtMessage get_CodeGen_CanNotVerifyWriteOnlyProperties();
    public static EqtMessage CodeGen_CouldNotFindService(object param0);
    public static EqtMessage CodeGen_CouldNotLoadFile(object param0);
    public static EqtMessage CodeGen_CreateNewTestProject(object param0);
    public static EqtMessage get_CodeGen_DefaultTestFailure();
    public static EqtMessage get_CodeGen_GenericsTestFailure();
    public static EqtMessage CodeGen_GenericParameterTypesMustBePublic(object param0);
    public static EqtMessage get_CodeGen_DialogError();
    public static EqtMessage get_CodeGen_DialogWarning();
    public static EqtMessage get_CodeGen_DoneGenerating();
    public static EqtMessage get_CodeGen_CancelGenerating();
    public static EqtMessage get_CodeGen_ErrorMessageTitle();
    public static EqtMessage get_CodeGen_ErrorNotificationTitle();
    public static EqtMessage CodeGen_FailedToCreateAccessors(object param0, object param1);
    public static EqtMessage CodeGen_FileAlreadyExists(object param0);
    public static EqtMessage get_CodeGen_FileHeader();
    public static EqtMessage CodeGen_FileInProjectNotExist(object param0);
    public static EqtMessage CodeGen_GenerationFailed(object param0);
    public static EqtMessage get_CodeGen_IdentifierTooLong();
    public static EqtMessage CodeGen_IncorrectReturnValue(object param0);
    public static EqtMessage CodeGen_InvalidExtension(object param0, object param1);
    public static EqtMessage CodeGen_InvalidIdentifier(object param0);
    public static EqtMessage CodeGen_InvalidOutputProject(object param0);
    public static EqtMessage CodeGen_InvalidPath(object param0);
    public static EqtMessage get_CodeGen_ManuallyUpdateWebRef();
    public static EqtMessage get_CodeGen_MembersLabel();
    public static EqtMessage CodeGen_MethodDoc(object param0);
    public static EqtMessage get_CodeGen_UrlToTestComment();
    public static EqtMessage CodeGen_FriendlyCtor(object param0);
    public static EqtMessage get_CodeGen_MissingFileName();
    public static EqtMessage CodeGen_MissingWebReference(object param0);
    public static EqtMessage CodeGen_MustManuallyVerify(object param0, object param1);
    public static EqtMessage get_CodeGen_NoDerivingFromDelegate();
    public static EqtMessage get_CodeGen_NoGenericAccessorMembers();
    public static EqtMessage get_CodeGen_NoGenericAccessors();
    public static EqtMessage get_CodeGen_NoPrivateDelegateParameters();
    public static EqtMessage get_CodeGen_NoPrivateOperators();
    public static EqtMessage get_CodeGen_NoProject();
    public static EqtMessage CodeGen_NotAFolder(object param0);
    public static EqtMessage get_CodeGen_NoTrueOrFalseOperators();
    public static EqtMessage CodeGen_NoTypeSatisfiesTypeConstraints(object param0, object param1);
    public static EqtMessage get_CodeGen_NoUnsafeAccessors();
    public static EqtMessage get_CodeGen_PageComment();
    public static EqtMessage get_CodeGen_ParameterCantMatchFunction();
    public static EqtMessage get_CodeGen_ParameterInitTODOComment();
    public static EqtMessage CodeGen_PrivateAccessorFailed(object param0, object param1);
    public static EqtMessage CodeGen_ProcessingItem(object param0);
    public static EqtMessage CodeGen_ProjectReferenceError(object param0, object param1, object param2);
    public static EqtMessage get_CodeGen_QueryFailureUnknown();
    public static EqtMessage get_CodeGen_QueryFailureCurrentlyDebugging();
    public static EqtMessage get_CodeGen_QueryFailureNoCodeModel();
    public static EqtMessage get_CodeGen_QueryFailureNoProject();
    public static EqtMessage get_CodeGen_QueryFailureNoSolution();
    public static EqtMessage get_CodeGen_QueryFailureUnsupportedProjectType();
    public static EqtMessage get_CodeGen_QueryFailureUnsupportedCppProjectType();
    public static EqtMessage get_CodeGen_QueryFailureUnsupportedTestProjectType();
    public static EqtMessage get_CodeGen_QueryUnknownError();
    public static EqtMessage get_CodeGen_QueryFailureVisible();
    public static EqtMessage get_CodeGen_SurrogatePairInFileName();
    public static EqtMessage CodeGen_StartsWithPeriod(object param0);
    public static EqtMessage get_CodeGen_TestAlreadyExists();
    public static EqtMessage CodeGen_TestClassAttributeNeeded(object param0);
    public static EqtMessage CodeGen_TestClassDoc(object param0);
    public static EqtMessage get_CodeGen_TestContextDoc();
    public static EqtMessage CodeGen_TestCreationDialogText(object param0);
    public static EqtMessage get_CodeGen_TestClassRegionName();
    public static EqtMessage CodeGen_TestClassHelperComments(object param0, object param1, object param2, object param3);
    public static EqtMessage get_CodeGen_ToDoWebClientHelper();
    public static EqtMessage get_CodeGen_ToDoInstantiateConcreteClass();
    public static EqtMessage CodeGen_UnexpectedOperatorOverload(object param0);
    public static EqtMessage CodeGen_UnexpectedMethodReturn(object param0);
    public static EqtMessage CodeGen_UnexpectedTargetType(object param0, object param1);
    public static EqtMessage get_CodeGen_UnsafeNotSupported();
    public static EqtMessage get_CodeGen_UnsupportedLanguage();
    public static EqtMessage get_CodeGen_VBNoPointers();
    public static EqtMessage get_CodeGen_VBNoConversionOperatorsOverloadedByInstance();
    public static EqtMessage get_CodeGen_VerifyTarget();
    public static EqtMessage get_CodeGen_WebReferenceAddError();
    public static EqtMessage get_CodeGen_WrongDynamicType();
    public static EqtMessage get_CodeGen_MustSaveSolution();
    public static EqtMessage get_CodeGen_NeedUrlToTest();
    public static EqtMessage get_CodeGen_ProgressWindowFailed();
    public static EqtMessage get_CodeGen_SyntaxErrors();
    public static EqtMessage CommandFactory_InvalidCommand(object param0);
    public static EqtMessage CommandFactory_InvalidDirectory(object param0);
    public static EqtMessage get_CommandLine_Aborted();
    public static EqtMessage get_CommandLine_AgentConfigUtil_FailedToOpenVSRegistryKey();
    public static EqtMessage get_CommandLine_AgentConfigUtil_FailedToOpenOrCreateAgentRegistryKey();
    public static EqtMessage CommandLine_DetailProperties_PropertyNotFoundInTestResult(object param0);
    public static EqtMessage CommandLine_TestListPathNotFound(object param0);
    public static EqtMessage get_CommandLine_Completed();
    public static EqtMessage get_CommandLine_DefaultCommandLineRunConfigurationName();
    public static EqtMessage get_CommandLine_DetailError();
    public static EqtMessage CommandLine_DetailFormatting(object param0, object param1);
    public static EqtMessage CommandLine_DirectoryDoesNotExist(object param0);
    public static EqtMessage get_CommandLine_Fail();
    public static EqtMessage CommandLine_FileDoesNotExist(object param0);
    public static EqtMessage CommandLine_GeneralError(object param0);
    public static EqtMessage get_CommandLine_GeneralErrorOnBuildFlavor();
    public static EqtMessage get_CommandLine_GeneralErrorOnBuildVerification();
    public static EqtMessage get_CommandLine_GeneralErrorOnCustomSearchPathRoot();
    public static EqtMessage get_CommandLine_GeneralErrorOnPlatform();
    public static EqtMessage get_CommandLine_GeneralErrorOnTeamProject();
    public static EqtMessage get_CommandLine_GeneralErrorOnPublishing();
    public static EqtMessage get_CommandLine_GeneralErrorOnResultsFileRoot();
    public static EqtMessage get_CommandLine_GeneralErrorOnSpecifyingPublishBuild();
    public static EqtMessage get_CommandLine_HelpHeader1();
    public static EqtMessage get_CommandLine_HelpHeader2();
    public static EqtMessage get_CommandLine_HelpHeader();
    public static EqtMessage get_CommandLine_HelpHeaderCoreFeaturesOnly();
    public static EqtMessage get_CommandLine_HelpOptionsHeader();
    public static EqtMessage get_CommandLine_HelpSwitchesRequireTFCHeader();
    public static EqtMessage get_CommandLine_HelpHelp();
    public static EqtMessage get_CommandLine_HelpNoLabel();
    public static EqtMessage get_CommandLine_HelpTestContainer();
    public static EqtMessage get_CommandLine_HelpMetadata();
    public static EqtMessage get_CommandLine_HelpNoIsolation();
    public static EqtMessage get_CommandLine_HelpNoResults();
    public static EqtMessage get_CommandLine_HelpUseStandardError();
    public static EqtMessage get_CommandLine_HelpTestSettings();
    public static EqtMessage get_CommandLine_HelpResultsFile();
    public static EqtMessage get_CommandLine_HelpMinPriority();
    public static EqtMessage get_CommandLine_HelpMaxPriority();
    public static EqtMessage CommandLine_InvalidPriority(object param0);
    public static EqtMessage get_CommandLine_HelpTestCategory();
    public static EqtMessage CommandLine_InvalidTestCategory(object param0, object param1);
    public static EqtMessage get_CommandLine_InvalidTestCategoryMultipleOperators();
    public static EqtMessage get_CommandLine_InvalidTestCategoryNoCommas();
    public static EqtMessage get_CommandLine_InvalidTestCategoryEmpty();
    public static EqtMessage get_CommandLine_InvalidTestCategoryContainsNot();
    public static EqtMessage CommandLine_InvalidConfigName(object param0);
    public static EqtMessage CommandLine_InvalidRunTitle(object param0);
    public static EqtMessage get_CommandLine_HelpTestList();
    public static EqtMessage get_CommandLine_HelpTestName();
    public static EqtMessage get_CommandLine_HelpUnique();
    public static EqtMessage get_CommandLine_HelpDetail();
    public static EqtMessage get_CommandLine_HelpPublish();
    public static EqtMessage get_CommandLine_HelpPublishBuildVerification();
    public static EqtMessage get_CommandLine_HelpPublishResultsFile();
    public static EqtMessage get_CommandLine_HelpPublishBuild();
    public static EqtMessage get_CommandLine_HelpPublishTeamProject();
    public static EqtMessage get_CommandLine_HelpTestConfigId();
    public static EqtMessage get_CommandLine_HelpTestConfigName();
    public static EqtMessage get_CommandLine_HelpPublishPlatform();
    public static EqtMessage get_CommandLine_HelpPublishFlavor();
    public static EqtMessage get_CommandLine_HelpPublishRunTitle();
    public static EqtMessage CommandLine_InvalidFilePath(object param0);
    public static EqtMessage CommandLine_PathTooLongPrefix(object param0, object param1);
    public static EqtMessage CommandLine_InvalidPublishResultsFilePath(object param0);
    public static EqtMessage get_CommandLine_TeamFoundationClientNotInstalled();
    public static EqtMessage CommandLine_InvalidTeamFoundationServer(object param0);
    public static EqtMessage CommandLine_CannotExecuteInProcWithCodeCoverageOn(object param0);
    public static EqtMessage CommandLine_Label(object param0);
    public static EqtMessage get_CommandLine_Deprecated();
    public static EqtMessage CommandLine_Loading(object param0);
    public static EqtMessage get_CommandLine_SearchPathsForTests();
    public static EqtMessage get_CommandLine_SearchPathsForRunConfig();
    public static EqtMessage get_CommandLine_AbortingRun();
    public static EqtMessage get_CommandLine_RemoteRunNotSupported();
    public static EqtMessage get_CommandLine_CodeCoverageNotSupported();
    public static EqtMessage CommandLine_ResultsFilePathInvalid(object param0);
    public static EqtMessage CommandLine_LoadTestContainerWarningForTestConflict(object param0, object param1, object param2, object param3);
    public static EqtMessage get_CommandLine_LoadMetadataFileWarningForRunConfigConflict();
    public static EqtMessage get_CommandLine_LoadMetadataFileWarningForTestConflict();
    public static EqtMessage get_CommandLine_LoadMetadataFileFailedMostLikelyDueToMissingTestType();
    public static EqtMessage get_CommandLine_MissingArgument();
    public static EqtMessage get_CommandLine_MissingPublish();
    public static EqtMessage get_CommandLine_InvalidConfigurationId();
    public static EqtMessage get_CommandLine_MissingBuildUriForPublish();
    public static EqtMessage get_CommandLine_MissingBuildVerificationPublish();
    public static EqtMessage get_CommandLine_MissingPlatformForPublish();
    public static EqtMessage get_CommandLine_MissingFlavorForPublish();
    public static EqtMessage get_CommandLine_MissingTeamProjectForPublish();
    public static EqtMessage CommandLine_SwitchCannotBeUsedWithTestSupplierSwitches(object param0);
    public static EqtMessage CommandLine_SwitchMustBeUsedWithTestSupplierSwitches(object param0);
    public static EqtMessage get_CommandLine_MissingOptions();
    public static EqtMessage get_CommandLine_MissingOutputFileName();
    public static EqtMessage CommandLine_MissingParameterForSwitch(object param0);
    public static EqtMessage get_CommandLine_MissingSearchPathRoot();
    public static EqtMessage get_CommandLine_MissingPathToResultsFileRoot();
    public static EqtMessage CommandLine_MissingRequiredCommand(object param0, object param1);
    public static EqtMessage CommandLine_IncompatibleCommands(object param0, object param1);
    public static EqtMessage get_CommandLine_MissingResultFile();
    public static EqtMessage get_CommandLine_MissingTeamFoundationServer();
    public static EqtMessage get_CommandLine_PublishFailedToStart();
    public static EqtMessage get_CommandLine_NoTestsToExecute();
    public static EqtMessage get_CommandLine_NoTestsLoadingOptions();
    public static EqtMessage get_CommandLine_UnexpectedErrorMissingFile();
    public static EqtMessage get_CommandLine_Pass();
    public static EqtMessage get_CommandLine_PublishResultsFileNotExist();
    public static EqtMessage get_CommandLine_NoResultsToPublish();
    public static EqtMessage CommandLine_BuildNotFoundInProject(object param0, object param1);
    public static EqtMessage CommandLine_ResultCount(object param0, object param1);
    public static EqtMessage get_CommandLine_ResultTotalCount();
    public static EqtMessage CommandLine_ResultFileExist(object param0);
    public static EqtMessage get_CommandLine_ResultsFileLogged();
    public static EqtMessage get_CommandLine_ResultsFileFormat();
    public static EqtMessage get_CommandLine_ResultsRequiredToPublish();
    public static EqtMessage get_CommandLine_RunConfigurationConflict();
    public static EqtMessage get_CommandLine_RunError();
    public static EqtMessage get_CommandLine_StartExecution();
    public static EqtMessage CommandLine_ResultSummaryTestsPassed(object param0, object param1, object param2);
    public static EqtMessage get_CommandLine_ResultSummaryDelimiter();
    public static EqtMessage CommandLine_ResultSummaryIndividualTotal(object param0, object param1);
    public static EqtMessage CommandLine_SummaryResult(object param0, object param1, object param2, object param3, object param4, object param5, object param6, object param7);
    public static EqtMessage get_CommandLine_SummaryResultsCloseBracket();
    public static EqtMessage get_CommandLine_SummaryResultsOpenBracket();
    public static EqtMessage CommandLine_SummaryTotalCount(object param0);
    public static EqtMessage CommandLine_Switch1CannotBeUsedWithSwitch2(object param0, object param1);
    public static EqtMessage CommandLine_SwitchCanOnlyBeSpecifiedOnce(object param0);
    public static EqtMessage CommandLine_SwitchDoesNotTakeParameter(object param0);
    public static EqtMessage CommandLine_TestCaseIsBrokenLink(object param0);
    public static EqtMessage CommandLine_TestIsNotRunnable(object param0, object param1);
    public static EqtMessage get_CommandLine_TestIsNotRunnableGenericReason();
    public static EqtMessage CommandLine_TestCaseIsNotAutomated(object param0);
    public static EqtMessage CommandLine_TestCaseNameMultipleMatches(object param0);
    public static EqtMessage CommandLine_TestCaseNameNoMatch(object param0);
    public static EqtMessage get_CommandLine_TestResultsHeaderResults();
    public static EqtMessage get_CommandLine_TestResultsHeaderTestCases();
    public static EqtMessage get_CommandLine_HeaderUnderlineCharacter();
    public static EqtMessage CommandLine_TestResultTestNameFormatWithCategory(object param0, object param1);
    public static EqtMessage get_CommandLine_TestRunAborted();
    public static EqtMessage get_CommandLine_TestRunFailed();
    public static EqtMessage get_CommandLine_FinalTestResults();
    public static EqtMessage get_CommandLine_SummaryTitle();
    public static EqtMessage get_CommandLine_TestRunNameDelimiter();
    public static EqtMessage CommandLine_TestRunNameWithBuildFlavor(object param0, object param1);
    public static EqtMessage CommandLine_TestRunNameWithPlatform(object param0, object param1);
    public static EqtMessage CommandLine_TestRunNameWithPlatformAndBuildFlavor(object param0, object param1, object param2);
    public static EqtMessage get_CommandLine_TestRunPassed();
    public static EqtMessage CommandLine_TestRunResult(object param0);
    public static EqtMessage get_CommandLine_TypeHelpForSyntax();
    public static EqtMessage get_CommandLine_RunConfigurationUsed();
    public static EqtMessage get_CommandLine_TaskNeedsToBeExecutedUnderMSBuild();
    public static EqtMessage get_CommandLine_TaskRequiresVSTTSKU();
    public static EqtMessage CommandLine_TaskRequiresFilesNotFound(object param0);
    public static EqtMessage Common_CommaSeparate(object param0, object param1);
    public static EqtMessage get_Common_InvalidVersion();
    public static EqtMessage get_Common_DontPrompt();
    public static EqtMessage get_Common_AlwaysPrompt();
    public static EqtMessage get_Common_NonClsException();
    public static EqtMessage Common_ExceptionMessage(object param0, object param1);
    public static EqtMessage Common_CopyLimitReached(object param0, object param1);
    public static EqtMessage get_Common_MultipleTestsNotAllowed();
    public static EqtMessage Common_AbortDueToError(object param0);
    public static EqtMessage get_Common_CannotBeLessThanZero();
    public static EqtMessage get_Common_CannotBeNullOrEmpty();
    public static EqtMessage get_Common_MustBeGreaterThanZero();
    public static EqtMessage Common_ValueMustBeBetween(object param0, object param1, object param2);
    public static EqtMessage Common_ValueMustBeSpecifiedFor(object param0);
    public static EqtMessage get_Common_ArrayNotLongEnough();
    public static EqtMessage Common_CannotFindFile(object param0);
    public static EqtMessage Common_CannotFindLink(object param0);
    public static EqtMessage get_Common_ArgumentFileNameOnly();
    public static EqtMessage Common_DelegateThrows(object param0);
    public static EqtMessage Common_DeploymentItemContainsInvalidCharacters(object param0, object param1);
    public static EqtMessage get_Common_DeploymentItemOutputDirectoryCannotBeNull();
    public static EqtMessage Common_DeploymentItemOutputDirectoryMustBeRelative(object param0);
    public static EqtMessage get_Common_DeploymentItemPathCannotBeNullOrEmpty();
    public static EqtMessage Common_DeploymentItemStringCannotHaveMultipleSeparators(object param0, object param1);
    public static EqtMessage Common_DeploymentItemStringPathCannotBeEmpty(object param0);
    public static EqtMessage Common_DeploymentItem(object param0);
    public static EqtMessage Common_DeploymentItemWithOutputDirectory(object param0, object param1);
    public static EqtMessage Common_DeploymentItemWithOrigin(object param0, object param1);
    public static EqtMessage Common_DeploymentItemWithOutputDirectoryAndOrigin(object param0, object param1, object param2);
    public static EqtMessage get_Common_DeploymentItemOriginRunConfig();
    public static EqtMessage Common_DeploymentItemOriginPerTestDeployment(object param0);
    public static EqtMessage Common_DeploymentItemOriginTestContainer(object param0);
    public static EqtMessage Common_DeploymentItemNoDeployment(object param0, object param1);
    public static EqtMessage Common_DeploymentItemOriginDependency(object param0);
    public static EqtMessage Common_DeploymentItemOriginSatellite(object param0);
    public static EqtMessage Common_DeploymentItemTestContainer(object param0);
    public static EqtMessage Common_CodeCoverageItem(object param0);
    public static EqtMessage get_Common_Description();
    public static EqtMessage Common_ElementCountMismatch(object param0, object param1);
    public static EqtMessage get_Common_EmptyPath();
    public static EqtMessage Common_FailedToGetExceptionMessage(object param0);
    public static EqtMessage Common_FailedToGetExceptionStackTrace(object param0);
    public static EqtMessage Common_FailedToGetExceptionDetailedMessage(object param0);
    public static EqtMessage Common_FileNotExist(object param0);
    public static EqtMessage get_Common_GuidCannotBeEmpty();
    public static EqtMessage get_Common_HostProcessPlatformMustBeMSILOrX86();
    public static EqtMessage Common_InfoWithExtraInfo(object param0, object param1);
    public static EqtMessage Common_InvalidPathCharacters(object param0, object param1);
    public static EqtMessage Common_LinkAlreadyExists(object param0);
    public static EqtMessage get_Common_MissingRunInResult();
    public static EqtMessage get_Common_MissingRunConfigInRun();
    public static EqtMessage get_Common_MissingRunDeploymentRootInRunConfig();
    public static EqtMessage get_Common_MultipleValueStringShouldNotContainBinaryZero();
    public static EqtMessage Common_NameValuePair(object param0, object param1);
    public static EqtMessage get_Common_NewNameValuePair();
    public static EqtMessage get_Common_No();
    public static EqtMessage Common_NotFilePath(object param0);
    public static EqtMessage get_Common_NullInMessages();
    public static EqtMessage Common_ObjectMustBeOfType(object param0);
    public static EqtMessage get_Common_ObjectString();
    public static EqtMessage Common_PathMustBeRelative(object param0);
    public static EqtMessage Common_PropertyReadOnly(object param0);
    public static EqtMessage Common_ReplaceExistingFile(object param0);
    public static EqtMessage get_Common_TcmInformation_TestCaseIdMustBePositive();
    public static EqtMessage get_Common_TcmInformation_TestRunIdMustBePositive();
    public static EqtMessage get_Common_TcmInformation_TestResultIdMustBePositive();
    public static EqtMessage get_Common_TestOutcomeAborted();
    public static EqtMessage get_Common_TestOutcomeCompleted();
    public static EqtMessage get_Common_TestOutcomeDisconnected();
    public static EqtMessage get_Common_TestOutcomeTimeout();
    public static EqtMessage get_Common_TestOutcomeError();
    public static EqtMessage get_Common_TestOutcomeFailed();
    public static EqtMessage get_Common_TestOutcomeInconclusive();
    public static EqtMessage get_Common_TestOutcomeInProgress();
    public static EqtMessage get_Common_TestOutcomeNotExecuted();
    public static EqtMessage get_Common_TestOutcomeNotRunnable();
    public static EqtMessage get_Common_TestOutcomePassed();
    public static EqtMessage get_Common_TestOutcomePassedButRunAborted();
    public static EqtMessage get_Common_TestOutcomePending();
    public static EqtMessage get_Common_TestOutcomeWarning();
    public static EqtMessage Common_TestRunName(object param0, object param1, object param2);
    public static EqtMessage Common_TestRunNamePrefixScheme(object param0, object param1);
    public static EqtMessage Common_TestRunConfig_DataCollection_DoubleAgent(object param0);
    public static EqtMessage Common_TestRunConfig_DataCollection_DoubleCollector(object param0);
    public static EqtMessage get_Common_TestRunConfig_DataCollection_EmptyAssemblyQualifiedName();
    public static EqtMessage get_Common_TestSettings_DefaultName();
    public static EqtMessage Common_TestStorageDoesNotExist(object param0, object param1, object param2);
    public static EqtMessage Common_TestCopyName(object param0);
    public static EqtMessage Common_Indent(object param0);
    public static EqtMessage Common_TwoLines(object param0, object param1);
    public static EqtMessage Common_TwoLines_IndentSecond(object param0, object param1);
    public static EqtMessage Common_WrongNumberOfElements(object param0, object param1);
    public static EqtMessage Common_Xml_WhidbeyXsltFunctions_InvalidDateTimeFormat(object param0);
    public static EqtMessage Common_Xml_WhidbeyXsltFunctions_InvalidMultipleDateTimeFormats(object param0, object param1);
    public static EqtMessage get_Common_Yes();
    public static EqtMessage Common_DestinationDirUnderSource(object param0, object param1);
    public static EqtMessage get_Common_EqtTraceReachedMaxEventLogEntries();
    public static EqtMessage get_Common_FileAggregatorAlreadyShutdown();
    public static EqtMessage DIAHelper_DiaInitializationFailed(object param0);
    public static EqtMessage Common_PathDoesNotExist(object param0);
    public static EqtMessage get_Common_RemoteRunCannotContainManualTests();
    public static EqtMessage get_Common_TestRunCannotContainDisabledTests();
    public static EqtMessage get_Common_CommandLineExecutionCannotContainManualTests();
    public static EqtMessage Common_TestRunHasIssues(object param0);
    public static EqtMessage Common_ManualTestRemovedFromTestRun(object param0);
    public static EqtMessage Common_DisabledTestRemovedFromTestRun(object param0);
    public static EqtMessage Common_TimeoutOutOfRange(object param0);
    public static EqtMessage Common_CannotGetNextIterationName(object param0, object param1);
    public static EqtMessage Common_NothingLeftAfterReplaciingBadCharsInName(object param0);
    public static EqtMessage get_Common_UnknownTestNotRunnableReason();
    public static EqtMessage Common_CannotHostNotRunnable(object param0, object param1);
    public static EqtMessage Common_UnknownTestResultError(object param0);
    public static EqtMessage Common_CannotHostUseDefaultHost(object param0, object param1);
    public static EqtMessage Common_HostTypeCannotLoad(object param0, object param1);
    public static EqtMessage Common_HostTypeMissingSetting(object param0);
    public static EqtMessage Common_HostTypeCannotFindKey(object param0);
    public static EqtMessage Common_HostTypesKeyError(object param0, object param1);
    public static EqtMessage Common_FileTooLong(object param0);
    public static EqtMessage get_Common_ResultMessage_Level();
    public static EqtMessage get_Common_ResultMessage_Timestamp();
    public static EqtMessage get_Common_ResultMessage_Message();
    public static EqtMessage get_Common_ResultMessage_DataCollector();
    public static EqtMessage get_Common_ResultMessage_Agent();
    public static EqtMessage get_Common_SingleInstance_CouldNotStartApplication();
    public static EqtMessage get_ConsoleProcess_ControllerService_StartingAsInteractiveProcess();
    public static EqtMessage get_ConsoleProcess_AgentService_StartingAsInteractiveProcess();
    public static EqtMessage get_ConsoleProcess_PressEnterToExit();
    public static EqtMessage Disconnect_Failed(object param0);
    public static EqtMessage Unload_Failed(object param0);
    public static EqtMessage DeleteRun_Failed(object param0);
    public static EqtMessage get_EAP_CanNotRegisterWithService();
    public static EqtMessage EAP_TestAdapterThrewException(object param0, object param1, object param2);
    public static EqtMessage EAP_TestAdapterStoppedTest(object param0);
    public static EqtMessage EAS_AgentAlreadyExecutingTest(object param0);
    public static EqtMessage EAS_AgentProcessStoppedExecuting(object param0);
    public static EqtMessage EAS_AgentServiceStoppedExecutingTest(object param0);
    public static EqtMessage EAS_AgentServiceStopped(object param0);
    public static EqtMessage EAS_AgentServiceCannotStart(object param0, object param1);
    public static EqtMessage EAS_AgentServiceStoppingError(object param0, object param1);
    public static EqtMessage EAS_SetupBatFileExceededExectuionTimeout(object param0);
    public static EqtMessage EAS_CleanupBatFileExceededExectuionTimeout(object param0);
    public static EqtMessage EAS_CanNotStartAgentProcess(object param0, object param1);
    public static EqtMessage EAS_Controller_CopyLogTimeout(object param0);
    public static EqtMessage EAS_Deployment_CouldNotCreateFile(object param0);
    public static EqtMessage EAS_Deployment_CouldNotWriteFile(object param0);
    public static EqtMessage get_EAS_PortSettingDoesNotExist();
    public static EqtMessage get_EAS_ServiceDescription();
    public static EqtMessage get_EAS_AgentServiceAlreadyRunning();
    public static EqtMessage get_ECS_ControllerServiceStoppedExecutingTest();
    public static EqtMessage ECS_ControllerServiceCannotStart(object param0);
    public static EqtMessage ECS_ControllerServiceCannotConnectToTCMServer(object param0);
    public static EqtMessage ECS_AgentAlreadyInList(object param0);
    public static EqtMessage get_ECS_AgentCopy_Aborted();
    public static EqtMessage ECS_CodeCov_CopyBinaryPdbFailed(object param0, object param1);
    public static EqtMessage ECS_Deployment_CouldNotCreateFile(object param0);
    public static EqtMessage ECS_Deployment_CouldNotWriteFile(object param0);
    public static EqtMessage get_ECS_Listener_CopyLogTimeout();
    public static EqtMessage ECS_LogsDirCouldNotBeCopied(object param0, object param1, object param2);
    public static EqtMessage get_ECS_PortSettingDoesNotExist();
    public static EqtMessage get_ECS_ServiceDescription();
    public static EqtMessage ECS_SpooledJob_CorruptJob(object param0);
    public static EqtMessage ECS_SpooledJob_FileContentsBad(object param0);
    public static EqtMessage ECS_SpooledJob_ReplayFailure(object param0, object param1);
    public static EqtMessage get_ECS_SpooledJob_ResultFileReadError();
    public static EqtMessage ECS_SpooledJob_ResultFileWriteError(object param0, object param1);
    public static EqtMessage ECS_SpooledJob_SpoolingFailure(object param0, object param1);
    public static EqtMessage ECS_SpooledJob_StorageFileError(object param0);
    public static EqtMessage ECS_SpooledJob_StoragePathError(object param0);
    public static EqtMessage get_ECS_NoAgentsMatchedSelectionCriteria();
    public static EqtMessage get_ECS_NoAgentsOnline();
    public static EqtMessage Editor_TestNotInTestProject(object param0);
    public static EqtMessage get_Execution_ServiceShuttingDown();
    public static EqtMessage Execution_CollectionAgentNotUsed(object param0);
    public static EqtMessage get_Executon_CouldNotGetControllerName();
    public static EqtMessage get_Executon_CouldNotGetTfsName();
    public static EqtMessage Execution_TestRunDurationExceeded(object param0);
    public static EqtMessage get_Execution_Administrators();
    public static EqtMessage get_Execution_VSTTControllerAdminGroupDescription();
    public static EqtMessage Execution_Too_Many_Hung_Tests(object param0, object param1);
    public static EqtMessage Execution_InvalidData(object param0);
    public static EqtMessage Execution_CouldNotOpenTraceFile(object param0, object param1, object param2);
    public static EqtMessage Execution_InvalidPortSetting(object param0);
    public static EqtMessage Execution_InvalidPortValue(object param0);
    public static EqtMessage Execution_CannotCreateWorkingDirectory(object param0, object param1);
    public static EqtMessage Execution_AgentCount_Too_Large(object param0, object param1, object param2);
    public static EqtMessage get_Execution_AbortedTestRun();
    public static EqtMessage get_Execution_AbortedTestRun_AgentRestarted();
    public static EqtMessage get_Execution_UserAbortedTestRun();
    public static EqtMessage get_Execution_AgentProcessInvalidStartParams();
    public static EqtMessage Execution_AgentFailedQueueTests(object param0, object param1, object param2);
    public static EqtMessage get_Execution_AccessDenied();
    public static EqtMessage get_Execution_AgentProcessInvalidExecutionKey();
    public static EqtMessage Execution_AgentCommunicationException(object param0, object param1);
    public static EqtMessage Execution_AgentNotConnected(object param0);
    public static EqtMessage Execution_ReverseConnectionToAgentFailed(object param0);
    public static EqtMessage Execution_ReverseConnectionToAgentFailed_WithRecommendedAction(object param0);
    public static EqtMessage get_Execution_ReverseConnectionToAgentTimedOut();
    public static EqtMessage Execution_AgentNotFound(object param0);
    public static EqtMessage Execution_AgentProcessNotStarted(object param0);
    public static EqtMessage get_Execution_CanNotDeleteTempFilesDuringTest();
    public static EqtMessage Execution_CanNotFindConfigFile(object param0);
    public static EqtMessage Execution_CannotFindFile(object param0);
    public static EqtMessage Execution_ControllerRemoteCommandOnly(object param0);
    public static EqtMessage Execution_CouldNotRegisterChannel(object param0, object param1);
    public static EqtMessage Execution_CouldNotRegisterChannelOnNic(object param0, object param1, object param2);
    public static EqtMessage Execution_DeleteTempFilesFailed(object param0);
    public static EqtMessage Execution_Deployment_Agent_Timeout(object param0);
    public static EqtMessage get_Execution_Deployment_Bat_Copyright();
    public static EqtMessage Execution_Deployment_Setup_Bat_ExitCode(object param0, object param1, object param2);
    public static EqtMessage Execution_Deployment_Cleanup_Bat_ExitCode(object param0, object param1, object param2);
    public static EqtMessage Execution_Deployment_Setup_Bat_Exception(object param0);
    public static EqtMessage Execution_Deployment_Cleanup_Bat_Exception(object param0);
    public static EqtMessage get_Execution_Deployment_Bat_Header();
    public static EqtMessage get_Execution_Deployment_Bat_UserCommands();
    public static EqtMessage Execution_Test_Timeout(object param0);
    public static EqtMessage Execution_Agent_Timeout(object param0);
    public static EqtMessage get_Execution_FileNotOpen();
    public static EqtMessage get_Execution_OperationNotAllowedWhileRunningTest();
    public static EqtMessage Execution_PathContainsRelativeindirection(object param0);
    public static EqtMessage get_Execution_PermissionDeniedNotAuthenticated();
    public static EqtMessage Execution_PermissionDeniedNotMemberOfGroup(object param0);
    public static EqtMessage Execution_PermissionDeniedNotMemberOfGroupAndDoesNotHavePermissionOnTeamProject(object param0, object param1, object param2);
    public static EqtMessage Execution_PermissionDeniedNotMemberOfTwoGroups(object param0, object param1);
    public static EqtMessage get_Execution_PermissionDeniedNotRunOwnerOrAdmin();
    public static EqtMessage Execution_RegisterWithControllerException(object param0);
    public static EqtMessage Execution_RestartRigErrors(object param0);
    public static EqtMessage Execution_RestartRigTimeout(object param0);
    public static EqtMessage Execution_RestartTimeout(object param0, object param1);
    public static EqtMessage Execution_RestartRig_NoMachineName(object param0);
    public static EqtMessage Execution_LocalControllerCannotExecuteRun(object param0, object param1);
    public static EqtMessage Execution_ControllerCannotExecuteRun(object param0, object param1, object param2);
    public static EqtMessage Execution_ControllerCannotExecuteCollectionOnlyRun(object param0, object param1);
    public static EqtMessage Execution_FailedQueueRunToCollectingController(object param0, object param1);
    public static EqtMessage get_Execution_Synchronized_Test_Controller_Timeout();
    public static EqtMessage Execution_TestAdapterLoadFailure(object param0, object param1);
    public static EqtMessage get_Execution_DebuggerOperationTimeout();
    public static EqtMessage get_Execution_Unknown_Exception();
    public static EqtMessage Execution_InvalidStopTestRuntTimeout(object param0);
    public static EqtMessage Execution_InvalidAlwaysUseMachineName(object param0);
    public static EqtMessage Execution_InvalidNIC(object param0);
    public static EqtMessage get_Execution_InvalidCallNoRunOnAgent();
    public static EqtMessage Execution_InvalidUseNetBiosName(object param0);
    public static EqtMessage Execution_FileAlreadyExists(object param0);
    public static EqtMessage Execution_FileTransferTimeout(object param0, object param1);
    public static EqtMessage get_Execution_CollectorDataRequestTimedout();
    public static EqtMessage Execution_AttributeRetrievalError(object param0);
    public static EqtMessage Execution_DataCollectionAgentDied(object param0);
    public static EqtMessage Execution_DataCollectionAgentCommError(object param0, object param1);
    public static EqtMessage Execution_DataCollectorDisabledOnCollectionOnlyAgent(object param0, object param1);
    public static EqtMessage Execution_DataCollectorInitializationError(object param0, object param1, object param2);
    public static EqtMessage Execution_DataCollectorError(object param0, object param1);
    public static EqtMessage Execution_DataCollectorInitializationTimeout(object param0);
    public static EqtMessage Execution_DataCollectorEventTimeout(object param0);
    public static EqtMessage Execution_DataCollectorRequestedDuplicateTestExecutionEnvironmentVariable(object param0, object param1, object param2, object param3);
    public static EqtMessage Execution_DataCollectorRequestedInvalidTestExecutionEnvironmentVariable(object param0, object param1, object param2, object param3);
    public static EqtMessage Execution_CouldNotSetEnvironmentVariableRequestedByDataCollectorsAtUserLevel(object param0, object param1);
    public static EqtMessage Execution_DataCollectorRequiredAttributeMissing(object param0, object param1);
    public static EqtMessage Execution_DataCollectorAttributeResourceMissing(object param0, object param1, object param2);
    public static EqtMessage Execution_DataCollectorTypeUriFormatInvalid(object param0, object param1);
    public static EqtMessage Execution_DataCollectorConfigurationEditorTypeUriFormatInvalid(object param0, object param1);
    public static EqtMessage Execution_DataCollectorConfigurationHelpUriFormatInvalid(object param0, object param1);
    public static EqtMessage Execution_DataCollectorConfigurationHelpUriNotAbsolute(object param0, object param1);
    public static EqtMessage Execution_DataCollectorConfigurationHelpUriSchemeInvalid(object param0, object param1, object param2);
    public static EqtMessage Execution_DataCollectorConfigurationEditorTypeUriAttributeError(object param0, object param1);
    public static EqtMessage Execution_DataCollectorConfigurationEditorTypeUriAttributeMissing(object param0);
    public static EqtMessage Execution_DataCollectorConfigurationEditorTypeUriAttributeInvalid(object param0, object param1);
    public static EqtMessage get_Execution_DiscoveryCacheDisposed();
    public static EqtMessage Execution_DiscoveryCacheLoadError(object param0);
    public static EqtMessage Execution_ResourceNameNullOrEmpty(object param0, object param1);
    public static EqtMessage Execution_DataCollectorNotFound(object param0, object param1);
    public static EqtMessage Execution_CollectorErrorWarningFormat(object param0, object param1, object param2, object param3, object param4);
    public static EqtMessage Execution_CollectorExceptionFormat(object param0, object param1, object param2, object param3, object param4, object param5, object param6, object param7);
    public static EqtMessage get_GetRunPath_GeneralFailure();
    public static EqtMessage get_GetRunInformation_GeneralFailure();
    public static EqtMessage get_GetRunIdFromExecId_GeneralFailure();
    public static EqtMessage get_OperationalStore_OsServiceHelper_ConfigurationsTable_BuildConfigNotFound();
    public static EqtMessage get_OperationalStore_OsServiceHelper_ConfigurationsTable_BuildPlatformFlavorNotFound();
    public static EqtMessage get_RemoteTestRunNotSupportedDialog_Name();
    public static EqtMessage get_RemoteTestRunNotSupportedDialog_Description();
    public static EqtMessage get_RemoteTestRunNotSupportedDialog_Option_OK();
    public static EqtMessage get_DeleteOldRunsDialog_Name();
    public static EqtMessage get_DeleteOldRunsDialog_Description();
    public static EqtMessage get_DeleteOldRunsDialog_Option_None();
    public static EqtMessage get_DeleteOldRunsDialog_Option_Ok();
    public static EqtMessage get_CodeCoverageNotSupportedDialog_Name();
    public static EqtMessage get_CodeCoverageNotSupportedDialog_Description();
    public static EqtMessage get_CodeCoverageNotSupportedDialog_Option_OK();
    public static EqtMessage get_NonCoreTestExecution_NoLicenseShort();
    public static EqtMessage NonCoreTestExecution_NoLicense(object param0);
    public static EqtMessage get_WebLoadTestExecution_NoLicenseShort();
    public static EqtMessage WebLoadTestExecution_NoLicense(object param0);
    public static EqtMessage get_RemoteLoadTestExecution_NoLicenseShort();
    public static EqtMessage RemoteLoadTestExecution_NoLicense(object param0);
    public static EqtMessage LoadTestVuserCount_NoLicenseShort(object param0);
    public static EqtMessage LoadTestVuserCount_NoLicense(object param0, object param1);
    public static EqtMessage RigUtility_AddProperty(object param0, object param1, object param2);
    public static EqtMessage RigUtility_AdministratorGroupSidError(object param0);
    public static EqtMessage get_RigUtility_FirewallDescription();
    public static EqtMessage get_AgentConfiguration_ConfigurationUtility_FirewallDescription();
    public static EqtMessage get_ControllerConfiguration_FirewallDescription();
    public static EqtMessage get_AgentInstaller_ControllerConfiguration_FirewallDescription();
    public static EqtMessage get_ControllerConfiguration_ServiceDisplayName();
    public static EqtMessage get_ControllerConfiguration_ServiceDescription();
    public static EqtMessage get_AgentConfiguration_ServiceDisplayName();
    public static EqtMessage get_AgentConfiguration_ServiceDescription();
    public static EqtMessage get_LabAgent_ServiceDisplayName();
    public static EqtMessage get_LabAgent_ServiceDescription();
    public static EqtMessage get_LabNetworkAgent_ServiceDisplayName();
    public static EqtMessage get_LabNetworkAgent_ServiceDescription();
    public static EqtMessage get_RigUtility_AgentServiceUsersGroupDescription();
    public static EqtMessage get_RigUtility_CommandLine_Help_Header();
    public static EqtMessage get_RigUtility_CommandLine_Help_Flags();
    public static EqtMessage get_RigUtility_CommandLine_Help_Controller();
    public static EqtMessage get_RigUtility_CommandLine_Help_AgentService();
    public static EqtMessage get_RigUtility_CommandLine_Help_Footer();
    public static EqtMessage RigUtility_CommandLine_Label(object param0);
    public static EqtMessage RigUtility_UnregisteringAgent(object param0);
    public static EqtMessage RigUtility_ConnectingToControllerAs(object param0);
    public static EqtMessage get_RigUtility_ControllerNotSpecified();
    public static EqtMessage RigUtility_AcquiringControllerInterface(object param0);
    public static EqtMessage RigUtility_ExceptionCaught(object param0);
    public static EqtMessage get_RigUtility_UtilityExiting();
    public static EqtMessage RigUtility_AddingUserToControllerAdminGroup(object param0, object param1, object param2);
    public static EqtMessage RigUtility_FailedToCreateChannel(object param0, object param1);
    public static EqtMessage RigUtility_FailedToCreateChannel(object param0);
    public static EqtMessage RigUtility_AddingControllerUserToAdminGroup(object param0);
    public static EqtMessage RigUtility_SettingAgentController(object param0);
    public static EqtMessage RigUtility_AddingAgentServiceToFirewall(object param0);
    public static EqtMessage RigUtility_ErrorAddingAgentServiceToFirewall(object param0, object param1);
    public static EqtMessage RigUtility_AddUserToGroup(object param0, object param1);
    public static EqtMessage RigUtility_CheckGroupExists(object param0);
    public static EqtMessage get_RigUtility_RemovingRegistryValues();
    public static EqtMessage RigUtility_ErrorRemovingRegistryValues(object param0);
    public static EqtMessage RigUtility_AddingAgentToController(object param0, object param1);
    public static EqtMessage RigUtility_ErrorAddingAgentToController(object param0, object param1, object param2);
    public static EqtMessage RigUtility_RemovingAgentFromController(object param0);
    public static EqtMessage RigUtility_ErrorRemovingAgentFromController(object param0, object param1);
    public static EqtMessage RigUtility_CouldNotAddUser(object param0, object param1);
    public static EqtMessage RigUtility_CouldNotGetGroupOrAddUser(object param0, object param1, object param2);
    public static EqtMessage RigUtility_InvalidFlag(object param0);
    public static EqtMessage RigUtility_RequiredFlagNotSpecified(object param0);
    public static EqtMessage get_RigUtility_ControllerLoginForm();
    public static EqtMessage RigUtility_ControllerInvalidPort(object param0);
    public static EqtMessage get_RigUtility_EnterAgentUserInfo();
    public static EqtMessage get_RigUtility_ASUserPassword();
    public static EqtMessage get_RigUtility_ASUserName();
    public static EqtMessage get_RigUtility_UserPassword();
    public static EqtMessage get_RigUtility_UserName();
    public static EqtMessage get_RigUtility_ASExplanation();
    public static EqtMessage get_RigUtility_OK();
    public static EqtMessage get_RigUtility_CANCEL();
    public static EqtMessage get_FindLinkHelperDialog_Name();
    public static EqtMessage get_FindLinkHelperDialog_Option_Abort();
    public static EqtMessage get_FindLinkHelperDialog_Option_Ignore();
    public static EqtMessage get_FindLinkHelperDialog_Option_None();
    public static EqtMessage get_FindLinkHelperDialog_Option_Retry();
    public static EqtMessage get_ConfirmDeleteRunDialog_Name();
    public static EqtMessage get_ConfirmDeleteRunDialog_Option_Ok();
    public static EqtMessage get_ConfirmDeleteRunDialog_Option_None();
    public static EqtMessage get_ConfirmDeleteMultipleRunsDialog_Name();
    public static EqtMessage get_ConfirmDeleteMultipleRunsDialog_Option_Ok();
    public static EqtMessage get_ConfirmDeleteMultipleRunsDialog_Option_None();
    public static EqtMessage get_ConfirmRemovePublishedRunDialog_Name();
    public static EqtMessage get_ConfirmRemovePublishedRunDialog_Option_Ok();
    public static EqtMessage get_ConfirmRemovePublishedRunDialog_Option_None();
    public static EqtMessage get_ConfirmCancelPublishRunDialog_Name();
    public static EqtMessage get_ConfirmCancelPublishRunDialog_Option_Ok();
    public static EqtMessage get_ConfirmCancelPublishRunDialog_Option_None();
    public static EqtMessage get_CreateWorkItem_PublishResultDialog_Title();
    public static EqtMessage get_CreateWorkItem_PublishResultDialog_Text();
    public static EqtMessage get_CreateWorkItem_PublishInProgressResultDialog_Title();
    public static EqtMessage CreateWorkItem_PublishInProgressResultDialog_Text(object param0);
    public static EqtMessage get_CreateWorkItem_PublishResultDialog_Option_Name();
    public static EqtMessage get_CreateWorkItem_PublishResultDialog_Option_Yes();
    public static EqtMessage get_CreateWorkItem_PublishResultDialog_Option_No();
    public static EqtMessage get_CreateWorkItem_PublishResultDialog_Option_None();
    public static EqtMessage CreateTestRun_TestNotFound(object param0);
    public static EqtMessage get_CreateTestRun_ContinueRunWithoutMissingTests_Title();
    public static EqtMessage get_CreateTestRun_ContinueRunWithoutMissingTests_Text();
    public static EqtMessage get_CreateTestRun_ContinueRunWithoutMissingTests_Option_Name();
    public static EqtMessage get_CreateTestRun_ContinueRunWithoutMissingTests_Option_Yes();
    public static EqtMessage get_CreateTestRun_ContinueRunWithoutMissingTests_Option_No();
    public static EqtMessage get_ConfirmExcludeFromGroupDialog_Name();
    public static EqtMessage get_TestsDirty_DontAskDialog_Title();
    public static EqtMessage get_TestsDirty_DontAskDialog_Text();
    public static EqtMessage get_TestsDirty_DontAskDialog_DontRefresh();
    public static EqtMessage get_TestsDirty_DontAskDialog_Name();
    public static EqtMessage get_ConfirmExcludeFromGroupDialog_Option_Ok();
    public static EqtMessage get_ConfirmExcludeFromGroupDialog_Option_None();
    public static EqtMessage GenericTest_EmptyMaxDuration(object param0);
    public static EqtMessage GenericTest_EmptyProgramFile(object param0);
    public static EqtMessage GenericTest_InvalidProgram(object param0, object param1);
    public static EqtMessage GenericTest_EmptySummaryFile(object param0);
    public static EqtMessage GenericTest_EmptyWorkDir(object param0);
    public static EqtMessage get_GenericTest_SeveralTestsPerStorage();
    public static EqtMessage GT_CannotFindXmlFile(object param0);
    public static EqtMessage GT_CannotOpenXmlFile(object param0, object param1);
    public static EqtMessage get_GT_CannotSetReadOnlyProperty();
    public static EqtMessage GT_ColumnObjectNotString(object param0);
    public static EqtMessage get_GT_CommonResults();
    public static EqtMessage get_GT_InnerResults();
    public static EqtMessage get_GT_InnerTestName();
    public static EqtMessage get_GT_InnerTestResult();
    public static EqtMessage get_GT_InnerErrorMessage();
    public static EqtMessage get_GT_InnerDetailedResults();
    public static EqtMessage get_GT_SummaryFile();
    public static EqtMessage GT_XmlFileReadException(object param0, object param1);
    public static EqtMessage GT_XmlSchemaException(object param0, object param1);
    public static EqtMessage get_GT_NotApplicable();
    public static EqtMessage GTA_CannotFindExecutableFile(object param0);
    public static EqtMessage GTA_CannotStartProcess(object param0);
    public static EqtMessage get_GTA_CannotStartTestAfterTestRunStop();
    public static EqtMessage GTA_GenericTestReturnedNonZeroExitCode(object param0);
    public static EqtMessage GTA_GenericTestWasAborted(object param0);
    public static EqtMessage get_GTA_SummaryFileSchemaError();
    public static EqtMessage get_GTA_SummaryXmlContainsBadResult();
    public static EqtMessage get_GTA_UnexpectedSummaryXmlFormat();
    public static EqtMessage GTTIP_CannotFindTest(object param0);
    public static EqtMessage GTTIP_FoundMultipleTestsInSingleFile(object param0);
    public static EqtMessage get_IdCollisionDialog_Name();
    public static EqtMessage get_IdCollisionDialog_Option_Abort();
    public static EqtMessage get_IdCollisionDialog_Option_Ignore();
    public static EqtMessage get_IdCollisionDialog_Option_None();
    public static EqtMessage get_IdCollisionDialog_Option_Retry();
    public static EqtMessage get_TestIdCollisionDialog_Name();
    public static EqtMessage get_TestIdCollisionDialog_Option_Abort();
    public static EqtMessage get_TestIdCollisionDialog_Option_None();
    public static EqtMessage get_TestIdCollisionDialog_Option_Retry();
    public static EqtMessage ImportTestList_MergeWarning(object param0, object param1);
    public static EqtMessage get_ImportTestListDialog_Name();
    public static EqtMessage get_ImportTestListDialog_Option_Ignore();
    public static EqtMessage get_ImportTestListDialog_Option_Retry();
    public static EqtMessage get_ImportTestListDialog_Option_None();
    public static EqtMessage get_ImportTestListDialog_Option_Abort();
    public static EqtMessage get_ManualTestAbortedDialog_Name();
    public static EqtMessage get_ManualTestAbortedDialog_Option_None();
    public static EqtMessage get_ManualTestAbortedDialog_Option_OK();
    public static EqtMessage get_ManualTestStartedDialog_Name();
    public static EqtMessage get_ManualTestStartedDialog_Option_None();
    public static EqtMessage get_ManualTestStartedDialog_Option_OK();
    public static EqtMessage ManualTestStartedDialog_Message(object param0);
    public static EqtMessage ManualTest_AbortWarning(object param0);
    public static EqtMessage ManualTest_AdditionalCommentFormat(object param0);
    public static EqtMessage ManualTest_CannotFindTest(object param0);
    public static EqtMessage ManualTest_FoundMultipleTestsInSingleFile(object param0);
    public static EqtMessage get_ManualTest_FailedToLoadResult();
    public static EqtMessage get_ManualTest_FailedToLaunchWebBrowser();
    public static EqtMessage ManualTest_FailedToLaunchWord(object param0);
    public static EqtMessage get_ManualTest_FailedToOpenExecutionWindow();
    public static EqtMessage ManualTest_InvalidExtension(object param0);
    public static EqtMessage get_ManualTest_InvalidResult();
    public static EqtMessage ManualTest_InvalidTestFile(object param0);
    public static EqtMessage ManualTest_InvalidTestId(object param0);
    public static EqtMessage get_ManualTest_NotManualTestInstance();
    public static EqtMessage get_ManualTest_NotProcessedYet();
    public static EqtMessage ManualTest_PropertiesNotSavedInWord(object param0);
    public static EqtMessage get_ManualTest_TestRunAborted();
    public static EqtMessage get_ManualTest_TimeoutNotSupported();
    public static EqtMessage ManualTest_InvalidProperty(object param0);
    public static EqtMessage ManualTest_SavePropertyDialog_Description(object param0);
    public static EqtMessage get_ManualTest_SavePropertyDialog_Name();
    public static EqtMessage get_ManualTest_SavePropertyDialog_Option_OK();
    public static EqtMessage get_ManualTest_WordNotInstalled();
    public static EqtMessage get_ManualTest_WordNotInstalledDialog_Name();
    public static EqtMessage get_ManualTest_WordNotInstalledDialog_Description();
    public static EqtMessage get_ManualTest_WordNotInstalledDialog_Option_OK();
    public static EqtMessage get_Office_FailedToGetWordProperty();
    public static EqtMessage get_Office_FailedToSetWordProperty();
    public static EqtMessage Office_PropertiesChanged(object param0);
    public static EqtMessage get_Office_WordBusy();
    public static EqtMessage OrderedTest_CycleDetected(object param0, object param1);
    public static EqtMessage get_TestName_Seperator();
    public static EqtMessage get_OrderedTest_InvalidResultToMerge();
    public static EqtMessage get_PropertyGrid_Custom();
    public static EqtMessage Reconnect_ConnectToControllerFailed(object param0, object param1);
    public static EqtMessage Reconnect_ConnectToControllerFailed_WithRecommendedAction(object param0, object param1);
    public static EqtMessage Reconnect_ConnectToControllerFailed_InvalidLabCredentials(object param0);
    public static EqtMessage AgentIsIdle_ApplyingNewLabCredentials(object param0);
    public static EqtMessage get_Reconnect_InvalidTestRun();
    public static EqtMessage get_RemoveManualTestDialog_Name();
    public static EqtMessage get_RemoveManualTestDialog_Option_Yes();
    public static EqtMessage get_RemoveManualTestDialog_Option_No();
    public static EqtMessage get_RemoveRun_AccessDenied();
    public static EqtMessage get_RemoveRun_GeneralFailure();
    public static EqtMessage get_Result_MultipleResultsInOneFileNotSupported();
    public static EqtMessage Result_NoResultFound(object param0);
    public static EqtMessage get_WatsonMainPleaRegular();
    public static EqtMessage get_WatsonMainIntroBold();
    public static EqtMessage get_WatsonMainIntroRegular();
    public static EqtMessage get_WatsonMainPleaBold();
    public static EqtMessage WatsonEventDescription(object param0);
    public static EqtMessage get_WatsonReportBeingPrepared();
    public static EqtMessage get_WatsonReportException();
    public static EqtMessage WatsonReportInformation(object param0);
    public static EqtMessage get_WatsonReportReady();
    public static EqtMessage get_RigAdmin_NotAllTheAgentsAreReady();
    public static EqtMessage RigAdmin_AgentGetPropertiesCallFailed(object param0, object param1, object param2);
    public static EqtMessage RigAdmin_AgentAddCallFailed(object param0, object param1, object param2);
    public static EqtMessage get_RigAdmin_AgentAttrbiuteNameMustBeSpecified();
    public static EqtMessage get_RigAdmin_AgentNameContainsInvalidChars();
    public static EqtMessage get_RigAdmin_AgentNameMustBeSpecified();
    public static EqtMessage RigAdmin_AgentOfflineCallFailed(object param0, object param1, object param2);
    public static EqtMessage RigAdmin_AgentRemoveCallFailed(object param0, object param1, object param2);
    public static EqtMessage RigAdmin_AgentRestartCallFailed(object param0, object param1, object param2);
    public static EqtMessage RigAdmin_AgentSetPropertiesCallFailed(object param0, object param1, object param2);
    public static EqtMessage get_RigAdmin_AgentStateNotResponding();
    public static EqtMessage get_RigAdmin_AgentStateOffline();
    public static EqtMessage get_RigAdmin_AgentStateReady();
    public static EqtMessage get_RigAdmin_AgentStateRunningTest();
    public static EqtMessage get_RigAdmin_AgentStateUnknown();
    public static EqtMessage RigAdmin_AgentStatusCallFailed(object param0, object param1);
    public static EqtMessage RigAdmin_AttributeAlreadyExistsOfferReplace(object param0, object param1, object param2);
    public static EqtMessage get_RigAdmin_CannotDeleteTempFileWhileLocalRunInProgress();
    public static EqtMessage get_RigAdmin_RestartRigWhileTestsAreRunning();
    public static EqtMessage RigAdmin_ConfirmRemoveAgent(object param0);
    public static EqtMessage RigAdmin_ConfirmRemoveAgentWithRuningTests(object param0);
    public static EqtMessage RigAdmin_ConfirmRestartAgent(object param0);
    public static EqtMessage RigAdmin_DeleteTemporaryFilesCallFailed(object param0, object param1);
    public static EqtMessage get_AgentIPConfig_EndRangeValueLessThanStartRangeValue();
    public static EqtMessage RigAdmin_GetControllerHostNotFound(object param0);
    public static EqtMessage RigAdmin_GetControllerObjectFailed(object param0, object param1);
    public static EqtMessage IPHelper_IPv4_IPSegmentCountInvalidBaseAddress(object param0, object param1);
    public static EqtMessage IPHelper_IPv4_IPSegmentCountInvalidSubnetMask(object param0, object param1);
    public static EqtMessage IPHelper_IPv4_IPSegmentCountInvalidAddress(object param0, object param1);
    public static EqtMessage IPHelper_IPv4_IPAddressSegmentInvalid(object param0);
    public static EqtMessage IPHelper_IPv4_InvalidBaseAddress(object param0);
    public static EqtMessage IPHelper_IPv4_InvalidSubnetMask(object param0);
    public static EqtMessage IPHelper_IPv4_InvalidAddress(object param0);
    public static EqtMessage IPHelper_IPv6_InvalidBaseAddress(object param0);
    public static EqtMessage IPHelper_IPv6_InvalidSubnetMask(object param0);
    public static EqtMessage IPHelper_IPv6_InvalidAddress(object param0);
    public static EqtMessage AgentIPConfig_BaseAddressAndSubnetMaskAreOfDifferentAddressFamilies(object param0, object param1);
    public static EqtMessage get_RigAdmin_AgentPropertiesDialog_FieldName_Weighting();
    public static EqtMessage get_RigAdmin_AgentPropertiesDialog_FieldName_BaseIP();
    public static EqtMessage get_RigAdmin_AgentPropertiesDialog_FieldName_SubnetMask();
    public static EqtMessage get_RigAdmin_AgentPropertiesDialog_FieldName_StartIPRange();
    public static EqtMessage get_RigAdmin_AgentPropertiesDialog_FieldName_EndIPRange();
    public static EqtMessage RigAdmin_LastModified(object param0, object param1);
    public static EqtMessage get_RigAdmin_LocalInProcessController();
    public static EqtMessage get_RigAdmin_MessageBoxCaption();
    public static EqtMessage get_RigAdmin_Offline();
    public static EqtMessage get_RigAdmin_Online();
    public static EqtMessage get_RigAdmin_RemoveAgentCaption();
    public static EqtMessage RigAdmin_InvalidConnectionString(object param0, object param1);
    public static EqtMessage RigAdmin_RestartRigCallFailed(object param0, object param1);
    public static EqtMessage RigAdmin_SetControllerConnectStringFailed(object param0, object param1);
    public static EqtMessage get_RigAdmin_ValidationError();
    public static EqtMessage get_RunConfig_DefaultName();
    public static EqtMessage RunConfig_DefaultStorage(object param0);
    public static EqtMessage get_RunConfig_Invalid();
    public static EqtMessage get_RunConfig_DebuggingRemoteAndCodeCoverageNotSupportedDialog_Name();
    public static EqtMessage get_RunConfig_DebuggingRemoteAndCodeCoverageNotSupported();
    public static EqtMessage RunConfig_DeploymentItemsAlreadyContainDir(object param0);
    public static EqtMessage RunConfig_DeploymentItemsAlreadyContainFile(object param0);
    public static EqtMessage get_RunConfig_DeploymentSolutionRootPrefix();
    public static EqtMessage get_RunConfig_EmptyCollectionSetNameError();
    public static EqtMessage get_RunConfig_EmptyControllerNameError();
    public static EqtMessage get_RunConfig_EmptyDeploymentDirectoryError();
    public static EqtMessage RunConfig_BadDeploymentDirectoryError(object param0);
    public static EqtMessage get_RunConfig_RelativeDeploymentDirectoryError();
    public static EqtMessage get_DeploymentItemOutsideSolutionRootDialog_Name();
    public static EqtMessage get_RunConfig_DeploymentItemOutsideSolutionRootDialog_Title();
    public static EqtMessage RunConfig_DeploymentItemOutsideSolutionRootDialog_Text(object param0);
    public static EqtMessage get_RunConfig_EmptyRunConfigNameError();
    public static EqtMessage get_RunConfig_EmptyTestRunBaseNameError();
    public static EqtMessage get_RunConfig_FailedToCreateRegistry();
    public static EqtMessage RunConfig_FailedToSave(object param0, object param1);
    public static EqtMessage RunConfig_InvalidFile(object param0, object param1);
    public static EqtMessage RunConfig_MissingFile(object param0);
    public static EqtMessage get_RunConfig_NotRunConfigEditor();
    public static EqtMessage get_RunConfig_Reload();
    public static EqtMessage RunConfig_SaveWarning(object param0);
    public static EqtMessage RunConfig_ErrorInitHostTab(object param0);
    public static EqtMessage RunConfig_ErrorInitHostTabCurrentHostData(object param0);
    public static EqtMessage get_RunConfig_RemoteRunDeployment();
    public static EqtMessage get_RunConfig_ErrorDisableDeployment();
    public static EqtMessage RunConfig_ErrorInDisplayingControl_Title(object param0);
    public static EqtMessage RunConfig_ErrorInDisplayingControl_Body(object param0);
    public static EqtMessage RunCoverageTable_Read_Unexpected(object param0, object param1);
    public static EqtMessage RunCoverageTable_Write_Unexpected(object param0, object param1);
    public static EqtMessage RunTable_Read_Unexpected(object param0);
    public static EqtMessage RunUpdateTable_Read_Unexpected(object param0);
    public static EqtMessage RunUpdateTable_Write_Unexpected(object param0);
    public static EqtMessage get_SI_CannotChangeExtension();
    public static EqtMessage get_SI_SolutionNotOpen();
    public static EqtMessage SI_RenameToMetadata(object param0, object param1, object param2);
    public static EqtMessage get_StartTestRunWithManualTests();
    public static EqtMessage get_StartTestRunWithManualTestsDialog_Name();
    public static EqtMessage get_TCM_AbortEmptyTestRun();
    public static EqtMessage get_TCM_AbortRemoteTestRunWithManualTest();
    public static EqtMessage get_TCM_AddorImportMetadataFileMessageBoxCaption();
    public static EqtMessage TCM_AddorImportMetadataFileMessageBoxText(object param0, object param1);
    public static EqtMessage get_TCM_AgentRestrictions_DisabledPerTest();
    public static EqtMessage get_TCM_AgentRestrictions_RunLevel();
    public static EqtMessage TCM_AgentRestrictions_SummaryNameValue(object param0, object param1);
    public static EqtMessage TCM_AgentRestrictionsDuplicatedName(object param0);
    public static EqtMessage get_TCM_AgentRestrictionsNullName();
    public static EqtMessage get_TCM_AgentRestrictionsSummaryCaption();
    public static EqtMessage get_TCM_BuildError();
    public static EqtMessage get_TCM_CannotOpenTestManagerInNonTestSKU();
    public static EqtMessage TCM_CannotStartEmptyProjectUnderDebugger(object param0);
    public static EqtMessage get_TCM_CreateRunError();
    public static EqtMessage TCM_CreateRunGetReferencesToDeployError(object param0);
    public static EqtMessage TCM_FailedToAddFileToSolution(object param0);
    public static EqtMessage get_TCM_FailedToCreateTestManagerToolWindow();
    public static EqtMessage get_TCM_FailedToCreateResultToolWindow();
    public static EqtMessage get_TCM_FailedToCreateRunDetailsToolWindow();
    public static EqtMessage get_TCM_FailedToShowRunDetailsToolWindow();
    public static EqtMessage get_TCM_FailedToCreateTestViewToolWindow();
    public static EqtMessage get_TCM_FailedToCreateTestRunToolWindow();
    public static EqtMessage TCM_FailedToCreateWorkitem(object param0);
    public static EqtMessage get_TCM_FailedToGetDebugInfoForProject();
    public static EqtMessage TCM_ErrorReadingStorage(object param0);
    public static EqtMessage TCM_FailToInstantiateTypeDetailError(object param0);
    public static EqtMessage get_TCM_FailedToStartProjectUnderDebugger();
    public static EqtMessage TCM_CantRunTestToolTip(object param0);
    public static EqtMessage TCM_BrokenLinkToolTip(object param0);
    public static EqtMessage get_TCM_MetadataFileAlreadyExists();
    public static EqtMessage TCM_MetadataFileLoadCancel(object param0);
    public static EqtMessage get_TCM_MSDEV();
    public static EqtMessage get_TCM_NoTestsRunSelectSingleRun();
    public static EqtMessage get_TCM_NoTestsToRun();
    public static EqtMessage TCM_OpenMetadataFile_CloseSolutionWarning(object param0, object param1);
    public static EqtMessage get_TCM_OpenMetadataFile_InProjectWarning();
    public static EqtMessage get_TCM_MetadataReload();
    public static EqtMessage get_TCM_RemoveManualTestsFromRemoteRun();
    public static EqtMessage get_TCM_RemoveManualTestsFromRemoteRun_Title();
    public static EqtMessage get_TCM_RemoveManualTestsFromRemoteRun_AlwaysPrompt();
    public static EqtMessage get_TCM_RemoveManualTestsFromRemoteRun_AlwaysRemove();
    public static EqtMessage TCM_RunConfig_CodeCoverageUserControl_ManagerNotFound(object param0);
    public static EqtMessage get_TCM_SelectedTestLists();
    public static EqtMessage get_TCM_VSCloseLocalRunInProgressWillBeAborted();
    public static EqtMessage get_TCM_SolutionCloseLocalRunInProgressWillBeAborted();
    public static EqtMessage get_TCM_CategoryTreeComboBox_SelectedValue_ArgumentException();
    public static EqtMessage get_TCM_MetadataFileFactory_CreateEditorInstance_nullDocumentPath();
    public static EqtMessage get_TCM_TmiDataManager_CannotFilterByColumnType();
    public static EqtMessage TCM_TmiLoadFailure(object param0, object param1);
    public static EqtMessage TCM_TmiSaveFailure(object param0, object param1);
    public static EqtMessage TCM_TmiRemoveFailure(object param0, object param1);
    public static EqtMessage TCM_TmiUpdateFailure(object param0, object param1);
    public static EqtMessage TCM_ToolWindowDefaultAccessibilityText(object param0, object param1);
    public static EqtMessage get_TCM_ToolWindowCheckboxAccessibilityText();
    public static EqtMessage get_TCM_ToolWindowIconAccessibilityTextBrokenLink();
    public static EqtMessage get_TCM_ToolWindowIconAccessibilityNonRunnable();
    public static EqtMessage TCM_ToolWindowIconAccessibilityText(object param0);
    public static EqtMessage get_TCM_UnknownResultTestType();
    public static EqtMessage TE_DuplicateTestListName(object param0, object param1);
    public static EqtMessage get_TE_IllegalTestListCharacters();
    public static EqtMessage get_TE_IllegalTestListNameHeader();
    public static EqtMessage TE_IllegalTestListNameMessage(object param0);
    public static EqtMessage TE_InvalidCheckBoxState(object param0);
    public static EqtMessage TE_InvalidType(object param0, object param1);
    public static EqtMessage TE_UnexpectedRunId(object param0, object param1);
    public static EqtMessage TestAggregation_AggregationString(object param0, object param1, object param2, object param3);
    public static EqtMessage get_TestProject_CorruptedTemplateFile();
    public static EqtMessage TestProject_CreationFailed(object param0);
    public static EqtMessage get_TestProject_DuplicateProjectName();
    public static EqtMessage get_TestProject_IllegalProjectName();
    public static EqtMessage get_TestProject_IllegalSolutionName();
    public static EqtMessage get_TestProject_InvalidFileName();
    public static EqtMessage get_TestProject_LanguageNotInstalled();
    public static EqtMessage get_TestProject_MissingTemplateFile();
    public static EqtMessage TestProject_NonExistingTemplateId(object param0, object param1);
    public static EqtMessage TestProject_NotTemplateFileExtension(object param0);
    public static EqtMessage TestProject_NotATestProject(object param0);
    public static EqtMessage TestProject_OverwriteRunConfigFile(object param0);
    public static EqtMessage TestProject_UnexpectedLanguage(object param0);
    public static EqtMessage TestProject_UnknownProjectExtension(object param0);
    public static EqtMessage get_TestProject_WrongFolder();
    public static EqtMessage TestService_ServiceRestart_Unexpected(object param0);
    public static EqtMessage get_TestSuite_AutoSuiteTestTypeName();
    public static EqtMessage TestSuite_ElementIsNotAutoSuite(object param0);
    public static EqtMessage get_TestSuite_InitializeNotCalled();
    public static EqtMessage get_TestSuite_InnerTests();
    public static EqtMessage get_TestSuite_ManualSuiteTestTypeName();
    public static EqtMessage TestSuite_MissingTest(object param0);
    public static EqtMessage TestSuite_MissingTestItem(object param0);
    public static EqtMessage get_TestSuite_MissingLinkType();
    public static EqtMessage TestSuite_NoSuitesWereLoadedFromFile(object param0);
    public static EqtMessage TestSuite_SuiteFileContainsNonSuites(object param0);
    public static EqtMessage TestSuite_FailedCount(object param0, object param1);
    public static EqtMessage get_TFS_InvalidBisRegistration();
    public static EqtMessage TMI_InnerTestCannotBeAggregated(object param0, object param1);
    public static EqtMessage get_TMI_AddCategoryIdToCategoryDetailedEventArgsNotSupported();
    public static EqtMessage get_TMI_AddOrUpdateInvalidCategory();
    public static EqtMessage get_TMI_AddOrUpdateInvalidRunConfiguration();
    public static EqtMessage TMI_AggregationCycle(object param0);
    public static EqtMessage TMI_AggregationNullChildren(object param0);
    public static EqtMessage TMI_BadConvertToCrossTableDataType(object param0);
    public static EqtMessage TMI_BadDataInResultFile(object param0);
    public static EqtMessage TMI_BadNumberOfRunsInResultFile(object param0);
    public static EqtMessage TMI_CannotAddUnexistingDirectoryToSearchPath(object param0);
    public static EqtMessage TMI_CannotLoadEmptyStorageForLink(object param0, object param1);
    public static EqtMessage TMI_CannotRemoveRunInProgress(object param0);
    public static EqtMessage get_TMI_CannotStartMoreThanOneLocalRun();
    public static EqtMessage TMI_CantCallGetObjectId(object param0);
    public static EqtMessage TMI_CantExtractId(object param0);
    public static EqtMessage TMI_CantMapElementToTable(object param0);
    public static EqtMessage get_TMI_CantReadElementTag();
    public static EqtMessage get_TMI_CantReadKeyTag();
    public static EqtMessage get_TMI_CantReadKeyVal();
    public static EqtMessage get_TMI_CantReadValueTag();
    public static EqtMessage get_TMI_CantReadValueVal();
    public static EqtMessage get_TMI_CantUseTestsAndCategoriesStorageTypeHere();
    public static EqtMessage TMI_TestListCycle(object param0, object param1);
    public static EqtMessage TMI_TestListIdNotFound(object param0);
    public static EqtMessage get_TMI_CleanCommunicationsForLocalRunFailure();
    public static EqtMessage get_TMI_ControllerDied();
    public static EqtMessage TMI_CreateTestNotSupportedByTip(object param0);
    public static EqtMessage TMI_DanglingParentTestListId(object param0, object param1, object param2);
    public static EqtMessage TMI_DataAndObjectTypeMismatch(object param0, object param1, object param2);
    public static EqtMessage get_TMI_DebuggerCallbackNotRegistered();
    public static EqtMessage TMI_DeploymentCannotOpenAspNetProject(object param0);
    public static EqtMessage TMI_DeploymentConflictCannotOverwrite(object param0, object param1, object param2, object param3);
    public static EqtMessage TMI_MissingDeploymentDependency(object param0, object param1);
    public static EqtMessage TMI_DeploymentErrorBadCodeCoverageItem(object param0);
    public static EqtMessage TMI_DeploymentErrorBadDeploymentItem(object param0, object param1);
    public static EqtMessage TMI_DeploymentErrorBadDeploymentItemOutputDirectoryOutsideDeploymentRoot(object param0, object param1);
    public static EqtMessage TMI_DeploymentErrorBadCodeCoverageItemOutputDirectoryOutsideDeploymentRoot(object param0, object param1);
    public static EqtMessage TMI_DeploymentErrorFailedToAccessDirectory(object param0, object param1, object param2);
    public static EqtMessage TMI_DeploymentErrorFailedToAccessDeploymentItemOutputDirectory(object param0, object param1, object param2, object param3);
    public static EqtMessage TMI_DeploymentErrorFailedToAccessCodeCoverageItemOutputDirectory(object param0, object param1, object param2, object param3);
    public static EqtMessage TMI_DeploymentErrorFailedToAccessFile(object param0, object param1, object param2);
    public static EqtMessage TMI_DeploymentErrorFailedToAddToFileCopyService(object param0, object param1, object param2);
    public static EqtMessage TMI_DeploymentErrorFailedToRemoveFromFileCopyService(object param0, object param1, object param2);
    public static EqtMessage TMI_DeploymentErrorFailedToCopyWithOverwrite(object param0, object param1, object param2, object param3);
    public static EqtMessage TMI_DeploymentErrorFailedToCreateDirectory(object param0, object param1, object param2);
    public static EqtMessage TMI_DeploymentErrorFailedToDeployDependencies(object param0, object param1);
    public static EqtMessage TMI_DeploymentErrorFailedToGetFileForDeploymentItem(object param0, object param1, object param2);
    public static EqtMessage TMI_DeploymentErrorGettingSatellite(object param0, object param1, object param2);
    public static EqtMessage TMI_DeploymentErrorFailedToReadFile(object param0, object param1, object param2);
    public static EqtMessage get_TMI_DeploymentDisableDeploymentOverridenDueToRemoteRun();
    public static EqtMessage get_TMI_DeploymentDisableDeploymentOverridenDueToCodeCoverageEnabled();
    public static EqtMessage get_TMI_DeploymentDisableDeploymentOverridenDueToUsingSmartDeviceHost();
    public static EqtMessage TMI_DeploymentErrorDeploymentFromUntrustedDenied(object param0);
    public static EqtMessage TMI_DeploymentErrorBadPath(object param0, object param1, object param2);
    public static EqtMessage get_TMI_DeploymentUnexpectedError();
    public static EqtMessage TMI_DeploymentRequiredFileNotFound(object param0);
    public static EqtMessage TMI_DoesNotKnowWhatToDoWithElement(object param0, object param1);
    public static EqtMessage TMI_DuplicateTestListId(object param0, object param1, object param2);
    public static EqtMessage TMI_DuplicateTestListName(object param0, object param1);
    public static EqtMessage TMI_DuplicateRunConfigId(object param0, object param1, object param2, object param3, object param4);
    public static EqtMessage TMI_DuplicateRunId(object param0, object param1);
    public static EqtMessage TMI_DuplicateTestId(object param0, object param1, object param2, object param3, object param4);
    public static EqtMessage TMI_DuplicateTestResultId(object param0, object param1, object param2);
    public static EqtMessage TMI_EditFailed(object param0, object param1);
    public static EqtMessage TMI_CategoryEditFailed(object param0);
    public static EqtMessage TMI_EmbeddedControllerProxyCannotGetControllerObject(object param0);
    public static EqtMessage TMI_ErrorInRestoringInPlaceInstrumented(object param0);
    public static EqtMessage TMI_ErrorTryingSaveResultFile(object param0);
    public static EqtMessage TMI_ExceptionDuringReverseDeployment(object param0, object param1);
    public static EqtMessage get_TMI_ExpectedTypeAttributeNotFound();
    public static EqtMessage TMI_ExtensionUnknownToTMI(object param0);
    public static EqtMessage TMI_FailedToConnectToController(object param0, object param1, object param2);
    public static EqtMessage TMI_FailedToCreateInstanceOf(object param0);
    public static EqtMessage TMI_XmlFailedToInstantiateType(object param0, object param1);
    public static EqtMessage TMI_FailedToLoadTestsForLink(object param0, object param1);
    public static EqtMessage TMI_FailedToPauseTestRun(object param0, object param1);
    public static EqtMessage TMI_FailedToQueueTestRun(object param0, object param1);
    public static EqtMessage TMI_FailedToResumeTestRun(object param0, object param1);
    public static EqtMessage TMI_FailedToStopTestRun(object param0, object param1);
    public static EqtMessage get_TMI_IdNotSet();
    public static EqtMessage TMI_InitComplete(object param0, object param1);
    public static EqtMessage TMI_InnerTestNonRunnable(object param0);
    public static EqtMessage TMI_InputFileNotFound(object param0);
    public static EqtMessage TMI_InstrumentationFailed(object param0, object param1);
    public static EqtMessage get_TMI_InvalidArrayLength();
    public static EqtMessage TMI_InvalidControllerUri(object param0);
    public static EqtMessage TMI_InvalidFileFormat(object param0);
    public static EqtMessage TMI_InvalidObject(object param0, object param1);
    public static EqtMessage TMI_InvalidResultId(object param0);
    public static EqtMessage TMI_LoadedInvalidResult(object param0, object param1);
    public static EqtMessage get_TMI_LocalProcessDied();
    public static EqtMessage get_TMI_MissingDeploymentRootInRunConfig();
    public static EqtMessage get_TMI_MissingRelativePathRootInRunConfig();
    public static EqtMessage TMI_NoRunConfigsAtLocation(object param0);
    public static EqtMessage TMI_NoSuchColumn(object param0, object param1);
    public static EqtMessage TMI_NoSuchPropertyForObjectType(object param0, object param1);
    public static EqtMessage TMI_NotAllTestsHaveSameType(object param0, object param1);
    public static EqtMessage TMI_NoTestsAtLocation(object param0);
    public static EqtMessage TMI_NoTestsLoadedForLink(object param0);
    public static EqtMessage TMI_NoTestsLoadedFromLocation(object param0);
    public static EqtMessage TMI_NoTipForTestType(object param0, object param1);
    public static EqtMessage get_TMI_RegisterForRunEventsNotSupportedForEmbeddedRun();
    public static EqtMessage get_TMI_RegisterForRunEventsNotSupportedForLocalRun();
    public static EqtMessage TMI_Registration_BadExtension(object param0, object param1);
    public static EqtMessage TMI_Registration_BadFormat(object param0, object param1, object param2);
    public static EqtMessage TMI_Registration_CantLoadTip(object param0, object param1, object param2);
    public static EqtMessage TMI_Registration_DuplicateExtension(object param0, object param1, object param2);
    public static EqtMessage TMI_Registration_IconIdNotFound(object param0, object param1, object param2);
    public static EqtMessage TMI_Registration_InvalidGuid(object param0);
    public static EqtMessage TMI_Registration_InvalidRunConfigurationEditorType(object param0, object param1, object param2);
    public static EqtMessage TMI_Registration_LiteralName(object param0, object param1, object param2);
    public static EqtMessage TMI_Registration_NameIdNotFound(object param0, object param1, object param2);
    public static EqtMessage TMI_Registration_NameIdNotFound_LocationUnknown(object param0, object param1);
    public static EqtMessage TMI_Registration_NoEditor(object param0, object param1);
    public static EqtMessage TMI_Registration_NoIconId(object param0, object param1);
    public static EqtMessage TMI_Registration_NoNameId(object param0, object param1);
    public static EqtMessage TMI_Registration_NoSatelliteEntry(object param0, object param1);
    public static EqtMessage TMI_Registration_NoService(object param0, object param1);
    public static EqtMessage TMI_Registration_NoTestTypes(object param0, object param1);
    public static EqtMessage TMI_Registration_NoTestTypesFound(object param0);
    public static EqtMessage TMI_Registration_NoTip(object param0, object param1);
    public static EqtMessage TMI_Registration_InvalidIconIdValueType(object param0);
    public static EqtMessage TMI_Registration_NoExtensionsSubkeyFound(object param0, object param1);
    public static EqtMessage TMI_Registration_NoSupportedHosts(object param0, object param1, object param2);
    public static EqtMessage TMI_ReloadingTestFromDifferentFile(object param0, object param1);
    public static EqtMessage TMI_RemovingTestFromModifiedFile(object param0, object param1, object param2);
    public static EqtMessage TMI_ReplacingModifiedTest(object param0, object param1);
    public static EqtMessage TMI_ResultIdNotFound(object param0);
    public static EqtMessage get_TMI_ResultsMustBelongToTheSameRun();
    public static EqtMessage TMI_RunIdNotFound(object param0);
    public static EqtMessage TMI_RunConfigIdNotFound(object param0);
    public static EqtMessage TMI_SameTestIdInFile(object param0);
    public static EqtMessage TMI_SaveFailed(object param0);
    public static EqtMessage TMI_SaveTestNotSupportedByTip(object param0);
    public static EqtMessage get_TMI_SetupCommunicationsForLocalRunFailure();
    public static EqtMessage get_TMI_StorageNotSet();
    public static EqtMessage TMI_TestHasUnregisteredType(object param0, object param1);
    public static EqtMessage TMI_TestIdNotFound(object param0);
    public static EqtMessage TMI_AddInvalidTest(object param0);
    public static EqtMessage TMI_TestLinkNotFound(object param0, object param1);
    public static EqtMessage get_TMI_TestNotFoundAtOriginalLocation();
    public static EqtMessage TMI_TestStorageNotAccessible(object param0);
    public static EqtMessage TMI_TestTypeInfoCollectionTestTypeGuid(object param0);
    public static EqtMessage TMI_TestTypeInfoCollectionTestTypeNameAndGuid(object param0, object param1);
    public static EqtMessage get_TMI_TestTypeInfoCollectionTestTypeUnknown();
    public static EqtMessage TMI_TestTypeUnknownToTMI(object param0);
    public static EqtMessage TMI_TIP_Throws_During_Reset(object param0, object param1);
    public static EqtMessage TMI_TipLoadedNonITestElementElement(object param0);
    public static EqtMessage TMI_TipLoadedNullElement(object param0);
    public static EqtMessage TMI_TipLoadReturnedNull(object param0);
    public static EqtMessage get_TMI_TypeLoadErrorCaption();
    public static EqtMessage TMI_TypeNotSupported(object param0);
    public static EqtMessage TMI_UnknownGroupName(object param0);
    public static EqtMessage TMI_WrongObjectInMetadataFile(object param0, object param1, object param2);
    public static EqtMessage get_TMI_XMLCantReadElementName();
    public static EqtMessage get_TMI_XMLCantReadElementValue();
    public static EqtMessage TMI_XMLError(object param0, object param1, object param2, object param3);
    public static EqtMessage get_TMI_XMLExpectingTypeFoundNothing();
    public static EqtMessage TMI_XMLUnexpectedElementName(object param0);
    public static EqtMessage TMI_XMLUnexpectedNodeType(object param0);
    public static EqtMessage TMI_XMLUnexpectedNodeTypeExpecting(object param0, object param1);
    public static EqtMessage TMI_XMLRecoverFromPersistenceFailure(object param0, object param1, object param2);
    public static EqtMessage get_TMI_Disposed();
    public static EqtMessage get_TMI_CannotGetHostProcessLocation();
    public static EqtMessage TMI_CannotGetHostProcessNotFound(object param0);
    public static EqtMessage get_TMI_FilterOperationNotAllowedForMethodSignature();
    public static EqtMessage get_TMI_KeepBothInIdVetoingHandler();
    public static EqtMessage get_TMI_PublishServerUnableDetectCurrentUser();
    public static EqtMessage get_TMI_PublishServerNoFilesCopied();
    public static EqtMessage get_TMI_PartialTestRun();
    public static EqtMessage TMI_ConnectToRemoteRunBadRootDirectory(object param0);
    public static EqtMessage get_TMI_TestListIsReadOnly();
    public static EqtMessage get_TMI_TestListCannotModifyTests();
    public static EqtMessage get_TMI_TestListCannotModifyCategories();
    public static EqtMessage get_TMI_TestListIsInvalid();
    public static EqtMessage get_TMI_TestListIsNotChild();
    public static EqtMessage TMI_UpdateTestRunAndTestCaseResultFiles_CouldNotGetResultFiles(object param0);
    public static EqtMessage TMI_VisiblePropertyWithDuplicateGuid(object param0, object param1, object param2, object param3, object param4);
    public static EqtMessage TMI_RunNotStartedUnderDebugger(object param0);
    public static EqtMessage ToolsOptions_FailedToGetOption(object param0);
    public static EqtMessage TUIP_CantEditProperty(object param0, object param1);
    public static EqtMessage TUIP_DetailedTestResultsCaption(object param0);
    public static EqtMessage TUIP_FailedToDeleteTest(object param0);
    public static EqtMessage get_TUIP_GenericTestInvalidResult();
    public static EqtMessage get_TUIP_MultipleTestsNotSupported();
    public static EqtMessage get_TUIP_OrderedTestInvalidResult();
    public static EqtMessage TUIP_InnerTestsSummary(object param0, object param1);
    public static EqtMessage TUIP_ReloadFile(object param0, object param1);
    public static EqtMessage get_TUIP_ResultsCommonResults();
    public static EqtMessage get_TUIP_ResultsDebugTrace();
    public static EqtMessage get_TUIP_ResultsCollectorData();
    public static EqtMessage get_TUIP_ResultsDataCollectorMessages();
    public static EqtMessage get_TUIP_ResultsErrorMessage();
    public static EqtMessage get_TUIP_ResultsErrorStackTrace();
    public static EqtMessage get_TUIP_ResultsForIncompleteTest();
    public static EqtMessage get_TUIP_ResultsForNotExecutedTest();
    public static EqtMessage get_TUIP_ResultsStderror();
    public static EqtMessage get_TUIP_ResultsStdout();
    public static EqtMessage get_TUIP_ResultsTextMessages();
    public static EqtMessage get_TUIP_UnitTestInvalidResult();
    public static EqtMessage get_TUIP_UnitTestOpenError();
    public static EqtMessage get_TUIP_UnitTestPermissionTitle();
    public static EqtMessage TUIP_UnitTestQueryPermissionUpdate(object param0, object param1);
    public static EqtMessage get_TUIP_UnitTestDenyAceDetected();
    public static EqtMessage TUIP_UnitTestQueryPermissionError(object param0);
    public static EqtMessage TUIP_WrongTestType(object param0, object param1);
    public static EqtMessage TUIP_TestLoadFailure(object param0, object param1);
    public static EqtMessage TUIP_InvalidStorage(object param0);
    public static EqtMessage get_TUIP_NoTestsInStorage();
    public static EqtMessage get_TUIP_TestRunNameNotAvailable();
    public static EqtMessage TUIP_ProjectNameWithSeparator(object param0, object param1);
    public static EqtMessage get_TUIP_RetargetingIsUnsupported();
    public static EqtMessage UTA_AssemblyCleanupMethodWasUnsuccesful(object param0, object param1, object param2, object param3);
    public static EqtMessage UTA_TestContextNotWriteable(object param0);
    public static EqtMessage UTA_AssemblyInitMethodThrows(object param0, object param1, object param2, object param3);
    public static EqtMessage UTA_AssemblyInitMethodWasUnsucessful(object param0, object param1);
    public static EqtMessage UTA_BadImage(object param0);
    public static EqtMessage UTA_CannotAssignParameterType(object param0, object param1, object param2);
    public static EqtMessage UTA_ClassCleanupMethodWasUnsuccesful(object param0, object param1, object param2, object param3);
    public static EqtMessage UTA_ClassInitMethodThrows(object param0, object param1, object param2, object param3);
    public static EqtMessage UTA_ClassInitMethodWasUnsucessful(object param0, object param1);
    public static EqtMessage UTA_CleanupMethodThrows(object param0, object param1, object param2, object param3);
    public static EqtMessage get_UTA_CleanupStackTrace();
    public static EqtMessage UTA_AssemblyInitMethodThrowsGeneralError(object param0, object param1);
    public static EqtMessage UTA_AssemblyCleanupMethodWasUnsuccesfulGeneralError(object param0, object param1);
    public static EqtMessage UTA_ClassInitMethodThrowsGeneralError(object param0, object param1);
    public static EqtMessage UTA_ClassCleanupMethodWasUnsuccesfulGeneralError(object param0, object param1, object param2);
    public static EqtMessage UTA_InitMethodThrowsGeneralError(object param0, object param1);
    public static EqtMessage UTA_CleanupMethodThrowsGeneralError(object param0, object param1);
    public static EqtMessage get_UTA_EmptyDataTableName();
    public static EqtMessage UTA_FailedExecuteDataDrivenTest(object param0);
    public static EqtMessage get_UTA_EndOfInnerExceptionTrace();
    public static EqtMessage UTA_ErrorAbstractTestClass(object param0);
    public static EqtMessage UTA_ErrorAgentPropertyAlreadyDefined(object param0, object param1, object param2, object param3);
    public static EqtMessage UTA_ErrorAgentPropertyNullOrEmpty(object param0, object param1);
    public static EqtMessage UTA_ErrorBothTestAndCleanup(object param0, object param1);
    public static EqtMessage UTA_ErrorBothTestAndInit(object param0, object param1);
    public static EqtMessage UTA_ErrorBothTestCleanupInit(object param0, object param1);
    public static EqtMessage UTA_ErrorCleanupOutOfTestClass(object param0, object param1);
    public static EqtMessage UTA_ErrorDataSourceMethodOutOfTestClass(object param0, object param1);
    public static EqtMessage UTA_ErrorDataSourceNonTestMethod(object param0, object param1);
    public static EqtMessage UTA_ErrorDeploymentItemMethodOutOfTestClass(object param0, object param1);
    public static EqtMessage UTA_ErrorDeploymentItemNonTestMethod(object param0, object param1);
    public static EqtMessage UTA_ErrorDeploymentItemNullOrEmptyPathOnMethod(object param0, object param1);
    public static EqtMessage UTA_ErrorDeploymentItemNullOutputDirOnMethod(object param0, object param1);
    public static EqtMessage UTA_ErrorDeploymentItemOnMethodGeneral(object param0, object param1, object param2);
    public static EqtMessage UTA_ErrorExceptionNonTestMethod(object param0, object param1);
    public static EqtMessage UTA_ErrorGenericTestClass(object param0);
    public static EqtMessage UTA_ErrorGenericTestMethod(object param0, object param1);
    public static EqtMessage UTA_ErrorIncorrectAssemblyCleanupSignature(object param0, object param1);
    public static EqtMessage UTA_ErrorIncorrectAssemblyInitSignature(object param0, object param1);
    public static EqtMessage UTA_ErrorIncorrectClassCleanupSignature(object param0, object param1);
    public static EqtMessage UTA_ErrorIncorrectClassInitSignature(object param0, object param1);
    public static EqtMessage UTA_ErrorIncorrectCleanupSignature(object param0, object param1);
    public static EqtMessage UTA_ErrorIncorrectInitSignature(object param0, object param1);
    public static EqtMessage UTA_ErrorIncorrectTestMethodSignature(object param0, object param1);
    public static EqtMessage UTA_ErrorInitOutOfTestClass(object param0, object param1);
    public static EqtMessage UTA_ErrorInvalidAgentProperty(object param0, object param1);
    public static EqtMessage UTA_ErrorInvalidDataSource(object param0, object param1);
    public static EqtMessage UTA_ErrorInvalidHostType(object param0, object param1);
    public static EqtMessage UTA_ErrorInValidTestContxetSignature(object param0);
    public static EqtMessage UTA_ErrorInvalidTestProperty(object param0, object param1);
    public static EqtMessage UTA_ErrorMethodOutOfTestClass(object param0, object param1);
    public static EqtMessage UTA_ErrorMultiAssemblyClean(object param0);
    public static EqtMessage UTA_ErrorMultiAssemblyInit(object param0);
    public static EqtMessage UTA_ErrorMultiClassClean(object param0);
    public static EqtMessage UTA_ErrorMultiClassInit(object param0);
    public static EqtMessage UTA_ErrorMultiClean(object param0);
    public static EqtMessage UTA_ErrorMultiInit(object param0);
    public static EqtMessage UTA_ErrorNonPublicTestClass(object param0);
    public static EqtMessage UTA_ErrorNotATestClass(object param0);
    public static EqtMessage UTA_ErrorCannotReflectTestClass(object param0, object param1);
    public static EqtMessage UTA_ErrorWhidbeyUnitTestFrameworkReference(object param0);
    public static EqtMessage UTA_ErrorCannotEnumerateTestClass(object param0);
    public static EqtMessage UTA_ErrorOutOfTestClass(object param0, object param1, object param2);
    public static EqtMessage UTA_ErrorPredefinedTestProperty(object param0, object param1, object param2);
    public static EqtMessage UTA_ErrorTestPropertyAlreadyDefined(object param0, object param1, object param2, object param3);
    public static EqtMessage UTA_ErrorTestPropertyNullOrEmpty(object param0, object param1);
    public static EqtMessage UTA_ExpectedExceptionAttributeConstructionException(object param0, object param1, object param2);
    public static EqtMessage UTA_ExpectedExceptionAttributeNoExceptionMessageException(object param0, object param1, object param2, object param3);
    public static EqtMessage UTA_MultipleExpectedExceptionsOnTestMethod(object param0, object param1);
    public static EqtMessage UTA_FailedToGetTestMethodException(object param0, object param1);
    public static EqtMessage get_UTA_InvalidNumberOfPermutetionObjects();
    public static EqtMessage UTA_FileNotFound(object param0, object param1);
    public static EqtMessage UTA_NotATestClass(object param0);
    public static EqtMessage UTA_IgnoreTestClass(object param0);
    public static EqtMessage UTA_IgnoreTestMethod(object param0, object param1);
    public static EqtMessage UTA_ErrorTimeoutNonTestMethod(object param0, object param1);
    public static EqtMessage UTA_ErrorInvalidTimeout(object param0, object param1);
    public static EqtMessage UTA_ErrorTimeoutMethodOutOfTestClass(object param0, object param1);
    public static EqtMessage UTA_ErrorInvalidWorkItem(object param0, object param1, object param2);
    public static EqtMessage UTA_InitMethodThrows(object param0, object param1, object param2, object param3);
    public static EqtMessage UTA_InstanceCreationError(object param0, object param1);
    public static EqtMessage UTA_MethodDoesNotExists(object param0, object param1);
    public static EqtMessage UTA_MethodHasBothClassCleanupandClassInit(object param0, object param1);
    public static EqtMessage UTA_MethodHasWrongSignature(object param0, object param1, object param2);
    public static EqtMessage get_UTA_MethodHasWrongSignatureResolution_Public();
    public static EqtMessage get_UTA_MethodHasWrongSignatureResolution_NotPublic();
    public static EqtMessage get_UTA_MethodHasWrongSignatureResolution_Static();
    public static EqtMessage get_UTA_MethodHasWrongSignatureResolution_NotStatic();
    public static EqtMessage UTA_MethodHasWrongSignatureResolution_OneReturnType(object param0);
    public static EqtMessage UTA_MethodHasWrongSignatureResolution_TwoReturnTypes(object param0, object param1);
    public static EqtMessage UTA_MethodHasWrongSignatureResolution_ParameterLength(object param0);
    public static EqtMessage UTA_MethodHasWrongSignatureResolution_Parameter(object param0, object param1);
    public static EqtMessage UTA_MethodLoadError(object param0, object param1, object param2);
    public static EqtMessage UTA_NoDefaultConstructor(object param0);
    public static EqtMessage UTA_NoSourceAvailable(object param0, object param1);
    public static EqtMessage UTA_ParameterTypeLoadError(object param0, object param1);
    public static EqtMessage UTA_ParameterValueConversionError(object param0, object param1, object param2, object param3, object param4);
    public static EqtMessage UTA_TestContextLoadError(object param0, object param1);
    public static EqtMessage UTA_TestContextSetError(object param0, object param1);
    public static EqtMessage UTA_TestContextTypeMismatchLoadError(object param0);
    public static EqtMessage UTA_TestExecutionTimeExceeded(object param0, object param1);
    public static EqtMessage UTA_TestMethodDecoratorException(object param0, object param1, object param2, object param3);
    public static EqtMessage UTA_TestMethodDecoratorNullResult(object param0, object param1, object param2);
    public static EqtMessage UTA_TestMethodThrows(object param0, object param1, object param2);
    public static EqtMessage UTA_CoverageStrongNameVerification(object param0);
    public static EqtMessage UTA_TimerAlreadyStarted(object param0);
    public static EqtMessage UTA_TimerNotStarted(object param0);
    public static EqtMessage UTA_TimerResultDuration(object param0);
    public static EqtMessage UTA_TimerResultEndTime(object param0);
    public static EqtMessage get_UTA_TimerResultsHeading();
    public static EqtMessage UTA_TimerResultsName(object param0);
    public static EqtMessage UTA_TimerResultStartTime(object param0);
    public static EqtMessage UTA_TRC_AssemblyCleanupMethod(object param0, object param1);
    public static EqtMessage UTA_TRC_AssemblyInitializationMethodCalled(object param0, object param1);
    public static EqtMessage UTA_TRC_ClassCleanupMethod(object param0, object param1);
    public static EqtMessage UTA_TRC_ClassInitializationMethodCalled(object param0, object param1);
    public static EqtMessage UTA_TRC_CleanupMethod(object param0, object param1);
    public static EqtMessage UTA_TRC_CreateInstance(object param0);
    public static EqtMessage UTA_TRC_InitializationMethodCalled(object param0, object param1);
    public static EqtMessage UTA_TRC_RunTestMethod(object param0, object param1);
    public static EqtMessage UTA_TypeLoadError(object param0, object param1);
    public static EqtMessage UTA_UnitTestAdapterThrowsException(object param0);
    public static EqtMessage UTA_WrongTestType(object param0);
    public static EqtMessage UTA_ConfigurationMissingDataSourceSetting(object param0);
    public static EqtMessage UTA_CannotAccessTestAssemblyFile(object param0, object param1, object param2, object param3);
    public static EqtMessage UTA_TestAssemblyFileIOError(object param0, object param1);
    public static EqtMessage UTA_ConfigurationEmptyDataConnectionString(object param0);
    public static EqtMessage UTA_ConfigurationEmptyTableName(object param0);
    public static EqtMessage UTA_UnhandledExceptionInBackgroundThread(object param0);
    public static EqtMessage get_UTA_TestAborted();
    public static EqtMessage UTA_EnumeratorFailedLoadTest(object param0, object param1);
    public static EqtMessage UTA_EnumeratorLoadBadImageFormat(object param0, object param1);
    public static EqtMessage UTA_EnumeratorLoadTypeErrorFormat(object param0, object param1);
    public static EqtMessage UTA_EmptyDataTable(object param0);
    public static EqtMessage UTA_FailedToDisposeTestExtensionExecution(object param0, object param1);
    public static EqtMessage get_UnitTest_ResultViewer_ResultExistsProviderNull();
    public static EqtMessage UnitTest_ResultViewer_ExtensionResultException(object param0);
    public static EqtMessage UnitTest_TIP_FailedInitializeExtension(object param0, object param1);
    public static EqtMessage UnitTest_TIP_FailedInitializeExtensionCommandProvider(object param0, object param1);
    public static EqtMessage UnitTest_Registration_ExtensionNotRegistered(object param0);
    public static EqtMessage UnitTest_Registration_ExtensionNotRegisteredForAttribute(object param0);
    public static EqtMessage UnitTest_Registration_FailedLoadExtension(object param0, object param1);
    public static EqtMessage UnitTest_Registration_ExtensionFailedCreateAttributeInstance(object param0, object param1, object param2);
    public static EqtMessage UnitTest_Registration_ExtensionMustDerive(object param0, object param1);
    public static EqtMessage UnitTest_Registration_ExtensionIdNull(object param0);
    public static EqtMessage UnitTest_Registration_ExtensionDuplicateId(object param0);
    public static EqtMessage UnitTest_Registration_FailedReadExtensionsKey(object param0, object param1);
    public static EqtMessage UnitTest_FailedLoadExtensionFromXml(object param0, object param1);
    public static EqtMessage UnitTest_FailedLoadExtensionFromType(object param0, object param1);
    public static EqtMessage Utility_IgnoredThrownException(object param0, object param1);
    public static EqtMessage Utility_IgnoredThrownNonClsException(object param0);
    public static EqtMessage get_Utility_ProcessNameWhenCannotGetIt();
    public static EqtMessage UTR_FileDoesNotExist(object param0);
    public static EqtMessage UTR_IncompatibleAttributes(object param0, object param1, object param2, object param3);
    public static EqtMessage UTR_InvalidCleanupMethodSignatrue(object param0, object param1);
    public static EqtMessage UTR_InvalidInitMethodSignature(object param0, object param1);
    public static EqtMessage UTR_InvalidTestMethodSignature(object param0, object param1);
    public static EqtMessage UTR_MultipleMethodsWithSameAttribute(object param0, object param1);
    public static EqtMessage get_UT_ReadOnlyPropertyCannotBeSet();
    public static EqtMessage get_VSIP_DontAskCheckBoxNotAddedToForm();
    public static EqtMessage VSIP_FailedToGetService(object param0);
    public static EqtMessage VSIP_FailedToLoadPackage(object param0, object param1);
    public static EqtMessage VSIP_FileChooserSaveArgument(object param0);
    public static EqtMessage get_VSIP_FileChooserTooManyFiles();
    public static EqtMessage get_VSIP_HierarchyWrapper_ProjectDisabled();
    public static EqtMessage get_VSIP_InvalidFlags();
    public static EqtMessage VSIP_MessageBoxOptionNotSupported(object param0);
    public static EqtMessage get_VSIP_MultiplePhysicalViewsNotSupported();
    public static EqtMessage get_VSIP_OnlyOpenOrSilentFlag();
    public static EqtMessage get_VSIP_TimedOutWaitingForDebugger();
    public static EqtMessage VSIP_UnknownLanguageGuid(object param0);
    public static EqtMessage get_VSIP_EditorWindowPane_InitNew_ArgumentException();
    public static EqtMessage get_VSIP_HierarchyOutputCollection_HierarchyOutputCollectionFactory_EqtHierarchyEnumerationException();
    public static EqtMessage VSIP_ResultMessagesViewerCopyFormat(object param0, object param1);
    public static EqtMessage VSIP_EnsureReferenceSpecificVersionError(object param0, object param1);
    public static EqtMessage VSTCM_MetadataSyntaxError(object param0, object param1);
    public static EqtMessage get_VSTCM_TestsCannotBeAddedBuildInProgressError();
    public static EqtMessage get_Publish_AccessDenied();
    public static EqtMessage Publish_BadPlatformFlavorForBuild(object param0, object param1);
    public static EqtMessage Publish_BuildUriDoesNotExist(object param0);
    public static EqtMessage get_Publish_GetRunIdsGeneralError();
    public static EqtMessage get_Publish_GetBuildUrisGeneralError();
    public static EqtMessage Publish_RunIdNotInDB(object param0);
    public static EqtMessage Publish_RunPublishingCancelled(object param0);
    public static EqtMessage Publish_TestResultArtifactTitle(object param0, object param1);
    public static EqtMessage get_Publish_RunHasAlreadyBeenPublished();
    public static EqtMessage Publish_RunDirectoryOrFileAlreadyExists(object param0, object param1);
    public static EqtMessage Publish_CantFindResultFile(object param0);
    public static EqtMessage Publish_CantFindResultShare(object param0);
    public static EqtMessage Publish_DestinationDoesNotExist(object param0);
    public static EqtMessage Publish_NonClsException(object param0);
    public static EqtMessage Publish_NonExistentPlatformFlavorCombination(object param0);
    public static EqtMessage get_PublishOperation_InProgress();
    public static EqtMessage get_Publish_GeneralFailure();
    public static EqtMessage get_TCMUI_ConnectionStringContainsSensitiveData();
    public static EqtMessage get_TCMUI_PublishFailedToInitialize();
    public static EqtMessage TCMUI_FailedToGetSolutionRootDirectory(object param0);
    public static EqtMessage TCMUI_ResultCategoryDataManagerGetCategoryFailure(object param0, object param1);
    public static EqtMessage get_TCMUI_CreateMetadataCancelled();
    public static EqtMessage TCMUI_CreateMetadataFailed(object param0);
    public static EqtMessage TCMUI_TestEnableFailed(object param0);
    public static EqtMessage TCMUI_TestDisableFailed(object param0);
    public static EqtMessage get_TCMUI_TestRunContainsDisabledTests();
    public static EqtMessage TCMUI_AddCategoryFailed(object param0, object param1);
    public static EqtMessage TCMUI_RenameCategoryFailed(object param0, object param1);
    public static EqtMessage TCMUI_MoveCategoryFailed(object param0, object param1);
    public static EqtMessage TCMUI_CopyTestsFailed(object param0, object param1);
    public static EqtMessage TCMUI_MoveTestsFailed(object param0, object param1);
    public static EqtMessage TCMUI_DeleteCategoriesFailed(object param0);
    public static EqtMessage TCMUI_UpdateCategoryFailed(object param0, object param1);
    public static EqtMessage TCMUI_RemoveTestFromCategoryFailed(object param0);
    public static EqtMessage TCMUI_RemoveTestFromAllCategoryFailed(object param0);
    public static EqtMessage TCMUI_SetActiveRunConfigFailed(object param0, object param1);
    public static EqtMessage get_TCMUI_MustSaveSolution();
    public static EqtMessage get_TCMUI_CantSaveTestLists();
    public static EqtMessage get_TCMUI_TestListEditorNotSupported();
    public static EqtMessage get_TCMUI_CodeCoverageNotSupported();
    public static EqtMessage Common_DisposingReaderWriterLockOutofOrderError(object param0, object param1, object param2, object param3, object param4, object param5, object param6);
    public static EqtMessage get_Common_DisposingReaderWriterFailedToAcquireReaderLock();
    public static EqtMessage get_Common_DisposingReaderWriterFailedToAcquireWriterLock();
    public static EqtMessage get_Common_DisposingReaderWriterFailedToUpgradeWriterLock();
    public static EqtMessage get_Common_DisposingReaderWriterRedundantDispose();
    public static EqtMessage Common_ThreadStartException(object param0);
    public static EqtMessage get_Common_InsufficentMemoryException();
    public static EqtMessage Common_InternalError(object param0);
    public static EqtMessage get_ConfirmOldFormatConversion_Title();
    public static EqtMessage ConfirmOldFormatConversion_Text(object param0);
    public static EqtMessage get_ConfirmOldFormatConversion_Name();
    public static EqtMessage get_ConfirmOldFormatConversion_AlwaysPrompt();
    public static EqtMessage get_ConfirmOldFormatConversion_NeverPrompt();
    public static EqtMessage NoAccessConvertingTestFile(object param0);
    public static EqtMessage XsdViolation(object param0, object param1, object param2);
    public static EqtMessage Common_ConvertedFileInMemory(object param0);
    public static EqtMessage Common_ConversionUnsupportedFormat(object param0);
    public static EqtMessage get_Common_ConversionUnsupported();
    public static EqtMessage get_Common_TruncatedOutput();
    public static EqtMessage Common_ConvertionFailedToLoadAsCurrentVersion(object param0);
    public static EqtMessage get_OldFormatConversionConvertFilesToBeAddedDialogTitle();
    public static EqtMessage OldFormatConversionConvertFilesToBeAddedDialogText(object param0);
    public static EqtMessage OldFormatConversionConvertFilesToBeAddedFromOutsideSolutionDialogText(object param0);
    public static EqtMessage get_OldFormatConversionConvertAllDialogTitle();
    public static EqtMessage OldFormatConversionConvertAllDialogText(object param0, object param1);
    public static EqtMessage OldFormatConversionOnAddItemsFailure(object param0);
    public static EqtMessage get_FileFormatUserCancelled();
    public static EqtMessage get_FileFormatConversionSuccess();
    public static EqtMessage FileFormatConversionProgress(object param0);
    public static EqtMessage FileFormatConversionError(object param0, object param1);
    public static EqtMessage get_FileFormatConversionFilesNotEditable();
    public static EqtMessage get_FileFormatConversionFilesAreReadOnly();
    public static EqtMessage get_FileFormatConversionCannotCheckOutFiles();
    public static EqtMessage get_FileFormatConversionCannotQuerySaveFiles();
    public static EqtMessage FileFormatConversionCannotDetermineFileVersion(object param0, object param1);
    public static EqtMessage get_FirewallExceptionDisabled();
    public static EqtMessage get_FirewallExceptionDisabled_CollectionController();
    public static EqtMessage get_FirewallServiceNotRunning();
    public static EqtMessage InvalidClipboardFormat(object param0, object param1);
    public static EqtMessage FFU_Header(object param0);
    public static EqtMessage FFU_ErrorInput(object param0);
    public static EqtMessage FFU_Usage(object param0);
    public static EqtMessage FFU_CannotFindInputFile(object param0);
    public static EqtMessage FFU_GenericFailure(object param0);
    public static EqtMessage FFU_StartingUpgrade(object param0, object param1);
    public static EqtMessage get_FFU_UpgradeCompleted();
    public static EqtMessage get_FFU_UpgradeNotNeeded();
    public static EqtMessage get_TrxFileConversionError();
    public static EqtMessage get_TestProject_UpgradeFailedDueToReferences();
    public static EqtMessage TestProject_UpgradeFailedForReference(object param0, object param1);
    public static EqtMessage TestProject_UpgradeVb35Ask(object param0);
    public static EqtMessage Execution_Agent_DataCollector_TypeIsNull(object param0);
    public static EqtMessage Execution_Agent_DataCollector_FriendlyNameIsNullOrEmpty(object param0);
    public static EqtMessage Execution_Agent_DataCollectors_EventLog_InvalidEntryTypeInConfig(object param0);
    public static EqtMessage Execution_Agent_DataCollectors_EventLog_InvalidMaxEntriesInConfig(object param0);
    public static EqtMessage Execution_Agent_DataCollectors_EventLog_InvalidBoolInConfig(object param0, object param1);
    public static EqtMessage Execution_Agent_DataCollectors_EventLog_ReadError(object param0, object param1);
    public static EqtMessage get_Execution_Agent_DataCollectors_SystemInfo_InitializationException();
    public static EqtMessage get_Execution_Agent_DataCollectors_SystemInfo_Timeout();
    public static EqtMessage Execution_Agent_DataCollectors_SystemInfo_XmlName(object param0);
    public static EqtMessage get_Execution_Agent_DataCollectors_SystemInfo_IEInfoReadErrorText();
    public static EqtMessage get_Execution_Agent_DataCollectors_SystemInfo_MemoryInfoReadErrorText();
    public static EqtMessage get_Execution_Agent_DataCollectors_SystemInfo_ScreenColorDepthReadErrorText();
    public static EqtMessage get_Execution_Agent_AgentProcessManager_NoDataCollectionAgent();
    public static EqtMessage get_Execution_Common_XmlDataAttachment_RootElementMissing();
    public static EqtMessage get_Execution_Common_WrongDataCollectionContextType();
    public static EqtMessage Execution_Common_CannotResolveDuplicateFileName(object param0, object param1);
    public static EqtMessage Execution_Common_ErrorOccurredWhileSavingFile(object param0, object param1);
    public static EqtMessage Execution_Common_ErrorOccurredWhileSendingFile(object param0, object param1, object param2);
    public static EqtMessage get_Execution_TimedOutIntializeAgentPlugins();
    public static EqtMessage get_Execution_TimedOutIntializeExecutionAgents();
    public static EqtMessage Execution_ErrorIntializeAgentPlugins(object param0);
    public static EqtMessage Execution_ControllerDeploymentFromClientFailed(object param0);
    public static EqtMessage get_Execution_RunStoppedOrAbortedWhileInitializingCollectors();
    public static EqtMessage get_Execution_RunStoppedOrAbortedWhileInitializingExecutionAgents();
    public static EqtMessage get_Execution_FailedToStartCollectionSessionRun();
    public static EqtMessage get_TCM_NoImpactedTestsToRun();
    public static EqtMessage get_TCM_NoRecommendedImpactedTestsToRun();
    public static EqtMessage TCMUI_TestResultsServiceUnavailable(object param0);
    public static EqtMessage TCMUI_RegisterTestControllerFails(object param0, object param1, object param2);
    public static EqtMessage TCMUI_UnregisterTestControllerFails(object param0, object param1, object param2);
    public static EqtMessage get_Common_TestRunConfig_Load_UnrecognizedType();
    public static EqtMessage get_Common_TestSettings_Collector_NoConfigurationRequired();
    public static EqtMessage Common_TestSettings_Collector_EditorNotAvailable(object param0);
    public static EqtMessage get_Common_TestSettings_Load_DefaultCollectorEditor();
    public static EqtMessage get_Common_TestSettings_Load_UnrecognizedType();
    public static EqtMessage get_Common_TestSettings_DataCollection_EmptyCollectorUri();
    public static EqtMessage get_Common_TestSettings_DataCollection_EmptyAssemblyQualifiedName();
    public static EqtMessage Common_TestSettings_DataCollection_DoubleCollector(object param0);
    public static EqtMessage Common_TestSettings_DataCollection_DoubleRule(object param0);
    public static EqtMessage get_Common_TestSettings_DataCollection_AgentRule_MissingName();
    public static EqtMessage get_Common_TestSettings_DataCollection_NetworkEmulationProfile_MissingName();
    public static EqtMessage get_Common_TestSettings_SetTestEnvironment_ControllerNullEnvironmentNotNull();
    public static EqtMessage Execution_AgentConnectionDenied_AgentIdDoesNotExist(object param0);
    public static EqtMessage get_Common_AgentReservation_ExecutionRunNoExecutionRule();
    public static EqtMessage Common_AgentReservation_EmptyCollectionRuleNoMoreRules(object param0, object param1);
    public static EqtMessage Common_AgentReservation_ExecutionRunEmptyCollectionCriteria(object param0);
    public static EqtMessage Common_AgentReservation_UsingEnvironments_CollectionRuleResultsNoAgents(object param0);
    public static EqtMessage Common_AgentReservation_NotUsingEnvironments_CollectionRuleResultsNoAgents(object param0);
    public static EqtMessage Common_AgentReservation_UsingEnvironments_CollectionOnlyRunCollectionRuleBusyAgent(object param0, object param1);
    public static EqtMessage Common_AgentReservation_NotUsingEnvironments_CollectionOnlyRunCollectionRuleBusyAgent(object param0, object param1);
    public static EqtMessage Common_AgentReservation_CollectionOnlyAgentOffline(object param0, object param1);
    public static EqtMessage Common_AgentReservation_ExecutionAgentOffline(object param0);
    public static EqtMessage Common_AgentReservation_CollectionRuleAgentsOverlap(object param0, object param1, object param2);
    public static EqtMessage get_Common_AgentReservation_UsingEnvironments_ExecutionRuleNoOnlineAgents();
    public static EqtMessage get_Common_AgentReservation_NotUsingEnvironments_ExecutionRuleNoOnlineAgents();
    public static EqtMessage Common_AgentReservation_ExecutionOverlapsCollection(object param0, object param1);
    public static EqtMessage Common_AgentReservation_BusyExecutionAgent(object param0);
    public static EqtMessage Common_AgentReservation_UsingEnvironments_CollectionOnlyRunNoCollectionRules(object param0);
    public static EqtMessage Common_AgentReservation_NotUsingEnvironments_CollectionOnlyRunNoCollectionRules(object param0);
    public static EqtMessage TestSettingsDialog_CollectorDetailDialog_InvalidXml(object param0);
    public static EqtMessage TestSettingsDialog_CollectorsUserControl_InvalidAgentDefaultConfig(object param0);
    public static EqtMessage get_TestSettingsDialog_CollectionOnlyAgentsDialogPage_FilterReason();
    public static EqtMessage Execution_APINotAvailableInDefaultTCMode(object param0);
    public static EqtMessage get_TestSettings_GenericCollectorConfigEditor_Caption();
    public static EqtMessage get_TestSettings_GenericCollectorConfigEditor_Description();
    public static EqtMessage TestSettings_RolesPage_ConnectingToControllerStatus(object param0);
    public static EqtMessage TestSettings_RolesPage_ConnectedToControllerStatus(object param0);
    public static EqtMessage Execution_FailedToOpenRegistryKey(object param0);
    public static EqtMessage Execution_InvalidFenceConfigurationStatus(object param0);
    public static EqtMessage get_TestSettings_CodeCoverageCollectorConfigEditor_Caption();
    public static EqtMessage Execution_FailedToOpenRegistryKeyForWriting(object param0);
    public static EqtMessage get_TestSettings_CodeCoverageCollectorConfigEditor_Description();
    public static EqtMessage Common_RegistryMonitor_FailedToSetRegistryListener(object param0, object param1);
    public static EqtMessage Common_RegistryMonitor_ExceptionOccurredWhileInvokingListener(object param0);
    public static EqtMessage Execution_Agent_CouldNotApplyLabConfigurations(object param0);
    public static EqtMessage Execution_ErrorOccurredWhileWaitingForDataExchangeServiceToStart(object param0);
    public static EqtMessage get_Execution_WaitingForDataExchangeServiceToStart();
    public static EqtMessage get_Execution_DataExchangeServiceDidNotStart();
    public static EqtMessage get_TestSettings_Hosts_SmartDevice_DeploymentNeedsToBeEnabled();
    public static EqtMessage TestSettings_ShellHelperPolicy_FailedToCreateRunConfigCustomEditor(object param0, object param1);
    public static EqtMessage Common_RegistryMonitor_FailedToOpenRegistryKey(object param0, object param1);
    public static EqtMessage Common_ContainsNullElement(object param0);
    public static EqtMessage Common_ContainsNullOrEmptyElement(object param0);
    public static EqtMessage Common_FrameworkTestResult_ToString(object param0, object param1);
    public static EqtMessage Common_TestRunnerDuplicateTestId(object param0, object param1, object param2);
    public static EqtMessage Common_TestCollection_ChildTestNotFound(object param0, object param1, object param2, object param3);
    public static EqtMessage get_Common_TestRunnerEmptyTestsToRun();
    public static EqtMessage get_Common_ReadOnlyDictionary_NotSupported();
    public static EqtMessage Common_TestExt_InternalProblem(object param0);
    public static EqtMessage Common_TestRunner_InvalidTests(object param0);
    public static EqtMessage Common_TestRunner_QueueRunBadUri(object param0);
    public static EqtMessage Common_TestRunner_UserTokenNotFound(object param0);
    public static EqtMessage TestSettings_ShellHelperPolicy_FailedToInitializeRunConfigCustomEditor(object param0, object param1);
    public static EqtMessage Execution_AgentService_FailedToAddRegistryListener(object param0);
    public static EqtMessage get_TestSettings_KeyValueAssociation_Error_SelectedValueOutOfRange();
    public static EqtMessage TestSettings_DataCollectorInformationMissingFromTestEnvironment(object param0);
    public static EqtMessage TestSettings_MachineRoleMissingFromTestEnvironment(object param0);
    public static EqtMessage get_TestSettings_TestEnvironmentNotSet();
    public static EqtMessage Execution_RegistryKeyDoesnotExist_InstallVMAdditions(object param0);
    public static EqtMessage TestSettings_MachinePropertyFilterCriterionFormatString(object param0, object param1);
    public static EqtMessage Execution_Common_DataCollectionSink_XmlHasInvalidCharacters(object param0);
    public static EqtMessage Common_InvalidConection(object param0);
    public static EqtMessage Common_InvalidTestCase(object param0);
    public static EqtMessage Common_QTCollection_AdditionFailed_ExceededMaxKeySize(object param0, object param1);
    public static EqtMessage Common_QTCollection_AdditionFailed_ExceededMaxValueSize(object param0, object param1);
    public static EqtMessage Execution_FailedToAddMachineRole_MachineRoleWithName_AlreadyExistInEnvrironment(object param0, object param1);
    public static EqtMessage Execution_FailedToAddMachineRole_IdAlreadyExists_InTestEnvironment(object param0, object param1);
    public static EqtMessage Execution_FailedToAddMachineRole_AgentAlreadyExists_InTestEnvironment(object param0, object param1);
    public static EqtMessage Execution_FailedToAddAgent_AgentWithName_AlreadyExistsInMachineRole(object param0, object param1);
    public static EqtMessage Execution_Controller_TestEnvironmentDoesNotExist(object param0);
    public static EqtMessage Execution_Controller_AgentAlreadyInList(object param0, object param1, object param2);
    public static EqtMessage Execution_Controller_FailedToAddTestEnvironmentAsEnvironmentWithSameNameAlreadyExists(object param0);
    public static EqtMessage Execution_Controller_FailedToAddTestEnvironmentAsAgentAlreadyExists(object param0, object param1);
    public static EqtMessage Execution_Controller_FailedToAddTestEnvironmentAsEnvironmentWithSameIdAlreadyExists(object param0, object param1);
    public static EqtMessage Execution_Controller_FailedToLoadTestEnvironmentAsEnvironmentWithSameNameAlreadyExists(object param0);
    public static EqtMessage Execution_Controller_FailedToLoadTestEnvironmentAsEnvironmentWithSameIdAlreadyExists(object param0);
    public static EqtMessage Execution_Controller_FailedToLoadTestEnvironmentAsAgentAlreadyExists(object param0);
    public static EqtMessage Execution_Controller_RemovalOfDefaultTestEnvironmentNotAllowed(object param0);
    public static EqtMessage Execution_Controller_RemovalFailed_EnvironmentDoesNotExist(object param0);
    public static EqtMessage Execution_Controller_RemovalFailed_VersionMismatch(object param0, object param1, object param2);
    public static EqtMessage get_Execution_Controller_AddFailed_MissingTestEnvironmentName();
    public static EqtMessage Execution_Controller_AddFailed_TestEnvironmentNameExceedsMaxLength(object param0);
    public static EqtMessage Execution_Controller_AddFailed_TestEnvironmentDisplayNameExceedsMaxLength(object param0);
    public static EqtMessage Execution_Controller_AddFailed_TestEnvironmentDescriptionExceedsMaxLength(object param0);
    public static EqtMessage Execution_Controller_AddFailed_MachineRoleNameExceedsMaxLength(object param0);
    public static EqtMessage Execution_Controller_AddFailed_AgentNameExceedsMaxLength(object param0);
    public static EqtMessage Execution_Controller_AddFailed_AgentDisplayNameExceedsMaxLength(object param0);
    public static EqtMessage Execution_Controller_AddFailed_AgentMachineNameExceedsMaxLength(object param0);
    public static EqtMessage Execution_Controller_AddFailed_AgentAlreadyInMachineRole(object param0);
    public static EqtMessage Execution_Controller_AddFailed_MachineRoleAlreadyInEnvironment(object param0);
    public static EqtMessage Execution_Controller_AddFailed_MissingTestEnvironmentId(object param0);
    public static EqtMessage Execution_Controller_DefaultTestEnvironmentIncludesNondefaultMachineRole(object param0);
    public static EqtMessage get_Execution_Controller_AddFailed_MissingMachineRoleName();
    public static EqtMessage Execution_Controller_AddFailed_MissingMachineRoleId(object param0);
    public static EqtMessage get_Execution_Controller_AddFailed_MissingAgentName();
    public static EqtMessage get_Execution_Controller_AddFailed_MissingLabServerUri();
    public static EqtMessage get_Execution_Controller_AddFailed_MissingLabEnvironmentUri();
    public static EqtMessage Execution_Controller_FailedToLoadControllerConfiguration(object param0, object param1);
    public static EqtMessage get_Execution_Controller_AddAgent_MissingAgentName();
    public static EqtMessage get_Execution_Controller_RemoveAgent_MissingAgentName();
    public static EqtMessage Execution_Controller_AddAgent_AgentAlreadyRegistered(object param0);
    public static EqtMessage Execution_Controller_OldApi_NotSupportedForNonDefaultTestEnvironment(object param0);
    public static EqtMessage get_Execution_Controller_SetAgentProperties_MissingAgentName();
    public static EqtMessage get_Execution_Controller_DefaultTestEnvironmentCannotbeUpdated();
    public static EqtMessage Execution_Controller_TestEnvironmentVersionMismatch(object param0, object param1);
    public static EqtMessage Execution_Controller_TestEnvironmentAlreadyExists(object param0);
    public static EqtMessage get_Execution_Controller_DefaultTestEnvironmentDoesNotExist();
    public static EqtMessage get_Execution_Controller_DefaultMachineRoleDoesNotExist();
    public static EqtMessage Execution_Controller_AgentAlreadyExists(object param0, object param1);
    public static EqtMessage Execution_Controller_CannotAddReservedAgentProperty(object param0, object param1);
    public static EqtMessage Execution_Controller_CannotAddBusyAgent(object param0, object param1, object param2);
    public static EqtMessage Execution_Controller_CannotRemoveBusyAgent(object param0, object param1, object param2);
    public static EqtMessage Execution_Controller_CannotRemoveAgentFromDefaultController(object param0);
    public static EqtMessage get_Execution_Controller_CannotChangeTfsUriWhenAgentsAreRunningTests();
    public static EqtMessage get_Execution_Controller_AddFailed_DefaultTestEnvironmentMustNotHaveMoreThanOneMachineRoles();
    public static EqtMessage Execution_Controller_AddFailed_MissingAgent(object param0);
    public static EqtMessage Execution_FailedToAddMachineRole_MachineRoleWithId_AlreadyExistInEnvrironment(object param0, object param1, object param2);
    public static EqtMessage Execution_Controller_TestManagementService_NotRegistered(object param0);
    public static EqtMessage Execution_Controller_Controller_NotRegistered_WithTeamFoundationServer(object param0);
    public static EqtMessage get_Execution_Controller_Controller_NotRegistered_WithAnyTeamFoundationServer();
    public static EqtMessage Execution_Controller_TeamProject_NotFound_OnTestManagementService(object param0, object param1);
    public static EqtMessage Execution_Controller_TeamFoundationServer_CannotBeUpdated_EnvironmentRegisteredToOldTeamFoundationServer(object param0, object param1, object param2);
    public static EqtMessage Execution_Controller_TeamProjectInEnvironmentNotAllowed_ControllerNotAssociatedWithTfs(object param0, object param1);
    public static EqtMessage get_Execution_Controller_TeamProjectCannotBeUpdated();
    public static EqtMessage Execution_Controller_FailedToLoadTestEnvironment_ProjectNameNotAllowed_WithEmptyTeamFoundationServerUri(object param0, object param1);
    public static EqtMessage Execution_Controller_UpdateTestEnvironmentFailed_OldTestEnvironmentNotFoundOnTestCaseManagementService(object param0, object param1);
    public static EqtMessage get_Execution_Controller_SessionJoiningAnotherTestRun();
    public static EqtMessage Execution_ControllerReadyForSyncStartNoAgent(object param0, object param1);
    public static EqtMessage Execution_AgentService_CouldNotRegisterChannelOnMachine(object param0, object param1, object param2);
    public static EqtMessage get_Execution_AgentService_WaitingForFencingToBeComplete();
    public static EqtMessage get_Execution_AgentService_DetectedFencingIsComplete();
    public static EqtMessage ControllerConnectionManager_FailedToConnect(object param0);
    public static EqtMessage get_HostAdapters_AspNet_AgentSide_WebTestAdapter_FailedToGetWebSites();
    public static EqtMessage get_CodeGen_GenericParameterHelperTypeNotFound();
    public static EqtMessage get_CodeGen_TargetMethodNotSupported();
    public static EqtMessage get_CollectedFilesResultViewer_TestFilesSectionName();
    public static EqtMessage get_DataCollectionSink_CanNotReadStream();
    public static EqtMessage DataCollectionSink_ReservedFilenameUsed(object param0);
    public static EqtMessage DataCollectionSink_InvalidFileNameCharacters(object param0, object param1);
    public static EqtMessage RigAdmin_TestControllerNotAvailable(object param0);
    public static EqtMessage get_Common_TestControllerRegisteredWithTFS();
    public static EqtMessage Common_TestAgentControllerNotAvailable(object param0, object param1);
    public static EqtMessage get_TestSettings_TestControllerRegisteredWithTFS();
    public static EqtMessage get_Execution_PermissionDenied();
    public static EqtMessage InvalidLabContractVersion(object param0);
    public static EqtMessage LabServiceContractVersionIncompatibleMessage(object param0, object param1);
    public static EqtMessage AssemblyResolver_NonExistentTestFile(object param0);
    public static EqtMessage AssemblyResolver_InvalidPath(object param0, object param1, object param2);
    public static EqtMessage AssemblyResolver_DirectoryDoesNotExist(object param0);
    public static EqtMessage AssemblyResolver_ErrorWritingAssemblyResolutionSettings(object param0);
    public static EqtMessage AssemblyResolver_ApplicationBaseDirectoryDoesNotExist(object param0);
    public static EqtMessage AssemblyResolver_ApplicationBaseDirectoryInvalidPath(object param0);
    public static EqtMessage AssemblyResolver_ExcludedResolutionPathInvalidPath(object param0);
    public static EqtMessage AssemblyResolver_ResolutionPathInvalidPath(object param0);
    public static EqtMessage AssemblyResolver_ResolutionPathDoesNotExist(object param0);
    public static EqtMessage AssemblyResolver_CouldNotCopyTestAppConfig(object param0, object param1);
    public static EqtMessage AssemblyResolver_ProbePathNotSubdirectoryOfAppBase(object param0, object param1);
    public static EqtMessage UTF_AssemblyResolutionSettings_CouldNotLoadTestAppConfig(object param0, object param1);
    public static EqtMessage get_DontIncludeContentTypeParameters();
    public static EqtMessage get_Common_TcmInformation_TestIterationIdMustBeNonnegative();
    public static EqtMessage Common_CannotOpenFile(object param0);
    public static EqtMessage Common_CannotReadFromFile(object param0);
    public static EqtMessage Common_CannotWriteToFile(object param0);
    public static EqtMessage TestSettingsDialog_FailedToInitialize(object param0);
    public static EqtMessage get_TUIP_UnitTestAssemblyPermissionTitle();
    public static EqtMessage TUIP_UnitTestAssemblyAccessDenied(object param0, object param1, object param2);
    public static EqtMessage UTA_CannotAccessTestAssemblyFileAtSource(object param0, object param1, object param2);
    public static EqtMessage get_ArgumentExceptionMessage();
    public static EqtMessage Common_SingleInstance_CouldNotStartApplication_Error(object param0);
    public static EqtMessage get_ControllerVersionNotSupported();
    public static EqtMessage Execution_DataCollectorDisabledOnFramework35Run(object param0);
    public static EqtMessage get_VSIP_NetFrameworkTestProjectNotSupported();
    public static EqtMessage VSIP_TestProjectHasNotSupportedReference(object param0);
    public static EqtMessage get_VSIP_TestProjectHasNotSupportedTestType();
    public static EqtMessage get_VSIP_TestProjectRetargetNeedConfigUpdate();
    public static EqtMessage get_VSIP_TestProjectTestTypeAdditionNotSupported();
    public static EqtMessage get_TMI_RemoteExecutionNotSupportedForFramework35Run();
    public static EqtMessage get_TMI_LocalExecutionWithNoIsolationNotSupportedForFramework35Run();
    public static EqtMessage get_TMI_HostedTestsNotSupportedForFramework35Run();
    public static EqtMessage get_TMI_CustomTestTypesNotSupportedForFramework35Run();
    public static EqtMessage TMI_QueueTestRunFailedSerailizationErrorAgentNotPatched(object param0, object param1);
    public static EqtMessage get_TMI_TCMRunNotSupportedForFramework35Run();
    public static EqtMessage get_TMI_TestRunCanNotTargetMultipleFramework();
    public static EqtMessage get_IncompatibleEnvironmentAndLabArguments();
    public static EqtMessage get_ArgumentExceptionGenericError();
    public static EqtMessage get_Execution_TestMachineConfigurationChanged();
    public static EqtMessage DataCollectorsFailedToInitialize(object param0, object param1);
    public static EqtMessage Execution_PermissionDeniedStandardEnvironment(object param0);
    public static EqtMessage Execution_PermissionDeniedVirtualEnvironment(object param0);
    public static EqtMessage Execution_FailedQueueRunToControllerHostedTFS(object param0);
    public static EqtMessage get_FailedToAddCredentialsToCredentialManager();
    public static EqtMessage get_TestProject_AddCuitInDev10UnitTestProject();
    public static EqtMessage get_TCM_NoCodedWebTestsToRun();
    public static EqtMessage Execution_DataCollectorObsolete(object param0, object param1);
    public static EqtMessage TMI_DebugNotValidOnTestService(object param0);
    public static EqtMessage TestRunDirectoryCouldNotBeCreated(object param0, object param1, object param2);
    public static EqtMessage get_MsTestPublish_NotSupported();
}
internal class Microsoft.VisualStudio.TestTools.Resources.UIResources : object {
    internal static ResourceManager ResourceManager;
    public static EqtMessage TestSKU_ProductName { get; }
    public static EqtMessage TestSKU_ProductDetails { get; }
    public static EqtMessage TestSKU_ShortProductName { get; }
    public static EqtMessage TCMUI_ErrorColumnHeader { get; }
    public static EqtMessage TCMUI_TestViewToolWindowCaption { get; }
    public static EqtMessage TCMUI_GroupNoneString { get; }
    public static EqtMessage TCMUI_AllColumnsFilter { get; }
    public static EqtMessage TCMUI_FilterTypeKeyword { get; }
    public static EqtMessage TCMUI_FilterClear { get; }
    public static EqtMessage TCMUI_FilterInfoText { get; }
    public static EqtMessage TCMUI_LastRun { get; }
    public static EqtMessage TCMUI_MessageRunning { get; }
    public static EqtMessage TCMUI_MessageRunNotStarted { get; }
    public static EqtMessage TCMUI_DotDotDot { get; }
    public static EqtMessage TCMUI_DeleteUserPrompt { get; }
    public static EqtMessage TCMUI_DeleteTestTitle { get; }
    public static EqtMessage TCMUI_RemoveDeleteMultipleTests { get; }
    public static EqtMessage TCMUI_PermanentlyDeleteMultipleTests { get; }
    public static EqtMessage TCMUI_DeleteListUserPrompt { get; }
    public static EqtMessage TCMUI_ConfirmExcludeFromGroupText { get; }
    public static EqtMessage TCMUI_ResultColumnHeader { get; }
    public static EqtMessage TCMUI_ResultSummary { get; }
    public static EqtMessage TCMUI_ResultsToolWindowCaption { get; }
    public static EqtMessage TCMUI_RunDetailsToolWindowCaption { get; }
    public static EqtMessage TCMUI_TestManagerToolWindowCaption { get; }
    public static EqtMessage TCMUI_TestRunErrors { get; }
    public static EqtMessage TCMUI_TestListEditorDeprecated { get; }
    public static EqtMessage TCMUI_ClickHere { get; }
    public static EqtMessage TCMUI_TestsDirtyIndication { get; }
    public static EqtMessage TCMUI_CategoryTreeControlComboBox_AccessibilityName { get; }
    public static EqtMessage TCMUI_CategoryTreeControlComboBoxDropDown_AccessibilityName { get; }
    public static EqtMessage TCMUI_TestReceiver_UpButton_AccessibilityName { get; }
    public static EqtMessage TCMUI_TestReceiver_DownButton_AccessibilityName { get; }
    public static EqtMessage TCMUI_TestReceiver_LeftButton_AccessibilityName { get; }
    public static EqtMessage TCMUI_TestReceiver_RightButton_AccessibilityName { get; }
    public static EqtMessage TCMUI_ExplorerCategoriesPaneAccessibleName { get; }
    public static EqtMessage TCMUI_ExplorerItemsPaneAccessibleName { get; }
    public static EqtMessage TCMUI_LoadingPleaseWait { get; }
    public static ImageListStreamer TCMUI_StatusIcons { get; }
    public static ResXFileRef TCMUI_OutcomeIcons { get; }
    public static EqtMessage TCMUI_TCNameColumnHeader { get; }
    public static EqtMessage TCMUI_NoPublishRollup { get; }
    public static EqtMessage TCMUI_TestResultAllRuns { get; }
    public static EqtMessage TCMUI_TestResultManageTestRuns { get; }
    public static EqtMessage TCMUI_RunResultsLink { get; }
    public static EqtMessage TCMUI_DebugResultsLink { get; }
    public static EqtMessage TCMUI_PendingManualTestLink { get; }
    public static EqtMessage TCMUI_LoadResultDlgTitle { get; }
    public static EqtMessage TCMUI_SaveResultsDlgTitle { get; }
    public static EqtMessage TCMUI_ResultRollupSeparator { get; }
    public static EqtMessage TCMUI_TestRunPausing { get; }
    public static EqtMessage TCMUI_TestRunPaused { get; }
    public static EqtMessage TCMUI_TestRunResuming { get; }
    public static EqtMessage TCMUI_TestRunStopping { get; }
    public static EqtMessage TCMUI_TestRunAborting { get; }
    public static EqtMessage TCMUI_TestRunCompleting { get; }
    public static EqtMessage TCMUI_ResultOpenTest { get; }
    public static EqtMessage TCMUI_RunAlreadyLoaded { get; }
    public static EqtMessage TCMUI_ConfirmDeleteRunText { get; }
    public static EqtMessage TCMUI_ConfirmMultipleDeleteRunText { get; }
    public static EqtMessage TCMUI_ConfirmDeletePublishedRunText { get; }
    public static EqtMessage TCMUI_ConfirmCancelPublishRunText { get; }
    public static Icon TCMUI_TestTypeDefaultIcon { get; }
    public static ResXFileRef TCMUI_BrokenLinkIcon { get; }
    public static ResXFileRef TCMUI_NonRunnableIcon { get; }
    public static Bitmap TCMUI_TreeGroupToggle { get; }
    public static EqtMessage TCMUI_AboutTestManager { get; }
    public static Bitmap TCMUI_AboutTestManagerIcon { get; }
    public static EqtMessage TCMUI_OrganizeTests { get; }
    public static EqtMessage TCMUI_OrganizeTestsUrl { get; }
    public static Bitmap TCMUI_OrganizeTestsIcon { get; }
    public static EqtMessage TCMUI_LoadTests { get; }
    public static Bitmap TCMUI_LoadTestsIcon { get; }
    public static ResXFileRef TCMUI_ESB_Status { get; }
    public static EqtMessage TCMUI_FileFilterAllFiles { get; }
    public static EqtMessage TCMUI_FileFilterBinaryFiles { get; }
    public static EqtMessage TCMUI_FileFilterExecutableFiles { get; }
    public static EqtMessage TCMUI_FileFilterLibraryFiles { get; }
    public static EqtMessage TCMUI_FileFilterXmlFiles { get; }
    public static EqtMessage TCMUI_FileFilterCoverageFiles { get; }
    public static EqtMessage TCMUI_FileFilterResultFiles { get; }
    public static EqtMessage TCMUI_FileFilterRunConfigFiles { get; }
    public static EqtMessage TCMUI_FileFilterKeyFiles { get; }
    public static EqtMessage TCMUI_FileFilterMetadataFiles { get; }
    public static EqtMessage ManualTest_CommentsHeader { get; }
    public static EqtMessage DescriptionLabel_MoreAbout { get; }
    public static EqtMessage RunConfig_HelpPanel { get; }
    public static EqtMessage RunConfig_BrowseItem { get; }
    public static EqtMessage RunConfig_Modified { get; }
    public static EqtMessage RunConfig_BrowseForRunConfig { get; }
    public static EqtMessage RunConfig_ExecutionAgentsControlText { get; }
    public static EqtMessage RunConfig_ExecutionAgentsDescription { get; }
    public static EqtMessage RunConfig_NewCollectionSetName { get; }
    public static EqtMessage RunConfig_CollectionOnlyAgentsControlText { get; }
    public static EqtMessage RunConfig_CollectionOnlyAgentsDescription { get; }
    public static EqtMessage RunConfig_GeneralInfoControlText { get; }
    public static EqtMessage RunConfig_GeneralInfoDescription { get; }
    public static EqtMessage RunConfig_TestResultsControlText { get; }
    public static EqtMessage RunConfig_TestResultsDescription { get; }
    public static EqtMessage RunConfig_MachineConfigControlText { get; }
    public static EqtMessage RunConfig_MachineConfigDescription { get; }
    public static EqtMessage RunConfig_CodeCoverageControlText { get; }
    public static EqtMessage RunConfig_CodeCoverageDescription { get; }
    public static EqtMessage RunConfig_DeploymentControlText { get; }
    public static EqtMessage RunConfig_DeploymentDescription { get; }
    public static EqtMessage RunConfig_ScriptsControlText { get; }
    public static EqtMessage RunConfig_ScriptsDescription { get; }
    public static EqtMessage RunConfig_TimeoutControlText { get; }
    public static EqtMessage RunConfig_CleanupScriptPath { get; }
    public static EqtMessage RunConfig_SetupScriptPath { get; }
    public static EqtMessage RunConfig_BrowseForCleanupScript { get; }
    public static EqtMessage RunConfig_BrowseForSetupScript { get; }
    public static EqtMessage RunConfig_TimeoutDescription { get; }
    public static EqtMessage RunConfig_AddDeploymentFileDialogCaption { get; }
    public static EqtMessage RunConfig_AddDeploymentDirDialogCaption { get; }
    public static EqtMessage RunConfig_SelectDeploymentDirDialogCaption { get; }
    public static EqtMessage RunConfig_QuestionSpecifiedRemoteRunOnLocalMachine { get; }
    public static EqtMessage UnitTestConfigControl_IncludeFoldersColumnHeader { get; }
    public static EqtMessage UnitTestConfigControl_PathColumnHeader { get; }
    public static EqtMessage UnitTestConfigControl_AddFolderColumnHeader { get; }
    public static EqtMessage UnitTestConfigControl_UseLoadContextColumnHeader { get; }
    public static EqtMessage UnitTestConfigControl_TestDirectoryUseLoadContextLabel { get; }
    public static EqtMessage UnitTestConfigControl_BrowseButtonText { get; }
    public static EqtMessage UnitTestConfigControl_RemoveButtonToolTip { get; }
    public static EqtMessage UnitTestConfigControl_AppRootFolderLabel { get; }
    public static EqtMessage UnitTestConfigControl_RuntimeFoldersLabel { get; }
    public static EqtMessage UnitTestConfigControl_DesigntimeFolderLabel { get; }
    public static EqtMessage UnitTestConfigControl_Description { get; }
    public static EqtMessage RunConfig_InvalidRunTimeout { get; }
    public static EqtMessage RunConfig_InvalidTestTimeout { get; }
    public static ResXFileRef RunConfig_WebSiteBitmap { get; }
    public static ResXFileRef RunConfig_WebSiteWithErrorBitmap { get; }
    public static ResXFileRef RunConfig_AddFolders { get; }
    public static ResXFileRef RunConfig_RemoveFolders { get; }
    public static Bitmap RunConfig_FolderBitmap { get; }
    public static ResXFileRef RunConfig_AssemblyBitmap { get; }
    public static ResXFileRef RunConfig_AssemblyWithErrorBitmap { get; }
    public static Icon TCMUI_TestListCheckedIcon { get; }
    public static Icon TCMUI_TestListDefaultStateIcon { get; }
    public static ResXFileRef TCMUI_AllTestsNode { get; }
    public static ResXFileRef TCMUI_CategorizedNode { get; }
    public static ResXFileRef TCMUI_UncategorizedNode { get; }
    public static Icon TCMUI_TestListPartiallyCheckedIcon { get; }
    public static EqtMessage TCMUI_TestRunQueueBranchTestRunID { get; }
    public static EqtMessage TCMUI_TestRunQueueBranchTestRunName { get; }
    public static EqtMessage TCMUI_TestRunQueueBranchTestRunOwner { get; }
    public static EqtMessage TCMUI_TestRunQueueBranchTestRunStatus { get; }
    public static EqtMessage TCMUI_TestRunQueueBranchTestRunActive { get; }
    public static EqtMessage TCMUI_TestRunQueueBranchTestRunPosition { get; }
    public static EqtMessage TCMUI_TestRunQueueStatusConnecting { get; }
    public static EqtMessage TCMUI_TestRunQueueActiveRuns { get; }
    public static EqtMessage TCMUI_TestRunQueueAllRuns { get; }
    public static EqtMessage TCMUI_TestRunQueueCompletedRuns { get; }
    public static EqtMessage TCMUI_TestRunQueueInActiveRuns { get; }
    public static EqtMessage TCMUI_TestRunQueueToolWindowCaption { get; }
    public static EqtMessage TCMUI_TestRunQueueLocalRemoteSelection { get; }
    public static EqtMessage TCMUI_TestRunQueueLocalResultsBrowseCaption { get; }
    public static int TCMUI_GroupingTree_MinColumnWidth { get; }
    public static EqtMessage Tuip_UnitTestDataDrivenRowResultsAreaCaption { get; }
    public static int Common_StandardButtonWidth { get; }
    public static int Common_ShortButtonWidth { get; }
    public static int Common_ButtonHeight { get; }
    public static EqtMessage Common_ShortBrowseButtonText { get; }
    public static EqtMessage Common_None { get; }
    public static EqtMessage Common_StatusPaused { get; }
    public static EqtMessage Common_StatusNotStarted { get; }
    public static EqtMessage Common_StatusCleaningUp { get; }
    public static EqtMessage Common_StatusDeploying { get; }
    public static EqtMessage Common_StatusInProgress { get; }
    public static EqtMessage Common_StatusPausing { get; }
    public static EqtMessage Common_StatusUnknown { get; }
    public static EqtMessage Common_StatusStopping { get; }
    public static EqtMessage Common_StatusCompleted { get; }
    public static EqtMessage Common_StatusQueued { get; }
    public static EqtMessage Common_StatusAbort { get; }
    public static EqtMessage Common_StatusWaitingForSyncCall { get; }
    public static EqtMessage Common_StatusDisconnected { get; }
    public static EqtMessage Common_Infinite { get; }
    public static EqtMessage Common_NotSet { get; }
    public static EqtMessage Common_HostType { get; }
    public static EqtMessage Common_HostData { get; }
    public static EqtMessage Common_HostType_PropertyDescription { get; }
    public static EqtMessage Common_HostData_PropertyDescription { get; }
    public static EqtMessage TE_EmptyGroupValue { get; }
    public static EqtMessage TE_AddTestListCaption { get; }
    public static EqtMessage TE_EditTestListCaption { get; }
    public static EqtMessage TE_NoVisibleItemsStart { get; }
    public static EqtMessage TE_NoVisibleItemsLink { get; }
    public static EqtMessage TE_NoVisibleItemsEnd { get; }
    public static EqtMessage Common_OK { get; }
    public static EqtMessage Common_Cancel { get; }
    public static EqtMessage Common_SaveAs { get; }
    public static EqtMessage Common_Remove { get; }
    public static EqtMessage Common_Browse { get; }
    public static EqtMessage Common_BrowseCaption { get; }
    public static EqtMessage Common_SaveAsCaption { get; }
    public static EqtMessage Common_UnknownTest { get; }
    public static EqtMessage TS_UncategorizedTests { get; }
    public static EqtMessage TS_UncategorizedResults { get; }
    public static EqtMessage TS_TestLists { get; }
    public static EqtMessage TS_ResultLists { get; }
    public static EqtMessage TS_AllTests { get; }
    public static EqtMessage TS_AllResults { get; }
    public static EqtMessage TestList_Name { get; }
    public static EqtMessage TestList_FullName { get; }
    public static EqtMessage TestElement_Name { get; }
    public static EqtMessage TestElement_HumanReadableId { get; }
    public static EqtMessage TestElement_DeploymentItems { get; }
    public static EqtMessage TestElement_Priority { get; }
    public static EqtMessage TestElement_TestCategory { get; }
    public static EqtMessage TestElement_Timeout { get; }
    public static EqtMessage TestElement_AgentRestrictions { get; }
    public static EqtMessage TestElement_Enabled { get; }
    public static EqtMessage TestElement_IsRunnable { get; }
    public static EqtMessage TestElement_Description { get; }
    public static EqtMessage TestElement_ErrorMessageForNonRunnable { get; }
    public static EqtMessage TestElement_ProjectRelativePath { get; }
    public static EqtMessage TestElement_Owner { get; }
    public static EqtMessage TestElement_Revision { get; }
    public static EqtMessage TestElement_Storage { get; }
    public static EqtMessage TestElement_SolutionName { get; }
    public static EqtMessage TestElement_ProjectName { get; }
    public static EqtMessage TestElement_TestType { get; }
    public static EqtMessage TestElement_CssProjectStructure { get; }
    public static EqtMessage TestElement_CssIteration { get; }
    public static EqtMessage TestResultAggregation_FailedCount { get; }
    public static EqtMessage TestElement_WorkitemAssociations { get; }
    public static EqtMessage TestElement_Name_PropertyDescription { get; }
    public static EqtMessage TestElement_HumanReadableId_PropertyDescription { get; }
    public static EqtMessage TestElement_Description_PropertyDescription { get; }
    public static EqtMessage TestElement_Owner_PropertyDescription { get; }
    public static EqtMessage TestElement_Storage_PropertyDescription { get; }
    public static EqtMessage TestElement_SolutionName_PropertyDescription { get; }
    public static EqtMessage TestElement_ProjectName_PropertyDescription { get; }
    public static EqtMessage TestElement_ProjectRelativePath_PropertyDescription { get; }
    public static EqtMessage TestElement_Enabled_PropertyDescription { get; }
    public static EqtMessage TestElement_DeploymentItems_PropertyDescription { get; }
    public static EqtMessage TestElement_Priority_PropertyDescription { get; }
    public static EqtMessage TestElement_TestCategory_PropertyDescription { get; }
    public static EqtMessage TestElement_Timeout_PropertyDescription { get; }
    public static EqtMessage TestElement_AgentRestrictions_PropertyDescription { get; }
    public static EqtMessage TestElement_TestType_PropertyDescription { get; }
    public static EqtMessage TestElement_ErrorMessageForNonRunnable_PropertyDescription { get; }
    public static EqtMessage TestElement_CssProjectStructure_PropertyDescription { get; }
    public static EqtMessage TestElement_CssIteration_PropertyDescription { get; }
    public static EqtMessage TestElement_WorkitemAssociations_PropertyDescription { get; }
    public static EqtMessage TestResultMessage_ComputerName { get; }
    public static EqtMessage TestResultMessage_TestName { get; }
    public static EqtMessage TestResultMessage_TestType { get; }
    public static EqtMessage TestResultMessage_Duration { get; }
    public static EqtMessage TestResultMessage_StartTime { get; }
    public static EqtMessage TestResultMessage_EndTime { get; }
    public static EqtMessage TestResultMessage_Storage { get; }
    public static EqtMessage TestResult_Outcome { get; }
    public static EqtMessage TestResult_StdOut { get; }
    public static EqtMessage TestResult_StdErr { get; }
    public static EqtMessage TestResult_DebugTrace { get; }
    public static EqtMessage TestResult_ErrorMessage { get; }
    public static EqtMessage TestResult_ErrorStackTrace { get; }
    public static EqtMessage TestResult_TraceInfo { get; }
    public static EqtMessage TestSettings_HostProcessPlatform_Label { get; }
    public static EqtMessage TestSettings_HostProcessPlatform_X86 { get; }
    public static EqtMessage TestSettings_HostProcessPlatform_MSIL { get; }
    public static EqtMessage UnitTest_FullyQualifiedClassName { get; }
    public static EqtMessage UnitTest_ClassName { get; }
    public static EqtMessage UnitTest_Namespace { get; }
    public static EqtMessage UnitTest_TestMethod { get; }
    public static EqtMessage UnitTest_DataAccessMethod { get; }
    public static EqtMessage UnitTest_DataAccessMethodRandom { get; }
    public static EqtMessage UnitTest_DataAccessMethodSequential { get; }
    public static EqtMessage UnitTest_DataConnectionString { get; }
    public static EqtMessage UnitTest_DataTableName { get; }
    public static EqtMessage UnitTest_DataProviderName { get; }
    public static EqtMessage UnitTest_FullyQualifiedClassName_PropertyDescription { get; }
    public static EqtMessage UnitTest_ClassName_PropertyDescription { get; }
    public static EqtMessage UnitTest_Namespace_PropertyDescription { get; }
    public static EqtMessage UnitTest_DataConnectionString_PropertyDescription { get; }
    public static EqtMessage UnitTest_DataProviderName_PropertyDescription { get; }
    public static EqtMessage UnitTest_DataTableName_PropertyDescription { get; }
    public static EqtMessage UnitTest_DataAccessMethod_PropertyDescription { get; }
    public static EqtMessage UnitTest_ExtensionTypeName { get; }
    public static EqtMessage UnitTest_ExtensionTypeName_Description { get; }
    public static EqtMessage UnitTestResult_DataRowInfo { get; }
    public static EqtMessage CodeCov_JumpToCodePassedTheEndOfDocument { get; }
    public static ResXFileRef CodeCov_StatisticsTree { get; }
    public static EqtMessage CodeCov_SeeLinesData { get; }
    public static EqtMessage DontAsk_DefaultTitle { get; }
    public static EqtMessage DontAsk_DefaultText { get; }
    public static EqtMessage ButtonText_None { get; }
    public static EqtMessage ButtonText_OK { get; }
    public static EqtMessage ButtonText_Cancel { get; }
    public static EqtMessage ButtonText_Abort { get; }
    public static EqtMessage ButtonText_Retry { get; }
    public static EqtMessage ButtonText_Ignore { get; }
    public static EqtMessage ButtonText_Yes { get; }
    public static EqtMessage ButtonText_No { get; }
    public static EqtMessage ButtonText_Delete { get; }
    public static EqtMessage ButtonText_Remove { get; }
    public static EqtMessage ButtonText_SearchForResults { get; }
    public static EqtMessage TestProject_CSharp { get; }
    public static EqtMessage TestProject_VB { get; }
    public static EqtMessage TestProject_Cpp { get; }
    public static EqtMessage TestProject_NoLanguage { get; }
    public static EqtMessage GenericTest_FileName { get; }
    public static EqtMessage GenericTest_SelectTargetProgram { get; }
    public static EqtMessage GenericTest_Arguments { get; }
    public static EqtMessage GenericTest_Use_SummaryXmlFile { get; }
    public static EqtMessage GenericTest_SummaryXmlFileName { get; }
    public static EqtMessage GenericTest_RedirectStandardOutputAndError { get; }
    public static EqtMessage GenericTest_MaximumDuration { get; }
    public static EqtMessage GenericTest_WorkingDirectory { get; }
    public static EqtMessage GenericTest_EnvironmentVariables { get; }
    public static EqtMessage GenericTest_FileName_PropertyDescription { get; }
    public static EqtMessage GenericTest_Arguments_PropertyDescription { get; }
    public static EqtMessage GenericTest_SummaryXmlFileName_PropertyDescription { get; }
    public static EqtMessage GenericTest_Use_SummaryXmlFile_PropertyDescription { get; }
    public static EqtMessage GenericTest_RedirectStandardOutputAndError_PropertyDescription { get; }
    public static EqtMessage GenericTest_MaximumDuration_PropertyDescription { get; }
    public static EqtMessage GenericTest_WorkingDirectory_PropertyDescription { get; }
    public static EqtMessage GenericTest_EnvironmentVariables_PropertyDescription { get; }
    public static EqtMessage GenericTestResult_ProcessExitCode { get; }
    public static EqtMessage GenericTestResult_IsAborted { get; }
    public static EqtMessage GenericTest_SelectWorkingDir { get; }
    public static EqtMessage OrderedTest_ContinueAfterFailure { get; }
    public static EqtMessage OrderedTest_ContinueAfterFailure_PropertyDescription { get; }
    public static EqtMessage OrderedTest_WarningForMsTestV2Tests { get; }
    public static ResXFileRef TestPicker_DownIcon { get; }
    public static ResXFileRef TestPicker_LeftIcon { get; }
    public static ResXFileRef TestPicker_RightIcon { get; }
    public static ResXFileRef TestPicker_UpIcon { get; }
    public static ResXFileRef TestPicker_X_Icon { get; }
    public static EqtMessage TestPicker_TestReceiverLabel { get; }
    public static EqtMessage TestPicker_TestReceiverAccName { get; }
    public static EqtMessage TestPicker_TestSelectorLabel { get; }
    public static EqtMessage TestPicker_TestSelectorAccName { get; }
    public static EqtMessage TestPicker_TestListSelectorLabel { get; }
    public static EqtMessage TestPicker_TestListSortAscending { get; }
    public static EqtMessage TestPicker_TestListSortDescending { get; }
    public static EqtMessage TestPicker_TestProjectSelectorLabel { get; }
    public static EqtMessage TestPicker_TestProjectSelectorAllTestsItem { get; }
    public static EqtMessage TestPicker_TestListSelectorAccName { get; }
    public static EqtMessage OrderedTestUI_ContinueAfterFailure { get; }
    public static EqtMessage ProjectComboBox_CreateNewProject { get; }
    public static EqtMessage TCMUI_TestGenerationProgress { get; }
    public static EqtMessage TCMUI_RunPublishInProgress { get; }
    public static EqtMessage TCMUI_RunPublishCompleted { get; }
    public static EqtMessage TCMUI_RunPublishFailed { get; }
    public static EqtMessage TCMUI_PublishAbortPrompt { get; }
    public static EqtMessage UnitTestPolicy_Type { get; }
    public static EqtMessage UnitTestPolicy_TypeDescription { get; }
    public static EqtMessage UnitTestPolicy_TestListSeparator { get; }
    public static EqtMessage UnitTestPolicy_TrxFilter { get; }
    public static EqtMessage UnitTestPolicy_TrxPromptTitle { get; }
    public static EqtMessage UnitTestPolicy_InvalidInput { get; }
    public static EqtMessage UnitTestPolicy_MetaDataFileListNotFoundSeparator { get; }
    public static EqtMessage UnitTestPolicy_WarningMessageCaption { get; }
    public static EqtMessage UnitTestPolicy_ZeroTestLists { get; }
    public static EqtMessage FindLinkHelperDialog_Caption { get; }
    public static EqtMessage DialogHelper_Test { get; }
    public static EqtMessage DialogHelper_RunConfig { get; }
    public static EqtMessage DialogHelper_TestList { get; }
    public static EqtMessage FindLinkHelperDialog_Retry_Text { get; }
    public static EqtMessage FindLinkHelperDialog_Ignore_Text { get; }
    public static EqtMessage FindLinkHelperDialog_Abort_Text { get; }
    public static EqtMessage FindLinkHelperFileOpen_Title { get; }
    public static EqtMessage TE_OpenMetaDataFileTitle { get; }
    public static EqtMessage TE_ImportMetaDataFileTitle { get; }
    public static EqtMessage ImportMetadataDialog_Caption { get; }
    public static EqtMessage ImportMetadataDialog_Abort_Text { get; }
    public static EqtMessage ImportMetadataDialog_Retry_Text { get; }
    public static EqtMessage ImportMetadataDialog_Ignore_Text { get; }
    public static EqtMessage IdCollisionDialog_Ignore_Text { get; }
    public static EqtMessage IdCollisionDialog_Retry_Text { get; }
    public static EqtMessage IdCollisionDialog_Abort_Text { get; }
    public static EqtMessage TestIdCollisionDialog_Retry_Text { get; }
    public static EqtMessage TestIdCollisionDialog_Abort_Text { get; }
    public static EqtMessage CatIdCollisionDialog_Yes_Text { get; }
    public static EqtMessage CatRunConfigCollisionDialog_NullRunConfig { get; }
    public static EqtMessage RunConfig_HostSelectionControlText { get; }
    public static EqtMessage RunConfig_HostSelectionDescription { get; }
    public static EqtMessage RunConfig_HostSelectionDefault { get; }
    public static EqtMessage RunConfig_LoadTestSettingsControlText { get; }
    public static EqtMessage RunConfig_LoadTestSettingsDescription { get; }
    public static EqtMessage RunConfig_AspNetHostDescription { get; }
    public static EqtMessage RunConfig_AspNetNoWebServerSelected { get; }
    public static EqtMessage RunConfig_AspNetNoPathToWeb { get; }
    public static EqtMessage TCMUI_ToolsOptionsSelectWebAppRootDir { get; }
    public static EqtMessage TCMUI_ToolsOptions_RestartNeeded { get; }
    public static EqtMessage NewDataSourceWizardTitle { get; }
    public static EqtMessage DataSourceTypePageDuplicateName { get; }
    public static EqtMessage DataSourceTypePageNoneSelected { get; }
    public static EqtMessage DataSourceTypePageCsvSelected { get; }
    public static EqtMessage DataSourceTypePageXmlSelected { get; }
    public static EqtMessage DataSourceTypePageDatabaseSelected { get; }
    public static EqtMessage DataSourceTypePageLinkText { get; }
    public static EqtMessage DataSourceTypePageTitle { get; }
    public static EqtMessage DataSourceCsvSelectionPageLinkText { get; }
    public static EqtMessage DataSourceCsvSelectionPageTitle { get; }
    public static EqtMessage DataSourceXmlSelectionPageLinkText { get; }
    public static EqtMessage DataSourceXmlSelectionPageTitle { get; }
    public static EqtMessage DataSourceConnectionPageLinkText { get; }
    public static EqtMessage DataSourceConnectionPageTitle { get; }
    public static EqtMessage DataSourceTablesPageLinkText { get; }
    public static EqtMessage DataSourceTablesPageTitle { get; }
    public static EqtMessage DataSourcePreview { get; }
    public static EqtMessage DataSourcePreviewSortAscending { get; }
    public static EqtMessage DataSourcePreviewSortDescending { get; }
    public static EqtMessage SecureConnectStringWarning { get; }
    public static EqtMessage DataSourceNameCannotBeBlank { get; }
    public static ResXFileRef DataSourceWizardBitmap { get; }
    public static EqtMessage DataSourceOverwriteExisting { get; }
    public static EqtMessage DataSourceCopyIntoProject { get; }
    public static EqtMessage DataSourceCannotReadTables { get; }
    public static EqtMessage TestGeneration_AssemblyLoadFailed { get; }
    public static EqtMessage TestGeneration_TestReferencesFolderName { get; }
    public static EqtMessage TestGeneration_InvalidFilenameFormat { get; }
    public static EqtMessage TestGeneration_InvalidClassnameFormat { get; }
    public static EqtMessage TestGeneration_InvalidMethodnameFormat { get; }
    public static EqtMessage TestGeneration_InvalidFormat { get; }
    public static EqtMessage TestGeneration_NoVisibleClasses { get; }
    public static EqtMessage TestGeneration_NullNamespace { get; }
    public static EqtMessage TestGeneration_InternalsVisibleToPrompt_None { get; }
    public static EqtMessage TestGeneration_InternalsVisibleToPrompt_Yes { get; }
    public static EqtMessage TestGeneration_InternalsVisibleToPrompt_No { get; }
    public static EqtMessage TestGeneration_InternalsVisibleToPrompt_Name { get; }
    public static EqtMessage TestGeneration_InternalsVisibleToPrompt_Title { get; }
    public static EqtMessage TestGeneration_AddAssemblyDialogTitle { get; }
    public static EqtMessage TestGeneration_AddAssemblyFileFilter { get; }
    public static EqtMessage TestGeneration_DestinationSourceFileExists { get; }
    public static EqtMessage TestGeneration_DestinationFilenameTooLong { get; }
    public static EqtMessage TestGeneration_GenerationErrorsOccurred { get; }
    public static EqtMessage TestGeneration_PrivateAccessorsForDevicesUnsupported { get; }
    public static EqtMessage TestGeneration_PrivateAccessorsForDevicesUnsupportedInconclusiveMessage { get; }
    public static EqtMessage TestGeneration_GenerationCompletedMessageCompleteFailure { get; }
    public static EqtMessage TestGeneration_CreateUnitTestDialogFailure { get; }
    public static EqtMessage TestGeneration_GeneratingTests { get; }
    public static EqtMessage RigAdmin_AllUnassignedNics { get; }
    public static EqtMessage GenericTest_EnterFilePrompt { get; }
    public static EqtMessage DataSourceType_CSV { get; }
    public static EqtMessage DataSourceType_Database { get; }
    public static EqtMessage DataSourceType_XML { get; }
    public static EqtMessage RunConfig_DataCollectorsCaptionText { get; }
    public static EqtMessage RunConfig_DataCollectorsDescriptionText { get; }
    public static EqtMessage RunConfig_RolesCaptionText { get; }
    public static EqtMessage RunConfig_RolesDescriptionText { get; }
    public static ResXFileRef ConfigsettingsAgent_24Bit { get; }
    public static ResXFileRef ConfigsettingsRoles_24Bit { get; }
    public static ResXFileRef ConfigsettingsStatus_24Bit { get; }
    public static ResXFileRef DataDiagconfig { get; }
    public static EqtMessage UnitTestPolicy_Description_IncompatiblePolicy { get; }
    public static EqtMessage UnitTestPolicy_Edit_IncompatiblePolicy { get; }
    public static EqtMessage ArgumentExceptionMessage { get; }
    public static EqtMessage CodeCov_ProcessingCoverageInfoMessage { get; }
    private static UIResources();
    public static EqtMessage get_TestSKU_ProductName();
    public static EqtMessage get_TestSKU_ProductDetails();
    public static EqtMessage get_TestSKU_ShortProductName();
    public static EqtMessage get_TCMUI_ErrorColumnHeader();
    public static EqtMessage get_TCMUI_TestViewToolWindowCaption();
    public static EqtMessage get_TCMUI_GroupNoneString();
    public static EqtMessage TCMUI_GroupHeader(object param0, object param1);
    public static EqtMessage get_TCMUI_AllColumnsFilter();
    public static EqtMessage get_TCMUI_FilterTypeKeyword();
    public static EqtMessage get_TCMUI_FilterClear();
    public static EqtMessage get_TCMUI_FilterInfoText();
    public static EqtMessage get_TCMUI_LastRun();
    public static EqtMessage get_TCMUI_MessageRunning();
    public static EqtMessage get_TCMUI_MessageRunNotStarted();
    public static EqtMessage get_TCMUI_DotDotDot();
    public static EqtMessage get_TCMUI_DeleteUserPrompt();
    public static EqtMessage get_TCMUI_DeleteTestTitle();
    public static EqtMessage TCMUI_RemoveDeleteSingleTest(object param0, object param1);
    public static EqtMessage get_TCMUI_RemoveDeleteMultipleTests();
    public static EqtMessage TCMUI_PermanentlyDeleteSingleTest(object param0);
    public static EqtMessage get_TCMUI_PermanentlyDeleteMultipleTests();
    public static EqtMessage get_TCMUI_DeleteListUserPrompt();
    public static EqtMessage get_TCMUI_ConfirmExcludeFromGroupText();
    public static EqtMessage get_TCMUI_ResultColumnHeader();
    public static EqtMessage get_TCMUI_ResultSummary();
    public static EqtMessage get_TCMUI_ResultsToolWindowCaption();
    public static EqtMessage get_TCMUI_RunDetailsToolWindowCaption();
    public static EqtMessage TCMUI_DeleteOldRunsText(object param0);
    public static EqtMessage get_TCMUI_TestManagerToolWindowCaption();
    public static EqtMessage get_TCMUI_TestRunErrors();
    public static EqtMessage TCMUI_SelectedItems(object param0);
    public static EqtMessage TCMUI_TestGroupByStatus(object param0);
    public static EqtMessage TCMUI_TestStatusBarFormatString(object param0, object param1, object param2);
    public static EqtMessage get_TCMUI_TestListEditorDeprecated();
    public static EqtMessage get_TCMUI_ClickHere();
    public static EqtMessage get_TCMUI_TestsDirtyIndication();
    public static EqtMessage TCMUI_TestPickerSelectedTests(object param0);
    public static EqtMessage get_TCMUI_CategoryTreeControlComboBox_AccessibilityName();
    public static EqtMessage get_TCMUI_CategoryTreeControlComboBoxDropDown_AccessibilityName();
    public static EqtMessage get_TCMUI_TestReceiver_UpButton_AccessibilityName();
    public static EqtMessage get_TCMUI_TestReceiver_DownButton_AccessibilityName();
    public static EqtMessage get_TCMUI_TestReceiver_LeftButton_AccessibilityName();
    public static EqtMessage get_TCMUI_TestReceiver_RightButton_AccessibilityName();
    public static EqtMessage get_TCMUI_ExplorerCategoriesPaneAccessibleName();
    public static EqtMessage get_TCMUI_ExplorerItemsPaneAccessibleName();
    public static EqtMessage get_TCMUI_LoadingPleaseWait();
    public static ImageListStreamer get_TCMUI_StatusIcons();
    public static ResXFileRef get_TCMUI_OutcomeIcons();
    public static EqtMessage get_TCMUI_TCNameColumnHeader();
    public static EqtMessage TCMUI_PublishRollup(object param0, object param1, object param2);
    public static EqtMessage get_TCMUI_NoPublishRollup();
    public static EqtMessage TCMUI_TestResultDetailsSummaryMessage(object param0, object param1, object param2);
    public static EqtMessage TCMUI_TestResultsSummaryLine(object param0, object param1, object param2, object param3, object param4);
    public static EqtMessage get_TCMUI_TestResultAllRuns();
    public static EqtMessage get_TCMUI_TestResultManageTestRuns();
    public static EqtMessage TCMUI_TestResultsAdditionalRunDetailsHeader(object param0);
    public static EqtMessage TCMUI_NoTestResultsAdditionalRunDetails(object param0);
    public static EqtMessage get_TCMUI_RunResultsLink();
    public static EqtMessage get_TCMUI_DebugResultsLink();
    public static EqtMessage get_TCMUI_PendingManualTestLink();
    public static EqtMessage get_TCMUI_LoadResultDlgTitle();
    public static EqtMessage TCMUI_SaveRunDlgTitle(object param0);
    public static EqtMessage get_TCMUI_SaveResultsDlgTitle();
    public static EqtMessage TCMUI_ResultTestRunRollupStatus(object param0);
    public static EqtMessage TCMUI_ResultGroupByStatus(object param0);
    public static EqtMessage TCMUI_ResultTestRunRollupDetails(object param0, object param1, object param2);
    public static EqtMessage get_TCMUI_ResultRollupSeparator();
    public static EqtMessage TCMUI_ResultAllRunRollup(object param0, object param1, object param2, object param3, object param4, object param5);
    public static EqtMessage get_TCMUI_TestRunPausing();
    public static EqtMessage get_TCMUI_TestRunPaused();
    public static EqtMessage get_TCMUI_TestRunResuming();
    public static EqtMessage get_TCMUI_TestRunStopping();
    public static EqtMessage get_TCMUI_TestRunAborting();
    public static EqtMessage get_TCMUI_TestRunCompleting();
    public static EqtMessage get_TCMUI_ResultOpenTest();
    public static EqtMessage TCMUI_RunDetailsRollup(object param0, object param1, object param2, object param3);
    public static EqtMessage get_TCMUI_RunAlreadyLoaded();
    public static EqtMessage get_TCMUI_ConfirmDeleteRunText();
    public static EqtMessage get_TCMUI_ConfirmMultipleDeleteRunText();
    public static EqtMessage get_TCMUI_ConfirmDeletePublishedRunText();
    public static EqtMessage get_TCMUI_ConfirmCancelPublishRunText();
    public static Icon get_TCMUI_TestTypeDefaultIcon();
    public static ResXFileRef get_TCMUI_BrokenLinkIcon();
    public static ResXFileRef get_TCMUI_NonRunnableIcon();
    public static Bitmap get_TCMUI_TreeGroupToggle();
    public static EqtMessage get_TCMUI_AboutTestManager();
    public static Bitmap get_TCMUI_AboutTestManagerIcon();
    public static EqtMessage get_TCMUI_OrganizeTests();
    public static EqtMessage get_TCMUI_OrganizeTestsUrl();
    public static Bitmap get_TCMUI_OrganizeTestsIcon();
    public static EqtMessage get_TCMUI_LoadTests();
    public static Bitmap get_TCMUI_LoadTestsIcon();
    public static ResXFileRef get_TCMUI_ESB_Status();
    public static EqtMessage get_TCMUI_FileFilterAllFiles();
    public static EqtMessage get_TCMUI_FileFilterBinaryFiles();
    public static EqtMessage get_TCMUI_FileFilterExecutableFiles();
    public static EqtMessage get_TCMUI_FileFilterLibraryFiles();
    public static EqtMessage get_TCMUI_FileFilterXmlFiles();
    public static EqtMessage get_TCMUI_FileFilterCoverageFiles();
    public static EqtMessage get_TCMUI_FileFilterResultFiles();
    public static EqtMessage get_TCMUI_FileFilterRunConfigFiles();
    public static EqtMessage get_TCMUI_FileFilterKeyFiles();
    public static EqtMessage get_TCMUI_FileFilterMetadataFiles();
    public static EqtMessage ManualTest_ExecutionCaption(object param0);
    public static EqtMessage get_ManualTest_CommentsHeader();
    public static EqtMessage get_DescriptionLabel_MoreAbout();
    public static EqtMessage get_RunConfig_HelpPanel();
    public static EqtMessage RunConfig_MenuItem(object param0, object param1);
    public static EqtMessage get_RunConfig_BrowseItem();
    public static EqtMessage get_RunConfig_Modified();
    public static EqtMessage get_RunConfig_BrowseForRunConfig();
    public static EqtMessage get_RunConfig_ExecutionAgentsControlText();
    public static EqtMessage get_RunConfig_ExecutionAgentsDescription();
    public static EqtMessage get_RunConfig_NewCollectionSetName();
    public static EqtMessage get_RunConfig_CollectionOnlyAgentsControlText();
    public static EqtMessage get_RunConfig_CollectionOnlyAgentsDescription();
    public static EqtMessage get_RunConfig_GeneralInfoControlText();
    public static EqtMessage get_RunConfig_GeneralInfoDescription();
    public static EqtMessage get_RunConfig_TestResultsControlText();
    public static EqtMessage get_RunConfig_TestResultsDescription();
    public static EqtMessage get_RunConfig_MachineConfigControlText();
    public static EqtMessage get_RunConfig_MachineConfigDescription();
    public static EqtMessage get_RunConfig_CodeCoverageControlText();
    public static EqtMessage get_RunConfig_CodeCoverageDescription();
    public static EqtMessage get_RunConfig_DeploymentControlText();
    public static EqtMessage get_RunConfig_DeploymentDescription();
    public static EqtMessage get_RunConfig_ScriptsControlText();
    public static EqtMessage get_RunConfig_ScriptsDescription();
    public static EqtMessage get_RunConfig_TimeoutControlText();
    public static EqtMessage get_RunConfig_CleanupScriptPath();
    public static EqtMessage get_RunConfig_SetupScriptPath();
    public static EqtMessage get_RunConfig_BrowseForCleanupScript();
    public static EqtMessage get_RunConfig_BrowseForSetupScript();
    public static EqtMessage get_RunConfig_TimeoutDescription();
    public static EqtMessage get_RunConfig_AddDeploymentFileDialogCaption();
    public static EqtMessage get_RunConfig_AddDeploymentDirDialogCaption();
    public static EqtMessage get_RunConfig_SelectDeploymentDirDialogCaption();
    public static EqtMessage get_RunConfig_QuestionSpecifiedRemoteRunOnLocalMachine();
    public static EqtMessage get_UnitTestConfigControl_IncludeFoldersColumnHeader();
    public static EqtMessage get_UnitTestConfigControl_PathColumnHeader();
    public static EqtMessage get_UnitTestConfigControl_AddFolderColumnHeader();
    public static EqtMessage get_UnitTestConfigControl_UseLoadContextColumnHeader();
    public static EqtMessage get_UnitTestConfigControl_TestDirectoryUseLoadContextLabel();
    public static EqtMessage get_UnitTestConfigControl_BrowseButtonText();
    public static EqtMessage get_UnitTestConfigControl_RemoveButtonToolTip();
    public static EqtMessage get_UnitTestConfigControl_AppRootFolderLabel();
    public static EqtMessage get_UnitTestConfigControl_RuntimeFoldersLabel();
    public static EqtMessage get_UnitTestConfigControl_DesigntimeFolderLabel();
    public static EqtMessage get_UnitTestConfigControl_Description();
    public static EqtMessage get_RunConfig_InvalidRunTimeout();
    public static EqtMessage get_RunConfig_InvalidTestTimeout();
    public static ResXFileRef get_RunConfig_WebSiteBitmap();
    public static ResXFileRef get_RunConfig_WebSiteWithErrorBitmap();
    public static ResXFileRef get_RunConfig_AddFolders();
    public static ResXFileRef get_RunConfig_RemoveFolders();
    public static Bitmap get_RunConfig_FolderBitmap();
    public static ResXFileRef get_RunConfig_AssemblyBitmap();
    public static ResXFileRef get_RunConfig_AssemblyWithErrorBitmap();
    public static Icon get_TCMUI_TestListCheckedIcon();
    public static Icon get_TCMUI_TestListDefaultStateIcon();
    public static ResXFileRef get_TCMUI_AllTestsNode();
    public static ResXFileRef get_TCMUI_CategorizedNode();
    public static ResXFileRef get_TCMUI_UncategorizedNode();
    public static Icon get_TCMUI_TestListPartiallyCheckedIcon();
    public static EqtMessage get_TCMUI_TestRunQueueBranchTestRunID();
    public static EqtMessage get_TCMUI_TestRunQueueBranchTestRunName();
    public static EqtMessage get_TCMUI_TestRunQueueBranchTestRunOwner();
    public static EqtMessage get_TCMUI_TestRunQueueBranchTestRunStatus();
    public static EqtMessage get_TCMUI_TestRunQueueBranchTestRunActive();
    public static EqtMessage get_TCMUI_TestRunQueueBranchTestRunPosition();
    public static EqtMessage TCMUI_TestRunQueueRemoteConnectProgress(object param0);
    public static EqtMessage TCMUI_TestRunQueueBranchActiveRuns(object param0);
    public static EqtMessage TCMUI_TestRunQueueBranchInactiveRuns(object param0);
    public static EqtMessage TCMUI_TestRunQueueBranchCompletedRuns(object param0);
    public static EqtMessage TCMUI_TestRunQueueBranchCompletedRunsLocal(object param0, object param1);
    public static EqtMessage TCMUI_TestRunQueueStatusCompleted(object param0, object param1);
    public static EqtMessage get_TCMUI_TestRunQueueStatusConnecting();
    public static EqtMessage TCMUI_TestRunQueueStatusCompletedWithFailures(object param0, object param1, object param2);
    public static EqtMessage get_TCMUI_TestRunQueueActiveRuns();
    public static EqtMessage get_TCMUI_TestRunQueueAllRuns();
    public static EqtMessage get_TCMUI_TestRunQueueCompletedRuns();
    public static EqtMessage get_TCMUI_TestRunQueueInActiveRuns();
    public static EqtMessage get_TCMUI_TestRunQueueToolWindowCaption();
    public static EqtMessage get_TCMUI_TestRunQueueLocalRemoteSelection();
    public static EqtMessage get_TCMUI_TestRunQueueLocalResultsBrowseCaption();
    public static EqtMessage TCMUI_TestRunQueueControllerConnectionFailed(object param0, object param1);
    public static EqtMessage TCMUI_TestRunQueueDirectoryNotFound(object param0);
    public static int get_TCMUI_GroupingTree_MinColumnWidth();
    public static EqtMessage Tuip_UnitTestDataDrivenResultsAreaCaption(object param0, object param1);
    public static EqtMessage get_Tuip_UnitTestDataDrivenRowResultsAreaCaption();
    public static int get_Common_StandardButtonWidth();
    public static int get_Common_ShortButtonWidth();
    public static int get_Common_ButtonHeight();
    public static EqtMessage get_Common_ShortBrowseButtonText();
    public static EqtMessage get_Common_None();
    public static EqtMessage Common_Example(object param0);
    public static EqtMessage get_Common_StatusPaused();
    public static EqtMessage get_Common_StatusNotStarted();
    public static EqtMessage get_Common_StatusCleaningUp();
    public static EqtMessage get_Common_StatusDeploying();
    public static EqtMessage get_Common_StatusInProgress();
    public static EqtMessage get_Common_StatusPausing();
    public static EqtMessage get_Common_StatusUnknown();
    public static EqtMessage get_Common_StatusStopping();
    public static EqtMessage get_Common_StatusCompleted();
    public static EqtMessage get_Common_StatusQueued();
    public static EqtMessage get_Common_StatusAbort();
    public static EqtMessage get_Common_StatusWaitingForSyncCall();
    public static EqtMessage get_Common_StatusDisconnected();
    public static EqtMessage get_Common_Infinite();
    public static EqtMessage get_Common_NotSet();
    public static EqtMessage get_Common_HostType();
    public static EqtMessage get_Common_HostData();
    public static EqtMessage get_Common_HostType_PropertyDescription();
    public static EqtMessage get_Common_HostData_PropertyDescription();
    public static EqtMessage get_TE_EmptyGroupValue();
    public static EqtMessage TE_EmptyGroupName(object param0);
    public static EqtMessage get_TE_AddTestListCaption();
    public static EqtMessage get_TE_EditTestListCaption();
    public static EqtMessage get_TE_NoVisibleItemsStart();
    public static EqtMessage get_TE_NoVisibleItemsLink();
    public static EqtMessage get_TE_NoVisibleItemsEnd();
    public static EqtMessage get_Common_OK();
    public static EqtMessage get_Common_Cancel();
    public static EqtMessage get_Common_SaveAs();
    public static EqtMessage get_Common_Remove();
    public static EqtMessage get_Common_Browse();
    public static EqtMessage get_Common_BrowseCaption();
    public static EqtMessage get_Common_SaveAsCaption();
    public static EqtMessage get_Common_UnknownTest();
    public static EqtMessage TS_CheckedItems(object param0);
    public static EqtMessage get_TS_UncategorizedTests();
    public static EqtMessage get_TS_UncategorizedResults();
    public static EqtMessage get_TS_TestLists();
    public static EqtMessage get_TS_ResultLists();
    public static EqtMessage get_TS_AllTests();
    public static EqtMessage get_TS_AllResults();
    public static EqtMessage SI_CopyTestListName(object param0);
    public static EqtMessage SI_DuplicateRunConfig(object param0, object param1);
    public static EqtMessage SI_FailedToReplaceRunConfig(object param0, object param1);
    public static EqtMessage get_TestList_Name();
    public static EqtMessage get_TestList_FullName();
    public static EqtMessage get_TestElement_Name();
    public static EqtMessage get_TestElement_HumanReadableId();
    public static EqtMessage get_TestElement_DeploymentItems();
    public static EqtMessage get_TestElement_Priority();
    public static EqtMessage get_TestElement_TestCategory();
    public static EqtMessage get_TestElement_Timeout();
    public static EqtMessage get_TestElement_AgentRestrictions();
    public static EqtMessage get_TestElement_Enabled();
    public static EqtMessage get_TestElement_IsRunnable();
    public static EqtMessage get_TestElement_Description();
    public static EqtMessage get_TestElement_ErrorMessageForNonRunnable();
    public static EqtMessage get_TestElement_ProjectRelativePath();
    public static EqtMessage get_TestElement_Owner();
    public static EqtMessage get_TestElement_Revision();
    public static EqtMessage get_TestElement_Storage();
    public static EqtMessage get_TestElement_SolutionName();
    public static EqtMessage get_TestElement_ProjectName();
    public static EqtMessage get_TestElement_TestType();
    public static EqtMessage get_TestElement_CssProjectStructure();
    public static EqtMessage get_TestElement_CssIteration();
    public static EqtMessage get_TestResultAggregation_FailedCount();
    public static EqtMessage get_TestElement_WorkitemAssociations();
    public static EqtMessage get_TestElement_Name_PropertyDescription();
    public static EqtMessage get_TestElement_HumanReadableId_PropertyDescription();
    public static EqtMessage get_TestElement_Description_PropertyDescription();
    public static EqtMessage get_TestElement_Owner_PropertyDescription();
    public static EqtMessage get_TestElement_Storage_PropertyDescription();
    public static EqtMessage get_TestElement_SolutionName_PropertyDescription();
    public static EqtMessage get_TestElement_ProjectName_PropertyDescription();
    public static EqtMessage get_TestElement_ProjectRelativePath_PropertyDescription();
    public static EqtMessage get_TestElement_Enabled_PropertyDescription();
    public static EqtMessage get_TestElement_DeploymentItems_PropertyDescription();
    public static EqtMessage get_TestElement_Priority_PropertyDescription();
    public static EqtMessage get_TestElement_TestCategory_PropertyDescription();
    public static EqtMessage get_TestElement_Timeout_PropertyDescription();
    public static EqtMessage get_TestElement_AgentRestrictions_PropertyDescription();
    public static EqtMessage get_TestElement_TestType_PropertyDescription();
    public static EqtMessage get_TestElement_ErrorMessageForNonRunnable_PropertyDescription();
    public static EqtMessage get_TestElement_CssProjectStructure_PropertyDescription();
    public static EqtMessage get_TestElement_CssIteration_PropertyDescription();
    public static EqtMessage get_TestElement_WorkitemAssociations_PropertyDescription();
    public static EqtMessage get_TestResultMessage_ComputerName();
    public static EqtMessage get_TestResultMessage_TestName();
    public static EqtMessage get_TestResultMessage_TestType();
    public static EqtMessage get_TestResultMessage_Duration();
    public static EqtMessage get_TestResultMessage_StartTime();
    public static EqtMessage get_TestResultMessage_EndTime();
    public static EqtMessage get_TestResultMessage_Storage();
    public static EqtMessage get_TestResult_Outcome();
    public static EqtMessage get_TestResult_StdOut();
    public static EqtMessage get_TestResult_StdErr();
    public static EqtMessage get_TestResult_DebugTrace();
    public static EqtMessage get_TestResult_ErrorMessage();
    public static EqtMessage get_TestResult_ErrorStackTrace();
    public static EqtMessage get_TestResult_TraceInfo();
    public static EqtMessage get_TestSettings_HostProcessPlatform_Label();
    public static EqtMessage get_TestSettings_HostProcessPlatform_X86();
    public static EqtMessage get_TestSettings_HostProcessPlatform_MSIL();
    public static EqtMessage get_UnitTest_FullyQualifiedClassName();
    public static EqtMessage get_UnitTest_ClassName();
    public static EqtMessage get_UnitTest_Namespace();
    public static EqtMessage get_UnitTest_TestMethod();
    public static EqtMessage get_UnitTest_DataAccessMethod();
    public static EqtMessage get_UnitTest_DataAccessMethodRandom();
    public static EqtMessage get_UnitTest_DataAccessMethodSequential();
    public static EqtMessage get_UnitTest_DataConnectionString();
    public static EqtMessage get_UnitTest_DataTableName();
    public static EqtMessage get_UnitTest_DataProviderName();
    public static EqtMessage get_UnitTest_FullyQualifiedClassName_PropertyDescription();
    public static EqtMessage get_UnitTest_ClassName_PropertyDescription();
    public static EqtMessage get_UnitTest_Namespace_PropertyDescription();
    public static EqtMessage get_UnitTest_DataConnectionString_PropertyDescription();
    public static EqtMessage get_UnitTest_DataProviderName_PropertyDescription();
    public static EqtMessage get_UnitTest_DataTableName_PropertyDescription();
    public static EqtMessage get_UnitTest_DataAccessMethod_PropertyDescription();
    public static EqtMessage get_UnitTest_ExtensionTypeName();
    public static EqtMessage get_UnitTest_ExtensionTypeName_Description();
    public static EqtMessage get_UnitTestResult_DataRowInfo();
    public static EqtMessage UnitTestResult_ExtensionExpandexTitle(object param0);
    public static EqtMessage get_CodeCov_JumpToCodePassedTheEndOfDocument();
    public static ResXFileRef get_CodeCov_StatisticsTree();
    public static EqtMessage get_CodeCov_SeeLinesData();
    public static EqtMessage get_DontAsk_DefaultTitle();
    public static EqtMessage get_DontAsk_DefaultText();
    public static EqtMessage get_ButtonText_None();
    public static EqtMessage get_ButtonText_OK();
    public static EqtMessage get_ButtonText_Cancel();
    public static EqtMessage get_ButtonText_Abort();
    public static EqtMessage get_ButtonText_Retry();
    public static EqtMessage get_ButtonText_Ignore();
    public static EqtMessage get_ButtonText_Yes();
    public static EqtMessage get_ButtonText_No();
    public static EqtMessage get_ButtonText_Delete();
    public static EqtMessage get_ButtonText_Remove();
    public static EqtMessage get_ButtonText_SearchForResults();
    public static EqtMessage get_TestProject_CSharp();
    public static EqtMessage get_TestProject_VB();
    public static EqtMessage get_TestProject_Cpp();
    public static EqtMessage TestProject_DefaultTestName(object param0, object param1);
    public static EqtMessage get_TestProject_NoLanguage();
    public static EqtMessage get_GenericTest_FileName();
    public static EqtMessage get_GenericTest_SelectTargetProgram();
    public static EqtMessage get_GenericTest_Arguments();
    public static EqtMessage get_GenericTest_Use_SummaryXmlFile();
    public static EqtMessage get_GenericTest_SummaryXmlFileName();
    public static EqtMessage get_GenericTest_RedirectStandardOutputAndError();
    public static EqtMessage get_GenericTest_MaximumDuration();
    public static EqtMessage get_GenericTest_WorkingDirectory();
    public static EqtMessage get_GenericTest_EnvironmentVariables();
    public static EqtMessage get_GenericTest_FileName_PropertyDescription();
    public static EqtMessage get_GenericTest_Arguments_PropertyDescription();
    public static EqtMessage get_GenericTest_SummaryXmlFileName_PropertyDescription();
    public static EqtMessage get_GenericTest_Use_SummaryXmlFile_PropertyDescription();
    public static EqtMessage get_GenericTest_RedirectStandardOutputAndError_PropertyDescription();
    public static EqtMessage get_GenericTest_MaximumDuration_PropertyDescription();
    public static EqtMessage get_GenericTest_WorkingDirectory_PropertyDescription();
    public static EqtMessage get_GenericTest_EnvironmentVariables_PropertyDescription();
    public static EqtMessage get_GenericTestResult_ProcessExitCode();
    public static EqtMessage get_GenericTestResult_IsAborted();
    public static EqtMessage get_GenericTest_SelectWorkingDir();
    public static EqtMessage get_OrderedTest_ContinueAfterFailure();
    public static EqtMessage get_OrderedTest_ContinueAfterFailure_PropertyDescription();
    public static EqtMessage get_OrderedTest_WarningForMsTestV2Tests();
    public static ResXFileRef get_TestPicker_DownIcon();
    public static ResXFileRef get_TestPicker_LeftIcon();
    public static ResXFileRef get_TestPicker_RightIcon();
    public static ResXFileRef get_TestPicker_UpIcon();
    public static ResXFileRef get_TestPicker_X_Icon();
    public static EqtMessage get_TestPicker_TestReceiverLabel();
    public static EqtMessage get_TestPicker_TestReceiverAccName();
    public static EqtMessage get_TestPicker_TestSelectorLabel();
    public static EqtMessage get_TestPicker_TestSelectorAccName();
    public static EqtMessage get_TestPicker_TestListSelectorLabel();
    public static EqtMessage get_TestPicker_TestListSortAscending();
    public static EqtMessage get_TestPicker_TestListSortDescending();
    public static EqtMessage get_TestPicker_TestProjectSelectorLabel();
    public static EqtMessage get_TestPicker_TestProjectSelectorAllTestsItem();
    public static EqtMessage get_TestPicker_TestListSelectorAccName();
    public static EqtMessage get_OrderedTestUI_ContinueAfterFailure();
    public static EqtMessage get_ProjectComboBox_CreateNewProject();
    public static EqtMessage get_TCMUI_TestGenerationProgress();
    public static EqtMessage get_TCMUI_RunPublishInProgress();
    public static EqtMessage get_TCMUI_RunPublishCompleted();
    public static EqtMessage get_TCMUI_RunPublishFailed();
    public static EqtMessage TCMUI_RunPublishSize(object param0);
    public static EqtMessage get_TCMUI_PublishAbortPrompt();
    public static EqtMessage get_UnitTestPolicy_Type();
    public static EqtMessage get_UnitTestPolicy_TypeDescription();
    public static EqtMessage UnitTestPolicy_Description(object param0, object param1);
    public static EqtMessage get_UnitTestPolicy_TestListSeparator();
    public static EqtMessage get_UnitTestPolicy_TrxFilter();
    public static EqtMessage get_UnitTestPolicy_TrxPromptTitle();
    public static EqtMessage get_UnitTestPolicy_InvalidInput();
    public static EqtMessage UnitTestPolicy_MissingTestListFailure(object param0, object param1);
    public static EqtMessage UnitTestPolicy_MissingMetaDataFileFailure(object param0);
    public static EqtMessage UnitTestPolicy_DeleteMetaDataFileFailure(object param0);
    public static EqtMessage UnitTestPolicy_NotSyncedMetaDataFileFailure(object param0);
    public static EqtMessage UnitTestPolicy_MetaDataFileDownloadFailure(object param0);
    public static EqtMessage UnitTestPolicy_MetaDataFileLoadFailure(object param0, object param1);
    public static EqtMessage UnitTestPolicy_MetaDataFileListNotFoundFailure(object param0);
    public static EqtMessage get_UnitTestPolicy_MetaDataFileListNotFoundSeparator();
    public static EqtMessage UnitTestPolicy_MissingFileOverwritePrompt(object param0);
    public static EqtMessage UnitTestPolicy_EditorLoadError(object param0);
    public static EqtMessage get_UnitTestPolicy_WarningMessageCaption();
    public static EqtMessage get_UnitTestPolicy_ZeroTestLists();
    public static EqtMessage get_FindLinkHelperDialog_Caption();
    public static EqtMessage FindLinkHelperDialog_Text(object param0, object param1, object param2, object param3);
    public static EqtMessage get_DialogHelper_Test();
    public static EqtMessage get_DialogHelper_RunConfig();
    public static EqtMessage get_DialogHelper_TestList();
    public static EqtMessage get_FindLinkHelperDialog_Retry_Text();
    public static EqtMessage get_FindLinkHelperDialog_Ignore_Text();
    public static EqtMessage get_FindLinkHelperDialog_Abort_Text();
    public static EqtMessage get_FindLinkHelperFileOpen_Title();
    public static EqtMessage get_TE_OpenMetaDataFileTitle();
    public static EqtMessage get_TE_ImportMetaDataFileTitle();
    public static EqtMessage get_ImportMetadataDialog_Caption();
    public static EqtMessage ImportMetadataDialog_Text(object param0, object param1, object param2);
    public static EqtMessage get_ImportMetadataDialog_Abort_Text();
    public static EqtMessage get_ImportMetadataDialog_Retry_Text();
    public static EqtMessage get_ImportMetadataDialog_Ignore_Text();
    public static EqtMessage IdCollisionDialog_Caption(object param0, object param1);
    public static EqtMessage IdCollisionDialog_Text(object param0, object param1, object param2, object param3, object param4);
    public static EqtMessage get_IdCollisionDialog_Ignore_Text();
    public static EqtMessage get_IdCollisionDialog_Retry_Text();
    public static EqtMessage get_IdCollisionDialog_Abort_Text();
    public static EqtMessage TestIdCollisionDialog_Caption(object param0, object param1);
    public static EqtMessage TestIdCollisionDialog_Text(object param0, object param1, object param2, object param3);
    public static EqtMessage get_TestIdCollisionDialog_Retry_Text();
    public static EqtMessage get_TestIdCollisionDialog_Abort_Text();
    public static EqtMessage get_CatIdCollisionDialog_Yes_Text();
    public static EqtMessage get_CatRunConfigCollisionDialog_NullRunConfig();
    public static EqtMessage get_RunConfig_HostSelectionControlText();
    public static EqtMessage get_RunConfig_HostSelectionDescription();
    public static EqtMessage get_RunConfig_HostSelectionDefault();
    public static EqtMessage RunConfig_HostSelectionSummary(object param0);
    public static EqtMessage get_RunConfig_LoadTestSettingsControlText();
    public static EqtMessage get_RunConfig_LoadTestSettingsDescription();
    public static EqtMessage get_RunConfig_AspNetHostDescription();
    public static EqtMessage get_RunConfig_AspNetNoWebServerSelected();
    public static EqtMessage get_RunConfig_AspNetNoPathToWeb();
    public static EqtMessage get_TCMUI_ToolsOptionsSelectWebAppRootDir();
    public static EqtMessage get_TCMUI_ToolsOptions_RestartNeeded();
    public static EqtMessage get_NewDataSourceWizardTitle();
    public static EqtMessage get_DataSourceTypePageDuplicateName();
    public static EqtMessage get_DataSourceTypePageNoneSelected();
    public static EqtMessage get_DataSourceTypePageCsvSelected();
    public static EqtMessage get_DataSourceTypePageXmlSelected();
    public static EqtMessage get_DataSourceTypePageDatabaseSelected();
    public static EqtMessage get_DataSourceTypePageLinkText();
    public static EqtMessage get_DataSourceTypePageTitle();
    public static EqtMessage get_DataSourceCsvSelectionPageLinkText();
    public static EqtMessage get_DataSourceCsvSelectionPageTitle();
    public static EqtMessage get_DataSourceXmlSelectionPageLinkText();
    public static EqtMessage get_DataSourceXmlSelectionPageTitle();
    public static EqtMessage get_DataSourceConnectionPageLinkText();
    public static EqtMessage get_DataSourceConnectionPageTitle();
    public static EqtMessage get_DataSourceTablesPageLinkText();
    public static EqtMessage get_DataSourceTablesPageTitle();
    public static EqtMessage get_DataSourcePreview();
    public static EqtMessage get_DataSourcePreviewSortAscending();
    public static EqtMessage get_DataSourcePreviewSortDescending();
    public static EqtMessage DataSourcePreviewLimited(object param0);
    public static EqtMessage get_SecureConnectStringWarning();
    public static EqtMessage CannotRetrieveDatabaseSchemaInfo(object param0);
    public static EqtMessage get_DataSourceNameCannotBeBlank();
    public static EqtMessage DataSourceNameHasInvalidCharacters(object param0);
    public static EqtMessage DataSourceNameTooLong(object param0, object param1, object param2);
    public static ResXFileRef get_DataSourceWizardBitmap();
    public static EqtMessage get_DataSourceOverwriteExisting();
    public static EqtMessage get_DataSourceCopyIntoProject();
    public static EqtMessage DataSourceBadFileFormat(object param0);
    public static EqtMessage get_DataSourceCannotReadTables();
    public static EqtMessage get_TestGeneration_AssemblyLoadFailed();
    public static EqtMessage get_TestGeneration_TestReferencesFolderName();
    public static EqtMessage get_TestGeneration_InvalidFilenameFormat();
    public static EqtMessage get_TestGeneration_InvalidClassnameFormat();
    public static EqtMessage get_TestGeneration_InvalidMethodnameFormat();
    public static EqtMessage get_TestGeneration_InvalidFormat();
    public static EqtMessage get_TestGeneration_NoVisibleClasses();
    public static EqtMessage get_TestGeneration_NullNamespace();
    public static EqtMessage get_TestGeneration_InternalsVisibleToPrompt_None();
    public static EqtMessage get_TestGeneration_InternalsVisibleToPrompt_Yes();
    public static EqtMessage get_TestGeneration_InternalsVisibleToPrompt_No();
    public static EqtMessage get_TestGeneration_InternalsVisibleToPrompt_Name();
    public static EqtMessage get_TestGeneration_InternalsVisibleToPrompt_Title();
    public static EqtMessage TestGeneration_InternalsVisibleToPrompt_Message(object param0);
    public static EqtMessage get_TestGeneration_AddAssemblyDialogTitle();
    public static EqtMessage get_TestGeneration_AddAssemblyFileFilter();
    public static EqtMessage TestGeneration_AssemblyAlreadyInTree(object param0);
    public static EqtMessage TestGeneration_FailedToLoadAssemblies(object param0);
    public static EqtMessage get_TestGeneration_DestinationSourceFileExists();
    public static EqtMessage get_TestGeneration_DestinationFilenameTooLong();
    public static EqtMessage get_TestGeneration_GenerationErrorsOccurred();
    public static EqtMessage get_TestGeneration_PrivateAccessorsForDevicesUnsupported();
    public static EqtMessage get_TestGeneration_PrivateAccessorsForDevicesUnsupportedInconclusiveMessage();
    public static EqtMessage TestGeneration_GenerationCompletedMessageSuccessAndFailed(object param0, object param1);
    public static EqtMessage TestGeneration_GenerationCompletedMessageSuccess(object param0);
    public static EqtMessage TestGeneration_GenerationCompletedMessageFailed(object param0);
    public static EqtMessage get_TestGeneration_GenerationCompletedMessageCompleteFailure();
    public static EqtMessage get_TestGeneration_CreateUnitTestDialogFailure();
    public static EqtMessage get_TestGeneration_GeneratingTests();
    public static EqtMessage TestGeneration_CouldntResolveAssembly(object param0);
    public static EqtMessage TestGeneration_ShadowCreationFailed(object param0);
    public static EqtMessage get_RigAdmin_AllUnassignedNics();
    public static EqtMessage get_GenericTest_EnterFilePrompt();
    public static EqtMessage StackTraceSourceFile(object param0);
    public static EqtMessage StackTraceLineNumber(object param0);
    public static EqtMessage CannotOpenFileInEditor(object param0, object param1);
    public static EqtMessage TestFileNotFound(object param0);
    public static EqtMessage CollectorData_AgentName(object param0);
    public static EqtMessage CollectorData_CollectorUri(object param0);
    public static EqtMessage CollectorData_AttachmentName(object param0);
    public static EqtMessage CollectorData_UriAttachment(object param0);
    public static EqtMessage CollectorData_XmlAttachment(object param0);
    public static EqtMessage UnitTestPolicy_FailureRecommended(object param0);
    public static EqtMessage UnitTestPolicy_FailureAll(object param0);
    public static EqtMessage UnitTestPolicy_FailureCannotRecommend(object param0);
    public static EqtMessage UnitTestPolicy_FailureAllNotRunnable(object param0);
    public static EqtMessage UnitTestPolicy_FailureNotInSolution(object param0);
    public static EqtMessage get_DataSourceType_CSV();
    public static EqtMessage get_DataSourceType_Database();
    public static EqtMessage get_DataSourceType_XML();
    public static EqtMessage get_RunConfig_DataCollectorsCaptionText();
    public static EqtMessage get_RunConfig_DataCollectorsDescriptionText();
    public static EqtMessage get_RunConfig_RolesCaptionText();
    public static EqtMessage get_RunConfig_RolesDescriptionText();
    public static ResXFileRef get_ConfigsettingsAgent_24Bit();
    public static ResXFileRef get_ConfigsettingsRoles_24Bit();
    public static ResXFileRef get_ConfigsettingsStatus_24Bit();
    public static ResXFileRef get_DataDiagconfig();
    public static EqtMessage get_UnitTestPolicy_Description_IncompatiblePolicy();
    public static EqtMessage get_UnitTestPolicy_Edit_IncompatiblePolicy();
    public static EqtMessage get_ArgumentExceptionMessage();
    public static EqtMessage get_CodeCov_ProcessingCoverageInfoMessage();
}
[CompilerGeneratedAttribute]
internal static class Resources.VisualStudioVersionInfo : object {
    public static string MajorVersion;
    public static string MinorVersion;
    public static string ProductVersion;
    public static string VSAssemblyVersion;
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.6.133.12845")]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string RootNamespace;
    private static ThisAssembly();
}
