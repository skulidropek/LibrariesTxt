internal interface Microsoft.VisualStudio.TestTools.TestTypes.Manual.IManualTestProxy {
    public abstract virtual ManualTestResult RunTest(ManualTestResult initResult);
    public abstract virtual void AbortTest(TestResultId id, string message);
}
[GuidAttribute("7A24F8FF-85DA-D664-EF44-83FF4743DAE6")]
internal class Microsoft.VisualStudio.TestTools.TestTypes.Manual.ManualTest : TestElement {
    private static TestType m_testType;
    private static string m_adapterName;
    [PersistenceElementNameAttribute("bodyText")]
private string m_bodyText;
    [ReadOnlyAttribute("True")]
public bool ReadOnly { get; public set; }
    public TestType TestType { get; }
    public string Adapter { get; }
    public string ControllerPlugin { get; }
    public bool CanBeAggregated { get; }
    public bool IsAutomated { get; }
    [ReadOnlyAttribute("True")]
public int Timeout { get; public set; }
    unknown string Storage {public set; }
    public static TestType ManualTestType { get; }
    public string BodyText { get; public set; }
    public ProductFeature RequiredProductFeatures { get; }
    public ManualTest(TestId id, string name, string description, string storage);
    protected ManualTest(ManualTest copy);
    public virtual bool get_ReadOnly();
    public virtual void set_ReadOnly(bool value);
    public virtual TestType get_TestType();
    public virtual object Clone();
    public virtual string get_Adapter();
    public virtual string get_ControllerPlugin();
    public virtual bool get_CanBeAggregated();
    public virtual bool get_IsAutomated();
    public virtual int get_Timeout();
    public virtual void set_Timeout(int value);
    public virtual void set_Storage(string value);
    public static TestType get_ManualTestType();
    public string get_BodyText();
    public void set_BodyText(string value);
    public virtual void Load(XmlElement element, XmlTestStoreParameters parameters);
    public virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
    public sealed virtual ProductFeature get_RequiredProductFeatures();
}
internal static class Microsoft.VisualStudio.TestTools.TestTypes.Manual.ManualTestChannelConstants : object {
    public static string UriName;
    private static string ChannelNameFormat;
    public static string GetChannelName(Guid runId);
}
internal class Microsoft.VisualStudio.TestTools.TestTypes.Manual.ManualTestResult : TestResult {
    [StoreXmlSimpleFieldAttribute("Comments", "Mono.Cecil.CustomAttributeArgument")]
[PersistenceElementNameAttribute("comments")]
private string m_comments;
    [StoreXmlSimpleFieldAttribute("@testFile", "Mono.Cecil.CustomAttributeArgument")]
[PersistenceElementNameAttribute("testFile")]
private string m_testFile;
    [UserVisiblePropertyAttribute("{A89AEBCB-AA32-42e0-8F49-733DBCE32841}")]
[TestCaseManagementDisplayNameAttribute("Microsoft.VisualStudio.TestTools.Resources.UIResources", "ManualTest_CommentsHeader")]
[DefaultValueAttribute("")]
public string Comments { get; public set; }
    public string TestFile { get; public set; }
    public ManualTestResult(Guid runId, ManualTest test);
    public ManualTestResult(Guid runId, ManualTest test, TestOutcome outcome);
    protected ManualTestResult(ManualTestResult copy);
    public ManualTestResult(TestResult copy, string comments);
    public virtual object Clone();
    public string get_Comments();
    public void set_Comments(string value);
    public string get_TestFile();
    public void set_TestFile(string value);
    public virtual void Save(XmlElement element, XmlTestStoreParameters parameters);
    public virtual void Load(XmlElement element, XmlTestStoreParameters parameters);
}
