[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Microsoft.VisualStudio.TestTools.LoadTest.LoadTestTip : object {
    private Tmi m_tmi;
    private static string m_processName;
    public TestType TestType { get; }
    public LoadTestTip(ITmi tmiInstance);
    private void m_tmi_TestResultRemovedEvent(object sender, TestResultEventArgs e);
    public sealed virtual TestType get_TestType();
    public ITestElement CreateNewTest(string testName, string description);
    public sealed virtual ICollection Load(string location, ProjectData projectData, IWarningHandler warningHandler);
    public sealed virtual void Save(ITestElement[] tests, string location, ProjectData projectData);
    public sealed virtual TestResult MergeResults(TestResult inMemory, TestResultMessage fromTheWire);
    public sealed virtual void Unload(string location, IWarningHandler warningHandler);
    public sealed virtual void Reset();
    public sealed virtual void BeforeRemoveTestRun(Guid runId);
    public sealed virtual void Dispose();
    private static string GetProcessName();
}
internal class Microsoft.VisualStudio.TestTools.WebTest.CodedWebTestAssemblyInfo : AssemblyInfo`2<CodedWebTestAssemblyInfo, CodedWebTestTypeInfo> {
}
internal class Microsoft.VisualStudio.TestTools.WebTest.CodedWebTestCodeModelProcessor : BaseCodeModelProcessor`2<CodedWebTestTypeInfo, CodedWebTestAssemblyInfo> {
    public TestType TestType { get; }
    private void ParseClass(CodeElement element);
    [IteratorStateMachineAttribute("Microsoft.VisualStudio.TestTools.WebTest.CodedWebTestCodeModelProcessor/<GetTestsForClassName>d__2")]
protected virtual IEnumerable`1<ITestElement> GetTestsForClassName(string fullName, CodedWebTestAssemblyInfo assemblyInfo);
    public virtual void FlushTypeCache(string fullName, CodedWebTestAssemblyInfo info);
    public virtual void ParseCodeElementAdded(CodeElement element);
    public virtual void ParseCodeElementChanged(CodeElement element, vsCMChangeKind change);
    public virtual void ParseCodeElementRemoved(CodeElement element, object parent);
    private void ReparseClass(CodeClass codeClass);
    public virtual TestType get_TestType();
}
public class Microsoft.VisualStudio.TestTools.WebTest.CodedWebTestTip : object {
    private Tmi m_tmi;
    public TestType TestType { get; }
    public CodedWebTestTip(ITmi tmiInstance);
    private void m_tmi_TestResultRemovedEvent(object sender, TestResultEventArgs e);
    public sealed virtual TestType get_TestType();
    public sealed virtual ICollection Load(string location, ProjectData projectData, IWarningHandler warningHandler);
    public sealed virtual void Save(ITestElement[] tests, string location, ProjectData projectData);
    public sealed virtual TestResult MergeResults(TestResult inMemory, TestResultMessage fromTheWire);
    public sealed virtual void Reset();
    public sealed virtual void Dispose();
    public sealed virtual void Unload(string location, IWarningHandler warningHandler);
    public sealed virtual void BeforeRemoveTestRun(Guid runId);
}
internal class Microsoft.VisualStudio.TestTools.WebTest.CodedWebTestTypeInfo : TypeInfo`2<CodedWebTestAssemblyInfo, CodedWebTestTypeInfo> {
    private bool m_isValidTestClass;
    private string m_reason;
    public bool IsValidTestClass { get; public set; }
    public string Reason { get; public set; }
    public bool get_IsValidTestClass();
    public void set_IsValidTestClass(bool value);
    public string get_Reason();
    public void set_Reason(string value);
}
public class Microsoft.VisualStudio.TestTools.WebTest.WebTestTip : object {
    private Tmi m_tmi;
    public TestType TestType { get; }
    public WebTestTip(ITmi tmiInstance);
    private void m_tmi_TestResultRemovedEvent(object sender, TestResultEventArgs e);
    public sealed virtual TestType get_TestType();
    public sealed virtual ICollection Load(string location, ProjectData projectData, IWarningHandler warningHandler);
    public ITestElement Load(Stream stream);
    public sealed virtual void Save(ITestElement[] tests, string location, ProjectData projectData);
    public sealed virtual TestResult MergeResults(TestResult inMemory, TestResultMessage fromTheWire);
    public sealed virtual void Reset();
    public sealed virtual void Dispose();
    public sealed virtual void Unload(string location, IWarningHandler warningHandler);
    public sealed virtual void BeforeRemoveTestRun(Guid runId);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
