[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder : ValueType {
    public static IObjectReference CreateMarshaler(AppNotificationBuilder obj);
    public static ObjectReferenceValue CreateMarshaler2(AppNotificationBuilder obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static AppNotificationBuilder FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(AppNotificationBuilder obj);
    public static MarshalerArray<AppNotificationBuilder> CreateMarshalerArray(AppNotificationBuilder[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static AppNotificationBuilder[] FromAbiArray(object box);
    public static void CopyAbiArray(AppNotificationBuilder[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(AppNotificationBuilder[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<AppNotificationBuilder> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton : ValueType {
    public static IObjectReference CreateMarshaler(AppNotificationButton obj);
    public static ObjectReferenceValue CreateMarshaler2(AppNotificationButton obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static AppNotificationButton FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(AppNotificationButton obj);
    public static MarshalerArray<AppNotificationButton> CreateMarshalerArray(AppNotificationButton[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static AppNotificationButton[] FromAbiArray(object box);
    public static void CopyAbiArray(AppNotificationButton[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(AppNotificationButton[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<AppNotificationButton> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButtonRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox : ValueType {
    public static IObjectReference CreateMarshaler(AppNotificationComboBox obj);
    public static ObjectReferenceValue CreateMarshaler2(AppNotificationComboBox obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static AppNotificationComboBox FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(AppNotificationComboBox obj);
    public static MarshalerArray<AppNotificationComboBox> CreateMarshalerArray(AppNotificationComboBox[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static AppNotificationComboBox[] FromAbiArray(object box);
    public static void CopyAbiArray(AppNotificationComboBox[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(AppNotificationComboBox[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<AppNotificationComboBox> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBoxRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar : ValueType {
    public static IObjectReference CreateMarshaler(AppNotificationProgressBar obj);
    public static ObjectReferenceValue CreateMarshaler2(AppNotificationProgressBar obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static AppNotificationProgressBar FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(AppNotificationProgressBar obj);
    public static MarshalerArray<AppNotificationProgressBar> CreateMarshalerArray(AppNotificationProgressBar[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static AppNotificationProgressBar[] FromAbiArray(object box);
    public static void CopyAbiArray(AppNotificationProgressBar[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(AppNotificationProgressBar[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<AppNotificationProgressBar> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBarRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties : ValueType {
    public static IObjectReference CreateMarshaler(AppNotificationTextProperties obj);
    public static ObjectReferenceValue CreateMarshaler2(AppNotificationTextProperties obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static AppNotificationTextProperties FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(AppNotificationTextProperties obj);
    public static MarshalerArray<AppNotificationTextProperties> CreateMarshalerArray(AppNotificationTextProperties[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static AppNotificationTextProperties[] FromAbiArray(object box);
    public static void CopyAbiArray(AppNotificationTextProperties[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(AppNotificationTextProperties[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<AppNotificationTextProperties> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationTextPropertiesRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[GuidAttribute("E801D31F-CE03-505C-ADEC-8A02724EC9DE")]
internal interface ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilder {
}
internal static class ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static AppNotificationBuilder AddArgument(IObjectReference _obj, string key, string value);
    internal static AppNotificationBuilder SetTimeStamp(IObjectReference _obj, DateTimeOffset value);
    internal static AppNotificationBuilder SetDuration(IObjectReference _obj, AppNotificationDuration duration);
    internal static AppNotificationBuilder SetScenario(IObjectReference _obj, AppNotificationScenario value);
    internal static AppNotificationBuilder AddText(IObjectReference _obj, string text);
    internal static AppNotificationBuilder AddText(IObjectReference _obj, string text, AppNotificationTextProperties properties);
    internal static AppNotificationBuilder SetAttributionText(IObjectReference _obj, string text);
    internal static AppNotificationBuilder SetAttributionText(IObjectReference _obj, string text, string language);
    internal static AppNotificationBuilder SetInlineImage(IObjectReference _obj, Uri imageUri);
    internal static AppNotificationBuilder SetInlineImage(IObjectReference _obj, Uri imageUri, AppNotificationImageCrop imageCrop);
    internal static AppNotificationBuilder SetInlineImage(IObjectReference _obj, Uri imageUri, AppNotificationImageCrop imagecrop, string alternateText);
    internal static AppNotificationBuilder SetAppLogoOverride(IObjectReference _obj, Uri imageUri);
    internal static AppNotificationBuilder SetAppLogoOverride(IObjectReference _obj, Uri imageUri, AppNotificationImageCrop imageCrop);
    internal static AppNotificationBuilder SetAppLogoOverride(IObjectReference _obj, Uri imageUri, AppNotificationImageCrop imageCrop, string alternateText);
    internal static AppNotificationBuilder SetHeroImage(IObjectReference _obj, Uri imageUri);
    internal static AppNotificationBuilder SetHeroImage(IObjectReference _obj, Uri imageUri, string alternateText);
    internal static AppNotificationBuilder SetAudioUri(IObjectReference _obj, Uri audioUri);
    internal static AppNotificationBuilder SetAudioUri(IObjectReference _obj, Uri audioUri, AppNotificationAudioLooping loop);
    internal static AppNotificationBuilder SetAudioEvent(IObjectReference _obj, AppNotificationSoundEvent appNotificationSoundEvent);
    internal static AppNotificationBuilder SetAudioEvent(IObjectReference _obj, AppNotificationSoundEvent appNotificationSoundEvent, AppNotificationAudioLooping loop);
    internal static AppNotificationBuilder MuteAudio(IObjectReference _obj);
    internal static AppNotificationBuilder AddTextBox(IObjectReference _obj, string id);
    internal static AppNotificationBuilder AddTextBox(IObjectReference _obj, string id, string placeHolderText, string title);
    internal static AppNotificationBuilder AddButton(IObjectReference _obj, AppNotificationButton value);
    internal static AppNotificationBuilder AddComboBox(IObjectReference _obj, AppNotificationComboBox value);
    internal static AppNotificationBuilder AddProgressBar(IObjectReference _obj, AppNotificationProgressBar value);
    internal static AppNotification BuildNotification(IObjectReference _obj);
    internal static AppNotificationBuilder SetTag(IObjectReference _obj, string value);
    internal static AppNotificationBuilder SetGroup(IObjectReference _obj, string group);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C7042D2A-D319-520E-A314-50081C8888CC")]
internal interface ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderStatics {
}
internal static class ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool IsUrgentScenarioSupported(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("A7C03031-5634-5098-AEC9-47ECB60C3499")]
internal interface ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButton {
}
[GuidAttribute("4F109286-0A6D-5A5E-9E8F-9FE31669FBB8")]
internal interface ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonFactory {
}
internal static class ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonFactoryMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static AppNotificationButton CreateInstance(IObjectReference _obj, string content);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static AppNotificationButton AddArgument(IObjectReference _obj, string key, string value);
    internal static AppNotificationButton SetIcon(IObjectReference _obj, Uri value);
    internal static AppNotificationButton SetToolTip(IObjectReference _obj, string value);
    internal static AppNotificationButton SetContextMenuPlacement(IObjectReference _obj);
    internal static AppNotificationButton SetButtonStyle(IObjectReference _obj, AppNotificationButtonStyle value);
    internal static AppNotificationButton SetInputId(IObjectReference _obj, string value);
    internal static AppNotificationButton SetInvokeUri(IObjectReference _obj, Uri protocolUri);
    internal static AppNotificationButton SetInvokeUri(IObjectReference _obj, Uri protocolUri, string targetAppId);
    internal static IDictionary`2<string, string> get_Arguments(IObjectReference _obj);
    internal static void set_Arguments(IObjectReference _obj, IDictionary`2<string, string> value);
    internal static AppNotificationButtonStyle get_ButtonStyle(IObjectReference _obj);
    internal static void set_ButtonStyle(IObjectReference _obj, AppNotificationButtonStyle value);
    internal static string get_Content(IObjectReference _obj);
    internal static void set_Content(IObjectReference _obj, string value);
    internal static bool get_ContextMenuPlacement(IObjectReference _obj);
    internal static void set_ContextMenuPlacement(IObjectReference _obj, bool value);
    internal static Uri get_Icon(IObjectReference _obj);
    internal static void set_Icon(IObjectReference _obj, Uri value);
    internal static string get_InputId(IObjectReference _obj);
    internal static void set_InputId(IObjectReference _obj, string value);
    internal static Uri get_InvokeUri(IObjectReference _obj);
    internal static void set_InvokeUri(IObjectReference _obj, Uri value);
    internal static string get_TargetAppId(IObjectReference _obj);
    internal static void set_TargetAppId(IObjectReference _obj, string value);
    internal static string get_ToolTip(IObjectReference _obj);
    internal static void set_ToolTip(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("FEAD7C18-4144-59A4-9611-86B7E8191853")]
internal interface ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonStatics {
}
internal static class ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool IsToolTipSupported(IObjectReference _obj);
    internal static bool IsButtonStyleSupported(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4547C9E2-4815-538C-BE26-040CE17F8B62")]
internal interface ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBox {
}
[GuidAttribute("1B31B5B0-9D86-59ED-8629-A79498AB5D4B")]
internal interface ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxFactory {
}
internal static class ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxFactoryMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static AppNotificationComboBox CreateInstance(IObjectReference _obj, string id);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static AppNotificationComboBox AddItem(IObjectReference _obj, string id, string content);
    internal static AppNotificationComboBox SetTitle(IObjectReference _obj, string value);
    internal static AppNotificationComboBox SetSelectedItem(IObjectReference _obj, string id);
    internal static IDictionary`2<string, string> get_Items(IObjectReference _obj);
    internal static void set_Items(IObjectReference _obj, IDictionary`2<string, string> value);
    internal static string get_SelectedItem(IObjectReference _obj);
    internal static void set_SelectedItem(IObjectReference _obj, string value);
    internal static string get_Title(IObjectReference _obj);
    internal static void set_Title(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("FCED62F2-2074-5641-8630-87A14315AC86")]
internal interface ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBar {
}
internal static class ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBarMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static AppNotificationProgressBar SetTitle(IObjectReference _obj, string value);
    internal static AppNotificationProgressBar BindTitle(IObjectReference _obj);
    internal static AppNotificationProgressBar SetStatus(IObjectReference _obj, string value);
    internal static AppNotificationProgressBar BindStatus(IObjectReference _obj);
    internal static AppNotificationProgressBar SetValue(IObjectReference _obj, double value);
    internal static AppNotificationProgressBar BindValue(IObjectReference _obj);
    internal static AppNotificationProgressBar SetValueStringOverride(IObjectReference _obj, string value);
    internal static AppNotificationProgressBar BindValueStringOverride(IObjectReference _obj);
    internal static string get_Status(IObjectReference _obj);
    internal static void set_Status(IObjectReference _obj, string value);
    internal static string get_Title(IObjectReference _obj);
    internal static void set_Title(IObjectReference _obj, string value);
    internal static double get_Value(IObjectReference _obj);
    internal static void set_Value(IObjectReference _obj, double value);
    internal static string get_ValueStringOverride(IObjectReference _obj);
    internal static void set_ValueStringOverride(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("23A30D0B-5258-5853-932E-9521A3642AFB")]
internal interface ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextProperties {
}
internal static class ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextPropertiesMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static AppNotificationTextProperties SetLanguage(IObjectReference _obj, string value);
    internal static AppNotificationTextProperties SetIncomingCallAlignment(IObjectReference _obj);
    internal static AppNotificationTextProperties SetMaxLines(IObjectReference _obj, int value);
    internal static bool get_IncomingCallAlignment(IObjectReference _obj);
    internal static void set_IncomingCallAlignment(IObjectReference _obj, bool value);
    internal static string get_Language(IObjectReference _obj);
    internal static void set_Language(IObjectReference _obj, string value);
    internal static int get_MaxLines(IObjectReference _obj);
    internal static void set_MaxLines(IObjectReference _obj, int value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.AppNotifications.Builder.AppNotificationAudioLooping>")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
public enum Microsoft.Windows.AppNotifications.Builder.AppNotificationAudioLooping : Enum {
    public int value__;
    public static AppNotificationAudioLooping None;
    public static AppNotificationAudioLooping Loop;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder")]
[AppNotificationBuilderRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilder")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
public class Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilder : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationBuilder;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilderStatics;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationBuilder { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilderStatics { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    internal AppNotificationBuilder(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilder();
    private static IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationBuilder();
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationBuilderStatics();
    public static bool IsUrgentScenarioSupported();
    public static AppNotificationBuilder FromAbi(IntPtr thisPtr);
    public static bool op_Equality(AppNotificationBuilder x, AppNotificationBuilder y);
    public static bool op_Inequality(AppNotificationBuilder x, AppNotificationBuilder y);
    public sealed virtual bool Equals(AppNotificationBuilder other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public AppNotificationBuilder AddArgument(string key, string value);
    public AppNotificationBuilder SetTimeStamp(DateTimeOffset value);
    public AppNotificationBuilder SetDuration(AppNotificationDuration duration);
    public AppNotificationBuilder SetScenario(AppNotificationScenario value);
    public AppNotificationBuilder AddText(string text);
    public AppNotificationBuilder AddText(string text, AppNotificationTextProperties properties);
    public AppNotificationBuilder SetAttributionText(string text);
    public AppNotificationBuilder SetAttributionText(string text, string language);
    public AppNotificationBuilder SetInlineImage(Uri imageUri);
    public AppNotificationBuilder SetInlineImage(Uri imageUri, AppNotificationImageCrop imageCrop);
    public AppNotificationBuilder SetInlineImage(Uri imageUri, AppNotificationImageCrop imagecrop, string alternateText);
    public AppNotificationBuilder SetAppLogoOverride(Uri imageUri);
    public AppNotificationBuilder SetAppLogoOverride(Uri imageUri, AppNotificationImageCrop imageCrop);
    public AppNotificationBuilder SetAppLogoOverride(Uri imageUri, AppNotificationImageCrop imageCrop, string alternateText);
    public AppNotificationBuilder SetHeroImage(Uri imageUri);
    public AppNotificationBuilder SetHeroImage(Uri imageUri, string alternateText);
    public AppNotificationBuilder SetAudioUri(Uri audioUri);
    public AppNotificationBuilder SetAudioUri(Uri audioUri, AppNotificationAudioLooping loop);
    public AppNotificationBuilder SetAudioEvent(AppNotificationSoundEvent appNotificationSoundEvent);
    public AppNotificationBuilder SetAudioEvent(AppNotificationSoundEvent appNotificationSoundEvent, AppNotificationAudioLooping loop);
    public AppNotificationBuilder MuteAudio();
    public AppNotificationBuilder AddTextBox(string id);
    public AppNotificationBuilder AddTextBox(string id, string placeHolderText, string title);
    public AppNotificationBuilder AddButton(AppNotificationButton value);
    public AppNotificationBuilder AddComboBox(AppNotificationComboBox value);
    public AppNotificationBuilder AddProgressBar(AppNotificationProgressBar value);
    public AppNotification BuildNotification();
    public AppNotificationBuilder SetTag(string value);
    public AppNotificationBuilder SetGroup(string group);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[ContractVersionAttribute("65536")]
public enum Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract : Enum {
    public int value__;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationButton")]
[AppNotificationButtonRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.AppNotifications.Builder.IAppNotificationButton")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
public class Microsoft.Windows.AppNotifications.Builder.AppNotificationButton : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationButton;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonFactory;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonStatics;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationButton { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonFactory { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonStatics { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IDictionary`2<string, string> Arguments { get; public set; }
    public AppNotificationButtonStyle ButtonStyle { get; public set; }
    public string Content { get; public set; }
    public bool ContextMenuPlacement { get; public set; }
    public Uri Icon { get; public set; }
    public string InputId { get; public set; }
    public Uri InvokeUri { get; public set; }
    public string TargetAppId { get; public set; }
    public string ToolTip { get; public set; }
    public AppNotificationButton(string content);
    internal AppNotificationButton(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButton();
    private static IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationButton();
    private static IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonFactory();
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationButtonStatics();
    public static bool IsToolTipSupported();
    public static bool IsButtonStyleSupported();
    public static AppNotificationButton FromAbi(IntPtr thisPtr);
    public static bool op_Equality(AppNotificationButton x, AppNotificationButton y);
    public static bool op_Inequality(AppNotificationButton x, AppNotificationButton y);
    public sealed virtual bool Equals(AppNotificationButton other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public AppNotificationButton AddArgument(string key, string value);
    public AppNotificationButton SetIcon(Uri value);
    public AppNotificationButton SetToolTip(string value);
    public AppNotificationButton SetContextMenuPlacement();
    public AppNotificationButton SetButtonStyle(AppNotificationButtonStyle value);
    public AppNotificationButton SetInputId(string value);
    public AppNotificationButton SetInvokeUri(Uri protocolUri);
    public AppNotificationButton SetInvokeUri(Uri protocolUri, string targetAppId);
    public IDictionary`2<string, string> get_Arguments();
    public void set_Arguments(IDictionary`2<string, string> value);
    public AppNotificationButtonStyle get_ButtonStyle();
    public void set_ButtonStyle(AppNotificationButtonStyle value);
    public string get_Content();
    public void set_Content(string value);
    public bool get_ContextMenuPlacement();
    public void set_ContextMenuPlacement(bool value);
    public Uri get_Icon();
    public void set_Icon(Uri value);
    public string get_InputId();
    public void set_InputId(string value);
    public Uri get_InvokeUri();
    public void set_InvokeUri(Uri value);
    public string get_TargetAppId();
    public void set_TargetAppId(string value);
    public string get_ToolTip();
    public void set_ToolTip(string value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.AppNotifications.Builder.AppNotificationButtonStyle>")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
public enum Microsoft.Windows.AppNotifications.Builder.AppNotificationButtonStyle : Enum {
    public int value__;
    public static AppNotificationButtonStyle Default;
    public static AppNotificationButtonStyle Success;
    public static AppNotificationButtonStyle Critical;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox")]
[AppNotificationComboBoxRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBox")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
public class Microsoft.Windows.AppNotifications.Builder.AppNotificationComboBox : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBoxFactory;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBox { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBoxFactory { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IDictionary`2<string, string> Items { get; public set; }
    public string SelectedItem { get; public set; }
    public string Title { get; public set; }
    public AppNotificationComboBox(string id);
    internal AppNotificationComboBox(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBox();
    private static IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationComboBoxFactory();
    public static AppNotificationComboBox FromAbi(IntPtr thisPtr);
    public static bool op_Equality(AppNotificationComboBox x, AppNotificationComboBox y);
    public static bool op_Inequality(AppNotificationComboBox x, AppNotificationComboBox y);
    public sealed virtual bool Equals(AppNotificationComboBox other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public AppNotificationComboBox AddItem(string id, string content);
    public AppNotificationComboBox SetTitle(string value);
    public AppNotificationComboBox SetSelectedItem(string id);
    public IDictionary`2<string, string> get_Items();
    public void set_Items(IDictionary`2<string, string> value);
    public string get_SelectedItem();
    public void set_SelectedItem(string value);
    public string get_Title();
    public void set_Title(string value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.AppNotifications.Builder.AppNotificationDuration>")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
public enum Microsoft.Windows.AppNotifications.Builder.AppNotificationDuration : Enum {
    public int value__;
    public static AppNotificationDuration Default;
    public static AppNotificationDuration Long;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.AppNotifications.Builder.AppNotificationImageCrop>")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
public enum Microsoft.Windows.AppNotifications.Builder.AppNotificationImageCrop : Enum {
    public int value__;
    public static AppNotificationImageCrop Default;
    public static AppNotificationImageCrop Circle;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar")]
[AppNotificationProgressBarRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBar")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
public class Microsoft.Windows.AppNotifications.Builder.AppNotificationProgressBar : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationProgressBar;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationProgressBar { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string Status { get; public set; }
    public string Title { get; public set; }
    public double Value { get; public set; }
    public string ValueStringOverride { get; public set; }
    internal AppNotificationProgressBar(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationProgressBar();
    private static IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationProgressBar();
    public static AppNotificationProgressBar FromAbi(IntPtr thisPtr);
    public static bool op_Equality(AppNotificationProgressBar x, AppNotificationProgressBar y);
    public static bool op_Inequality(AppNotificationProgressBar x, AppNotificationProgressBar y);
    public sealed virtual bool Equals(AppNotificationProgressBar other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public AppNotificationProgressBar SetTitle(string value);
    public AppNotificationProgressBar BindTitle();
    public AppNotificationProgressBar SetStatus(string value);
    public AppNotificationProgressBar BindStatus();
    public AppNotificationProgressBar SetValue(double value);
    public AppNotificationProgressBar BindValue();
    public AppNotificationProgressBar SetValueStringOverride(string value);
    public AppNotificationProgressBar BindValueStringOverride();
    public string get_Status();
    public void set_Status(string value);
    public string get_Title();
    public void set_Title(string value);
    public double get_Value();
    public void set_Value(double value);
    public string get_ValueStringOverride();
    public void set_ValueStringOverride(string value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.AppNotifications.Builder.AppNotificationScenario>")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
public enum Microsoft.Windows.AppNotifications.Builder.AppNotificationScenario : Enum {
    public int value__;
    public static AppNotificationScenario Default;
    public static AppNotificationScenario Reminder;
    public static AppNotificationScenario Alarm;
    public static AppNotificationScenario IncomingCall;
    public static AppNotificationScenario Urgent;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.AppNotifications.Builder.AppNotificationSoundEvent>")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
public enum Microsoft.Windows.AppNotifications.Builder.AppNotificationSoundEvent : Enum {
    public int value__;
    public static AppNotificationSoundEvent Default;
    public static AppNotificationSoundEvent IM;
    public static AppNotificationSoundEvent Mail;
    public static AppNotificationSoundEvent Reminder;
    public static AppNotificationSoundEvent SMS;
    public static AppNotificationSoundEvent Alarm;
    public static AppNotificationSoundEvent Alarm2;
    public static AppNotificationSoundEvent Alarm3;
    public static AppNotificationSoundEvent Alarm4;
    public static AppNotificationSoundEvent Alarm5;
    public static AppNotificationSoundEvent Alarm6;
    public static AppNotificationSoundEvent Alarm7;
    public static AppNotificationSoundEvent Alarm8;
    public static AppNotificationSoundEvent Alarm9;
    public static AppNotificationSoundEvent Alarm10;
    public static AppNotificationSoundEvent Call;
    public static AppNotificationSoundEvent Call2;
    public static AppNotificationSoundEvent Call3;
    public static AppNotificationSoundEvent Call4;
    public static AppNotificationSoundEvent Call5;
    public static AppNotificationSoundEvent Call6;
    public static AppNotificationSoundEvent Call7;
    public static AppNotificationSoundEvent Call8;
    public static AppNotificationSoundEvent Call9;
    public static AppNotificationSoundEvent Call10;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties")]
[AppNotificationTextPropertiesRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextProperties")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
public class Microsoft.Windows.AppNotifications.Builder.AppNotificationTextProperties : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationTextProperties;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationTextProperties { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationTextProperties { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool IncomingCallAlignment { get; public set; }
    public string Language { get; public set; }
    public int MaxLines { get; public set; }
    internal AppNotificationTextProperties(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_IAppNotificationTextProperties();
    private static IObjectReference get__objRef_global__Microsoft_Windows_AppNotifications_Builder_AppNotificationTextProperties();
    public static AppNotificationTextProperties FromAbi(IntPtr thisPtr);
    public static bool op_Equality(AppNotificationTextProperties x, AppNotificationTextProperties y);
    public static bool op_Inequality(AppNotificationTextProperties x, AppNotificationTextProperties y);
    public sealed virtual bool Equals(AppNotificationTextProperties other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public AppNotificationTextProperties SetLanguage(string value);
    public AppNotificationTextProperties SetIncomingCallAlignment();
    public AppNotificationTextProperties SetMaxLines(int value);
    public bool get_IncomingCallAlignment();
    public void set_IncomingCallAlignment(bool value);
    public string get_Language();
    public void set_Language(string value);
    public int get_MaxLines();
    public void set_MaxLines(int value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[GuidAttribute("E801D31F-CE03-505C-ADEC-8A02724EC9DE")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilder")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
internal interface Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilder {
    public abstract virtual AppNotificationBuilder AddArgument(string key, string value);
    public abstract virtual AppNotificationBuilder SetTimeStamp(DateTimeOffset value);
    public abstract virtual AppNotificationBuilder SetDuration(AppNotificationDuration duration);
    public abstract virtual AppNotificationBuilder SetScenario(AppNotificationScenario value);
    [OverloadAttribute("AddText")]
public abstract virtual AppNotificationBuilder AddText(string text);
    [OverloadAttribute("AddText2")]
public abstract virtual AppNotificationBuilder AddText(string text, AppNotificationTextProperties properties);
    [OverloadAttribute("SetAttributionText")]
public abstract virtual AppNotificationBuilder SetAttributionText(string text);
    [OverloadAttribute("SetAttributionText2")]
public abstract virtual AppNotificationBuilder SetAttributionText(string text, string language);
    [OverloadAttribute("SetInlineImage")]
public abstract virtual AppNotificationBuilder SetInlineImage(Uri imageUri);
    [OverloadAttribute("SetInlineImage2")]
public abstract virtual AppNotificationBuilder SetInlineImage(Uri imageUri, AppNotificationImageCrop imageCrop);
    [OverloadAttribute("SetInlineImage3")]
public abstract virtual AppNotificationBuilder SetInlineImage(Uri imageUri, AppNotificationImageCrop imagecrop, string alternateText);
    [OverloadAttribute("SetAppLogoOverride")]
public abstract virtual AppNotificationBuilder SetAppLogoOverride(Uri imageUri);
    [OverloadAttribute("SetAppLogoOverride2")]
public abstract virtual AppNotificationBuilder SetAppLogoOverride(Uri imageUri, AppNotificationImageCrop imageCrop);
    [OverloadAttribute("SetAppLogoOverride3")]
public abstract virtual AppNotificationBuilder SetAppLogoOverride(Uri imageUri, AppNotificationImageCrop imageCrop, string alternateText);
    [OverloadAttribute("SetHeroImage")]
public abstract virtual AppNotificationBuilder SetHeroImage(Uri imageUri);
    [OverloadAttribute("SetHeroImage2")]
public abstract virtual AppNotificationBuilder SetHeroImage(Uri imageUri, string alternateText);
    [OverloadAttribute("SetAudioUri")]
public abstract virtual AppNotificationBuilder SetAudioUri(Uri audioUri);
    [OverloadAttribute("SetAudioUri2")]
public abstract virtual AppNotificationBuilder SetAudioUri(Uri audioUri, AppNotificationAudioLooping loop);
    [OverloadAttribute("SetAudioEvent")]
public abstract virtual AppNotificationBuilder SetAudioEvent(AppNotificationSoundEvent appNotificationSoundEvent);
    [OverloadAttribute("SetAudioEvent2")]
public abstract virtual AppNotificationBuilder SetAudioEvent(AppNotificationSoundEvent appNotificationSoundEvent, AppNotificationAudioLooping loop);
    public abstract virtual AppNotificationBuilder MuteAudio();
    [OverloadAttribute("AddTextBox")]
public abstract virtual AppNotificationBuilder AddTextBox(string id);
    [OverloadAttribute("AddTextBox2")]
public abstract virtual AppNotificationBuilder AddTextBox(string id, string placeHolderText, string title);
    public abstract virtual AppNotificationBuilder AddButton(AppNotificationButton value);
    public abstract virtual AppNotificationBuilder AddComboBox(AppNotificationComboBox value);
    public abstract virtual AppNotificationBuilder AddProgressBar(AppNotificationProgressBar value);
    public abstract virtual AppNotification BuildNotification();
    public abstract virtual AppNotificationBuilder SetTag(string value);
    public abstract virtual AppNotificationBuilder SetGroup(string group);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[GuidAttribute("C7042D2A-D319-520E-A314-50081C8888CC")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderStatics")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
internal interface Microsoft.Windows.AppNotifications.Builder.IAppNotificationBuilderStatics {
    public abstract virtual bool IsUrgentScenarioSupported();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[GuidAttribute("A7C03031-5634-5098-AEC9-47ECB60C3499")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButton")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
internal interface Microsoft.Windows.AppNotifications.Builder.IAppNotificationButton {
    public IDictionary`2<string, string> Arguments { get; public set; }
    public AppNotificationButtonStyle ButtonStyle { get; public set; }
    public string Content { get; public set; }
    public bool ContextMenuPlacement { get; public set; }
    public Uri Icon { get; public set; }
    public string InputId { get; public set; }
    public Uri InvokeUri { get; public set; }
    public string TargetAppId { get; public set; }
    public string ToolTip { get; public set; }
    public abstract virtual AppNotificationButton AddArgument(string key, string value);
    public abstract virtual AppNotificationButton SetIcon(Uri value);
    public abstract virtual AppNotificationButton SetToolTip(string value);
    public abstract virtual AppNotificationButton SetContextMenuPlacement();
    public abstract virtual AppNotificationButton SetButtonStyle(AppNotificationButtonStyle value);
    public abstract virtual AppNotificationButton SetInputId(string value);
    [OverloadAttribute("SetInvokeUri")]
public abstract virtual AppNotificationButton SetInvokeUri(Uri protocolUri);
    [OverloadAttribute("SetInvokeUri2")]
public abstract virtual AppNotificationButton SetInvokeUri(Uri protocolUri, string targetAppId);
    public abstract virtual IDictionary`2<string, string> get_Arguments();
    public abstract virtual void set_Arguments(IDictionary`2<string, string> value);
    public abstract virtual AppNotificationButtonStyle get_ButtonStyle();
    public abstract virtual void set_ButtonStyle(AppNotificationButtonStyle value);
    public abstract virtual string get_Content();
    public abstract virtual void set_Content(string value);
    public abstract virtual bool get_ContextMenuPlacement();
    public abstract virtual void set_ContextMenuPlacement(bool value);
    public abstract virtual Uri get_Icon();
    public abstract virtual void set_Icon(Uri value);
    public abstract virtual string get_InputId();
    public abstract virtual void set_InputId(string value);
    public abstract virtual Uri get_InvokeUri();
    public abstract virtual void set_InvokeUri(Uri value);
    public abstract virtual string get_TargetAppId();
    public abstract virtual void set_TargetAppId(string value);
    public abstract virtual string get_ToolTip();
    public abstract virtual void set_ToolTip(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[GuidAttribute("4F109286-0A6D-5A5E-9E8F-9FE31669FBB8")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonFactory")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
internal interface Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonFactory {
    public abstract virtual AppNotificationButton CreateInstance(string content);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[GuidAttribute("FEAD7C18-4144-59A4-9611-86B7E8191853")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonStatics")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
internal interface Microsoft.Windows.AppNotifications.Builder.IAppNotificationButtonStatics {
    public abstract virtual bool IsToolTipSupported();
    public abstract virtual bool IsButtonStyleSupported();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[GuidAttribute("4547C9E2-4815-538C-BE26-040CE17F8B62")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBox")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
internal interface Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBox {
    public IDictionary`2<string, string> Items { get; public set; }
    public string SelectedItem { get; public set; }
    public string Title { get; public set; }
    public abstract virtual AppNotificationComboBox AddItem(string id, string content);
    public abstract virtual AppNotificationComboBox SetTitle(string value);
    public abstract virtual AppNotificationComboBox SetSelectedItem(string id);
    public abstract virtual IDictionary`2<string, string> get_Items();
    public abstract virtual void set_Items(IDictionary`2<string, string> value);
    public abstract virtual string get_SelectedItem();
    public abstract virtual void set_SelectedItem(string value);
    public abstract virtual string get_Title();
    public abstract virtual void set_Title(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[GuidAttribute("1B31B5B0-9D86-59ED-8629-A79498AB5D4B")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxFactory")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
internal interface Microsoft.Windows.AppNotifications.Builder.IAppNotificationComboBoxFactory {
    public abstract virtual AppNotificationComboBox CreateInstance(string id);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[GuidAttribute("FCED62F2-2074-5641-8630-87A14315AC86")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBar")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
internal interface Microsoft.Windows.AppNotifications.Builder.IAppNotificationProgressBar {
    public string Status { get; public set; }
    public string Title { get; public set; }
    public double Value { get; public set; }
    public string ValueStringOverride { get; public set; }
    public abstract virtual AppNotificationProgressBar SetTitle(string value);
    public abstract virtual AppNotificationProgressBar BindTitle();
    public abstract virtual AppNotificationProgressBar SetStatus(string value);
    public abstract virtual AppNotificationProgressBar BindStatus();
    public abstract virtual AppNotificationProgressBar SetValue(double value);
    public abstract virtual AppNotificationProgressBar BindValue();
    public abstract virtual AppNotificationProgressBar SetValueStringOverride(string value);
    public abstract virtual AppNotificationProgressBar BindValueStringOverride();
    public abstract virtual string get_Status();
    public abstract virtual void set_Status(string value);
    public abstract virtual string get_Title();
    public abstract virtual void set_Title(string value);
    public abstract virtual double get_Value();
    public abstract virtual void set_Value(double value);
    public abstract virtual string get_ValueStringOverride();
    public abstract virtual void set_ValueStringOverride(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppNotifications.Builder")]
[GuidAttribute("23A30D0B-5258-5853-932E-9521A3642AFB")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextProperties")]
[ContractVersionAttribute("Microsoft.Windows.AppNotifications.Builder.AppNotificationBuilderContract", "65536")]
internal interface Microsoft.Windows.AppNotifications.Builder.IAppNotificationTextProperties {
    public bool IncomingCallAlignment { get; public set; }
    public string Language { get; public set; }
    public int MaxLines { get; public set; }
    public abstract virtual AppNotificationTextProperties SetLanguage(string value);
    public abstract virtual AppNotificationTextProperties SetIncomingCallAlignment();
    public abstract virtual AppNotificationTextProperties SetMaxLines(int value);
    public abstract virtual bool get_IncomingCallAlignment();
    public abstract virtual void set_IncomingCallAlignment(bool value);
    public abstract virtual string get_Language();
    public abstract virtual void set_Language(string value);
    public abstract virtual int get_MaxLines();
    public abstract virtual void set_MaxLines(int value);
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<KeyValuePair`2<string, string>> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, KeyValuePair`2[] items);
    private static KeyValuePair`2<string, string> get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IKeyValuePair_2_String__String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IKeyValuePair_2_String__String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string get_Key(IObjectReference _obj);
    private static string get_Value(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IMap_2_String__String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string Lookup(IObjectReference _obj, string key);
    private static bool HasKey(IObjectReference _obj, string key);
    private static IReadOnlyDictionary`2<string, string> GetView(IObjectReference _obj);
    private static bool Insert(IObjectReference _obj, string key, string value);
    private static void Remove(IObjectReference _obj, string key);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMapView_2_String__String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IMapView_2_String__String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string Lookup(IObjectReference _obj, string key);
    private static bool HasKey(IObjectReference _obj, string key);
    private static void Split(IObjectReference _obj, IReadOnlyDictionary`2& first, IReadOnlyDictionary`2& second);
    private static bool Init();
}
internal static class WinRT.ProjectionInitializer : object {
    [ModuleInitializerAttribute]
public static void InitalizeProjection();
}
