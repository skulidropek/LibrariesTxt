[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions : ValueType {
    public static IObjectReference CreateMarshaler(AddPackageDependencyOptions obj);
    public static ObjectReferenceValue CreateMarshaler2(AddPackageDependencyOptions obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static AddPackageDependencyOptions FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(AddPackageDependencyOptions obj);
    public static MarshalerArray<AddPackageDependencyOptions> CreateMarshalerArray(AddPackageDependencyOptions[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static AddPackageDependencyOptions[] FromAbiArray(object box);
    public static void CopyAbiArray(AddPackageDependencyOptions[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(AddPackageDependencyOptions[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<AddPackageDependencyOptions> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptionsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions : ValueType {
    public static IObjectReference CreateMarshaler(CreatePackageDependencyOptions obj);
    public static ObjectReferenceValue CreateMarshaler2(CreatePackageDependencyOptions obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CreatePackageDependencyOptions FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CreatePackageDependencyOptions obj);
    public static MarshalerArray<CreatePackageDependencyOptions> CreateMarshalerArray(CreatePackageDependencyOptions[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CreatePackageDependencyOptions[] FromAbiArray(object box);
    public static void CopyAbiArray(CreatePackageDependencyOptions[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CreatePackageDependencyOptions[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CreatePackageDependencyOptions> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptionsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[GuidAttribute("01B801FD-24E3-5E6B-9F1C-805AB410B604")]
internal interface ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptions {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptionsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_PrependIfRankCollision(IObjectReference _obj);
    internal static void set_PrependIfRankCollision(IObjectReference _obj, bool value);
    internal static int get_Rank(IObjectReference _obj);
    internal static void set_Rank(IObjectReference _obj, int value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("CDBB820F-3C69-55DC-A017-B4132574C5D6")]
internal interface ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptions {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptionsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static PackageDependencyProcessorArchitectures get_Architectures(IObjectReference _obj);
    internal static void set_Architectures(IObjectReference _obj, PackageDependencyProcessorArchitectures value);
    internal static string get_LifetimeArtifact(IObjectReference _obj);
    internal static void set_LifetimeArtifact(IObjectReference _obj, string value);
    internal static PackageDependencyLifetimeArtifactKind get_LifetimeArtifactKind(IObjectReference _obj);
    internal static void set_LifetimeArtifactKind(IObjectReference _obj, PackageDependencyLifetimeArtifactKind value);
    internal static bool get_VerifyDependencyResolution(IObjectReference _obj);
    internal static void set_VerifyDependencyResolution(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("32AE7B95-E358-5A48-9669-C97D85AD6556")]
internal interface ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependency {
}
[GuidAttribute("9902C35A-A3F5-5645-AF0F-CDF9FCA00D5E")]
internal interface ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContext {
}
[GuidAttribute("9914F24F-BEBF-516B-ADAB-5C3E8BF323F8")]
internal interface ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextFactory {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextFactoryMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static PackageDependencyContext CreateInstance(IObjectReference _obj, PackageDependencyContextId contextId);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void Remove(IObjectReference _obj);
    internal static PackageDependencyContextId get_ContextId(IObjectReference _obj);
    internal static string get_PackageDependencyId(IObjectReference _obj);
    internal static string get_PackageFullName(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void Delete(IObjectReference _obj);
    internal static PackageDependencyContext Add(IObjectReference _obj);
    internal static PackageDependencyContext Add(IObjectReference _obj, AddPackageDependencyOptions options);
    internal static string get_Id(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("260583BD-A4AB-53FD-A190-C446BFDB5384")]
internal interface ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyRankStatics {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyRankStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static int get_Default(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("17B656E1-1A58-5F3C-84A8-4430F6E749C2")]
internal interface ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics {
}
[GuidAttribute("C7C6E4F3-C0CA-5FDB-BEF2-57E6020FFE4E")]
internal interface ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics2 {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static UInt32 get_PackageGraphRevisionId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static PackageDependency GetFromId(IObjectReference _obj, string id);
    internal static PackageDependency GetFromIdForSystem(IObjectReference _obj, string id);
    internal static PackageDependency Create(IObjectReference _obj, string packageFamilyName, PackageVersion minVersion);
    internal static PackageDependency Create(IObjectReference _obj, string packageFamilyName, PackageVersion minVersion, CreatePackageDependencyOptions options);
    internal static PackageDependency CreateForSystem(IObjectReference _obj, string packageFamilyName, PackageVersion minVersion, CreatePackageDependencyOptions options);
    internal static UInt32 get_GenerationId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency : ValueType {
    public static IObjectReference CreateMarshaler(PackageDependency obj);
    public static ObjectReferenceValue CreateMarshaler2(PackageDependency obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static PackageDependency FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(PackageDependency obj);
    public static MarshalerArray<PackageDependency> CreateMarshalerArray(PackageDependency[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static PackageDependency[] FromAbiArray(object box);
    public static void CopyAbiArray(PackageDependency[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(PackageDependency[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<PackageDependency> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext : ValueType {
    public static IObjectReference CreateMarshaler(PackageDependencyContext obj);
    public static ObjectReferenceValue CreateMarshaler2(PackageDependencyContext obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static PackageDependencyContext FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(PackageDependencyContext obj);
    public static MarshalerArray<PackageDependencyContext> CreateMarshalerArray(PackageDependencyContext[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static PackageDependencyContext[] FromAbiArray(object box);
    public static void CopyAbiArray(PackageDependencyContext[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(PackageDependencyContext[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<PackageDependencyContext> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions")]
[AddPackageDependencyOptionsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptions")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
public class Microsoft.Windows.ApplicationModel.DynamicDependency.AddPackageDependencyOptions : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_AddPackageDependencyOptions;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IAddPackageDependencyOptions { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_AddPackageDependencyOptions { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool PrependIfRankCollision { get; public set; }
    public int Rank { get; public set; }
    internal AddPackageDependencyOptions(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IAddPackageDependencyOptions();
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_AddPackageDependencyOptions();
    public static AddPackageDependencyOptions FromAbi(IntPtr thisPtr);
    public static bool op_Equality(AddPackageDependencyOptions x, AddPackageDependencyOptions y);
    public static bool op_Inequality(AddPackageDependencyOptions x, AddPackageDependencyOptions y);
    public sealed virtual bool Equals(AddPackageDependencyOptions other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public bool get_PrependIfRankCollision();
    public void set_PrependIfRankCollision(bool value);
    public int get_Rank();
    public void set_Rank(int value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions")]
[CreatePackageDependencyOptionsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptions")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
public class Microsoft.Windows.ApplicationModel.DynamicDependency.CreatePackageDependencyOptions : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_CreatePackageDependencyOptions;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_CreatePackageDependencyOptions { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public PackageDependencyProcessorArchitectures Architectures { get; public set; }
    public string LifetimeArtifact { get; public set; }
    public PackageDependencyLifetimeArtifactKind LifetimeArtifactKind { get; public set; }
    public bool VerifyDependencyResolution { get; public set; }
    internal CreatePackageDependencyOptions(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_ICreatePackageDependencyOptions();
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_CreatePackageDependencyOptions();
    public static CreatePackageDependencyOptions FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CreatePackageDependencyOptions x, CreatePackageDependencyOptions y);
    public static bool op_Inequality(CreatePackageDependencyOptions x, CreatePackageDependencyOptions y);
    public sealed virtual bool Equals(CreatePackageDependencyOptions other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public PackageDependencyProcessorArchitectures get_Architectures();
    public void set_Architectures(PackageDependencyProcessorArchitectures value);
    public string get_LifetimeArtifact();
    public void set_LifetimeArtifact(string value);
    public PackageDependencyLifetimeArtifactKind get_LifetimeArtifactKind();
    public void set_LifetimeArtifactKind(PackageDependencyLifetimeArtifactKind value);
    public bool get_VerifyDependencyResolution();
    public void set_VerifyDependencyResolution(bool value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[ContractVersionAttribute("131072")]
public enum Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract : Enum {
    public int value__;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[GuidAttribute("01B801FD-24E3-5E6B-9F1C-805AB410B604")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptions")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.DynamicDependency.IAddPackageDependencyOptions {
    public bool PrependIfRankCollision { get; public set; }
    public int Rank { get; public set; }
    public abstract virtual bool get_PrependIfRankCollision();
    public abstract virtual void set_PrependIfRankCollision(bool value);
    public abstract virtual int get_Rank();
    public abstract virtual void set_Rank(int value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[GuidAttribute("CDBB820F-3C69-55DC-A017-B4132574C5D6")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptions")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.DynamicDependency.ICreatePackageDependencyOptions {
    public PackageDependencyProcessorArchitectures Architectures { get; public set; }
    public string LifetimeArtifact { get; public set; }
    public PackageDependencyLifetimeArtifactKind LifetimeArtifactKind { get; public set; }
    public bool VerifyDependencyResolution { get; public set; }
    public abstract virtual PackageDependencyProcessorArchitectures get_Architectures();
    public abstract virtual void set_Architectures(PackageDependencyProcessorArchitectures value);
    public abstract virtual string get_LifetimeArtifact();
    public abstract virtual void set_LifetimeArtifact(string value);
    public abstract virtual PackageDependencyLifetimeArtifactKind get_LifetimeArtifactKind();
    public abstract virtual void set_LifetimeArtifactKind(PackageDependencyLifetimeArtifactKind value);
    public abstract virtual bool get_VerifyDependencyResolution();
    public abstract virtual void set_VerifyDependencyResolution(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[GuidAttribute("32AE7B95-E358-5A48-9669-C97D85AD6556")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependency")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependency {
    public string Id { get; }
    public abstract virtual void Delete();
    [OverloadAttribute("Add")]
public abstract virtual PackageDependencyContext Add();
    [OverloadAttribute("Add2")]
public abstract virtual PackageDependencyContext Add(AddPackageDependencyOptions options);
    public abstract virtual string get_Id();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[GuidAttribute("9902C35A-A3F5-5645-AF0F-CDF9FCA00D5E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContext")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContext {
    public PackageDependencyContextId ContextId { get; }
    public string PackageDependencyId { get; }
    public string PackageFullName { get; }
    public abstract virtual void Remove();
    public abstract virtual PackageDependencyContextId get_ContextId();
    public abstract virtual string get_PackageDependencyId();
    public abstract virtual string get_PackageFullName();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[GuidAttribute("9914F24F-BEBF-516B-ADAB-5C3E8BF323F8")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextFactory")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContextFactory {
    public abstract virtual PackageDependencyContext CreateInstance(PackageDependencyContextId contextId);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[GuidAttribute("260583BD-A4AB-53FD-A190-C446BFDB5384")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyRankStatics")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyRankStatics {
    public int Default { get; }
    public abstract virtual int get_Default();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[GuidAttribute("17B656E1-1A58-5F3C-84A8-4430F6E749C2")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics {
    public UInt32 GenerationId { get; }
    public abstract virtual PackageDependency GetFromId(string id);
    public abstract virtual PackageDependency GetFromIdForSystem(string id);
    [OverloadAttribute("Create")]
public abstract virtual PackageDependency Create(string packageFamilyName, PackageVersion minVersion);
    [OverloadAttribute("Create2")]
public abstract virtual PackageDependency Create(string packageFamilyName, PackageVersion minVersion, CreatePackageDependencyOptions options);
    public abstract virtual PackageDependency CreateForSystem(string packageFamilyName, PackageVersion minVersion, CreatePackageDependencyOptions options);
    public abstract virtual UInt32 get_GenerationId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[GuidAttribute("C7C6E4F3-C0CA-5FDB-BEF2-57E6020FFE4E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics2")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "131072")]
internal interface Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyStatics2 {
    public UInt32 PackageGraphRevisionId { get; }
    public abstract virtual UInt32 get_PackageGraphRevisionId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency")]
[PackageDependencyRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependency")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
public class Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependency : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependency { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics2 { get; }
    public static UInt32 GenerationId { get; }
    public static UInt32 PackageGraphRevisionId { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string Id { get; }
    internal PackageDependency(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependency();
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics();
    public static PackageDependency GetFromId(string id);
    public static PackageDependency GetFromIdForSystem(string id);
    public static PackageDependency Create(string packageFamilyName, PackageVersion minVersion);
    public static PackageDependency Create(string packageFamilyName, PackageVersion minVersion, CreatePackageDependencyOptions options);
    public static PackageDependency CreateForSystem(string packageFamilyName, PackageVersion minVersion, CreatePackageDependencyOptions options);
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyStatics2();
    public static UInt32 get_GenerationId();
    public static UInt32 get_PackageGraphRevisionId();
    public static PackageDependency FromAbi(IntPtr thisPtr);
    public static bool op_Equality(PackageDependency x, PackageDependency y);
    public static bool op_Inequality(PackageDependency x, PackageDependency y);
    public sealed virtual bool Equals(PackageDependency other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void Delete();
    public PackageDependencyContext Add();
    public PackageDependencyContext Add(AddPackageDependencyOptions options);
    public string get_Id();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext")]
[PackageDependencyContextRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.IPackageDependencyContext")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
public class Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContext : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContextFactory;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContext { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContextFactory { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public PackageDependencyContextId ContextId { get; }
    public string PackageDependencyId { get; }
    public string PackageFullName { get; }
    public PackageDependencyContext(PackageDependencyContextId contextId);
    internal PackageDependencyContext(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContext();
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyContextFactory();
    public static PackageDependencyContext FromAbi(IntPtr thisPtr);
    public static bool op_Equality(PackageDependencyContext x, PackageDependencyContext y);
    public static bool op_Inequality(PackageDependencyContext x, PackageDependencyContext y);
    public sealed virtual bool Equals(PackageDependencyContext other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void Remove();
    public PackageDependencyContextId get_ContextId();
    public string get_PackageDependencyId();
    public string get_PackageFullName();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency", "struct(Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextId;u8)")]
[WindowsRuntimeHelperTypeAttribute]
[WinRTExposedTypeAttribute("WinRT.StructTypeDetails`2<Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextId,Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextId>")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
public class Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyContextId : ValueType {
    public ulong Id;
    public PackageDependencyContextId(ulong _Id);
    public static bool op_Equality(PackageDependencyContextId x, PackageDependencyContextId y);
    public static bool op_Inequality(PackageDependencyContextId x, PackageDependencyContextId y);
    public sealed virtual bool Equals(PackageDependencyContextId other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyLifetimeArtifactKind>")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
public enum Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyLifetimeArtifactKind : Enum {
    public int value__;
    public static PackageDependencyLifetimeArtifactKind Process;
    public static PackageDependencyLifetimeArtifactKind FilePath;
    public static PackageDependencyLifetimeArtifactKind RegistryKey;
}
[FlagsAttribute]
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyProcessorArchitectures>")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
public enum Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyProcessorArchitectures : Enum {
    public UInt32 value__;
    public static PackageDependencyProcessorArchitectures None;
    public static PackageDependencyProcessorArchitectures Neutral;
    public static PackageDependencyProcessorArchitectures X86;
    public static PackageDependencyProcessorArchitectures X64;
    public static PackageDependencyProcessorArchitectures Arm;
    public static PackageDependencyProcessorArchitectures Arm64;
    public static PackageDependencyProcessorArchitectures X86OnArm64;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.DynamicDependency.DynamicDependencyContract", "65536")]
public static class Microsoft.Windows.ApplicationModel.DynamicDependency.PackageDependencyRank : object {
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyRankStatics;
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyRankStatics { get; }
    public static int Default { get; }
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_DynamicDependency_IPackageDependencyRankStatics();
    public static int get_Default();
}
internal static class WinRT.ProjectionInitializer : object {
    [ModuleInitializerAttribute]
public static void InitalizeProjection();
}
