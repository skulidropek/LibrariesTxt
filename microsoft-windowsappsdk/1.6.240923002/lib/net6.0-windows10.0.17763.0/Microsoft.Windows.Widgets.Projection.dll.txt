[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs : ValueType {
    public static IObjectReference CreateMarshaler(CustomQueryParametersRequestedArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CustomQueryParametersRequestedArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CustomQueryParametersRequestedArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CustomQueryParametersRequestedArgs obj);
    public static MarshalerArray<CustomQueryParametersRequestedArgs> CreateMarshalerArray(CustomQueryParametersRequestedArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CustomQueryParametersRequestedArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CustomQueryParametersRequestedArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CustomQueryParametersRequestedArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CustomQueryParametersRequestedArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions : ValueType {
    public static IObjectReference CreateMarshaler(CustomQueryParametersUpdateOptions obj);
    public static ObjectReferenceValue CreateMarshaler2(CustomQueryParametersUpdateOptions obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CustomQueryParametersUpdateOptions FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CustomQueryParametersUpdateOptions obj);
    public static MarshalerArray<CustomQueryParametersUpdateOptions> CreateMarshalerArray(CustomQueryParametersUpdateOptions[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CustomQueryParametersUpdateOptions[] FromAbiArray(object box);
    public static void CopyAbiArray(CustomQueryParametersUpdateOptions[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CustomQueryParametersUpdateOptions[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CustomQueryParametersUpdateOptions> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptionsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs : ValueType {
    public static IObjectReference CreateMarshaler(FeedAnalyticsInfoReportedArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedAnalyticsInfoReportedArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedAnalyticsInfoReportedArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedAnalyticsInfoReportedArgs obj);
    public static MarshalerArray<FeedAnalyticsInfoReportedArgs> CreateMarshalerArray(FeedAnalyticsInfoReportedArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedAnalyticsInfoReportedArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedAnalyticsInfoReportedArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedAnalyticsInfoReportedArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedAnalyticsInfoReportedArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs : ValueType {
    public static IObjectReference CreateMarshaler(FeedDisabledArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedDisabledArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedDisabledArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedDisabledArgs obj);
    public static MarshalerArray<FeedDisabledArgs> CreateMarshalerArray(FeedDisabledArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedDisabledArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedDisabledArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedDisabledArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedDisabledArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs : ValueType {
    public static IObjectReference CreateMarshaler(FeedEnabledArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedEnabledArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedEnabledArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedEnabledArgs obj);
    public static MarshalerArray<FeedEnabledArgs> CreateMarshalerArray(FeedEnabledArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedEnabledArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedEnabledArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedEnabledArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedEnabledArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs : ValueType {
    public static IObjectReference CreateMarshaler(FeedErrorInfoReportedArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedErrorInfoReportedArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedErrorInfoReportedArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedErrorInfoReportedArgs obj);
    public static MarshalerArray<FeedErrorInfoReportedArgs> CreateMarshalerArray(FeedErrorInfoReportedArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedErrorInfoReportedArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedErrorInfoReportedArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedErrorInfoReportedArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedErrorInfoReportedArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedManager : ValueType {
    public static IObjectReference CreateMarshaler(FeedManager obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedManager obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedManager FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedManager obj);
    public static MarshalerArray<FeedManager> CreateMarshalerArray(FeedManager[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedManager[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedManager[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedManager[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedManager> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedManagerRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs : ValueType {
    public static IObjectReference CreateMarshaler(FeedMessageReceivedArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedMessageReceivedArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedMessageReceivedArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedMessageReceivedArgs obj);
    public static MarshalerArray<FeedMessageReceivedArgs> CreateMarshalerArray(FeedMessageReceivedArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedMessageReceivedArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedMessageReceivedArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedMessageReceivedArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedMessageReceivedArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs : ValueType {
    public static IObjectReference CreateMarshaler(FeedProviderDisabledArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedProviderDisabledArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedProviderDisabledArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedProviderDisabledArgs obj);
    public static MarshalerArray<FeedProviderDisabledArgs> CreateMarshalerArray(FeedProviderDisabledArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedProviderDisabledArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedProviderDisabledArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedProviderDisabledArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedProviderDisabledArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs : ValueType {
    public static IObjectReference CreateMarshaler(FeedProviderEnabledArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedProviderEnabledArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedProviderEnabledArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedProviderEnabledArgs obj);
    public static MarshalerArray<FeedProviderEnabledArgs> CreateMarshalerArray(FeedProviderEnabledArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedProviderEnabledArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedProviderEnabledArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedProviderEnabledArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedProviderEnabledArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo : ValueType {
    public static IObjectReference CreateMarshaler(FeedProviderInfo obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedProviderInfo obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedProviderInfo FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedProviderInfo obj);
    public static MarshalerArray<FeedProviderInfo> CreateMarshalerArray(FeedProviderInfo[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedProviderInfo[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedProviderInfo[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedProviderInfo[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedProviderInfo> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfoRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest : ValueType {
    public static IObjectReference CreateMarshaler(FeedResourceRequest obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedResourceRequest obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedResourceRequest FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedResourceRequest obj);
    public static MarshalerArray<FeedResourceRequest> CreateMarshalerArray(FeedResourceRequest[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedResourceRequest[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedResourceRequest[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedResourceRequest[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedResourceRequest> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs : ValueType {
    public static IObjectReference CreateMarshaler(FeedResourceRequestedArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedResourceRequestedArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedResourceRequestedArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedResourceRequestedArgs obj);
    public static MarshalerArray<FeedResourceRequestedArgs> CreateMarshalerArray(FeedResourceRequestedArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedResourceRequestedArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedResourceRequestedArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedResourceRequestedArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedResourceRequestedArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse : ValueType {
    public static IObjectReference CreateMarshaler(FeedResourceResponse obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedResourceResponse obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedResourceResponse FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedResourceResponse obj);
    public static MarshalerArray<FeedResourceResponse> CreateMarshalerArray(FeedResourceResponse[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedResourceResponse[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedResourceResponse[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedResourceResponse[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedResourceResponse> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponseRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[GuidAttribute("DC2B0CD8-7936-5346-9371-B21484C7D859")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersRequestedArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersRequestedArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_FeedProviderDefinitionId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("753F1177-4909-568A-B070-98A3139205EC")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptions {
}
[GuidAttribute("34E318CD-3884-53C0-911C-225F32228FAE")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsFactory {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsFactoryMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CustomQueryParametersUpdateOptions CreateInstance(IObjectReference _obj, string feedProviderDefinitionId, string customQueryParameters);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_CustomQueryParameters(IObjectReference _obj);
    internal static string get_FeedProviderDefinitionId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("3C0E3D65-ED47-5B8A-B650-39A7EDF18942")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_AnalyticsJson(IObjectReference _obj);
    internal static string get_FeedDefinitionId(IObjectReference _obj);
    internal static string get_FeedProviderDefinitionId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("5D44AE2A-072C-4DF9-9FE5-34D5D2E9FF63")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnnouncementInvokedTarget {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IFeedAnnouncementInvokedTarget();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnAnnouncementInvoked_0(IntPtr thisPtr, IntPtr args);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnnouncementInvokedTarget.OnAnnouncementInvoked(FeedAnnouncementInvokedArgs args);
}
public static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnnouncementInvokedTargetMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static void OnAnnouncementInvoked(IObjectReference _obj, FeedAnnouncementInvokedArgs args);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[GuidAttribute("95300612-ACA7-53C0-9CF6-D803689132C1")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedDisabledArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedDisabledArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_FeedDefinitionId(IObjectReference _obj);
    internal static string get_FeedProviderDefinitionId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("EFF4B2D7-7347-5969-A77D-CAC433F0FDAE")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedEnabledArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedEnabledArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_FeedDefinitionId(IObjectReference _obj);
    internal static string get_FeedProviderDefinitionId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("62DE018C-161E-52D0-9DBE-AEC106FB6600")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_ErrorJson(IObjectReference _obj);
    internal static string get_FeedDefinitionId(IObjectReference _obj);
    internal static string get_FeedProviderDefinitionId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("87DF6A84-15AA-45CB-8911-5CAFAB57F723")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IFeedManager();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_GetEnabledFeedProviders_0(IntPtr thisPtr, Int32* __resultSize, IntPtr* result);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_SetCustomQueryParameters_1(IntPtr thisPtr, IntPtr options);
    private sealed virtual override FeedProviderInfo[] global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager.GetEnabledFeedProviders();
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager.SetCustomQueryParameters(CustomQueryParametersUpdateOptions options);
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("5838300A-A069-455D-9943-BA078ADA00D8")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2 {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IFeedManager2();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_SendMessageToContent_0(IntPtr thisPtr, IntPtr feedProviderDefinitionId, IntPtr feedDefinitionId, IntPtr message);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_TryShowAnnouncement_1(IntPtr thisPtr, IntPtr feedProviderDefinitionId, IntPtr feedDefinitionId, IntPtr announcement);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2.SendMessageToContent(string feedProviderDefinitionId, string feedDefinitionId, string message);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2.TryShowAnnouncement(string feedProviderDefinitionId, string feedDefinitionId, FeedAnnouncement announcement);
}
public static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static void SendMessageToContent(IObjectReference _obj, string feedProviderDefinitionId, string feedDefinitionId, string message);
    public static void TryShowAnnouncement(IObjectReference _obj, string feedProviderDefinitionId, string feedDefinitionId, FeedAnnouncement announcement);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
public static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static FeedProviderInfo[] GetEnabledFeedProviders(IObjectReference _obj);
    public static void SetCustomQueryParameters(IObjectReference _obj, CustomQueryParametersUpdateOptions options);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[GuidAttribute("4BAF5174-77D6-5E2A-94EA-4F14CCDB1F2C")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerStatics {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static FeedManager GetDefault(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4ED6ECF9-4C74-5A0B-AE04-BEF6DD776F8A")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_FeedDefinitionId(IObjectReference _obj);
    internal static string get_FeedProviderDefinitionId(IObjectReference _obj);
    internal static string get_Message(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("7293A12B-0329-458D-AC25-5332BE478FDE")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IFeedProvider();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnFeedProviderEnabled_0(IntPtr thisPtr, IntPtr args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnFeedProviderDisabled_1(IntPtr thisPtr, IntPtr args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnFeedEnabled_2(IntPtr thisPtr, IntPtr args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnFeedDisabled_3(IntPtr thisPtr, IntPtr args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnCustomQueryParametersRequested_4(IntPtr thisPtr, IntPtr args);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider.OnFeedProviderEnabled(FeedProviderEnabledArgs args);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider.OnFeedProviderDisabled(FeedProviderDisabledArgs args);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider.OnFeedEnabled(FeedEnabledArgs args);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider.OnFeedDisabled(FeedDisabledArgs args);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider.OnCustomQueryParametersRequested(CustomQueryParametersRequestedArgs args);
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("F6885791-3085-4BD7-9CB1-4F1354C3A687")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderAnalytics {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IFeedProviderAnalytics();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnAnalyticsInfoReported_0(IntPtr thisPtr, IntPtr args);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderAnalytics.OnAnalyticsInfoReported(FeedAnalyticsInfoReportedArgs args);
}
public static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderAnalyticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static void OnAnalyticsInfoReported(IObjectReference _obj, FeedAnalyticsInfoReportedArgs args);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[GuidAttribute("19B65AEC-E01D-5E8C-AB5F-324212E7CD30")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderDisabledArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderDisabledArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_FeedProviderDefinitionId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("821FC9AF-0DE6-5A9B-9AE6-E179117B40E4")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderEnabledArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderEnabledArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_FeedProviderDefinitionId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("6611E00A-D86C-49A3-9381-B7DA67EE62DC")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderErrors {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IFeedProviderErrors();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnErrorInfoReported_0(IntPtr thisPtr, IntPtr args);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderErrors.OnErrorInfoReported(FeedErrorInfoReportedArgs args);
}
public static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderErrorsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static void OnErrorInfoReported(IObjectReference _obj, FeedErrorInfoReportedArgs args);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[GuidAttribute("73C37049-3C03-5896-8532-F9DFDAEB723F")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderInfo {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderInfoMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static String[] get_EnabledFeedDefinitionIds(IObjectReference _obj);
    internal static string get_FeedProviderDefinitionId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("60C2442A-4C9D-4880-BA26-CACA9E567DD4")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMessage {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IFeedProviderMessage();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnMessageReceived_0(IntPtr thisPtr, IntPtr args);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMessage.OnMessageReceived(FeedMessageReceivedArgs args);
}
public static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMessageMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static void OnMessageReceived(IObjectReference _obj, FeedMessageReceivedArgs args);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
public static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static void OnFeedProviderEnabled(IObjectReference _obj, FeedProviderEnabledArgs args);
    public static void OnFeedProviderDisabled(IObjectReference _obj, FeedProviderDisabledArgs args);
    public static void OnFeedEnabled(IObjectReference _obj, FeedEnabledArgs args);
    public static void OnFeedDisabled(IObjectReference _obj, FeedDisabledArgs args);
    public static void OnCustomQueryParametersRequested(IObjectReference _obj, CustomQueryParametersRequestedArgs args);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("E1B6266D-88A0-416C-9440-E341CB047CD3")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceProvider {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IFeedResourceProvider();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnResourceRequested_0(IntPtr thisPtr, IntPtr args);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceProvider.OnResourceRequested(FeedResourceRequestedArgs args);
}
public static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceProviderMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static void OnResourceRequested(IObjectReference _obj, FeedResourceRequestedArgs args);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[GuidAttribute("E62E479C-E21F-5863-B4C9-DF1BE2227981")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequest {
}
[GuidAttribute("360EB709-0BC9-52C1-9C70-3C7D413173D8")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static string get_FeedDefinitionId(IObjectReference _obj);
    internal static string get_FeedProviderDefinitionId(IObjectReference _obj);
    internal static FeedResourceRequest get_Request(IObjectReference _obj);
    internal static FeedResourceResponse get_Response(IObjectReference _obj);
    internal static void set_Response(IObjectReference _obj, FeedResourceResponse value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IRandomAccessStreamReference get_Content(IObjectReference _obj);
    internal static void set_Content(IObjectReference _obj, IRandomAccessStreamReference value);
    internal static StringMap get_Headers(IObjectReference _obj);
    internal static void set_Headers(IObjectReference _obj, StringMap value);
    internal static string get_Method(IObjectReference _obj);
    internal static void set_Method(IObjectReference _obj, string value);
    internal static string get_Uri(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("F831824E-7AEF-53FC-B7EE-32ADE675A3AD")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponse {
}
[GuidAttribute("DB01690D-2547-5D7A-B625-D1629F443C5C")]
internal interface ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseFactory {
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseFactoryMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static FeedResourceResponse CreateInstance(IObjectReference _obj, IRandomAccessStreamReference content, string reasonPhrase, int statusCode);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IRandomAccessStreamReference get_Content(IObjectReference _obj);
    internal static IEnumerable`1<KeyValuePair`2<string, string>> get_Headers(IObjectReference _obj);
    internal static void set_Headers(IObjectReference _obj, IEnumerable`1<KeyValuePair`2<string, string>> value);
    internal static string get_ReasonPhrase(IObjectReference _obj);
    internal static int get_StatusCode(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Notifications.FeedAnnouncement : ValueType {
    public static IObjectReference CreateMarshaler(FeedAnnouncement obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedAnnouncement obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedAnnouncement FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedAnnouncement obj);
    public static MarshalerArray<FeedAnnouncement> CreateMarshalerArray(FeedAnnouncement[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedAnnouncement[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedAnnouncement[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedAnnouncement[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedAnnouncement> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Notifications.FeedAnnouncementInvokedArgs : ValueType {
    public static IObjectReference CreateMarshaler(FeedAnnouncementInvokedArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(FeedAnnouncementInvokedArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static FeedAnnouncementInvokedArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(FeedAnnouncementInvokedArgs obj);
    public static MarshalerArray<FeedAnnouncementInvokedArgs> CreateMarshalerArray(FeedAnnouncementInvokedArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static FeedAnnouncementInvokedArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(FeedAnnouncementInvokedArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(FeedAnnouncementInvokedArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<FeedAnnouncementInvokedArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Notifications.FeedAnnouncementInvokedArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Notifications.FeedAnnouncementRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[GuidAttribute("B88E8C2C-D251-5344-ACC2-8CF9BA07EC15")]
internal interface ABI.Microsoft.Windows.Widgets.Notifications.IFeedAnnouncement {
}
[GuidAttribute("22074243-46D8-5AF2-8715-1C76D1CB774C")]
internal interface ABI.Microsoft.Windows.Widgets.Notifications.IFeedAnnouncementFactory {
}
internal static class ABI.Microsoft.Windows.Widgets.Notifications.IFeedAnnouncementFactoryMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static FeedAnnouncement CreateInstance(IObjectReference _obj, string id, string primaryText, string secondaryText, Uri lightModeIcon, Uri darkModeIcon);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("70A48D98-323D-5F19-A1E1-B63FE36EDBF2")]
internal interface ABI.Microsoft.Windows.Widgets.Notifications.IFeedAnnouncementInvokedArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Notifications.IFeedAnnouncementInvokedArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static AnnouncementActionKind get_ActionKind(IObjectReference _obj);
    internal static string get_AnnouncementId(IObjectReference _obj);
    internal static string get_FeedDefinitionId(IObjectReference _obj);
    internal static string get_FeedProviderDefinitionId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.Widgets.Notifications.IFeedAnnouncementMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_CustomAccessibilityText(IObjectReference _obj);
    internal static void set_CustomAccessibilityText(IObjectReference _obj, string value);
    internal static Uri get_DarkModeIconUri(IObjectReference _obj);
    internal static void set_DarkModeIconUri(IObjectReference _obj, Uri value);
    internal static TimeSpan get_Duration(IObjectReference _obj);
    internal static void set_Duration(IObjectReference _obj, TimeSpan value);
    internal static DateTimeOffset get_ExpirationTime(IObjectReference _obj);
    internal static void set_ExpirationTime(IObjectReference _obj, DateTimeOffset value);
    internal static string get_Id(IObjectReference _obj);
    internal static void set_Id(IObjectReference _obj, string value);
    internal static bool get_IsSecondaryTextSubtle(IObjectReference _obj);
    internal static void set_IsSecondaryTextSubtle(IObjectReference _obj, bool value);
    internal static Uri get_LightModeIconUri(IObjectReference _obj);
    internal static void set_LightModeIconUri(IObjectReference _obj, Uri value);
    internal static string get_PrimaryText(IObjectReference _obj);
    internal static void set_PrimaryText(IObjectReference _obj, string value);
    internal static AnnouncementTextColor get_PrimaryTextColor(IObjectReference _obj);
    internal static void set_PrimaryTextColor(IObjectReference _obj, AnnouncementTextColor value);
    internal static string get_SecondaryText(IObjectReference _obj);
    internal static void set_SecondaryText(IObjectReference _obj, string value);
    internal static AnnouncementTextColor get_SecondaryTextColor(IObjectReference _obj);
    internal static void set_SecondaryTextColor(IObjectReference _obj, AnnouncementTextColor value);
    internal static bool get_ShowBadgeIfUserNotEngaged(IObjectReference _obj);
    internal static void set_ShowBadgeIfUserNotEngaged(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C593CC57-04B9-52CA-88AD-46FEA21EA340")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_CustomState(IObjectReference _obj);
    internal static string get_Data(IObjectReference _obj);
    internal static string get_Verb(IObjectReference _obj);
    internal static WidgetContext get_WidgetContext(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("1D9E5FB5-2BCE-5350-87B1-D63199526639")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetAnalyticsInfoReportedArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetAnalyticsInfoReportedArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_AnalyticsJson(IObjectReference _obj);
    internal static WidgetContext get_WidgetContext(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("903C518B-40BC-5BC6-88F7-AF9D81C0CDC1")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetContext {
}
[GuidAttribute("2C226D54-2252-576B-A197-370B28D25C2F")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextChangedArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextChangedArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static WidgetContext get_WidgetContext(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_DefinitionId(IObjectReference _obj);
    internal static string get_Id(IObjectReference _obj);
    internal static bool get_IsActive(IObjectReference _obj);
    internal static WidgetSize get_Size(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("41DEA311-DD9B-5B8B-B493-3A30552116B8")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetCustomizationRequestedArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetCustomizationRequestedArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_CustomState(IObjectReference _obj);
    internal static WidgetContext get_WidgetContext(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("30EFA627-B21F-55D5-B91A-B23B4AA13645")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetErrorInfoReportedArgs {
}
internal static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetErrorInfoReportedArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_ErrorJson(IObjectReference _obj);
    internal static WidgetContext get_WidgetContext(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("CEA11F42-A020-5DB5-89E2-B7DECE4AE5CB")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfo {
}
internal static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfoMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_CustomState(IObjectReference _obj);
    internal static string get_Data(IObjectReference _obj);
    internal static DateTimeOffset get_LastUpdateTime(IObjectReference _obj);
    internal static string get_Template(IObjectReference _obj);
    internal static WidgetContext get_WidgetContext(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("71CB10C0-671E-48E3-B995-207940397123")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetManager {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IWidgetManager();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_UpdateWidget_0(IntPtr thisPtr, IntPtr widgetUpdateRequestOptions);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_GetWidgetIds_1(IntPtr thisPtr, Int32* __resultSize, IntPtr* result);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_GetWidgetInfo_2(IntPtr thisPtr, IntPtr widgetId, IntPtr* result);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_GetWidgetInfos_3(IntPtr thisPtr, Int32* __resultSize, IntPtr* result);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_DeleteWidget_4(IntPtr thisPtr, IntPtr widgetId);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Providers.IWidgetManager.UpdateWidget(WidgetUpdateRequestOptions widgetUpdateRequestOptions);
    private sealed virtual override String[] global::Microsoft.Windows.Widgets.Providers.IWidgetManager.GetWidgetIds();
    private sealed virtual override WidgetInfo global::Microsoft.Windows.Widgets.Providers.IWidgetManager.GetWidgetInfo(string widgetId);
    private sealed virtual override WidgetInfo[] global::Microsoft.Windows.Widgets.Providers.IWidgetManager.GetWidgetInfos();
    private sealed virtual override void global::Microsoft.Windows.Widgets.Providers.IWidgetManager.DeleteWidget(string widgetId);
}
public static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static void UpdateWidget(IObjectReference _obj, WidgetUpdateRequestOptions widgetUpdateRequestOptions);
    public static String[] GetWidgetIds(IObjectReference _obj);
    public static WidgetInfo GetWidgetInfo(IObjectReference _obj, string widgetId);
    public static WidgetInfo[] GetWidgetInfos(IObjectReference _obj);
    public static void DeleteWidget(IObjectReference _obj, string widgetId);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[GuidAttribute("7F233B06-28E5-5E2B-8C04-A4FA747C28C7")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerStatics {
}
internal static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static WidgetManager GetDefault(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("5C5774CC-72A0-452D-B9ED-075C0DD25EED")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetProvider {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IWidgetProvider();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_CreateWidget_0(IntPtr thisPtr, IntPtr widgetContext);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_DeleteWidget_1(IntPtr thisPtr, IntPtr widgetId, IntPtr customState);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnActionInvoked_2(IntPtr thisPtr, IntPtr actionInvokedArgs);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnWidgetContextChanged_3(IntPtr thisPtr, IntPtr contextChangedArgs);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Activate_4(IntPtr thisPtr, IntPtr widgetContext);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Deactivate_5(IntPtr thisPtr, IntPtr widgetId);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider.CreateWidget(WidgetContext widgetContext);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider.DeleteWidget(string widgetId, string customState);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider.OnActionInvoked(WidgetActionInvokedArgs actionInvokedArgs);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider.OnWidgetContextChanged(WidgetContextChangedArgs contextChangedArgs);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider.Activate(WidgetContext widgetContext);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider.Deactivate(string widgetId);
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("38C3A963-DD93-479D-9276-04BF84EE1816")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetProvider2 {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IWidgetProvider2();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnCustomizationRequested_0(IntPtr thisPtr, IntPtr customizationRequestedArgs);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Providers.IWidgetProvider2.OnCustomizationRequested(WidgetCustomizationRequestedArgs customizationRequestedArgs);
}
public static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetProvider2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static void OnCustomizationRequested(IObjectReference _obj, WidgetCustomizationRequestedArgs customizationRequestedArgs);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("661985A5-D187-482D-9EEF-6FDA05D21845")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderAnalytics {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IWidgetProviderAnalytics();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnAnalyticsInfoReported_0(IntPtr thisPtr, IntPtr args);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Providers.IWidgetProviderAnalytics.OnAnalyticsInfoReported(WidgetAnalyticsInfoReportedArgs args);
}
public static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderAnalyticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static void OnAnalyticsInfoReported(IObjectReference _obj, WidgetAnalyticsInfoReportedArgs args);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("90C1B5F0-0D3A-4AC6-ABB7-C97B367B8FCC")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderErrors {
    public static IntPtr AbiToProjectionVftablePtr;
    private static IWidgetProviderErrors();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_OnErrorInfoReported_0(IntPtr thisPtr, IntPtr args);
    private sealed virtual override void global::Microsoft.Windows.Widgets.Providers.IWidgetProviderErrors.OnErrorInfoReported(WidgetErrorInfoReportedArgs args);
}
public static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderErrorsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static void OnErrorInfoReported(IObjectReference _obj, WidgetErrorInfoReportedArgs args);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
public static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static void CreateWidget(IObjectReference _obj, WidgetContext widgetContext);
    public static void DeleteWidget(IObjectReference _obj, string widgetId, string customState);
    public static void OnActionInvoked(IObjectReference _obj, WidgetActionInvokedArgs actionInvokedArgs);
    public static void OnWidgetContextChanged(IObjectReference _obj, WidgetContextChangedArgs contextChangedArgs);
    public static void Activate(IObjectReference _obj, WidgetContext widgetContext);
    public static void Deactivate(IObjectReference _obj, string widgetId);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[GuidAttribute("B09CA8F7-7424-5687-BAAF-7DD6FA639672")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptions {
}
[GuidAttribute("E0E00AF8-1D10-57A8-9419-3F568E854DAA")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsFactory {
}
internal static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsFactoryMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static WidgetUpdateRequestOptions CreateInstance(IObjectReference _obj, string widgetId);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_CustomState(IObjectReference _obj);
    internal static void set_CustomState(IObjectReference _obj, string value);
    internal static string get_Data(IObjectReference _obj);
    internal static void set_Data(IObjectReference _obj, string value);
    internal static string get_Template(IObjectReference _obj);
    internal static void set_Template(IObjectReference _obj, string value);
    internal static string get_WidgetId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4645B5E3-D332-5D11-82F0-3607E5DF6018")]
internal interface ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsStatics {
}
internal static class ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_UnsetValue(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs : ValueType {
    public static IObjectReference CreateMarshaler(WidgetActionInvokedArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(WidgetActionInvokedArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static WidgetActionInvokedArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(WidgetActionInvokedArgs obj);
    public static MarshalerArray<WidgetActionInvokedArgs> CreateMarshalerArray(WidgetActionInvokedArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static WidgetActionInvokedArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(WidgetActionInvokedArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(WidgetActionInvokedArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<WidgetActionInvokedArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs : ValueType {
    public static IObjectReference CreateMarshaler(WidgetAnalyticsInfoReportedArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(WidgetAnalyticsInfoReportedArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static WidgetAnalyticsInfoReportedArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(WidgetAnalyticsInfoReportedArgs obj);
    public static MarshalerArray<WidgetAnalyticsInfoReportedArgs> CreateMarshalerArray(WidgetAnalyticsInfoReportedArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static WidgetAnalyticsInfoReportedArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(WidgetAnalyticsInfoReportedArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(WidgetAnalyticsInfoReportedArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<WidgetAnalyticsInfoReportedArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Providers.WidgetContext : ValueType {
    public static IObjectReference CreateMarshaler(WidgetContext obj);
    public static ObjectReferenceValue CreateMarshaler2(WidgetContext obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static WidgetContext FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(WidgetContext obj);
    public static MarshalerArray<WidgetContext> CreateMarshalerArray(WidgetContext[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static WidgetContext[] FromAbiArray(object box);
    public static void CopyAbiArray(WidgetContext[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(WidgetContext[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<WidgetContext> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs : ValueType {
    public static IObjectReference CreateMarshaler(WidgetContextChangedArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(WidgetContextChangedArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static WidgetContextChangedArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(WidgetContextChangedArgs obj);
    public static MarshalerArray<WidgetContextChangedArgs> CreateMarshalerArray(WidgetContextChangedArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static WidgetContextChangedArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(WidgetContextChangedArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(WidgetContextChangedArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<WidgetContextChangedArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Providers.WidgetContextRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs : ValueType {
    public static IObjectReference CreateMarshaler(WidgetCustomizationRequestedArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(WidgetCustomizationRequestedArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static WidgetCustomizationRequestedArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(WidgetCustomizationRequestedArgs obj);
    public static MarshalerArray<WidgetCustomizationRequestedArgs> CreateMarshalerArray(WidgetCustomizationRequestedArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static WidgetCustomizationRequestedArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(WidgetCustomizationRequestedArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(WidgetCustomizationRequestedArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<WidgetCustomizationRequestedArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs : ValueType {
    public static IObjectReference CreateMarshaler(WidgetErrorInfoReportedArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(WidgetErrorInfoReportedArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static WidgetErrorInfoReportedArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(WidgetErrorInfoReportedArgs obj);
    public static MarshalerArray<WidgetErrorInfoReportedArgs> CreateMarshalerArray(WidgetErrorInfoReportedArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static WidgetErrorInfoReportedArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(WidgetErrorInfoReportedArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(WidgetErrorInfoReportedArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<WidgetErrorInfoReportedArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Providers.WidgetInfo : ValueType {
    public static IObjectReference CreateMarshaler(WidgetInfo obj);
    public static ObjectReferenceValue CreateMarshaler2(WidgetInfo obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static WidgetInfo FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(WidgetInfo obj);
    public static MarshalerArray<WidgetInfo> CreateMarshalerArray(WidgetInfo[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static WidgetInfo[] FromAbiArray(object box);
    public static void CopyAbiArray(WidgetInfo[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(WidgetInfo[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<WidgetInfo> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Providers.WidgetInfoRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Providers.WidgetManager : ValueType {
    public static IObjectReference CreateMarshaler(WidgetManager obj);
    public static ObjectReferenceValue CreateMarshaler2(WidgetManager obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static WidgetManager FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(WidgetManager obj);
    public static MarshalerArray<WidgetManager> CreateMarshalerArray(WidgetManager[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static WidgetManager[] FromAbiArray(object box);
    public static void CopyAbiArray(WidgetManager[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(WidgetManager[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<WidgetManager> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Providers.WidgetManagerRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions : ValueType {
    public static IObjectReference CreateMarshaler(WidgetUpdateRequestOptions obj);
    public static ObjectReferenceValue CreateMarshaler2(WidgetUpdateRequestOptions obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static WidgetUpdateRequestOptions FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(WidgetUpdateRequestOptions obj);
    public static MarshalerArray<WidgetUpdateRequestOptions> CreateMarshalerArray(WidgetUpdateRequestOptions[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static WidgetUpdateRequestOptions[] FromAbiArray(object box);
    public static void CopyAbiArray(WidgetUpdateRequestOptions[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(WidgetUpdateRequestOptions[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<WidgetUpdateRequestOptions> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptionsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs")]
[CustomQueryParametersRequestedArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersRequestedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
public class Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersRequestedArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersRequestedArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string FeedProviderDefinitionId { get; }
    internal CustomQueryParametersRequestedArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersRequestedArgs();
    public static CustomQueryParametersRequestedArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CustomQueryParametersRequestedArgs x, CustomQueryParametersRequestedArgs y);
    public static bool op_Inequality(CustomQueryParametersRequestedArgs x, CustomQueryParametersRequestedArgs y);
    public sealed virtual bool Equals(CustomQueryParametersRequestedArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_FeedProviderDefinitionId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions")]
[CustomQueryParametersUpdateOptionsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptions")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
public class Microsoft.Windows.Widgets.Feeds.Providers.CustomQueryParametersUpdateOptions : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptionsFactory;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptions { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptionsFactory { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string CustomQueryParameters { get; }
    public string FeedProviderDefinitionId { get; }
    public CustomQueryParametersUpdateOptions(string feedProviderDefinitionId, string customQueryParameters);
    internal CustomQueryParametersUpdateOptions(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptions();
    private static IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_ICustomQueryParametersUpdateOptionsFactory();
    public static CustomQueryParametersUpdateOptions FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CustomQueryParametersUpdateOptions x, CustomQueryParametersUpdateOptions y);
    public static bool op_Inequality(CustomQueryParametersUpdateOptions x, CustomQueryParametersUpdateOptions y);
    public sealed virtual bool Equals(CustomQueryParametersUpdateOptions other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_CustomQueryParameters();
    public string get_FeedProviderDefinitionId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs")]
[FeedAnalyticsInfoReportedArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public class Microsoft.Windows.Widgets.Feeds.Providers.FeedAnalyticsInfoReportedArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedAnalyticsInfoReportedArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string AnalyticsJson { get; }
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    internal FeedAnalyticsInfoReportedArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedAnalyticsInfoReportedArgs();
    public static FeedAnalyticsInfoReportedArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedAnalyticsInfoReportedArgs x, FeedAnalyticsInfoReportedArgs y);
    public static bool op_Inequality(FeedAnalyticsInfoReportedArgs x, FeedAnalyticsInfoReportedArgs y);
    public sealed virtual bool Equals(FeedAnalyticsInfoReportedArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_AnalyticsJson();
    public string get_FeedDefinitionId();
    public string get_FeedProviderDefinitionId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs")]
[FeedDisabledArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.IFeedDisabledArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
public class Microsoft.Windows.Widgets.Feeds.Providers.FeedDisabledArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedDisabledArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    internal FeedDisabledArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedDisabledArgs();
    public static FeedDisabledArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedDisabledArgs x, FeedDisabledArgs y);
    public static bool op_Inequality(FeedDisabledArgs x, FeedDisabledArgs y);
    public sealed virtual bool Equals(FeedDisabledArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_FeedDefinitionId();
    public string get_FeedProviderDefinitionId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs")]
[FeedEnabledArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.IFeedEnabledArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
public class Microsoft.Windows.Widgets.Feeds.Providers.FeedEnabledArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedEnabledArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    internal FeedEnabledArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedEnabledArgs();
    public static FeedEnabledArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedEnabledArgs x, FeedEnabledArgs y);
    public static bool op_Inequality(FeedEnabledArgs x, FeedEnabledArgs y);
    public sealed virtual bool Equals(FeedEnabledArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_FeedDefinitionId();
    public string get_FeedProviderDefinitionId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs")]
[FeedErrorInfoReportedArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public class Microsoft.Windows.Widgets.Feeds.Providers.FeedErrorInfoReportedArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedErrorInfoReportedArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string ErrorJson { get; }
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    internal FeedErrorInfoReportedArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedErrorInfoReportedArgs();
    public static FeedErrorInfoReportedArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedErrorInfoReportedArgs x, FeedErrorInfoReportedArgs y);
    public static bool op_Inequality(FeedErrorInfoReportedArgs x, FeedErrorInfoReportedArgs y);
    public sealed virtual bool Equals(FeedErrorInfoReportedArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_ErrorJson();
    public string get_FeedDefinitionId();
    public string get_FeedProviderDefinitionId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedManager")]
[FeedManagerRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
public class Microsoft.Windows.Widgets.Feeds.Providers.FeedManager : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManagerStatics;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2 { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManagerStatics { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    internal FeedManager(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager();
    private IObjectReference Make___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManager2();
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedManagerStatics();
    public static FeedManager GetDefault();
    public static FeedManager FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedManager x, FeedManager y);
    public static bool op_Inequality(FeedManager x, FeedManager y);
    public sealed virtual bool Equals(FeedManager other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public sealed virtual FeedProviderInfo[] GetEnabledFeedProviders();
    public sealed virtual void SetCustomQueryParameters(CustomQueryParametersUpdateOptions options);
    public sealed virtual void SendMessageToContent(string feedProviderDefinitionId, string feedDefinitionId, string message);
    public sealed virtual void TryShowAnnouncement(string feedProviderDefinitionId, string feedDefinitionId, FeedAnnouncement announcement);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs")]
[FeedMessageReceivedArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public class Microsoft.Windows.Widgets.Feeds.Providers.FeedMessageReceivedArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedMessageReceivedArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    public string Message { get; }
    internal FeedMessageReceivedArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedMessageReceivedArgs();
    public static FeedMessageReceivedArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedMessageReceivedArgs x, FeedMessageReceivedArgs y);
    public static bool op_Inequality(FeedMessageReceivedArgs x, FeedMessageReceivedArgs y);
    public sealed virtual bool Equals(FeedMessageReceivedArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_FeedDefinitionId();
    public string get_FeedProviderDefinitionId();
    public string get_Message();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs")]
[FeedProviderDisabledArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderDisabledArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
public class Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderDisabledArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderDisabledArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string FeedProviderDefinitionId { get; }
    internal FeedProviderDisabledArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderDisabledArgs();
    public static FeedProviderDisabledArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedProviderDisabledArgs x, FeedProviderDisabledArgs y);
    public static bool op_Inequality(FeedProviderDisabledArgs x, FeedProviderDisabledArgs y);
    public sealed virtual bool Equals(FeedProviderDisabledArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_FeedProviderDefinitionId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs")]
[FeedProviderEnabledArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderEnabledArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
public class Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderEnabledArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderEnabledArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string FeedProviderDefinitionId { get; }
    internal FeedProviderEnabledArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderEnabledArgs();
    public static FeedProviderEnabledArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedProviderEnabledArgs x, FeedProviderEnabledArgs y);
    public static bool op_Inequality(FeedProviderEnabledArgs x, FeedProviderEnabledArgs y);
    public sealed virtual bool Equals(FeedProviderEnabledArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_FeedProviderDefinitionId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo")]
[FeedProviderInfoRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderInfo")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
public class Microsoft.Windows.Widgets.Feeds.Providers.FeedProviderInfo : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderInfo { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public String[] EnabledFeedDefinitionIds { get; }
    public string FeedProviderDefinitionId { get; }
    internal FeedProviderInfo(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedProviderInfo();
    public static FeedProviderInfo FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedProviderInfo x, FeedProviderInfo y);
    public static bool op_Inequality(FeedProviderInfo x, FeedProviderInfo y);
    public sealed virtual bool Equals(FeedProviderInfo other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public String[] get_EnabledFeedDefinitionIds();
    public string get_FeedProviderDefinitionId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest")]
[FeedResourceRequestRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequest")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public class Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequest : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequest { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IRandomAccessStreamReference Content { get; public set; }
    public StringMap Headers { get; public set; }
    public string Method { get; public set; }
    public string Uri { get; }
    internal FeedResourceRequest(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequest();
    public static FeedResourceRequest FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedResourceRequest x, FeedResourceRequest y);
    public static bool op_Inequality(FeedResourceRequest x, FeedResourceRequest y);
    public sealed virtual bool Equals(FeedResourceRequest other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public IRandomAccessStreamReference get_Content();
    public void set_Content(IRandomAccessStreamReference value);
    public StringMap get_Headers();
    public void set_Headers(StringMap value);
    public string get_Method();
    public void set_Method(string value);
    public string get_Uri();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs")]
[FeedResourceRequestedArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public class Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceRequestedArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequestedArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    public FeedResourceRequest Request { get; }
    public FeedResourceResponse Response { get; public set; }
    internal FeedResourceRequestedArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceRequestedArgs();
    public static FeedResourceRequestedArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedResourceRequestedArgs x, FeedResourceRequestedArgs y);
    public static bool op_Inequality(FeedResourceRequestedArgs x, FeedResourceRequestedArgs y);
    public sealed virtual bool Equals(FeedResourceRequestedArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public string get_FeedDefinitionId();
    public string get_FeedProviderDefinitionId();
    public FeedResourceRequest get_Request();
    public FeedResourceResponse get_Response();
    public void set_Response(FeedResourceResponse value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse")]
[FeedResourceResponseRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponse")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public class Microsoft.Windows.Widgets.Feeds.Providers.FeedResourceResponse : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponseFactory;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponse { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponseFactory { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IRandomAccessStreamReference Content { get; }
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; public set; }
    public string ReasonPhrase { get; }
    public int StatusCode { get; }
    public FeedResourceResponse(IRandomAccessStreamReference content, string reasonPhrase, int statusCode);
    internal FeedResourceResponse(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponse();
    private static IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Feeds_Providers_IFeedResourceResponseFactory();
    public static FeedResourceResponse FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedResourceResponse x, FeedResourceResponse y);
    public static bool op_Inequality(FeedResourceResponse x, FeedResourceResponse y);
    public sealed virtual bool Equals(FeedResourceResponse other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public IRandomAccessStreamReference get_Content();
    public IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public void set_Headers(IEnumerable`1<KeyValuePair`2<string, string>> value);
    public string get_ReasonPhrase();
    public int get_StatusCode();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("DC2B0CD8-7936-5346-9371-B21484C7D859")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersRequestedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersRequestedArgs {
    public string FeedProviderDefinitionId { get; }
    public abstract virtual string get_FeedProviderDefinitionId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("753F1177-4909-568A-B070-98A3139205EC")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptions")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptions {
    public string CustomQueryParameters { get; }
    public string FeedProviderDefinitionId { get; }
    public abstract virtual string get_CustomQueryParameters();
    public abstract virtual string get_FeedProviderDefinitionId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("34E318CD-3884-53C0-911C-225F32228FAE")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsFactory")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.ICustomQueryParametersUpdateOptionsFactory {
    public abstract virtual CustomQueryParametersUpdateOptions CreateInstance(string feedProviderDefinitionId, string customQueryParameters);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("3C0E3D65-ED47-5B8A-B650-39A7EDF18942")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnalyticsInfoReportedArgs {
    public string AnalyticsJson { get; }
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    public abstract virtual string get_AnalyticsJson();
    public abstract virtual string get_FeedDefinitionId();
    public abstract virtual string get_FeedProviderDefinitionId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("5D44AE2A-072C-4DF9-9FE5-34D5D2E9FF63")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnnouncementInvokedTarget")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedAnnouncementInvokedTarget {
    public abstract virtual void OnAnnouncementInvoked(FeedAnnouncementInvokedArgs args);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("95300612-ACA7-53C0-9CF6-D803689132C1")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedDisabledArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedDisabledArgs {
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    public abstract virtual string get_FeedDefinitionId();
    public abstract virtual string get_FeedProviderDefinitionId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("EFF4B2D7-7347-5969-A77D-CAC433F0FDAE")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedEnabledArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedEnabledArgs {
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    public abstract virtual string get_FeedDefinitionId();
    public abstract virtual string get_FeedProviderDefinitionId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("62DE018C-161E-52D0-9DBE-AEC106FB6600")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedErrorInfoReportedArgs {
    public string ErrorJson { get; }
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    public abstract virtual string get_ErrorJson();
    public abstract virtual string get_FeedDefinitionId();
    public abstract virtual string get_FeedProviderDefinitionId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("87DF6A84-15AA-45CB-8911-5CAFAB57F723")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
public interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager {
    public abstract virtual FeedProviderInfo[] GetEnabledFeedProviders();
    public abstract virtual void SetCustomQueryParameters(CustomQueryParametersUpdateOptions options);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("5838300A-A069-455D-9943-BA078ADA00D8")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedManager2 {
    public abstract virtual void SendMessageToContent(string feedProviderDefinitionId, string feedDefinitionId, string message);
    public abstract virtual void TryShowAnnouncement(string feedProviderDefinitionId, string feedDefinitionId, FeedAnnouncement announcement);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("4BAF5174-77D6-5E2A-94EA-4F14CCDB1F2C")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerStatics")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedManagerStatics {
    public abstract virtual FeedManager GetDefault();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("4ED6ECF9-4C74-5A0B-AE04-BEF6DD776F8A")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedMessageReceivedArgs {
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    public string Message { get; }
    public abstract virtual string get_FeedDefinitionId();
    public abstract virtual string get_FeedProviderDefinitionId();
    public abstract virtual string get_Message();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("7293A12B-0329-458D-AC25-5332BE478FDE")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
public interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedProvider {
    public abstract virtual void OnFeedProviderEnabled(FeedProviderEnabledArgs args);
    public abstract virtual void OnFeedProviderDisabled(FeedProviderDisabledArgs args);
    public abstract virtual void OnFeedEnabled(FeedEnabledArgs args);
    public abstract virtual void OnFeedDisabled(FeedDisabledArgs args);
    public abstract virtual void OnCustomQueryParametersRequested(CustomQueryParametersRequestedArgs args);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("F6885791-3085-4BD7-9CB1-4F1354C3A687")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderAnalytics")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderAnalytics {
    public abstract virtual void OnAnalyticsInfoReported(FeedAnalyticsInfoReportedArgs args);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("19B65AEC-E01D-5E8C-AB5F-324212E7CD30")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderDisabledArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderDisabledArgs {
    public string FeedProviderDefinitionId { get; }
    public abstract virtual string get_FeedProviderDefinitionId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("821FC9AF-0DE6-5A9B-9AE6-E179117B40E4")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderEnabledArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderEnabledArgs {
    public string FeedProviderDefinitionId { get; }
    public abstract virtual string get_FeedProviderDefinitionId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("6611E00A-D86C-49A3-9381-B7DA67EE62DC")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderErrors")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderErrors {
    public abstract virtual void OnErrorInfoReported(FeedErrorInfoReportedArgs args);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("73C37049-3C03-5896-8532-F9DFDAEB723F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderInfo")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "262144")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderInfo {
    public String[] EnabledFeedDefinitionIds { get; }
    public string FeedProviderDefinitionId { get; }
    public abstract virtual String[] get_EnabledFeedDefinitionIds();
    public abstract virtual string get_FeedProviderDefinitionId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("60C2442A-4C9D-4880-BA26-CACA9E567DD4")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMessage")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedProviderMessage {
    public abstract virtual void OnMessageReceived(FeedMessageReceivedArgs args);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("E1B6266D-88A0-416C-9440-E341CB047CD3")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceProvider")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceProvider {
    public abstract virtual void OnResourceRequested(FeedResourceRequestedArgs args);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("E62E479C-E21F-5863-B4C9-DF1BE2227981")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequest")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequest {
    public IRandomAccessStreamReference Content { get; public set; }
    public StringMap Headers { get; public set; }
    public string Method { get; public set; }
    public string Uri { get; }
    public abstract virtual IRandomAccessStreamReference get_Content();
    public abstract virtual void set_Content(IRandomAccessStreamReference value);
    public abstract virtual StringMap get_Headers();
    public abstract virtual void set_Headers(StringMap value);
    public abstract virtual string get_Method();
    public abstract virtual void set_Method(string value);
    public abstract virtual string get_Uri();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("360EB709-0BC9-52C1-9C70-3C7D413173D8")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceRequestedArgs {
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    public FeedResourceRequest Request { get; }
    public FeedResourceResponse Response { get; public set; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual string get_FeedDefinitionId();
    public abstract virtual string get_FeedProviderDefinitionId();
    public abstract virtual FeedResourceRequest get_Request();
    public abstract virtual FeedResourceResponse get_Response();
    public abstract virtual void set_Response(FeedResourceResponse value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("F831824E-7AEF-53FC-B7EE-32ADE675A3AD")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponse")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponse {
    public IRandomAccessStreamReference Content { get; }
    public IEnumerable`1<KeyValuePair`2<string, string>> Headers { get; public set; }
    public string ReasonPhrase { get; }
    public int StatusCode { get; }
    public abstract virtual IRandomAccessStreamReference get_Content();
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, string>> get_Headers();
    public abstract virtual void set_Headers(IEnumerable`1<KeyValuePair`2<string, string>> value);
    public abstract virtual string get_ReasonPhrase();
    public abstract virtual int get_StatusCode();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("DB01690D-2547-5D7A-B625-D1629F443C5C")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseFactory")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
internal interface Microsoft.Windows.Widgets.Feeds.Providers.IFeedResourceResponseFactory {
    public abstract virtual FeedResourceResponse CreateInstance(IRandomAccessStreamReference content, string reasonPhrase, int statusCode);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.Widgets.Notifications.AnnouncementActionKind>")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public enum Microsoft.Windows.Widgets.Notifications.AnnouncementActionKind : Enum {
    public int value__;
    public static AnnouncementActionKind Shown;
    public static AnnouncementActionKind Engaged;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.Widgets.Notifications.AnnouncementTextColor>")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public enum Microsoft.Windows.Widgets.Notifications.AnnouncementTextColor : Enum {
    public int value__;
    public static AnnouncementTextColor Default;
    public static AnnouncementTextColor Dark;
    public static AnnouncementTextColor Light;
    public static AnnouncementTextColor Accent;
    public static AnnouncementTextColor Good;
    public static AnnouncementTextColor Warning;
    public static AnnouncementTextColor Attention;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Notifications.FeedAnnouncement")]
[FeedAnnouncementRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Notifications.IFeedAnnouncement")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public class Microsoft.Windows.Widgets.Notifications.FeedAnnouncement : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_Widgets_Notifications_IFeedAnnouncementFactory;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Notifications_IFeedAnnouncement { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Notifications_IFeedAnnouncementFactory { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string CustomAccessibilityText { get; public set; }
    public Uri DarkModeIconUri { get; public set; }
    public TimeSpan Duration { get; public set; }
    public DateTimeOffset ExpirationTime { get; public set; }
    public string Id { get; public set; }
    public bool IsSecondaryTextSubtle { get; public set; }
    public Uri LightModeIconUri { get; public set; }
    public string PrimaryText { get; public set; }
    public AnnouncementTextColor PrimaryTextColor { get; public set; }
    public string SecondaryText { get; public set; }
    public AnnouncementTextColor SecondaryTextColor { get; public set; }
    public bool ShowBadgeIfUserNotEngaged { get; public set; }
    public FeedAnnouncement(string id, string primaryText, string secondaryText, Uri lightModeIcon, Uri darkModeIcon);
    internal FeedAnnouncement(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Notifications_IFeedAnnouncement();
    private static IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Notifications_IFeedAnnouncementFactory();
    public static FeedAnnouncement FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedAnnouncement x, FeedAnnouncement y);
    public static bool op_Inequality(FeedAnnouncement x, FeedAnnouncement y);
    public sealed virtual bool Equals(FeedAnnouncement other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_CustomAccessibilityText();
    public void set_CustomAccessibilityText(string value);
    public Uri get_DarkModeIconUri();
    public void set_DarkModeIconUri(Uri value);
    public TimeSpan get_Duration();
    public void set_Duration(TimeSpan value);
    public DateTimeOffset get_ExpirationTime();
    public void set_ExpirationTime(DateTimeOffset value);
    public string get_Id();
    public void set_Id(string value);
    public bool get_IsSecondaryTextSubtle();
    public void set_IsSecondaryTextSubtle(bool value);
    public Uri get_LightModeIconUri();
    public void set_LightModeIconUri(Uri value);
    public string get_PrimaryText();
    public void set_PrimaryText(string value);
    public AnnouncementTextColor get_PrimaryTextColor();
    public void set_PrimaryTextColor(AnnouncementTextColor value);
    public string get_SecondaryText();
    public void set_SecondaryText(string value);
    public AnnouncementTextColor get_SecondaryTextColor();
    public void set_SecondaryTextColor(AnnouncementTextColor value);
    public bool get_ShowBadgeIfUserNotEngaged();
    public void set_ShowBadgeIfUserNotEngaged(bool value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Notifications.FeedAnnouncementInvokedArgs")]
[FeedAnnouncementInvokedArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Notifications.IFeedAnnouncementInvokedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
public class Microsoft.Windows.Widgets.Notifications.FeedAnnouncementInvokedArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Notifications_IFeedAnnouncementInvokedArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public AnnouncementActionKind ActionKind { get; }
    public string AnnouncementId { get; }
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    internal FeedAnnouncementInvokedArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Notifications_IFeedAnnouncementInvokedArgs();
    public static FeedAnnouncementInvokedArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(FeedAnnouncementInvokedArgs x, FeedAnnouncementInvokedArgs y);
    public static bool op_Inequality(FeedAnnouncementInvokedArgs x, FeedAnnouncementInvokedArgs y);
    public sealed virtual bool Equals(FeedAnnouncementInvokedArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public AnnouncementActionKind get_ActionKind();
    public string get_AnnouncementId();
    public string get_FeedDefinitionId();
    public string get_FeedProviderDefinitionId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("B88E8C2C-D251-5344-ACC2-8CF9BA07EC15")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Notifications.IFeedAnnouncement")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
internal interface Microsoft.Windows.Widgets.Notifications.IFeedAnnouncement {
    public string CustomAccessibilityText { get; public set; }
    public Uri DarkModeIconUri { get; public set; }
    public TimeSpan Duration { get; public set; }
    public DateTimeOffset ExpirationTime { get; public set; }
    public string Id { get; public set; }
    public bool IsSecondaryTextSubtle { get; public set; }
    public Uri LightModeIconUri { get; public set; }
    public string PrimaryText { get; public set; }
    public AnnouncementTextColor PrimaryTextColor { get; public set; }
    public string SecondaryText { get; public set; }
    public AnnouncementTextColor SecondaryTextColor { get; public set; }
    public bool ShowBadgeIfUserNotEngaged { get; public set; }
    public abstract virtual string get_CustomAccessibilityText();
    public abstract virtual void set_CustomAccessibilityText(string value);
    public abstract virtual Uri get_DarkModeIconUri();
    public abstract virtual void set_DarkModeIconUri(Uri value);
    public abstract virtual TimeSpan get_Duration();
    public abstract virtual void set_Duration(TimeSpan value);
    public abstract virtual DateTimeOffset get_ExpirationTime();
    public abstract virtual void set_ExpirationTime(DateTimeOffset value);
    public abstract virtual string get_Id();
    public abstract virtual void set_Id(string value);
    public abstract virtual bool get_IsSecondaryTextSubtle();
    public abstract virtual void set_IsSecondaryTextSubtle(bool value);
    public abstract virtual Uri get_LightModeIconUri();
    public abstract virtual void set_LightModeIconUri(Uri value);
    public abstract virtual string get_PrimaryText();
    public abstract virtual void set_PrimaryText(string value);
    public abstract virtual AnnouncementTextColor get_PrimaryTextColor();
    public abstract virtual void set_PrimaryTextColor(AnnouncementTextColor value);
    public abstract virtual string get_SecondaryText();
    public abstract virtual void set_SecondaryText(string value);
    public abstract virtual AnnouncementTextColor get_SecondaryTextColor();
    public abstract virtual void set_SecondaryTextColor(AnnouncementTextColor value);
    public abstract virtual bool get_ShowBadgeIfUserNotEngaged();
    public abstract virtual void set_ShowBadgeIfUserNotEngaged(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("22074243-46D8-5AF2-8715-1C76D1CB774C")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Notifications.IFeedAnnouncementFactory")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
internal interface Microsoft.Windows.Widgets.Notifications.IFeedAnnouncementFactory {
    public abstract virtual FeedAnnouncement CreateInstance(string id, string primaryText, string secondaryText, Uri lightModeIcon, Uri darkModeIcon);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("70A48D98-323D-5F19-A1E1-B63FE36EDBF2")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Notifications.IFeedAnnouncementInvokedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "327680")]
internal interface Microsoft.Windows.Widgets.Notifications.IFeedAnnouncementInvokedArgs {
    public AnnouncementActionKind ActionKind { get; }
    public string AnnouncementId { get; }
    public string FeedDefinitionId { get; }
    public string FeedProviderDefinitionId { get; }
    public abstract virtual AnnouncementActionKind get_ActionKind();
    public abstract virtual string get_AnnouncementId();
    public abstract virtual string get_FeedDefinitionId();
    public abstract virtual string get_FeedProviderDefinitionId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("C593CC57-04B9-52CA-88AD-46FEA21EA340")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
internal interface Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgs {
    public string CustomState { get; }
    public string Data { get; }
    public string Verb { get; }
    public WidgetContext WidgetContext { get; }
    public abstract virtual string get_CustomState();
    public abstract virtual string get_Data();
    public abstract virtual string get_Verb();
    public abstract virtual WidgetContext get_WidgetContext();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("1D9E5FB5-2BCE-5350-87B1-D63199526639")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetAnalyticsInfoReportedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "131072")]
internal interface Microsoft.Windows.Widgets.Providers.IWidgetAnalyticsInfoReportedArgs {
    public string AnalyticsJson { get; }
    public WidgetContext WidgetContext { get; }
    public abstract virtual string get_AnalyticsJson();
    public abstract virtual WidgetContext get_WidgetContext();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("903C518B-40BC-5BC6-88F7-AF9D81C0CDC1")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetContext")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
internal interface Microsoft.Windows.Widgets.Providers.IWidgetContext {
    public string DefinitionId { get; }
    public string Id { get; }
    public bool IsActive { get; }
    public WidgetSize Size { get; }
    public abstract virtual string get_DefinitionId();
    public abstract virtual string get_Id();
    public abstract virtual bool get_IsActive();
    public abstract virtual WidgetSize get_Size();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("2C226D54-2252-576B-A197-370B28D25C2F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetContextChangedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
internal interface Microsoft.Windows.Widgets.Providers.IWidgetContextChangedArgs {
    public WidgetContext WidgetContext { get; }
    public abstract virtual WidgetContext get_WidgetContext();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("41DEA311-DD9B-5B8B-B493-3A30552116B8")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetCustomizationRequestedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "131072")]
internal interface Microsoft.Windows.Widgets.Providers.IWidgetCustomizationRequestedArgs {
    public string CustomState { get; }
    public WidgetContext WidgetContext { get; }
    public abstract virtual string get_CustomState();
    public abstract virtual WidgetContext get_WidgetContext();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("30EFA627-B21F-55D5-B91A-B23B4AA13645")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetErrorInfoReportedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "131072")]
internal interface Microsoft.Windows.Widgets.Providers.IWidgetErrorInfoReportedArgs {
    public string ErrorJson { get; }
    public WidgetContext WidgetContext { get; }
    public abstract virtual string get_ErrorJson();
    public abstract virtual WidgetContext get_WidgetContext();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("CEA11F42-A020-5DB5-89E2-B7DECE4AE5CB")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetInfo")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
internal interface Microsoft.Windows.Widgets.Providers.IWidgetInfo {
    public string CustomState { get; }
    public string Data { get; }
    public DateTimeOffset LastUpdateTime { get; }
    public string Template { get; }
    public WidgetContext WidgetContext { get; }
    public abstract virtual string get_CustomState();
    public abstract virtual string get_Data();
    public abstract virtual DateTimeOffset get_LastUpdateTime();
    public abstract virtual string get_Template();
    public abstract virtual WidgetContext get_WidgetContext();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("71CB10C0-671E-48E3-B995-207940397123")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetManager")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
public interface Microsoft.Windows.Widgets.Providers.IWidgetManager {
    public abstract virtual void UpdateWidget(WidgetUpdateRequestOptions widgetUpdateRequestOptions);
    public abstract virtual String[] GetWidgetIds();
    public abstract virtual WidgetInfo GetWidgetInfo(string widgetId);
    public abstract virtual WidgetInfo[] GetWidgetInfos();
    public abstract virtual void DeleteWidget(string widgetId);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("7F233B06-28E5-5E2B-8C04-A4FA747C28C7")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetManagerStatics")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
internal interface Microsoft.Windows.Widgets.Providers.IWidgetManagerStatics {
    public abstract virtual WidgetManager GetDefault();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("5C5774CC-72A0-452D-B9ED-075C0DD25EED")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetProvider")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
public interface Microsoft.Windows.Widgets.Providers.IWidgetProvider {
    public abstract virtual void CreateWidget(WidgetContext widgetContext);
    public abstract virtual void DeleteWidget(string widgetId, string customState);
    public abstract virtual void OnActionInvoked(WidgetActionInvokedArgs actionInvokedArgs);
    public abstract virtual void OnWidgetContextChanged(WidgetContextChangedArgs contextChangedArgs);
    public abstract virtual void Activate(WidgetContext widgetContext);
    public abstract virtual void Deactivate(string widgetId);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("38C3A963-DD93-479D-9276-04BF84EE1816")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetProvider2")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "131072")]
public interface Microsoft.Windows.Widgets.Providers.IWidgetProvider2 {
    public abstract virtual void OnCustomizationRequested(WidgetCustomizationRequestedArgs customizationRequestedArgs);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("661985A5-D187-482D-9EEF-6FDA05D21845")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderAnalytics")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "131072")]
public interface Microsoft.Windows.Widgets.Providers.IWidgetProviderAnalytics {
    public abstract virtual void OnAnalyticsInfoReported(WidgetAnalyticsInfoReportedArgs args);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("90C1B5F0-0D3A-4AC6-ABB7-C97B367B8FCC")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetProviderErrors")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "131072")]
public interface Microsoft.Windows.Widgets.Providers.IWidgetProviderErrors {
    public abstract virtual void OnErrorInfoReported(WidgetErrorInfoReportedArgs args);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("B09CA8F7-7424-5687-BAAF-7DD6FA639672")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptions")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
internal interface Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptions {
    public string CustomState { get; public set; }
    public string Data { get; public set; }
    public string Template { get; public set; }
    public string WidgetId { get; }
    public abstract virtual string get_CustomState();
    public abstract virtual void set_CustomState(string value);
    public abstract virtual string get_Data();
    public abstract virtual void set_Data(string value);
    public abstract virtual string get_Template();
    public abstract virtual void set_Template(string value);
    public abstract virtual string get_WidgetId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("E0E00AF8-1D10-57A8-9419-3F568E854DAA")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsFactory")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
internal interface Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsFactory {
    public abstract virtual WidgetUpdateRequestOptions CreateInstance(string widgetId);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[GuidAttribute("4645B5E3-D332-5D11-82F0-3607E5DF6018")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsStatics")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
internal interface Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptionsStatics {
    public string UnsetValue { get; }
    public abstract virtual string get_UnsetValue();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs")]
[WidgetActionInvokedArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Providers.IWidgetActionInvokedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
public class Microsoft.Windows.Widgets.Providers.WidgetActionInvokedArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetActionInvokedArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string CustomState { get; }
    public string Data { get; }
    public string Verb { get; }
    public WidgetContext WidgetContext { get; }
    internal WidgetActionInvokedArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetActionInvokedArgs();
    public static WidgetActionInvokedArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(WidgetActionInvokedArgs x, WidgetActionInvokedArgs y);
    public static bool op_Inequality(WidgetActionInvokedArgs x, WidgetActionInvokedArgs y);
    public sealed virtual bool Equals(WidgetActionInvokedArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_CustomState();
    public string get_Data();
    public string get_Verb();
    public WidgetContext get_WidgetContext();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs")]
[WidgetAnalyticsInfoReportedArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Providers.IWidgetAnalyticsInfoReportedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "131072")]
public class Microsoft.Windows.Widgets.Providers.WidgetAnalyticsInfoReportedArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetAnalyticsInfoReportedArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string AnalyticsJson { get; }
    public WidgetContext WidgetContext { get; }
    internal WidgetAnalyticsInfoReportedArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetAnalyticsInfoReportedArgs();
    public static WidgetAnalyticsInfoReportedArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(WidgetAnalyticsInfoReportedArgs x, WidgetAnalyticsInfoReportedArgs y);
    public static bool op_Inequality(WidgetAnalyticsInfoReportedArgs x, WidgetAnalyticsInfoReportedArgs y);
    public sealed virtual bool Equals(WidgetAnalyticsInfoReportedArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_AnalyticsJson();
    public WidgetContext get_WidgetContext();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.WidgetContext")]
[WidgetContextRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Providers.IWidgetContext")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
public class Microsoft.Windows.Widgets.Providers.WidgetContext : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetContext { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string DefinitionId { get; }
    public string Id { get; }
    public bool IsActive { get; }
    public WidgetSize Size { get; }
    internal WidgetContext(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetContext();
    public static WidgetContext FromAbi(IntPtr thisPtr);
    public static bool op_Equality(WidgetContext x, WidgetContext y);
    public static bool op_Inequality(WidgetContext x, WidgetContext y);
    public sealed virtual bool Equals(WidgetContext other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_DefinitionId();
    public string get_Id();
    public bool get_IsActive();
    public WidgetSize get_Size();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs")]
[WidgetContextChangedArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Providers.IWidgetContextChangedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
public class Microsoft.Windows.Widgets.Providers.WidgetContextChangedArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetContextChangedArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public WidgetContext WidgetContext { get; }
    internal WidgetContextChangedArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetContextChangedArgs();
    public static WidgetContextChangedArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(WidgetContextChangedArgs x, WidgetContextChangedArgs y);
    public static bool op_Inequality(WidgetContextChangedArgs x, WidgetContextChangedArgs y);
    public sealed virtual bool Equals(WidgetContextChangedArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public WidgetContext get_WidgetContext();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs")]
[WidgetCustomizationRequestedArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Providers.IWidgetCustomizationRequestedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "131072")]
public class Microsoft.Windows.Widgets.Providers.WidgetCustomizationRequestedArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetCustomizationRequestedArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string CustomState { get; }
    public WidgetContext WidgetContext { get; }
    internal WidgetCustomizationRequestedArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetCustomizationRequestedArgs();
    public static WidgetCustomizationRequestedArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(WidgetCustomizationRequestedArgs x, WidgetCustomizationRequestedArgs y);
    public static bool op_Inequality(WidgetCustomizationRequestedArgs x, WidgetCustomizationRequestedArgs y);
    public sealed virtual bool Equals(WidgetCustomizationRequestedArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_CustomState();
    public WidgetContext get_WidgetContext();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs")]
[WidgetErrorInfoReportedArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Providers.IWidgetErrorInfoReportedArgs")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "131072")]
public class Microsoft.Windows.Widgets.Providers.WidgetErrorInfoReportedArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetErrorInfoReportedArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string ErrorJson { get; }
    public WidgetContext WidgetContext { get; }
    internal WidgetErrorInfoReportedArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetErrorInfoReportedArgs();
    public static WidgetErrorInfoReportedArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(WidgetErrorInfoReportedArgs x, WidgetErrorInfoReportedArgs y);
    public static bool op_Inequality(WidgetErrorInfoReportedArgs x, WidgetErrorInfoReportedArgs y);
    public sealed virtual bool Equals(WidgetErrorInfoReportedArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_ErrorJson();
    public WidgetContext get_WidgetContext();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.WidgetInfo")]
[WidgetInfoRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Providers.IWidgetInfo")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
public class Microsoft.Windows.Widgets.Providers.WidgetInfo : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string CustomState { get; }
    public string Data { get; }
    public DateTimeOffset LastUpdateTime { get; }
    public string Template { get; }
    public WidgetContext WidgetContext { get; }
    internal WidgetInfo(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetInfo();
    public static WidgetInfo FromAbi(IntPtr thisPtr);
    public static bool op_Equality(WidgetInfo x, WidgetInfo y);
    public static bool op_Inequality(WidgetInfo x, WidgetInfo y);
    public sealed virtual bool Equals(WidgetInfo other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_CustomState();
    public string get_Data();
    public DateTimeOffset get_LastUpdateTime();
    public string get_Template();
    public WidgetContext get_WidgetContext();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.WidgetManager")]
[WidgetManagerRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Providers.IWidgetManager")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
public class Microsoft.Windows.Widgets.Providers.WidgetManager : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManagerStatics;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManagerStatics { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    internal WidgetManager(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManager();
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetManagerStatics();
    public static WidgetManager GetDefault();
    public static WidgetManager FromAbi(IntPtr thisPtr);
    public static bool op_Equality(WidgetManager x, WidgetManager y);
    public static bool op_Inequality(WidgetManager x, WidgetManager y);
    public sealed virtual bool Equals(WidgetManager other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public sealed virtual void UpdateWidget(WidgetUpdateRequestOptions widgetUpdateRequestOptions);
    public sealed virtual String[] GetWidgetIds();
    public sealed virtual WidgetInfo GetWidgetInfo(string widgetId);
    public sealed virtual WidgetInfo[] GetWidgetInfos();
    public sealed virtual void DeleteWidget(string widgetId);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions")]
[WidgetUpdateRequestOptionsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.Widgets.Providers.IWidgetUpdateRequestOptions")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
public class Microsoft.Windows.Widgets.Providers.WidgetUpdateRequestOptions : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsFactory;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsStatics;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsFactory { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsStatics { get; }
    public static string UnsetValue { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string CustomState { get; public set; }
    public string Data { get; public set; }
    public string Template { get; public set; }
    public string WidgetId { get; }
    public WidgetUpdateRequestOptions(string widgetId);
    internal WidgetUpdateRequestOptions(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptions();
    private static IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsFactory();
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_Widgets_Providers_IWidgetUpdateRequestOptionsStatics();
    public static string get_UnsetValue();
    public static WidgetUpdateRequestOptions FromAbi(IntPtr thisPtr);
    public static bool op_Equality(WidgetUpdateRequestOptions x, WidgetUpdateRequestOptions y);
    public static bool op_Inequality(WidgetUpdateRequestOptions x, WidgetUpdateRequestOptions y);
    public sealed virtual bool Equals(WidgetUpdateRequestOptions other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_CustomState();
    public void set_CustomState(string value);
    public string get_Data();
    public void set_Data(string value);
    public string get_Template();
    public void set_Template(string value);
    public string get_WidgetId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[ContractVersionAttribute("458752")]
public enum Microsoft.Windows.Widgets.WidgetContract : Enum {
    public int value__;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Widgets")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.Widgets.WidgetSize>")]
[ContractVersionAttribute("Microsoft.Windows.Widgets.WidgetContract", "65536")]
public enum Microsoft.Windows.Widgets.WidgetSize : Enum {
    public int value__;
    public static WidgetSize Small;
    public static WidgetSize Medium;
    public static WidgetSize Large;
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<KeyValuePair`2<string, string>> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, KeyValuePair`2[] items);
    private static KeyValuePair`2<string, string> get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IKeyValuePair_2_String__String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IKeyValuePair_2_String__String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string get_Key(IObjectReference _obj);
    private static string get_Value(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.ProjectionInitializer : object {
    [ModuleInitializerAttribute]
public static void InitalizeProjection();
}
