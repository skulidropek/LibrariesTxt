[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.AppLifecycle.AppActivationArguments : ValueType {
    public static IObjectReference CreateMarshaler(AppActivationArguments obj);
    public static ObjectReferenceValue CreateMarshaler2(AppActivationArguments obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static AppActivationArguments FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(AppActivationArguments obj);
    public static MarshalerArray<AppActivationArguments> CreateMarshalerArray(AppActivationArguments[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static AppActivationArguments[] FromAbiArray(object box);
    public static void CopyAbiArray(AppActivationArguments[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(AppActivationArguments[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<AppActivationArguments> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.AppLifecycle.AppActivationArgumentsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.AppLifecycle.AppInstance : ValueType {
    public static IObjectReference CreateMarshaler(AppInstance obj);
    public static ObjectReferenceValue CreateMarshaler2(AppInstance obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static AppInstance FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(AppInstance obj);
    public static MarshalerArray<AppInstance> CreateMarshalerArray(AppInstance[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static AppInstance[] FromAbiArray(object box);
    public static void CopyAbiArray(AppInstance[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(AppInstance[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<AppInstance> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.AppLifecycle.AppInstanceRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[GuidAttribute("5AC4E92E-017B-5D68-8198-F68636AB99D3")]
internal interface ABI.Microsoft.Windows.AppLifecycle.IActivationRegistrationManagerStatics {
}
internal static class ABI.Microsoft.Windows.AppLifecycle.IActivationRegistrationManagerStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void RegisterForFileTypeActivation(IObjectReference _obj, String[] supportedFileTypes, string logo, string displayName, String[] supportedVerbs, string exePath);
    internal static void RegisterForProtocolActivation(IObjectReference _obj, string scheme, string logo, string displayName, string exePath);
    internal static void RegisterForStartupActivation(IObjectReference _obj, string taskId, string exePath);
    internal static void UnregisterForFileTypeActivation(IObjectReference _obj, String[] fileTypes, string exePath);
    internal static void UnregisterForProtocolActivation(IObjectReference _obj, string scheme, string exePath);
    internal static void UnregisterForStartupActivation(IObjectReference _obj, string taskId);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("14F99EAF-1580-5062-BDC8-D5D1C31138FB")]
internal interface ABI.Microsoft.Windows.AppLifecycle.IAppActivationArguments {
}
internal static class ABI.Microsoft.Windows.AppLifecycle.IAppActivationArgumentsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static object get_Data(IObjectReference _obj);
    internal static ExtendedActivationKind get_Kind(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("75766AE4-0239-5A26-B9DA-D5BFC75A4866")]
internal interface ABI.Microsoft.Windows.AppLifecycle.IAppInstance {
}
internal static class ABI.Microsoft.Windows.AppLifecycle.IAppInstanceMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _Activated_;
    private static ConditionalWeakTable`2<object, EventSource`1<EventHandler`1<AppActivationArguments>>> _Activated { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void UnregisterKey(IObjectReference _obj);
    internal static IAsyncAction RedirectActivationToAsync(IObjectReference _obj, AppActivationArguments args);
    internal static AppActivationArguments GetActivatedEventArgs(IObjectReference _obj);
    internal static bool get_IsCurrent(IObjectReference _obj);
    internal static string get_Key(IObjectReference _obj);
    internal static UInt32 get_ProcessId(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<EventHandler`1<AppActivationArguments>>> MakeActivatedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<EventHandler`1<AppActivationArguments>>> get__Activated();
    internal static EventSource`1<EventHandler`1<AppActivationArguments>> Get_Activated2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4F414B25-8330-5A9B-BBC1-8229D479649D")]
internal interface ABI.Microsoft.Windows.AppLifecycle.IAppInstanceStatics {
}
[GuidAttribute("FE9F1885-7160-5397-BA9B-5890B24FDC04")]
internal interface ABI.Microsoft.Windows.AppLifecycle.IAppInstanceStatics2 {
}
internal static class ABI.Microsoft.Windows.AppLifecycle.IAppInstanceStatics2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static AppRestartFailureReason Restart(IObjectReference _obj, string arguments);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.AppLifecycle.IAppInstanceStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static AppInstance GetCurrent(IObjectReference _obj);
    internal static IList`1<AppInstance> GetInstances(IObjectReference _obj);
    internal static AppInstance FindOrRegisterForKey(IObjectReference _obj, string key);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppLifecycle")]
[ContractVersionAttribute("Microsoft.Windows.AppLifecycle.AppLifecycleContract", "65536")]
public static class Microsoft.Windows.AppLifecycle.ActivationRegistrationManager : object {
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_AppLifecycle_IActivationRegistrationManagerStatics;
    private static IObjectReference _objRef_global__Microsoft_Windows_AppLifecycle_IActivationRegistrationManagerStatics { get; }
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_AppLifecycle_IActivationRegistrationManagerStatics();
    public static void RegisterForFileTypeActivation(String[] supportedFileTypes, string logo, string displayName, String[] supportedVerbs, string exePath);
    public static void RegisterForProtocolActivation(string scheme, string logo, string displayName, string exePath);
    public static void RegisterForStartupActivation(string taskId, string exePath);
    public static void UnregisterForFileTypeActivation(String[] fileTypes, string exePath);
    public static void UnregisterForProtocolActivation(string scheme, string exePath);
    public static void UnregisterForStartupActivation(string taskId);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppLifecycle")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppLifecycle.AppActivationArguments")]
[AppActivationArgumentsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.AppLifecycle.IAppActivationArguments")]
[ContractVersionAttribute("Microsoft.Windows.AppLifecycle.AppLifecycleContract", "65536")]
public class Microsoft.Windows.AppLifecycle.AppActivationArguments : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_AppLifecycle_IAppActivationArguments { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public object Data { get; }
    public ExtendedActivationKind Kind { get; }
    internal AppActivationArguments(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_AppLifecycle_IAppActivationArguments();
    public static AppActivationArguments FromAbi(IntPtr thisPtr);
    public static bool op_Equality(AppActivationArguments x, AppActivationArguments y);
    public static bool op_Inequality(AppActivationArguments x, AppActivationArguments y);
    public sealed virtual bool Equals(AppActivationArguments other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public object get_Data();
    public ExtendedActivationKind get_Kind();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppLifecycle")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppLifecycle.AppInstance")]
[AppInstanceRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.AppLifecycle.IAppInstance")]
[ContractVersionAttribute("Microsoft.Windows.AppLifecycle.AppLifecycleContract", "65536")]
public class Microsoft.Windows.AppLifecycle.AppInstance : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_AppLifecycle_IAppInstanceStatics;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_AppLifecycle_IAppInstanceStatics2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_AppLifecycle_IAppInstance { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_AppLifecycle_IAppInstanceStatics { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_AppLifecycle_IAppInstanceStatics2 { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool IsCurrent { get; }
    public string Key { get; }
    public UInt32 ProcessId { get; }
    internal AppInstance(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_AppLifecycle_IAppInstance();
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_AppLifecycle_IAppInstanceStatics();
    public static AppInstance GetCurrent();
    public static IList`1<AppInstance> GetInstances();
    public static AppInstance FindOrRegisterForKey(string key);
    private static IObjectReference get__objRef_global__Microsoft_Windows_AppLifecycle_IAppInstanceStatics2();
    public static AppRestartFailureReason Restart(string arguments);
    public static AppInstance FromAbi(IntPtr thisPtr);
    public static bool op_Equality(AppInstance x, AppInstance y);
    public static bool op_Inequality(AppInstance x, AppInstance y);
    public sealed virtual bool Equals(AppInstance other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void UnregisterKey();
    public IAsyncAction RedirectActivationToAsync(AppActivationArguments args);
    public AppActivationArguments GetActivatedEventArgs();
    public void add_Activated(EventHandler`1<AppActivationArguments> value);
    public void remove_Activated(EventHandler`1<AppActivationArguments> value);
    public bool get_IsCurrent();
    public string get_Key();
    public UInt32 get_ProcessId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[ContractVersionAttribute("131072")]
public enum Microsoft.Windows.AppLifecycle.AppLifecycleContract : Enum {
    public int value__;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppLifecycle")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.AppLifecycle.ExtendedActivationKind>")]
[ContractVersionAttribute("Microsoft.Windows.AppLifecycle.AppLifecycleContract", "65536")]
public enum Microsoft.Windows.AppLifecycle.ExtendedActivationKind : Enum {
    public int value__;
    public static ExtendedActivationKind Launch;
    public static ExtendedActivationKind Search;
    public static ExtendedActivationKind ShareTarget;
    public static ExtendedActivationKind File;
    public static ExtendedActivationKind Protocol;
    public static ExtendedActivationKind FileOpenPicker;
    public static ExtendedActivationKind FileSavePicker;
    public static ExtendedActivationKind CachedFileUpdater;
    public static ExtendedActivationKind ContactPicker;
    public static ExtendedActivationKind Device;
    public static ExtendedActivationKind PrintTaskSettings;
    public static ExtendedActivationKind CameraSettings;
    public static ExtendedActivationKind RestrictedLaunch;
    public static ExtendedActivationKind AppointmentsProvider;
    public static ExtendedActivationKind Contact;
    public static ExtendedActivationKind LockScreenCall;
    public static ExtendedActivationKind VoiceCommand;
    public static ExtendedActivationKind LockScreen;
    public static ExtendedActivationKind PickerReturned;
    public static ExtendedActivationKind WalletAction;
    public static ExtendedActivationKind PickFileContinuation;
    public static ExtendedActivationKind PickSaveFileContinuation;
    public static ExtendedActivationKind PickFolderContinuation;
    public static ExtendedActivationKind WebAuthenticationBrokerContinuation;
    public static ExtendedActivationKind WebAccountProvider;
    public static ExtendedActivationKind ComponentUI;
    public static ExtendedActivationKind ProtocolForResults;
    public static ExtendedActivationKind ToastNotification;
    public static ExtendedActivationKind Print3DWorkflow;
    public static ExtendedActivationKind DialReceiver;
    public static ExtendedActivationKind DevicePairing;
    public static ExtendedActivationKind UserDataAccountsProvider;
    public static ExtendedActivationKind FilePickerExperience;
    public static ExtendedActivationKind LockScreenComponent;
    public static ExtendedActivationKind ContactPanel;
    public static ExtendedActivationKind PrintWorkflowForegroundTask;
    public static ExtendedActivationKind GameUIProvider;
    public static ExtendedActivationKind StartupTask;
    public static ExtendedActivationKind CommandLineLaunch;
    public static ExtendedActivationKind BarcodeScannerProvider;
    public static ExtendedActivationKind PrintSupportJobUI;
    public static ExtendedActivationKind PrintSupportSettingsUI;
    public static ExtendedActivationKind PhoneCallActivation;
    public static ExtendedActivationKind VpnForeground;
    public static ExtendedActivationKind Push;
    public static ExtendedActivationKind AppNotification;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppLifecycle")]
[GuidAttribute("5AC4E92E-017B-5D68-8198-F68636AB99D3")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppLifecycle.IActivationRegistrationManagerStatics")]
[ContractVersionAttribute("Microsoft.Windows.AppLifecycle.AppLifecycleContract", "65536")]
internal interface Microsoft.Windows.AppLifecycle.IActivationRegistrationManagerStatics {
    public abstract virtual void RegisterForFileTypeActivation(String[] supportedFileTypes, string logo, string displayName, String[] supportedVerbs, string exePath);
    public abstract virtual void RegisterForProtocolActivation(string scheme, string logo, string displayName, string exePath);
    public abstract virtual void RegisterForStartupActivation(string taskId, string exePath);
    public abstract virtual void UnregisterForFileTypeActivation(String[] fileTypes, string exePath);
    public abstract virtual void UnregisterForProtocolActivation(string scheme, string exePath);
    public abstract virtual void UnregisterForStartupActivation(string taskId);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppLifecycle")]
[GuidAttribute("14F99EAF-1580-5062-BDC8-D5D1C31138FB")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppLifecycle.IAppActivationArguments")]
[ContractVersionAttribute("Microsoft.Windows.AppLifecycle.AppLifecycleContract", "65536")]
internal interface Microsoft.Windows.AppLifecycle.IAppActivationArguments {
    public object Data { get; }
    public ExtendedActivationKind Kind { get; }
    public abstract virtual object get_Data();
    public abstract virtual ExtendedActivationKind get_Kind();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppLifecycle")]
[GuidAttribute("75766AE4-0239-5A26-B9DA-D5BFC75A4866")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppLifecycle.IAppInstance")]
[ContractVersionAttribute("Microsoft.Windows.AppLifecycle.AppLifecycleContract", "65536")]
internal interface Microsoft.Windows.AppLifecycle.IAppInstance {
    public bool IsCurrent { get; }
    public string Key { get; }
    public UInt32 ProcessId { get; }
    public abstract virtual void UnregisterKey();
    public abstract virtual IAsyncAction RedirectActivationToAsync(AppActivationArguments args);
    public abstract virtual AppActivationArguments GetActivatedEventArgs();
    public abstract virtual bool get_IsCurrent();
    public abstract virtual string get_Key();
    public abstract virtual UInt32 get_ProcessId();
    [CompilerGeneratedAttribute]
public abstract virtual void add_Activated(EventHandler`1<AppActivationArguments> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_Activated(EventHandler`1<AppActivationArguments> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppLifecycle")]
[GuidAttribute("4F414B25-8330-5A9B-BBC1-8229D479649D")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppLifecycle.IAppInstanceStatics")]
[ContractVersionAttribute("Microsoft.Windows.AppLifecycle.AppLifecycleContract", "65536")]
internal interface Microsoft.Windows.AppLifecycle.IAppInstanceStatics {
    public abstract virtual AppInstance GetCurrent();
    public abstract virtual IList`1<AppInstance> GetInstances();
    public abstract virtual AppInstance FindOrRegisterForKey(string key);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.AppLifecycle")]
[GuidAttribute("FE9F1885-7160-5397-BA9B-5890B24FDC04")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.AppLifecycle.IAppInstanceStatics2")]
[ContractVersionAttribute("Microsoft.Windows.AppLifecycle.AppLifecycleContract", "131072")]
internal interface Microsoft.Windows.AppLifecycle.IAppInstanceStatics2 {
    public abstract virtual AppRestartFailureReason Restart(string arguments);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_Windows_AppLifecycle_AppInstance : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Microsoft_Windows_AppLifecycle_AppInstance();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<AppInstance> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Microsoft_Windows_AppLifecycle_AppInstance : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Microsoft_Windows_AppLifecycle_AppInstance();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, AppInstance[] items);
    private static AppInstance get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_Windows_AppLifecycle_AppInstance : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVector_1_Microsoft_Windows_AppLifecycle_AppInstance();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static AppInstance GetAt(IObjectReference _obj, UInt32 index);
    private static IReadOnlyList`1<AppInstance> GetView(IObjectReference _obj);
    private static bool IndexOf(IObjectReference _obj, AppInstance value, UInt32& index);
    private static void SetAt(IObjectReference _obj, UInt32 index, AppInstance value);
    private static void InsertAt(IObjectReference _obj, UInt32 index, AppInstance value);
    private static void Append(IObjectReference _obj, AppInstance value);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, AppInstance[] items);
    private static void ReplaceAll(IObjectReference _obj, AppInstance[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_Windows_AppLifecycle_AppInstance : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_Microsoft_Windows_AppLifecycle_AppInstance();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static AppInstance GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, AppInstance value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, AppInstance[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_EventHandler_1_Microsoft_Windows_AppLifecycle_AppActivationArguments : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_EventHandler_1_Microsoft_Windows_AppLifecycle_AppActivationArguments();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, object sender, AppActivationArguments args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.ProjectionInitializer : object {
    [ModuleInitializerAttribute]
public static void InitalizeProjection();
}
