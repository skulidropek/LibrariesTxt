[GuidAttribute("DD6CDEDC-559B-50C8-AC53-82FE21F915F3")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStatics {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_Contrast(IObjectReference _obj);
    internal static string get_Custom(IObjectReference _obj);
    internal static string get_DeviceFamily(IObjectReference _obj);
    internal static string get_HomeRegion(IObjectReference _obj);
    internal static string get_Language(IObjectReference _obj);
    internal static string get_LayoutDirection(IObjectReference _obj);
    internal static string get_Scale(IObjectReference _obj);
    internal static string get_TargetSize(IObjectReference _obj);
    internal static string get_Theme(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("6C54BC0C-EF1E-57B8-B478-34FECE737356")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidate {
}
[GuidAttribute("BB2B30F8-C19B-5F43-88D9-69AD728A32F4")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateFactory {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateFactoryMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static ResourceCandidate CreateInstance(IObjectReference _obj, ResourceCandidateKind kind, string data);
    internal static ResourceCandidate CreateInstance2(IObjectReference _obj, Byte[] data);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static ResourceCandidateKind get_Kind(IObjectReference _obj);
    internal static IReadOnlyDictionary`2<string, string> get_QualifierValues(IObjectReference _obj);
    internal static Byte[] get_ValueAsBytes(IObjectReference _obj);
    internal static string get_ValueAsString(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("96FB48DC-F77D-55FF-AF12-34861E3D4939")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContext {
    public static IntPtr AbiToProjectionVftablePtr;
    private IDictionary`2<string, string> global::Microsoft.Windows.ApplicationModel.Resources.IResourceContext.QualifierValues { get; }
    private static IResourceContext();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_get_QualifierValues_0(IntPtr thisPtr, IntPtr* value);
    private sealed virtual override IDictionary`2<string, string> global::Microsoft.Windows.ApplicationModel.Resources.IResourceContext.get_QualifierValues();
}
[GuidAttribute("7A3B1158-798C-5949-969D-03510B9CE6CA")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContext2 {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContext2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
public static class ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContextMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static IDictionary`2<string, string> get_QualifierValues(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[GuidAttribute("BC3F76BF-DA46-54CD-8715-8B8AAF16EAAC")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoader {
}
[GuidAttribute("871F83AA-FB34-50D6-B9B9-2C35F3FFC004")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderFactory {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderFactoryMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static ResourceLoader CreateInstance(IObjectReference _obj, string fileName);
    internal static ResourceLoader CreateInstance2(IObjectReference _obj, string fileName, string resourceMap);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string GetString(IObjectReference _obj, string resourceId);
    internal static string GetStringForUri(IObjectReference _obj, Uri resourceUri);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("EC9C894A-1466-5F2F-8EEE-A70CBD2B51BB")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderStatics {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string GetDefaultResourceFilePath(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("AC2291EF-81BE-5C99-A0AE-BCEE0180B8A8")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManager {
    public static IntPtr AbiToProjectionVftablePtr;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ResourceNotFound_tokenTables;
    private static ConditionalWeakTable`2<IResourceManager, EventRegistrationTokenTable`1<TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs>>> _ResourceNotFound_TokenTables { get; }
    private ResourceMap global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager.MainResourceMap { get; }
    private static IResourceManager();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_CreateResourceContext_1(IntPtr thisPtr, IntPtr* result);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_get_MainResourceMap_0(IntPtr thisPtr, IntPtr* value);
    private static ConditionalWeakTable`2<IResourceManager, EventRegistrationTokenTable`1<TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs>>> MakeResourceNotFoundTable();
    private static ConditionalWeakTable`2<IResourceManager, EventRegistrationTokenTable`1<TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs>>> get__ResourceNotFound_TokenTables();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_add_ResourceNotFound_2(IntPtr thisPtr, IntPtr handler, EventRegistrationToken* token);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_remove_ResourceNotFound_3(IntPtr thisPtr, EventRegistrationToken token);
    private sealed virtual override ResourceContext global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager.CreateResourceContext();
    private sealed virtual override ResourceMap global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager.get_MainResourceMap();
    private sealed virtual override void global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager.add_ResourceNotFound(TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs> value);
    private sealed virtual override void global::Microsoft.Windows.ApplicationModel.Resources.IResourceManager.remove_ResourceNotFound(TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs> value);
}
[GuidAttribute("7EC10160-A154-5C42-8268-30E306B1F585")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManager2 {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManager2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("D6ACF18F-458A-535B-A5C4-AC2DC4E49099")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerFactory {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerFactoryMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static ResourceManager CreateInstance(IObjectReference _obj, string fileName);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
public static class ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ResourceNotFound_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs>>> _ResourceNotFound { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static ResourceContext CreateResourceContext(IObjectReference _obj);
    public static ResourceMap get_MainResourceMap(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs>>> MakeResourceNotFoundTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs>>> get__ResourceNotFound();
    public static ValueTuple`2<Action`1<TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs>>, Action`1<TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs>>> Get_ResourceNotFound(IObjectReference _obj, object _thisObj);
    public static EventSource`1<TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs>> Get_ResourceNotFound2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[GuidAttribute("4ABBD9BC-DF4E-5C7B-812C-7E7BB0C22377")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMap {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMapMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static ResourceMap GetSubtree(IObjectReference _obj, string reference);
    internal static ResourceMap TryGetSubtree(IObjectReference _obj, string reference);
    internal static ResourceCandidate GetValue(IObjectReference _obj, string resource);
    internal static ResourceCandidate GetValue(IObjectReference _obj, string resource, ResourceContext context);
    internal static KeyValuePair`2<string, ResourceCandidate> GetValueByIndex(IObjectReference _obj, UInt32 index);
    internal static KeyValuePair`2<string, ResourceCandidate> GetValueByIndex(IObjectReference _obj, UInt32 index, ResourceContext context);
    internal static ResourceCandidate TryGetValue(IObjectReference _obj, string resource);
    internal static ResourceCandidate TryGetValue(IObjectReference _obj, string resource, ResourceContext context);
    internal static UInt32 get_ResourceCount(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("64ABB08B-E77D-5B26-830F-15941E0E8200")]
internal interface ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgs {
}
internal static class ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void SetResolvedCandidate(IObjectReference _obj, ResourceCandidate candidate);
    internal static ResourceContext get_Context(IObjectReference _obj);
    internal static string get_Name(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate : ValueType {
    public static IObjectReference CreateMarshaler(ResourceCandidate obj);
    public static ObjectReferenceValue CreateMarshaler2(ResourceCandidate obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static ResourceCandidate FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(ResourceCandidate obj);
    public static MarshalerArray<ResourceCandidate> CreateMarshalerArray(ResourceCandidate[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static ResourceCandidate[] FromAbiArray(object box);
    public static void CopyAbiArray(ResourceCandidate[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(ResourceCandidate[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<ResourceCandidate> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidateRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContext : ValueType {
    public static IObjectReference CreateMarshaler(ResourceContext obj);
    public static ObjectReferenceValue CreateMarshaler2(ResourceContext obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static ResourceContext FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(ResourceContext obj);
    public static MarshalerArray<ResourceContext> CreateMarshalerArray(ResourceContext[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static ResourceContext[] FromAbiArray(object box);
    public static void CopyAbiArray(ResourceContext[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(ResourceContext[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<ResourceContext> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContextRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceLoader : ValueType {
    public static IObjectReference CreateMarshaler(ResourceLoader obj);
    public static ObjectReferenceValue CreateMarshaler2(ResourceLoader obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static ResourceLoader FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(ResourceLoader obj);
    public static MarshalerArray<ResourceLoader> CreateMarshalerArray(ResourceLoader[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static ResourceLoader[] FromAbiArray(object box);
    public static void CopyAbiArray(ResourceLoader[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(ResourceLoader[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<ResourceLoader> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceLoaderRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceManager : ValueType {
    public static IObjectReference CreateMarshaler(ResourceManager obj);
    public static ObjectReferenceValue CreateMarshaler2(ResourceManager obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static ResourceManager FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(ResourceManager obj);
    public static MarshalerArray<ResourceManager> CreateMarshalerArray(ResourceManager[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static ResourceManager[] FromAbiArray(object box);
    public static void CopyAbiArray(ResourceManager[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(ResourceManager[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<ResourceManager> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceManagerRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceMap : ValueType {
    public static IObjectReference CreateMarshaler(ResourceMap obj);
    public static ObjectReferenceValue CreateMarshaler2(ResourceMap obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static ResourceMap FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(ResourceMap obj);
    public static MarshalerArray<ResourceMap> CreateMarshalerArray(ResourceMap[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static ResourceMap[] FromAbiArray(object box);
    public static void CopyAbiArray(ResourceMap[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(ResourceMap[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<ResourceMap> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceMapRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(ResourceNotFoundEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(ResourceNotFoundEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static ResourceNotFoundEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(ResourceNotFoundEventArgs obj);
    public static MarshalerArray<ResourceNotFoundEventArgs> CreateMarshalerArray(ResourceNotFoundEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static ResourceNotFoundEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(ResourceNotFoundEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(ResourceNotFoundEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<ResourceNotFoundEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[GuidAttribute("58DFCEF9-08EC-5086-8AF1-D5BEAB79250A")]
internal interface ABI.Microsoft.Windows.Globalization.IApplicationLanguagesStatics {
}
internal static class ABI.Microsoft.Windows.Globalization.IApplicationLanguagesStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IReadOnlyList`1<string> get_Languages(IObjectReference _obj);
    internal static IReadOnlyList`1<string> get_ManifestLanguages(IObjectReference _obj);
    internal static string get_PrimaryLanguageOverride(IObjectReference _obj);
    internal static void set_PrimaryLanguageOverride(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("DD6CDEDC-559B-50C8-AC53-82FE21F915F3")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStatics")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.Resources.IKnownResourceQualifierNameStatics {
    public string Contrast { get; }
    public string Custom { get; }
    public string DeviceFamily { get; }
    public string HomeRegion { get; }
    public string Language { get; }
    public string LayoutDirection { get; }
    public string Scale { get; }
    public string TargetSize { get; }
    public string Theme { get; }
    public abstract virtual string get_Contrast();
    public abstract virtual string get_Custom();
    public abstract virtual string get_DeviceFamily();
    public abstract virtual string get_HomeRegion();
    public abstract virtual string get_Language();
    public abstract virtual string get_LayoutDirection();
    public abstract virtual string get_Scale();
    public abstract virtual string get_TargetSize();
    public abstract virtual string get_Theme();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("6C54BC0C-EF1E-57B8-B478-34FECE737356")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidate")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.Resources.IResourceCandidate {
    public ResourceCandidateKind Kind { get; }
    public IReadOnlyDictionary`2<string, string> QualifierValues { get; }
    public Byte[] ValueAsBytes { get; }
    public string ValueAsString { get; }
    public abstract virtual ResourceCandidateKind get_Kind();
    public abstract virtual IReadOnlyDictionary`2<string, string> get_QualifierValues();
    public abstract virtual Byte[] get_ValueAsBytes();
    public abstract virtual string get_ValueAsString();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("BB2B30F8-C19B-5F43-88D9-69AD728A32F4")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateFactory")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.Resources.IResourceCandidateFactory {
    public abstract virtual ResourceCandidate CreateInstance(ResourceCandidateKind kind, string data);
    public abstract virtual ResourceCandidate CreateInstance2(Byte[] data);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("96FB48DC-F77D-55FF-AF12-34861E3D4939")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContext")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
public interface Microsoft.Windows.ApplicationModel.Resources.IResourceContext {
    public IDictionary`2<string, string> QualifierValues { get; }
    public abstract virtual IDictionary`2<string, string> get_QualifierValues();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("7A3B1158-798C-5949-969D-03510B9CE6CA")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceContext2")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.Resources.IResourceContext2 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("BC3F76BF-DA46-54CD-8715-8B8AAF16EAAC")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoader")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.Resources.IResourceLoader {
    public abstract virtual string GetString(string resourceId);
    public abstract virtual string GetStringForUri(Uri resourceUri);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("871F83AA-FB34-50D6-B9B9-2C35F3FFC004")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderFactory")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderFactory {
    public abstract virtual ResourceLoader CreateInstance(string fileName);
    public abstract virtual ResourceLoader CreateInstance2(string fileName, string resourceMap);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("EC9C894A-1466-5F2F-8EEE-A70CBD2B51BB")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderStatics")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.Resources.IResourceLoaderStatics {
    public abstract virtual string GetDefaultResourceFilePath();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("AC2291EF-81BE-5C99-A0AE-BCEE0180B8A8")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManager")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
public interface Microsoft.Windows.ApplicationModel.Resources.IResourceManager {
    public ResourceMap MainResourceMap { get; }
    public abstract virtual ResourceContext CreateResourceContext();
    public abstract virtual ResourceMap get_MainResourceMap();
    [CompilerGeneratedAttribute]
public abstract virtual void add_ResourceNotFound(TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ResourceNotFound(TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("7EC10160-A154-5C42-8268-30E306B1F585")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManager2")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.Resources.IResourceManager2 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("D6ACF18F-458A-535B-A5C4-AC2DC4E49099")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceManagerFactory")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.Resources.IResourceManagerFactory {
    public abstract virtual ResourceManager CreateInstance(string fileName);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("4ABBD9BC-DF4E-5C7B-812C-7E7BB0C22377")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceMap")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.Resources.IResourceMap {
    public UInt32 ResourceCount { get; }
    public abstract virtual ResourceMap GetSubtree(string reference);
    public abstract virtual ResourceMap TryGetSubtree(string reference);
    [OverloadAttribute("GetValue")]
public abstract virtual ResourceCandidate GetValue(string resource);
    [OverloadAttribute("GetValueWithContext")]
public abstract virtual ResourceCandidate GetValue(string resource, ResourceContext context);
    [OverloadAttribute("GetValueByIndex")]
public abstract virtual KeyValuePair`2<string, ResourceCandidate> GetValueByIndex(UInt32 index);
    [OverloadAttribute("GetValueByIndexWithContext")]
public abstract virtual KeyValuePair`2<string, ResourceCandidate> GetValueByIndex(UInt32 index, ResourceContext context);
    [OverloadAttribute("TryGetValue")]
public abstract virtual ResourceCandidate TryGetValue(string resource);
    [OverloadAttribute("TryGetValueWithContext")]
public abstract virtual ResourceCandidate TryGetValue(string resource, ResourceContext context);
    public abstract virtual UInt32 get_ResourceCount();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[GuidAttribute("64ABB08B-E77D-5B26-830F-15941E0E8200")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgs")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
internal interface Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgs {
    public ResourceContext Context { get; }
    public string Name { get; }
    public abstract virtual void SetResolvedCandidate(ResourceCandidate candidate);
    public abstract virtual ResourceContext get_Context();
    public abstract virtual string get_Name();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
public static class Microsoft.Windows.ApplicationModel.Resources.KnownResourceQualifierName : object {
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics;
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics { get; }
    public static string Contrast { get; }
    public static string Custom { get; }
    public static string DeviceFamily { get; }
    public static string HomeRegion { get; }
    public static string Language { get; }
    public static string LayoutDirection { get; }
    public static string Scale { get; }
    public static string TargetSize { get; }
    public static string Theme { get; }
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IKnownResourceQualifierNameStatics();
    public static string get_Contrast();
    public static string get_Custom();
    public static string get_DeviceFamily();
    public static string get_HomeRegion();
    public static string get_Language();
    public static string get_LayoutDirection();
    public static string get_Scale();
    public static string get_TargetSize();
    public static string get_Theme();
}
[ContractVersionAttribute("131072")]
public enum Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract : Enum {
    public int value__;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate")]
[ResourceCandidateRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.ApplicationModel.Resources.IResourceCandidate")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
public class Microsoft.Windows.ApplicationModel.Resources.ResourceCandidate : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidateFactory;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidate { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidateFactory { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public ResourceCandidateKind Kind { get; }
    public IReadOnlyDictionary`2<string, string> QualifierValues { get; }
    public Byte[] ValueAsBytes { get; }
    public string ValueAsString { get; }
    public ResourceCandidate(ResourceCandidateKind kind, string data);
    public ResourceCandidate(Byte[] data);
    internal ResourceCandidate(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidate();
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceCandidateFactory();
    public static ResourceCandidate FromAbi(IntPtr thisPtr);
    public static bool op_Equality(ResourceCandidate x, ResourceCandidate y);
    public static bool op_Inequality(ResourceCandidate x, ResourceCandidate y);
    public sealed virtual bool Equals(ResourceCandidate other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public ResourceCandidateKind get_Kind();
    public IReadOnlyDictionary`2<string, string> get_QualifierValues();
    public Byte[] get_ValueAsBytes();
    public string get_ValueAsString();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.ApplicationModel.Resources.ResourceCandidateKind>")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
public enum Microsoft.Windows.ApplicationModel.Resources.ResourceCandidateKind : Enum {
    public int value__;
    public static ResourceCandidateKind Unknown;
    public static ResourceCandidateKind String;
    public static ResourceCandidateKind FilePath;
    public static ResourceCandidateKind EmbeddedData;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceContext")]
[ResourceContextRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.ApplicationModel.Resources.IResourceContext")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
public class Microsoft.Windows.ApplicationModel.Resources.ResourceContext : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext2 { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IDictionary`2<string, string> QualifierValues { get; }
    internal ResourceContext(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext2();
    private IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext2();
    private IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceContext();
    public static ResourceContext FromAbi(IntPtr thisPtr);
    public static bool op_Equality(ResourceContext x, ResourceContext y);
    public static bool op_Inequality(ResourceContext x, ResourceContext y);
    public sealed virtual bool Equals(ResourceContext other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public sealed virtual IDictionary`2<string, string> get_QualifierValues();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceLoader")]
[ResourceLoaderRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.ApplicationModel.Resources.IResourceLoader")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
public class Microsoft.Windows.ApplicationModel.Resources.ResourceLoader : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceLoader;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderFactory;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderStatics;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoader { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceLoader { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderFactory { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderStatics { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public ResourceLoader(string fileName);
    public ResourceLoader(string fileName, string resourceMap);
    internal ResourceLoader(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoader();
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceLoader();
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderFactory();
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceLoaderStatics();
    public static string GetDefaultResourceFilePath();
    public static ResourceLoader FromAbi(IntPtr thisPtr);
    public static bool op_Equality(ResourceLoader x, ResourceLoader y);
    public static bool op_Inequality(ResourceLoader x, ResourceLoader y);
    public sealed virtual bool Equals(ResourceLoader other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string GetString(string resourceId);
    public string GetStringForUri(Uri resourceUri);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceManager")]
[ResourceManagerRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.ApplicationModel.Resources.IResourceManager")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
public class Microsoft.Windows.ApplicationModel.Resources.ResourceManager : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager2;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManagerFactory;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager2 { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManagerFactory { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public ResourceMap MainResourceMap { get; }
    public ResourceManager(string fileName);
    internal ResourceManager(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager2();
    private IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager2();
    private IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManager();
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager();
    private static IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceManagerFactory();
    public static ResourceManager FromAbi(IntPtr thisPtr);
    public static bool op_Equality(ResourceManager x, ResourceManager y);
    public static bool op_Inequality(ResourceManager x, ResourceManager y);
    public sealed virtual bool Equals(ResourceManager other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public sealed virtual ResourceContext CreateResourceContext();
    public sealed virtual void add_ResourceNotFound(TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs> value);
    public sealed virtual void remove_ResourceNotFound(TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs> value);
    public sealed virtual ResourceMap get_MainResourceMap();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceMap")]
[ResourceMapRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.ApplicationModel.Resources.IResourceMap")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
public class Microsoft.Windows.ApplicationModel.Resources.ResourceMap : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceMap { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public UInt32 ResourceCount { get; }
    internal ResourceMap(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceMap();
    public static ResourceMap FromAbi(IntPtr thisPtr);
    public static bool op_Equality(ResourceMap x, ResourceMap y);
    public static bool op_Inequality(ResourceMap x, ResourceMap y);
    public sealed virtual bool Equals(ResourceMap other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public ResourceMap GetSubtree(string reference);
    public ResourceMap TryGetSubtree(string reference);
    public ResourceCandidate GetValue(string resource);
    public ResourceCandidate GetValue(string resource, ResourceContext context);
    public KeyValuePair`2<string, ResourceCandidate> GetValueByIndex(UInt32 index);
    public KeyValuePair`2<string, ResourceCandidate> GetValueByIndex(UInt32 index, ResourceContext context);
    public ResourceCandidate TryGetValue(string resource);
    public ResourceCandidate TryGetValue(string resource, ResourceContext context);
    public UInt32 get_ResourceCount();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.ApplicationModel.Resources")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs")]
[ResourceNotFoundEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.ApplicationModel.Resources.IResourceNotFoundEventArgs")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "65536")]
public class Microsoft.Windows.ApplicationModel.Resources.ResourceNotFoundEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceNotFoundEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public ResourceContext Context { get; }
    public string Name { get; }
    internal ResourceNotFoundEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_ApplicationModel_Resources_IResourceNotFoundEventArgs();
    public static ResourceNotFoundEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(ResourceNotFoundEventArgs x, ResourceNotFoundEventArgs y);
    public static bool op_Inequality(ResourceNotFoundEventArgs x, ResourceNotFoundEventArgs y);
    public sealed virtual bool Equals(ResourceNotFoundEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void SetResolvedCandidate(ResourceCandidate candidate);
    public ResourceContext get_Context();
    public string get_Name();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Globalization")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "131072")]
public static class Microsoft.Windows.Globalization.ApplicationLanguages : object {
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_Globalization_IApplicationLanguagesStatics;
    private static IObjectReference _objRef_global__Microsoft_Windows_Globalization_IApplicationLanguagesStatics { get; }
    public static IReadOnlyList`1<string> Languages { get; }
    public static IReadOnlyList`1<string> ManifestLanguages { get; }
    public static string PrimaryLanguageOverride { get; public set; }
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_Globalization_IApplicationLanguagesStatics();
    public static IReadOnlyList`1<string> get_Languages();
    public static IReadOnlyList`1<string> get_ManifestLanguages();
    public static string get_PrimaryLanguageOverride();
    public static void set_PrimaryLanguageOverride(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.Globalization")]
[GuidAttribute("58DFCEF9-08EC-5086-8AF1-D5BEAB79250A")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.Globalization.IApplicationLanguagesStatics")]
[ContractVersionAttribute("Microsoft.Windows.ApplicationModel.Resources.MrtCoreContract", "131072")]
internal interface Microsoft.Windows.Globalization.IApplicationLanguagesStatics {
    public IReadOnlyList`1<string> Languages { get; }
    public IReadOnlyList`1<string> ManifestLanguages { get; }
    public string PrimaryLanguageOverride { get; public set; }
    public abstract virtual IReadOnlyList`1<string> get_Languages();
    public abstract virtual IReadOnlyList`1<string> get_ManifestLanguages();
    public abstract virtual string get_PrimaryLanguageOverride();
    public abstract virtual void set_PrimaryLanguageOverride(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager__global__Microsoft_Windows_ApplicationModel_Resources_ResourceNotFoundEventArgs_ : EventSource`1<TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager__global__Microsoft_Windows_ApplicationModel_Resources_ResourceNotFoundEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_ApplicationModel_Resources_ResourceManager__global__Microsoft_Windows_ApplicationModel_Resources_ResourceNotFoundEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<ResourceManager, ResourceNotFoundEventArgs>> CreateEventSourceState();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<string> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<KeyValuePair`2<string, string>> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, String[] items);
    private static string get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, KeyValuePair`2[] items);
    private static KeyValuePair`2<string, string> get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IKeyValuePair_2_String__Microsoft_Windows_ApplicationModel_Resources_ResourceCandidate : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IKeyValuePair_2_String__Microsoft_Windows_ApplicationModel_Resources_ResourceCandidate();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string get_Key(IObjectReference _obj);
    private static ResourceCandidate get_Value(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IKeyValuePair_2_String__String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IKeyValuePair_2_String__String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string get_Key(IObjectReference _obj);
    private static string get_Value(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMap_2_String__String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IMap_2_String__String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string Lookup(IObjectReference _obj, string key);
    private static bool HasKey(IObjectReference _obj, string key);
    private static IReadOnlyDictionary`2<string, string> GetView(IObjectReference _obj);
    private static bool Insert(IObjectReference _obj, string key, string value);
    private static void Remove(IObjectReference _obj, string key);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMapView_2_String__String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IMapView_2_String__String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string Lookup(IObjectReference _obj, string key);
    private static bool HasKey(IObjectReference _obj, string key);
    private static void Split(IObjectReference _obj, IReadOnlyDictionary`2& first, IReadOnlyDictionary`2& second);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, string value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, String[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Windows_ApplicationModel_Resources_ResourceManager__Microsoft_Windows_ApplicationModel_Resources_ResourceNotFoundEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Windows_ApplicationModel_Resources_ResourceManager__Microsoft_Windows_ApplicationModel_Resources_ResourceNotFoundEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, ResourceManager sender, ResourceNotFoundEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.ProjectionInitializer : object {
    [ModuleInitializerAttribute]
public static void InitalizeProjection();
}
