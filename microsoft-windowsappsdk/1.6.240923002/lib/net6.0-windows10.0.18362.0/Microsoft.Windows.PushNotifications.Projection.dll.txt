[GuidAttribute("DA28BBCB-7695-5D38-AF82-F30B72FEF1F6")]
internal interface ABI.Microsoft.Windows.PushNotifications.IPushNotificationChannel {
}
internal static class ABI.Microsoft.Windows.PushNotifications.IPushNotificationChannelMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void Close(IObjectReference _obj);
    internal static DateTimeOffset get_ExpirationTime(IObjectReference _obj);
    internal static Uri get_Uri(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4DF3717F-5D33-56E9-B381-1B350C95722E")]
internal interface ABI.Microsoft.Windows.PushNotifications.IPushNotificationCreateChannelResult {
}
internal static class ABI.Microsoft.Windows.PushNotifications.IPushNotificationCreateChannelResultMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static PushNotificationChannel get_Channel(IObjectReference _obj);
    internal static Exception get_ExtendedError(IObjectReference _obj);
    internal static PushNotificationChannelStatus get_Status(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("902F4ABA-FF63-5DFE-A88F-15CC6BED55FF")]
internal interface ABI.Microsoft.Windows.PushNotifications.IPushNotificationManager {
}
internal static class ABI.Microsoft.Windows.PushNotifications.IPushNotificationManagerMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _PushReceived_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<PushNotificationManager, PushNotificationReceivedEventArgs>>> _PushReceived { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void Register(IObjectReference _obj);
    internal static void Unregister(IObjectReference _obj);
    internal static void UnregisterAll(IObjectReference _obj);
    internal static IAsyncOperationWithProgress`2<PushNotificationCreateChannelResult, PushNotificationCreateChannelStatus> CreateChannelAsync(IObjectReference _obj, Guid remoteId);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<PushNotificationManager, PushNotificationReceivedEventArgs>>> MakePushReceivedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<PushNotificationManager, PushNotificationReceivedEventArgs>>> get__PushReceived();
    internal static EventSource`1<TypedEventHandler`2<PushNotificationManager, PushNotificationReceivedEventArgs>> Get_PushReceived2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("71329470-1B55-58DC-A00C-68C26F2D8BD9")]
internal interface ABI.Microsoft.Windows.PushNotifications.IPushNotificationManagerStatics {
}
internal static class ABI.Microsoft.Windows.PushNotifications.IPushNotificationManagerStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool IsSupported(IObjectReference _obj);
    internal static PushNotificationManager get_Default(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("FBD4EC53-BB83-5495-8777-D3CF13E4299C")]
internal interface ABI.Microsoft.Windows.PushNotifications.IPushNotificationReceivedEventArgs {
}
internal static class ABI.Microsoft.Windows.PushNotifications.IPushNotificationReceivedEventArgsMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _Canceled_;
    private static ConditionalWeakTable`2<object, EventSource`1<BackgroundTaskCanceledEventHandler>> _Canceled { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static BackgroundTaskDeferral GetDeferral(IObjectReference _obj);
    internal static Byte[] get_Payload(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<BackgroundTaskCanceledEventHandler>> MakeCanceledTable();
    private static ConditionalWeakTable`2<object, EventSource`1<BackgroundTaskCanceledEventHandler>> get__Canceled();
    internal static EventSource`1<BackgroundTaskCanceledEventHandler> Get_Canceled2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.PushNotifications.PushNotificationChannel : ValueType {
    public static IObjectReference CreateMarshaler(PushNotificationChannel obj);
    public static ObjectReferenceValue CreateMarshaler2(PushNotificationChannel obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static PushNotificationChannel FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(PushNotificationChannel obj);
    public static MarshalerArray<PushNotificationChannel> CreateMarshalerArray(PushNotificationChannel[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static PushNotificationChannel[] FromAbiArray(object box);
    public static void CopyAbiArray(PushNotificationChannel[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(PushNotificationChannel[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<PushNotificationChannel> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.PushNotifications.PushNotificationChannelRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.PushNotifications.PushNotificationCreateChannelResult : ValueType {
    public static IObjectReference CreateMarshaler(PushNotificationCreateChannelResult obj);
    public static ObjectReferenceValue CreateMarshaler2(PushNotificationCreateChannelResult obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static PushNotificationCreateChannelResult FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(PushNotificationCreateChannelResult obj);
    public static MarshalerArray<PushNotificationCreateChannelResult> CreateMarshalerArray(PushNotificationCreateChannelResult[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static PushNotificationCreateChannelResult[] FromAbiArray(object box);
    public static void CopyAbiArray(PushNotificationCreateChannelResult[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(PushNotificationCreateChannelResult[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<PushNotificationCreateChannelResult> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.PushNotifications.PushNotificationCreateChannelResultRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.PushNotifications.PushNotificationCreateChannelStatus : ValueType {
    public PushNotificationChannelStatus status;
    public Exception extendedError;
    public UInt32 retryCount;
    public static Marshaler CreateMarshaler(PushNotificationCreateChannelStatus arg);
    public static PushNotificationCreateChannelStatus GetAbi(Marshaler m);
    public static PushNotificationCreateChannelStatus FromAbi(PushNotificationCreateChannelStatus arg);
    public static PushNotificationCreateChannelStatus FromManaged(PushNotificationCreateChannelStatus arg);
    public static void CopyAbi(Marshaler arg, IntPtr dest);
    public static void CopyManaged(PushNotificationCreateChannelStatus arg, IntPtr dest);
    public static void DisposeMarshaler(Marshaler m);
    public static void DisposeAbi(PushNotificationCreateChannelStatus abi);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.PushNotifications.PushNotificationManager : ValueType {
    public static IObjectReference CreateMarshaler(PushNotificationManager obj);
    public static ObjectReferenceValue CreateMarshaler2(PushNotificationManager obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static PushNotificationManager FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(PushNotificationManager obj);
    public static MarshalerArray<PushNotificationManager> CreateMarshalerArray(PushNotificationManager[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static PushNotificationManager[] FromAbiArray(object box);
    public static void CopyAbiArray(PushNotificationManager[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(PushNotificationManager[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<PushNotificationManager> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.PushNotifications.PushNotificationManagerRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(PushNotificationReceivedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(PushNotificationReceivedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static PushNotificationReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(PushNotificationReceivedEventArgs obj);
    public static MarshalerArray<PushNotificationReceivedEventArgs> CreateMarshalerArray(PushNotificationReceivedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static PushNotificationReceivedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(PushNotificationReceivedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(PushNotificationReceivedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<PushNotificationReceivedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.PushNotifications")]
[GuidAttribute("DA28BBCB-7695-5D38-AF82-F30B72FEF1F6")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.PushNotifications.IPushNotificationChannel")]
[ContractVersionAttribute("Microsoft.Windows.PushNotifications.PushNotificationsContract", "65536")]
internal interface Microsoft.Windows.PushNotifications.IPushNotificationChannel {
    public DateTimeOffset ExpirationTime { get; }
    public Uri Uri { get; }
    public abstract virtual void Close();
    public abstract virtual DateTimeOffset get_ExpirationTime();
    public abstract virtual Uri get_Uri();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.PushNotifications")]
[GuidAttribute("4DF3717F-5D33-56E9-B381-1B350C95722E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.PushNotifications.IPushNotificationCreateChannelResult")]
[ContractVersionAttribute("Microsoft.Windows.PushNotifications.PushNotificationsContract", "65536")]
internal interface Microsoft.Windows.PushNotifications.IPushNotificationCreateChannelResult {
    public PushNotificationChannel Channel { get; }
    public Exception ExtendedError { get; }
    public PushNotificationChannelStatus Status { get; }
    public abstract virtual PushNotificationChannel get_Channel();
    public abstract virtual Exception get_ExtendedError();
    public abstract virtual PushNotificationChannelStatus get_Status();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.PushNotifications")]
[GuidAttribute("902F4ABA-FF63-5DFE-A88F-15CC6BED55FF")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.PushNotifications.IPushNotificationManager")]
[ContractVersionAttribute("Microsoft.Windows.PushNotifications.PushNotificationsContract", "65536")]
internal interface Microsoft.Windows.PushNotifications.IPushNotificationManager {
    public abstract virtual void Register();
    public abstract virtual void Unregister();
    public abstract virtual void UnregisterAll();
    public abstract virtual IAsyncOperationWithProgress`2<PushNotificationCreateChannelResult, PushNotificationCreateChannelStatus> CreateChannelAsync(Guid remoteId);
    [CompilerGeneratedAttribute]
public abstract virtual void add_PushReceived(TypedEventHandler`2<PushNotificationManager, PushNotificationReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_PushReceived(TypedEventHandler`2<PushNotificationManager, PushNotificationReceivedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.PushNotifications")]
[GuidAttribute("71329470-1B55-58DC-A00C-68C26F2D8BD9")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.PushNotifications.IPushNotificationManagerStatics")]
[ContractVersionAttribute("Microsoft.Windows.PushNotifications.PushNotificationsContract", "65536")]
internal interface Microsoft.Windows.PushNotifications.IPushNotificationManagerStatics {
    public PushNotificationManager Default { get; }
    public abstract virtual bool IsSupported();
    public abstract virtual PushNotificationManager get_Default();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.PushNotifications")]
[GuidAttribute("FBD4EC53-BB83-5495-8777-D3CF13E4299C")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.PushNotifications.IPushNotificationReceivedEventArgs")]
[ContractVersionAttribute("Microsoft.Windows.PushNotifications.PushNotificationsContract", "65536")]
internal interface Microsoft.Windows.PushNotifications.IPushNotificationReceivedEventArgs {
    public Byte[] Payload { get; }
    public abstract virtual BackgroundTaskDeferral GetDeferral();
    public abstract virtual Byte[] get_Payload();
    [CompilerGeneratedAttribute]
public abstract virtual void add_Canceled(BackgroundTaskCanceledEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_Canceled(BackgroundTaskCanceledEventHandler value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.PushNotifications")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.PushNotifications.PushNotificationChannel")]
[PushNotificationChannelRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.PushNotifications.IPushNotificationChannel")]
[ContractVersionAttribute("Microsoft.Windows.PushNotifications.PushNotificationsContract", "65536")]
public class Microsoft.Windows.PushNotifications.PushNotificationChannel : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_PushNotifications_IPushNotificationChannel { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public DateTimeOffset ExpirationTime { get; }
    public Uri Uri { get; }
    internal PushNotificationChannel(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_PushNotifications_IPushNotificationChannel();
    public static PushNotificationChannel FromAbi(IntPtr thisPtr);
    public static bool op_Equality(PushNotificationChannel x, PushNotificationChannel y);
    public static bool op_Inequality(PushNotificationChannel x, PushNotificationChannel y);
    public sealed virtual bool Equals(PushNotificationChannel other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void Close();
    public DateTimeOffset get_ExpirationTime();
    public Uri get_Uri();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.PushNotifications")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Windows.PushNotifications.PushNotificationChannelStatus>")]
[ContractVersionAttribute("Microsoft.Windows.PushNotifications.PushNotificationsContract", "65536")]
public enum Microsoft.Windows.PushNotifications.PushNotificationChannelStatus : Enum {
    public int value__;
    public static PushNotificationChannelStatus InProgress;
    public static PushNotificationChannelStatus InProgressRetry;
    public static PushNotificationChannelStatus CompletedSuccess;
    public static PushNotificationChannelStatus CompletedFailure;
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.PushNotifications")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.PushNotifications.PushNotificationCreateChannelResult")]
[PushNotificationCreateChannelResultRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.PushNotifications.IPushNotificationCreateChannelResult")]
[ContractVersionAttribute("Microsoft.Windows.PushNotifications.PushNotificationsContract", "65536")]
public class Microsoft.Windows.PushNotifications.PushNotificationCreateChannelResult : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_PushNotifications_IPushNotificationCreateChannelResult { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public PushNotificationChannel Channel { get; }
    public Exception ExtendedError { get; }
    public PushNotificationChannelStatus Status { get; }
    internal PushNotificationCreateChannelResult(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_PushNotifications_IPushNotificationCreateChannelResult();
    public static PushNotificationCreateChannelResult FromAbi(IntPtr thisPtr);
    public static bool op_Equality(PushNotificationCreateChannelResult x, PushNotificationCreateChannelResult y);
    public static bool op_Inequality(PushNotificationCreateChannelResult x, PushNotificationCreateChannelResult y);
    public sealed virtual bool Equals(PushNotificationCreateChannelResult other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public PushNotificationChannel get_Channel();
    public Exception get_ExtendedError();
    public PushNotificationChannelStatus get_Status();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.PushNotifications", "struct(Microsoft.Windows.PushNotifications.PushNotificationCreateChannelStatus;enum(Microsoft.Windows.PushNotifications.PushNotificationChannelStatus;i4);struct(Windows.Foundation.HResult;i4);u4)")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.PushNotifications.PushNotificationCreateChannelStatus")]
[WinRTExposedTypeAttribute("WinRT.StructTypeDetails`2<Microsoft.Windows.PushNotifications.PushNotificationCreateChannelStatus,ABI.Microsoft.Windows.PushNotifications.PushNotificationCreateChannelStatus>")]
[ContractVersionAttribute("Microsoft.Windows.PushNotifications.PushNotificationsContract", "65536")]
public class Microsoft.Windows.PushNotifications.PushNotificationCreateChannelStatus : ValueType {
    public PushNotificationChannelStatus status;
    public Exception extendedError;
    public UInt32 retryCount;
    public PushNotificationCreateChannelStatus(PushNotificationChannelStatus _status, Exception _extendedError, UInt32 _retryCount);
    public static bool op_Equality(PushNotificationCreateChannelStatus x, PushNotificationCreateChannelStatus y);
    public static bool op_Inequality(PushNotificationCreateChannelStatus x, PushNotificationCreateChannelStatus y);
    public sealed virtual bool Equals(PushNotificationCreateChannelStatus other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.PushNotifications")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.PushNotifications.PushNotificationManager")]
[PushNotificationManagerRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.PushNotifications.IPushNotificationManager")]
[ContractVersionAttribute("Microsoft.Windows.PushNotifications.PushNotificationsContract", "65536")]
public class Microsoft.Windows.PushNotifications.PushNotificationManager : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Windows_PushNotifications_IPushNotificationManagerStatics;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_PushNotifications_IPushNotificationManager { get; }
    private static IObjectReference _objRef_global__Microsoft_Windows_PushNotifications_IPushNotificationManagerStatics { get; }
    public static PushNotificationManager Default { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    internal PushNotificationManager(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_PushNotifications_IPushNotificationManager();
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Windows_PushNotifications_IPushNotificationManagerStatics();
    public static bool IsSupported();
    public static PushNotificationManager get_Default();
    public static PushNotificationManager FromAbi(IntPtr thisPtr);
    public static bool op_Equality(PushNotificationManager x, PushNotificationManager y);
    public static bool op_Inequality(PushNotificationManager x, PushNotificationManager y);
    public sealed virtual bool Equals(PushNotificationManager other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void Register();
    public void Unregister();
    public void UnregisterAll();
    public IAsyncOperationWithProgress`2<PushNotificationCreateChannelResult, PushNotificationCreateChannelStatus> CreateChannelAsync(Guid remoteId);
    public void add_PushReceived(TypedEventHandler`2<PushNotificationManager, PushNotificationReceivedEventArgs> value);
    public void remove_PushReceived(TypedEventHandler`2<PushNotificationManager, PushNotificationReceivedEventArgs> value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Windows.PushNotifications")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs")]
[PushNotificationReceivedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Windows.PushNotifications.IPushNotificationReceivedEventArgs")]
[ContractVersionAttribute("Microsoft.Windows.PushNotifications.PushNotificationsContract", "65536")]
public class Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Windows_PushNotifications_IPushNotificationReceivedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public Byte[] Payload { get; }
    internal PushNotificationReceivedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Windows_PushNotifications_IPushNotificationReceivedEventArgs();
    public static PushNotificationReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(PushNotificationReceivedEventArgs x, PushNotificationReceivedEventArgs y);
    public static bool op_Inequality(PushNotificationReceivedEventArgs x, PushNotificationReceivedEventArgs y);
    public sealed virtual bool Equals(PushNotificationReceivedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public BackgroundTaskDeferral GetDeferral();
    public void add_Canceled(BackgroundTaskCanceledEventHandler value);
    public void remove_Canceled(BackgroundTaskCanceledEventHandler value);
    public Byte[] get_Payload();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[ContractVersionAttribute("65536")]
public enum Microsoft.Windows.PushNotifications.PushNotificationsContract : Enum {
    public int value__;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
internal class WinRT._EventSource_global__Windows_ApplicationModel_Background_BackgroundTaskCanceledEventHandler : EventSource`1<BackgroundTaskCanceledEventHandler> {
    internal _EventSource_global__Windows_ApplicationModel_Background_BackgroundTaskCanceledEventHandler(IObjectReference obj, method addHandler, method removeHandler, int index);
    protected virtual ObjectReferenceValue CreateMarshaler(BackgroundTaskCanceledEventHandler handler);
    protected virtual EventSourceState`1<BackgroundTaskCanceledEventHandler> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_PushNotifications_PushNotificationManager__global__Microsoft_Windows_PushNotifications_PushNotificationReceivedEventArgs_ : EventSource`1<TypedEventHandler`2<PushNotificationManager, PushNotificationReceivedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_PushNotifications_PushNotificationManager__global__Microsoft_Windows_PushNotifications_PushNotificationReceivedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Windows_PushNotifications_PushNotificationManager__global__Microsoft_Windows_PushNotifications_PushNotificationReceivedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<PushNotificationManager, PushNotificationReceivedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<PushNotificationManager, PushNotificationReceivedEventArgs>> CreateEventSourceState();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationProgressHandler_2_Microsoft_Windows_PushNotifications_PushNotificationCreateChannelResult__Microsoft_Windows_PushNotifications_PushNotificationCreateChannelStatus : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationProgressHandler_2_Microsoft_Windows_PushNotifications_PushNotificationCreateChannelResult__Microsoft_Windows_PushNotifications_PushNotificationCreateChannelStatus();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, IAsyncOperationWithProgress`2<PushNotificationCreateChannelResult, PushNotificationCreateChannelStatus> asyncInfo, PushNotificationCreateChannelStatus progressInfo);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, PushNotificationCreateChannelStatus progressInfo);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Microsoft_Windows_PushNotifications_PushNotificationCreateChannelResult__Microsoft_Windows_PushNotifications_PushNotificationCreateChannelStatus : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Microsoft_Windows_PushNotifications_PushNotificationCreateChannelResult__Microsoft_Windows_PushNotifications_PushNotificationCreateChannelStatus();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperationWithProgress_2_Microsoft_Windows_PushNotifications_PushNotificationCreateChannelResult__Microsoft_Windows_PushNotifications_PushNotificationCreateChannelStatus : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperationWithProgress_2_Microsoft_Windows_PushNotifications_PushNotificationCreateChannelResult__Microsoft_Windows_PushNotifications_PushNotificationCreateChannelStatus();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static PushNotificationCreateChannelResult GetResults(IObjectReference _obj);
    private static AsyncOperationProgressHandler`2<PushNotificationCreateChannelResult, PushNotificationCreateChannelStatus> get_Progress(IObjectReference _obj);
    private static void put_Progress(IObjectReference _obj, AsyncOperationProgressHandler`2<PushNotificationCreateChannelResult, PushNotificationCreateChannelStatus> value);
    private static AsyncOperationWithProgressCompletedHandler`2<PushNotificationCreateChannelResult, PushNotificationCreateChannelStatus> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationWithProgressCompletedHandler`2<PushNotificationCreateChannelResult, PushNotificationCreateChannelStatus> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Windows_PushNotifications_PushNotificationManager__Microsoft_Windows_PushNotifications_PushNotificationReceivedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Windows_PushNotifications_PushNotificationManager__Microsoft_Windows_PushNotifications_PushNotificationReceivedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, PushNotificationManager sender, PushNotificationReceivedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.ProjectionInitializer : object {
    [ModuleInitializerAttribute]
public static void InitalizeProjection();
}
