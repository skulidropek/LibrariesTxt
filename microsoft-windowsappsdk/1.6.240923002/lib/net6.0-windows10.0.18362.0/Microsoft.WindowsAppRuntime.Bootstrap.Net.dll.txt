public class Microsoft.Windows.ApplicationModel.DynamicDependency.Bootstrap : object {
    public static void Initialize(UInt32 majorMinorVersion);
    public static void Initialize(UInt32 majorMinorVersion, string versionTag);
    public static void Initialize(UInt32 majorMinorVersion, string versionTag, PackageVersion minVersion);
    public static void Initialize(UInt32 majorMinorVersion, string versionTag, PackageVersion minVersion, InitializeOptions options);
    public static bool TryInitialize(UInt32 majorMinorVersion, Int32& hresult);
    public static bool TryInitialize(UInt32 majorMinorVersion, string versionTag, Int32& hresult);
    public static bool TryInitialize(UInt32 majorMinorVersion, string versionTag, PackageVersion minVersion, Int32& hresult);
    public static bool TryInitialize(UInt32 majorMinorVersion, string versionTag, PackageVersion minVersion, InitializeOptions options, Int32& hresult);
    public static void Shutdown();
}
internal static class Microsoft.Windows.ApplicationModel.DynamicDependency.NativeMethods : object {
    internal static void MddBootstrapInitialize2_Throw(UInt32 majorMinorVersion, string versionTag, PackageVersion packageVersion, InitializeOptions options);
    internal static int MddBootstrapInitialize2(UInt32 majorMinorVersion, string versionTag, PackageVersion packageVersion, InitializeOptions options);
    internal static void MddBootstrapShutdown();
}
public class Microsoft.Windows.ApplicationModel.DynamicDependency.PackageVersion : ValueType {
    public ushort Revision;
    public ushort Build;
    public ushort Minor;
    public ushort Major;
    public PackageVersion(ushort major);
    public PackageVersion(ushort major, ushort minor);
    public PackageVersion(ushort major, ushort minor, ushort build);
    public PackageVersion(ushort major, ushort minor, ushort build, ushort revision);
    public PackageVersion(ulong version);
    public ulong ToVersion();
    public virtual string ToString();
}
