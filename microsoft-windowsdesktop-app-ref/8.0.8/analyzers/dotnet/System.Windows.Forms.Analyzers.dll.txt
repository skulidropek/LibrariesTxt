[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string WFAC010Title { get; }
    internal static string WFAC010Message_CS { get; }
    internal static string WFAC010Message_VB { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    internal static string get_WFAC010Title();
    internal static string get_WFAC010Message_CS();
    internal static string get_WFAC010Message_VB();
}
[ExtensionAttribute]
internal static class System.Windows.Forms.Analyzers.AnalyzerConfigOptionsProviderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool GetMSBuildProperty(AnalyzerConfigOptionsProvider analyzerConfigOptions, string name, String& value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Analyzers.ApplicationConfig : object {
    [CompilerGeneratedAttribute]
private bool <EnableVisualStyles>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultFont>k__BackingField;
    [CompilerGeneratedAttribute]
private HighDpiMode <HighDpiMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseCompatibleTextRendering>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public bool EnableVisualStyles { get; public set; }
    public string DefaultFont { get; public set; }
    public HighDpiMode HighDpiMode { get; public set; }
    public bool UseCompatibleTextRendering { get; public set; }
    public ApplicationConfig(bool EnableVisualStyles, string DefaultFont, HighDpiMode HighDpiMode, bool UseCompatibleTextRendering);
    [CompilerGeneratedAttribute]
protected ApplicationConfig(ApplicationConfig original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_EnableVisualStyles();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EnableVisualStyles(bool value);
    [CompilerGeneratedAttribute]
public string get_DefaultFont();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DefaultFont(string value);
    [CompilerGeneratedAttribute]
public HighDpiMode get_HighDpiMode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HighDpiMode(HighDpiMode value);
    [CompilerGeneratedAttribute]
public bool get_UseCompatibleTextRendering();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UseCompatibleTextRendering(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(ApplicationConfig left, ApplicationConfig right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(ApplicationConfig left, ApplicationConfig right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual bool Equals(ApplicationConfig other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual ApplicationConfig <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Boolean& EnableVisualStyles, String& DefaultFont, HighDpiMode& HighDpiMode, Boolean& UseCompatibleTextRendering);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class System.Windows.Forms.Analyzers.AppManifestAnalyzer : DiagnosticAnalyzer {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    public virtual void Initialize(AnalysisContext context);
    private void AdditionalFileAction(AdditionalFileAnalysisContext context);
    private static void VerifyAppManifest(AdditionalFileAnalysisContext context, AdditionalText appManifest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class System.Windows.Forms.Analyzers.DiagnosticDescriptors : object {
    private static string Category;
    private static LocalizableString s_localizableWFAC010Title;
    private static LocalizableString s_localizableWFAC010Message_CS;
    private static LocalizableString s_localizableWFAC010Message_VB;
    internal static DiagnosticDescriptor s_migrateHighDpiSettings_CSharp;
    internal static DiagnosticDescriptor s_migrateHighDpiSettings_VB;
    private static DiagnosticDescriptors();
}
public enum System.Windows.Forms.Analyzers.HighDpiMode : Enum {
    public int value__;
    public static HighDpiMode DpiUnaware;
    public static HighDpiMode SystemAware;
    public static HighDpiMode PerMonitor;
    public static HighDpiMode PerMonitorV2;
    public static HighDpiMode DpiUnawareGdiScaled;
}
