[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class AssemblyRef : object {
    internal static string MicrosoftPublicKey;
    internal static string EnvDTE;
    internal static string SystemDesign;
}
internal static class FXAssembly : object {
    [NullableAttribute("1")]
internal static string Version;
}
internal static class SourceGenerated.EnumValidator : object {
    public static void Validate(Enum enumToValidate, string parameterName);
    public static void Validate(DisplayMode enumToValidate, string parameterName);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs : EventArgs {
    public DesignSurface OldSurface { get; }
    public DesignSurface NewSurface { get; }
    public ActiveDesignSurfaceChangedEventArgs(DesignSurface oldSurface, DesignSurface newSurface);
    [CompilerGeneratedAttribute]
public DesignSurface get_OldSurface();
    [CompilerGeneratedAttribute]
public DesignSurface get_NewSurface();
}
public class System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler : MulticastDelegate {
    public ActiveDesignSurfaceChangedEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, ActiveDesignSurfaceChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, ActiveDesignSurfaceChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class System.ComponentModel.Design.ArrayEditor : CollectionEditor {
    public ArrayEditor(Type type);
    protected virtual Type CreateCollectionItemType();
    protected virtual Object[] GetItems(object editValue);
    protected virtual object SetItems(object editValue, Object[] value);
}
public class System.ComponentModel.Design.BinaryEditor : UITypeEditor {
    internal object GetService(Type serviceType);
    internal static Byte[] ConvertToBytes(object value);
    internal static void ConvertToValue(Byte[] bytes, Object& value);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    internal void ShowHelp();
}
[ToolboxItemAttribute("False")]
[DesignTimeVisibleAttribute("False")]
public class System.ComponentModel.Design.ByteViewer : TableLayoutPanel {
    public virtual Byte[] GetBytes();
    public virtual DisplayMode GetDisplayMode();
    protected virtual void OnKeyDown(KeyEventArgs e);
    protected virtual void OnPaint(PaintEventArgs e);
    protected virtual void OnLayout(LayoutEventArgs e);
    public virtual void SaveToFile(string path);
    protected virtual void ScrollChanged(object source, EventArgs e);
    public virtual void SetBytes(Byte[] bytes);
    public virtual void SetDisplayMode(DisplayMode mode);
    public virtual void SetFile(string path);
    public virtual void SetStartLine(int line);
}
internal enum System.ComponentModel.Design.CodeMarkerEvent : Enum {
    public int value__;
    public static CodeMarkerEvent perfFXDesignCreateComponentEnd;
    public static CodeMarkerEvent perfFXDesignPropertyBrowserPopulationStart;
    public static CodeMarkerEvent perfFXDesignPropertyBrowserPopulationEnd;
    public static CodeMarkerEvent perfFXDesignShowCode;
    public static CodeMarkerEvent perfFXDesignFromCodeToDesignStart;
    public static CodeMarkerEvent perfFXDesignFromCodeToDesign;
    public static CodeMarkerEvent perfFXDesignFlushStart;
    public static CodeMarkerEvent perfFXDesignFlushEnd;
    public static CodeMarkerEvent perfFXBindEventDesignToCode;
    public static CodeMarkerEvent perfFXGenerateCodeTreeEnd;
    public static CodeMarkerEvent perfFXIntegrateSerializedTreeEnd;
    public static CodeMarkerEvent perfFXOnLoadedStart;
    public static CodeMarkerEvent perfFXOnLoadedEnd;
    public static CodeMarkerEvent perfFXCreateEditorStart;
    public static CodeMarkerEvent perfFXCreateEditorEnd;
    public static CodeMarkerEvent perfFXParseEnd;
    public static CodeMarkerEvent perfFXPerformLoadStart;
    public static CodeMarkerEvent perfFXPerformLoadEnd;
    public static CodeMarkerEvent perfFXEmitMethodEnd;
    public static CodeMarkerEvent perfFXFormatMethodEnd;
    public static CodeMarkerEvent perfFXCodeGenerationEnd;
    public static CodeMarkerEvent perfFXGetDocumentType;
    public static CodeMarkerEvent perfFXDeserializeStart;
    public static CodeMarkerEvent perfFXDeserializeEnd;
    public static CodeMarkerEvent perfFXGetFileDocDataStart;
    public static CodeMarkerEvent perfFXGetFileDocDataEnd;
    public static CodeMarkerEvent perfFXCreateDesignerStart;
    public static CodeMarkerEvent perfFXCreateDesignerEnd;
    public static CodeMarkerEvent perfFXCreateDesignSurface;
    public static CodeMarkerEvent perfFXCreateDesignSurfaceEnd;
    public static CodeMarkerEvent perfFXNotifyStartupServices;
    public static CodeMarkerEvent perfFXNotifyStartupServicesEnd;
    public static CodeMarkerEvent perfFXGetGlobalObjects;
    public static CodeMarkerEvent perfFXGetGlobalObjectsEnd;
    public static CodeMarkerEvent perfFXDesignPropertyBrowserCreate;
    public static CodeMarkerEvent perfFXDesignPropertyBrowserCreateEnd;
    public static CodeMarkerEvent perfFXDesignPropertyBrowserLoadState;
    public static CodeMarkerEvent perfFXDesignPBOnSelectionChanged;
    public static CodeMarkerEvent perfFXDesignPBOnSelectionChangedEnd;
    public static CodeMarkerEvent perfFXDesignElementHostDesignerSetChildEnd;
}
public class System.ComponentModel.Design.CollectionEditor : UITypeEditor {
    protected Type CollectionItemType { get; }
    protected Type CollectionType { get; }
    protected ITypeDescriptorContext Context { get; }
    protected Type[] NewItemTypes { get; }
    protected string HelpTopic { get; }
    public CollectionEditor(Type type);
    protected Type get_CollectionItemType();
    [CompilerGeneratedAttribute]
protected Type get_CollectionType();
    protected ITypeDescriptorContext get_Context();
    protected Type[] get_NewItemTypes();
    protected virtual string get_HelpTopic();
    protected virtual bool CanRemoveInstance(object value);
    protected virtual void CancelChanges();
    protected virtual bool CanSelectMultipleInstances();
    protected virtual CollectionForm CreateCollectionForm();
    protected virtual object CreateInstance(Type itemType);
    protected virtual IList GetObjectsFromInstance(object instance);
    protected virtual string GetDisplayText(object value);
    protected virtual Type CreateCollectionItemType();
    protected virtual Type[] CreateNewItemTypes();
    protected virtual void DestroyInstance(object instance);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    protected virtual Object[] GetItems(object editValue);
    protected object GetService(Type serviceType);
    internal virtual void OnItemRemoving(object item);
    protected virtual object SetItems(object editValue, Object[] value);
    protected virtual void ShowHelp();
}
public class System.ComponentModel.Design.ComponentDesigner : object {
    private protected static string SettingsKeyName;
    public DesignerActionListCollection ActionLists { get; }
    public ICollection AssociatedComponents { get; }
    protected bool Inherited { get; }
    protected IComponent ParentComponent { get; }
    protected InheritanceAttribute InheritanceAttribute { get; }
    protected ShadowPropertyCollection ShadowProperties { get; }
    public IComponent Component { get; }
    public DesignerVerbCollection Verbs { get; }
    private ICollection System.ComponentModel.Design.ITreeDesigner.Children { get; }
    private IDesigner System.ComponentModel.Design.ITreeDesigner.Parent { get; }
    internal bool IsRootDesigner { get; }
    public virtual DesignerActionListCollection get_ActionLists();
    public virtual ICollection get_AssociatedComponents();
    internal virtual bool CanBeAssociatedWith(IDesigner parentDesigner);
    protected bool get_Inherited();
    protected virtual IComponent get_ParentComponent();
    protected virtual InheritanceAttribute get_InheritanceAttribute();
    protected ShadowPropertyCollection get_ShadowProperties();
    public virtual void InitializeExistingComponent(IDictionary defaultValues);
    public virtual void InitializeNewComponent(IDictionary defaultValues);
    private sealed virtual override void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(IDictionary attributes);
    private sealed virtual override void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(IDictionary events);
    private sealed virtual override void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(IDictionary properties);
    private sealed virtual override void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(IDictionary attributes);
    private sealed virtual override void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(IDictionary events);
    private sealed virtual override void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(IDictionary properties);
    [CompilerGeneratedAttribute]
public sealed virtual IComponent get_Component();
    public virtual DesignerVerbCollection get_Verbs();
    private sealed virtual override ICollection System.ComponentModel.Design.ITreeDesigner.get_Children();
    private sealed virtual override IDesigner System.ComponentModel.Design.ITreeDesigner.get_Parent();
    public sealed virtual void Dispose();
    public virtual void DoDefaultAction();
    internal bool get_IsRootDesigner();
    public virtual void Initialize(IComponent component);
    protected InheritanceAttribute InvokeGetInheritanceAttribute(ComponentDesigner toInvoke);
    protected virtual void Dispose(bool disposing);
    [ObsoleteAttribute("This method has been deprecated. Use InitializeExistingComponent instead.  https://go.microsoft.com/fwlink/?linkid=14202")]
public virtual void InitializeNonDefault();
    protected virtual object GetService(Type serviceType);
    internal T GetService();
    internal bool TryGetService(T& service);
    [ObsoleteAttribute("This method has been deprecated. Use InitializeNewComponent instead.  https://go.microsoft.com/fwlink/?linkid=14202")]
public virtual void OnSetComponentDefaults();
    internal virtual void ShowContextMenu(int x, int y);
    protected virtual void PostFilterAttributes(IDictionary attributes);
    protected virtual void PostFilterEvents(IDictionary events);
    protected virtual void PostFilterProperties(IDictionary properties);
    protected virtual void PreFilterAttributes(IDictionary attributes);
    protected virtual void PreFilterEvents(IDictionary events);
    protected virtual void PreFilterProperties(IDictionary properties);
    protected void RaiseComponentChanged(MemberDescriptor member, object oldValue, object newValue);
    protected void RaiseComponentChanging(MemberDescriptor member);
}
public class System.ComponentModel.Design.DateTimeEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.DesignerActionHeaderItem : DesignerActionTextItem {
    public DesignerActionHeaderItem(string displayName);
    public DesignerActionHeaderItem(string displayName, string category);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class System.ComponentModel.Design.DesignerActionItem : object {
    public bool AllowAssociate { get; public set; }
    public string Category { get; }
    public string Description { get; }
    public string DisplayName { get; }
    [NullableAttribute("1")]
public IDictionary Properties { get; }
    public bool ShowInSourceView { get; public set; }
    public DesignerActionItem(string displayName, string category, string description);
    [CompilerGeneratedAttribute]
public bool get_AllowAssociate();
    [CompilerGeneratedAttribute]
public void set_AllowAssociate(bool value);
    [CompilerGeneratedAttribute]
public virtual string get_Category();
    [CompilerGeneratedAttribute]
public virtual string get_Description();
    [CompilerGeneratedAttribute]
public virtual string get_DisplayName();
    [NullableContextAttribute("1")]
public IDictionary get_Properties();
    [CompilerGeneratedAttribute]
public bool get_ShowInSourceView();
    [CompilerGeneratedAttribute]
public void set_ShowInSourceView(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class System.ComponentModel.Design.DesignerActionItemCollection : CollectionBase {
    public DesignerActionItem Item { get; public set; }
    public DesignerActionItem get_Item(int index);
    public void set_Item(int index, DesignerActionItem value);
    public int Add(DesignerActionItem value);
    public bool Contains(DesignerActionItem value);
    public void CopyTo(DesignerActionItem[] array, int index);
    public int IndexOf(DesignerActionItem value);
    public void Insert(int index, DesignerActionItem value);
    public void Remove(DesignerActionItem value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.DesignerActionList : object {
    public bool AutoShow { get; public set; }
    [NullableAttribute("2")]
public IComponent Component { get; }
    [NullableContextAttribute("2")]
public DesignerActionList(IComponent component);
    [CompilerGeneratedAttribute]
public virtual bool get_AutoShow();
    [CompilerGeneratedAttribute]
public virtual void set_AutoShow(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IComponent get_Component();
    public object GetService(Type serviceType);
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class System.ComponentModel.Design.DesignerActionListCollection : CollectionBase {
    public DesignerActionList Item { get; public set; }
    public DesignerActionListCollection(DesignerActionList[] value);
    public DesignerActionList get_Item(int index);
    public void set_Item(int index, DesignerActionList value);
    public int Add(DesignerActionList value);
    public void AddRange(DesignerActionList[] value);
    [NullableContextAttribute("1")]
public void AddRange(DesignerActionListCollection value);
    public void Insert(int index, DesignerActionList value);
    public int IndexOf(DesignerActionList value);
    public bool Contains(DesignerActionList value);
    public void Remove(DesignerActionList value);
    public void CopyTo(DesignerActionList[] array, int index);
    [NullableContextAttribute("1")]
protected virtual void OnValidate(object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.DesignerActionListsChangedEventArgs : EventArgs {
    public object RelatedObject { get; }
    public DesignerActionListsChangedType ChangeType { get; }
    public DesignerActionListCollection ActionLists { get; }
    public DesignerActionListsChangedEventArgs(object relatedObject, DesignerActionListsChangedType changeType, DesignerActionListCollection actionLists);
    [CompilerGeneratedAttribute]
public object get_RelatedObject();
    [CompilerGeneratedAttribute]
public DesignerActionListsChangedType get_ChangeType();
    [CompilerGeneratedAttribute]
public DesignerActionListCollection get_ActionLists();
}
public class System.ComponentModel.Design.DesignerActionListsChangedEventHandler : MulticastDelegate {
    public DesignerActionListsChangedEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, DesignerActionListsChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, DesignerActionListsChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public enum System.ComponentModel.Design.DesignerActionListsChangedType : Enum {
    public int value__;
    public static DesignerActionListsChangedType ActionListsAdded;
    public static DesignerActionListsChangedType ActionListsRemoved;
}
public class System.ComponentModel.Design.DesignerActionMethodItem : DesignerActionItem {
    public string MemberName { get; }
    public IComponent RelatedComponent { get; public set; }
    public bool IncludeAsDesignerVerb { get; }
    public DesignerActionMethodItem(DesignerActionList actionList, string memberName, string displayName, string category, string description, bool includeAsDesignerVerb);
    public DesignerActionMethodItem(DesignerActionList actionList, string memberName, string displayName);
    public DesignerActionMethodItem(DesignerActionList actionList, string memberName, string displayName, bool includeAsDesignerVerb);
    public DesignerActionMethodItem(DesignerActionList actionList, string memberName, string displayName, string category);
    public DesignerActionMethodItem(DesignerActionList actionList, string memberName, string displayName, string category, bool includeAsDesignerVerb);
    public DesignerActionMethodItem(DesignerActionList actionList, string memberName, string displayName, string category, string description);
    [CompilerGeneratedAttribute]
public virtual string get_MemberName();
    [CompilerGeneratedAttribute]
public IComponent get_RelatedComponent();
    [CompilerGeneratedAttribute]
public void set_RelatedComponent(IComponent value);
    [CompilerGeneratedAttribute]
public virtual bool get_IncludeAsDesignerVerb();
    public virtual void Invoke();
    internal void Invoke(object sender, EventArgs args);
}
internal class System.ComponentModel.Design.DesignerActionPanel : ContainerControl {
    public Color ActiveLinkColor { get; }
    public Color BorderColor { get; }
    public CommandID[] FilteredCommandIDs { get; }
    public Color GradientDarkColor { get; }
    public Color GradientLightColor { get; }
    public bool InMethodInvoke { get; internal set; }
    public Color LinkColor { get; }
    public Color SeparatorColor { get; }
    public Color TitleBarColor { get; }
    public Color TitleBarTextColor { get; }
    public Color TitleBarUnselectedColor { get; }
    public Color LabelForeColor { get; }
    public DesignerActionPanel(IServiceProvider serviceProvider);
    public Color get_ActiveLinkColor();
    public Color get_BorderColor();
    public CommandID[] get_FilteredCommandIDs();
    public Color get_GradientDarkColor();
    public Color get_GradientLightColor();
    public bool get_InMethodInvoke();
    internal void set_InMethodInvoke(bool value);
    public Color get_LinkColor();
    public Color get_SeparatorColor();
    public Color get_TitleBarColor();
    public Color get_TitleBarTextColor();
    public Color get_TitleBarUnselectedColor();
    public Color get_LabelForeColor();
    public static Point ComputePreferredDesktopLocation(Rectangle rectangleAnchor, Size sizePanel, DockStyle& edgeToDock);
    protected virtual void Dispose(bool disposing);
    public virtual Size GetPreferredSize(Size proposedSize);
    protected virtual void OnFontChanged(EventArgs e);
    protected virtual void OnHandleCreated(EventArgs e);
    protected virtual void OnLayout(LayoutEventArgs levent);
    protected virtual void OnPaint(PaintEventArgs e);
    protected virtual void OnRightToLeftChanged(EventArgs e);
    protected virtual bool ProcessDialogKey(Keys keyData);
    protected virtual bool ProcessTabKey(bool forward);
    public void UpdateTasks(DesignerActionListCollection actionLists, DesignerActionListCollection serviceActionLists, string title, string subtitle);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.DesignerActionPropertyItem : DesignerActionItem {
    [NullableAttribute("1")]
public string MemberName { get; }
    public IComponent RelatedComponent { get; public set; }
    public DesignerActionPropertyItem(string memberName, string displayName, string category, string description);
    [NullableContextAttribute("1")]
public DesignerActionPropertyItem(string memberName, string displayName);
    public DesignerActionPropertyItem(string memberName, string displayName, string category);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_MemberName();
    [CompilerGeneratedAttribute]
public IComponent get_RelatedComponent();
    [CompilerGeneratedAttribute]
public void set_RelatedComponent(IComponent value);
}
public class System.ComponentModel.Design.DesignerActionService : object {
    public DesignerActionService(IServiceProvider serviceProvider);
    public void add_DesignerActionListsChanged(DesignerActionListsChangedEventHandler value);
    public void remove_DesignerActionListsChanged(DesignerActionListsChangedEventHandler value);
    public void Add(IComponent comp, DesignerActionListCollection designerActionListCollection);
    public void Add(IComponent comp, DesignerActionList actionList);
    public void Clear();
    public bool Contains(IComponent comp);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    public DesignerActionListCollection GetComponentActions(IComponent component);
    public virtual DesignerActionListCollection GetComponentActions(IComponent component, ComponentActionsType type);
    protected virtual void GetComponentDesignerActions(IComponent component, DesignerActionListCollection actionLists);
    protected virtual void GetComponentServiceActions(IComponent component, DesignerActionListCollection actionLists);
    public void Remove(IComponent comp);
    public void Remove(DesignerActionList actionList);
    public void Remove(IComponent comp, DesignerActionList actionList);
    internal void add_DesignerActionUIStateChange(DesignerActionUIStateChangeEventHandler value);
    internal void remove_DesignerActionUIStateChange(DesignerActionUIStateChangeEventHandler value);
}
public class System.ComponentModel.Design.DesignerActionTextItem : DesignerActionItem {
    [NullableContextAttribute("2")]
public DesignerActionTextItem(string displayName, string category);
}
internal class System.ComponentModel.Design.DesignerActionUI : object {
    internal DesignerActionToolStripDropDown designerActionHost;
    internal static TraceSwitch DropDownVisibilityDebug;
    internal bool IsDesignerActionPanelVisible { get; }
    internal IComponent LastPanelComponent { get; }
    public DesignerActionUI(IServiceProvider serviceProvider, Adorner containerAdorner);
    public sealed virtual void Dispose();
    public DesignerActionGlyph GetDesignerActionGlyph(IComponent comp);
    internal DesignerActionGlyph GetDesignerActionGlyph(IComponent comp, DesignerActionListCollection dalColl);
    internal bool ShowDesignerActionPanelForPrimarySelection();
    internal void RemoveActionGlyph(object relatedObject);
    internal void HideDesignerActionPanel();
    internal bool get_IsDesignerActionPanelVisible();
    internal IComponent get_LastPanelComponent();
    internal Point UpdateDAPLocation(IComponent component, DesignerActionGlyph glyph);
    internal void ShowDesignerActionPanel(IComponent relatedComponent, DesignerActionPanel panel, DesignerActionGlyph glyph);
}
public class System.ComponentModel.Design.DesignerActionUIService : object {
    internal DesignerActionUIService(IServiceProvider serviceProvider);
    public sealed virtual void Dispose();
    public void add_DesignerActionUIStateChange(DesignerActionUIStateChangeEventHandler value);
    public void remove_DesignerActionUIStateChange(DesignerActionUIStateChangeEventHandler value);
    public void HideUI(IComponent component);
    public void ShowUI(IComponent component);
    public void Refresh(IComponent component);
    public bool ShouldAutoShow(IComponent component);
}
public class System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs : EventArgs {
    public object RelatedObject { get; }
    public DesignerActionUIStateChangeType ChangeType { get; }
    public DesignerActionUIStateChangeEventArgs(object relatedObject, DesignerActionUIStateChangeType changeType);
    [CompilerGeneratedAttribute]
public object get_RelatedObject();
    [CompilerGeneratedAttribute]
public DesignerActionUIStateChangeType get_ChangeType();
}
public class System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler : MulticastDelegate {
    public DesignerActionUIStateChangeEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, DesignerActionUIStateChangeEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, DesignerActionUIStateChangeEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public enum System.ComponentModel.Design.DesignerActionUIStateChangeType : Enum {
    public int value__;
    public static DesignerActionUIStateChangeType Show;
    public static DesignerActionUIStateChangeType Hide;
    public static DesignerActionUIStateChangeType Refresh;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.DesignerActionVerbItem : DesignerActionMethodItem {
    public string Category { get; }
    public string DisplayName { get; }
    public DesignerActionVerbItem(DesignerVerb verb);
    public virtual string get_Category();
    public virtual string get_DisplayName();
    public virtual void Invoke();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.DesignerActionVerbList : DesignerActionList {
    public bool AutoShow { get; }
    public DesignerActionVerbList(DesignerVerb[] verbs);
    public virtual bool get_AutoShow();
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.DesignerCommandSet : object {
    [NullableAttribute("1")]
private protected static string VerbsCommand;
    [NullableAttribute("1")]
private protected static string ActionListsCommand;
    public DesignerVerbCollection Verbs { get; }
    public DesignerActionListCollection ActionLists { get; }
    [NullableContextAttribute("1")]
public virtual ICollection GetCommands(string name);
    public DesignerVerbCollection get_Verbs();
    public DesignerActionListCollection get_ActionLists();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.DesignerEventService : object {
    private IDesignerHost System.ComponentModel.Design.IDesignerEventService.ActiveDesigner { get; }
    [NullableAttribute("1")]
[MemberNotNullAttribute("_designerList")]
[MemberNotNullAttribute("_designerCollection")]
private DesignerCollection System.ComponentModel.Design.IDesignerEventService.Designers { get; }
    internal void OnActivateDesigner(DesignSurface surface);
    [NullableContextAttribute("1")]
[MemberNotNullAttribute("_designerList")]
internal void OnCreateDesigner(DesignSurface surface);
    private sealed virtual override IDesignerHost System.ComponentModel.Design.IDesignerEventService.get_ActiveDesigner();
    [NullableContextAttribute("1")]
[MemberNotNullAttribute("_designerList")]
[MemberNotNullAttribute("_designerCollection")]
private sealed virtual override DesignerCollection System.ComponentModel.Design.IDesignerEventService.get_Designers();
    [MemberNotNullAttribute("_events")]
private sealed virtual override void System.ComponentModel.Design.IDesignerEventService.add_ActiveDesignerChanged(ActiveDesignerEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerEventService.remove_ActiveDesignerChanged(ActiveDesignerEventHandler value);
    [MemberNotNullAttribute("_events")]
private sealed virtual override void System.ComponentModel.Design.IDesignerEventService.add_DesignerCreated(DesignerEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerEventService.remove_DesignerCreated(DesignerEventHandler value);
    [MemberNotNullAttribute("_events")]
private sealed virtual override void System.ComponentModel.Design.IDesignerEventService.add_DesignerDisposed(DesignerEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerEventService.remove_DesignerDisposed(DesignerEventHandler value);
    [MemberNotNullAttribute("_events")]
private sealed virtual override void System.ComponentModel.Design.IDesignerEventService.add_SelectionChanged(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerEventService.remove_SelectionChanged(EventHandler value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.DesignerHost : Container {
    [MemberNotNullAttribute("_licenseCtx")]
internal HostDesigntimeLicenseContext LicenseContext { get; }
    internal bool IsClosingTransaction { get; internal set; }
    private bool System.ComponentModel.Design.IDesignerHostTransactionState.IsClosingTransaction { get; }
    private bool System.ComponentModel.Design.IDesignerHost.Loading { get; }
    private bool System.ComponentModel.Design.IDesignerHost.InTransaction { get; }
    private IContainer System.ComponentModel.Design.IDesignerHost.Container { get; }
    private IComponent System.ComponentModel.Design.IDesignerHost.RootComponent { get; }
    private string System.ComponentModel.Design.IDesignerHost.RootComponentClassName { get; }
    private string System.ComponentModel.Design.IDesignerHost.TransactionDescription { get; }
    private bool System.ComponentModel.Design.Serialization.IDesignerLoaderHost2.IgnoreErrorsDuringReload { get; private set; }
    private bool System.ComponentModel.Design.Serialization.IDesignerLoaderHost2.CanReloadWithErrors { get; private set; }
    private Type System.Reflection.IReflect.UnderlyingSystemType { get; }
    public DesignerHost(DesignSurface surface);
    [MemberNotNullAttribute("_licenseCtx")]
internal HostDesigntimeLicenseContext get_LicenseContext();
    internal bool get_IsClosingTransaction();
    internal void set_IsClosingTransaction(bool value);
    private sealed virtual override bool System.ComponentModel.Design.IDesignerHostTransactionState.get_IsClosingTransaction();
    [NullableContextAttribute("2")]
public virtual void Add(IComponent component, string name);
    internal bool AddToContainerPreProcess(IComponent component, string name, IContainer containerToAddTo);
    internal void AddToContainerPostProcess(IComponent component, IContainer containerToAddTo);
    internal void BeginLoad(DesignerLoader loader);
    protected virtual ISite CreateSite(IComponent component, string name);
    protected virtual void Dispose(bool disposing);
    internal void DisposeHost();
    internal void Flush();
    protected virtual object GetService(Type service);
    [NullableContextAttribute("2")]
public virtual void Remove(IComponent component);
    internal bool RemoveFromContainerPreProcess(IComponent component, IContainer container);
    internal void RemoveFromContainerPostProcess(IComponent component, IContainer container);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.add_ComponentAdded(ComponentEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.remove_ComponentAdded(ComponentEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.add_ComponentAdding(ComponentEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.remove_ComponentAdding(ComponentEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.add_ComponentChanged(ComponentChangedEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.remove_ComponentChanged(ComponentChangedEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.add_ComponentChanging(ComponentChangingEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.remove_ComponentChanging(ComponentChangingEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.add_ComponentRemoved(ComponentEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.remove_ComponentRemoved(ComponentEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.add_ComponentRemoving(ComponentEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.remove_ComponentRemoving(ComponentEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.add_ComponentRename(ComponentRenameEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.remove_ComponentRename(ComponentRenameEventHandler value);
    [NullableContextAttribute("2")]
private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(object component, MemberDescriptor member, object oldValue, object newValue);
    private sealed virtual override void System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(object component, MemberDescriptor member);
    private sealed virtual override bool System.ComponentModel.Design.IDesignerHost.get_Loading();
    private sealed virtual override bool System.ComponentModel.Design.IDesignerHost.get_InTransaction();
    private sealed virtual override IContainer System.ComponentModel.Design.IDesignerHost.get_Container();
    private sealed virtual override IComponent System.ComponentModel.Design.IDesignerHost.get_RootComponent();
    private sealed virtual override string System.ComponentModel.Design.IDesignerHost.get_RootComponentClassName();
    private sealed virtual override string System.ComponentModel.Design.IDesignerHost.get_TransactionDescription();
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.add_Activated(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.remove_Activated(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.add_Deactivated(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.remove_Deactivated(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.add_LoadComplete(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.remove_LoadComplete(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.add_TransactionClosed(DesignerTransactionCloseEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.remove_TransactionClosed(DesignerTransactionCloseEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.add_TransactionClosing(DesignerTransactionCloseEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.remove_TransactionClosing(DesignerTransactionCloseEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.add_TransactionOpened(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.remove_TransactionOpened(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.add_TransactionOpening(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.remove_TransactionOpening(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.Activate();
    private sealed virtual override IComponent System.ComponentModel.Design.IDesignerHost.CreateComponent(Type componentType);
    private sealed virtual override IComponent System.ComponentModel.Design.IDesignerHost.CreateComponent(Type componentType, string name);
    private sealed virtual override DesignerTransaction System.ComponentModel.Design.IDesignerHost.CreateTransaction();
    private sealed virtual override DesignerTransaction System.ComponentModel.Design.IDesignerHost.CreateTransaction(string description);
    private sealed virtual override void System.ComponentModel.Design.IDesignerHost.DestroyComponent(IComponent component);
    private sealed virtual override IDesigner System.ComponentModel.Design.IDesignerHost.GetDesigner(IComponent component);
    private sealed virtual override Type System.ComponentModel.Design.IDesignerHost.GetType(string typeName);
    [NullableContextAttribute("2")]
private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad(string rootClassName, bool successful, ICollection errorCollection);
    private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerLoaderHost.Reload();
    private sealed virtual override bool System.ComponentModel.Design.Serialization.IDesignerLoaderHost2.get_IgnoreErrorsDuringReload();
    private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerLoaderHost2.set_IgnoreErrorsDuringReload(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override bool System.ComponentModel.Design.Serialization.IDesignerLoaderHost2.get_CanReloadWithErrors();
    [CompilerGeneratedAttribute]
private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerLoaderHost2.set_CanReloadWithErrors(bool value);
    [NullableContextAttribute("2")]
private sealed virtual override MethodInfo System.Reflection.IReflect.GetMethod(string name, BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers);
    private sealed virtual override MethodInfo System.Reflection.IReflect.GetMethod(string name, BindingFlags bindingAttr);
    private sealed virtual override MethodInfo[] System.Reflection.IReflect.GetMethods(BindingFlags bindingAttr);
    private sealed virtual override FieldInfo System.Reflection.IReflect.GetField(string name, BindingFlags bindingAttr);
    private sealed virtual override FieldInfo[] System.Reflection.IReflect.GetFields(BindingFlags bindingAttr);
    private sealed virtual override PropertyInfo System.Reflection.IReflect.GetProperty(string name, BindingFlags bindingAttr);
    [NullableContextAttribute("2")]
private sealed virtual override PropertyInfo System.Reflection.IReflect.GetProperty(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers);
    private sealed virtual override PropertyInfo[] System.Reflection.IReflect.GetProperties(BindingFlags bindingAttr);
    private sealed virtual override MemberInfo[] System.Reflection.IReflect.GetMember(string name, BindingFlags bindingAttr);
    private sealed virtual override MemberInfo[] System.Reflection.IReflect.GetMembers(BindingFlags bindingAttr);
    [NullableContextAttribute("2")]
private sealed virtual override object System.Reflection.IReflect.InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters);
    private sealed virtual override Type System.Reflection.IReflect.get_UnderlyingSystemType();
    private sealed virtual override void System.ComponentModel.Design.IServiceContainer.AddService(Type serviceType, object serviceInstance);
    private sealed virtual override void System.ComponentModel.Design.IServiceContainer.AddService(Type serviceType, object serviceInstance, bool promote);
    private sealed virtual override void System.ComponentModel.Design.IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback);
    private sealed virtual override void System.ComponentModel.Design.IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback, bool promote);
    private sealed virtual override void System.ComponentModel.Design.IServiceContainer.RemoveService(Type serviceType);
    private sealed virtual override void System.ComponentModel.Design.IServiceContainer.RemoveService(Type serviceType, bool promote);
    private sealed virtual override object System.IServiceProvider.GetService(Type serviceType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.DesignSurface : object {
    public IContainer ComponentContainer { get; }
    public bool IsLoaded { get; }
    public ICollection LoadErrors { get; }
    public bool DtelLoading { get; public set; }
    protected ServiceContainer ServiceContainer { get; }
    public object View { get; }
    [NullableContextAttribute("2")]
public DesignSurface(IServiceProvider parentProvider);
    public DesignSurface(Type rootComponentType);
    public DesignSurface(IServiceProvider parentProvider, Type rootComponentType);
    public IContainer get_ComponentContainer();
    [CompilerGeneratedAttribute]
public bool get_IsLoaded();
    public ICollection get_LoadErrors();
    [CompilerGeneratedAttribute]
public bool get_DtelLoading();
    [CompilerGeneratedAttribute]
public void set_DtelLoading(bool value);
    protected ServiceContainer get_ServiceContainer();
    public object get_View();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void add_Disposed(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void remove_Disposed(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void add_Flushed(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void remove_Flushed(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void add_Loaded(LoadedEventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void remove_Loaded(LoadedEventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void add_Loading(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void remove_Loading(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void add_Unloaded(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void remove_Unloaded(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void add_Unloading(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void remove_Unloading(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void add_ViewActivated(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void remove_ViewActivated(EventHandler value);
    public void BeginLoad(DesignerLoader loader);
    public void BeginLoad(Type rootComponentType);
    [ObsoleteAttribute("CreateComponent has been replaced by CreateInstance and will be removed after Beta2")]
protected internal virtual IComponent CreateComponent(Type componentType);
    protected internal virtual IDesigner CreateDesigner(IComponent component, bool rootDesigner);
    protected internal virtual object CreateInstance(Type type);
    public INestedContainer CreateNestedContainer(IComponent owningComponent);
    public INestedContainer CreateNestedContainer(IComponent owningComponent, string containerName);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    public void Flush();
    public sealed virtual object GetService(Type serviceType);
    internal void OnViewActivate();
    [NullableContextAttribute("2")]
internal void OnLoaded(bool successful, ICollection errors);
    protected virtual void OnLoaded(LoadedEventArgs e);
    internal void OnLoading();
    protected virtual void OnLoading(EventArgs e);
    internal void OnUnloaded();
    protected virtual void OnUnloaded(EventArgs e);
    internal void OnUnloading();
    protected virtual void OnUnloading(EventArgs e);
    protected virtual void OnViewActivate(EventArgs e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class System.ComponentModel.Design.DesignSurfaceCollection : object {
    public int Count { get; }
    public DesignSurface Item { get; }
    private int System.Collections.ICollection.Count { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    [NullableContextAttribute("2")]
internal DesignSurfaceCollection(DesignerCollection designers);
    public int get_Count();
    public DesignSurface get_Item(int index);
    public IEnumerator GetEnumerator();
    private sealed virtual override int System.Collections.ICollection.get_Count();
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    public void CopyTo(DesignSurface[] array, int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.DesignSurfaceEventArgs : EventArgs {
    public DesignSurface Surface { get; }
    public DesignSurfaceEventArgs(DesignSurface surface);
    [CompilerGeneratedAttribute]
public DesignSurface get_Surface();
}
public class System.ComponentModel.Design.DesignSurfaceEventHandler : MulticastDelegate {
    public DesignSurfaceEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, DesignSurfaceEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, DesignSurfaceEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.DesignSurfaceManager : object {
    public DesignSurface ActiveDesignSurface { get; public set; }
    [NullableAttribute("1")]
public DesignSurfaceCollection DesignSurfaces { get; }
    [NullableAttribute("1")]
protected ServiceContainer ServiceContainer { get; }
    public DesignSurfaceManager(IServiceProvider parentProvider);
    public virtual DesignSurface get_ActiveDesignSurface();
    public virtual void set_ActiveDesignSurface(DesignSurface value);
    [NullableContextAttribute("1")]
public DesignSurfaceCollection get_DesignSurfaces();
    [NullableContextAttribute("1")]
protected ServiceContainer get_ServiceContainer();
    public void add_ActiveDesignSurfaceChanged(ActiveDesignSurfaceChangedEventHandler value);
    public void remove_ActiveDesignSurfaceChanged(ActiveDesignSurfaceChangedEventHandler value);
    public void add_DesignSurfaceCreated(DesignSurfaceEventHandler value);
    public void remove_DesignSurfaceCreated(DesignSurfaceEventHandler value);
    public void add_DesignSurfaceDisposed(DesignSurfaceEventHandler value);
    public void remove_DesignSurfaceDisposed(DesignSurfaceEventHandler value);
    public void add_SelectionChanged(EventHandler value);
    public void remove_SelectionChanged(EventHandler value);
    [NullableContextAttribute("1")]
public DesignSurface CreateDesignSurface();
    [NullableContextAttribute("1")]
public DesignSurface CreateDesignSurface(IServiceProvider parentProvider);
    [NullableContextAttribute("1")]
protected virtual DesignSurface CreateDesignSurfaceCore(IServiceProvider parentProvider);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
public sealed virtual object GetService(Type serviceType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.DesignSurfaceServiceContainer : ServiceContainer {
    [NullableContextAttribute("2")]
internal DesignSurfaceServiceContainer(IServiceProvider parentProvider);
    internal void AddFixedService(Type serviceType, object serviceInstance);
    internal void RemoveFixedService(Type serviceType);
    public virtual void RemoveService(Type serviceType, bool promote);
}
public enum System.ComponentModel.Design.DisplayMode : Enum {
    public int value__;
    public static DisplayMode Hexdump;
    public static DisplayMode Ansi;
    public static DisplayMode Unicode;
    public static DisplayMode Auto;
}
public abstract class System.ComponentModel.Design.EventBindingService : object {
    protected EventBindingService(IServiceProvider provider);
    protected abstract virtual string CreateUniqueMethodName(IComponent component, EventDescriptor e);
    protected virtual void FreeMethod(IComponent component, EventDescriptor e, string methodName);
    protected abstract virtual ICollection GetCompatibleMethods(EventDescriptor e);
    protected object GetService(Type serviceType);
    protected abstract virtual bool ShowCode();
    protected abstract virtual bool ShowCode(int lineNumber);
    protected abstract virtual bool ShowCode(IComponent component, EventDescriptor e, string methodName);
    protected virtual void UseMethod(IComponent component, EventDescriptor e, string methodName);
    protected virtual void ValidateMethodName(string methodName);
    private sealed virtual override string System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(IComponent component, EventDescriptor e);
    private sealed virtual override ICollection System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(EventDescriptor e);
    private sealed virtual override EventDescriptor System.ComponentModel.Design.IEventBindingService.GetEvent(PropertyDescriptor property);
    private sealed virtual override PropertyDescriptorCollection System.ComponentModel.Design.IEventBindingService.GetEventProperties(EventDescriptorCollection events);
    private sealed virtual override PropertyDescriptor System.ComponentModel.Design.IEventBindingService.GetEventProperty(EventDescriptor e);
    private sealed virtual override bool System.ComponentModel.Design.IEventBindingService.ShowCode();
    private sealed virtual override bool System.ComponentModel.Design.IEventBindingService.ShowCode(int lineNumber);
    private sealed virtual override bool System.ComponentModel.Design.IEventBindingService.ShowCode(IComponent component, EventDescriptor e);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.ExceptionCollection : Exception {
    public ArrayList Exceptions { get; }
    public ExceptionCollection(ArrayList exceptions);
    internal ExceptionCollection(List`1<Exception> exceptions);
    public ArrayList get_Exceptions();
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
internal class System.ComponentModel.Design.ExtenderProviderService : object {
    [NullableContextAttribute("1")]
private sealed virtual override IExtenderProvider[] System.ComponentModel.Design.IExtenderListService.GetExtenderProviders();
    [NullableContextAttribute("1")]
private sealed virtual override void System.ComponentModel.Design.IExtenderProviderService.AddExtenderProvider(IExtenderProvider provider);
    [NullableContextAttribute("1")]
private sealed virtual override void System.ComponentModel.Design.IExtenderProviderService.RemoveExtenderProvider(IExtenderProvider provider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.HostDesigntimeLicenseContext : DesigntimeLicenseContext {
    public HostDesigntimeLicenseContext(IServiceProvider provider);
    public virtual object GetService(Type serviceClass);
}
[NullableContextAttribute("1")]
public interface System.ComponentModel.Design.IMultitargetHelperService {
    public abstract virtual string GetAssemblyQualifiedName(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.InheritanceService : object {
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void AddInheritedComponents(IComponent component, IContainer container);
    protected virtual void AddInheritedComponents(Type type, IComponent component, IContainer container);
    protected virtual bool IgnoreInheritedMember(MemberInfo member, IComponent component);
    public sealed virtual InheritanceAttribute GetInheritanceAttribute(IComponent component);
}
internal class System.ComponentModel.Design.InheritedPropertyDescriptor : PropertyDescriptor {
    public Type ComponentType { get; }
    public bool IsReadOnly { get; }
    internal object OriginalValue { get; }
    internal PropertyDescriptor PropertyDescriptor { get; internal set; }
    public Type PropertyType { get; }
    public InheritedPropertyDescriptor(PropertyDescriptor propertyDescriptor, object component);
    public virtual Type get_ComponentType();
    public virtual bool get_IsReadOnly();
    internal object get_OriginalValue();
    internal PropertyDescriptor get_PropertyDescriptor();
    internal void set_PropertyDescriptor(PropertyDescriptor value);
    public virtual Type get_PropertyType();
    public virtual bool CanResetValue(object component);
    protected virtual void FillAttributes(IList attributeList);
    public virtual object GetValue(object component);
    public virtual void ResetValue(object component);
    public virtual void SetValue(object component, object value);
    public virtual bool ShouldSerializeValue(object component);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.LoadedEventArgs : EventArgs {
    public bool HasSucceeded { get; }
    public ICollection Errors { get; }
    [NullableContextAttribute("2")]
public LoadedEventArgs(bool succeeded, ICollection errors);
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [CompilerGeneratedAttribute]
public ICollection get_Errors();
}
public class System.ComponentModel.Design.LoadedEventHandler : MulticastDelegate {
    public LoadedEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, LoadedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, LoadedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.MenuCommandsChangedEventArgs : EventArgs {
    public MenuCommandsChangedType ChangeType { get; }
    public MenuCommand Command { get; }
    public MenuCommandsChangedEventArgs(MenuCommandsChangedType changeType, MenuCommand command);
    [CompilerGeneratedAttribute]
public MenuCommandsChangedType get_ChangeType();
    [CompilerGeneratedAttribute]
public MenuCommand get_Command();
}
public class System.ComponentModel.Design.MenuCommandsChangedEventHandler : MulticastDelegate {
    public MenuCommandsChangedEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, MenuCommandsChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, MenuCommandsChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public enum System.ComponentModel.Design.MenuCommandsChangedType : Enum {
    public int value__;
    public static MenuCommandsChangedType CommandAdded;
    public static MenuCommandsChangedType CommandRemoved;
    public static MenuCommandsChangedType CommandChanged;
}
public class System.ComponentModel.Design.MenuCommandService : object {
    internal static TraceSwitch MENUSERVICE;
    public DesignerVerbCollection Verbs { get; }
    public MenuCommandService(IServiceProvider serviceProvider);
    public void add_MenuCommandsChanged(MenuCommandsChangedEventHandler value);
    public void remove_MenuCommandsChanged(MenuCommandsChangedEventHandler value);
    public virtual DesignerVerbCollection get_Verbs();
    public virtual void AddCommand(MenuCommand command);
    public virtual void AddVerb(DesignerVerb verb);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    protected void EnsureVerbs();
    public sealed virtual MenuCommand FindCommand(CommandID commandID);
    protected MenuCommand FindCommand(Guid guid, int id);
    protected ICollection GetCommandList(Guid guid);
    protected object GetService(Type serviceType);
    public virtual bool GlobalInvoke(CommandID commandID);
    public virtual bool GlobalInvoke(CommandID commandId, object arg);
    protected virtual void OnCommandsChanged(MenuCommandsChangedEventArgs e);
    public virtual void RemoveCommand(MenuCommand command);
    public virtual void RemoveVerb(DesignerVerb verb);
    public virtual void ShowContextMenu(CommandID menuID, int x, int y);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.MultilineStringEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class System.ComponentModel.Design.ObjectSelectorEditor : UITypeEditor {
    public bool SubObjectSelector;
    protected object prevValue;
    protected object currValue;
    public ObjectSelectorEditor(bool subObjectSelector);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    [NullableContextAttribute("1")]
public static void ApplyTreeViewThemeStyles(TreeView treeView);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    protected internal bool EqualsToValue(object value);
    [NullableContextAttribute("1")]
protected virtual void FillTreeWithData(Selector selector, ITypeDescriptorContext context, IServiceProvider provider);
    public virtual void SetValue(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1036")]
public class System.ComponentModel.Design.ProjectTargetFrameworkAttribute : Attribute {
    public string TargetFrameworkMoniker { get; }
    public ProjectTargetFrameworkAttribute(string targetFrameworkMoniker);
    [CompilerGeneratedAttribute]
public string get_TargetFrameworkMoniker();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.ReferenceService : object {
    internal ReferenceService(IServiceProvider provider);
    private sealed virtual override void System.IDisposable.Dispose();
    private sealed virtual override IComponent System.ComponentModel.Design.IReferenceService.GetComponent(object reference);
    private sealed virtual override string System.ComponentModel.Design.IReferenceService.GetName(object reference);
    private sealed virtual override object System.ComponentModel.Design.IReferenceService.GetReference(string name);
    private sealed virtual override Object[] System.ComponentModel.Design.IReferenceService.GetReferences();
    private sealed virtual override Object[] System.ComponentModel.Design.IReferenceService.GetReferences(Type baseType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.SelectionService : object {
    [NullableAttribute("2")]
internal IComponent PrimarySelection { get; }
    [NullableAttribute("2")]
private object System.ComponentModel.Design.ISelectionService.PrimarySelection { get; }
    private int System.ComponentModel.Design.ISelectionService.SelectionCount { get; }
    internal SelectionService(IServiceProvider provider);
    internal void AddSelection(IComponent selection);
    [NullableContextAttribute("2")]
internal IComponent get_PrimarySelection();
    internal void RemoveSelection(IComponent selection);
    private sealed virtual override void System.IDisposable.Dispose();
    [NullableContextAttribute("2")]
private sealed virtual override object System.ComponentModel.Design.ISelectionService.get_PrimarySelection();
    private sealed virtual override int System.ComponentModel.Design.ISelectionService.get_SelectionCount();
    private sealed virtual override void System.ComponentModel.Design.ISelectionService.add_SelectionChanged(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.ISelectionService.remove_SelectionChanged(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.ISelectionService.add_SelectionChanging(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.ISelectionService.remove_SelectionChanging(EventHandler value);
    private sealed virtual override bool System.ComponentModel.Design.ISelectionService.GetComponentSelected(object component);
    private sealed virtual override ICollection System.ComponentModel.Design.ISelectionService.GetSelectedComponents();
    [NullableContextAttribute("2")]
private sealed virtual override void System.ComponentModel.Design.ISelectionService.SetSelectedComponents(ICollection components);
    [NullableContextAttribute("2")]
private sealed virtual override void System.ComponentModel.Design.ISelectionService.SetSelectedComponents(ICollection components, SelectionTypes selectionType);
}
public abstract class System.ComponentModel.Design.Serialization.BasicDesignerLoader : DesignerLoader {
    protected bool Modified { get; protected set; }
    protected IDesignerLoaderHost LoaderHost { get; }
    public bool Loading { get; }
    protected object PropertyProvider { get; protected set; }
    protected bool ReloadPending { get; }
    protected virtual bool get_Modified();
    protected virtual void set_Modified(bool value);
    protected IDesignerLoaderHost get_LoaderHost();
    public virtual bool get_Loading();
    protected object get_PropertyProvider();
    protected void set_PropertyProvider(object value);
    protected bool get_ReloadPending();
    public virtual void BeginLoad(IDesignerLoaderHost host);
    public virtual void Dispose();
    public virtual void Flush();
    protected object GetService(Type serviceType);
    protected virtual void Initialize();
    protected virtual bool IsReloadNeeded();
    protected virtual void OnBeginLoad();
    protected virtual bool EnableComponentNotification(bool enable);
    protected virtual void OnBeginUnload();
    protected virtual void OnEndLoad(bool successful, ICollection errors);
    protected virtual void OnModifying();
    protected abstract virtual void PerformFlush(IDesignerSerializationManager serializationManager);
    protected abstract virtual void PerformLoad(IDesignerSerializationManager serializationManager);
    protected void Reload(ReloadOptions flags);
    protected virtual void ReportFlushErrors(ICollection errors);
    protected void SetBaseComponentClassName(string name);
    private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency();
    private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, ICollection errorCollection);
    private sealed virtual override bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload();
}
public class System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService : ComponentSerializationService {
    public CodeDomComponentSerializationService(IServiceProvider provider);
    public virtual SerializationStore CreateStore();
    public virtual SerializationStore LoadStore(Stream stream);
    public virtual void Serialize(SerializationStore store, object value);
    public virtual void SerializeAbsolute(SerializationStore store, object value);
    public virtual void SerializeMember(SerializationStore store, object owningObject, MemberDescriptor member);
    public virtual void SerializeMemberAbsolute(SerializationStore store, object owningObject, MemberDescriptor member);
    public virtual ICollection Deserialize(SerializationStore store);
    public virtual ICollection Deserialize(SerializationStore store, IContainer container);
    public virtual void DeserializeTo(SerializationStore store, IContainer container, bool validateRecycledTypes, bool applyDefaults);
}
public abstract class System.ComponentModel.Design.Serialization.CodeDomDesignerLoader : BasicDesignerLoader {
    protected CodeDomProvider CodeDomProvider { get; }
    protected ITypeResolutionService TypeResolutionService { get; }
    protected abstract virtual CodeDomProvider get_CodeDomProvider();
    protected abstract virtual ITypeResolutionService get_TypeResolutionService();
    public virtual void Dispose();
    protected virtual void Initialize();
    protected virtual bool IsReloadNeeded();
    protected virtual void OnBeginLoad();
    protected virtual void OnBeginUnload();
    protected virtual void OnEndLoad(bool successful, ICollection errors);
    protected abstract virtual CodeCompileUnit Parse();
    protected virtual void PerformFlush(IDesignerSerializationManager manager);
    protected virtual void PerformLoad(IDesignerSerializationManager manager);
    protected virtual void OnComponentRename(object component, string oldName, string newName);
    protected abstract virtual void Write(CodeCompileUnit unit);
    private sealed virtual override ICollection System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(object serializationData);
    private sealed virtual override object System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(ICollection objects);
    private sealed virtual override string System.ComponentModel.Design.Serialization.INameCreationService.CreateName(IContainer container, Type dataType);
    private sealed virtual override bool System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(string name);
    private sealed virtual override void System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(string name);
}
public enum System.ComponentModel.Design.Serialization.CodeDomLocalizationModel : Enum {
    public int value__;
    public static CodeDomLocalizationModel None;
    public static CodeDomLocalizationModel PropertyAssignment;
    public static CodeDomLocalizationModel PropertyReflection;
}
public class System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider : object {
    public CodeDomLocalizationProvider(IServiceProvider provider, CodeDomLocalizationModel model);
    public CodeDomLocalizationProvider(IServiceProvider provider, CodeDomLocalizationModel model, CultureInfo[] supportedCultures);
    public sealed virtual void Dispose();
    private sealed virtual override object System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(IDesignerSerializationManager manager, object currentSerializer, Type objectType, Type serializerType);
}
internal class System.ComponentModel.Design.Serialization.CodeDomSerializationProvider : object {
    private sealed virtual override object System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(IDesignerSerializationManager manager, object currentSerializer, Type objectType, Type serializerType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultSerializationProviderAttribute("System.ComponentModel.Design.Serialization.CodeDomSerializationProvider")]
public class System.ComponentModel.Design.Serialization.CodeDomSerializer : CodeDomSerializerBase {
    internal static CodeDomSerializer Default { get; }
    internal static CodeDomSerializer get_Default();
    [NullableContextAttribute("2")]
public virtual string GetTargetComponentName(CodeStatement statement, CodeExpression expression, Type targetType);
    public virtual object Deserialize(IDesignerSerializationManager manager, object codeObject);
    protected object DeserializeStatementToInstance(IDesignerSerializationManager manager, CodeStatement statement);
    public virtual object Serialize(IDesignerSerializationManager manager, object value);
    public virtual object SerializeAbsolute(IDesignerSerializationManager manager, object value);
    public virtual CodeStatementCollection SerializeMember(IDesignerSerializationManager manager, object owningObject, MemberDescriptor member);
    public virtual CodeStatementCollection SerializeMemberAbsolute(IDesignerSerializationManager manager, object owningObject, MemberDescriptor member);
    [ObsoleteAttribute("This method has been deprecated. Use SerializeToExpression or GetExpression instead.  https://go.microsoft.com/fwlink/?linkid=14202")]
protected CodeExpression SerializeToReferenceExpression(IDesignerSerializationManager manager, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EditorBrowsableAttribute("1")]
public abstract class System.ComponentModel.Design.Serialization.CodeDomSerializerBase : object {
    protected virtual object DeserializeInstance(IDesignerSerializationManager manager, Type type, Object[] parameters, string name, bool addToContainer);
    internal static string GetTypeNameFromCodeTypeReference(IDesignerSerializationManager manager, CodeTypeReference typeref);
    protected static TypeDescriptionProvider GetTargetFrameworkProvider(IServiceProvider provider, object instance);
    protected static Type GetReflectionTypeFromTypeHelper(IDesignerSerializationManager manager, Type type);
    [DoesNotReturnAttribute]
internal static void Error(IDesignerSerializationManager manager, string exceptionText, string helpLink);
    protected static Type GetReflectionTypeHelper(IDesignerSerializationManager manager, object instance);
    protected static PropertyDescriptorCollection GetPropertiesHelper(IDesignerSerializationManager manager, object instance, Attribute[] attributes);
    protected static EventDescriptorCollection GetEventsHelper(IDesignerSerializationManager manager, object instance, Attribute[] attributes);
    protected static AttributeCollection GetAttributesHelper(IDesignerSerializationManager manager, object instance);
    protected static AttributeCollection GetAttributesFromTypeHelper(IDesignerSerializationManager manager, Type type);
    protected void DeserializePropertiesFromResources(IDesignerSerializationManager manager, object value, Attribute[] filter);
    internal static IDisposable TraceScope(string name);
    [ConditionalAttribute("DEBUG")]
internal static void TraceIf(TraceLevel level, bool condition, string message);
    [ConditionalAttribute("DEBUG")]
internal static void TraceIf(TraceLevel level, bool condition, TraceIfInterpolatedStringHandler& message);
    [ConditionalAttribute("DEBUG")]
internal static void Trace(TraceLevel level, TraceInterpolatedStringHandler& message);
    protected void DeserializeStatement(IDesignerSerializationManager manager, CodeStatement statement);
    [NullableContextAttribute("2")]
protected object DeserializeExpression(IDesignerSerializationManager manager, string name, CodeExpression expression);
    [ConditionalAttribute("DEBUG")]
internal static void Trace(TraceLevel level, string message);
    protected CodeExpression GetExpression(IDesignerSerializationManager manager, object value);
    [NullableContextAttribute("2")]
protected CodeDomSerializer GetSerializer(IDesignerSerializationManager manager, object value);
    protected CodeDomSerializer GetSerializer(IDesignerSerializationManager manager, Type valueType);
    protected bool IsSerialized(IDesignerSerializationManager manager, object value);
    protected bool IsSerialized(IDesignerSerializationManager manager, object value, bool honorPreset);
    protected CodeExpression SerializeCreationExpression(IDesignerSerializationManager manager, object value, Boolean& isComplete);
    protected string GetUniqueName(IDesignerSerializationManager manager, object value);
    protected void SerializeEvent(IDesignerSerializationManager manager, CodeStatementCollection statements, object value, EventDescriptor descriptor);
    protected void SerializeEvents(IDesignerSerializationManager manager, CodeStatementCollection statements, object value, Attribute[] filter);
    protected void SerializeProperties(IDesignerSerializationManager manager, CodeStatementCollection statements, object value, Attribute[] filter);
    protected void SerializePropertiesToResources(IDesignerSerializationManager manager, CodeStatementCollection statements, object value, Attribute[] filter);
    protected void SerializeProperty(IDesignerSerializationManager manager, CodeStatementCollection statements, object value, PropertyDescriptor propertyToSerialize);
    protected void SerializeResource(IDesignerSerializationManager manager, string resourceName, object value);
    protected void SerializeResourceInvariant(IDesignerSerializationManager manager, string resourceName, object value);
    [NullableContextAttribute("2")]
protected CodeExpression SerializeToExpression(IDesignerSerializationManager manager, object value);
    [NullableContextAttribute("2")]
protected CodeExpression SerializeToResourceExpression(IDesignerSerializationManager manager, object value);
    [NullableContextAttribute("2")]
protected CodeExpression SerializeToResourceExpression(IDesignerSerializationManager manager, object value, bool ensureInvariant);
    protected void SetExpression(IDesignerSerializationManager manager, object value, CodeExpression expression);
    protected void SetExpression(IDesignerSerializationManager manager, object value, CodeExpression expression, bool isPreset);
    internal static void FillStatementTable(IDesignerSerializationManager manager, IDictionary table, CodeStatementCollection statements);
    internal static void FillStatementTable(IDesignerSerializationManager manager, IDictionary table, Dictionary`2<string, string> names, CodeStatementCollection statements, string className);
    internal static Type GetType(IDesignerSerializationManager manager, string name, Dictionary`2<string, string> names);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static object <ExecuteBinaryOperator>g__ExecuteBinaryOperator|30_0(T leftValue, T rightValue, CodeBinaryOperatorType op);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.Serialization.CodeDomSerializerException : SystemException {
    public CodeLinePragma LinePragma { get; }
    public CodeDomSerializerException(string message, CodeLinePragma linePragma);
    public CodeDomSerializerException(Exception ex, CodeLinePragma linePragma);
    [NullableContextAttribute("1")]
public CodeDomSerializerException(string message, IDesignerSerializationManager manager);
    [NullableContextAttribute("1")]
public CodeDomSerializerException(Exception ex, IDesignerSerializationManager manager);
    [CompilerGeneratedAttribute]
public CodeLinePragma get_LinePragma();
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.Serialization.CodeMethodMap : object {
    internal CodeStatementCollection BeginStatements { get; }
    internal CodeStatementCollection EndStatements { get; }
    internal CodeStatementCollection ContainerStatements { get; }
    internal CodeMemberMethod Method { get; }
    internal CodeStatementCollection Statements { get; }
    internal CodeStatementCollection LocalVariables { get; }
    internal CodeStatementCollection FieldAssignments { get; }
    internal CodeStatementCollection VariableAssignments { get; }
    internal CodeMethodMap(CodeMemberMethod method);
    internal CodeMethodMap(CodeStatementCollection targetStatements, CodeMemberMethod method);
    internal CodeStatementCollection get_BeginStatements();
    internal CodeStatementCollection get_EndStatements();
    internal CodeStatementCollection get_ContainerStatements();
    [CompilerGeneratedAttribute]
internal CodeMemberMethod get_Method();
    internal CodeStatementCollection get_Statements();
    internal CodeStatementCollection get_LocalVariables();
    internal CodeStatementCollection get_FieldAssignments();
    internal CodeStatementCollection get_VariableAssignments();
    internal void Add(CodeStatementCollection statements);
    internal void Combine();
}
public class System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer : CodeDomSerializer {
    internal static CollectionCodeDomSerializer Default { get; }
    internal static CollectionCodeDomSerializer get_Default();
    protected bool MethodSupportsSerialization(MethodInfo method);
    public virtual object Serialize(IDesignerSerializationManager manager, object value);
    protected virtual object SerializeCollection(IDesignerSerializationManager manager, CodeExpression targetExpression, Type targetType, ICollection originalCollection, ICollection valuesToSerialize);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class System.ComponentModel.Design.Serialization.ComponentCache : object {
    internal bool Enabled { get; }
    [NullableAttribute("2")]
internal Entry Item { get; internal set; }
    internal ComponentCache(IDesignerSerializationManager manager);
    [CompilerGeneratedAttribute]
internal bool get_Enabled();
    internal Entry get_Item(object component);
    internal void set_Item(object component, Entry value);
    internal Entry GetEntryAll(object component);
    internal bool ContainsLocalName(string name);
    public sealed virtual void Dispose();
    internal void RemoveEntry(object component);
}
internal class System.ComponentModel.Design.Serialization.ComponentCodeDomSerializer : CodeDomSerializer {
    internal static ComponentCodeDomSerializer Default { get; }
    internal static ComponentCodeDomSerializer get_Default();
    protected virtual object DeserializeInstance(IDesignerSerializationManager manager, Type type, Object[] parameters, string name, bool addToContainer);
    public virtual object Serialize(IDesignerSerializationManager manager, object value);
}
internal class System.ComponentModel.Design.Serialization.ComponentTypeCodeDomSerializer : TypeCodeDomSerializer {
    internal static ComponentTypeCodeDomSerializer Default { get; }
    internal static ComponentTypeCodeDomSerializer get_Default();
    protected virtual CodeMemberMethod GetInitializeMethod(IDesignerSerializationManager manager, CodeTypeDeclaration typeDecl, object value);
    protected virtual CodeMemberMethod[] GetInitializeMethods(IDesignerSerializationManager manager, CodeTypeDeclaration typeDecl);
}
internal class System.ComponentModel.Design.Serialization.ContainerCodeDomSerializer : CodeDomSerializer {
    internal static ContainerCodeDomSerializer Default { get; }
    internal static ContainerCodeDomSerializer get_Default();
    protected virtual object DeserializeInstance(IDesignerSerializationManager manager, Type type, Object[] parameters, string name, bool addToContainer);
    public virtual object Serialize(IDesignerSerializationManager manager, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.Serialization.DesignerSerializationManager : object {
    [NullableAttribute("2")]
public IContainer Container { get; public set; }
    public IList Errors { get; }
    public bool PreserveNames { get; public set; }
    [NullableAttribute("2")]
public object PropertyProvider { get; public set; }
    public bool RecycleInstances { get; public set; }
    public bool ValidateRecycledTypes { get; public set; }
    private ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }
    private PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }
    internal HashSet`1<IDesignerSerializationProvider> SerializationProviders { get; }
    [NullableContextAttribute("2")]
public DesignerSerializationManager(IServiceProvider provider);
    [NullableContextAttribute("2")]
public IContainer get_Container();
    [NullableContextAttribute("2")]
public void set_Container(IContainer value);
    public IList get_Errors();
    public bool get_PreserveNames();
    public void set_PreserveNames(bool value);
    [NullableContextAttribute("2")]
public object get_PropertyProvider();
    [NullableContextAttribute("2")]
public void set_PropertyProvider(object value);
    public bool get_RecycleInstances();
    public void set_RecycleInstances(bool value);
    public bool get_ValidateRecycledTypes();
    public void set_ValidateRecycledTypes(bool value);
    [NullableContextAttribute("2")]
public void add_SessionCreated(EventHandler value);
    [NullableContextAttribute("2")]
public void remove_SessionCreated(EventHandler value);
    [NullableContextAttribute("2")]
public void add_SessionDisposed(EventHandler value);
    [NullableContextAttribute("2")]
public void remove_SessionDisposed(EventHandler value);
    protected virtual object CreateInstance(Type type, ICollection arguments, string name, bool addToContainer);
    public IDisposable CreateSession();
    [NullableContextAttribute("2")]
public object GetSerializer(Type objectType, Type serializerType);
    protected virtual object GetService(Type serviceType);
    [NullableContextAttribute("2")]
protected virtual Type GetType(string typeName);
    [NullableContextAttribute("2")]
public Type GetRuntimeType(string typeName);
    protected virtual void OnResolveName(ResolveNameEventArgs e);
    protected virtual void OnSessionCreated(EventArgs e);
    protected virtual void OnSessionDisposed(EventArgs e);
    private sealed virtual override ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.get_Context();
    private sealed virtual override PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.get_Properties();
    private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.add_ResolveName(ResolveNameEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.remove_ResolveName(ResolveNameEventHandler value);
    private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.add_SerializationComplete(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.remove_SerializationComplete(EventHandler value);
    private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider provider);
    private sealed virtual override object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type type, ICollection arguments, string name, bool addToContainer);
    private sealed virtual override object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name);
    private sealed virtual override string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value);
    [NullableContextAttribute("2")]
private sealed virtual override object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type objectType, Type serializerType);
    private sealed virtual override Type System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(string typeName);
    private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider provider);
    private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(object errorInformation);
    internal HashSet`1<IDesignerSerializationProvider> get_SerializationProviders();
    private sealed virtual override void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name);
    private sealed virtual override object System.IServiceProvider.GetService(Type serviceType);
    [CompilerGeneratedAttribute]
internal static SerializationException <CreateInstance>g__GetSerializationException|48_0(<>c__DisplayClass48_0& );
}
internal class System.ComponentModel.Design.Serialization.EnumCodeDomSerializer : CodeDomSerializer {
    internal static EnumCodeDomSerializer Default { get; }
    internal static EnumCodeDomSerializer get_Default();
    public virtual object Serialize(IDesignerSerializationManager manager, object value);
}
internal class System.ComponentModel.Design.Serialization.EventMemberCodeDomSerializer : MemberCodeDomSerializer {
    internal static EventMemberCodeDomSerializer Default { get; }
    internal static EventMemberCodeDomSerializer get_Default();
    public virtual void Serialize(IDesignerSerializationManager manager, object value, MemberDescriptor descriptor, CodeStatementCollection statements);
    public virtual bool ShouldSerialize(IDesignerSerializationManager manager, object value, MemberDescriptor descriptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.Serialization.ExpressionContext : object {
    public CodeExpression Expression { get; }
    public Type ExpressionType { get; }
    public object Owner { get; }
    [NullableAttribute("2")]
public object PresetValue { get; }
    public ExpressionContext(CodeExpression expression, Type expressionType, object owner, object presetValue);
    public ExpressionContext(CodeExpression expression, Type expressionType, object owner);
    [CompilerGeneratedAttribute]
public CodeExpression get_Expression();
    [CompilerGeneratedAttribute]
public Type get_ExpressionType();
    [CompilerGeneratedAttribute]
public object get_Owner();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_PresetValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.Serialization.ExpressionTable : object {
    internal void SetExpression(object value, CodeExpression expression, bool isPreset);
    internal CodeExpression GetExpression(object value);
    internal bool ContainsPresetExpression(object value);
}
[NullableContextAttribute("1")]
public interface System.ComponentModel.Design.Serialization.ICodeDomDesignerReload {
    public abstract virtual bool ShouldReloadDesigner(CodeCompileUnit newTree);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.Serialization.LocalizationCodeDomSerializer : CodeDomSerializer {
    internal LocalizationCodeDomSerializer(CodeDomLocalizationModel model, object currentSerializer);
    public virtual object Serialize(IDesignerSerializationManager manager, object value);
}
public abstract class System.ComponentModel.Design.Serialization.MemberCodeDomSerializer : CodeDomSerializerBase {
    public abstract virtual void Serialize(IDesignerSerializationManager manager, object value, MemberDescriptor descriptor, CodeStatementCollection statements);
    public abstract virtual bool ShouldSerialize(IDesignerSerializationManager manager, object value, MemberDescriptor descriptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class System.ComponentModel.Design.Serialization.ObjectStatementCollection : object {
    [NullableAttribute("2")]
public CodeStatementCollection Item { get; }
    public CodeStatementCollection get_Item(object statementOwner);
    public bool ContainsKey(object statementOwner);
    public IDictionaryEnumerator GetEnumerator();
    public void Populate(ICollection statementOwners);
    public void Populate(object owner);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class System.ComponentModel.Design.Serialization.PrimitiveCodeDomSerializer : CodeDomSerializer {
    internal static PrimitiveCodeDomSerializer Default { get; }
    internal static PrimitiveCodeDomSerializer get_Default();
    public virtual object Serialize(IDesignerSerializationManager manager, object value);
}
internal class System.ComponentModel.Design.Serialization.PropertyMemberCodeDomSerializer : MemberCodeDomSerializer {
    internal static PropertyMemberCodeDomSerializer Default { get; }
    internal static PropertyMemberCodeDomSerializer get_Default();
    public virtual void Serialize(IDesignerSerializationManager manager, object value, MemberDescriptor descriptor, CodeStatementCollection statements);
    public virtual bool ShouldSerialize(IDesignerSerializationManager manager, object value, MemberDescriptor descriptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.Serialization.ResourceCodeDomSerializer : CodeDomSerializer {
    internal static ResourceCodeDomSerializer Default { get; }
    internal static ResourceCodeDomSerializer get_Default();
    [NullableContextAttribute("2")]
public virtual string GetTargetComponentName(CodeStatement statement, CodeExpression expression, Type type);
    public virtual object Deserialize(IDesignerSerializationManager manager, object codeObject);
    protected virtual object DeserializeInstance(IDesignerSerializationManager manager, Type type, Object[] parameters, string name, bool addToContainer);
    public static object DeserializeInvariant(IDesignerSerializationManager manager, string resourceName);
    public static IDictionaryEnumerator GetEnumerator(IDesignerSerializationManager manager, CultureInfo culture);
    public static IDictionaryEnumerator GetMetadataEnumerator(IDesignerSerializationManager manager);
    public virtual object Serialize(IDesignerSerializationManager manager, object value);
    public object Serialize(IDesignerSerializationManager manager, object value, bool shouldSerializeInvariant);
    public object Serialize(IDesignerSerializationManager manager, object value, bool shouldSerializeInvariant, bool ensureInvariant);
    public object SerializeInvariant(IDesignerSerializationManager manager, object value, bool shouldSerializeValue);
    public void SerializeMetadata(IDesignerSerializationManager manager, string name, object value, bool shouldSerializeValue);
    public void WriteResource(IDesignerSerializationManager manager, string name, object value);
    public void WriteResourceInvariant(IDesignerSerializationManager manager, string name, object value);
    internal static void ApplyCacheEntry(IDesignerSerializationManager manager, Entry entry);
}
internal class System.ComponentModel.Design.Serialization.ResourcePropertyMemberCodeDomSerializer : MemberCodeDomSerializer {
    internal ResourcePropertyMemberCodeDomSerializer(MemberCodeDomSerializer serializer, LanguageExtenders extender, CodeDomLocalizationModel model);
    public virtual void Serialize(IDesignerSerializationManager manager, object value, MemberDescriptor descriptor, CodeStatementCollection statements);
    public virtual bool ShouldSerialize(IDesignerSerializationManager manager, object value, MemberDescriptor descriptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.Serialization.RootContext : object {
    public CodeExpression Expression { get; }
    public object Value { get; }
    public RootContext(CodeExpression expression, object value);
    [CompilerGeneratedAttribute]
public CodeExpression get_Expression();
    [CompilerGeneratedAttribute]
public object get_Value();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.Serialization.SerializeAbsoluteContext : object {
    public MemberDescriptor Member { get; }
    public SerializeAbsoluteContext(MemberDescriptor member);
    [CompilerGeneratedAttribute]
public MemberDescriptor get_Member();
    public bool ShouldSerialize(MemberDescriptor member);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.ComponentModel.Design.Serialization.StatementContext : object {
    public ObjectStatementCollection StatementCollection { get; }
    public ObjectStatementCollection get_StatementCollection();
}
[DefaultSerializationProviderAttribute("System.ComponentModel.Design.Serialization.CodeDomSerializationProvider")]
public class System.ComponentModel.Design.Serialization.TypeCodeDomSerializer : CodeDomSerializerBase {
    internal static TypeCodeDomSerializer Default { get; }
    internal static TypeCodeDomSerializer get_Default();
    public virtual object Deserialize(IDesignerSerializationManager manager, CodeTypeDeclaration declaration);
    protected virtual CodeMemberMethod GetInitializeMethod(IDesignerSerializationManager manager, CodeTypeDeclaration declaration, object value);
    protected virtual CodeMemberMethod[] GetInitializeMethods(IDesignerSerializationManager manager, CodeTypeDeclaration declaration);
    public virtual CodeTypeDeclaration Serialize(IDesignerSerializationManager manager, object root, ICollection members);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.SiteNestedContainer : NestedContainer {
    protected string OwnerName { get; }
    [NullableContextAttribute("1")]
internal SiteNestedContainer(IComponent owner, string containerName, DesignerHost host);
    protected virtual string get_OwnerName();
    public virtual void Add(IComponent component, string name);
    [NullableContextAttribute("1")]
protected virtual ISite CreateSite(IComponent component, string name);
    public virtual void Remove(IComponent component);
    [NullableContextAttribute("1")]
protected virtual object GetService(Type serviceType);
    [NullableContextAttribute("1")]
internal object GetServiceInternal(Type serviceType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.ComponentModel.Design.TypeDescriptorFilterService : object {
    private sealed virtual override bool System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(IComponent component, IDictionary attributes);
    private sealed virtual override bool System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(IComponent component, IDictionary events);
    private sealed virtual override bool System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(IComponent component, IDictionary properties);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class System.ComponentModel.Design.UndoEngine : object {
    public bool UndoInProgress { get; }
    public bool Enabled { get; public set; }
    internal IComponentChangeService ComponentChangeService { get; }
    protected UndoEngine(IServiceProvider provider);
    public bool get_UndoInProgress();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [NullableContextAttribute("2")]
public void add_Undoing(EventHandler value);
    [NullableContextAttribute("2")]
public void remove_Undoing(EventHandler value);
    [NullableContextAttribute("2")]
public void add_Undone(EventHandler value);
    [NullableContextAttribute("2")]
public void remove_Undone(EventHandler value);
    protected abstract virtual void AddUndoUnit(UndoUnit unit);
    protected virtual UndoUnit CreateUndoUnit(string name, bool primary);
    [CompilerGeneratedAttribute]
internal IComponentChangeService get_ComponentChangeService();
    protected virtual void DiscardUndoUnit(UndoUnit unit);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("2")]
internal string GetName(object obj, bool generateNew);
    protected object GetRequiredService(Type serviceType);
    private protected T GetRequiredService();
    protected object GetService(Type serviceType);
    private protected bool TryGetService(T& service);
    protected virtual void OnUndoing(EventArgs e);
    protected virtual void OnUndone(EventArgs e);
}
internal static class System.Drawing.BitmapSelector : object {
    internal static string Suffix { get; internal set; }
    internal static string get_Suffix();
    internal static void set_Suffix(string value);
    internal static string AppendSuffix(string filePath);
    public static string GetFileName(string originalPath);
    internal static bool SatelliteAssemblyOptIn(Assembly assembly);
    internal static bool SameAssemblyOptIn(Assembly assembly);
    public static Stream GetResourceStream(Assembly assembly, Type type, string originalName);
    public static Stream GetResourceStream(Type type, string originalName);
    public static Icon CreateIcon(Type type, string originalName);
    public static Bitmap CreateBitmap(Type type, string originalName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class System.Drawing.Design.BitmapEditor : ImageEditor {
    protected static List`1<string> BitmapExtensions;
    protected virtual string GetFileDialogDescription();
    protected virtual String[] GetExtensions();
    protected virtual Image LoadFromStream(Stream stream);
}
[CLSCompliantAttribute("False")]
public class System.Drawing.Design.ColorEditor : UITypeEditor {
    [NullableContextAttribute("2")]
public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    [NullableContextAttribute("2")]
public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    [NullableContextAttribute("2")]
public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    [NullableContextAttribute("1")]
public virtual void PaintValue(PaintValueEventArgs e);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.Drawing.Design.ContentAlignmentEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class System.Drawing.Design.CursorEditor : UITypeEditor {
    public bool IsDropDownResizable { get; }
    public virtual bool get_IsDropDownResizable();
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class System.Drawing.Design.FontEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Drawing.Design.FontNameEditor : UITypeEditor {
    [NullableContextAttribute("2")]
public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    public virtual void PaintValue(PaintValueEventArgs e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Drawing.Design.IconEditor : UITypeEditor {
    [NullableContextAttribute("2")]
protected static string CreateExtensionsString(String[] extensions, string sep);
    protected static string CreateFilterEntry(IconEditor editor);
    [NullableContextAttribute("2")]
public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    [NullableContextAttribute("2")]
public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    protected virtual string GetFileDialogDescription();
    protected virtual String[] GetExtensions();
    [NullableContextAttribute("2")]
public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    protected virtual Icon LoadFromStream(Stream stream);
    public virtual void PaintValue(PaintValueEventArgs e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class System.Drawing.Design.ImageEditor : UITypeEditor {
    protected virtual Type[] GetImageExtenders();
    [NullableContextAttribute("2")]
protected static string CreateExtensionsString(String[] extensions, string sep);
    protected static string CreateFilterEntry(ImageEditor e);
    [NullableContextAttribute("2")]
public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    [NullableContextAttribute("2")]
public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    protected virtual string GetFileDialogDescription();
    protected virtual String[] GetExtensions();
    [NullableContextAttribute("2")]
public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    protected virtual Image LoadFromStream(Stream stream);
    public virtual void PaintValue(PaintValueEventArgs e);
}
[NullableContextAttribute("1")]
public interface System.Drawing.Design.IToolboxItemProvider {
    public ToolboxItemCollection Items { get; }
    public abstract virtual ToolboxItemCollection get_Items();
}
[GuidAttribute("4BACD258-DE64-4048-BC4E-FEDBEF9ACB76")]
[InterfaceTypeAttribute("1")]
public interface System.Drawing.Design.IToolboxService {
    public CategoryNameCollection CategoryNames { get; }
    public string SelectedCategory { get; public set; }
    public abstract virtual CategoryNameCollection get_CategoryNames();
    public abstract virtual string get_SelectedCategory();
    public abstract virtual void set_SelectedCategory(string value);
    public abstract virtual void AddCreator(ToolboxItemCreatorCallback creator, string format);
    public abstract virtual void AddCreator(ToolboxItemCreatorCallback creator, string format, IDesignerHost host);
    public abstract virtual void AddLinkedToolboxItem(ToolboxItem toolboxItem, IDesignerHost host);
    public abstract virtual void AddLinkedToolboxItem(ToolboxItem toolboxItem, string category, IDesignerHost host);
    public abstract virtual void AddToolboxItem(ToolboxItem toolboxItem);
    public abstract virtual void AddToolboxItem(ToolboxItem toolboxItem, string category);
    public abstract virtual ToolboxItem DeserializeToolboxItem(object serializedObject);
    public abstract virtual ToolboxItem DeserializeToolboxItem(object serializedObject, IDesignerHost host);
    public abstract virtual ToolboxItem GetSelectedToolboxItem();
    public abstract virtual ToolboxItem GetSelectedToolboxItem(IDesignerHost host);
    public abstract virtual ToolboxItemCollection GetToolboxItems();
    public abstract virtual ToolboxItemCollection GetToolboxItems(IDesignerHost host);
    public abstract virtual ToolboxItemCollection GetToolboxItems(string category);
    public abstract virtual ToolboxItemCollection GetToolboxItems(string category, IDesignerHost host);
    public abstract virtual bool IsSupported(object serializedObject, IDesignerHost host);
    public abstract virtual bool IsSupported(object serializedObject, ICollection filterAttributes);
    public abstract virtual bool IsToolboxItem(object serializedObject);
    public abstract virtual bool IsToolboxItem(object serializedObject, IDesignerHost host);
    public abstract virtual void Refresh();
    public abstract virtual void RemoveCreator(string format);
    public abstract virtual void RemoveCreator(string format, IDesignerHost host);
    public abstract virtual void RemoveToolboxItem(ToolboxItem toolboxItem);
    public abstract virtual void RemoveToolboxItem(ToolboxItem toolboxItem, string category);
    public abstract virtual void SelectedToolboxItemUsed();
    public abstract virtual object SerializeToolboxItem(ToolboxItem toolboxItem);
    public abstract virtual bool SetCursor();
    public abstract virtual void SetSelectedToolboxItem(ToolboxItem toolboxItem);
}
public interface System.Drawing.Design.IToolboxUser {
    public abstract virtual bool GetToolSupported(ToolboxItem tool);
    public abstract virtual void ToolPicked(ToolboxItem tool);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class System.Drawing.Design.MetafileEditor : ImageEditor {
    protected virtual string GetFileDialogDescription();
    protected virtual String[] GetExtensions();
    protected virtual Image LoadFromStream(Stream stream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class System.Drawing.Design.SelectionPanelBase : Control {
    protected RadioButton CheckedControl { get; protected set; }
    protected ControlCollection SelectionOptions { get; }
    [NullableAttribute("2")]
public object Value { get; protected set; }
    protected RadioButton get_CheckedControl();
    protected void set_CheckedControl(RadioButton value);
    protected abstract virtual ControlCollection get_SelectionOptions();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Value();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected void set_Value(object value);
    public void End();
    protected virtual void OnGotFocus(EventArgs e);
    protected virtual bool ProcessDialogKey(Keys keyData);
    protected abstract virtual RadioButton ProcessDownKey(RadioButton checkedControl);
    protected abstract virtual RadioButton ProcessLeftKey(RadioButton checkedControl);
    protected abstract virtual RadioButton ProcessRightKey(RadioButton checkedControl);
    protected abstract virtual RadioButton ProcessTabKey(Keys keyData);
    protected abstract virtual RadioButton ProcessUpKey(RadioButton checkedControl);
    protected abstract virtual void SetInitialCheckedControl();
    public void Start(IWindowsFormsEditorService edSvc, object value);
    protected void ConfigureButtons();
    protected abstract virtual void UpdateValue();
}
public class System.Drawing.Design.ToolboxComponentsCreatedEventArgs : EventArgs {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IComponent[] Components { get; }
    public ToolboxComponentsCreatedEventArgs(IComponent[] components);
    public IComponent[] get_Components();
}
public class System.Drawing.Design.ToolboxComponentsCreatedEventHandler : MulticastDelegate {
    public ToolboxComponentsCreatedEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, ToolboxComponentsCreatedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, ToolboxComponentsCreatedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class System.Drawing.Design.ToolboxComponentsCreatingEventArgs : EventArgs {
    public IDesignerHost DesignerHost { get; }
    public ToolboxComponentsCreatingEventArgs(IDesignerHost host);
    [CompilerGeneratedAttribute]
public IDesignerHost get_DesignerHost();
}
public class System.Drawing.Design.ToolboxComponentsCreatingEventHandler : MulticastDelegate {
    public ToolboxComponentsCreatingEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, ToolboxComponentsCreatingEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, ToolboxComponentsCreatingEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class System.Drawing.Design.ToolboxItem : object {
    public AssemblyName AssemblyName { get; public set; }
    public AssemblyName[] DependentAssemblies { get; public set; }
    public Bitmap Bitmap { get; public set; }
    public Bitmap OriginalBitmap { get; public set; }
    public string Company { get; public set; }
    public string ComponentType { get; }
    public string Description { get; public set; }
    public string DisplayName { get; public set; }
    public ICollection Filter { get; public set; }
    public bool IsTransient { get; public set; }
    public bool Locked { get; }
    public IDictionary Properties { get; }
    public string TypeName { get; public set; }
    public string Version { get; }
    public ToolboxItem(Type toolType);
    public AssemblyName get_AssemblyName();
    public void set_AssemblyName(AssemblyName value);
    public AssemblyName[] get_DependentAssemblies();
    public void set_DependentAssemblies(AssemblyName[] value);
    public Bitmap get_Bitmap();
    public void set_Bitmap(Bitmap value);
    public Bitmap get_OriginalBitmap();
    public void set_OriginalBitmap(Bitmap value);
    public string get_Company();
    public void set_Company(string value);
    public virtual string get_ComponentType();
    public string get_Description();
    public void set_Description(string value);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public ICollection get_Filter();
    public void set_Filter(ICollection value);
    public bool get_IsTransient();
    public void set_IsTransient(bool value);
    public virtual bool get_Locked();
    public IDictionary get_Properties();
    public string get_TypeName();
    public void set_TypeName(string value);
    public virtual string get_Version();
    public void add_ComponentsCreated(ToolboxComponentsCreatedEventHandler value);
    public void remove_ComponentsCreated(ToolboxComponentsCreatedEventHandler value);
    public void add_ComponentsCreating(ToolboxComponentsCreatingEventHandler value);
    public void remove_ComponentsCreating(ToolboxComponentsCreatingEventHandler value);
    protected void CheckUnlocked();
    public IComponent[] CreateComponents();
    public IComponent[] CreateComponents(IDesignerHost host);
    public IComponent[] CreateComponents(IDesignerHost host, IDictionary defaultValues);
    protected virtual IComponent[] CreateComponentsCore(IDesignerHost host);
    protected virtual IComponent[] CreateComponentsCore(IDesignerHost host, IDictionary defaultValues);
    protected virtual void Deserialize(SerializationInfo info, StreamingContext context);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    protected virtual object FilterPropertyValue(string propertyName, object value);
    public Type GetType(IDesignerHost host);
    [UnconditionalSuppressMessageAttribute("SingleFile", "IL3002")]
protected virtual Type GetType(IDesignerHost host, AssemblyName assemblyName, string typeName, bool reference);
    public virtual void Initialize(Type type);
    public virtual void Lock();
    protected virtual void Serialize(SerializationInfo info, StreamingContext context);
    protected virtual void OnComponentsCreated(ToolboxComponentsCreatedEventArgs args);
    protected virtual void OnComponentsCreating(ToolboxComponentsCreatingEventArgs args);
    public virtual string ToString();
    protected void ValidatePropertyType(string propertyName, object value, Type expectedType, bool allowNull);
    protected virtual object ValidatePropertyValue(string propertyName, object value);
    private sealed virtual override void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context);
}
[DefaultMemberAttribute("Item")]
public class System.Drawing.Design.ToolboxItemCollection : ReadOnlyCollectionBase {
    public ToolboxItem Item { get; }
    public ToolboxItemCollection(ToolboxItemCollection value);
    public ToolboxItemCollection(ToolboxItem[] value);
    public ToolboxItem get_Item(int index);
    public bool Contains(ToolboxItem value);
    public void CopyTo(ToolboxItem[] array, int index);
    public int IndexOf(ToolboxItem value);
}
public class System.Drawing.Design.ToolboxItemCreatorCallback : MulticastDelegate {
    public ToolboxItemCreatorCallback(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual ToolboxItem Invoke(object serializedObject, string format);
    public virtual IAsyncResult BeginInvoke(object serializedObject, string format, AsyncCallback callback, object object);
    public virtual ToolboxItem EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[EditorBrowsableAttribute("1")]
public interface System.Resources.Tools.ITargetAwareCodeDomProvider {
    public abstract virtual bool SupportsProperty(Type type, string propertyName, bool isWritable);
}
public static class System.Resources.Tools.StronglyTypedResourceBuilder : object {
    public static CodeCompileUnit Create(IDictionary resourceList, string baseName, string generatedCodeNamespace, CodeDomProvider codeProvider, bool internalClass, String[]& unmatchable);
    public static CodeCompileUnit Create(IDictionary resourceList, string baseName, string generatedCodeNamespace, string resourcesNamespace, CodeDomProvider codeProvider, bool internalClass, String[]& unmatchable);
    public static CodeCompileUnit Create(string resxFile, string baseName, string generatedCodeNamespace, CodeDomProvider codeProvider, bool internalClass, String[]& unmatchable);
    public static CodeCompileUnit Create(string resxFile, string baseName, string generatedCodeNamespace, string resourcesNamespace, CodeDomProvider codeProvider, bool internalClass, String[]& unmatchable);
    public static string VerifyResourceName(string key, CodeDomProvider provider);
}
[NullableContextAttribute("1")]
[GuidAttribute("00020402-0000-0000-C000-000000000046")]
[InterfaceTypeAttribute("1")]
public interface System.Runtime.InteropServices.UCOMITypeLib {
    public abstract virtual int GetTypeInfoCount();
    public abstract virtual void GetTypeInfoType(int index, TYPEKIND& pTKind);
    public abstract virtual void GetLibAttr(IntPtr& ppTLibAttr);
    public abstract virtual void GetDocumentation(int index, String& strName, String& strDocString, Int32& dwHelpContext, String& strHelpFile);
    public abstract virtual bool IsName(string szNameBuf, int lHashVal);
    public abstract virtual void ReleaseTLibAttr(IntPtr pTLibAttr);
}
internal static class System.SR : object {
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string PlatformNotSupported_WinformsDesigner { get; }
    internal static string DesignerOptions_LayoutSettings { get; }
    internal static string DesignerOptions_ObjectBoundSmartTagSettings { get; }
    internal static string DesignerOptions_GridSizeDisplayName { get; }
    internal static string DesignerOptions_ShowGridDisplayName { get; }
    internal static string DesignerOptions_SnapToGridDisplayName { get; }
    internal static string DesignerOptions_UseSnapLines { get; }
    internal static string DesignerOptions_UseSmartTags { get; }
    internal static string DesignerOptions_ObjectBoundSmartTagAutoShow { get; }
    internal static string DesignerOptions_ObjectBoundSmartTagAutoShowDisplayName { get; }
    internal static string DesignerOptions_CodeGenSettings { get; }
    internal static string DesignerOptions_OptimizedCodeGen { get; }
    internal static string DesignerOptions_CodeGenDisplay { get; }
    internal static string DesignerOptions_EnableInSituEditingDisplay { get; }
    internal static string DesignerOptions_EnableInSituEditingCat { get; }
    internal static string DesignerOptions_ShowGridDesc { get; }
    internal static string DesignerOptions_GridSizeDesc { get; }
    internal static string DesignerOptions_SnapToGridDesc { get; }
    internal static string None { get; }
    internal static string None_lc { get; }
    internal static string NotImplementedByDesign { get; }
    internal static string DesignerOptions_EnableInSituEditingDesc { get; }
    internal static string DragDropSetDataError { get; }
    internal static string ComponentDesignerAddEvent { get; }
    internal static string InheritanceServiceReadOnlyCollection { get; }
    internal static string COM2UnhandledVT { get; }
    internal static string DotNET_ComponentType { get; }
    internal static string ToolboxItemInvalidKey { get; }
    internal static string ToolboxItemInvalidPropertyType { get; }
    internal static string ToolboxItemLocked { get; }
    internal static string ToolboxItemValueNotSerializable { get; }
    internal static string UnsafeNativeMethodsNotImplemented { get; }
    internal static string DesignerActionPanel_CouldNotFindMethod { get; }
    internal static string CommandSetAlignByPrimary { get; }
    internal static string CommandSetAlignToGrid { get; }
    internal static string CommandSetCutMultiple { get; }
    internal static string CommandSetDelete { get; }
    internal static string CommandSetError { get; }
    internal static string CommandSetFormatSpacing { get; }
    internal static string CommandSetPaste { get; }
    internal static string CommandSetSize { get; }
    internal static string CommandSetSizeToGrid { get; }
    internal static string CommandSetUnknownSpacingCommand { get; }
    internal static string DragDropMoveComponent { get; }
    internal static string DragDropMoveComponents { get; }
    internal static string WindowsFormsCommandCenterX { get; }
    internal static string WindowsFormsCommandCenterY { get; }
    internal static string DesignerActionPanel_CouldNotConvertValue { get; }
    internal static string DesignerActionPanel_CouldNotFindProperty { get; }
    internal static string DesignerActionPanel_DefaultPanelTitle { get; }
    internal static string DesignerActionPanel_ErrorActivatingDropDown { get; }
    internal static string DesignerActionPanel_ErrorInvokingAction { get; }
    internal static string DesignerActionPanel_ErrorSettingValue { get; }
    internal static string DesignerInherited { get; }
    internal static string DesignerInheritedReadOnly { get; }
    internal static string RTL { get; }
    internal static string TrayAutoArrange { get; }
    internal static string TrayLineUpIcons { get; }
    internal static string TrayShowLargeIcons { get; }
    internal static string UIServiceHelper_ErrorCaption { get; }
    internal static string WindowsFormsAddEvent { get; }
    internal static string BehaviorServiceCopyControl { get; }
    internal static string BehaviorServiceCopyControls { get; }
    internal static string BehaviorServiceMoveControl { get; }
    internal static string BehaviorServiceMoveControls { get; }
    internal static string DesignerBeginDragNotCalled { get; }
    internal static string DragDropDragComponents { get; }
    internal static string DragDropSizeComponent { get; }
    internal static string DragDropSizeComponents { get; }
    internal static string UndoEngineComponentAdd0 { get; }
    internal static string UndoEngineComponentAdd1 { get; }
    internal static string UndoEngineComponentChange0 { get; }
    internal static string UndoEngineComponentChange1 { get; }
    internal static string UndoEngineComponentChange2 { get; }
    internal static string UndoEngineComponentRemove0 { get; }
    internal static string UndoEngineComponentRemove1 { get; }
    internal static string UndoEngineComponentRename { get; }
    internal static string UndoEngineMissingService { get; }
    internal static string DesignerHostCantDestroyInheritedComponent { get; }
    internal static string DesignerHostCyclicAdd { get; }
    internal static string DesignerHostDesignerNeedsComponent { get; }
    internal static string DesignerHostDestroyComponentTransaction { get; }
    internal static string DesignerHostDuplicateName { get; }
    internal static string DesignerHostFailedComponentCreate { get; }
    internal static string DesignerHostGenericTransactionName { get; }
    internal static string DesignerHostLoaderSpecified { get; }
    internal static string DesignerHostNestedTransaction { get; }
    internal static string DesignerHostNoBaseClass { get; }
    internal static string DesignerHostNoTopLevelDesigner { get; }
    internal static string DesignerHostUnloading { get; }
    internal static string DesignSurfaceContainerDispose { get; }
    internal static string DesignSurfaceDesignerNotLoaded { get; }
    internal static string DesignSurfaceFatalError { get; }
    internal static string DesignSurfaceNoRootComponent { get; }
    internal static string DesignSurfaceNoSupportedTechnology { get; }
    internal static string DesignSurfaceServiceIsFixed { get; }
    internal static string ExtenderProviderServiceDuplicateProvider { get; }
    internal static string BehaviorServiceResizeControl { get; }
    internal static string BehaviorServiceResizeControls { get; }
    internal static string DesignerShortcutDockInParent { get; }
    internal static string DesignerShortcutUndockInParent { get; }
    internal static string ControlDesigner_WndProcException { get; }
    internal static string lockedDescr { get; }
    internal static string InvalidArgument { get; }
    internal static string InvalidBoundArgument { get; }
    internal static string SerializerFieldTargetEvalFailed { get; }
    internal static string SerializerInvalidArrayRank { get; }
    internal static string SerializerLostStatements { get; }
    internal static string SerializerNoRootExpression { get; }
    internal static string SerializerNoSerializerForComponent { get; }
    internal static string SerializerNoSuchEvent { get; }
    internal static string SerializerNoSuchField { get; }
    internal static string SerializerNoSuchProperty { get; }
    internal static string SerializerNullNestedProperty { get; }
    internal static string SerializerPropertyGenFailed { get; }
    internal static string SerializerTypeNotFound { get; }
    internal static string SerializerUndeclaredName { get; }
    internal static string StandardMenuAbout { get; }
    internal static string StandardMenuContents { get; }
    internal static string StandardMenuCopy { get; }
    internal static string StandardMenuCreateDesc { get; }
    internal static string StandardMenuCustomize { get; }
    internal static string StandardMenuCut { get; }
    internal static string StandardMenuEdit { get; }
    internal static string StandardMenuExit { get; }
    internal static string StandardMenuFile { get; }
    internal static string StandardMenuHelp { get; }
    internal static string StandardMenuIndex { get; }
    internal static string StandardMenuNew { get; }
    internal static string StandardMenuOpen { get; }
    internal static string StandardMenuOptions { get; }
    internal static string StandardMenuPaste { get; }
    internal static string StandardMenuPrint { get; }
    internal static string StandardMenuPrintPreview { get; }
    internal static string StandardMenuRedo { get; }
    internal static string StandardMenuSave { get; }
    internal static string StandardMenuSaveAs { get; }
    internal static string StandardMenuSearch { get; }
    internal static string StandardMenuSelectAll { get; }
    internal static string StandardMenuTools { get; }
    internal static string StandardMenuUndo { get; }
    internal static string StandardToolCut { get; }
    internal static string ToolStripActionList_Dock { get; }
    internal static string ToolStripActionList_DockDesc { get; }
    internal static string ToolStripActionList_GripStyle { get; }
    internal static string ToolStripActionList_GripStyleDesc { get; }
    internal static string ToolStripActionList_Layout { get; }
    internal static string ToolStripActionList_RenderMode { get; }
    internal static string ToolStripActionList_RenderModeDesc { get; }
    internal static string ToolStripAddingItem { get; }
    internal static string ToolStripAllowItemReorderAndAllowDropCannotBeSetToTrue { get; }
    internal static string ToolStripCreatingNewItemTransaction { get; }
    internal static string ToolStripDesignerEmbedVerb { get; }
    internal static string ToolStripDesignerEmbedVerbDesc { get; }
    internal static string ToolStripDesignerStandardItemsVerb { get; }
    internal static string ToolStripDesignerStandardItemsVerbDesc { get; }
    internal static string ToolStripDesignerTemplateNodeEnterText { get; }
    internal static string ToolStripDesignerTemplateNodeLabelToolTip { get; }
    internal static string ToolStripDesignerTemplateNodeSplitButtonStatusStripAccessibleName { get; }
    internal static string ToolStripDesignerTemplateNodeSplitButtonStatusStripToolTip { get; }
    internal static string ToolStripDesignerTemplateNodeSplitButtonToolTip { get; }
    internal static string ToolStripDesignerToolStripAccessibleName { get; }
    internal static string ToolStripDesignerTransactionRemovingItem { get; }
    internal static string ToolStripInsertingIntoDropDownTransaction { get; }
    internal static string ToolStripItemCollectionEditorVerb { get; }
    internal static string ToolStripItemContextMenuInsert { get; }
    internal static string ToolStripItemPropertyChangeTransaction { get; }
    internal static string ToolStripMorphingItemTransaction { get; }
    internal static string ToolStripSeparatorError { get; }
    internal static string TypeNotFoundInTargetFramework { get; }
    internal static string ContextMenuStripActionList_ShowCheckMargin { get; }
    internal static string ContextMenuStripActionList_ShowCheckMarginDesc { get; }
    internal static string ContextMenuStripActionList_ShowImageMargin { get; }
    internal static string ContextMenuStripActionList_ShowImageMarginDesc { get; }
    internal static string SerializationManagerDuplicateComponentDecl { get; }
    internal static string SerializationManagerNameInUse { get; }
    internal static string SerializationManagerObjectHasName { get; }
    internal static string SerializerBadElementTypes { get; }
    internal static string SerializerResourceException { get; }
    internal static string SerializerResourceExceptionInvariant { get; }
    internal static string ToolStripDesignerTransactionAddingItem { get; }
    internal static string ToolStripDropDownItemCollectionEditorVerb { get; }
    internal static string ToolStripItemContextMenuConvertTo { get; }
    internal static string CodeDomComponentSerializationServiceClosedStore { get; }
    internal static string CodeDomComponentSerializationServiceDeserializationError { get; }
    internal static string CodeDomComponentSerializationServiceUnknownStore { get; }
    internal static string ContextMenuAlignToGrid { get; }
    internal static string ContextMenuBringToFront { get; }
    internal static string ContextMenuCopy { get; }
    internal static string ContextMenuCut { get; }
    internal static string ContextMenuDelete { get; }
    internal static string ContextMenuDocumentOutline { get; }
    internal static string ContextMenuLockControls { get; }
    internal static string ContextMenuPaste { get; }
    internal static string ContextMenuProperties { get; }
    internal static string ContextMenuSelect { get; }
    internal static string ContextMenuSendToBack { get; }
    internal static string ContextMenuViewCode { get; }
    internal static string SerializationManagerAlreadyInSession { get; }
    internal static string SerializationManagerNoMatchingCtor { get; }
    internal static string SerializationManagerNoSession { get; }
    internal static string SerializationManagerWithinSession { get; }
    internal static string SerializerMemberTypeNotSerializable { get; }
    internal static string SerializerTypeAbstract { get; }
    internal static string StandardToolHelp { get; }
    internal static string ToolStripItemContextMenuSetImage { get; }
    internal static string ToolStripSelectMenuItem { get; }
    internal static string CodeDomDesignerLoaderPropGenerateMember { get; }
    internal static string CodeDomDesignerLoaderPropModifiers { get; }
    internal static string LocalizationProviderManualReload { get; }
    internal static string LocalizationProviderMissingService { get; }
    internal static string BasicDesignerLoaderDifferentHost { get; }
    internal static string BasicDesignerLoaderMissingService { get; }
    internal static string BasicDesignerLoaderNotInitialized { get; }
    internal static string BasicDesignerLoaderAlreadyLoaded { get; }
    internal static string CodeDomDesignerLoaderBadSerializationObject { get; }
    internal static string CodeDomDesignerLoaderDocumentFailureTypeDesignerNotInstalled { get; }
    internal static string CodeDomDesignerLoaderDocumentFailureTypeNotDesignable { get; }
    internal static string CodeDomDesignerLoaderDocumentFailureTypeNotFound { get; }
    internal static string CodeDomDesignerLoaderDupComponentName { get; }
    internal static string CodeDomDesignerLoaderInvalidBlankIdentifier { get; }
    internal static string CodeDomDesignerLoaderInvalidIdentifier { get; }
    internal static string CodeDomDesignerLoaderNoLanguageSupport { get; }
    internal static string CodeDomDesignerLoaderNoRootSerializer { get; }
    internal static string CodeDomDesignerLoaderNoRootSerializerWithFailures { get; }
    internal static string CodeDomDesignerLoaderNoTypeResolution { get; }
    internal static string CodeDomDesignerLoaderSerializerTypeNotFirstType { get; }
    internal static string EventBindingServiceBadArgType { get; }
    internal static string EventBindingServiceEventReadOnly { get; }
    internal static string EventBindingServiceMissingService { get; }
    internal static string EventBindingServiceNoSite { get; }
    internal static string EventBindingServiceSetValue { get; }
    internal static string BinaryEditorAllFiles { get; }
    internal static string BinaryEditorFileError { get; }
    internal static string BinaryEditorFileName { get; }
    internal static string BinaryEditorSaveFile { get; }
    internal static string BinaryEditorTitle { get; }
    internal static string MaskDescriptorNullOrEmptyRequiredProperty { get; }
    internal static string MaskDescriptorNull { get; }
    internal static string MaskDescriptorNotMaskFullErrorMsg { get; }
    internal static string MaskDescriptorValidatingTypeNone { get; }
    internal static string MaskDesignerDialogCustomEntry { get; }
    internal static string MaskDesignerDialogDataFormat { get; }
    internal static string MaskDesignerDialogDlgCaption { get; }
    internal static string MaskDesignerDialogMaskDescription { get; }
    internal static string MaskDesignerDialogValidatingType { get; }
    internal static string MaskedTextBoxDesignerVerbsSetMaskDesc { get; }
    internal static string MaskedTextBoxTextEditorErrorFormatString { get; }
    internal static string MaskedTextBoxHintAsciiCharacterExpected { get; }
    internal static string MaskedTextBoxHintAlphanumericCharacterExpected { get; }
    internal static string MaskedTextBoxHintDigitExpected { get; }
    internal static string MaskedTextBoxHintSignedDigitExpected { get; }
    internal static string MaskedTextBoxHintLetterExpected { get; }
    internal static string MaskedTextBoxHintPromptCharNotAllowed { get; }
    internal static string MaskedTextBoxHintUnavailableEditPosition { get; }
    internal static string MaskedTextBoxHintNonEditPosition { get; }
    internal static string MaskedTextBoxHintPositionOutOfRange { get; }
    internal static string MaskedTextBoxHintInvalidInput { get; }
    internal static string MenuCommandService_DuplicateCommand { get; }
    internal static string AnchorEditorAccName { get; }
    internal static string AnchorEditorBottomAccName { get; }
    internal static string AnchorEditorLeftAccName { get; }
    internal static string AnchorEditorRightAccName { get; }
    internal static string AnchorEditorTopAccName { get; }
    internal static string bitmapFileDescription { get; }
    internal static string ColorEditorAccName { get; }
    internal static string ColorEditorPaletteTab { get; }
    internal static string ColorEditorStandardTab { get; }
    internal static string ColorEditorSystemTab { get; }
    internal static string DataSourceLocksItems { get; }
    internal static string DockEditorAccName { get; }
    internal static string DockEditorBottomAccName { get; }
    internal static string DockEditorFillAccName { get; }
    internal static string DockEditorLeftAccName { get; }
    internal static string DockEditorNoneAccName { get; }
    internal static string DockEditorRightAccName { get; }
    internal static string DockEditorTopAccName { get; }
    internal static string GenericFileFilter { get; }
    internal static string GenericOpenFile { get; }
    internal static string imageFileDescription { get; }
    internal static string ListViewSubItemBaseName { get; }
    internal static string metafileFileDescription { get; }
    internal static string ShortcutKeys_InvalidKey { get; }
    internal static string CollectionEditorCantRemoveItem { get; }
    internal static string CollectionEditorCaption { get; }
    internal static string CollectionEditorInheritedReadOnlySelection { get; }
    internal static string CollectionEditorProperties { get; }
    internal static string CollectionEditorPropertiesMultiSelect { get; }
    internal static string CollectionEditorPropertiesNone { get; }
    internal static string CollectionEditorUndoBatchDesc { get; }
    internal static string MultilineStringEditorWatermark { get; }
    internal static string ImageCollectionEditorFormText { get; }
    internal static string ContentAlignmentEditorAccName { get; }
    internal static string ContentAlignmentEditorBottomCenterAccName { get; }
    internal static string ContentAlignmentEditorBottomLeftAccName { get; }
    internal static string ContentAlignmentEditorBottomRightAccName { get; }
    internal static string ContentAlignmentEditorMiddleCenterAccName { get; }
    internal static string ContentAlignmentEditorMiddleLeftAccName { get; }
    internal static string ContentAlignmentEditorMiddleRightAccName { get; }
    internal static string ContentAlignmentEditorTopCenterAccName { get; }
    internal static string ContentAlignmentEditorTopLeftAccName { get; }
    internal static string ContentAlignmentEditorTopRightAccName { get; }
    internal static string LinkAreaEditorCancel { get; }
    internal static string LinkAreaEditorCaption { get; }
    internal static string LinkAreaEditorDescription { get; }
    internal static string LinkAreaEditorOK { get; }
    internal static string iconFileDescription { get; }
    internal static string SelectedPathEditorLabel { get; }
    internal static string BindingFormattingDialogCustomFormat { get; }
    internal static string BindingFormattingDialogCustomFormatAccessibleDescription { get; }
    internal static string BindingFormattingDialogDecimalPlaces { get; }
    internal static string BindingFormattingDialogFormatTypeCurrency { get; }
    internal static string BindingFormattingDialogFormatTypeCurrencyExplanation { get; }
    internal static string BindingFormattingDialogFormatTypeCustom { get; }
    internal static string BindingFormattingDialogFormatTypeCustomExplanation { get; }
    internal static string BindingFormattingDialogFormatTypeCustomInvalidFormat { get; }
    internal static string BindingFormattingDialogFormatTypeDateTime { get; }
    internal static string BindingFormattingDialogFormatTypeDateTimeExplanation { get; }
    internal static string BindingFormattingDialogFormatTypeNoFormatting { get; }
    internal static string BindingFormattingDialogFormatTypeNoFormattingExplanation { get; }
    internal static string BindingFormattingDialogFormatTypeNumeric { get; }
    internal static string BindingFormattingDialogFormatTypeNumericExplanation { get; }
    internal static string BindingFormattingDialogFormatTypeScientific { get; }
    internal static string BindingFormattingDialogFormatTypeScientificExplanation { get; }
    internal static string BindingFormattingDialogNullValue { get; }
    internal static string BindingFormattingDialogType { get; }
    internal static string DataGridView_Cancel { get; }
    internal static string DataGridView_OK { get; }
    internal static string FormatStringDialogTitle { get; }
    internal static string HelpProviderEditorFilter { get; }
    internal static string HelpProviderEditorTitle { get; }
    internal static string CellStyleBuilderNormalPreviewAccName { get; }
    internal static string CellStyleBuilderSelectedPreviewAccName { get; }
    internal static string InitialDirectoryEditorLabel { get; }
    internal static string Ax_Control { get; }
    internal static string AxImportFailed { get; }
    internal static string AXNotRegistered { get; }
    internal static string ChooseImageDescription { get; }
    internal static string ChooseImageDisplayName { get; }
    internal static string ClipboardError { get; }
    internal static string CommandSetBringToFront { get; }
    internal static string CommandSetLockControls { get; }
    internal static string CommandSetSendToBack { get; }
    internal static string DesignerBatchCreateTool { get; }
    internal static string DesignerPropName { get; }
    internal static string DesignerCantParentType { get; }
    internal static string DragDropDropComponents { get; }
    internal static string EditLinesDescription { get; }
    internal static string EditLinesDisplayName { get; }
    internal static string FailedToCreateComponent { get; }
    internal static string ImageListDisplayName { get; }
    internal static string ImageListDescription { get; }
    internal static string InvokeNodesDialogDisplayName { get; }
    internal static string InvokeNodesDialogDescription { get; }
    internal static string ItemsCategoryName { get; }
    internal static string LinksCategoryName { get; }
    internal static string ListViewActionListEditItemsDescription { get; }
    internal static string ListViewActionListEditItemsDisplayName { get; }
    internal static string ListViewActionListEditColumnsDisplayName { get; }
    internal static string ListViewActionListEditColumnsDescription { get; }
    internal static string ListViewActionListEditGroupsDisplayName { get; }
    internal static string ListViewActionListEditGroupsDescription { get; }
    internal static string ListViewActionListViewDisplayName { get; }
    internal static string ListViewActionListViewDescription { get; }
    internal static string ListViewActionListSmallImagesDisplayName { get; }
    internal static string ListViewActionListSmallImagesDescription { get; }
    internal static string ListViewActionListLargeImagesDisplayName { get; }
    internal static string ListViewActionListLargeImagesDescription { get; }
    internal static string ListControlUnboundActionListEditItemsDisplayName { get; }
    internal static string ListControlUnboundActionListEditItemsDescription { get; }
    internal static string LocalizingCannotAdd { get; }
    internal static string MultiLineDescription { get; }
    internal static string MultiLineDisplayName { get; }
    internal static string ParentControlDesignerGridSizeDescr { get; }
    internal static string ParentControlDesignerLassoShortcutRedo { get; }
    internal static string PropertiesCategoryName { get; }
    internal static string SizeModeDescription { get; }
    internal static string SizeModeDisplayName { get; }
    internal static string WindowsFormsTabOrderReadOnly { get; }
    internal static string AccessibleActionCheck { get; }
    internal static string AccessibleActionUncheck { get; }
    internal static string ClassComments1 { get; }
    internal static string ClassComments2 { get; }
    internal static string ClassComments3 { get; }
    internal static string ClassComments4 { get; }
    internal static string ClassDocComment { get; }
    internal static string CulturePropertyComment1 { get; }
    internal static string CulturePropertyComment2 { get; }
    internal static string InvalidIdentifier { get; }
    internal static string MismatchedResourceName { get; }
    internal static string NonStringPropertyComment { get; }
    internal static string NonStringPropertyDetailedComment { get; }
    internal static string ResMgrPropertyComment { get; }
    internal static string StringPropertyComment { get; }
    internal static string StringPropertyTruncatedComment { get; }
    internal static string ExceptionCollectionInvalidArgument { get; }
    internal static string DesignerShortcutVerticalOrientation { get; }
    internal static string DesignerShortcutHorizontalOrientation { get; }
    internal static string TabControlAdd { get; }
    internal static string TabControlAddTab { get; }
    internal static string TabControlRemove { get; }
    internal static string TabControlRemoveTab { get; }
    internal static string TabControlInvalidTabPageType { get; }
    internal static string TableLayoutPanelDesignerAbsoluteMenu { get; }
    internal static string TableLayoutPanelDesignerAddColumn { get; }
    internal static string TableLayoutPanelDesignerAddColumnUndoUnit { get; }
    internal static string TableLayoutPanelDesignerAddMenu { get; }
    internal static string TableLayoutPanelDesignerAddRow { get; }
    internal static string TableLayoutPanelDesignerAddRowUndoUnit { get; }
    internal static string TableLayoutPanelDesignerAutoSizeMenu { get; }
    internal static string TableLayoutPanelDesignerChangeSizeTypeUndoUnit { get; }
    internal static string TableLayoutPanelDesignerClearAnchor { get; }
    internal static string TableLayoutPanelDesignerClearDock { get; }
    internal static string TableLayoutPanelDesignerColMenu { get; }
    internal static string TableLayoutPanelDesignerContextMenuCopy { get; }
    internal static string TableLayoutPanelDesignerContextMenuCut { get; }
    internal static string TableLayoutPanelDesignerContextMenuDelete { get; }
    internal static string TableLayoutPanelDesignerControlsSwapped { get; }
    internal static string TableLayoutPanelDesignerDeleteMenu { get; }
    internal static string TableLayoutPanelDesignerDontBoldLabel { get; }
    internal static string TableLayoutPanelDesignerEditRowAndCol { get; }
    internal static string TableLayoutPanelDesignerInsertMenu { get; }
    internal static string TableLayoutPanelDesignerInvalidColumnRowCount { get; }
    internal static string TableLayoutPanelDesignerLabelMenu { get; }
    internal static string TableLayoutPanelDesignerPercentageMenu { get; }
    internal static string TableLayoutPanelDesignerRemoveColumn { get; }
    internal static string TableLayoutPanelDesignerRemoveColumnUndoUnit { get; }
    internal static string TableLayoutPanelDesignerRemoveRow { get; }
    internal static string TableLayoutPanelDesignerRemoveRowUndoUnit { get; }
    internal static string TableLayoutPanelDesignerRowMenu { get; }
    internal static string TableLayoutPanelFullDesc { get; }
    internal static string TableLayoutPanelRowColResize { get; }
    internal static string TableLayoutPanelSpanDesc { get; }
    internal static string ImageListActionList_ChooseImagesDescription { get; }
    internal static string ImageListActionList_ChooseImagesDisplayName { get; }
    internal static string ImageListActionList_ColorDepthDescription { get; }
    internal static string ImageListActionList_ColorDepthDisplayName { get; }
    internal static string ImageListActionList_ImageSizeDescription { get; }
    internal static string ImageListActionList_ImageSizeDisplayName { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    internal static string get_PlatformNotSupported_WinformsDesigner();
    internal static string get_DesignerOptions_LayoutSettings();
    internal static string get_DesignerOptions_ObjectBoundSmartTagSettings();
    internal static string get_DesignerOptions_GridSizeDisplayName();
    internal static string get_DesignerOptions_ShowGridDisplayName();
    internal static string get_DesignerOptions_SnapToGridDisplayName();
    internal static string get_DesignerOptions_UseSnapLines();
    internal static string get_DesignerOptions_UseSmartTags();
    internal static string get_DesignerOptions_ObjectBoundSmartTagAutoShow();
    internal static string get_DesignerOptions_ObjectBoundSmartTagAutoShowDisplayName();
    internal static string get_DesignerOptions_CodeGenSettings();
    internal static string get_DesignerOptions_OptimizedCodeGen();
    internal static string get_DesignerOptions_CodeGenDisplay();
    internal static string get_DesignerOptions_EnableInSituEditingDisplay();
    internal static string get_DesignerOptions_EnableInSituEditingCat();
    internal static string get_DesignerOptions_ShowGridDesc();
    internal static string get_DesignerOptions_GridSizeDesc();
    internal static string get_DesignerOptions_SnapToGridDesc();
    internal static string get_None();
    internal static string get_None_lc();
    internal static string get_NotImplementedByDesign();
    internal static string get_DesignerOptions_EnableInSituEditingDesc();
    internal static string get_DragDropSetDataError();
    internal static string get_ComponentDesignerAddEvent();
    internal static string get_InheritanceServiceReadOnlyCollection();
    internal static string get_COM2UnhandledVT();
    internal static string get_DotNET_ComponentType();
    internal static string get_ToolboxItemInvalidKey();
    internal static string get_ToolboxItemInvalidPropertyType();
    internal static string get_ToolboxItemLocked();
    internal static string get_ToolboxItemValueNotSerializable();
    internal static string get_UnsafeNativeMethodsNotImplemented();
    internal static string get_DesignerActionPanel_CouldNotFindMethod();
    internal static string get_CommandSetAlignByPrimary();
    internal static string get_CommandSetAlignToGrid();
    internal static string get_CommandSetCutMultiple();
    internal static string get_CommandSetDelete();
    internal static string get_CommandSetError();
    internal static string get_CommandSetFormatSpacing();
    internal static string get_CommandSetPaste();
    internal static string get_CommandSetSize();
    internal static string get_CommandSetSizeToGrid();
    internal static string get_CommandSetUnknownSpacingCommand();
    internal static string get_DragDropMoveComponent();
    internal static string get_DragDropMoveComponents();
    internal static string get_WindowsFormsCommandCenterX();
    internal static string get_WindowsFormsCommandCenterY();
    internal static string get_DesignerActionPanel_CouldNotConvertValue();
    internal static string get_DesignerActionPanel_CouldNotFindProperty();
    internal static string get_DesignerActionPanel_DefaultPanelTitle();
    internal static string get_DesignerActionPanel_ErrorActivatingDropDown();
    internal static string get_DesignerActionPanel_ErrorInvokingAction();
    internal static string get_DesignerActionPanel_ErrorSettingValue();
    internal static string get_DesignerInherited();
    internal static string get_DesignerInheritedReadOnly();
    internal static string get_RTL();
    internal static string get_TrayAutoArrange();
    internal static string get_TrayLineUpIcons();
    internal static string get_TrayShowLargeIcons();
    internal static string get_UIServiceHelper_ErrorCaption();
    internal static string get_WindowsFormsAddEvent();
    internal static string get_BehaviorServiceCopyControl();
    internal static string get_BehaviorServiceCopyControls();
    internal static string get_BehaviorServiceMoveControl();
    internal static string get_BehaviorServiceMoveControls();
    internal static string get_DesignerBeginDragNotCalled();
    internal static string get_DragDropDragComponents();
    internal static string get_DragDropSizeComponent();
    internal static string get_DragDropSizeComponents();
    internal static string get_UndoEngineComponentAdd0();
    internal static string get_UndoEngineComponentAdd1();
    internal static string get_UndoEngineComponentChange0();
    internal static string get_UndoEngineComponentChange1();
    internal static string get_UndoEngineComponentChange2();
    internal static string get_UndoEngineComponentRemove0();
    internal static string get_UndoEngineComponentRemove1();
    internal static string get_UndoEngineComponentRename();
    internal static string get_UndoEngineMissingService();
    internal static string get_DesignerHostCantDestroyInheritedComponent();
    internal static string get_DesignerHostCyclicAdd();
    internal static string get_DesignerHostDesignerNeedsComponent();
    internal static string get_DesignerHostDestroyComponentTransaction();
    internal static string get_DesignerHostDuplicateName();
    internal static string get_DesignerHostFailedComponentCreate();
    internal static string get_DesignerHostGenericTransactionName();
    internal static string get_DesignerHostLoaderSpecified();
    internal static string get_DesignerHostNestedTransaction();
    internal static string get_DesignerHostNoBaseClass();
    internal static string get_DesignerHostNoTopLevelDesigner();
    internal static string get_DesignerHostUnloading();
    internal static string get_DesignSurfaceContainerDispose();
    internal static string get_DesignSurfaceDesignerNotLoaded();
    internal static string get_DesignSurfaceFatalError();
    internal static string get_DesignSurfaceNoRootComponent();
    internal static string get_DesignSurfaceNoSupportedTechnology();
    internal static string get_DesignSurfaceServiceIsFixed();
    internal static string get_ExtenderProviderServiceDuplicateProvider();
    internal static string get_BehaviorServiceResizeControl();
    internal static string get_BehaviorServiceResizeControls();
    internal static string get_DesignerShortcutDockInParent();
    internal static string get_DesignerShortcutUndockInParent();
    internal static string get_ControlDesigner_WndProcException();
    internal static string get_lockedDescr();
    internal static string get_InvalidArgument();
    internal static string get_InvalidBoundArgument();
    internal static string get_SerializerFieldTargetEvalFailed();
    internal static string get_SerializerInvalidArrayRank();
    internal static string get_SerializerLostStatements();
    internal static string get_SerializerNoRootExpression();
    internal static string get_SerializerNoSerializerForComponent();
    internal static string get_SerializerNoSuchEvent();
    internal static string get_SerializerNoSuchField();
    internal static string get_SerializerNoSuchProperty();
    internal static string get_SerializerNullNestedProperty();
    internal static string get_SerializerPropertyGenFailed();
    internal static string get_SerializerTypeNotFound();
    internal static string get_SerializerUndeclaredName();
    internal static string get_StandardMenuAbout();
    internal static string get_StandardMenuContents();
    internal static string get_StandardMenuCopy();
    internal static string get_StandardMenuCreateDesc();
    internal static string get_StandardMenuCustomize();
    internal static string get_StandardMenuCut();
    internal static string get_StandardMenuEdit();
    internal static string get_StandardMenuExit();
    internal static string get_StandardMenuFile();
    internal static string get_StandardMenuHelp();
    internal static string get_StandardMenuIndex();
    internal static string get_StandardMenuNew();
    internal static string get_StandardMenuOpen();
    internal static string get_StandardMenuOptions();
    internal static string get_StandardMenuPaste();
    internal static string get_StandardMenuPrint();
    internal static string get_StandardMenuPrintPreview();
    internal static string get_StandardMenuRedo();
    internal static string get_StandardMenuSave();
    internal static string get_StandardMenuSaveAs();
    internal static string get_StandardMenuSearch();
    internal static string get_StandardMenuSelectAll();
    internal static string get_StandardMenuTools();
    internal static string get_StandardMenuUndo();
    internal static string get_StandardToolCut();
    internal static string get_ToolStripActionList_Dock();
    internal static string get_ToolStripActionList_DockDesc();
    internal static string get_ToolStripActionList_GripStyle();
    internal static string get_ToolStripActionList_GripStyleDesc();
    internal static string get_ToolStripActionList_Layout();
    internal static string get_ToolStripActionList_RenderMode();
    internal static string get_ToolStripActionList_RenderModeDesc();
    internal static string get_ToolStripAddingItem();
    internal static string get_ToolStripAllowItemReorderAndAllowDropCannotBeSetToTrue();
    internal static string get_ToolStripCreatingNewItemTransaction();
    internal static string get_ToolStripDesignerEmbedVerb();
    internal static string get_ToolStripDesignerEmbedVerbDesc();
    internal static string get_ToolStripDesignerStandardItemsVerb();
    internal static string get_ToolStripDesignerStandardItemsVerbDesc();
    internal static string get_ToolStripDesignerTemplateNodeEnterText();
    internal static string get_ToolStripDesignerTemplateNodeLabelToolTip();
    internal static string get_ToolStripDesignerTemplateNodeSplitButtonStatusStripAccessibleName();
    internal static string get_ToolStripDesignerTemplateNodeSplitButtonStatusStripToolTip();
    internal static string get_ToolStripDesignerTemplateNodeSplitButtonToolTip();
    internal static string get_ToolStripDesignerToolStripAccessibleName();
    internal static string get_ToolStripDesignerTransactionRemovingItem();
    internal static string get_ToolStripInsertingIntoDropDownTransaction();
    internal static string get_ToolStripItemCollectionEditorVerb();
    internal static string get_ToolStripItemContextMenuInsert();
    internal static string get_ToolStripItemPropertyChangeTransaction();
    internal static string get_ToolStripMorphingItemTransaction();
    internal static string get_ToolStripSeparatorError();
    internal static string get_TypeNotFoundInTargetFramework();
    internal static string get_ContextMenuStripActionList_ShowCheckMargin();
    internal static string get_ContextMenuStripActionList_ShowCheckMarginDesc();
    internal static string get_ContextMenuStripActionList_ShowImageMargin();
    internal static string get_ContextMenuStripActionList_ShowImageMarginDesc();
    internal static string get_SerializationManagerDuplicateComponentDecl();
    internal static string get_SerializationManagerNameInUse();
    internal static string get_SerializationManagerObjectHasName();
    internal static string get_SerializerBadElementTypes();
    internal static string get_SerializerResourceException();
    internal static string get_SerializerResourceExceptionInvariant();
    internal static string get_ToolStripDesignerTransactionAddingItem();
    internal static string get_ToolStripDropDownItemCollectionEditorVerb();
    internal static string get_ToolStripItemContextMenuConvertTo();
    internal static string get_CodeDomComponentSerializationServiceClosedStore();
    internal static string get_CodeDomComponentSerializationServiceDeserializationError();
    internal static string get_CodeDomComponentSerializationServiceUnknownStore();
    internal static string get_ContextMenuAlignToGrid();
    internal static string get_ContextMenuBringToFront();
    internal static string get_ContextMenuCopy();
    internal static string get_ContextMenuCut();
    internal static string get_ContextMenuDelete();
    internal static string get_ContextMenuDocumentOutline();
    internal static string get_ContextMenuLockControls();
    internal static string get_ContextMenuPaste();
    internal static string get_ContextMenuProperties();
    internal static string get_ContextMenuSelect();
    internal static string get_ContextMenuSendToBack();
    internal static string get_ContextMenuViewCode();
    internal static string get_SerializationManagerAlreadyInSession();
    internal static string get_SerializationManagerNoMatchingCtor();
    internal static string get_SerializationManagerNoSession();
    internal static string get_SerializationManagerWithinSession();
    internal static string get_SerializerMemberTypeNotSerializable();
    internal static string get_SerializerTypeAbstract();
    internal static string get_StandardToolHelp();
    internal static string get_ToolStripItemContextMenuSetImage();
    internal static string get_ToolStripSelectMenuItem();
    internal static string get_CodeDomDesignerLoaderPropGenerateMember();
    internal static string get_CodeDomDesignerLoaderPropModifiers();
    internal static string get_LocalizationProviderManualReload();
    internal static string get_LocalizationProviderMissingService();
    internal static string get_BasicDesignerLoaderDifferentHost();
    internal static string get_BasicDesignerLoaderMissingService();
    internal static string get_BasicDesignerLoaderNotInitialized();
    internal static string get_BasicDesignerLoaderAlreadyLoaded();
    internal static string get_CodeDomDesignerLoaderBadSerializationObject();
    internal static string get_CodeDomDesignerLoaderDocumentFailureTypeDesignerNotInstalled();
    internal static string get_CodeDomDesignerLoaderDocumentFailureTypeNotDesignable();
    internal static string get_CodeDomDesignerLoaderDocumentFailureTypeNotFound();
    internal static string get_CodeDomDesignerLoaderDupComponentName();
    internal static string get_CodeDomDesignerLoaderInvalidBlankIdentifier();
    internal static string get_CodeDomDesignerLoaderInvalidIdentifier();
    internal static string get_CodeDomDesignerLoaderNoLanguageSupport();
    internal static string get_CodeDomDesignerLoaderNoRootSerializer();
    internal static string get_CodeDomDesignerLoaderNoRootSerializerWithFailures();
    internal static string get_CodeDomDesignerLoaderNoTypeResolution();
    internal static string get_CodeDomDesignerLoaderSerializerTypeNotFirstType();
    internal static string get_EventBindingServiceBadArgType();
    internal static string get_EventBindingServiceEventReadOnly();
    internal static string get_EventBindingServiceMissingService();
    internal static string get_EventBindingServiceNoSite();
    internal static string get_EventBindingServiceSetValue();
    internal static string get_BinaryEditorAllFiles();
    internal static string get_BinaryEditorFileError();
    internal static string get_BinaryEditorFileName();
    internal static string get_BinaryEditorSaveFile();
    internal static string get_BinaryEditorTitle();
    internal static string get_MaskDescriptorNullOrEmptyRequiredProperty();
    internal static string get_MaskDescriptorNull();
    internal static string get_MaskDescriptorNotMaskFullErrorMsg();
    internal static string get_MaskDescriptorValidatingTypeNone();
    internal static string get_MaskDesignerDialogCustomEntry();
    internal static string get_MaskDesignerDialogDataFormat();
    internal static string get_MaskDesignerDialogDlgCaption();
    internal static string get_MaskDesignerDialogMaskDescription();
    internal static string get_MaskDesignerDialogValidatingType();
    internal static string get_MaskedTextBoxDesignerVerbsSetMaskDesc();
    internal static string get_MaskedTextBoxTextEditorErrorFormatString();
    internal static string get_MaskedTextBoxHintAsciiCharacterExpected();
    internal static string get_MaskedTextBoxHintAlphanumericCharacterExpected();
    internal static string get_MaskedTextBoxHintDigitExpected();
    internal static string get_MaskedTextBoxHintSignedDigitExpected();
    internal static string get_MaskedTextBoxHintLetterExpected();
    internal static string get_MaskedTextBoxHintPromptCharNotAllowed();
    internal static string get_MaskedTextBoxHintUnavailableEditPosition();
    internal static string get_MaskedTextBoxHintNonEditPosition();
    internal static string get_MaskedTextBoxHintPositionOutOfRange();
    internal static string get_MaskedTextBoxHintInvalidInput();
    internal static string get_MenuCommandService_DuplicateCommand();
    internal static string get_AnchorEditorAccName();
    internal static string get_AnchorEditorBottomAccName();
    internal static string get_AnchorEditorLeftAccName();
    internal static string get_AnchorEditorRightAccName();
    internal static string get_AnchorEditorTopAccName();
    internal static string get_bitmapFileDescription();
    internal static string get_ColorEditorAccName();
    internal static string get_ColorEditorPaletteTab();
    internal static string get_ColorEditorStandardTab();
    internal static string get_ColorEditorSystemTab();
    internal static string get_DataSourceLocksItems();
    internal static string get_DockEditorAccName();
    internal static string get_DockEditorBottomAccName();
    internal static string get_DockEditorFillAccName();
    internal static string get_DockEditorLeftAccName();
    internal static string get_DockEditorNoneAccName();
    internal static string get_DockEditorRightAccName();
    internal static string get_DockEditorTopAccName();
    internal static string get_GenericFileFilter();
    internal static string get_GenericOpenFile();
    internal static string get_imageFileDescription();
    internal static string get_ListViewSubItemBaseName();
    internal static string get_metafileFileDescription();
    internal static string get_ShortcutKeys_InvalidKey();
    internal static string get_CollectionEditorCantRemoveItem();
    internal static string get_CollectionEditorCaption();
    internal static string get_CollectionEditorInheritedReadOnlySelection();
    internal static string get_CollectionEditorProperties();
    internal static string get_CollectionEditorPropertiesMultiSelect();
    internal static string get_CollectionEditorPropertiesNone();
    internal static string get_CollectionEditorUndoBatchDesc();
    internal static string get_MultilineStringEditorWatermark();
    internal static string get_ImageCollectionEditorFormText();
    internal static string get_ContentAlignmentEditorAccName();
    internal static string get_ContentAlignmentEditorBottomCenterAccName();
    internal static string get_ContentAlignmentEditorBottomLeftAccName();
    internal static string get_ContentAlignmentEditorBottomRightAccName();
    internal static string get_ContentAlignmentEditorMiddleCenterAccName();
    internal static string get_ContentAlignmentEditorMiddleLeftAccName();
    internal static string get_ContentAlignmentEditorMiddleRightAccName();
    internal static string get_ContentAlignmentEditorTopCenterAccName();
    internal static string get_ContentAlignmentEditorTopLeftAccName();
    internal static string get_ContentAlignmentEditorTopRightAccName();
    internal static string get_LinkAreaEditorCancel();
    internal static string get_LinkAreaEditorCaption();
    internal static string get_LinkAreaEditorDescription();
    internal static string get_LinkAreaEditorOK();
    internal static string get_iconFileDescription();
    internal static string get_SelectedPathEditorLabel();
    internal static string get_BindingFormattingDialogCustomFormat();
    internal static string get_BindingFormattingDialogCustomFormatAccessibleDescription();
    internal static string get_BindingFormattingDialogDecimalPlaces();
    internal static string get_BindingFormattingDialogFormatTypeCurrency();
    internal static string get_BindingFormattingDialogFormatTypeCurrencyExplanation();
    internal static string get_BindingFormattingDialogFormatTypeCustom();
    internal static string get_BindingFormattingDialogFormatTypeCustomExplanation();
    internal static string get_BindingFormattingDialogFormatTypeCustomInvalidFormat();
    internal static string get_BindingFormattingDialogFormatTypeDateTime();
    internal static string get_BindingFormattingDialogFormatTypeDateTimeExplanation();
    internal static string get_BindingFormattingDialogFormatTypeNoFormatting();
    internal static string get_BindingFormattingDialogFormatTypeNoFormattingExplanation();
    internal static string get_BindingFormattingDialogFormatTypeNumeric();
    internal static string get_BindingFormattingDialogFormatTypeNumericExplanation();
    internal static string get_BindingFormattingDialogFormatTypeScientific();
    internal static string get_BindingFormattingDialogFormatTypeScientificExplanation();
    internal static string get_BindingFormattingDialogNullValue();
    internal static string get_BindingFormattingDialogType();
    internal static string get_DataGridView_Cancel();
    internal static string get_DataGridView_OK();
    internal static string get_FormatStringDialogTitle();
    internal static string get_HelpProviderEditorFilter();
    internal static string get_HelpProviderEditorTitle();
    internal static string get_CellStyleBuilderNormalPreviewAccName();
    internal static string get_CellStyleBuilderSelectedPreviewAccName();
    internal static string get_InitialDirectoryEditorLabel();
    internal static string get_Ax_Control();
    internal static string get_AxImportFailed();
    internal static string get_AXNotRegistered();
    internal static string get_ChooseImageDescription();
    internal static string get_ChooseImageDisplayName();
    internal static string get_ClipboardError();
    internal static string get_CommandSetBringToFront();
    internal static string get_CommandSetLockControls();
    internal static string get_CommandSetSendToBack();
    internal static string get_DesignerBatchCreateTool();
    internal static string get_DesignerPropName();
    internal static string get_DesignerCantParentType();
    internal static string get_DragDropDropComponents();
    internal static string get_EditLinesDescription();
    internal static string get_EditLinesDisplayName();
    internal static string get_FailedToCreateComponent();
    internal static string get_ImageListDisplayName();
    internal static string get_ImageListDescription();
    internal static string get_InvokeNodesDialogDisplayName();
    internal static string get_InvokeNodesDialogDescription();
    internal static string get_ItemsCategoryName();
    internal static string get_LinksCategoryName();
    internal static string get_ListViewActionListEditItemsDescription();
    internal static string get_ListViewActionListEditItemsDisplayName();
    internal static string get_ListViewActionListEditColumnsDisplayName();
    internal static string get_ListViewActionListEditColumnsDescription();
    internal static string get_ListViewActionListEditGroupsDisplayName();
    internal static string get_ListViewActionListEditGroupsDescription();
    internal static string get_ListViewActionListViewDisplayName();
    internal static string get_ListViewActionListViewDescription();
    internal static string get_ListViewActionListSmallImagesDisplayName();
    internal static string get_ListViewActionListSmallImagesDescription();
    internal static string get_ListViewActionListLargeImagesDisplayName();
    internal static string get_ListViewActionListLargeImagesDescription();
    internal static string get_ListControlUnboundActionListEditItemsDisplayName();
    internal static string get_ListControlUnboundActionListEditItemsDescription();
    internal static string get_LocalizingCannotAdd();
    internal static string get_MultiLineDescription();
    internal static string get_MultiLineDisplayName();
    internal static string get_ParentControlDesignerGridSizeDescr();
    internal static string get_ParentControlDesignerLassoShortcutRedo();
    internal static string get_PropertiesCategoryName();
    internal static string get_SizeModeDescription();
    internal static string get_SizeModeDisplayName();
    internal static string get_WindowsFormsTabOrderReadOnly();
    internal static string get_AccessibleActionCheck();
    internal static string get_AccessibleActionUncheck();
    internal static string get_ClassComments1();
    internal static string get_ClassComments2();
    internal static string get_ClassComments3();
    internal static string get_ClassComments4();
    internal static string get_ClassDocComment();
    internal static string get_CulturePropertyComment1();
    internal static string get_CulturePropertyComment2();
    internal static string get_InvalidIdentifier();
    internal static string get_MismatchedResourceName();
    internal static string get_NonStringPropertyComment();
    internal static string get_NonStringPropertyDetailedComment();
    internal static string get_ResMgrPropertyComment();
    internal static string get_StringPropertyComment();
    internal static string get_StringPropertyTruncatedComment();
    internal static string get_ExceptionCollectionInvalidArgument();
    internal static string get_DesignerShortcutVerticalOrientation();
    internal static string get_DesignerShortcutHorizontalOrientation();
    internal static string get_TabControlAdd();
    internal static string get_TabControlAddTab();
    internal static string get_TabControlRemove();
    internal static string get_TabControlRemoveTab();
    internal static string get_TabControlInvalidTabPageType();
    internal static string get_TableLayoutPanelDesignerAbsoluteMenu();
    internal static string get_TableLayoutPanelDesignerAddColumn();
    internal static string get_TableLayoutPanelDesignerAddColumnUndoUnit();
    internal static string get_TableLayoutPanelDesignerAddMenu();
    internal static string get_TableLayoutPanelDesignerAddRow();
    internal static string get_TableLayoutPanelDesignerAddRowUndoUnit();
    internal static string get_TableLayoutPanelDesignerAutoSizeMenu();
    internal static string get_TableLayoutPanelDesignerChangeSizeTypeUndoUnit();
    internal static string get_TableLayoutPanelDesignerClearAnchor();
    internal static string get_TableLayoutPanelDesignerClearDock();
    internal static string get_TableLayoutPanelDesignerColMenu();
    internal static string get_TableLayoutPanelDesignerContextMenuCopy();
    internal static string get_TableLayoutPanelDesignerContextMenuCut();
    internal static string get_TableLayoutPanelDesignerContextMenuDelete();
    internal static string get_TableLayoutPanelDesignerControlsSwapped();
    internal static string get_TableLayoutPanelDesignerDeleteMenu();
    internal static string get_TableLayoutPanelDesignerDontBoldLabel();
    internal static string get_TableLayoutPanelDesignerEditRowAndCol();
    internal static string get_TableLayoutPanelDesignerInsertMenu();
    internal static string get_TableLayoutPanelDesignerInvalidColumnRowCount();
    internal static string get_TableLayoutPanelDesignerLabelMenu();
    internal static string get_TableLayoutPanelDesignerPercentageMenu();
    internal static string get_TableLayoutPanelDesignerRemoveColumn();
    internal static string get_TableLayoutPanelDesignerRemoveColumnUndoUnit();
    internal static string get_TableLayoutPanelDesignerRemoveRow();
    internal static string get_TableLayoutPanelDesignerRemoveRowUndoUnit();
    internal static string get_TableLayoutPanelDesignerRowMenu();
    internal static string get_TableLayoutPanelFullDesc();
    internal static string get_TableLayoutPanelRowColResize();
    internal static string get_TableLayoutPanelSpanDesc();
    internal static string get_ImageListActionList_ChooseImagesDescription();
    internal static string get_ImageListActionList_ChooseImagesDisplayName();
    internal static string get_ImageListActionList_ColorDepthDescription();
    internal static string get_ImageListActionList_ColorDepthDisplayName();
    internal static string get_ImageListActionList_ImageSizeDescription();
    internal static string get_ImageListActionList_ImageSizeDisplayName();
}
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.10.36612")]
[SkipLocalsInitAttribute]
internal class System.Text.RegularExpressions.Generated.<RegexGenerator_g>F74B1AE921BCEFE4BA601AA541C7A23B1CA9711EA81E8FE504B5B6446748E035A__SanitizeNameRegex_0 : Regex {
    [NullableAttribute("1")]
internal static <RegexGenerator_g>F74B1AE921BCEFE4BA601AA541C7A23B1CA9711EA81E8FE504B5B6446748E035A__SanitizeNameRegex_0 Instance;
}
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.10.36612")]
internal static class System.Text.RegularExpressions.Generated.<RegexGenerator_g>F74B1AE921BCEFE4BA601AA541C7A23B1CA9711EA81E8FE504B5B6446748E035A__Utilities : object {
    internal static TimeSpan s_defaultTimeout;
    internal static bool s_hasTimeout;
}
internal enum System.Windows.Forms.Design.AdornmentType : Enum {
    public int value__;
    public static AdornmentType GrabHandle;
    public static AdornmentType ContainerSelector;
    public static AdornmentType Maximum;
}
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.AnchorEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
public class System.Windows.Forms.Design.AxImporter : object {
    public AxImporter(Options options);
}
internal class System.Windows.Forms.Design.BaseContextMenuStrip : GroupedContextMenuStrip {
    public BaseContextMenuStrip(IServiceProvider provider, Component component);
    public virtual void RefreshItems();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Windows.Forms.Design.Behavior.Adorner : object {
    [NullableAttribute("2")]
public BehaviorService BehaviorService { get; public set; }
    public bool Enabled { get; public set; }
    internal bool EnabledInternal { get; internal set; }
    public GlyphCollection Glyphs { get; }
    [NullableContextAttribute("2")]
public BehaviorService get_BehaviorService();
    [NullableContextAttribute("2")]
public void set_BehaviorService(BehaviorService value);
    public bool get_Enabled();
    public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
internal bool get_EnabledInternal();
    [CompilerGeneratedAttribute]
internal void set_EnabledInternal(bool value);
    public GlyphCollection get_Glyphs();
    public void Invalidate();
    public void Invalidate(Rectangle rectangle);
    public void Invalidate(Region region);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class System.Windows.Forms.Design.Behavior.Behavior : object {
    [NullableAttribute("1")]
public Cursor Cursor { get; }
    public bool DisableAllCommands { get; }
    protected Behavior(bool callParentBehavior, BehaviorService behaviorService);
    [NullableContextAttribute("1")]
public virtual Cursor get_Cursor();
    public virtual bool get_DisableAllCommands();
    [NullableContextAttribute("1")]
public virtual MenuCommand FindCommand(CommandID commandId);
    [NullableContextAttribute("1")]
public virtual void OnLoseCapture(Glyph g, EventArgs e);
    public virtual bool OnMouseDoubleClick(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual bool OnMouseDown(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual bool OnMouseEnter(Glyph g);
    public virtual bool OnMouseHover(Glyph g, Point mouseLoc);
    public virtual bool OnMouseLeave(Glyph g);
    public virtual bool OnMouseMove(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual bool OnMouseUp(Glyph g, MouseButtons button);
    [NullableContextAttribute("1")]
public virtual void OnDragDrop(Glyph g, DragEventArgs e);
    [NullableContextAttribute("1")]
public virtual void OnDragEnter(Glyph g, DragEventArgs e);
    [NullableContextAttribute("1")]
public virtual void OnDragLeave(Glyph g, EventArgs e);
    [NullableContextAttribute("1")]
public virtual void OnDragOver(Glyph g, DragEventArgs e);
    [NullableContextAttribute("1")]
public virtual void OnGiveFeedback(Glyph g, GiveFeedbackEventArgs e);
    [NullableContextAttribute("1")]
public virtual void OnQueryContinueDrag(Glyph g, QueryContinueDragEventArgs e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs : EventArgs {
    public ICollection DragComponents { get; }
    public BehaviorDragDropEventArgs(ICollection dragComponents);
    [CompilerGeneratedAttribute]
public ICollection get_DragComponents();
}
public class System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler : MulticastDelegate {
    public BehaviorDragDropEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, BehaviorDragDropEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, BehaviorDragDropEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Windows.Forms.Design.Behavior.BehaviorService : object {
    public BehaviorServiceAdornerCollection Adorners { get; }
    internal Control AdornerWindowControl { get; }
    internal int AdornerWindowIndex { get; }
    internal bool HasCapture { get; }
    internal bool UseSnapLines { get; }
    public Graphics AdornerWindowGraphics { get; }
    [NullableAttribute("2")]
public Behavior CurrentBehavior { get; }
    internal bool Dragging { get; }
    internal bool CancelDrag { get; internal set; }
    [NullableAttribute("2")]
internal DesignerActionUI DesignerActionUI { get; internal set; }
    unknown String[] RecentSnapLines {internal set; }
    internal BehaviorService(IServiceProvider serviceProvider, Control windowFrame);
    [CompilerGeneratedAttribute]
public BehaviorServiceAdornerCollection get_Adorners();
    internal Control get_AdornerWindowControl();
    [CompilerGeneratedAttribute]
internal int get_AdornerWindowIndex();
    internal bool get_HasCapture();
    internal bool get_UseSnapLines();
    public Graphics get_AdornerWindowGraphics();
    [NullableContextAttribute("2")]
public Behavior get_CurrentBehavior();
    [CompilerGeneratedAttribute]
internal bool get_Dragging();
    [CompilerGeneratedAttribute]
internal bool get_CancelDrag();
    [CompilerGeneratedAttribute]
internal void set_CancelDrag(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal DesignerActionUI get_DesignerActionUI();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_DesignerActionUI(DesignerActionUI value);
    internal void set_RecentSnapLines(String[] value);
    public sealed virtual void Dispose();
    internal DragDropEffects DoDragDrop(DropSourceBehavior dropSourceBehavior);
    internal void EndDragNotification();
    public Point AdornerWindowPointToScreen(Point p);
    public Point AdornerWindowToScreen();
    public Point ControlToAdornerWindow(Control c);
    public Point MapAdornerWindowPoint(IntPtr handle, Point pt);
    public Rectangle ControlRectInAdornerWindow(Control c);
    [NullableContextAttribute("2")]
public void add_BeginDrag(BehaviorDragDropEventHandler value);
    [NullableContextAttribute("2")]
public void remove_BeginDrag(BehaviorDragDropEventHandler value);
    [NullableContextAttribute("2")]
public void add_EndDrag(BehaviorDragDropEventHandler value);
    [NullableContextAttribute("2")]
public void remove_EndDrag(BehaviorDragDropEventHandler value);
    [NullableContextAttribute("2")]
public void add_Synchronize(EventHandler value);
    [NullableContextAttribute("2")]
public void remove_Synchronize(EventHandler value);
    public Behavior GetNextBehavior(Behavior behavior);
    internal void EnableAllAdorners(bool enabled);
    public void Invalidate();
    public void Invalidate(Rectangle rect);
    public void Invalidate(Region r);
    public void SyncSelection();
    public Behavior PopBehavior(Behavior behavior);
    internal void ProcessPaintMessage(Rectangle paintRect);
    public void PushBehavior(Behavior behavior);
    public void PushCaptureBehavior(Behavior behavior);
    public Point ScreenToAdornerWindow(Point p);
    internal void OnLoseCapture();
    internal void StartDragNotification();
}
[DefaultMemberAttribute("Item")]
public class System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection : CollectionBase {
    public Adorner Item { get; public set; }
    public BehaviorServiceAdornerCollection(BehaviorService behaviorService);
    public BehaviorServiceAdornerCollection(BehaviorServiceAdornerCollection value);
    public BehaviorServiceAdornerCollection(Adorner[] value);
    public Adorner get_Item(int index);
    public void set_Item(int index, Adorner value);
    public int Add(Adorner value);
    public void AddRange(Adorner[] value);
    public void AddRange(BehaviorServiceAdornerCollection value);
    public bool Contains(Adorner value);
    public void CopyTo(Adorner[] array, int index);
    public int IndexOf(Adorner value);
    public void Insert(int index, Adorner value);
    public BehaviorServiceAdornerCollectionEnumerator GetEnumerator();
    public void Remove(Adorner value);
}
public class System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator : object {
    public Adorner Current { get; }
    private object System.Collections.IEnumerator.Current { get; }
    [NullableContextAttribute("1")]
public BehaviorServiceAdornerCollectionEnumerator(BehaviorServiceAdornerCollection mappings);
    public Adorner get_Current();
    private sealed virtual override object System.Collections.IEnumerator.get_Current();
    public bool MoveNext();
    private sealed virtual override bool System.Collections.IEnumerator.MoveNext();
    public void Reset();
    private sealed virtual override void System.Collections.IEnumerator.Reset();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.Windows.Forms.Design.Behavior.ComponentGlyph : Glyph {
    public IComponent RelatedComponent { get; }
    public ComponentGlyph(IComponent relatedComponent, Behavior behavior);
    public ComponentGlyph(IComponent relatedComponent);
    public IComponent get_RelatedComponent();
    public virtual Cursor GetHitTest(Point p);
    [NullableContextAttribute("1")]
public virtual void Paint(PaintEventArgs pe);
}
internal class System.Windows.Forms.Design.Behavior.ContainerSelectorBehavior : Behavior {
    public Control ContainerControl { get; }
    public bool OkToMove { get; public set; }
    public Point InitialDragPoint { get; public set; }
    internal ContainerSelectorBehavior(Control containerControl, IServiceProvider serviceProvider);
    internal ContainerSelectorBehavior(Control containerControl, IServiceProvider serviceProvider, bool setInitialDragPoint);
    public Control get_ContainerControl();
    public bool get_OkToMove();
    public void set_OkToMove(bool value);
    public Point get_InitialDragPoint();
    public void set_InitialDragPoint(Point value);
    public virtual bool OnMouseDown(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual bool OnMouseMove(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual bool OnMouseUp(Glyph g, MouseButtons button);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{GetType().Name}:: Component: {_component}, Cursor: {_hitTestCursor}")]
internal class System.Windows.Forms.Design.Behavior.ContainerSelectorGlyph : Glyph {
    public Rectangle Bounds { get; }
    public Behavior RelatedBehavior { get; }
    internal ContainerSelectorGlyph(Rectangle containerBounds, int glyphSize, int glyphOffset, ContainerSelectorBehavior behavior);
    public virtual Rectangle get_Bounds();
    public Behavior get_RelatedBehavior();
    public virtual Cursor GetHitTest(Point p);
    [NullableContextAttribute("1")]
public virtual void Paint(PaintEventArgs pe);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{GetType().Name, nq}:: Behavior={Behavior.GetType().Name, nq}, {_hitTestCursor}")]
public class System.Windows.Forms.Design.Behavior.ControlBodyGlyph : ComponentGlyph {
    public Rectangle Bounds { get; }
    public ControlBodyGlyph(Rectangle bounds, Cursor cursor, IComponent relatedComponent, ControlDesigner designer);
    public ControlBodyGlyph(Rectangle bounds, Cursor cursor, IComponent relatedComponent, Behavior behavior);
    public virtual Rectangle get_Bounds();
    public virtual Cursor GetHitTest(Point p);
}
internal class System.Windows.Forms.Design.Behavior.DesignerActionBehavior : Behavior {
    internal DesignerActionListCollection ActionLists { get; internal set; }
    internal DesignerActionUI ParentUI { get; }
    internal IComponent RelatedComponent { get; }
    unknown bool IgnoreNextMouseUp {internal set; }
    internal DesignerActionBehavior(IServiceProvider serviceProvider, IComponent relatedComponent, DesignerActionListCollection actionLists, DesignerActionUI parentUI);
    internal DesignerActionListCollection get_ActionLists();
    internal void set_ActionLists(DesignerActionListCollection value);
    internal DesignerActionUI get_ParentUI();
    internal IComponent get_RelatedComponent();
    internal void HideUI();
    internal DesignerActionPanel CreateDesignerActionPanel(IComponent relatedComponent);
    internal void ShowUI(Glyph g);
    internal void set_IgnoreNextMouseUp(bool value);
    public virtual bool OnMouseDoubleClick(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual bool OnMouseDown(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual bool OnMouseUp(Glyph g, MouseButtons button);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.Behavior.DesignerActionGlyph : Glyph {
    internal static int CONTROLOVERLAP_X;
    internal static int CONTROLOVERLAP_Y;
    public Rectangle Bounds { get; }
    public DockStyle DockEdge { get; public set; }
    public bool IsInComponentTray { get; }
    public DesignerActionGlyph(DesignerActionBehavior behavior, Adorner adorner);
    public DesignerActionGlyph(DesignerActionBehavior behavior, Rectangle alternativeBounds, Control alternativeParent);
    public virtual Rectangle get_Bounds();
    public DockStyle get_DockEdge();
    public void set_DockEdge(DockStyle value);
    public bool get_IsInComponentTray();
    public virtual Cursor GetHitTest(Point p);
    internal void InvalidateOwnerLocation();
    internal void Invalidate();
    [NullableContextAttribute("1")]
public virtual void Paint(PaintEventArgs pe);
    internal void UpdateAlternativeBounds(Rectangle newBounds);
}
internal class System.Windows.Forms.Design.Behavior.DesignerActionKeyboardBehavior : Behavior {
    public DesignerActionKeyboardBehavior(DesignerActionPanel panel, IServiceProvider serviceProvider, BehaviorService behaviorService);
    public virtual MenuCommand FindCommand(CommandID commandId);
}
internal class System.Windows.Forms.Design.Behavior.DragAssistanceManager : object {
    internal DragAssistanceManager(IServiceProvider serviceProvider);
    internal DragAssistanceManager(IServiceProvider serviceProvider, List`1<IComponent> dragComponents);
    internal DragAssistanceManager(IServiceProvider serviceProvider, List`1<IComponent> dragComponents, bool resizing);
    internal DragAssistanceManager(IServiceProvider serviceProvider, Graphics graphics, List`1<IComponent> dragComponents, Image backgroundImage, bool ctrlDrag);
    internal DragAssistanceManager(IServiceProvider serviceProvider, Graphics graphics, List`1<IComponent> dragComponents, Image backgroundImage, bool resizing, bool ctrlDrag);
    internal void EraseSnapLines();
    internal Line[] GetRecentLines();
    internal Point OffsetToNearestSnapLocation(Control targetControl, IList targetSnaplines, Point directionOffset);
    internal Point OffsetToNearestSnapLocation(Control targetControl, Point directionOffset);
    internal Point OnMouseMove(Rectangle dragBounds, SnapLine[] snapLines);
    internal Point OnMouseMove(Rectangle dragBounds, SnapLine[] snapLines, Boolean& didSnap, bool shouldSnapHorizontally);
    internal Point OnMouseMove(Rectangle dragBounds);
    internal Point OnMouseMove(Control targetControl, SnapLine[] snapLines, Boolean& didSnap, bool shouldSnapHorizontally);
    internal void RenderSnapLinesInternal(Rectangle dragRect);
    internal void RenderSnapLinesInternal();
    internal void OnMouseUp();
}
internal class System.Windows.Forms.Design.Behavior.DropSourceBehavior : Behavior {
    internal DragDropEffects AllowedEffects { get; }
    internal DataObject DataObject { get; }
    internal DropSourceBehavior(List`1<IComponent> dragComponents, Control source, Point initialMouseLocation);
    internal DragDropEffects get_AllowedEffects();
    internal DataObject get_DataObject();
    internal void GiveFeedback(object sender, GiveFeedbackEventArgs e);
    private sealed virtual override int System.Collections.IComparer.Compare(object x, object y);
    internal List`1<IComponent> GetSortedDragControls(Int32& primaryControlIndex);
    internal void QueryContinueDrag(object sender, QueryContinueDragEventArgs e);
    internal bool ShowHideDragControls(bool show);
    internal void CleanupDrag();
    internal void CleanupDrag(bool clearImages);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class System.Windows.Forms.Design.Behavior.Glyph : object {
    public Behavior Behavior { get; }
    public Rectangle Bounds { get; }
    protected Glyph(Behavior behavior);
    public virtual Behavior get_Behavior();
    public virtual Rectangle get_Bounds();
    public abstract virtual Cursor GetHitTest(Point p);
    [NullableContextAttribute("1")]
public abstract virtual void Paint(PaintEventArgs pe);
    protected void SetBehavior(Behavior behavior);
}
[DefaultMemberAttribute("Item")]
public class System.Windows.Forms.Design.Behavior.GlyphCollection : CollectionBase {
    public Glyph Item { get; public set; }
    public GlyphCollection(GlyphCollection value);
    public GlyphCollection(Glyph[] value);
    public Glyph get_Item(int index);
    public void set_Item(int index, Glyph value);
    public int Add(Glyph value);
    public void AddRange(Glyph[] value);
    public void AddRange(GlyphCollection value);
    public bool Contains(Glyph value);
    public void CopyTo(Glyph[] array, int index);
    public int IndexOf(Glyph value);
    public void Insert(int index, Glyph value);
    public void Remove(Glyph value);
}
public enum System.Windows.Forms.Design.Behavior.GlyphSelectionType : Enum {
    public int value__;
    public static GlyphSelectionType NotSelected;
    public static GlyphSelectionType Selected;
    public static GlyphSelectionType SelectedPrimary;
}
[DebuggerDisplayAttribute("{GetType().Name, nq}:: Behavior={Behavior.GetType().Name, nq}, {rules}, {hitTestCursor}")]
internal class System.Windows.Forms.Design.Behavior.GrabHandleGlyph : SelectionGlyphBase {
    [NullableContextAttribute("2")]
internal GrabHandleGlyph(Rectangle controlBounds, GrabHandleGlyphType type, Behavior behavior, bool primarySelection);
    [NullableContextAttribute("1")]
public virtual void Paint(PaintEventArgs pe);
}
internal enum System.Windows.Forms.Design.Behavior.GrabHandleGlyphType : Enum {
    public int value__;
    public static GrabHandleGlyphType UpperLeft;
    public static GrabHandleGlyphType UpperRight;
    public static GrabHandleGlyphType LowerLeft;
    public static GrabHandleGlyphType LowerRight;
    public static GrabHandleGlyphType MiddleTop;
    public static GrabHandleGlyphType MiddleBottom;
    public static GrabHandleGlyphType MiddleLeft;
    public static GrabHandleGlyphType MiddleRight;
}
internal class System.Windows.Forms.Design.Behavior.LockedBorderGlyph : SelectionGlyphBase {
    internal LockedBorderGlyph(Rectangle controlBounds, SelectionBorderGlyphType type);
    [NullableContextAttribute("1")]
public virtual void Paint(PaintEventArgs pe);
}
internal class System.Windows.Forms.Design.Behavior.LockedHandleGlyph : SelectionGlyphBase {
    internal LockedHandleGlyph(Rectangle controlBounds, bool primarySelection);
    [NullableContextAttribute("1")]
public virtual void Paint(PaintEventArgs pe);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.Behavior.MiniLockedBorderGlyph : SelectionGlyphBase {
    internal SelectionBorderGlyphType Type { get; internal set; }
    internal MiniLockedBorderGlyph(Rectangle controlBounds, SelectionBorderGlyphType type, Behavior behavior, bool primarySelection);
    internal SelectionBorderGlyphType get_Type();
    internal void set_Type(SelectionBorderGlyphType value);
    public virtual void Paint(PaintEventArgs pe);
}
internal class System.Windows.Forms.Design.Behavior.NoResizeHandleGlyph : SelectionGlyphBase {
    [NullableContextAttribute("2")]
internal NoResizeHandleGlyph(Rectangle controlBounds, SelectionRules selRules, bool primarySelection, Behavior behavior);
    [NullableContextAttribute("1")]
public virtual void Paint(PaintEventArgs pe);
}
internal class System.Windows.Forms.Design.Behavior.NoResizeSelectionBorderGlyph : SelectionGlyphBase {
    [NullableContextAttribute("2")]
internal NoResizeSelectionBorderGlyph(Rectangle controlBounds, SelectionRules rules, SelectionBorderGlyphType type, Behavior behavior);
    [NullableContextAttribute("1")]
public virtual void Paint(PaintEventArgs pe);
}
internal class System.Windows.Forms.Design.Behavior.ResizeBehavior : Behavior {
    public Cursor Cursor { get; }
    internal ResizeBehavior(IServiceProvider serviceProvider);
    public virtual Cursor get_Cursor();
    public virtual bool OnMouseDown(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual void OnLoseCapture(Glyph g, EventArgs e);
    internal static int AdjustPixelsForIntegralHeight(Control control, int pixelsMoved);
    public virtual bool OnMouseMove(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual bool OnMouseUp(Glyph g, MouseButtons button);
}
internal class System.Windows.Forms.Design.Behavior.SelectionBorderGlyph : SelectionGlyphBase {
    [NullableContextAttribute("2")]
internal SelectionBorderGlyph(Rectangle controlBounds, SelectionRules rules, SelectionBorderGlyphType type, Behavior behavior);
    [NullableContextAttribute("1")]
public virtual void Paint(PaintEventArgs pe);
}
internal enum System.Windows.Forms.Design.Behavior.SelectionBorderGlyphType : Enum {
    public int value__;
    public static SelectionBorderGlyphType Top;
    public static SelectionBorderGlyphType Bottom;
    public static SelectionBorderGlyphType Left;
    public static SelectionBorderGlyphType Right;
    public static SelectionBorderGlyphType Body;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class System.Windows.Forms.Design.Behavior.SelectionGlyphBase : Glyph {
    protected Rectangle bounds;
    protected Rectangle hitBounds;
    protected Cursor hitTestCursor;
    protected SelectionRules rules;
    public SelectionRules SelectionRules { get; }
    public Cursor HitTestCursor { get; }
    public Rectangle Bounds { get; }
    internal SelectionGlyphBase(Behavior behavior);
    public SelectionRules get_SelectionRules();
    public virtual Cursor GetHitTest(Point p);
    public Cursor get_HitTestCursor();
    public virtual Rectangle get_Bounds();
    [NullableContextAttribute("1")]
public virtual void Paint(PaintEventArgs pe);
}
internal class System.Windows.Forms.Design.Behavior.SelectionManager : object {
    internal Adorner BodyGlyphAdorner { get; }
    internal bool NeedRefresh { get; internal set; }
    internal Adorner SelectionGlyphAdorner { get; }
    public SelectionManager(IServiceProvider serviceProvider, BehaviorService behaviorService);
    internal Adorner get_BodyGlyphAdorner();
    internal bool get_NeedRefresh();
    internal void set_NeedRefresh(bool value);
    internal Adorner get_SelectionGlyphAdorner();
    public sealed virtual void Dispose();
    public void Refresh();
    internal void OnBeginDrag(BehaviorDragDropEventArgs e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Windows.Forms.Design.Behavior.SnapLine : object {
    internal static string Margin;
    internal static string MarginRight;
    internal static string MarginLeft;
    internal static string MarginBottom;
    internal static string MarginTop;
    internal static string Padding;
    internal static string PaddingRight;
    internal static string PaddingLeft;
    internal static string PaddingBottom;
    internal static string PaddingTop;
    [NullableAttribute("2")]
public string Filter { get; }
    public bool IsHorizontal { get; }
    public bool IsVertical { get; }
    public int Offset { get; }
    public SnapLinePriority Priority { get; }
    public SnapLineType SnapLineType { get; }
    public SnapLine(SnapLineType type, int offset);
    [NullableContextAttribute("2")]
public SnapLine(SnapLineType type, int offset, string filter);
    public SnapLine(SnapLineType type, int offset, SnapLinePriority priority);
    [NullableContextAttribute("2")]
public SnapLine(SnapLineType type, int offset, string filter, SnapLinePriority priority);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Filter();
    public bool get_IsHorizontal();
    public bool get_IsVertical();
    [CompilerGeneratedAttribute]
public int get_Offset();
    [CompilerGeneratedAttribute]
public SnapLinePriority get_Priority();
    [CompilerGeneratedAttribute]
public SnapLineType get_SnapLineType();
    public void AdjustOffset(int adjustment);
    public static bool ShouldSnap(SnapLine line1, SnapLine line2);
    public virtual string ToString();
}
public enum System.Windows.Forms.Design.Behavior.SnapLinePriority : Enum {
    public int value__;
    public static SnapLinePriority Low;
    public static SnapLinePriority Medium;
    public static SnapLinePriority High;
    public static SnapLinePriority Always;
}
public enum System.Windows.Forms.Design.Behavior.SnapLineType : Enum {
    public int value__;
    public static SnapLineType Top;
    public static SnapLineType Bottom;
    public static SnapLineType Left;
    public static SnapLineType Right;
    public static SnapLineType Horizontal;
    public static SnapLineType Vertical;
    public static SnapLineType Baseline;
}
internal class System.Windows.Forms.Design.Behavior.TableLayoutPanelBehavior : Behavior {
    internal TableLayoutPanelBehavior(TableLayoutPanel panel, TableLayoutPanelDesigner designer, IServiceProvider serviceProvider);
    public virtual void OnLoseCapture(Glyph g, EventArgs e);
    public virtual bool OnMouseDown(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual bool OnMouseMove(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual bool OnMouseUp(Glyph g, MouseButtons button);
}
internal class System.Windows.Forms.Design.Behavior.TableLayoutPanelResizeGlyph : Glyph {
    public Rectangle Bounds { get; }
    public TableLayoutStyle Style { get; }
    public TableLayoutResizeType Type { get; }
    internal TableLayoutPanelResizeGlyph(Rectangle controlBounds, TableLayoutStyle style, Cursor hitTestCursor, Behavior behavior);
    public virtual Rectangle get_Bounds();
    public TableLayoutStyle get_Style();
    public TableLayoutResizeType get_Type();
    public virtual Cursor GetHitTest(Point p);
    public virtual void Paint(PaintEventArgs pe);
}
internal class System.Windows.Forms.Design.Behavior.ToolboxItemSnapLineBehavior : Behavior {
    public bool IsPushed { get; public set; }
    public ToolboxItemSnapLineBehavior(IServiceProvider serviceProvider, BehaviorService behaviorService);
    public ToolboxItemSnapLineBehavior(IServiceProvider serviceProvider, BehaviorService behaviorService, ControlDesigner controlDesigner);
    public ToolboxItemSnapLineBehavior(IServiceProvider serviceProvider, BehaviorService behaviorService, ControlDesigner controlDesigner, bool allowDragBox);
    public bool get_IsPushed();
    public void set_IsPushed(bool value);
    public virtual void OnDragDrop(Glyph g, DragEventArgs e);
    public void OnBeginDrag();
    public virtual bool OnMouseMove(Glyph g, MouseButtons button, Point mouseLoc);
}
internal class System.Windows.Forms.Design.Behavior.ToolboxSnapDragDropEventArgs : DragEventArgs {
    public SnapDirection SnapDirections { get; }
    public Point Offset { get; }
    [NullableContextAttribute("1")]
public ToolboxSnapDragDropEventArgs(SnapDirection snapDirections, Point offset, DragEventArgs origArgs);
    [CompilerGeneratedAttribute]
public SnapDirection get_SnapDirections();
    [CompilerGeneratedAttribute]
public Point get_Offset();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.BorderSidesEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
internal class System.Windows.Forms.Design.ButtonBaseDesigner : ControlDesigner {
    public IList SnapLines { get; }
    public virtual void InitializeNewComponent(IDictionary defaultValues);
    public virtual IList get_SnapLines();
}
internal class System.Windows.Forms.Design.ChangeToolStripParentVerb : object {
    internal ChangeToolStripParentVerb(string text, ToolStripDesigner designer);
    public void ChangeParent();
}
internal class System.Windows.Forms.Design.CollectionEditVerbManager : object {
    private IContainer System.ComponentModel.ITypeDescriptorContext.Container { get; }
    public DesignerVerb EditItemsVerb { get; }
    private object System.ComponentModel.ITypeDescriptorContext.Instance { get; }
    private PropertyDescriptor System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor { get; }
    internal CollectionEditVerbManager(string text, ComponentDesigner designer, PropertyDescriptor prop, bool addToDesignerVerbs);
    private sealed virtual override IContainer System.ComponentModel.ITypeDescriptorContext.get_Container();
    public DesignerVerb get_EditItemsVerb();
    private sealed virtual override void System.ComponentModel.ITypeDescriptorContext.OnComponentChanged();
    private sealed virtual override bool System.ComponentModel.ITypeDescriptorContext.OnComponentChanging();
    private sealed virtual override object System.ComponentModel.ITypeDescriptorContext.get_Instance();
    private sealed virtual override PropertyDescriptor System.ComponentModel.ITypeDescriptorContext.get_PropertyDescriptor();
    private sealed virtual override object System.IServiceProvider.GetService(Type serviceType);
    private sealed virtual override void System.Windows.Forms.Design.IWindowsFormsEditorService.CloseDropDown();
    private sealed virtual override void System.Windows.Forms.Design.IWindowsFormsEditorService.DropDownControl(Control control);
    private sealed virtual override DialogResult System.Windows.Forms.Design.IWindowsFormsEditorService.ShowDialog(Form dialog);
}
internal class System.Windows.Forms.Design.ColumnHeaderCollectionEditor : CollectionEditor {
    protected string HelpTopic { get; }
    public ColumnHeaderCollectionEditor(Type type);
    protected virtual string get_HelpTopic();
    protected virtual object SetItems(object editValue, Object[] value);
    internal virtual void OnItemRemoving(object item);
}
internal class System.Windows.Forms.Design.ComboBoxDesigner : ControlDesigner {
    public IList SnapLines { get; }
    public SelectionRules SelectionRules { get; }
    public DesignerActionListCollection ActionLists { get; }
    public virtual IList get_SnapLines();
    protected virtual void Dispose(bool disposing);
    public virtual void Initialize(IComponent component);
    public virtual void InitializeNewComponent(IDictionary defaultValues);
    public virtual SelectionRules get_SelectionRules();
    public virtual DesignerActionListCollection get_ActionLists();
}
internal class System.Windows.Forms.Design.CommandSet : object {
    protected ISite site;
    protected int selCount;
    protected IComponent primarySelection;
    protected bool controlsOnlySelection;
    protected DragAssistanceManager dragManager;
    protected BehaviorService BehaviorService { get; }
    protected IMenuCommandService MenuService { get; }
    protected ISelectionService SelectionService { get; }
    protected int SelectionVersion { get; }
    protected Timer SnapLineTimer { get; }
    public CommandSet(ISite site);
    protected BehaviorService get_BehaviorService();
    protected IMenuCommandService get_MenuService();
    protected ISelectionService get_SelectionService();
    protected int get_SelectionVersion();
    protected Timer get_SnapLineTimer();
    public virtual void Dispose();
    protected void EndDragManager();
    internal static bool ExecuteSafely(Action action, bool throwOnException);
    protected virtual ICollection GetCopySelection();
    protected static PropertyDescriptor GetProperty(object comp, string propName);
    protected virtual object GetService(Type serviceType);
    protected virtual void GetSnapInformation(IDesignerHost host, IComponent component, Size& snapSize, IComponent& snapComponent, PropertyDescriptor& snapProperty);
    protected bool CanCheckout(IComponent comp);
    protected virtual bool OnKeyCancel(object sender);
    protected void OnKeyDefault(object sender, EventArgs e);
    protected virtual void OnKeyMove(object sender, EventArgs e);
    protected void OnMenuAlignByPrimary(object sender, EventArgs e);
    protected void OnMenuAlignToGrid(object sender, EventArgs e);
    protected void OnMenuCenterSelection(object sender, EventArgs e);
    protected void OnMenuCopy(object sender, EventArgs e);
    protected void OnMenuCut(object sender, EventArgs e);
    protected void OnMenuDelete(object sender, EventArgs e);
    protected void OnMenuPaste(object sender, EventArgs e);
    protected void OnMenuSelectAll(object sender, EventArgs e);
    protected void OnMenuShowGrid(object sender, EventArgs e);
    protected void OnMenuSizingCommand(object sender, EventArgs e);
    protected void OnMenuSizeToGrid(object sender, EventArgs e);
    protected void OnMenuDesignerProperties(object sender, EventArgs e);
    protected void OnMenuSnapToGrid(object sender, EventArgs e);
    protected void OnMenuSpacingCommand(object sender, EventArgs e);
    protected void OnSelectionChanged(object sender, EventArgs e);
    protected void OnStatusAlways(object sender, EventArgs e);
    protected void OnStatusAnySelection(object sender, EventArgs e);
    protected void OnStatusCopy(object sender, EventArgs e);
    protected void OnStatusCut(object sender, EventArgs e);
    protected void OnStatusDelete(object sender, EventArgs e);
    protected void OnStatusPaste(object sender, EventArgs e);
    protected virtual void OnStatusSelectAll(object sender, EventArgs e);
    protected virtual void OnUpdateCommandStatus();
}
public enum System.Windows.Forms.Design.ComponentActionsType : Enum {
    public int value__;
    public static ComponentActionsType All;
    public static ComponentActionsType Component;
    public static ComponentActionsType Service;
}
public class System.Windows.Forms.Design.ComponentDocumentDesigner : ComponentDesigner {
    public Control Control { get; }
    public bool TrayAutoArrange { get; public set; }
    public bool TrayLargeIcon { get; public set; }
    private bool System.Windows.Forms.Design.IOleDragClient.CanModifyComponents { get; }
    private ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies { get; }
    public Control get_Control();
    public bool get_TrayAutoArrange();
    public void set_TrayAutoArrange(bool value);
    public bool get_TrayLargeIcon();
    public void set_TrayLargeIcon(bool value);
    private sealed virtual override bool System.Windows.Forms.Design.IOleDragClient.get_CanModifyComponents();
    private sealed virtual override bool System.Windows.Forms.Design.IOleDragClient.AddComponent(IComponent component, string name, bool firstAdd);
    private sealed virtual override bool System.Windows.Forms.Design.IOleDragClient.IsDropOk(IComponent component);
    private sealed virtual override Control System.Windows.Forms.Design.IOleDragClient.GetDesignerControl();
    private sealed virtual override Control System.Windows.Forms.Design.IOleDragClient.GetControlForComponent(object component);
    private sealed virtual override ViewTechnology[] System.ComponentModel.Design.IRootDesigner.get_SupportedTechnologies();
    public virtual void Initialize(IComponent component);
    private sealed virtual override object System.ComponentModel.Design.IRootDesigner.GetView(ViewTechnology technology);
    private sealed virtual override bool System.Drawing.Design.IToolboxUser.GetToolSupported(ToolboxItem tool);
    private sealed virtual override void System.Drawing.Design.IToolboxUser.ToolPicked(ToolboxItem tool);
    private sealed virtual override bool System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(IComponent component, IDictionary attributes);
    private sealed virtual override bool System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(IComponent component, IDictionary events);
    private sealed virtual override bool System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(IComponent component, IDictionary properties);
    protected virtual void Dispose(bool disposing);
    [CLSCompliantAttribute("False")]
protected virtual bool GetToolSupported(ToolboxItem tool);
    protected virtual void PreFilterProperties(IDictionary properties);
}
[ToolboxItemAttribute("False")]
[DesignTimeVisibleAttribute("False")]
[ProvidePropertyAttribute("Location", "System.ComponentModel.IComponent")]
[ProvidePropertyAttribute("TrayLocation", "System.ComponentModel.IComponent")]
public class System.Windows.Forms.Design.ComponentTray : ScrollableControl {
    internal OleDragDropHandler oleDragDropHandler;
    public bool AutoArrange { get; public set; }
    public int ComponentCount { get; }
    internal GlyphCollection SelectionGlyphs { get; }
    public bool ShowLargeIcons { get; public set; }
    private IComponent System.Windows.Forms.Design.IOleDragClient.Component { get; }
    private bool System.Windows.Forms.Design.IOleDragClient.CanModifyComponents { get; }
    internal SelectionUIHandler DragHandler { get; }
    internal Size ParentGridSize { get; }
    public ComponentTray(IDesigner mainDesigner, IServiceProvider serviceProvider);
    public bool get_AutoArrange();
    public void set_AutoArrange(bool value);
    public int get_ComponentCount();
    internal GlyphCollection get_SelectionGlyphs();
    public bool get_ShowLargeIcons();
    public void set_ShowLargeIcons(bool value);
    private sealed virtual override bool System.ComponentModel.IExtenderProvider.CanExtend(object extendee);
    private sealed virtual override IComponent System.Windows.Forms.Design.IOleDragClient.get_Component();
    private sealed virtual override bool System.Windows.Forms.Design.IOleDragClient.get_CanModifyComponents();
    private sealed virtual override bool System.Windows.Forms.Design.IOleDragClient.AddComponent(IComponent component, string name, bool firstAdd);
    private sealed virtual override bool System.Windows.Forms.Design.IOleDragClient.IsDropOk(IComponent component);
    private sealed virtual override Control System.Windows.Forms.Design.IOleDragClient.GetDesignerControl();
    private sealed virtual override Control System.Windows.Forms.Design.IOleDragClient.GetControlForComponent(object component);
    private sealed virtual override bool System.Windows.Forms.Design.ISelectionUIHandler.BeginDrag(Object[] components, SelectionRules rules, int initialX, int initialY);
    internal virtual OleDragDropHandler GetOleDragHandler();
    internal virtual SelectionUIHandler get_DragHandler();
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIHandler.DragMoved(Object[] components, Rectangle offset);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIHandler.EndDrag(Object[] components, bool cancel);
    private sealed virtual override Rectangle System.Windows.Forms.Design.ISelectionUIHandler.GetComponentBounds(object component);
    private sealed virtual override SelectionRules System.Windows.Forms.Design.ISelectionUIHandler.GetComponentRules(object component);
    private sealed virtual override Rectangle System.Windows.Forms.Design.ISelectionUIHandler.GetSelectionClipRect(object component);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIHandler.OnSelectionDoubleClick(IComponent component);
    private sealed virtual override bool System.Windows.Forms.Design.ISelectionUIHandler.QueryBeginDrag(Object[] components, SelectionRules rules, int initialX, int initialY);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIHandler.ShowContextMenu(IComponent component);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIHandler.OleDragEnter(DragEventArgs de);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIHandler.OleDragDrop(DragEventArgs de);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIHandler.OleDragOver(DragEventArgs de);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIHandler.OleDragLeave();
    public virtual void AddComponent(IComponent component);
    [CLSCompliantAttribute("False")]
protected virtual bool CanCreateComponentFromTool(ToolboxItem tool);
    protected virtual bool CanDisplayComponent(IComponent component);
    [CLSCompliantAttribute("False")]
public void CreateComponentFromTool(ToolboxItem tool);
    protected void DisplayError(Exception e);
    protected virtual void Dispose(bool disposing);
    public IComponent GetNextComponent(IComponent component, bool forward);
    [CategoryAttribute("Layout")]
[LocalizableAttribute("False")]
[BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
[SRDescriptionAttribute("ControlLocationDescr")]
[DesignOnlyAttribute("True")]
public Point GetLocation(IComponent receiver);
    [CategoryAttribute("Layout")]
[LocalizableAttribute("False")]
[BrowsableAttribute("False")]
[SRDescriptionAttribute("ControlLocationDescr")]
[DesignOnlyAttribute("True")]
public Point GetTrayLocation(IComponent receiver);
    protected virtual object GetService(Type serviceType);
    public bool IsTrayComponent(IComponent comp);
    protected virtual void OnMouseDoubleClick(MouseEventArgs e);
    protected virtual void OnGiveFeedback(GiveFeedbackEventArgs gfevent);
    protected virtual void OnDragDrop(DragEventArgs de);
    protected virtual void OnDragEnter(DragEventArgs de);
    protected virtual void OnDragLeave(EventArgs e);
    protected virtual void OnDragOver(DragEventArgs de);
    protected virtual void OnLayout(LayoutEventArgs levent);
    protected virtual void OnLostCapture();
    protected virtual void OnMouseDown(MouseEventArgs e);
    protected virtual void OnMouseMove(MouseEventArgs e);
    protected virtual void OnMouseUp(MouseEventArgs e);
    protected virtual void OnPaint(PaintEventArgs pe);
    protected virtual void OnSetCursor();
    public virtual void RemoveComponent(IComponent component);
    public void SetLocation(IComponent receiver, Point location);
    public void SetTrayLocation(IComponent receiver, Point location);
    protected virtual void WndProc(Message& m);
    internal static TrayControl GetTrayControlFromComponent(IComponent comp);
    internal void FocusDesigner();
    internal Size get_ParentGridSize();
    internal void UpdatePastePositions(List`1<Control> components);
    internal void RearrangeInAutoSlots(Control c, Point pos);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.ContainerSelectorActiveEventArgs : EventArgs {
    public ContainerSelectorActiveEventArgs(object component);
    public ContainerSelectorActiveEventArgs(object component, ContainerSelectorActiveEventArgsType eventType);
}
internal enum System.Windows.Forms.Design.ContainerSelectorActiveEventArgsType : Enum {
    public int value__;
    public static ContainerSelectorActiveEventArgsType Contextmenu;
    public static ContainerSelectorActiveEventArgsType Mouse;
}
internal class System.Windows.Forms.Design.ContainerSelectorActiveEventHandler : MulticastDelegate {
    public ContainerSelectorActiveEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, ContainerSelectorActiveEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, ContainerSelectorActiveEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.ContextMenuStripActionList : DesignerActionList {
    public bool AutoShow { get; public set; }
    public bool ShowImageMargin { get; public set; }
    public bool ShowCheckMargin { get; public set; }
    public ToolStripRenderMode RenderMode { get; public set; }
    public ContextMenuStripActionList(ToolStripDropDownDesigner designer);
    public virtual bool get_AutoShow();
    public virtual void set_AutoShow(bool value);
    public bool get_ShowImageMargin();
    public void set_ShowImageMargin(bool value);
    public bool get_ShowCheckMargin();
    public void set_ShowCheckMargin(bool value);
    public ToolStripRenderMode get_RenderMode();
    public void set_RenderMode(ToolStripRenderMode value);
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.ContextMenuStripGroup : object {
    public List`1<ToolStripItem> Items { get; }
    public ContextMenuStripGroup(string name);
    public List`1<ToolStripItem> get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class System.Windows.Forms.Design.ContextMenuStripGroupCollection : DictionaryBase {
    public ContextMenuStripGroup Item { get; }
    public ContextMenuStripGroup get_Item(string key);
    public bool ContainsKey(string key);
    protected virtual void OnInsert(object key, object value);
    [NullableContextAttribute("2")]
protected virtual void OnSet(object key, object oldValue, object newValue);
}
internal class System.Windows.Forms.Design.ControlCodeDomSerializer : CodeDomSerializer {
    public virtual object Deserialize(IDesignerSerializationManager manager, object codeObject);
    protected virtual bool HasSitedNonReadonlyChildren(Control parent);
    public virtual object Serialize(IDesignerSerializationManager manager, object value);
}
internal class System.Windows.Forms.Design.ControlCommandSet : CommandSet {
    public ControlCommandSet(ISite site);
    public virtual void Dispose();
    protected virtual void GetSnapInformation(IDesignerHost host, IComponent component, Size& snapSize, IComponent& snapComponent, PropertyDescriptor& snapProperty);
    protected virtual bool OnKeyCancel(object sender);
    protected void OnKeySize(object sender, EventArgs e);
    protected void OnKeySelect(object sender, EventArgs e);
    protected virtual void OnKeyMove(object sender, EventArgs e);
    protected void OnMenuLockControls(object sender, EventArgs e);
    protected void OnStatusAnyControls(object sender, EventArgs e);
    protected void OnStatusControlsOnlySelection(object sender, EventArgs e);
    protected void OnStatusControlsOnlySelectionAndGrid(object sender, EventArgs e);
    protected void OnStatusLockControls(object sender, EventArgs e);
    protected void OnStatusMultiSelect(object sender, EventArgs e);
    protected void OnStatusMultiSelectPrimary(object sender, EventArgs e);
    protected void OnStatusShowGrid(object sender, EventArgs e);
    protected void OnStatusSnapToGrid(object sender, EventArgs e);
    protected virtual void OnUpdateCommandStatus();
}
public class System.Windows.Forms.Design.ControlDesigner : ComponentDesigner {
    protected static Point InvalidPoint;
    protected AccessibleObject accessibilityObj;
    protected BehaviorService BehaviorService { get; }
    internal bool ForceVisible { get; internal set; }
    public ICollection AssociatedComponents { get; }
    public AccessibleObject AccessibilityObject { get; }
    public Control Control { get; }
    protected bool EnableDragRect { get; }
    protected IComponent ParentComponent { get; }
    public bool ParticipatesWithSnapLines { get; }
    public bool AutoResizeHandles { get; public set; }
    public SelectionRules SelectionRules { get; }
    internal bool ControlSupportsSnaplines { get; }
    public IList SnapLines { get; }
    protected InheritanceAttribute InheritanceAttribute { get; }
    internal bool IsRootDesigner { get; }
    internal Behavior MoveBehavior { get; }
    internal Behavior StandardBehavior { get; }
    internal bool SerializePerformLayout { get; }
    protected BehaviorService get_BehaviorService();
    [CompilerGeneratedAttribute]
internal bool get_ForceVisible();
    [CompilerGeneratedAttribute]
internal void set_ForceVisible(bool value);
    public virtual ICollection get_AssociatedComponents();
    public virtual AccessibleObject get_AccessibilityObject();
    public virtual Control get_Control();
    protected virtual bool get_EnableDragRect();
    protected virtual IComponent get_ParentComponent();
    public virtual bool get_ParticipatesWithSnapLines();
    [CompilerGeneratedAttribute]
public bool get_AutoResizeHandles();
    [CompilerGeneratedAttribute]
public void set_AutoResizeHandles(bool value);
    public virtual SelectionRules get_SelectionRules();
    internal virtual bool get_ControlSupportsSnaplines();
    internal Point GetOffsetToClientArea();
    public virtual IList get_SnapLines();
    internal IList SnapLinesInternal();
    internal IList SnapLinesInternal(Padding margin);
    protected virtual InheritanceAttribute get_InheritanceAttribute();
    internal bool get_IsRootDesigner();
    public virtual int NumberOfInternalControlDesigners();
    public virtual ControlDesigner InternalControlDesigner(int internalControlIndex);
    protected void BaseWndProc(Message& m);
    public virtual bool CanBeParentedTo(IDesigner parentDesigner);
    protected void DefWndProc(Message& m);
    protected void DisplayError(Exception e);
    protected virtual void Dispose(bool disposing);
    protected bool EnableDesignMode(Control child, string name);
    protected void EnableDragDrop(bool value);
    internal Behavior get_MoveBehavior();
    protected virtual ControlBodyGlyph GetControlGlyph(GlyphSelectionType selectionType);
    internal ControlBodyGlyph GetControlGlyphInternal(GlyphSelectionType selectionType);
    public virtual GlyphCollection GetGlyphs(GlyphSelectionType selectionType);
    internal virtual Behavior get_StandardBehavior();
    internal virtual bool get_SerializePerformLayout();
    protected virtual bool GetHitTest(Point point);
    protected void HookChildControls(Control firstChild);
    public virtual void Initialize(IComponent component);
    public virtual void InitializeExistingComponent(IDictionary defaultValues);
    public virtual void InitializeNewComponent(IDictionary defaultValues);
    [ObsoleteAttribute("This method has been deprecated. Use InitializeNewComponent instead.  https://go.microsoft.com/fwlink/?linkid=14202")]
public virtual void OnSetComponentDefaults();
    protected virtual void OnContextMenu(int x, int y);
    protected virtual void OnCreateHandle();
    protected virtual void OnDragEnter(DragEventArgs de);
    protected virtual void OnDragComplete(DragEventArgs de);
    protected virtual void OnDragDrop(DragEventArgs de);
    protected virtual void OnDragLeave(EventArgs e);
    protected virtual void OnDragOver(DragEventArgs de);
    protected virtual void OnGiveFeedback(GiveFeedbackEventArgs e);
    protected virtual void OnMouseDragBegin(int x, int y);
    protected virtual void OnMouseDragEnd(bool cancel);
    protected virtual void OnMouseDragMove(int x, int y);
    protected virtual void OnMouseEnter();
    protected virtual void OnMouseHover();
    protected virtual void OnMouseLeave();
    protected virtual void OnPaintAdornments(PaintEventArgs pe);
    protected virtual void OnSetCursor();
    protected virtual void PreFilterProperties(IDictionary properties);
    protected void UnhookChildControls(Control firstChild);
    protected virtual void WndProc(Message& m);
    internal void HookChildHandles(HWND firstChild);
    internal void RemoveSubclassedWindow(IntPtr hwnd);
    internal void SetUnhandledException(Control owner, Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.CustomMenuItemCollection : CollectionBase {
    public int Add(ToolStripItem value);
    public void AddRange(ToolStripItem[] value);
    public virtual void RefreshItems();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.DataGridViewCellStyleBuilder : Form {
    [NullableAttribute("2")]
public DataGridViewCellStyle CellStyle { get; public set; }
    unknown ITypeDescriptorContext Context {public set; }
    public DataGridViewCellStyleBuilder(IServiceProvider serviceProvider, IComponent comp);
    [NullableContextAttribute("2")]
public DataGridViewCellStyle get_CellStyle();
    [NullableContextAttribute("2")]
public void set_CellStyle(DataGridViewCellStyle value);
    public void set_Context(ITypeDescriptorContext value);
    protected virtual bool ProcessDialogKey(Keys keyData);
}
internal class System.Windows.Forms.Design.DataGridViewCellStyleEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
internal class System.Windows.Forms.Design.DataGridViewComponentPropertyGridSite : object {
    public IComponent Component { get; }
    public IContainer Container { get; }
    public bool DesignMode { get; }
    public string Name { get; public set; }
    public DataGridViewComponentPropertyGridSite(IServiceProvider sp, IComponent comp);
    public sealed virtual IComponent get_Component();
    public sealed virtual IContainer get_Container();
    public sealed virtual bool get_DesignMode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    public sealed virtual object GetService(Type t);
}
internal class System.Windows.Forms.Design.DataGridViewRowCollectionCodeDomSerializer : CollectionCodeDomSerializer {
    internal static DataGridViewRowCollectionCodeDomSerializer DefaultSerializer { get; }
    internal static DataGridViewRowCollectionCodeDomSerializer get_DefaultSerializer();
    protected virtual object SerializeCollection(IDesignerSerializationManager manager, CodeExpression targetExpression, Type targetType, ICollection originalCollection, ICollection valuesToSerialize);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.DataMemberFieldConverter : TypeConverter {
    [NullableContextAttribute("1")]
public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.DateTimePickerDesigner : ControlDesigner {
    public IList SnapLines { get; }
    public SelectionRules SelectionRules { get; }
    public virtual IList get_SnapLines();
    public virtual SelectionRules get_SelectionRules();
}
internal class System.Windows.Forms.Design.DesignBindingValueUIHandler : object {
    internal Bitmap DataBitmap { get; }
    internal Bitmap get_DataBitmap();
    internal void OnGetUIValueItem(ITypeDescriptorContext context, PropertyDescriptor propDesc, ArrayList valueUIItemList);
    public sealed virtual void Dispose();
}
internal class System.Windows.Forms.Design.DesignerExtenders : object {
    public DesignerExtenders(IExtenderProviderService ex);
    public void Dispose();
}
internal class System.Windows.Forms.Design.DesignerFrame : Control {
    internal Point AutoScrollPosition { get; }
    public DesignerFrame(ISite site);
    internal Point get_AutoScrollPosition();
    protected virtual void Dispose(bool disposing);
    public void Initialize(Control view);
    protected virtual void OnGotFocus(EventArgs e);
    protected virtual void OnLostFocus(EventArgs e);
    protected virtual bool ProcessDialogKey(Keys keyData);
    protected virtual void WndProc(Message& m);
    private sealed virtual override int System.Windows.Forms.Design.IOverlayService.PushOverlay(Control control);
    private sealed virtual override void System.Windows.Forms.Design.IOverlayService.RemoveOverlay(Control control);
    private sealed virtual override void System.Windows.Forms.Design.IOverlayService.InsertOverlay(Control control, int index);
    private sealed virtual override void System.Windows.Forms.Design.IOverlayService.InvalidateOverlays(Rectangle screenRectangle);
    private sealed virtual override void System.Windows.Forms.Design.IOverlayService.InvalidateOverlays(Region screenRegion);
    private sealed virtual override void System.Windows.Forms.Design.ISplitWindowService.AddSplitWindow(Control window);
    private sealed virtual override void System.Windows.Forms.Design.ISplitWindowService.RemoveSplitWindow(Control window);
    private sealed virtual override IEnumerable System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows();
}
public class System.Windows.Forms.Design.DesignerOptions : object {
    [SRCategoryAttribute("DesignerOptions_LayoutSettings")]
[SRDisplayNameAttribute("DesignerOptions_GridSizeDisplayName")]
[SRDescriptionAttribute("DesignerOptions_GridSizeDesc")]
public Size GridSize { get; public set; }
    [SRCategoryAttribute("DesignerOptions_LayoutSettings")]
[SRDisplayNameAttribute("DesignerOptions_ShowGridDisplayName")]
[SRDescriptionAttribute("DesignerOptions_ShowGridDesc")]
public bool ShowGrid { get; public set; }
    [SRCategoryAttribute("DesignerOptions_LayoutSettings")]
[SRDisplayNameAttribute("DesignerOptions_SnapToGridDisplayName")]
[SRDescriptionAttribute("DesignerOptions_SnapToGridDesc")]
public bool SnapToGrid { get; public set; }
    [SRCategoryAttribute("DesignerOptions_LayoutSettings")]
[SRDescriptionAttribute("DesignerOptions_UseSnapLines")]
public bool UseSnapLines { get; public set; }
    [SRCategoryAttribute("DesignerOptions_LayoutSettings")]
[SRDescriptionAttribute("DesignerOptions_UseSmartTags")]
public bool UseSmartTags { get; public set; }
    [SRDisplayNameAttribute("DesignerOptions_ObjectBoundSmartTagAutoShowDisplayName")]
[SRCategoryAttribute("DesignerOptions_ObjectBoundSmartTagSettings")]
[SRDescriptionAttribute("DesignerOptions_ObjectBoundSmartTagAutoShow")]
public bool ObjectBoundSmartTagAutoShow { get; public set; }
    [SRDisplayNameAttribute("DesignerOptions_CodeGenDisplay")]
[SRCategoryAttribute("DesignerOptions_CodeGenSettings")]
[SRDescriptionAttribute("DesignerOptions_OptimizedCodeGen")]
public bool UseOptimizedCodeGeneration { get; public set; }
    [SRDisplayNameAttribute("DesignerOptions_EnableInSituEditingDisplay")]
[SRCategoryAttribute("DesignerOptions_EnableInSituEditingCat")]
[SRDescriptionAttribute("DesignerOptions_EnableInSituEditingDesc")]
[BrowsableAttribute("False")]
public bool EnableInSituEditing { get; public set; }
    public virtual Size get_GridSize();
    public virtual void set_GridSize(Size value);
    [CompilerGeneratedAttribute]
public virtual bool get_ShowGrid();
    [CompilerGeneratedAttribute]
public virtual void set_ShowGrid(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_SnapToGrid();
    [CompilerGeneratedAttribute]
public virtual void set_SnapToGrid(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_UseSnapLines();
    [CompilerGeneratedAttribute]
public virtual void set_UseSnapLines(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_UseSmartTags();
    [CompilerGeneratedAttribute]
public virtual void set_UseSmartTags(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_ObjectBoundSmartTagAutoShow();
    [CompilerGeneratedAttribute]
public virtual void set_ObjectBoundSmartTagAutoShow(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_UseOptimizedCodeGeneration();
    [CompilerGeneratedAttribute]
public virtual void set_UseOptimizedCodeGeneration(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_EnableInSituEditing();
    [CompilerGeneratedAttribute]
public virtual void set_EnableInSituEditing(bool value);
}
internal class System.Windows.Forms.Design.DesignerToolStripControlHost : ToolStripControlHost {
    protected Size DefaultSize { get; }
    public DesignerToolStripControlHost(Control c);
    protected virtual Size get_DefaultSize();
    internal GlyphCollection GetGlyphs(ToolStrip parent, GlyphCollection glyphs, Behavior standardBehavior);
    internal void RefreshSelectionGlyph();
    internal void SelectControl();
}
internal static class System.Windows.Forms.Design.DesignerUtils : object {
    public static int BOXIMAGESIZE;
    public static int SELECTIONBORDERSIZE;
    public static int SELECTIONBORDERHITAREA;
    public static int HANDLESIZE;
    public static int HANDLEOVERLAP;
    public static int SELECTIONBORDEROFFSET;
    public static int NORESIZEHANDLESIZE;
    public static int NORESIZEBORDEROFFSET;
    public static int LOCKHANDLEHEIGHT;
    public static int LOCKHANDLEWIDTH;
    public static int LOCKHANDLEOVERLAP;
    public static int LOCKEDSELECTIONBORDEROFFSET_Y;
    public static int LOCKEDSELECTIONBORDEROFFSET_X;
    public static int LOCKHANDLESIZE_UPPER;
    public static int LOCKHANDLEHEIGHT_LOWER;
    public static int LOCKHANDLEWIDTH_LOWER;
    public static int LOCKHANDLEUPPER_OFFSET;
    public static int LOCKHANDLELOWER_OFFSET;
    public static int CONTAINERGRABHANDLESIZE;
    public static int SNAPELINEDELAY;
    public static int MINIMUMSTYLESIZE;
    public static int MINIMUMSTYLEPERCENT;
    public static int MINCONTROLBITMAPSIZE;
    public static int MINUMUMSTYLESIZEDRAG;
    public static int DEFAULTROWCOUNT;
    public static int DEFAULTCOLUMNCOUNT;
    public static int RESIZEGLYPHSIZE;
    public static int DEFAULTFORMPADDING;
    public static ContentAlignment AnyTopAlignment;
    public static ContentAlignment AnyMiddleAlignment;
    public static Image BoxImage { get; }
    public static Brush HoverBrush { get; }
    public static Size MinDragSize { get; }
    public static Point LastCursorPoint { get; }
    public static Image get_BoxImage();
    public static Brush get_HoverBrush();
    public static Size get_MinDragSize();
    public static Point get_LastCursorPoint();
    public static void SyncBrushes();
    public static void DrawResizeBorder(Graphics g, Region resizeBorder, Color backColor);
    public static void DrawFrame(Graphics g, Region resizeBorder, FrameStyle style, Color backColor);
    public static void DrawGrabHandle(Graphics graphics, Rectangle bounds, bool isPrimary, Glyph glyph);
    public static void DrawNoResizeHandle(Graphics graphics, Rectangle bounds, bool isPrimary, Glyph glyph);
    public static void DrawLockedHandle(Graphics graphics, Rectangle bounds, bool isPrimary, Glyph glyph);
    public static void DrawSelectionBorder(Graphics graphics, Rectangle bounds);
    public static void GenerateSnapShot(Control control, Image& image, int borderSize, double opacity, Color backColor);
    public static Size GetAdornmentDimensions(AdornmentType adornmentType);
    public static bool UseSnapLines(IServiceProvider provider);
    public static object GetOptionValue(IServiceProvider provider, string name);
    public static void GenerateSnapShotWithBitBlt(Control control, Image& image);
    public static bool GenerateSnapShotWithWM_PRINT(Control control, Image& image);
    public static Rectangle GetBoundsForSelectionType(Rectangle originalBounds, SelectionBorderGlyphType type, int borderSize);
    public static Rectangle GetBoundsForSelectionType(Rectangle originalBounds, SelectionBorderGlyphType type);
    public static Rectangle GetBoundsForNoResizeSelectionType(Rectangle originalBounds, SelectionBorderGlyphType type);
    public static int GetTextBaseline(Control ctrl, ContentAlignment alignment);
    public static Rectangle GetBoundsFromToolboxSnapDragDropInfo(ToolboxSnapDragDropEventArgs e, Rectangle originalBounds, bool isMirrored);
    public static string GetUniqueSiteName(IDesignerHost host, string name);
    public static ICollection FilterGenericTypes(ICollection types);
    public static IContainer CheckForNestedContainer(IContainer container);
    public static ICollection CopyDragObjects(ICollection objects, IServiceProvider svcProvider);
    internal static void GetAssociatedComponents(IComponent component, IDesignerHost host, ArrayList list);
    public static void ApplyTreeViewThemeStyles(TreeView treeView);
    public static void ApplyListViewThemeStyles(ListView listView);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.DesignerVerbToolStripMenuItem : ToolStripMenuItem {
    public DesignerVerbToolStripMenuItem(DesignerVerb verb);
    public void RefreshItem();
    protected virtual void OnClick(EventArgs e);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.DockEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
[ToolboxItemFilterAttribute("System.Windows.Forms")]
public class System.Windows.Forms.Design.DocumentDesigner : ScrollableControlDesigner {
    internal static IDesignerSerializationManager manager;
    public SelectionRules SelectionRules { get; }
    private ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies { get; }
    public virtual SelectionRules get_SelectionRules();
    private sealed virtual override Control System.Windows.Forms.Design.IOleDragClient.GetControlForComponent(object component);
    internal virtual bool CanDropComponents(DragEventArgs de);
    protected virtual void Dispose(bool disposing);
    public virtual GlyphCollection GetGlyphs(GlyphSelectionType selectionType);
    protected virtual bool GetToolSupported(ToolboxItem tool);
    public virtual void Initialize(IComponent component);
    protected virtual void OnContextMenu(int x, int y);
    protected virtual void OnCreateHandle();
    protected virtual void PreFilterProperties(IDictionary properties);
    protected virtual void ToolPicked(ToolboxItem tool);
    private sealed virtual override ViewTechnology[] System.ComponentModel.Design.IRootDesigner.get_SupportedTechnologies();
    private sealed virtual override object System.ComponentModel.Design.IRootDesigner.GetView(ViewTechnology technology);
    private sealed virtual override bool System.Drawing.Design.IToolboxUser.GetToolSupported(ToolboxItem tool);
    private sealed virtual override void System.Drawing.Design.IToolboxUser.ToolPicked(ToolboxItem tool);
}
internal class System.Windows.Forms.Design.EditorServiceContext : object {
    private IContainer System.ComponentModel.ITypeDescriptorContext.Container { get; }
    private object System.ComponentModel.ITypeDescriptorContext.Instance { get; }
    private PropertyDescriptor System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor { get; }
    internal EditorServiceContext(ComponentDesigner designer);
    internal EditorServiceContext(ComponentDesigner designer, PropertyDescriptor prop);
    internal EditorServiceContext(ComponentDesigner designer, PropertyDescriptor prop, string newVerbText);
    public static object EditValue(ComponentDesigner designer, object objectToChange, string propName);
    private sealed virtual override IContainer System.ComponentModel.ITypeDescriptorContext.get_Container();
    private sealed virtual override void System.ComponentModel.ITypeDescriptorContext.OnComponentChanged();
    private sealed virtual override bool System.ComponentModel.ITypeDescriptorContext.OnComponentChanging();
    private sealed virtual override object System.ComponentModel.ITypeDescriptorContext.get_Instance();
    private sealed virtual override PropertyDescriptor System.ComponentModel.ITypeDescriptorContext.get_PropertyDescriptor();
    private sealed virtual override object System.IServiceProvider.GetService(Type serviceType);
    private sealed virtual override void System.Windows.Forms.Design.IWindowsFormsEditorService.CloseDropDown();
    private sealed virtual override void System.Windows.Forms.Design.IWindowsFormsEditorService.DropDownControl(Control control);
    private sealed virtual override DialogResult System.Windows.Forms.Design.IWindowsFormsEditorService.ShowDialog(Form dialog);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.Windows.Forms.Design.EventHandlerService : object {
    public Control FocusWindow { get; }
    public EventHandlerService(Control focusWnd);
    public sealed virtual void add_EventHandlerChanged(EventHandler value);
    public sealed virtual void remove_EventHandlerChanged(EventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual Control get_FocusWindow();
    [NullableContextAttribute("1")]
public sealed virtual object GetHandler(Type handlerType);
    [NullableContextAttribute("1")]
public sealed virtual void PopHandler(object handler);
    [NullableContextAttribute("1")]
public sealed virtual void PushHandler(object handler);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.FileNameEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    [NullableContextAttribute("1")]
protected virtual void InitializeDialog(OpenFileDialog openFileDialog);
}
internal class System.Windows.Forms.Design.FlowPanelDesigner : PanelDesigner {
    public bool ParticipatesWithSnapLines { get; }
    public IList SnapLines { get; }
    public virtual bool get_ParticipatesWithSnapLines();
    public virtual IList get_SnapLines();
    internal virtual void AddChildControl(Control newChild);
    protected virtual void OnDragDrop(DragEventArgs de);
}
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.FolderNameEditor : UITypeEditor {
    [NullableContextAttribute("2")]
public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    [NullableContextAttribute("2")]
public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    [NullableContextAttribute("1")]
protected virtual void InitializeDialog(FolderBrowser folderBrowser);
}
internal class System.Windows.Forms.Design.FormatControl : UserControl {
    public bool Dirty { get; public set; }
    public string FormatType { get; public set; }
    public FormatTypeClass FormatTypeItem { get; }
    public string NullValue { get; public set; }
    unknown bool NullValueTextBoxEnabled {public set; }
    [CompilerGeneratedAttribute]
public bool get_Dirty();
    [CompilerGeneratedAttribute]
public void set_Dirty(bool value);
    public string get_FormatType();
    public void set_FormatType(string value);
    public FormatTypeClass get_FormatTypeItem();
    public string get_NullValue();
    public void set_NullValue(string value);
    public void set_NullValueTextBoxEnabled(bool value);
    public static string FormatTypeStringFromFormatString(string formatString);
    protected virtual bool ProcessMnemonic(char charCode);
    public void ResetFormattingInfo();
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.FormatStringDialog : Form {
    unknown DataGridViewCellStyle DataGridViewCellStyle {public set; }
    public bool Dirty { get; }
    unknown ListControl ListControl {public set; }
    public FormatStringDialog(ITypeDescriptorContext context);
    public void set_DataGridViewCellStyle(DataGridViewCellStyle value);
    public bool get_Dirty();
    public void set_ListControl(ListControl value);
    internal void FormatControlFinishedLoading();
    public static void End();
    protected virtual bool ProcessDialogKey(Keys keyData);
}
internal class System.Windows.Forms.Design.FormatStringEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
internal class System.Windows.Forms.Design.FormDocumentDesigner : DocumentDesigner {
    public IList SnapLines { get; }
    public virtual IList get_SnapLines();
    protected virtual void Dispose(bool disposing);
    public virtual void Initialize(IComponent component);
    protected virtual void PreFilterProperties(IDictionary properties);
}
internal class System.Windows.Forms.Design.GroupBoxDesigner : ParentControlDesigner {
    protected Point DefaultControlLocation { get; }
    protected virtual Point get_DefaultControlLocation();
    protected virtual void OnPaintAdornments(PaintEventArgs pe);
    protected virtual void WndProc(Message& m);
}
internal class System.Windows.Forms.Design.GroupedContextMenuStrip : ContextMenuStrip {
    unknown bool Populated {public set; }
    public ContextMenuStripGroupCollection Groups { get; }
    public StringCollection GroupOrdering { get; }
    public void set_Populated(bool value);
    public ContextMenuStripGroupCollection get_Groups();
    public StringCollection get_GroupOrdering();
    public void Populate();
    protected virtual void OnOpening(CancelEventArgs e);
    public virtual void RefreshItems();
}
internal class System.Windows.Forms.Design.HelpNamespaceEditor : FileNameEditor {
    [NullableContextAttribute("1")]
protected virtual void InitializeDialog(OpenFileDialog openFileDialog);
}
[NullableContextAttribute("1")]
public interface System.Windows.Forms.Design.IContainsThemedScrollbarWindows {
    public abstract virtual IEnumerable ThemedScrollbarWindows();
}
[NullableContextAttribute("2")]
internal interface System.Windows.Forms.Design.IEventHandlerService {
    public Control FocusWindow { get; }
    public abstract virtual Control get_FocusWindow();
    [CompilerGeneratedAttribute]
public abstract virtual void add_EventHandlerChanged(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_EventHandlerChanged(EventHandler value);
    [NullableContextAttribute("1")]
public abstract virtual object GetHandler(Type handlerType);
    [NullableContextAttribute("1")]
public abstract virtual void PopHandler(object handler);
    [NullableContextAttribute("1")]
public abstract virtual void PushHandler(object handler);
}
internal class System.Windows.Forms.Design.ImageCollectionEditor : CollectionEditor {
    public ImageCollectionEditor(Type type);
    protected virtual string GetDisplayText(object value);
    protected virtual object CreateInstance(Type type);
    protected virtual CollectionForm CreateCollectionForm();
    protected virtual IList GetObjectsFromInstance(object array);
    protected virtual Object[] GetItems(object editValue);
    protected virtual object SetItems(object editValue, Object[] value);
}
internal class System.Windows.Forms.Design.ImageIndexEditor : UITypeEditor {
    protected ImageList _currentImageList;
    protected WeakReference _currentImageListPropertyReference;
    protected object _currentInstance;
    protected UITypeEditor _imageEditor;
    protected string _parentImageListProperty;
    protected string _imageListPropertyName;
    internal UITypeEditor ImageEditor { get; }
    internal string ParentImageListProperty { get; }
    internal UITypeEditor get_ImageEditor();
    internal string get_ParentImageListProperty();
    protected virtual Image GetImage(ITypeDescriptorContext context, int index, string key, bool useIntIndex);
    public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    public virtual void PaintValue(PaintValueEventArgs e);
    internal static PropertyDescriptor GetImageListProperty(PropertyDescriptor currentComponent, Object& instance);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.ImageListActionList : DesignerActionList {
    public ColorDepth ColorDepth { get; public set; }
    public Size ImageSize { get; public set; }
    public ImageListActionList(ImageListDesigner designer);
    public void ChooseImages();
    public ColorDepth get_ColorDepth();
    public void set_ColorDepth(ColorDepth value);
    public Size get_ImageSize();
    public void set_ImageSize(Size value);
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Windows.Forms.Design.ImageListCodeDomSerializer : CodeDomSerializer {
    public virtual object Deserialize(IDesignerSerializationManager manager, object codeObject);
    public virtual object Serialize(IDesignerSerializationManager manager, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.ImageListDesigner : ComponentDesigner {
    internal ImageList ImageList { get; }
    public DesignerActionListCollection ActionLists { get; }
    internal ImageList get_ImageList();
    protected virtual void PreFilterProperties(IDictionary properties);
    public virtual DesignerActionListCollection get_ActionLists();
}
[EditorAttribute("System.Windows.Forms.Design.ImageListImageEditor", "System.Drawing.Design.UITypeEditor")]
internal class System.Windows.Forms.Design.ImageListImage : object {
    public string Name { get; public set; }
    [BrowsableAttribute("False")]
public Image Image { get; public set; }
    public float HorizontalResolution { get; }
    public float VerticalResolution { get; }
    public PixelFormat PixelFormat { get; }
    public ImageFormat RawFormat { get; }
    public Size Size { get; }
    public SizeF PhysicalDimension { get; }
    public ImageListImage(Image image);
    public ImageListImage(Image image, string name);
    public string get_Name();
    public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Image get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(Image value);
    public float get_HorizontalResolution();
    public float get_VerticalResolution();
    public PixelFormat get_PixelFormat();
    public ImageFormat get_RawFormat();
    public Size get_Size();
    public SizeF get_PhysicalDimension();
    public static ImageListImage ImageListImageFromStream(Stream stream, bool imageIsIcon);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.ImageListImageEditor : ImageEditor {
    internal static Type[] s_imageExtenders;
    protected virtual Type[] GetImageExtenders();
    [NullableContextAttribute("2")]
public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    protected virtual string GetFileDialogDescription();
    [NullableContextAttribute("2")]
public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    public virtual void PaintValue(PaintValueEventArgs e);
}
[NullableContextAttribute("1")]
internal interface System.Windows.Forms.Design.IMenuStatusHandler {
    public abstract virtual bool OverrideInvoke(MenuCommand cmd);
    public abstract virtual bool OverrideStatus(MenuCommand cmd);
}
[NullableContextAttribute("1")]
internal interface System.Windows.Forms.Design.IMouseHandler {
    public abstract virtual void OnMouseDoubleClick(IComponent component);
    public abstract virtual void OnMouseDown(IComponent component, MouseButtons button, int x, int y);
    public abstract virtual void OnMouseHover(IComponent component);
    public abstract virtual void OnMouseMove(IComponent component, int x, int y);
    public abstract virtual void OnMouseUp(IComponent component, MouseButtons button);
    public abstract virtual void OnSetCursor(IComponent component);
}
internal class System.Windows.Forms.Design.InheritanceUI : object {
    public static Bitmap InheritanceGlyph { get; }
    public static Rectangle InheritanceGlyphRectangle { get; }
    public static Bitmap get_InheritanceGlyph();
    public static Rectangle get_InheritanceGlyphRectangle();
    public void AddInheritedControl(Control c, InheritanceLevel level);
    public void Dispose();
    public void RemoveInheritedControl(Control c);
}
internal class System.Windows.Forms.Design.InitialDirectoryEditor : FolderNameEditor {
    [NullableContextAttribute("1")]
protected virtual void InitializeDialog(FolderBrowser folderBrowser);
}
[NullableContextAttribute("1")]
internal interface System.Windows.Forms.Design.IOleDragClient {
    public IComponent Component { get; }
    public bool CanModifyComponents { get; }
    public abstract virtual IComponent get_Component();
    public abstract virtual bool get_CanModifyComponents();
    public abstract virtual bool AddComponent(IComponent component, string name, bool firstAdd);
    public abstract virtual bool IsDropOk(IComponent component);
    public abstract virtual Control GetDesignerControl();
    public abstract virtual Control GetControlForComponent(object component);
}
[NullableContextAttribute("1")]
internal interface System.Windows.Forms.Design.IOverlayService {
    public abstract virtual int PushOverlay(Control control);
    public abstract virtual void RemoveOverlay(Control control);
    public abstract virtual void InsertOverlay(Control control, int index);
    public abstract virtual void InvalidateOverlays(Rectangle screenRectangle);
    public abstract virtual void InvalidateOverlays(Region screenRegion);
}
[NullableContextAttribute("1")]
internal interface System.Windows.Forms.Design.ISelectionUIHandler {
    public abstract virtual bool BeginDrag(Object[] components, SelectionRules rules, int initialX, int initialY);
    public abstract virtual void DragMoved(Object[] components, Rectangle offset);
    public abstract virtual void EndDrag(Object[] components, bool cancel);
    public abstract virtual Rectangle GetComponentBounds(object component);
    public abstract virtual SelectionRules GetComponentRules(object component);
    public abstract virtual Rectangle GetSelectionClipRect(object component);
    public abstract virtual void OnSelectionDoubleClick(IComponent component);
    public abstract virtual bool QueryBeginDrag(Object[] components, SelectionRules rules, int initialX, int initialY);
    public abstract virtual void ShowContextMenu(IComponent component);
    public abstract virtual void OleDragEnter(DragEventArgs de);
    public abstract virtual void OleDragDrop(DragEventArgs de);
    public abstract virtual void OleDragOver(DragEventArgs de);
    public abstract virtual void OleDragLeave();
}
[NullableContextAttribute("1")]
internal interface System.Windows.Forms.Design.ISelectionUIService {
    public bool Visible { get; public set; }
    public bool Dragging { get; }
    public abstract virtual bool get_Visible();
    public abstract virtual void set_Visible(bool value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_ContainerSelectorActive(ContainerSelectorActiveEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ContainerSelectorActive(ContainerSelectorActiveEventHandler value);
    public abstract virtual void AssignSelectionUIHandler(object component, ISelectionUIHandler handler);
    public abstract virtual void ClearSelectionUIHandler(object component, ISelectionUIHandler handler);
    public abstract virtual bool BeginDrag(SelectionRules rules, int initialX, int initialY);
    public abstract virtual bool get_Dragging();
    public abstract virtual void DragMoved(Rectangle offset);
    public abstract virtual void EndDrag(bool cancel);
    public abstract virtual Object[] FilterSelection(Object[] components, SelectionRules selectionRules);
    public abstract virtual Size GetAdornmentDimensions(AdornmentType adornmentType);
    public abstract virtual bool GetAdornmentHitTest(object component, Point pt);
    public abstract virtual bool GetContainerSelected(object component);
    public abstract virtual SelectionRules GetSelectionRules(object component);
    public abstract virtual SelectionStyles GetSelectionStyle(object component);
    public abstract virtual void SetContainerSelected(object component, bool selected);
    public abstract virtual void SetSelectionStyle(object component, SelectionStyles style);
    public abstract virtual void SyncSelection();
    public abstract virtual void SyncComponent(object component);
}
[NullableContextAttribute("1")]
internal interface System.Windows.Forms.Design.ISplitWindowService {
    public abstract virtual void AddSplitWindow(Control window);
    public abstract virtual void RemoveSplitWindow(Control window);
}
internal interface System.Windows.Forms.Design.ISupportInSituService {
    public bool IgnoreMessages { get; }
    public abstract virtual bool get_IgnoreMessages();
    public abstract virtual void HandleKeyChar();
    public abstract virtual IntPtr GetEditWindow();
}
internal class System.Windows.Forms.Design.ItemTypeToolStripMenuItem : ToolStripMenuItem {
    public static string SystemWindowsFormsNamespace { get; }
    public Type ItemType { get; }
    public bool ConvertTo { get; public set; }
    public Image Image { get; public set; }
    public string Text { get; public set; }
    public ToolboxItem TbxItem { get; public set; }
    public ItemTypeToolStripMenuItem(Type t);
    public static string get_SystemWindowsFormsNamespace();
    public Type get_ItemType();
    public bool get_ConvertTo();
    public void set_ConvertTo(bool value);
    public virtual Image get_Image();
    public virtual void set_Image(Image value);
    public virtual string get_Text();
    public virtual void set_Text(string value);
    public ToolboxItem get_TbxItem();
    public void set_TbxItem(ToolboxItem value);
    protected virtual void Dispose(bool disposing);
}
internal class System.Windows.Forms.Design.LabelDesigner : ControlDesigner {
    public IList SnapLines { get; }
    public SelectionRules SelectionRules { get; }
    public virtual IList get_SnapLines();
    public virtual SelectionRules get_SelectionRules();
}
internal class System.Windows.Forms.Design.LinkAreaEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
internal class System.Windows.Forms.Design.ListBoxDesigner : ControlDesigner {
    public bool IntegralHeight { get; public set; }
    public DockStyle Dock { get; public set; }
    public DesignerActionListCollection ActionLists { get; }
    public bool get_IntegralHeight();
    public void set_IntegralHeight(bool value);
    public DockStyle get_Dock();
    public void set_Dock(DockStyle value);
    protected virtual void PreFilterProperties(IDictionary properties);
    protected virtual void Dispose(bool disposing);
    public virtual void Initialize(IComponent component);
    public virtual void InitializeNewComponent(IDictionary defaultValues);
    protected virtual void OnCreateHandle();
    public virtual DesignerActionListCollection get_ActionLists();
}
internal class System.Windows.Forms.Design.ListControlStringCollectionEditor : StringCollectionEditor {
    public ListControlStringCollectionEditor(Type type);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.ListControlUnboundActionList : DesignerActionList {
    public ListControlUnboundActionList(ComponentDesigner designer);
    public void InvokeItemsDialog();
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.ListViewActionList : DesignerActionList {
    public View View { get; public set; }
    public ImageList LargeImageList { get; public set; }
    public ImageList SmallImageList { get; public set; }
    [NullableContextAttribute("1")]
public ListViewActionList(ComponentDesigner designer);
    public void InvokeItemsDialog();
    public void InvokeColumnsDialog();
    public void InvokeGroupsDialog();
    public View get_View();
    public void set_View(View value);
    public ImageList get_LargeImageList();
    public void set_LargeImageList(ImageList value);
    public ImageList get_SmallImageList();
    public void set_SmallImageList(ImageList value);
    [NullableContextAttribute("1")]
public virtual DesignerActionItemCollection GetSortedActionItems();
}
internal class System.Windows.Forms.Design.ListViewDesigner : ControlDesigner {
    public ICollection AssociatedComponents { get; }
    public DesignerActionListCollection ActionLists { get; }
    public virtual ICollection get_AssociatedComponents();
    protected virtual bool GetHitTest(Point point);
    public virtual void Initialize(IComponent component);
    protected virtual void PreFilterProperties(IDictionary properties);
    protected virtual void WndProc(Message& m);
    public virtual DesignerActionListCollection get_ActionLists();
}
internal class System.Windows.Forms.Design.ListViewGroupCollectionEditor : CollectionEditor {
    public ListViewGroupCollectionEditor(Type type);
    protected virtual object CreateInstance(Type itemType);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
}
internal class System.Windows.Forms.Design.ListViewItemCollectionEditor : CollectionEditor {
    public ListViewItemCollectionEditor(Type type);
    protected virtual string GetDisplayText(object value);
}
internal class System.Windows.Forms.Design.ListViewSubItemCollectionEditor : CollectionEditor {
    public ListViewSubItemCollectionEditor(Type type);
    protected virtual object CreateInstance(Type type);
    protected virtual string GetDisplayText(object value);
    protected virtual Object[] GetItems(object editValue);
    protected virtual object SetItems(object editValue, Object[] value);
}
public abstract class System.Windows.Forms.Design.MaskDescriptor : object {
    public string Mask { get; }
    public string Name { get; }
    public string Sample { get; }
    public Type ValidatingType { get; }
    public CultureInfo Culture { get; }
    public abstract virtual string get_Mask();
    public abstract virtual string get_Name();
    public abstract virtual string get_Sample();
    public abstract virtual Type get_ValidatingType();
    public virtual CultureInfo get_Culture();
    public static bool IsValidMaskDescriptor(MaskDescriptor maskDescriptor);
    public static bool IsValidMaskDescriptor(MaskDescriptor maskDescriptor, String& validationErrorDescription);
    public virtual bool Equals(object maskDescriptor);
    public virtual int GetHashCode();
    public virtual string ToString();
}
internal class System.Windows.Forms.Design.MaskDescriptorComparer : object {
    public MaskDescriptorComparer(SortType sortType, SortOrder sortOrder);
    public sealed virtual int Compare(MaskDescriptor maskDescriptorA, MaskDescriptor maskDescriptorB);
    public static int GetHashCode(MaskDescriptor maskDescriptor);
    public static bool Equals(MaskDescriptor maskDescriptorA, MaskDescriptor maskDescriptorB);
}
internal class System.Windows.Forms.Design.MaskDescriptorTemplate : MaskDescriptor {
    public string Mask { get; }
    public string Name { get; }
    public string Sample { get; }
    public Type ValidatingType { get; }
    public CultureInfo Culture { get; }
    public MaskDescriptorTemplate(string mask, string name, string sample, Type validatingType, CultureInfo culture);
    public MaskDescriptorTemplate(string mask, string name, string sample, Type validatingType, CultureInfo culture, bool skipValidation);
    public virtual string get_Mask();
    public virtual string get_Name();
    public virtual string get_Sample();
    public virtual Type get_ValidatingType();
    public virtual CultureInfo get_Culture();
    public static List`1<MaskDescriptor> GetLocalizedMaskDescriptors(CultureInfo culture);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.MaskDesignerDialog : Form {
    public string Mask { get; }
    [NullableAttribute("2")]
public Type ValidatingType { get; }
    public IEnumerator MaskDescriptors { get; }
    public MaskDesignerDialog(MaskedTextBox instance, IHelpService helpService);
    public string get_Mask();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Type get_ValidatingType();
    public IEnumerator get_MaskDescriptors();
    public void DiscoverMaskDescriptors(ITypeDiscoveryService discoveryService);
}
internal class System.Windows.Forms.Design.MaskedTextBoxDesigner : TextBoxBaseDesigner {
    public DesignerActionListCollection ActionLists { get; }
    public SelectionRules SelectionRules { get; }
    public DesignerVerbCollection Verbs { get; }
    public virtual DesignerActionListCollection get_ActionLists();
    internal static MaskedTextBox GetDesignMaskedTextBox(MaskedTextBox maskedTextBox);
    internal static string GetMaskInputRejectedErrorMessage(MaskInputRejectedEventArgs e);
    [ObsoleteAttribute("This method has been deprecated. Use InitializeNewComponent instead.  https://go.microsoft.com/fwlink/?linkid=14202")]
public virtual void OnSetComponentDefaults();
    protected virtual void PreFilterProperties(IDictionary properties);
    public virtual SelectionRules get_SelectionRules();
    public virtual DesignerVerbCollection get_Verbs();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.MaskedTextBoxDesignerActionList : DesignerActionList {
    public MaskedTextBoxDesignerActionList(MaskedTextBoxDesigner designer);
    public void SetMask();
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
internal class System.Windows.Forms.Design.MaskedTextBoxTextEditor : UITypeEditor {
    public bool IsDropDownResizable { get; }
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    public virtual bool get_IsDropDownResizable();
}
internal class System.Windows.Forms.Design.MaskedTextBoxTextEditorDropDown : UserControl {
    public string Value { get; }
    public MaskedTextBoxTextEditorDropDown(MaskedTextBox maskedTextBox);
    public string get_Value();
    protected virtual bool ProcessDialogKey(Keys keyData);
}
internal class System.Windows.Forms.Design.MaskPropertyEditor : UITypeEditor {
    internal static string EditMask(ITypeDiscoveryService discoveryService, IUIService uiService, MaskedTextBox instance, IHelpService helpService);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
public class System.Windows.Forms.Design.MenuCommands : StandardCommands {
    public static CommandID SelectionMenu;
    public static CommandID ContainerMenu;
    public static CommandID TraySelectionMenu;
    public static CommandID ComponentTrayMenu;
    public static CommandID DesignerProperties;
    public static CommandID KeyCancel;
    public static CommandID KeyReverseCancel;
    public static CommandID KeyInvokeSmartTag;
    public static CommandID KeyDefaultAction;
    public static CommandID KeyMoveUp;
    public static CommandID KeyMoveDown;
    public static CommandID KeyMoveLeft;
    public static CommandID KeyMoveRight;
    public static CommandID KeyNudgeUp;
    public static CommandID KeyNudgeDown;
    public static CommandID KeyNudgeLeft;
    public static CommandID KeyNudgeRight;
    public static CommandID KeySizeWidthIncrease;
    public static CommandID KeySizeHeightIncrease;
    public static CommandID KeySizeWidthDecrease;
    public static CommandID KeySizeHeightDecrease;
    public static CommandID KeyNudgeWidthIncrease;
    public static CommandID KeyNudgeHeightIncrease;
    public static CommandID KeyNudgeWidthDecrease;
    public static CommandID KeyNudgeHeightDecrease;
    public static CommandID KeySelectNext;
    public static CommandID KeySelectPrevious;
    public static CommandID KeyTabOrderSelect;
    public static CommandID EditLabel;
    public static CommandID KeyHome;
    public static CommandID KeyEnd;
    public static CommandID KeyShiftHome;
    public static CommandID KeyShiftEnd;
    public static CommandID SetStatusText;
    public static CommandID SetStatusRectangle;
}
internal class System.Windows.Forms.Design.MonthCalendarDesigner : ControlDesigner {
    public SelectionRules SelectionRules { get; }
    public virtual SelectionRules get_SelectionRules();
}
internal class System.Windows.Forms.Design.NewItemsContextMenuStrip : GroupedContextMenuStrip {
    public NewItemsContextMenuStrip(IComponent component, ToolStripItem currentItem, EventHandler onClick, bool convertTo, IServiceProvider serviceProvider);
    protected virtual void OnOpening(CancelEventArgs e);
    protected virtual bool ProcessDialogKey(Keys keyData);
}
internal class System.Windows.Forms.Design.NoBorderRenderer : ToolStripProfessionalRenderer {
    [NullableContextAttribute("1")]
protected virtual void OnRenderToolStripBorder(ToolStripRenderEventArgs e);
}
internal class System.Windows.Forms.Design.OleDragDropHandler : object {
    protected static int AllowLocalMoveOnly;
    public static string CF_CODE;
    public static string CF_COMPONENTTYPES;
    public static string CF_TOOLBOXITEM;
    public static string DataFormat { get; }
    public static string ExtraInfoFormat { get; }
    public static string NestedToolboxItemFormat { get; }
    internal IOleDragClient Destination { get; }
    public bool Dragging { get; }
    public static bool FreezePainting { get; }
    public OleDragDropHandler(SelectionUIHandler selectionHandler, IServiceProvider serviceProvider, IOleDragClient client);
    public static string get_DataFormat();
    public static string get_ExtraInfoFormat();
    public static string get_NestedToolboxItemFormat();
    internal IOleDragClient get_Destination();
    protected virtual bool CanDropDataObject(IDataObject dataObj);
    public bool get_Dragging();
    public static bool get_FreezePainting();
    public IComponent[] CreateTool(ToolboxItem tool, Control parent, int x, int y, int width, int height, bool hasLocation, bool hasSize);
    public IComponent[] CreateTool(ToolboxItem tool, Control parent, int x, int y, int width, int height, bool hasLocation, bool hasSize, ToolboxSnapDragDropEventArgs e);
    public bool DoBeginDrag(Object[] components, SelectionRules rules, int initialX, int initialY);
    public void DoEndDrag(Object[] components, bool cancel);
    public void DoOleDragDrop(DragEventArgs de);
    public void DoOleDragEnter(DragEventArgs de);
    public void DoOleDragLeave();
    public void DoOleDragOver(DragEventArgs de);
    public void DoOleGiveFeedback(GiveFeedbackEventArgs e);
    public static Object[] GetDraggingObjects(IDataObject dataObj);
    public static Object[] GetDraggingObjects(DragEventArgs de);
    protected object GetService(Type t);
    protected virtual void OnInitializeComponent(IComponent comp, int x, int y, int width, int height, bool hasLocation, bool hasSize);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.PanelDesigner : ScrollableControlDesigner {
    protected Pen BorderPen { get; }
    protected virtual void DrawBorder(Graphics graphics);
    protected virtual void OnPaintAdornments(PaintEventArgs pe);
    protected Pen get_BorderPen();
}
public class System.Windows.Forms.Design.ParentControlDesigner : ControlDesigner {
    protected bool AllowControlLasso { get; }
    protected bool AllowGenericDragBox { get; }
    protected internal bool AllowSetChildIndexOnDrop { get; }
    protected Point DefaultControlLocation { get; }
    protected bool DrawGrid { get; protected set; }
    protected bool EnableDragRect { get; }
    internal Size ParentGridSize { get; }
    protected Size GridSize { get; protected set; }
    [CLSCompliantAttribute("False")]
protected ToolboxItem MouseDragTool { get; }
    public IList SnapLines { get; }
    private IComponent System.Windows.Forms.Design.IOleDragClient.Component { get; }
    private bool System.Windows.Forms.Design.IOleDragClient.CanModifyComponents { get; }
    protected virtual bool get_AllowControlLasso();
    protected virtual bool get_AllowGenericDragBox();
    protected internal virtual bool get_AllowSetChildIndexOnDrop();
    protected internal virtual bool CanAddComponent(IComponent component);
    protected virtual Point get_DefaultControlLocation();
    protected virtual bool get_DrawGrid();
    protected virtual void set_DrawGrid(bool value);
    protected virtual bool get_EnableDragRect();
    internal Size get_ParentGridSize();
    protected Size get_GridSize();
    protected void set_GridSize(Size value);
    protected ToolboxItem get_MouseDragTool();
    protected virtual Control GetParentForComponent(IComponent component);
    protected void AddPaddingSnapLines(ArrayList& snapLines);
    public virtual IList get_SnapLines();
    internal virtual void AddChildControl(Control newChild);
    internal void AddControl(Control newChild, IDictionary defaultValues);
    protected virtual void Dispose(bool disposing);
    protected static void InvokeCreateTool(ParentControlDesigner toInvoke, ToolboxItem tool);
    public virtual bool CanParent(ControlDesigner controlDesigner);
    public virtual bool CanParent(Control control);
    protected void CreateTool(ToolboxItem tool);
    [CLSCompliantAttribute("False")]
protected void CreateTool(ToolboxItem tool, Point location);
    [CLSCompliantAttribute("False")]
protected void CreateTool(ToolboxItem tool, Rectangle bounds);
    [CLSCompliantAttribute("False")]
protected virtual IComponent[] CreateToolCore(ToolboxItem tool, int x, int y, int width, int height, bool hasLocation, bool hasSize);
    internal Object[] GetComponentsInRect(Rectangle value, bool screenCoords, bool containRect);
    protected Control GetControl(object component);
    protected virtual ControlBodyGlyph GetControlGlyph(GlyphSelectionType selectionType);
    public virtual GlyphCollection GetGlyphs(GlyphSelectionType selectionType);
    internal OleDragDropHandler GetOleDragHandler();
    internal Point GetSnappedPoint(Point pt);
    internal Rectangle GetSnappedRect(Rectangle originalRect, Rectangle dragRect, bool updateSize);
    protected Rectangle GetUpdatedRect(Rectangle originalRect, Rectangle dragRect, bool updateSize);
    public virtual void Initialize(IComponent component);
    public virtual void InitializeNewComponent(IDictionary defaultValues);
    internal void SuspendChangingEvents();
    internal void ResumeChangingEvents();
    internal void ForceComponentChanging();
    protected virtual void OnDragComplete(DragEventArgs de);
    protected virtual void OnDragDrop(DragEventArgs de);
    protected virtual void OnDragEnter(DragEventArgs de);
    protected virtual void OnDragLeave(EventArgs e);
    protected virtual void OnDragOver(DragEventArgs de);
    protected virtual void OnMouseDragBegin(int x, int y);
    protected virtual void OnMouseDragEnd(bool cancel);
    protected virtual void OnMouseDragMove(int x, int y);
    protected virtual void OnPaintAdornments(PaintEventArgs pe);
    protected virtual void OnSetCursor();
    protected virtual void PreFilterProperties(IDictionary properties);
    private sealed virtual override IComponent System.Windows.Forms.Design.IOleDragClient.get_Component();
    private sealed virtual override bool System.Windows.Forms.Design.IOleDragClient.AddComponent(IComponent component, string name, bool firstAdd);
    private sealed virtual override bool System.Windows.Forms.Design.IOleDragClient.get_CanModifyComponents();
    private sealed virtual override bool System.Windows.Forms.Design.IOleDragClient.IsDropOk(IComponent component);
    private sealed virtual override Control System.Windows.Forms.Design.IOleDragClient.GetDesignerControl();
    private sealed virtual override Control System.Windows.Forms.Design.IOleDragClient.GetControlForComponent(object component);
}
internal class System.Windows.Forms.Design.PbrsForward : object {
    public PbrsForward(Control target, IServiceProvider sp);
    public void Dispose();
    private sealed virtual override void System.Windows.Forms.IWindowTarget.OnHandleChange(IntPtr newHandle);
    private sealed virtual override void System.Windows.Forms.IWindowTarget.OnMessage(Message& m);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.PictureBoxActionList : DesignerActionList {
    public PictureBoxSizeMode SizeMode { get; public set; }
    public PictureBoxActionList(PictureBoxDesigner designer);
    public PictureBoxSizeMode get_SizeMode();
    public void set_SizeMode(PictureBoxSizeMode value);
    public void ChooseImage();
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
internal class System.Windows.Forms.Design.PictureBoxDesigner : ControlDesigner {
    public SelectionRules SelectionRules { get; }
    public DesignerActionListCollection ActionLists { get; }
    protected virtual void OnPaintAdornments(PaintEventArgs pe);
    public virtual SelectionRules get_SelectionRules();
    public virtual DesignerActionListCollection get_ActionLists();
}
internal class System.Windows.Forms.Design.PrintDialogDesigner : ComponentDesigner {
    [NullableContextAttribute("1")]
public virtual void InitializeNewComponent(IDictionary defaultValues);
}
internal class System.Windows.Forms.Design.RadioButtonDesigner : ButtonBaseDesigner {
    public virtual void InitializeNewComponent(IDictionary defaultValues);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class System.Windows.Forms.Design.Resources.MaskDesignerDialog : object {
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static AnchorStyles btnCancel_Anchor { get; }
    internal static bool btnCancel_AutoSize { get; }
    internal static Point btnCancel_Location { get; }
    internal static Size btnCancel_Size { get; }
    internal static int btnCancel_TabIndex { get; }
    internal static string btnCancel_Text { get; }
    internal static AnchorStyles btnOK_Anchor { get; }
    internal static bool btnOK_AutoSize { get; }
    internal static Point btnOK_Location { get; }
    internal static Size btnOK_Size { get; }
    internal static int btnOK_TabIndex { get; }
    internal static string btnOK_Text { get; }
    internal static AnchorStyles checkBoxUseValidatingType_Anchor { get; }
    internal static bool checkBoxUseValidatingType_AutoSize { get; }
    internal static Point checkBoxUseValidatingType_Location { get; }
    internal static Size checkBoxUseValidatingType_Size { get; }
    internal static int checkBoxUseValidatingType_TabIndex { get; }
    internal static string checkBoxUseValidatingType_Text { get; }
    internal static int dataFormatHeader_Width { get; }
    internal static AnchorStyles lblHeader_Anchor { get; }
    internal static bool lblHeader_AutoSize { get; }
    internal static Point lblHeader_Location { get; }
    internal static Size lblHeader_Size { get; }
    internal static int lblHeader_TabIndex { get; }
    internal static string lblHeader_Text { get; }
    internal static AnchorStyles lblMask_Anchor { get; }
    internal static bool lblMask_AutoSize { get; }
    internal static Point lblMask_Location { get; }
    internal static Size lblMask_Size { get; }
    internal static int lblMask_TabIndex { get; }
    internal static string lblMask_Text { get; }
    internal static AnchorStyles lblTryIt_Anchor { get; }
    internal static bool lblTryIt_AutoSize { get; }
    internal static Point lblTryIt_Location { get; }
    internal static Size lblTryIt_Size { get; }
    internal static int lblTryIt_TabIndex { get; }
    internal static string lblTryIt_Text { get; }
    internal static AnchorStyles listViewCannedMasks_Anchor { get; }
    internal static string listViewCannedMasks_Columns { get; }
    internal static string listViewCannedMasks_Columns1 { get; }
    internal static string listViewCannedMasks_Columns2 { get; }
    internal static bool listViewCannedMasks_LabelWrap { get; }
    internal static Point listViewCannedMasks_Location { get; }
    internal static Size listViewCannedMasks_Size { get; }
    internal static int listViewCannedMasks_TabIndex { get; }
    internal static int maskDescriptionHeader_Width { get; }
    internal static AnchorStyles maskedTextBox_Anchor { get; }
    internal static Point maskedTextBox_Location { get; }
    internal static Size maskedTextBox_Size { get; }
    internal static int maskedTextBox_TabIndex { get; }
    internal static AnchorStyles maskTryItTable_Anchor { get; }
    internal static bool maskTryItTable_AutoSize { get; }
    internal static int maskTryItTable_ColumnCount { get; }
    internal static string maskTryItTable_LayoutSettings { get; }
    internal static Point maskTryItTable_Location { get; }
    internal static int maskTryItTable_RowCount { get; }
    internal static Size maskTryItTable_Size { get; }
    internal static int maskTryItTable_TabIndex { get; }
    internal static AnchorStyles okCancelTableLayoutPanel_Anchor { get; }
    internal static bool okCancelTableLayoutPanel_AutoSize { get; }
    internal static int okCancelTableLayoutPanel_ColumnCount { get; }
    internal static string okCancelTableLayoutPanel_LayoutSettings { get; }
    internal static Point okCancelTableLayoutPanel_Location { get; }
    internal static int okCancelTableLayoutPanel_RowCount { get; }
    internal static Size okCancelTableLayoutPanel_Size { get; }
    internal static int okCancelTableLayoutPanel_TabIndex { get; }
    internal static AnchorStyles overarchingTableLayoutPanel_Anchor { get; }
    internal static int overarchingTableLayoutPanel_ColumnCount { get; }
    internal static string overarchingTableLayoutPanel_LayoutSettings { get; }
    internal static Point overarchingTableLayoutPanel_Location { get; }
    internal static int overarchingTableLayoutPanel_RowCount { get; }
    internal static Size overarchingTableLayoutPanel_Size { get; }
    internal static int overarchingTableLayoutPanel_TabIndex { get; }
    internal static AnchorStyles txtBoxMask_Anchor { get; }
    internal static Point txtBoxMask_Location { get; }
    internal static Size txtBoxMask_Size { get; }
    internal static int txtBoxMask_TabIndex { get; }
    internal static int validatingTypeHeader_Width { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static AnchorStyles get_btnCancel_Anchor();
    internal static bool get_btnCancel_AutoSize();
    internal static Point get_btnCancel_Location();
    internal static Size get_btnCancel_Size();
    internal static int get_btnCancel_TabIndex();
    internal static string get_btnCancel_Text();
    internal static AnchorStyles get_btnOK_Anchor();
    internal static bool get_btnOK_AutoSize();
    internal static Point get_btnOK_Location();
    internal static Size get_btnOK_Size();
    internal static int get_btnOK_TabIndex();
    internal static string get_btnOK_Text();
    internal static AnchorStyles get_checkBoxUseValidatingType_Anchor();
    internal static bool get_checkBoxUseValidatingType_AutoSize();
    internal static Point get_checkBoxUseValidatingType_Location();
    internal static Size get_checkBoxUseValidatingType_Size();
    internal static int get_checkBoxUseValidatingType_TabIndex();
    internal static string get_checkBoxUseValidatingType_Text();
    internal static int get_dataFormatHeader_Width();
    internal static AnchorStyles get_lblHeader_Anchor();
    internal static bool get_lblHeader_AutoSize();
    internal static Point get_lblHeader_Location();
    internal static Size get_lblHeader_Size();
    internal static int get_lblHeader_TabIndex();
    internal static string get_lblHeader_Text();
    internal static AnchorStyles get_lblMask_Anchor();
    internal static bool get_lblMask_AutoSize();
    internal static Point get_lblMask_Location();
    internal static Size get_lblMask_Size();
    internal static int get_lblMask_TabIndex();
    internal static string get_lblMask_Text();
    internal static AnchorStyles get_lblTryIt_Anchor();
    internal static bool get_lblTryIt_AutoSize();
    internal static Point get_lblTryIt_Location();
    internal static Size get_lblTryIt_Size();
    internal static int get_lblTryIt_TabIndex();
    internal static string get_lblTryIt_Text();
    internal static AnchorStyles get_listViewCannedMasks_Anchor();
    internal static string get_listViewCannedMasks_Columns();
    internal static string get_listViewCannedMasks_Columns1();
    internal static string get_listViewCannedMasks_Columns2();
    internal static bool get_listViewCannedMasks_LabelWrap();
    internal static Point get_listViewCannedMasks_Location();
    internal static Size get_listViewCannedMasks_Size();
    internal static int get_listViewCannedMasks_TabIndex();
    internal static int get_maskDescriptionHeader_Width();
    internal static AnchorStyles get_maskedTextBox_Anchor();
    internal static Point get_maskedTextBox_Location();
    internal static Size get_maskedTextBox_Size();
    internal static int get_maskedTextBox_TabIndex();
    internal static AnchorStyles get_maskTryItTable_Anchor();
    internal static bool get_maskTryItTable_AutoSize();
    internal static int get_maskTryItTable_ColumnCount();
    internal static string get_maskTryItTable_LayoutSettings();
    internal static Point get_maskTryItTable_Location();
    internal static int get_maskTryItTable_RowCount();
    internal static Size get_maskTryItTable_Size();
    internal static int get_maskTryItTable_TabIndex();
    internal static AnchorStyles get_okCancelTableLayoutPanel_Anchor();
    internal static bool get_okCancelTableLayoutPanel_AutoSize();
    internal static int get_okCancelTableLayoutPanel_ColumnCount();
    internal static string get_okCancelTableLayoutPanel_LayoutSettings();
    internal static Point get_okCancelTableLayoutPanel_Location();
    internal static int get_okCancelTableLayoutPanel_RowCount();
    internal static Size get_okCancelTableLayoutPanel_Size();
    internal static int get_okCancelTableLayoutPanel_TabIndex();
    internal static AnchorStyles get_overarchingTableLayoutPanel_Anchor();
    internal static int get_overarchingTableLayoutPanel_ColumnCount();
    internal static string get_overarchingTableLayoutPanel_LayoutSettings();
    internal static Point get_overarchingTableLayoutPanel_Location();
    internal static int get_overarchingTableLayoutPanel_RowCount();
    internal static Size get_overarchingTableLayoutPanel_Size();
    internal static int get_overarchingTableLayoutPanel_TabIndex();
    internal static AnchorStyles get_txtBoxMask_Anchor();
    internal static Point get_txtBoxMask_Location();
    internal static Size get_txtBoxMask_Size();
    internal static int get_txtBoxMask_TabIndex();
    internal static int get_validatingTypeHeader_Width();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.RichTextBoxActionList : DesignerActionList {
    public RichTextBoxActionList(RichTextBoxDesigner designer);
    public void EditLines();
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
internal class System.Windows.Forms.Design.RichTextBoxDesigner : TextBoxBaseDesigner {
    public DesignerActionListCollection ActionLists { get; }
    public virtual void InitializeNewComponent(IDictionary defaultValues);
    public virtual DesignerActionListCollection get_ActionLists();
    protected virtual void PreFilterProperties(IDictionary properties);
}
public class System.Windows.Forms.Design.ScrollableControlDesigner : ParentControlDesigner {
    protected virtual bool GetHitTest(Point pt);
    protected virtual void WndProc(Message& m);
}
internal class System.Windows.Forms.Design.SelectedPathEditor : FolderNameEditor {
    [NullableContextAttribute("1")]
protected virtual void InitializeDialog(FolderBrowser folderBrowser);
}
[FlagsAttribute]
public enum System.Windows.Forms.Design.SelectionRules : Enum {
    public int value__;
    public static SelectionRules None;
    public static SelectionRules Moveable;
    public static SelectionRules Visible;
    public static SelectionRules Locked;
    public static SelectionRules TopSizeable;
    public static SelectionRules BottomSizeable;
    public static SelectionRules LeftSizeable;
    public static SelectionRules RightSizeable;
    public static SelectionRules AllSizeable;
}
[FlagsAttribute]
internal enum System.Windows.Forms.Design.SelectionStyles : Enum {
    public int value__;
    public static SelectionStyles None;
    public static SelectionStyles Selected;
    public static SelectionStyles Active;
}
internal abstract class System.Windows.Forms.Design.SelectionUIHandler : object {
    public virtual bool BeginDrag(Object[] components, SelectionRules rules, int initialX, int initialY);
    public virtual void DragMoved(Object[] components, Rectangle offset);
    public virtual void EndDrag(Object[] components, bool cancel);
    protected abstract virtual IComponent GetComponent();
    protected abstract virtual Control GetControl();
    protected abstract virtual Control GetControl(IComponent component);
    protected abstract virtual Size GetCurrentSnapSize();
    protected abstract virtual object GetService(Type serviceType);
    protected abstract virtual bool GetShouldSnapToGrid();
    public abstract virtual Rectangle GetUpdatedRect(Rectangle orignalRect, Rectangle dragRect, bool updateSize);
    public bool QueryBeginDrag(Object[] components, SelectionRules rules, int initialX, int initialY);
    public abstract virtual void SetCursor();
    public virtual void OleDragEnter(DragEventArgs de);
    public virtual void OleDragDrop(DragEventArgs de);
    public virtual void OleDragOver(DragEventArgs de);
    public virtual void OleDragLeave();
}
internal class System.Windows.Forms.Design.SelectionUIService : Control {
    protected CreateParams CreateParams { get; }
    private bool System.Windows.Forms.Design.ISelectionUIService.Dragging { get; }
    private bool System.Windows.Forms.Design.ISelectionUIService.Visible { get; private set; }
    public SelectionUIService(IDesignerHost host);
    protected virtual CreateParams get_CreateParams();
    protected virtual void Dispose(bool disposing);
    public static string GetTransactionName(SelectionRules rules, Object[] objects);
    protected virtual void OnHandleCreated(EventArgs e);
    protected virtual void OnDragEnter(DragEventArgs devent);
    protected virtual void OnDragOver(DragEventArgs devent);
    protected virtual void OnDragLeave(EventArgs e);
    protected virtual void OnDragDrop(DragEventArgs devent);
    protected virtual void OnDoubleClick(EventArgs devent);
    protected virtual void OnMouseDown(MouseEventArgs me);
    protected virtual void OnMouseMove(MouseEventArgs me);
    protected virtual void OnMouseUp(MouseEventArgs me);
    protected virtual void OnMove(EventArgs e);
    protected virtual void OnPaint(PaintEventArgs e);
    protected virtual void WndProc(Message& m);
    private sealed virtual override bool System.Windows.Forms.Design.ISelectionUIService.get_Dragging();
    private sealed virtual override bool System.Windows.Forms.Design.ISelectionUIService.get_Visible();
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIService.set_Visible(bool value);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIService.add_ContainerSelectorActive(ContainerSelectorActiveEventHandler value);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIService.remove_ContainerSelectorActive(ContainerSelectorActiveEventHandler value);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIService.AssignSelectionUIHandler(object component, ISelectionUIHandler handler);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIService.ClearSelectionUIHandler(object component, ISelectionUIHandler handler);
    private sealed virtual override bool System.Windows.Forms.Design.ISelectionUIService.BeginDrag(SelectionRules rules, int initialX, int initialY);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIService.DragMoved(Rectangle offset);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIService.EndDrag(bool cancel);
    private sealed virtual override Object[] System.Windows.Forms.Design.ISelectionUIService.FilterSelection(Object[] components, SelectionRules selectionRules);
    private sealed virtual override Size System.Windows.Forms.Design.ISelectionUIService.GetAdornmentDimensions(AdornmentType adornmentType);
    private sealed virtual override bool System.Windows.Forms.Design.ISelectionUIService.GetAdornmentHitTest(object component, Point value);
    private sealed virtual override bool System.Windows.Forms.Design.ISelectionUIService.GetContainerSelected(object component);
    private sealed virtual override SelectionRules System.Windows.Forms.Design.ISelectionUIService.GetSelectionRules(object component);
    private sealed virtual override SelectionStyles System.Windows.Forms.Design.ISelectionUIService.GetSelectionStyle(object component);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIService.SetContainerSelected(object component, bool selected);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIService.SetSelectionStyle(object component, SelectionStyles style);
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIService.SyncSelection();
    private sealed virtual override void System.Windows.Forms.Design.ISelectionUIService.SyncComponent(object component);
}
[ExtensionAttribute]
internal static class System.Windows.Forms.Design.ServiceProviderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static T GetService(IServiceProvider serviceProvider);
}
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.ShortcutKeysEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.SplitContainerDesigner : ParentControlDesigner {
    public DesignerActionListCollection ActionLists { get; }
    protected bool AllowControlLasso { get; }
    protected bool DrawGrid { get; }
    public IList SnapLines { get; }
    [NullableAttribute("2")]
internal SplitterPanel Selected { get; internal set; }
    public ICollection AssociatedComponents { get; }
    public virtual DesignerActionListCollection get_ActionLists();
    protected virtual bool get_AllowControlLasso();
    protected virtual bool get_DrawGrid();
    protected virtual Control GetParentForComponent(IComponent component);
    public virtual IList get_SnapLines();
    public virtual int NumberOfInternalControlDesigners();
    [NullableContextAttribute("2")]
public virtual ControlDesigner InternalControlDesigner(int internalControlIndex);
    [NullableContextAttribute("2")]
internal SplitterPanel get_Selected();
    [NullableContextAttribute("2")]
internal void set_Selected(SplitterPanel value);
    public virtual ICollection get_AssociatedComponents();
    protected virtual void OnDragEnter(DragEventArgs de);
    protected virtual IComponent[] CreateToolCore(ToolboxItem tool, int x, int y, int width, int height, bool hasLocation, bool hasSize);
    protected virtual void Dispose(bool disposing);
    protected virtual bool GetHitTest(Point point);
    protected virtual ControlBodyGlyph GetControlGlyph(GlyphSelectionType selectionType);
    public virtual void Initialize(IComponent component);
    protected virtual void OnPaintAdornments(PaintEventArgs pe);
    public virtual bool CanParent(Control control);
    internal void SplitterPanelHover();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.SplitterDesigner : ControlDesigner {
    protected virtual void OnPaintAdornments(PaintEventArgs pe);
    protected virtual void WndProc(Message& m);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.SplitterPanelDesigner : PanelDesigner {
    [NullableAttribute("2")]
protected InheritanceAttribute InheritanceAttribute { get; }
    internal bool Selected { get; internal set; }
    public IList SnapLines { get; }
    public SelectionRules SelectionRules { get; }
    public virtual bool CanBeParentedTo(IDesigner parentDesigner);
    [NullableContextAttribute("2")]
protected virtual InheritanceAttribute get_InheritanceAttribute();
    internal bool get_Selected();
    internal void set_Selected(bool value);
    protected virtual void OnDragEnter(DragEventArgs de);
    protected virtual void OnDragOver(DragEventArgs de);
    protected virtual void OnDragLeave(EventArgs e);
    protected virtual void OnDragDrop(DragEventArgs de);
    protected virtual void OnMouseHover();
    protected virtual void Dispose(bool disposing);
    public virtual void Initialize(IComponent component);
    internal void DrawSelectedBorder();
    internal void EraseBorder();
    internal void DrawWaterMark(Graphics g);
    protected virtual void OnPaintAdornments(PaintEventArgs pe);
    protected virtual void PreFilterProperties(IDictionary properties);
    public virtual IList get_SnapLines();
    public virtual SelectionRules get_SelectionRules();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("708")]
internal class System.Windows.Forms.Design.SRDisplayNameAttribute : DisplayNameAttribute {
    public string DisplayName { get; }
    public SRDisplayNameAttribute(string displayName);
    public virtual string get_DisplayName();
}
internal class System.Windows.Forms.Design.StandardCommandToolStripMenuItem : ToolStripMenuItem {
    public IMenuCommandService MenuService { get; }
    public Image Image { get; public set; }
    public StandardCommandToolStripMenuItem(CommandID menuID, string text, string imageName, IServiceProvider serviceProvider);
    public void RefreshItem();
    public IMenuCommandService get_MenuService();
    public virtual Image get_Image();
    public virtual void set_Image(Image value);
    protected virtual void OnClick(EventArgs e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class System.Windows.Forms.Design.StandardGroups : object {
    public static string Code;
    public static string ZORder;
    public static string Grid;
    public static string Lock;
    public static string Verbs;
    public static string Custom;
    public static string Selection;
    public static string Edit;
    public static string Properties;
}
internal class System.Windows.Forms.Design.StandardMenuStripVerb : object {
    internal StandardMenuStripVerb(ToolStripDesigner designer);
    public void InsertItems();
}
internal class System.Windows.Forms.Design.StatusCommandUI : object {
    public StatusCommandUI(IServiceProvider provider);
    public void SetStatusInformation(Component selectedComponent, Point location);
    public void SetStatusInformation(Component selectedComponent);
    public void SetStatusInformation(Rectangle bounds);
}
internal class System.Windows.Forms.Design.StringArrayEditor : StringCollectionEditor {
    public StringArrayEditor(Type type);
    protected virtual Type CreateCollectionItemType();
    protected virtual Object[] GetItems(object editValue);
    protected virtual object SetItems(object editValue, Object[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.StringCollectionEditor : CollectionEditor {
    protected string HelpTopic { get; }
    public StringCollectionEditor(Type type);
    protected virtual CollectionForm CreateCollectionForm();
    protected virtual string get_HelpTopic();
}
internal class System.Windows.Forms.Design.TabControlDesigner : ParentControlDesigner {
    protected bool AllowControlLasso { get; }
    protected bool DrawGrid { get; }
    public bool ParticipatesWithSnapLines { get; }
    public DesignerVerbCollection Verbs { get; }
    protected virtual bool get_AllowControlLasso();
    protected virtual bool get_DrawGrid();
    public virtual bool get_ParticipatesWithSnapLines();
    public virtual DesignerVerbCollection get_Verbs();
    public virtual void InitializeNewComponent(IDictionary defaultValues);
    public virtual bool CanParent(Control control);
    protected virtual IComponent[] CreateToolCore(ToolboxItem tool, int x, int y, int width, int height, bool hasLocation, bool hasSize);
    protected virtual void Dispose(bool disposing);
    protected virtual bool GetHitTest(Point point);
    internal static TabPage GetTabPageOfComponent(TabControl parent, object comp);
    public virtual void Initialize(IComponent component);
    protected virtual void OnPaintAdornments(PaintEventArgs pe);
    protected virtual void PreFilterProperties(IDictionary properties);
    protected virtual void OnDragEnter(DragEventArgs de);
    protected virtual void OnDragDrop(DragEventArgs de);
    protected virtual void OnDragLeave(EventArgs e);
    protected virtual void OnDragOver(DragEventArgs de);
    protected virtual void OnGiveFeedback(GiveFeedbackEventArgs e);
    protected virtual void WndProc(Message& m);
}
internal class System.Windows.Forms.Design.TableLayoutControlCollectionCodeDomSerializer : CollectionCodeDomSerializer {
    protected virtual object SerializeCollection(IDesignerSerializationManager manager, CodeExpression targetExpression, Type targetType, ICollection originalCollection, ICollection valuesToSerialize);
}
internal class System.Windows.Forms.Design.TableLayoutPanelCodeDomSerializer : CodeDomSerializer {
    public virtual object Deserialize(IDesignerSerializationManager manager, object codeObject);
    public virtual object Serialize(IDesignerSerializationManager manager, object value);
}
internal class System.Windows.Forms.Design.TableLayoutPanelDesigner : FlowPanelDesigner {
    public int RowCount { get; public set; }
    public int ColumnCount { get; public set; }
    internal TableLayoutPanel Table { get; }
    public DesignerVerbCollection Verbs { get; }
    public DesignerActionListCollection ActionLists { get; }
    protected InheritanceAttribute InheritanceAttribute { get; }
    public int get_RowCount();
    public void set_RowCount(int value);
    public int get_ColumnCount();
    public void set_ColumnCount(int value);
    internal TableLayoutPanel get_Table();
    public virtual DesignerVerbCollection get_Verbs();
    public virtual DesignerActionListCollection get_ActionLists();
    protected internal virtual bool CanAddComponent(IComponent component);
    protected virtual void Dispose(bool disposing);
    protected virtual void DrawBorder(Graphics graphics);
    internal void SuspendEnsureAvailableStyles();
    internal void ResumeEnsureAvailableStyles(bool performEnsure);
    public virtual GlyphCollection GetGlyphs(GlyphSelectionType selectionType);
    public virtual void Initialize(IComponent component);
    protected virtual InheritanceAttribute get_InheritanceAttribute();
    public virtual void InitializeNewComponent(IDictionary defaultValues);
    protected virtual IComponent[] CreateToolCore(ToolboxItem tool, int x, int y, int width, int height, bool hasLocation, bool hasSize);
    protected virtual void OnContextMenu(int x, int y);
    protected virtual void OnDragEnter(DragEventArgs de);
    protected virtual void OnDragLeave(EventArgs e);
    protected virtual void OnDragDrop(DragEventArgs de);
    protected virtual void OnDragOver(DragEventArgs de);
    protected virtual void OnMouseDragBegin(int x, int y);
    protected virtual void OnMouseDragMove(int x, int y);
    protected virtual void OnMouseDragEnd(bool cancel);
    internal void InsertRowCol(bool isRow, int index);
    internal void FixUpControlsOnInsert(bool isRow, int index);
    internal void FixUpControlsOnDelete(bool isRow, int index, ArrayList deleteList);
    internal void DeleteRowCol(bool isRow, int index);
    protected virtual void PreFilterProperties(IDictionary properties);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DesignTimeVisibleAttribute("False")]
[ToolboxItemAttribute("False")]
internal class System.Windows.Forms.Design.TabOrder : Control {
    public TabOrder(IDesignerHost host);
    protected virtual void Dispose(bool disposing);
    public virtual void OnMouseDoubleClick(IComponent component);
    public virtual void OnMouseDown(IComponent component, MouseButtons button, int x, int y);
    protected virtual void OnMouseDown(MouseEventArgs e);
    public virtual void OnMouseHover(IComponent component);
    public virtual void OnMouseMove(IComponent component, int x, int y);
    protected virtual void OnMouseMove(MouseEventArgs e);
    public virtual void OnMouseUp(IComponent component, MouseButtons button);
    public virtual void OnSetCursor(IComponent component);
    protected virtual void OnPaint(PaintEventArgs e);
    public sealed virtual bool OverrideInvoke(MenuCommand cmd);
    public sealed virtual bool OverrideStatus(MenuCommand cmd);
}
internal class System.Windows.Forms.Design.TabPageCollectionEditor : CollectionEditor {
    protected virtual object SetItems(object editValue, Object[] value);
    protected virtual object CreateInstance(Type itemType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.TabPageDesigner : PanelDesigner {
    public SelectionRules SelectionRules { get; }
    public virtual bool CanBeParentedTo(IDesigner parentDesigner);
    public virtual SelectionRules get_SelectionRules();
    internal void OnDragDropInternal(DragEventArgs de);
    internal void OnDragEnterInternal(DragEventArgs de);
    internal void OnDragLeaveInternal(EventArgs e);
    internal void OnDragOverInternal(DragEventArgs e);
    internal void OnGiveFeedbackInternal(GiveFeedbackEventArgs e);
    protected virtual ControlBodyGlyph GetControlGlyph(GlyphSelectionType selectionType);
}
internal class System.Windows.Forms.Design.TemplateNodeCustomMenuItemCollection : CustomMenuItemCollection {
    public TemplateNodeCustomMenuItemCollection(IServiceProvider provider, Component currentItem);
}
internal enum System.Windows.Forms.Design.TemplateNodeSelectionState : Enum {
    public int value__;
    public static TemplateNodeSelectionState None;
    public static TemplateNodeSelectionState TemplateNodeSelected;
    public static TemplateNodeSelectionState SplitButtonSelected;
    public static TemplateNodeSelectionState DropDownSelected;
    public static TemplateNodeSelectionState MouseOverLabel;
    public static TemplateNodeSelectionState MouseOverHotRegion;
    public static TemplateNodeSelectionState HotRegionSelected;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.TextBoxActionList : DesignerActionList {
    public bool Multiline { get; public set; }
    public TextBoxActionList(TextBoxDesigner designer);
    public bool get_Multiline();
    public void set_Multiline(bool value);
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.TextBoxBaseDesigner : ControlDesigner {
    public IList SnapLines { get; }
    public SelectionRules SelectionRules { get; }
    public virtual IList get_SnapLines();
    public virtual void InitializeNewComponent(IDictionary defaultValues);
    protected virtual void PreFilterProperties(IDictionary properties);
    public virtual SelectionRules get_SelectionRules();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.TextBoxDesigner : TextBoxBaseDesigner {
    public DesignerActionListCollection ActionLists { get; }
    public virtual DesignerActionListCollection get_ActionLists();
    protected virtual void PreFilterProperties(IDictionary properties);
}
public enum System.Windows.Forms.Design.ThemedScrollbarMode : Enum {
    public int value__;
    public static ThemedScrollbarMode All;
    public static ThemedScrollbarMode None;
    public static ThemedScrollbarMode OnlyTopLevel;
}
public class System.Windows.Forms.Design.ThemedScrollbarWindow : ValueType {
    public IntPtr Handle;
    public ThemedScrollbarMode Mode;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.ToolStripActionList : DesignerActionList {
    public bool AutoShow { get; public set; }
    public DockStyle Dock { get; public set; }
    public ToolStripRenderMode RenderMode { get; public set; }
    public ToolStripGripStyle GripStyle { get; public set; }
    public ToolStripActionList(ToolStripDesigner designer);
    public virtual bool get_AutoShow();
    public virtual void set_AutoShow(bool value);
    public DockStyle get_Dock();
    public void set_Dock(DockStyle value);
    public ToolStripRenderMode get_RenderMode();
    public void set_RenderMode(ToolStripRenderMode value);
    public ToolStripGripStyle get_GripStyle();
    public void set_GripStyle(ToolStripGripStyle value);
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
internal class System.Windows.Forms.Design.ToolStripAdornerWindowService : object {
    internal Control ToolStripAdornerWindowControl { get; }
    public Graphics ToolStripAdornerWindowGraphics { get; }
    internal Adorner DropDownAdorner { get; }
    internal ArrayList DropDowns { get; internal set; }
    internal ToolStripAdornerWindowService(IServiceProvider serviceProvider, Control windowFrame);
    internal Control get_ToolStripAdornerWindowControl();
    public Graphics get_ToolStripAdornerWindowGraphics();
    internal Adorner get_DropDownAdorner();
    public sealed virtual void Dispose();
    public Point AdornerWindowPointToScreen(Point p);
    public Point AdornerWindowToScreen();
    public Point ControlToAdornerWindow(Control c);
    public void Invalidate();
    public void Invalidate(Rectangle rect);
    public void Invalidate(Region r);
    internal ArrayList get_DropDowns();
    internal void set_DropDowns(ArrayList value);
    internal void ProcessPaintMessage(Rectangle paintRect);
}
internal class System.Windows.Forms.Design.ToolStripCodeDomSerializer : ControlCodeDomSerializer {
    protected virtual bool HasSitedNonReadonlyChildren(Control parent);
}
internal class System.Windows.Forms.Design.ToolStripDesigner : ControlDesigner {
    internal static Point s_lastCursorPosition;
    internal static bool s_autoAddNewItems;
    internal static ToolStripItem s_dragItem;
    internal static bool s_shiftState;
    internal static bool s_editTemplateNode;
    public DesignerActionListCollection ActionLists { get; }
    public ICollection AssociatedComponents { get; }
    public bool CacheItems { get; public set; }
    internal bool ControlSupportsSnaplines { get; }
    public bool DontCloseOverflow { get; public set; }
    public Rectangle DragBoxFromMouseDown { get; public set; }
    internal bool EditingCollection { get; internal set; }
    public ToolStripEditorManager EditManager { get; }
    internal ToolStripTemplateNode Editor { get; }
    public DesignerToolStripControlHost EditorNode { get; }
    internal ToolStrip EditorToolStrip { get; internal set; }
    public bool FireSyncSelection { get; public set; }
    public int IndexOfItemUnderMouseToDrag { get; public set; }
    protected InheritanceAttribute InheritanceAttribute { get; }
    public DesignerTransaction InsertTransaction { get; public set; }
    public ArrayList Items { get; }
    public DesignerTransaction NewItemTransaction { get; public set; }
    internal ISelectionService SelectionService { get; }
    public bool SupportEditing { get; }
    protected ToolStrip ToolStrip { get; }
    internal bool SerializePerformLayout { get; }
    internal bool Visible { get; internal set; }
    public virtual DesignerActionListCollection get_ActionLists();
    public virtual ICollection get_AssociatedComponents();
    public bool get_CacheItems();
    public void set_CacheItems(bool value);
    internal virtual bool get_ControlSupportsSnaplines();
    public bool get_DontCloseOverflow();
    public void set_DontCloseOverflow(bool value);
    public Rectangle get_DragBoxFromMouseDown();
    public void set_DragBoxFromMouseDown(Rectangle value);
    internal bool get_EditingCollection();
    internal void set_EditingCollection(bool value);
    public ToolStripEditorManager get_EditManager();
    internal ToolStripTemplateNode get_Editor();
    public DesignerToolStripControlHost get_EditorNode();
    internal ToolStrip get_EditorToolStrip();
    internal void set_EditorToolStrip(ToolStrip value);
    public bool get_FireSyncSelection();
    public void set_FireSyncSelection(bool value);
    public int get_IndexOfItemUnderMouseToDrag();
    public void set_IndexOfItemUnderMouseToDrag(int value);
    protected virtual InheritanceAttribute get_InheritanceAttribute();
    public DesignerTransaction get_InsertTransaction();
    public void set_InsertTransaction(DesignerTransaction value);
    public ArrayList get_Items();
    public DesignerTransaction get_NewItemTransaction();
    public void set_NewItemTransaction(DesignerTransaction value);
    internal ISelectionService get_SelectionService();
    public bool get_SupportEditing();
    protected ToolStrip get_ToolStrip();
    internal virtual bool get_SerializePerformLayout();
    internal bool get_Visible();
    internal void set_Visible(bool value);
    internal ToolStripItem AddNewItem(Type t, string text, bool enterKeyPressed, bool tabKeyPressed);
    internal void AddNewTemplateNode(ToolStrip wb);
    internal void CancelPendingMenuItemTransaction();
    internal bool Commit();
    protected virtual void Dispose(bool disposing);
    public virtual void DoDefaultAction();
    protected virtual ControlBodyGlyph GetControlGlyph(GlyphSelectionType selectionType);
    public virtual GlyphCollection GetGlyphs(GlyphSelectionType selType);
    protected virtual bool GetHitTest(Point point);
    public virtual void Initialize(IComponent component);
    public virtual void InitializeNewComponent(IDictionary defaultValues);
    internal static bool IsGlyphTotallyVisible(Rectangle itemBounds, Rectangle parentBounds);
    internal static string NameFromText(string text, Type componentType, IServiceProvider serviceProvider, bool adjustCapitalization);
    internal static string NameFromText(string text, Type componentType, IServiceProvider serviceProvider);
    protected virtual void OnContextMenu(int x, int y);
    protected virtual void OnDragEnter(DragEventArgs de);
    protected virtual void OnDragOver(DragEventArgs de);
    protected virtual void OnDragDrop(DragEventArgs de);
    protected virtual void OnMouseDragMove(int x, int y);
    protected virtual void OnSetCursor();
    protected virtual void PreFilterProperties(IDictionary properties);
    internal void RollBack();
    internal void ShowEditNode(bool clicked);
    protected virtual void WndProc(Message& m);
}
internal class System.Windows.Forms.Design.ToolStripDesignerUtils : object {
    public static ArrayList originalSelComps;
    public static void GetAdjustedBounds(ToolStripItem item, Rectangle& r);
    public static Bitmap GetToolboxBitmap(Type itemType);
    public static string GetToolboxDescription(Type itemType);
    public static Type[] GetStandardItemTypes(IComponent component);
    public static Type[] GetCustomItemTypes(IComponent component, IServiceProvider serviceProvider);
    public static Type[] GetCustomItemTypes(IComponent component, ITypeDiscoveryService discoveryService);
    public static ToolStripItem[] GetStandardItemMenuItems(IComponent component, EventHandler onClick, bool convertTo);
    public static ToolStripItem[] GetCustomItemMenuItems(IComponent component, EventHandler onClick, bool convertTo, IServiceProvider serviceProvider);
    public static NewItemsContextMenuStrip GetNewItemDropDown(IComponent component, ToolStripItem currentItem, EventHandler onClick, bool convertTo, IServiceProvider serviceProvider, bool populateCustom);
    public static void GetCustomNewItemDropDown(NewItemsContextMenuStrip contextMenu, IComponent component, ToolStripItem currentItem, EventHandler onClick, bool convertTo, IServiceProvider serviceProvider);
    public static void InvalidateSelection(ArrayList originalSelComps, ToolStripItem nextSelection, IServiceProvider provider, bool shiftPressed);
}
internal class System.Windows.Forms.Design.ToolStripDropDownDesigner : ComponentDesigner {
    internal ToolStripMenuItem currentParent;
    public DesignerActionListCollection ActionLists { get; }
    public ICollection AssociatedComponents { get; }
    public ToolStripMenuItem DesignerMenuItem { get; }
    internal bool EditingCollection { get; internal set; }
    protected InheritanceAttribute InheritanceAttribute { get; }
    public virtual DesignerActionListCollection get_ActionLists();
    public virtual ICollection get_AssociatedComponents();
    public ToolStripMenuItem get_DesignerMenuItem();
    internal bool get_EditingCollection();
    internal void set_EditingCollection(bool value);
    protected virtual InheritanceAttribute get_InheritanceAttribute();
    internal void AddSelectionGlyphs();
    protected virtual void Dispose(bool disposing);
    public virtual void Initialize(IComponent component);
    protected virtual void PreFilterProperties(IDictionary properties);
    public void ResetSettingsKey();
    public void ShowMenu();
    public void ShowMenu(ToolStripItem selectedItem);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.ToolStripDropDownItemDesigner : ToolStripItemDesigner {
    public ICollection AssociatedComponents { get; }
    public virtual void Initialize(IComponent component);
    public virtual ICollection get_AssociatedComponents();
}
internal class System.Windows.Forms.Design.ToolStripEditorManager : object {
    public ToolStripEditorManager(IComponent comp);
    internal void ActivateEditor(ToolStripItem item, bool clicked);
    internal static void CloseManager();
}
internal class System.Windows.Forms.Design.ToolStripInSituService : object {
    public bool IgnoreMessages { get; }
    public ToolStripInSituService(IServiceProvider provider);
    public sealed virtual void Dispose();
    public sealed virtual bool get_IgnoreMessages();
    public sealed virtual void HandleKeyChar();
    public sealed virtual IntPtr GetEditWindow();
}
internal class System.Windows.Forms.Design.ToolStripItemBehavior : Behavior {
    internal Rectangle _dragBoxFromMouseDown;
    public virtual bool OnMouseDoubleClick(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual bool OnMouseUp(Glyph g, MouseButtons button);
    public virtual bool OnMouseDown(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual bool OnMouseEnter(Glyph g);
    public virtual bool OnMouseLeave(Glyph g);
    public virtual bool OnMouseMove(Glyph g, MouseButtons button, Point mouseLoc);
    public virtual void OnDragDrop(Glyph g, DragEventArgs e);
    public virtual void OnDragEnter(Glyph g, DragEventArgs e);
    public virtual void OnDragLeave(Glyph g, EventArgs e);
    public virtual void OnDragOver(Glyph g, DragEventArgs e);
}
internal class System.Windows.Forms.Design.ToolStripItemCustomMenuItemCollection : CustomMenuItemCollection {
    public ToolStripItemCustomMenuItemCollection(IServiceProvider provider, Component currentItem);
    protected void ChangeProperty(string propertyName, object value);
    protected void ChangeProperty(IComponent target, string propertyName, object value);
    public virtual void RefreshItems();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.ToolStripItemDataObject : DataObject {
    internal ArrayList DragComponents { get; }
    internal ToolStrip Owner { get; }
    internal ToolStripItem PrimarySelection { get; }
    internal ToolStripItemDataObject(ArrayList dragComponents, ToolStripItem primarySelection, ToolStrip owner);
    internal ArrayList get_DragComponents();
    internal ToolStrip get_Owner();
    internal ToolStripItem get_PrimarySelection();
}
internal class System.Windows.Forms.Design.ToolStripItemDesigner : ComponentDesigner {
    internal ControlBodyGlyph bodyGlyph;
    internal bool dummyItemAdded;
    internal Rectangle dragBoxFromMouseDown;
    internal int indexOfItemUnderMouseToDrag;
    internal bool AutoSize { get; internal set; }
    internal ToolStripTemplateNode Editor { get; internal set; }
    protected InheritanceAttribute InheritanceAttribute { get; }
    internal bool IsEditorActive { get; internal set; }
    internal bool InternalCreate { get; internal set; }
    protected IComponent ImmediateParent { get; }
    protected IComponent ParentComponent { get; }
    public ToolStripItem ToolStripItem { get; }
    protected bool Visible { get; protected set; }
    internal bool get_AutoSize();
    internal void set_AutoSize(bool value);
    internal virtual bool CanBeAssociatedWith(IDesigner parentDesigner);
    internal virtual ToolStripTemplateNode get_Editor();
    internal virtual void set_Editor(ToolStripTemplateNode value);
    protected virtual InheritanceAttribute get_InheritanceAttribute();
    internal bool get_IsEditorActive();
    internal void set_IsEditorActive(bool value);
    internal bool get_InternalCreate();
    internal void set_InternalCreate(bool value);
    protected IComponent get_ImmediateParent();
    protected virtual IComponent get_ParentComponent();
    public ToolStripItem get_ToolStripItem();
    protected bool get_Visible();
    protected void set_Visible(bool value);
    internal List`1<Component> AddParentTree();
    internal virtual void CommitEdit(Type type, string text, bool commit, bool enterKeyPressed, bool tabKeyPressed);
    protected virtual void Dispose(bool disposing);
    protected virtual Component GetOwnerForActionList();
    internal virtual ToolStrip GetMainToolStrip();
    public Rectangle GetGlyphBounds();
    public void GetGlyphs(GlyphCollection& glyphs, Behavior standardBehavior);
    internal static ToolStripDropDown GetFirstDropDown(ToolStripItem currentItem);
    public virtual void Initialize(IComponent component);
    public virtual void InitializeNewComponent(IDictionary defaultValues);
    internal virtual ToolStripItem MorphCurrentItem(Type t);
    protected virtual void PreFilterProperties(IDictionary properties);
    public void RemoveItem();
    internal void SelectNextItem(ISelectionService service, bool enterKeyPressed, ToolStripDesigner designer);
    internal void SetItemVisible(bool toolStripSelected, ToolStripDesigner designer);
    internal virtual void ShowEditNode(bool clicked);
    internal virtual bool SetSelection(bool enterKeyPressed);
    internal virtual void ShowContextMenu(int x, int y);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.ToolStripItemGlyph : ControlBodyGlyph {
    public ToolStripItem Item { get; }
    public ToolStripItemDesigner ItemDesigner { get; }
    public ToolStripItemGlyph(ToolStripItem item, ToolStripItemDesigner itemDesigner, Rectangle bounds, Behavior b);
    [CompilerGeneratedAttribute]
public ToolStripItem get_Item();
    [CompilerGeneratedAttribute]
public ToolStripItemDesigner get_ItemDesigner();
    [NullableContextAttribute("2")]
public virtual Cursor GetHitTest(Point p);
    public virtual void Paint(PaintEventArgs pe);
}
internal class System.Windows.Forms.Design.ToolStripKeyboardHandlingService : object {
    internal ToolStripTemplateNode ActiveTemplateNode { get; internal set; }
    internal bool ContextMenuShownByKeyBoard { get; internal set; }
    internal bool CopyInProgress { get; internal set; }
    internal bool CutOrDeleteInProgress { get; internal set; }
    internal object SelectedDesignerControl { get; internal set; }
    internal object OwnerItemAfterCut { get; internal set; }
    internal object ShiftPrimaryItem { get; internal set; }
    internal bool TemplateNodeActive { get; internal set; }
    internal bool TemplateNodeContextMenuOpen { get; internal set; }
    public ToolStripKeyboardHandlingService(IServiceProvider serviceProvider);
    internal ToolStripTemplateNode get_ActiveTemplateNode();
    internal void set_ActiveTemplateNode(ToolStripTemplateNode value);
    internal bool get_ContextMenuShownByKeyBoard();
    internal void set_ContextMenuShownByKeyBoard(bool value);
    internal bool get_CopyInProgress();
    internal void set_CopyInProgress(bool value);
    internal bool get_CutOrDeleteInProgress();
    internal void set_CutOrDeleteInProgress(bool value);
    internal object get_SelectedDesignerControl();
    internal void set_SelectedDesignerControl(object value);
    internal object get_OwnerItemAfterCut();
    internal void set_OwnerItemAfterCut(object value);
    internal object get_ShiftPrimaryItem();
    internal void set_ShiftPrimaryItem(object value);
    internal bool get_TemplateNodeActive();
    internal void set_TemplateNodeActive(bool value);
    internal bool get_TemplateNodeContextMenuOpen();
    internal void set_TemplateNodeContextMenuOpen(bool value);
    public void AddCommands();
    public bool OnContextMenu(int x, int y);
    public void ProcessKeySelect(bool reverse, MenuCommand cmd);
    public void ProcessUpDown(bool down);
    public void RestoreCommands();
    internal void ResetActiveTemplateNodeSelectionState();
    public void RemoveCommands();
    public void RotateTab(bool backwards);
}
internal class System.Windows.Forms.Design.ToolStripMenuItemCodeDomSerializer : CodeDomSerializer {
    public virtual object Deserialize(IDesignerSerializationManager manager, object codeObject);
    public virtual object Serialize(IDesignerSerializationManager manager, object value);
}
internal class System.Windows.Forms.Design.ToolStripMenuItemDesigner : ToolStripDropDownItemDesigner {
    public ICollection AssociatedComponents { get; }
    internal ToolStripTemplateNode Editor { get; internal set; }
    protected IComponent ParentComponent { get; }
    public virtual ICollection get_AssociatedComponents();
    internal virtual ToolStripTemplateNode get_Editor();
    internal virtual void set_Editor(ToolStripTemplateNode value);
    protected virtual IComponent get_ParentComponent();
    internal void AddNewTemplateNode(ToolStripDropDown dropDown);
    internal void AddItemBodyGlyph(ToolStripItem item);
    internal virtual void CommitEdit(Type type, string text, bool commit, bool enterKeyPressed, bool tabKeyPressed);
    internal void Commit();
    protected virtual void Dispose(bool disposing);
    internal void EditTemplateNode(bool clicked);
    internal void EnterInSituEdit(ToolStripItem toolItem);
    protected virtual Component GetOwnerForActionList();
    internal virtual ToolStrip GetMainToolStrip();
    internal void HookEvents();
    public virtual void Initialize(IComponent component);
    internal void InitializeBodyGlyphsForItems(bool addGlyphs, ToolStripDropDownItem item);
    internal void InitializeDropDown();
    internal virtual ToolStripItem MorphCurrentItem(Type t);
    protected virtual void PreFilterProperties(IDictionary properties);
    internal void RemoveTypeHereNode(ToolStripDropDownItem ownerItem);
    internal void RemoveItemBodyGlyph(ToolStripItem item);
    internal void ResetGlyphs(ToolStripDropDownItem item);
    internal virtual bool SetSelection(bool enterKeyPressed);
    internal virtual void ShowEditNode(bool clicked);
    internal void ShowOwnerDropDown(ToolStripDropDownItem currentSelection);
    internal void UnHookEvents();
}
internal class System.Windows.Forms.Design.ToolStripTemplateNode : object {
    internal static string CenterLabelName;
    internal bool ignoreFirstKeyUp;
    public bool Active { get; public set; }
    public ToolStripItem ActiveItem { get; public set; }
    public Rectangle Bounds { get; public set; }
    public DesignerToolStripControlHost ControlHost { get; public set; }
    public ToolStrip EditorToolStrip { get; }
    internal TextBox EditBox { get; }
    public Rectangle HotRegion { get; public set; }
    public bool IMEModeSet { get; public set; }
    public Type ToolStripItemType { get; public set; }
    internal bool IsSystemContextMenuDisplayed { get; internal set; }
    public ToolStripTemplateNode(IComponent component, string text, Image image);
    public bool get_Active();
    public void set_Active(bool value);
    public ToolStripItem get_ActiveItem();
    public void set_ActiveItem(ToolStripItem value);
    public void add_Activated(EventHandler value);
    public void remove_Activated(EventHandler value);
    public Rectangle get_Bounds();
    public void set_Bounds(Rectangle value);
    public DesignerToolStripControlHost get_ControlHost();
    public void set_ControlHost(DesignerToolStripControlHost value);
    public void add_Deactivated(EventHandler value);
    public void remove_Deactivated(EventHandler value);
    public void add_Closed(EventHandler value);
    public void remove_Closed(EventHandler value);
    public ToolStrip get_EditorToolStrip();
    internal TextBox get_EditBox();
    public Rectangle get_HotRegion();
    public void set_HotRegion(Rectangle value);
    public bool get_IMEModeSet();
    public void set_IMEModeSet(bool value);
    public Type get_ToolStripItemType();
    public void set_ToolStripItemType(Type value);
    internal bool get_IsSystemContextMenuDisplayed();
    internal void set_IsSystemContextMenuDisplayed(bool value);
    internal void CloseEditor();
    internal void Commit(bool enterKeyPressed, bool tabKeyPressed);
    internal void CommitAndSelect();
    internal void FocusEditor(ToolStripItem currentItem);
    protected void OnActivated(EventArgs e);
    protected void OnClosed(EventArgs e);
    protected void OnDeactivated(EventArgs e);
    public sealed virtual bool OverrideInvoke(MenuCommand cmd);
    public sealed virtual bool OverrideStatus(MenuCommand cmd);
    internal void RollBack();
    internal void ShowContextMenu(Point pt);
    internal void ShowDropDownMenu();
    internal void SetWidth(string text);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Windows.Forms.Design.TreeViewActionList : DesignerActionList {
    public ImageList ImageList { get; public set; }
    public TreeViewActionList(TreeViewDesigner designer);
    public void InvokeNodesDialog();
    public ImageList get_ImageList();
    public void set_ImageList(ImageList value);
    public virtual DesignerActionItemCollection GetSortedActionItems();
}
internal class System.Windows.Forms.Design.TreeViewDesigner : ControlDesigner {
    public DesignerActionListCollection ActionLists { get; }
    protected virtual void Dispose(bool disposing);
    protected virtual bool GetHitTest(Point point);
    public virtual void Initialize(IComponent component);
    public virtual DesignerActionListCollection get_ActionLists();
}
internal class System.Windows.Forms.Design.UpDownBaseDesigner : ControlDesigner {
    public SelectionRules SelectionRules { get; }
    public IList SnapLines { get; }
    public virtual SelectionRules get_SelectionRules();
    public virtual IList get_SnapLines();
}
[ToolboxItemFilterAttribute("System.Windows.Forms.UserControl", "1")]
internal class System.Windows.Forms.Design.UserControlDocumentDesigner : DocumentDesigner {
    protected virtual void PreFilterProperties(IDictionary properties);
}
public class System.Windows.Forms.Design.WindowsFormsDesignerOptionService : DesignerOptionService {
    public DesignerOptions CompatibilityOptions { get; }
    public virtual DesignerOptions get_CompatibilityOptions();
    protected virtual void PopulateOptionCollection(DesignerOptionCollection options);
}
internal class System.Windows.Forms.RTLAwareMessageBox : object {
    public static bool IsRTLResources { get; }
    [NullableContextAttribute("2")]
public static DialogResult Show(IWin32Window owner, string text, string caption, MessageBoxButtons buttons, MessageBoxIcon icon, MessageBoxDefaultButton defaultButton, MessageBoxOptions options);
    public static bool get_IsRTLResources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Windows.Forms.SRCategoryAttribute : CategoryAttribute {
    public SRCategoryAttribute(string category);
    protected virtual string GetLocalizedString(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Windows.Forms.SRDescriptionAttribute : DescriptionAttribute {
    public string Description { get; }
    public SRDescriptionAttribute(string description);
    public virtual string get_Description();
}
