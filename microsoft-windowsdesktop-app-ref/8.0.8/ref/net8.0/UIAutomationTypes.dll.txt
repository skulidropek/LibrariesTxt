public class System.Windows.Automation.ActiveTextPositionChangedEventArgs : AutomationEventArgs {
    public ITextRangeProvider TextRange { get; }
    public ActiveTextPositionChangedEventArgs(ITextRangeProvider textRangeProvider);
    public ITextRangeProvider get_TextRange();
}
public class System.Windows.Automation.AsyncContentLoadedEventArgs : AutomationEventArgs {
    public AsyncContentLoadedState AsyncContentLoadedState { get; }
    public double PercentComplete { get; }
    public AsyncContentLoadedEventArgs(AsyncContentLoadedState asyncContentState, double percentComplete);
    public AsyncContentLoadedState get_AsyncContentLoadedState();
    public double get_PercentComplete();
}
public enum System.Windows.Automation.AsyncContentLoadedState : Enum {
    public int value__;
    public static AsyncContentLoadedState Beginning;
    public static AsyncContentLoadedState Progress;
    public static AsyncContentLoadedState Completed;
}
public static class System.Windows.Automation.AutomationElementIdentifiers : object {
    public static AutomationProperty AcceleratorKeyProperty;
    public static AutomationProperty AccessKeyProperty;
    public static AutomationEvent ActiveTextPositionChangedEvent;
    public static AutomationEvent AsyncContentLoadedEvent;
    public static AutomationEvent AutomationFocusChangedEvent;
    public static AutomationProperty AutomationIdProperty;
    public static AutomationEvent AutomationPropertyChangedEvent;
    public static AutomationProperty BoundingRectangleProperty;
    public static AutomationProperty ClassNameProperty;
    public static AutomationProperty ClickablePointProperty;
    public static AutomationProperty ControllerForProperty;
    public static AutomationProperty ControlTypeProperty;
    public static AutomationProperty CultureProperty;
    public static AutomationProperty FrameworkIdProperty;
    public static AutomationProperty HasKeyboardFocusProperty;
    public static AutomationProperty HeadingLevelProperty;
    public static AutomationProperty HelpTextProperty;
    public static AutomationProperty IsContentElementProperty;
    public static AutomationProperty IsControlElementProperty;
    public static AutomationProperty IsDialogProperty;
    public static AutomationProperty IsDockPatternAvailableProperty;
    public static AutomationProperty IsEnabledProperty;
    public static AutomationProperty IsExpandCollapsePatternAvailableProperty;
    public static AutomationProperty IsGridItemPatternAvailableProperty;
    public static AutomationProperty IsGridPatternAvailableProperty;
    public static AutomationProperty IsInvokePatternAvailableProperty;
    public static AutomationProperty IsItemContainerPatternAvailableProperty;
    public static AutomationProperty IsKeyboardFocusableProperty;
    public static AutomationProperty IsMultipleViewPatternAvailableProperty;
    public static AutomationProperty IsOffscreenProperty;
    public static AutomationProperty IsPasswordProperty;
    public static AutomationProperty IsRangeValuePatternAvailableProperty;
    public static AutomationProperty IsRequiredForFormProperty;
    public static AutomationProperty IsScrollItemPatternAvailableProperty;
    public static AutomationProperty IsScrollPatternAvailableProperty;
    public static AutomationProperty IsSelectionItemPatternAvailableProperty;
    public static AutomationProperty IsSelectionPatternAvailableProperty;
    public static AutomationProperty IsSynchronizedInputPatternAvailableProperty;
    public static AutomationProperty IsTableItemPatternAvailableProperty;
    public static AutomationProperty IsTablePatternAvailableProperty;
    public static AutomationProperty IsTextPatternAvailableProperty;
    public static AutomationProperty IsTogglePatternAvailableProperty;
    public static AutomationProperty IsTransformPatternAvailableProperty;
    public static AutomationProperty IsValuePatternAvailableProperty;
    public static AutomationProperty IsVirtualizedItemPatternAvailableProperty;
    public static AutomationProperty IsWindowPatternAvailableProperty;
    public static AutomationProperty ItemStatusProperty;
    public static AutomationProperty ItemTypeProperty;
    public static AutomationProperty LabeledByProperty;
    public static AutomationEvent LayoutInvalidatedEvent;
    public static AutomationEvent LiveRegionChangedEvent;
    public static AutomationProperty LiveSettingProperty;
    public static AutomationProperty LocalizedControlTypeProperty;
    public static AutomationEvent MenuClosedEvent;
    public static AutomationEvent MenuOpenedEvent;
    public static AutomationProperty NameProperty;
    public static AutomationProperty NativeWindowHandleProperty;
    public static AutomationEvent NotificationEvent;
    public static object NotSupported;
    public static AutomationProperty OrientationProperty;
    public static AutomationProperty PositionInSetProperty;
    public static AutomationProperty ProcessIdProperty;
    public static AutomationProperty RuntimeIdProperty;
    public static AutomationProperty SizeOfSetProperty;
    public static AutomationEvent StructureChangedEvent;
    public static AutomationEvent ToolTipClosedEvent;
    public static AutomationEvent ToolTipOpenedEvent;
}
public class System.Windows.Automation.AutomationEvent : AutomationIdentifier {
    public static AutomationEvent LookupById(int id);
}
public class System.Windows.Automation.AutomationEventArgs : EventArgs {
    public AutomationEvent EventId { get; }
    public AutomationEventArgs(AutomationEvent eventId);
    public AutomationEvent get_EventId();
}
public class System.Windows.Automation.AutomationEventHandler : MulticastDelegate {
    public AutomationEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, AutomationEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, AutomationEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class System.Windows.Automation.AutomationIdentifier : object {
    public int Id { get; }
    public string ProgrammaticName { get; }
    public int get_Id();
    public string get_ProgrammaticName();
    public sealed virtual int CompareTo(object obj);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public enum System.Windows.Automation.AutomationNotificationKind : Enum {
    public int value__;
    public static AutomationNotificationKind ItemAdded;
    public static AutomationNotificationKind ItemRemoved;
    public static AutomationNotificationKind ActionCompleted;
    public static AutomationNotificationKind ActionAborted;
    public static AutomationNotificationKind Other;
}
public enum System.Windows.Automation.AutomationNotificationProcessing : Enum {
    public int value__;
    public static AutomationNotificationProcessing ImportantAll;
    public static AutomationNotificationProcessing ImportantMostRecent;
    public static AutomationNotificationProcessing All;
    public static AutomationNotificationProcessing MostRecent;
    public static AutomationNotificationProcessing CurrentThenMostRecent;
}
public class System.Windows.Automation.AutomationPattern : AutomationIdentifier {
    public static AutomationPattern LookupById(int id);
}
public class System.Windows.Automation.AutomationProperty : AutomationIdentifier {
    public static AutomationProperty LookupById(int id);
}
public class System.Windows.Automation.AutomationPropertyChangedEventArgs : AutomationEventArgs {
    public object NewValue { get; }
    public object OldValue { get; }
    public AutomationProperty Property { get; }
    public AutomationPropertyChangedEventArgs(AutomationProperty property, object oldValue, object newValue);
    public object get_NewValue();
    public object get_OldValue();
    public AutomationProperty get_Property();
}
public class System.Windows.Automation.AutomationPropertyChangedEventHandler : MulticastDelegate {
    public AutomationPropertyChangedEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, AutomationPropertyChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, AutomationPropertyChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class System.Windows.Automation.AutomationTextAttribute : AutomationIdentifier {
    public static AutomationTextAttribute LookupById(int id);
}
public class System.Windows.Automation.ControlType : AutomationIdentifier {
    public static ControlType Button;
    public static ControlType Calendar;
    public static ControlType CheckBox;
    public static ControlType ComboBox;
    public static ControlType Custom;
    public static ControlType DataGrid;
    public static ControlType DataItem;
    public static ControlType Document;
    public static ControlType Edit;
    public static ControlType Group;
    public static ControlType Header;
    public static ControlType HeaderItem;
    public static ControlType Hyperlink;
    public static ControlType Image;
    public static ControlType List;
    public static ControlType ListItem;
    public static ControlType Menu;
    public static ControlType MenuBar;
    public static ControlType MenuItem;
    public static ControlType Pane;
    public static ControlType ProgressBar;
    public static ControlType RadioButton;
    public static ControlType ScrollBar;
    public static ControlType Separator;
    public static ControlType Slider;
    public static ControlType Spinner;
    public static ControlType SplitButton;
    public static ControlType StatusBar;
    public static ControlType Tab;
    public static ControlType TabItem;
    public static ControlType Table;
    public static ControlType Text;
    public static ControlType Thumb;
    public static ControlType TitleBar;
    public static ControlType ToolBar;
    public static ControlType ToolTip;
    public static ControlType Tree;
    public static ControlType TreeItem;
    public static ControlType Window;
    public string LocalizedControlType { get; }
    public string get_LocalizedControlType();
    public AutomationPattern[] GetNeverSupportedPatterns();
    public AutomationPattern[][] GetRequiredPatternSets();
    public AutomationProperty[] GetRequiredProperties();
    public static ControlType LookupById(int id);
}
public static class System.Windows.Automation.DockPatternIdentifiers : object {
    public static AutomationProperty DockPositionProperty;
    public static AutomationPattern Pattern;
}
public enum System.Windows.Automation.DockPosition : Enum {
    public int value__;
    public static DockPosition Top;
    public static DockPosition Left;
    public static DockPosition Bottom;
    public static DockPosition Right;
    public static DockPosition Fill;
    public static DockPosition None;
}
public class System.Windows.Automation.ElementNotAvailableException : SystemException {
    public ElementNotAvailableException(Exception innerException);
    protected ElementNotAvailableException(SerializationInfo info, StreamingContext context);
    public ElementNotAvailableException(string message);
    public ElementNotAvailableException(string message, Exception innerException);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class System.Windows.Automation.ElementNotEnabledException : InvalidOperationException {
    protected ElementNotEnabledException(SerializationInfo info, StreamingContext context);
    public ElementNotEnabledException(string message);
    public ElementNotEnabledException(string message, Exception innerException);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public static class System.Windows.Automation.ExpandCollapsePatternIdentifiers : object {
    public static AutomationProperty ExpandCollapseStateProperty;
    public static AutomationPattern Pattern;
}
public enum System.Windows.Automation.ExpandCollapseState : Enum {
    public int value__;
    public static ExpandCollapseState Collapsed;
    public static ExpandCollapseState Expanded;
    public static ExpandCollapseState PartiallyExpanded;
    public static ExpandCollapseState LeafNode;
}
public static class System.Windows.Automation.GridItemPatternIdentifiers : object {
    public static AutomationProperty ColumnProperty;
    public static AutomationProperty ColumnSpanProperty;
    public static AutomationProperty ContainingGridProperty;
    public static AutomationPattern Pattern;
    public static AutomationProperty RowProperty;
    public static AutomationProperty RowSpanProperty;
}
public static class System.Windows.Automation.GridPatternIdentifiers : object {
    public static AutomationProperty ColumnCountProperty;
    public static AutomationPattern Pattern;
    public static AutomationProperty RowCountProperty;
}
public static class System.Windows.Automation.InvokePatternIdentifiers : object {
    public static AutomationEvent InvokedEvent;
    public static AutomationPattern Pattern;
}
public static class System.Windows.Automation.ItemContainerPatternIdentifiers : object {
    public static AutomationPattern Pattern;
}
public static class System.Windows.Automation.MultipleViewPatternIdentifiers : object {
    public static AutomationProperty CurrentViewProperty;
    public static AutomationPattern Pattern;
    public static AutomationProperty SupportedViewsProperty;
}
public class System.Windows.Automation.NoClickablePointException : Exception {
    protected NoClickablePointException(SerializationInfo info, StreamingContext context);
    public NoClickablePointException(string message);
    public NoClickablePointException(string message, Exception innerException);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class System.Windows.Automation.NotificationEventArgs : AutomationEventArgs {
    public string ActivityId { get; }
    public string DisplayString { get; }
    public AutomationNotificationKind NotificationKind { get; }
    public AutomationNotificationProcessing NotificationProcessing { get; }
    public NotificationEventArgs(AutomationNotificationKind notificationKind, AutomationNotificationProcessing notificationProcessing, string displayString, string activityId);
    public string get_ActivityId();
    public string get_DisplayString();
    public AutomationNotificationKind get_NotificationKind();
    public AutomationNotificationProcessing get_NotificationProcessing();
}
public enum System.Windows.Automation.OrientationType : Enum {
    public int value__;
    public static OrientationType None;
    public static OrientationType Horizontal;
    public static OrientationType Vertical;
}
public interface System.Windows.Automation.Provider.IRawElementProviderSimple {
    public IRawElementProviderSimple HostRawElementProvider { get; }
    public ProviderOptions ProviderOptions { get; }
    public abstract virtual IRawElementProviderSimple get_HostRawElementProvider();
    public abstract virtual ProviderOptions get_ProviderOptions();
    public abstract virtual object GetPatternProvider(int patternId);
    public abstract virtual object GetPropertyValue(int propertyId);
}
public interface System.Windows.Automation.Provider.ITextRangeProvider {
    public abstract virtual void AddToSelection();
    public abstract virtual ITextRangeProvider Clone();
    public abstract virtual bool Compare(ITextRangeProvider range);
    public abstract virtual int CompareEndpoints(TextPatternRangeEndpoint endpoint, ITextRangeProvider targetRange, TextPatternRangeEndpoint targetEndpoint);
    public abstract virtual void ExpandToEnclosingUnit(TextUnit unit);
    public abstract virtual ITextRangeProvider FindAttribute(int attribute, object value, bool backward);
    public abstract virtual ITextRangeProvider FindText(string text, bool backward, bool ignoreCase);
    public abstract virtual object GetAttributeValue(int attribute);
    public abstract virtual Double[] GetBoundingRectangles();
    public abstract virtual IRawElementProviderSimple[] GetChildren();
    public abstract virtual IRawElementProviderSimple GetEnclosingElement();
    public abstract virtual string GetText(int maxLength);
    public abstract virtual int Move(TextUnit unit, int count);
    public abstract virtual void MoveEndpointByRange(TextPatternRangeEndpoint endpoint, ITextRangeProvider targetRange, TextPatternRangeEndpoint targetEndpoint);
    public abstract virtual int MoveEndpointByUnit(TextPatternRangeEndpoint endpoint, TextUnit unit, int count);
    public abstract virtual void RemoveFromSelection();
    public abstract virtual void ScrollIntoView(bool alignToTop);
    public abstract virtual void Select();
}
[FlagsAttribute]
public enum System.Windows.Automation.Provider.ProviderOptions : Enum {
    public int value__;
    public static ProviderOptions ClientSideProvider;
    public static ProviderOptions ServerSideProvider;
    public static ProviderOptions NonClientAreaProvider;
    public static ProviderOptions OverrideProvider;
    public static ProviderOptions ProviderOwnsSetFocus;
    public static ProviderOptions UseComThreading;
}
public class System.Windows.Automation.ProxyAssemblyNotLoadedException : Exception {
    protected ProxyAssemblyNotLoadedException(SerializationInfo info, StreamingContext context);
    public ProxyAssemblyNotLoadedException(string message);
    public ProxyAssemblyNotLoadedException(string message, Exception innerException);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public static class System.Windows.Automation.RangeValuePatternIdentifiers : object {
    public static AutomationProperty IsReadOnlyProperty;
    public static AutomationProperty LargeChangeProperty;
    public static AutomationProperty MaximumProperty;
    public static AutomationProperty MinimumProperty;
    public static AutomationPattern Pattern;
    public static AutomationProperty SmallChangeProperty;
    public static AutomationProperty ValueProperty;
}
public enum System.Windows.Automation.RowOrColumnMajor : Enum {
    public int value__;
    public static RowOrColumnMajor RowMajor;
    public static RowOrColumnMajor ColumnMajor;
    public static RowOrColumnMajor Indeterminate;
}
public enum System.Windows.Automation.ScrollAmount : Enum {
    public int value__;
    public static ScrollAmount LargeDecrement;
    public static ScrollAmount SmallDecrement;
    public static ScrollAmount NoAmount;
    public static ScrollAmount LargeIncrement;
    public static ScrollAmount SmallIncrement;
}
public static class System.Windows.Automation.ScrollItemPatternIdentifiers : object {
    public static AutomationPattern Pattern;
}
public static class System.Windows.Automation.ScrollPatternIdentifiers : object {
    public static AutomationProperty HorizontallyScrollableProperty;
    public static AutomationProperty HorizontalScrollPercentProperty;
    public static AutomationProperty HorizontalViewSizeProperty;
    public static double NoScroll;
    public static AutomationPattern Pattern;
    public static AutomationProperty VerticallyScrollableProperty;
    public static AutomationProperty VerticalScrollPercentProperty;
    public static AutomationProperty VerticalViewSizeProperty;
}
public static class System.Windows.Automation.SelectionItemPatternIdentifiers : object {
    public static AutomationEvent ElementAddedToSelectionEvent;
    public static AutomationEvent ElementRemovedFromSelectionEvent;
    public static AutomationEvent ElementSelectedEvent;
    public static AutomationProperty IsSelectedProperty;
    public static AutomationPattern Pattern;
    public static AutomationProperty SelectionContainerProperty;
}
public static class System.Windows.Automation.SelectionPatternIdentifiers : object {
    public static AutomationProperty CanSelectMultipleProperty;
    public static AutomationEvent InvalidatedEvent;
    public static AutomationProperty IsSelectionRequiredProperty;
    public static AutomationPattern Pattern;
    public static AutomationProperty SelectionProperty;
}
public class System.Windows.Automation.StructureChangedEventArgs : AutomationEventArgs {
    public StructureChangeType StructureChangeType { get; }
    public StructureChangedEventArgs(StructureChangeType structureChangeType, Int32[] runtimeId);
    public StructureChangeType get_StructureChangeType();
    public Int32[] GetRuntimeId();
}
public class System.Windows.Automation.StructureChangedEventHandler : MulticastDelegate {
    public StructureChangedEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, StructureChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, StructureChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public enum System.Windows.Automation.StructureChangeType : Enum {
    public int value__;
    public static StructureChangeType ChildAdded;
    public static StructureChangeType ChildRemoved;
    public static StructureChangeType ChildrenInvalidated;
    public static StructureChangeType ChildrenBulkAdded;
    public static StructureChangeType ChildrenBulkRemoved;
    public static StructureChangeType ChildrenReordered;
}
[FlagsAttribute]
public enum System.Windows.Automation.SupportedTextSelection : Enum {
    public int value__;
    public static SupportedTextSelection None;
    public static SupportedTextSelection Single;
    public static SupportedTextSelection Multiple;
}
public static class System.Windows.Automation.SynchronizedInputPatternIdentifiers : object {
    public static AutomationEvent InputDiscardedEvent;
    public static AutomationEvent InputReachedOtherElementEvent;
    public static AutomationEvent InputReachedTargetEvent;
    public static AutomationPattern Pattern;
}
public enum System.Windows.Automation.SynchronizedInputType : Enum {
    public int value__;
    public static SynchronizedInputType KeyUp;
    public static SynchronizedInputType KeyDown;
    public static SynchronizedInputType MouseLeftButtonUp;
    public static SynchronizedInputType MouseLeftButtonDown;
    public static SynchronizedInputType MouseRightButtonUp;
    public static SynchronizedInputType MouseRightButtonDown;
}
public static class System.Windows.Automation.TableItemPatternIdentifiers : object {
    public static AutomationProperty ColumnHeaderItemsProperty;
    public static AutomationPattern Pattern;
    public static AutomationProperty RowHeaderItemsProperty;
}
public static class System.Windows.Automation.TablePatternIdentifiers : object {
    public static AutomationProperty ColumnHeadersProperty;
    public static AutomationPattern Pattern;
    public static AutomationProperty RowHeadersProperty;
    public static AutomationProperty RowOrColumnMajorProperty;
}
public enum System.Windows.Automation.Text.AnimationStyle : Enum {
    public int value__;
    public static AnimationStyle Other;
    public static AnimationStyle None;
    public static AnimationStyle LasVegasLights;
    public static AnimationStyle BlinkingBackground;
    public static AnimationStyle SparkleText;
    public static AnimationStyle MarchingBlackAnts;
    public static AnimationStyle MarchingRedAnts;
    public static AnimationStyle Shimmer;
}
public enum System.Windows.Automation.Text.BulletStyle : Enum {
    public int value__;
    public static BulletStyle Other;
    public static BulletStyle None;
    public static BulletStyle HollowRoundBullet;
    public static BulletStyle FilledRoundBullet;
    public static BulletStyle HollowSquareBullet;
    public static BulletStyle FilledSquareBullet;
    public static BulletStyle DashBullet;
}
public enum System.Windows.Automation.Text.CapStyle : Enum {
    public int value__;
    public static CapStyle Other;
    public static CapStyle None;
    public static CapStyle SmallCap;
    public static CapStyle AllCap;
    public static CapStyle AllPetiteCaps;
    public static CapStyle PetiteCaps;
    public static CapStyle Unicase;
    public static CapStyle Titling;
}
[FlagsAttribute]
public enum System.Windows.Automation.Text.FlowDirections : Enum {
    public int value__;
    public static FlowDirections Default;
    public static FlowDirections RightToLeft;
    public static FlowDirections BottomToTop;
    public static FlowDirections Vertical;
}
public enum System.Windows.Automation.Text.HorizontalTextAlignment : Enum {
    public int value__;
    public static HorizontalTextAlignment Left;
    public static HorizontalTextAlignment Centered;
    public static HorizontalTextAlignment Right;
    public static HorizontalTextAlignment Justified;
}
[FlagsAttribute]
public enum System.Windows.Automation.Text.OutlineStyles : Enum {
    public int value__;
    public static OutlineStyles None;
    public static OutlineStyles Outline;
    public static OutlineStyles Shadow;
    public static OutlineStyles Engraved;
    public static OutlineStyles Embossed;
}
public enum System.Windows.Automation.Text.TextDecorationLineStyle : Enum {
    public int value__;
    public static TextDecorationLineStyle Other;
    public static TextDecorationLineStyle None;
    public static TextDecorationLineStyle Single;
    public static TextDecorationLineStyle WordsOnly;
    public static TextDecorationLineStyle Double;
    public static TextDecorationLineStyle Dot;
    public static TextDecorationLineStyle Dash;
    public static TextDecorationLineStyle DashDot;
    public static TextDecorationLineStyle DashDotDot;
    public static TextDecorationLineStyle Wavy;
    public static TextDecorationLineStyle ThickSingle;
    public static TextDecorationLineStyle DoubleWavy;
    public static TextDecorationLineStyle ThickWavy;
    public static TextDecorationLineStyle LongDash;
    public static TextDecorationLineStyle ThickDash;
    public static TextDecorationLineStyle ThickDashDot;
    public static TextDecorationLineStyle ThickDashDotDot;
    public static TextDecorationLineStyle ThickDot;
    public static TextDecorationLineStyle ThickLongDash;
}
public enum System.Windows.Automation.Text.TextPatternRangeEndpoint : Enum {
    public int value__;
    public static TextPatternRangeEndpoint Start;
    public static TextPatternRangeEndpoint End;
}
public enum System.Windows.Automation.Text.TextUnit : Enum {
    public int value__;
    public static TextUnit Character;
    public static TextUnit Format;
    public static TextUnit Word;
    public static TextUnit Line;
    public static TextUnit Paragraph;
    public static TextUnit Page;
    public static TextUnit Document;
}
public static class System.Windows.Automation.TextPatternIdentifiers : object {
    public static AutomationTextAttribute AnimationStyleAttribute;
    public static AutomationTextAttribute BackgroundColorAttribute;
    public static AutomationTextAttribute BulletStyleAttribute;
    public static AutomationTextAttribute CapStyleAttribute;
    public static AutomationTextAttribute CultureAttribute;
    public static AutomationTextAttribute FontNameAttribute;
    public static AutomationTextAttribute FontSizeAttribute;
    public static AutomationTextAttribute FontWeightAttribute;
    public static AutomationTextAttribute ForegroundColorAttribute;
    public static AutomationTextAttribute HorizontalTextAlignmentAttribute;
    public static AutomationTextAttribute IndentationFirstLineAttribute;
    public static AutomationTextAttribute IndentationLeadingAttribute;
    public static AutomationTextAttribute IndentationTrailingAttribute;
    public static AutomationTextAttribute IsHiddenAttribute;
    public static AutomationTextAttribute IsItalicAttribute;
    public static AutomationTextAttribute IsReadOnlyAttribute;
    public static AutomationTextAttribute IsSubscriptAttribute;
    public static AutomationTextAttribute IsSuperscriptAttribute;
    public static AutomationTextAttribute MarginBottomAttribute;
    public static AutomationTextAttribute MarginLeadingAttribute;
    public static AutomationTextAttribute MarginTopAttribute;
    public static AutomationTextAttribute MarginTrailingAttribute;
    public static object MixedAttributeValue;
    public static AutomationTextAttribute OutlineStylesAttribute;
    public static AutomationTextAttribute OverlineColorAttribute;
    public static AutomationTextAttribute OverlineStyleAttribute;
    public static AutomationPattern Pattern;
    public static AutomationTextAttribute StrikethroughColorAttribute;
    public static AutomationTextAttribute StrikethroughStyleAttribute;
    public static AutomationTextAttribute TabsAttribute;
    public static AutomationEvent TextChangedEvent;
    public static AutomationTextAttribute TextFlowDirectionsAttribute;
    public static AutomationEvent TextSelectionChangedEvent;
    public static AutomationTextAttribute UnderlineColorAttribute;
    public static AutomationTextAttribute UnderlineStyleAttribute;
}
public static class System.Windows.Automation.TogglePatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty ToggleStateProperty;
}
public enum System.Windows.Automation.ToggleState : Enum {
    public int value__;
    public static ToggleState Off;
    public static ToggleState On;
    public static ToggleState Indeterminate;
}
public static class System.Windows.Automation.TransformPatternIdentifiers : object {
    public static AutomationProperty CanMoveProperty;
    public static AutomationProperty CanResizeProperty;
    public static AutomationProperty CanRotateProperty;
    public static AutomationPattern Pattern;
}
[FlagsAttribute]
public enum System.Windows.Automation.TreeScope : Enum {
    public int value__;
    public static TreeScope Element;
    public static TreeScope Children;
    public static TreeScope Descendants;
    public static TreeScope Subtree;
    public static TreeScope Parent;
    public static TreeScope Ancestors;
}
public static class System.Windows.Automation.ValuePatternIdentifiers : object {
    public static AutomationProperty IsReadOnlyProperty;
    public static AutomationPattern Pattern;
    public static AutomationProperty ValueProperty;
}
public static class System.Windows.Automation.VirtualizedItemPatternIdentifiers : object {
    public static AutomationPattern Pattern;
}
public class System.Windows.Automation.WindowClosedEventArgs : AutomationEventArgs {
    public WindowClosedEventArgs(Int32[] runtimeId);
    public Int32[] GetRuntimeId();
}
public enum System.Windows.Automation.WindowInteractionState : Enum {
    public int value__;
    public static WindowInteractionState Running;
    public static WindowInteractionState Closing;
    public static WindowInteractionState ReadyForUserInteraction;
    public static WindowInteractionState BlockedByModalWindow;
    public static WindowInteractionState NotResponding;
}
public static class System.Windows.Automation.WindowPatternIdentifiers : object {
    public static AutomationProperty CanMaximizeProperty;
    public static AutomationProperty CanMinimizeProperty;
    public static AutomationProperty IsModalProperty;
    public static AutomationProperty IsTopmostProperty;
    public static AutomationPattern Pattern;
    public static AutomationEvent WindowClosedEvent;
    public static AutomationProperty WindowInteractionStateProperty;
    public static AutomationEvent WindowOpenedEvent;
    public static AutomationProperty WindowVisualStateProperty;
}
public enum System.Windows.Automation.WindowVisualState : Enum {
    public int value__;
    public static WindowVisualState Normal;
    public static WindowVisualState Maximized;
    public static WindowVisualState Minimized;
}
